================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import threading

def main():
    sys.setrecursionlimit(10**7)
    input = sys.stdin.readline

    # Ce problème revient à partitionner une séquence de tuyaux et joints en plusieurs segments
    # consécutifs afin de maximiser la somme des salaires.
    # Chaque segment est formé par un ou plusieurs tuyaux connectés par des joints (qui relient i et i+1).
    # Le salaire est (nombre de segments) * (longueur totale de tous les tuyaux et joints dans ces segments)
    #
    # Formellement, on considère la séquence:
    # p[1], j[1], p[2], j[2], ..., j[n-1], p[n]
    #
    # On veut découper cette séquence en s segments disjoints contigus: chaque segment
    # est un ensemble de tuyaux reliés par tous les joints entre eux.
    # 
    # On peut choisir d'utiliser ou pas les joints pour relier certains tuyaux.
    #
    # La valeur à maximiser est:
    #    nombre_de_segments * (somme_totale_des_pipes_et_joints_inclus)
    #
    # Ici, "segments" = nombre de segments formés.
    #
    # En regardant de plus près, on remarque que:
    # - tous les joints sont entre p[i] et p[i+1].
    # - Si on choisit de relier p[i] et p[i+1], on "utilise" j[i].
    # - Sinon, on coupe entre p[i] et p[i+1], formant deux segments séparés.
    #
    # On remarque que:
    # - Chaque segment contient au moins un tuyau.
    # - Le salaire est (#segments) * (somme des longueurs des tuyaux + des joints utilisés)
    # - Les tuyaux sont tous donnés (sont toujours comptés, peu importe la segmentation)
    #
    # Le total des tuyaux ne change pas selon la segmentation, c'est une constante.
    #
    # Pour les joints, seuls ceux utilisés (entre deux tuyaux dans le même segment) sont comptés.
    #
    # Soit S = somme des longueurs de tous les tuyaux (fixe)
    # Soit x = somme des joints utilisés (variable)
    # Soit k = nombre de segments (variable)
    #
    # Le salaire = k * (S + x)
    #
    # Or, le nombre de segments k + le nombre de joints utilisés = n
    # car chaque joint utilisé réduit le nombre de segments d'une unité.
    # Plus précisément, 
    #   k = n - nombre_de_joints_utilisés
    #
    # Donc:
    # salaire = k * (S + x) = (n - x_co) * (S + x_co)
    # où x_co = somme des joints utilisés
    #
    # Il faut choisir un sous-ensemble d'indices i (1 ≤ i ≤ n-1) des joints à utiliser
    # pour maximiser:
    # f(x_co) = (n - number_of_joints_used) * (S + sum_of_joints_used)
    #
    # Donc on doit trouver le sous-ensemble des joints qui maximise:
    # (n - c) * (S + sum_joints_used)
    #
    # où c est le nombre de joints utilisés, sum_joints_used la somme des longueurs.
    #
    # Comme il faut choisir des joints contigus? Non, on peut choisir n'importe quels joints,
    # car on peut relier n'importe quelle paire adjacente réspectant cette adjacent.
    #
    # ATTENTION: la contrainte est que seuls les joints entre tuyaux consécutifs peuvent être utilisés,
    # et ils servent à relier uniquement les tuyaux consécutifs i et i+1.
    #
    # On note que le salire = number_of_segments * (sum_of_lengths_of_pipes + sum_of_lengths_of_used_joints)
    #
    # L'énoncé s'arrête à ça, mais ici "nombre de segments" est égal à:
    #  - nombre initial de tuyaux = n
    #  - moins nombre de joints utilisés (car joint relie deux tuyaux donc fusionne deux segments)
    #
    # Donc:
    # salaire = (n - nombre_de_joints_utilisés) * (somme_tuyaux + somme_joints_utilisés)
    #
    # On doit choisir un sous-ensemble contigu de joints à utiliser? Non, on peut utiliser n'importe lesquels,
    # mais les joints ne peuvent connecter que les tuyaux adjacents.
    #
    # étant donné la position des joints, ceux-ci sont entre p[i] et p[i+1].
    #
    # En résumé, on choisit un sous-ensemble de joints à activer (chaque activation fusionne deux segments),
    # et on cherche à maximiser (n - nombre_de_joints_utilisés) * (somme_tuyaux + somme_joints_utilisés).
    #
    # Le problème revient à choisir un sous-ensemble des n-1 joints afin de maximiser ce produit.
    #
    # La difficulté: on peut choisir n'importe quels joints, donc on peut choisir un sous-ensemble quelconque
    # ce qui demande une solution efficace, car n peut être jusqu'à 65 000.
    #
    # Approche possible:
    # - On essaie toutes les partitions possibles (coupures entre les tuyaux), mais trop coûteux.
    # - On peut remarquer que le problème est équivalent à partitionner la séquence de joints en segments consécutifs
    #   (car on ne peut pas relier deux tuyaux non consécutifs).
    #
    # L'énoncé dit clairement:
    #   "i番目のジョイントは、i番目と i+1 番目のパイプだけをつなげることができる"
    #
    # Donc les joints connectant bien deux tuyaux adjacents, on peut choisir de
    # les utiliser ou non de façon indépendante.
    #
    # Pour la formation finale, les segments sont formés par la suppression des joints non utilisés.
    #
    # D'où, le nombre total de segments = nombre de tuyaux - nombre de joints utilisés
    #
    # Maintenant, la solution consiste à:
    # - Calculer le salaire pour tous les sous-ensembles possibles de joints utilisés.
    # - Trouver le maximum de (nombre_de_segments) * (somme_des_tuyaux_et_joints_utilises)
    #
    # Puisque joints sont consécutifs, on peut choisir un sous-ensemble de joints non nécessairement contigus ?
    #
    # En fait, les joints connectent uniquement connexement les tuyaux adjacents,
    # donc le sous-ensemble des joints utilisés correspond à la façon d'assembler des tuyaux contigus,
    # et on ne peut pas utiliser un joint sans utiliser tous les joints entre p[i] et p[j] pour obtenir un segment.
    #
    # Cela veut dire que les segments correspondent à des sous-intervalles contigus délimités par des joints supprimés.
    #
    # Ainsi, la segmentation final est un découpage contigu des tuyaux.
    #
    # Problème : choisir la segmentation en sous-intervalles (segments contigus).
    #
    # La somme totale des tuyaux est fixe (S).
    #
    # Le salaire est somme sur chaque segment : 1 * (longueur segment)
    # et enfin multiplier par le nombre de segments.
    #
    # En réalité:
    # salaire = k * somme de longueurs de tous les segments,
    # où la somme des longueurs des segments est égale à sum des tuyaux + joints utilisés.
    #
    # L'énoncé: "給料は「パイプの本数×パイプの長さの総和」で支払う"
    # ce qui veut dire que la paye est:
    #    (nombre de segments) x (somme des longueurs des segments)
    #
    # Comme chaque segment est considéré comme un tuyau consistant de la somme des tuyaux et joints de ce segment,
    # la rémunération est donc (#segments) x (somme de la longueur de tous les tuyaux + joints utilisés)
    #
    # Comme la somme des tuyaux est constante, le problème revient à:
    # trouver une partition des tuyaux en segments *contigus*, c’est-à-dire choisir où 
    # couper entre des tuyaux, maximisant:
    #
    # (nombre de segments) * (somme des tuyaux + somme des joints dans les segments)
    #
    # Où la somme des joints dans les segments = somme totale des joints utilisés, joints situés entre tuyaux 
    # qui ne sont pas coupés.
    #
    # Cette phrase sous-entend que si on coupe entre p[i] et p[i+1], on exclut le joint j[i].
    #
    # En résumé, on veut découper en segments contigus le tableau des tuyaux en choisissant où couper
    # pour maximiser:
    # (#segments) * (S + somme des joints utilisés)
    #
    # où S est la somme des tuyaux (fixe), et la somme des joints utilisés est la somme des joints qui ne sont pas
    # coupés.
    #
    # On peut reformuler:
    #
    # On a (n-1) joints, on peut choisir un sous-ensemble des joints à couper ou pas.
    # Choisir de couper à i signifie que le segment s'arrête en p[i], et un nouveau segment commence à p[i+1].
    #
    # Ainsi,
    # - nombre de segments = nombre de coupures +1
    # - somme des joints utilisés = somme des joints non supprimés (ceux pas coupés)
    #
    # Soit k le nombre de segments, soit c = k-1 le nombre de coupures.
    #
    # Soit sum_joints = somme totale des joints (fixe)
    #
    # somme joints utilisés = sum_joints - somme des joints coupés
    #
    # salaire = k * (S + sum_joints - sum_coupures)
    #
    # salaire = (c+1) * (S + sum_joints - sum_coupures)
    #
    # On doit choisir un ensemble de coupures (indices où on coupe) pour maximiser le salaire.
    #
    # Comme c peut aller de 0 à n-1, et les coupures se font en indices des joints,
    # c'est un problème combinatoire.
    #
    # La difficulté: la somme des joint coupés est la somme des j_i pour i dans les coupures.
    #
    # On cherche à maximiser:
    #
    # (c+1) * (S + sum_joints - sum_coupures) = (c+1)*(const - sum_coupures)
    #
    # où const = S + sum_joints
    #
    # On peut écrire:
    #
    # salaire = (c+1) * (const - sum_coupures) = (c+1)*const - (c+1)*sum_coupures
    #
    # On cherche à maximiser cette valeur.
    #
    # Or, pour un ensemble de coupures, on sait c = |coupures| et sum_coupures = somme des j_i coupés.
    #
    # Il n'est pas trivial de choisir arbitrairement les coupures (i.e., les indices) pour maximiser
    # ce produit.
    #
    # Cependant, comme le salaire dépend uniquement des coupures choisies, et que ces coupures divisent
    # la chaîne en segments contigus, et que le problème demande le maximum parmi toutes partitions,
    # on peut penser à une solution DP.
    #
    # Solution possible: 
    # - Calculer le salaire quand on ne fait aucune coupure (k=1)
    # - Calculer pour chaque possible découpages et prendre le max.
    #
    # Mais avec n jusqu'à 65000, une solution O(n²) est impossible.
    #
    # Observation:
    #
    # Le salaire = somme_{segments} |segment| * nb_segments
    #
    # Chaque segment est contigu.
    #
    # On remarque que comme la fonction est sous la forme:
    # f(k, x) = k * (const - x) = k*const - k*x
    #
    # et que x = somme des joints coupés.
    #
    # Cela suggère que pour réduire le salaire, il faut éviter trop de coupures avec joints longs.
    #
    # Or, si on choisit les coupures aux joints qui maximisent le terme -k*x,
    # la fonction globale sera maximisée.
    #
    # Finalement, la solution est de :
    #
    # Étudier tous les cas possibles de k = nombre de segments = 1 à n.
    #
    # Pour chaque k, choisir k -1 joints à couper, minimisant sum_coupures, car plus sum_coupures petites,
    # plus salaire grande.
    #
    # Donc pour fixed k, choisir les (k-1) joints à couper avec la plus petite longueur (pour minimiser sum_coupures).
    #
    # En résumé:
    # - On trie les joints par longueur.
    # - Pour chaque k, on sélectionne les (n - k) joints à ne pas utiliser (coupés) correspondants aux (n-k) joints
    # les plus courts ou les plus longs? Attention.
    #
    # On veut minimiser sum_coupures pour données c= k-1 coupures.
    #
    # Donc pour chaque valeur k, on doit prendre c = k - 1 joints coupés qui minimisent sum_coupures.
    #
    # En d'autres termes, c= k-1 plus petits joints à couper? Non, car couper les plus petits joints réduit sum_coupures ?
    #
    # Oui.
    #
    # Donc on coupe les joints avec les plus petites longueurs pour minimiser sum_coupures.
    #
    # Mais attention, l'intervalle doit être contigu (les coupures sont dans un ordre croissant).
    #
    # Ce raisonnement ne tient que si on peut choisir arbitrairement les coupures.
    #
    # Or, oui, on peut: n'importe quel joint est coupure possible.
    #
    # Donc idéalement, pour k segments (c = k-1 coupures), on choisit les c plus petits joints pour minimiser
    # sum_coupures (coût des coupures).
    #
    # Pour c variant entre 0..n-1, on calcule:
    # salaire = (c+1) * (const - sum_coupures)
    #
    # Où sum_coupures = somme des c plus petites valeurs de joints.
    #
    # Preprocessing:
    #   - calcul total S (somme des tuyaux)
    #   - somme totale des joints J
    #   - On trie la liste des joints pour déterminer facilement les c plus petites valeurs
    #
    # Pour chaque possible c, on calcule la somme des c plus petites joints,
    # et déduit le salaire.
    #
    # Le maximum de ce salaire est la réponse.
    #
    # Suivant l'exemple dans l'énoncé, cela colle: en coupant certains joints,
    # on obtient des segments multiples, augmentant la rémunération globale.
    #
    # On implémente donc cette solution.
    #
    # Note: comme il y a up to 100 datasets, il faut être efficace (O(n log n) max)
    #
    # ---
    # Implémentation:
    # - Lire n, p[]
    # - Lire j[]
    # - Calculer S = somme(p)
    # - Calculer J = somme(j)
    # - Trier j en ordre croissant
    # - Calculer prefix sum de j trié: prefix[i] = somme des i premiers joints les plus petits
    # - Pour c in [0..n-1]:
    #      salaire = (c+1)*(S + J - prefix[c])
    # - Afficher le max de salaire


    while True:
        n = input()
        if not n:
            break
        n = n.strip()
        if n == '0':
            break

        n = int(n)
        p = list(map(int, input().split()))
        j = list(map(int, input().split()))

        S = sum(p)
        J = sum(j)

        # Trier joints dans l'ordre croissant
        j_sorted = sorted(j)

        # Calcul prefix sum pour les joints triés
        prefix = [0] * (n)
        for i in range(1, n):
            prefix[i] = prefix[i-1] + j_sorted[i-1]

        max_salary = 0
        # c : nombre de coupures, varie de 0 à n-1
        # salaire = (c+1)*(S + J - prefix[c])
        for c in range(n):
            # prefix[c] = somme des c plus petits joints coupés
            salary = (c +1) * (S + J - prefix[c])
            if salary > max_salary:
                max_salary = salary

        print(max_salary)

if __name__ == "__main__":
    threading.Thread(target=main).start()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.185395747423172
    2. '\n' → logprob: -2.0603957176208496
    3. '<|end|>' → logprob: -4.18539571762085
    4. '\' → logprob: -4.56039571762085
    5. 'newline' → logprob: -5.31039571762085
    6. '```' → logprob: -6.06039571762085
    7. 'import' → logprob: -6.18539571762085
    8. '<|end|>' → logprob: -6.56039571762085
    9. '' → logprob: -6.93539571762085
    10. '
' → logprob: -7.18539571762085

Token 4: ' threading' (ID: 72047)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8981837630271912
    2. '\' → logprob: -1.773183822631836
    3. '
' → logprob: -1.898183822631836
    4. '.' → logprob: -2.398183822631836
    5. '```' → logprob: -2.523183822631836
    6. 'import' → logprob: -2.898183822631836
    7. '

' → logprob: -3.648183822631836
    8. '' → logprob: -5.273183822631836
    9. ',' → logprob: -5.773183822631836
    10. '.Thread' → logprob: -6.398183822631836

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7178463935852051
    2. 'def' → logprob: -1.717846393585205
    3. '```' → logprob: -1.717846393585205
    4. '\' → logprob: -2.467846393585205
    5. '\n' → logprob: -3.342846393585205
    6. ':' → logprob: -5.092846393585205
    7. 'import' → logprob: -5.092846393585205
    8. 'class' → logprob: -5.592846393585205
    9. '
' → logprob: -5.592846393585205
    10. ',' → logprob: -6.342846393585205

Token 7: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0067733959294855595
    2. ' main' → logprob: -6.006773471832275
    3. '_' → logprob: -6.131773471832275
    4. ' space' → logprob: -7.756773471832275
    5. ' _' → logprob: -8.006772994995117
    6. '  ' → logprob: -8.506772994995117
    7. ' create' → logprob: -8.756772994995117
    8. ' run' → logprob: -8.881772994995117
    9. ' threading' → logprob: -9.006772994995117
    10. ' start' → logprob: -9.131772994995117

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0800803080201149
    2. '():' → logprob: -2.705080270767212
    3. ':' → logprob: -4.830080509185791
    4. '(:' → logprob: -6.455080509185791
    5. ' (' → logprob: -8.705080032348633
    6. '(
' → logprob: -9.580080032348633
    7. '):' → logprob: -9.830080032348633
    8. '(":' → logprob: -10.205080032348633
    9. ' ():' → logprob: -10.330080032348633
    10. '```' → logprob: -10.580080032348633

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6123324036598206
    2. '(' → logprob: -1.4873323440551758
    3. '    ' → logprob: -2.237332344055176
    4. '\' → logprob: -2.612332344055176
    5. ' ' → logprob: -3.862332344055176
    6. ' (' → logprob: -4.487332344055176
    7. '\n' → logprob: -5.862332344055176
    8. '    
' → logprob: -6.112332344055176
    9. '(n' → logprob: -6.362332344055176
    10. '(thread' → logprob: -6.487332344055176

Token 10: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2769349813461304
    2. ' t' → logprob: -1.5269349813461304
    3. '    ' → logprob: -1.6519349813461304
    4. 't' → logprob: -2.52693510055542
    5. ' pass' → logprob: -2.52693510055542
    6. ' ' → logprob: -3.27693510055542
    7. ' threading' → logprob: -3.27693510055542
    8. ' print' → logprob: -3.90193510055542
    9. '\' → logprob: -4.90193510055542
    10. 'print' → logprob: -5.40193510055542

Token 11: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006987344822846353
    2. '.exit' → logprob: -7.875698566436768
    3. '.argv' → logprob: -9.125699043273926
    4. ' .' → logprob: -9.375699043273926
    5. '.stdout' → logprob: -9.625699043273926
    6. '.stdin' → logprob: -10.375699043273926
    7. '.stderr' → logprob: -12.000699043273926
    8. '.readline' → logprob: -12.125699043273926
    9. '.write' → logprob: -12.750699043273926
    10. '.setdefault' → logprob: -13.125699043273926

Token 12: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.42911601066589355
    2. 'trace' → logprob: -1.4291160106658936
    3. '_' → logprob: -3.9291160106658936
    4. '_trace' → logprob: -3.9291160106658936
    5. 'switch' → logprob: -4.304116249084473
    6. '_execution' → logprob: -4.554116249084473
    7. 'execution' → logprob: -4.679116249084473
    8. 'default' → logprob: -5.554116249084473
    9. 'ex' → logprob: -5.679116249084473
    10. 'check' → logprob: -5.929116249084473

Token 13: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.005384468473494053
    2. 'urs' → logprob: -6.13038444519043
    3. 'urse' → logprob: -6.63038444519043
    4. 'ur' → logprob: -7.63038444519043
    5. 'ursive' → logprob: -7.88038444519043
    6. 't' → logprob: -8.00538444519043
    7. 'urf' → logprob: -9.00538444519043
    8. 'use' → logprob: -9.00538444519043
    9. '_limit' → logprob: -9.13038444519043
    10. 'limit' → logprob: -9.38038444519043

Token 14: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -4.286852345103398e-05
    2. '_limit' → logprob: -10.250042915344238
    3. ' limit' → logprob: -12.125042915344238
    4. 'depth' → logprob: -13.500042915344238
    5. 'lim' → logprob: -14.625042915344238
    6. 'Limit' → logprob: -17.125041961669922
    7. '-limit' → logprob: -18.125041961669922
    8. '.limit' → logprob: -18.250041961669922
    9. '_depth' → logprob: -18.375041961669922
    10. '_LIMIT' → logprob: -18.375041961669922

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.034592388459714e-06
    2. ' (' → logprob: -13.125005722045898
    3. '(

' → logprob: -13.625005722045898
    4. '(
' → logprob: -13.750005722045898
    5. '("("' → logprob: -14.000005722045898
    6. '((' → logprob: -14.500005722045898
    7. '('' → logprob: -16.6250057220459
    8. '()' → logprob: -16.6250057220459
    9. '(
' → logprob: -17.2500057220459
    10. '(None' → logprob: -17.5000057220459

Token 16: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.386991024017334
    2. '100' → logprob: -1.136991024017334
    3. ' ' → logprob: -9.511991500854492
    4. '1' → logprob: -10.136991500854492
    5. ')' → logprob: -12.761991500854492
    6. '999' → logprob: -13.761991500854492
    7. '500' → logprob: -14.011991500854492
    8. '   ' → logprob: -14.636991500854492
    9. '  ' → logprob: -14.886991500854492
    10. '400' → logprob: -15.136991500854492

Token 17: '**' (ID: 410)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.07970821112394333
    2. '000' → logprob: -2.5797080993652344
    3. '6' → logprob: -8.204708099365234
    4. '**' → logprob: -8.329708099365234
    5. '0' → logprob: -8.579708099365234
    6. '7' → logprob: -9.579708099365234
    7. '5' → logprob: -10.704708099365234
    8. '4' → logprob: -10.829708099365234
    9. '8' → logprob: -12.829708099365234
    10. '007' → logprob: -13.704708099365234

Token 18: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0041504609398543835
    2. '9' → logprob: -5.754150390625
    3. '8' → logprob: -7.629150390625
    4. '6' → logprob: -7.629150390625
    5. '```' → logprob: -16.129150390625
    6. '**' → logprob: -17.254150390625
    7. ')' → logprob: -18.879150390625
    8. '+' → logprob: -19.254150390625
    9. ' ' → logprob: -19.379150390625
    10. '4' → logprob: -20.254150390625

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ' )' → logprob: -11.875011444091797
    3. ')
' → logprob: -12.500011444091797
    4. '))' → logprob: -15.250011444091797
    5. ')
' → logprob: -16.250011444091797
    6. '   ' → logprob: -16.375011444091797
    7. ' ' → logprob: -16.500011444091797
    8. '),' → logprob: -17.250011444091797
    9. ')return' → logprob: -17.625011444091797
    10. '}' → logprob: -17.750011444091797

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009273014031350613
    2. '    
' → logprob: -4.884273052215576
    3. '
' → logprob: -7.509273052215576
    4. ' threading' → logprob: -7.634273052215576
    5. ')' → logprob: -9.384272575378418
    6. '<|end|>' → logprob: -9.384272575378418
    7. '    ' → logprob: -9.509272575378418
    8. '(thread' → logprob: -9.509272575378418
    9. 'thread' → logprob: -9.759272575378418
    10. ' 
' → logprob: -9.884272575378418

Token 21: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09863027185201645
    2. 'thread' → logprob: -3.34863018989563
    3. ')' → logprob: -3.72363018989563
    4. ' threading' → logprob: -4.598630428314209
    5. '\' → logprob: -4.848630428314209
    6. '    
' → logprob: -5.848630428314209
    7. '(' → logprob: -5.973630428314209
    8. ' thread' → logprob: -6.223630428314209
    9. '
' → logprob: -6.223630428314209
    10. '(thread' → logprob: -6.348630428314209

Token 22: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2748229503631592
    2. '(' → logprob: -1.5248229503631592
    3. '_data' → logprob: -4.899823188781738
    4. '("")' → logprob: -5.149823188781738
    5. '=' → logprob: -5.774823188781738
    6. 'data' → logprob: -6.524823188781738
    7. '().' → logprob: -6.774823188781738
    8. ' =' → logprob: -7.524823188781738
    9. '_' → logprob: -7.899823188781738
    10. ')' → logprob: -8.274823188781738

Token 23: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.37999802827835083
    2. ' input' → logprob: -1.254997968673706
    3. 'input' → logprob: -3.629997968673706
    4. 'sys' → logprob: -5.504998207092285
    5. ' lambda' → logprob: -7.879998207092285
    6. ' raw' → logprob: -10.504998207092285
    7. ' ' → logprob: -10.504998207092285
    8. 'lambda' → logprob: -11.254998207092285
    9. '	sys' → logprob: -11.504998207092285
    10. '=sys' → logprob: -12.004998207092285

Token 24: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.056142959743738174
    2. '.readline' → logprob: -3.056143045425415
    3. '.stdin' → logprob: -4.931142807006836
    4. ' .' → logprob: -9.306142807006836
    5. '.read' → logprob: -9.931142807006836
    6. '.setdefault' → logprob: -10.806142807006836
    7. '.Read' → logprob: -10.806142807006836
    8. '().' → logprob: -11.056142807006836
    9. '.​' → logprob: -11.056142807006836
    10. '​.' → logprob: -11.056142807006836

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0007224413566291332
    2. '.' → logprob: -7.750722408294678
    3. '.read' → logprob: -8.250722885131836
    4. '.buffer' → logprob: -10.500722885131836
    5. '.readlines' → logprob: -13.750722885131836
    6. 'read' → logprob: -14.125722885131836
    7. ' readline' → logprob: -14.375722885131836
    8. 'buffer' → logprob: -14.875722885131836
    9. ' .' → logprob: -15.750722885131836
    10. '.stdin' → logprob: -16.125722885131836

Token 26: '

' (ID: 279)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.9949324131011963
    2. '   ' → logprob: -1.1199324131011963
    3. '
' → logprob: -1.9949324131011963
    4. '()' → logprob: -2.2449324131011963
    5. '(' → logprob: -3.9949324131011963
    6. '()
' → logprob: -4.744932174682617
    7. '\n' → logprob: -4.994932174682617
    8. '\' → logprob: -5.244932174682617
    9. '(
' → logprob: -5.369932174682617
    10. ')' → logprob: -5.744932174682617

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24875226616859436
    2. 'n' → logprob: -1.623752236366272
    3. 't' → logprob: -3.8737523555755615
    4. 'def' → logprob: -7.998752117156982
    5. 'thread' → logprob: -8.12375259399414
    6. '(n' → logprob: -8.12375259399414
    7. ' n' → logprob: -8.12375259399414
    8. 'number' → logprob: -8.62375259399414
    9. '    
' → logprob: -8.74875259399414
    10. 's' → logprob: -8.87375259399414

Token 28: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05753260478377342
    2. 't' → logprob: -2.932532548904419
    3. 'N' → logprob: -7.432532787322998
    4. '   ' → logprob: -7.432532787322998
    5. 'for' → logprob: -7.682532787322998
    6. ' n' → logprob: -7.682532787322998
    7. 'try' → logprob: -7.932532787322998
    8. 'num' → logprob: -10.18253231048584
    9. 'thread' → logprob: -10.30753231048584
    10. ' t' → logprob: -10.68253231048584

Token 29: ' Ce' (ID: 14228)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2888745367527008
    2. 't' → logprob: -2.163874626159668
    3. ' n' → logprob: -2.163874626159668
    4. ' t' → logprob: -4.788874626159668
    5. '   ' → logprob: -4.788874626159668
    6. 'N' → logprob: -7.163874626159668
    7. 's' → logprob: -7.413874626159668
    8. '(' → logprob: -7.663874626159668
    9. 'num' → logprob: -7.913874626159668
    10. 'q' → logprob: -8.413874626159668

Token 30: ' problème' (ID: 35630)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.33251771330833435
    2. '#' → logprob: -1.7075177431106567
    3. 'll' → logprob: -3.207517623901367
    4. 'l' → logprob: -3.332517623901367
    5. 'n' → logprob: -5.082517623901367
    6. 'rt' → logprob: -5.707517623901367
    7. 'il' → logprob: -5.957517623901367
    8. '   ' → logprob: -6.082517623901367
    9. 'def' → logprob: -6.582517623901367
    10. 'm' → logprob: -6.832517623901367

Token 31: ' revient' (ID: 95900)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019116666167974472
    2. ' s' → logprob: -5.6441168785095215
    3. '  ' → logprob: -6.1441168785095215
    4. 's' → logprob: -6.1441168785095215
    5. '   ' → logprob: -6.2691168785095215
    6. ' space' → logprob: -6.3941168785095215
    7. ' n' → logprob: -7.0191168785095215
    8. '    ' → logprob: -7.0191168785095215
    9. ' est' → logprob: -7.2691168785095215
    10. ' de' → logprob: -7.2691168785095215

Token 32: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08805644512176514
    2. ' ' → logprob: -2.7130565643310547
    3. 'à' → logprob: -4.338056564331055
    4. ' au' → logprob: -5.963056564331055
    5. ' souvent' → logprob: -6.588056564331055
    6. ' ' → logprob: -8.463056564331055
    7. '  ' → logprob: -8.588056564331055
    8. 'au' → logprob: -8.963056564331055
    9. ' fré' → logprob: -8.963056564331055
    10. ' a' → logprob: -9.088056564331055

Token 33: ' partition' (ID: 31512)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.7658635377883911
    2. 'impl' → logprob: -2.1408634185791016
    3. ' trouver' → logprob: -2.7658634185791016
    4. ' résoudre' → logprob: -3.0158634185791016
    5. 'calcul' → logprob: -3.3908634185791016
    6. 'un' → logprob: -3.3908634185791016
    7. 'transform' → logprob: -3.6408634185791016
    8. 'mod' → logprob: -3.6408634185791016
    9. 'faire' → logprob: -3.8908634185791016
    10. ' un' → logprob: -4.140863418579102

Token 34: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.18512286245822906
    2. 'er' → logprob: -1.9351228475570679
    3. ' ' → logprob: -5.185122966766357
    4. '_' → logprob: -5.310122966766357
    5. 'ing' → logprob: -5.810122966766357
    6. 'r' → logprob: -5.810122966766357
    7. 'n' → logprob: -6.185122966766357
    8. ' en' → logprob: -6.310122966766357
    9. ' de' → logprob: -7.435122966766357
    10. 'e' → logprob: -7.435122966766357

Token 35: ' une' (ID: 2463)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9986139535903931
    2. ' ' → logprob: -1.498613953590393
    3. ' la' → logprob: -2.1236138343811035
    4. 'le' → logprob: -2.3736138343811035
    5. '(' → logprob: -2.4986138343811035
    6. 'l' → logprob: -3.1236138343811035
    7. ' l' → logprob: -3.8736138343811035
    8. ' (' → logprob: -4.4986138343811035
    9. '_' → logprob: -4.9986138343811035
    10. ' the' → logprob: -5.6236138343811035

Token 36: ' sé' (ID: 7462)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.6227562427520752
    2. ' liste' → logprob: -1.4977562427520752
    3. ' chaîne' → logprob: -1.9977562427520752
    4. 'chaine' → logprob: -2.497756242752075
    5. 'cha' → logprob: -5.747756004333496
    6. 'list' → logprob: -5.747756004333496
    7. 's' → logprob: -5.872756004333496
    8. ' chaine' → logprob: -6.247756004333496
    9. 'phrase' → logprob: -6.747756004333496
    10. 'sequence' → logprob: -6.747756004333496

Token 37: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0127636743709445
    2. 'rie' → logprob: -4.387763500213623
    3. 'q' → logprob: -8.887763977050781
    4. 'quences' → logprob: -10.387763977050781
    5. 'que' → logprob: -10.637763977050781
    6. 'QUENCE' → logprob: -10.637763977050781
    7. 'qu' → logprob: -11.137763977050781
    8. '```' → logprob: -13.137763977050781
    9. '#' → logprob: -13.262763977050781
    10. '   ' → logprob: -13.512763977050781

Token 38: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02882852964103222
    2. ' en' → logprob: -4.5288286209106445
    3. ' de' → logprob: -5.4038286209106445
    4. '_' → logprob: -6.2788286209106445
    5. '.' → logprob: -6.6538286209106445
    6. ',' → logprob: -6.6538286209106445
    7. ' ,' → logprob: -6.7788286209106445
    8. ' (' → logprob: -6.9038286209106445
    9. 'en' → logprob: -7.5288286209106445
    10. ' )' → logprob: -7.6538286209106445

Token 39: ' tuy' (ID: 45164)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.1494674682617188
    2. ' caractères' → logprob: -2.1494674682617188
    3. ' nombres' → logprob: -2.1494674682617188
    4. 'tokens' → logprob: -2.2744674682617188
    5. 'car' → logprob: -2.3994674682617188
    6. 's' → logprob: -2.6494674682617188
    7. 'élé' → logprob: -2.6494674682617188
    8. '```' → logprob: -3.5244674682617188
    9. ' points' → logprob: -3.7744674682617188
    10. 'points' → logprob: -3.8994674682617188

Token 40: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.5769686698913574
    2. 'x' → logprob: -0.8269686698913574
    3. 'au' → logprob: -7.201968669891357
    4. 'xes' → logprob: -8.826969146728516
    5. '``' → logprob: -10.326969146728516
    6. '**' → logprob: -10.826969146728516
    7. '```' → logprob: -11.076969146728516
    8. '   ' → logprob: -11.201969146728516
    9. 'aut' → logprob: -11.326969146728516
    10. '#' → logprob: -12.326969146728516

Token 41: ' et' (ID: 859)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.0164216756820679
    2. ' ' → logprob: -1.2664216756820679
    3. '_' → logprob: -1.7664216756820679
    4. 's' → logprob: -2.5164217948913574
    5. ',' → logprob: -3.2664217948913574
    6. '.' → logprob: -4.391421794891357
    7. 'en' → logprob: -4.766421794891357
    8. '   ' → logprob: -5.016421794891357
    9. ' (' → logprob: -5.141421794891357
    10. ' ,' → logprob: -5.516421794891357

Token 42: ' joints' (ID: 47223)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0076813697814941
    2. 'de' → logprob: -1.2576813697814941
    3. ' d' → logprob: -2.882681369781494
    4. ' calcul' → logprob: -3.007681369781494
    5. 'd' → logprob: -3.382681369781494
    6. 'calcul' → logprob: -3.507681369781494
    7. 'def' → logprob: -3.632681369781494
    8. ' can' → logprob: -4.257681369781494
    9. 't' → logprob: -4.382681369781494
    10. ' leurs' → logprob: -4.632681369781494

Token 43: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.12654699385166168
    2. '   ' → logprob: -3.25154709815979
    3. ',' → logprob: -3.62654709815979
    4. '.' → logprob: -4.126546859741211
    5. ' ' → logprob: -4.251546859741211
    6. 'en' → logprob: -5.001546859741211
    7. 's' → logprob: -5.376546859741211
    8. '```' → logprob: -6.001546859741211
    9. ' entre' → logprob: -6.876546859741211
    10. '\' → logprob: -7.001546859741211

Token 44: ' plusieurs' (ID: 20875)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.7359223961830139
    2. ' un' → logprob: -1.7359223365783691
    3. ' une' → logprob: -1.8609223365783691
    4. ' deux' → logprob: -3.235922336578369
    5. 'segments' → logprob: -3.610922336578369
    6. ' blocs' → logprob: -3.860922336578369
    7. ' des' → logprob: -3.985922336578369
    8. ' groupes' → logprob: -4.485922336578369
    9. ' sous' → logprob: -4.610922336578369
    10. ' espaces' → logprob: -4.610922336578369

Token 45: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.09290963411331177
    2. 'segments' → logprob: -3.467909574508667
    3. ' espaces' → logprob: -3.717909574508667
    4. ' morceaux' → logprob: -4.717909812927246
    5. ' blocs' → logprob: -5.092909812927246
    6. ' groupes' → logprob: -5.342909812927246
    7. ' parts' → logprob: -5.592909812927246
    8. ' lignes' → logprob: -6.342909812927246
    9. ' partitions' → logprob: -6.592909812927246
    10. 's' → logprob: -7.092909812927246

Token 46: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020474150776863098
    2. ',' → logprob: -4.645473957061768
    3. '\' → logprob: -5.770473957061768
    4. '    ' → logprob: -6.145473957061768
    5. '.' → logprob: -6.270473957061768
    6. ':' → logprob: -7.270473957061768
    7. '\n' → logprob: -8.020474433898926
    8. '    
' → logprob: -8.145474433898926
    9. '```' → logprob: -8.145474433898926
    10. '  ' → logprob: -8.270474433898926

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002333309268578887
    2. '    ' → logprob: -7.627333164215088
    3. ',' → logprob: -7.752333164215088
    4. '.' → logprob: -7.877333164215088
    5. ' ' → logprob: -8.627333641052246
    6. '_' → logprob: -9.127333641052246
    7. 'def' → logprob: -9.377333641052246
    8. '\' → logprob: -9.377333641052246
    9. '```' → logprob: -9.502333641052246
    10. ' ' → logprob: -9.627333641052246

Token 48: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028495676815509796
    2. ',' → logprob: -6.627849578857422
    3. '.' → logprob: -7.127849578857422
    4. '    ' → logprob: -9.127849578857422
    5. '\' → logprob: -9.252849578857422
    6. '```' → logprob: -9.252849578857422
    7. ':' → logprob: -9.627849578857422
    8. ' ' → logprob: -10.127849578857422
    9. '    
' → logprob: -10.377849578857422
    10. '  ' → logprob: -10.627849578857422

Token 49: ' cons' (ID: 1473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004389763809740543
    2. '    ' → logprob: -6.879389762878418
    3. ' ' → logprob: -7.004389762878418
    4. ' #' → logprob: -7.379389762878418
    5. ' ' → logprob: -8.129389762878418
    6. '#' → logprob: -8.254389762878418
    7. '  ' → logprob: -8.504389762878418
    8. 'def' → logprob: -8.504389762878418
    9. '_' → logprob: -9.629389762878418
    10. ' )' → logprob: -10.004389762878418

Token 50: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.3976587653160095
    2. 'é' → logprob: -1.5226588249206543
    3. 't' → logprob: -3.0226588249206543
    4. 'éc' → logprob: -4.147658824920654
    5. 'équ' → logprob: -4.897658824920654
    6. 'e' → logprob: -5.147658824920654
    7. 'tr' → logprob: -5.272658824920654
    8. 'ecut' → logprob: -5.647658824920654
    9. 'tit' → logprob: -6.272658824920654
    10. '```' → logprob: -6.272658824920654

Token 51: 'ifs' (ID: 14119)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40267643332481384
    2. 'ifs' → logprob: -1.1526764631271362
    3. '```' → logprob: -5.527676582336426
    4. 'i' → logprob: -5.902676582336426
    5. 'ive' → logprob: -6.277676582336426
    6. 'uts' → logprob: -6.402676582336426
    7. 'ivement' → logprob: -6.527676582336426
    8. 'if' → logprob: -7.402676582336426
    9. 'ives' → logprob: -7.777676582336426
    10. 'es' → logprob: -8.027676582336426

Token 52: ' afin' (ID: 22217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16946589946746826
    2. ',' → logprob: -2.044466018676758
    3. '.' → logprob: -5.044466018676758
    4. 'def' → logprob: -5.794466018676758
    5. ' de' → logprob: -5.919466018676758
    6. '    ' → logprob: -6.169466018676758
    7. ' ,' → logprob: -6.544466018676758
    8. 'de' → logprob: -6.544466018676758
    9. 's' → logprob: -6.669466018676758
    10. ' ' → logprob: -6.919466018676758

Token 53: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8793118000030518
    2. ' de' → logprob: -1.1293118000030518
    3. 'de' → logprob: -2.0043118000030518
    4. 'd' → logprob: -2.3793118000030518
    5. ' que' → logprob: -3.5043118000030518
    6. 'que' → logprob: -6.254311561584473
    7. '   ' → logprob: -7.129311561584473
    8. ' ' → logprob: -7.504311561584473
    9. '<|end|>' → logprob: -8.129311561584473
    10. 'def' → logprob: -8.879311561584473

Token 54: ' maxim' (ID: 29045)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.24369890987873077
    2. ' minim' → logprob: -1.6186989545822144
    3. ' maxim' → logprob: -5.118699073791504
    4. ' min' → logprob: -5.368699073791504
    5. 'max' → logprob: -5.743699073791504
    6. ' minimize' → logprob: -7.368699073791504
    7. ' optimiser' → logprob: -7.493699073791504
    8. 'optim' → logprob: -7.618699073791504
    9. ' réduire' → logprob: -7.993699073791504
    10. 's' → logprob: -8.118699073791504

Token 55: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.004233562387526035
    2. 'al' → logprob: -6.004233360290527
    3. 'er' → logprob: -7.254233360290527
    4. '```' → logprob: -8.004233360290527
    5. '#' → logprob: -8.879233360290527
    6. 'user' → logprob: -9.254233360290527
    7. 'is' → logprob: -9.254233360290527
    8. 'ser' → logprob: -9.629233360290527
    9. 'aler' → logprob: -10.129233360290527
    10. '[' → logprob: -10.129233360290527

Token 56: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3601514399051666
    2. ' le' → logprob: -1.8601514101028442
    3. ' l' → logprob: -2.360151529312134
    4. ' leur' → logprob: -3.735151529312134
    5. ' ' → logprob: -4.985151290893555
    6. 'leur' → logprob: -4.985151290893555
    7. 'le' → logprob: -5.610151290893555
    8. 'la' → logprob: -6.110151290893555
    9. '<|end|>' → logprob: -6.485151290893555
    10. ' les' → logprob: -6.485151290893555

Token 57: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.11842049658298492
    2. 's' → logprob: -3.2434206008911133
    3. ' valeur' → logprob: -3.6184206008911133
    4. ' quantité' → logprob: -4.118420600891113
    5. ' qualité' → logprob: -4.493420600891113
    6. ' sum' → logprob: -5.618420600891113
    7. ' som' → logprob: -5.868420600891113
    8. ' longueur' → logprob: -6.243420600891113
    9. 'val' → logprob: -6.368420600891113
    10. '_' → logprob: -6.743420600891113

Token 58: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.13643740117549896
    2. '<|end|>' → logprob: -2.13643741607666
    3. ' de' → logprob: -5.76143741607666
    4. 'des' → logprob: -5.88643741607666
    5. ' ' → logprob: -6.51143741607666
    6. '<|end|>' → logprob: -7.51143741607666
    7. '_des' → logprob: -8.01143741607666
    8. '_' → logprob: -8.51143741607666
    9. ' d' → logprob: -9.13643741607666
    10. ')' → logprob: -9.13643741607666

Token 59: ' sal' (ID: 2370)
  Prédit: ' longue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' longue' → logprob: -0.2608487904071808
    2. ' valeurs' → logprob: -2.5108487606048584
    3. ' diam' → logprob: -3.3858487606048584
    4. ' long' → logprob: -4.2608489990234375
    5. ' gains' → logprob: -4.3858489990234375
    6. ' coûts' → logprob: -4.5108489990234375
    7. 'long' → logprob: -4.8858489990234375
    8. ' capacités' → logprob: -5.0108489990234375
    9. 'capac' → logprob: -5.1358489990234375
    10. 'val' → logprob: -5.6983489990234375

Token 60: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.07063359022140503
    2. 'a' → logprob: -2.82063364982605
    3. 'ai' → logprob: -5.195633411407471
    4. 'ari' → logprob: -7.570633411407471
    5. '```' → logprob: -7.570633411407471
    6. 'aries' → logprob: -7.820633411407471
    7. 'aire' → logprob: -8.195633888244629
    8. '\' → logprob: -8.695633888244629
    9. 'es' → logprob: -9.070633888244629
    10. '#' → logprob: -9.570633888244629

Token 61: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12137915194034576
    2. 'def' → logprob: -2.9963791370391846
    3. ' ' → logprob: -3.3713791370391846
    4. '_' → logprob: -4.496379375457764
    5. '.' → logprob: -4.996379375457764
    6. '  ' → logprob: -5.871379375457764
    7. ',' → logprob: -6.121379375457764
    8. '    ' → logprob: -6.246379375457764
    9. ' ' → logprob: -7.371379375457764
    10. ' (' → logprob: -7.746379375457764

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01602897420525551
    2. ' ' → logprob: -5.266028881072998
    3. '    
' → logprob: -6.016028881072998
    4. '\' → logprob: -6.141028881072998
    5. '\n' → logprob: -6.141028881072998
    6. '
' → logprob: -6.266028881072998
    7. '  ' → logprob: -7.641028881072998
    8. '    ' → logprob: -7.641028881072998
    9. ' 
' → logprob: -8.266029357910156
    10. 'n' → logprob: -8.516029357910156

Token 63: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15851110219955444
    2. '\' → logprob: -2.408511161804199
    3. ' ' → logprob: -3.908511161804199
    4. '\n' → logprob: -4.033511161804199
    5. '    
' → logprob: -4.908511161804199
    6. ' 
' → logprob: -5.533511161804199
    7. '
' → logprob: -6.533511161804199
    8. 'n' → logprob: -6.658511161804199
    9. '   
' → logprob: -7.158511161804199
    10. '    ' → logprob: -7.283511161804199

Token 64: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04652263596653938
    2. ' ' → logprob: -4.171522617340088
    3. 'n' → logprob: -5.296522617340088
    4. '    ' → logprob: -5.296522617340088
    5. '\' → logprob: -5.546522617340088
    6. 'def' → logprob: -5.546522617340088
    7. '#' → logprob: -5.921522617340088
    8. '_' → logprob: -6.296522617340088
    9. '    
' → logprob: -7.046522617340088
    10. ' ' → logprob: -7.046522617340088

Token 65: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.9378478527069092
    2. 'segment' → logprob: -1.9378478527069092
    3. ' tuy' → logprob: -2.187847852706909
    4. ' ' → logprob: -2.562847852706909
    5. ' pipe' → logprob: -2.687847852706909
    6. 't' → logprob: -2.687847852706909
    7. 'élé' → logprob: -2.937847852706909
    8. ' t' → logprob: -4.312848091125488
    9. 'pipe' → logprob: -4.562848091125488
    10. 's' → logprob: -4.937848091125488

Token 66: ' est' (ID: 893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9553738832473755
    2. ' est' → logprob: -1.5803738832473755
    3. ' doit' → logprob: -2.580373764038086
    4. ' has' → logprob: -3.080373764038086
    5. ' peut' → logprob: -3.580373764038086
    6. '<|end|>' → logprob: -3.580373764038086
    7. ' de' → logprob: -4.205373764038086
    8. 's' → logprob: -4.205373764038086
    9. ' correspond' → logprob: -4.455373764038086
    10. ' ' → logprob: -4.455373764038086

Token 67: ' form' (ID: 1625)
  Prédit: ' form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' form' → logprob: -1.2760369777679443
    2. ' un' → logprob: -1.5260369777679443
    3. ' une' → logprob: -2.0260369777679443
    4. ' constitué' → logprob: -2.6510369777679443
    5. 'form' → logprob: -2.9010369777679443
    6. 'une' → logprob: -3.4010369777679443
    7. ' déf' → logprob: -3.4010369777679443
    8. 'dé' → logprob: -3.4010369777679443
    9. ' composé' → logprob: -3.7760369777679443
    10. 'un' → logprob: -4.151037216186523

Token 68: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0005589892389252782
    2. 'ée' → logprob: -7.500558853149414
    3. 'e' → logprob: -12.750558853149414
    4. 'ed' → logprob: -13.125558853149414
    5. '```' → logprob: -15.250558853149414
    6. 'és' → logprob: -15.625558853149414
    7. 'è' → logprob: -15.875558853149414
    8. '\'' → logprob: -16.625558853149414
    9. '#' → logprob: -16.875558853149414
    10. '�' → logprob: -17.000558853149414

Token 69: ' par' (ID: 686)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1219511553645134
    2. 'd' → logprob: -2.871951103210449
    3. '<|end|>' → logprob: -3.621951103210449
    4. ' de' → logprob: -3.871951103210449
    5. ' ' → logprob: -5.996951103210449
    6. ' des' → logprob: -6.246951103210449
    7. ' of' → logprob: -6.246951103210449
    8. 'e' → logprob: -6.621951103210449
    9. ' par' → logprob: -7.246951103210449
    10. 'de' → logprob: -7.371951103210449

Token 70: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4004661738872528
    2. 'un' → logprob: -1.4004662036895752
    3. 'une' → logprob: -3.900466203689575
    4. 'l' → logprob: -4.150465965270996
    5. ' l' → logprob: -4.400465965270996
    6. ' une' → logprob: -4.400465965270996
    7. ''un' → logprob: -5.525465965270996
    8. ' la' → logprob: -5.650465965270996
    9. 'au' → logprob: -5.900465965270996
    10. 'a' → logprob: -5.900465965270996

Token 71: ' ou' (ID: 2031)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.32668814063072205
    2. ' espace' → logprob: -2.826688051223755
    3. ' pipe' → logprob: -3.451688051223755
    4. ' tuy' → logprob: -3.576688051223755
    5. ' élément' → logprob: -3.701688051223755
    6. 'élé' → logprob: -3.701688051223755
    7. 'a' → logprob: -3.951688051223755
    8. ' tube' → logprob: -4.076688289642334
    9. ' e' → logprob: -4.076688289642334
    10. ' ' → logprob: -4.826688289642334

Token 72: ' plusieurs' (ID: 20875)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.17557202279567719
    2. ' plus' → logprob: -2.550571918487549
    3. ' plusieurs' → logprob: -3.050571918487549
    4. '+' → logprob: -4.175571918487549
    5. 'des' → logprob: -4.800571918487549
    6. ' des' → logprob: -5.050571918487549
    7. '```' → logprob: -6.050571918487549
    8. '-plus' → logprob: -7.050571918487549
    9. 'more' → logprob: -7.175571918487549
    10. '_plus' → logprob: -8.050572395324707

Token 73: ' tuy' (ID: 45164)
  Prédit: ' tuy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuy' → logprob: -0.4113558828830719
    2. ' éléments' → logprob: -2.036355972290039
    3. 't' → logprob: -2.161355972290039
    4. 'élé' → logprob: -3.661355972290039
    5. ' espaces' → logprob: -3.786355972290039
    6. ' pipes' → logprob: -4.161355972290039
    7. 'pipes' → logprob: -5.286355972290039
    8. '```' → logprob: -5.786355972290039
    9. ' tubes' → logprob: -5.911355972290039
    10. ' elements' → logprob: -6.036355972290039

Token 74: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.06305784732103348
    2. 'x' → logprob: -2.8130578994750977
    3. 'au' → logprob: -6.938057899475098
    4. '```' → logprob: -9.688057899475098
    5. '   ' → logprob: -10.938057899475098
    6. ' aux' → logprob: -11.938057899475098
    7. '(x' → logprob: -12.313057899475098
    8. '_aux' → logprob: -12.438057899475098
    9. '##' → logprob: -12.938057899475098
    10. '``' → logprob: -13.313057899475098

Token 75: ' connect' (ID: 4837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2508767247200012
    2. ',' → logprob: -2.5008766651153564
    3. 's' → logprob: -2.6258766651153564
    4. '<|end|>' → logprob: -4.1258769035339355
    5. '_' → logprob: -4.3758769035339355
    6. ')' → logprob: -4.6258769035339355
    7. '[' → logprob: -5.2508769035339355
    8. ''' → logprob: -5.7508769035339355
    9. '.' → logprob: -6.1258769035339355
    10. 'def' → logprob: -6.2508769035339355

Token 76: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0006433341186493635
    2. 'é' → logprob: -7.375643253326416
    3. 'es' → logprob: -12.250643730163574
    4. '#' → logprob: -12.875643730163574
    5. 'ès' → logprob: -13.500643730163574
    6. 'ées' → logprob: -13.500643730163574
    7. '```' → logprob: -13.500643730163574
    8. 'ÉS' → logprob: -14.000643730163574
    9. 's' → logprob: -14.250643730163574
    10. 'És' → logprob: -14.875643730163574

Token 77: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.18689757585525513
    2. 'par' → logprob: -2.6868975162506104
    3. ' entre' → logprob: -2.8118975162506104
    4. '.' → logprob: -3.6868975162506104
    5. ',' → logprob: -4.5618977546691895
    6. 'entre' → logprob: -6.5618977546691895
    7. ' via' → logprob: -7.3118977546691895
    8. 's' → logprob: -7.4368977546691895
    9. '_par' → logprob: -7.5618977546691895
    10. '```' → logprob: -7.8118977546691895

Token 78: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.15060599148273468
    2. ' un' → logprob: -2.0256059169769287
    3. 'des' → logprob: -5.150606155395508
    4. 'un' → logprob: -7.150606155395508
    5. ' ' → logprob: -7.900606155395508
    6. '<|end|>' → logprob: -8.025606155395508
    7. ' espaces' → logprob: -9.150606155395508
    8. ' une' → logprob: -9.275606155395508
    9. 's' → logprob: -9.650606155395508
    10. ' joints' → logprob: -9.650606155395508

Token 79: ' joints' (ID: 47223)
  Prédit: ' joints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joints' → logprob: -0.14822521805763245
    2. 'j' → logprob: -3.1482253074645996
    3. '_j' → logprob: -3.3982253074645996
    4. ' j' → logprob: -3.5232253074645996
    5. ' espaces' → logprob: -4.5232253074646
    6. ' joint' → logprob: -4.6482253074646
    7. 'joint' → logprob: -6.1482253074646
    8. ' ' → logprob: -6.6482253074646
    9. '```' → logprob: -6.6482253074646
    10. ' ' → logprob: -6.8982253074646

Token 80: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7461312413215637
    2. '.' → logprob: -0.9961312413215637
    3. ',' → logprob: -1.996131181716919
    4. 's' → logprob: -4.871131420135498
    5. 'def' → logprob: -6.246131420135498
    6. '\n' → logprob: -6.371131420135498
    7. '```' → logprob: -6.496131420135498
    8. '\' → logprob: -6.746131420135498
    9. '    
' → logprob: -7.246131420135498
    10. 'import' → logprob: -7.371131420135498

Token 81: 'qui' (ID: 22771)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6003525257110596
    2. ')' → logprob: -1.2253525257110596
    3. ' ).' → logprob: -2.7253525257110596
    4. ').' → logprob: -3.1003525257110596
    5. ' ),' → logprob: -3.7253525257110596
    6. '),' → logprob: -4.7253522872924805
    7. ',' → logprob: -5.3503522872924805
    8. ' des' → logprob: -5.8503522872924805
    9. ' ' → logprob: -6.8503522872924805
    10. ' );' → logprob: -7.2253522872924805

Token 82: ' rel' (ID: 1536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5325095653533936
    2. ' sont' → logprob: -1.0325095653533936
    3. ' are' → logprob: -4.282509803771973
    4. '<|end|>' → logprob: -4.907509803771973
    5. ' prennent' → logprob: -6.157509803771973
    6. ')' → logprob: -6.157509803771973
    7. ' représentent' → logprob: -6.282509803771973
    8. ' permettent' → logprob: -6.407509803771973
    9. ' doivent' → logprob: -6.407509803771973
    10. 'se' → logprob: -6.532509803771973

Token 83: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.12758947908878326
    2. 'aient' → logprob: -2.877589464187622
    3. 'ie' → logprob: -3.877589464187622
    4. 'i' → logprob: -4.377589702606201
    5. '#' → logprob: -4.877589702606201
    6. '   ' → logprob: -5.877589702606201
    7. 'è' → logprob: -6.252589702606201
    8. '       ' → logprob: -6.377589702606201
    9. '```' → logprob: -6.440089702606201
    10. '`' → logprob: -6.690089702606201

Token 84: ' i' (ID: 575)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4906304180622101
    2. ' des' → logprob: -1.6156303882598877
    3. ' deux' → logprob: -3.1156303882598877
    4. ' les' → logprob: -3.3656303882598877
    5. 'un' → logprob: -3.6156303882598877
    6. 'les' → logprob: -4.115630626678467
    7. 'de' → logprob: -4.240630626678467
    8. 'des' → logprob: -4.240630626678467
    9. ')' → logprob: -4.990630626678467
    10. 't' → logprob: -5.240630626678467

Token 85: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2833209037780762
    2. ' et' → logprob: -1.9083209037780762
    3. ' ' → logprob: -2.033320903778076
    4. ' )' → logprob: -2.158320903778076
    5. ' and' → logprob: -2.533320903778076
    6. '-' → logprob: -2.533320903778076
    7. ' adjacent' → logprob: -3.158320903778076
    8. ' à' → logprob: -3.283320903778076
    9. 's' → logprob: -3.408320903778076
    10. '+' → logprob: -4.033320903778076

Token 86: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17985416948795319
    2. 'i' → logprob: -1.804854154586792
    3. ' ' → logprob: -10.179854393005371
    4. '(i' → logprob: -11.054854393005371
    5. '	i' → logprob: -11.179854393005371
    6. ' `' → logprob: -11.929854393005371
    7. '```' → logprob: -12.179854393005371
    8. ' ' → logprob: -12.429854393005371
    9. ' (' → logprob: -12.804854393005371
    10. 'the' → logprob: -12.804854393005371

Token 87: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.021087372675538063
    2. ' +' → logprob: -3.896087408065796
    3. ' i' → logprob: -9.146087646484375
    4. '+i' → logprob: -9.396087646484375
    5. ' ' → logprob: -9.521087646484375
    6. ' et' → logprob: -9.646087646484375
    7. ')' → logprob: -10.021087646484375
    8. '-' → logprob: -10.021087646484375
    9. ' )' → logprob: -10.396087646484375
    10. ' and' → logprob: -11.021087646484375

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013184583745896816
    2. ')' → logprob: -4.763184547424316
    3. ' ' → logprob: -5.513184547424316
    4. ' )' → logprob: -8.138184547424316
    5. '+' → logprob: -8.513184547424316
    6. 's' → logprob: -11.638184547424316
    7. 'i' → logprob: -12.263184547424316
    8. '```' → logprob: -12.763184547424316
    9. '-' → logprob: -13.138184547424316
    10. '),' → logprob: -13.263184547424316

Token 89: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.054725531488657
    2. ').' → logprob: -3.1797256469726562
    3. ' )' → logprob: -4.804725646972656
    4. '),' → logprob: -6.179725646972656
    5. ' pipes' → logprob: -7.429725646972656
    6. ' ).' → logprob: -8.054725646972656
    7. 's' → logprob: -9.179725646972656
    8. ' ),' → logprob: -10.179725646972656
    9. 't' → logprob: -10.429725646972656
    10. '):' → logprob: -10.679725646972656

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005378306843340397
    2. '    
' → logprob: -5.755378246307373
    3. '\' → logprob: -7.505378246307373
    4. '    ' → logprob: -7.880378246307373
    5. 'n' → logprob: -8.005378723144531
    6. '\n' → logprob: -8.255378723144531
    7. ')' → logprob: -9.255378723144531
    8. ' ' → logprob: -9.380378723144531
    9. '
' → logprob: -9.630378723144531
    10. ' 
' → logprob: -9.755378723144531

Token 91: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016024747863411903
    2. '\' → logprob: -5.641024589538574
    3. '
' → logprob: -5.891024589538574
    4. ' ' → logprob: -6.266024589538574
    5. '\n' → logprob: -6.391024589538574
    6. '    
' → logprob: -6.516024589538574
    7. 'n' → logprob: -6.516024589538574
    8. '```' → logprob: -7.391024589538574
    9. ' 
' → logprob: -7.516024589538574
    10. 'newline' → logprob: -8.141024589538574

Token 92: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02466287836432457
    2. '    
' → logprob: -4.649662971496582
    3. ' 
' → logprob: -5.774662971496582
    4. 'n' → logprob: -5.774662971496582
    5. '\' → logprob: -6.274662971496582
    6. '
' → logprob: -6.399662971496582
    7. ' ' → logprob: -6.899662971496582
    8. '    ' → logprob: -7.024662971496582
    9. ' ' → logprob: -7.899662971496582
    10. 'def' → logprob: -7.899662971496582

Token 93: ' salaire' (ID: 135427)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9861052632331848
    2. ' code' → logprob: -2.11110520362854
    3. ' joint' → logprob: -2.23610520362854
    4. ' salaire' → logprob: -2.36110520362854
    5. ' segment' → logprob: -3.23610520362854
    6. ' problème' → logprob: -3.36110520362854
    7. ' #' → logprob: -3.61110520362854
    8. ' s' → logprob: -3.61110520362854
    9. ' coût' → logprob: -3.73610520362854
    10. ' nombre' → logprob: -4.111105442047119

Token 94: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8200550079345703
    2. 's' → logprob: -2.1950550079345703
    3. ' =' → logprob: -2.1950550079345703
    4. ' des' → logprob: -2.3200550079345703
    5. '  ' → logprob: -3.1950550079345703
    6. '_' → logprob: -3.4450550079345703
    7. ' de' → logprob: -3.4450550079345703
    8. ' est' → logprob: -3.9450550079345703
    9. ' maximal' → logprob: -4.07005500793457
    10. '<|end|>' → logprob: -4.07005500793457

Token 95: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2781188488006592
    2. 's' → logprob: -1.9031188488006592
    3. ' calcul' → logprob: -2.028118848800659
    4. ' ' → logprob: -2.278118848800659
    5. ' égal' → logprob: -2.528118848800659
    6. ' =' → logprob: -3.403118848800659
    7. ' donné' → logprob: -3.403118848800659
    8. ' la' → logprob: -3.778118848800659
    9. ',' → logprob: -4.153119087219238
    10. ' déf' → logprob: -4.153119087219238

Token 96: 'nombre' (ID: 28576)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0557048320770264
    2. 'len' → logprob: -1.6807048320770264
    3. ' len' → logprob: -2.5557048320770264
    4. ')' → logprob: -3.3057048320770264
    5. ' le' → logprob: -3.4307048320770264
    6. 'la' → logprob: -3.6807048320770264
    7. 'le' → logprob: -3.6807048320770264
    8. ' max' → logprob: -3.8057048320770264
    9. '   ' → logprob: -3.9307048320770264
    10. 'max' → logprob: -3.9307048320770264

Token 97: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7455140352249146
    2. '_' → logprob: -1.2455140352249146
    3. ' de' → logprob: -1.8705140352249146
    4. ')' → logprob: -3.620513916015625
    5. 's' → logprob: -3.745513916015625
    6. ' d' → logprob: -4.745513916015625
    7. ' )' → logprob: -5.120513916015625
    8. '  ' → logprob: -5.620513916015625
    9. 'de' → logprob: -5.870513916015625
    10. 'd' → logprob: -6.120513916015625

Token 98: ' segments' (ID: 33749)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5948358178138733
    2. ' tuy' → logprob: -0.9698358178138733
    3. ' segments' → logprob: -4.3448357582092285
    4. 'pipes' → logprob: -4.4698357582092285
    5. ' ' → logprob: -5.0948357582092285
    6. ')' → logprob: -5.3448357582092285
    7. 'segments' → logprob: -5.5948357582092285
    8. '```' → logprob: -5.7198357582092285
    9. 'tu' → logprob: -5.8448357582092285
    10. '_t' → logprob: -5.9698357582092285

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06641509383916855
    2. ' *' → logprob: -3.1914150714874268
    3. ' )' → logprob: -4.441415309906006
    4. '*' → logprob: -5.191415309906006
    5. ' -' → logprob: -6.691415309906006
    6. ')*(' → logprob: -6.941415309906006
    7. ')*' → logprob: -7.191415309906006
    8. '-' → logprob: -7.316415309906006
    9. ' ' → logprob: -7.691415309906006
    10. '+' → logprob: -7.691415309906006

Token 100: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2046731412410736
    2. '*' → logprob: -2.0796730518341064
    3. '+' → logprob: -4.0796732902526855
    4. ' ' → logprob: -4.4546732902526855
    5. ' +' → logprob: -4.7046732902526855
    6. 'def' → logprob: -5.2046732902526855
    7. ')' → logprob: -5.3296732902526855
    8. ' **' → logprob: -5.4546732902526855
    9. '**' → logprob: -5.8296732902526855
    10. 'import' → logprob: -6.8296732902526855

Token 101: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6058235168457031
    2. ' max' → logprob: -1.7308235168457031
    3. 'max' → logprob: -2.480823516845703
    4. '(' → logprob: -3.105823516845703
    5. ' ' → logprob: -3.605823516845703
    6. ' segments' → logprob: -4.230823516845703
    7. '(max' → logprob: -4.230823516845703
    8. 's' → logprob: -4.605823516845703
    9. '(s' → logprob: -4.730823516845703
    10. 'segments' → logprob: -5.105823516845703

Token 102: 'long' (ID: 8431)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.9265919923782349
    2. ' longueur' → logprob: -2.0515918731689453
    3. 'min' → logprob: -2.1765918731689453
    4. 'minimum' → logprob: -2.4265918731689453
    5. ' min' → logprob: -2.8015918731689453
    6. ' minimum' → logprob: -2.8015918731689453
    7. 'la' → logprob: -2.9265918731689453
    8. ' (' → logprob: -3.0515918731689453
    9. ' le' → logprob: -3.0515918731689453
    10. '(min' → logprob: -3.3015918731689453

Token 103: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.002384091727435589
    2. 'ue' → logprob: -6.502384185791016
    3. 'eur' → logprob: -9.002384185791016
    4. 'est' → logprob: -9.377384185791016
    5. 'ure' → logprob: -9.502384185791016
    6. 'uer' → logprob: -9.502384185791016
    7. 'u' → logprob: -9.502384185791016
    8. ')' → logprob: -9.627384185791016
    9. 'uest' → logprob: -9.877384185791016
    10. '   ' → logprob: -10.002384185791016

Token 104: ' totale' (ID: 52898)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3053380250930786
    2. ' des' → logprob: -1.8053380250930786
    3. ' totale' → logprob: -2.055337905883789
    4. ')' → logprob: -2.305337905883789
    5. ' maximale' → logprob: -2.680337905883789
    6. '_total' → logprob: -3.305337905883789
    7. '_' → logprob: -3.680337905883789
    8. 'de' → logprob: -3.680337905883789
    9. '_tot' → logprob: -3.805337905883789
    10. 'tot' → logprob: -4.055337905883789

Token 105: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5739771127700806
    2. ' des' → logprob: -1.1989771127700806
    3. 'des' → logprob: -3.198976993560791
    4. 'de' → logprob: -3.448976993560791
    5. ' )' → logprob: -3.573976993560791
    6. ' de' → logprob: -3.698976993560791
    7. ' du' → logprob: -6.073976993560791
    8. 'du' → logprob: -6.198976993560791
    9. ' totale' → logprob: -6.948976993560791
    10. ' of' → logprob: -7.073976993560791

Token 106: ' tous' (ID: 10688)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.3047204613685608
    2. 'cha' → logprob: -2.304720401763916
    3. ' la' → logprob: -2.929720401763916
    4. ' l' → logprob: -3.804720401763916
    5. ' cha' → logprob: -4.179720401763916
    6. 'la' → logprob: -4.304720401763916
    7. 'l' → logprob: -4.429720401763916
    8. ' segment' → logprob: -4.554720401763916
    9. ' each' → logprob: -4.929720401763916
    10. 't' → logprob: -5.304720401763916

Token 107: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5743448734283447
    2. 'les' → logprob: -1.0743448734283447
    3. 'segments' → logprob: -3.0743448734283447
    4. ' segments' → logprob: -3.8243448734283447
    5. 's' → logprob: -3.9493448734283447
    6. ' ' → logprob: -6.324344635009766
    7. ')' → logprob: -6.699344635009766
    8. '_segments' → logprob: -6.949344635009766
    9. '<|end|>' → logprob: -7.324344635009766
    10. 'es' → logprob: -7.699344635009766

Token 108: ' tuy' (ID: 45164)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.796843409538269
    2. 'segments' → logprob: -1.046843409538269
    3. ' tuy' → logprob: -2.1718435287475586
    4. 't' → logprob: -2.5468435287475586
    5. 'segment' → logprob: -5.921843528747559
    6. 'pipes' → logprob: -7.046843528747559
    7. ' pipes' → logprob: -7.546843528747559
    8. ' segment' → logprob: -8.046843528747559
    9. ' tubes' → logprob: -8.171843528747559
    10. ' ' → logprob: -8.796843528747559

Token 109: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.06314794719219208
    2. 'x' → logprob: -2.813148021697998
    3. 'au' → logprob: -8.18814754486084
    4. 'p' → logprob: -8.68814754486084
    5. '   ' → logprob: -8.93814754486084
    6. '```' → logprob: -9.18814754486084
    7. 'pipes' → logprob: -9.31314754486084
    8. 'pes' → logprob: -9.68814754486084
    9. 'ps' → logprob: -9.81314754486084
    10. 'pas' → logprob: -9.93814754486084

Token 110: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031915828585624695
    2. ' )' → logprob: -3.6569159030914307
    3. '   ' → logprob: -6.531915664672852
    4. '+' → logprob: -6.531915664672852
    5. ' +' → logprob: -6.531915664672852
    6. '*' → logprob: -8.656915664672852
    7. ' *' → logprob: -8.656915664672852
    8. '**' → logprob: -8.906915664672852
    9. ')**' → logprob: -9.531915664672852
    10. 'def' → logprob: -9.656915664672852

Token 111: ' joints' (ID: 47223)
  Prédit: ' joints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joints' → logprob: -0.24067814648151398
    2. 'j' → logprob: -1.7406781911849976
    3. ' les' → logprob: -4.240678310394287
    4. ' des' → logprob: -4.365678310394287
    5. ' j' → logprob: -5.865678310394287
    6. 'les' → logprob: -5.990678310394287
    7. ' raccord' → logprob: -7.240678310394287
    8. ' leurs' → logprob: -7.553178310394287
    9. 'joint' → logprob: -7.865678310394287
    10. ' joint' → logprob: -7.928178310394287

Token 112: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029529685154557228
    2. ' )' → logprob: -3.654529571533203
    3. '   ' → logprob: -6.029529571533203
    4. ')
' → logprob: -9.279529571533203
    5. ')

' → logprob: -9.404529571533203
    6. ' ' → logprob: -9.404529571533203
    7. ').' → logprob: -9.654529571533203
    8. '.' → logprob: -9.779529571533203
    9. '+' → logprob: -10.154529571533203
    10. '**' → logprob: -10.404529571533203

Token 113: ' ces' (ID: 10532)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.7916282415390015
    2. ' le' → logprob: -2.041628360748291
    3. ' un' → logprob: -2.291628360748291
    4. ' la' → logprob: -2.416628360748291
    5. ' l' → logprob: -2.666628360748291
    6. ' ' → logprob: -3.041628360748291
    7. ')' → logprob: -3.791628360748291
    8. ' each' → logprob: -4.291628360748291
    9. ' les' → logprob: -4.291628360748291
    10. ' )' → logprob: -4.416628360748291

Token 114: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.2850862145423889
    2. 'segments' → logprob: -1.4100861549377441
    3. ' )' → logprob: -6.410086154937744
    4. '_segments' → logprob: -7.160086154937744
    5. ')' → logprob: -7.660086154937744
    6. ' segmentos' → logprob: -7.910086154937744
    7. 'segment' → logprob: -8.535086631774902
    8. ' ' → logprob: -8.785086631774902
    9. ' segment' → logprob: -9.535086631774902
    10. ' ' → logprob: -9.910086631774902

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003523098537698388
    2. ' )' → logprob: -5.878522872924805
    3. '   ' → logprob: -7.753522872924805
    4. ')
' → logprob: -8.753522872924805
    5. 'def' → logprob: -10.128522872924805
    6. '#' → logprob: -11.253522872924805
    7. ')

' → logprob: -11.753522872924805
    8. '.' → logprob: -11.753522872924805
    9. ' ' → logprob: -11.878522872924805
    10. ' ' → logprob: -12.128522872924805

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008837332017719746
    2. '
' → logprob: -6.1338372230529785
    3. '    
' → logprob: -6.1338372230529785
    4. '\' → logprob: -6.5088372230529785
    5. ':' → logprob: -7.0088372230529785
    6. 'def' → logprob: -7.1338372230529785
    7. '    ' → logprob: -8.383837699890137
    8. ')' → logprob: -8.508837699890137
    9. ' ' → logprob: -8.633837699890137
    10. '\n' → logprob: -8.633837699890137

Token 117: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12131558358669281
    2. '
' → logprob: -2.6213154792785645
    3. ':' → logprob: -4.2463154792785645
    4. '    
' → logprob: -4.6213154792785645
    5. '\' → logprob: -4.8713154792785645
    6. 'def' → logprob: -5.7463154792785645
    7. '\n' → logprob: -6.6213154792785645
    8. ')' → logprob: -7.2463154792785645
    9. ',' → logprob: -7.4963154792785645
    10. '```' → logprob: -7.6213154792785645

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004213263280689716
    2. 'n' → logprob: -6.129213333129883
    3. '    
' → logprob: -6.504213333129883
    4. 'def' → logprob: -8.629213333129883
    5. '    ' → logprob: -9.254213333129883
    6. '
' → logprob: -10.004213333129883
    7. '    
    
' → logprob: -10.504213333129883
    8. ' n' → logprob: -10.754213333129883
    9. '#' → logprob: -10.879213333129883
    10. 'if' → logprob: -10.879213333129883

Token 119: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1484256237745285
    2. '   ' → logprob: -2.398425579071045
    3. ' n' → logprob: -3.148425579071045
    4. 'def' → logprob: -6.398425579071045
    5. 'N' → logprob: -7.023425579071045
    6. '#' (adapté à ' #') → logprob: -7.398425579071045
    7. ' N' → logprob: -9.148426055908203
    8. 't' → logprob: -9.273426055908203
    9. 'if' → logprob: -9.273426055908203
    10. ' def' → logprob: -9.398426055908203

Token 120: ' Formel' (ID: 198895)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02255246601998806
    2. '   ' → logprob: -4.272552490234375
    3. 'N' → logprob: -6.022552490234375
    4. '#' → logprob: -6.147552490234375
    5. ' n' → logprob: -6.397552490234375
    6. 'def' → logprob: -6.647552490234375
    7. 'if' → logprob: -8.397552490234375
    8. 'pipe' → logprob: -8.647552490234375
    9. 't' → logprob: -9.147552490234375
    10. 'dp' → logprob: -9.522552490234375

Token 121: 'lement' (ID: 1254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6923069357872009
    2. 'e' → logprob: -1.0673069953918457
    3. '(' → logprob: -3.1923069953918457
    4. ' ' → logprob: -3.1923069953918457
    5. '=' → logprob: -3.5673069953918457
    6. ':' → logprob: -3.8173069953918457
    7. 'a' → logprob: -5.067306995391846
    8. ' =' → logprob: -5.442306995391846
    9. ')' → logprob: -5.817306995391846
    10. 's' → logprob: -6.192306995391846

Token 122: ',' (ID: 11)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.44299623370170593
    2. ':' → logprob: -1.5679962635040283
    3. ',' → logprob: -2.5679962635040283
    4. '   ' → logprob: -3.6929962635040283
    5. 'def' → logprob: -4.442996025085449
    6. '<|end|>' → logprob: -4.567996025085449
    7. ' ,' → logprob: -4.817996025085449
    8. ' ' → logprob: -5.317996025085449
    9. '<|end|>' → logprob: -5.692996025085449
    10. ' def' → logprob: -5.817996025085449

Token 123: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1360456496477127
    2. ' n' → logprob: -2.5110456943511963
    3. 'n' → logprob: -4.136045455932617
    4. 'def' → logprob: -4.261045455932617
    5. '    ' → logprob: -5.636045455932617
    6. '#' → logprob: -5.761045455932617
    7. ' #' → logprob: -6.011045455932617
    8. ' def' → logprob: -6.761045455932617
    9. ' ' → logprob: -6.886045455932617
    10. ' ' → logprob: -7.011045455932617

Token 124: ' considère' (ID: 176437)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8513035178184509
    2. ' ' → logprob: -1.2263035774230957
    3. ' peut' → logprob: -2.8513035774230957
    4. ' ' → logprob: -3.1013035774230957
    5. ' can' → logprob: -3.6013035774230957
    6. ' def' → logprob: -4.226303577423096
    7. ' n' → logprob: -4.226303577423096
    8. '  ' → logprob: -4.351303577423096
    9. ' a' → logprob: -4.476303577423096
    10. 'def' → logprob: -4.476303577423096

Token 125: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8620750308036804
    2. ' une' → logprob: -1.2370750904083252
    3. ' ' → logprob: -2.612075090408325
    4. ' la' → logprob: -2.862075090408325
    5. ' ' → logprob: -2.862075090408325
    6. ' que' → logprob: -4.237074851989746
    7. '_' → logprob: -4.487074851989746
    8. 'une' → logprob: -4.737074851989746
    9. 'n' → logprob: -4.862074851989746
    10. ' les' → logprob: -5.112074851989746

Token 126: ' sé' (ID: 7462)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.9963812828063965
    2. 'liste' → logprob: -1.6213812828063965
    3. ' liste' → logprob: -1.8713812828063965
    4. ' longue' → logprob: -3.3713812828063965
    5. ' longueur' → logprob: -3.4963812828063965
    6. 's' → logprob: -3.6213812828063965
    7. 'sé' → logprob: -3.9963812828063965
    8. 'def' → logprob: -4.2463812828063965
    9. 'ligne' → logprob: -4.2463812828063965
    10. 'suite' → logprob: -4.2463812828063965

Token 127: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.004402701742947102
    2. 'q' → logprob: -5.6294026374816895
    3. 'quences' → logprob: -8.254403114318848
    4. '   ' → logprob: -8.629403114318848
    5. 'QUENCE' → logprob: -9.004403114318848
    6. '#' → logprob: -10.004403114318848
    7. 'rie' → logprob: -10.379403114318848
    8. '_' → logprob: -10.754403114318848
    9. 'qu' → logprob: -11.129403114318848
    10. '-' → logprob: -11.379403114318848

Token 128: ':
' (ID: 734)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.15717351436615
    2. '<|end|>' → logprob: -1.15717351436615
    3. '   ' → logprob: -2.7821736335754395
    4. ' of' → logprob: -3.4071736335754395
    5. ' ' → logprob: -3.5321736335754395
    6. '[' → logprob: -3.5321736335754395
    7. '<|end|>' → logprob: -3.5321736335754395
    8. ' de' → logprob: -3.6571736335754395
    9. ':' → logprob: -4.0321736335754395
    10. '[]' → logprob: -4.1571736335754395

Token 129: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3358810245990753
    2. ' ' → logprob: -1.585880994796753
    3. '(' → logprob: -4.210881233215332
    4. '_' → logprob: -4.335881233215332
    5. 's' → logprob: -4.835881233215332
    6. '\' → logprob: -4.835881233215332
    7. ',' → logprob: -5.210881233215332
    8. ':' → logprob: -5.585881233215332
    9. 'n' → logprob: -5.710881233215332
    10. ' (' → logprob: -5.835881233215332

Token 130: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22448505461215973
    2. '[' → logprob: -3.099485158920288
    3. '   ' → logprob: -3.099485158920288
    4. '<|end|>' → logprob: -3.849485158920288
    5. '(' → logprob: -4.224484920501709
    6. '    ' → logprob: -4.349484920501709
    7. ' (' → logprob: -4.474484920501709
    8. ' 
' → logprob: -5.349484920501709
    9. ' "' → logprob: -5.349484920501709
    10. '\' → logprob: -5.474484920501709

Token 131: ' p' (ID: 275)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48412978649139404
    2. ' n' → logprob: -1.734129786491394
    3. '   ' → logprob: -1.984129786491394
    4. 'def' → logprob: -4.609129905700684
    5. '<|end|>' → logprob: -4.734129905700684
    6. ' ' → logprob: -4.859129905700684
    7. '#' → logprob: -5.359129905700684
    8. '    ' → logprob: -5.484129905700684
    9. '[n' → logprob: -5.859129905700684
    10. ' #' → logprob: -5.859129905700684

Token 132: '[' (ID: 58)
  Prédit: 'ipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ipes' → logprob: -0.012779914774000645
    2. 'ipe' → logprob: -5.637779712677002
    3. ' =' → logprob: -5.637779712677002
    4. '_' → logprob: -6.637779712677002
    5. '=' → logprob: -6.887779712677002
    6. 'i' → logprob: -7.137779712677002
    7. 'ip' → logprob: -8.26278018951416
    8. 's' → logprob: -8.51278018951416
    9. 'ips' → logprob: -8.63778018951416
    10. 'ipelines' → logprob: -8.63778018951416

Token 133: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6783279180526733
    2. ' =' → logprob: -1.3033279180526733
    3. '0' → logprob: -3.053328037261963
    4. ' ]' → logprob: -3.428328037261963
    5. '[' → logprob: -3.553328037261963
    6. 's' → logprob: -4.053328037261963
    7. ')' → logprob: -4.053328037261963
    8. ',' → logprob: -4.678328037261963
    9. '[i' → logprob: -4.803328037261963
    10. 'i' → logprob: -4.928328037261963

Token 134: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7349569797515869
    2. ':]' → logprob: -1.609956979751587
    3. '],' → logprob: -1.984956979751587
    4. ':' → logprob: -2.234956979751587
    5. ':],' → logprob: -3.109956979751587
    6. ':length' → logprob: -4.609956741333008
    7. ' :' → logprob: -4.859956741333008
    8. ':p' → logprob: -5.359956741333008
    9. ':n' → logprob: -5.484956741333008
    10. '...' → logprob: -6.734956741333008

Token 135: ' j' (ID: 441)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.4901055097579956
    2. 'j' → logprob: -1.6151055097579956
    3. ' j' → logprob: -1.7401055097579956
    4. 'p' → logprob: -2.115105628967285
    5. ' ' → logprob: -2.740105628967285
    6. ' s' → logprob: -3.240105628967285
    7. 's' → logprob: -3.365105628967285
    8. 'q' → logprob: -3.740105628967285
    9. ' q' → logprob: -3.740105628967285
    10. ' '' → logprob: -4.115105628967285

Token 136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00870852917432785
    2. '1' → logprob: -5.133708477020264
    3. ',' → logprob: -6.383708477020264
    4. '0' → logprob: -7.508708477020264
    5. '[i' → logprob: -9.258708953857422
    6. '2' → logprob: -9.508708953857422
    7. 'u' → logprob: -9.508708953857422
    8. 'p' → logprob: -9.883708953857422
    9. 'oints' → logprob: -10.383708953857422
    10. '_' → logprob: -10.508708953857422

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00343708461150527
    2. ']' → logprob: -6.128437042236328
    3. '0' → logprob: -6.753437042236328
    4. ' ' → logprob: -10.378437042236328
    5. 'i' → logprob: -10.628437042236328
    6. '],' → logprob: -10.878437042236328
    7. 's' → logprob: -12.878437042236328
    8. '2' → logprob: -13.378437042236328
    9. ' ]' → logprob: -13.503437042236328
    10. 'n' → logprob: -13.628437042236328

Token 138: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0020435559563338757
    2. ']' → logprob: -6.252043724060059
    3. ' ],' → logprob: -9.502043724060059
    4. '),' → logprob: -11.127043724060059
    5. '],
' → logprob: -12.127043724060059
    6. ',' → logprob: -12.127043724060059
    7. '-' → logprob: -12.627043724060059
    8. '+' → logprob: -12.752043724060059
    9. '   ' → logprob: -13.377043724060059
    10. '1' → logprob: -13.752043724060059

Token 139: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.06205955892801285
    2. 'p' → logprob: -2.8120596408843994
    3. ',' → logprob: -9.81205940246582
    4. ' ' → logprob: -11.18705940246582
    5. ' ,' → logprob: -11.43705940246582
    6. ' ' → logprob: -12.31205940246582
    7. ',p' → logprob: -12.56205940246582
    8. ' j' → logprob: -14.43705940246582
    9. ' "' → logprob: -14.43705940246582
    10. ''p' → logprob: -14.81205940246582

Token 140: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2352385965641588e-05
    2. '2' → logprob: -12.375012397766113
    3. ',' → logprob: -13.000012397766113
    4. '[
' → logprob: -13.750012397766113
    5. '[i' → logprob: -13.875012397766113
    6. ' [' → logprob: -14.250012397766113
    7. '[]' → logprob: -14.875012397766113
    8. '1' → logprob: -15.000012397766113
    9. '```' → logprob: -15.125012397766113
    10. '[p' → logprob: -15.250012397766113

Token 141: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006108908914029598
    2. '2' → logprob: -5.13110876083374
    3. ']' → logprob: -8.881109237670898
    4. '0' → logprob: -10.631109237670898
    5. ' ' → logprob: -11.131109237670898
    6. '   ' → logprob: -14.131109237670898
    7. '],' → logprob: -14.881109237670898
    8. '```' → logprob: -15.256109237670898
    9. '[' → logprob: -15.381109237670898
    10. '  ' → logprob: -15.881109237670898

Token 142: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.024476775899529457
    2. ',' → logprob: -4.149477005004883
    3. ']' → logprob: -4.899477005004883
    4. '),' → logprob: -7.399477005004883
    5. ' ],' → logprob: -8.774477005004883
    6. '   ' → logprob: -10.024477005004883
    7. ' ,' → logprob: -10.524477005004883
    8. 'import' → logprob: -11.024477005004883
    9. '],
' → logprob: -11.024477005004883
    10. ' ' → logprob: -11.399477005004883

Token 143: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0076578580774366856
    2. 'j' → logprob: -5.007658004760742
    3. ' ' → logprob: -8.257658004760742
    4. ' ' → logprob: -8.257658004760742
    5. '...' → logprob: -8.632658004760742
    6. ',' → logprob: -9.382658004760742
    7. ' p' → logprob: -10.382658004760742
    8. ' ,' → logprob: -10.507658004760742
    9. '<|end|>' → logprob: -10.882658004760742
    10. ' ...' → logprob: -11.007658004760742

Token 144: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '[
' → logprob: -13.62500286102295
    3. ' [' → logprob: -15.00000286102295
    4. '#' → logprob: -15.25000286102295
    5. '```' → logprob: -15.75000286102295
    6. '<|end|>' → logprob: -15.87500286102295
    7. 'def' → logprob: -16.500001907348633
    8. '[]' → logprob: -16.750001907348633
    9. '1' → logprob: -17.000001907348633
    10. '   ' → logprob: -17.250001907348633

Token 145: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42975208163261414
    2. '[' → logprob: -1.3047521114349365
    3. '1' → logprob: -2.5547521114349365
    4. ']' → logprob: -8.804752349853516
    5. '[
' → logprob: -9.554752349853516
    6. '0' → logprob: -10.429752349853516
    7. '#' → logprob: -10.679752349853516
    8. ' ' → logprob: -10.804752349853516
    9. '(' → logprob: -11.054752349853516
    10. '```' → logprob: -11.304752349853516

Token 146: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.022471802309155464
    2. ',' → logprob: -4.022471904754639
    3. ']' → logprob: -5.647471904754639
    4. '),' → logprob: -7.522471904754639
    5. '#' → logprob: -8.89747142791748
    6. '   ' → logprob: -9.52247142791748
    7. ' ],' → logprob: -11.39747142791748
    8. ''],' → logprob: -12.52247142791748
    9. 'def' → logprob: -12.77247142791748
    10. 'p' → logprob: -12.89747142791748

Token 147: ' ...,' (ID: 126708)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.04024418070912361
    2. ' ' → logprob: -3.7902441024780273
    3. 'p' → logprob: -4.165244102478027
    4. ' ,' → logprob: -8.165244102478027
    5. ',' → logprob: -8.290244102478027
    6. ' ' → logprob: -8.290244102478027
    7. '   ' → logprob: -9.290244102478027
    8. ' 
' → logprob: -9.540244102478027
    9. ')' → logprob: -9.665244102478027
    10. '    ' → logprob: -10.040244102478027

Token 148: ' j' (ID: 441)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.024285616353154182
    2. 'p' → logprob: -3.7742855548858643
    3. ' ' → logprob: -7.899285793304443
    4. ' ' → logprob: -7.899285793304443
    5. '<|end|>' → logprob: -9.149285316467285
    6. ',' → logprob: -10.149285316467285
    7. '...' → logprob: -10.149285316467285
    8. ')' → logprob: -10.774285316467285
    9. '[' → logprob: -11.399285316467285
    10. ' j' → logprob: -11.399285316467285

Token 149: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.20734242349863e-05
    2. 'p' → logprob: -10.125072479248047
    3. ' [' → logprob: -10.875072479248047
    4. '[p' → logprob: -12.625072479248047
    5. '[
' → logprob: -13.500072479248047
    6. '[i' → logprob: -13.500072479248047
    7. '[-' → logprob: -14.250072479248047
    8. '#' → logprob: -14.500072479248047
    9. '[n' → logprob: -14.500072479248047
    10. ' p' → logprob: -14.500072479248047

Token 150: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1455076038837433
    2. '],' → logprob: -2.145507574081421
    3. ']' → logprob: -4.0205078125
    4. ' -' → logprob: -7.8955078125
    5. '[' → logprob: -9.8955078125
    6. '−' → logprob: -11.8955078125
    7. '][' → logprob: -12.2705078125
    8. '1' → logprob: -12.5205078125
    9. '[-' → logprob: -12.7705078125
    10. ''],' → logprob: -13.0205078125

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. '2' → logprob: -11.625021934509277
    3. ' ' → logprob: -12.250021934509277
    4. 'p' → logprob: -12.875021934509277
    5. '-' → logprob: -13.375021934509277
    6. '```' → logprob: -13.375021934509277
    7. '   ' → logprob: -14.375021934509277
    8. '#' → logprob: -14.500021934509277
    9. ']' → logprob: -15.125021934509277
    10. ')' → logprob: -15.250021934509277

Token 152: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6530036926269531
    2. '),' → logprob: -1.0280036926269531
    3. '],' → logprob: -2.153003692626953
    4. ')' → logprob: -5.403003692626953
    5. 'p' → logprob: -7.653003692626953
    6. ']' → logprob: -7.903003692626953
    7. '#' → logprob: -10.028003692626953
    8. ' ,' → logprob: -10.028003692626953
    9. ',p' → logprob: -10.778003692626953
    10. ')p' → logprob: -10.778003692626953

Token 153: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.01820683293044567
    2. 'p' → logprob: -4.018206596374512
    3. ' ' → logprob: -10.268206596374512
    4. ' ' → logprob: -11.143206596374512
    5. ',' → logprob: -13.768206596374512
    6. ''' → logprob: -14.643206596374512
    7. '	p' → logprob: -14.643206596374512
    8. 'def' → logprob: -14.830706596374512
    9. 's' → logprob: -14.830706596374512
    10. ',p' → logprob: -14.955706596374512

Token 154: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06164146587252617
    2. '[n' → logprob: -3.5616414546966553
    3. ')' → logprob: -4.311641693115234
    4. ']' → logprob: -5.561641693115234
    5. '(' → logprob: -6.061641693115234
    6. '[]' → logprob: -6.186641693115234
    7. '#' → logprob: -6.686641693115234
    8. '(n' → logprob: -6.936641693115234
    9. 's' → logprob: -6.936641693115234
    10. '[
' → logprob: -7.061641693115234

Token 155: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04647643864154816
    2. ')' → logprob: -3.171476364135742
    3. '])' → logprob: -5.921476364135742
    4. ']
' → logprob: -8.171476364135742
    5. 'def' → logprob: -9.296476364135742
    6. '],' → logprob: -9.421476364135742
    7. '#' → logprob: -10.046476364135742
    8. '**' → logprob: -10.171476364135742
    9. ')
' → logprob: -10.296476364135742
    10. '[' → logprob: -10.796476364135742

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03601045906543732
    2. '
' → logprob: -4.661010265350342
    3. 'def' → logprob: -4.911010265350342
    4. '\n' → logprob: -4.911010265350342
    5. '    
' → logprob: -5.911010265350342
    6. ':' → logprob: -6.036010265350342
    7. '```' → logprob: -6.661010265350342
    8. ')' → logprob: -6.911010265350342
    9. '\' → logprob: -7.161010265350342
    10. '[' → logprob: -7.411010265350342

Token 157: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0842263475060463
    2. '
' → logprob: -3.584226369857788
    3. '\n' → logprob: -3.834226369857788
    4. '    
' → logprob: -4.459226131439209
    5. ':' → logprob: -5.709226131439209
    6. '[' → logprob: -5.709226131439209
    7. '\' → logprob: -6.084226131439209
    8. 'def' → logprob: -6.084226131439209
    9. '[n' → logprob: -6.084226131439209
    10. 'n' → logprob: -6.584226131439209

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005122511647641659
    2. 'def' → logprob: -6.130122661590576
    3. '    
' → logprob: -7.005122661590576
    4. 'n' → logprob: -8.005122184753418
    5. '[n' → logprob: -8.255122184753418
    6. '#' → logprob: -8.380122184753418
    7. ')' → logprob: -8.505122184753418
    8. '[' → logprob: -8.755122184753418
    9. ',' → logprob: -8.755122184753418
    10. '
' → logprob: -9.005122184753418

Token 159: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07823684811592102
    2. 'n' → logprob: -2.9532368183135986
    3. 'def' → logprob: -4.078237056732178
    4. 'if' → logprob: -5.828237056732178
    5. '#' (adapté à ' #') → logprob: -6.828237056732178
    6. '    
' → logprob: -7.078237056732178
    7. ')' → logprob: -8.20323657989502
    8. ' n' → logprob: -8.20323657989502
    9. 'import' → logprob: -9.20323657989502
    10. ' if' → logprob: -9.45323657989502

Token 160: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5663806200027466
    2. '   ' → logprob: -1.0663806200027466
    3. ' n' → logprob: -3.191380500793457
    4. 'def' → logprob: -3.191380500793457
    5. 'if' → logprob: -5.566380500793457
    6. ' if' → logprob: -7.316380500793457
    7. '#' → logprob: -7.441380500793457
    8. ' def' → logprob: -8.316380500793457
    9. '    
' → logprob: -8.941380500793457
    10. '	n' → logprob: -9.441380500793457

Token 161: ' veut' (ID: 41653)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4721613824367523
    2. ' ' → logprob: -1.9721614122390747
    3. ' =' → logprob: -2.222161293029785
    4. ' n' → logprob: -3.972161293029785
    5. ' ' → logprob: -4.097161293029785
    6. ':' → logprob: -4.222161293029785
    7. ' :' → logprob: -4.597161293029785
    8. '=' → logprob: -4.847161293029785
    9. '_' → logprob: -4.972161293029785
    10. 'n' → logprob: -4.972161293029785

Token 162: ' décou' (ID: 68302)
  Prédit: ' partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partition' → logprob: -0.2803336977958679
    2. 'partition' → logprob: -2.4053337574005127
    3. ' décou' → logprob: -2.9053337574005127
    4. '   ' → logprob: -4.405333518981934
    5. ' ' → logprob: -4.530333518981934
    6. ' créer' → logprob: -5.030333518981934
    7. ' segment' → logprob: -5.030333518981934
    8. ' choisir' → logprob: -5.155333518981934
    9. ' part' → logprob: -5.405333518981934
    10. 'part' → logprob: -5.530333518981934

Token 163: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.07118117064237595
    2. 'p' → logprob: -2.696181058883667
    3. 'page' → logprob: -7.571181297302246
    4. 'pe' → logprob: -8.196181297302246
    5. '   ' → logprob: -9.571181297302246
    6. '```' → logprob: -9.696181297302246
    7. '``' → logprob: -9.946181297302246
    8. '#' → logprob: -10.821181297302246
    9. '	' → logprob: -10.946181297302246
    10. 'pper' → logprob: -11.071181297302246

Token 164: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.07559517025947571
    2. ' ' → logprob: -3.9505951404571533
    3. ' en' → logprob: -4.075595378875732
    4. 'la' → logprob: -4.575595378875732
    5. ' le' → logprob: -5.075595378875732
    6. ' l' → logprob: -5.075595378875732
    7. 'l' → logprob: -6.075595378875732
    8. 'au' → logprob: -6.700595378875732
    9. ' au' → logprob: -6.700595378875732
    10. 'le' → logprob: -7.075595378875732

Token 165: ' sé' (ID: 7462)
  Prédit: ' sé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.439191609621048
    2. ' ' → logprob: -1.9391915798187256
    3. ' sequence' → logprob: -2.1891915798187256
    4. 'sé' → logprob: -3.0641915798187256
    5. 'sequence' → logprob: -3.9391915798187256
    6. '_' → logprob: -4.814191818237305
    7. ' ' → logprob: -5.314191818237305
    8. '_s' → logprob: -5.814191818237305
    9. 's' → logprob: -6.064191818237305
    10. ' ligne' → logprob: -6.189191818237305

Token 166: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.005537777207791805
    2. 'q' → logprob: -5.255537986755371
    3. 'quences' → logprob: -8.380537986755371
    4. 'rie' → logprob: -9.755537986755371
    5. 'QUENCE' → logprob: -12.630537986755371
    6. '
' → logprob: -13.005537986755371
    7. '#' → logprob: -13.130537986755371
    8. 'quent' → logprob: -13.505537986755371
    9. 'qu' → logprob: -13.505537986755371
    10. 'que' → logprob: -14.005537986755371

Token 167: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.035014696419239044
    2. ' ' → logprob: -3.9100146293640137
    3. '.' → logprob: -5.660014629364014
    4. ',' → logprob: -5.660014629364014
    5. 'en' → logprob: -6.535014629364014
    6. '"' → logprob: -7.410014629364014
    7. ')' → logprob: -7.535014629364014
    8. '...' → logprob: -7.660014629364014
    9. ' ,' → logprob: -7.910014629364014
    10. '   ' → logprob: -7.910014629364014

Token 168: ' s' (ID: 265)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.42823874950408936
    2. 'segments' → logprob: -1.5532387495040894
    3. ' des' → logprob: -2.303238868713379
    4. ' plusieurs' → logprob: -3.678238868713379
    5. 'des' → logprob: -6.178238868713379
    6. ' morceaux' → logprob: -6.178238868713379
    7. '```' → logprob: -6.678238868713379
    8. ' espaces' → logprob: -6.678238868713379
    9. ' un' → logprob: -7.053238868713379
    10. ' k' → logprob: -7.053238868713379

Token 169: ' segments' (ID: 33749)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.04810714349150658
    2. 'egment' → logprob: -4.298107147216797
    3. 'ég' → logprob: -4.548107147216797
    4. 'é' → logprob: -5.048107147216797
    5. 'ous' → logprob: -5.298107147216797
    6. 'égr' → logprob: -6.423107147216797
    7. '```' → logprob: -6.923107147216797
    8. '_' → logprob: -7.048107147216797
    9. 'paces' → logprob: -7.173107147216797
    10. 'e' → logprob: -7.298107147216797

Token 170: ' dis' (ID: 829)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9817267060279846
    2. '   ' → logprob: -1.2317266464233398
    3. '<|end|>' → logprob: -2.10672664642334
    4. ')' → logprob: -2.73172664642334
    5. '_' → logprob: -3.35672664642334
    6. ' ,' → logprob: -3.60672664642334
    7. 's' → logprob: -4.10672664642334
    8. ' ' → logprob: -4.23172664642334
    9. '.' → logprob: -4.48172664642334
    10. '[' → logprob: -4.98172664642334

Token 171: 'j' (ID: 73)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.5011517405509949
    2. '=' → logprob: -1.6261518001556396
    3. 't' → logprob: -2.3761518001556396
    4. 'j' → logprob: -4.0011515617370605
    5. 'crets' → logprob: -4.1261515617370605
    6. 'cont' → logprob: -4.1261515617370605
    7. 'cut' → logprob: -4.3761515617370605
    8. 'joint' → logprob: -4.8761515617370605
    9. 's' → logprob: -5.2511515617370605
    10. ' =' → logprob: -5.7511515617370605

Token 172: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.7885701656341553
    2. 'oint' → logprob: -2.1635701656341553
    3. 't' → logprob: -2.5385701656341553
    4. 'contin' → logprob: -2.6635701656341553
    5. 'crets' → logprob: -3.0385701656341553
    6. 'c' → logprob: -3.2885701656341553
    7. '```' → logprob: -3.5385701656341553
    8. 'j' → logprob: -3.9135701656341553
    9. '_' → logprob: -4.038570404052734
    10. '\' → logprob: -4.163570404052734

Token 173: ' cont' (ID: 836)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: 'igus' (ID: 79914)
  Prédit: 'igus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igus' → logprob: -0.15540479123592377
    2. 'in' → logprob: -3.280404806137085
    3. 'igu' → logprob: -3.530404806137085
    4. 'inu' → logprob: -3.780404806137085
    5. 'iguous' → logprob: -4.030404567718506
    6. 'ig' → logprob: -4.280404567718506
    7. 'inue' → logprob: -4.905404567718506
    8. '_' → logprob: -6.155404567718506
    9. 'u' → logprob: -6.405404567718506
    10. '   ' → logprob: -6.405404567718506

Token 175: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9118121862411499
    2. ',' → logprob: -1.41181218624115
    3. ' :' → logprob: -2.2868123054504395
    4. ' ' → logprob: -2.5368123054504395
    5. '.' → logprob: -2.9118123054504395
    6. '<|end|>' → logprob: -3.0368123054504395
    7. '   ' → logprob: -3.4118123054504395
    8. '[' → logprob: -5.0368123054504395
    9. ' ,' → logprob: -5.2868123054504395
    10. 's' → logprob: -5.4118123054504395

Token 176: ' chaque' (ID: 21194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057207755744457245
    2. '    ' → logprob: -4.4322075843811035
    3. '<|end|>' → logprob: -4.4322075843811035
    4. ' ' → logprob: -4.5572075843811035
    5. '\' → logprob: -5.5572075843811035
    6. '\n' → logprob: -5.6822075843811035
    7. '[' → logprob: -5.6822075843811035
    8. '```' → logprob: -6.0572075843811035
    9. ' 
' → logprob: -6.5572075843811035
    10. '    
' → logprob: -6.8072075843811035

Token 177: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.7936323285102844
    2. '_' → logprob: -1.2936322689056396
    3. ' s' → logprob: -2.6686322689056396
    4. 'segment' → logprob: -2.9186322689056396
    5. ' _' → logprob: -3.1686322689056396
    6. '_segment' → logprob: -3.2936322689056396
    7. 's' → logprob: -3.4186322689056396
    8. '_s' → logprob: -5.168632507324219
    9. ' =' → logprob: -5.543632507324219
    10. '[' → logprob: -6.043632507324219

Token 178: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.936698317527771
    2. '_' → logprob: -2.4366984367370605
    3. '<|end|>' → logprob: -2.4366984367370605
    4. ',' → logprob: -2.5616984367370605
    5. '   ' → logprob: -2.6866984367370605
    6. ' ,' → logprob: -3.0616984367370605
    7. '[' → logprob: -3.4366984367370605
    8. ' =' → logprob: -3.4366984367370605
    9. ' _' → logprob: -3.8116984367370605
    10. 's' → logprob: -4.1866984367370605

Token 180: ' #' (ID: 1069)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05395517125725746
    2. '[' → logprob: -3.803955078125
    3. ' ' → logprob: -4.928955078125
    4. ',' → logprob: -5.178955078125
    5. 's' → logprob: -5.428955078125
    6. ' _' → logprob: -5.803955078125
    7. ')' → logprob: -6.178955078125
    8. '   ' → logprob: -6.678955078125
    9. ' ,' → logprob: -7.178955078125
    10. '=' → logprob: -7.178955078125

Token 181: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8701635599136353
    2. '   ' → logprob: -1.8701635599136353
    3. ' est' → logprob: -2.7451634407043457
    4. ' contient' → logprob: -3.1201634407043457
    5. ',' → logprob: -3.3701634407043457
    6. 'def' → logprob: -3.6201634407043457
    7. '\' → logprob: -3.8701634407043457
    8. ' a' → logprob: -3.9951634407043457
    9. 'cont' → logprob: -3.9951634407043457
    10. '#' → logprob: -4.120163440704346

Token 182: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.296649694442749
    2. ' soit' → logprob: -1.921649694442749
    3. ' composé' → logprob: -1.921649694442749
    4. ' une' → logprob: -2.421649694442749
    5. ' constitué' → logprob: -2.546649694442749
    6. ' form' → logprob: -2.671649694442749
    7. ' composée' → logprob: -3.921649694442749
    8. 'def' → logprob: -4.171649932861328
    9. ' ' → logprob: -4.296649932861328
    10. 'form' → logprob: -4.296649932861328

Token 183: ' ensemble' (ID: 33081)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.695336103439331
    2. 'p' → logprob: -2.070336103439331
    3. ' tuy' → logprob: -2.070336103439331
    4. 'tuple' → logprob: -2.320336103439331
    5. ' tuple' → logprob: -2.570336103439331
    6. 'segment' → logprob: -2.570336103439331
    7. ' segment' → logprob: -2.695336103439331
    8. 's' → logprob: -2.945336103439331
    9. ' p' → logprob: -3.695336103439331
    10. 'tu' → logprob: -3.695336103439331

Token 184: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6651908755302429
    2. ' d' → logprob: -0.7901908755302429
    3. ' of' → logprob: -4.915190696716309
    4. '[' → logprob: -5.415190696716309
    5. ' contiguous' → logprob: -5.790190696716309
    6. ' ' → logprob: -6.165190696716309
    7. 'd' → logprob: -6.165190696716309
    8. ' =' → logprob: -6.415190696716309
    9. '_' → logprob: -6.790190696716309
    10. '   ' → logprob: -7.040190696716309

Token 185: ' tuy' (ID: 45164)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.8321263194084167
    2. 't' → logprob: -1.5821263790130615
    3. ' éléments' → logprob: -1.7071263790130615
    4. 'p' → logprob: -3.0821263790130615
    5. ' p' → logprob: -3.3321263790130615
    6. ' tuy' → logprob: -3.5821263790130615
    7. 'pipes' → logprob: -4.707126140594482
    8. '```' → logprob: -4.957126140594482
    9. 'tokens' → logprob: -5.082126140594482
    10. ' pipes' → logprob: -5.332126140594482

Token 186: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -1.0355169773101807
    2. 'x' → logprob: -1.5355169773101807
    3. 'pipes' → logprob: -2.1605169773101807
    4. 'p' → logprob: -2.4105169773101807
    5. 'au' → logprob: -2.6605169773101807
    6. '_' → logprob: -3.5355169773101807
    7. '   ' → logprob: -3.6605169773101807
    8. '```' → logprob: -3.9105169773101807
    9. '[' → logprob: -4.410516738891602
    10. ']' → logprob: -4.785516738891602

Token 187: ' reli' (ID: 10856)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3298916518688202
    2. ' et' → logprob: -2.3298916816711426
    3. '   ' → logprob: -2.9548916816711426
    4. ' ,' → logprob: -3.2048916816711426
    5. '<|end|>' → logprob: -3.7048916816711426
    6. 's' → logprob: -4.329891681671143
    7. '[' → logprob: -4.454891681671143
    8. ' p' → logprob: -4.954891681671143
    9. ')' → logprob: -5.204891681671143
    10. ' (' → logprob: -5.454891681671143

Token 188: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.08141669631004333
    2. 'é' → logprob: -2.581416606903076
    3. 'e' → logprob: -7.081416606903076
    4. 'év' → logprob: -7.706416606903076
    5. 'ev' → logprob: -7.831416606903076
    6. '   ' → logprob: -8.581417083740234
    7. 'eux' → logprob: -8.706417083740234
    8. 'g' → logprob: -8.706417083740234
    9. 'es' → logprob: -9.831417083740234
    10. '```' → logprob: -10.206417083740234

Token 189: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1014719158411026
    2. ' entre' → logprob: -3.1014719009399414
    3. ',' → logprob: -3.8514719009399414
    4. '   ' → logprob: -3.9764719009399414
    5. 'par' → logprob: -5.851471900939941
    6. '```' → logprob: -5.976471900939941
    7. ' ' → logprob: -6.476471900939941
    8. ' et' → logprob: -7.851471900939941
    9. '[' → logprob: -7.851471900939941
    10. ' by' → logprob: -8.101471900939941

Token 190: ' tous' (ID: 10688)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.0705762729048729
    2. 'des' → logprob: -3.5705761909484863
    3. ' un' → logprob: -3.8205761909484863
    4. 'un' → logprob: -5.695576190948486
    5. 'au' → logprob: -5.820576190948486
    6. ' au' → logprob: -5.945576190948486
    7. ' j' → logprob: -6.070576190948486
    8. ' ' → logprob: -6.570576190948486
    9. 'j' → logprob: -6.695576190948486
    10. ' espaces' → logprob: -6.945576190948486

Token 191: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4330732226371765
    2. 'les' → logprob: -1.0580732822418213
    3. ' ' → logprob: -6.433073043823242
    4. 'l' → logprob: -7.808073043823242
    5. ' des' → logprob: -8.058073043823242
    6. ' the' → logprob: -8.183073043823242
    7. ' l' → logprob: -8.183073043823242
    8. '   ' → logprob: -8.558073043823242
    9. '```' → logprob: -8.683073043823242
    10. '<|end|>' → logprob: -9.058073043823242

Token 192: ' joints' (ID: 47223)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.0918738842010498
    2. 'j' → logprob: -1.5918738842010498
    3. ' joints' → logprob: -1.5918738842010498
    4. 'tokens' → logprob: -2.96687388420105
    5. ' éléments' → logprob: -3.21687388420105
    6. 'élé' → logprob: -3.46687388420105
    7. '```' → logprob: -3.59187388420105
    8. ' tokens' → logprob: -4.341874122619629
    9. 't' → logprob: -4.841874122619629
    10. ' connectors' → logprob: -4.966874122619629

Token 193: ' entre' (ID: 3853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' eux' (ID: 36371)
  Prédit: 'eux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eux' → logprob: -0.42275530099868774
    2. ' eux' → logprob: -1.172755241394043
    3. 'e' → logprob: -4.297755241394043
    4. 'i' → logprob: -4.422755241394043
    5. 'les' → logprob: -5.922755241394043
    6. ' i' → logprob: -6.422755241394043
    7. ' les' → logprob: -7.047755241394043
    8. 'ces' → logprob: -7.047755241394043
    9. '```' → logprob: -7.422755241394043
    10. ' ' → logprob: -8.047755241394043

Token 195: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06959924101829529
    2. ',' → logprob: -3.319599151611328
    3. ':' → logprob: -4.319599151611328
    4. '.' → logprob: -4.819599151611328
    5. 'def' → logprob: -5.444599151611328
    6. ')' → logprob: -5.819599151611328
    7. '[' → logprob: -7.319599151611328
    8. '):' → logprob: -8.819599151611328
    9. '    
' → logprob: -8.944599151611328
    10. 'import' → logprob: -9.319599151611328

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05797548219561577
    2. '\' → logprob: -4.3079752922058105
    3. ')' → logprob: -4.6829752922058105
    4. '    
' → logprob: -5.0579752922058105
    5. '\n' → logprob: -5.1829752922058105
    6. ':' → logprob: -5.5579752922058105
    7. '[' → logprob: -5.9329752922058105
    8. '  
' → logprob: -6.1829752922058105
    9. ' ' → logprob: -6.3079752922058105
    10. ' 
' → logprob: -6.3079752922058105

Token 197: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021097762510180473
    2. 'def' → logprob: -4.396097660064697
    3. ')' → logprob: -5.521097660064697
    4. '.' → logprob: -7.021097660064697
    5. '    
' → logprob: -7.021097660064697
    6. ':' → logprob: -7.271097660064697
    7. ',' → logprob: -7.396097660064697
    8. '[' → logprob: -8.021098136901855
    9. '#' (adapté à ' #') → logprob: -8.646098136901855
    10. 'n' → logprob: -9.271098136901855

Token 198: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012900428846478462
    2. 'def' → logprob: -5.387900352478027
    3. ')' → logprob: -5.887900352478027
    4. '(' → logprob: -6.012900352478027
    5. ':' → logprob: -6.762900352478027
    6. '\' → logprob: -7.512900352478027
    7. '[' → logprob: -8.262900352478027
    8. '_' → logprob: -8.512900352478027
    9. '    
' → logprob: -8.512900352478027
    10. '#' → logprob: -9.262900352478027

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013444004580378532
    2. '    
' → logprob: -7.626344203948975
    3. 'def' → logprob: -7.876344203948975
    4. ')' → logprob: -8.751344680786133
    5. '<|end|>' → logprob: -9.251344680786133
    6. '<|end|>' → logprob: -9.751344680786133
    7. 'import' → logprob: -10.001344680786133
    8. '    ' → logprob: -10.626344680786133
    9. '#' → logprob: -11.001344680786133
    10. '\' → logprob: -11.376344680786133

Token 200: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003866704646497965
    2. 'def' → logprob: -6.628866672515869
    3. ')' → logprob: -7.003866672515869
    4. '    
' → logprob: -7.503866672515869
    5. 'n' → logprob: -7.878866672515869
    6. '    ' → logprob: -8.628867149353027
    7. '#' (adapté à ' #') → logprob: -8.628867149353027
    8. 'import' → logprob: -9.878867149353027
    9. '  ' → logprob: -10.503867149353027
    10. ' n' → logprob: -10.503867149353027

Token 201: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8186131119728088
    2. '   ' → logprob: -0.9436131119728088
    3. 'def' → logprob: -2.443613052368164
    4. ' n' → logprob: -3.068613052368164
    5. 'dp' → logprob: -3.568613052368164
    6. '#' → logprob: -5.568613052368164
    7. ' dp' → logprob: -7.068613052368164
    8. ' def' → logprob: -7.193613052368164
    9. 'from' → logprob: -7.443613052368164
    10. ' for' → logprob: -7.943613052368164

Token 202: ' peut' (ID: 9216)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.583760142326355
    2. 'def' → logprob: -1.333760142326355
    3. ' def' → logprob: -2.4587602615356445
    4. '   ' → logprob: -3.2087602615356445
    5. '=' → logprob: -4.8337602615356445
    6. ' n' → logprob: -4.8337602615356445
    7. ' ' → logprob: -5.3337602615356445
    8. '_' → logprob: -5.4587602615356445
    9. '[' → logprob: -5.8337602615356445
    10. '    ' → logprob: -5.9587602615356445

Token 203: ' choisir' (ID: 47004)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.8076225519180298
    2. ' décou' → logprob: -1.9326225519180298
    3. ' partition' → logprob: -2.1826224327087402
    4. ' ' → logprob: -2.5576224327087402
    5. ' utiliser' → logprob: -3.3076224327087402
    6. 'penser' → logprob: -3.3076224327087402
    7. 'contin' → logprob: -3.4326224327087402
    8. ' considérer' → logprob: -3.4326224327087402
    9. '   ' → logprob: -3.6826224327087402
    10. 'util' → logprob: -3.9326224327087402

Token 204: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1792459934949875
    2. ' soit' → logprob: -3.054245948791504
    3. ' ' → logprob: -3.304245948791504
    4. 'de' → logprob: -3.304245948791504
    5. '   ' → logprob: -4.679245948791504
    6. 'd' → logprob: -5.054245948791504
    7. '  ' → logprob: -5.679245948791504
    8. ' d' → logprob: -5.679245948791504
    9. '    ' → logprob: -6.054245948791504
    10. 's' → logprob: -6.429245948791504

Token 205: ''utiliser' (ID: 133355)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.9752403497695923
    2. ' couper' → logprob: -2.9752402305603027
    3. 'ec' → logprob: -3.1002402305603027
    4. 'é' → logprob: -3.2252402305603027
    5. ' décou' → logprob: -3.2252402305603027
    6. 'e' → logprob: -3.2252402305603027
    7. ''' → logprob: -3.3502402305603027
    8. ' continuer' → logprob: -3.4752402305603027
    9. ''aj' → logprob: -3.4752402305603027
    10. ''utiliser' → logprob: -3.4752402305603027

Token 206: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -1.1372162103652954
    2. ' ' → logprob: -1.6372162103652954
    3. ' un' → logprob: -2.012216091156006
    4. ' or' → logprob: -2.137216091156006
    5. ' les' → logprob: -3.262216091156006
    6. ' soit' → logprob: -3.387216091156006
    7. ' tous' → logprob: -3.887216091156006
    8. 'un' → logprob: -4.012216091156006
    9. ' le' → logprob: -4.262216091156006
    10. ' l' → logprob: -4.262216091156006

Token 207: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.4579237699508667
    2. ' ou' → logprob: -2.0829238891601562
    3. '#' → logprob: -2.3329238891601562
    4. 'pas' → logprob: -3.5829238891601562
    5. '   ' → logprob: -3.7079238891601562
    6. ' un' → logprob: -3.8329238891601562
    7. '```' → logprob: -4.332923889160156
    8. ' #' → logprob: -4.582923889160156
    9. 'not' → logprob: -5.082923889160156
    10. ' ' → logprob: -5.207923889160156

Token 208: ' les' (ID: 1341)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.35569366812705994
    2. ' les' → logprob: -1.7306936979293823
    3. ' des' → logprob: -2.9806935787200928
    4. 'un' → logprob: -4.105693817138672
    5. ' ' → logprob: -4.605693817138672
    6. ' chaque' → logprob: -4.730693817138672
    7. ' l' → logprob: -4.855693817138672
    8. 'les' → logprob: -5.230693817138672
    9. 't' → logprob: -5.980693817138672
    10. ' le' → logprob: -6.105693817138672

Token 209: ' joints' (ID: 47223)
  Prédit: ' joints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joints' → logprob: -0.548656165599823
    2. ' espaces' → logprob: -2.4236562252044678
    3. '_' → logprob: -2.5486562252044678
    4. ' j' → logprob: -2.7986562252044678
    5. '_j' → logprob: -3.0486562252044678
    6. ' segments' → logprob: -3.0486562252044678
    7. 'j' → logprob: -3.9236562252044678
    8. ' tuy' → logprob: -4.423655986785889
    9. ' ' → logprob: -4.673655986785889
    10. ' _' → logprob: -4.673655986785889

Token 210: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22638686001300812
    2. 'def' → logprob: -2.351386785507202
    3. '.' → logprob: -2.851386785507202
    4. ',' → logprob: -4.101387023925781
    5. ')' → logprob: -4.851387023925781
    6. '
' → logprob: -5.726387023925781
    7. '    
' → logprob: -5.976387023925781
    8. ':' → logprob: -5.976387023925781
    9. '.
' → logprob: -6.351387023925781
    10. ')
' → logprob: -6.351387023925781

Token 211: ' rel' (ID: 1536)
  Prédit: ' sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.527912974357605
    2. ' connecter' → logprob: -2.0279130935668945
    3. ' rel' → logprob: -2.1529130935668945
    4. 'sé' → logprob: -2.6529130935668945
    5. 'connect' → logprob: -4.7779130935668945
    6. 'former' → logprob: -4.9029130935668945
    7. ' les' → logprob: -5.1529130935668945
    8. ' décou' → logprob: -5.1529130935668945
    9. ' couper' → logprob: -5.2779130935668945
    10. ' ' → logprob: -5.4029130935668945

Token 212: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.003620743053033948
    2. 'ayer' → logprob: -6.878620624542236
    3. 'e' → logprob: -7.503620624542236
    4. 'er' → logprob: -7.753620624542236
    5. 'a' → logprob: -8.378621101379395
    6. 'uire' → logprob: -9.128621101379395
    7. 'u' → logprob: -9.378621101379395
    8. 'ie' → logprob: -9.378621101379395
    9. 'ever' → logprob: -9.503621101379395
    10. 'aisser' → logprob: -9.503621101379395

Token 213: ' certains' (ID: 30681)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.12895147502422333
    2. 'les' → logprob: -2.6289515495300293
    3. ' deux' → logprob: -4.253951549530029
    4. ' des' → logprob: -4.503951549530029
    5. ' eux' → logprob: -5.253951549530029
    6. ' ' → logprob: -5.503951549530029
    7. ' certains' → logprob: -6.378951549530029
    8. ' i' → logprob: -6.628951549530029
    9. 't' → logprob: -6.878951549530029
    10. ' le' → logprob: -7.128951549530029

Token 214: ' tuy' (ID: 45164)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.6447881460189819
    2. ' tuy' → logprob: -0.8947881460189819
    3. 'segments' → logprob: -3.2697882652282715
    4. 't' → logprob: -4.0197882652282715
    5. ' espaces' → logprob: -5.6447882652282715
    6. ' pipes' → logprob: -6.1447882652282715
    7. ' tubes' → logprob: -6.8947882652282715
    8. ' éléments' → logprob: -7.7697882652282715
    9. ' joints' → logprob: -8.019787788391113
    10. 'pipes' → logprob: -8.019787788391113

Token 215: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.022809093818068504
    2. 'x' → logprob: -3.8978090286254883
    3. 'au' → logprob: -7.147809028625488
    4. '   ' → logprob: -7.522809028625488
    5. 'es' → logprob: -8.022809028625488
    6. 'p' → logprob: -8.772809028625488
    7. '[' → logprob: -10.147809028625488
    8. '```' → logprob: -10.147809028625488
    9. 'oux' → logprob: -10.272809028625488
    10. '##' → logprob: -10.272809028625488

Token 216: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0848335549235344
    2. 'def' → logprob: -3.2098336219787598
    3. '.' → logprob: -3.8348336219787598
    4. ',' → logprob: -4.83483362197876
    5. ')' → logprob: -5.20983362197876
    6. ':' → logprob: -6.70983362197876
    7. '    
' → logprob: -7.20983362197876
    8. '#' → logprob: -7.33483362197876
    9. ')
' → logprob: -7.83483362197876
    10. '
' → logprob: -8.459833145141602

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05380720645189285
    2. ')' → logprob: -3.803807258605957
    3. '<|end|>' → logprob: -3.928807258605957
    4. '    
' → logprob: -5.553807258605957
    5. 'def' → logprob: -6.553807258605957
    6. '<|end|>' → logprob: -7.053807258605957
    7. ',' → logprob: -7.178807258605957
    8. ':' → logprob: -7.303807258605957
    9. '.' → logprob: -7.553807258605957
    10. '\' → logprob: -7.678807258605957

Token 218: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005695434287190437
    2. ')' → logprob: -5.755695343017578
    3. '    
' → logprob: -7.380695343017578
    4. '<|end|>' → logprob: -7.380695343017578
    5. 'def' → logprob: -7.755695343017578
    6. '.' → logprob: -8.255695343017578
    7. ',' → logprob: -8.505695343017578
    8. '<|end|>' → logprob: -9.630695343017578
    9. '\' → logprob: -9.755695343017578
    10. '#' → logprob: -10.130695343017578

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013744421303272247
    2. '<|end|>' → logprob: -5.013744354248047
    3. ')' → logprob: -6.138744354248047
    4. 'def' → logprob: -6.388744354248047
    5. '<|end|>' → logprob: -6.513744354248047
    6. '    
' → logprob: -7.263744354248047
    7. '    ' → logprob: -8.263744354248047
    8. '\' → logprob: -9.263744354248047
    9. '...' → logprob: -9.513744354248047
    10. '#' → logprob: -9.513744354248047

Token 220: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005226882640272379
    2. 'def' → logprob: -6.255227088928223
    3. 'n' → logprob: -6.505227088928223
    4. '    
' → logprob: -7.755227088928223
    5. ')' → logprob: -7.880227088928223
    6. 'for' → logprob: -8.755227088928223
    7. '\' → logprob: -9.130227088928223
    8. 'dp' → logprob: -9.255227088928223
    9. ' n' → logprob: -9.630227088928223
    10. '    ' → logprob: -9.630227088928223

Token 221: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2583540976047516
    2. 'n' → logprob: -2.0083541870117188
    3. ' n' → logprob: -3.3833541870117188
    4. 'dp' → logprob: -3.6333541870117188
    5. 'def' → logprob: -3.6333541870117188
    6. ' dp' → logprob: -6.383354187011719
    7. '    
' → logprob: -6.883354187011719
    8. ' for' → logprob: -7.133354187011719
    9. '#' → logprob: -7.258354187011719
    10. 'for' → logprob: -7.883354187011719

Token 222: ' valeur' (ID: 41664)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6893836259841919
    2. ' def' → logprob: -1.939383625984192
    3. 'n' → logprob: -2.6893835067749023
    4. ' suite' → logprob: -2.6893835067749023
    5. ' n' → logprob: -3.1893835067749023
    6. ' sé' → logprob: -3.4393835067749023
    7. '#' → logprob: -3.9393835067749023
    8. ' taille' → logprob: -4.064383506774902
    9. ' longueur' → logprob: -4.314383506774902
    10. ' #' → logprob: -4.564383506774902

Token 223: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0100525617599487
    2. ' ' → logprob: -1.8850525617599487
    3. 's' → logprob: -2.7600526809692383
    4. '_' → logprob: -2.8850526809692383
    5. ' s' → logprob: -3.2600526809692383
    6. ' maximale' → logprob: -3.2600526809692383
    7. 'def' → logprob: -3.3850526809692383
    8. '<|end|>' → logprob: -3.5100526809692383
    9. ' de' → logprob: -3.6350526809692383
    10. ' finale' → logprob: -3.8850526809692383

Token 224: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.031968243420124054
    2. ' maxim' → logprob: -3.906968355178833
    3. 'optim' → logprob: -4.781968116760254
    4. 'calcul' → logprob: -7.656968116760254
    5. 'part' → logprob: -7.781968116760254
    6. ' max' → logprob: -7.906968116760254
    7. ' optimiser' → logprob: -7.906968116760254
    8. 'aj' → logprob: -8.156968116760254
    9. 'maximize' → logprob: -8.281968116760254
    10. 'prendre' → logprob: -8.906968116760254

Token 225: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.03854527696967125
    2. 'izer' → logprob: -3.4135453701019287
    3. '#' → logprob: -6.66354513168335
    4. 'ize' → logprob: -7.16354513168335
    5. 'ser' → logprob: -7.28854513168335
    6. 'er' → logprob: -7.53854513168335
    7. 'a' → logprob: -8.413545608520508
    8. 'is' → logprob: -8.538545608520508
    9. 'al' → logprob: -8.538545608520508
    10. '=' → logprob: -8.913545608520508

Token 226: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40961092710494995
    2. ' est' → logprob: -1.5346109867095947
    3. ',' → logprob: -3.4096109867095947
    4. '=' → logprob: -3.5346109867095947
    5. ':' → logprob: -4.534610748291016
    6. '   ' → logprob: -4.659610748291016
    7. ' ' → logprob: -4.784610748291016
    8. '_' → logprob: -5.409610748291016
    9. 'max' → logprob: -5.659610748291016
    10. 'def' → logprob: -5.909610748291016

Token 227: ':
' (ID: 734)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4089769423007965
    2. '   ' → logprob: -1.5339769124984741
    3. 's' → logprob: -2.9089770317077637
    4. '(s' → logprob: -3.7839770317077637
    5. ' (' → logprob: -4.408977031707764
    6. ' segments' → logprob: -4.408977031707764
    7. '"' → logprob: -5.158977031707764
    8. ' "' → logprob: -5.658977031707764
    9. 'segments' → logprob: -6.033977031707764
    10. ' le' → logprob: -6.783977031707764

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09832584857940674
    2. ' s' → logprob: -3.348325729370117
    3. 's' → logprob: -4.723325729370117
    4. ' (' → logprob: -4.723325729370117
    5. ' "' → logprob: -4.973325729370117
    6. '\n' → logprob: -5.098325729370117
    7. '(s' → logprob: -5.223325729370117
    8. '"' → logprob: -5.473325729370117
    9. ' "\' → logprob: -5.723325729370117
    10. '"\' → logprob: -6.348325729370117

Token 229: ' #' (ID: 1069)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.071617603302002
    2. ' (' → logprob: -1.696617603302002
    3. '   ' → logprob: -1.821617603302002
    4. 's' → logprob: -2.446617603302002
    5. ' )' → logprob: -3.696617603302002
    6. '(' → logprob: -3.696617603302002
    7. '\n' → logprob: -3.696617603302002
    8. ' "' → logprob: -3.821617603302002
    9. ' \' → logprob: -3.946617603302002
    10. ' max' → logprob: -4.196617603302002

Token 230: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.23467357456684113
    2. ' (' → logprob: -3.234673500061035
    3. 's' → logprob: -3.484673500061035
    4. ' segments' → logprob: -3.484673500061035
    5. ' max' → logprob: -3.609673500061035
    6. '   ' → logprob: -3.734673500061035
    7. '(s' → logprob: -4.234673500061035
    8. ' "' → logprob: -4.859673500061035
    9. ' dp' → logprob: -5.359673500061035
    10. 'segments' → logprob: -5.984673500061035

Token 231: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9304463863372803
    2. '(s' → logprob: -1.8054463863372803
    3. ' s' → logprob: -2.1804463863372803
    4. 'segments' → logprob: -2.1804463863372803
    5. ' (' → logprob: -2.5554463863372803
    6. ' segments' → logprob: -2.8054463863372803
    7. ' nombre' → logprob: -3.4304463863372803
    8. 'nombre' (adapté à ' nombre') → logprob: -3.8054463863372803
    9. '(nombre' → logprob: -4.930446624755859
    10. '   ' → logprob: -5.430446624755859

Token 232: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.6566296219825745
    2. '_des' → logprob: -1.6566295623779297
    3. '_' → logprob: -1.7816295623779297
    4. '_segments' → logprob: -2.7816295623779297
    5. ' de' → logprob: -3.1566295623779297
    6. ' _' → logprob: -4.90662956237793
    7. '_d' → logprob: -5.78162956237793
    8. '_s' → logprob: -6.40662956237793
    9. 'de' → logprob: -6.53162956237793
    10. ' des' → logprob: -7.15662956237793

Token 233: '_segments' (ID: 142925)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6819415092468262
    2. '_segments' → logprob: -0.9319415092468262
    3. ' segments' → logprob: -2.431941509246826
    4. 's' → logprob: -4.931941509246826
    5. '_s' → logprob: -6.431941509246826
    6. '_' → logprob: -6.431941509246826
    7. '_segment' → logprob: -7.306941509246826
    8. 'segment' → logprob: -7.681941509246826
    9. ' s' → logprob: -8.306941986083984
    10. '_seg' → logprob: -8.431941986083984

Token 234: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008742213249206543
    2. '*' → logprob: -4.758742332458496
    3. ' *
' → logprob: -9.758742332458496
    4. ' ' → logprob: -10.383742332458496
    5. ',' → logprob: -11.758742332458496
    6. 'def' → logprob: -12.133742332458496
    7. '   ' → logprob: -12.383742332458496
    8. ' #' → logprob: -12.633742332458496
    9. ')' → logprob: -12.633742332458496
    10. ' **' → logprob: -12.758742332458496

Token 235: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5907537341117859
    2. ' somme' → logprob: -2.2157537937164307
    3. '(' → logprob: -2.7157537937164307
    4. '(s' → logprob: -2.9657537937164307
    5. ' longueur' → logprob: -3.0907537937164307
    6. ' sum' → logprob: -3.0907537937164307
    7. 'sum' → logprob: -3.5907537937164307
    8. ' total' → logprob: -4.215753555297852
    9. '(sum' → logprob: -4.215753555297852
    10. 'long' → logprob: -4.340753555297852

Token 236: 's' (ID: 82)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -1.4529850482940674
    2. ' somme' → logprob: -1.5779850482940674
    3. 'sum' → logprob: -1.8279850482940674
    4. ' sum' → logprob: -2.2029850482940674
    5. ' total' → logprob: -2.5779850482940674
    6. 'total' → logprob: -2.7029850482940674
    7. 's' → logprob: -2.9529850482940674
    8. ' longueur' → logprob: -2.9529850482940674
    9. ' long' → logprob: -4.827984809875488
    10. ' la' → logprob: -5.327984809875488

Token 237: 'omme' (ID: 30420)
  Prédit: 'omme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.04864482209086418
    2. 'um' → logprob: -3.298644781112671
    3. '_' → logprob: -5.79864501953125
    4. 'om' → logprob: -6.17364501953125
    5. 'umme' → logprob: -7.17364501953125
    6. 'ommes' → logprob: -7.42364501953125
    7. '#' → logprob: -7.67364501953125
    8. '   ' → logprob: -7.92364501953125
    9. ')' → logprob: -8.17364501953125
    10. 'omm' → logprob: -8.29864501953125

Token 238: '_tot' (ID: 87201)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4322845935821533
    2. '_' → logprob: -2.1822845935821533
    3. ' )' → logprob: -2.4322845935821533
    4. ' des' → logprob: -2.6822845935821533
    5. 'des' → logprob: -3.6822845935821533
    6. ' de' → logprob: -4.057284355163574
    7. '+' → logprob: -4.807284355163574
    8. '[' → logprob: -5.057284355163574
    9. 'de' → logprob: -5.057284355163574
    10. '_des' → logprob: -5.182284355163574

Token 239: 'ale' (ID: 1167)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5613028407096863
    2. 'de' → logprob: -2.811302900314331
    3. '_p' → logprob: -3.061302900314331
    4. '_of' → logprob: -3.061302900314331
    5. ')' → logprob: -3.311302900314331
    6. 'e' → logprob: -3.436302900314331
    7. '   ' → logprob: -3.561302900314331
    8. '_segments' → logprob: -3.686302900314331
    9. '_des' → logprob: -3.811302900314331
    10. 'des' → logprob: -3.811302900314331

Token 240: '_des' (ID: 28977)
  Prédit: '_des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_des' → logprob: -0.7493639588356018
    2. '_' → logprob: -0.8743639588356018
    3. ')' → logprob: -3.499363899230957
    4. '_de' → logprob: -3.749363899230957
    5. ' des' → logprob: -3.999363899230957
    6. 'des' → logprob: -3.999363899230957
    7. ' )' → logprob: -5.249363899230957
    8. '   ' → logprob: -6.124363899230957
    9. ' de' → logprob: -6.249363899230957
    10. ' _' → logprob: -6.499363899230957

Token 241: '_p' (ID: 1359)
  Prédit: ' longue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' longue' → logprob: -0.5241133570671082
    2. 'long' → logprob: -1.399113416671753
    3. 't' → logprob: -2.274113416671753
    4. ' long' → logprob: -4.399113178253174
    5. '_long' → logprob: -4.774113178253174
    6. 'élé' → logprob: -5.274113178253174
    7. 'p' → logprob: -5.274113178253174
    8. '_' → logprob: -5.524113178253174
    9. '_t' → logprob: -6.024113178253174
    10. ' ' → logprob: -6.149113178253174

Token 242: 'ipes' (ID: 10113)
  Prédit: 'ipes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipes' → logprob: -0.4873184263706207
    2. '_' → logprob: -2.487318515777588
    3. '_lengths' → logprob: -3.362318515777588
    4. '_long' → logprob: -3.737318515777588
    5. '_length' → logprob: -3.862318515777588
    6. '_segments' → logprob: -3.987318515777588
    7. 'long' → logprob: -4.112318515777588
    8. 'i' → logprob: -4.237318515777588
    9. 'r' → logprob: -4.237318515777588
    10. '```' → logprob: -4.612318515777588

Token 243: '_et' (ID: 103440)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.21904586255550385
    2. '+' → logprob: -1.719045877456665
    3. 'et' → logprob: -4.969045639038086
    4. '_et' → logprob: -5.969045639038086
    5. ')' → logprob: -6.219045639038086
    6. '_' → logprob: -6.469045639038086
    7. ' et' → logprob: -6.969045639038086
    8. '   ' → logprob: -7.344045639038086
    9. '+p' → logprob: -7.344045639038086
    10. ' ' → logprob: -7.969045639038086

Token 244: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.4087715744972229
    2. 'j' → logprob: -1.2837715148925781
    3. ' joints' → logprob: -3.158771514892578
    4. '_' → logprob: -4.783771514892578
    5. ' j' → logprob: -5.533771514892578
    6. 'joins' → logprob: -7.033771514892578
    7. ' _' → logprob: -7.408771514892578
    8. ' ' → logprob: -8.408771514892578
    9. ' #' → logprob: -8.533771514892578
    10. '#' → logprob: -8.658771514892578

Token 245: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.013935004360973835
    2. 'oint' → logprob: -5.138935089111328
    3. 'o' → logprob: -5.263935089111328
    4. 'oin' → logprob: -6.763935089111328
    5. '_' → logprob: -8.638935089111328
    6. '```' → logprob: -8.638935089111328
    7. 's' → logprob: -9.013935089111328
    8. '   ' → logprob: -9.013935089111328
    9. 'uts' → logprob: -9.388935089111328
    10. ')' → logprob: -9.388935089111328

Token 246: '_in' (ID: 2267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030274881049990654
    2. ' )' → logprob: -3.5302748680114746
    3. '+' → logprob: -8.655275344848633
    4. ' +' → logprob: -8.780275344848633
    5. ' ' → logprob: -10.155275344848633
    6. ')
' → logprob: -10.655275344848633
    7. '[' → logprob: -10.905275344848633
    8. '))' → logprob: -10.905275344848633
    9. '_' → logprob: -10.905275344848633
    10. ' ' → logprob: -11.405275344848633

Token 247: 'clus' (ID: 4085)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.2187479734420776
    2. '[' → logprob: -1.4687479734420776
    3. 'util' → logprob: -2.593748092651367
    4. 's' → logprob: -2.968748092651367
    5. 't' → logprob: -3.093748092651367
    6. '   ' → logprob: -3.593748092651367
    7. '_segments' → logprob: -3.593748092651367
    8. '```' → logprob: -4.218748092651367
    9. 'puts' → logprob: -4.343748092651367
    10. '  ' → logprob: -4.343748092651367

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003003492718562484
    2. ' )' → logprob: -6.3780035972595215
    3. ')
' → logprob: -8.378003120422363
    4. '+' → logprob: -8.878003120422363
    5. 's' → logprob: -9.128003120422363
    6. '_' → logprob: -9.253003120422363
    7. '))' → logprob: -9.378003120422363
    8. ')`' → logprob: -9.378003120422363
    9. '_)' → logprob: -10.003003120422363
    10. ')
' → logprob: -10.253003120422363

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012438190169632435
    2. 'def' → logprob: -4.8874382972717285
    3. ')' → logprob: -5.8874382972717285
    4. '    
' → logprob: -6.7624382972717285
    5. '\' → logprob: -8.88743782043457
    6. '
' → logprob: -9.26243782043457
    7. 'n' → logprob: -9.26243782043457
    8. '```' → logprob: -9.63743782043457
    9. '\n' → logprob: -9.76243782043457
    10. ',' → logprob: -9.76243782043457

Token 250: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06880432367324829
    2. '    
' → logprob: -3.5688042640686035
    3. 'def' → logprob: -3.9438042640686035
    4. '
' → logprob: -5.1938042640686035
    5. '\' → logprob: -5.4438042640686035
    6. ')' → logprob: -6.0688042640686035
    7. '\n' → logprob: -6.3188042640686035
    8. ',' → logprob: -7.4438042640686035
    9. '[' → logprob: -7.4438042640686035
    10. '#' → logprob: -7.6938042640686035

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02028411626815796
    2. 'def' → logprob: -5.020284175872803
    3. '    
' → logprob: -5.270284175872803
    4. '<|end|>' → logprob: -6.020284175872803
    5. '
' → logprob: -6.270284175872803
    6. ')' → logprob: -6.770284175872803
    7. '<|end|>' → logprob: -7.145284175872803
    8. '\n' → logprob: -7.770284175872803
    9. 'import' → logprob: -8.270283699035645
    10. '\' → logprob: -8.520283699035645

Token 252: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009731648489832878
    2. 'n' → logprob: -5.009731769561768
    3. '    
' → logprob: -6.509731769561768
    4. 'def' → logprob: -8.00973129272461
    5. '
' → logprob: -8.25973129272461
    6. '\n' → logprob: -8.38473129272461
    7. ')' → logprob: -8.75973129272461
    8. ' n' → logprob: -9.25973129272461
    9. '\' → logprob: -9.38473129272461
    10. '(n' → logprob: -9.63473129272461

Token 253: ' Ici' (ID: 145754)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24243001639842987
    2. 'n' → logprob: -1.6174299716949463
    3. ' n' → logprob: -4.617430210113525
    4. 'def' → logprob: -5.117430210113525
    5. '    
' → logprob: -7.867430210113525
    6. 'if' → logprob: -9.117429733276367
    7. 'N' → logprob: -9.992429733276367
    8. ' if' → logprob: -10.117429733276367
    9. '    ' → logprob: -10.242429733276367
    10. ')' → logprob: -10.367429733276367

Token 254: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14738047122955322
    2. ':' → logprob: -2.6473803520202637
    3. 'def' → logprob: -2.8973803520202637
    4. ',' → logprob: -5.272380352020264
    5. 'n' → logprob: -7.022380352020264
    6. '(n' → logprob: -7.272380352020264
    7. '<|end|>' → logprob: -7.272380352020264
    8. 'import' → logprob: -7.647380352020264
    9. '<|end|>' → logprob: -8.022380828857422
    10. '[n' → logprob: -8.147380828857422

Token 255: ' "' (ID: 392)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11348637193441391
    2. 'n' → logprob: -2.2384862899780273
    3. ' pass' → logprob: -8.113486289978027
    4. '   ' → logprob: -8.488486289978027
    5. 'def' → logprob: -9.613486289978027
    6. 'pass' → logprob: -10.738486289978027
    7. ' def' → logprob: -10.988486289978027
    8. '	n' → logprob: -11.238486289978027
    9. ' ' → logprob: -11.488486289978027
    10. '    ' → logprob: -11.613486289978027

Token 256: 'segments' (ID: 110314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6732199192047119
    2. ')' → logprob: -1.923219919204712
    3. '#' → logprob: -2.048219919204712
    4. '   ' → logprob: -2.798219919204712
    5. ' n' → logprob: -3.298219919204712
    6. 'def' → logprob: -3.548219919204712
    7. ' ' → logprob: -4.173219680786133
    8. 's' → logprob: -4.298219680786133
    9. '"' → logprob: -4.673219680786133
    10. 'p' → logprob: -4.798219680786133

Token 257: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5029150247573853
    2. '"' → logprob: -2.0029149055480957
    3. ')' → logprob: -2.5029149055480957
    4. ' "' → logprob: -2.8779149055480957
    5. '=' → logprob: -3.2529149055480957
    6. '_' → logprob: -4.377914905548096
    7. 's' → logprob: -4.502914905548096
    8. '   ' → logprob: -4.752914905548096
    9. '[' → logprob: -5.252914905548096
    10. ' ")' → logprob: -5.502914905548096

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12938058376312256
    2. '<|end|>' → logprob: -2.379380702972412
    3. '=' → logprob: -4.504380702972412
    4. ':' → logprob: -5.254380702972412
    5. '   ' → logprob: -5.754380702972412
    6. ')' → logprob: -6.129380702972412
    7. ',' → logprob: -6.629380702972412
    8. '<|end|>' → logprob: -6.879380702972412
    9. '[' → logprob: -7.254380702972412
    10. 'def' → logprob: -7.504380702972412

Token 259: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.6321560144424438
    2. '1' → logprob: -2.2571558952331543
    3. 'segments' → logprob: -2.3821558952331543
    4. ' segments' → logprob: -2.5071558952331543
    5. ' len' → logprob: -2.6321558952331543
    6. ' ' → logprob: -2.6321558952331543
    7. ' n' → logprob: -2.8821558952331543
    8. ' le' → logprob: -3.1321558952331543
    9. 'nombre' → logprob: -3.1321558952331543
    10. ' s' → logprob: -3.3821558952331543

Token 260: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.1791476458311081
    2. '_' → logprob: -2.054147720336914
    3. '_des' → logprob: -3.554147720336914
    4. '_d' → logprob: -6.179147720336914
    5. 'de' → logprob: -6.804147720336914
    6. ' de' → logprob: -6.929147720336914
    7. '_total' → logprob: -7.054147720336914
    8. ' =' → logprob: -7.929147720336914
    9. '_max' → logprob: -8.054147720336914
    10. '_s' → logprob: -8.429147720336914

Token 261: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.8456029891967773
    2. 'segments' → logprob: -1.0956029891967773
    3. '_' → logprob: -2.3456029891967773
    4. '_segments' → logprob: -2.3456029891967773
    5. ' espaces' → logprob: -4.470602989196777
    6. ' _' → logprob: -4.845602989196777
    7. ' ' → logprob: -5.345602989196777
    8. ' ' → logprob: -5.470602989196777
    9. 's' → logprob: -5.470602989196777
    10. '_s' → logprob: -5.845602989196777

Token 262: ' form' (ID: 1625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1261313557624817
    2. 'def' → logprob: -2.876131296157837
    3. ':' → logprob: -3.626131296157837
    4. ',' → logprob: -4.751131534576416
    5. ' =' → logprob: -4.751131534576416
    6. ')' → logprob: -5.626131534576416
    7. '(n' → logprob: -5.751131534576416
    8. '.' → logprob: -6.251131534576416
    9. 'n' → logprob: -6.876131534576416
    10. '[n' → logprob: -6.876131534576416

Token 263: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.20609183609485626
    2. 'é' → logprob: -1.7060918807983398
    3. 'ed' → logprob: -6.33109188079834
    4. 'ée' → logprob: -6.33109188079834
    5. 'e' → logprob: -7.70609188079834
    6. 'es' → logprob: -8.83109188079834
    7. '=' → logprob: -8.95609188079834
    8. 'ées' → logprob: -9.20609188079834
    9. '```' → logprob: -9.45609188079834
    10. ')' → logprob: -9.70609188079834

Token 264: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08917860686779022
    2. 'def' → logprob: -3.0891785621643066
    3. ',' → logprob: -3.8391785621643066
    4. '.' → logprob: -5.214178562164307
    5. ')' → logprob: -5.714178562164307
    6. ':' → logprob: -5.714178562164307
    7. 'n' → logprob: -6.714178562164307
    8. '(n' → logprob: -7.214178562164307
    9. 'import' → logprob: -7.339178562164307
    10. '    
' → logprob: -7.589178562164307

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009942959062755108
    2. '    
' → logprob: -5.634943008422852
    3. ':' → logprob: -6.384943008422852
    4. 'def' → logprob: -6.509943008422852
    5. ')' → logprob: -6.634943008422852
    6. '
' → logprob: -7.384943008422852
    7. '\' → logprob: -8.509943008422852
    8. '\n' → logprob: -8.634943008422852
    9. ',' → logprob: -9.009943008422852
    10. '[' → logprob: -9.009943008422852

Token 266: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04816814139485359
    2. '<|end|>' → logprob: -4.048168182373047
    3. '    
' → logprob: -4.548168182373047
    4. '<|end|>' → logprob: -5.048168182373047
    5. ')' → logprob: -5.673168182373047
    6. 'n' → logprob: -6.173168182373047
    7. 'def' → logprob: -6.298168182373047
    8. '
' → logprob: -6.548168182373047
    9. 'import' → logprob: -7.048168182373047
    10. '#' → logprob: -7.548168182373047

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020447872579097748
    2. '<|end|>' → logprob: -5.145447731018066
    3. '    
' → logprob: -5.395447731018066
    4. ')' → logprob: -5.520447731018066
    5. 'def' → logprob: -6.395447731018066
    6. '<|end|>' → logprob: -6.645447731018066
    7. ':' → logprob: -7.645447731018066
    8. ',' → logprob: -7.895447731018066
    9. '\' → logprob: -8.145447731018066
    10. '\n' → logprob: -8.270447731018066

Token 268: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06775369495153427
    2. 'n' → logprob: -3.317753791809082
    3. '\n' → logprob: -4.692753791809082
    4. '\' → logprob: -5.067753791809082
    5. '    
' → logprob: -5.567753791809082
    6. 'def' → logprob: -5.942753791809082
    7. ')' → logprob: -6.317753791809082
    8. '(' → logprob: -6.692753791809082
    9. ':' → logprob: -6.692753791809082
    10. '
' → logprob: -7.317753791809082

Token 269: ' En' (ID: 2130)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02530934289097786
    2. '   ' → logprob: -3.7753093242645264
    3. 'def' → logprob: -6.9003095626831055
    4. ' n' → logprob: -7.1503095626831055
    5. '#' → logprob: -9.025309562683105
    6. 'pass' → logprob: -10.150309562683105
    7. '    
' → logprob: -11.025309562683105
    8. 'import' → logprob: -11.150309562683105
    9. '	n' → logprob: -11.400309562683105
    10. '```' → logprob: -11.400309562683105

Token 270: ' regard' (ID: 6163)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.016578540205955505
    2. 'def' → logprob: -5.641578674316406
    3. 'fin' → logprob: -5.891578674316406
    4. 'tre' → logprob: -6.891578674316406
    5. ' résumé' → logprob: -6.891578674316406
    6. 's' → logprob: -7.141578674316406
    7. 't' → logprob: -7.266578674316406
    8. ' suite' → logprob: -7.266578674316406
    9. '_' → logprob: -7.891578674316406
    10. '_fin' → logprob: -8.016578674316406

Token 271: 'ant' (ID: 493)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3407615423202515
    2. 'def' → logprob: -1.3407615423202515
    3. ')' → logprob: -1.8407615423202515
    4. '=' → logprob: -2.340761661529541
    5. ' =' → logprob: -2.465761661529541
    6. '   ' → logprob: -2.965761661529541
    7. '#' → logprob: -4.965761661529541
    8. ':' → logprob: -4.965761661529541
    9. '```' → logprob: -5.340761661529541
    10. ' to' → logprob: -5.590761661529541

Token 272: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40055570006370544
    2. '   ' → logprob: -1.4005557298660278
    3. ' la' → logprob: -4.150555610656738
    4. ' ' → logprob: -4.525555610656738
    5. 'def' → logprob: -4.525555610656738
    6. 'la' → logprob: -4.900555610656738
    7. '```' → logprob: -5.150555610656738
    8. '    ' → logprob: -5.775555610656738
    9. '  ' → logprob: -6.150555610656738
    10. 'de' → logprob: -6.275555610656738

Token 273: ' plus' (ID: 2932)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.024747371673584
    2. ' la' → logprob: -1.649747371673584
    3. ' ' → logprob: -2.024747371673584
    4. 'plus' → logprob: -3.024747371673584
    5. 'l' → logprob: -3.149747371673584
    6. '_' → logprob: -3.274747371673584
    7. 'suite' → logprob: -3.399747371673584
    8. '#' → logprob: -3.649747371673584
    9. 'près' → logprob: -3.649747371673584
    10. 't' → logprob: -4.149747371673584

Token 274: ' près' (ID: 35029)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7633166909217834
    2. '   ' → logprob: -1.5133166313171387
    3. 'import' → logprob: -2.3883166313171387
    4. 'haut' → logprob: -2.8883166313171387
    5. '```' → logprob: -3.2633166313171387
    6. 'loin' → logprob: -3.5133166313171387
    7. 'bas' → logprob: -3.5133166313171387
    8. ' bas' → logprob: -4.888316631317139
    9. 'près' → logprob: -5.013316631317139
    10. 'pres' → logprob: -5.388316631317139

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04788251221179962
    2. '   ' → logprob: -3.547882556915283
    3. ':' → logprob: -4.797882556915283
    4. ' ,' → logprob: -6.172882556915283
    5. ',
' → logprob: -6.172882556915283
    6. 'def' → logprob: -6.297882556915283
    7. 'import' → logprob: -7.172882556915283
    8. '#' → logprob: -7.672882556915283
    9. '...' → logprob: -8.047882080078125
    10. '```' → logprob: -8.172882080078125

Token 276: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7215000987052917
    2. '   ' → logprob: -0.9715000987052917
    3. ' la' → logprob: -3.0965001583099365
    4. ' il' → logprob: -3.5965001583099365
    5. '#' → logprob: -4.221499919891357
    6. ' n' → logprob: -4.471499919891357
    7. ' #' → logprob: -4.721499919891357
    8. '    ' → logprob: -5.596499919891357
    9. 'on' → logprob: -5.721499919891357
    10. ' for' → logprob: -5.971499919891357

Token 277: ' remarque' (ID: 183406)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.7254645824432373
    2. ' peux' → logprob: -1.3504645824432373
    3. '#' → logprob: -2.7254645824432373
    4. ' n' → logprob: -3.3504645824432373
    5. 'def' → logprob: -3.7254645824432373
    6. ' #' → logprob: -3.8504645824432373
    7. ' can' → logprob: -4.725464820861816
    8. ' pourrait' → logprob: -4.725464820861816
    9. 'pe' → logprob: -4.725464820861816
    10. 'n' → logprob: -4.850464820861816

Token 278: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2189594954252243
    2. '   ' → logprob: -1.7189594507217407
    3. ' qu' → logprob: -4.968959331512451
    4. ' ' → logprob: -4.968959331512451
    5. ' un' → logprob: -7.218959331512451
    6. ' une' → logprob: -7.718959331512451
    7. 'que' → logprob: -7.843959331512451
    8. '    ' → logprob: -7.968959331512451
    9. ' that' → logprob: -8.09395980834961
    10. ' ' → logprob: -8.21895980834961

Token 279: ':
' (ID: 734)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3488031327724457
    2. ' chaque' → logprob: -1.848803162574768
    3. ' le' → logprob: -3.0988030433654785
    4. ' les' → logprob: -3.3488030433654785
    5. ' ' → logprob: -3.9738030433654785
    6. ' l' → logprob: -3.9738030433654785
    7. '   ' → logprob: -5.2238030433654785
    8. ' ' → logprob: -6.5988030433654785
    9. ',' → logprob: -6.5988030433654785
    10. ' n' → logprob: -6.8488030433654785

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014194532297551632
    2. '#' → logprob: -5.389194488525391
    3. '    ' → logprob: -5.764194488525391
    4. '    
' → logprob: -6.014194488525391
    5. ' #' → logprob: -6.764194488525391
    6. ' ' → logprob: -7.139194488525391
    7. '     
' → logprob: -7.889194488525391
    8. ' ' → logprob: -8.26419448852539
    9. ' 
' → logprob: -8.38919448852539
    10. '  ' → logprob: -9.01419448852539

Token 281: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03025163523852825
    2. '#' (adapté à ' #') → logprob: -3.9052517414093018
    3. ' #' → logprob: -5.030251502990723
    4. ' la' → logprob: -6.905251502990723
    5. '    
' → logprob: -7.280251502990723
    6. '    ' → logprob: -8.155251502990723
    7. '
' → logprob: -8.530251502990723
    8. 'n' → logprob: -9.655251502990723
    9. 'def' → logprob: -9.655251502990723
    10. ' for' → logprob: -9.655251502990723

Token 282: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.342971533536911
    2. '#' → logprob: -1.8429715633392334
    3. ' #' → logprob: -2.4679715633392334
    4. ' n' → logprob: -4.342971324920654
    5. ' la' → logprob: -4.967971324920654
    6. 'def' → logprob: -5.092971324920654
    7. ' def' → logprob: -6.092971324920654
    8. 'n' → logprob: -6.217971324920654
    9. 'from' → logprob: -6.467971324920654
    10. ' for' → logprob: -6.592971324920654

Token 283: ' tous' (ID: 10688)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9823316335678101
    2. ' la' → logprob: -1.10733163356781
    3. ' n' → logprob: -2.2323317527770996
    4. ' les' → logprob: -3.1073317527770996
    5. ' on' → logprob: -3.6073317527770996
    6. ' chaque' → logprob: -3.8573317527770996
    7. ' le' → logprob: -4.3573317527771
    8. ' #' → logprob: -4.3573317527771
    9. '#' → logprob: -4.7323317527771
    10. ' ' → logprob: -4.8573317527771

Token 284: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2162676751613617
    2. 'les' → logprob: -1.966267704963684
    3. ':' → logprob: -3.9662675857543945
    4. ' ' → logprob: -4.7162675857543945
    5. '#' → logprob: -5.3412675857543945
    6. '   ' → logprob: -5.8412675857543945
    7. ' the' → logprob: -6.0912675857543945
    8. 'segments' → logprob: -6.3412675857543945
    9. 't' → logprob: -6.4662675857543945
    10. 's' → logprob: -6.4662675857543945

Token 285: ' joints' (ID: 47223)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2569125890731812
    2. 'segments' → logprob: -1.7569125890731812
    3. ' segments' → logprob: -2.2569127082824707
    4. ' tuy' → logprob: -2.3819127082824707
    5. 'pipes' → logprob: -2.6319127082824707
    6. 'p' → logprob: -2.6319127082824707
    7. ' pipes' → logprob: -3.0069127082824707
    8. ' p' → logprob: -3.2569127082824707
    9. 'j' → logprob: -4.256912708282471
    10. ' espaces' → logprob: -4.506912708282471

Token 286: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -1.122753381729126
    2. ' utilisés' → logprob: -1.747753381729126
    3. ' ne' → logprob: -1.997753381729126
    4. '#' → logprob: -2.747753381729126
    5. ' #' → logprob: -2.872753381729126
    6. ' et' → logprob: -2.997753381729126
    7. ',' → logprob: -3.372753381729126
    8. 's' → logprob: -3.747753381729126
    9. ' doivent' → logprob: -3.997753381729126
    10. ' présents' → logprob: -4.247753143310547

Token 287: ' entre' (ID: 3853)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'posit' → logprob: -1.2650949954986572
    2. ' utilisés' → logprob: -2.1400949954986572
    3. 'import' → logprob: -2.5150949954986572
    4. 'strict' → logprob: -2.6400949954986572
    5. 'dans' → logprob: -2.6400949954986572
    6. 'util' → logprob: -3.1400949954986572
    7. ' soit' → logprob: -3.3900949954986572
    8. ' posit' → logprob: -3.5150949954986572
    9. 'pos' → logprob: -3.7650949954986572
    10. ' des' → logprob: -3.8900949954986572

Token 288: ' p' (ID: 275)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.1645972728729248
    2. ' deux' → logprob: -1.4145972728729248
    3. 'les' → logprob: -1.7895972728729248
    4. 't' → logprob: -2.414597272872925
    5. 'p' → logprob: -2.664597272872925
    6. ' les' → logprob: -3.039597272872925
    7. 'pipes' → logprob: -4.164597511291504
    8. '   ' → logprob: -4.664597511291504
    9. ' ' → logprob: -4.789597511291504
    10. 'des' → logprob: -4.914597511291504

Token 289: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3259904384613037
    2. '_' → logprob: -1.8259904384613037
    3. '[i' → logprob: -2.9509904384613037
    4. 'oints' → logprob: -4.325990676879883
    5. '[]' → logprob: -4.700990676879883
    6. 'u' → logprob: -5.200990676879883
    7. '1' → logprob: -5.200990676879883
    8. 'i' → logprob: -5.325990676879883
    9. '+' → logprob: -5.700990676879883
    10. ',' → logprob: -5.950990676879883

Token 290: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08354440331459045
    2. '],' → logprob: -2.8335444927215576
    3. '+' → logprob: -4.3335442543029785
    4. 's' → logprob: -5.5835442543029785
    5. ' ]' → logprob: -6.7085442543029785
    6. ']+' → logprob: -6.7085442543029785
    7. '[' → logprob: -7.3335442543029785
    8. '-' → logprob: -8.333544731140137
    9. '[i' → logprob: -8.333544731140137
    10. ' ],' → logprob: -8.833544731140137

Token 291: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3462032079696655
    2. ',' → logprob: -1.4712032079696655
    3. ']' → logprob: -1.5962032079696655
    4. '+' → logprob: -2.346203327178955
    5. ' +' → logprob: -2.846203327178955
    6. ' et' → logprob: -3.346203327178955
    7. '[i' → logprob: -3.596203327178955
    8. 'def' → logprob: -3.971203327178955
    9. 's' → logprob: -4.346203327178955
    10. '],' → logprob: -4.971203327178955

Token 292: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3944353461265564
    2. 'p' → logprob: -1.1444354057312012
    3. ' ' → logprob: -5.644435405731201
    4. '   ' → logprob: -6.519435405731201
    5. ' j' → logprob: -6.894435405731201
    6. 'j' → logprob: -7.144435405731201
    7. ' i' → logprob: -8.269434928894043
    8. 'i' → logprob: -8.769434928894043
    9. ' ' → logprob: -8.894434928894043
    10. '  ' → logprob: -9.769434928894043

Token 293: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016745366156101227
    2. '[' → logprob: -4.141745567321777
    3. '[
' → logprob: -8.266745567321777
    4. '+' → logprob: -8.516745567321777
    5. 'i' → logprob: -9.766745567321777
    6. '[j' → logprob: -10.516745567321777
    7. ']' → logprob: -10.516745567321777
    8. '```' → logprob: -10.516745567321777
    9. '   ' → logprob: -11.266745567321777
    10. 's' → logprob: -11.266745567321777

Token 294: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07528487592935562
    2. ']' → logprob: -2.700284957885742
    3. '],' → logprob: -6.200284957885742
    4. ']+' → logprob: -6.200284957885742
    5. ' +' → logprob: -7.325284957885742
    6. '   ' → logprob: -8.325284957885742
    7. ']
' → logprob: -8.575284957885742
    8. '-' → logprob: -10.075284957885742
    9. '+]' → logprob: -10.325284957885742
    10. 's' → logprob: -11.200284957885742

Token 295: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1642245054244995
    2. '1' → logprob: -1.9142245054244995
    3. '+' → logprob: -6.289224624633789
    4. ']
' → logprob: -7.039224624633789
    5. 'i' → logprob: -7.789224624633789
    6. ']+' → logprob: -8.039224624633789
    7. '   ' → logprob: -8.789224624633789
    8. ' ' → logprob: -8.914224624633789
    9. '],' → logprob: -9.664224624633789
    10. ' ]' → logprob: -10.164224624633789

Token 296: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18956519663333893
    2. ']
' → logprob: -1.8145651817321777
    3. '],' → logprob: -5.064565181732178
    4. '])' → logprob: -6.939565181732178
    5. ')' → logprob: -8.064565658569336
    6. ']

' → logprob: -8.189565658569336
    7. '])
' → logprob: -8.314565658569336
    8. '].' → logprob: -8.314565658569336
    9. '   ' → logprob: -8.439565658569336
    10. ']
' → logprob: -8.689565658569336

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002366370754316449
    2. 'def' → logprob: -7.002366542816162
    3. ')' → logprob: -7.252366542816162
    4. '#' → logprob: -8.002366065979004
    5. '    
' → logprob: -8.752366065979004
    6. ',' → logprob: -9.877366065979004
    7. 'import' → logprob: -10.127366065979004
    8. '    ' → logprob: -11.127366065979004
    9. ' ' → logprob: -11.377366065979004
    10. '  ' → logprob: -11.377366065979004

Token 298: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034457992762327194
    2. '#' (adapté à ' #') → logprob: -3.5344579219818115
    3. '#
' → logprob: -7.034458160400391
    4. ')' → logprob: -7.159458160400391
    5. 'def' → logprob: -7.409458160400391
    6. ' #' → logprob: -7.659458160400391
    7. '    
' → logprob: -7.784458160400391
    8. ',' → logprob: -7.909458160400391
    9. ' ' → logprob: -8.15945816040039
    10. 'import' → logprob: -9.03445816040039

Token 299: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007795302197337151
    2. '#' → logprob: -5.507795333862305
    3. ')' → logprob: -6.257795333862305
    4. 'def' → logprob: -7.257795333862305
    5. '    
' → logprob: -8.382795333862305
    6. ' ' → logprob: -8.632795333862305
    7. ' ' → logprob: -9.507795333862305
    8. ' #' → logprob: -9.757795333862305
    9. 'import' → logprob: -10.007795333862305
    10. '    ' → logprob: -10.132795333862305

Token 300: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5651301145553589
    2. '#' → logprob: -1.6901301145553589
    3. ' n' → logprob: -2.0651302337646484
    4. ' on' → logprob: -3.6901302337646484
    5. ' #' → logprob: -3.6901302337646484
    6. 'def' → logprob: -3.9401302337646484
    7. ' la' → logprob: -4.440130233764648
    8. 'n' → logprob: -5.190130233764648
    9. 'On' → logprob: -5.315130233764648
    10. ' for' → logprob: -5.315130233764648

Token 301: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1204860582947731
    2. 'on' → logprob: -2.87048602104187
    3. ' we' → logprob: -4.245486259460449
    4. ' un' → logprob: -5.495486259460449
    5. ' i' → logprob: -5.495486259460449
    6. ' nous' → logprob: -5.620486259460449
    7. ' j' → logprob: -5.995486259460449
    8. 'not' → logprob: -5.995486259460449
    9. ' not' → logprob: -5.995486259460449
    10. 'i' → logprob: -6.245486259460449

Token 302: ' chois' (ID: 33475)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -1.3394240140914917
    2. ' ne' → logprob: -1.4644240140914917
    3. 'ne' → logprob: -1.5894240140914917
    4. 'n' → logprob: -2.2144241333007812
    5. ' n' → logprob: -3.4644241333007812
    6. 'd' → logprob: -4.089424133300781
    7. ' sup' → logprob: -4.214424133300781
    8. 'ignore' → logprob: -4.214424133300781
    9. ' chois' → logprob: -4.339424133300781
    10. 'sup' → logprob: -4.464424133300781

Token 303: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09235741198062897
    2. 'oit' → logprob: -2.5923573970794678
    3. 'it' → logprob: -5.092357635498047
    4. 'ut' → logprob: -5.842357635498047
    5. 'o' → logprob: -6.467357635498047
    6. 'ot' → logprob: -6.592357635498047
    7. '#' → logprob: -7.842357635498047
    8. 'osit' → logprob: -8.592357635498047
    9. 'z' → logprob: -8.842357635498047
    10. 'zit' → logprob: -9.092357635498047

Token 304: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04666133224964142
    2. ' not' → logprob: -3.796661376953125
    3. ' ' → logprob: -5.421661376953125
    4. 'not' → logprob: -5.546661376953125
    5. ' d' → logprob: -5.671661376953125
    6. ' pas' → logprob: -5.921661376953125
    7. ' un' → logprob: -6.046661376953125
    8. 'de' → logprob: -6.296661376953125
    9. ' to' → logprob: -6.671661376953125
    10. ' ' → logprob: -7.171661376953125

Token 305: ' rel' (ID: 1536)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.19108828902244568
    2. 'ne' → logprob: -2.0660881996154785
    3. ' couper' → logprob: -4.3160881996154785
    4. 'pas' → logprob: -4.9410881996154785
    5. ' sé' → logprob: -5.8160881996154785
    6. '"' → logprob: -5.8160881996154785
    7. 'sé' → logprob: -6.0660881996154785
    8. ' pas' → logprob: -6.4410881996154785
    9. ' garder' → logprob: -6.5660881996154785
    10. ' "' → logprob: -6.6910881996154785

Token 306: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.017452463507652283
    2. 'i' → logprob: -4.767452239990234
    3. 'e' → logprob: -5.892452239990234
    4. 'ie' → logprob: -6.267452239990234
    5. 'ié' → logprob: -7.017452239990234
    6. '#' → logprob: -7.392452239990234
    7. 'a' → logprob: -7.517452239990234
    8. 'â' → logprob: -8.017452239990234
    9. ' i' → logprob: -8.517452239990234
    10. 'er' → logprob: -8.642452239990234

Token 307: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5910122990608215
    2. ' les' → logprob: -2.0910122394561768
    3. ' ' → logprob: -2.3410122394561768
    4. ' un' → logprob: -2.4660122394561768
    5. 'p' → logprob: -3.7160122394561768
    6. 'les' → logprob: -4.216012477874756
    7. '   ' → logprob: -4.216012477874756
    8. ' deux' → logprob: -4.216012477874756
    9. ' tous' → logprob: -4.466012477874756
    10. ' le' → logprob: -4.466012477874756

Token 308: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.026787983253598213
    2. '[' → logprob: -3.6517879962921143
    3. 'i' → logprob: -9.151787757873535
    4. '   ' → logprob: -9.276787757873535
    5. '[
' → logprob: -10.526787757873535
    6. '[j' → logprob: -10.526787757873535
    7. '[next' → logprob: -10.526787757873535
    8. '[u' → logprob: -10.776787757873535
    9. 'u' → logprob: -10.901787757873535
    10. '[p' → logprob: -11.026787757873535

Token 309: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09665547311306
    2. '+' → logprob: -2.5966553688049316
    3. '],' → logprob: -4.721655368804932
    4. '-' → logprob: -5.221655368804932
    5. ' ]' → logprob: -6.721655368804932
    6. '   ' → logprob: -7.221655368804932
    7. ' +' → logprob: -7.846655368804932
    8. '[i' → logprob: -8.72165584564209
    9. ' ' → logprob: -8.97165584564209
    10. ']+' → logprob: -9.09665584564209

Token 310: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.3430001437664032
    2. 'et' → logprob: -2.5930001735687256
    3. ']' → logprob: -3.2180001735687256
    4. '   ' → logprob: -3.3430001735687256
    5. ' par' → logprob: -3.4680001735687256
    6. ' ' → logprob: -3.7180001735687256
    7. ')' → logprob: -4.0929999351501465
    8. ' à' → logprob: -4.2179999351501465
    9. '[i' → logprob: -4.7179999351501465
    10. '-' → logprob: -4.8429999351501465

Token 311: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.16524890065193176
    2. 'p' → logprob: -1.9152488708496094
    3. ' ' → logprob: -5.915248870849609
    4. ' i' → logprob: -6.915248870849609
    5. 'i' → logprob: -7.540248870849609
    6. ' ' → logprob: -8.04024887084961
    7. '   ' → logprob: -8.79024887084961
    8. 'j' → logprob: -9.54024887084961
    9. ''' → logprob: -10.04024887084961
    10. ' j' → logprob: -10.54024887084961

Token 312: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.44563746452331543
    2. '[i' → logprob: -1.0706374645233154
    3. ']' → logprob: -4.4456377029418945
    4. '[' → logprob: -5.8206377029418945
    5. '   ' → logprob: -7.6956377029418945
    6. ' +' → logprob: -7.8206377029418945
    7. '][' → logprob: -8.070637702941895
    8. '+i' → logprob: -8.320637702941895
    9. '-' → logprob: -8.695637702941895
    10. '(i' → logprob: -9.320637702941895

Token 313: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012552275322377682
    2. ']' → logprob: -4.887552261352539
    3. '-' → logprob: -5.512552261352539
    4. ' +' → logprob: -7.762552261352539
    5. ']+' → logprob: -8.012552261352539
    6. '   ' → logprob: -10.012552261352539
    7. '+]' → logprob: -10.387552261352539
    8. '+
' → logprob: -11.012552261352539
    9. '],' → logprob: -11.387552261352539
    10. ' ' → logprob: -11.887552261352539

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. ']' → logprob: -11.375020980834961
    3. ' ' → logprob: -12.000020980834961
    4. '+' → logprob: -13.875020980834961
    5. '2' → logprob: -13.875020980834961
    6. '   ' → logprob: -14.750020980834961
    7. 'i' → logprob: -15.000020980834961
    8. '],' → logprob: -15.625020980834961
    9. '])' → logprob: -16.12502098083496
    10. '
' → logprob: -16.25002098083496

Token 315: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.15672610700130463
    2. ']' → logprob: -2.031726121902466
    3. '),' → logprob: -5.156725883483887
    4. ')' → logprob: -5.406725883483887
    5. ' par' → logprob: -7.406725883483887
    6. ']),' → logprob: -7.656725883483887
    7. '])' → logprob: -7.656725883483887
    8. '   ' → logprob: -8.031725883483887
    9. ' ],' → logprob: -8.531725883483887
    10. '],
' → logprob: -8.531725883483887

Token 316: ' on' (ID: 402)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7027444243431091
    2. ' #' → logprob: -2.077744483947754
    3. ' ' → logprob: -2.202744483947754
    4. ' on' → logprob: -2.452744483947754
    5. '#' → logprob: -2.827744483947754
    6. ' i' → logprob: -3.452744483947754
    7. ' ' → logprob: -4.202744483947754
    8. ' p' → logprob: -4.702744483947754
    9. ' il' → logprob: -4.827744483947754
    10. ',' → logprob: -4.827744483947754

Token 317: ' "' (ID: 392)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.48323479294776917
    2. ' doit' → logprob: -1.3582347631454468
    3. 'continue' → logprob: -3.3582348823547363
    4. ' chois' → logprob: -3.9832348823547363
    5. ' ajoute' → logprob: -4.358234882354736
    6. ' n' → logprob: -4.733234882354736
    7. ' ' → logprob: -4.733234882354736
    8. ' ne' → logprob: -4.983234882354736
    9. 'do' → logprob: -5.358234882354736
    10. ' devra' → logprob: -5.608234882354736

Token 318: 'util' (ID: 2056)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.5903472900390625
    2. 'cho' → logprob: -1.7153472900390625
    3. 'd' → logprob: -2.0903472900390625
    4. 'aj' → logprob: -2.2153472900390625
    5. 'n' → logprob: -3.0903472900390625
    6. ' chois' → logprob: -3.2153472900390625
    7. 'sup' → logprob: -3.3403472900390625
    8. ' continue' → logprob: -3.5903472900390625
    9. 's' → logprob: -3.7153472900390625
    10. 'contin' → logprob: -4.0903472900390625

Token 319: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.16909220814704895
    2. 'iser' → logprob: -2.0440921783447266
    3. 'is' → logprob: -4.044092178344727
    4. 'isez' → logprob: -6.044092178344727
    5. 'se' → logprob: -6.794092178344727
    6. 'isons' → logprob: -6.919092178344727
    7. 'ser' → logprob: -7.294092178344727
    8. 'isé' → logprob: -7.294092178344727
    9. 'e' → logprob: -7.419092178344727
    10. 'i' → logprob: -8.044092178344727

Token 320: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.13267138600349426
    2. '"' → logprob: -2.632671356201172
    3. ' le' → logprob: -3.632671356201172
    4. ' un' → logprob: -5.007671356201172
    5. 'le' → logprob: -5.257671356201172
    6. ' j' → logprob: -5.507671356201172
    7. '_le' → logprob: -6.507671356201172
    8. ' ")' → logprob: -6.632671356201172
    9. ' ' → logprob: -7.007671356201172
    10. 'j' → logprob: -7.132671356201172

Token 321: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.4643961191177368
    2. 'j' → logprob: -1.5893961191177368
    3. ' le' → logprob: -1.7143961191177368
    4. '_' → logprob: -1.9643961191177368
    5. ' un' → logprob: -2.8393959999084473
    6. ' _' → logprob: -3.0893959999084473
    7. ' ' → logprob: -3.2143959999084473
    8. ' l' → logprob: -3.5893959999084473
    9. '_j' → logprob: -3.8393959999084473
    10. 'le' → logprob: -3.9643959999084473

Token 322: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.225790873169899
    2. '[' → logprob: -1.6007908582687378
    3. 'oint' → logprob: -8.475790977478027
    4. 'oints' → logprob: -10.100790977478027
    5. '   ' → logprob: -10.725790977478027
    6. '[j' → logprob: -10.725790977478027
    7. '\[' → logprob: -11.225790977478027
    8. 'oin' → logprob: -11.350790977478027
    9. '[int' → logprob: -11.725790977478027
    10. '[]' → logprob: -11.850790977478027

Token 323: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014332501217722893
    2. '[i' → logprob: -5.014332294464111
    3. '])' → logprob: -5.139332294464111
    4. '   ' → logprob: -7.889332294464111
    5. ']+' → logprob: -7.889332294464111
    6. 'i' → logprob: -8.13933277130127
    7. ' ]' → logprob: -8.26433277130127
    8. ']"' → logprob: -9.13933277130127
    9. '-' → logprob: -10.51433277130127
    10. '[' → logprob: -10.76433277130127

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013579229824244976
    2. 'def' → logprob: -5.013579368591309
    3. ')' → logprob: -5.513579368591309
    4. '    
' → logprob: -6.638579368591309
    5. '
' → logprob: -8.638579368591309
    6. ',' → logprob: -8.638579368591309
    7. ')
' → logprob: -8.638579368591309
    8. '[' → logprob: -8.888579368591309
    9. '\' → logprob: -9.013579368591309
    10. '```' → logprob: -9.138579368591309

Token 325: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016482505947351456
    2. ')' → logprob: -4.391482353210449
    3. '    
' → logprob: -6.891482353210449
    4. '[' → logprob: -7.516482353210449
    5. 'def' → logprob: -7.641482353210449
    6. ',' → logprob: -7.766482353210449
    7. ' ' → logprob: -8.89148235321045
    8. '.' → logprob: -8.89148235321045
    9. ')
' → logprob: -9.01648235321045
    10. '#' (adapté à ' #') → logprob: -9.01648235321045

Token 326: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003579753451049328
    2. 'def' → logprob: -6.003579616546631
    3. ')' → logprob: -7.628579616546631
    4. '    
' → logprob: -7.628579616546631
    5. '```' → logprob: -10.128580093383789
    6. 'import' → logprob: -11.128580093383789
    7. 'j' → logprob: -11.878580093383789
    8. '
' → logprob: -12.003580093383789
    9. ',' → logprob: -12.003580093383789
    10. '#' → logprob: -12.378580093383789

Token 327: ' Sinon' (ID: 154924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029026322066783905
    2. '#' → logprob: -4.279026508331299
    3. ' #' → logprob: -5.404026508331299
    4. 'def' → logprob: -5.654026508331299
    5. '       ' → logprob: -6.654026508331299
    6. '    
' → logprob: -7.279026508331299
    7. ' ' → logprob: -7.404026508331299
    8. ' for' → logprob: -7.404026508331299
    9. ' def' → logprob: -7.529026508331299
    10. '
' → logprob: -7.904026508331299

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015839267522096634
    2. '   ' → logprob: -5.140839099884033
    3. ',
' → logprob: -6.015839099884033
    4. ':' → logprob: -6.015839099884033
    5. ' ,' → logprob: -6.265839099884033
    6. ' on' → logprob: -6.515839099884033
    7. ':
' → logprob: -7.765839099884033
    8. '#' → logprob: -8.265839576721191
    9. ' ' → logprob: -8.265839576721191
    10. ' ' → logprob: -9.265839576721191

Token 329: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.08959132432937622
    2. ' ' → logprob: -2.8395912647247314
    3. 'on' → logprob: -3.9645912647247314
    4. '\n' → logprob: -5.4645915031433105
    5. '#' → logprob: -6.9645915031433105
    6. '\' → logprob: -7.3395915031433105
    7. ' #' → logprob: -8.089591026306152
    8. ' ' → logprob: -8.089591026306152
    9. ' 
' → logprob: -8.339591026306152
    10. ' we' → logprob: -8.589591026306152

Token 330: ' coupe' (ID: 71780)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0569190979003906
    2. '\' → logprob: -1.6819190979003906
    3. 'break' → logprob: -3.0569190979003906
    4. 's' → logprob: -3.0569190979003906
    5. ' crée' → logprob: -3.4319190979003906
    6. ' break' → logprob: -3.6819190979003906
    7. '#' → logprob: -3.8069190979003906
    8. ' coupe' → logprob: -3.9319190979003906
    9. ' ' → logprob: -3.9319190979003906
    10. 'ne' → logprob: -3.9319190979003906

Token 331: ' entre' (ID: 3853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5876235961914062
    2. ')' → logprob: -1.9626235961914062
    3. '[' → logprob: -2.7126235961914062
    4. '[i' → logprob: -2.9626235961914062
    5. '[j' → logprob: -3.3376235961914062
    6. '   ' → logprob: -3.8376235961914062
    7. ' j' → logprob: -3.9626235961914062
    8. ' ' → logprob: -4.087623596191406
    9. ' la' → logprob: -4.462623596191406
    10. ' _' → logprob: -4.587623596191406

Token 332: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.29082512855529785
    2. ' p' → logprob: -1.5408251285552979
    3. 'j' → logprob: -3.665825128555298
    4. ' j' → logprob: -5.165824890136719
    5. 'i' → logprob: -5.290824890136719
    6. ' i' → logprob: -7.165824890136719
    7. ' ' → logprob: -8.290824890136719
    8. ')' → logprob: -8.540824890136719
    9. ' )' → logprob: -9.290824890136719
    10. ' ' → logprob: -9.415824890136719

Token 333: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008381000952795148
    2. '[' → logprob: -7.125838279724121
    3. 'i' → logprob: -11.125838279724121
    4. '[j' → logprob: -12.125838279724121
    5. '[
' → logprob: -12.250838279724121
    6. '   ' → logprob: -12.875838279724121
    7. ']' → logprob: -13.125838279724121
    8. '```' → logprob: -14.500838279724121
    9. 's' → logprob: -14.625838279724121
    10. '[e' → logprob: -15.375838279724121

Token 334: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018464798107743263
    2. '+' → logprob: -4.5184645652771
    3. '[i' → logprob: -5.3934645652771
    4. '],' → logprob: -6.6434645652771
    5. '][' → logprob: -7.2684645652771
    6. ']
' → logprob: -8.393465042114258
    7. '[' → logprob: -8.518465042114258
    8. '   ' → logprob: -8.643465042114258
    9. '-' → logprob: -10.018465042114258
    10. '[
' → logprob: -10.518465042114258

Token 335: ' et' (ID: 859)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2753174901008606
    2. ' et' → logprob: -2.400317430496216
    3. '[i' → logprob: -2.650317430496216
    4. '+' → logprob: -3.025317430496216
    5. '[' → logprob: -5.525317668914795
    6. '   ' → logprob: -5.525317668914795
    7. ',' → logprob: -5.650317668914795
    8. ')' → logprob: -5.650317668914795
    9. 'et' → logprob: -5.650317668914795
    10. ' and' → logprob: -5.775317668914795

Token 336: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8714238405227661
    2. ' p' → logprob: -1.3714238405227661
    3. 'j' → logprob: -1.6214238405227661
    4. ' j' → logprob: -2.7464237213134766
    5. 'i' → logprob: -3.1214237213134766
    6. ' i' → logprob: -3.9964237213134766
    7. '[i' → logprob: -5.996423721313477
    8. ' ' → logprob: -7.871423721313477
    9. ' ' → logprob: -8.121423721313477
    10. ''' → logprob: -9.871423721313477

Token 337: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001817862968891859
    2. '[' → logprob: -6.50181770324707
    3. '+' → logprob: -8.25181770324707
    4. '[
' → logprob: -10.75181770324707
    5. 'i' → logprob: -11.12681770324707
    6. '[j' → logprob: -12.25181770324707
    7. '+i' → logprob: -13.25181770324707
    8. '```' → logprob: -13.37681770324707
    9. '+
' → logprob: -13.50181770324707
    10. '
' → logprob: -13.62681770324707

Token 338: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04268260672688484
    2. ']' → logprob: -3.292682647705078
    3. '[i' → logprob: -6.417682647705078
    4. '-' → logprob: -6.542682647705078
    5. ']+' → logprob: -7.417682647705078
    6. ']
' → logprob: -8.667682647705078
    7. '][' → logprob: -8.667682647705078
    8. '[' → logprob: -8.667682647705078
    9. ' +' → logprob: -9.292682647705078
    10. '+
' → logprob: -9.292682647705078

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0074640619568526745
    2. '+' → logprob: -5.2574639320373535
    3. ']' → logprob: -6.3824639320373535
    4. ' ' → logprob: -8.132464408874512
    5. 'i' → logprob: -9.507464408874512
    6. '[i' → logprob: -10.007464408874512
    7. ')' → logprob: -10.632464408874512
    8. '   ' → logprob: -10.882464408874512
    9. '[' → logprob: -11.132464408874512
    10. ']+' → logprob: -11.132464408874512

Token 340: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009024832397699356
    2. ']' → logprob: -4.884024620056152
    3. '.' → logprob: -7.509024620056152
    4. ').' → logprob: -8.259024620056152
    5. ')
' → logprob: -8.509024620056152
    6. '[' → logprob: -9.759024620056152
    7. '])' → logprob: -9.759024620056152
    8. '[i' → logprob: -10.134024620056152
    9. '#' → logprob: -10.134024620056152
    10. ')"' → logprob: -10.384024620056152

Token 341: ' form' (ID: 1625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.288473516702652
    2. '\n' → logprob: -1.7884734869003296
    3. ':' → logprob: -4.288473606109619
    4. ')' → logprob: -4.413473606109619
    5. '\' → logprob: -4.788473606109619
    6. '    ' → logprob: -4.788473606109619
    7. '    
' → logprob: -4.913473606109619
    8. ' 
' → logprob: -5.288473606109619
    9. '#' → logprob: -5.538473606109619
    10. ' ' → logprob: -5.788473606109619

Token 342: 'ant' (ID: 493)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4749838411808014
    2. 'e' → logprob: -1.474983811378479
    3. 'ée' → logprob: -2.5999839305877686
    4. 'er' → logprob: -3.3499839305877686
    5. 'ant' → logprob: -3.8499839305877686
    6. 'és' → logprob: -4.3499836921691895
    7. 'es' → logprob: -6.7249836921691895
    8. 'ées' → logprob: -6.7249836921691895
    9. 'ed' → logprob: -6.9749836921691895
    10. 'ent' → logprob: -7.7249836921691895

Token 343: ' deux' (ID: 10301)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.23784975707530975
    2. ' a' → logprob: -2.487849712371826
    3. ' une' → logprob: -2.862849712371826
    4. '<|end|>' → logprob: -3.112849712371826
    5. '\n' → logprob: -5.112849712371826
    6. ' ' → logprob: -5.362849712371826
    7. 'a' → logprob: -5.612849712371826
    8. 'un' → logprob: -6.112849712371826
    9. ''un' → logprob: -6.237849712371826
    10. ''' → logprob: -6.612849712371826

Token 344: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.3509598970413208
    2. 'segments' → logprob: -1.2259598970413208
    3. '_segments' → logprob: -6.975959777832031
    4. 'def' → logprob: -8.725959777832031
    5. '#' → logprob: -8.850959777832031
    6. ' morceaux' → logprob: -8.850959777832031
    7. '\n' → logprob: -8.850959777832031
    8. ' distinct' → logprob: -9.100959777832031
    9. ' segmentos' → logprob: -9.100959777832031
    10. ')' → logprob: -9.475959777832031

Token 345: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045358963310718536
    2. ')' → logprob: -4.045359134674072
    3. 'def' → logprob: -4.920359134674072
    4. '<|end|>' → logprob: -4.920359134674072
    5. '.' → logprob: -5.420359134674072
    6. ':' → logprob: -6.045359134674072
    7. ',' → logprob: -6.545359134674072
    8. '<|end|>' → logprob: -6.670359134674072
    9. '):' → logprob: -7.170359134674072
    10. '    
' → logprob: -7.795359134674072

Token 346: 'és' (ID: 1756)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.29476308822631836
    2. '   ' → logprob: -2.2947630882263184
    3. 'és' → logprob: -3.0447630882263184
    4. 'ation' → logprob: -3.2947630882263184
    5. 'é' → logprob: -3.6697630882263184
    6. 'ant' → logprob: -4.169763088226318
    7. '#' → logprob: -5.669763088226318
    8. 'cut' → logprob: -5.794763088226318
    9. '```' → logprob: -5.794763088226318
    10. 'ate' → logprob: -6.544763088226318

Token 347: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11788675934076309
    2. ')' → logprob: -3.117886781692505
    3. ':' → logprob: -3.117886781692505
    4. 'def' → logprob: -5.117886543273926
    5. '<|end|>' → logprob: -5.117886543273926
    6. '):' → logprob: -5.617886543273926
    7. '.' → logprob: -6.117886543273926
    8. ',' → logprob: -6.617886543273926
    9. '<|end|>' → logprob: -6.867886543273926
    10. '
' → logprob: -7.492886543273926

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06674812734127045
    2. '    
' → logprob: -3.8167481422424316
    3. 'def' → logprob: -4.566748142242432
    4. '<|end|>' → logprob: -4.691748142242432
    5. ')' → logprob: -4.816748142242432
    6. '\' → logprob: -5.816748142242432
    7. '<|end|>' → logprob: -6.066748142242432
    8. '\n' → logprob: -6.316748142242432
    9. ':' → logprob: -6.941748142242432
    10. '(n' → logprob: -6.941748142242432

Token 349: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042354147881269455
    2. ':' → logprob: -3.542354106903076
    3. ')' → logprob: -4.917354106903076
    4. '    
' → logprob: -6.667354106903076
    5. 'def' → logprob: -6.917354106903076
    6. '):' → logprob: -7.292354106903076
    7. '
' → logprob: -7.917354106903076
    8. '[' → logprob: -8.167354583740234
    9. '<|end|>' → logprob: -8.292354583740234
    10. ',' → logprob: -8.417354583740234

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011046060360968113
    2. 'n' → logprob: -5.636045932769775
    3. '    
' → logprob: -5.761045932769775
    4. 'def' → logprob: -6.011045932769775
    5. 'import' → logprob: -7.636045932769775
    6. '#' → logprob: -8.136046409606934
    7. '
' → logprob: -8.261046409606934
    8. '<|end|>' → logprob: -8.386046409606934
    9. '<|end|>' → logprob: -9.386046409606934
    10. '    ' → logprob: -9.886046409606934

Token 351: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0637892335653305
    2. 'n' → logprob: -2.938789129257202
    3. '    
' → logprob: -5.563789367675781
    4. 'def' → logprob: -6.688789367675781
    5. ' n' → logprob: -7.188789367675781
    6. '
' → logprob: -7.188789367675781
    7. 'import' → logprob: -7.938789367675781
    8. '    ' → logprob: -7.938789367675781
    9. '#' (adapté à ' #') → logprob: -8.063789367675781
    10. '(n' → logprob: -8.563789367675781

Token 352: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04150262847542763
    2. '   ' → logprob: -3.9165027141571045
    3. 'def' → logprob: -3.9165027141571045
    4. ' n' → logprob: -7.541502475738525
    5. '#' → logprob: -8.791502952575684
    6. 'import' → logprob: -9.416502952575684
    7. '    
' → logprob: -11.041502952575684
    8. 'from' → logprob: -11.541502952575684
    9. '```' → logprob: -11.541502952575684
    10. 'N' → logprob: -11.666502952575684

Token 353: ' remarque' (ID: 183406)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.655189037322998
    2. 'def' → logprob: -0.905189037322998
    3. ' n' → logprob: -3.780189037322998
    4. ' =' → logprob: -3.780189037322998
    5. ' peut' → logprob: -5.530189037322998
    6. ' def' → logprob: -5.655189037322998
    7. '_' → logprob: -5.655189037322998
    8. 'n' → logprob: -6.155189037322998
    9. '#' → logprob: -6.280189037322998
    10. ' ' → logprob: -6.405189037322998

Token 354: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19635441899299622
    2. '    ' → logprob: -2.946354389190674
    3. 'import' → logprob: -3.071354389190674
    4. ' ' → logprob: -3.571354389190674
    5. '_' → logprob: -4.071354389190674
    6. ' que' → logprob: -4.696354389190674
    7. 'def' → logprob: -4.946354389190674
    8. ',' → logprob: -5.696354389190674
    9. '       ' → logprob: -6.196354389190674
    10. '  ' → logprob: -6.446354389190674

Token 355: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14987491071224213
    2. ' la' → logprob: -2.2748749256134033
    3. ' le' → logprob: -5.149874687194824
    4. '    ' → logprob: -5.774874687194824
    5. 'la' → logprob: -5.774874687194824
    6. ' chaque' → logprob: -5.774874687194824
    7. 'import' → logprob: -6.399874687194824
    8. ' les' → logprob: -6.524874687194824
    9. ' ' → logprob: -6.649874687194824
    10. 'le' → logprob: -6.774874687194824

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027022507041692734
    2. '#' → logprob: -4.777022361755371
    3. '    
' → logprob: -4.902022361755371
    4. '    ' → logprob: -5.777022361755371
    5. ' #' → logprob: -6.027022361755371
    6. ' 
' → logprob: -7.527022361755371
    7. 'def' → logprob: -7.527022361755371
    8. 'n' → logprob: -7.652022361755371
    9. ' n' → logprob: -7.777022361755371
    10. '\n' → logprob: -7.902022361755371

Token 357: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04799295961856842
    2. '#' (adapté à ' #') → logprob: -3.4229929447174072
    3. ' #' → logprob: -4.797993183135986
    4. '    
' → logprob: -5.797993183135986
    5. '#
' → logprob: -7.547993183135986
    6. '    ' → logprob: -7.547993183135986
    7. 'def' → logprob: -7.922993183135986
    8. '
' → logprob: -8.422992706298828
    9. 'n' → logprob: -8.797992706298828
    10. ' #
' → logprob: -8.922992706298828

Token 358: ' -' (ID: 533)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6216682195663452
    2. 'n' → logprob: -1.9966682195663452
    3. '#' → logprob: -2.7466683387756348
    4. ' #' → logprob: -2.7466683387756348
    5. 'dp' → logprob: -2.9966683387756348
    6. ' dp' → logprob: -3.4966683387756348
    7. 'def' → logprob: -3.6216683387756348
    8. '   ' → logprob: -3.9966683387756348
    9. ' max' → logprob: -4.246668338775635
    10. ' 
' → logprob: -4.371668338775635

Token 359: ' Chaque' (ID: 94758)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.179850459098816
    2. '   ' → logprob: -1.304850459098816
    3. '#' → logprob: -2.4298505783081055
    4. ' n' → logprob: -3.0548505783081055
    5. ' chaque' → logprob: -3.1798505783081055
    6. ' le' → logprob: -3.4298505783081055
    7. ' on' → logprob: -3.6798505783081055
    8. 'la' → logprob: -4.0548505783081055
    9. ' les' → logprob: -4.1798505783081055
    10. 'import' → logprob: -4.3048505783081055

Token 360: ' segment' (ID: 14806)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4440200328826904
    2. 'cut' → logprob: -1.5690200328826904
    3. 'segment' → logprob: -1.6940200328826904
    4. ' segment' → logprob: -1.8190200328826904
    5. 'joint' → logprob: -3.6940200328826904
    6. ' cut' → logprob: -3.8190200328826904
    7. 'i' → logprob: -4.0690202713012695
    8. ' p' → logprob: -4.3190202713012695
    9. 'n' → logprob: -4.3190202713012695
    10. 'p' → logprob: -4.3190202713012695

Token 361: ' contient' (ID: 89067)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.42081549763679504
    2. '   ' → logprob: -1.9208154678344727
    3. ' se' → logprob: -3.1708154678344727
    4. ' peut' → logprob: -3.2958154678344727
    5. ' doit' → logprob: -4.170815467834473
    6. '_' → logprob: -4.420815467834473
    7. ' =' → logprob: -4.670815467834473
    8. ' a' → logprob: -4.920815467834473
    9. 'est' → logprob: -5.045815467834473
    10. 's' → logprob: -5.045815467834473

Token 362: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.8322604298591614
    2. ' au' → logprob: -0.9572604298591614
    3. '   ' → logprob: -1.8322603702545166
    4. 'une' → logprob: -5.957260608673096
    5. 'un' → logprob: -6.082260608673096
    6. ' soit' → logprob: -6.207260608673096
    7. ' p' → logprob: -6.332260608673096
    8. 'p' → logprob: -6.457260608673096
    9. 't' → logprob: -6.457260608673096
    10. ' une' → logprob: -6.582260608673096

Token 363: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.016547704115509987
    2. ' moins' → logprob: -4.266547679901123
    3. '   ' → logprob: -6.766547679901123
    4. 'mo' → logprob: -8.141548156738281
    5. 'minimum' → logprob: -8.641548156738281
    6. ' ' → logprob: -8.891548156738281
    7. '  ' → logprob: -8.891548156738281
    8. 'm' → logprob: -8.891548156738281
    9. ' minimum' → logprob: -9.141548156738281
    10. 'plus' → logprob: -9.641548156738281

Token 364: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.2277294397354126
    2. ' un' → logprob: -1.6027294397354126
    3. 'une' → logprob: -6.727729320526123
    4. '1' → logprob: -7.852729320526123
    5. '   ' → logprob: -7.977729320526123
    6. ' ' → logprob: -8.727729797363281
    7. ''un' → logprob: -9.977729797363281
    8. '```' → logprob: -10.102729797363281
    9. ' une' → logprob: -10.227729797363281
    10. 'one' → logprob: -10.477729797363281

Token 365: ' tuy' (ID: 45164)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3803786039352417
    2. 'pipe' → logprob: -1.8803786039352417
    3. 't' → logprob: -2.2553787231445312
    4. ' pipe' → logprob: -3.6303787231445312
    5. ' tuy' → logprob: -4.630378723144531
    6. '_' → logprob: -5.130378723144531
    7. ' p' → logprob: -5.755378723144531
    8. ' ' → logprob: -6.130378723144531
    9. 'tube' → logprob: -6.255378723144531
    10. '\' → logprob: -6.755378723144531

Token 366: 'au' (ID: 753)
  Prédit: 'au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.0015329512534663081
    2. 'p' → logprob: -7.376533031463623
    3. 'pipe' → logprob: -7.876533031463623
    4. 'aux' → logprob: -8.126532554626465
    5. '#' → logprob: -9.126532554626465
    6. '   ' → logprob: -10.126532554626465
    7. 'x' → logprob: -11.001532554626465
    8. '```' → logprob: -11.126532554626465
    9. 'e' → logprob: -11.376532554626465
    10. 'o' → logprob: -12.126532554626465

Token 367: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021002400666475296
    2. ',' → logprob: -4.521002292633057
    3. 'def' → logprob: -5.771002292633057
    4. '.' → logprob: -6.521002292633057
    5. '    
' → logprob: -6.771002292633057
    6. '[' → logprob: -7.396002292633057
    7. '
' → logprob: -7.646002292633057
    8. ':' → logprob: -8.021002769470215
    9. ')' → logprob: -8.146002769470215
    10. '(p' → logprob: -8.271002769470215

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006627569673582911
    2. '    
' → logprob: -7.750662803649902
    3. ')' → logprob: -10.125662803649902
    4. ',' → logprob: -10.250662803649902
    5. 'def' → logprob: -10.250662803649902
    6. '#' → logprob: -11.000662803649902
    7. '    ' → logprob: -11.375662803649902
    8. '<|end|>' → logprob: -11.500662803649902
    9. '\' → logprob: -11.625662803649902
    10. '
' → logprob: -11.625662803649902

Token 369: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014311899431049824
    2. 'def' → logprob: -7.251430988311768
    3. '#' (adapté à ' #') → logprob: -7.751430988311768
    4. '    
' → logprob: -8.501431465148926
    5. 'import' → logprob: -10.251431465148926
    6. '
' → logprob: -11.751431465148926
    7. '    ' → logprob: -12.126431465148926
    8. '```' → logprob: -12.251431465148926
    9. ' #' → logprob: -12.376431465148926
    10. ')' → logprob: -12.626431465148926

Token 370: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003372223349288106
    2. '    
' → logprob: -6.6283721923828125
    3. 'n' → logprob: -7.2533721923828125
    4. 'def' → logprob: -8.003372192382812
    5. '
' → logprob: -8.503372192382812
    6. '\' → logprob: -8.503372192382812
    7. ')' → logprob: -9.753372192382812
    8. '#' → logprob: -9.878372192382812
    9. ' 
' → logprob: -10.003372192382812
    10. 'p' → logprob: -10.128372192382812

Token 371: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15324445068836212
    2. '#' → logprob: -2.9032444953918457
    3. ' n' → logprob: -3.9032444953918457
    4. 'def' → logprob: -4.028244495391846
    5. ' #' → logprob: -4.403244495391846
    6. 'n' → logprob: -5.278244495391846
    7. ' for' → logprob: -5.403244495391846
    8. 'On' → logprob: -5.528244495391846
    9. 'Pour' → logprob: -5.653244495391846
    10. 'from' → logprob: -5.903244495391846

Token 372: ' salaire' (ID: 135427)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5318894386291504
    2. ' n' → logprob: -1.1568894386291504
    3. ' total' → logprob: -4.03188943862915
    4. ' #' → logprob: -4.15688943862915
    5. '#' → logprob: -4.53188943862915
    6. 'def' → logprob: -4.53188943862915
    7. '   ' → logprob: -4.78188943862915
    8. ' nombre' → logprob: -4.78188943862915
    9. ' ' → logprob: -5.65688943862915
    10. 's' → logprob: -6.03188943862915

Token 373: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5024803876876831
    2. '=' → logprob: -1.877480387687683
    3. ' est' → logprob: -2.1274805068969727
    4. '   ' → logprob: -2.6274805068969727
    5. '_max' → logprob: -4.502480506896973
    6. '_total' → logprob: -4.752480506896973
    7. '_' → logprob: -5.127480506896973
    8. ' maximal' → logprob: -5.252480506896973
    9. 'max' → logprob: -5.502480506896973
    10. ' ' → logprob: -5.752480506896973

Token 374: ' (#' (ID: 66375)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6034913063049316
    2. 'nombre' → logprob: -2.2284913063049316
    3. ' segments' → logprob: -2.3534913063049316
    4. 'segments' → logprob: -2.3534913063049316
    5. '   ' → logprob: -2.6034913063049316
    6. ' (' → logprob: -3.2284913063049316
    7. '(nombre' → logprob: -4.978491306304932
    8. ' s' → logprob: -5.228491306304932
    9. '(s' → logprob: -5.228491306304932
    10. ' ' → logprob: -5.478491306304932

Token 375: 'segments' (ID: 110314)
  Prédit: 'segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.1895812600851059
    2. ' segments' → logprob: -2.0645811557769775
    3. '_segments' → logprob: -4.314581394195557
    4. '_' → logprob: -4.314581394195557
    5. ' de' → logprob: -4.689581394195557
    6. 'de' → logprob: -5.689581394195557
    7. ' _' → logprob: -6.314581394195557
    8. ')' → logprob: -6.939581394195557
    9. '   ' → logprob: -7.064581394195557
    10. 'segment' → logprob: -7.189581394195557

Token 376: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18286392092704773
    2. ' )' → logprob: -2.18286395072937
    3. ' +' → logprob: -3.18286395072937
    4. ' *' → logprob: -4.682863712310791
    5. '+' → logprob: -6.057863712310791
    6. '   ' → logprob: -7.932863712310791
    7. '*' → logprob: -8.05786418914795
    8. ' ' → logprob: -8.80786418914795
    9. ')*' → logprob: -9.18286418914795
    10. ' ' → logprob: -9.43286418914795

Token 377: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004192606080323458
    2. '*' → logprob: -5.50419282913208
    3. ')' → logprob: -10.004192352294922
    4. ' ' → logprob: -10.879192352294922
    5. ' +' → logprob: -11.129192352294922
    6. ' ' → logprob: -11.379192352294922
    7. ' **' → logprob: -12.254192352294922
    8. ' )' → logprob: -12.379192352294922
    9. '   ' → logprob: -12.879192352294922
    10. ' *
' → logprob: -13.004192352294922

Token 378: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8163823485374451
    2. '(' → logprob: -1.1913824081420898
    3. '(sum' → logprob: -2.19138240814209
    4. '(total' → logprob: -2.56638240814209
    5. '(s' → logprob: -2.94138240814209
    6. 'sum' → logprob: -5.69138240814209
    7. ' total' → logprob: -5.94138240814209
    8. 'total' → logprob: -6.19138240814209
    9. ' sum' → logprob: -6.69138240814209
    10. '(S' → logprob: -7.69138240814209

Token 379: 's' (ID: 82)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7544955015182495
    2. ' sum' → logprob: -1.6294955015182495
    3. 'sum' → logprob: -1.8794955015182495
    4. 'total' → logprob: -2.504495620727539
    5. ' somme' → logprob: -3.129495620727539
    6. ' (' → logprob: -3.754495620727539
    7. 's' → logprob: -4.379495620727539
    8. '(sum' → logprob: -5.379495620727539
    9. '(' → logprob: -5.629495620727539
    10. '(s' → logprob: -5.879495620727539

Token 380: 'omme' (ID: 30420)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0898725688457489
    2. 'omme' → logprob: -3.4648725986480713
    3. 'egment' → logprob: -4.589872360229492
    4. 'alary' → logprob: -4.714872360229492
    5. ')' → logprob: -5.214872360229492
    6. 'eg' → logprob: -5.339872360229492
    7. 'e' → logprob: -5.589872360229492
    8. 'é' → logprob: -6.089872360229492
    9. 'umme' → logprob: -6.339872360229492
    10. 't' → logprob: -6.464872360229492

Token 381: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07917133718729019
    2. ')' → logprob: -2.9541714191436768
    3. ' des' → logprob: -5.829171180725098
    4. 'des' → logprob: -5.829171180725098
    5. '_total' → logprob: -5.954171180725098
    6. '_tot' → logprob: -5.954171180725098
    7. '   ' → logprob: -6.079171180725098
    8. ' )' → logprob: -6.079171180725098
    9. '_des' → logprob: -6.204171180725098
    10. '(' → logprob: -6.579171180725098

Token 382: ' longue' (ID: 59564)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06946223229169846
    2. ' _' → logprob: -3.819462299346924
    3. '_p' → logprob: -3.944462299346924
    4. '_t' → logprob: -5.444462299346924
    5. ')' → logprob: -5.569462299346924
    6. 'p' → logprob: -5.694462299346924
    7. 't' → logprob: -5.819462299346924
    8. ' ' → logprob: -5.819462299346924
    9. ' )' → logprob: -6.069462299346924
    10. 'pipes' → logprob: -6.194462299346924

Token 383: 'urs' (ID: 1628)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0057417154312134
    2. 's' → logprob: -1.0057417154312134
    3. 'urs' → logprob: -1.5057417154312134
    4. ')' → logprob: -4.130741596221924
    5. ' _' → logprob: -4.880741596221924
    6. ' )' → logprob: -5.255741596221924
    7. 'r' → logprob: -5.630741596221924
    8. '_p' → logprob: -5.630741596221924
    9. '   ' → logprob: -6.255741596221924
    10. 't' → logprob: -6.505741596221924

Token 384: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45094364881515503
    2. ' )' → logprob: -1.7009437084197998
    3. ' des' → logprob: -2.4509437084198
    4. '_' → logprob: -3.2009437084198
    5. 'des' → logprob: -3.8259437084198
    6. '_des' → logprob: -3.9509437084198
    7. '   ' → logprob: -5.325943470001221
    8. ' ' → logprob: -6.325943470001221
    9. '_tot' → logprob: -6.575943470001221
    10. ' _' → logprob: -7.075943470001221

Token 385: ' tuy' (ID: 45164)
  Prédit: ' tuy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuy' → logprob: -1.2192811965942383
    2. 't' → logprob: -1.7192811965942383
    3. ' p' → logprob: -2.3442811965942383
    4. ' ' → logprob: -2.4692811965942383
    5. 'p' → logprob: -2.9692811965942383
    6. ' t' → logprob: -3.0942811965942383
    7. ' ' → logprob: -3.2192811965942383
    8. ' pipes' → logprob: -3.4692811965942383
    9. 'pipes' → logprob: -3.5942811965942383
    10. '_' → logprob: -3.7192811965942383

Token 386: 'aux' (ID: 5454)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.26168543100357056
    2. '```' → logprob: -3.011685371398926
    3. 'pipes' → logprob: -3.511685371398926
    4. '##' → logprob: -3.636685371398926
    5. '   ' → logprob: -3.886685371398926
    6. 'x' → logprob: -4.011685371398926
    7. 'p' → logprob: -4.136685371398926
    8. '_' → logprob: -4.386685371398926
    9. 'aux' → logprob: -5.136685371398926
    10. '#' → logprob: -5.136685371398926

Token 387: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7189016938209534
    2. ')' → logprob: -1.5939016342163086
    3. '+' → logprob: -1.7189016342163086
    4. '   ' → logprob: -3.2189016342163086
    5. ' et' → logprob: -3.3439016342163086
    6. ' )' → logprob: -3.7189016342163086
    7. 'et' → logprob: -3.8439016342163086
    8. '    ' → logprob: -5.843901634216309
    9. ')+' → logprob: -6.593901634216309
    10. ',' → logprob: -7.718901634216309

Token 388: ' des' (ID: 731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.004766583442688
    2. 'j' → logprob: -1.504766583442688
    3. 's' → logprob: -1.629766583442688
    4. 'sum' → logprob: -2.6297664642333984
    5. '(s' → logprob: -3.5047664642333984
    6. 'des' → logprob: -3.8797664642333984
    7. ' #' → logprob: -4.379766464233398
    8. '(j' → logprob: -4.754766464233398
    9. '(sum' → logprob: -4.879766464233398
    10. ' joints' → logprob: -5.129766464233398

Token 389: ' joints' (ID: 47223)
  Prédit: ' joints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joints' → logprob: -0.7106566429138184
    2. 'j' → logprob: -0.9606566429138184
    3. ' j' → logprob: -2.9606566429138184
    4. '_j' → logprob: -3.2106566429138184
    5. ' ' → logprob: -4.460656642913818
    6. ' espaces' → logprob: -4.835656642913818
    7. ' joins' → logprob: -6.460656642913818
    8. ' ' → logprob: -6.585656642913818
    9. '\n' → logprob: -6.585656642913818
    10. 'joins' → logprob: -6.835656642913818

Token 390: ' utilisés' (ID: 94258)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03010161593556404
    2. ' )' → logprob: -3.6551015377044678
    3. ' +' → logprob: -6.780101776123047
    4. '   ' → logprob: -7.155101776123047
    5. '+' → logprob: -7.405101776123047
    6. '#' → logprob: -8.280101776123047
    7. '[' → logprob: -8.780101776123047
    8. ')
' → logprob: -8.905101776123047
    9. '))' → logprob: -9.405101776123047
    10. '[i' → logprob: -9.655101776123047

Token 391: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012068313546478748
    2. ' )' → logprob: -4.637068271636963
    3. '+' → logprob: -6.762068271636963
    4. ' +' → logprob: -7.387068271636963
    5. ')
' → logprob: -8.637068748474121
    6. '   ' → logprob: -9.137068748474121
    7. ').' → logprob: -10.512068748474121
    8. ')\' → logprob: -10.762068748474121
    9. '.' → logprob: -11.012068748474121
    10. '`)' → logprob: -11.137068748474121

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004906039219349623
    2. ')' → logprob: -6.504906177520752
    3. '    
' → logprob: -6.879906177520752
    4. 'def' → logprob: -6.879906177520752
    5. 'n' → logprob: -8.254905700683594
    6. '\' → logprob: -8.504905700683594
    7. '\n' → logprob: -8.754905700683594
    8. '
' → logprob: -9.129905700683594
    9. ')
' → logprob: -9.629905700683594
    10. '(n' → logprob: -9.879905700683594

Token 393: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020049283280968666
    2. '    
' → logprob: -4.520049095153809
    3. '
' → logprob: -5.895049095153809
    4. '\n' → logprob: -6.395049095153809
    5. 'def' → logprob: -6.895049095153809
    6. ')' → logprob: -7.020049095153809
    7. '\' → logprob: -7.770049095153809
    8. 'n' → logprob: -7.770049095153809
    9. 'import' → logprob: -7.895049095153809
    10. '    ' → logprob: -8.270049095153809

Token 394: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15810999274253845
    2. '
' → logprob: -2.4081099033355713
    3. '    
' → logprob: -3.5331099033355713
    4. 'def' → logprob: -4.90811014175415
    5. 'n' → logprob: -5.15811014175415
    6. '\n' → logprob: -5.40811014175415
    7. '\' → logprob: -6.40811014175415
    8. '

' → logprob: -6.65811014175415
    9. ')' → logprob: -7.15811014175415
    10. '  
' → logprob: -7.28311014175415

Token 395: ' Les' (ID: 7029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7396221160888672
    2. '#' → logprob: -0.9896221160888672
    3. ' n' → logprob: -2.989622116088867
    4. 'n' → logprob: -3.364622116088867
    5. ' #' → logprob: -3.739622116088867
    6. 'def' → logprob: -3.864622116088867
    7. 'On' → logprob: -5.614622116088867
    8. 'La' → logprob: -5.614622116088867
    9. 'from' → logprob: -6.489622116088867
    10. 'Le' → logprob: -6.739622116088867

Token 396: ' tuy' (ID: 45164)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.500099539756775
    2. 'n' → logprob: -1.750099539756775
    3. ' n' → logprob: -2.0000996589660645
    4. 'segments' → logprob: -2.1250996589660645
    5. ' segments' → logprob: -2.3750996589660645
    6. ' #' → logprob: -3.2500996589660645
    7. 't' → logprob: -3.3750996589660645
    8. ' longue' → logprob: -3.7500996589660645
    9. 'def' → logprob: -4.1250996589660645
    10. '   ' → logprob: -4.2500996589660645

Token 397: 'aux' (ID: 5454)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7779254913330078
    2. '   ' → logprob: -1.6529254913330078
    3. 'aux' → logprob: -1.7779254913330078
    4. '#' → logprob: -2.652925491333008
    5. '```' → logprob: -3.652925491333008
    6. 'au' → logprob: -4.277925491333008
    7. 'es' → logprob: -4.527925491333008
    8. 'pipes' → logprob: -4.527925491333008
    9. '##' → logprob: -4.777925491333008
    10. 'x' → logprob: -5.152925491333008

Token 398: ' sont' (ID: 5242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6751100420951843
    2. ' =' → logprob: -1.300110101699829
    3. '[' → logprob: -2.800110101699829
    4. 's' → logprob: -2.925110101699829
    5. '[i' → logprob: -3.550110101699829
    6. ',' → logprob: -4.05010986328125
    7. '[n' → logprob: -4.67510986328125
    8. '#' → logprob: -5.05010986328125
    9. 'def' → logprob: -5.42510986328125
    10. '=' → logprob: -5.55010986328125

Token 399: ' tous' (ID: 10688)
  Prédit: 'tou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tou' → logprob: -1.491437315940857
    2. ' constants' → logprob: -1.741437315940857
    3. 't' → logprob: -1.991437315940857
    4. ' toujours' → logprob: -2.4914374351501465
    5. ' fixes' → logprob: -2.6164374351501465
    6. 'fix' → logprob: -2.6164374351501465
    7. 'constants' → logprob: -2.8664374351501465
    8. ' tous' → logprob: -3.2414374351501465
    9. ' constantes' → logprob: -3.8664374351501465
    10. ' donn' → logprob: -3.8664374351501465

Token 400: ' donn' (ID: 20414)
  Prédit: ' présents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' présents' → logprob: -1.0002089738845825
    2. ' utilisés' → logprob: -2.000208854675293
    3. '_' → logprob: -2.125208854675293
    4. ',' → logprob: -2.250208854675293
    5. ' _' → logprob: -3.250208854675293
    6. ' p' → logprob: -3.500208854675293
    7. '[' → logprob: -3.625208854675293
    8. ' ' → logprob: -3.750208854675293
    9. ' présentes' → logprob: -4.375208854675293
    10. 'distinct' → logprob: -4.625208854675293

Token 401: 'és' (ID: 1756)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5992417335510254
    2. '[' → logprob: -1.2242417335510254
    3. 'és' → logprob: -3.2242417335510254
    4. 'def' → logprob: -3.8492417335510254
    5. '=' → logprob: -4.099241733551025
    6. ' =' → logprob: -4.099241733551025
    7. '   ' → logprob: -4.724241733551025
    8. '__' → logprob: -4.849241733551025
    9. '[
' → logprob: -4.974241733551025
    10. 'ées' → logprob: -5.224241733551025

Token 402: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.141290307044983
    2. ')' → logprob: -1.391290307044983
    3. '[' → logprob: -1.641290307044983
    4. '   ' → logprob: -3.0162901878356934
    5. '.' → logprob: -3.5162901878356934
    6. '[i' → logprob: -3.8912901878356934
    7. ' =' → logprob: -3.8912901878356934
    8. '[
' → logprob: -3.8912901878356934
    9. '_' → logprob: -4.391290187835693
    10. '[n' → logprob: -4.641290187835693

Token 403: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3647376000881195
    2. '   ' → logprob: -1.739737629890442
    3. ',' → logprob: -2.9897375106811523
    4. 'def' → logprob: -3.7397375106811523
    5. ')
' → logprob: -4.739737510681152
    6. '),' → logprob: -4.989737510681152
    7. '[' → logprob: -5.364737510681152
    8. ' )' → logprob: -5.364737510681152
    9. ' =' → logprob: -5.614737510681152
    10. '
' → logprob: -5.614737510681152

Token 404: 'ont' (ID: 645)
  Prédit: 'paces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paces' → logprob: -0.6621527075767517
    2. '[' → logprob: -1.5371527671813965
    3. ' =' → logprob: -2.5371527671813965
    4. '=' → logprob: -3.4121527671813965
    5. '   ' → logprob: -3.6621527671813965
    6. ')' → logprob: -3.6621527671813965
    7. 'pace' → logprob: -4.0371527671813965
    8. 'ur' → logprob: -4.0371527671813965
    9. 'ys' → logprob: -4.1621527671813965
    10. 'p' → logprob: -5.0371527671813965

Token 405: ' toujours' (ID: 16867)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1636883020401
    2. '   ' → logprob: -1.2886883020401
    3. ' présents' → logprob: -2.5386881828308105
    4. ' utilisés' → logprob: -2.6636881828308105
    5. '[' → logprob: -3.6636881828308105
    6. ' toujours' → logprob: -3.6636881828308105
    7. '  ' → logprob: -4.2886881828308105
    8. ' des' → logprob: -4.4136881828308105
    9. ' ' → logprob: -4.5386881828308105
    10. 'import' → logprob: -4.6636881828308105

Token 406: ' compt' (ID: 39238)
  Prédit: ' utilisés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisés' → logprob: -0.6348005533218384
    2. ' présents' → logprob: -1.1348005533218384
    3. 'util' → logprob: -3.009800434112549
    4. ' inclus' → logprob: -3.884800434112549
    5. 'prés' → logprob: -4.259800434112549
    6. ',' → logprob: -4.884800434112549
    7. ' utilisées' → logprob: -4.884800434112549
    8. ' utilis' → logprob: -4.884800434112549
    9. ' présentes' → logprob: -5.009800434112549
    10. ')' → logprob: -5.259800434112549

Token 407: 'és' (ID: 1756)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.618621289730072
    2. 'és' → logprob: -1.3686213493347168
    3. '[]' → logprob: -2.118621349334717
    4. '[' → logprob: -4.118621349334717
    5. ']' → logprob: -4.368621349334717
    6. '  ' → logprob: -4.618621349334717
    7. ')' → logprob: -5.243621349334717
    8. '       ' → logprob: -5.368621349334717
    9. 'ed' → logprob: -5.493621349334717
    10. '=' → logprob: -5.493621349334717

Token 408: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16273154318332672
    2. '   ' → logprob: -2.287731647491455
    3. ',' → logprob: -3.912731647491455
    4. ' )' → logprob: -4.287731647491455
    5. ' +' → logprob: -6.037731647491455
    6. '[' → logprob: -6.162731647491455
    7. '),' → logprob: -6.412731647491455
    8. ')
' → logprob: -6.662731647491455
    9. '[i' → logprob: -7.037731647491455
    10. '[p' → logprob: -7.037731647491455

Token 409: ' peu' (ID: 9235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031880952417850494
    2. ' )' → logprob: -3.6568808555603027
    3. '   ' → logprob: -6.531880855560303
    4. ' p' → logprob: -6.781880855560303
    5. ',' → logprob: -6.781880855560303
    6. '\n' → logprob: -8.656881332397461
    7. '[' → logprob: -9.031881332397461
    8. 'p' → logprob: -9.031881332397461
    9. ' 
' → logprob: -9.156881332397461
    10. ' ' → logprob: -9.156881332397461

Token 410: ' importe' (ID: 80493)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7836211323738098
    2. ' de' → logprob: -0.9086211323738098
    3. '_' → logprob: -2.283621072769165
    4. ' )' → logprob: -4.408621311187744
    5. ')' → logprob: -5.033621311187744
    6. '   ' → logprob: -5.783621311187744
    7. ' =' → logprob: -5.908621311187744
    8. ' importe' → logprob: -6.033621311187744
    9. '_de' → logprob: -6.533621311187744
    10. ' ' → logprob: -6.908621311187744

Token 411: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1495475023984909
    2. ' )' → logprob: -2.149547576904297
    3. ' des' → logprob: -5.274547576904297
    4. '   ' → logprob: -5.524547576904297
    5. ' ' → logprob: -5.774547576904297
    6. '),' → logprob: -6.649547576904297
    7. 's' → logprob: -7.024547576904297
    8. '```' → logprob: -7.024547576904297
    9. 'les' → logprob: -7.149547576904297
    10. 'des' → logprob: -7.149547576904297

Token 412: ' segmentation' (ID: 96046)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8270010948181152
    2. ' )' → logprob: -1.3270010948181152
    3. ')' → logprob: -2.2020010948181152
    4. ' _' → logprob: -2.9520010948181152
    5. 's' → logprob: -3.0770010948181152
    6. ' ' → logprob: -3.8270010948181152
    7. ' ' → logprob: -4.952001094818115
    8. '```' → logprob: -4.952001094818115
    9. '`' → logprob: -5.327001094818115
    10. ' p' → logprob: -5.327001094818115

Token 413: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16974802315235138
    2. ')' → logprob: -2.919748067855835
    3. '
' → logprob: -2.919748067855835
    4. ')
' → logprob: -4.044747829437256
    5. 'def' → logprob: -4.419747829437256
    6. ',' → logprob: -5.669747829437256
    7. '\n' → logprob: -6.044747829437256
    8. '[' → logprob: -6.169747829437256
    9. '    
' → logprob: -6.294747829437256
    10. ':' → logprob: -6.669747829437256

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011876079253852367
    2. 'def' → logprob: -5.386876106262207
    3. '    
' → logprob: -5.886876106262207
    4. 'n' → logprob: -6.511876106262207
    5. '
' → logprob: -6.886876106262207
    6. ')' → logprob: -7.636876106262207
    7. '\' → logprob: -7.761876106262207
    8. '\n' → logprob: -7.886876106262207
    9. '```' → logprob: -9.511876106262207
    10. 'import' → logprob: -9.761876106262207

Token 415: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03444809094071388
    2. '    
' → logprob: -3.6594481468200684
    3. '
' → logprob: -6.409448146820068
    4. ')' → logprob: -6.659448146820068
    5. '    ' → logprob: -6.909448146820068
    6. '<|end|>' → logprob: -7.409448146820068
    7. ',' → logprob: -7.534448146820068
    8. 'import' → logprob: -7.909448146820068
    9. '\' → logprob: -7.909448146820068
    10. '\n' → logprob: -8.03444766998291

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09355014562606812
    2. '    
' → logprob: -3.093550205230713
    3. '
' → logprob: -3.218550205230713
    4. '\n' → logprob: -7.218550205230713
    5. 'import' → logprob: -7.593550205230713
    6. 'def' → logprob: -7.593550205230713
    7. '

' → logprob: -7.718550205230713
    8. '    
    
' → logprob: -8.218549728393555
    9. 'n' → logprob: -8.468549728393555
    10. '  
' → logprob: -8.718549728393555

Token 417: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02577601931989193
    2. '    
' → logprob: -4.275775909423828
    3. 'total' → logprob: -5.275775909423828
    4. '
' → logprob: -5.525775909423828
    5. 'p' → logprob: -7.900775909423828
    6. '#' (adapté à ' #') → logprob: -8.150775909423828
    7. 'long' → logprob: -8.275775909423828
    8. 't' → logprob: -8.275775909423828
    9. 'def' → logprob: -8.775775909423828
    10. 's' → logprob: -8.775775909423828

Token 418: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3594568967819214
    2. 'total' → logprob: -1.4844568967819214
    3. 'n' → logprob: -2.984457015991211
    4. 'def' → logprob: -3.859457015991211
    5. ' total' → logprob: -7.359457015991211
    6. 'sum' → logprob: -7.609457015991211
    7. '#' → logprob: -7.609457015991211
    8. '    
' → logprob: -7.609457015991211
    9. 'long' → logprob: -8.234457015991211
    10. 'length' → logprob: -8.234457015991211

Token 419: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.623971164226532
    2. ' total' → logprob: -1.3739712238311768
    3. ' _' → logprob: -3.1239712238311768
    4. 's' → logprob: -3.6239712238311768
    5. ' ' → logprob: -3.6239712238311768
    6. 'total' → logprob: -3.9989712238311768
    7. ' pipes' → logprob: -4.248970985412598
    8. '_total' → logprob: -4.373970985412598
    9. ' ' → logprob: -4.623970985412598
    10. ' pipe' → logprob: -4.748970985412598

Token 420: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43671464920043945
    2. '_des' → logprob: -1.5617146492004395
    3. '_length' → logprob: -2.5617146492004395
    4. '_p' → logprob: -3.6867146492004395
    5. '_t' → logprob: -4.5617146492004395
    6. ' _' → logprob: -4.9367146492004395
    7. 'des' → logprob: -5.0617146492004395
    8. '_lengths' → logprob: -5.3117146492004395
    9. '_long' → logprob: -5.3117146492004395
    10. ' des' → logprob: -6.3117146492004395

Token 421: ' tuy' (ID: 45164)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03160899505019188
    2. '_t' → logprob: -4.406609058380127
    3. ' _' → logprob: -4.781609058380127
    4. '_p' → logprob: -4.781609058380127
    5. 't' → logprob: -7.156609058380127
    6. '_long' → logprob: -7.406609058380127
    7. '\' → logprob: -8.656608581542969
    8. ' tuy' → logprob: -8.781608581542969
    9. '_pipe' → logprob: -9.406608581542969
    10. '_lengths' → logprob: -9.906608581542969

Token 422: 'aux' (ID: 5454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5591893196105957
    2. 'pipes' → logprob: -1.4341893196105957
    3. '```' → logprob: -3.1841893196105957
    4. 'es' → logprob: -3.3091893196105957
    5. 'aux' → logprob: -3.5591893196105957
    6. '##' → logprob: -3.6841893196105957
    7. '#' → logprob: -4.184189319610596
    8. '_' → logprob: -4.809189319610596
    9. '``' → logprob: -5.559189319610596
    10. 'bles' → logprob: -5.809189319610596

Token 423: ' ne' (ID: 453)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7844434380531311
    2. ' =' → logprob: -1.6594433784484863
    3. '_lengths' → logprob: -1.6594433784484863
    4. '_length' → logprob: -2.6594433784484863
    5. 's' → logprob: -3.6594433784484863
    6. ' +' → logprob: -4.159443378448486
    7. '_len' → logprob: -4.534443378448486
    8. '+' → logprob: -5.159443378448486
    9. ' lengths' → logprob: -5.159443378448486
    10. ' _' → logprob: -5.284443378448486

Token 424: ' change' (ID: 3343)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2693323791027069
    2. '_' → logprob: -2.0193324089050293
    3. ' _' → logprob: -3.0193324089050293
    4. '=' → logprob: -3.5193324089050293
    5. '+' → logprob: -5.644332408905029
    6. ' +' → logprob: -5.769332408905029
    7. ' est' → logprob: -5.769332408905029
    8. ' )' → logprob: -6.144332408905029
    9. ' ' → logprob: -6.269332408905029
    10. 'est' → logprob: -6.394332408905029

Token 425: ' pas' (ID: 2173)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4579660892486572
    2. ' +' → logprob: -1.4579660892486572
    3. ' =' → logprob: -2.0829660892486572
    4. '_' → logprob: -2.0829660892486572
    5. ')' → logprob: -3.0829660892486572
    6. '   ' → logprob: -3.5829660892486572
    7. '=' → logprob: -3.5829660892486572
    8. ',' → logprob: -3.5829660892486572
    9. '.' → logprob: -3.9579660892486572
    10. ' plus' → logprob: -3.9579660892486572

Token 426: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7662184238433838
    2. '_length' → logprob: -1.8912184238433838
    3. ',' → logprob: -2.016218423843384
    4. 'length' → logprob: -2.391218423843384
    5. '.' → logprob: -2.391218423843384
    6. '_total' → logprob: -2.641218423843384
    7. 'total' → logprob: -3.016218423843384
    8. '_' → logprob: -3.391218423843384
    9. 'def' → logprob: -3.766218423843384
    10. '#' → logprob: -3.891218423843384

Token 427: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.10072395205497742
    2. ' l' → logprob: -3.2257239818573
    3. 'la' → logprob: -4.600723743438721
    4. ' les' → logprob: -4.600723743438721
    5. ' le' → logprob: -5.100723743438721
    6. ' segmentation' → logprob: -5.100723743438721
    7. ' ' → logprob: -5.350723743438721
    8. 'le' → logprob: -5.475723743438721
    9. 'les' → logprob: -5.600723743438721
    10. 'l' → logprob: -5.600723743438721

Token 428: ' segmentation' (ID: 96046)
  Prédit: ' segmentation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segmentation' → logprob: -0.1245041936635971
    2. ' segment' → logprob: -2.9995040893554688
    3. 'segment' → logprob: -3.3745040893554688
    4. 'seg' → logprob: -3.9995040893554688
    5. 'partition' → logprob: -5.624504089355469
    6. 'segments' → logprob: -5.999504089355469
    7. ' partition' → logprob: -6.374504089355469
    8. ' ' → logprob: -6.499504089355469
    9. ' décou' → logprob: -6.624504089355469
    10. ' segments' → logprob: -6.874504089355469

Token 429: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2070123851299286
    2. '
' → logprob: -1.957012414932251
    3. '    
' → logprob: -3.332012414932251
    4. '\n' → logprob: -6.207012176513672
    5. ',' → logprob: -6.707012176513672
    6. '\' → logprob: -6.957012176513672
    7. '_total' → logprob: -6.957012176513672
    8. '

' → logprob: -7.582012176513672
    9. 'total' → logprob: -7.582012176513672
    10. '  
' → logprob: -7.957012176513672

Token 430: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2777079641819
    2. ' ' → logprob: -2.152708053588867
    3. '    ' → logprob: -3.527708053588867
    4. ')' → logprob: -4.027708053588867
    5. '<|end|>' → logprob: -4.277708053588867
    6. ' 
' → logprob: -4.527708053588867
    7. '    
' → logprob: -4.652708053588867
    8. '\' → logprob: -5.027708053588867
    9. ''' → logprob: -5.027708053588867
    10. ',' → logprob: -5.277708053588867

Token 431: ''est' (ID: 6616)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.70904940366745
    2. '#' → logprob: -1.9590494632720947
    3. 'u' → logprob: -2.3340494632720947
    4. '\' → logprob: -3.3340494632720947
    5. ',' → logprob: -3.5840494632720947
    6. ''' → logprob: -3.7090494632720947
    7. '.' → logprob: -3.9590494632720947
    8. '_' → logprob: -3.9590494632720947
    9. ''est' → logprob: -4.084049224853516
    10. '   ' → logprob: -4.209049224853516

Token 432: ' une' (ID: 2463)
  Prédit: ' donc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' donc' → logprob: -0.5384945273399353
    2. ' ' → logprob: -1.78849458694458
    3. '   ' → logprob: -2.66349458694458
    4. ' la' → logprob: -3.53849458694458
    5. ',' → logprob: -3.53849458694458
    6. ' =' → logprob: -3.66349458694458
    7. ' )' → logprob: -4.41349458694458
    8. '    ' → logprob: -4.53849458694458
    9. ' ,' → logprob: -4.66349458694458
    10. ' l' → logprob: -5.16349458694458

Token 433: ' constante' (ID: 49652)
  Prédit: ' constant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constant' → logprob: -0.590679943561554
    2. ' constante' → logprob: -1.2156798839569092
    3. '\n' → logprob: -2.590679883956909
    4. 'const' → logprob: -3.465679883956909
    5. 'constant' → logprob: -3.590679883956909
    6. ' \' → logprob: -5.465680122375488
    7. ' const' → logprob: -6.090680122375488
    8. ' ' → logprob: -7.215680122375488
    9. 's' → logprob: -7.465680122375488
    10. '\' → logprob: -7.590680122375488

Token 434: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6135277152061462
    2. ',' → logprob: -1.738527774810791
    3. '.' → logprob: -2.238527774810791
    4. '\' → logprob: -2.988527774810791
    5. '\n' → logprob: -3.363527774810791
    6. '<|end|>' → logprob: -3.363527774810791
    7. 'import' → logprob: -4.738527774810791
    8. '#' → logprob: -4.738527774810791
    9. '(p' → logprob: -4.863527774810791
    10. '<|end|>' → logprob: -5.363527774810791

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0741824358701706
    2. '    
' → logprob: -3.9491825103759766
    3. '
' → logprob: -4.074182510375977
    4. '\' → logprob: -4.699182510375977
    5. '\n' → logprob: -5.074182510375977
    6. 'import' → logprob: -5.324182510375977
    7. 'def' → logprob: -5.949182510375977
    8. 'p' → logprob: -6.324182510375977
    9. ',' → logprob: -6.449182510375977
    10. '(p' → logprob: -6.699182510375977

Token 436: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03016962856054306
    2. '    
' → logprob: -4.905169486999512
    3. 'p' → logprob: -5.030169486999512
    4. 'import' → logprob: -5.030169486999512
    5. '\n' → logprob: -6.280169486999512
    6. 'def' → logprob: -6.530169486999512
    7. '
' → logprob: -6.655169486999512
    8. '\' → logprob: -7.280169486999512
    9. 'n' → logprob: -7.405169486999512
    10. '(p' → logprob: -7.655169486999512

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04426281526684761
    2. '    
' → logprob: -3.4192628860473633
    3. 'p' → logprob: -6.169262886047363
    4. 'import' → logprob: -6.169262886047363
    5. '\n' → logprob: -6.544262886047363
    6. '
' → logprob: -6.919262886047363
    7. 'def' → logprob: -7.669262886047363
    8. '  
' → logprob: -7.669262886047363
    9. '\' → logprob: -7.794262886047363
    10. 'n' → logprob: -7.794262886047363

Token 438: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022530319169163704
    2. 'total' → logprob: -4.397530555725098
    3. 'n' → logprob: -5.022530555725098
    4. '    
' → logprob: -6.522530555725098
    5. 'def' → logprob: -7.522530555725098
    6. ' total' → logprob: -8.147530555725098
    7. '
' → logprob: -8.522530555725098
    8. 's' → logprob: -8.647530555725098
    9. 'j' → logprob: -8.897530555725098
    10. '#' (adapté à ' #') → logprob: -9.022530555725098

Token 439: ' Pour' (ID: 13931)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.033302731812000275
    2. '   ' → logprob: -3.9083027839660645
    3. 'def' → logprob: -4.5333027839660645
    4. '#' → logprob: -6.7833027839660645
    5. 'p' → logprob: -9.033302307128906
    6. 'import' → logprob: -9.158302307128906
    7. 'pipes' → logprob: -9.158302307128906
    8. 'total' → logprob: -9.283302307128906
    9. '    
' → logprob: -9.408302307128906
    10. '
' → logprob: -9.658302307128906

Token 440: ' les' (ID: 1341)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.436025857925415
    2. ' continuer' → logprob: -1.686025857925415
    3. '#' → logprob: -2.311025857925415
    4. ' maxim' → logprob: -2.811025857925415
    5. 'max' → logprob: -3.186025857925415
    6. 'i' → logprob: -3.311025857925415
    7. 'la' → logprob: -3.311025857925415
    8. 'le' → logprob: -3.436025857925415
    9. 'les' → logprob: -3.686025857925415
    10. 'sé' → logprob: -3.936025857925415

Token 441: ' joints' (ID: 47223)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.46018648147583
    2. '_' → logprob: -1.58518648147583
    3. ' _' → logprob: -1.58518648147583
    4. ' i' → logprob: -1.96018648147583
    5. 'j' → logprob: -3.58518648147583
    6. ' j' → logprob: -3.71018648147583
    7. ' n' → logprob: -3.71018648147583
    8. '_j' → logprob: -4.08518648147583
    9. 'n' → logprob: -4.21018648147583
    10. 't' → logprob: -4.46018648147583

Token 442: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6520242094993591
    2. ',' → logprob: -1.527024269104004
    3. '[i' → logprob: -1.902024269104004
    4. '_' → logprob: -4.027024269104004
    5. ':' → logprob: -4.277024269104004
    6. '[]' → logprob: -4.277024269104004
    7. '[j' → logprob: -4.527024269104004
    8. 's' → logprob: -4.777024269104004
    9. '.' → logprob: -5.027024269104004
    10. '[n' → logprob: -5.027024269104004

Token 443: ' seuls' (ID: 115488)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.003517746925354
    2. ' #' → logprob: -1.753517746925354
    3. '<|end|>' → logprob: -1.878517746925354
    4. ' ' → logprob: -2.1285176277160645
    5. '   ' → logprob: -2.8785176277160645
    6. ' on' → logprob: -3.1285176277160645
    7. ' ' → logprob: -4.0035176277160645
    8. ' n' → logprob: -4.3785176277160645
    9. '<|end|>' → logprob: -4.6285176277160645
    10. ' j' → logprob: -5.0035176277160645

Token 444: ' ceux' (ID: 26863)
  Prédit: ' ceux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceux' → logprob: -0.2814083993434906
    2. ' les' → logprob: -1.656408429145813
    3. ' utilisés' → logprob: -3.5314083099365234
    4. 'les' → logprob: -4.781408309936523
    5. 'j' → logprob: -5.406408309936523
    6. ' ' → logprob: -5.656408309936523
    7. ' j' → logprob: -6.406408309936523
    8. ' celles' → logprob: -6.906408309936523
    9. '_used' → logprob: -7.031408309936523
    10. 'util' → logprob: -7.406408309936523

Token 445: ' utilisés' (ID: 94258)
  Prédit: ' utilisés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisés' → logprob: -0.06441869586706161
    2. 'util' → logprob: -3.4394187927246094
    3. ' utilis' → logprob: -4.939418792724609
    4. ' qui' → logprob: -5.314418792724609
    5. '_used' → logprob: -5.814418792724609
    6. '[i' → logprob: -6.314418792724609
    7. ' utilisé' → logprob: -6.564418792724609
    8. '_util' → logprob: -6.689418792724609
    9. '[' → logprob: -6.814418792724609
    10. ' utilisées' → logprob: -6.939418792724609

Token 446: ' (' (ID: 350)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -1.4122562408447266
    2. '[i' → logprob: -1.6622562408447266
    3. '[' → logprob: -2.1622562408447266
    4. ' =' → logprob: -2.2872562408447266
    5. ' ' → logprob: -2.4122562408447266
    6. ' (' → logprob: -3.2872562408447266
    7. ',' → logprob: -3.4122562408447266
    8. 'import' → logprob: -3.7872562408447266
    9. '[j' → logprob: -4.162256240844727
    10. ' peuvent' → logprob: -4.287256240844727

Token 447: 'entre' (ID: 17935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.573117196559906
    2. '[i' → logprob: -1.1981172561645508
    3. ' )' → logprob: -2.198117256164551
    4. '[' → logprob: -4.698117256164551
    5. '   ' → logprob: -5.948117256164551
    6. '[j' → logprob: -5.948117256164551
    7. ' ' → logprob: -6.573117256164551
    8. ' [' → logprob: -6.823117256164551
    9. 'def' → logprob: -6.948117256164551
    10. '[])' → logprob: -7.448117256164551

Token 448: ' deux' (ID: 10301)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.3808687627315521
    2. 'les' → logprob: -1.8808687925338745
    3. 'de' → logprob: -2.505868673324585
    4. ' segments' → logprob: -3.630868673324585
    5. 'p' → logprob: -3.755868673324585
    6. ' les' → logprob: -4.505868911743164
    7. ' deux' → logprob: -4.755868911743164
    8. 't' → logprob: -5.630868911743164
    9. '   ' → logprob: -6.130868911743164
    10. 'des' → logprob: -6.380868911743164

Token 449: ' tuy' (ID: 45164)
  Prédit: ' tuy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuy' → logprob: -0.7416332960128784
    2. 't' → logprob: -0.9916332960128784
    3. 'p' → logprob: -2.116633415222168
    4. 'pipes' → logprob: -4.616633415222168
    5. ' segments' → logprob: -5.241633415222168
    6. ' pipes' → logprob: -5.241633415222168
    7. 'segments' → logprob: -5.991633415222168
    8. ' p' → logprob: -6.241633415222168
    9. '   ' → logprob: -6.491633415222168
    10. 'tu' → logprob: -6.741633415222168

Token 450: 'aux' (ID: 5454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5118292570114136
    2. 'aux' → logprob: -1.0118292570114136
    3. '```' → logprob: -4.261829376220703
    4. '[' → logprob: -4.886829376220703
    5. '[]' → logprob: -5.761829376220703
    6. 'p' → logprob: -5.886829376220703
    7. '#' → logprob: -6.136829376220703
    8. '[x' → logprob: -6.261829376220703
    9. 'au' → logprob: -6.886829376220703
    10. ']' → logprob: -7.011829376220703

Token 451: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18855397403240204
    2. ' )' → logprob: -1.8135539293289185
    3. '])' → logprob: -5.813553810119629
    4. '[i' → logprob: -5.938553810119629
    5. 's' → logprob: -7.313553810119629
    6. '   ' → logprob: -7.438553810119629
    7. ',' → logprob: -8.313553810119629
    8. ' utilisés' → logprob: -8.438553810119629
    9. ' ' → logprob: -8.563553810119629
    10. ']' → logprob: -8.563553810119629

Token 452: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3518799841403961
    2. 'un' → logprob: -2.2268800735473633
    3. 'les' → logprob: -2.9768800735473633
    4. ' des' → logprob: -3.4768800735473633
    5. ' la' → logprob: -3.8518800735473633
    6. 'la' → logprob: -4.226880073547363
    7. 'le' → logprob: -4.351880073547363
    8. ' le' → logprob: -4.601880073547363
    9. ' une' → logprob: -4.601880073547363
    10. 'une' → logprob: -4.601880073547363

Token 453: ' même' (ID: 9679)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.21360699832439423
    2. ' segments' → logprob: -2.9636070728302
    3. ' même' → logprob: -3.0886070728302
    4. 'segment' → logprob: -3.3386070728302
    5. ')' → logprob: -3.8386070728302
    6. 'm' → logprob: -4.713606834411621
    7. ' mêmes' → logprob: -4.838606834411621
    8. ' segment' → logprob: -5.463606834411621
    9. 's' → logprob: -5.588606834411621
    10. '#' → logprob: -5.963606834411621

Token 454: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.31544092297554016
    2. ' segment' → logprob: -1.3154408931732178
    3. ')' → logprob: -7.190441131591797
    4. 'segments' → logprob: -7.690441131591797
    5. '_segment' → logprob: -8.815441131591797
    6. 'seg' → logprob: -9.190441131591797
    7. ' )' → logprob: -9.440441131591797
    8. '#' → logprob: -9.440441131591797
    9. ' ' → logprob: -9.690441131591797
    10. ' segments' → logprob: -9.690441131591797

Token 455: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00797827634960413
    2. ' )' → logprob: -4.882978439331055
    3. '   ' → logprob: -8.382978439331055
    4. '])' → logprob: -10.382978439331055
    5. '[i' → logprob: -11.257978439331055
    6. 's' → logprob: -11.382978439331055
    7. '#' → logprob: -11.507978439331055
    8. ')
' → logprob: -11.632978439331055
    9. ' ' → logprob: -12.007978439331055
    10. '[j' → logprob: -12.007978439331055

Token 456: ' sont' (ID: 5242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9529804587364197
    2. ' sont' → logprob: -1.2029805183410645
    3. 's' → logprob: -1.7029805183410645
    4. '[i' → logprob: -3.8279805183410645
    5. ' seront' → logprob: -3.9529805183410645
    6. '   ' → logprob: -4.0779805183410645
    7. ',' → logprob: -4.2029805183410645
    8. ' )' → logprob: -4.7029805183410645
    9. ']' → logprob: -4.7029805183410645
    10. '[' → logprob: -4.9529805183410645

Token 457: ' compt' (ID: 39238)
  Prédit: ' utilisés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisés' → logprob: -0.34251341223716736
    2. 'util' → logprob: -2.3425133228302
    3. ' compt' → logprob: -2.5925133228302
    4. ' pris' → logprob: -3.0925133228302
    5. 'com' → logprob: -3.0925133228302
    6. ' inclus' → logprob: -4.842513561248779
    7. 'pris' → logprob: -5.217513561248779
    8. ' ajout' → logprob: -5.967513561248779
    9. ' utilis' → logprob: -6.092513561248779
    10. ' ' → logprob: -6.342513561248779

Token 458: 'és' (ID: 1756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.064666748046875
    2. '_' → logprob: -1.814666748046875
    3. 'é' → logprob: -2.064666748046875
    4. 'er' → logprob: -2.439666748046875
    5. 'e' → logprob: -2.814666748046875
    6. '   ' → logprob: -2.814666748046875
    7. 'és' → logprob: -3.439666748046875
    8. 'ed' → logprob: -3.689666748046875
    9. '  ' → logprob: -3.939666748046875
    10. '[' → logprob: -4.064666748046875

Token 459: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04435494914650917
    2. ')' → logprob: -4.0443549156188965
    3. 'def' → logprob: -4.6693549156188965
    4. '[j' → logprob: -5.4193549156188965
    5. '[' → logprob: -6.2943549156188965
    6. ',' → logprob: -6.2943549156188965
    7. '    
' → logprob: -6.4193549156188965
    8. ']' → logprob: -6.5443549156188965
    9. '.' → logprob: -6.7943549156188965
    10. '    ' → logprob: -7.2943549156188965

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010225122794508934
    2. '    
' → logprob: -5.135225296020508
    3. 'def' → logprob: -6.760225296020508
    4. '\' → logprob: -7.260225296020508
    5. '
' → logprob: -7.385225296020508
    6. '\n' → logprob: -8.135225296020508
    7. 'j' → logprob: -8.135225296020508
    8. 'import' → logprob: -8.760225296020508
    9. '[' → logprob: -8.885225296020508
    10. 'n' → logprob: -9.010225296020508

Token 461: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002687775297090411
    2. '    
' → logprob: -7.002687931060791
    3. ')' → logprob: -7.627687931060791
    4. '\' → logprob: -8.002687454223633
    5. '\n' → logprob: -9.002687454223633
    6. 'def' → logprob: -9.252687454223633
    7. ':' → logprob: -9.252687454223633
    8. '       ' → logprob: -9.377687454223633
    9. '    ' → logprob: -9.502687454223633
    10. 'import' → logprob: -9.752687454223633

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07031106948852539
    2. 'n' → logprob: -2.8203110694885254
    3. '    
' → logprob: -5.820311069488525
    4. '
' → logprob: -6.070311069488525
    5. 'def' → logprob: -6.695311069488525
    6. '\n' → logprob: -7.820311069488525
    7. 'import' → logprob: -7.945311069488525
    8. '\' → logprob: -8.570310592651367
    9. ' n' → logprob: -8.570310592651367
    10. '```' → logprob: -8.945310592651367

Token 463: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23363950848579407
    2. '   ' → logprob: -1.6086394786834717
    3. 'def' → logprob: -4.983639717102051
    4. ' n' → logprob: -7.108639717102051
    5. 'import' → logprob: -8.48363971710205
    6. '    
' → logprob: -8.98363971710205
    7. '#' (adapté à ' #') → logprob: -9.73363971710205
    8. '
' → logprob: -10.23363971710205
    9. '```' → logprob: -11.23363971710205
    10. 'p' → logprob: -11.60863971710205

Token 464: ' So' (ID: 2632)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10492800176143646
    2. 'def' → logprob: -2.6049280166625977
    3. '   ' → logprob: -3.7299280166625977
    4. ' n' → logprob: -6.604928016662598
    5. 'import' → logprob: -8.854928016662598
    6. '#' → logprob: -8.854928016662598
    7. ' def' → logprob: -10.479928016662598
    8. '```' → logprob: -11.229928016662598
    9. '    
' → logprob: -11.854928016662598
    10. '	n' → logprob: -12.854928016662598

Token 465: 'it' (ID: 278)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0911450982093811
    2. 'n' → logprob: -2.9661450386047363
    3. 'ur' → logprob: -4.716145038604736
    4. '#' → logprob: -4.841145038604736
    5. 'r' → logprob: -5.466145038604736
    6. '   ' → logprob: -6.341145038604736
    7. 'us' → logprob: -6.341145038604736
    8. '_l' → logprob: -6.841145038604736
    9. 'nt' → logprob: -6.841145038604736
    10. '_' → logprob: -6.966145038604736

Token 466: ' S' (ID: 336)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07960186898708344
    2. 'n' → logprob: -2.579601764678955
    3. ' j' → logprob: -8.204602241516113
    4. ' N' → logprob: -9.204602241516113
    5. ' ' → logprob: -9.329602241516113
    6. ' la' → logprob: -9.954602241516113
    7. ' ' → logprob: -10.454602241516113
    8. 'j' → logprob: -10.579602241516113
    9. ' les' → logprob: -10.579602241516113
    10. '   ' → logprob: -10.954602241516113

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4383186101913452
    2. '_' → logprob: -1.9383186101913452
    3. 'um' → logprob: -2.4383187294006348
    4. '_j' → logprob: -2.4383187294006348
    5. 'u' → logprob: -4.938318729400635
    6. '_p' → logprob: -5.063318729400635
    7. '_u' → logprob: -5.688318729400635
    8. '=' → logprob: -5.688318729400635
    9. '_total' → logprob: -5.813318729400635
    10. 'j' → logprob: -6.063318729400635

Token 468: ' somme' (ID: 64484)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.35287797451019287
    2. 'sum' → logprob: -1.2278779745101929
    3. ' la' → logprob: -6.102878093719482
    4. ' p' → logprob: -7.727878093719482
    5. '   ' → logprob: -8.102877616882324
    6. '(sum' → logprob: -8.352877616882324
    7. ' ' → logprob: -8.477877616882324
    8. ' ' → logprob: -8.477877616882324
    9. 'p' → logprob: -8.852877616882324
    10. ' total' → logprob: -9.227877616882324

Token 469: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023792752996087074
    2. '_j' → logprob: -4.398792743682861
    3. '_des' → logprob: -5.273792743682861
    4. 'des' → logprob: -6.023792743682861
    5. '_p' → logprob: -6.398792743682861
    6. ' des' → logprob: -7.648792743682861
    7. ' _' → logprob: -7.773792743682861
    8. '[' → logprob: -8.77379322052002
    9. '(' → logprob: -8.77379322052002
    10. '_s' → logprob: -9.52379322052002

Token 470: ' longue' (ID: 59564)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5731049180030823
    2. ' tuy' → logprob: -1.6981048583984375
    3. ' p' → logprob: -1.8231048583984375
    4. 't' → logprob: -2.9481048583984375
    5. 'pipes' → logprob: -3.8231048583984375
    6. ' pipes' → logprob: -5.9481048583984375
    7. 'long' → logprob: -5.9481048583984375
    8. 'pipe' → logprob: -6.0731048583984375
    9. ' longue' → logprob: -6.8231048583984375
    10. '_p' → logprob: -7.0731048583984375

Token 471: 'urs' (ID: 1628)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9336391687393188
    2. 'urs' → logprob: -1.4336391687393188
    3. '_p' → logprob: -1.6836391687393188
    4. 's' → logprob: -2.4336390495300293
    5. 'r' → logprob: -3.3086390495300293
    6. 'ts' → logprob: -4.058639049530029
    7. '_j' → logprob: -4.558639049530029
    8. 'rs' → logprob: -4.933639049530029
    9. '_t' → logprob: -4.933639049530029
    10. 'ur' → logprob: -6.058639049530029

Token 472: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025263769552111626
    2. '_des' → logprob: -4.650263786315918
    3. '_p' → logprob: -4.650263786315918
    4. 'des' → logprob: -6.400263786315918
    5. ' _' → logprob: -7.150263786315918
    6. '[' → logprob: -7.150263786315918
    7. '(' → logprob: -7.400263786315918
    8. ' des' → logprob: -8.275263786315918
    9. '_total' → logprob: -8.275263786315918
    10. '_of' → logprob: -8.275263786315918

Token 473: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7907973527908325
    2. ' p' → logprob: -1.7907973527908325
    3. 'p' → logprob: -2.040797233581543
    4. ' tuy' → logprob: -2.165797233581543
    5. ' pipes' → logprob: -3.790797233581543
    6. 'pipes' → logprob: -3.790797233581543
    7. ' tous' → logprob: -4.040797233581543
    8. ' ' → logprob: -4.040797233581543
    9. ' t' → logprob: -4.540797233581543
    10. ' sys' → logprob: -4.790797233581543

Token 474: ' les' (ID: 1341)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.4154088497161865
    2. '(' → logprob: -1.9154088497161865
    3. '_' → logprob: -2.1654088497161865
    4. 'pipes' → logprob: -2.5404088497161865
    5. 'p' → logprob: -2.7904088497161865
    6. ' pipes' → logprob: -3.0404088497161865
    7. '_t' → logprob: -3.2904088497161865
    8. 't' → logprob: -3.2904088497161865
    9. '(p' → logprob: -3.4154088497161865
    10. '_j' → logprob: -3.5404088497161865

Token 475: ' tuy' (ID: 45164)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.104494571685791
    2. 'p' → logprob: -1.354494571685791
    3. ' tuy' → logprob: -1.604494571685791
    4. 't' → logprob: -2.479494571685791
    5. ' pipes' → logprob: -3.104494571685791
    6. 'pipes' → logprob: -3.604494571685791
    7. '_t' → logprob: -3.979494571685791
    8. '_p' → logprob: -3.979494571685791
    9. '_' → logprob: -5.729494571685791
    10. ' t' → logprob: -6.104494571685791

Token 476: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.6768155694007874
    2. 'x' → logprob: -1.8018155097961426
    3. '[' → logprob: -2.5518155097961426
    4. 'pipes' → logprob: -2.6768155097961426
    5. 'es' → logprob: -3.1768155097961426
    6. '```' → logprob: -3.6768155097961426
    7. '[]' → logprob: -3.8018155097961426
    8. '   ' → logprob: -3.8018155097961426
    9. 'p' → logprob: -3.9268155097961426
    10. ']' → logprob: -5.176815509796143

Token 477: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40829306840896606
    2. ')' → logprob: -1.7832930088043213
    3. '[' → logprob: -2.6582930088043213
    4. '_p' → logprob: -3.7832930088043213
    5. 's' → logprob: -4.2832932472229
    6. ',' → logprob: -4.5332932472229
    7. ']' → logprob: -5.0332932472229
    8. '   ' → logprob: -5.0332932472229
    9. 'p' → logprob: -5.1582932472229
    10. '<|end|>' → logprob: -5.4082932472229

Token 478: 'fix' (ID: 11853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03558638319373131
    2. ' )' → logprob: -4.160586357116699
    3. 'p' → logprob: -4.910586357116699
    4. ')
' → logprob: -5.285586357116699
    5. ' +' → logprob: -6.035586357116699
    6. '+' → logprob: -7.035586357116699
    7. '   ' → logprob: -7.535586357116699
    8. ' )
' → logprob: -8.0355863571167
    9. ')+' → logprob: -8.0355863571167
    10. ' p' → logprob: -8.1605863571167

Token 479: 'e' (ID: 68)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.289476603269577
    2. ' =' → logprob: -2.2894766330718994
    3. '=' → logprob: -3.0394766330718994
    4. 'e' → logprob: -3.6644766330718994
    5. '   ' → logprob: -3.7894766330718994
    6. '()' → logprob: -4.16447639465332
    7. ' )' → logprob: -4.53947639465332
    8. '_' → logprob: -5.41447639465332
    9. ')
' → logprob: -5.66447639465332
    10. 'def' → logprob: -5.78947639465332

Token 480: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15669462084770203
    2. ' +' → logprob: -2.4066946506500244
    3. ' )' → logprob: -3.4066946506500244
    4. '+' → logprob: -4.031694412231445
    5. ')
' → logprob: -6.656694412231445
    6. '   ' → logprob: -7.156694412231445
    7. 'p' → logprob: -8.406694412231445
    8. ' ' → logprob: -8.656694412231445
    9. '+p' → logprob: -8.781694412231445
    10. ' )
' → logprob: -8.906694412231445

Token 481: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020741458982229233
    2. 'def' → logprob: -5.3957414627075195
    3. ',' → logprob: -5.5207414627075195
    4. ')' → logprob: -5.6457414627075195
    5. '.' → logprob: -5.6457414627075195
    6. '    
' → logprob: -6.6457414627075195
    7. ':' → logprob: -7.3957414627075195
    8. 's' → logprob: -8.14574146270752
    9. 'import' → logprob: -8.27074146270752
    10. '<|end|>' → logprob: -8.52074146270752

Token 482: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02550133503973484
    2. ')' → logprob: -4.400501251220703
    3. '.' → logprob: -5.650501251220703
    4. ',' → logprob: -5.900501251220703
    5. '<|end|>' → logprob: -6.150501251220703
    6. '<|end|>' → logprob: -7.400501251220703
    7. '    
' → logprob: -7.525501251220703
    8. 'def' → logprob: -7.775501251220703
    9. ':' → logprob: -8.150501251220703
    10. '#' (adapté à ' #') → logprob: -8.150501251220703

Token 483: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03560306131839752
    2. 'def' → logprob: -4.910603046417236
    3. '
' → logprob: -5.035603046417236
    4. 'total' → logprob: -5.035603046417236
    5. '    
' → logprob: -5.535603046417236
    6. '\' → logprob: -5.910603046417236
    7. ',' → logprob: -6.160603046417236
    8. '#' → logprob: -7.035603046417236
    9. '\n' → logprob: -7.160603046417236
    10. 'n' → logprob: -7.785603046417236

Token 484: 'it' (ID: 278)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8869151473045349
    2. '_' → logprob: -1.1369152069091797
    3. '=' → logprob: -1.7619152069091797
    4. 'r' → logprob: -2.6369152069091797
    5. 'm' → logprob: -4.76191520690918
    6. ' _' → logprob: -5.88691520690918
    7. '   ' → logprob: -6.38691520690918
    8. ' ' → logprob: -6.76191520690918
    9. '#' → logprob: -6.76191520690918
    10. ' ' → logprob: -7.01191520690918

Token 485: ' x' (ID: 1215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1836961507797241
    2. ' n' → logprob: -1.9336961507797241
    3. ' nb' → logprob: -1.9336961507797241
    4. ' segments' → logprob: -2.4336962699890137
    5. ' total' → logprob: -2.5586962699890137
    6. ' K' → logprob: -3.3086962699890137
    7. 'segments' → logprob: -3.9336962699890137
    8. ' k' → logprob: -4.183696269989014
    9. ' segment' → logprob: -4.183696269989014
    10. ' num' → logprob: -4.183696269989014

Token 486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05636563152074814
    2. '_' → logprob: -3.681365728378296
    3. '_j' → logprob: -3.806365728378296
    4. '_s' → logprob: -6.181365489959717
    5. 's' → logprob: -7.056365489959717
    6. '=' → logprob: -7.056365489959717
    7. ' _' → logprob: -7.556365489959717
    8. 'j' → logprob: -7.931365489959717
    9. ',' → logprob: -8.056365966796875
    10. '_i' → logprob: -8.056365966796875

Token 487: ' somme' (ID: 64484)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.4867577850818634
    2. 'nombre' → logprob: -1.361757755279541
    3. ' le' → logprob: -2.861757755279541
    4. 'le' → logprob: -3.986757755279541
    5. 'len' → logprob: -4.736757755279541
    6. ' len' → logprob: -4.986757755279541
    7. ' la' → logprob: -5.361757755279541
    8. ' ' → logprob: -5.611757755279541
    9. '0' → logprob: -5.736757755279541
    10. ' number' → logprob: -5.861757755279541

Token 488: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03406656160950661
    2. '_des' → logprob: -4.159066677093506
    3. ' des' → logprob: -4.784066677093506
    4. 'des' → logprob: -5.034066677093506
    5. ' _' → logprob: -6.159066677093506
    6. '[' → logprob: -8.909066200256348
    7. '_of' → logprob: -9.034066200256348
    8. '_j' → logprob: -9.534066200256348
    9. ' ' → logprob: -9.659066200256348
    10. '(' → logprob: -10.034066200256348

Token 489: ' joints' (ID: 47223)
  Prédit: ' joints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joints' → logprob: -0.9896239638328552
    2. ' j' → logprob: -1.6146240234375
    3. 'j' → logprob: -1.7396240234375
    4. ' used' → logprob: -2.6146240234375
    5. ' joint' → logprob: -3.1146240234375
    6. '_j' → logprob: -3.3646240234375
    7. 'joint' → logprob: -4.4896240234375
    8. 'util' → logprob: -4.6146240234375
    9. ' utilized' → logprob: -4.8646240234375
    10. ' ' → logprob: -4.8646240234375

Token 490: ' utilisés' (ID: 94258)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16491647064685822
    2. '[' → logprob: -1.9149165153503418
    3. '[i' → logprob: -7.289916515350342
    4. '_[' → logprob: -7.289916515350342
    5. '[
' → logprob: -7.789916515350342
    6. ']' → logprob: -8.289916038513184
    7. '\[' → logprob: -8.289916038513184
    8. '=' → logprob: -8.289916038513184
    9. ''' → logprob: -8.414916038513184
    10. '[]' → logprob: -8.664916038513184

Token 491: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7698012590408325
    2. '_' → logprob: -2.019801139831543
    3. ':' → logprob: -2.519801139831543
    4. '[' → logprob: -2.519801139831543
    5. ' =' → logprob: -2.769801139831543
    6. 'def' → logprob: -3.269801139831543
    7. '
' → logprob: -3.519801139831543
    8. ')' → logprob: -3.769801139831543
    9. '=' → logprob: -3.894801139831543
    10. '<|end|>' → logprob: -4.644801139831543

Token 492: 'variable' (ID: 19827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20427797734737396
    2. ' )' → logprob: -1.7042779922485352
    3. '_used' → logprob: -7.204277992248535
    4. ' used' → logprob: -7.954277992248535
    5. ' +' → logprob: -7.954277992248535
    6. 'used' → logprob: -8.204277992248535
    7. '+' → logprob: -8.454277992248535
    8. ' ' → logprob: -8.829277992248535
    9. ' ' → logprob: -9.204277992248535
    10. '_' → logprob: -9.579277992248535

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028496064245700836
    2. '_' → logprob: -4.153496265411377
    3. ']' → logprob: -5.278496265411377
    4. '[' → logprob: -5.778496265411377
    5. ' )' → logprob: -6.528496265411377
    6. '+' → logprob: -6.653496265411377
    7. '   ' → logprob: -7.903496265411377
    8. ')
' → logprob: -9.153495788574219
    9. '_)' → logprob: -9.153495788574219
    10. ' +' → logprob: -9.278495788574219

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04787421599030495
    2. '.' → logprob: -4.547874450683594
    3. ':' → logprob: -5.047874450683594
    4. ',' → logprob: -5.047874450683594
    5. '\' → logprob: -5.547874450683594
    6. ')' → logprob: -5.547874450683594
    7. '    
' → logprob: -5.547874450683594
    8. '\n' → logprob: -6.172874450683594
    9. '#' → logprob: -6.297874450683594
    10. ' ' → logprob: -6.922874450683594

Token 495: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029505379498004913
    2. ':' → logprob: -4.654505252838135
    3. ')' → logprob: -4.779505252838135
    4. 'def' → logprob: -5.404505252838135
    5. '.' → logprob: -6.279505252838135
    6. '
' → logprob: -7.404505252838135
    7. ',' → logprob: -7.404505252838135
    8. '    
' → logprob: -7.654505252838135
    9. 'x' → logprob: -7.779505252838135
    10. '\n' → logprob: -7.779505252838135

Token 496: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5743874311447144
    2. '
' → logprob: -2.574387550354004
    3. '\n' → logprob: -2.574387550354004
    4. ')' → logprob: -3.074387550354004
    5. 'x' → logprob: -3.199387550354004
    6. '#' → logprob: -3.324387550354004
    7. '\' → logprob: -3.699387550354004
    8. ',' → logprob: -4.199387550354004
    9. '  
' → logprob: -4.449387550354004
    10. ' 
' → logprob: -4.574387550354004

Token 497: 'it' (ID: 278)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20932616293430328
    2. '_' → logprob: -2.3343262672424316
    3. '=' → logprob: -3.4593262672424316
    4. 'ur' → logprob: -4.584326267242432
    5. ' ' → logprob: -4.709326267242432
    6. '*' → logprob: -5.334326267242432
    7. 'x' → logprob: -5.459326267242432
    8. 'p' → logprob: -5.584326267242432
    9. ' _' → logprob: -5.584326267242432
    10. ' *' → logprob: -6.084326267242432

Token 498: ' k' (ID: 372)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.5508074164390564
    2. ' s' → logprob: -1.4258074760437012
    3. 'segments' → logprob: -2.300807476043701
    4. ' n' → logprob: -3.550807476043701
    5. ' nombre' → logprob: -4.550807476043701
    6. ' nb' → logprob: -4.675807476043701
    7. 's' → logprob: -4.675807476043701
    8. ' k' → logprob: -4.800807476043701
    9. ' number' → logprob: -5.800807476043701
    10. 'n' → logprob: -5.925807476043701

Token 499: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025160887744277716
    2. '=' → logprob: -6.127516269683838
    3. ' ' → logprob: -8.62751579284668
    4. '  ' → logprob: -10.12751579284668
    5. '_' → logprob: -10.25251579284668
    6. ' ' → logprob: -10.75251579284668
    7. ',' → logprob: -11.50251579284668
    8. 's' → logprob: -11.87751579284668
    9. ' _' → logprob: -12.37751579284668
    10. ')' → logprob: -12.37751579284668

Token 500: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.08769376575946808
    2. 'nombre' → logprob: -2.712693691253662
    3. ' segments' → logprob: -5.337693691253662
    4. 'segments' → logprob: -5.712693691253662
    5. 'k' → logprob: -6.087693691253662
    6. ' number' → logprob: -6.087693691253662
    7. ' k' → logprob: -6.587693691253662
    8. ' nombres' → logprob: -6.712693691253662
    9. 'number' → logprob: -7.087693691253662
    10. ' #' → logprob: -8.33769416809082

Token 501: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9310212135314941
    2. '_de' → logprob: -1.0560212135314941
    3. '_des' → logprob: -1.4310212135314941
    4. ' _' → logprob: -5.306021213531494
    5. '_d' → logprob: -5.306021213531494
    6. '_segments' → logprob: -5.806021213531494
    7. '_of' → logprob: -5.931021213531494
    8. ' de' → logprob: -6.306021213531494
    9. '_k' → logprob: -8.181020736694336
    10. '_s' → logprob: -8.681020736694336

Token 502: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6420062780380249
    2. '_segments' → logprob: -1.392006278038025
    3. ' segments' → logprob: -1.642006278038025
    4. '_' → logprob: -4.0170063972473145
    5. ' _' → logprob: -5.2670063972473145
    6. 's' → logprob: -5.3920063972473145
    7. ' ' → logprob: -6.5170063972473145
    8. '_s' → logprob: -7.1420063972473145
    9. ' s' → logprob: -7.7670063972473145
    10. ' ' → logprob: -8.142005920410156

Token 503: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6776438355445862
    2. '_' → logprob: -1.9276437759399414
    3. '[' → logprob: -2.1776437759399414
    4. ':' → logprob: -2.8026437759399414
    5. 'def' → logprob: -3.3026437759399414
    6. ')' → logprob: -3.4276437759399414
    7. '<|end|>' → logprob: -3.4276437759399414
    8. '
' → logprob: -4.177643775939941
    9. ',' → logprob: -4.552643775939941
    10. '#' → logprob: -5.177643775939941

Token 504: 'variable' (ID: 19827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23871636390686035
    2. ' )' → logprob: -2.2387163639068604
    3. '+' → logprob: -2.4887163639068604
    4. ' +' → logprob: -4.363716125488281
    5. '=' → logprob: -5.488716125488281
    6. ' =' → logprob: -5.988716125488281
    7. 'k' → logprob: -7.113716125488281
    8. ' ' → logprob: -7.113716125488281
    9. '_' → logprob: -7.988716125488281
    10. '#' → logprob: -8.363716125488281

Token 505: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2005099356174469
    2. ')
' → logprob: -2.325510025024414
    3. '   ' → logprob: -2.575510025024414
    4. '
' → logprob: -6.575510025024414
    5. 'def' → logprob: -6.825510025024414
    6. '#' → logprob: -6.950510025024414
    7. 'import' → logprob: -7.325510025024414
    8. '+' → logprob: -7.575510025024414
    9. ' )' → logprob: -7.700510025024414
    10. '):
' → logprob: -7.825510025024414

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030687080696225166
    2. '\' → logprob: -5.280686855316162
    3. '    
' → logprob: -5.405686855316162
    4. '
' → logprob: -5.405686855316162
    5. ':' → logprob: -5.530686855316162
    6. 'def' → logprob: -5.655686855316162
    7. '  
' → logprob: -6.155686855316162
    8. '\n' → logprob: -6.405686855316162
    9. '#' → logprob: -6.780686855316162
    10. ',' → logprob: -7.155686855316162

Token 507: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025828175246715546
    2. '
' → logprob: -4.9008283615112305
    3. '    
' → logprob: -5.2758283615112305
    4. '#' → logprob: -5.7758283615112305
    5. 'def' → logprob: -5.7758283615112305
    6. '<|end|>' → logprob: -6.6508283615112305
    7. '\n' → logprob: -7.1508283615112305
    8. ':' → logprob: -7.2758283615112305
    9. '  
' → logprob: -7.5258283615112305
    10. '\' → logprob: -7.6508283615112305

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005422888323664665
    2. '    
' → logprob: -6.255423069000244
    3. '
' → logprob: -7.005423069000244
    4. '#' → logprob: -7.130423069000244
    5. '<|end|>' → logprob: -7.755423069000244
    6. '<|end|>' → logprob: -8.255422592163086
    7. '\n' → logprob: -8.630422592163086
    8. 'def' → logprob: -8.755422592163086
    9. ' 
' → logprob: -8.880422592163086
    10. '\' → logprob: -9.005422592163086

Token 509: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002135863760486245
    2. 'k' → logprob: -6.502135753631592
    3. '    
' → logprob: -8.87713623046875
    4. 'x' → logprob: -9.37713623046875
    5. '#' (adapté à ' #') → logprob: -9.50213623046875
    6. ' k' → logprob: -10.25213623046875
    7. '\' → logprob: -10.37713623046875
    8. '_' → logprob: -10.50213623046875
    9. ')' → logprob: -10.50213623046875
    10. '    ' → logprob: -10.62713623046875

Token 510: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26390340924263
    2. 'k' → logprob: -1.8889033794403076
    3. '#' → logprob: -3.6389033794403076
    4. 'x' → logprob: -4.513903617858887
    5. '\n' → logprob: -4.513903617858887
    6. '\' → logprob: -4.888903617858887
    7. ' k' → logprob: -5.263903617858887
    8. '    
' → logprob: -5.263903617858887
    9. ' 
' → logprob: -5.888903617858887
    10. 'n' → logprob: -5.888903617858887

Token 511: ' salaire' (ID: 135427)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.5926450490951538
    2. ' code' → logprob: -1.7176450490951538
    3. ' ' → logprob: -1.9676450490951538
    4. '_' → logprob: -2.0926451683044434
    5. ' def' → logprob: -2.8426451683044434
    6. ' #' → logprob: -2.8426451683044434
    7. ' space' → logprob: -3.2176451683044434
    8. ' ' → logprob: -3.2176451683044434
    9. ' =' → logprob: -3.3426451683044434
    10. ' best' → logprob: -3.3426451683044434

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09279567748308182
    2. '=' → logprob: -2.4677956104278564
    3. ' ' → logprob: -6.7177958488464355
    4. ' #' → logprob: -7.7177958488464355
    5. '<|end|>' → logprob: -7.7177958488464355
    6. ' est' → logprob: -8.092795372009277
    7. ' is' → logprob: -8.217795372009277
    8. '_' → logprob: -8.467795372009277
    9. '   ' → logprob: -8.467795372009277
    10. '#' → logprob: -8.592795372009277

Token 513: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3542289733886719
    2. 'k' → logprob: -1.2292289733886719
    3. ' (' → logprob: -5.479228973388672
    4. '(k' → logprob: -7.104228973388672
    5. '(' → logprob: -7.729228973388672
    6. '   ' → logprob: -8.479228973388672
    7. ' ' → logprob: -10.729228973388672
    8. ' ' → logprob: -10.729228973388672
    9. '(S' → logprob: -11.229228973388672
    10. '(s' → logprob: -11.354228973388672

Token 514: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00761005561798811
    2. '*' → logprob: -4.882609844207764
    3. ' ' → logprob: -13.632610321044922
    4. ')' → logprob: -14.007610321044922
    5. ' **' → logprob: -14.382610321044922
    6. '<|end|>' → logprob: -15.132610321044922
    7. ' *
' → logprob: -15.257610321044922
    8. '*(' → logprob: -15.382610321044922
    9. '**' → logprob: -15.632610321044922
    10. ',' → logprob: -15.632610321044922

Token 515: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09378939121961594
    2. '(S' → logprob: -2.5937893390655518
    3. '(' → logprob: -4.343789577484131
    4. '(s' → logprob: -7.218789577484131
    5. ' ((' → logprob: -7.468789577484131
    6. '((' → logprob: -8.968789100646973
    7. '(T' → logprob: -9.718789100646973
    8. ' ' → logprob: -9.843789100646973
    9. '(total' → logprob: -9.968789100646973
    10. ' ' → logprob: -10.218789100646973

Token 516: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08735256642103195
    2. ' S' → logprob: -2.5873525142669678
    3. '(S' → logprob: -5.212352752685547
    4. '(' → logprob: -6.462352752685547
    5. ' (' → logprob: -7.337352752685547
    6. ')' → logprob: -8.712352752685547
    7. 's' → logprob: -8.712352752685547
    8. 'total' → logprob: -9.087352752685547
    9. ' ' → logprob: -9.712352752685547
    10. ' total' → logprob: -10.212352752685547

Token 517: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04879140481352806
    2. '+' → logprob: -3.0487914085388184
    3. ')' → logprob: -8.79879093170166
    4. ' )' → logprob: -10.92379093170166
    5. ' ' → logprob: -11.54879093170166
    6. '+k' → logprob: -11.79879093170166
    7. ' -' → logprob: -12.29879093170166
    8. ' +
' → logprob: -12.54879093170166
    9. ' ' → logprob: -12.92379093170166
    10. '+)' → logprob: -13.42379093170166

Token 518: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759573578834534
    2. ' x' → logprob: -0.8259573578834534
    3. ')' → logprob: -11.825957298278809
    4. ' ' → logprob: -12.700957298278809
    5. ' ' → logprob: -13.075957298278809
    6. '"' → logprob: -14.450957298278809
    7. ''' → logprob: -14.450957298278809
    8. '(x' → logprob: -14.700957298278809
    9. ')x' → logprob: -14.825957298278809
    10. '	x' → logprob: -14.950957298278809

Token 519: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.567575034452602e-05
    2. ' )' → logprob: -9.50009536743164
    3. '+' → logprob: -12.50009536743164
    4. '))' → logprob: -12.62509536743164
    5. ')
' → logprob: -12.87509536743164
    6. ')`' → logprob: -12.87509536743164
    7. '#' → logprob: -13.25009536743164
    8. ' +' → logprob: -14.00009536743164
    9. '),' → logprob: -14.37509536743164
    10. ')#' → logprob: -14.50009536743164

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16756778955459595
    2. '
' → logprob: -3.292567729949951
    3. '<|end|>' → logprob: -3.417567729949951
    4. '\n' → logprob: -4.042567729949951
    5. ')' → logprob: -4.042567729949951
    6. ':' → logprob: -4.292567729949951
    7. '    
' → logprob: -4.917567729949951
    8. '<|end|>' → logprob: -5.042567729949951
    9. '\' → logprob: -5.167567729949951
    10. 'def' → logprob: -5.667567729949951

Token 521: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5339073538780212
    2. '   ' → logprob: -1.033907413482666
    3. '    
' → logprob: -3.658907413482666
    4. 'def' → logprob: -4.033907413482666
    5. '\n' → logprob: -4.658907413482666
    6. '\' → logprob: -6.283907413482666
    7. '  
' → logprob: -6.908907413482666
    8. '   
' → logprob: -8.158906936645508
    9. '

' → logprob: -8.283906936645508
    10. ':' → logprob: -8.408906936645508

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06423437595367432
    2. '    
' → logprob: -3.5642342567443848
    3. '
' → logprob: -4.689234256744385
    4. 'def' → logprob: -4.939234256744385
    5. '\n' → logprob: -5.189234256744385
    6. '\' → logprob: -5.439234256744385
    7. ' 
' → logprob: -6.564234256744385
    8. 'import' → logprob: -6.814234256744385
    9. ':' → logprob: -7.189234256744385
    10. '  
' → logprob: -7.439234256744385

Token 523: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06201406568288803
    2. 'n' → logprob: -3.562014102935791
    3. 'def' → logprob: -4.312014102935791
    4. '    
' → logprob: -5.062014102935791
    5. '\n' → logprob: -5.937014102935791
    6. '
' → logprob: -6.312014102935791
    7. '\' → logprob: -6.562014102935791
    8. 'j' → logprob: -6.687014102935791
    9. ' n' → logprob: -6.937014102935791
    10. 'for' → logprob: -7.687014102935791

Token 524: ' Or' (ID: 2604)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006930624134838581
    2. '   ' → logprob: -5.506930828094482
    3. 'def' → logprob: -6.131930828094482
    4. '#' → logprob: -8.131930351257324
    5. 'dp' → logprob: -9.256930351257324
    6. 'N' → logprob: -9.381930351257324
    7. ' n' → logprob: -9.881930351257324
    8. '
' → logprob: -10.131930351257324
    9. 'from' → logprob: -10.131930351257324
    10. 'import' → logprob: -11.006930351257324

Token 525: ',' (ID: 11)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.8471961617469788
    2. '   ' → logprob: -1.722196102142334
    3. ' on' → logprob: -2.222196102142334
    4. ' x' → logprob: -2.722196102142334
    5. 'k' → logprob: -3.472196102142334
    6. ' n' → logprob: -3.597196102142334
    7. ' ' → logprob: -3.722196102142334
    8. ' il' → logprob: -3.847196102142334
    9. ' #' → logprob: -4.222196102142334
    10. '#' → logprob: -4.222196102142334

Token 526: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.882114589214325
    2. ' k' → logprob: -1.0071146488189697
    3. ' il' → logprob: -2.7571146488189697
    4. ' x' → logprob: -2.8821146488189697
    5. ' #' → logprob: -3.5071146488189697
    6. ' def' → logprob: -4.632114410400391
    7. ' n' → logprob: -4.757114410400391
    8. ' ' → logprob: -4.882114410400391
    9. ' la' → logprob: -5.132114410400391
    10. ' for' → logprob: -5.132114410400391

Token 527: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8650197982788086
    2. ' n' → logprob: -2.8650197982788086
    3. ' max' → logprob: -2.8650197982788086
    4. ' code' → logprob: -2.9900197982788086
    5. ' def' → logprob: -2.9900197982788086
    6. ' x' → logprob: -3.1150197982788086
    7. ' j' → logprob: -3.3650197982788086
    8. ' space' → logprob: -3.4900197982788086
    9. ' #' → logprob: -3.7400197982788086
    10. ' maximum' → logprob: -3.8650197982788086

Token 528: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0072647822089493275
    2. ' de' → logprob: -5.757264614105225
    3. ' _' → logprob: -6.132264614105225
    4. '_de' → logprob: -6.507264614105225
    5. ')' → logprob: -9.507265090942383
    6. '  ' → logprob: -9.632265090942383
    7. '_s' → logprob: -10.007265090942383
    8. '_d' → logprob: -10.132265090942383
    9. ' ' → logprob: -10.882265090942383
    10. '[' → logprob: -10.882265090942383

Token 529: ' segments' (ID: 33749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03907976299524307
    2. ' _' → logprob: -3.2890796661376953
    3. '_segments' → logprob: -7.414079666137695
    4. ' ' → logprob: -8.539079666137695
    5. 's' → logprob: -9.789079666137695
    6. 'segments' → logprob: -9.914079666137695
    7. ' segments' → logprob: -10.664079666137695
    8. ''' → logprob: -11.039079666137695
    9. 'space' → logprob: -11.539079666137695
    10. '_\' → logprob: -11.789079666137695

Token 530: ' k' (ID: 372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05154023319482803
    2. '=' → logprob: -3.0515401363372803
    3. ' +' → logprob: -8.05154037475586
    4. ')' → logprob: -8.05154037475586
    5. ' #' → logprob: -8.17654037475586
    6. '=k' → logprob: -8.17654037475586
    7. '#' → logprob: -8.42654037475586
    8. 'k' → logprob: -8.55154037475586
    9. 'def' → logprob: -8.55154037475586
    10. '+' → logprob: -8.55154037475586

Token 531: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6040717363357544
    2. '=' → logprob: -0.8540717363357544
    3. '+' → logprob: -4.604071617126465
    4. '_' → logprob: -5.354071617126465
    5. ' +=' → logprob: -5.479071617126465
    6. ')' → logprob: -6.104071617126465
    7. ' ' → logprob: -6.104071617126465
    8. ' +' → logprob: -6.479071617126465
    9. ' #' → logprob: -7.604071617126465
    10. '#' → logprob: -7.854071617126465

Token 532: ' le' (ID: 505)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6720181107521057
    2. '1' → logprob: -1.172018051147461
    3. ' ' → logprob: -2.422018051147461
    4. ' =' → logprob: -2.422018051147461
    5. ' x' → logprob: -6.922018051147461
    6. ' k' → logprob: -8.172018051147461
    7. 'x' → logprob: -8.672018051147461
    8. '=k' → logprob: -9.047018051147461
    9. ' ' → logprob: -9.172018051147461
    10. 'k' → logprob: -9.547018051147461

Token 533: ' nombre' (ID: 9733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39794522523880005
    2. ' ' → logprob: -1.5229451656341553
    3. ' x' → logprob: -3.2729451656341553
    4. 'x' → logprob: -4.147945404052734
    5. ' ' → logprob: -4.397945404052734
    6. ' j' → logprob: -5.147945404052734
    7. ' _' → logprob: -5.397945404052734
    8. ' #' → logprob: -5.397945404052734
    9. ' "' → logprob: -5.522945404052734
    10. ' nombre' → logprob: -6.397945404052734

Token 534: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.8414532542228699
    2. '_' → logprob: -0.9664532542228699
    3. '_d' → logprob: -2.0914533138275146
    4. '_des' → logprob: -3.4664533138275146
    5. ' de' → logprob: -4.7164530754089355
    6. '_of' → logprob: -4.9664530754089355
    7. '_segments' → logprob: -5.0914530754089355
    8. '_s' → logprob: -6.0914530754089355
    9. ' _' → logprob: -6.7164530754089355
    10. 'def' → logprob: -6.8414530754089355

Token 535: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11817330867052078
    2. 'cuts' → logprob: -2.868173360824585
    3. ' joints' → logprob: -4.618173122406006
    4. 'joins' → logprob: -4.618173122406006
    5. '```' → logprob: -4.743173122406006
    6. 'c' → logprob: -5.868173122406006
    7. 'joint' → logprob: -6.118173122406006
    8. 'cou' → logprob: -6.243173122406006
    9. 'used' → logprob: -6.243173122406006
    10. ' used' → logprob: -6.243173122406006

Token 536: ' utilisés' (ID: 94258)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.24755027890205383
    2. '_util' → logprob: -2.1225502490997314
    3. '_' → logprob: -3.3725502490997314
    4. ' _' → logprob: -3.7475502490997314
    5. ' utilisés' → logprob: -3.9975502490997314
    6. 'util' → logprob: -4.6225504875183105
    7. ' used' → logprob: -5.4975504875183105
    8. 'used' → logprob: -6.3725504875183105
    9. ' utilisé' → logprob: -6.3725504875183105
    10. '_cut' → logprob: -6.7475504875183105

Token 537: ' =' (ID: 314)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.4203360676765442
    2. ' =' → logprob: -1.7953360080718994
    3. ' <=' → logprob: -3.1703360080718994
    4. '_' → logprob: -3.6703360080718994
    5. ' +' → logprob: -3.7953360080718994
    6. ' _' → logprob: -3.9203360080718994
    7. ' ==' → logprob: -4.1703362464904785
    8. ' ' → logprob: -4.5453362464904785
    9. ' used' → logprob: -4.5453362464904785
    10. ' utilisés' → logprob: -5.2953362464904785

Token 538: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3613171875476837
    2. 'n' → logprob: -1.2363171577453613
    3. ' k' → logprob: -5.361317157745361
    4. 'k' → logprob: -5.986317157745361
    5. ' len' → logprob: -5.986317157745361
    6. ' ' → logprob: -7.111317157745361
    7. 'len' → logprob: -7.111317157745361
    8. 'i' → logprob: -7.986317157745361
    9. ' i' → logprob: -8.48631763458252
    10. '(n' → logprob: -8.61131763458252

Token 539: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5636802315711975
    2. ' -' → logprob: -0.9386802315711975
    3. '+' → logprob: -4.688680171966553
    4. '<|end|>' → logprob: -4.938680171966553
    5. ' +' → logprob: -5.438680171966553
    6. ' ' → logprob: -5.938680171966553
    7. '#' → logprob: -6.063680171966553
    8. '_' → logprob: -6.063680171966553
    9. ')' → logprob: -6.313680171966553
    10. '[' → logprob: -6.688680171966553

Token 540: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09038195013999939
    2. '#' (adapté à ' #') → logprob: -3.8403818607330322
    3. 'def' → logprob: -3.8403818607330322
    4. '(n' → logprob: -4.840382099151611
    5. '\n' → logprob: -5.340382099151611
    6. '\' → logprob: -5.590382099151611
    7. '.' → logprob: -5.590382099151611
    8. '
' → logprob: -5.840382099151611
    9. ',' → logprob: -5.965382099151611
    10. 'import' → logprob: -6.090382099151611

Token 542: ' car' (ID: 1669)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4917865991592407
    2. '\n' → logprob: -1.9917865991592407
    3. ' ' → logprob: -2.491786479949951
    4. '+' → logprob: -3.116786479949951
    5. ',' → logprob: -3.241786479949951
    6. ' =' → logprob: -3.241786479949951
    7. '#' → logprob: -3.241786479949951
    8. '_' → logprob: -3.366786479949951
    9. ' \' → logprob: -3.616786479949951
    10. ' n' → logprob: -3.616786479949951

Token 543: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.4195983111858368
    2. 'k' → logprob: -2.294598340988159
    3. 'les' → logprob: -2.919598340988159
    4. 'cha' → logprob: -3.294598340988159
    5. ' on' → logprob: -3.919598340988159
    6. 'on' → logprob: -3.919598340988159
    7. ' k' → logprob: -4.04459810256958
    8. 'le' → logprob: -4.16959810256958
    9. 'n' → logprob: -4.54459810256958
    10. 'segments' → logprob: -4.91959810256958

Token 544: ' joint' (ID: 14585)
  Prédit: ' joint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joint' → logprob: -1.2872858047485352
    2. ' segment' → logprob: -1.4122858047485352
    3. 'joint' → logprob: -2.412285804748535
    4. ' _' → logprob: -2.537285804748535
    5. ' espace' → logprob: -3.162285804748535
    6. '_' → logprob: -3.287285804748535
    7. ' ' → logprob: -3.412285804748535
    8. 'segment' → logprob: -3.412285804748535
    9. ' cut' → logprob: -3.662285804748535
    10. 'cut' → logprob: -4.037285804748535

Token 545: ' utilisé' (ID: 53138)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40186598896980286
    2. '_used' → logprob: -2.1518659591674805
    3. 's' → logprob: -3.4018659591674805
    4. '_util' → logprob: -3.5268659591674805
    5. ' _' → logprob: -3.6518659591674805
    6. ' ' → logprob: -4.0268659591674805
    7. ')' → logprob: -4.1518659591674805
    8. ' est' → logprob: -4.2768659591674805
    9. '[' → logprob: -4.4018659591674805
    10. '[i' → logprob: -4.6518659591674805

Token 546: ' réduit' (ID: 120775)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.541444182395935
    2. 's' → logprob: -1.791444182395935
    3. ' n' → logprob: -2.1664443016052246
    4. '<|end|>' → logprob: -2.6664443016052246
    5. ' s' → logprob: -2.9164443016052246
    6. ' ' → logprob: -3.1664443016052246
    7. ')' → logprob: -3.1664443016052246
    8. ' used' → logprob: -3.2914443016052246
    9. '_used' → logprob: -3.4164443016052246
    10. ',' → logprob: -3.5414443016052246

Token 547: ' le' (ID: 505)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7172063589096069
    2. ' d' → logprob: -1.467206358909607
    3. ' le' → logprob: -1.967206358909607
    4. 'le' → logprob: -2.5922064781188965
    5. 'de' → logprob: -3.7172064781188965
    6. ' ' → logprob: -4.0922064781188965
    7. 'd' → logprob: -4.9672064781188965
    8. ' l' → logprob: -5.2172064781188965
    9. ' un' → logprob: -5.3422064781188965
    10. ' la' → logprob: -6.4672064781188965

Token 548: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.09376410394906998
    2. 'nombre' → logprob: -2.593764066696167
    3. ' espace' → logprob: -6.093764305114746
    4. ' k' → logprob: -6.218764305114746
    5. ' segment' → logprob: -6.343764305114746
    6. ' ' → logprob: -6.468764305114746
    7. 'k' → logprob: -6.843764305114746
    8. '_nombre' → logprob: -6.968764305114746
    9. 'segments' → logprob: -7.343764305114746
    10. ' ' → logprob: -7.593764305114746

Token 549: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014982117339968681
    2. ' de' → logprob: -5.014982223510742
    3. '_de' → logprob: -5.389982223510742
    4. ' _' → logprob: -5.889982223510742
    5. '_d' → logprob: -7.764982223510742
    6. '_s' → logprob: -8.639982223510742
    7. ' d' → logprob: -9.639982223510742
    8. '_des' → logprob: -9.889982223510742
    9. '_of' → logprob: -10.764982223510742
    10. ' ' → logprob: -11.014982223510742

Token 550: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.12801121175289154
    2. ' segments' → logprob: -2.1280112266540527
    3. 'segment' → logprob: -8.378010749816895
    4. 's' → logprob: -8.628010749816895
    5. 'seg' → logprob: -8.753010749816895
    6. ' s' → logprob: -9.003010749816895
    7. '_segments' → logprob: -9.503010749816895
    8. ' ' → logprob: -9.753010749816895
    9. ' ' → logprob: -9.753010749816895
    10. ' segment' → logprob: -10.003010749816895

Token 551: ' d' (ID: 272)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.722019374370575
    2. '+' → logprob: -1.4720194339752197
    3. '   ' → logprob: -2.5970194339752197
    4. ' -' → logprob: -2.9720194339752197
    5. ' by' → logprob: -3.4720194339752197
    6. '<|end|>' → logprob: -4.097019195556641
    7. '-' → logprob: -4.472019195556641
    8. ',' → logprob: -4.597019195556641
    9. ' de' → logprob: -4.722019195556641
    10. '.' → logprob: -4.722019195556641

Token 552: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0796782970428467
    2. 'u' → logprob: -1.8296782970428467
    3. '1' → logprob: -1.9546782970428467
    4. ''un' → logprob: -2.0796782970428467
    5. ''' → logprob: -2.4546782970428467
    6. '+' → logprob: -2.5796782970428467
    7. ' ' → logprob: -4.204678535461426
    8. ''une' → logprob: -4.454678535461426
    9. '=' → logprob: -5.329678535461426
    10. ''espace' → logprob: -5.454678535461426

Token 553: ' unité' (ID: 181741)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.765981137752533
    2. ' espace' → logprob: -0.890981137752533
    3. ' space' → logprob: -3.5159811973571777
    4. '_' → logprob: -4.015981197357178
    5. ' ' → logprob: -4.140981197357178
    6. 'space' → logprob: -4.140981197357178
    7. '+' → logprob: -4.265981197357178
    8. ''espace' → logprob: -5.515981197357178
    9. ' espaces' → logprob: -5.515981197357178
    10. 'es' → logprob: -6.140981197357178

Token 554: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 555: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6377801299095154
    2. '\' → logprob: -2.01278018951416
    3. 'n' → logprob: -2.01278018951416
    4. '   ' → logprob: -2.88778018951416
    5. '
' → logprob: -3.51278018951416
    6. 'def' → logprob: -3.76278018951416
    7. ')' → logprob: -4.51278018951416
    8. '[n' → logprob: -4.63778018951416
    9. '[' → logprob: -4.88778018951416
    10. '#' → logprob: -4.88778018951416

Token 556: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04474054276943207
    2. '\n' → logprob: -3.7947404384613037
    3. 'n' → logprob: -4.919740676879883
    4. 'def' → logprob: -5.794740676879883
    5. '\' → logprob: -5.794740676879883
    6. '    
' → logprob: -6.294740676879883
    7. ')' → logprob: -6.669740676879883
    8. '#' (adapté à ' #') → logprob: -7.169740676879883
    9. '
' → logprob: -7.669740676879883
    10. '```' → logprob: -7.794740676879883

Token 557: ' Plus' (ID: 11899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.769829511642456
    2. '\n' → logprob: -1.019829511642456
    3. '\' → logprob: -2.519829511642456
    4. 'n' → logprob: -2.894829511642456
    5. ')' → logprob: -4.144829750061035
    6. '=' → logprob: -5.769829750061035
    7. 'def' → logprob: -6.269829750061035
    8. '#' → logprob: -6.394829750061035
    9. 'x' → logprob: -6.519829750061035
    10. ' \' → logprob: -6.644829750061035

Token 558: ' précisément' (ID: 139179)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34717753529548645
    2. '=' → logprob: -2.347177505493164
    3. ' n' → logprob: -2.972177505493164
    4. '_' → logprob: -2.972177505493164
    5. 'ieurs' → logprob: -3.097177505493164
    6. ' de' → logprob: -4.472177505493164
    7. 'n' → logprob: -4.472177505493164
    8. '[' → logprob: -5.222177505493164
    9. '```' → logprob: -6.097177505493164
    10. '+' → logprob: -6.472177505493164

Token 559: ',' (ID: 11)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7988786697387695
    2. '   ' → logprob: -1.9238786697387695
    3. ' =' → logprob: -2.0488786697387695
    4. 'k' → logprob: -2.4238786697387695
    5. ',' → logprob: -3.0488786697387695
    6. '\n' → logprob: -3.2988786697387695
    7. '\' → logprob: -3.4238786697387695
    8. ' n' → logprob: -4.2988786697387695
    9. ' \' → logprob: -4.9238786697387695
    10. ',
' → logprob: -5.0488786697387695

Token 560: ' 
' (ID: 793)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7948437929153442
    2. 'k' → logprob: -1.9198437929153442
    3. '   ' → logprob: -1.9198437929153442
    4. ' n' → logprob: -2.0448436737060547
    5. '#' → logprob: -2.7948436737060547
    6. ' on' → logprob: -3.7948436737060547
    7. 'n' → logprob: -3.9198436737060547
    8. ' #' → logprob: -4.294843673706055
    9. 'def' → logprob: -5.669843673706055
    10. '```' → logprob: -6.669843673706055

Token 561: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30283981561660767
    2. '   ' → logprob: -1.427839756011963
    3. ' #' → logprob: -4.302839756011963
    4. ' n' → logprob: -6.177839756011963
    5. 'def' → logprob: -6.177839756011963
    6. 'n' → logprob: -6.302839756011963
    7. 'k' → logprob: -6.677839756011963
    8. ' k' → logprob: -7.552839756011963
    9. '#
' → logprob: -10.302840232849121
    10. ' ' → logprob: -10.677840232849121

Token 562: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4001460373401642
    2. '#' (adapté à ' #') → logprob: -1.5251460075378418
    3. ' =' → logprob: -3.275146007537842
    4. '=' → logprob: -4.275146007537842
    5. 'k' → logprob: -4.400146007537842
    6. ' k' → logprob: -4.400146007537842
    7. ' #' → logprob: -4.525146007537842
    8. ' n' → logprob: -4.775146007537842
    9. ' ' → logprob: -5.400146007537842
    10. 'n' → logprob: -5.650146007537842

Token 563: '  ' (ID: 256)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2783912420272827
    2. 'k' → logprob: -1.5283912420272827
    3. ' n' → logprob: -4.028391361236572
    4. ' on' → logprob: -6.153391361236572
    5. '   ' → logprob: -6.278391361236572
    6. 'n' → logprob: -6.278391361236572
    7. '#' → logprob: -7.278391361236572
    8. ' #' → logprob: -7.778391361236572
    9. ' def' → logprob: -8.028390884399414
    10. 'def' → logprob: -8.528390884399414

Token 564: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.13365159928798676
    2. ' k' → logprob: -2.1336514949798584
    3. ' n' → logprob: -5.7586517333984375
    4. 'n' → logprob: -6.2586517333984375
    5. '#' → logprob: -7.3836517333984375
    6. ' on' → logprob: -8.758651733398438
    7. '   ' → logprob: -8.883651733398438
    8. ' #' → logprob: -9.258651733398438
    9. 'segments' → logprob: -9.258651733398438
    10. 'x' → logprob: -9.383651733398438

Token 565: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005314277950674295
    2. '=' → logprob: -5.255314350128174
    3. ' +' → logprob: -10.255313873291016
    4. ' -' → logprob: -11.130313873291016
    5. ' +=' → logprob: -12.380313873291016
    6. '+' → logprob: -12.505313873291016
    7. ' ' → logprob: -12.630313873291016
    8. ' ' → logprob: -12.630313873291016
    9. '-' → logprob: -12.755313873291016
    10. ' <=' → logprob: -13.255313873291016

Token 566: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019295593723654747
    2. ' n' → logprob: -4.144295692443848
    3. 'len' → logprob: -6.644295692443848
    4. '   ' → logprob: -6.769295692443848
    5. 'import' → logprob: -7.644295692443848
    6. ' ' → logprob: -9.269295692443848
    7. ' len' → logprob: -9.894295692443848
    8. '(n' → logprob: -10.644295692443848
    9. '1' → logprob: -10.644295692443848
    10. '  ' → logprob: -10.769295692443848

Token 567: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03180035576224327
    2. '-' → logprob: -3.6568002700805664
    3. ' +' → logprob: -5.781800270080566
    4. '+' → logprob: -6.531800270080566
    5. ' ' → logprob: -7.781800270080566
    6. '<|end|>' → logprob: -8.906800270080566
    7. ')' → logprob: -9.906800270080566
    8. '   ' → logprob: -10.281800270080566
    9. 'segments' → logprob: -10.406800270080566
    10. ' ' → logprob: -10.406800270080566

Token 568: ' nombre' (ID: 9733)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3474183678627014
    2. 'used' → logprob: -2.4724183082580566
    3. ' x' → logprob: -2.8474183082580566
    4. ' used' → logprob: -2.9724183082580566
    5. 'sum' → logprob: -3.3474183082580566
    6. '1' → logprob: -4.722418308258057
    7. ' sum' → logprob: -4.972418308258057
    8. ' (' → logprob: -5.347418308258057
    9. 'nombre' → logprob: -5.472418308258057
    10. 'j' → logprob: -5.472418308258057

Token 569: '_de' (ID: 5047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08266831934452057
    2. '_des' → logprob: -3.3326683044433594
    3. '_de' → logprob: -3.9576683044433594
    4. '_s' → logprob: -4.707668304443359
    5. '_d' → logprob: -5.332668304443359
    6. '_of' → logprob: -5.582668304443359
    7. '_used' → logprob: -6.457668304443359
    8. '_util' → logprob: -7.082668304443359
    9. 's' → logprob: -7.332668304443359
    10. '_k' → logprob: -7.832668304443359

Token 570: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.11242511868476868
    2. '_used' → logprob: -2.8624250888824463
    3. '_' → logprob: -3.4874250888824463
    4. '_util' → logprob: -4.987425327301025
    5. ' _' → logprob: -5.237425327301025
    6. 'j' → logprob: -5.737425327301025
    7. '_joint' → logprob: -6.487425327301025
    8. '_join' → logprob: -7.862425327301025
    9. '_segments' → logprob: -7.987425327301025
    10. ' ' → logprob: -8.987424850463867

Token 571: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.016696486622095108
    2. '_used' → logprob: -4.766696453094482
    3. 'oint' → logprob: -5.391696453094482
    4. 'oin' → logprob: -7.391696453094482
    5. '_util' → logprob: -7.516696453094482
    6. '_' → logprob: -7.516696453094482
    7. ' _' → logprob: -7.891696453094482
    8. '   ' → logprob: -8.01669692993164
    9. 'util' → logprob: -8.76669692993164
    10. 'used' → logprob: -8.89169692993164

Token 572: '_util' (ID: 46866)
  Prédit: '_util'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.35623645782470703
    2. '_used' → logprob: -1.356236457824707
    3. '_' → logprob: -3.231236457824707
    4. ' _' → logprob: -6.731236457824707
    5. 'util' → logprob: -7.856236457824707
    6. '_use' → logprob: -9.106236457824707
    7. '\' → logprob: -9.606236457824707
    8. '_usage' → logprob: -9.856236457824707
    9. 'used' → logprob: -9.856236457824707
    10. '_selected' → logprob: -10.231236457824707

Token 573: 'isés' (ID: 58890)
  Prédit: 'isés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isés' → logprob: -0.020645011216402054
    2. 'isées' → logprob: -4.2706451416015625
    3. 'is' → logprob: -5.7706451416015625
    4. 'isé' → logprob: -6.5206451416015625
    5. '```' → logprob: -7.6456451416015625
    6. 'és' → logprob: -7.7706451416015625
    7. 'es' → logprob: -8.395645141601562
    8. '_' → logprob: -8.645645141601562
    9. 'i' → logprob: -9.270645141601562
    10. 'isée' → logprob: -9.395645141601562

Token 574: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2768945693969727
    2. ')' → logprob: -1.6518945693969727
    3. '<|end|>' → logprob: -2.4018945693969727
    4. '[' → logprob: -2.6518945693969727
    5. '[n' → logprob: -2.6518945693969727
    6. 'n' → logprob: -3.0268945693969727
    7. '
' → logprob: -3.2768945693969727
    8. 'def' → logprob: -3.2768945693969727
    9. '[
' → logprob: -3.6518945693969727
    10. '_' → logprob: -3.7768945693969727

Token 575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04944423586130142
    2. '\n' → logprob: -4.299444198608398
    3. ')' → logprob: -4.424444198608398
    4. '    
' → logprob: -5.549444198608398
    5. '```' → logprob: -5.924444198608398
    6. '\' → logprob: -6.049444198608398
    7. '
' → logprob: -6.299444198608398
    8. ' ' → logprob: -6.424444198608398
    9. '[' → logprob: -6.924444198608398
    10. '[n' → logprob: -7.299444198608398

Token 576: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02208475023508072
    2. 'def' → logprob: -4.522084712982178
    3. ')' → logprob: -6.022084712982178
    4. 'n' → logprob: -6.022084712982178
    5. '    
' → logprob: -6.272084712982178
    6. '\n' → logprob: -6.772084712982178
    7. '\' → logprob: -7.272084712982178
    8. '#' → logprob: -8.147085189819336
    9. 'import' → logprob: -8.272085189819336
    10. '```' → logprob: -8.397085189819336

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032150305807590485
    2. 'n' → logprob: -3.6571502685546875
    3. '    
' → logprob: -5.5321502685546875
    4. 'def' → logprob: -7.5321502685546875
    5. '\n' → logprob: -7.9071502685546875
    6. ' n' → logprob: -8.157150268554688
    7. '
' → logprob: -8.532150268554688
    8. '```' → logprob: -9.407150268554688
    9. '(n' → logprob: -9.657150268554688
    10. 'import' → logprob: -9.657150268554688

Token 578: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14205873012542725
    2. 'n' → logprob: -2.142058849334717
    3. 'def' → logprob: -5.267058849334717
    4. ' n' → logprob: -6.017058849334717
    5. '    
' → logprob: -6.142058849334717
    6. '#' (adapté à ' #') → logprob: -6.392058849334717
    7. '\n' → logprob: -6.642058849334717
    8. '\' → logprob: -7.892058849334717
    9. 'import' → logprob: -8.017058372497559
    10. '(n' → logprob: -8.517058372497559

Token 579: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15296337008476257
    2. 'n' → logprob: -2.027963399887085
    3. 'def' → logprob: -5.652963161468506
    4. '#' → logprob: -6.027963161468506
    5. ' n' → logprob: -6.152963161468506
    6. '    
' → logprob: -7.277963161468506
    7. '
' → logprob: -7.527963161468506
    8. '\n' → logprob: -8.027963638305664
    9. ' #' → logprob: -9.027963638305664
    10. '\' → logprob: -9.652963638305664

Token 580: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11630231887102127
    2. 'def' → logprob: -3.241302251815796
    3. '```' → logprob: -4.366302490234375
    4. ' k' → logprob: -4.616302490234375
    5. 'n' → logprob: -5.116302490234375
    6. '
' → logprob: -5.241302490234375
    7. '#' → logprob: -5.366302490234375
    8. ' on' → logprob: -5.366302490234375
    9. ' def' → logprob: -5.491302490234375
    10. ' #' → logprob: -5.616302490234375

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21219684183597565
    2. '#' → logprob: -1.7121968269348145
    3. '#
' → logprob: -5.2121968269348145
    4. 'def' → logprob: -5.7121968269348145
    5. ' #' → logprob: -6.9621968269348145
    6. 'n' → logprob: -7.8371968269348145
    7. 'k' → logprob: -8.587197303771973
    8. '
' → logprob: -9.212197303771973
    9. '```' → logprob: -9.337197303771973
    10. '    
' → logprob: -9.587197303771973

Token 582: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5340169668197632
    2. '   ' → logprob: -1.2840169668197632
    3. ' #' → logprob: -3.1590170860290527
    4. 'def' → logprob: -3.4090170860290527
    5. 'k' → logprob: -4.284017086029053
    6. '#
' → logprob: -4.409017086029053
    7. 'n' → logprob: -5.034017086029053
    8. '
' → logprob: -5.409017086029053
    9. ' k' → logprob: -5.409017086029053
    10. ' def' → logprob: -5.409017086029053

Token 583: ' salaire' (ID: 135427)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1024583578109741
    2. '#' → logprob: -1.4774583578109741
    3. ' k' → logprob: -1.6024583578109741
    4. ' def' → logprob: -2.6024584770202637
    5. ' #' → logprob: -2.7274584770202637
    6. 'def' → logprob: -3.1024584770202637
    7. '   ' → logprob: -4.227458477020264
    8. ' n' → logprob: -4.352458477020264
    9. 'n' → logprob: -4.477458477020264
    10. ' (' → logprob: -5.852458477020264

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004090866539627314
    2. '=' → logprob: -5.504090785980225
    3. 'max' → logprob: -12.379091262817383
    4. '   ' → logprob: -12.879091262817383
    5. ' ' → logprob: -14.004091262817383
    6. ' ' → logprob: -14.379091262817383
    7. 'def' → logprob: -14.379091262817383
    8. 's' → logprob: -14.504091262817383
    9. '=k' → logprob: -14.504091262817383
    10. '=max' → logprob: -14.629091262817383

Token 585: ' k' (ID: 372)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.45901158452033997
    2. '(n' → logprob: -1.4590115547180176
    3. 'k' → logprob: -2.8340115547180176
    4. ' k' → logprob: -2.9590115547180176
    5. '(k' → logprob: -4.584011554718018
    6. '(' → logprob: -5.334011554718018
    7. ' n' → logprob: -5.459011554718018
    8. 'n' → logprob: -6.084011554718018
    9. '   ' → logprob: -6.209011554718018
    10. '(s' → logprob: -7.209011554718018

Token 586: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.007956395857036114
    2. ' =' → logprob: -5.007956504821777
    3. '*' → logprob: -6.757956504821777
    4. '=' → logprob: -10.007956504821777
    5. '*(' → logprob: -11.757956504821777
    6. '   ' → logprob: -12.132956504821777
    7. 'def' → logprob: -12.382956504821777
    8. ' ' → logprob: -12.632956504821777
    9. ' #' → logprob: -12.632956504821777
    10. ')' → logprob: -12.757956504821777

Token 587: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15046602487564087
    2. '(S' → logprob: -2.025465965270996
    3. '(' → logprob: -4.900465965270996
    4. '(s' → logprob: -8.400465965270996
    5. '(T' → logprob: -11.025465965270996
    6. ' ((' → logprob: -11.525465965270996
    7. ' ' → logprob: -11.650465965270996
    8. ' \(' → logprob: -11.900465965270996
    9. '`' → logprob: -12.025465965270996
    10. ' ' → logprob: -12.150465965270996

Token 588: 'S' (ID: 50)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.3557169735431671
    2. ' (' → logprob: -1.3557169437408447
    3. '(' → logprob: -3.2307169437408447
    4. 'S' → logprob: -6.980717182159424
    5. '(n' → logprob: -7.605717182159424
    6. ' S' → logprob: -8.605716705322266
    7. '(s' → logprob: -8.605716705322266
    8. ')' → logprob: -9.730716705322266
    9. 'n' → logprob: -10.230716705322266
    10. '(
' → logprob: -10.605716705322266

Token 589: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06447122991085052
    2. '+' → logprob: -3.0644712448120117
    3. ' -' → logprob: -4.189471244812012
    4. ')' → logprob: -8.314471244812012
    5. '-' → logprob: -8.314471244812012
    6. '   ' → logprob: -9.939471244812012
    7. ' ' → logprob: -10.064471244812012
    8. ' ' → logprob: -12.189471244812012
    9. '  ' → logprob: -12.564471244812012
    10. '    ' → logprob: -12.814471244812012

Token 590: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759923458099365
    2. ' x' → logprob: -0.8259923458099365
    3. ')' → logprob: -10.950992584228516
    4. ' ' → logprob: -11.075992584228516
    5. ''' → logprob: -12.075992584228516
    6. ' ' → logprob: -12.325992584228516
    7. '"' → logprob: -13.450992584228516
    8. '   ' → logprob: -13.950992584228516
    9. '_x' → logprob: -14.075992584228516
    10. ''x' → logprob: -14.075992584228516

Token 591: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01195735763758421
    2. '-' → logprob: -5.136957168579102
    3. ' -' → logprob: -5.511957168579102
    4. ' )' → logprob: -6.386957168579102
    5. '+' → logprob: -9.761957168579102
    6. ' +' → logprob: -10.136957168579102
    7. ' ' → logprob: -10.261957168579102
    8. ')
' → logprob: -10.386957168579102
    9. '-)' → logprob: -10.511957168579102
    10. '=' → logprob: -10.886957168579102

Token 592: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 593: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10869745910167694
    2. '(n' → logprob: -2.4836974143981934
    3. ' k' → logprob: -4.858697414398193
    4. '(k' → logprob: -5.358697414398193
    5. 'k' → logprob: -5.483697414398193
    6. '(' → logprob: -6.108697414398193
    7. '(s' → logprob: -8.358697891235352
    8. '(S' → logprob: -8.733697891235352
    9. ' n' → logprob: -9.108697891235352
    10. 'n' → logprob: -9.733697891235352

Token 594: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10633673518896103
    2. ' n' → logprob: -2.356336832046509
    3. '(n' → logprob: -5.60633659362793
    4. 'k' → logprob: -6.60633659362793
    5. ' (' → logprob: -7.85633659362793
    6. '   ' → logprob: -8.23133659362793
    7. ' k' → logprob: -8.85633659362793
    8. '(' → logprob: -9.98133659362793
    9. ')n' → logprob: -10.35633659362793
    10. ' ' → logprob: -10.73133659362793

Token 595: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0015067668864503503
    2. '-' → logprob: -6.501506805419922
    3. '-k' → logprob: -13.251506805419922
    4. ' ' → logprob: -13.876506805419922
    5. ')' → logprob: -14.126506805419922
    6. ' ' → logprob: -14.876506805419922
    7. '-n' → logprob: -16.251506805419922
    8. '   ' → logprob: -16.376506805419922
    9. '  ' → logprob: -16.626506805419922
    10. '_' → logprob: -16.751506805419922

Token 596: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0920882523059845
    2. ' x' → logprob: -2.467088222503662
    3. 'nombre' → logprob: -6.217088222503662
    4. ' nombre' → logprob: -7.342088222503662
    5. 'number' → logprob: -8.21708869934082
    6. ' number' → logprob: -9.96708869934082
    7. '   ' → logprob: -10.09208869934082
    8. ' ' → logprob: -10.34208869934082
    9. 'j' → logprob: -11.09208869934082
    10. ' ' → logprob: -11.59208869934082

Token 597: '_co' (ID: 21102)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005442451220005751
    2. ' -' → logprob: -5.8804426193237305
    3. ' )' → logprob: -6.2554426193237305
    4. '-' → logprob: -8.00544261932373
    5. ' +' → logprob: -8.38044261932373
    6. '+' → logprob: -10.13044261932373
    7. ')*' → logprob: -10.50544261932373
    8. '   ' → logprob: -10.75544261932373
    9. ' ' → logprob: -11.63044261932373
    10. '_' → logprob: -12.25544261932373

Token 598: ')' (ID: 8)
  Prédit: 'unt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unt' → logprob: -0.9204765558242798
    2. 'ut' → logprob: -1.4204765558242798
    3. 'unts' → logprob: -1.7954765558242798
    4. 'ns' → logprob: -2.7954764366149902
    5. 'mm' → logprob: -3.7954764366149902
    6. 'nt' → logprob: -3.9204764366149902
    7. 'unted' → logprob: -4.29547643661499
    8. 'util' → logprob: -4.29547643661499
    9. 'mp' → logprob: -4.42047643661499
    10. '_used' → logprob: -4.67047643661499

Token 599: ' *' (ID: 425)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.7442424297332764
    2. '_util' → logprob: -1.1192424297332764
    3. 'ut' → logprob: -2.4942424297332764
    4. 'used' → logprob: -3.3692424297332764
    5. 'util' → logprob: -3.7442424297332764
    6. 'n' → logprob: -4.3692426681518555
    7. 'p' → logprob: -4.4942426681518555
    8. 'u' → logprob: -4.9942426681518555
    9. '_' → logprob: -5.1192426681518555
    10. 'f' → logprob: -5.4942426681518555

Token 600: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.317025363445282
    2. '(S' → logprob: -1.6920254230499268
    3. '(' → logprob: -2.4420254230499268
    4. '(s' → logprob: -7.942025184631348
    5. '(P' → logprob: -9.942025184631348
    6. ''' → logprob: -10.317025184631348
    7. '(n' → logprob: -10.442025184631348
    8. '(T' → logprob: -11.067025184631348
    9. '(x' → logprob: -11.317025184631348
    10. ' ' → logprob: -11.442025184631348

Token 601: 'S' (ID: 50)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.06777375191450119
    2. 'S' → logprob: -2.9427738189697266
    3. ' (' → logprob: -4.567773818969727
    4. '(' → logprob: -6.692773818969727
    5. ' S' → logprob: -7.567773818969727
    6. 'x' → logprob: -7.942773818969727
    7. '   ' → logprob: -9.692773818969727
    8. '(s' → logprob: -9.692773818969727
    9. '(x' → logprob: -10.067773818969727
    10. '((' → logprob: -10.317773818969727

Token 602: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.21693673729896545
    2. '+' → logprob: -2.3419368267059326
    3. ' -' → logprob: -2.3419368267059326
    4. '-' → logprob: -5.9669365882873535
    5. ' ' → logprob: -9.466937065124512
    6. '+x' → logprob: -10.091937065124512
    7. ')' → logprob: -10.966937065124512
    8. '   ' → logprob: -11.216937065124512
    9. '+)' → logprob: -12.466937065124512
    10. '  ' → logprob: -12.904437065124512

Token 603: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01604093797504902
    2. ' x' → logprob: -4.141040802001953
    3. ' ' → logprob: -13.016040802001953
    4. '   ' → logprob: -13.391040802001953
    5. '	x' → logprob: -14.516040802001953
    6. '```' → logprob: -14.766040802001953
    7. ' ' → logprob: -15.141040802001953
    8. '_x' → logprob: -15.141040802001953
    9. ')' → logprob: -15.391040802001953
    10. 'j' → logprob: -15.641040802001953

Token 604: '_co' (ID: 21102)
  Prédit: '_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.8482050895690918
    2. ')' → logprob: -1.0982050895690918
    3. '_used' → logprob: -2.098205089569092
    4. '_' → logprob: -2.223205089569092
    5. '_util' → logprob: -5.848205089569092
    6. '_co' → logprob: -5.848205089569092
    7. 'used' → logprob: -7.848205089569092
    8. ')_' → logprob: -8.34820556640625
    9. '_use' → logprob: -9.34820556640625
    10. '_u' → logprob: -9.34820556640625

Token 605: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004900033236481249
    2. '_)' → logprob: -8.750490188598633
    3. '_' → logprob: -9.125490188598633
    4. '_co' → logprob: -9.500490188598633
    5. ' )' → logprob: -10.250490188598633
    6. ')`' → logprob: -11.000490188598633
    7. ')**' → logprob: -11.250490188598633
    8. '_used' → logprob: -11.250490188598633
    9. '   ' → logprob: -11.625490188598633
    10. '+' → logprob: -11.625490188598633

Token 606: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46358034014701843
    2. ')' → logprob: -1.8385803699493408
    3. '_co' → logprob: -1.8385803699493408
    4. '   ' → logprob: -3.838580369949341
    5. 'def' → logprob: -5.213580131530762
    6. 'co' → logprob: -5.463580131530762
    7. '_
' → logprob: -5.838580131530762
    8. '_)' → logprob: -5.963580131530762
    9. '
' → logprob: -6.588580131530762
    10. '\n' → logprob: -6.713580131530762

Token 607: ' #' (ID: 1069)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.048130203038454056
    2. ')' → logprob: -3.6731302738189697
    3. '_co' → logprob: -4.048130035400391
    4. '\' → logprob: -7.673130035400391
    5. '_)' → logprob: -7.798130035400391
    6. '_
' → logprob: -8.17313003540039
    7. '   ' → logprob: -8.17313003540039
    8. '#' (adapté à ' #') → logprob: -8.17313003540039
    9. 'co' → logprob: -8.42313003540039
    10. 'x' → logprob: -8.42313003540039

Token 608: ' où' (ID: 15113)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018474625423550606
    2. '_co' → logprob: -4.143474578857422
    3. ')' → logprob: -7.393474578857422
    4. '_
' → logprob: -7.393474578857422
    5. 'co' → logprob: -7.893474578857422
    6. 'x' → logprob: -8.393474578857422
    7. ' _' → logprob: -9.643474578857422
    8. '
' → logprob: -9.768474578857422
    9. '<|end|>' → logprob: -10.143474578857422
    10. '_{' → logprob: -10.268474578857422

Token 609: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1002570316195488
    2. 'x' → logprob: -2.35025691986084
    3. ' ' → logprob: -10.47525691986084
    4. ' ' → logprob: -10.97525691986084
    5. ' \' → logprob: -13.60025691986084
    6. ' `' → logprob: -14.22525691986084
    7. '	x' → logprob: -14.85025691986084
    8. '   ' → logprob: -14.97525691986084
    9. '  ' → logprob: -15.35025691986084
    10. ' j' → logprob: -15.47525691986084

Token 610: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.2530251443386078
    2. '_' → logprob: -1.5030251741409302
    3. '_cov' → logprob: -8.12802505493164
    4. ' _' → logprob: -8.37802505493164
    5. '_used' → logprob: -9.00302505493164
    6. '_c' → logprob: -9.25302505493164
    7. ' =' → logprob: -9.50302505493164
    8. '_coef' → logprob: -10.00302505493164
    9. '_coeff' → logprob: -11.00302505493164
    10. '_con' → logprob: -11.25302505493164

Token 611: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0061554741114377975
    2. ' _' → logprob: -5.881155490875244
    3. ' =' → logprob: -6.006155490875244
    4. '=' → logprob: -8.006155014038086
    5. '_co' → logprob: -8.631155014038086
    6. ')' → logprob: -9.256155014038086
    7. '_=' → logprob: -10.131155014038086
    8. ' ' → logprob: -10.256155014038086
    9. 's' → logprob: -10.506155014038086
    10. '[' → logprob: -10.506155014038086

Token 612: ' somme' (ID: 64484)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7938567996025085
    2. ' x' → logprob: -1.5438568592071533
    3. ' ' → logprob: -1.7938568592071533
    4. 'x' → logprob: -1.9188568592071533
    5. ' used' → logprob: -5.043856620788574
    6. ' nombre' → logprob: -6.043856620788574
    7. ' number' → logprob: -6.418856620788574
    8. ' sum' → logprob: -6.543856620788574
    9. ' j' → logprob: -6.668856620788574
    10. 'int' → logprob: -6.918856620788574

Token 613: ' des' (ID: 731)
  Prédit: '_des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_des' → logprob: -0.15729442238807678
    2. 'des' → logprob: -2.282294511795044
    3. '_co' → logprob: -4.032294273376465
    4. ' des' → logprob: -4.782294273376465
    5. '_' → logprob: -4.907294273376465
    6. '_used' → logprob: -5.532294273376465
    7. '_util' → logprob: -5.907294273376465
    8. '   ' → logprob: -7.032294273376465
    9. ' _' → logprob: -7.657294273376465
    10. '_of' → logprob: -7.907294273376465

Token 614: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2958282232284546
    2. '_' → logprob: -1.7958282232284546
    3. '_j' → logprob: -3.045828342437744
    4. ' _' → logprob: -4.670828342437744
    5. '_used' → logprob: -4.920828342437744
    6. ' ' → logprob: -5.045828342437744
    7. 'used' → logprob: -5.420828342437744
    8. ' j' → logprob: -6.420828342437744
    9. 'joint' → logprob: -6.420828342437744
    10. 'joins' → logprob: -7.170828342437744

Token 615: ' utilisés' (ID: 94258)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6897847652435303
    2. '_util' → logprob: -0.8147847652435303
    3. '_used' → logprob: -2.9397847652435303
    4. '[' → logprob: -6.939785003662109
    5. '_[' → logprob: -7.814785003662109
    6. '_co' → logprob: -8.06478500366211
    7. ' _' → logprob: -8.43978500366211
    8. '_u' → logprob: -9.18978500366211
    9. '[_' → logprob: -9.18978500366211
    10. '_ut' → logprob: -9.18978500366211

Token 616: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7797739505767822
    2. 'def' → logprob: -1.1547739505767822
    3. ' =' → logprob: -3.0297739505767822
    4. '[n' → logprob: -3.1547739505767822
    5. '_' → logprob: -3.5297739505767822
    6. '
' → logprob: -4.029773712158203
    7. ')' → logprob: -4.404773712158203
    8. '[' → logprob: -4.529773712158203
    9. ',' → logprob: -4.779773712158203
    10. '_n' → logprob: -5.029773712158203

Token 617: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6332939863204956
    2. '
' → logprob: -1.2582939863204956
    3. ')' → logprob: -3.008294105529785
    4. 'def' → logprob: -3.383294105529785
    5. '    
' → logprob: -4.133294105529785
    6. '\' → logprob: -4.258294105529785
    7. '\n' → logprob: -4.633294105529785
    8. ',' → logprob: -4.758294105529785
    9. ':' → logprob: -4.758294105529785
    10. '  
' → logprob: -5.258294105529785

Token 618: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3459430932998657
    2. ':' → logprob: -2.345942974090576
    3. ')' → logprob: -2.845942974090576
    4. '
' → logprob: -3.470942974090576
    5. '\n' → logprob: -3.845942974090576
    6. 'def' → logprob: -3.970942974090576
    7. '\' → logprob: -4.595942974090576
    8. '[n' → logprob: -4.720942974090576
    9. ',' → logprob: -4.970942974090576
    10. '.' → logprob: -5.470942974090576

Token 619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14367453753948212
    2. 'def' → logprob: -2.893674612045288
    3. 'n' → logprob: -3.768674612045288
    4. '
' → logprob: -4.393674373626709
    5. 'import' → logprob: -4.643674373626709
    6. '\n' → logprob: -5.268674373626709
    7. '\' → logprob: -5.268674373626709
    8. '    
' → logprob: -5.393674373626709
    9. '<|end|>' → logprob: -5.518674373626709
    10. ' n' → logprob: -5.893674373626709

Token 620: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15639910101890564
    2. 'n' → logprob: -2.5313990116119385
    3. '\n' → logprob: -4.031399250030518
    4. '    
' → logprob: -4.406399250030518
    5. '
' → logprob: -4.906399250030518
    6. 'def' → logprob: -5.031399250030518
    7. '\' → logprob: -5.406399250030518
    8. ' 
' → logprob: -5.656399250030518
    9. ')' → logprob: -5.906399250030518
    10. '#' (adapté à ' #') → logprob: -6.406399250030518

Token 621: ' Il' (ID: 5329)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005160462576895952
    2. '#' → logprob: -5.880160331726074
    3. 'p' → logprob: -7.005160331726074
    4. 'def' → logprob: -7.005160331726074
    5. '   ' → logprob: -8.130160331726074
    6. ' n' → logprob: -9.630160331726074
    7. 'import' → logprob: -10.005160331726074
    8. 'pass' → logprob: -10.755160331726074
    9. 'from' → logprob: -11.380160331726074
    10. '\n' → logprob: -11.380160331726074

Token 622: ' faut' (ID: 17821)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8977592587471008
    2. '_' → logprob: -1.147759199142456
    3. '_co' → logprob: -1.772759199142456
    4. ' =' → logprob: -3.272759199142456
    5. 'co' → logprob: -4.522759437561035
    6. 'def' → logprob: -4.647759437561035
    7. 'n' → logprob: -4.897759437561035
    8. 'x' → logprob: -5.147759437561035
    9. '=' → logprob: -5.147759437561035
    10. ' s' → logprob: -5.647759437561035

Token 623: ' choisir' (ID: 47004)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -1.0265295505523682
    2. ' choisir' → logprob: -1.5265295505523682
    3. 'max' → logprob: -1.7765295505523682
    4. ' maxim' → logprob: -2.401529550552368
    5. ' optimiser' → logprob: -3.276529550552368
    6. 'chercher' → logprob: -4.276529312133789
    7. 'tr' → logprob: -4.401529312133789
    8. ' déterminer' → logprob: -4.401529312133789
    9. ' continuer' → logprob: -4.651529312133789
    10. ' chercher' → logprob: -4.901529312133789

Token 624: ' un' (ID: 537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13446111977100372
    2. ' _' → logprob: -2.6344611644744873
    3. ' ' → logprob: -3.0094611644744873
    4. ' x' → logprob: -6.509460926055908
    5. 'x' → logprob: -7.259460926055908
    6. ' ' → logprob: -7.759460926055908
    7. ')' → logprob: -7.884460926055908
    8. '_x' → logprob: -8.384461402893066
    9. ' )' → logprob: -9.009461402893066
    10. '   ' → logprob: -9.509461402893066

Token 625: ' sous' (ID: 14487)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3482944667339325
    2. ' _' → logprob: -1.9732944965362549
    3. 'x' → logprob: -3.723294496536255
    4. ' ' → logprob: -3.848294496536255
    5. ' espace' → logprob: -3.848294496536255
    6. ' x' → logprob: -4.473294258117676
    7. 'joint' → logprob: -4.848294258117676
    8. ' joint' → logprob: -5.098294258117676
    9. 'space' → logprob: -5.223294258117676
    10. 'es' → logprob: -5.473294258117676

Token 626: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016632001847028732
    2. '-' → logprob: -4.641632080078125
    3. 'ensemble' → logprob: -5.891632080078125
    4. ' _' → logprob: -6.141632080078125
    5. 'set' → logprob: -8.141632080078125
    6. '_e' → logprob: -8.516632080078125
    7. '\' → logprob: -8.766632080078125
    8. '_c' → logprob: -9.016632080078125
    9. '_m' → logprob: -9.266632080078125
    10. '_-' → logprob: -9.391632080078125

Token 627: 'ensemble' (ID: 37301)
  Prédit: 'ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.02963210456073284
    2. 'segment' → logprob: -3.779632091522217
    3. 'ense' → logprob: -5.529632091522217
    4. 'interval' → logprob: -7.904632091522217
    5. '-' → logprob: -8.029632568359375
    6. '#' → logprob: -8.154632568359375
    7. 'sequence' → logprob: -8.279632568359375
    8. 'set' → logprob: -8.529632568359375
    9. '```' → logprob: -8.779632568359375
    10. '_' → logprob: -9.029632568359375

Token 628: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006715016905218363
    2. ' _' → logprob: -5.506714820861816
    3. ' ' → logprob: -7.256714820861816
    4. ' de' → logprob: -7.256714820861816
    5. ' des' → logprob: -7.506714820861816
    6. '_des' → logprob: -8.881714820861816
    7. '<|end|>' → logprob: -9.006714820861816
    8. ' d' → logprob: -9.506714820861816
    9. ')' → logprob: -10.006714820861816
    10. '_{' → logprob: -10.506714820861816

Token 629: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23888322710990906
    2. ' _' → logprob: -2.4888832569122314
    3. '_j' → logprob: -2.7388832569122314
    4. ' des' → logprob: -3.6138832569122314
    5. '_des' → logprob: -4.488883018493652
    6. 'des' → logprob: -4.863883018493652
    7. ' de' → logprob: -5.863883018493652
    8. ' j' → logprob: -5.863883018493652
    9. 'j' → logprob: -6.363883018493652
    10. 'es' → logprob: -6.613883018493652

Token 630: 'indices' (ID: 30992)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5239420533180237
    2. ' j' → logprob: -1.523941993713379
    3. 'les' → logprob: -2.898941993713379
    4. '_j' → logprob: -3.148941993713379
    5. ' joints' → logprob: -3.523941993713379
    6. ' les' → logprob: -4.148941993713379
    7. '[j' → logprob: -5.273941993713379
    8. 'es' → logprob: -5.398941993713379
    9. 's' → logprob: -5.648941993713379
    10. '```' → logprob: -5.898941993713379

Token 631: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3168404996395111
    2. '_util' → logprob: -1.9418405294418335
    3. '_des' → logprob: -3.066840410232544
    4. ' _' → logprob: -3.691840410232544
    5. ' des' → logprob: -4.316840648651123
    6. '_used' → logprob: -4.441840648651123
    7. '[' → logprob: -4.691840648651123
    8. 'des' → logprob: -6.066840648651123
    9. '_co' → logprob: -6.066840648651123
    10. '_j' → logprob: -6.066840648651123

Token 632: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.055196840316057205
    2. '_util' → logprob: -4.055196762084961
    3. '_co' → logprob: -4.305196762084961
    4. '[' → logprob: -4.805196762084961
    5. ' _' → logprob: -5.430196762084961
    6. '_used' → logprob: -5.555196762084961
    7. '_des' → logprob: -6.805196762084961
    8. '[]' → logprob: -7.805196762084961
    9. '```' → logprob: -7.805196762084961
    10. '_use' → logprob: -8.305196762084961

Token 633: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4574032425880432
    2. ' )' → logprob: -1.8324031829833984
    3. '[j' → logprob: -3.5824031829833984
    4. '_co' → logprob: -3.5824031829833984
    5. '_j' → logprob: -4.082403182983398
    6. '[i' → logprob: -4.082403182983398
    7. '[' → logprob: -4.332403182983398
    8. ' des' → logprob: -4.457403182983398
    9. '   ' → logprob: -4.957403182983398
    10. '_' → logprob: -4.957403182983398

Token 634: ' ≤' (ID: 72554)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7558152675628662
    2. ' +' → logprob: -1.7558152675628662
    3. ')' → logprob: -2.005815267562866
    4. ' <=' → logprob: -2.630815267562866
    5. ' )' → logprob: -3.005815267562866
    6. '[' → logprob: -3.505815267562866
    7. '...' → logprob: -4.380815505981445
    8. '[i' → logprob: -4.880815505981445
    9. '<=' → logprob: -5.005815505981445
    10. '_' → logprob: -5.255815505981445

Token 635: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1136789321899414
    2. ' n' → logprob: -1.2386789321899414
    3. 'i' → logprob: -1.3636789321899414
    4. ')' → logprob: -2.8636789321899414
    5. ' i' → logprob: -2.8636789321899414
    6. ')n' → logprob: -5.113678932189941
    7. 'x' → logprob: -6.863678932189941
    8. '
' → logprob: -7.238678932189941
    9. ' ' → logprob: -7.738678932189941
    10. ' )' → logprob: -7.738678932189941

Token 636: ' ≤' (ID: 72554)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8186944127082825
    2. '[' → logprob: -1.1936943531036377
    3. ')' → logprob: -2.6936943531036377
    4. ']' → logprob: -3.0686943531036377
    5. ' +' → logprob: -3.0686943531036377
    6. '[i' → logprob: -3.3186943531036377
    7. '_' → logprob: -4.568694591522217
    8. '   ' → logprob: -4.568694591522217
    9. '[
' → logprob: -5.568694591522217
    10. ' ' → logprob: -5.943694591522217

Token 637: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08895865827798843
    2. ' n' → logprob: -2.463958740234375
    3. '(n' → logprob: -11.838958740234375
    4. '   ' → logprob: -12.213958740234375
    5. ' ' → logprob: -13.838958740234375
    6. ' ' → logprob: -13.963958740234375
    7. '	n' → logprob: -14.088958740234375
    8. '
' → logprob: -14.213958740234375
    9. ')n' → logprob: -14.463958740234375
    10. 'len' → logprob: -14.463958740234375

Token 638: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7226125597953796
    2. ')' → logprob: -1.5976126194000244
    3. '_co' → logprob: -1.7226126194000244
    4. '_j' → logprob: -3.0976126194000244
    5. '+' → logprob: -3.5976126194000244
    6. '-' → logprob: -4.097612380981445
    7. '_)' → logprob: -4.597612380981445
    8. ')_' → logprob: -4.847612380981445
    9. '_used' → logprob: -4.972612380981445
    10. '_joint' → logprob: -5.972612380981445

Token 639: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -11.000041007995605
    3. ')' → logprob: -11.625041007995605
    4. '-' → logprob: -11.875041007995605
    5. '2' → logprob: -12.000041007995605
    6. '#' → logprob: -15.000041007995605
    7. 'n' → logprob: -15.000041007995605
    8. ' -' → logprob: -15.875041007995605
    9. ' ' → logprob: -16.50004005432129
    10. '_' → logprob: -16.50004005432129

Token 640: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007078829221427441
    2. '+' → logprob: -5.632078647613525
    3. ' )' → logprob: -6.007078647613525
    4. ')
' → logprob: -8.757079124450684
    5. '   ' → logprob: -9.007079124450684
    6. ' +' → logprob: -9.507079124450684
    7. ')+' → logprob: -9.757079124450684
    8. '+)' → logprob: -9.882079124450684
    9. '):
' → logprob: -10.007079124450684
    10. ')_' → logprob: -10.132079124450684

Token 641: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3143934905529022
    2. '<|end|>' → logprob: -2.1893935203552246
    3. ')' → logprob: -3.0643935203552246
    4. ' _' → logprob: -3.3143935203552246
    5. ',' → logprob: -3.6893935203552246
    6. ' ' → logprob: -4.314393520355225
    7. '_co' → logprob: -4.939393520355225
    8. '_util' → logprob: -5.439393520355225
    9. '```' → logprob: -6.314393520355225
    10. '   ' → logprob: -6.439393520355225

Token 642: ' joints' (ID: 47223)
  Prédit: ' joints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joints' → logprob: -0.21542920172214508
    2. 'j' → logprob: -1.7154291868209839
    3. ' j' → logprob: -4.465429306030273
    4. 'joint' → logprob: -7.840429306030273
    5. ' joint' → logprob: -7.965429306030273
    6. '_j' → logprob: -8.090429306030273
    7. 'joins' → logprob: -8.215429306030273
    8. '```' → logprob: -8.340429306030273
    9. ' ' → logprob: -8.465429306030273
    10. ' ' → logprob: -9.340429306030273

Token 643: ' à' (ID: 1221)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.41599810123443604
    2. '   ' → logprob: -2.0409979820251465
    3. ' utilisés' → logprob: -2.2909979820251465
    4. '_util' → logprob: -3.1659979820251465
    5. ' utilisé' → logprob: -4.9159979820251465
    6. ' used' → logprob: -5.0409979820251465
    7. '[i' → logprob: -5.0409979820251465
    8. ',' → logprob: -5.2909979820251465
    9. 'used' → logprob: -5.5409979820251465
    10. '_' → logprob: -5.6659979820251465

Token 644: ' utiliser' (ID: 43227)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.05997996777296066
    2. ' utiliser' → logprob: -2.9349799156188965
    3. 'co' → logprob: -6.3099799156188965
    4. ''utiliser' → logprob: -7.1849799156188965
    5. 'connect' → logprob: -7.8099799156188965
    6. 'rel' → logprob: -7.8099799156188965
    7. 'incl' → logprob: -8.184980392456055
    8. 'cho' → logprob: -8.684980392456055
    9. 'used' → logprob: -8.684980392456055
    10. ' rel' → logprob: -8.934980392456055

Token 645: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1671379804611206
    2. '<|end|>' → logprob: -1.2921379804611206
    3. ',' → logprob: -1.5421379804611206
    4. ')' → logprob: -3.16713809967041
    5. '_' → logprob: -3.41713809967041
    6. '[' → logprob: -3.41713809967041
    7. '<|end|>' → logprob: -3.79213809967041
    8. '.' → logprob: -4.16713809967041
    9. ':' → logprob: -4.41713809967041
    10. ' ' → logprob: -4.66713809967041

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028492707759141922
    2. '.' → logprob: -4.9034929275512695
    3. ':' → logprob: -5.0284929275512695
    4. ',' → logprob: -5.4034929275512695
    5. '<|end|>' → logprob: -6.1534929275512695
    6. ')' → logprob: -6.2784929275512695
    7. 'def' → logprob: -6.9034929275512695
    8. '[i' → logprob: -7.0284929275512695
    9. '<|end|>' → logprob: -7.0284929275512695
    10. '    ' → logprob: -7.4034929275512695

Token 647: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016979090869426727
    2. '.' → logprob: -5.016979217529297
    3. '[i' → logprob: -5.266979217529297
    4. ':' → logprob: -6.641979217529297
    5. 'def' → logprob: -7.266979217529297
    6. ')' → logprob: -7.641979217529297
    7. '```' → logprob: -7.641979217529297
    8. '#' (adapté à ' #') → logprob: -8.016979217529297
    9. ',' → logprob: -8.266979217529297
    10. 'for' → logprob: -8.266979217529297

Token 648: ' pour' (ID: 1930)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8682590126991272
    2. '.' → logprob: -1.8682589530944824
    3. '   ' → logprob: -2.4932589530944824
    4. ',' → logprob: -2.6182589530944824
    5. ':' → logprob: -2.7432589530944824
    6. '[' → logprob: -2.9932589530944824
    7. '```' → logprob: -3.6182589530944824
    8. '_' → logprob: -3.9932589530944824
    9. ' =' → logprob: -3.9932589530944824
    10. '<|end|>' → logprob: -4.118258953094482

Token 649: ' maxim' (ID: 29045)
  Prédit: ' maxim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maxim' → logprob: -0.6689477562904358
    2. 'max' → logprob: -0.7939477562904358
    3. 'connect' → logprob: -4.168947696685791
    4. ' max' → logprob: -5.543947696685791
    5. 'rel' → logprob: -5.918947696685791
    6. 'maximize' → logprob: -6.168947696685791
    7. '   ' → logprob: -6.418947696685791
    8. 'augment' → logprob: -6.543947696685791
    9. ' rel' → logprob: -6.668947696685791
    10. 'contin' → logprob: -6.793947696685791

Token 650: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.025400808081030846
    2. 'ser' → logprob: -4.400400638580322
    3. 'er' → logprob: -4.900400638580322
    4. 'izer' → logprob: -6.525400638580322
    5. '#' → logprob: -6.650400638580322
    6. '```' → logprob: -7.650400638580322
    7. 'user' → logprob: -7.900400638580322
    8. '   ' → logprob: -8.02540111541748
    9. 'al' → logprob: -8.40040111541748
    10. '=' → logprob: -8.65040111541748

Token 651: ':
' (ID: 734)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7186433672904968
    2. 'x' → logprob: -1.2186434268951416
    3. '<|end|>' → logprob: -2.3436434268951416
    4. ')' → logprob: -3.4686434268951416
    5. ' ' → logprob: -3.5936434268951416
    6. '_' → logprob: -3.7186434268951416
    7. ' (' → logprob: -4.7186431884765625
    8. ' )' → logprob: -4.7186431884765625
    9. '(x' → logprob: -5.7186431884765625
    10. ' ' → logprob: -5.7186431884765625

Token 652: '   ' (ID: 271)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8232725262641907
    2. ' (' → logprob: -1.573272466659546
    3. 'x' → logprob: -1.698272466659546
    4. ' n' → logprob: -2.573272466659546
    5. '   ' → logprob: -3.448272466659546
    6. '(n' → logprob: -3.573272466659546
    7. 'n' → logprob: -4.448272705078125
    8. '#' → logprob: -5.823272705078125
    9. ' #' → logprob: -6.073272705078125
    10. ' lambda' → logprob: -6.073272705078125

Token 653: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7211552262306213
    2. '(n' → logprob: -1.0961551666259766
    3. 'x' → logprob: -2.8461551666259766
    4. ' x' → logprob: -2.9711551666259766
    5. '   ' → logprob: -3.2211551666259766
    6. ' n' → logprob: -4.096155166625977
    7. 'n' → logprob: -5.471155166625977
    8. '(' → logprob: -6.471155166625977
    9. '"' → logprob: -6.596155166625977
    10. '    ' → logprob: -7.221155166625977

Token 654: ' f' (ID: 285)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6819380521774292
    2. '(n' → logprob: -0.9319380521774292
    3. 'x' → logprob: -2.9319381713867188
    4. ' x' → logprob: -3.8069381713867188
    5. ' n' → logprob: -4.681938171386719
    6. '(' → logprob: -5.306938171386719
    7. 'n' → logprob: -5.431938171386719
    8. '(x' → logprob: -6.681938171386719
    9. ')' → logprob: -7.181938171386719
    10. ' ' → logprob: -7.181938171386719

Token 655: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.39718952775001526
    2. '(' → logprob: -2.3971896171569824
    3. 'orm' → logprob: -2.3971896171569824
    4. '_' → logprob: -2.7721896171569824
    5. ')' → logprob: -4.147189617156982
    6. '_co' → logprob: -4.647189617156982
    7. 'x' → logprob: -4.772189617156982
    8. 'or' → logprob: -5.022189617156982
    9. '**' → logprob: -5.272189617156982
    10. 'o' → logprob: -5.272189617156982

Token 656: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.05675789341330528
    2. '_' → logprob: -3.181757926940918
    3. '_)' → logprob: -5.056757926940918
    4. ')_' → logprob: -5.431757926940918
    5. ')' → logprob: -6.181757926940918
    6. ''_' → logprob: -8.806757926940918
    7. '_cov' → logprob: -9.181757926940918
    8. '_coef' → logprob: -9.431757926940918
    9. '"_' → logprob: -9.556757926940918
    10. '[' → logprob: -10.056757926940918

Token 657: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5498086810112
    2. '_' → logprob: -1.2998087406158447
    3. '_co' → logprob: -2.1748087406158447
    4. '_)' → logprob: -3.4248087406158447
    5. '[' → logprob: -6.924808502197266
    6. ')_' → logprob: -7.299808502197266
    7. ' _' → logprob: -7.924808502197266
    8. ' )' → logprob: -8.299808502197266
    9. '_used' → logprob: -8.424808502197266
    10. ',' → logprob: -9.049808502197266

Token 658: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04440912976861
    2. ')' → logprob: -3.6694090366363525
    3. '_co' → logprob: -4.294409275054932
    4. '_
' → logprob: -7.044409275054932
    5. ' _' → logprob: -7.044409275054932
    6. '_)' → logprob: -7.419409275054932
    7. '(' → logprob: -8.294408798217773
    8. '(x' → logprob: -8.294408798217773
    9. '[' → logprob: -8.919408798217773
    10. '_{' → logprob: -9.169408798217773

Token 659: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10164627432823181
    2. '(n' → logprob: -2.3516461849212646
    3. 'x' → logprob: -7.476646423339844
    4. '(x' → logprob: -8.101646423339844
    5. 'lambda' → logprob: -8.726646423339844
    6. '(lambda' → logprob: -8.726646423339844
    7. '(' → logprob: -9.226646423339844
    8. ' x' → logprob: -10.101646423339844
    9. ' lambda' → logprob: -10.476646423339844
    10. '((' → logprob: -11.226646423339844

Token 660: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013510769233107567
    2. '(n' → logprob: -5.013510704040527
    3. ' n' → logprob: -5.138510704040527
    4. 'x' → logprob: -7.638510704040527
    5. ' (' → logprob: -8.638510704040527
    6. 'k' → logprob: -8.888510704040527
    7. '   ' → logprob: -10.638510704040527
    8. '_n' → logprob: -11.263510704040527
    9. '
' → logprob: -11.638510704040527
    10. 'lambda' → logprob: -12.138510704040527

Token 661: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009117099456489086
    2. '-' → logprob: -4.759117126464844
    3. ')' → logprob: -8.009117126464844
    4. '+' → logprob: -10.259117126464844
    5. '-co' → logprob: -10.259117126464844
    6. ' +' → logprob: -10.634117126464844
    7. '-x' → logprob: -10.884117126464844
    8. ' ' → logprob: -11.509117126464844
    9. '   ' → logprob: -11.634117126464844
    10. ' ' → logprob: -12.384117126464844

Token 662: ' number' (ID: 2086)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.43165621161460876
    2. 'x' → logprob: -1.0566562414169312
    3. ' _' → logprob: -6.681656360626221
    4. '_x' → logprob: -7.056656360626221
    5. '_' → logprob: -8.056655883789062
    6. ' ' → logprob: -8.681655883789062
    7. '1' → logprob: -8.806655883789062
    8. ')' → logprob: -9.056655883789062
    9. '   ' → logprob: -11.181655883789062
    10. ' ' → logprob: -11.431655883789062

Token 663: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.0418068170547485
    2. '_co' → logprob: -1.0418068170547485
    3. '_' → logprob: -1.4168068170547485
    4. '_de' → logprob: -4.041806697845459
    5. ''_' → logprob: -4.541806697845459
    6. '_used' → logprob: -4.916806697845459
    7. ')_' → logprob: -5.291806697845459
    8. '_des' → logprob: -5.916806697845459
    9. ' de' → logprob: -6.916806697845459
    10. ' _' → logprob: -7.166806697845459

Token 664: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.016249842941761017
    2. '_' → logprob: -4.266249656677246
    3. '_co' → logprob: -6.891249656677246
    4. '_used' → logprob: -7.766249656677246
    5. '_x' → logprob: -8.516249656677246
    6. '_joint' → logprob: -9.016249656677246
    7. 'j' → logprob: -9.766249656677246
    8. ')_' → logprob: -10.016249656677246
    9. ''_' → logprob: -10.391249656677246
    10. '_i' → logprob: -10.391249656677246

Token 665: 'oints' (ID: 28687)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.5869629383087158
    2. '_' → logprob: -1.3369629383087158
    3. '_j' → logprob: -1.9619629383087158
    4. 'oints' → logprob: -3.961962938308716
    5. '_used' → logprob: -5.086962699890137
    6. ''_' → logprob: -5.461962699890137
    7. '_o' → logprob: -6.211962699890137
    8. '_segments' → logprob: -6.711962699890137
    9. '_joint' → logprob: -6.836962699890137
    10. ')_' → logprob: -7.586962699890137

Token 666: '_used' (ID: 67016)
  Prédit: '_util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.5705012679100037
    2. '_used' → logprob: -1.3205013275146484
    3. '_' → logprob: -1.8205013275146484
    4. '_co' → logprob: -6.320501327514648
    5. ''_' → logprob: -7.195501327514648
    6. ' _' → logprob: -7.820501327514648
    7. ')' → logprob: -7.945501327514648
    8. ')_' → logprob: -7.945501327514648
    9. '_use' → logprob: -8.320501327514648
    10. '_)' → logprob: -8.320501327514648

Token 667: ')' (ID: 8)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.6317499279975891
    2. '_' → logprob: -1.6317498683929443
    3. '_co' → logprob: -1.8817498683929443
    4. '_util' → logprob: -2.7567498683929443
    5. '_)' → logprob: -3.5067498683929443
    6. ')' → logprob: -4.006750106811523
    7. ')_' → logprob: -5.506750106811523
    8. 's' → logprob: -6.631750106811523
    9. '```' → logprob: -7.006750106811523
    10. '_),' → logprob: -8.131750106811523

Token 668: ' *' (ID: 425)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.4485836923122406
    2. '_co' → logprob: -1.073583722114563
    3. '_util' → logprob: -4.698583602905273
    4. '_' → logprob: -5.073583602905273
    5. ')' → logprob: -6.448583602905273
    6. ' _' → logprob: -7.323583602905273
    7. '```' → logprob: -8.198583602905273
    8. '_use' → logprob: -8.323583602905273
    9. '*' → logprob: -8.323583602905273
    10. ' *' → logprob: -8.823583602905273

Token 669: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1511559933423996
    2. '(S' → logprob: -2.651155948638916
    3. '(' → logprob: -3.026155948638916
    4. '(x' → logprob: -4.151155948638916
    5. 'x' → logprob: -5.651155948638916
    6. ' x' → logprob: -7.526155948638916
    7. '(s' → logprob: -7.776155948638916
    8. '(n' → logprob: -8.026156425476074
    9. '(N' → logprob: -8.901156425476074
    10. '(T' → logprob: -9.401156425476074

Token 670: 'S' (ID: 50)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.02980511076748371
    2. ' (' → logprob: -4.0298051834106445
    3. '(' → logprob: -5.1548051834106445
    4. 'x' → logprob: -5.2798051834106445
    5. '(x' → logprob: -8.154805183410645
    6. ' x' → logprob: -8.904805183410645
    7. 'S' → logprob: -9.529805183410645
    8. 'sum' → logprob: -10.279805183410645
    9. '(s' → logprob: -10.404805183410645
    10. '(sum' → logprob: -10.404805183410645

Token 671: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04319489374756813
    2. '+' → logprob: -3.1681950092315674
    3. '_co' → logprob: -9.543194770812988
    4. '   ' → logprob: -10.293194770812988
    5. ')' → logprob: -10.668194770812988
    6. '_' → logprob: -10.668194770812988
    7. ' ' → logprob: -11.293194770812988
    8. ' _' → logprob: -11.793194770812988
    9. '    ' → logprob: -12.293194770812988
    10. ' ' → logprob: -12.918194770812988

Token 672: ' sum' (ID: 4215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6327219605445862
    2. ' x' → logprob: -0.7577219605445862
    3. ' ' → logprob: -9.757721900939941
    4. ' ' → logprob: -11.632721900939941
    5. ')' → logprob: -12.007721900939941
    6. 'number' → logprob: -12.257721900939941
    7. '```' → logprob: -12.382721900939941
    8. ' _' → logprob: -12.382721900939941
    9. '_x' → logprob: -12.632721900939941
    10. '+' → logprob: -12.632721900939941

Token 673: '_of' (ID: 8023)
  Prédit: '_des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_des' → logprob: -0.5335838794708252
    2. '_of' → logprob: -1.2835838794708252
    3. '_' → logprob: -2.408583879470825
    4. '_co' → logprob: -3.783583879470825
    5. '_used' → logprob: -4.033583641052246
    6. 'des' → logprob: -6.783583641052246
    7. '_{' → logprob: -7.033583641052246
    8. ' _' → logprob: -7.408583641052246
    9. '_j' → logprob: -7.408583641052246
    10. '_x' → logprob: -7.408583641052246

Token 674: '_j' (ID: 12021)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9027842879295349
    2. ' j' → logprob: -1.7777843475341797
    3. 'x' → logprob: -2.0277843475341797
    4. ' x' → logprob: -2.1527843475341797
    5. '_j' → logprob: -2.2777843475341797
    6. ' _' → logprob: -3.7777843475341797
    7. '_' → logprob: -4.40278434753418
    8. ' joints' → logprob: -4.77778434753418
    9. ' used' → logprob: -4.77778434753418
    10. '_used' → logprob: -5.02778434753418

Token 675: 'oints' (ID: 28687)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.21033434569835663
    2. '_' → logprob: -2.210334300994873
    3. '_used' → logprob: -3.085334300994873
    4. 'oints' → logprob: -4.210334300994873
    5. 'co' → logprob: -4.835334300994873
    6. 'x' → logprob: -5.835334300994873
    7. '_c' → logprob: -6.585334300994873
    8. ' _' → logprob: -6.835334300994873
    9. 'o' → logprob: -6.835334300994873
    10. '_util' → logprob: -7.335334300994873

Token 676: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.31538310647010803
    2. '_util' → logprob: -1.8153830766677856
    3. '_' → logprob: -2.815383195877075
    4. '_co' → logprob: -3.190383195877075
    5. ')' → logprob: -5.565382957458496
    6. '_)' → logprob: -6.565382957458496
    7. '   ' → logprob: -8.440382957458496
    8. ')_' → logprob: -8.565382957458496
    9. ' _' → logprob: -8.815382957458496
    10. '_use' → logprob: -9.065382957458496

Token 677: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8036110401153564
    2. '_used' → logprob: -1.0536110401153564
    3. '_co' → logprob: -1.9286110401153564
    4. '_' → logprob: -3.3036110401153564
    5. '_)' → logprob: -4.053610801696777
    6. ')_' → logprob: -6.678610801696777
    7. '_util' → logprob: -6.928610801696777
    8. 'used' → logprob: -8.553610801696777
    9. '_i' → logprob: -8.803610801696777
    10. '   ' → logprob: -8.803610801696777

Token 678: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.118656873703003
    2. '_' → logprob: -1.368656873703003
    3. '[' → logprob: -2.368656873703003
    4. '(' → logprob: -2.368656873703003
    5. '   ' → logprob: -2.993656873703003
    6. ':' → logprob: -3.243656873703003
    7. ' ' → logprob: -3.868656873703003
    8. ',' → logprob: -3.993656873703003
    9. '(n' → logprob: -4.493657112121582
    10. 'def' → logprob: -4.618657112121582

Token 679: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2936971187591553
    2. 'def' → logprob: -2.6686971187591553
    3. ')' → logprob: -2.9186971187591553
    4. ':' → logprob: -3.6686971187591553
    5. '
' → logprob: -4.043697357177734
    6. '(n' → logprob: -4.668697357177734
    7. '_' → logprob: -4.793697357177734
    8. '\' → logprob: -5.043697357177734
    9. '[n' → logprob: -5.043697357177734
    10. '[' → logprob: -5.293697357177734

Token 680: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014945479109883308
    2. 'def' → logprob: -5.1399455070495605
    3. 'n' → logprob: -5.8899455070495605
    4. '    
' → logprob: -6.7649455070495605
    5. '(n' → logprob: -6.7649455070495605
    6. '\' → logprob: -7.5149455070495605
    7. '
' → logprob: -7.5149455070495605
    8. ':' → logprob: -7.7649455070495605
    9. '\n' → logprob: -8.264945030212402
    10. ')' → logprob: -8.264945030212402

Token 681: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21135775744915009
    2. 'n' → logprob: -1.7113577127456665
    3. 'def' → logprob: -5.836357593536377
    4. '    
' → logprob: -6.211357593536377
    5. '
' → logprob: -6.461357593536377
    6. ')' → logprob: -6.836357593536377
    7. ' n' → logprob: -7.461357593536377
    8. '\n' → logprob: -7.711357593536377
    9. '\' → logprob: -8.336358070373535
    10. '(n' → logprob: -8.711358070373535

Token 682: ' Donc' (ID: 88837)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04027727618813515
    2. '   ' → logprob: -3.5402772426605225
    3. 'def' → logprob: -4.665277481079102
    4. ' n' → logprob: -8.415277481079102
    5. 'return' → logprob: -8.540277481079102
    6. '#' → logprob: -8.665277481079102
    7. '```' → logprob: -9.290277481079102
    8. 'from' → logprob: -9.415277481079102
    9. '    
' → logprob: -9.915277481079102
    10. 'if' → logprob: -10.165277481079102

Token 683: ' on' (ID: 402)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9352257251739502
    2. '   ' → logprob: -1.1852257251739502
    3. 'n' → logprob: -1.3102257251739502
    4. 'def' → logprob: -3.81022572517395
    5. '#' → logprob: -5.560225486755371
    6. ' #' → logprob: -6.185225486755371
    7. '
' → logprob: -6.560225486755371
    8. ' def' → logprob: -7.310225486755371
    9. 'from' → logprob: -7.435225486755371
    10. ' on' → logprob: -8.060225486755371

Token 684: ' doit' (ID: 21822)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3423463106155396
    2. ' peux' → logprob: -2.09234619140625
    3. '.' → logprob: -2.34234619140625
    4. ' _' → logprob: -2.46734619140625
    5. ' peut' → logprob: -2.59234619140625
    6. ' .' → logprob: -2.84234619140625
    7. '#' → logprob: -3.34234619140625
    8. ' doit' → logprob: -3.46734619140625
    9. 'def' → logprob: -3.59234619140625
    10. ' #' → logprob: -3.59234619140625

Token 685: ' trouver' (ID: 23195)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.6465895175933838
    2. ' maxim' → logprob: -2.271589517593384
    3. 'max' → logprob: -2.521589517593384
    4. 'contin' → logprob: -2.646589517593384
    5. 'chercher' → logprob: -3.021589517593384
    6. ' continuer' → logprob: -3.521589517593384
    7. 'tr' → logprob: -3.521589517593384
    8. 'cho' → logprob: -3.646589517593384
    9. 'optim' → logprob: -4.271589279174805
    10. ' trouver' → logprob: -4.271589279174805

Token 686: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6854279041290283
    2. ' le' → logprob: -1.8104279041290283
    3. ' l' → logprob: -2.4354279041290283
    4. ' les' → logprob: -2.5604279041290283
    5. '_' → logprob: -3.4354279041290283
    6. ' ' → logprob: -3.4354279041290283
    7. ' ' → logprob: -4.185427665710449
    8. ' _' → logprob: -4.310427665710449
    9. ' x' → logprob: -4.560427665710449
    10. ' des' → logprob: -4.560427665710449

Token 687: ' sous' (ID: 14487)
  Prédit: ' meilleur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' meilleur' → logprob: -1.094355583190918
    2. 'max' → logprob: -1.719355583190918
    3. ' max' → logprob: -1.844355583190918
    4. ' maximum' → logprob: -2.469355583190918
    5. 'me' → logprob: -2.969355583190918
    6. 'maximum' → logprob: -3.219355583190918
    7. 'x' → logprob: -3.594355583190918
    8. ' x' → logprob: -3.719355583190918
    9. ' best' → logprob: -3.844355583190918
    10. ' subset' → logprob: -4.094355583190918

Token 688: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015416761860251427
    2. 'set' → logprob: -5.515416622161865
    3. '_
' → logprob: -5.515416622161865
    4. ' _' → logprob: -6.140416622161865
    5. '-' → logprob: -6.890416622161865
    6. '_co' → logprob: -7.265416622161865
    7. '_-' → logprob: -7.390416622161865
    8. 'ensemble' → logprob: -8.015417098999023
    9. '_
' → logprob: -8.390417098999023
    10. '\' → logprob: -8.515417098999023

Token 689: 'ensemble' (ID: 37301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01111773680895567
    2. 'ensemble' → logprob: -4.636117935180664
    3. '_co' → logprob: -7.636117935180664
    4. ' _' → logprob: -8.511117935180664
    5. 'ense' → logprob: -9.011117935180664
    6. '-' → logprob: -10.011117935180664
    7. '_i' → logprob: -10.136117935180664
    8. 's' → logprob: -10.386117935180664
    9. 'set' → logprob: -10.386117935180664
    10. '```' → logprob: -10.386117935180664

Token 690: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5974312424659729
    2. '   ' → logprob: -1.5974311828613281
    3. '[' → logprob: -2.222431182861328
    4. ' ' → logprob: -3.097431182861328
    5. ')' → logprob: -3.597431182861328
    6. 'def' → logprob: -4.222431182861328
    7. '    ' → logprob: -4.972431182861328
    8. ' =' → logprob: -5.097431182861328
    9. '"' → logprob: -5.222431182861328
    10. ' _' → logprob: -5.472431182861328

Token 691: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3107367753982544
    2. ' j' → logprob: -1.3107367753982544
    3. '_j' → logprob: -1.3107367753982544
    4. ' joints' → logprob: -1.9357367753982544
    5. ' _' → logprob: -4.185736656188965
    6. '_' → logprob: -4.685736656188965
    7. ' ' → logprob: -5.560736656188965
    8. 'i' → logprob: -6.185736656188965
    9. '_joint' → logprob: -6.185736656188965
    10. '```' → logprob: -6.310736656188965

Token 692: ' qui' (ID: 2780)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4202131927013397
    2. '   ' → logprob: -2.045213222503662
    3. '_used' → logprob: -2.295213222503662
    4. '_util' → logprob: -3.420213222503662
    5. ' _' → logprob: -3.545213222503662
    6. ' à' → logprob: -4.545213222503662
    7. ' =' → logprob: -4.545213222503662
    8. '```' → logprob: -5.670213222503662
    9. ' utilisé' → logprob: -6.045213222503662
    10. '[' → logprob: -6.045213222503662

Token 693: ' maximise' (ID: 139203)
  Prédit: ' maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximize' → logprob: -1.0228499174118042
    2. 'max' → logprob: -1.2728499174118042
    3. ' maxim' → logprob: -2.0228500366210938
    4. ' maximise' → logprob: -2.5228500366210938
    5. 'maximize' → logprob: -2.8978500366210938
    6. ')' → logprob: -3.2728500366210938
    7. ' max' → logprob: -4.647850036621094
    8. '_max' → logprob: -4.897850036621094
    9. ' à' → logprob: -4.897850036621094
    10. ' utilisé' → logprob: -6.397850036621094

Token 694: ':
' (ID: 734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.572685718536377
    2. ' ' → logprob: -1.947685718536377
    3. ')' → logprob: -3.072685718536377
    4. '   ' → logprob: -3.197685718536377
    5. ' _' → logprob: -3.572685718536377
    6. '<|end|>' → logprob: -3.572685718536377
    7. '```' → logprob: -3.572685718536377
    8. 'j' → logprob: -4.197685718536377
    9. '"' → logprob: -4.322685718536377
    10. 'x' → logprob: -4.572685718536377

Token 695: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16128455102443695
    2. 'def' → logprob: -2.5362844467163086
    3. '#' → logprob: -3.7862844467163086
    4. ' def' → logprob: -4.911284446716309
    5. '```' → logprob: -5.161284446716309
    6. 'import' → logprob: -5.661284446716309
    7. ' x' → logprob: -5.661284446716309
    8. '
' → logprob: -5.661284446716309
    9. '    ' → logprob: -5.661284446716309
    10. 'x' → logprob: -5.786284446716309

Token 696: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.1629507541656494
    2. 'lambda' → logprob: -2.1629507541656494
    3. '0' → logprob: -2.2879507541656494
    4. ' x' → logprob: -2.6629507541656494
    5. ' (' → logprob: -2.6629507541656494
    6. ')' → logprob: -2.7879507541656494
    7. 'x' → logprob: -2.9129507541656494
    8. 'def' → logprob: -2.9129507541656494
    9. '```' → logprob: -3.1629507541656494
    10. ' lambda' → logprob: -3.4129507541656494

Token 697: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1970487833023071
    2. '1' → logprob: -2.1970486640930176
    3. ')' → logprob: -2.5720486640930176
    4. 'max' → logprob: -2.5720486640930176
    5. ' n' → logprob: -2.8220486640930176
    6. ' max' → logprob: -2.8220486640930176
    7. ' j' → logprob: -2.9470486640930176
    8. 'def' → logprob: -3.3220486640930176
    9. '#' → logprob: -3.5720486640930176
    10. ' def' → logprob: -3.8220486640930176

Token 698: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.028453316539525986
    2. '(n' → logprob: -3.6534533500671387
    3. 'x' → logprob: -7.403453350067139
    4. ' (' → logprob: -7.528453350067139
    5. ' n' → logprob: -7.778453350067139
    6. 'lambda' → logprob: -8.77845287322998
    7. ')' → logprob: -9.40345287322998
    8. '#' → logprob: -10.40345287322998
    9. 'k' → logprob: -10.65345287322998
    10. 'f' → logprob: -10.77845287322998

Token 699: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.027550430968403816
    2. '-' → logprob: -3.777550458908081
    3. ')' → logprob: -5.527550220489502
    4. ' )' → logprob: -9.02755069732666
    5. '+' → logprob: -10.15255069732666
    6. ' ' → logprob: -10.40255069732666
    7. ' +' → logprob: -10.52755069732666
    8. ' -
' → logprob: -10.77755069732666
    9. '    ' → logprob: -11.27755069732666
    10. '   ' → logprob: -11.65255069732666

Token 700: ' c' (ID: 274)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.6348987817764282
    2. ' x' → logprob: -0.8848987817764282
    3. 'number' → logprob: -3.2598986625671387
    4. 'x' → logprob: -4.634898662567139
    5. ' len' → logprob: -5.634898662567139
    6. '_number' → logprob: -6.759898662567139
    7. 'len' → logprob: -7.134898662567139
    8. ' _' → logprob: -7.134898662567139
    9. ' sum' → logprob: -7.134898662567139
    10. ' ' → logprob: -7.884898662567139

Token 701: ')' (ID: 8)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5941963791847229
    2. 'o' → logprob: -1.5941963195800781
    3. '_o' → logprob: -1.8441963195800781
    4. '_used' → logprob: -2.969196319580078
    5. '_co' → logprob: -3.719196319580078
    6. '_c' → logprob: -6.344196319580078
    7. '_j' → logprob: -6.469196319580078
    8. ')_' → logprob: -6.719196319580078
    9. '_of' → logprob: -7.094196319580078
    10. ' _' → logprob: -7.344196319580078

Token 702: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8384843468666077
    2. ')' → logprob: -1.588484287261963
    3. '_used' → logprob: -1.713484287261963
    4. '_co' → logprob: -1.838484287261963
    5. '_' → logprob: -4.838484287261963
    6. '*' → logprob: -4.963484287261963
    7. '   ' → logprob: -5.588484287261963
    8. ')*' → logprob: -6.963484287261963
    9. ' _' → logprob: -7.338484287261963
    10. ')*(' → logprob: -7.588484287261963

Token 703: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6592550277709961
    2. '(S' → logprob: -0.9092550277709961
    3. '(' → logprob: -2.534255027770996
    4. '(s' → logprob: -8.284255027770996
    5. '(c' → logprob: -8.409255027770996
    6. '(x' → logprob: -10.659255027770996
    7. '(P' → logprob: -10.784255027770996
    8. '(T' → logprob: -11.159255027770996
    9. ' ' → logprob: -11.284255027770996
    10. 'c' → logprob: -11.534255027770996

Token 704: 'S' (ID: 50)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.9217833876609802
    2. 'c' → logprob: -1.671783447265625
    3. ' (' → logprob: -1.796783447265625
    4. '(c' → logprob: -2.171783447265625
    5. '(' → logprob: -2.671783447265625
    6. ' c' → logprob: -4.171783447265625
    7. '(sum' → logprob: -4.171783447265625
    8. 'sum' → logprob: -4.421783447265625
    9. '(s' → logprob: -4.546783447265625
    10. '(x' → logprob: -5.046783447265625

Token 705: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08923377096652985
    2. '+' → logprob: -2.464233875274658
    3. ' -' → logprob: -8.9642333984375
    4. ')' → logprob: -9.0892333984375
    5. '+)' → logprob: -11.4642333984375
    6. ' ' → logprob: -11.5892333984375
    7. '   ' → logprob: -11.7142333984375
    8. ')+' → logprob: -11.9642333984375
    9. '-' → logprob: -12.5892333984375
    10. '_' → logprob: -13.3392333984375

Token 706: ' sum' (ID: 4215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7354045510292053
    2. 'c' → logprob: -0.9854045510292053
    3. ' x' → logprob: -2.7354044914245605
    4. ' c' → logprob: -3.1104044914245605
    5. 'sum' → logprob: -3.4854044914245605
    6. ' sum' → logprob: -5.8604044914245605
    7. 'j' → logprob: -6.7354044914245605
    8. 's' → logprob: -6.9854044914245605
    9. 'co' → logprob: -7.3604044914245605
    10. ' ' → logprob: -7.8604044914245605

Token 707: '_j' (ID: 12021)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.6085382699966431
    2. '_des' → logprob: -1.608538269996643
    3. '_' → logprob: -1.858538269996643
    4. '_j' → logprob: -3.1085381507873535
    5. '_co' → logprob: -3.4835381507873535
    6. '_used' → logprob: -4.4835381507873535
    7. '_selected' → logprob: -5.2335381507873535
    8. 'des' → logprob: -6.2335381507873535
    9. '_de' → logprob: -6.8585381507873535
    10. '_)' → logprob: -7.6085381507873535

Token 708: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.30466052889823914
    2. '_co' → logprob: -1.5546605587005615
    3. '_used' → logprob: -3.1796605587005615
    4. '_' → logprob: -5.179660320281982
    5. '_of' → logprob: -6.179660320281982
    6. 'oint' → logprob: -7.179660320281982
    7. '_c' → logprob: -8.42966079711914
    8. '_des' → logprob: -8.42966079711914
    9. 'used' → logprob: -9.17966079711914
    10. '_o' → logprob: -9.55466079711914

Token 709: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.06644967943429947
    2. '_util' → logprob: -3.1914496421813965
    3. '_co' → logprob: -4.5664496421813965
    4. ')' → logprob: -4.8164496421813965
    5. '_' → logprob: -6.3164496421813965
    6. '_)' → logprob: -7.0664496421813965
    7. 'used' → logprob: -7.1914496421813965
    8. '_selected' → logprob: -7.4414496421813965
    9. '_use' → logprob: -8.941450119018555
    10. ')_' → logprob: -9.441450119018555

Token 710: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5436442494392395
    2. '_used' → logprob: -0.9186442494392395
    3. '_co' → logprob: -5.168644428253174
    4. '_util' → logprob: -5.418644428253174
    5. '_)' → logprob: -5.543644428253174
    6. '_selected' → logprob: -6.418644428253174
    7. 'used' → logprob: -6.543644428253174
    8. '_' → logprob: -6.793644428253174
    9. '   ' → logprob: -7.918644428253174
    10. ')**' → logprob: -8.293643951416016

Token 711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03384336829185486
    2. ':' → logprob: -4.908843517303467
    3. 'def' → logprob: -4.908843517303467
    4. ')' → logprob: -6.033843517303467
    5. '[' → logprob: -6.033843517303467
    6. '    
' → logprob: -6.158843517303467
    7. '_' → logprob: -6.158843517303467
    8. ']' → logprob: -6.658843517303467
    9. '\' → logprob: -6.783843517303467
    10. '.' → logprob: -7.033843517303467

Token 712: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32202810049057007
    2. ':' → logprob: -1.6970281600952148
    3. '[n' → logprob: -3.697028160095215
    4. '(n' → logprob: -4.197028160095215
    5. ')' → logprob: -4.697028160095215
    6. '[' → logprob: -4.822028160095215
    7. 'def' → logprob: -5.197028160095215
    8. ':
' → logprob: -5.572028160095215
    9. '
' → logprob: -5.697028160095215
    10. 'n' → logprob: -5.697028160095215

Token 713: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01138378493487835
    2. 'n' → logprob: -5.386384010314941
    3. 'def' → logprob: -5.386384010314941
    4. '    
' → logprob: -7.386384010314941
    5. 'if' → logprob: -7.511384010314941
    6. 'import' → logprob: -8.011384010314941
    7. '<|end|>' → logprob: -8.886384010314941
    8. '#' → logprob: -9.011384010314941
    9. '(n' → logprob: -9.136384010314941
    10. '<|end|>' → logprob: -9.636384010314941

Token 714: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10901467502117157
    2. 'n' → logprob: -2.6090147495269775
    3. 'def' → logprob: -3.7340147495269775
    4. '    
' → logprob: -5.859014511108398
    5. 'if' → logprob: -7.234014511108398
    6. 'import' → logprob: -7.734014511108398
    7. '#' (adapté à ' #') → logprob: -7.734014511108398
    8. 'pass' → logprob: -8.109014511108398
    9. '(n' → logprob: -8.609014511108398
    10. ' n' → logprob: -9.234014511108398

Token 715: ' où' (ID: 15113)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1905355006456375
    2. 'def' → logprob: -2.065535545349121
    3. '   ' → logprob: -3.190535545349121
    4. '#' → logprob: -5.315535545349121
    5. ' n' → logprob: -9.065535545349121
    6. 'from' → logprob: -9.065535545349121
    7. 'if' → logprob: -9.815535545349121
    8. 'import' → logprob: -9.815535545349121
    9. 'pass' → logprob: -9.940535545349121
    10. 'j' → logprob: -10.065535545349121

Token 716: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15999151766300201
    2. ' c' → logprob: -2.534991502761841
    3. '#' → logprob: -3.159991502761841
    4. 'n' → logprob: -5.03499174118042
    5. '   ' → logprob: -5.03499174118042
    6. 'x' → logprob: -5.65999174118042
    7. ' n' → logprob: -5.90999174118042
    8. 'S' → logprob: -6.53499174118042
    9. ' #' → logprob: -7.03499174118042
    10. 'i' → logprob: -7.28499174118042

Token 717: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01672649011015892
    2. '=' → logprob: -5.141726493835449
    3. '_' → logprob: -5.891726493835449
    4. '_co' → logprob: -5.891726493835449
    5. ')' → logprob: -6.016726493835449
    6. ' <=' → logprob: -7.016726493835449
    7. '   ' → logprob: -8.01672649383545
    8. ' _' → logprob: -8.64172649383545
    9. ' est' → logprob: -8.76672649383545
    10. ' ' → logprob: -9.01672649383545

Token 718: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.227202907204628
    2. 'le' → logprob: -1.7272028923034668
    3. ' la' → logprob: -4.727202892303467
    4. 'the' → logprob: -5.102202892303467
    5. ' the' → logprob: -6.602202892303467
    6. ' l' → logprob: -6.602202892303467
    7. 'number' → logprob: -6.727202892303467
    8. '#' → logprob: -6.852202892303467
    9. 'la' → logprob: -6.977202892303467
    10. ' number' → logprob: -7.352202892303467

Token 719: ' nombre' (ID: 9733)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.9492515325546265
    2. ' nombre' → logprob: -1.9492515325546265
    3. 'number' → logprob: -1.9492515325546265
    4. 'c' → logprob: -2.199251651763916
    5. 'nombre' → logprob: -2.949251651763916
    6. 'count' → logprob: -3.074251651763916
    7. ' used' → logprob: -3.449251651763916
    8. '0' → logprob: -3.824251651763916
    9. ' c' → logprob: -4.199251651763916
    10. 'used' → logprob: -4.824251651763916

Token 720: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08893424272537231
    2. '_de' → logprob: -3.4639341831207275
    3. '_des' → logprob: -3.9639341831207275
    4. '_of' → logprob: -4.213934421539307
    5. ' de' → logprob: -5.088934421539307
    6. '   ' → logprob: -5.463934421539307
    7. '_d' → logprob: -5.963934421539307
    8. ')' → logprob: -6.463934421539307
    9. ' _' → logprob: -7.088934421539307
    10. 'd' → logprob: -7.588934421539307

Token 721: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6086563467979431
    2. ' joints' → logprob: -1.108656406402588
    3. ' used' → logprob: -3.608656406402588
    4. ' j' → logprob: -3.983656406402588
    5. 'used' → logprob: -4.358656406402588
    6. '_j' → logprob: -4.608656406402588
    7. ' utilisés' → logprob: -4.858656406402588
    8. ' ' → logprob: -4.983656406402588
    9. 'util' → logprob: -5.108656406402588
    10. '_used' → logprob: -5.483656406402588

Token 722: ' utilisés' (ID: 94258)
  Prédit: '_util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.7076384425163269
    2. '_used' → logprob: -0.7076384425163269
    3. '   ' → logprob: -4.707638263702393
    4. '_' → logprob: -5.707638263702393
    5. 'util' → logprob: -7.957638263702393
    6. '_use' → logprob: -8.20763874053955
    7. ' _' → logprob: -8.70763874053955
    8. 'used' → logprob: -8.83263874053955
    9. ' utilisés' → logprob: -8.83263874053955
    10. 'import' → logprob: -9.08263874053955

Token 723: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04291114956140518
    2. 'def' → logprob: -4.042911052703857
    3. ':' → logprob: -4.542911052703857
    4. ')' → logprob: -5.917911052703857
    5. '[' → logprob: -6.042911052703857
    6. ']' → logprob: -6.667911052703857
    7. ',' → logprob: -6.917911052703857
    8. '_' → logprob: -7.042911052703857
    9. '.' → logprob: -7.042911052703857
    10. '    ' → logprob: -7.292911052703857

Token 724: ' sum' (ID: 4215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05936647951602936
    2. '.' → logprob: -3.809366464614868
    3. ':' → logprob: -4.809366703033447
    4. ',' → logprob: -5.434366703033447
    5. '"' → logprob: -5.809366703033447
    6. '    ' → logprob: -5.809366703033447
    7. ' ' → logprob: -6.059366703033447
    8. '    
' → logprob: -6.184366703033447
    9. ' =' → logprob: -6.434366703033447
    10. ')' → logprob: -6.809366703033447

Token 725: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.22617553174495697
    2. '_' → logprob: -1.6011755466461182
    3. '_of' → logprob: -9.726175308227539
    4. '(' → logprob: -9.851175308227539
    5. '(_' → logprob: -9.851175308227539
    6. '```' → logprob: -9.976175308227539
    7. ')' → logprob: -10.101175308227539
    8. '_used' → logprob: -10.101175308227539
    9. '_c' → logprob: -10.226175308227539
    10. '\' → logprob: -10.351175308227539

Token 726: 'oints' (ID: 28687)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2336183786392212
    2. 'oints' → logprob: -2.6086182594299316
    3. '_j' → logprob: -2.7336182594299316
    4. '_used' → logprob: -3.2336182594299316
    5. ' _' → logprob: -5.483618259429932
    6. '_i' → logprob: -5.858618259429932
    7. '```' → logprob: -5.858618259429932
    8. ')_' → logprob: -6.108618259429932
    9. '_of' → logprob: -6.233618259429932
    10. '_o' → logprob: -6.858618259429932

Token 727: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.1673882156610489
    2. '_' → logprob: -2.2923882007598877
    3. '_util' → logprob: -3.0423882007598877
    4. '   ' → logprob: -6.292388439178467
    5. ' _' → logprob: -7.667388439178467
    6. '[' → logprob: -7.792388439178467
    7. '_use' → logprob: -8.292387962341309
    8. '```' → logprob: -8.792387962341309
    9. 'used' → logprob: -8.917387962341309
    10. '_co' → logprob: -9.042387962341309

Token 728: ' la' (ID: 557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7991302013397217
    2. ')' → logprob: -0.9241302013397217
    3. ']' → logprob: -3.0491302013397217
    4. '   ' → logprob: -3.2991302013397217
    5. '_used' → logprob: -3.2991302013397217
    6. 's' → logprob: -5.299130439758301
    7. ' +=' → logprob: -5.299130439758301
    8. '=' → logprob: -5.424130439758301
    9. '[' → logprob: -6.049130439758301
    10. '[i' → logprob: -6.174130439758301

Token 729: ' somme' (ID: 64484)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8092776536941528
    2. '[j' → logprob: -2.1842775344848633
    3. ' =' → logprob: -2.4342775344848633
    4. '_used' → logprob: -2.5592775344848633
    5. '_' → logprob: -2.6842775344848633
    6. '[i' → logprob: -2.8092775344848633
    7. ' +=' → logprob: -2.9342775344848633
    8. ')' → logprob: -3.1842775344848633
    9. '.append' → logprob: -3.3092775344848633
    10. ' _' → logprob: -3.5592775344848633

Token 730: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29631921648979187
    2. '_j' → logprob: -1.5463192462921143
    3. '_des' → logprob: -4.046319007873535
    4. '   ' → logprob: -4.796319007873535
    5. '_of' → logprob: -5.671319007873535
    6. '_used' → logprob: -5.796319007873535
    7. ')' → logprob: -6.046319007873535
    8. ' =' → logprob: -6.796319007873535
    9. '_de' → logprob: -6.796319007873535
    10. 'des' → logprob: -7.296319007873535

Token 731: ' longue' (ID: 59564)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7877210378646851
    2. '_j' → logprob: -0.7877210378646851
    3. '_' → logprob: -2.6627211570739746
    4. 'joint' → logprob: -5.162721157073975
    5. '_used' → logprob: -5.662721157073975
    6. ' _' → logprob: -6.162721157073975
    7. '_joint' → logprob: -6.162721157073975
    8. ' joints' → logprob: -6.287721157073975
    9. 'used' → logprob: -6.662721157073975
    10. ' ' → logprob: -7.787721157073975

Token 732: 'urs' (ID: 1628)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.9318309426307678
    2. '_' → logprob: -1.056830883026123
    3. 's' → logprob: -2.181830883026123
    4. 'ments' → logprob: -3.181830883026123
    5. 'urs' → logprob: -3.556830883026123
    6. 'nts' → logprob: -3.931830883026123
    7. 't' → logprob: -5.056830883026123
    8. '_s' → logprob: -5.181830883026123
    9. '_d' → logprob: -5.181830883026123
    10. 'g' → logprob: -5.556830883026123

Token 733: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03840750455856323
    2. '_used' → logprob: -4.288407325744629
    3. ' _' → logprob: -5.413407325744629
    4. '[' → logprob: -5.413407325744629
    5. '_des' → logprob: -5.663407325744629
    6. '_j' → logprob: -6.038407325744629
    7. ')' → logprob: -6.288407325744629
    8. '   ' → logprob: -6.538407325744629
    9. '_of' → logprob: -6.788407325744629
    10. '_util' → logprob: -7.038407325744629

Token 734: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026942690834403038
    2. 'def' → logprob: -4.026942729949951
    3. 'n' → logprob: -5.776942729949951
    4. ':' → logprob: -7.151942729949951
    5. '(n' → logprob: -7.401942729949951
    6. '    
' → logprob: -7.526942729949951
    7. '_' → logprob: -7.776942729949951
    8. 'j' → logprob: -8.026942253112793
    9. '\' → logprob: -8.026942253112793
    10. ')' → logprob: -8.276942253112793

Token 735: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013752652332186699
    2. 'def' → logprob: -5.388752460479736
    3. 'n' → logprob: -5.888752460479736
    4. '    
' → logprob: -6.888752460479736
    5. 'import' → logprob: -7.013752460479736
    6. 'j' → logprob: -7.138752460479736
    7. '#' → logprob: -7.388752460479736
    8. '(n' → logprob: -7.763752460479736
    9. ')' → logprob: -8.138752937316895
    10. '\' → logprob: -8.263752937316895

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007891232147812843
    2. 'def' → logprob: -5.3828911781311035
    3. 'n' → logprob: -6.6328911781311035
    4. '    
' → logprob: -7.1328911781311035
    5. '(n' → logprob: -8.132891654968262
    6. '<|end|>' → logprob: -8.757891654968262
    7. '<|end|>' → logprob: -9.257891654968262
    8. 'import' → logprob: -9.257891654968262
    9. '#' → logprob: -9.632891654968262
    10. 'if' → logprob: -9.632891654968262

Token 737: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5085557103157043
    2. 'n' → logprob: -1.0085556507110596
    3. 'def' → logprob: -3.5085556507110596
    4. 'j' → logprob: -7.008555889129639
    5. 'p' → logprob: -7.133555889129639
    6. ' n' → logprob: -7.758555889129639
    7. '    
' → logprob: -7.758555889129639
    8. 'if' → logprob: -7.883555889129639
    9. '#' (adapté à ' #') → logprob: -8.25855541229248
    10. 'pass' → logprob: -8.75855541229248

Token 738: ' Comme' (ID: 53252)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6949989199638367
    2. '   ' → logprob: -0.9449989199638367
    3. 'def' → logprob: -2.1949989795684814
    4. 'if' → logprob: -8.194998741149902
    5. '    
' → logprob: -8.944998741149902
    6. ' n' → logprob: -9.069998741149902
    7. 'import' → logprob: -9.569998741149902
    8. '#' → logprob: -9.944998741149902
    9. '(n' → logprob: -10.069998741149902
    10. '.' → logprob: -10.819998741149902

Token 739: ' il' (ID: 1793)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.24778413772583008
    2. 'n' → logprob: -2.37278413772583
    3. ' j' → logprob: -2.87278413772583
    4. 'j' → logprob: -4.24778413772583
    5. ' les' → logprob: -4.24778413772583
    6. ' la' → logprob: -4.99778413772583
    7. ' sum' → logprob: -5.12278413772583
    8. ' len' → logprob: -5.37278413772583
    9. ' ' → logprob: -5.37278413772583
    10. ' ' → logprob: -5.99778413772583

Token 740: ' faut' (ID: 17821)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3187616467475891
    2. 'est' → logprob: -2.4437615871429443
    3. 'n' → logprob: -3.0687615871429443
    4. ' est' → logprob: -3.3187615871429443
    5. '#' → logprob: -3.4437615871429443
    6. ' =' → logprob: -4.193761825561523
    7. ' faut' → logprob: -4.693761825561523
    8. 's' → logprob: -4.818761825561523
    9. ' #' → logprob: -5.068761825561523
    10. '   ' → logprob: -5.068761825561523

Token 741: ' choisir' (ID: 47004)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5210148692131042
    2. ' choisir' → logprob: -1.521014928817749
    3. 'cho' → logprob: -2.271014928817749
    4. ' tr' → logprob: -4.02101469039917
    5. '#' → logprob: -4.52101469039917
    6. 'max' → logprob: -4.64601469039917
    7. 'tri' → logprob: -5.14601469039917
    8. 'prendre' → logprob: -5.64601469039917
    9. '   ' → logprob: -5.77101469039917
    10. 'contin' → logprob: -6.14601469039917

Token 742: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5857591032981873
    2. 'les' → logprob: -1.585759162902832
    3. ' les' → logprob: -2.835759162902832
    4. '#' → logprob: -4.210759162902832
    5. 'une' → logprob: -4.210759162902832
    6. 'un' → logprob: -4.335759162902832
    7. 'd' → logprob: -4.460759162902832
    8. ' ' → logprob: -4.460759162902832
    9. 'pas' → logprob: -4.460759162902832
    10. 'au' → logprob: -4.835759162902832

Token 743: ' joints' (ID: 47223)
  Prédit: ' joints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joints' → logprob: -0.9820210933685303
    2. 'j' → logprob: -1.2320210933685303
    3. ' j' → logprob: -1.4820210933685303
    4. ' joint' → logprob: -4.232021331787109
    5. 'joint' → logprob: -4.232021331787109
    6. '_j' → logprob: -4.607021331787109
    7. 'i' → logprob: -5.482021331787109
    8. '#' → logprob: -5.607021331787109
    9. ' segments' → logprob: -5.732021331787109
    10. 's' → logprob: -5.732021331787109

Token 744: ' cont' (ID: 836)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8869460821151733
    2. '   ' → logprob: -1.6369460821151733
    3. '[' → logprob: -2.011946201324463
    4. '#' → logprob: -3.011946201324463
    5. ',' → logprob: -3.511946201324463
    6. '_used' → logprob: -3.511946201324463
    7. '_util' → logprob: -3.636946201324463
    8. ' à' → logprob: -3.761946201324463
    9. 'à' → logprob: -4.261946201324463
    10. 'util' → logprob: -4.511946201324463

Token 745: 'igus' (ID: 79914)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05492798984050751
    2. 'inu' → logprob: -3.4299280643463135
    3. 'iguous' → logprob: -4.929927825927734
    4. 'inue' → logprob: -5.054927825927734
    5. 'igu' → logprob: -5.429927825927734
    6. 'u' → logprob: -6.929927825927734
    7. 'igus' → logprob: -7.679927825927734
    8. 'inus' → logprob: -8.179927825927734
    9. 'i' → logprob: -8.429927825927734
    10. '_' → logprob: -8.929927825927734

Token 746: '?' (ID: 30)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6625308990478516
    2. ',' → logprob: -1.7875308990478516
    3. '[i' → logprob: -1.7875308990478516
    4. 'def' → logprob: -2.1625308990478516
    5. '_' → logprob: -2.7875308990478516
    6. ')' → logprob: -2.9125308990478516
    7. '[' → logprob: -3.0375308990478516
    8. ']' → logprob: -3.9125308990478516
    9. 's' → logprob: -3.9125308990478516
    10. '#' → logprob: -4.037530899047852

Token 747: ' Non' (ID: 13763)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1972167491912842
    2. '<|end|>' → logprob: -1.6972167491912842
    3. ':' → logprob: -2.572216749191284
    4. ',' → logprob: -2.697216749191284
    5. '_' → logprob: -2.697216749191284
    6. ')' → logprob: -2.697216749191284
    7. '[n' → logprob: -3.197216749191284
    8. '?' → logprob: -3.447216749191284
    9. '<|end|>' → logprob: -3.947216749191284
    10. 's' → logprob: -4.072216987609863

Token 748: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6418128609657288
    2. '<|end|>' → logprob: -1.141812801361084
    3. ',' → logprob: -2.766812801361084
    4. '<|end|>' → logprob: -3.516812801361084
    5. '[' → logprob: -4.391812801361084
    6. '.' → logprob: -4.391812801361084
    7. '#' → logprob: -4.516812801361084
    8. '_' → logprob: -4.766812801361084
    9. ' :' → logprob: -5.641812801361084
    10. 'def' → logprob: -6.641812801361084

Token 749: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9942599534988403
    2. '<|end|>' → logprob: -1.6192599534988403
    3. ' ' → logprob: -2.994259834289551
    4. '#' → logprob: -3.119259834289551
    5. ')' → logprob: -3.494259834289551
    6. ' not' → logprob: -3.494259834289551
    7. ' n' → logprob: -3.619259834289551
    8. ' no' → logprob: -3.744259834289551
    9. ':' → logprob: -3.744259834289551
    10. ',' → logprob: -3.869259834289551

Token 750: ' peut' (ID: 9216)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9110888242721558
    2. ' ne' → logprob: -1.2860888242721558
    3. ' peux' → logprob: -1.7860888242721558
    4. ' peut' → logprob: -2.1610889434814453
    5. 'n' → logprob: -3.7860889434814453
    6. ' doit' → logprob: -5.536088943481445
    7. ' can' → logprob: -5.911088943481445
    8. 'ne' → logprob: -6.661088943481445
    9. 'do' → logprob: -7.161088943481445
    10. ' do' → logprob: -7.161088943481445

Token 751: ' choisir' (ID: 47004)
  Prédit: ' choisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.08910217881202698
    2. ' utiliser' → logprob: -2.714102268218994
    3. ' les' → logprob: -4.589102268218994
    4. ' continuer' → logprob: -5.964102268218994
    5. ' chois' → logprob: -6.214102268218994
    6. ' pas' → logprob: -7.589102268218994
    7. ' ' → logprob: -7.714102268218994
    8. ' cho' → logprob: -8.089101791381836
    9. ' aussi' → logprob: -8.214101791381836
    10. ' sélectionner' → logprob: -8.214101791381836

Token 752: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9876028895378113
    2. ' ou' → logprob: -1.737602949142456
    3. ' ' → logprob: -2.487602949142456
    4. 'n' → logprob: -2.487602949142456
    5. ' or' → logprob: -2.612602949142456
    6. '_' → logprob: -2.987602949142456
    7. ' de' → logprob: -3.737602949142456
    8. ' des' → logprob: -4.237602710723877
    9. 'any' → logprob: -4.487602710723877
    10. '```' → logprob: -4.487602710723877

Token 753: ''importe' (ID: 103032)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.4752954840660095
    2. 'ot' → logprob: -1.4752955436706543
    3. 'o' → logprob: -3.2252955436706543
    4. 'on' → logprob: -3.3502955436706543
    5. ''importe' → logprob: -3.6002955436706543
    6. ''' → logprob: -4.850295543670654
    7. '[' → logprob: -4.850295543670654
    8. '_' → logprob: -6.100295543670654
    9. ''on' → logprob: -6.225295543670654
    10. '#' → logprob: -6.225295543670654

Token 754: ' quels' (ID: 109092)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.47659334540367126
    2. 'pas' → logprob: -1.9765933752059937
    3. '-' → logprob: -2.601593255996704
    4. ' des' → logprob: -2.851593255996704
    5. '   ' → logprob: -3.476593255996704
    6. '```' → logprob: -3.726593255996704
    7. ' de' → logprob: -5.226593494415283
    8. '#' → logprob: -5.351593494415283
    9. 'une' → logprob: -5.476593494415283
    10. '`' → logprob: -5.601593494415283

Token 755: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5161142945289612
    2. ' _' → logprob: -1.5161142349243164
    3. '_j' → logprob: -2.0161142349243164
    4. ' joints' → logprob: -4.016114234924316
    5. 'j' → logprob: -4.516114234924316
    6. '_joint' → logprob: -5.266114234924316
    7. '<|end|>' → logprob: -6.141114234924316
    8. 'tokens' → logprob: -6.266114234924316
    9. ' ' → logprob: -6.266114234924316
    10. ' tokens' → logprob: -6.516114234924316

Token 756: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3521946370601654
    2. '[' → logprob: -2.6021945476531982
    3. '[n' → logprob: -2.9771945476531982
    4. '   ' → logprob: -3.4771945476531982
    5. ')' → logprob: -3.7271945476531982
    6. 'def' → logprob: -4.102194786071777
    7. '
' → logprob: -4.352194786071777
    8. ':
' → logprob: -4.602194786071777
    9. '```' → logprob: -4.602194786071777
    10. '[
' → logprob: -4.727194786071777

Token 757: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5347644090652466
    2. ''' → logprob: -1.6597644090652466
    3. ')' → logprob: -1.6597644090652466
    4. '.' → logprob: -2.284764289855957
    5. '#' → logprob: -2.534764289855957
    6. '   ' → logprob: -2.534764289855957
    7. ' ' → logprob: -3.659764289855957
    8. ',' → logprob: -3.784764289855957
    9. '[' → logprob: -3.909764289855957
    10. '_' → logprob: -4.534764289855957

Token 758: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8997624516487122
    2. '   ' → logprob: -1.5247623920440674
    3. ')' → logprob: -1.6497623920440674
    4. '.' → logprob: -3.0247623920440674
    5. ' but' → logprob: -3.2747623920440674
    6. ':' → logprob: -4.2747626304626465
    7. '<|end|>' → logprob: -4.3997626304626465
    8. ''' → logprob: -4.3997626304626465
    9. ' ' → logprob: -4.7747626304626465
    10. ' 
' → logprob: -5.0247626304626465

Token 759: ' car' (ID: 1669)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02408944070339203
    2. ' but' → logprob: -4.774089336395264
    3. ' #' → logprob: -4.899089336395264
    4. 'but' → logprob: -5.399089336395264
    5. '<|end|>' → logprob: -7.149089336395264
    6. ' mais' → logprob: -7.399089336395264
    7. ' ' → logprob: -8.399089813232422
    8. '...' → logprob: -8.649089813232422
    9. '
' → logprob: -8.649089813232422
    10. '<|end|>' → logprob: -8.649089813232422

Token 760: ' on' (ID: 402)
  Prédit: ' ils'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ils' → logprob: -0.6366397738456726
    2. ' on' → logprob: -1.6366398334503174
    3. '#' → logprob: -2.7616398334503174
    4. ' les' → logprob: -2.8866398334503174
    5. ' la' → logprob: -3.0116398334503174
    6. ' #' → logprob: -4.511639595031738
    7. ' l' → logprob: -4.636639595031738
    8. ' chaque' → logprob: -4.761639595031738
    9. 'les' → logprob: -4.886639595031738
    10. ' le' → logprob: -5.011639595031738

Token 761: ' peut' (ID: 9216)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peux' → logprob: -1.0710707902908325
    2. ' peut' → logprob: -1.1960707902908325
    3. ' n' → logprob: -1.6960707902908325
    4. ' can' → logprob: -2.696070671081543
    5. '#' → logprob: -3.571070671081543
    6. ' ne' → logprob: -4.321070671081543
    7. '[' → logprob: -4.446070671081543
    8. 'n' → logprob: -4.821070671081543
    9. '.' → logprob: -4.821070671081543
    10. 'pe' → logprob: -5.196070671081543

Token 762: ' rel' (ID: 1536)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.023942669853568077
    2. ' utiliser' → logprob: -5.273942470550537
    3. ' couper' → logprob: -5.398942470550537
    4. ' chois' → logprob: -5.523942470550537
    5. ' continuer' → logprob: -6.273942470550537
    6. ' ' → logprob: -6.523942470550537
    7. ' choose' → logprob: -6.898942470550537
    8. ' cut' → logprob: -7.273942470550537
    9. ' décou' → logprob: -7.648942470550537
    10. ' les' → logprob: -7.648942470550537

Token 763: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.003207776928320527
    2. '#' → logprob: -7.128207683563232
    3. 'ayer' → logprob: -7.878207683563232
    4. 'a' → logprob: -8.50320816040039
    5. 'u' → logprob: -8.62820816040039
    6. 'def' → logprob: -8.75320816040039
    7. 'e' → logprob: -8.75320816040039
    8. 'uire' → logprob: -8.87820816040039
    9. 'ire' → logprob: -9.00320816040039
    10. '```' → logprob: -9.25320816040039

Token 764: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09771034121513367
    2. ' les' → logprob: -3.847710371017456
    3. ' ou' → logprob: -3.972710371017456
    4. ' p' → logprob: -4.472710132598877
    5. ' tous' → logprob: -4.472710132598877
    6. 'n' → logprob: -4.597710132598877
    7. ' des' → logprob: -5.722710132598877
    8. 'les' → logprob: -5.847710132598877
    9. 't' → logprob: -6.097710132598877
    10. 'ou' → logprob: -6.222710132598877

Token 765: ''importe' (ID: 103032)
  Prédit: ''importe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''importe' → logprob: -0.1380087286233902
    2. ''' → logprob: -2.2630088329315186
    3. '’importe' → logprob: -4.3880085945129395
    4. ' '' → logprob: -6.6380085945129395
    5. ' ' → logprob: -6.6380085945129395
    6. ''import' → logprob: -6.6380085945129395
    7. ' ' → logprob: -6.8880085945129395
    8. 'pas' → logprob: -7.2630085945129395
    9. ' pas' → logprob: -7.3880085945129395
    10. ''util' → logprob: -7.5130085945129395

Token 766: ' quelle' (ID: 47442)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1280392408370972
    2. 'pas' → logprob: -1.2530392408370972
    3. ' pas' → logprob: -1.8780392408370972
    4. 'import' → logprob: -3.0030393600463867
    5. '   ' → logprob: -3.3780393600463867
    6. ''importe' → logprob: -3.6280393600463867
    7. ' d' → logprob: -3.7530393600463867
    8. ' de' → logprob: -4.003039360046387
    9. ' des' → logprob: -4.253039360046387
    10. '`' → logprob: -4.378039360046387

Token 767: ' paire' (ID: 148856)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3828372061252594
    2. ' ' → logprob: -1.757837176322937
    3. ' _' → logprob: -2.3828372955322266
    4. 'joint' → logprob: -3.8828372955322266
    5. ' joint' → logprob: -4.132837295532227
    6. '_joint' → logprob: -5.007837295532227
    7. '_j' → logprob: -5.757837295532227
    8. ' j' → logprob: -6.382837295532227
    9. 'j' → logprob: -7.132837295532227
    10. ' espace' → logprob: -7.257837295532227

Token 768: ' adj' (ID: 20251)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0734020471572876
    2. '_' → logprob: -1.4484020471572876
    3. ')' → logprob: -2.198401927947998
    4. 's' → logprob: -2.698401927947998
    5. '[
' → logprob: -2.698401927947998
    6. '[i' → logprob: -3.073401927947998
    7. ']' → logprob: -3.323401927947998
    8. '[n' → logprob: -3.823401927947998
    9. '```' → logprob: -4.323401927947998
    10. '[]' → logprob: -4.823401927947998

Token 769: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.6225877404212952
    2. 'acent' → logprob: -1.2475876808166504
    3. 'ec' → logprob: -3.3725876808166504
    4. '```' → logprob: -3.4975876808166504
    5. '[i' → logprob: -3.8725876808166504
    6. '[' → logprob: -3.8725876808166504
    7. 'a' → logprob: -4.99758768081665
    8. '   ' → logprob: -5.37258768081665
    9. 'éc' → logprob: -5.49758768081665
    10. 'oint' → logprob: -5.49758768081665

Token 770: 'ente' (ID: 1576)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.31284627318382263
    2. 'ents' → logprob: -1.437846302986145
    3. 'e' → logprob: -4.1878461837768555
    4. 'entes' → logprob: -4.5628461837768555
    5. 'es' → logprob: -5.8128461837768555
    6. 'ente' → logprob: -6.8128461837768555
    7. '#' → logprob: -8.437846183776855
    8. '```' → logprob: -8.562846183776855
    9. 'a' → logprob: -8.687846183776855
    10. 'nt' → logprob: -9.062846183776855

Token 771: ' rés' (ID: 13282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5194692611694336
    2. 'def' → logprob: -1.6444692611694336
    3. '[n' → logprob: -2.1444692611694336
    4. ':' → logprob: -2.5194692611694336
    5. 's' → logprob: -2.6444692611694336
    6. '[' → logprob: -2.6444692611694336
    7. '[i' → logprob: -2.7694692611694336
    8. '   ' → logprob: -3.2694692611694336
    9. '```' → logprob: -3.5194692611694336
    10. ']' → logprob: -3.8944692611694336

Token 772: 'pect' (ID: 1248)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8581377863883972
    2. 'u' → logprob: -1.108137845993042
    3. '```' → logprob: -3.233137845993042
    4. 't' → logprob: -3.733137845993042
    5. 'ue' → logprob: -3.858137845993042
    6. 'au' → logprob: -3.983137845993042
    7. '[' → logprob: -4.108137607574463
    8. ']' → logprob: -4.358137607574463
    9. 'ult' → logprob: -4.358137607574463
    10. ')' → logprob: -4.608137607574463

Token 773: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.8606540560722351
    2. 'ueux' → logprob: -1.8606541156768799
    3. 'ée' → logprob: -2.36065411567688
    4. 'é' → logprob: -2.48565411567688
    5. 'u' → logprob: -2.73565411567688
    6. 'és' → logprob: -2.86065411567688
    7. 'ue' → logprob: -3.73565411567688
    8. 'ueuse' → logprob: -4.235653877258301
    9. 'ées' → logprob: -4.360653877258301
    10. '   ' → logprob: -4.610653877258301

Token 774: ' cette' (ID: 7696)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5194200277328491
    2. ' la' → logprob: -1.2694200277328491
    3. ' les' → logprob: -4.269420146942139
    4. '_' → logprob: -4.394420146942139
    5. ' le' → logprob: -4.519420146942139
    6. '```' → logprob: -4.769420146942139
    7. ' ' → logprob: -4.894420146942139
    8. 'l' → logprob: -5.019420146942139
    9. ' pas' → logprob: -5.019420146942139
    10. '_le' → logprob: -5.269420146942139

Token 775: ' adjacent' (ID: 39069)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3565721809864044
    2. ' _' → logprob: -1.606572151184082
    3. ' ' → logprob: -2.856572151184082
    4. ' condition' → logprob: -3.981572151184082
    5. ''' → logprob: -5.231572151184082
    6. ' space' → logprob: -6.231572151184082
    7. ' espace' → logprob: -6.481572151184082
    8. '  ' → logprob: -7.106572151184082
    9. ' '' → logprob: -7.294072151184082
    10. 'condition' → logprob: -7.481572151184082

Token 776: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7310291528701782
    2. ')' → logprob: -1.2310291528701782
    3. 'e' → logprob: -2.6060290336608887
    4. 's' → logprob: -2.7310290336608887
    5. ']' → logprob: -2.8560290336608887
    6. 'es' → logprob: -5.356029033660889
    7. 'é' → logprob: -5.481029033660889
    8. ' _' → logprob: -5.981029033660889
    9. ' )' → logprob: -5.981029033660889
    10. '[' → logprob: -6.106029033660889

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24094077944755554
    2. ')' → logprob: -2.865940809249878
    3. ':' → logprob: -3.365940809249878
    4. 'def' → logprob: -3.615940809249878
    5. ')
' → logprob: -4.365940570831299
    6. '):' → logprob: -4.490940570831299
    7. ':
' → logprob: -4.740940570831299
    8. '[' → logprob: -4.865940570831299
    9. '```' → logprob: -4.865940570831299
    10. '
' → logprob: -4.990940570831299

Token 778: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3407814502716064
    2. '   ' → logprob: -1.4657814502716064
    3. 'def' → logprob: -2.0907814502716064
    4. '[' → logprob: -2.3407814502716064
    5. '\' → logprob: -2.5907814502716064
    6. 'n' → logprob: -3.4657814502716064
    7. 'j' → logprob: -3.5907814502716064
    8. '    
' → logprob: -3.9657814502716064
    9. '[n' → logprob: -4.215781211853027
    10. '\n' → logprob: -4.465781211853027

Token 779: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12676754593849182
    2. 'def' → logprob: -2.251767635345459
    3. '\' → logprob: -5.626767635345459
    4. 'n' → logprob: -6.376767635345459
    5. '\n' → logprob: -6.376767635345459
    6. '```' → logprob: -6.501767635345459
    7. ':' → logprob: -6.751767635345459
    8. '
' → logprob: -7.001767635345459
    9. '    
' → logprob: -7.251767635345459
    10. 'if' → logprob: -7.501767635345459

Token 780: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034924209117889404
    2. 'n' → logprob: -4.409924030303955
    3. 'def' → logprob: -5.034924030303955
    4. 'p' → logprob: -5.534924030303955
    5. '    
' → logprob: -5.534924030303955
    6. 'j' → logprob: -5.784924030303955
    7. '\' → logprob: -7.034924030303955
    8. '#' (adapté à ' #') → logprob: -7.409924030303955
    9. ')' → logprob: -7.659924030303955
    10. '\n' → logprob: -8.034924507141113

Token 781: ' ATT' (ID: 66852)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26282134652137756
    2. 'n' → logprob: -1.5128213167190552
    3. '   ' → logprob: -4.762821197509766
    4. 'if' → logprob: -6.887821197509766
    5. 'import' → logprob: -7.387821197509766
    6. '#' → logprob: -8.387821197509766
    7. 'from' → logprob: -8.512821197509766
    8. ' n' → logprob: -9.387821197509766
    9. 'pass' → logprob: -9.762821197509766
    10. '```' → logprob: -11.012821197509766

Token 782: 'ENTION' (ID: 121786)
  Prédit: 'ENTION'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENTION' → logprob: -1.122579574584961
    2. 'r' → logprob: -1.747579574584961
    3. '_' → logprob: -1.872579574584961
    4. '#' → logprob: -1.997579574584961
    5. '=' → logprob: -2.497579574584961
    6. 'R' → logprob: -3.122579574584961
    7. 'def' → logprob: -3.872579574584961
    8. ' =' → logprob: -4.372579574584961
    9. 'n' → logprob: -4.997579574584961
    10. ':' → logprob: -5.122579574584961

Token 783: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11221393942832947
    2. '   ' → logprob: -2.7372138500213623
    3. ':' → logprob: -3.2372138500213623
    4. ' def' → logprob: -7.362214088439941
    5. ':def' → logprob: -8.112214088439941
    6. 'import' → logprob: -8.487214088439941
    7. ':
' → logprob: -8.737214088439941
    8. 'if' → logprob: -8.737214088439941
    9. ')' → logprob: -8.862214088439941
    10. 'n' → logprob: -9.737214088439941

Token 784: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6696087718009949
    2. '#' → logprob: -1.9196088314056396
    3. 'def' → logprob: -1.9196088314056396
    4. ' #' → logprob: -3.2946088314056396
    5. ' pass' → logprob: -3.6696088314056396
    6. '    ' → logprob: -3.9196088314056396
    7. '
' → logprob: -4.0446085929870605
    8. 'import' → logprob: -4.4196085929870605
    9. ' 
' → logprob: -4.4196085929870605
    10. ' def' → logprob: -4.5446085929870605

Token 785: ' contr' (ID: 6030)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24989458918571472
    2. '#' → logprob: -2.374894618988037
    3. ' n' → logprob: -3.249894618988037
    4. ' #' → logprob: -3.624894618988037
    5. 'r' → logprob: -5.124894618988037
    6. 'def' → logprob: -5.124894618988037
    7. ' ' → logprob: -5.124894618988037
    8. ' ' → logprob: -5.624894618988037
    9. '_' → logprob: -5.624894618988037
    10. 't' → logprob: -5.749894618988037

Token 786: 'ainte' (ID: 48434)
  Prédit: 'aint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aint' → logprob: -1.025193214416504
    2. '#' → logprob: -2.025193214416504
    3. 'int' → logprob: -2.025193214416504
    4. 'i' → logprob: -2.900193214416504
    5. 'inue' → logprob: -2.900193214416504
    6. 'a' → logprob: -2.900193214416504
    7. 'ainte' → logprob: -3.025193214416504
    8. 'e' → logprob: -3.150193214416504
    9. 'raint' → logprob: -3.275193214416504
    10. 'aints' → logprob: -4.650193214416504

Token 787: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7703384160995483
    2. '<|end|>' → logprob: -1.5203384160995483
    3. ' =' → logprob: -1.8953384160995483
    4. ':' → logprob: -3.270338535308838
    5. ' ' → logprob: -3.395338535308838
    6. '=' → logprob: -4.520338535308838
    7. '<|end|>' → logprob: -4.520338535308838
    8. ',' → logprob: -4.770338535308838
    9. '[' → logprob: -4.770338535308838
    10. ' n' → logprob: -5.145338535308838

Token 788: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3717760741710663
    2. ' n' → logprob: -3.1217761039733887
    3. 'n' → logprob: -3.2467761039733887
    4. ' strict' → logprob: -3.4967761039733887
    5. ':' → logprob: -3.9967761039733887
    6. ' de' → logprob: -3.9967761039733887
    7. 'd' → logprob: -4.121776103973389
    8. ' that' → logprob: -4.246776103973389
    9. 'strict' → logprob: -4.246776103973389
    10. ' d' → logprob: -4.371776103973389

Token 789: ' seuls' (ID: 115488)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7040861248970032
    2. ' n' → logprob: -1.8290860652923584
    3. ' chaque' → logprob: -1.9540860652923584
    4. ' la' → logprob: -2.4540860652923584
    5. 'les' → logprob: -3.4540860652923584
    6. 'n' → logprob: -3.5790860652923584
    7. '#' → logprob: -4.4540863037109375
    8. ' on' → logprob: -4.5790863037109375
    9. 'the' → logprob: -5.3290863037109375
    10. ' le' → logprob: -5.3290863037109375

Token 790: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.32317158579826355
    2. 'les' → logprob: -1.323171615600586
    3. ' ceux' → logprob: -5.448171615600586
    4. ' ' → logprob: -7.073171615600586
    5. ' des' → logprob: -7.323171615600586
    6. ' utilisés' → logprob: -7.573171615600586
    7. 'j' → logprob: -7.948171615600586
    8. 'import' → logprob: -8.323171615600586
    9. 'n' → logprob: -8.448171615600586
    10. 'c' → logprob: -8.698171615600586

Token 791: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.24941451847553253
    2. ' joints' → logprob: -1.8744145631790161
    3. 't' → logprob: -3.4994144439697266
    4. ' j' → logprob: -4.374414443969727
    5. '_j' → logprob: -5.624414443969727
    6. '\' → logprob: -5.999414443969727
    7. 'joins' → logprob: -6.374414443969727
    8. 'p' → logprob: -6.624414443969727
    9. 'joint' → logprob: -6.874414443969727
    10. ' espaces' → logprob: -6.874414443969727

Token 792: ' entre' (ID: 3853)
  Prédit: ' utilisés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisés' → logprob: -0.06802290678024292
    2. 'util' → logprob: -3.9430229663848877
    3. '_util' → logprob: -4.693022727966309
    4. '[i' → logprob: -4.818022727966309
    5. '_used' → logprob: -5.193022727966309
    6. ' rest' → logprob: -5.693022727966309
    7. ' utilis' → logprob: -5.693022727966309
    8. '[' → logprob: -5.818022727966309
    9. ' utilisées' → logprob: -6.318022727966309
    10. ' entre' → logprob: -6.443022727966309

Token 793: ' tuy' (ID: 45164)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4655502438545227
    2. ' p' → logprob: -1.715550184249878
    3. 'de' → logprob: -2.340550184249878
    4. ' deux' → logprob: -2.840550184249878
    5. 't' → logprob: -3.715550184249878
    6. 'les' → logprob: -5.340550422668457
    7. 'pipes' → logprob: -6.465550422668457
    8. ' ' → logprob: -6.840550422668457
    9. ' pipes' → logprob: -7.090550422668457
    10. ' les' → logprob: -7.090550422668457

Token 794: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.4434410035610199
    2. 'x' → logprob: -1.5684410333633423
    3. '[]' → logprob: -2.9434409141540527
    4. '[' → logprob: -3.0684409141540527
    5. '```' → logprob: -3.8184409141540527
    6. 'au' → logprob: -4.318440914154053
    7. '[x' → logprob: -4.943440914154053
    8. ']' → logprob: -5.818440914154053
    9. '[
' → logprob: -6.818440914154053
    10. '[i' → logprob: -7.318440914154053

Token 795: ' cons' (ID: 1473)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5193502306938171
    2. '[i' → logprob: -1.394350290298462
    3. '_' → logprob: -2.519350290298462
    4. '[
' → logprob: -4.394350051879883
    5. '[n' → logprob: -4.769350051879883
    6. ']' → logprob: -4.769350051879883
    7. ')' → logprob: -4.894350051879883
    8. 's' → logprob: -5.144350051879883
    9. ' =' → logprob: -5.144350051879883
    10. '   ' → logprob: -5.394350051879883

Token 796: 'écut' (ID: 96392)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.44413670897483826
    2. 'er' → logprob: -2.319136619567871
    3. 'id' → logprob: -2.444136619567871
    4. 'erv' → logprob: -2.444136619567871
    5. 'ent' → logprob: -4.069136619567871
    6. 'écut' → logprob: -4.194136619567871
    7. 'ert' → logprob: -4.819136619567871
    8. 'tr' → logprob: -5.444136619567871
    9. 'tit' → logprob: -5.444136619567871
    10. 'ér' → logprob: -5.694136619567871

Token 797: 'ifs' (ID: 14119)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21520929038524628
    2. 'ifs' → logprob: -3.2152092456817627
    3. ' ' → logprob: -3.3402092456817627
    4. 'ents' → logprob: -3.5902092456817627
    5. 'u' → logprob: -4.215209484100342
    6. 'if' → logprob: -4.340209484100342
    7. 'i' → logprob: -4.965209484100342
    8. ' utilisés' → logprob: -5.465209484100342
    9. 's' → logprob: -5.715209484100342
    10. 't' → logprob: -5.715209484100342

Token 798: ' peuvent' (ID: 21321)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.413219690322876
    2. ')' → logprob: -1.538219690322876
    3. ']' → logprob: -2.163219690322876
    4. 's' → logprob: -2.413219690322876
    5. '[i' → logprob: -2.538219690322876
    6. '[' → logprob: -2.913219690322876
    7. '_' → logprob: -3.288219690322876
    8. ':' → logprob: -3.538219690322876
    9. '#' → logprob: -3.913219690322876
    10. ',' → logprob: -4.038219451904297

Token 799: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.25605568289756775
    2. ' être' → logprob: -1.7560557126998901
    3. 'êtres' → logprob: -3.2560555934906006
    4. 'ê' → logprob: -5.25605583190918
    5. 'êt' → logprob: -5.50605583190918
    6. ''être' → logprob: -6.00605583190918
    7. ' be' → logprob: -7.88105583190918
    8. '’être' → logprob: -7.88105583190918
    9. ' etre' → logprob: -8.00605583190918
    10. ' ' → logprob: -8.13105583190918

Token 800: ' utilisés' (ID: 94258)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.16163957118988037
    2. 'used' → logprob: -3.16163969039917
    3. ' used' → logprob: -3.53663969039917
    4. ' utilisés' → logprob: -3.53663969039917
    5. ' utilisé' → logprob: -3.91163969039917
    6. ' chois' → logprob: -5.41163969039917
    7. ' utilisées' → logprob: -5.53663969039917
    8. 'cho' → logprob: -5.66163969039917
    9. ' utilisée' → logprob: -5.78663969039917
    10. ' choisi' → logprob: -6.16163969039917

Token 801: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2672255039215088
    2. ':' → logprob: -1.7672255039215088
    3. 'def' → logprob: -3.517225503921509
    4. ')' → logprob: -5.14222526550293
    5. '[' → logprob: -5.14222526550293
    6. ':
' → logprob: -6.01722526550293
    7. '\' → logprob: -6.14222526550293
    8. ',' → logprob: -6.26722526550293
    9. '(n' → logprob: -6.39222526550293
    10. '    
' → logprob: -6.51722526550293

Token 802: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05661699175834656
    2. ')' → logprob: -3.681617021560669
    3. '    ' → logprob: -4.68161678314209
    4. ' ' → logprob: -4.80661678314209
    5. '#' → logprob: -5.93161678314209
    6. ':' → logprob: -6.18161678314209
    7. '[' → logprob: -6.68161678314209
    8. ']' → logprob: -7.05661678314209
    9. '.' → logprob: -7.30661678314209
    10. '  ' → logprob: -7.43161678314209

Token 803: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13139718770980835
    2. '#' (adapté à ' #') → logprob: -2.756397247314453
    3. '"' → logprob: -4.131397247314453
    4. ')' → logprob: -4.506397247314453
    5. ' n' → logprob: -4.631397247314453
    6. ''' → logprob: -5.256397247314453
    7. ' #' → logprob: -5.506397247314453
    8. 'n' → logprob: -5.756397247314453
    9. '    ' → logprob: -6.381397247314453
    10. '")' → logprob: -7.006397247314453

Token 804: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2930552661418915
    2. '#' → logprob: -1.5430552959442139
    3. ')' → logprob: -4.543055057525635
    4. ' ' → logprob: -5.418055057525635
    5. ':' → logprob: -5.793055057525635
    6. ' n' → logprob: -5.918055057525635
    7. 'n' → logprob: -6.293055057525635
    8. '.' → logprob: -6.418055057525635
    9. 'def' → logprob: -6.418055057525635
    10. '"' → logprob: -6.543055057525635

Token 805: ' ils' (ID: 15387)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29978445172309875
    2. '#' → logprob: -1.4247844219207764
    3. 'que' → logprob: -6.2997846603393555
    4. ' seulement' → logprob: -6.4247846603393555
    5. 'def' → logprob: -6.5497846603393555
    6. 'les' → logprob: -6.5497846603393555
    7. 'le' → logprob: -6.6747846603393555
    8. ' #' → logprob: -7.0497846603393555
    9. 'leur' → logprob: -7.1747846603393555
    10. '
' → logprob: -7.2997846603393555

Token 806: ' servent' (ID: 192213)
  Prédit: ' peuvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peuvent' → logprob: -0.8620780110359192
    2. ' doivent' → logprob: -1.8620779514312744
    3. ' ne' → logprob: -2.1120779514312744
    4. ' sont' → logprob: -2.1120779514312744
    5. '#' → logprob: -2.6120779514312744
    6. 's' → logprob: -3.4870779514312744
    7. ' #' → logprob: -3.7370779514312744
    8. 'pe' → logprob: -4.9870781898498535
    9. '   ' → logprob: -5.2370781898498535
    10. ')' → logprob: -5.6120781898498535

Token 807: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1605173796415329
    2. 'à' → logprob: -2.285517454147339
    3. '   ' → logprob: -4.28551721572876
    4. ' uniquement' → logprob: -4.41051721572876
    5. ' to' → logprob: -5.41051721572876
    6. ' ' → logprob: -5.41051721572876
    7. ' =' → logprob: -5.91051721572876
    8. '  ' → logprob: -6.53551721572876
    9. 'to' → logprob: -6.78551721572876
    10. 'import' → logprob: -7.28551721572876

Token 808: ' rel' (ID: 1536)
  Prédit: 'rel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rel' → logprob: -0.8250349760055542
    2. ' rel' → logprob: -1.2000349760055542
    3. 'connect' → logprob: -1.7000349760055542
    4. ' connecter' → logprob: -3.2000350952148438
    5. 'ré' → logprob: -4.950035095214844
    6. 'sé' → logprob: -5.450035095214844
    7. ' réduire' → logprob: -5.450035095214844
    8. '   ' → logprob: -5.950035095214844
    9. 're' → logprob: -6.450035095214844
    10. 'faire' → logprob: -6.575035095214844

Token 809: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -8.53050296427682e-05
    2. 'i' → logprob: -10.12508487701416
    3. 'lier' → logprob: -11.87508487701416
    4. '#' → logprob: -12.00008487701416
    5. 'ie' → logprob: -12.00008487701416
    6. 'er' → logprob: -12.25008487701416
    7. 'ié' → logprob: -12.87508487701416
    8. 'irer' → logprob: -13.00008487701416
    9. '```' → logprob: -13.37508487701416
    10. 'ierer' → logprob: -13.37508487701416

Token 810: ' uniquement' (ID: 65527)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.34941187500953674
    2. 'p' → logprob: -2.224411964416504
    3. ' les' → logprob: -2.349411964416504
    4. '   ' → logprob: -3.349411964416504
    5. 'les' → logprob: -3.724411964416504
    6. ' ' → logprob: -4.099411964416504
    7. ' deux' → logprob: -5.599411964416504
    8. ' la' → logprob: -6.474411964416504
    9. ' i' → logprob: -6.474411964416504
    10. 'le' → logprob: -6.974411964416504

Token 811: ' les' (ID: 1341)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.9744720458984375
    2. ' deux' → logprob: -1.4744720458984375
    3. ' les' → logprob: -1.8494720458984375
    4. 'les' → logprob: -2.7244720458984375
    5. ' des' → logprob: -2.9744720458984375
    6. 'p' → logprob: -3.0994720458984375
    7. ' ' → logprob: -3.2244720458984375
    8. 'de' → logprob: -3.7244720458984375
    9. 'des' → logprob: -6.0994720458984375
    10. '   ' → logprob: -6.8494720458984375

Token 812: ' tuy' (ID: 45164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5474548935890198
    2. ' tuy' → logprob: -1.047454833984375
    3. 'p' → logprob: -3.047454833984375
    4. ' p' → logprob: -4.547454833984375
    5. 'pipes' → logprob: -5.547454833984375
    6. ' ' → logprob: -6.547454833984375
    7. ' deux' → logprob: -6.797454833984375
    8. 'tu' → logprob: -6.797454833984375
    9. ' pipes' → logprob: -7.047454833984375
    10. 'pipe' → logprob: -7.547454833984375

Token 813: 'aux' (ID: 5454)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1628026962280273
    2. 'x' → logprob: -1.6628026962280273
    3. 'aux' → logprob: -2.1628026962280273
    4. ']' → logprob: -2.5378026962280273
    5. 'es' → logprob: -2.6628026962280273
    6. '```' → logprob: -2.6628026962280273
    7. '[]' → logprob: -2.9128026962280273
    8. ')' → logprob: -3.7878026962280273
    9. '   ' → logprob: -4.037802696228027
    10. '[i' → logprob: -4.537802696228027

Token 814: ' cons' (ID: 1473)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6570308804512024
    2. '   ' → logprob: -1.1570308208465576
    3. 'n' → logprob: -3.1570308208465576
    4. ')' → logprob: -3.5320308208465576
    5. ':' → logprob: -4.657031059265137
    6. '
' → logprob: -4.657031059265137
    7. ',' → logprob: -4.782031059265137
    8. '[' → logprob: -5.157031059265137
    9. '(
' → logprob: -5.282031059265137
    10. '(n' → logprob: -5.282031059265137

Token 815: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0025131162256002426
    2. 'ecut' → logprob: -6.2525129318237305
    3. '#' → logprob: -8.75251293182373
    4. 'secut' → logprob: -8.87751293182373
    5. 'cut' → logprob: -9.12751293182373
    6. '[i' → logprob: -9.62751293182373
    7. '   ' → logprob: -10.50251293182373
    8. '[' → logprob: -10.75251293182373
    9. '```' → logprob: -11.62751293182373
    10. 'é' → logprob: -11.87751293182373

Token 816: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.12646484375
    2. 'ents' → logprob: -2.37646484375
    3. '[i' → logprob: -4.37646484375
    4. 'if' → logprob: -5.37646484375
    5. 'i' → logprob: -5.87646484375
    6. '   ' → logprob: -6.12646484375
    7. '[' → logprob: -6.62646484375
    8. 'u' → logprob: -7.00146484375
    9. '#' → logprob: -7.50146484375
    10. '```' → logprob: -8.12646484375

Token 817: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2157941460609436
    2. 'def' → logprob: -2.465794086456299
    3. ')' → logprob: -3.840794086456299
    4. '[' → logprob: -4.215794086456299
    5. '[n' → logprob: -4.590794086456299
    6. ']' → logprob: -4.715794086456299
    7. ',' → logprob: -4.840794086456299
    8. '[
' → logprob: -5.090794086456299
    9. ':' → logprob: -5.215794086456299
    10. '[j' → logprob: -5.465794086456299

Token 818: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2826988697052002
    2. '[' → logprob: -1.5326988697052002
    3. ']' → logprob: -4.657698631286621
    4. '[i' → logprob: -5.032698631286621
    5. '   ' → logprob: -5.657698631286621
    6. '[n' → logprob: -5.782698631286621
    7. '[
' → logprob: -5.907698631286621
    8. ')' → logprob: -7.032698631286621
    9. 'f' → logprob: -7.157698631286621
    10. ' +' → logprob: -7.782698631286621

Token 819: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34880608320236206
    2. ' i' → logprob: -1.2238061428070068
    3. '   ' → logprob: -8.598806381225586
    4. ' ' → logprob: -9.348806381225586
    5. ' ' → logprob: -9.973806381225586
    6. '	i' → logprob: -11.223806381225586
    7. '(i' → logprob: -12.223806381225586
    8. '  ' → logprob: -12.348806381225586
    9. ' (' → logprob: -12.473806381225586
    10. '
' → logprob: -12.723806381225586

Token 820: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013394085690379143
    2. ' +' → logprob: -6.876339435577393
    3. '+
' → logprob: -8.876338958740234
    4. '+)' → logprob: -10.251338958740234
    5. '[' → logprob: -10.501338958740234
    6. ')' → logprob: -10.626338958740234
    7. '-' → logprob: -10.876338958740234
    8. ']' → logprob: -11.501338958740234
    9. '+]' → logprob: -12.001338958740234
    10. ']+' → logprob: -12.376338958740234

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3358446166384965e-05
    2. ' ' → logprob: -9.875053405761719
    3. '```' → logprob: -13.875053405761719
    4. '   ' → logprob: -15.250053405761719
    5. ' ' → logprob: -15.875053405761719
    6. '
' → logprob: -16.12505340576172
    7. '`' → logprob: -16.75005340576172
    8. '2' → logprob: -16.75005340576172
    9. '１' → logprob: -16.81255340576172
    10. '  ' → logprob: -17.31255340576172

Token 822: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12864190340042114
    2. ':' → logprob: -3.2536418437957764
    3. 'def' → logprob: -3.6286418437957764
    4. '[' → logprob: -4.7536420822143555
    5. 'n' → logprob: -4.8786420822143555
    6. ')' → logprob: -5.0036420822143555
    7. '(n' → logprob: -5.0036420822143555
    8. 'j' → logprob: -5.7536420822143555
    9. '    
' → logprob: -5.7536420822143555
    10. '[n' → logprob: -6.1286420822143555

Token 823: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.110823631286621
    2. '   ' → logprob: -1.235823631286621
    3. 'n' → logprob: -1.735823631286621
    4. ')' → logprob: -3.485823631286621
    5. ',' → logprob: -3.485823631286621
    6. '\' → logprob: -3.735823631286621
    7. 'p' → logprob: -3.985823631286621
    8. '(n' → logprob: -4.485823631286621
    9. '
' → logprob: -4.735823631286621
    10. '#' → logprob: -4.735823631286621

Token 824: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06513725966215134
    2. 'n' → logprob: -3.4401371479034424
    3. 'def' → logprob: -4.0651373863220215
    4. 'import' → logprob: -5.4401373863220215
    5. '(n' → logprob: -6.4401373863220215
    6. ')' → logprob: -6.8151373863220215
    7. '    
' → logprob: -6.8151373863220215
    8. ':' → logprob: -6.9401373863220215
    9. 'j' → logprob: -7.0651373863220215
    10. '#' → logprob: -7.4401373863220215

Token 825: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15362821519374847
    2. 'n' → logprob: -2.15362811088562
    3. 'def' → logprob: -3.77862811088562
    4. 'import' → logprob: -6.903628349304199
    5. '    
' → logprob: -7.028628349304199
    6. '(n' → logprob: -8.1536283493042
    7. '#' → logprob: -8.4036283493042
    8. '```' → logprob: -8.4036283493042
    9. ' n' → logprob: -8.7786283493042
    10. '	n' → logprob: -9.0286283493042

Token 826: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2644710838794708
    2. 'n' → logprob: -1.5144710540771484
    3. 'def' → logprob: -4.639471054077148
    4. '    
' → logprob: -6.264471054077148
    5. ' n' → logprob: -8.889471054077148
    6. '(n' → logprob: -9.014471054077148
    7. 'import' → logprob: -9.014471054077148
    8. '#' (adapté à ' #') → logprob: -9.514471054077148
    9. '\n' → logprob: -9.764471054077148
    10. '
' → logprob: -9.889471054077148

Token 827: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33158454298973083
    2. '   ' → logprob: -1.5815845727920532
    3. 'def' → logprob: -2.5815844535827637
    4. 'import' → logprob: -8.081584930419922
    5. '#' → logprob: -8.331584930419922
    6. ' n' → logprob: -9.081584930419922
    7. '    
' → logprob: -9.331584930419922
    8. 'pass' → logprob: -9.581584930419922
    9. 'from' → logprob: -10.331584930419922
    10. 'if' → logprob: -11.081584930419922

Token 828: ' note' (ID: 7477)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1297188997268677
    2. 'def' → logprob: -1.5047188997268677
    3. ' n' → logprob: -2.129718780517578
    4. '#' → logprob: -2.754718780517578
    5. '   ' → logprob: -2.754718780517578
    6. ' continue' → logprob: -2.754718780517578
    7. 'continue' → logprob: -3.629718780517578
    8. '=' → logprob: -3.879718780517578
    9. 'n' → logprob: -3.879718780517578
    10. '[n' → logprob: -4.004718780517578

Token 829: ' que' (ID: 661)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.30762600898742676
    2. 'def' → logprob: -2.4326260089874268
    3. ':' → logprob: -2.9326260089874268
    4. '   ' → logprob: -3.0576260089874268
    5. ' n' → logprob: -3.5576260089874268
    6. '[n' → logprob: -4.307625770568848
    7. ' ' → logprob: -5.432625770568848
    8. ' =' → logprob: -5.557625770568848
    9. '    ' → logprob: -5.807625770568848
    10. '[]' → logprob: -5.932625770568848

Token 830: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8981102108955383
    2. 'n' → logprob: -1.5231101512908936
    3. '   ' → logprob: -1.5231101512908936
    4. 'def' → logprob: -1.8981101512908936
    5. ' def' → logprob: -6.023110389709473
    6. ' if' → logprob: -6.148110389709473
    7. '#' → logprob: -7.648110389709473
    8. 'if' → logprob: -7.898110389709473
    9. '```' → logprob: -8.148110389709473
    10. '
' → logprob: -8.523110389709473

Token 831: ' sal' (ID: 2370)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.36962035298347473
    2. ' n' → logprob: -2.3696203231811523
    3. '_' → logprob: -2.7446203231811523
    4. '#' → logprob: -3.1196203231811523
    5. ')' → logprob: -3.9946203231811523
    6. ' #' → logprob: -4.494620323181152
    7. 'def' → logprob: -4.494620323181152
    8. ' ' → logprob: -4.744620323181152
    9. 'j' → logprob: -4.869620323181152
    10. ' ' → logprob: -5.619620323181152

Token 832: 'ire' (ID: 594)
  Prédit: 'aires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.16081967949867249
    2. 'aire' → logprob: -2.4108197689056396
    3. '#' → logprob: -3.9108197689056396
    4. 'a' → logprob: -4.6608195304870605
    5. 'ary' → logprob: -5.4108195304870605
    6. '
' → logprob: -5.5358195304870605
    7. 'v' → logprob: -6.1608195304870605
    8. 'air' → logprob: -6.1608195304870605
    9. 'uts' → logprob: -6.2858195304870605
    10. ' =' → logprob: -6.4108195304870605

Token 833: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6440092921257019
    2. '=' → logprob: -1.5190093517303467
    3. 'r' → logprob: -2.1440093517303467
    4. '_' → logprob: -3.0190093517303467
    5. ' ' → logprob: -3.6440093517303467
    6. '#' → logprob: -4.519009113311768
    7. 'e' → logprob: -5.019009113311768
    8. ' _' → logprob: -5.269009113311768
    9. ')' → logprob: -5.394009113311768
    10. 'i' → logprob: -5.644009113311768

Token 834: ' number' (ID: 2086)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4047258496284485
    2. ' (' → logprob: -1.5297257900238037
    3. 'n' → logprob: -3.0297257900238037
    4. '(n' → logprob: -3.4047257900238037
    5. '   ' → logprob: -4.654726028442383
    6. ' S' → logprob: -5.154726028442383
    7. ' ' → logprob: -5.404726028442383
    8. ' =' → logprob: -5.904726028442383
    9. '(' → logprob: -6.279726028442383
    10. 'S' → logprob: -6.529726028442383

Token 835: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09244740009307861
    2. '_de' → logprob: -2.842447280883789
    3. '_des' → logprob: -4.592447280883789
    4. '_segments' → logprob: -4.717447280883789
    5. '_of' → logprob: -4.842447280883789
    6. 's' → logprob: -7.217447280883789
    7. ' de' → logprob: -7.842447280883789
    8. '_d' → logprob: -7.842447280883789
    9. '_s' → logprob: -8.467447280883789
    10. ' _' → logprob: -8.592447280883789

Token 836: '_segments' (ID: 142925)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43255698680877686
    2. '_segments' → logprob: -1.0575569868087769
    3. '_s' → logprob: -6.057557106018066
    4. '_de' → logprob: -7.932557106018066
    5. '_j' → logprob: -8.307557106018066
    6. 's' → logprob: -8.432557106018066
    7. ' _' → logprob: -8.682557106018066
    8. '_p' → logprob: -9.807557106018066
    9. '_segment' → logprob: -10.057557106018066
    10. '_parts' → logprob: -10.182557106018066

Token 837: ' *' (ID: 425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.841120719909668
    2. ')' → logprob: -1.716120719909668
    3. ' =' → logprob: -2.091120719909668
    4. 's' → logprob: -2.841120719909668
    5. '<|end|>' → logprob: -2.966120719909668
    6. '   ' → logprob: -3.841120719909668
    7. '=' → logprob: -3.966120719909668
    8. '#' → logprob: -4.466120719909668
    9. '_used' → logprob: -4.591120719909668
    10. 'def' → logprob: -4.716120719909668

Token 838: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10256396979093552
    2. '(S' → logprob: -2.4775638580322266
    3. '(' → logprob: -4.352563858032227
    4. '(n' → logprob: -9.352563858032227
    5. ' ' → logprob: -9.477563858032227
    6. 'total' → logprob: -9.477563858032227
    7. '(s' → logprob: -9.602563858032227
    8. ' total' → logprob: -9.977563858032227
    9. ' ' → logprob: -9.977563858032227
    10. '(total' → logprob: -10.102563858032227

Token 839: 'sum' (ID: 12298)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.5239105224609375
    2. 'S' → logprob: -1.8989105224609375
    3. ' S' → logprob: -1.8989105224609375
    4. ')' → logprob: -2.2739105224609375
    5. '(S' → logprob: -2.5239105224609375
    6. '(' → logprob: -2.6489105224609375
    7. ' n' → logprob: -2.8989105224609375
    8. '(n' → logprob: -3.5239105224609375
    9. ' )' → logprob: -4.1489105224609375
    10. 'sum' → logprob: -4.2739105224609375

Token 840: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025072090327739716
    2. '_j' → logprob: -4.40007209777832
    3. '_of' → logprob: -5.65007209777832
    4. '_des' → logprob: -6.02507209777832
    5. '_)' → logprob: -6.52507209777832
    6. '_p' → logprob: -6.52507209777832
    7. ')' → logprob: -6.65007209777832
    8. 'des' → logprob: -7.52507209777832
    9. '_de' → logprob: -8.40007209777832
    10. ')_' → logprob: -8.65007209777832

Token 841: '_lengths' (ID: 139878)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7882094383239746
    2. '_p' → logprob: -1.2882094383239746
    3. 't' → logprob: -2.5382094383239746
    4. 'pipes' → logprob: -2.7882094383239746
    5. '_t' → logprob: -3.0382094383239746
    6. '_j' → logprob: -3.1632094383239746
    7. ' _' → logprob: -5.163209438323975
    8. '   ' → logprob: -5.538209438323975
    9. ')' → logprob: -5.663209438323975
    10. 'p' → logprob: -5.663209438323975

Token 842: '_of' (ID: 8023)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39832499623298645
    2. '_' → logprob: -1.523324966430664
    3. '_p' → logprob: -3.523324966430664
    4. ' )' → logprob: -4.148324966430664
    5. 'des' → logprob: -4.773324966430664
    6. '_j' → logprob: -4.773324966430664
    7. ' des' → logprob: -4.898324966430664
    8. '_des' → logprob: -5.148324966430664
    9. ' +' → logprob: -5.523324966430664
    10. '_of' → logprob: -5.648324966430664

Token 843: '_p' (ID: 1359)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20881664752960205
    2. '_p' → logprob: -2.2088165283203125
    3. ')' → logprob: -3.7088165283203125
    4. '_t' → logprob: -4.4588165283203125
    5. ' _' → logprob: -4.5838165283203125
    6. 'pipes' → logprob: -4.8338165283203125
    7. 't' → logprob: -4.9588165283203125
    8. 'p' → logprob: -5.8338165283203125
    9. ' )' → logprob: -6.0838165283203125
    10. '_j' → logprob: -6.0838165283203125

Token 844: 'ipes' (ID: 10113)
  Prédit: 'ipes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipes' → logprob: -0.17110013961791992
    2. '_' → logprob: -1.92110013961792
    3. '_i' → logprob: -6.29610013961792
    4. ')' → logprob: -6.67110013961792
    5. 'i' → logprob: -7.04610013961792
    6. 'ipe' → logprob: -7.04610013961792
    7. '`)' → logprob: -7.79610013961792
    8. '[' → logprob: -7.92110013961792
    9. '_)' → logprob: -7.92110013961792
    10. '`' → logprob: -8.046100616455078

Token 845: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.628369152545929
    2. '_' → logprob: -1.1283690929412842
    3. '+' → logprob: -2.253369092941284
    4. ' +' → logprob: -4.128369331359863
    5. 's' → logprob: -5.128369331359863
    6. '[' → logprob: -5.253369331359863
    7. 'et' → logprob: -6.753369331359863
    8. '_)' → logprob: -6.878369331359863
    9. ' )' → logprob: -7.378369331359863
    10. 'es' → logprob: -7.503369331359863

Token 846: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.1612133979797363
    2. ' sum' → logprob: -1.2862133979797363
    3. ' x' → logprob: -1.5362133979797363
    4. 'x' → logprob: -2.2862133979797363
    5. ')' → logprob: -3.5362133979797363
    6. 'j' → logprob: -3.7862133979797363
    7. ' j' → logprob: -4.536213397979736
    8. ' joints' → logprob: -4.911213397979736
    9. '1' → logprob: -5.911213397979736
    10. ' ' → logprob: -6.286213397979736

Token 847: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5562867522239685
    2. '_j' → logprob: -0.9312867522239685
    3. '_of' → logprob: -4.056286811828613
    4. '_des' → logprob: -4.431286811828613
    5. '_de' → logprob: -6.806286811828613
    6. 'des' → logprob: -7.306286811828613
    7. ')' → logprob: -8.556286811828613
    8. 'of' → logprob: -8.681286811828613
    9. '_used' → logprob: -8.806286811828613
    10. '   ' → logprob: -8.931286811828613

Token 848: '_lengths' (ID: 139878)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.5083469748497009
    2. 'j' → logprob: -1.0083470344543457
    3. '_' → logprob: -3.6333470344543457
    4. 'pipes' → logprob: -6.383347034454346
    5. ')' → logprob: -7.133347034454346
    6. '_used' → logprob: -7.258347034454346
    7. '_p' → logprob: -7.508347034454346
    8. 'used' → logprob: -7.883347034454346
    9. 't' → logprob: -8.008346557617188
    10. ' joints' → logprob: -8.008346557617188

Token 849: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6609570384025574
    2. '_des' → logprob: -1.4109570980072021
    3. '_of' → logprob: -1.7859570980072021
    4. '_used' → logprob: -2.910957098007202
    5. 'des' → logprob: -5.410956859588623
    6. '_de' → logprob: -5.785956859588623
    7. '_j' → logprob: -5.910956859588623
    8. '_util' → logprob: -5.910956859588623
    9. ')' → logprob: -6.285956859588623
    10. '   ' → logprob: -7.410956859588623

Token 850: '_used' (ID: 67016)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5900530815124512
    2. '_j' → logprob: -1.0900530815124512
    3. '_' → logprob: -2.590053081512451
    4. 'pipes' → logprob: -4.590053081512451
    5. ')' → logprob: -4.715053081512451
    6. ' _' → logprob: -6.465053081512451
    7. '_p' → logprob: -6.465053081512451
    8. ')_' → logprob: -6.840053081512451
    9. '"' → logprob: -6.840053081512451
    10. ' j' → logprob: -6.965053081512451

Token 851: '_j' (ID: 12021)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5864579081535339
    2. '_j' → logprob: -0.8364579081535339
    3. '_)' → logprob: -5.2114577293396
    4. ')' → logprob: -5.8364577293396
    5. ')_' → logprob: -7.3364577293396
    6. '_p' → logprob: -8.211458206176758
    7. ' _' → logprob: -8.461458206176758
    8. 'j' → logprob: -8.586458206176758
    9. '_s' → logprob: -9.586458206176758
    10. 's' → logprob: -9.711458206176758

Token 852: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.015817677602171898
    2. '_' → logprob: -4.515817642211914
    3. 'o' → logprob: -6.140817642211914
    4. '_o' → logprob: -7.265817642211914
    5. 'oin' → logprob: -7.890817642211914
    6. 'oint' → logprob: -8.390817642211914
    7. '_)' → logprob: -8.390817642211914
    8. '```' → logprob: -8.765817642211914
    9. '_co' → logprob: -9.140817642211914
    10. '_\' → logprob: -9.390817642211914

Token 853: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015078646130859852
    2. '_)' → logprob: -5.140078544616699
    3. '_' → logprob: -5.890078544616699
    4. '_used' → logprob: -6.265078544616699
    5. '[' → logprob: -7.015078544616699
    6. ')
' → logprob: -7.390078544616699
    7. 's' → logprob: -7.890078544616699
    8. '+' → logprob: -8.2650785446167
    9. ' )' → logprob: -8.3900785446167
    10. '   ' → logprob: -8.3900785446167

Token 854: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03314036503434181
    2. 'def' → logprob: -4.658140182495117
    3. 'n' → logprob: -4.783140182495117
    4. ')' → logprob: -5.783140182495117
    5. '(n' → logprob: -6.533140182495117
    6. '
' → logprob: -6.658140182495117
    7. '    
' → logprob: -6.783140182495117
    8. 'j' → logprob: -6.783140182495117
    9. '_j' → logprob: -7.158140182495117
    10. '_' → logprob: -7.283140182495117

Token 855: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38797494769096375
    2. ':' → logprob: -1.7629749774932861
    3. ')' → logprob: -3.637974977493286
    4. 'def' → logprob: -3.637974977493286
    5. 'n' → logprob: -4.137974739074707
    6. ',' → logprob: -4.637974739074707
    7. '_' → logprob: -4.637974739074707
    8. '\' → logprob: -4.887974739074707
    9. '[' → logprob: -5.012974739074707
    10. ']' → logprob: -5.262974739074707

Token 856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6389152407646179
    2. 'n' → logprob: -0.8889152407646179
    3. 'def' → logprob: -2.8889153003692627
    4. '\n' → logprob: -6.638915061950684
    5. '    
' → logprob: -6.888915061950684
    6. 'import' → logprob: -7.138915061950684
    7. '\' → logprob: -7.513915061950684
    8. '
' → logprob: -7.763915061950684
    9. '(n' → logprob: -7.763915061950684
    10. '```' → logprob: -8.138915061950684

Token 857: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4708477258682251
    2. '   ' → logprob: -1.095847725868225
    3. 'def' → logprob: -3.3458476066589355
    4. 'import' → logprob: -6.0958476066589355
    5. '    
' → logprob: -6.8458476066589355
    6. '
' → logprob: -7.2208476066589355
    7. '#' (adapté à ' #') → logprob: -7.3458476066589355
    8. ' n' → logprob: -7.8458476066589355
    9. '(n' → logprob: -9.220848083496094
    10. '\n' → logprob: -9.470848083496094

Token 858: ' L' (ID: 451)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19370391964912415
    2. '   ' → logprob: -2.4437038898468018
    3. 'def' → logprob: -2.4437038898468018
    4. 'import' → logprob: -6.443704128265381
    5. '    
' → logprob: -8.193703651428223
    6. 'from' → logprob: -9.068703651428223
    7. '#' → logprob: -9.068703651428223
    8. ' n' → logprob: -9.443703651428223
    9. '```' → logprob: -9.693703651428223
    10. '
' → logprob: -10.318703651428223

Token 859: ''' (ID: 6)
  Prédit: 'ength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ength' → logprob: -0.9941547513008118
    2. 'n' → logprob: -1.244154691696167
    3. ' =' → logprob: -2.369154691696167
    4. '=' → logprob: -2.744154691696167
    5. 'def' → logprob: -2.744154691696167
    6. 'ines' → logprob: -3.244154691696167
    7. '[n' → logprob: -3.869154691696167
    8. 'ine' → logprob: -4.369154930114746
    9. 'en' → logprob: -4.994154930114746
    10. '#' → logprob: -5.244154930114746

Token 860: 'én' (ID: 3289)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5062941312789917
    2. '_' → logprob: -2.1312942504882812
    3. 'def' → logprob: -2.2562942504882812
    4. '(n' → logprob: -2.7562942504882812
    5. '#' → logprob: -3.7562942504882812
    6. ' n' → logprob: -4.256294250488281
    7. '=' → logprob: -4.506294250488281
    8. 'p' → logprob: -5.131294250488281
    9. ' =' → logprob: -5.256294250488281
    10. ' ' → logprob: -5.256294250488281

Token 861: 'oncé' (ID: 59071)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.559590458869934
    2. '#' → logprob: -1.809590458869934
    3. '=' → logprob: -1.809590458869934
    4. 't' → logprob: -2.1845903396606445
    5. '   ' → logprob: -2.3095903396606445
    6. ' =' → logprob: -2.8095903396606445
    7. 'def' → logprob: -3.8095903396606445
    8. 'n' → logprob: -3.9345903396606445
    9. '#
' → logprob: -3.9345903396606445
    10. '
' → logprob: -4.5595903396606445

Token 862: ' s' (ID: 265)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0486936569213867
    2. ' =' → logprob: -1.4236936569213867
    3. 'n' → logprob: -2.2986936569213867
    4. ':' → logprob: -2.6736936569213867
    5. '#' → logprob: -3.2986936569213867
    6. 's' → logprob: -3.4236936569213867
    7. 'def' → logprob: -3.4236936569213867
    8. ')' → logprob: -3.6736936569213867
    9. '   ' → logprob: -4.298693656921387
    10. '[' → logprob: -4.423693656921387

Token 863: ''arr' (ID: 49695)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6737239360809326
    2. ')' → logprob: -2.0487239360809326
    3. '[' → logprob: -2.0487239360809326
    4. ' =' → logprob: -2.4237239360809326
    5. ':' → logprob: -3.2987239360809326
    6. '[n' → logprob: -3.6737239360809326
    7. '_' → logprob: -4.048724174499512
    8. ']' → logprob: -4.423724174499512
    9. '   ' → logprob: -4.673724174499512
    10. '#' → logprob: -4.923724174499512

Token 864: 'ête' (ID: 16808)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24911101162433624
    2. ' =' → logprob: -1.8741110563278198
    3. ')' → logprob: -3.9991109371185303
    4. '[' → logprob: -4.249111175537109
    5. 's' → logprob: -5.374111175537109
    6. '   ' → logprob: -5.624111175537109
    7. ']' → logprob: -5.749111175537109
    8. '_' → logprob: -5.874111175537109
    9. ':' → logprob: -6.374111175537109
    10. '...' → logprob: -6.749111175537109

Token 865: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2595791816711426
    2. '[' → logprob: -2.0095791816711426
    3. '[n' → logprob: -2.1345791816711426
    4. '   ' → logprob: -2.2595791816711426
    5. '=' → logprob: -2.7595791816711426
    6. ')' → logprob: -3.1345791816711426
    7. 'def' → logprob: -3.2595791816711426
    8. '(n' → logprob: -3.3845791816711426
    9. ']' → logprob: -3.3845791816711426
    10. ' =' → logprob: -3.6345791816711426

Token 866: ' ça' (ID: 13590)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9253909587860107
    2. ')' → logprob: -1.1753909587860107
    3. ' ' → logprob: -2.8003909587860107
    4. '(n' → logprob: -2.9253909587860107
    5. ':' → logprob: -3.3003909587860107
    6. ' n' → logprob: -3.6753909587860107
    7. 'def' → logprob: -4.17539119720459
    8. '   ' → logprob: -4.17539119720459
    9. '(' → logprob: -4.30039119720459
    10. '[' → logprob: -4.30039119720459

Token 867: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6013519167900085
    2. ':' → logprob: -1.8513519763946533
    3. '[' → logprob: -2.8513519763946533
    4. '(' → logprob: -3.1013519763946533
    5. ')' → logprob: -3.1013519763946533
    6. '(n' → logprob: -3.3513519763946533
    7. 'def' → logprob: -3.4763519763946533
    8. ',' → logprob: -4.101351737976074
    9. '[n' → logprob: -4.726351737976074
    10. ']' → logprob: -4.976351737976074

Token 868: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05528809875249863
    2. ':' → logprob: -4.430288314819336
    3. 'n' → logprob: -4.680288314819336
    4. ')' → logprob: -5.430288314819336
    5. 'def' → logprob: -5.680288314819336
    6. '[' → logprob: -5.805288314819336
    7. '"' → logprob: -6.180288314819336
    8. '(' → logprob: -6.430288314819336
    9. ']' → logprob: -6.430288314819336
    10. '    ' → logprob: -6.430288314819336

Token 869: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2744676172733307
    2. 'n' → logprob: -2.399467706680298
    3. ' n' → logprob: -2.649467706680298
    4. '#' → logprob: -3.899467706680298
    5. 'def' → logprob: -4.274467468261719
    6. 'pass' → logprob: -4.274467468261719
    7. '<|end|>' → logprob: -4.399467468261719
    8. '    ' → logprob: -5.774467468261719
    9. ' pass' → logprob: -5.899467468261719
    10. '...' → logprob: -6.149467468261719

Token 870: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8084983825683594
    2. ':' → logprob: -1.1834983825683594
    3. 'def' → logprob: -2.0584983825683594
    4. 'n' → logprob: -2.9334983825683594
    5. ',' → logprob: -4.058498382568359
    6. '#' → logprob: -4.433498382568359
    7. '<|end|>' → logprob: -4.683498382568359
    8. '.' → logprob: -5.558498382568359
    9. ' n' → logprob: -5.683498382568359
    10. ']' → logprob: -5.933498382568359

Token 871: 'nombre' (ID: 28576)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0978020429611206
    2. ')' → logprob: -1.4728020429611206
    3. '   ' → logprob: -1.7228020429611206
    4. 'def' → logprob: -2.22280216217041
    5. 'p' → logprob: -3.84780216217041
    6. '(' → logprob: -4.09780216217041
    7. '#' → logprob: -4.22280216217041
    8. ',' → logprob: -4.47280216217041
    9. '(p' → logprob: -4.47280216217041
    10. ']' → logprob: -4.72280216217041

Token 872: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22500263154506683
    2. '_de' → logprob: -1.850002646446228
    3. '_of' → logprob: -3.7250025272369385
    4. '_des' → logprob: -4.975002765655518
    5. ' de' → logprob: -5.725002765655518
    6. ')' → logprob: -6.100002765655518
    7. 'de' → logprob: -6.725002765655518
    8. '   ' → logprob: -6.725002765655518
    9. '_d' → logprob: -7.225002765655518
    10. 'def' → logprob: -7.600002765655518

Token 873: ' segments' (ID: 33749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20554949343204498
    2. '_segments' → logprob: -1.7055494785308838
    3. ' _' → logprob: -6.455549716949463
    4. '_j' → logprob: -6.580549716949463
    5. '_p' → logprob: -8.330549240112305
    6. 'segments' → logprob: -8.330549240112305
    7. '_
' → logprob: -8.955549240112305
    8. '_s' → logprob: -9.455549240112305
    9. '_segment' → logprob: -9.455549240112305
    10. '_t' → logprob: -10.080549240112305

Token 874: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740513265132904
    2. ')' → logprob: -1.9740513563156128
    3. '=' → logprob: -1.9740513563156128
    4. '_' → logprob: -3.3490512371063232
    5. '   ' → logprob: -3.5990512371063232
    6. '<|end|>' → logprob: -5.349051475524902
    7. 'def' → logprob: -5.599051475524902
    8. ' +=' → logprob: -5.974051475524902
    9. ' +' → logprob: -6.224051475524902
    10. '+' → logprob: -6.224051475524902

Token 875: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3636085987091064
    2. '   ' → logprob: -1.3636085987091064
    3. ')' → logprob: -1.9886085987091064
    4. ' =' → logprob: -1.9886085987091064
    5. '<|end|>' → logprob: -2.2386085987091064
    6. '#' → logprob: -3.8636085987091064
    7. '_' → logprob: -3.9886085987091064
    8. ':' → logprob: -4.113608360290527
    9. ' ' → logprob: -4.863608360290527
    10. '    ' → logprob: -5.238608360290527

Token 876: ' égal' (ID: 15059)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3074071407318115
    2. '=' → logprob: -1.4324071407318115
    3. 'n' → logprob: -4.557407379150391
    4. '   ' → logprob: -5.557407379150391
    5. ' n' → logprob: -5.682407379150391
    6. '=n' → logprob: -6.557407379150391
    7. ')' → logprob: -6.932407379150391
    8. ' ' → logprob: -7.307407379150391
    9. '\n' → logprob: -7.682407379150391
    10. '    ' → logprob: -7.932407379150391

Token 877: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5168660283088684
    2. ' =' → logprob: -1.3918659687042236
    3. ' à' → logprob: -2.6418659687042236
    4. 'à' → logprob: -3.1418659687042236
    5. '   ' → logprob: -3.5168659687042236
    6. '=n' → logprob: -5.766866207122803
    7. 'au' → logprob: -5.891866207122803
    8. ' au' → logprob: -6.516866207122803
    9. ' ' → logprob: -7.016866207122803
    10. 'to' → logprob: -8.016865730285645

Token 878: ':
' (ID: 734)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4299617111682892
    2. ' n' → logprob: -1.0549616813659668
    3. '   ' → logprob: -6.804961681365967
    4. 'len' → logprob: -9.929962158203125
    5. ' len' → logprob: -10.054962158203125
    6. 'import' → logprob: -10.929962158203125
    7. '	n' → logprob: -11.929962158203125
    8. ' ' → logprob: -12.179962158203125
    9. '```' → logprob: -12.304962158203125
    10. ' sys' → logprob: -12.554962158203125

Token 879: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.41536781191825867
    2. ' n' → logprob: -1.165367841720581
    3. '   ' → logprob: -3.790367841720581
    4. ' =' → logprob: -6.540367603302002
    5. ')' → logprob: -6.790367603302002
    6. '(n' → logprob: -7.540367603302002
    7. '#' → logprob: -8.29036808013916
    8. '	n' → logprob: -8.41536808013916
    9. ' \(' → logprob: -8.54036808013916
    10. ' (' → logprob: -8.79036808013916

Token 880: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6525771021842957
    2. ' n' → logprob: -0.9025771021842957
    3. '   ' → logprob: -2.6525771617889404
    4. ')' → logprob: -7.527576923370361
    5. ' =' → logprob: -7.652576923370361
    6. '#' (adapté à ' #') → logprob: -8.15257740020752
    7. '	n' → logprob: -8.15257740020752
    8. '(n' → logprob: -8.27757740020752
    9. '    ' → logprob: -8.52757740020752
    10. ' #' → logprob: -8.77757740020752

Token 881: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04125625640153885
    2. ' n' → logprob: -3.9162561893463135
    3. '   ' → logprob: -3.9162561893463135
    4. 'len' → logprob: -8.166255950927734
    5. '#' → logprob: -9.166255950927734
    6. ' len' → logprob: -9.916255950927734
    7. '	n' → logprob: -10.416255950927734
    8. '(n' → logprob: -10.666255950927734
    9. '```' → logprob: -11.291255950927734
    10. 'import' → logprob: -11.416255950927734

Token 882: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013074229471385479
    2. ' n' → logprob: -4.3880743980407715
    3. '   ' → logprob: -7.7630743980407715
    4. 'len' → logprob: -9.888073921203613
    5. 'import' → logprob: -10.513073921203613
    6. '(n' → logprob: -11.013073921203613
    7. '#' → logprob: -11.263073921203613
    8. ' ' → logprob: -12.888073921203613
    9. '	n' → logprob: -12.888073921203613
    10. '```' → logprob: -13.138073921203613

Token 883: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13457469642162323
    2. ' n' → logprob: -2.2595746517181396
    3. '   ' → logprob: -4.134574890136719
    4. '(n' → logprob: -6.134574890136719
    5. 'len' → logprob: -7.134574890136719
    6. ' (' → logprob: -7.759574890136719
    7. '1' → logprob: -8.009574890136719
    8. '#' → logprob: -8.009574890136719
    9. 'import' → logprob: -8.384574890136719
    10. 'def' → logprob: -8.384574890136719

Token 884: ' initial' (ID: 4871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010293210856616497
    2. '_de' → logprob: -5.010293006896973
    3. '_of' → logprob: -6.010293006896973
    4. '_des' → logprob: -7.135293006896973
    5. '_d' → logprob: -9.010293006896973
    6. ' de' → logprob: -10.260293006896973
    7. '   ' → logprob: -11.010293006896973
    8. '_segments' → logprob: -11.135293006896973
    9. ' _' → logprob: -11.260293006896973
    10. ')' → logprob: -11.385293006896973

Token 885: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008051242679357529
    2. '_de' → logprob: -5.50805139541626
    3. '_j' → logprob: -6.88305139541626
    4. '_of' → logprob: -7.38305139541626
    5. ' _' → logprob: -8.008050918579102
    6. '_segments' → logprob: -8.133050918579102
    7. '_des' → logprob: -8.258050918579102
    8. ' de' → logprob: -8.758050918579102
    9. '_p' → logprob: -9.008050918579102
    10. ')' → logprob: -9.133050918579102

Token 886: ' tuy' (ID: 45164)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12112340331077576
    2. '_t' → logprob: -3.3711233139038086
    3. ' _' → logprob: -3.7461233139038086
    4. '_segments' → logprob: -3.8711233139038086
    5. 'segments' → logprob: -4.871123313903809
    6. 't' → logprob: -4.996123313903809
    7. '_p' → logprob: -5.246123313903809
    8. '_j' → logprob: -5.746123313903809
    9. ' ' → logprob: -5.746123313903809
    10. '_s' → logprob: -5.996123313903809

Token 887: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.3593919277191162
    2. 'x' → logprob: -1.4843919277191162
    3. 'pipes' → logprob: -3.359391927719116
    4. 'au' → logprob: -4.484392166137695
    5. '   ' → logprob: -4.484392166137695
    6. '```' → logprob: -5.109392166137695
    7. '#' → logprob: -5.484392166137695
    8. 'def' → logprob: -6.109392166137695
    9. '##' → logprob: -6.859392166137695
    10. 'p' → logprob: -7.234392166137695

Token 888: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4236834049224854
    2. '   ' → logprob: -2.1736834049224854
    3. 'def' → logprob: -2.2986834049224854
    4. ' =' → logprob: -2.4236834049224854
    5. '=' → logprob: -2.5486834049224854
    6. 'n' → logprob: -2.6736834049224854
    7. ')' → logprob: -2.7986834049224854
    8. '[' → logprob: -3.1736834049224854
    9. 's' → logprob: -3.4236834049224854
    10. ',' → logprob: -3.6736834049224854

Token 889: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.027267077937722206
    2. ' n' → logprob: -3.6522669792175293
    3. 'len' → logprob: -7.527266979217529
    4. '   ' → logprob: -8.027267456054688
    5. ' len' → logprob: -10.152267456054688
    6. 'import' → logprob: -10.527267456054688
    7. ' ' → logprob: -12.152267456054688
    8. 'sys' → logprob: -12.277267456054688
    9. '10' → logprob: -12.402267456054688
    10. '`' → logprob: -12.902267456054688

Token 890: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0395888090133667
    2. ')' → logprob: -1.6645888090133667
    3. ' =' → logprob: -1.6645888090133667
    4. 'n' → logprob: -2.2895889282226562
    5. 'def' → logprob: -3.6645889282226562
    6. 's' → logprob: -3.7895889282226562
    7. ',' → logprob: -4.039588928222656
    8. '   ' → logprob: -4.664588928222656
    9. ']' → logprob: -4.664588928222656
    10. '_' → logprob: -4.789588928222656

Token 891: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8827059268951416
    2. '<|end|>' → logprob: -1.8827059268951416
    3. 'def' → logprob: -2.0077059268951416
    4. ')' → logprob: -2.2577059268951416
    5. '[n' → logprob: -2.5077059268951416
    6. ' =' → logprob: -2.7577059268951416
    7. 'n' → logprob: -2.8827059268951416
    8. ':' → logprob: -3.5077059268951416
    9. '(n' → logprob: -3.7577059268951416
    10. '#' → logprob: -3.8827059268951416

Token 892: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5241646766662598
    2. '<|end|>' → logprob: -1.5241646766662598
    3. 'def' → logprob: -3.2741646766662598
    4. ')' → logprob: -3.3991646766662598
    5. '<|end|>' → logprob: -3.7741646766662598
    6. '(n' → logprob: -4.02416467666626
    7. '#' (adapté à ' #') → logprob: -4.14916467666626
    8. 'n' → logprob: -4.27416467666626
    9. '
' → logprob: -4.39916467666626
    10. 'import' → logprob: -4.77416467666626

Token 893: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9569892287254333
    2. '   ' → logprob: -1.4569892883300781
    3. 'n' → logprob: -1.8319892883300781
    4. 'def' → logprob: -1.9569892883300781
    5. '=' → logprob: -3.331989288330078
    6. '_' → logprob: -4.331989288330078
    7. '#' → logprob: -4.706989288330078
    8. ' n' → logprob: -5.706989288330078
    9. '
' → logprob: -5.831989288330078
    10. '(n' → logprob: -5.831989288330078

Token 894: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1779543161392212
    2. 'n' → logprob: -1.3029543161392212
    3. '#' → logprob: -1.4279543161392212
    4. 'def' → logprob: -1.9279543161392212
    5. 'p' → logprob: -4.927954196929932
    6. 'import' → logprob: -4.927954196929932
    7. '=' → logprob: -6.052954196929932
    8. 'j' → logprob: -6.302954196929932
    9. ' =' → logprob: -6.427954196929932
    10. '(n' → logprob: -6.427954196929932

Token 895: ' moins' (ID: 15924)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9730462431907654
    2. '   ' → logprob: -1.5980463027954102
    3. 'nombre' → logprob: -1.5980463027954102
    4. ' ' → logprob: -2.47304630279541
    5. ' nombre' → logprob: -3.22304630279541
    6. 'number' → logprob: -3.84804630279541
    7. '+' → logprob: -3.97304630279541
    8. 'len' → logprob: -4.59804630279541
    9. '1' → logprob: -4.72304630279541
    10. ' #' → logprob: -5.22304630279541

Token 896: ' nombre' (ID: 9733)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -2.140418291091919
    2. 'len' → logprob: -2.140418291091919
    3. 'sum' → logprob: -2.140418291091919
    4. '1' → logprob: -2.390418291091919
    5. ' len' → logprob: -2.640418291091919
    6. ' used' → logprob: -3.015418291091919
    7. ' sum' → logprob: -3.015418291091919
    8. '   ' → logprob: -3.015418291091919
    9. 'used' → logprob: -3.265418291091919
    10. ' le' → logprob: -3.265418291091919

Token 897: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.3010312020778656
    2. '_' → logprob: -2.0510311126708984
    3. '_des' → logprob: -2.3010311126708984
    4. '_of' → logprob: -4.551031112670898
    5. '_util' → logprob: -5.051031112670898
    6. '   ' → logprob: -5.301031112670898
    7. '_d' → logprob: -5.426031112670898
    8. ' de' → logprob: -6.551031112670898
    9. '_used' → logprob: -6.801031112670898
    10. 'de' → logprob: -7.676031112670898

Token 898: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6515318751335144
    2. '_j' → logprob: -1.4015319347381592
    3. ' joints' → logprob: -2.276531934738159
    4. '_used' → logprob: -2.776531934738159
    5. ' used' → logprob: -4.02653169631958
    6. 'used' → logprob: -4.15153169631958
    7. ' utilisés' → logprob: -5.27653169631958
    8. ' j' → logprob: -5.40153169631958
    9. ' ' → logprob: -5.52653169631958
    10. 'util' → logprob: -5.52653169631958

Token 899: ' utilisés' (ID: 94258)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7666444778442383
    2. '   ' → logprob: -1.2666444778442383
    3. '_util' → logprob: -2.2666444778442383
    4. '_used' → logprob: -3.1416444778442383
    5. 'def' → logprob: -3.5166444778442383
    6. 'n' → logprob: -3.7666444778442383
    7. '
' → logprob: -4.266644477844238
    8. '    
' → logprob: -5.016644477844238
    9. '=' → logprob: -5.141644477844238
    10. 's' → logprob: -5.391644477844238

Token 900: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21381744742393494
    2. 'n' → logprob: -2.0888173580169678
    3. 'def' → logprob: -3.3388173580169678
    4. ':' → logprob: -4.713817596435547
    5. ')' → logprob: -5.338817596435547
    6. ' =' → logprob: -5.588817596435547
    7. '(n' → logprob: -5.838817596435547
    8. '_' → logprob: -5.963817596435547
    9. ']' → logprob: -6.713817596435547
    10. ' n' → logprob: -7.213817596435547

Token 901: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011737531051039696
    2. '   ' → logprob: -5.51173734664917
    3. ' )' → logprob: -6.26173734664917
    4. '_used' → logprob: -6.76173734664917
    5. '))' → logprob: -6.88673734664917
    6. 'used' → logprob: -7.01173734664917
    7. ')**' → logprob: -8.011737823486328
    8. ')
' → logprob: -8.261737823486328
    9. '`)' → logprob: -8.386737823486328
    10. ')`' → logprob: -8.511737823486328

Token 902: ' joint' (ID: 14585)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.3629785776138306
    2. 'on' → logprob: -1.8629785776138306
    3. 'cha' → logprob: -2.112978458404541
    4. 'each' → logprob: -2.237978458404541
    5. '   ' → logprob: -2.487978458404541
    6. 'ils' → logprob: -2.737978458404541
    7. 'util' → logprob: -3.112978458404541
    8. 'les' → logprob: -3.487978458404541
    9. ' on' → logprob: -4.112978458404541
    10. ' utiliser' → logprob: -4.362978458404541

Token 903: ' rel' (ID: 1536)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.7375181913375854
    2. 's' → logprob: -1.3625181913375854
    3. ')' → logprob: -2.112518310546875
    4. '_' → logprob: -3.362518310546875
    5. '[i' → logprob: -3.362518310546875
    6. '_util' → logprob: -3.862518310546875
    7. ']' → logprob: -4.237518310546875
    8. '   ' → logprob: -4.487518310546875
    9. ' utilisé' → logprob: -4.987518310546875
    10. '```' → logprob: -5.737518310546875

Token 904: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.17592091858386993
    2. 'ié' → logprob: -2.6759209632873535
    3. 'i' → logprob: -3.0509209632873535
    4. 'ated' → logprob: -4.3009209632873535
    5. 'e' → logprob: -4.8009209632873535
    6. 'ied' → logprob: -4.9259209632873535
    7. 'ies' → logprob: -5.1759209632873535
    8. 'ier' → logprob: -5.9259209632873535
    9. 'é' → logprob: -6.8009209632873535
    10. '#' → logprob: -7.1759209632873535

Token 905: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.0984545350074768
    2. ' p' → logprob: -3.223454475402832
    3. ' two' → logprob: -3.848454475402832
    4. ' ' → logprob: -4.348454475402832
    5. 'p' → logprob: -5.223454475402832
    6. 'de' → logprob: -5.473454475402832
    7. ' i' → logprob: -5.848454475402832
    8. ')' → logprob: -6.473454475402832
    9. ' des' → logprob: -6.848454475402832
    10. '   ' → logprob: -7.098454475402832

Token 906: ' tuy' (ID: 45164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7449480891227722
    2. ' tuy' → logprob: -0.8699480891227722
    3. ')' → logprob: -3.869948148727417
    4. ' segments' → logprob: -3.994948148727417
    5. 'p' → logprob: -4.369947910308838
    6. ' pipes' → logprob: -4.494947910308838
    7. 'segments' → logprob: -4.994947910308838
    8. '   ' → logprob: -5.119947910308838
    9. 'pipes' → logprob: -5.119947910308838
    10. ' ' → logprob: -5.494947910308838

Token 907: 'aux' (ID: 5454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.287174254655838
    2. 'aux' → logprob: -1.4121742248535156
    3. '   ' → logprob: -6.287174224853516
    4. '```' → logprob: -6.537174224853516
    5. '##' → logprob: -7.537174224853516
    6. 'es' → logprob: -7.787174224853516
    7. '|' → logprob: -8.287174224853516
    8. 'au' → logprob: -8.537174224853516
    9. ')' → logprob: -8.787174224853516
    10. '(x' → logprob: -8.912174224853516

Token 908: ' donc' (ID: 14206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14185185730457306
    2. '   ' → logprob: -2.2668519020080566
    3. '_used' → logprob: -4.766851902008057
    4. ' utilisés' → logprob: -4.891851902008057
    5. '[i' → logprob: -6.016851902008057
    6. ' utilisé' → logprob: -6.641851902008057
    7. '.' → logprob: -6.766851902008057
    8. 'used' → logprob: -6.766851902008057
    9. ' )' → logprob: -6.891851902008057
    10. ' used' → logprob: -7.141851902008057

Token 909: ' fusion' (ID: 48115)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0921827554702759
    2. ' ils' → logprob: -2.2171826362609863
    3. ')' → logprob: -2.3421826362609863
    4. ' réduit' → logprob: -2.3421826362609863
    5. ' il' → logprob: -2.7171826362609863
    6. '   ' → logprob: -3.2171826362609863
    7. 'segments' → logprob: -3.8421826362609863
    8. ' segments' → logprob: -3.9671826362609863
    9. ' n' → logprob: -3.9671826362609863
    10. ' utilisés' → logprob: -4.342182636260986

Token 910: 'ne' (ID: 611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3545716404914856
    2. 'nés' → logprob: -1.6045715808868408
    3. 'és' → logprob: -3.479571580886841
    4. 'ner' → logprob: -3.729571580886841
    5. '   ' → logprob: -4.60457181930542
    6. 's' → logprob: -4.60457181930542
    7. 'n' → logprob: -5.22957181930542
    8. ')
' → logprob: -5.22957181930542
    9. 'nées' → logprob: -6.47957181930542
    10. '))' → logprob: -7.22957181930542

Token 911: ' deux' (ID: 10301)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.36079302430152893
    2. '   ' → logprob: -2.735793113708496
    3. ' segments' → logprob: -2.735793113708496
    4. ' deux' → logprob: -2.985793113708496
    5. 'les' → logprob: -3.485793113708496
    6. ' des' → logprob: -3.860793113708496
    7. ' les' → logprob: -3.985793113708496
    8. ')' → logprob: -4.235793113708496
    9. 'n' → logprob: -4.610793113708496
    10. ' ' → logprob: -4.985793113708496

Token 912: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6558834910392761
    2. ' segments' → logprob: -1.155883550643921
    3. 't' → logprob: -2.280883550643921
    4. ')' → logprob: -3.655883550643921
    5. ' pipes' → logprob: -4.780883312225342
    6. ' tuy' → logprob: -4.905883312225342
    7. 'pipes' → logprob: -5.530883312225342
    8. ' ' → logprob: -6.405883312225342
    9. 'p' → logprob: -6.405883312225342
    10. '   ' → logprob: -6.405883312225342

Token 913: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6473366618156433
    2. ')' → logprob: -0.8973366618156433
    3. '.' → logprob: -4.522336483001709
    4. '[n' → logprob: -4.647336483001709
    5. ')
' → logprob: -4.897336483001709
    6. 'n' → logprob: -5.022336483001709
    7. ']' → logprob: -5.147336483001709
    8. '[' → logprob: -5.397336483001709
    9. 'def' → logprob: -5.647336483001709
    10. ',' → logprob: -5.897336483001709

Token 914: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2974574863910675
    2. 'n' → logprob: -1.5474574565887451
    3. 'def' → logprob: -3.172457456588745
    4. '    
' → logprob: -7.047457695007324
    5. 'import' → logprob: -7.672457695007324
    6. '(n' → logprob: -7.797457695007324
    7. '
' → logprob: -8.297457695007324
    8. ' n' → logprob: -8.797457695007324
    9. '```' → logprob: -8.797457695007324
    10. ')' → logprob: -9.797457695007324

Token 915: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016368646174669266
    2. 'n' → logprob: -4.766368865966797
    3. 'def' → logprob: -5.641368865966797
    4. 'import' → logprob: -6.516368865966797
    5. '    
' → logprob: -7.391368865966797
    6. ')' → logprob: -7.641368865966797
    7. '(n' → logprob: -7.641368865966797
    8. '<|end|>' → logprob: -8.266368865966797
    9. '#' → logprob: -9.141368865966797
    10. '    ' → logprob: -9.266368865966797

Token 916: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41768914461135864
    2. 'n' → logprob: -2.042689085006714
    3. 'def' → logprob: -2.042689085006714
    4. 'import' → logprob: -3.667689085006714
    5. '<|end|>' → logprob: -3.667689085006714
    6. '<|end|>' → logprob: -4.417689323425293
    7. '#' → logprob: -4.542689323425293
    8. 'pass' → logprob: -6.417689323425293
    9. 'if' → logprob: -6.542689323425293
    10. '(n' → logprob: -6.792689323425293

Token 917: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4493783414363861
    2. 'n' → logprob: -1.0743783712387085
    3. 'def' → logprob: -4.074378490447998
    4. ' n' → logprob: -7.199378490447998
    5. ')' → logprob: -7.324378490447998
    6. '    
' → logprob: -7.449378490447998
    7. '\n' → logprob: -8.32437801361084
    8. '#' (adapté à ' #') → logprob: -8.57437801361084
    9. '\' → logprob: -8.69937801361084
    10. 'import' → logprob: -8.94937801361084

Token 918: ' Donc' (ID: 88837)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7652090787887573
    2. 'def' → logprob: -1.2652090787887573
    3. '   ' → logprob: -1.3902090787887573
    4. 'import' → logprob: -6.265209197998047
    5. '#' → logprob: -7.515209197998047
    6. ' n' → logprob: -8.640209197998047
    7. '    
' → logprob: -8.640209197998047
    8. '\' → logprob: -9.015209197998047
    9. 'pass' → logprob: -9.140209197998047
    10. 'if' → logprob: -9.515209197998047

Token 919: ':
' (ID: 734)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2819194793701172
    2. '   ' → logprob: -2.031919479370117
    3. ' n' → logprob: -2.656919479370117
    4. 'def' → logprob: -3.906919479370117
    5. 'return' → logprob: -4.781919479370117
    6. 'pass' → logprob: -5.281919479370117
    7. '#' → logprob: -5.281919479370117
    8. ' return' → logprob: -6.531919479370117
    9. 'j' → logprob: -6.656919479370117
    10. ' pass' → logprob: -7.406919479370117

Token 920: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36029696464538574
    2. 'n' → logprob: -1.6102969646453857
    3. 'def' → logprob: -2.6102969646453857
    4. '#' → logprob: -3.8602969646453857
    5. 'import' → logprob: -5.610297203063965
    6. 'pass' → logprob: -6.610297203063965
    7. 'if' → logprob: -7.110297203063965
    8. ' n' → logprob: -7.485297203063965
    9. 'from' → logprob: -7.735297203063965
    10. '    ' → logprob: -7.735297203063965

Token 921: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24055680632591248
    2. 'n' → logprob: -1.7405568361282349
    3. 'def' → logprob: -3.7405567169189453
    4. '#' (adapté à ' #') → logprob: -4.365556716918945
    5. ' n' → logprob: -6.865556716918945
    6. 'pass' → logprob: -8.615556716918945
    7. 'import' → logprob: -8.990556716918945
    8. '    ' → logprob: -8.990556716918945
    9. '    
' → logprob: -9.365556716918945
    10. ' #' → logprob: -9.615556716918945

Token 922: ' salaire' (ID: 135427)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2703995406627655
    2. 'def' → logprob: -2.145399570465088
    3. '   ' → logprob: -2.395399570465088
    4. ' n' → logprob: -3.645399570465088
    5. '#' → logprob: -7.145399570465088
    6. ' def' → logprob: -7.270399570465088
    7. 'pass' → logprob: -7.770399570465088
    8. 'import' → logprob: -8.02039909362793
    9. 'return' → logprob: -9.14539909362793
    10. ' pass' → logprob: -9.89539909362793

Token 923: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016118241474032402
    2. '=' → logprob: -4.141118049621582
    3. '   ' → logprob: -9.891118049621582
    4. '(n' → logprob: -12.141118049621582
    5. ')' → logprob: -12.266118049621582
    6. ' ' → logprob: -12.516118049621582
    7. 'def' → logprob: -12.641118049621582
    8. ' =(' → logprob: -12.891118049621582
    9. '=n' → logprob: -13.141118049621582
    10. 's' → logprob: -13.266118049621582

Token 924: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22492781281471252
    2. ' n' → logprob: -1.7249277830123901
    3. '(n' → logprob: -4.34992790222168
    4. '   ' → logprob: -4.84992790222168
    5. ' (' → logprob: -6.09992790222168
    6. 'lambda' → logprob: -9.22492790222168
    7. ' ' → logprob: -10.47492790222168
    8. '(lambda' → logprob: -10.59992790222168
    9. ' lambda' → logprob: -10.84992790222168
    10. '(' → logprob: -11.34992790222168

Token 925: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009912493405863643
    2. ' n' → logprob: -7.000991344451904
    3. '   ' → logprob: -9.500990867614746
    4. '(n' → logprob: -14.000990867614746
    5. 'import' → logprob: -14.000990867614746
    6. '
' → logprob: -14.125990867614746
    7. 'len' → logprob: -14.125990867614746
    8. '```' → logprob: -14.375990867614746
    9. 'def' → logprob: -15.250990867614746
    10. ' ' → logprob: -15.750990867614746

Token 926: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0011599812423810363
    2. '-' → logprob: -6.876160144805908
    3. ')' → logprob: -9.25115966796875
    4. '   ' → logprob: -10.75115966796875
    5. ' ' → logprob: -12.62615966796875
    6. '    ' → logprob: -12.75115966796875
    7. ' )' → logprob: -14.25115966796875
    8. ' #' → logprob: -14.37615966796875
    9. ' ' → logprob: -14.50115966796875
    10. '  ' → logprob: -14.75115966796875

Token 927: ' nombre' (ID: 9733)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4081542491912842
    2. 'c' → logprob: -1.7831542491912842
    3. ' x' → logprob: -2.033154249191284
    4. ' c' → logprob: -3.658154249191284
    5. 'len' → logprob: -5.158154487609863
    6. ' len' → logprob: -6.533154487609863
    7. 'sum' → logprob: -7.033154487609863
    8. '   ' → logprob: -8.158154487609863
    9. '```' → logprob: -8.158154487609863
    10. ' ' → logprob: -8.283154487609863

Token 928: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.49412259459495544
    2. '_' → logprob: -1.1191226243972778
    3. '_of' → logprob: -3.3691225051879883
    4. '_des' → logprob: -4.244122505187988
    5. '_util' → logprob: -5.119122505187988
    6. '_d' → logprob: -5.619122505187988
    7. '_used' → logprob: -6.619122505187988
    8. ' de' → logprob: -7.244122505187988
    9. ')' → logprob: -7.494122505187988
    10. ')_' → logprob: -7.619122505187988

Token 929: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0022338784765452147
    2. 'j' → logprob: -6.377233982086182
    3. '_used' → logprob: -8.127233505249023
    4. '_' → logprob: -9.627233505249023
    5. '_util' → logprob: -10.377233505249023
    6. '_joint' → logprob: -10.377233505249023
    7. '   ' → logprob: -10.752233505249023
    8. '```' → logprob: -11.002233505249023
    9. '\' → logprob: -11.377233505249023
    10. 'used' → logprob: -12.002233505249023

Token 930: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.0003597760514821857
    2. 'oint' → logprob: -8.375359535217285
    3. '_used' → logprob: -9.250359535217285
    4. 'o' → logprob: -11.500359535217285
    5. '   ' → logprob: -12.375359535217285
    6. '_' → logprob: -13.000359535217285
    7. '```' → logprob: -13.125359535217285
    8. 'ints' → logprob: -13.250359535217285
    9. 'used' → logprob: -13.750359535217285
    10. 'unts' → logprob: -13.875359535217285

Token 931: '_util' (ID: 46866)
  Prédit: '_util'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.08406085520982742
    2. '_used' → logprob: -2.7090609073638916
    3. '_' → logprob: -4.3340606689453125
    4. '   ' → logprob: -8.084060668945312
    5. ')' → logprob: -8.334060668945312
    6. ')_' → logprob: -9.334060668945312
    7. ' _' → logprob: -9.834060668945312
    8. '_)' → logprob: -9.834060668945312
    9. '_use' → logprob: -10.584060668945312
    10. '[_' → logprob: -10.959060668945312

Token 932: 'isés' (ID: 58890)
  Prédit: 'isés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isés' → logprob: -0.01857152208685875
    2. 'és' → logprob: -4.268571376800537
    3. 'érés' → logprob: -5.768571376800537
    4. ' utilisés' → logprob: -7.518571376800537
    5. 's' → logprob: -9.143571853637695
    6. 'isées' → logprob: -9.268571853637695
    7. '_used' → logprob: -9.268571853637695
    8. 'zés' → logprob: -9.518571853637695
    9. 'nés' → logprob: -9.893571853637695
    10. 'es' → logprob: -10.143571853637695

Token 933: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013005275279283524
    2. '_used' → logprob: -4.513005256652832
    3. '_util' → logprob: -6.763005256652832
    4. '_)' → logprob: -8.388005256652832
    5. '   ' → logprob: -8.513005256652832
    6. ' )' → logprob: -9.263005256652832
    7. ')*' → logprob: -9.388005256652832
    8. 'used' → logprob: -9.763005256652832
    9. '_' → logprob: -10.388005256652832
    10. ')**' → logprob: -10.388005256652832

Token 934: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05156683921813965
    2. '*' → logprob: -3.6765668392181396
    3. ')' → logprob: -4.426567077636719
    4. '   ' → logprob: -4.926567077636719
    5. 'def' → logprob: -5.301567077636719
    6. '<|end|>' → logprob: -8.301567077636719
    7. '<|end|>' → logprob: -9.676567077636719
    8. '```' → logprob: -9.801567077636719
    9. ')*(' → logprob: -10.051567077636719
    10. '*(' → logprob: -10.051567077636719

Token 935: ' (' (ID: 350)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.21975603699684143
    2. ' (' → logprob: -1.844756007194519
    3. '(' → logprob: -3.8447561264038086
    4. '(sum' → logprob: -4.344756126403809
    5. 'sum' → logprob: -5.719756126403809
    6. '(s' → logprob: -7.594756126403809
    7. '   ' → logprob: -8.219756126403809
    8. 'total' → logprob: -8.344756126403809
    9. ' sum' → logprob: -8.469756126403809
    10. '(total' → logprob: -8.844756126403809

Token 936: 's' (ID: 82)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.39992594718933105
    2. '(S' → logprob: -1.399925947189331
    3. 'sum' → logprob: -2.774925947189331
    4. '(sum' → logprob: -4.52492618560791
    5. 'total' → logprob: -5.39992618560791
    6. ' (' → logprob: -6.39992618560791
    7. ' S' → logprob: -7.14992618560791
    8. '(s' → logprob: -7.39992618560791
    9. '(' → logprob: -7.77492618560791
    10. ' sum' → logprob: -7.89992618560791

Token 937: 'omme' (ID: 30420)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.35013583302497864
    2. '   ' → logprob: -2.6001358032226562
    3. '[n' → logprob: -2.7251358032226562
    4. '_' → logprob: -4.100135803222656
    5. 'def' → logprob: -4.350135803222656
    6. ')' → logprob: -4.475135803222656
    7. '_j' → logprob: -4.725135803222656
    8. '[' → logprob: -4.725135803222656
    9. '[len' → logprob: -4.725135803222656
    10. '_n' → logprob: -5.100135803222656

Token 938: '_t' (ID: 838)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.42057809233665466
    2. '_des' → logprob: -1.670578122138977
    3. 'des' → logprob: -2.9205780029296875
    4. '   ' → logprob: -3.4205780029296875
    5. '_' → logprob: -4.6705780029296875
    6. '_tot' → logprob: -4.6705780029296875
    7. 'def' → logprob: -4.7955780029296875
    8. '_p' → logprob: -4.7955780029296875
    9. '_de' → logprob: -4.7955780029296875
    10. '_total' → logprob: -5.0455780029296875

Token 939: 'uy' (ID: 3731)
  Prédit: 'uy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -0.26705703139305115
    2. '_j' → logprob: -2.267056941986084
    3. '_p' → logprob: -3.392056941986084
    4. 'j' → logprob: -4.517056941986084
    5. 'des' → logprob: -4.517056941986084
    6. '_' → logprob: -4.767056941986084
    7. 'u' → logprob: -4.767056941986084
    8. 'p' → logprob: -5.142056941986084
    9. 'def' → logprob: -5.267056941986084
    10. '_t' → logprob: -5.392056941986084

Token 940: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.5304341912269592
    2. 'es' → logprob: -1.0304341316223145
    3. 'ots' → logprob: -4.6554341316223145
    4. 'pos' → logprob: -4.9054341316223145
    5. 'pipes' → logprob: -5.2804341316223145
    6. '   ' → logprob: -5.6554341316223145
    7. '#' → logprob: -5.7804341316223145
    8. 'os' → logprob: -5.9054341316223145
    9. 'oux' → logprob: -6.0304341316223145
    10. '```' → logprob: -6.1554341316223145

Token 941: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07325513660907745
    2. '+' → logprob: -2.8232550621032715
    3. ')' → logprob: -4.6982550621032715
    4. '   ' → logprob: -6.5732550621032715
    5. '    ' → logprob: -8.44825553894043
    6. '[' → logprob: -9.44825553894043
    7. ' )' → logprob: -9.69825553894043
    8. ')+' → logprob: -9.82325553894043
    9. ' ' → logprob: -9.94825553894043
    10. '  ' → logprob: -10.44825553894043

Token 942: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04512016847729683
    2. 'x' → logprob: -3.5451202392578125
    3. ' sum' → logprob: -4.4201202392578125
    4. ' x' → logprob: -7.5451202392578125
    5. '"' → logprob: -7.7951202392578125
    6. 's' → logprob: -7.7951202392578125
    7. '   ' → logprob: -8.045120239257812
    8. '(sum' → logprob: -8.545120239257812
    9. ' somme' → logprob: -8.795120239257812
    10. ')' → logprob: -8.920120239257812

Token 943: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.2594155967235565
    2. '_des' → logprob: -2.134415626525879
    3. '_' → logprob: -2.384415626525879
    4. 'des' → logprob: -4.509415626525879
    5. '_de' → logprob: -5.759415626525879
    6. '_used' → logprob: -6.759415626525879
    7. ')' → logprob: -7.509415626525879
    8. '_t' → logprob: -7.634415626525879
    9. ')_' → logprob: -8.759415626525879
    10. 'j' → logprob: -8.759415626525879

Token 944: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.0017247996293008327
    2. 'o' → logprob: -7.126724720001221
    3. 'oint' → logprob: -7.501724720001221
    4. '_o' → logprob: -9.251725196838379
    5. '   ' → logprob: -10.251725196838379
    6. '_co' → logprob: -10.251725196838379
    7. '_used' → logprob: -10.501725196838379
    8. '```' → logprob: -10.876725196838379
    9. '_' → logprob: -11.126725196838379
    10. 'ints' → logprob: -11.376725196838379

Token 945: '_util' (ID: 46866)
  Prédit: '_util'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.24346783757209778
    2. ')' → logprob: -2.6184678077697754
    3. '_used' → logprob: -2.6184678077697754
    4. '_' → logprob: -2.8684678077697754
    5. '_)' → logprob: -4.493467807769775
    6. ')_' → logprob: -7.868467807769775
    7. 'util' → logprob: -8.618468284606934
    8. '])' → logprob: -8.618468284606934
    9. '   ' → logprob: -8.743468284606934
    10. '[' → logprob: -8.993468284606934

Token 946: 'isés' (ID: 58890)
  Prédit: 'isés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isés' → logprob: -0.004497535061091185
    2. 'isées' → logprob: -5.879497528076172
    3. 'is' → logprob: -6.879497528076172
    4. 'ises' → logprob: -8.129497528076172
    5. 'es' → logprob: -9.129497528076172
    6. 's' → logprob: -9.379497528076172
    7. '```' → logprob: -10.254497528076172
    8. 'isée' → logprob: -10.254497528076172
    9. 'isé' → logprob: -11.004497528076172
    10. 't' → logprob: -11.254497528076172

Token 947: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049843188375234604
    2. '   ' → logprob: -3.1748430728912354
    3. '))' → logprob: -6.1748433113098145
    4. ')
' → logprob: -6.9248433113098145
    5. ')**' → logprob: -7.0498433113098145
    6. 'def' → logprob: -7.1748433113098145
    7. '[j' → logprob: -8.174842834472656
    8. ' +' → logprob: -8.299842834472656
    9. ')`' → logprob: -8.424842834472656
    10. ' )' → logprob: -8.924842834472656

Token 948: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3313533365726471
    2. ':' → logprob: -2.0813534259796143
    3. '(n' → logprob: -2.7063534259796143
    4. 'def' → logprob: -3.3313534259796143
    5. 'n' → logprob: -3.4563534259796143
    6. '[n' → logprob: -5.331353187561035
    7. '[' → logprob: -5.956353187561035
    8. ')' → logprob: -5.956353187561035
    9. ':
' → logprob: -6.331353187561035
    10. '(' → logprob: -6.456353187561035

Token 949: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16575613617897034
    2. 'def' → logprob: -2.0407562255859375
    3. 'n' → logprob: -4.0407562255859375
    4. '(n' → logprob: -6.4157562255859375
    5. '    
' → logprob: -7.0407562255859375
    6. 'import' → logprob: -7.1657562255859375
    7. ':' → logprob: -8.165756225585938
    8. 'if' → logprob: -8.290756225585938
    9. '#' → logprob: -8.790756225585938
    10. '.' → logprob: -8.790756225585938

Token 950: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35133054852485657
    2. 'n' → logprob: -1.3513305187225342
    3. 'def' → logprob: -3.351330518722534
    4. '    
' → logprob: -6.601330757141113
    5. 'import' → logprob: -8.226330757141113
    6. 'if' → logprob: -8.476330757141113
    7. ' n' → logprob: -9.226330757141113
    8. '```' → logprob: -9.351330757141113
    9. 'pass' → logprob: -9.601330757141113
    10. '#' → logprob: -9.851330757141113

Token 951: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09402000904083252
    2. '   ' → logprob: -2.844019889831543
    3. 'def' → logprob: -3.469019889831543
    4. 'import' → logprob: -8.969019889831543
    5. '    
' → logprob: -9.094019889831543
    6. ' n' → logprob: -9.344019889831543
    7. '```' → logprob: -11.344019889831543
    8. '#' (adapté à ' #') → logprob: -11.844019889831543
    9. 'p' → logprob: -12.094019889831543
    10. 'from' → logprob: -12.094019889831543

Token 952: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.080909863114357
    2. '   ' → logprob: -3.2059099674224854
    3. 'def' → logprob: -3.3309099674224854
    4. 'pass' → logprob: -7.205909729003906
    5. '#' → logprob: -7.955909729003906
    6. ' n' → logprob: -8.955909729003906
    7. 'import' → logprob: -9.580909729003906
    8. '    
' → logprob: -9.580909729003906
    9. 'from' → logprob: -10.705909729003906
    10. '```' → logprob: -11.455909729003906

Token 953: ' doit' (ID: 21822)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3750130832195282
    2. '=' → logprob: -1.6250131130218506
    3. '.' → logprob: -3.3750131130218506
    4. '_' → logprob: -3.6250131130218506
    5. '#' → logprob: -3.8750131130218506
    6. ' ' → logprob: -5.0000128746032715
    7. '   ' → logprob: -5.0000128746032715
    8. ' #' → logprob: -5.1250128746032715
    9. 'def' → logprob: -5.5000128746032715
    10. '[' → logprob: -6.1250128746032715

Token 954: ' choisir' (ID: 47004)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30712345242500305
    2. '=' → logprob: -2.0571234226226807
    3. '   ' → logprob: -2.4321234226226807
    4. ' choisir' → logprob: -3.9321234226226807
    5. ':' → logprob: -4.93212366104126
    6. ' continuer' → logprob: -5.05712366104126
    7. '_' → logprob: -5.80712366104126
    8. '#' → logprob: -6.55712366104126
    9. 'def' → logprob: -6.68212366104126
    10. 'n' → logprob: -7.18212366104126

Token 955: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7364732027053833
    2. 'n' → logprob: -1.2364732027053833
    3. 'def' → logprob: -1.4864732027053833
    4. ' n' → logprob: -5.736473083496094
    5. '(n' → logprob: -8.486473083496094
    6. 'import' → logprob: -8.861473083496094
    7. ' ' → logprob: -8.861473083496094
    8. '#' → logprob: -8.986473083496094
    9. 'une' → logprob: -8.986473083496094
    10. '  ' → logprob: -9.611473083496094

Token 956: ' sous' (ID: 14487)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1844077706336975
    2. 's' → logprob: -2.4344077110290527
    3. ' ' → logprob: -3.6844077110290527
    4. ' _' → logprob: -3.8094077110290527
    5. '_s' → logprob: -4.809407711029053
    6. '   ' → logprob: -5.559407711029053
    7. ' sous' → logprob: -5.809407711029053
    8. '#' → logprob: -6.309407711029053
    9. 'subset' → logprob: -6.309407711029053
    10. ' ' → logprob: -6.434407711029053

Token 957: '-' (ID: 12)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17899854481220245
    2. '_' → logprob: -2.1789984703063965
    3. 'def' → logprob: -3.9289984703063965
    4. '#' → logprob: -4.0539984703063965
    5. '_j' → logprob: -5.4289984703063965
    6. '
' → logprob: -6.4289984703063965
    7. '_n' → logprob: -6.8039984703063965
    8. '`' → logprob: -7.9289984703063965
    9. '```' → logprob: -7.9289984703063965
    10. 'ensemble' → logprob: -8.053998947143555

Token 958: 'ensemble' (ID: 37301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001474152784794569
    2. 'ensemble' → logprob: -6.751474380493164
    3. '_co' → logprob: -9.251474380493164
    4. '\' → logprob: -10.626474380493164
    5. '_j' → logprob: -10.626474380493164
    6. ' _' → logprob: -10.876474380493164
    7. '_\' → logprob: -11.001474380493164
    8. 's' → logprob: -11.251474380493164
    9. 'co' → logprob: -11.376474380493164
    10. 'ense' → logprob: -11.501474380493164

Token 959: ' cont' (ID: 836)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3829376697540283
    2. 'def' → logprob: -2.2579376697540283
    3. '_des' → logprob: -2.6329376697540283
    4. 'des' → logprob: -3.0079376697540283
    5. '_j' → logprob: -3.7579376697540283
    6. ' des' → logprob: -3.8829376697540283
    7. '[n' → logprob: -4.882937431335449
    8. '[]' → logprob: -5.382937431335449
    9. 'd' → logprob: -5.382937431335449
    10. '_' → logprob: -5.382937431335449

Token 960: 'igu' (ID: 12143)
  Prédit: 'inu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inu' → logprob: -0.892047643661499
    2. 'in' → logprob: -1.142047643661499
    3. 'iguous' → logprob: -1.767047643661499
    4. 'igu' → logprob: -3.267047643661499
    5. 'ig' → logprob: -4.267047882080078
    6. 'u' → logprob: -4.642047882080078
    7. '   ' → logprob: -5.642047882080078
    8. '_' → logprob: -5.767047882080078
    9. 'j' → logprob: -5.767047882080078
    10. 'set' → logprob: -5.892047882080078

Token 961: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.047371022403240204
    2. ' _' → logprob: -4.547370910644531
    3. '[' → logprob: -5.172370910644531
    4. '_j' → logprob: -5.297370910644531
    5. ')' → logprob: -5.422370910644531
    6. ' de' → logprob: -5.797370910644531
    7. '[]' → logprob: -6.047370910644531
    8. '   ' → logprob: -6.047370910644531
    9. ' des' → logprob: -6.297370910644531
    10. 'de' → logprob: -6.672370910644531

Token 962: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17883238196372986
    2. ' j' → logprob: -2.3038322925567627
    3. ' joints' → logprob: -2.9288322925567627
    4. '_j' → logprob: -6.178832530975342
    5. ' la' → logprob: -6.428832530975342
    6. 'l' → logprob: -6.553832530975342
    7. 'joint' → logprob: -6.803832530975342
    8. ' ' → logprob: -7.053832530975342
    9. ' l' → logprob: -7.428832530975342
    10. ' ' → logprob: -7.678832530975342

Token 963: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5217103362083435
    2. ':' → logprob: -2.5217103958129883
    3. '[' → logprob: -2.5217103958129883
    4. 's' → logprob: -2.6467103958129883
    5. '[n' → logprob: -2.8967103958129883
    6. 'def' → logprob: -3.0217103958129883
    7. ']' → logprob: -3.5217103958129883
    8. ' =' → logprob: -4.771710395812988
    9. '[]' → logprob: -4.896710395812988
    10. ',' → logprob: -5.146710395812988

Token 964: ' utiliser' (ID: 43227)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5298807621002197
    2. ' utiliser' → logprob: -0.9048807621002197
    3. ' used' → logprob: -6.154880523681641
    4. 'used' → logprob: -6.654880523681641
    5. ' choisir' → logprob: -7.029880523681641
    6. ''utiliser' → logprob: -8.15488052368164
    7. '#' → logprob: -8.40488052368164
    8. ' ajouter' → logprob: -8.52988052368164
    9. 'rel' → logprob: -8.90488052368164
    10. 'mettre' → logprob: -9.02988052368164

Token 965: '?' (ID: 30)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8001534938812256
    2. '   ' → logprob: -1.5501534938812256
    3. '[' → logprob: -2.1751534938812256
    4. '[n' → logprob: -2.1751534938812256
    5. 's' → logprob: -2.8001534938812256
    6. 'def' → logprob: -4.300153732299805
    7. ']' → logprob: -4.425153732299805
    8. '[
' → logprob: -5.425153732299805
    9. ',' → logprob: -5.550153732299805
    10. '[i' → logprob: -5.800153732299805

Token 966: ' Non' (ID: 13763)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8895519375801086
    2. 'No' → logprob: -1.1395518779754639
    3. ' No' → logprob: -2.764551877975464
    4. 'Yes' → logprob: -3.014551877975464
    5. '<|end|>' → logprob: -3.514551877975464
    6. ' Yes' → logprob: -4.264552116394043
    7. '(n' → logprob: -4.264552116394043
    8. ' no' → logprob: -4.639552116394043
    9. '[' → logprob: -4.764552116394043
    10. '#' → logprob: -4.764552116394043

Token 967: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2129056304693222
    2. ':' → logprob: -1.9629056453704834
    3. '[' → logprob: -4.712905406951904
    4. '<|end|>' → logprob: -4.837905406951904
    5. ')' → logprob: -4.962905406951904
    6. '[n' → logprob: -5.087905406951904
    7. '(n' → logprob: -5.462905406951904
    8. '):' → logprob: -5.962905406951904
    9. ',' → logprob: -6.212905406951904
    10. '.' → logprob: -6.337905406951904

Token 968: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 969: ' peut' (ID: 9216)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 970: ' utiliser' (ID: 43227)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.07161148637533188
    2. 'cho' → logprob: -2.9466114044189453
    3. ' utiliser' → logprob: -5.071611404418945
    4. 'util' → logprob: -5.196611404418945
    5. 'choose' → logprob: -7.071611404418945
    6. 'contin' → logprob: -7.696611404418945
    7. ' ' → logprob: -7.696611404418945
    8. ' chois' → logprob: -7.821611404418945
    9. ' continuer' → logprob: -7.821611404418945
    10. ' choose' → logprob: -8.071611404418945

Token 971: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0069450680166482925
    2. 'n' → logprob: -5.1319451332092285
    3. ' any' → logprob: -7.3819451332092285
    4. ' tous' → logprob: -9.00694465637207
    5. 'any' → logprob: -9.25694465637207
    6. ' ' → logprob: -10.38194465637207
    7. ' quelcon' → logprob: -10.50694465637207
    8. '_any' → logprob: -10.63194465637207
    9. 't' → logprob: -10.75694465637207
    10. ' les' → logprob: -10.88194465637207

Token 972: ''importe' (ID: 103032)
  Prédit: ''importe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''importe' → logprob: -0.019442792981863022
    2. 'importe' → logprob: -4.144442558288574
    3. ''' → logprob: -6.769442558288574
    4. ''import' → logprob: -6.894442558288574
    5. '’importe' → logprob: -7.519442558288574
    6. 'import' → logprob: -8.269442558288574
    7. '''' → logprob: -8.519442558288574
    8. '```' → logprob: -10.144442558288574
    9. ''imp' → logprob: -10.644442558288574
    10. ''im' → logprob: -10.894442558288574

Token 973: ' lesquels' (ID: 106476)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.3235317468643188
    2. 'import' → logprob: -1.8235317468643188
    3. 'pas' → logprob: -1.8235317468643188
    4. '```' → logprob: -2.0735316276550293
    5. '   ' → logprob: -3.5735316276550293
    6. '       ' → logprob: -4.073531627655029
    7. '#' → logprob: -4.073531627655029
    8. '`' → logprob: -4.073531627655029
    9. '[' → logprob: -4.198531627655029
    10. ' ' → logprob: -4.323531627655029

Token 974: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2757225036621094
    2. '<|end|>' → logprob: -1.7757225036621094
    3. 'def' → logprob: -1.9007225036621094
    4. ',' → logprob: -2.7757225036621094
    5. ')' → logprob: -2.9007225036621094
    6. '[n' → logprob: -2.9007225036621094
    7. ':' → logprob: -3.0257225036621094
    8. '<|end|>' → logprob: -3.1507225036621094
    9. '[' → logprob: -3.6507225036621094
    10. '.' → logprob: -3.7757225036621094

Token 975: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01962737739086151
    2. ':' → logprob: -4.519627571105957
    3. ')' → logprob: -6.019627571105957
    4. '):' → logprob: -6.519627571105957
    5. 'def' → logprob: -6.894627571105957
    6. '       ' → logprob: -7.269627571105957
    7. '(n' → logprob: -7.894627571105957
    8. '.' → logprob: -8.019627571105957
    9. '<|end|>' → logprob: -8.019627571105957
    10. '    ' → logprob: -8.394627571105957

Token 976: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11980631947517395
    2. '#' (adapté à ' #') → logprob: -3.1198062896728516
    3. ':' → logprob: -3.1198062896728516
    4. 'pass' → logprob: -4.994806289672852
    5. ' #' → logprob: -5.744806289672852
    6. ')' → logprob: -5.744806289672852
    7. '):' → logprob: -5.869806289672852
    8. 'n' → logprob: -7.119806289672852
    9. 'def' → logprob: -7.119806289672852
    10. '    ' → logprob: -7.244806289672852

Token 977: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06083820387721062
    2. 'n' → logprob: -4.060838222503662
    3. 'def' → logprob: -4.060838222503662
    4. '#' → logprob: -4.310838222503662
    5. 'j' → logprob: -5.810838222503662
    6. 'pass' → logprob: -6.310838222503662
    7. ':' → logprob: -7.060838222503662
    8. '    ' → logprob: -7.185838222503662
    9. '       ' → logprob: -7.185838222503662
    10. ' n' → logprob: -7.435838222503662

Token 978: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.089017391204834
    2. 'n' → logprob: -1.464017391204834
    3. 'def' → logprob: -1.589017391204834
    4. ' n' → logprob: -2.464017391204834
    5. '#' → logprob: -3.464017391204834
    6. ' il' → logprob: -3.839017391204834
    7. 'il' → logprob: -4.589017391204834
    8. ' on' → logprob: -4.714017391204834
    9. 'pass' → logprob: -4.839017391204834
    10. 'import' → logprob: -4.839017391204834

Token 979: ' joints' (ID: 47223)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7568768858909607
    2. 'def' → logprob: -1.5068769454956055
    3. 'n' → logprob: -2.6318769454956055
    4. ' joints' → logprob: -3.1318769454956055
    5. 'j' → logprob: -3.7568769454956055
    6. ' =' → logprob: -3.8818769454956055
    7. 'joint' → logprob: -3.8818769454956055
    8. ' #' → logprob: -4.1318769454956055
    9. ' n' → logprob: -4.2568769454956055
    10. 'indices' → logprob: -4.6318769454956055

Token 980: ' ne' (ID: 453)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.7298698425292969
    2. '<|end|>' → logprob: -1.7298698425292969
    3. ')' → logprob: -1.9798698425292969
    4. ' ' → logprob: -2.854869842529297
    5. ' used' → logprob: -2.979869842529297
    6. '#' → logprob: -2.979869842529297
    7. '[' → logprob: -2.979869842529297
    8. 'used' → logprob: -3.354869842529297
    9. '   ' → logprob: -3.479869842529297
    10. ' utilisés' → logprob: -3.854869842529297

Token 981: ' peuvent' (ID: 21321)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7785139083862305
    2. ' peuvent' → logprob: -1.7785139083862305
    3. ' pas' → logprob: -2.0285139083862305
    4. 'pas' → logprob: -2.0285139083862305
    5. 's' → logprob: -2.5285139083862305
    6. '[' → logprob: -2.9035139083862305
    7. ' sont' → logprob: -2.9035139083862305
    8. ''' → logprob: -3.6535139083862305
    9. ' doivent' → logprob: -3.9035139083862305
    10. ' can' → logprob: -4.0285139083862305

Token 982: ' connecter' (ID: 85351)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.09574626386165619
    2. ' être' → logprob: -3.2207462787628174
    3. 'pas' → logprob: -3.7207462787628174
    4. ' be' → logprob: -4.470746040344238
    5. '_pas' → logprob: -5.470746040344238
    6. 'être' → logprob: -5.845746040344238
    7. '_' → logprob: -6.095746040344238
    8. ' jamais' → logprob: -6.220746040344238
    9. ' ' → logprob: -7.220746040344238
    10. ''être' → logprob: -7.345746040344238

Token 983: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.15012270212173462
    2. ' pas' → logprob: -2.65012264251709
    3. ' deux' → logprob: -3.77512264251709
    4. 'que' → logprob: -4.02512264251709
    5. 'pas' → logprob: -4.90012264251709
    6. 'de' → logprob: -5.15012264251709
    7. ' des' → logprob: -5.27512264251709
    8. 'se' → logprob: -5.90012264251709
    9. ' aucun' → logprob: -7.15012264251709
    10. ' plus' → logprob: -7.15012264251709

Token 984: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6934406757354736
    2. ' deux' → logprob: -1.6934406757354736
    3. 'adj' → logprob: -2.3184406757354736
    4. 'des' → logprob: -2.3184406757354736
    5. 'de' → logprob: -3.0684406757354736
    6. ' cons' → logprob: -3.8184406757354736
    7. 't' → logprob: -4.6934404373168945
    8. 'con' → logprob: -4.9434404373168945
    9. ' adjacent' → logprob: -5.3184404373168945
    10. ' les' → logprob: -5.4434404373168945

Token 985: ' tuy' (ID: 45164)
  Prédit: ' tuy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuy' → logprob: -0.14655715227127075
    2. ' espaces' → logprob: -3.771557092666626
    3. 't' → logprob: -3.896557092666626
    4. ' voisins' → logprob: -4.646557331085205
    5. ' pipes' → logprob: -4.771557331085205
    6. ' _' → logprob: -4.771557331085205
    7. '_' → logprob: -5.021557331085205
    8. ' ' → logprob: -5.271557331085205
    9. 'adj' → logprob: -5.396557331085205
    10. 'con' → logprob: -5.521557331085205

Token 986: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.5258306860923767
    2. '[]' → logprob: -1.6508307456970215
    3. '[' → logprob: -2.4008307456970215
    4. '[i' → logprob: -3.1508307456970215
    5. ']' → logprob: -3.5258307456970215
    6. '```' → logprob: -3.9008307456970215
    7. 'ots' → logprob: -5.4008307456970215
    8. 'otes' → logprob: -5.5258307456970215
    9. 'es' → logprob: -5.7758307456970215
    10. '[-' → logprob: -6.0258307456970215

Token 987: ' adj' (ID: 20251)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5922190546989441
    2. '[' → logprob: -1.2172191143035889
    3. '   ' → logprob: -2.342219114303589
    4. '[
' → logprob: -4.34221887588501
    5. ']' → logprob: -4.46721887588501
    6. ')' → logprob: -4.96721887588501
    7. '_used' → logprob: -5.71721887588501
    8. '```' → logprob: -5.84221887588501
    9. '.' → logprob: -6.09221887588501
    10. '[n' → logprob: -6.21721887588501

Token 988: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.10260000824928284
    2. 'acent' → logprob: -3.10260009765625
    3. '```' → logprob: -4.10260009765625
    4. ']' → logprob: -4.47760009765625
    5. 'oints' → logprob: -5.22760009765625
    6. '[' → logprob: -5.85260009765625
    7. '[i' → logprob: -6.47760009765625
    8. '{' → logprob: -6.47760009765625
    9. ')' → logprob: -6.60260009765625
    10. '[]' → logprob: -6.60260009765625

Token 989: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.006078940816223621
    2. 'ent' → logprob: -5.131078720092773
    3. 'entes' → logprob: -9.506078720092773
    4. 'es' → logprob: -10.756078720092773
    5. '```' → logprob: -11.131078720092773
    6. '#' → logprob: -11.631078720092773
    7. '   ' → logprob: -12.256078720092773
    8. 'ente' → logprob: -12.381078720092773
    9. 'e' → logprob: -13.006078720092773
    10. '##' → logprob: -13.131078720092773

Token 990: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46554821729660034
    2. 'def' → logprob: -1.3405482769012451
    3. ')' → logprob: -3.590548276901245
    4. '[' → logprob: -3.965548276901245
    5. ']' → logprob: -4.340548038482666
    6. '.' → logprob: -4.465548038482666
    7. ':' → logprob: -4.465548038482666
    8. ',' → logprob: -5.965548038482666
    9. '[n' → logprob: -6.090548038482666
    10. '[i' → logprob: -6.215548038482666

Token 991: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4313885569572449
    2. '   ' → logprob: -1.3063886165618896
    3. 'n' → logprob: -3.1813886165618896
    4. ':' → logprob: -4.0563883781433105
    5. 'if' → logprob: -4.8063883781433105
    6. '(n' → logprob: -5.6813883781433105
    7. '\' → logprob: -5.8063883781433105
    8. ' n' → logprob: -7.1813883781433105
    9. 'import' → logprob: -7.3063883781433105
    10. '[n' → logprob: -7.4313883781433105

Token 992: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07350847870111465
    2. '   ' → logprob: -2.9485085010528564
    3. 'n' → logprob: -4.573508262634277
    4. 'if' → logprob: -6.073508262634277
    5. '(n' → logprob: -6.448508262634277
    6. 'import' → logprob: -6.698508262634277
    7. '\' → logprob: -6.823508262634277
    8. '```' → logprob: -7.698508262634277
    9. '\n' → logprob: -8.198508262634277
    10. '#' → logprob: -8.198508262634277

Token 993: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18183517456054688
    2. '   ' → logprob: -2.431835174560547
    3. 'if' → logprob: -3.181835174560547
    4. 'n' → logprob: -3.306835174560547
    5. '    
' → logprob: -9.431835174560547
    6. 'import' → logprob: -9.931835174560547
    7. ' if' → logprob: -10.181835174560547
    8. '```' → logprob: -10.306835174560547
    9. ' n' → logprob: -11.056835174560547
    10. '\' → logprob: -12.431835174560547

Token 994: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15667444467544556
    2. 'def' → logprob: -2.031674385070801
    3. '   ' → logprob: -5.031674385070801
    4. 'if' → logprob: -5.156674385070801
    5. ':' → logprob: -7.281674385070801
    6. '#' (adapté à ' #') → logprob: -8.2816743850708
    7. 'pass' → logprob: -8.5316743850708
    8. 'import' → logprob: -9.1566743850708
    9. ' n' → logprob: -9.6566743850708
    10. '(n' → logprob: -9.9066743850708

Token 995: ' étant' (ID: 47869)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22381968796253204
    2. 'n' → logprob: -1.7238197326660156
    3. '   ' → logprob: -4.098819732666016
    4. '#' → logprob: -6.223819732666016
    5. 'if' → logprob: -6.473819732666016
    6. 'import' → logprob: -7.098819732666016
    7. 'pass' → logprob: -7.223819732666016
    8. ' n' → logprob: -8.598819732666016
    9. 'from' → logprob: -9.348819732666016
    10. '```' → logprob: -10.098819732666016

Token 996: ' donné' (ID: 52079)
  Prédit: ' donné'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donné' → logprob: -0.2532972991466522
    2. 'def' → logprob: -2.1282973289489746
    3. 'don' → logprob: -2.5032973289489746
    4. '=' → logprob: -5.753297328948975
    5. 'à' → logprob: -6.003297328948975
    6. ' donnée' → logprob: -6.378297328948975
    7. '_' → logprob: -6.628297328948975
    8. 'pas' → logprob: -6.628297328948975
    9. 'n' → logprob: -6.753297328948975
    10. 'data' → logprob: -7.128297328948975

Token 997: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20065937936306
    2. 'n' → logprob: -1.9506593942642212
    3. ' ' → logprob: -4.450659275054932
    4. 'def' → logprob: -4.950659275054932
    5. ' n' → logprob: -5.325659275054932
    6. ',' → logprob: -5.575659275054932
    7. '    ' → logprob: -5.700659275054932
    8. '(n' → logprob: -6.325659275054932
    9. ')' → logprob: -7.075659275054932
    10. '_' → logprob: -7.200659275054932

Token 998: ' position' (ID: 4010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22514435648918152
    2. 'def' → logprob: -2.100144386291504
    3. 'tail' → logprob: -4.100144386291504
    4. '#' → logprob: -4.225144386291504
    5. ' ' → logprob: -4.475144386291504
    6. ' n' → logprob: -4.600144386291504
    7. 'len' → logprob: -5.225144386291504
    8. 't' → logprob: -5.850144386291504
    9. '   ' → logprob: -5.975144386291504
    10. 's' → logprob: -6.100144386291504

Token 999: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.245008945465088
    2. ' des' → logprob: -1.370008945465088
    3. 's' → logprob: -1.995008945465088
    4. 'des' → logprob: -3.120008945465088
    5. '   ' → logprob: -3.245008945465088
    6. 'n' → logprob: -3.370008945465088
    7. 'de' → logprob: -3.620008945465088
    8. ' de' → logprob: -3.745008945465088
    9. ' ' → logprob: -3.995008945465088
    10. ',' → logprob: -3.995008945465088

Token 1000: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9474070072174072
    2. 'j' → logprob: -0.9474070072174072
    3. '_j' → logprob: -2.3224070072174072
    4. 't' → logprob: -3.3224070072174072
    5. ' ' → logprob: -3.5724070072174072
    6. 'n' → logprob: -4.572406768798828
    7. '\' → logprob: -4.697406768798828
    8. ' _' → logprob: -5.447406768798828
    9. ' ' → logprob: -5.447406768798828
    10. '#' → logprob: -5.572406768798828

Token 1001: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4928683638572693
    2. ' =' → logprob: -1.742868423461914
    3. 'def' → logprob: -2.617868423461914
    4. 'n' → logprob: -3.117868423461914
    5. ':' → logprob: -3.617868423461914
    6. ',' → logprob: -3.617868423461914
    7. '=' → logprob: -3.992868423461914
    8. '```' → logprob: -5.867868423461914
    9. ',
' → logprob: -5.992868423461914
    10. '#' → logprob: -5.992868423461914

Token 1002: ' ceux' (ID: 26863)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16745223104953766
    2. '   ' → logprob: -2.292452335357666
    3. 'def' → logprob: -3.292452335357666
    4. ' n' → logprob: -4.792452335357666
    5. 'pass' → logprob: -5.292452335357666
    6. '#' → logprob: -6.917452335357666
    7. 'j' → logprob: -8.042451858520508
    8. ' pass' → logprob: -8.167451858520508
    9. 'return' → logprob: -8.167451858520508
    10. '    
' → logprob: -9.542451858520508

Token 1003: '-ci' (ID: 27301)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7382477521896362
    2. '=' → logprob: -1.9882477521896362
    3. '[' → logprob: -2.113247871398926
    4. '_' → logprob: -2.488247871398926
    5. 'def' → logprob: -3.363247871398926
    6. '[n' → logprob: -3.738247871398926
    7. '[]' → logprob: -3.863247871398926
    8. 's' → logprob: -3.863247871398926
    9. '.' → logprob: -4.988247871398926
    10. '[i' → logprob: -5.113247871398926

Token 1004: ' sont' (ID: 5242)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.98936927318573
    2. '[' → logprob: -1.61436927318573
    3. ' =' → logprob: -2.3643693923950195
    4. '<|end|>' → logprob: -2.3643693923950195
    5. ')' → logprob: -2.6143693923950195
    6. ',' → logprob: -3.2393693923950195
    7. 's' → logprob: -3.9893693923950195
    8. '=' → logprob: -4.1143693923950195
    9. '[n' → logprob: -4.2393693923950195
    10. '.' → logprob: -4.3643693923950195

Token 1005: ' entre' (ID: 3853)
  Prédit: ' donn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' donn' → logprob: -1.383314609527588
    2. 'd' → logprob: -2.258314609527588
    3. 'strict' → logprob: -2.258314609527588
    4. 'import' → logprob: -2.383314609527588
    5. 'tou' → logprob: -2.883314609527588
    6. 'des' → logprob: -3.133314609527588
    7. 'dans' → logprob: -3.258314609527588
    8. 'dé' → logprob: -3.508314609527588
    9. 'en' → logprob: -3.508314609527588
    10. 'de' → logprob: -3.758314609527588

Token 1006: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6425257325172424
    2. 'les' → logprob: -1.2675256729125977
    3. 'i' → logprob: -2.7675256729125977
    4. ' les' → logprob: -3.0175256729125977
    5. ' p' → logprob: -3.3925256729125977
    6. ' i' → logprob: -4.642525672912598
    7. 't' → logprob: -4.892525672912598
    8. 'de' → logprob: -5.142525672912598
    9. ' ' → logprob: -5.517525672912598
    10. 'pipes' → logprob: -6.142525672912598

Token 1007: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0524325966835022
    2. '[' → logprob: -3.0524325370788574
    3. '[n' → logprob: -6.177432537078857
    4. 's' → logprob: -6.927432537078857
    5. '[
' → logprob: -9.052433013916016
    6. 'def' → logprob: -9.052433013916016
    7. ' =' → logprob: -9.427433013916016
    8. 'i' → logprob: -9.552433013916016
    9. '[]' → logprob: -9.802433013916016
    10. '[len' → logprob: -9.927433013916016

Token 1008: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029457692056894302
    2. '],' → logprob: -3.9044578075408936
    3. '+' → logprob: -5.0294575691223145
    4. '-' → logprob: -6.7794575691223145
    5. '[i' → logprob: -7.4044575691223145
    6. '   ' → logprob: -8.904458045959473
    7. '[' → logprob: -9.279458045959473
    8. ' ]' → logprob: -9.529458045959473
    9. '])' → logprob: -10.154458045959473
    10. '][' → logprob: -10.154458045959473

Token 1009: ' et' (ID: 859)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27945905923843384
    2. '+' → logprob: -1.779458999633789
    3. '[i' → logprob: -3.654458999633789
    4. '],' → logprob: -3.654458999633789
    5. '   ' → logprob: -4.904458999633789
    6. '-' → logprob: -4.904458999633789
    7. ' +' → logprob: -5.654458999633789
    8. ']
' → logprob: -7.154458999633789
    9. 's' → logprob: -7.279458999633789
    10. '[' → logprob: -7.529458999633789

Token 1010: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02233704924583435
    2. ' p' → logprob: -3.897336959838867
    3. 'i' → logprob: -6.397336959838867
    4. ' i' → logprob: -9.647336959838867
    5. 'j' → logprob: -10.272336959838867
    6. ' ' → logprob: -11.397336959838867
    7. '   ' → logprob: -11.647336959838867
    8. '[i' → logprob: -12.272336959838867
    9. ' ' → logprob: -14.272336959838867
    10. '```' → logprob: -14.272336959838867

Token 1011: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005456457729451358
    2. 'i' → logprob: -7.875545501708984
    3. '[' → logprob: -9.000545501708984
    4. '+' → logprob: -10.750545501708984
    5. 'p' → logprob: -12.000545501708984
    6. '[p' → logprob: -12.500545501708984
    7. '(i' → logprob: -13.250545501708984
    8. '[j' → logprob: -13.500545501708984
    9. '][' → logprob: -13.750545501708984
    10. '```' → logprob: -13.875545501708984

Token 1012: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6563616991043091
    2. ']' → logprob: -0.7813616991043091
    3. '-' → logprob: -4.0313615798950195
    4. '],' → logprob: -6.4063615798950195
    5. '[i' → logprob: -6.9063615798950195
    6. ']
' → logprob: -7.0313615798950195
    7. ']+' → logprob: -7.1563615798950195
    8. '   ' → logprob: -7.9063615798950195
    9. '[' → logprob: -7.9063615798950195
    10. '+]' → logprob: -9.15636157989502

Token 1013: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ']' → logprob: -12.125012397766113
    3. '+' → logprob: -12.625012397766113
    4. ' ' → logprob: -13.375012397766113
    5. '```' → logprob: -14.750012397766113
    6. '2' → logprob: -14.875012397766113
    7. '
' → logprob: -15.000012397766113
    8. ']+' → logprob: -15.687512397766113
    9. '   ' → logprob: -16.06251335144043
    10. 'i' → logprob: -16.31251335144043

Token 1014: '].
' (ID: 49887)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.15944324433803558
    2. ']' → logprob: -2.0344431400299072
    3. ')' → logprob: -4.909443378448486
    4. '])
' → logprob: -5.784443378448486
    5. '[i' → logprob: -6.034443378448486
    6. '],' → logprob: -6.909443378448486
    7. '   ' → logprob: -6.909443378448486
    8. 'i' → logprob: -8.534442901611328
    9. ']),' → logprob: -8.659442901611328
    10. ']
' → logprob: -8.784442901611328

Token 1015: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06398940831422806
    2. 'def' → logprob: -3.0639894008636475
    3. 'n' → logprob: -4.313989639282227
    4. 'import' → logprob: -7.188989639282227
    5. '(n' → logprob: -8.188989639282227
    6. ')' → logprob: -8.438989639282227
    7. '    
' → logprob: -8.938989639282227
    8. ' n' → logprob: -9.313989639282227
    9. '```' → logprob: -9.438989639282227
    10. 'if' → logprob: -9.563989639282227

Token 1016: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36175623536109924
    2. '   ' → logprob: -1.3617562055587769
    3. 'n' → logprob: -3.6117563247680664
    4. 'import' → logprob: -4.486756324768066
    5. 'if' → logprob: -4.986756324768066
    6. '#' → logprob: -6.611756324768066
    7. '(n' → logprob: -8.611756324768066
    8. 'from' → logprob: -8.736756324768066
    9. '```' → logprob: -9.361756324768066
    10. ' n' → logprob: -9.611756324768066

Token 1017: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6438640356063843
    2. 'def' → logprob: -1.2688640356063843
    3. '   ' → logprob: -1.6438640356063843
    4. ' n' → logprob: -9.018863677978516
    5. 'import' → logprob: -9.143863677978516
    6. '    
' → logprob: -10.143863677978516
    7. '```' → logprob: -10.393863677978516
    8. '#' → logprob: -10.643863677978516
    9. 'if' → logprob: -11.268863677978516
    10. ' def' → logprob: -12.393863677978516

Token 1018: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40774357318878174
    2. '   ' → logprob: -1.1577435731887817
    3. 'def' → logprob: -3.907743453979492
    4. '#' (adapté à ' #') → logprob: -8.157743453979492
    5. 'import' → logprob: -9.157743453979492
    6. ' n' → logprob: -9.407743453979492
    7. '    
' → logprob: -10.032743453979492
    8. '```' → logprob: -10.907743453979492
    9. 'from' → logprob: -12.032743453979492
    10. 'if' → logprob: -12.282743453979492

Token 1019: ' En' (ID: 2130)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7214385867118835
    2. 'def' → logprob: -0.7214385867118835
    3. '   ' → logprob: -3.5964386463165283
    4. 'return' → logprob: -9.22143840789795
    5. '#' → logprob: -9.72143840789795
    6. ' n' → logprob: -9.72143840789795
    7. 'from' → logprob: -9.72143840789795
    8. '    
' → logprob: -10.34643840789795
    9. 'import' → logprob: -10.34643840789795
    10. 'if' → logprob: -10.34643840789795

Token 1020: ' résumé' (ID: 140184)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6965003609657288
    2. 'suite' → logprob: -1.071500301361084
    3. 'n' → logprob: -2.446500301361084
    4. '#' → logprob: -4.196500301361084
    5. 't' → logprob: -4.821500301361084
    6. 'range' → logprob: -5.196500301361084
    7. '
' → logprob: -5.696500301361084
    8. ' n' → logprob: -5.821500301361084
    9. ' résumé' → logprob: -5.821500301361084
    10. 's' → logprob: -5.946500301361084

Token 1021: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3865010440349579
    2. 'def' → logprob: -1.6365010738372803
    3. ':' → logprob: -2.5115010738372803
    4. 'n' → logprob: -3.2615010738372803
    5. '(n' → logprob: -5.886500835418701
    6. '.' → logprob: -7.386500835418701
    7. 'import' → logprob: -7.386500835418701
    8. 'if' → logprob: -7.511500835418701
    9. ',' → logprob: -8.13650131225586
    10. '<|end|>' → logprob: -8.38650131225586

Token 1022: ' on' (ID: 402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28756240010261536
    2. '   ' → logprob: -1.662562370300293
    3. 'pass' → logprob: -3.287562370300293
    4. 'def' → logprob: -3.912562370300293
    5. ' pass' → logprob: -6.787562370300293
    6. ' n' → logprob: -7.037562370300293
    7. 'return' → logprob: -8.037562370300293
    8. '#' → logprob: -8.537562370300293
    9. '    
' → logprob: -8.787562370300293
    10. 'if' → logprob: -10.287562370300293

Token 1023: ' chois' (ID: 33475)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9982109665870667
    2. ' =' → logprob: -0.9982109665870667
    3. 'def' → logprob: -2.123210906982422
    4. ':' → logprob: -2.498210906982422
    5. '=' → logprob: -3.623210906982422
    6. 'n' → logprob: -4.873210906982422
    7. '(n' → logprob: -5.623210906982422
    8. '#' → logprob: -5.873210906982422
    9. ' n' → logprob: -5.873210906982422
    10. '[' → logprob: -6.248210906982422

Token 1024: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0632781982421875
    2. 'it' → logprob: -3.4382781982421875
    3. 'uit' → logprob: -3.6882781982421875
    4. 'ut' → logprob: -5.9382781982421875
    5. 'vit' → logprob: -7.4382781982421875
    6. 'voit' → logprob: -8.438278198242188
    7. 'tit' → logprob: -8.563278198242188
    8. 'u' → logprob: -9.313278198242188
    9. 'git' → logprob: -9.688278198242188
    10. 'oit' → logprob: -10.063278198242188

Token 1025: ' un' (ID: 537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6380379796028137
    2. '   ' → logprob: -1.263037919998169
    3. ')' → logprob: -3.013037919998169
    4. ' ' → logprob: -3.888037919998169
    5. ':' → logprob: -4.013038158416748
    6. '[' → logprob: -4.638038158416748
    7. ' =' → logprob: -4.763038158416748
    8. '    ' → logprob: -4.763038158416748
    9. '[i' → logprob: -4.763038158416748
    10. ',' → logprob: -5.138038158416748

Token 1026: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8736887574195862
    2. 'n' → logprob: -1.9986886978149414
    3. 'ensemble' → logprob: -2.2486886978149414
    4. 'def' → logprob: -2.7486886978149414
    5. 'subset' → logprob: -3.2486886978149414
    6. '=' → logprob: -3.4986886978149414
    7. 'segment' → logprob: -3.4986886978149414
    8. '_' → logprob: -3.4986886978149414
    9. '#' → logprob: -3.6236886978149414
    10. '   ' → logprob: -3.7486886978149414

Token 1027: '-' (ID: 12)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6076985597610474
    2. '_' → logprob: -1.2326985597610474
    3. '#' → logprob: -2.607698440551758
    4. '_j' → logprob: -3.982698440551758
    5. '
' → logprob: -4.857698440551758
    6. ' =' → logprob: -5.107698440551758
    7. '_i' → logprob: -5.232698440551758
    8. '_
' → logprob: -5.482698440551758
    9. '```' → logprob: -5.482698440551758
    10. 'sequence' → logprob: -5.732698440551758

Token 1028: 'ensemble' (ID: 37301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30351924896240234
    2. 'ensemble' → logprob: -1.4285192489624023
    3. '#' → logprob: -5.303519248962402
    4. 'ense' → logprob: -5.678519248962402
    5. 'sequence' → logprob: -6.178519248962402
    6. '_i' → logprob: -6.428519248962402
    7. '_s' → logprob: -7.053519248962402
    8. '_n' → logprob: -7.178519248962402
    9. '_j' → logprob: -7.303519248962402
    10. '\' → logprob: -7.678519248962402

Token 1029: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3573249876499176
    2. '_' → logprob: -1.8573249578475952
    3. ':' → logprob: -3.1073250770568848
    4. '   ' → logprob: -3.3573250770568848
    5. ')' → logprob: -3.4823250770568848
    6. '(' → logprob: -4.732325077056885
    7. ']' → logprob: -5.107325077056885
    8. ',' → logprob: -5.607325077056885
    9. '=' → logprob: -5.857325077056885
    10. '[i' → logprob: -6.857325077056885

Token 1030: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.34085968136787415
    2. 'l' → logprob: -2.5908596515655518
    3. '_j' → logprob: -2.9658596515655518
    4. '_' → logprob: -3.3408596515655518
    5. 'n' → logprob: -3.4658596515655518
    6. 'i' → logprob: -3.9658596515655518
    7. 'p' → logprob: -4.090859889984131
    8. ':' → logprob: -4.465859889984131
    9. '_i' → logprob: -4.840859889984131
    10. 'indices' → logprob: -4.965859889984131

Token 1031: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.68392014503479
    2. 'def' → logprob: -1.68392014503479
    3. '   ' → logprob: -1.93392014503479
    4. '_' → logprob: -2.18392014503479
    5. ' =' → logprob: -2.18392014503479
    6. '[' → logprob: -3.43392014503479
    7. ',' → logprob: -3.68392014503479
    8. '_lengths' → logprob: -3.68392014503479
    9. '_used' → logprob: -3.93392014503479
    10. 's' → logprob: -3.93392014503479

Token 1032: ' act' (ID: 1330)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.34953081607818604
    2. ' utiliser' → logprob: -1.224530816078186
    3. ''utiliser' → logprob: -7.5995306968688965
    4. 'rel' → logprob: -8.599531173706055
    5. ' rel' → logprob: -9.599531173706055
    6. 'connect' → logprob: -9.849531173706055
    7. 'import' → logprob: -10.474531173706055
    8. '_util' → logprob: -10.599531173706055
    9. '```' → logprob: -10.599531173706055
    10. '’utiliser' → logprob: -10.724531173706055

Token 1033: 'iver' (ID: 1788)
  Prédit: 'iver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iver' → logprob: -0.0023321169428527355
    2. 'iv' → logprob: -6.7523322105407715
    3. 'ion' → logprob: -7.6273322105407715
    4. 'ual' → logprob: -8.502331733703613
    5. 'i' → logprob: -9.252331733703613
    6. 'ivers' → logprob: -9.752331733703613
    7. 'u' → logprob: -10.002331733703613
    8. '```' → logprob: -10.252331733703613
    9. 'ivier' → logprob: -10.377331733703613
    10. 'er' → logprob: -10.502331733703613

Token 1034: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3863327205181122
    2. '   ' → logprob: -1.6363327503204346
    3. '[' → logprob: -3.2613327503204346
    4. '[n' → logprob: -3.5113327503204346
    5. 'def' → logprob: -4.2613325119018555
    6. ' =' → logprob: -5.0113325119018555
    7. '[]' → logprob: -5.3863325119018555
    8. '[i' → logprob: -5.7613325119018555
    9. '(n' → logprob: -5.8863325119018555
    10. 's' → logprob: -5.8863325119018555

Token 1035: 'cha' (ID: 3836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051202330738306046
    2. '   ' → logprob: -3.3012022972106934
    3. ' )' → logprob: -5.176202297210693
    4. '[i' → logprob: -6.426202297210693
    5. ',' → logprob: -6.676202297210693
    6. '):' → logprob: -6.676202297210693
    7. '),' → logprob: -7.801202297210693
    8. '[' → logprob: -8.051202774047852
    9. ':' → logprob: -8.176202774047852
    10. '```' → logprob: -8.551202774047852

Token 1036: 'que' (ID: 1126)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9472484588623047
    2. 'p' → logprob: -1.5722484588623047
    3. 'n' → logprob: -2.1972484588623047
    4. '   ' → logprob: -3.1972484588623047
    5. '#' → logprob: -3.4472484588623047
    6. 'u' → logprob: -3.9472484588623047
    7. 'i' → logprob: -4.197248458862305
    8. 'use' → logprob: -4.322248458862305
    9. 'ng' → logprob: -4.447248458862305
    10. 'îne' → logprob: -4.572248458862305

Token 1037: ' activation' (ID: 28961)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21374215185642242
    2. ')' → logprob: -2.463742256164551
    3. '[' → logprob: -3.713742256164551
    4. '[i' → logprob: -3.838742256164551
    5. ' _' → logprob: -4.713742256164551
    6. '_joint' → logprob: -4.713742256164551
    7. '   ' → logprob: -4.963742256164551
    8. ' =' → logprob: -5.088742256164551
    9. '_j' → logprob: -5.463742256164551
    10. ' ' → logprob: -5.463742256164551

Token 1038: ' fusion' (ID: 48115)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0801167488098145
    2. '_' → logprob: -1.2051167488098145
    3. '[i' → logprob: -2.3301167488098145
    4. 's' → logprob: -2.7051167488098145
    5. ']' → logprob: -2.7051167488098145
    6. '[' → logprob: -2.9551167488098145
    7. '   ' → logprob: -3.5801167488098145
    8. '):' → logprob: -4.3301167488098145
    9. ':' → logprob: -5.2051167488098145
    10. '```' → logprob: -5.5801167488098145

Token 1039: 'ne' (ID: 611)
  Prédit: 'ner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.22415681183338165
    2. 'er' → logprob: -1.7241568565368652
    3. 'n' → logprob: -4.974156856536865
    4. '   ' → logprob: -5.099156856536865
    5. '_' → logprob: -5.849156856536865
    6. ')' → logprob: -6.474156856536865
    7. 'e' → logprob: -6.724156856536865
    8. 'né' → logprob: -7.099156856536865
    9. 'ne' → logprob: -8.224156379699707
    10. 'nés' → logprob: -8.224156379699707

Token 1040: ' deux' (ID: 10301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4549438953399658
    2. ' ' → logprob: -1.4549438953399658
    3. ' des' → logprob: -1.5799438953399658
    4. ')' → logprob: -2.079943895339966
    5. ' les' → logprob: -3.204943895339966
    6. ' deux' → logprob: -3.454943895339966
    7. '   ' → logprob: -3.579943895339966
    8. ' _' → logprob: -3.704943895339966
    9. ' i' → logprob: -4.454943656921387
    10. ' un' → logprob: -4.704943656921387

Token 1041: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.3973226845264435
    2. 'segments' → logprob: -1.772322654724121
    3. 't' → logprob: -2.397322654724121
    4. ' tuy' → logprob: -3.272322654724121
    5. ' pipes' → logprob: -4.522322654724121
    6. ' tubes' → logprob: -6.147322654724121
    7. ')' → logprob: -6.397322654724121
    8. 'pipes' → logprob: -6.647322654724121
    9. '_segments' → logprob: -6.897322654724121
    10. ' segment' → logprob: -6.897322654724121

Token 1042: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04468296840786934
    2. '   ' → logprob: -3.7946829795837402
    3. '[i' → logprob: -4.29468297958374
    4. ',' → logprob: -6.29468297958374
    5. '_util' → logprob: -6.91968297958374
    6. '.' → logprob: -7.29468297958374
    7. ' )' → logprob: -7.41968297958374
    8. '_used' → logprob: -7.54468297958374
    9. '```' → logprob: -8.044682502746582
    10. '),' → logprob: -8.419682502746582

Token 1043: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010057319886982441
    2. '#' → logprob: -5.63505744934082
    3. '    
' → logprob: -6.38505744934082
    4. ')' → logprob: -6.63505744934082
    5. '    ' → logprob: -6.88505744934082
    6. '"' → logprob: -7.13505744934082
    7. 'def' → logprob: -7.76005744934082
    8. ' ' → logprob: -8.76005744934082
    9. '  ' → logprob: -8.88505744934082
    10. '<|end|>' → logprob: -9.26005744934082

Token 1044: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1483747512102127
    2. '#' (adapté à ' #') → logprob: -2.0233747959136963
    3. '"' → logprob: -5.898374557495117
    4. ' #' → logprob: -7.523374557495117
    5. ')' → logprob: -7.648374557495117
    6. '.' → logprob: -8.023374557495117
    7. 'pass' → logprob: -8.273374557495117
    8. '       ' → logprob: -8.523374557495117
    9. '    
' → logprob: -8.523374557495117
    10. '#
' → logprob: -8.523374557495117

Token 1045: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23639501631259918
    2. '#' → logprob: -1.611395001411438
    3. ' #' → logprob: -5.361394882202148
    4. 'n' → logprob: -5.986394882202148
    5. 'j' → logprob: -7.736394882202148
    6. '       ' → logprob: -7.986394882202148
    7. ')' → logprob: -7.986394882202148
    8. '#
' → logprob: -7.986394882202148
    9. ' n' → logprob: -8.111394882202148
    10. '    
' → logprob: -8.111394882202148

Token 1046: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1290639042854309
    2. '#' → logprob: -2.254063844680786
    3. 'def' → logprob: -4.504064083099365
    4. ' #' → logprob: -6.004064083099365
    5. 'n' → logprob: -6.379064083099365
    6. ' n' → logprob: -8.504063606262207
    7. '
' → logprob: -8.504063606262207
    8. 'c' → logprob: -9.379063606262207
    9. 'return' → logprob: -9.754063606262207
    10. 'x' → logprob: -10.004063606262207

Token 1047: ' cherche' (ID: 52345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8144453167915344
    2. 'def' → logprob: -1.1894452571868896
    3. '#' → logprob: -1.9394452571868896
    4. ')' → logprob: -3.0644452571868896
    5. 'n' → logprob: -4.189445495605469
    6. '(n' → logprob: -4.314445495605469
    7. ':' → logprob: -4.564445495605469
    8. ' n' → logprob: -5.314445495605469
    9. ' #' → logprob: -5.689445495605469
    10. 'for' → logprob: -6.314445495605469

Token 1048: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4015119671821594
    2. 'à' → logprob: -1.4015119075775146
    3. '   ' → logprob: -2.5265119075775146
    4. ' ' → logprob: -6.526512145996094
    5. '    ' → logprob: -7.776512145996094
    6. ' a' → logprob: -8.276512145996094
    7. 'def' → logprob: -8.401512145996094
    8. ' la' → logprob: -8.401512145996094
    9. '```' → logprob: -8.401512145996094
    10. ')' → logprob: -8.526512145996094

Token 1049: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25784483551979065
    2. '#' → logprob: -2.257844924926758
    3. 'n' → logprob: -2.882844924926758
    4. '   ' → logprob: -4.132844924926758
    5. 'optim' → logprob: -4.132844924926758
    6. 'maximize' → logprob: -4.507844924926758
    7. 'cho' → logprob: -5.257844924926758
    8. 'print' → logprob: -5.882844924926758
    9. '```' → logprob: -6.007844924926758
    10. 'import' → logprob: -6.007844924926758

Token 1050: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.01004327367991209
    2. 'al' → logprob: -5.135043144226074
    3. 'er' → logprob: -6.760043144226074
    4. 'izer' → logprob: -7.385043144226074
    5. '#' → logprob: -7.510043144226074
    6. 'is' → logprob: -7.760043144226074
    7. 'ser' → logprob: -8.010043144226074
    8. 'aiser' → logprob: -8.385043144226074
    9. 'user' → logprob: -8.885043144226074
    10. 'um' → logprob: -9.760043144226074

Token 1051: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18505768477916718
    2. 'j' → logprob: -2.9350576400756836
    3. ':' → logprob: -3.5600576400756836
    4. '"' → logprob: -4.435057640075684
    5. '(n' → logprob: -4.435057640075684
    6. '(' → logprob: -4.810057640075684
    7. ' j' → logprob: -4.935057640075684
    8. 'n' → logprob: -5.185057640075684
    9. ')' → logprob: -5.560057640075684
    10. '    ' → logprob: -5.810057640075684

Token 1052: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0724126100540161
    2. 'c' → logprob: -1.9474126100540161
    3. '(n' → logprob: -1.9474126100540161
    4. 'x' → logprob: -2.1974124908447266
    5. ' n' → logprob: -2.5724124908447266
    6. ')' → logprob: -2.5724124908447266
    7. ' (' → logprob: -3.5724124908447266
    8. '   ' → logprob: -3.9474124908447266
    9. ' x' → logprob: -4.197412490844727
    10. ' c' → logprob: -4.322412490844727

Token 1053: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.030260305851697922
    2. '-' → logprob: -4.15526008605957
    3. ')' → logprob: -4.40526008605957
    4. '_' → logprob: -6.90526008605957
    5. ',' → logprob: -8.40526008605957
    6. '   ' → logprob: -9.28026008605957
    7. ' -
' → logprob: -9.28026008605957
    8. '-j' → logprob: -9.53026008605957
    9. ' ' → logprob: -10.15526008605957
    10. ' _' → logprob: -10.28026008605957

Token 1054: ' nombre' (ID: 9733)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7564173340797424
    2. ' c' → logprob: -1.7564172744750977
    3. 'x' → logprob: -2.2564172744750977
    4. ' len' → logprob: -2.8814172744750977
    5. ' x' → logprob: -2.8814172744750977
    6. 'len' → logprob: -2.8814172744750977
    7. '1' → logprob: -3.7564172744750977
    8. 'sum' → logprob: -3.8814172744750977
    9. ' sum' → logprob: -4.131417274475098
    10. ' ' → logprob: -5.256417274475098

Token 1055: '_de' (ID: 5047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16423329710960388
    2. '_de' → logprob: -2.0392332077026367
    3. '_of' → logprob: -4.164233207702637
    4. '_des' → logprob: -6.414233207702637
    5. '_used' → logprob: -6.664233207702637
    6. '_d' → logprob: -7.164233207702637
    7. ')' → logprob: -7.414233207702637
    8. '   ' → logprob: -8.539233207702637
    9. ')_' → logprob: -8.539233207702637
    10. ' de' → logprob: -8.789233207702637

Token 1056: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00607549911364913
    2. '_' → logprob: -5.131075382232666
    3. ')_' → logprob: -10.381075859069824
    4. ''_' → logprob: -10.631075859069824
    5. 'j' → logprob: -10.881075859069824
    6. ')' → logprob: -11.381075859069824
    7. '_used' → logprob: -11.381075859069824
    8. '_joint' → logprob: -11.756075859069824
    9. '_)' → logprob: -12.006075859069824
    10. ' _' → logprob: -12.006075859069824

Token 1057: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.005209802184253931
    2. '_' → logprob: -6.130209922790527
    3. 'oint' → logprob: -6.380209922790527
    4. '_o' → logprob: -8.130209922790527
    5. '_used' → logprob: -8.380209922790527
    6. '_points' → logprob: -9.130209922790527
    7. 'o' → logprob: -9.505209922790527
    8. '_co' → logprob: -9.755209922790527
    9. ''_' → logprob: -9.880209922790527
    10. 'oin' → logprob: -10.005209922790527

Token 1058: '_util' (ID: 46866)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.5553160309791565
    2. '_util' → logprob: -1.4303159713745117
    3. '_' → logprob: -1.6803159713745117
    4. '_USED' → logprob: -9.805315971374512
    5. '_selected' → logprob: -10.055315971374512
    6. '_utils' → logprob: -10.305315971374512
    7. '_use' → logprob: -10.430315971374512
    8. ' _' → logprob: -10.430315971374512
    9. '   ' → logprob: -10.555315971374512
    10. '_)' → logprob: -10.680315971374512

Token 1059: 'isés' (ID: 58890)
  Prédit: 'isés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isés' → logprob: -0.06620145589113235
    2. 'és' → logprob: -2.9412014484405518
    3. '_used' → logprob: -4.941201686859131
    4. 'es' → logprob: -6.441201686859131
    5. 's' → logprob: -7.066201686859131
    6. '_' → logprob: -7.566201686859131
    7. 'isées' → logprob: -7.816201686859131
    8. '```' → logprob: -8.566201210021973
    9. ' utilisés' → logprob: -9.566201210021973
    10. 'is' → logprob: -9.691201210021973

Token 1060: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16700908541679382
    2. '_used' → logprob: -1.9170091152191162
    3. '_util' → logprob: -6.167008876800537
    4. '   ' → logprob: -6.667008876800537
    5. '_)' → logprob: -7.542008876800537
    6. '[i' → logprob: -7.667008876800537
    7. ')_' → logprob: -8.042009353637695
    8. 'used' → logprob: -8.042009353637695
    9. ')**' → logprob: -8.167009353637695
    10. ')
' → logprob: -8.667009353637695

Token 1061: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6539691686630249
    2. ')' → logprob: -1.403969168663025
    3. '   ' → logprob: -2.5289692878723145
    4. '_used' → logprob: -2.5289692878723145
    5. '*' → logprob: -3.5289692878723145
    6. '```' → logprob: -3.6539692878723145
    7. 'used' → logprob: -6.1539692878723145
    8. '    ' → logprob: -6.1539692878723145
    9. ' _' → logprob: -6.2789692878723145
    10. 'def' → logprob: -6.4039692878723145

Token 1062: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2673276960849762
    2. '(' → logprob: -2.7673277854919434
    3. '(sum' → logprob: -2.8923277854919434
    4. '(S' → logprob: -3.0173277854919434
    5. '(s' → logprob: -3.3923277854919434
    6. '(n' → logprob: -3.8923277854919434
    7. 'sum' → logprob: -5.392327785491943
    8. '(x' → logprob: -5.767327785491943
    9. '(input' → logprob: -6.267327785491943
    10. ' sum' → logprob: -6.392327785491943

Token 1063: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1384251117706299
    2. ' (' → logprob: -1.3884251117706299
    3. '(S' → logprob: -1.3884251117706299
    4. '(sum' → logprob: -2.38842511177063
    5. '(s' → logprob: -3.26342511177063
    6. 'sum' → logprob: -3.38842511177063
    7. ' sum' → logprob: -4.388424873352051
    8. ')' → logprob: -7.138424873352051
    9. '(
' → logprob: -7.263424873352051
    10. 's' → logprob: -7.888424873352051

Token 1064: 'omme' (ID: 30420)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.36473238468170166
    2. '_' → logprob: -2.489732265472412
    3. ')' → logprob: -2.614732265472412
    4. '_j' → logprob: -3.489732265472412
    5. 'omme' → logprob: -3.614732265472412
    6. ')_' → logprob: -3.864732265472412
    7. 'egment' → logprob: -4.989732265472412
    8. 'eg' → logprob: -5.364732265472412
    9. '```' → logprob: -5.364732265472412
    10. 'et' → logprob: -5.614732265472412

Token 1065: '_t' (ID: 838)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2872617244720459
    2. '_j' → logprob: -1.537261724472046
    3. '_des' → logprob: -3.787261724472046
    4. '_of' → logprob: -4.912261962890625
    5. ')' → logprob: -6.662261962890625
    6. '_t' → logprob: -7.287261962890625
    7. '_de' → logprob: -7.787261962890625
    8. 'des' → logprob: -7.787261962890625
    9. '_p' → logprob: -8.037261962890625
    10. '   ' → logprob: -8.287261962890625

Token 1066: 'uy' (ID: 3731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3094841241836548
    2. '_j' → logprob: -1.9344841241836548
    3. '_used' → logprob: -2.4344840049743652
    4. '_of' → logprob: -4.059484004974365
    5. '_joint' → logprob: -6.184484004974365
    6. '_p' → logprob: -6.309484004974365
    7. '_u' → logprob: -6.434484004974365
    8. '_util' → logprob: -6.934484004974365
    9. '_i' → logprob: -6.934484004974365
    10. ')_' → logprob: -7.309484004974365

Token 1067: 'aux' (ID: 5454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.287992924451828
    2. '_co' → logprob: -2.4129929542541504
    3. '_used' → logprob: -2.9129929542541504
    4. 's' → logprob: -3.2879929542541504
    5. 'es' → logprob: -3.9129929542541504
    6. '_of' → logprob: -4.66299295425415
    7. '_p' → logprob: -5.28799295425415
    8. '_
' → logprob: -5.28799295425415
    9. '```' → logprob: -5.78799295425415
    10. '[' → logprob: -6.16299295425415

Token 1068: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.17529796063899994
    2. ')' → logprob: -2.675297975540161
    3. '   ' → logprob: -2.675297975540161
    4. '+' → logprob: -4.175297737121582
    5. '_used' → logprob: -5.675297737121582
    6. '[j' → logprob: -7.425297737121582
    7. '[' → logprob: -7.675297737121582
    8. '       ' → logprob: -7.925297737121582
    9. '```' → logprob: -7.925297737121582
    10. ' +
' → logprob: -8.425297737121582

Token 1069: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6468772888183594
    2. ' sum' → logprob: -0.7718772888183594
    3. ' x' → logprob: -6.021877288818359
    4. ' somme' → logprob: -6.146877288818359
    5. 'x' → logprob: -6.271877288818359
    6. ''' → logprob: -6.646877288818359
    7. '   ' → logprob: -7.021877288818359
    8. 'j' → logprob: -7.271877288818359
    9. '"' → logprob: -7.271877288818359
    10. ' j' → logprob: -7.396877288818359

Token 1070: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.07526630163192749
    2. '_' → logprob: -2.7002663612365723
    3. '_des' → logprob: -5.700266361236572
    4. '_de' → logprob: -7.075266361236572
    5. '_used' → logprob: -7.825266361236572
    6. ')' → logprob: -9.075265884399414
    7. 'des' → logprob: -9.575265884399414
    8. ' _' → logprob: -9.825265884399414
    9. '   ' → logprob: -9.950265884399414
    10. '_util' → logprob: -10.075265884399414

Token 1071: 'oints' (ID: 28687)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.7540823817253113
    2. '_used' → logprob: -0.7540823817253113
    3. '_' → logprob: -3.129082441329956
    4. 'oints' → logprob: -5.004082202911377
    5. '_util' → logprob: -5.129082202911377
    6. '```' → logprob: -7.879082202911377
    7. 's' → logprob: -8.379082679748535
    8. '_j' → logprob: -8.629082679748535
    9. ' _' → logprob: -8.754082679748535
    10. '_us' → logprob: -8.879082679748535

Token 1072: '_util' (ID: 46866)
  Prédit: '_util'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.1080552339553833
    2. '_used' → logprob: -2.3580551147460938
    3. '_' → logprob: -4.983055114746094
    4. '[_' → logprob: -7.858055114746094
    5. '_selected' → logprob: -8.858055114746094
    6. ')' → logprob: -9.233055114746094
    7. '[' → logprob: -9.608055114746094
    8. '```' → logprob: -10.608055114746094
    9. '_[' → logprob: -10.733055114746094
    10. '_use' → logprob: -11.108055114746094

Token 1073: 'isés' (ID: 58890)
  Prédit: 'isés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isés' → logprob: -0.0404660739004612
    2. '_used' → logprob: -3.540466070175171
    3. '_util' → logprob: -5.29046630859375
    4. 'és' → logprob: -6.29046630859375
    5. '_' → logprob: -6.54046630859375
    6. 'isé' → logprob: -7.66546630859375
    7. 'isées' → logprob: -7.66546630859375
    8. 'ités' → logprob: -8.29046630859375
    9. 's' → logprob: -8.41546630859375
    10. 'érés' → logprob: -8.66546630859375

Token 1074: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08822814375162125
    2. '   ' → logprob: -2.588228225708008
    3. ')
' → logprob: -5.588228225708008
    4. '[i' → logprob: -5.838228225708008
    5. '[j' → logprob: -6.588228225708008
    6. '[n' → logprob: -8.463228225708008
    7. 'def' → logprob: -8.838228225708008
    8. '[' → logprob: -9.088228225708008
    9. ')`' → logprob: -9.338228225708008
    10. '```' → logprob: -9.338228225708008

Token 1075: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02116674743592739
    2. 'def' → logprob: -4.146166801452637
    3. 'n' → logprob: -5.646166801452637
    4. '    
' → logprob: -7.271166801452637
    5. '(n' → logprob: -7.896166801452637
    6. '```' → logprob: -8.646166801452637
    7. '
' → logprob: -8.771166801452637
    8. '\' → logprob: -10.396166801452637
    9. 'import' → logprob: -11.021166801452637
    10. ':' → logprob: -11.021166801452637

Token 1076: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06034982204437256
    2. 'n' → logprob: -3.185349941253662
    3. 'def' → logprob: -4.185349941253662
    4. '    
' → logprob: -6.685349941253662
    5. '
' → logprob: -7.685349941253662
    6. '(n' → logprob: -9.435349464416504
    7. '\' → logprob: -10.185349464416504
    8. '```' → logprob: -10.185349464416504
    9. '\n' → logprob: -10.560349464416504
    10. 'import' → logprob: -11.310349464416504

Token 1077: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5240416526794434
    2. 'n' → logprob: -1.0240416526794434
    3. 'def' → logprob: -3.0240416526794434
    4. '    
' → logprob: -9.524042129516602
    5. ' n' → logprob: -10.524042129516602
    6. 'import' → logprob: -11.524042129516602
    7. '```' → logprob: -12.149042129516602
    8. '#' → logprob: -12.524042129516602
    9. '(n' → logprob: -12.649042129516602
    10. '	n' → logprob: -12.774042129516602

Token 1078: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8841428756713867
    2. '   ' → logprob: -1.0091428756713867
    3. 'n' → logprob: -1.5091428756713867
    4. '    
' → logprob: -8.134142875671387
    5. 'import' → logprob: -8.134142875671387
    6. '#' (adapté à ' #') → logprob: -8.259142875671387
    7. '(n' → logprob: -9.259142875671387
    8. '```' → logprob: -9.384142875671387
    9. ' n' → logprob: -9.509142875671387
    10. '
' → logprob: -10.259142875671387

Token 1079: ' Le' (ID: 2018)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026778116822242737
    2. '   ' → logprob: -4.276778221130371
    3. 'def' → logprob: -4.401778221130371
    4. '#' → logprob: -8.901778221130371
    5. ' n' → logprob: -10.151778221130371
    6. '```' → logprob: -10.401778221130371
    7. 'import' → logprob: -10.651778221130371
    8. '    
' → logprob: -10.776778221130371
    9. 'pass' → logprob: -11.026778221130371
    10. '
' → logprob: -12.651778221130371

Token 1080: ' problème' (ID: 35630)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1621592938899994
    2. 'def' → logprob: -2.2871592044830322
    3. '   ' → logprob: -3.6621592044830322
    4. ' n' → logprob: -4.412159442901611
    5. ' #' → logprob: -6.412159442901611
    6. '#' → logprob: -6.412159442901611
    7. ' def' → logprob: -6.787159442901611
    8. ')' → logprob: -7.162159442901611
    9. 'j' → logprob: -7.287159442901611
    10. '
' → logprob: -7.537159442901611

Token 1081: ' revient' (ID: 95900)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7194981575012207
    2. ':' → logprob: -1.8444981575012207
    3. '=' → logprob: -2.4694981575012207
    4. 'def' → logprob: -2.7194981575012207
    5. '(n' → logprob: -2.7194981575012207
    6. ' =' → logprob: -3.3444981575012207
    7. 's' → logprob: -3.4694981575012207
    8. 'n' → logprob: -4.344498157501221
    9. '(' → logprob: -4.719498157501221
    10. ')' → logprob: -4.844498157501221

Token 1082: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9688219428062439
    2. '   ' → logprob: -1.0938220024108887
    3. '```' → logprob: -2.5938220024108887
    4. 'à' → logprob: -2.9688220024108887
    5. ':' → logprob: -3.0938220024108887
    6. ' =' → logprob: -3.0938220024108887
    7. ' to' → logprob: -4.093822002410889
    8. ')' → logprob: -4.218822002410889
    9. '=' → logprob: -4.468822002410889
    10. '    ' → logprob: -4.968822002410889

Token 1083: ' choisir' (ID: 47004)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.0371220111846924
    2. '   ' → logprob: -1.2871220111846924
    3. 'n' → logprob: -2.0371220111846924
    4. ' trouver' → logprob: -3.0371220111846924
    5. 'chercher' → logprob: -3.6621220111846924
    6. ' n' → logprob: -3.7871220111846924
    7. '#' → logprob: -3.7871220111846924
    8. 'cho' → logprob: -3.9121220111846924
    9. '```' → logprob: -4.162121772766113
    10. ' choisir' → logprob: -4.162121772766113

Token 1084: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4783339500427246
    2. 'la' → logprob: -2.4783339500427246
    3. '#' → logprob: -2.7283339500427246
    4. 'n' → logprob: -2.8533339500427246
    5. 'les' → logprob: -3.6033339500427246
    6. ' ' → logprob: -3.7283339500427246
    7. ' la' → logprob: -4.103333950042725
    8. '(n' → logprob: -4.103333950042725
    9. '[n' → logprob: -4.478333950042725
    10. 'une' → logprob: -4.728333950042725

Token 1085: ' sous' (ID: 14487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8654961585998535
    2. 's' → logprob: -2.3654961585998535
    3. ':' → logprob: -2.4904961585998535
    4. ')' → logprob: -2.6154961585998535
    5. 'joint' → logprob: -2.7404961585998535
    6. 'subset' → logprob: -2.8654961585998535
    7. '   ' → logprob: -2.9904961585998535
    8. '_' → logprob: -2.9904961585998535
    9. ' ' → logprob: -3.2404961585998535
    10. ' subset' → logprob: -3.3654961585998535

Token 1086: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009376663947477937
    2. '_
' → logprob: -7.250937461853027
    3. '-' → logprob: -10.250937461853027
    4. 'ensemble' → logprob: -10.375937461853027
    5. ' _' → logprob: -10.625937461853027
    6. '\' → logprob: -11.125937461853027
    7. 'set' → logprob: -11.125937461853027
    8. '_-' → logprob: -11.500937461853027
    9. '_set' → logprob: -11.625937461853027
    10. '_i' → logprob: -11.750937461853027

Token 1087: 'ensemble' (ID: 37301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002066398970782757
    2. 'ensemble' → logprob: -6.627066612243652
    3. '_
' → logprob: -7.627066612243652
    4. '_co' → logprob: -10.252066612243652
    5. '_-' → logprob: -10.877066612243652
    6. ' _' → logprob: -11.002066612243652
    7. '-' → logprob: -11.127066612243652
    8. 'co' → logprob: -11.127066612243652
    9. 'ense' → logprob: -11.252066612243652
    10. '\' → logprob: -11.252066612243652

Token 1088: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6907557845115662
    2. '_' → logprob: -0.8157557845115662
    3. '   ' → logprob: -4.190755844116211
    4. ')' → logprob: -4.315755844116211
    5. '[
' → logprob: -4.690755844116211
    6. ']' → logprob: -5.190755844116211
    7. '```' → logprob: -6.315755844116211
    8. '[i' → logprob: -6.565755844116211
    9. ',' → logprob: -6.690755844116211
    10. 'def' → logprob: -7.190755844116211

Token 1089: ' n' (ID: 297)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2156536728143692
    2. '_j' → logprob: -1.840653657913208
    3. ' joints' → logprob: -3.840653657913208
    4. ' j' → logprob: -5.465653896331787
    5. ' #' → logprob: -5.965653896331787
    6. '_' → logprob: -6.340653896331787
    7. '#' → logprob: -6.965653896331787
    8. 'joint' → logprob: -7.465653896331787
    9. ' ' → logprob: -7.590653896331787
    10. ' _' → logprob: -7.715653896331787

Token 1090: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5481770038604736
    2. ' -' → logprob: -1.4231770038604736
    3. '_' → logprob: -2.0481770038604736
    4. '_j' → logprob: -3.7981770038604736
    5. '   ' → logprob: -4.6731767654418945
    6. '#' → logprob: -5.4231767654418945
    7. '[-' → logprob: -5.4231767654418945
    8. ' #' → logprob: -6.4231767654418945
    9. 'j' → logprob: -6.4231767654418945
    10. ' _' → logprob: -6.7981767654418945

Token 1091: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0499768927693367
    2. ' -' → logprob: -3.1749768257141113
    3. '#' → logprob: -5.299976825714111
    4. ')' → logprob: -6.799976825714111
    5. '1' → logprob: -8.17497730255127
    6. '   ' → logprob: -9.17497730255127
    7. 'j' → logprob: -9.54997730255127
    8. ' #' → logprob: -9.79997730255127
    9. '+' → logprob: -10.04997730255127
    10. '-j' → logprob: -10.17497730255127

Token 1092: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43679583072662354
    2. '_j' → logprob: -1.0617958307266235
    3. 'j' → logprob: -5.436795711517334
    4. ' _' → logprob: -7.186795711517334
    5. '_p' → logprob: -7.436795711517334
    6. '_joint' → logprob: -7.436795711517334
    7. ',' → logprob: -8.186796188354492
    8. ')' → logprob: -8.686796188354492
    9. '   ' → logprob: -9.061796188354492
    10. '[j' → logprob: -9.311796188354492

Token 1093: ' afin' (ID: 22217)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0320355892181396
    2. 's' → logprob: -1.5320355892181396
    3. '=' → logprob: -2.6570355892181396
    4. ',' → logprob: -2.7820355892181396
    5. '[
' → logprob: -3.0320355892181396
    6. ':' → logprob: -3.1570355892181396
    7. '```' → logprob: -3.4070355892181396
    8. 'n' → logprob: -3.5320355892181396
    9. 'def' → logprob: -3.6570355892181396
    10. ':
' → logprob: -4.157035827636719

Token 1094: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.575373649597168
    2. ' de' → logprob: -1.200373649597168
    3. '_' → logprob: -2.575373649597168
    4. 'def' → logprob: -3.075373649597168
    5. ' d' → logprob: -5.950373649597168
    6. '```' → logprob: -6.075373649597168
    7. ':' → logprob: -6.825373649597168
    8. '_de' → logprob: -6.950373649597168
    9. '_to' → logprob: -6.950373649597168
    10. '#' → logprob: -7.200373649597168

Token 1095: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03164999932050705
    2. '#' → logprob: -4.531650066375732
    3. '   ' → logprob: -4.656650066375732
    4. ' maxim' → logprob: -5.281650066375732
    5. 'maximize' → logprob: -5.781650066375732
    6. '```' → logprob: -7.156650066375732
    7. ' max' → logprob: -7.656650066375732
    8. 'optim' → logprob: -8.156649589538574
    9. 'ma' → logprob: -8.531649589538574
    10. '
' → logprob: -8.906649589538574

Token 1096: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.010571857914328575
    2. 'al' → logprob: -5.3855719566345215
    3. 'aiser' → logprob: -6.2605719566345215
    4. 'izer' → logprob: -7.0105719566345215
    5. '#' → logprob: -7.1355719566345215
    6. 'ser' → logprob: -8.135571479797363
    7. 'alyser' → logprob: -8.135571479797363
    8. 'er' → logprob: -8.135571479797363
    9. '```' → logprob: -8.260571479797363
    10. 'is' → logprob: -8.510571479797363

Token 1097: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5682228803634644
    2. '(' → logprob: -2.193222999572754
    3. '_' → logprob: -2.193222999572754
    4. ')' → logprob: -2.568222999572754
    5. '"' → logprob: -2.693222999572754
    6. ':' → logprob: -2.693222999572754
    7. ' ' → logprob: -3.193222999572754
    8. ' j' → logprob: -3.318222999572754
    9. 'j' → logprob: -3.443222999572754
    10. ',' → logprob: -3.818222999572754

Token 1098: ' produit' (ID: 29429)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025648558512330055
    2. ' _' → logprob: -4.275648593902588
    3. ')' → logprob: -5.400648593902588
    4. '[' → logprob: -6.525648593902588
    5. ''' → logprob: -7.900648593902588
    6. '#' → logprob: -8.40064811706543
    7. '_
' → logprob: -8.40064811706543
    8. '   ' → logprob: -8.40064811706543
    9. 's' → logprob: -8.52564811706543
    10. '_subset' → logprob: -8.52564811706543

Token 1099: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10662340372800827
    2. 'def' → logprob: -3.106623411178589
    3. ':' → logprob: -4.10662317276001
    4. '
' → logprob: -4.35662317276001
    5. '(n' → logprob: -5.23162317276001
    6. ':
' → logprob: -5.73162317276001
    7. ',' → logprob: -5.73162317276001
    8. 'import' → logprob: -5.85662317276001
    9. '```' → logprob: -5.98162317276001
    10. '[n' → logprob: -6.35662317276001

Token 1100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18520517647266388
    2. 'def' → logprob: -2.0602052211761475
    3. '(n' → logprob: -4.060204982757568
    4. 'n' → logprob: -4.560204982757568
    5. ':' → logprob: -4.685204982757568
    6. '(' → logprob: -6.810204982757568
    7. '(
' → logprob: -7.435204982757568
    8. '```' → logprob: -7.935204982757568
    9. '():' → logprob: -7.935204982757568
    10. ':
' → logprob: -8.060205459594727

Token 1101: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00268089072778821
    2. 'n' → logprob: -6.627680778503418
    3. '    
' → logprob: -7.002680778503418
    4. 'def' → logprob: -8.002680778503418
    5. '(n' → logprob: -10.002680778503418
    6. '```' → logprob: -11.502680778503418
    7. '
' → logprob: -11.627680778503418
    8. ' 
' → logprob: -12.002680778503418
    9. '  
' → logprob: -12.127680778503418
    10. '\' → logprob: -12.127680778503418

Token 1102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11011950671672821
    2. 'n' → logprob: -2.860119581222534
    3. 'def' → logprob: -3.110119581222534
    4. '    
' → logprob: -6.485119342803955
    5. '```' → logprob: -8.110119819641113
    6. 'import' → logprob: -8.235119819641113
    7. '(n' → logprob: -9.610119819641113
    8. '
' → logprob: -10.110119819641113
    9. '#' → logprob: -10.235119819641113
    10. ' n' → logprob: -10.485119819641113

Token 1103: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1517563909292221
    2. 'n' → logprob: -2.0267562866210938
    3. 'def' → logprob: -5.401756286621094
    4. '    
' → logprob: -6.651756286621094
    5. '\n' → logprob: -6.901756286621094
    6. '```' → logprob: -7.401756286621094
    7. '
' → logprob: -7.651756286621094
    8. ':' → logprob: -7.776756286621094
    9. '\' → logprob: -8.401756286621094
    10. '(n' → logprob: -9.151756286621094

Token 1104: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.513970136642456
    2. '   ' → logprob: -1.263970136642456
    3. 'def' → logprob: -2.138970136642456
    4. '(n' → logprob: -7.388970375061035
    5. ' n' → logprob: -8.138970375061035
    6. ':' → logprob: -8.888970375061035
    7. '\' → logprob: -8.888970375061035
    8. '\n' → logprob: -9.763970375061035
    9. '#' → logprob: -9.888970375061035
    10. 'import' → logprob: -10.013970375061035

Token 1105: ' difficulté' (ID: 115364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3400990962982178
    2. 'n' → logprob: -1.3400990962982178
    3. '#' → logprob: -3.8400990962982178
    4. 'from' → logprob: -6.465099334716797
    5. ' n' → logprob: -6.965099334716797
    6. '
' → logprob: -7.465099334716797
    7. ' def' → logprob: -7.590099334716797
    8. '   ' → logprob: -7.840099334716797
    9. ' #' → logprob: -8.465099334716797
    10. 'pipes' → logprob: -8.840099334716797

Token 1106: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1475355625152588
    2. ' =' → logprob: -1.5225355625152588
    3. '=' → logprob: -1.8975355625152588
    4. ':' → logprob: -2.147535562515259
    5. '#' → logprob: -2.522535562515259
    6. 'n' → logprob: -3.522535562515259
    7. '(n' → logprob: -3.897535562515259
    8. ' est' → logprob: -4.89753532409668
    9. ' n' → logprob: -5.14753532409668
    10. 's' → logprob: -5.27253532409668

Token 1107: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7102957963943481
    2. 'n' → logprob: -0.9602957963943481
    3. 'def' → logprob: -2.5852956771850586
    4. ' n' → logprob: -3.8352956771850586
    5. '#' → logprob: -4.585295677185059
    6. 'pass' → logprob: -4.710295677185059
    7. ' pass' → logprob: -5.960295677185059
    8. '    
' → logprob: -7.210295677185059
    9. ' #' → logprob: -7.210295677185059
    10. 'import' → logprob: -7.335295677185059

Token 1108: ' peut' (ID: 9216)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2573992013931274
    2. '#' → logprob: -1.6323992013931274
    3. ' n' → logprob: -1.8823992013931274
    4. 'do' → logprob: -2.882399082183838
    5. ' doit' → logprob: -2.882399082183838
    6. 'n' → logprob: -3.007399082183838
    7. ' #' → logprob: -3.382399082183838
    8. 's' → logprob: -3.757399082183838
    9. ' =' → logprob: -4.132399082183838
    10. 'def' → logprob: -4.132399082183838

Token 1109: ' choisir' (ID: 47004)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.047851800918579
    2. '_' → logprob: -1.922851800918579
    3. ' choisir' → logprob: -2.297851800918579
    4. '   ' → logprob: -2.547851800918579
    5. ' #' → logprob: -2.922851800918579
    6. ' continuer' → logprob: -3.047851800918579
    7. ' ' → logprob: -3.172851800918579
    8. 'n' → logprob: -3.297851800918579
    9. '#' → logprob: -3.422851800918579
    10. ' ' → logprob: -4.5478515625

Token 1110: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4274505078792572
    2. ' de' → logprob: -2.42745041847229
    3. 'def' → logprob: -2.80245041847229
    4. 'de' → logprob: -3.05245041847229
    5. '```' → logprob: -3.30245041847229
    6. 'n' → logprob: -3.67745041847229
    7. '_' → logprob: -3.92745041847229
    8. 'import' → logprob: -4.927450656890869
    9. ' n' → logprob: -5.177450656890869
    10. 'à' → logprob: -5.302450656890869

Token 1111: ''importe' (ID: 103032)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3619524836540222
    2. '[' → logprob: -2.611952543258667
    3. '[i' → logprob: -2.611952543258667
    4. ''' → logprob: -3.236952543258667
    5. ''importe' → logprob: -3.486952543258667
    6. 'e' → logprob: -4.111952304840088
    7. '   ' → logprob: -4.611952304840088
    8. '[]' → logprob: -5.486952304840088
    9. ' _' → logprob: -5.736952304840088
    10. '[j' → logprob: -5.861952304840088

Token 1112: ' quels' (ID: 109092)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4576394557952881
    2. '   ' → logprob: -1.207639455795288
    3. '       ' → logprob: -4.582639694213867
    4. 'def' → logprob: -4.957639694213867
    5. '``' → logprob: -5.332639694213867
    6. 'n' → logprob: -5.332639694213867
    7. '[' → logprob: -5.582639694213867
    8. '[i' → logprob: -5.707639694213867
    9. '#' → logprob: -5.832639694213867
    10. '[
' → logprob: -5.957639694213867

Token 1113: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2969379723072052
    2. '_j' → logprob: -1.5469379425048828
    3. '_joint' → logprob: -3.796937942504883
    4. ' _' → logprob: -5.171937942504883
    5. 'j' → logprob: -6.046937942504883
    6. '[j' → logprob: -6.171937942504883
    7. ')' → logprob: -6.421937942504883
    8. ' ' → logprob: -6.671937942504883
    9. 'joint' → logprob: -6.921937942504883
    10. '[' → logprob: -7.046937942504883

Token 1114: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5358662009239197
    2. '[' → logprob: -2.5358662605285645
    3. ',' → logprob: -2.6608662605285645
    4. '_' → logprob: -3.2858662605285645
    5. 'def' → logprob: -3.2858662605285645
    6. '[
' → logprob: -3.4108662605285645
    7. '[n' → logprob: -3.6608662605285645
    8. 's' → logprob: -3.9108662605285645
    9. '   ' → logprob: -4.2858662605285645
    10. '```' → logprob: -4.2858662605285645

Token 1115: ' donc' (ID: 14206)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4978058338165283
    2. '[' → logprob: -1.6228058338165283
    3. '#' → logprob: -1.9978058338165283
    4. '   ' → logprob: -2.1228058338165283
    5. '"' → logprob: -2.4978058338165283
    6. ':' → logprob: -3.2478058338165283
    7. ',' → logprob: -3.6228058338165283
    8. '[
' → logprob: -3.8728058338165283
    9. '_' → logprob: -4.122805595397949
    10. ' but' → logprob: -4.122805595397949

Token 1116: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19482305645942688
    2. '#' → logprob: -2.8198230266571045
    3. 'def' → logprob: -2.9448230266571045
    4. 'n' → logprob: -3.1948230266571045
    5. ' n' → logprob: -4.319823265075684
    6. 'la' → logprob: -5.944823265075684
    7. ' la' → logprob: -6.319823265075684
    8. ' #' → logprob: -6.694823265075684
    9. '```' → logprob: -7.069823265075684
    10. 'pass' → logprob: -7.694823265075684

Token 1117: ' peut' (ID: 9216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7388966083526611
    2. '_' → logprob: -1.9888966083526611
    3. ' n' → logprob: -1.9888966083526611
    4. '   ' → logprob: -2.113896608352661
    5. '
' → logprob: -2.863896608352661
    6. 'def' → logprob: -2.988896608352661
    7. ' #' → logprob: -2.988896608352661
    8. ' peux' → logprob: -3.238896608352661
    9. ' =' → logprob: -3.738896608352661
    10. '[' → logprob: -4.363896369934082

Token 1118: ' choisir' (ID: 47004)
  Prédit: ' choisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.2936325967311859
    2. ' utiliser' → logprob: -3.1686325073242188
    3. 'cho' → logprob: -3.5436325073242188
    4. '#' → logprob: -3.7936325073242188
    5. ' continuer' → logprob: -4.168632507324219
    6. '   ' → logprob: -4.293632507324219
    7. ' #' → logprob: -4.293632507324219
    8. ' ajouter' → logprob: -4.418632507324219
    9. 'util' → logprob: -4.418632507324219
    10. ''utiliser' → logprob: -4.668632507324219

Token 1119: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7235347628593445
    2. ' n' → logprob: -2.0985348224639893
    3. '```' → logprob: -2.7235348224639893
    4. ' de' → logprob: -2.9735348224639893
    5. 'n' → logprob: -3.5985348224639893
    6. '"' → logprob: -3.7235348224639893
    7. 'import' → logprob: -3.8485348224639893
    8. '[n' → logprob: -4.09853458404541
    9. '[' → logprob: -4.22353458404541
    10. ' un' → logprob: -4.34853458404541

Token 1120: ' sous' (ID: 14487)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6265103220939636
    2. '[' → logprob: -1.8765103816986084
    3. ' subset' → logprob: -2.5015103816986084
    4. 'n' → logprob: -2.8765103816986084
    5. ' _' → logprob: -4.126510143280029
    6. ')' → logprob: -4.126510143280029
    7. '[i' → logprob: -4.376510143280029
    8. '[]' → logprob: -4.376510143280029
    9. '[n' → logprob: -4.501510143280029
    10. 'subset' → logprob: -4.626510143280029

Token 1121: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005548677872866392
    2. '_
' → logprob: -6.130548477172852
    3. 'set' → logprob: -6.880548477172852
    4. ' _' → logprob: -7.630548477172852
    5. '_set' → logprob: -8.130548477172852
    6. '\' → logprob: -8.380548477172852
    7. '_j' → logprob: -8.755548477172852
    8. '-' → logprob: -9.255548477172852
    9. '_
' → logprob: -9.255548477172852
    10. '_array' → logprob: -9.380548477172852

Token 1122: 'ensemble' (ID: 37301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03109663911163807
    2. 'ensemble' → logprob: -4.281096458435059
    3. 'set' → logprob: -5.531096458435059
    4. ' _' → logprob: -6.531096458435059
    5. 'es' → logprob: -6.656096458435059
    6. 'ense' → logprob: -6.906096458435059
    7. '\' → logprob: -7.031096458435059
    8. '_array' → logprob: -7.156096458435059
    9. 'array' → logprob: -7.406096458435059
    10. '_j' → logprob: -7.531096458435059

Token 1123: ' quelcon' (ID: 199130)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11181640625
    2. '[' → logprob: -3.11181640625
    3. '```' → logprob: -3.73681640625
    4. ',' → logprob: -4.98681640625
    5. '.' → logprob: -5.11181640625
    6. '<|end|>' → logprob: -5.23681640625
    7. '[
' → logprob: -6.11181640625
    8. '\' → logprob: -6.73681640625
    9. ':' → logprob: -6.86181640625
    10. '=' → logprob: -6.98681640625

Token 1124: 'que' (ID: 1126)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05313042551279068
    2. '[' → logprob: -4.178130626678467
    3. '```' → logprob: -5.178130626678467
    4. '[
' → logprob: -5.428130626678467
    5. 'def' → logprob: -5.803130626678467
    6. ')' → logprob: -5.928130626678467
    7. '   ' → logprob: -6.053130626678467
    8. '#' → logprob: -6.178130626678467
    9. ']' → logprob: -6.428130626678467
    10. '\' → logprob: -6.678130626678467

Token 1125: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.497666835784912
    2. '```' → logprob: -1.747666835784912
    3. '.' → logprob: -2.122666835784912
    4. ',' → logprob: -2.247666835784912
    5. '[' → logprob: -2.747666835784912
    6. '[n' → logprob: -3.122666835784912
    7. 'def' → logprob: -3.247666835784912
    8. '   ' → logprob: -3.372666835784912
    9. '[
' → logprob: -3.372666835784912
    10. 's' → logprob: -3.622666835784912

Token 1126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14660431444644928
    2. '[' → logprob: -2.646604299545288
    3. ',' → logprob: -3.896604299545288
    4. ':' → logprob: -4.771604537963867
    5. ')' → logprob: -4.771604537963867
    6. '[
' → logprob: -4.896604537963867
    7. '_' → logprob: -5.146604537963867
    8. '[i' → logprob: -5.771604537963867
    9. '.' → logprob: -6.146604537963867
    10. '[n' → logprob: -6.271604537963867

Token 1127: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8513731956481934
    2. '[
' → logprob: -1.7263731956481934
    3. '   ' → logprob: -2.4763731956481934
    4. ':' → logprob: -2.6013731956481934
    5. '_' → logprob: -2.8513731956481934
    6. '[n' → logprob: -3.1013731956481934
    7. ',' → logprob: -3.6013731956481934
    8. '[i' → logprob: -3.7263731956481934
    9. '#' (adapté à ' #') → logprob: -3.7263731956481934
    10. ')' → logprob: -4.101373195648193

Token 1128: ' ce' (ID: 2357)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9057705998420715
    2. '[' → logprob: -1.7807705402374268
    3. '[
' → logprob: -2.4057705402374268
    4. '```' → logprob: -2.9057705402374268
    5. ',' → logprob: -3.1557705402374268
    6. '(n' → logprob: -3.1557705402374268
    7. '[n' → logprob: -3.4057705402374268
    8. '(
' → logprob: -3.5307705402374268
    9. 'def' → logprob: -3.6557705402374268
    10. '_' → logprob: -3.9057705402374268

Token 1129: ' qui' (ID: 2780)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4375249743461609
    2. '[' → logprob: -2.4375250339508057
    3. ')' → logprob: -3.1875250339508057
    4. 'def' → logprob: -3.1875250339508057
    5. '[
' → logprob: -3.3125250339508057
    6. 's' → logprob: -3.4375250339508057
    7. '[n' → logprob: -3.9375250339508057
    8. ']' → logprob: -4.187524795532227
    9. '_
' → logprob: -4.687524795532227
    10. ' =' → logprob: -4.812524795532227

Token 1130: ' demande' (ID: 26737)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9287383556365967
    2. ' n' → logprob: -1.6787383556365967
    3. '#' → logprob: -2.9287383556365967
    4. '=' → logprob: -2.9287383556365967
    5. 'def' → logprob: -3.0537383556365967
    6. '   ' → logprob: -3.3037383556365967
    7. 'import' → logprob: -3.4287383556365967
    8. '```' → logprob: -3.4287383556365967
    9. '
' → logprob: -3.6787383556365967
    10. 'n' → logprob: -3.6787383556365967

Token 1131: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7980771064758301
    2. '   ' → logprob: -1.17307710647583
    3. 'n' → logprob: -2.54807710647583
    4. ' n' → logprob: -3.04807710647583
    5. '```' → logprob: -3.17307710647583
    6. ')' → logprob: -3.67307710647583
    7. ':' → logprob: -4.79807710647583
    8. '[n' → logprob: -5.29807710647583
    9. '[' → logprob: -5.42307710647583
    10. '(n' → logprob: -5.54807710647583

Token 1132: ' solution' (ID: 7578)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1306816339492798
    2. ' subset' → logprob: -1.6306816339492798
    3. 'def' → logprob: -2.0056815147399902
    4. 'b' → logprob: -3.2556815147399902
    5. 'subset' → logprob: -3.5056815147399902
    6. '#' → logprob: -3.5056815147399902
    7. ' optimization' → logprob: -3.8806815147399902
    8. ' dp' → logprob: -3.8806815147399902
    9. 'br' → logprob: -4.13068151473999
    10. 'sorted' → logprob: -4.25568151473999

Token 1133: ' efficace' (ID: 54338)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4480825364589691
    2. 'def' → logprob: -1.6980825662612915
    3. ':' → logprob: -3.198082447052002
    4. ' =' → logprob: -3.573082447052002
    5. 's' → logprob: -3.823082447052002
    6. '(
' → logprob: -4.323082447052002
    7. '_' → logprob: -4.698082447052002
    8. '=' → logprob: -4.948082447052002
    9. '```' → logprob: -4.948082447052002
    10. '(' → logprob: -5.073082447052002

Token 1134: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20806312561035156
    2. '   ' → logprob: -2.7080631256103516
    3. '(n' → logprob: -2.8330631256103516
    4. 'n' → logprob: -4.208063125610352
    5. ':' → logprob: -4.333063125610352
    6. '(
' → logprob: -4.458063125610352
    7. ':
' → logprob: -4.958063125610352
    8. 'import' → logprob: -6.083063125610352
    9. '
' → logprob: -6.208063125610352
    10. '(' → logprob: -6.208063125610352

Token 1135: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3229295015335083
    2. ' n' → logprob: -2.6979293823242188
    3. '#' → logprob: -3.1979293823242188
    4. 'n' → logprob: -3.5729293823242188
    5. ')' → logprob: -3.6979293823242188
    6. 'def' → logprob: -4.072929382324219
    7. ':' → logprob: -4.447929382324219
    8. '\' → logprob: -4.572929382324219
    9. ' #' → logprob: -4.822929382324219
    10. '```' → logprob: -4.822929382324219

Token 1136: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.37200605869293213
    2. 'n' → logprob: -1.4970060586929321
    3. '   ' → logprob: -2.6220059394836426
    4. ' la' → logprob: -5.497005939483643
    5. ' len' → logprob: -5.622005939483643
    6. '(n' → logprob: -6.997005939483643
    7. 'len' → logprob: -6.997005939483643
    8. ' (' → logprob: -7.122005939483643
    9. '    
' → logprob: -7.372005939483643
    10. '#' → logprob: -7.497005939483643

Token 1137: ' peut' (ID: 9216)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07863131165504456
    2. '=' → logprob: -2.8286314010620117
    3. '   ' → logprob: -4.453631401062012
    4. '=int' → logprob: -5.703631401062012
    5. '
' → logprob: -7.953631401062012
    6. ')' → logprob: -8.328631401062012
    7. 'def' → logprob: -8.453631401062012
    8. '```' → logprob: -8.953631401062012
    9. '+' → logprob: -9.078631401062012
    10. '#' → logprob: -9.453631401062012

Token 1138: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12283778935670853
    2. ' =' → logprob: -2.372837781906128
    3. '   ' → logprob: -4.247838020324707
    4. '>=' → logprob: -6.247838020324707
    5. '=int' → logprob: -6.497838020324707
    6. '+=' → logprob: -6.872838020324707
    7. ' +=' → logprob: -7.247838020324707
    8. ' be' → logprob: -7.497838020324707
    9. '<=' → logprob: -8.247838020324707
    10. '>' → logprob: -8.372838020324707

Token 1139: ' jusqu' (ID: 21961)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5164103507995605
    2. ' up' → logprob: -1.5164103507995605
    3. '=' → logprob: -2.2664103507995605
    4. 'up' → logprob: -3.7664103507995605
    5. ' =' → logprob: -3.8914103507995605
    6. '
' → logprob: -4.5164103507995605
    7. ' ' → logprob: -5.0164103507995605
    8. '>' → logprob: -5.2664103507995605
    9. 'int' → logprob: -5.2664103507995605
    10. ' large' → logprob: -6.5164103507995605

Token 1140: ''à' (ID: 33688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021198013797402382
    2. '   ' → logprob: -4.52119779586792
    3. ' =' → logprob: -5.77119779586792
    4. '```' → logprob: -6.02119779586792
    5. '-' → logprob: -6.77119779586792
    6. '=int' → logprob: -7.02119779586792
    7. '**' → logprob: -7.52119779586792
    8. '=
' → logprob: -8.021198272705078
    9. ')' → logprob: -8.271198272705078
    10. 'def' → logprob: -8.396198272705078

Token 1141: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013230959884822369
    2. ' ' → logprob: -6.751323223114014
    3. 'int' → logprob: -9.251322746276855
    4. '
' → logprob: -10.376322746276855
    5. '```' → logprob: -11.501322746276855
    6. '   ' → logprob: -12.751322746276855
    7. '1' → logprob: -12.876322746276855
    8. '2' → logprob: -13.251322746276855
    9. '0' → logprob: -13.251322746276855
    10. ' ' → logprob: -14.126322746276855

Token 1142: '65' (ID: 3898)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0031157992780208588
    2. ' ' → logprob: -5.878115653991699
    3. 'int' → logprob: -8.7531156539917
    4. '2' → logprob: -10.0031156539917
    5. '
' → logprob: -10.0031156539917
    6. '1' → logprob: -10.8781156539917
    7. '0' → logprob: -11.3781156539917
    8. '```' → logprob: -11.7531156539917
    9. '   ' → logprob: -12.7531156539917
    10. 'max' → logprob: -13.0031156539917

Token 1143: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17210035026073456
    2. 'def' → logprob: -2.672100305557251
    3. '**' → logprob: -4.42210054397583
    4. '
' → logprob: -4.42210054397583
    5. ',' → logprob: -4.67210054397583
    6. ')' → logprob: -4.92210054397583
    7. ':' → logprob: -4.92210054397583
    8. ',
' → logprob: -5.92210054397583
    9. '(n' → logprob: -5.92210054397583
    10. ')
' → logprob: -6.04710054397583

Token 1144: '000' (ID: 1302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9348853826522827
    2. ')' → logprob: -1.4348853826522827
    3. ':' → logprob: -2.4348855018615723
    4. 'def' → logprob: -2.5598855018615723
    5. '[' → logprob: -3.4348855018615723
    6. ',' → logprob: -3.6848855018615723
    7. '**' → logprob: -3.8098855018615723
    8. ')
' → logprob: -4.309885501861572
    9. '[n' → logprob: -4.309885501861572
    10. ']' → logprob: -4.559885501861572

Token 1145: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25685974955558777
    2. '   ' → logprob: -2.00685977935791
    3. ':
' → logprob: -3.75685977935791
    4. ':' → logprob: -3.75685977935791
    5. '(n' → logprob: -3.88185977935791
    6. '
' → logprob: -5.13185977935791
    7. 'n' → logprob: -5.50685977935791
    8. '```' → logprob: -6.25685977935791
    9. '):' → logprob: -6.88185977935791
    10. ')' → logprob: -7.00685977935791

Token 1146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3139001131057739
    2. 'def' → logprob: -1.688900113105774
    3. '
' → logprob: -2.8138999938964844
    4. 'n' → logprob: -4.688899993896484
    5. '    
' → logprob: -5.563899993896484
    6. '(n' → logprob: -6.063899993896484
    7. ':' → logprob: -6.063899993896484
    8. '\' → logprob: -6.688899993896484
    9. '\n' → logprob: -7.063899993896484
    10. 'import' → logprob: -7.313899993896484

Token 1147: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09442153573036194
    2. 'def' → logprob: -2.844421625137329
    3. ':' → logprob: -4.71942138671875
    4. 'n' → logprob: -4.96942138671875
    5. '(n' → logprob: -6.21942138671875
    6. ')' → logprob: -6.34442138671875
    7. '    
' → logprob: -6.34442138671875
    8. '(
' → logprob: -6.46942138671875
    9. '(p' → logprob: -6.59442138671875
    10. ',' → logprob: -6.59442138671875

Token 1148: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7505986094474792
    2. '   ' → logprob: -0.7505986094474792
    3. 'def' → logprob: -3.000598669052124
    4. 'import' → logprob: -5.750598430633545
    5. '    
' → logprob: -6.750598430633545
    6. '#' → logprob: -6.875598430633545
    7. ' n' → logprob: -8.875598907470703
    8. '```' → logprob: -8.875598907470703
    9. '
' → logprob: -9.000598907470703
    10. '(n' → logprob: -9.875598907470703

Token 1149: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20696578919887543
    2. '   ' → logprob: -1.7069658041000366
    3. 'def' → logprob: -5.456965923309326
    4. '    
' → logprob: -6.956965923309326
    5. ' n' → logprob: -9.706965446472168
    6. 'import' → logprob: -10.081965446472168
    7. 'pass' → logprob: -10.331965446472168
    8. '```' → logprob: -10.331965446472168
    9. ')' → logprob: -10.456965446472168
    10. '#' (adapté à ' #') → logprob: -10.956965446472168

Token 1150: ' Appro' (ID: 24145)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05856296420097351
    2. '   ' → logprob: -3.308562994003296
    3. 'def' → logprob: -3.933562994003296
    4. '#' → logprob: -8.058563232421875
    5. 'import' → logprob: -8.183563232421875
    6. '    
' → logprob: -9.933563232421875
    7. 'from' → logprob: -10.183563232421875
    8. ' n' → logprob: -10.558563232421875
    9. '```' → logprob: -11.808563232421875
    10. '
' → logprob: -11.933563232421875

Token 1151: 'che' (ID: 926)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005802351515740156
    2. 'ch' → logprob: -6.380802154541016
    3. 'xim' → logprob: -6.505802154541016
    4. 'ach' → logprob: -6.630802154541016
    5. 'che' → logprob: -7.755802154541016
    6. 'xi' → logprob: -7.880802154541016
    7. 'xima' → logprob: -8.630802154541016
    8. '#' → logprob: -9.255802154541016
    9. 'ximately' → logprob: -9.380802154541016
    10. '```' → logprob: -11.005802154541016

Token 1152: ' possible' (ID: 4149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7327261567115784
    2. ':' → logprob: -1.6077260971069336
    3. '   ' → logprob: -1.8577260971069336
    4. ' =' → logprob: -2.3577260971069336
    5. 'import' → logprob: -3.8577260971069336
    6. '=' → logprob: -4.482726097106934
    7. 'n' → logprob: -4.982726097106934
    8. ':
' → logprob: -5.107726097106934
    9. '(n' → logprob: -5.232726097106934
    10. '(
' → logprob: -5.982726097106934

Token 1153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11582095921039581
    2. 'def' → logprob: -3.11582088470459
    3. '   ' → logprob: -3.36582088470459
    4. ':
' → logprob: -5.11582088470459
    5. ' =' → logprob: -5.36582088470459
    6. '(n' → logprob: -5.61582088470459
    7. '[' → logprob: -5.99082088470459
    8. ' :' → logprob: -6.11582088470459
    9. '[n' → logprob: -6.11582088470459
    10. '#' → logprob: -6.74082088470459

Token 1154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009403643198311329
    2. 'n' → logprob: -5.634403705596924
    3. 'def' → logprob: -6.134403705596924
    4. '    
' → logprob: -6.759403705596924
    5. 'from' → logprob: -7.384403705596924
    6. '```' → logprob: -7.634403705596924
    7. ' n' → logprob: -7.759403705596924
    8. 'import' → logprob: -7.884403705596924
    9. '#' → logprob: -8.259403228759766
    10. '
' → logprob: -10.009403228759766

Token 1155: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016035424545407295
    2. '#' (adapté à ' #') → logprob: -5.391035556793213
    3. '
' → logprob: -5.766035556793213
    4. 'def' → logprob: -6.016035556793213
    5. 'from' → logprob: -6.391035556793213
    6. 'n' → logprob: -6.391035556793213
    7. '    
' → logprob: -7.141035556793213
    8. 'import' → logprob: -8.016035079956055
    9. 'dp' → logprob: -8.016035079956055
    10. ' #' → logprob: -8.391035079956055

Token 1156: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11538524180650711
    2. 'n' → logprob: -2.8653852939605713
    3. 'def' → logprob: -3.6153852939605713
    4. ' n' → logprob: -4.365385055541992
    5. 'p' → logprob: -5.740385055541992
    6. 'pipes' → logprob: -6.240385055541992
    7. '    
' → logprob: -6.615385055541992
    8. '#' → logprob: -6.740385055541992
    9. 'import' → logprob: -7.115385055541992
    10. '
' → logprob: -7.115385055541992

Token 1157: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2770273983478546
    2. '   ' → logprob: -1.5270273685455322
    3. 'def' → logprob: -3.9020273685455322
    4. ' n' → logprob: -5.527027606964111
    5. '```' → logprob: -8.652027130126953
    6. '#' → logprob: -8.902027130126953
    7. '
' → logprob: -9.277027130126953
    8. 'import' → logprob: -9.652027130126953
    9. '    
' → logprob: -9.777027130126953
    10. 'from' → logprob: -11.152027130126953

Token 1158: ' essa' (ID: 19417)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7737051844596863
    2. 'n' → logprob: -1.398705244064331
    3. ' =' → logprob: -2.773705244064331
    4. '   ' → logprob: -2.898705244064331
    5. '_' → logprob: -3.023705244064331
    6. '#' → logprob: -3.773705244064331
    7. '=' → logprob: -3.773705244064331
    8. 's' → logprob: -4.148705005645752
    9. ' n' → logprob: -4.523705005645752
    10. '[]' → logprob: -4.898705005645752

Token 1159: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5001937747001648
    2. 'yer' → logprob: -1.7501938343048096
    3. 'ye' → logprob: -1.8751938343048096
    4. 'yez' → logprob: -3.2501938343048096
    5. 'ie' → logprob: -4.5001935958862305
    6. 'yes' → logprob: -5.2501935958862305
    7. 'aye' → logprob: -6.0001935958862305
    8. 'ayer' → logprob: -6.7501935958862305
    9. '   ' → logprob: -7.2501935958862305
    10. 'sure' → logprob: -7.2501935958862305

Token 1160: ' toutes' (ID: 17502)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1343090534210205
    2. ' de' → logprob: -3.0093090534210205
    3. ':' → logprob: -3.2593090534210205
    4. ' d' → logprob: -4.009308815002441
    5. 'de' → logprob: -4.759308815002441
    6. '    ' → logprob: -6.259308815002441
    7. '_' → logprob: -6.509308815002441
    8. '```' → logprob: -6.509308815002441
    9. ':
' → logprob: -7.134308815002441
    10. '[]' → logprob: -7.634308815002441

Token 1161: ' les' (ID: 1341)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2840453386306763
    2. 'les' → logprob: -1.5340453386306763
    3. '   ' → logprob: -2.1590452194213867
    4. 'n' → logprob: -2.2840452194213867
    5. 'ranges' → logprob: -3.0340452194213867
    6. '(n' → logprob: -3.4090452194213867
    7. 'possible' → logprob: -3.5340452194213867
    8. 'values' → logprob: -4.034045219421387
    9. '```' → logprob: -4.159045219421387
    10. 'poss' → logprob: -4.284045219421387

Token 1162: ' partitions' (ID: 89097)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10987697541713715
    2. ' _' → logprob: -2.734876871109009
    3. '_j' → logprob: -3.984876871109009
    4. 'j' → logprob: -5.234877109527588
    5. '_joint' → logprob: -6.109877109527588
    6. '_s' → logprob: -6.609877109527588
    7. ' j' → logprob: -6.734877109527588
    8. 's' → logprob: -7.359877109527588
    9. 'joint' → logprob: -7.359877109527588
    10. ' ' → logprob: -7.484877109527588

Token 1163: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07751364260911942
    2. ':' → logprob: -3.9525136947631836
    3. 'def' → logprob: -4.452513694763184
    4. '[n' → logprob: -5.077513694763184
    5. '[' → logprob: -5.327513694763184
    6. '(n' → logprob: -5.452513694763184
    7. ' =' → logprob: -5.452513694763184
    8. ')' → logprob: -5.827513694763184
    9. ',' → logprob: -5.952513694763184
    10. '_' → logprob: -6.077513694763184

Token 1164: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16027489304542542
    2. 'def' → logprob: -2.5352749824523926
    3. ':' → logprob: -4.285274982452393
    4. ')' → logprob: -4.660274982452393
    5. '(n' → logprob: -4.910274982452393
    6. 'n' → logprob: -5.160274982452393
    7. '(
' → logprob: -5.160274982452393
    8. 's' → logprob: -5.660274982452393
    9. ' =' → logprob: -5.910274982452393
    10. ',' → logprob: -6.160274982452393

Token 1165: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16580240428447723
    2. '_' → logprob: -2.290802478790283
    3. 'n' → logprob: -4.540802478790283
    4. '   ' → logprob: -4.540802478790283
    5. '[' → logprob: -5.665802478790283
    6. '#' → logprob: -5.665802478790283
    7. ':' → logprob: -5.790802478790283
    8. ' ' → logprob: -6.040802478790283
    9. ',' → logprob: -6.165802478790283
    10. ' )' → logprob: -6.165802478790283

Token 1166: 'oup' (ID: 9999)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21220706403255463
    2. '   ' → logprob: -3.212207078933716
    3. ' =' → logprob: -4.087206840515137
    4. '=' → logprob: -4.087206840515137
    5. ':' → logprob: -4.212206840515137
    6. 'ont' → logprob: -4.212206840515137
    7. 'on' → logprob: -4.337206840515137
    8. '#
' → logprob: -4.837206840515137
    9. '```' → logprob: -5.337206840515137
    10. ')' → logprob: -5.462206840515137

Token 1167: 'ures' (ID: 1609)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.071412205696106
    2. 'er' → logprob: -1.071412205696106
    3. 'es' → logprob: -2.5714120864868164
    4. 'e' → logprob: -2.5714120864868164
    5. 'é' → logprob: -2.6964120864868164
    6. 'ure' → logprob: -3.5714120864868164
    7. ')' → logprob: -4.571412086486816
    8. 'u' → logprob: -5.196412086486816
    9. 'ut' → logprob: -5.446412086486816
    10. '=' → logprob: -5.571412086486816

Token 1168: ' entre' (ID: 3853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1469680815935135
    2. '   ' → logprob: -2.896968126296997
    3. '_' → logprob: -3.521968126296997
    4. '=' → logprob: -4.771967887878418
    5. ' =' → logprob: -5.146967887878418
    6. '_possible' → logprob: -5.271967887878418
    7. 's' → logprob: -5.521967887878418
    8. '[' → logprob: -5.521967887878418
    9. '```' → logprob: -5.521967887878418
    10. '(n' → logprob: -6.021967887878418

Token 1169: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9409996867179871
    2. 'p' → logprob: -1.3159997463226318
    3. 'n' → logprob: -1.5659997463226318
    4. ')' → logprob: -3.565999746322632
    5. 't' → logprob: -3.940999746322632
    6. '```' → logprob: -3.940999746322632
    7. '   ' → logprob: -4.315999507904053
    8. 'pipes' → logprob: -4.440999507904053
    9. ' les' → logprob: -4.565999507904053
    10. 'i' → logprob: -5.315999507904053

Token 1170: ' tuy' (ID: 45164)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3664448857307434
    2. 't' → logprob: -2.6164448261260986
    3. ' p' → logprob: -2.8664448261260986
    4. ' tuy' → logprob: -2.8664448261260986
    5. 'pipes' → logprob: -3.3664448261260986
    6. 'j' → logprob: -3.4914448261260986
    7. ' pipes' → logprob: -3.7414448261260986
    8. ' segments' → logprob: -4.991445064544678
    9. 'segments' → logprob: -5.241445064544678
    10. 'tu' → logprob: -5.491445064544678

Token 1171: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0174037367105484
    2. '#' → logprob: -5.392403602600098
    3. 'x' → logprob: -5.392403602600098
    4. 'au' → logprob: -6.267403602600098
    5. '   ' → logprob: -6.392403602600098
    6. 'pipes' → logprob: -6.892403602600098
    7. '[
' → logprob: -6.892403602600098
    8. '```' → logprob: -7.517403602600098
    9. '[x' → logprob: -7.642403602600098
    10. '[i' → logprob: -7.892403602600098

Token 1172: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5246371030807495
    2. '[' → logprob: -1.8996371030807495
    3. '[i' → logprob: -3.024637222290039
    4. 's' → logprob: -3.149637222290039
    5. '[n' → logprob: -3.524637222290039
    6. '_' → logprob: -3.774637222290039
    7. ']' → logprob: -3.899637222290039
    8. '```' → logprob: -4.024637222290039
    9. ',' → logprob: -4.149637222290039
    10. '   ' → logprob: -4.399637222290039

Token 1173: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05853418633341789
    2. ')' → logprob: -4.183534145355225
    3. ' n' → logprob: -4.808534145355225
    4. 'n' → logprob: -4.933534145355225
    5. 'def' → logprob: -5.058534145355225
    6. ':' → logprob: -5.683534145355225
    7. ' p' → logprob: -6.058534145355225
    8. ' =' → logprob: -6.308534145355225
    9. '#' → logprob: -6.308534145355225
    10. '    ' → logprob: -6.683534145355225

Token 1174: ' trop' (ID: 14765)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.98680180311203
    2. '...' → logprob: -1.1118018627166748
    3. ' n' → logprob: -1.8618018627166748
    4. 'n' → logprob: -3.486801862716675
    5. ')' → logprob: -3.736801862716675
    6. '    ' → logprob: -3.986801862716675
    7. '#' → logprob: -4.236801624298096
    8. ' ...' → logprob: -4.361801624298096
    9. '<|end|>' → logprob: -4.986801624298096
    10. 'pass' → logprob: -5.611801624298096

Token 1175: ' coûte' (ID: 118994)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7031563520431519
    2. ' long' → logprob: -1.7031563520431519
    3. '   ' → logprob: -2.0781564712524414
    4. ' n' → logprob: -2.0781564712524414
    5. 'def' → logprob: -2.4531564712524414
    6. 'long' → logprob: -2.8281564712524414
    7. 'import' → logprob: -2.9531564712524414
    8. ')' → logprob: -3.0781564712524414
    9. '...' → logprob: -3.8281564712524414
    10. '#' → logprob: -4.453156471252441

Token 1176: 'ux' (ID: 1778)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3373492658138275
    2. '_' → logprob: -1.58734929561615
    3. 'e' → logprob: -3.0873491764068604
    4. '=' → logprob: -4.8373494148254395
    5. ' )' → logprob: -5.0873494148254395
    6. ' de' → logprob: -5.4623494148254395
    7. '_e' → logprob: -5.8373494148254395
    8. 'u' → logprob: -6.2123494148254395
    9. '   ' → logprob: -6.4623494148254395
    10. ']' → logprob: -6.9623494148254395

Token 1177: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07112821936607361
    2. ')' → logprob: -3.8211281299591064
    3. ':' → logprob: -4.1961283683776855
    4. 'def' → logprob: -4.5711283683776855
    5. ',' → logprob: -5.5711283683776855
    6. ']' → logprob: -5.6961283683776855
    7. '#' → logprob: -6.5711283683776855
    8. '.' → logprob: -6.8211283683776855
    9. '[' → logprob: -7.0711283683776855
    10. '(n' → logprob: -7.0711283683776855

Token 1178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08295406401157379
    2. 'def' → logprob: -4.207953929901123
    3. '
' → logprob: -4.207953929901123
    4. ')' → logprob: -4.582953929901123
    5. 'n' → logprob: -4.582953929901123
    6. '#' → logprob: -4.957953929901123
    7. '    
' → logprob: -6.082953929901123
    8. '[' → logprob: -6.082953929901123
    9. '\' → logprob: -6.332953929901123
    10. '\n' → logprob: -6.332953929901123

Token 1179: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07034795731306076
    2. 'def' → logprob: -3.570348024368286
    3. '
' → logprob: -3.945348024368286
    4. 'n' → logprob: -4.695347785949707
    5. '    
' → logprob: -5.820347785949707
    6. ')' → logprob: -5.820347785949707
    7. '```' → logprob: -6.195347785949707
    8. '(n' → logprob: -7.695347785949707
    9. ')
' → logprob: -7.820347785949707
    10. '#' (adapté à ' #') → logprob: -7.945347785949707

Token 1180: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037811946123838425
    2. '
' → logprob: -4.787811756134033
    3. 'n' → logprob: -4.912811756134033
    4. '    
' → logprob: -5.287811756134033
    5. 'def' → logprob: -5.287811756134033
    6. '#' → logprob: -6.287811756134033
    7. 'p' → logprob: -6.537811756134033
    8. ')' → logprob: -6.537811756134033
    9. 'j' → logprob: -6.537811756134033
    10. '\n' → logprob: -6.662811756134033

Token 1181: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.11181640625
    2. 'n' → logprob: -1.23681640625
    3. '#' → logprob: -1.36181640625
    4. 'def' → logprob: -2.73681640625
    5. ' #' → logprob: -3.98681640625
    6. ' n' → logprob: -4.36181640625
    7. 'from' → logprob: -4.61181640625
    8. 'p' → logprob: -5.86181640625
    9. '
' → logprob: -5.86181640625
    10. 'for' → logprob: -6.36181640625

Token 1182: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1435747146606445
    2. ' n' → logprob: -1.7685747146606445
    3. 'continue' → logprob: -2.3935747146606445
    4. '#' → logprob: -2.7685747146606445
    5. '_' → logprob: -2.7685747146606445
    6. 'n' → logprob: -2.7685747146606445
    7. ' continue' → logprob: -2.8935747146606445
    8. 'import' → logprob: -3.3935747146606445
    9. ' def' → logprob: -3.7685747146606445
    10. ' #' → logprob: -4.2685747146606445

Token 1183: ' remar' (ID: 64497)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2444462776184082
    2. 'sort' → logprob: -1.3694462776184082
    3. 'try' → logprob: -2.494446277618408
    4. '#' → logprob: -2.619446277618408
    5. '   ' → logprob: -2.619446277618408
    6. ' essayer' → logprob: -3.869446277618408
    7. 'for' → logprob: -3.869446277618408
    8. 'b' → logprob: -4.244446277618408
    9. 'pr' → logprob: -4.619446277618408
    10. 'pré' → logprob: -4.619446277618408

Token 1184: 'quer' (ID: 8054)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5718802213668823
    2. 'n' → logprob: -1.3218802213668823
    3. 'i' → logprob: -3.196880340576172
    4. '#' → logprob: -3.946880340576172
    5. 'int' → logprob: -4.321880340576172
    6. 'indre' → logprob: -4.321880340576172
    7. 'ç' → logprob: -4.571880340576172
    8. 'r' → logprob: -4.821880340576172
    9. 'î' → logprob: -5.196880340576172
    10. 'in' → logprob: -5.571880340576172

Token 1185: ' que' (ID: 661)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9160064458847046
    2. '   ' → logprob: -0.9160064458847046
    3. ' _' → logprob: -3.041006565093994
    4. 'def' → logprob: -3.416006565093994
    5. ' que' → logprob: -3.916006565093994
    6. ':' → logprob: -4.416006565093994
    7. ',' → logprob: -4.541006565093994
    8. ')' → logprob: -4.666006565093994
    9. '    ' → logprob: -4.791006565093994
    10. '#' → logprob: -4.791006565093994

Token 1186: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5164409279823303
    2. ' n' → logprob: -2.0164408683776855
    3. ' #' → logprob: -2.6414408683776855
    4. '#' → logprob: -3.0164408683776855
    5. ' la' → logprob: -3.2664408683776855
    6. 'n' → logprob: -3.7664408683776855
    7. ' les' → logprob: -4.1414408683776855
    8. 'def' → logprob: -4.5164408683776855
    9. ' for' → logprob: -5.1414408683776855
    10. ' le' → logprob: -5.2664408683776855

Token 1187: ' problème' (ID: 35630)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8261162042617798
    2. 'n' → logprob: -1.8261162042617798
    3. 'j' → logprob: -2.2011160850524902
    4. 'def' → logprob: -2.4511160850524902
    5. ' #' → logprob: -3.3261160850524902
    6. ' n' → logprob: -3.4511160850524902
    7. 'p' → logprob: -3.5761160850524902
    8. 'joint' → logprob: -4.57611608505249
    9. '(n' → logprob: -4.70111608505249
    10. 'total' → logprob: -4.70111608505249

Token 1188: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1824707984924316
    2. '   ' → logprob: -1.5574707984924316
    3. ' =' → logprob: -1.6824707984924316
    4. '=' → logprob: -2.0574707984924316
    5. ')' → logprob: -3.4324707984924316
    6. '#' → logprob: -3.8074707984924316
    7. ' ' → logprob: -4.057470798492432
    8. ':' → logprob: -4.307470798492432
    9. '[' → logprob: -4.807470798492432
    10. '(n' → logprob: -4.807470798492432

Token 1189: ' équ' (ID: 18899)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09525618702173233
    2. ' _' → logprob: -4.095256328582764
    3. ' n' → logprob: -5.095256328582764
    4. ' mieux' → logprob: -5.220256328582764
    5. ' ' → logprob: -5.345256328582764
    6. ' de' → logprob: -5.595256328582764
    7. ' lié' → logprob: -5.845256328582764
    8. 'n' → logprob: -5.970256328582764
    9. ' à' → logprob: -6.095256328582764
    10. ' souvent' → logprob: -6.095256328582764

Token 1190: 'ivalent' (ID: 19253)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.20548583567142487
    2. 'ivalent' → logprob: -2.8304858207702637
    3. 'ale' → logprob: -3.3304858207702637
    4. 'a' → logprob: -3.7054858207702637
    5. ' =' → logprob: -3.7054858207702637
    6. '=' → logprob: -4.580485820770264
    7. 'iv' → logprob: -5.205485820770264
    8. '
' → logprob: -5.330485820770264
    9. 'als' → logprob: -5.705485820770264
    10. 'ally' → logprob: -6.080485820770264

Token 1191: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7353196144104004
    2. 'def' → logprob: -1.7353196144104004
    3. 'to' → logprob: -2.3603196144104004
    4. ' to' → logprob: -2.3603196144104004
    5. '```' → logprob: -2.6103196144104004
    6. ':' → logprob: -2.7353196144104004
    7. '   ' → logprob: -3.4853196144104004
    8. '=' → logprob: -3.4853196144104004
    9. '(n' → logprob: -3.6103196144104004
    10. '#' → logprob: -3.6103196144104004

Token 1192: ' partition' (ID: 31512)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9759697318077087
    2. 'lambda' → logprob: -2.1009697914123535
    3. ' choisir' → logprob: -2.6009697914123535
    4. ')' → logprob: -2.7259697914123535
    5. '_' → logprob: -2.7259697914123535
    6. '"' → logprob: -3.1009697914123535
    7. ' max' → logprob: -3.1009697914123535
    8. 'n' → logprob: -3.6009697914123535
    9. ' lambda' → logprob: -4.2259697914123535
    10. ' (' → logprob: -4.3509697914123535

Token 1193: 'ner' (ID: 1247)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.12979422509670258
    2. '_' → logprob: -3.754794120788574
    3. '=' → logprob: -3.879794120788574
    4. ' de' → logprob: -4.254794120788574
    5. ' =' → logprob: -4.504794120788574
    6. 'nement' → logprob: -5.129794120788574
    7. '(n' → logprob: -5.379794120788574
    8. '```' → logprob: -5.379794120788574
    9. '   ' → logprob: -5.629794120788574
    10. 'naire' → logprob: -5.754794120788574

Token 1194: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08038429915904999
    2. ')' → logprob: -3.8303842544555664
    3. 'the' → logprob: -4.705384254455566
    4. ' la' → logprob: -4.955384254455566
    5. '[' → logprob: -5.205384254455566
    6. '(n' → logprob: -5.330384254455566
    7. '   ' → logprob: -5.705384254455566
    8. ' des' → logprob: -5.830384254455566
    9. ' the' → logprob: -6.205384254455566
    10. ' _' → logprob: -6.205384254455566

Token 1195: ' sé' (ID: 7462)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.9988076686859131
    2. '_' → logprob: -1.123807668685913
    3. 'sequence' → logprob: -1.873807668685913
    4. 'n' → logprob: -3.373807668685913
    5. ' sé' → logprob: -3.748807668685913
    6. 's' → logprob: -3.748807668685913
    7. '_sequence' → logprob: -4.748807907104492
    8. ' n' → logprob: -4.998807907104492
    9. 't' → logprob: -4.998807907104492
    10. ')' → logprob: -5.123807907104492

Token 1196: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.021626954898238182
    2. 'q' → logprob: -4.396626949310303
    3. 'quences' → logprob: -4.896626949310303
    4. '_' → logprob: -7.896626949310303
    5. 'n' → logprob: -8.021627426147461
    6. '#' → logprob: -8.021627426147461
    7. 'QUENCE' → logprob: -8.771627426147461
    8. '
' → logprob: -9.646627426147461
    9. 'qu' → logprob: -9.896627426147461
    10. 'u' → logprob: -10.146627426147461

Token 1197: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6726426482200623
    2. '   ' → logprob: -1.547642707824707
    3. '[' → logprob: -3.047642707824707
    4. 'def' → logprob: -3.172642707824707
    5. ')' → logprob: -3.922642707824707
    6. ' =' → logprob: -4.047642707824707
    7. '(n' → logprob: -4.047642707824707
    8. 's' → logprob: -4.172642707824707
    9. 'n' → logprob: -4.297642707824707
    10. ',' → logprob: -4.297642707824707

Token 1198: ' joints' (ID: 47223)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9293885231018066
    2. ' p' → logprob: -1.9293885231018066
    3. 'pipes' → logprob: -1.9293885231018066
    4. ' pipes' → logprob: -2.4293885231018066
    5. 'n' → logprob: -3.0543885231018066
    6. 'j' → logprob: -3.0543885231018066
    7. ' n' → logprob: -3.1793885231018066
    8. 't' → logprob: -3.3043885231018066
    9. '   ' → logprob: -3.9293885231018066
    10. ' j' → logprob: -4.304388523101807

Token 1199: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0208954811096191
    2. '[' → logprob: -1.2708954811096191
    3. 's' → logprob: -2.645895481109619
    4. '[
' → logprob: -2.895895481109619
    5. '```' → logprob: -3.270895481109619
    6. '   ' → logprob: -3.520895481109619
    7. ' =' → logprob: -3.770895481109619
    8. '[n' → logprob: -3.895895481109619
    9. ']' → logprob: -3.895895481109619
    10. ')' → logprob: -4.270895481109619

Token 1200: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -1.8539830446243286
    2. '   ' → logprob: -1.9789830446243286
    3. 'segments' → logprob: -1.9789830446243286
    4. 'n' → logprob: -2.103982925415039
    5. ')' → logprob: -2.228982925415039
    6. '"' → logprob: -3.103982925415039
    7. ' n' → logprob: -3.103982925415039
    8. 'range' → logprob: -3.478982925415039
    9. 'ranges' → logprob: -3.978982925415039
    10. 's' → logprob: -4.103982925415039

Token 1201: ' cons' (ID: 1473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27240440249443054
    2. 's' → logprob: -3.147404432296753
    3. 'def' → logprob: -3.647404432296753
    4. '[
' → logprob: -3.647404432296753
    5. '_' → logprob: -3.772404432296753
    6. ',' → logprob: -4.147404193878174
    7. '(
' → logprob: -4.272404193878174
    8. ')' → logprob: -4.397404193878174
    9. '(n' → logprob: -4.397404193878174
    10. ':' → logprob: -4.647404193878174

Token 1202: 'écut' (ID: 96392)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7223837375640869
    2. 'écut' → logprob: -1.097383737564087
    3. '#' → logprob: -2.097383737564087
    4. 'ecut' → logprob: -4.347383499145508
    5. 'cut' → logprob: -4.597383499145508
    6. '```' → logprob: -4.972383499145508
    7. 'istent' → logprob: -6.097383499145508
    8. 'ensus' → logprob: -6.472383499145508
    9. 'truct' → logprob: -6.472383499145508
    10. 'def' → logprob: -6.472383499145508

Token 1203: 'ifs' (ID: 14119)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04199598357081413
    2. '#' → logprob: -4.541996002197266
    3. 'def' → logprob: -5.541996002197266
    4. '...' → logprob: -5.666996002197266
    5. '```' → logprob: -5.666996002197266
    6. ')' → logprob: -5.791996002197266
    7. '_
' → logprob: -5.791996002197266
    8. '\n' → logprob: -5.916996002197266
    9. '   ' → logprob: -6.416996002197266
    10. '[' → logprob: -6.541996002197266

Token 1204: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.317466378211975
    2. '   ' → logprob: -2.3174662590026855
    3. '_' → logprob: -2.6924662590026855
    4. '(n' → logprob: -2.6924662590026855
    5. '[' → logprob: -2.8174662590026855
    6. '(' → logprob: -2.9424662590026855
    7. ')' → logprob: -2.9424662590026855
    8. 's' → logprob: -2.9424662590026855
    9. '[n' → logprob: -3.1924662590026855
    10. ',' → logprob: -3.3174662590026855

Token 1205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3864663541316986
    2. '_' → logprob: -2.3864662647247314
    3. ':' → logprob: -3.1364662647247314
    4. '[' → logprob: -3.6364662647247314
    5. '#' → logprob: -3.7614662647247314
    6. ',' → logprob: -3.7614662647247314
    7. '[i' → logprob: -3.8864662647247314
    8. 'def' → logprob: -4.2614665031433105
    9. '[
' → logprob: -4.5114665031433105
    10. '[j' → logprob: -4.8864665031433105

Token 1206: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2332354187965393
    2. '_' → logprob: -2.2332353591918945
    3. '[' → logprob: -3.4832353591918945
    4. ':' → logprob: -4.2332353591918945
    5. '[i' → logprob: -4.6082353591918945
    6. '#' (adapté à ' #') → logprob: -4.8582353591918945
    7. '[j' → logprob: -4.9832353591918945
    8. '[
' → logprob: -5.3582353591918945
    9. ',' → logprob: -5.4832353591918945
    10. ')' → logprob: -5.6082353591918945

Token 1207: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13731399178504944
    2. 'def' → logprob: -3.1373140811920166
    3. '_' → logprob: -3.8873140811920166
    4. '#' → logprob: -4.7623138427734375
    5. '[' → logprob: -5.1373138427734375
    6. ')' → logprob: -5.2623138427734375
    7. '(n' → logprob: -5.3873138427734375
    8. ':' → logprob: -5.3873138427734375
    9. '(' → logprob: -5.5123138427734375
    10. '[
' → logprob: -5.5123138427734375

Token 1208: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5780971050262451
    2. '=' → logprob: -1.9530971050262451
    3. ']' → logprob: -2.453097105026245
    4. '_j' → logprob: -2.578097105026245
    5. '   ' → logprob: -2.828097105026245
    6. '#' → logprob: -2.828097105026245
    7. '```' → logprob: -2.828097105026245
    8. 'def' → logprob: -3.078097105026245
    9. '_' → logprob: -3.203097105026245
    10. ')' → logprob: -3.328097105026245

Token 1209: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6094503402709961
    2. '   ' → logprob: -1.234450340270996
    3. '#' → logprob: -3.359450340270996
    4. 'j' → logprob: -3.609450340270996
    5. '...' → logprob: -3.734450340270996
    6. 'n' → logprob: -3.734450340270996
    7. ' j' → logprob: -5.234450340270996
    8. '[' → logprob: -5.359450340270996
    9. ''' → logprob: -5.609450340270996
    10. ':' → logprob: -5.734450340270996

Token 1210: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.720839262008667
    2. '   ' → logprob: -1.345839262008667
    3. 'n' → logprob: -2.220839262008667
    4. ' n' → logprob: -2.970839262008667
    5. 'j' → logprob: -3.470839262008667
    6. ' )' → logprob: -4.220839500427246
    7. ' j' → logprob: -4.595839500427246
    8. '#' → logprob: -4.720839500427246
    9. ' ' → logprob: -5.595839500427246
    10. ' ' → logprob: -5.595839500427246

Token 1211: ' ne' (ID: 453)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1916475296020508
    2. ')' → logprob: -2.066647529602051
    3. '[' → logprob: -2.316647529602051
    4. 'def' → logprob: -2.566647529602051
    5. ' n' → logprob: -2.691647529602051
    6. '   ' → logprob: -2.941647529602051
    7. '_' → logprob: -2.941647529602051
    8. '[n' → logprob: -3.066647529602051
    9. ']' → logprob: -3.566647529602051
    10. '#' → logprob: -3.816647529602051

Token 1212: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.03865882754325867
    2. ' peut' → logprob: -4.913658618927002
    3. 'n' → logprob: -5.163658618927002
    4. 'continue' → logprob: -5.788658618927002
    5. '#' → logprob: -5.913658618927002
    6. 'cho' → logprob: -6.038658618927002
    7. 'est' → logprob: -6.038658618927002
    8. 'pour' → logprob: -6.163658618927002
    9. ' peux' → logprob: -6.288658618927002
    10. 'do' → logprob: -6.413658618927002

Token 1213: ' pas' (ID: 2173)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5893556475639343
    2. '[' → logprob: -2.589355707168579
    3. '_' → logprob: -2.714355707168579
    4. 'n' → logprob: -3.339355707168579
    5. '[
' → logprob: -3.464355707168579
    6. ')' → logprob: -3.589355707168579
    7. ']' → logprob: -3.714355707168579
    8. 'pas' → logprob: -3.839355707168579
    9. ' pas' → logprob: -4.08935546875
    10. 'def' → logprob: -4.08935546875

Token 1214: ' rel' (ID: 1536)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -1.0734200477600098
    2. 'util' → logprob: -1.5734200477600098
    3. ' utiliser' → logprob: -1.8234200477600098
    4. 'cho' → logprob: -2.6984200477600098
    5. 'choose' → logprob: -3.0734200477600098
    6. 'partition' → logprob: -3.9484200477600098
    7. 'contin' → logprob: -3.9484200477600098
    8. 'split' → logprob: -4.07342004776001
    9. ' choose' → logprob: -4.32342004776001
    10. 'rel' → logprob: -4.32342004776001

Token 1215: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.8890665769577026
    2. '#' → logprob: -1.3890665769577026
    3. 'def' → logprob: -3.139066696166992
    4. 'u' → logprob: -3.139066696166992
    5. ')' → logprob: -3.764066696166992
    6. 'f' → logprob: -3.889066696166992
    7. 'i' → logprob: -4.014066696166992
    8. 'e' → logprob: -4.139066696166992
    9. 'n' → logprob: -4.139066696166992
    10. 'import' → logprob: -4.514066696166992

Token 1216: ' deux' (ID: 10301)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7720853090286255
    2. '`' → logprob: -2.272085189819336
    3. 'n' → logprob: -2.522085189819336
    4. ''' → logprob: -2.647085189819336
    5. '[' → logprob: -3.147085189819336
    6. ' ' → logprob: -3.397085189819336
    7. '```' → logprob: -3.647085189819336
    8. ' )' → logprob: -3.772085189819336
    9. '"' → logprob: -3.897085189819336
    10. ' ' → logprob: -4.022085189819336

Token 1217: ' tuy' (ID: 45164)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028545768931508064
    2. ')' → logprob: -5.02854585647583
    3. '[' → logprob: -5.15354585647583
    4. ' _' → logprob: -5.52854585647583
    5. ' ' → logprob: -5.65354585647583
    6. '#' → logprob: -6.77854585647583
    7. '_j' → logprob: -6.77854585647583
    8. 'j' → logprob: -6.90354585647583
    9. '-' → logprob: -7.15354585647583
    10. ' j' → logprob: -7.90354585647583

Token 1218: 'aux' (ID: 5454)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.427143931388855
    2. '[' → logprob: -2.1771440505981445
    3. ']' → logprob: -2.3021440505981445
    4. '[i' → logprob: -2.3021440505981445
    5. '[
' → logprob: -2.4271440505981445
    6. 'n' → logprob: -2.6771440505981445
    7. '   ' → logprob: -2.9271440505981445
    8. 'pipes' → logprob: -3.3021440505981445
    9. 'p' → logprob: -3.5521440505981445
    10. ')' → logprob: -3.5521440505981445

Token 1219: ' non' (ID: 2893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.445019006729126
    2. '_' → logprob: -1.695019006729126
    3. ')' → logprob: -2.820019006729126
    4. '[i' → logprob: -2.945019006729126
    5. '[
' → logprob: -3.820019006729126
    6. ']' → logprob: -4.820018768310547
    7. '```' → logprob: -4.820018768310547
    8. '[n' → logprob: -5.195018768310547
    9. ',' → logprob: -5.695018768310547
    10. '#' → logprob: -5.820018768310547

Token 1220: ' cons' (ID: 1473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4229688048362732
    2. '=' → logprob: -2.797968864440918
    3. '_' → logprob: -3.047968864440918
    4. '[' → logprob: -3.047968864440918
    5. ']' → logprob: -3.797968864440918
    6. ',' → logprob: -3.922968864440918
    7. '#' → logprob: -4.047968864440918
    8. ' =' → logprob: -4.047968864440918
    9. '   ' → logprob: -4.172968864440918
    10. 'n' → logprob: -4.547968864440918

Token 1221: 'écut' (ID: 96392)
  Prédit: 'ecut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ecut' → logprob: -1.49429190158844
    2. '#' → logprob: -1.61929190158844
    3. 'u' → logprob: -1.74429190158844
    4. 'cut' → logprob: -2.4942917823791504
    5. 'e' → logprob: -3.1192917823791504
    6. '[' → logprob: -3.4942917823791504
    7. ')' → logprob: -3.6192917823791504
    8. ']' → logprob: -3.7442917823791504
    9. '[
' → logprob: -3.7442917823791504
    10. '```' → logprob: -3.7442917823791504

Token 1222: 'ifs' (ID: 14119)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.7703503370285034
    2. 'if' → logprob: -1.7703503370285034
    3. 'ents' → logprob: -1.8953503370285034
    4. 'ifs' → logprob: -1.8953503370285034
    5. 'def' → logprob: -2.270350456237793
    6. ')' → logprob: -2.270350456237793
    7. '```' → logprob: -3.645350456237793
    8. 'ive' → logprob: -3.770350456237793
    9. ']' → logprob: -4.020350456237793
    10. 'uts' → logprob: -4.270350456237793

Token 1223: ').
' (ID: 6294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6211002469062805
    2. '_' → logprob: -2.2461001873016357
    3. ')' → logprob: -2.6211001873016357
    4. '[
' → logprob: -2.8711001873016357
    5. '[' → logprob: -2.9961001873016357
    6. 'def' → logprob: -3.3711001873016357
    7. '```' → logprob: -4.121100425720215
    8. '(
' → logprob: -4.246100425720215
    9. '_j' → logprob: -4.496100425720215
    10. ':' → logprob: -4.621100425720215

Token 1224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045110248029232025
    2. 'def' → logprob: -4.29511022567749
    3. 'n' → logprob: -5.17011022567749
    4. '[
' → logprob: -5.54511022567749
    5. '(
' → logprob: -5.79511022567749
    6. '[' → logprob: -6.54511022567749
    7. '(' → logprob: -6.67011022567749
    8. '_' → logprob: -6.79511022567749
    9. '```' → logprob: -6.79511022567749
    10. '"' → logprob: -6.92011022567749

Token 1225: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03896316513419151
    2. 'n' → logprob: -4.538963317871094
    3. 'def' → logprob: -5.163963317871094
    4. ')' → logprob: -6.038963317871094
    5. '[' → logprob: -6.413963317871094
    6. '[
' → logprob: -6.413963317871094
    7. '    
' → logprob: -6.413963317871094
    8. 'j' → logprob: -6.538963317871094
    9. '(n' → logprob: -6.663963317871094
    10. '(' → logprob: -6.788963317871094

Token 1226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025905270595103502
    2. 'def' → logprob: -6.877590656280518
    3. '    
' → logprob: -7.627590656280518
    4. 'n' → logprob: -7.877590656280518
    5. '(n' → logprob: -8.62759017944336
    6. ')' → logprob: -9.00259017944336
    7. '
' → logprob: -9.00259017944336
    8. '```' → logprob: -9.87759017944336
    9. 'import' → logprob: -10.62759017944336
    10. '\' → logprob: -10.62759017944336

Token 1227: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01861189492046833
    2. 'n' → logprob: -4.643611907958984
    3. '    
' → logprob: -6.018611907958984
    4. 'j' → logprob: -6.143611907958984
    5. 'def' → logprob: -6.518611907958984
    6. '
' → logprob: -7.393611907958984
    7. ')' → logprob: -7.643611907958984
    8. '#' (adapté à ' #') → logprob: -7.768611907958984
    9. 'p' → logprob: -8.518611907958984
    10. '```' → logprob: -8.643611907958984

Token 1228: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057628046721220016
    2. 'n' → logprob: -3.3076281547546387
    3. 'j' → logprob: -4.807628154754639
    4. 'def' → logprob: -5.432628154754639
    5. '    
' → logprob: -5.682628154754639
    6. ')' → logprob: -6.807628154754639
    7. '#' → logprob: -7.807628154754639
    8. '
' → logprob: -8.30762767791748
    9. 'length' → logprob: -8.43262767791748
    10. 'p' → logprob: -8.55762767791748

Token 1229: ''' (ID: 6)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7658657431602478
    2. '   ' → logprob: -2.1408658027648926
    3. ' =' → logprob: -2.5158658027648926
    4. 'j' → logprob: -2.7658658027648926
    5. 'def' → logprob: -2.7658658027648926
    6. '#' → logprob: -3.0158658027648926
    7. '_' → logprob: -3.8908658027648926
    8. '`' → logprob: -4.015865802764893
    9. 's' → logprob: -4.265865802764893
    10. '=' → logprob: -4.390865802764893

Token 1230: 'én' (ID: 3289)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16193696856498718
    2. 'def' → logprob: -2.4119369983673096
    3. '   ' → logprob: -3.6619369983673096
    4. '#' → logprob: -4.2869367599487305
    5. '
' → logprob: -5.1619367599487305
    6. 'size' → logprob: -5.2869367599487305
    7. 's' → logprob: -6.7869367599487305
    8. 'length' → logprob: -6.7869367599487305
    9. 't' → logprob: -7.0369367599487305
    10. '#
' → logprob: -7.1619367599487305

Token 1231: 'oncé' (ID: 59071)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1781178712844849
    2. ']' → logprob: -2.3031177520751953
    3. ' =' → logprob: -2.5531177520751953
    4. '=' → logprob: -2.5531177520751953
    5. '[
' → logprob: -2.5531177520751953
    6. '_' → logprob: -3.1781177520751953
    7. ')' → logprob: -3.1781177520751953
    8. '#' → logprob: -3.3031177520751953
    9. '[]' → logprob: -3.6781177520751953
    10. '
' → logprob: -3.8031177520751953

Token 1232: ' dit' (ID: 4758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2779364585876465
    2. '=' → logprob: -1.9029364585876465
    3. ' =' → logprob: -1.9029364585876465
    4. '#' → logprob: -2.2779364585876465
    5. ':' → logprob: -2.7779364585876465
    6. 'n' → logprob: -3.1529364585876465
    7. '[' → logprob: -3.1529364585876465
    8. '_' → logprob: -3.7779364585876465
    9. '[n' → logprob: -3.7779364585876465
    10. 'def' → logprob: -3.9029364585876465

Token 1233: ' clairement' (ID: 103427)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3214658200740814
    2. ':' → logprob: -2.8214657306671143
    3. 'n' → logprob: -2.8214657306671143
    4. 'def' → logprob: -2.9464657306671143
    5. ' =' → logprob: -3.4464657306671143
    6. '[n' → logprob: -4.571465969085693
    7. '(n' → logprob: -4.696465969085693
    8. ')' → logprob: -4.821465969085693
    9. ' n' → logprob: -5.446465969085693
    10. '=' → logprob: -5.446465969085693

Token 1234: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18944761157035828
    2. ':' → logprob: -2.3144476413726807
    3. 'def' → logprob: -4.189447402954102
    4. ',' → logprob: -4.689447402954102
    5. 'n' → logprob: -4.689447402954102
    6. ')' → logprob: -4.939447402954102
    7. '(n' → logprob: -5.314447402954102
    8. '```' → logprob: -5.939447402954102
    9. '(
' → logprob: -6.064447402954102
    10. '[n' → logprob: -6.064447402954102

Token 1235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019440336152911186
    2. ')' → logprob: -5.394440174102783
    3. '(n' → logprob: -5.769440174102783
    4. 'n' → logprob: -6.019440174102783
    5. '(' → logprob: -6.269440174102783
    6. '#' → logprob: -6.394440174102783
    7. 'def' → logprob: -6.644440174102783
    8. '    
' → logprob: -7.394440174102783
    9. 'j' → logprob: -7.644440174102783
    10. '[' → logprob: -8.019440650939941

Token 1236: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05571731552481651
    2. ')' → logprob: -4.305717468261719
    3. '(n' → logprob: -4.805717468261719
    4. 'def' → logprob: -4.930717468261719
    5. 'n' → logprob: -5.055717468261719
    6. '#' (adapté à ' #') → logprob: -5.305717468261719
    7. '"' → logprob: -5.680717468261719
    8. '(' → logprob: -6.805717468261719
    9. 'j' → logprob: -6.805717468261719
    10. ':' → logprob: -6.930717468261719

Token 1237: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11815381795167923
    2. 'n' → logprob: -2.4931538105010986
    3. 'def' → logprob: -4.743154048919678
    4. '#' → logprob: -5.743154048919678
    5. 'j' → logprob: -5.743154048919678
    6. '    
' → logprob: -5.868154048919678
    7. ' n' → logprob: -6.243154048919678
    8. ')' → logprob: -6.368154048919678
    9. ')
' → logprob: -7.118154048919678
    10. '#
' → logprob: -7.243154048919678

Token 1238: ' "' (ID: 392)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28435754776000977
    2. '   ' → logprob: -1.6593575477600098
    3. 'def' → logprob: -3.7843575477600098
    4. '#' → logprob: -3.9093575477600098
    5. 'j' → logprob: -5.03435754776001
    6. ' n' → logprob: -6.65935754776001
    7. ')' → logprob: -6.78435754776001
    8. '    
' → logprob: -7.03435754776001
    9. 'pass' → logprob: -7.15935754776001
    10. 'for' → logprob: -7.40935754776001

Token 1239: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6788037419319153
    2. 'n' → logprob: -1.4288036823272705
    3. '   ' → logprob: -1.8038036823272705
    4. '#' → logprob: -3.4288036823272705
    5. '")' → logprob: -4.67880392074585
    6. 'def' → logprob: -4.80380392074585
    7. '"' → logprob: -4.92880392074585
    8. 'j' → logprob: -5.30380392074585
    9. ' n' → logprob: -5.55380392074585
    10. ')
' → logprob: -5.55380392074585

Token 1240: '番' (ID: 30357)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.435449242591858
    2. 's' → logprob: -1.435449242591858
    3. 'f' → logprob: -1.685449242591858
    4. 'n' → logprob: -2.5604491233825684
    5. ']' → logprob: -3.1854491233825684
    6. '+' → logprob: -3.1854491233825684
    7. '[' → logprob: -3.1854491233825684
    8. 'm' → logprob: -3.9354491233825684
    9. '[n' → logprob: -4.435449123382568
    10. ''' → logprob: -4.560449123382568

Token 1241: '目' (ID: 10441)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48893457651138306
    2. '=' → logprob: -2.1139345169067383
    3. ']' → logprob: -2.6139345169067383
    4. '[n' → logprob: -2.7389345169067383
    5. '[' → logprob: -3.3639345169067383
    6. '+' → logprob: -3.8639345169067383
    7. '(n' → logprob: -4.988934516906738
    8. 'def' → logprob: -5.113934516906738
    9. ' =' → logprob: -5.363934516906738
    10. '#' → logprob: -5.363934516906738

Token 1242: 'の' (ID: 3385)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6294538378715515
    2. ')' → logprob: -1.8794538974761963
    3. ']' → logprob: -2.2544538974761963
    4. '_j' → logprob: -2.7544538974761963
    5. '[' → logprob: -3.5044538974761963
    6. 'j' → logprob: -3.8794538974761963
    7. '=' → logprob: -4.254453659057617
    8. '#' → logprob: -4.754453659057617
    9. '[j' → logprob: -5.129453659057617
    10. '[
' → logprob: -5.504453659057617

Token 1243: 'ジョ' (ID: 176394)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2896988093852997
    2. ')' → logprob: -2.164698839187622
    3. 'joint' → logprob: -3.664698839187622
    4. '`' → logprob: -4.289698600769043
    5. 'join' → logprob: -4.539698600769043
    6. '#' → logprob: -4.539698600769043
    7. '_' → logprob: -4.664698600769043
    8. 's' → logprob: -4.789698600769043
    9. ']' → logprob: -4.789698600769043
    10. '"' → logprob: -4.789698600769043

Token 1244: 'イント' (ID: 77939)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9087936282157898
    2. '[' → logprob: -2.0337936878204346
    3. '_' → logprob: -2.4087936878204346
    4. '=' → logprob: -2.5337936878204346
    5. 't' → logprob: -3.1587936878204346
    6. 'oints' → logprob: -3.1587936878204346
    7. ']' → logprob: -3.4087936878204346
    8. 'i' → logprob: -4.0337934494018555
    9. '```' → logprob: -4.0337934494018555
    10. ')' → logprob: -4.1587934494018555

Token 1245: 'は' (ID: 5205)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6771357655525208
    2. ']' → logprob: -1.927135705947876
    3. '_used' → logprob: -1.927135705947876
    4. '[' → logprob: -3.302135705947876
    5. 's' → logprob: -3.427135705947876
    6. '[i' → logprob: -3.552135705947876
    7. '```' → logprob: -3.927135705947876
    8. ')' → logprob: -3.927135705947876
    9. '_util' → logprob: -4.427135944366455
    10. '[
' → logprob: -5.177135944366455

Token 1246: '、' (ID: 1395)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.08193302154541
    2. ' j' → logprob: -2.08193302154541
    3. '"' → logprob: -2.20693302154541
    4. ''' → logprob: -2.45693302154541
    5. 'n' → logprob: -2.45693302154541
    6. ']' → logprob: -2.83193302154541
    7. ')' → logprob: -2.83193302154541
    8. '```' → logprob: -3.33193302154541
    9. '`' → logprob: -3.45693302154541
    10. 's' → logprob: -3.58193302154541

Token 1247: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0275049209594727
    2. ')' → logprob: -1.5275049209594727
    3. ''' → logprob: -1.9025049209594727
    4. 'i' → logprob: -3.0275049209594727
    5. '`' → logprob: -3.4025049209594727
    6. 'n' → logprob: -3.6525049209594727
    7. ' '' → logprob: -3.6525049209594727
    8. '"' → logprob: -3.9025049209594727
    9. ' j' → logprob: -4.652504920959473
    10. '1' → logprob: -4.652504920959473

Token 1248: '番' (ID: 30357)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2269761562347412
    2. '+' → logprob: -2.226976156234741
    3. '[' → logprob: -2.851976156234741
    4. '[
' → logprob: -4.72697639465332
    5. 'の' → logprob: -5.47697639465332
    6. '番' → logprob: -6.10197639465332
    7. '=' → logprob: -6.22697639465332
    8. ')' → logprob: -6.47697639465332
    9. '#' → logprob: -6.60197639465332
    10. '[i' → logprob: -6.85197639465332

Token 1249: '目' (ID: 10441)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.733690619468689
    2. ']' → logprob: -2.4836907386779785
    3. 'ème' → logprob: -2.6086907386779785
    4. '番' → logprob: -3.2336907386779785
    5. '+' → logprob: -3.3586907386779785
    6. '[]' → logprob: -3.4836907386779785
    7. '1' → logprob: -3.4836907386779785
    8. '=' → logprob: -3.6086907386779785
    9. '```' → logprob: -3.6086907386779785
    10. '[
' → logprob: -3.8586907386779785

Token 1250: 'と' (ID: 5330)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0715060234069824
    2. '_' → logprob: -1.0715060234069824
    3. '[' → logprob: -1.5715060234069824
    4. ')' → logprob: -3.9465060234069824
    5. '[j' → logprob: -4.321506023406982
    6. 'の' → logprob: -4.696506023406982
    7. '```' → logprob: -4.946506023406982
    8. '`' → logprob: -5.071506023406982
    9. '[
' → logprob: -5.071506023406982
    10. '_j' → logprob: -5.196506023406982

Token 1251: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10753218829631805
    2. '(i' → logprob: -2.732532262802124
    3. ' (' → logprob: -3.982532262802124
    4. '`' → logprob: -5.357532024383545
    5. '```' → logprob: -5.732532024383545
    6. '(' → logprob: -5.857532024383545
    7. '（' → logprob: -6.107532024383545
    8. '(n' → logprob: -6.732532024383545
    9. ' i' → logprob: -6.982532024383545
    10. '
' → logprob: -7.982532024383545

Token 1252: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07520703226327896
    2. '[' → logprob: -3.075206995010376
    3. ']' → logprob: -4.950207233428955
    4. '-' → logprob: -5.450207233428955
    5. '＋' → logprob: -5.700207233428955
    6. '```' → logprob: -5.950207233428955
    7. 'n' → logprob: -6.575207233428955
    8. '[n' → logprob: -7.075207233428955
    9. '[
' → logprob: -7.075207233428955
    10. '1' → logprob: -7.325207233428955

Token 1253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1095377206802368
    2. 'ème' → logprob: -1.1095377206802368
    3. '`' → logprob: -2.8595376014709473
    4. '-' → logprob: -2.8595376014709473
    5. '```' → logprob: -3.2345376014709473
    6. 'ième' → logprob: -3.3595376014709473
    7. 'è' → logprob: -3.7345376014709473
    8. '#' → logprob: -3.7345376014709473
    9. 'n' → logprob: -3.9845376014709473
    10. 'é' → logprob: -4.109537601470947

Token 1254: ' �' (ID: 90328)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12912529706954956
    2. '[' → logprob: -3.6291253566741943
    3. '_' → logprob: -3.6291253566741943
    4. '[j' → logprob: -4.504125118255615
    5. '```' → logprob: -4.629125118255615
    6. '_j' → logprob: -4.879125118255615
    7. ']_' → logprob: -5.504125118255615
    8. ')' → logprob: -5.629125118255615
    9. '`' → logprob: -5.879125118255615
    10. '],' → logprob: -5.879125118255615

Token 1255: '�' (ID: 103)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3369745910167694
    2. ''' → logprob: -2.836974620819092
    3. '[' → logprob: -2.836974620819092
    4. '']' → logprob: -3.211974620819092
    5. '`' → logprob: -3.961974620819092
    6. '```' → logprob: -4.336974620819092
    7. '[]' → logprob: -4.586974620819092
    8. '"' → logprob: -4.836974620819092
    9. '番' → logprob: -4.961974620819092
    10. '"]' → logprob: -4.961974620819092

Token 1256: '目' (ID: 10441)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15490451455116272
    2. '']' → logprob: -3.77990460395813
    3. '[' → logprob: -4.029904365539551
    4. '[j' → logprob: -4.654904365539551
    5. '```' → logprob: -4.654904365539551
    6. '`' → logprob: -4.779904365539551
    7. '_j' → logprob: -4.904904365539551
    8. ']
' → logprob: -4.904904365539551
    9. '_' → logprob: -5.029904365539551
    10. '[i' → logprob: -5.279904365539551

Token 1257: 'の' (ID: 3385)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1923304796218872
    2. '[' → logprob: -2.5673303604125977
    3. '_' → logprob: -3.0673303604125977
    4. ')' → logprob: -4.817330360412598
    5. '[
' → logprob: -4.817330360412598
    6. '']' → logprob: -5.317330360412598
    7. '[i' → logprob: -5.442330360412598
    8. 'の' → logprob: -5.692330360412598
    9. '.' → logprob: -5.942330360412598
    10. '）' → logprob: -6.442330360412598

Token 1258: 'パ' (ID: 24065)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6043809652328491
    2. 't' → logprob: -1.7293809652328491
    3. 'j' → logprob: -1.8543809652328491
    4. 'joint' → logprob: -3.6043810844421387
    5. 'pipes' → logprob: -3.6043810844421387
    6. 'pipe' → logprob: -4.354381084442139
    7. 'join' → logprob: -4.979381084442139
    8. 'パ' → logprob: -4.979381084442139
    9. 'ジョ' → logprob: -5.104381084442139
    10. '管' → logprob: -5.354381084442139

Token 1259: 'イ' (ID: 6339)
  Prédit: 'イ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'イ' → logprob: -0.40278124809265137
    2. 'p' → logprob: -2.2777812480926514
    3. 'ipes' → logprob: -2.7777812480926514
    4. ')' → logprob: -3.2777812480926514
    5. 'i' → logprob: -3.2777812480926514
    6. '#' → logprob: -3.7777812480926514
    7. '_' → logprob: -4.1527814865112305
    8. '[' → logprob: -4.2777814865112305
    9. ']' → logprob: -4.9027814865112305
    10. 'ipe' → logprob: -5.4027814865112305

Token 1260: 'プ' (ID: 14515)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2244124710559845
    2. 'イ' → logprob: -2.224412441253662
    3. 'pe' → logprob: -2.849412441253662
    4. 'ipes' → logprob: -3.849412441253662
    5. 'def' → logprob: -5.724412441253662
    6. '#' → logprob: -5.724412441253662
    7. 'プ' → logprob: -6.724412441253662
    8. ')' → logprob: -6.724412441253662
    9. '）' → logprob: -7.474412441253662
    10. 'pes' → logprob: -7.974412441253662

Token 1261: 'だけ' (ID: 121885)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2641836404800415
    2. '[' → logprob: -2.264183521270752
    3. '[
' → logprob: -3.889183521270752
    4. '_' → logprob: -4.139183521270752
    5. 's' → logprob: -4.139183521270752
    6. ']
' → logprob: -4.264183521270752
    7. '[i' → logprob: -4.389183521270752
    8. 'の' → logprob: -5.014183521270752
    9. '```' → logprob: -5.014183521270752
    10. '[j' → logprob: -5.514183521270752

Token 1262: 'を' (ID: 7277)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9248442649841309
    2. 'を' → logprob: -1.4248442649841309
    3. 'の' → logprob: -2.674844264984131
    4. '[' → logprob: -2.924844264984131
    5. ')' → logprob: -2.924844264984131
    6. '[i' → logprob: -3.674844264984131
    7. ' を' → logprob: -3.924844264984131
    8. 'が' → logprob: -4.299844264984131
    9. '#' → logprob: -4.424844264984131
    10. '   ' → logprob: -4.674844264984131

Token 1263: 'つ' (ID: 18290)
  Prédit: '使用'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '使用' → logprob: -1.6495261192321777
    2. ')' → logprob: -2.0245261192321777
    3. 'を' → logprob: -2.5245261192321777
    4. ']' → logprob: -2.5245261192321777
    5. '使' → logprob: -2.5245261192321777
    6. 'used' → logprob: -2.6495261192321777
    7. '#' → logprob: -3.0245261192321777
    8. 'util' → logprob: -3.3995261192321777
    9. 'つ' → logprob: -3.5245261192321777
    10. '利用' → logprob: -3.5245261192321777

Token 1264: 'な' (ID: 5784)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.049636721611023
    2. 'r' → logprob: -1.424636721611023
    3. 'oints' → logprob: -2.6746368408203125
    4. '```' → logprob: -2.9246368408203125
    5. 'i' → logprob: -3.4246368408203125
    6. 'é' → logprob: -3.7996368408203125
    7. 's' → logprob: -4.0496368408203125
    8. 't' → logprob: -4.1746368408203125
    9. '使用' → logprob: -4.1746368408203125
    10. '`' → logprob: -4.2996368408203125

Token 1265: 'げ' (ID: 62943)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1355735063552856
    2. ']' → logprob: -2.510573387145996
    3. 'd' → logprob: -2.885573387145996
    4. '[
' → logprob: -2.885573387145996
    5. 'n' → logprob: -3.260573387145996
    6. ')' → logprob: -3.260573387145996
    7. '=' → logprob: -3.510573387145996
    8. 'ン' → logprob: -3.635573387145996
    9. '_' → logprob: -3.760573387145996
    10. 'u' → logprob: -3.885573387145996

Token 1266: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.18967050313949585
    2. 'ら' → logprob: -2.9396705627441406
    3. 'て' → logprob: -3.4396705627441406
    4. ')' → logprob: -4.189670562744141
    5. 'u' → logprob: -4.189670562744141
    6. '```' → logprob: -4.314670562744141
    7. '）' → logprob: -5.439670562744141
    8. 'れ' → logprob: -5.564670562744141
    9. 'よ' → logprob: -5.564670562744141
    10. 'う' → logprob: -5.564670562744141

Token 1267: 'こと' (ID: 53217)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2040770053863525
    2. ')' → logprob: -1.9540770053863525
    3. '")' → logprob: -1.9540770053863525
    4. 'j' → logprob: -3.0790770053863525
    5. '[i' → logprob: -3.3290770053863525
    6. '_' → logprob: -3.5790770053863525
    7. '[j' → logprob: -3.5790770053863525
    8. '[' → logprob: -3.8290770053863525
    9. '）' → logprob: -3.8290770053863525
    10. '#' → logprob: -3.8290770053863525

Token 1268: 'が' (ID: 6632)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3126540184020996
    2. ']' → logprob: -1.3126540184020996
    3. '[
' → logprob: -1.6876540184020996
    4. '[' → logprob: -2.4376540184020996
    5. '[i' → logprob: -2.8126540184020996
    6. '#' → logprob: -2.8126540184020996
    7. '_' → logprob: -4.4376540184021
    8. '）' → logprob: -4.9376540184021
    9. ')
' → logprob: -5.5626540184021
    10. '[]' → logprob: -5.8126540184021

Token 1269: 'でき' (ID: 78673)
  Prédit: 'できます'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'できます' → logprob: -0.5913510322570801
    2. 'でき' → logprob: -0.8413510322570801
    3. '#' → logprob: -5.84135103225708
    4. '可能' → logprob: -5.84135103225708
    5. 'possible' → logprob: -5.96635103225708
    6. 'で' → logprob: -6.46635103225708
    7. 'き' → logprob: -6.59135103225708
    8. '```' → logprob: -6.96635103225708
    9. 'import' → logprob: -7.34135103225708
    10. 'が' → logprob: -7.84135103225708

Token 1270: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -1.084732174873352
    2. 'が' → logprob: -2.5847320556640625
    3. 'ます' → logprob: -2.5847320556640625
    4. 'れ' → logprob: -2.5847320556640625
    5. 'よ' → logprob: -2.8347320556640625
    6. 'す' → logprob: -2.8347320556640625
    7. '```' → logprob: -2.9597320556640625
    8. 'う' → logprob: -3.5847320556640625
    9. 'でき' → logprob: -3.5847320556640625
    10. 'ょう' → logprob: -3.9597320556640625

Token 1271: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9034086465835571
    2. '   ' → logprob: -1.6534086465835571
    3. ']' → logprob: -2.6534085273742676
    4. '[
' → logprob: -2.7784085273742676
    5. '[' → logprob: -2.9034085273742676
    6. '#' → logprob: -3.1534085273742676
    7. 'def' → logprob: -3.7784085273742676
    8. ')
' → logprob: -4.028408527374268
    9. '[j' → logprob: -4.403408527374268
    10. ':' → logprob: -4.403408527374268

Token 1272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028190141543745995
    2. ')' → logprob: -5.4031901359558105
    3. '[
' → logprob: -5.6531901359558105
    4. ')
' → logprob: -6.0281901359558105
    5. '[' → logprob: -6.0281901359558105
    6. 'def' → logprob: -6.2781901359558105
    7. 'n' → logprob: -6.4031901359558105
    8. '    
' → logprob: -6.7781901359558105
    9. ':' → logprob: -6.7781901359558105
    10. ',' → logprob: -7.0281901359558105

Token 1273: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05538216978311539
    2. ')' → logprob: -4.680382251739502
    3. 'def' → logprob: -5.180382251739502
    4. ')
' → logprob: -5.430382251739502
    5. 'j' → logprob: -5.680382251739502
    6. '[
' → logprob: -5.680382251739502
    7. ':' → logprob: -5.805382251739502
    8. ']' → logprob: -6.055382251739502
    9. ',' → logprob: -6.180382251739502
    10. 'n' → logprob: -6.180382251739502

Token 1274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04036017134785652
    2. 'n' → logprob: -3.79036021232605
    3. 'def' → logprob: -5.290359973907471
    4. 'j' → logprob: -5.540359973907471
    5. '    
' → logprob: -6.165359973907471
    6. ')' → logprob: -7.415359973907471
    7. ':' → logprob: -7.415359973907471
    8. '(n' → logprob: -7.415359973907471
    9. '\n' → logprob: -7.790359973907471
    10. '
' → logprob: -7.790359973907471

Token 1275: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09054126590490341
    2. 'n' → logprob: -2.590541362762451
    3. 'j' → logprob: -5.340541362762451
    4. 'def' → logprob: -5.465541362762451
    5. '    
' → logprob: -7.340541362762451
    6. 'p' → logprob: -7.590541362762451
    7. '```' → logprob: -8.340540885925293
    8. 'length' → logprob: -8.840540885925293
    9. ')' → logprob: -8.965540885925293
    10. '(n' → logprob: -9.465540885925293

Token 1276: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029729081317782402
    2. 'n' → logprob: -4.404728889465332
    3. 'j' → logprob: -5.154728889465332
    4. ')' → logprob: -6.154728889465332
    5. '    
' → logprob: -6.154728889465332
    6. 'def' → logprob: -7.029728889465332
    7. ':' → logprob: -7.279728889465332
    8. '(n' → logprob: -7.779728889465332
    9. '\' → logprob: -7.904728889465332
    10. '(' → logprob: -7.904728889465332

Token 1277: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033272288739681244
    2. 'n' → logprob: -3.5332722663879395
    3. 'def' → logprob: -6.4082722663879395
    4. ' n' → logprob: -7.7832722663879395
    5. '    
' → logprob: -8.033272743225098
    6. 'j' → logprob: -8.158272743225098
    7. '
' → logprob: -8.908272743225098
    8. '```' → logprob: -8.908272743225098
    9. '#' → logprob: -9.033272743225098
    10. ')' → logprob: -9.283272743225098

Token 1278: ' joints' (ID: 47223)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0489145517349243
    2. 'n' → logprob: -1.4239145517349243
    3. 'j' → logprob: -1.7989145517349243
    4. '   ' → logprob: -2.1739144325256348
    5. 'segments' → logprob: -3.4239144325256348
    6. 'def' → logprob: -3.7989144325256348
    7. ')' → logprob: -4.048914432525635
    8. 'for' → logprob: -5.423914432525635
    9. '(n' → logprob: -5.548914432525635
    10. '#
' → logprob: -5.798914432525635

Token 1279: ' connect' (ID: 4837)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8965228199958801
    2. ' =' → logprob: -1.5215227603912354
    3. '=' → logprob: -1.7715227603912354
    4. '[i' → logprob: -2.5215227603912354
    5. '```' → logprob: -3.2715227603912354
    6. '_' → logprob: -4.0215229988098145
    7. ':' → logprob: -4.1465229988098145
    8. 's' → logprob: -4.3965229988098145
    9. '_used' → logprob: -5.3965229988098145
    10. '[]' → logprob: -5.3965229988098145

Token 1280: 'ant' (ID: 493)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6394394636154175
    2. 's' → logprob: -1.3894394636154175
    3. '[' → logprob: -2.014439582824707
    4. ']' → logprob: -3.264439582824707
    5. '=' → logprob: -4.014439582824707
    6. ' =' → logprob: -4.764439582824707
    7. '[i' → logprob: -5.389439582824707
    8. ')' → logprob: -5.639439582824707
    9. 'es' → logprob: -6.014439582824707
    10. '[
' → logprob: -6.139439582824707

Token 1281: ' bien' (ID: 5340)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9421871304512024
    2. '[' → logprob: -1.8171870708465576
    3. ')' → logprob: -2.9421870708465576
    4. ' j' → logprob: -2.9421870708465576
    5. '`' → logprob: -3.0671870708465576
    6. 'n' → logprob: -3.3171870708465576
    7. ' =' → logprob: -3.3171870708465576
    8. '```' → logprob: -3.6921870708465576
    9. 'j' → logprob: -3.8171870708465576
    10. ' n' → logprob: -4.192187309265137

Token 1282: ' deux' (ID: 10301)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8688226938247681
    2. ' les' → logprob: -1.368822693824768
    3. '[i' → logprob: -2.3688225746154785
    4. '`' → logprob: -3.4938225746154785
    5. 'n' → logprob: -3.8688225746154785
    6. '```' → logprob: -4.2438225746154785
    7. '[' → logprob: -4.3688225746154785
    8. 'i' → logprob: -4.4938225746154785
    9. '   ' → logprob: -4.4938225746154785
    10. ' =' → logprob: -4.4938225746154785

Token 1283: ' tuy' (ID: 45164)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9242467880249023
    2. 'p' → logprob: -2.0492467880249023
    3. 'pipes' → logprob: -2.0492467880249023
    4. 't' → logprob: -2.1742467880249023
    5. ' pipes' → logprob: -2.5492467880249023
    6. 'j' → logprob: -2.5492467880249023
    7. '[' → logprob: -2.9242467880249023
    8. ')' → logprob: -2.9242467880249023
    9. 'n' → logprob: -3.1742467880249023
    10. '[i' → logprob: -3.7992467880249023

Token 1284: 'aux' (ID: 5454)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8217778205871582
    2. '[n' → logprob: -1.6967778205871582
    3. ']' → logprob: -2.321777820587158
    4. '[i' → logprob: -2.446777820587158
    5. 'es' → logprob: -3.321777820587158
    6. 'n' → logprob: -3.696777820587158
    7. '[
' → logprob: -3.946777820587158
    8. '```' → logprob: -3.946777820587158
    9. '   ' → logprob: -4.196777820587158
    10. 'pipes' → logprob: -4.321777820587158

Token 1285: ' adj' (ID: 20251)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26795628666877747
    2. '_' → logprob: -2.267956256866455
    3. '[i' → logprob: -3.142956256866455
    4. '[
' → logprob: -3.517956256866455
    5. 's' → logprob: -4.017956256866455
    6. '```' → logprob: -4.642956256866455
    7. ']' → logprob: -4.767956256866455
    8. ')' → logprob: -5.142956256866455
    9. ',' → logprob: -5.517956256866455
    10. '   ' → logprob: -6.392956256866455

Token 1286: 'ac' (ID: 359)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2850392460823059
    2. ']
' → logprob: -2.785039186477661
    3. '[' → logprob: -3.035039186477661
    4. '[
' → logprob: -3.035039186477661
    5. 'es' → logprob: -3.160039186477661
    6. '[i' → logprob: -4.53503942489624
    7. '[n' → logprob: -4.91003942489624
    8. '   ' → logprob: -5.16003942489624
    9. '])' → logprob: -5.66003942489624
    10. 'def' → logprob: -6.03503942489624

Token 1287: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.32475703954696655
    2. 'es' → logprob: -1.9497570991516113
    3. ']' → logprob: -3.0747570991516113
    4. 'és' → logprob: -3.6997570991516113
    5. ')' → logprob: -3.9497570991516113
    6. 's' → logprob: -4.324757099151611
    7. 'é' → logprob: -4.949757099151611
    8. '[i' → logprob: -5.199757099151611
    9. '[' → logprob: -5.324757099151611
    10. 'e' → logprob: -5.824757099151611

Token 1288: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33423128724098206
    2. ':' → logprob: -1.7092312574386597
    3. ',' → logprob: -3.834231376647949
    4. ')' → logprob: -4.209231376647949
    5. '[' → logprob: -4.334231376647949
    6. '):' → logprob: -4.834231376647949
    7. '[
' → logprob: -5.209231376647949
    8. ':
' → logprob: -5.459231376647949
    9. 'def' → logprob: -5.584231376647949
    10. '(
' → logprob: -5.709231376647949

Token 1289: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30166029930114746
    2. 'n' → logprob: -2.8016602993011475
    3. ':' → logprob: -3.1766602993011475
    4. 'j' → logprob: -3.4266602993011475
    5. 'def' → logprob: -3.5516602993011475
    6. 'p' → logprob: -3.6766602993011475
    7. ')' → logprob: -3.8016602993011475
    8. ' =' → logprob: -4.801660537719727
    9. '):' → logprob: -4.801660537719727
    10. ',' → logprob: -5.551660537719727

Token 1290: ' peut' (ID: 9216)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8151430487632751
    2. 'def' → logprob: -1.81514310836792
    3. 'n' → logprob: -2.06514310836792
    4. '=' → logprob: -2.31514310836792
    5. ' n' → logprob: -2.56514310836792
    6. '   ' → logprob: -3.44014310836792
    7. '#' → logprob: -4.31514310836792
    8. 's' → logprob: -4.56514310836792
    9. ' peut' → logprob: -5.69014310836792
    10. '.append' → logprob: -5.69014310836792

Token 1291: ' choisir' (ID: 47004)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.9602760076522827
    2. '_' → logprob: -1.8352760076522827
    3. 'util' → logprob: -2.8352761268615723
    4. ' continuer' → logprob: -2.8352761268615723
    5. ' ' → logprob: -3.0852761268615723
    6. ' choisir' → logprob: -3.2102761268615723
    7. 'n' → logprob: -3.3352761268615723
    8. ''utiliser' → logprob: -3.4602761268615723
    9. '   ' → logprob: -3.9602761268615723
    10. ''' → logprob: -4.210276126861572

Token 1292: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0353972911834717
    2. '   ' → logprob: -1.1603972911834717
    3. '```' → logprob: -2.6603972911834717
    4. 'de' → logprob: -3.1603972911834717
    5. ' de' → logprob: -3.2853972911834717
    6. '`' → logprob: -3.7853972911834717
    7. 'd' → logprob: -4.035397529602051
    8. 'def' → logprob: -4.035397529602051
    9. ')' → logprob: -4.160397529602051
    10. '[]' → logprob: -4.285397529602051

Token 1293: '
' (ID: 198)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1302428245544434
    2. 'util' → logprob: -1.6302428245544434
    3. ' les' → logprob: -1.7552428245544434
    4. ' utiliser' → logprob: -3.1302428245544434
    5. '#' → logprob: -3.3802428245544434
    6. 'rel' → logprob: -3.7552428245544434
    7. 'act' → logprob: -3.7552428245544434
    8. ' ne' → logprob: -3.8802428245544434
    9. 'connect' → logprob: -3.8802428245544434
    10. ' rel' → logprob: -3.8802428245544434

Token 1294: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21609027683734894
    2. ' utiliser' → logprob: -2.216090202331543
    3. 'n' → logprob: -3.341090202331543
    4. 'util' → logprob: -5.216090202331543
    5. ''utiliser' → logprob: -5.216090202331543
    6. ' ' → logprob: -5.466090202331543
    7. 'r' → logprob: -5.716090202331543
    8. '   ' → logprob: -5.716090202331543
    9. ' continuer' → logprob: -5.716090202331543
    10. ' ' → logprob: -6.216090202331543

Token 1295: ' #' (ID: 1069)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -1.4097346067428589
    2. '   ' → logprob: -1.5347346067428589
    3. 'util' → logprob: -2.5347347259521484
    4. ''utiliser' → logprob: -2.5347347259521484
    5. ' continuer' → logprob: -2.6597347259521484
    6. '#' (adapté à ' #') → logprob: -2.6597347259521484
    7. 'n' → logprob: -3.6597347259521484
    8. 'contin' → logprob: -3.7847347259521484
    9. '```' → logprob: -3.9097347259521484
    10. ' ' → logprob: -3.9097347259521484

Token 1296: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7333694696426392
    2. 'rel' → logprob: -1.9833694696426392
    3. 'util' → logprob: -1.9833694696426392
    4. 'les' → logprob: -2.1083693504333496
    5. '   ' → logprob: -2.2333693504333496
    6. 'connect' → logprob: -2.6083693504333496
    7. 'contin' → logprob: -3.7333693504333496
    8. ' couper' → logprob: -3.7333693504333496
    9. ' les' → logprob: -3.8583693504333496
    10. ' rel' → logprob: -3.9833693504333496

Token 1297: ' utiliser' (ID: 43227)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.651005744934082
    2. '#' → logprob: -2.401005744934082
    3. ' utiliser' → logprob: -2.526005744934082
    4. 'connect' → logprob: -2.901005744934082
    5. 'cho' → logprob: -3.026005744934082
    6. 'contin' → logprob: -3.651005744934082
    7. 'for' → logprob: -3.776005744934082
    8. 'aj' → logprob: -3.901005744934082
    9. 'mettre' → logprob: -4.401005744934082
    10. '
' → logprob: -4.401005744934082

Token 1298: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12267931550741196
    2. ' =' → logprob: -3.3726792335510254
    3. '_' → logprob: -4.247679233551025
    4. ':' → logprob: -4.497679233551025
    5. 'def' → logprob: -4.497679233551025
    6. 's' → logprob: -4.872679233551025
    7. ',' → logprob: -5.122679233551025
    8. '=' → logprob: -5.247679233551025
    9. '[
' → logprob: -5.372679233551025
    10. '[' → logprob: -5.497679233551025

Token 1299: ' non' (ID: 2893)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.10437004268169403
    2. '   ' → logprob: -3.6043701171875
    3. ' pas' → logprob: -3.7293701171875
    4. 'not' → logprob: -3.8543701171875
    5. 'ne' → logprob: -4.2293701171875
    6. 'non' → logprob: -4.8543701171875
    7. ' ne' → logprob: -5.7293701171875
    8. '
' → logprob: -8.1043701171875
    9. ' not' → logprob: -8.3543701171875
    10. '```' → logprob: -8.7293701171875

Token 1300: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10070261359214783
    2. ':' → logprob: -2.7257025241851807
    3. '[' → logprob: -5.35070276260376
    4. 'def' → logprob: -5.47570276260376
    5. ')' → logprob: -5.97570276260376
    6. ',' → logprob: -6.10070276260376
    7. '[
' → logprob: -6.10070276260376
    8. ':
' → logprob: -6.22570276260376
    9. ' =' → logprob: -6.85070276260376
    10. 's' → logprob: -6.85070276260376

Token 1301: ' façon' (ID: 33381)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3885761499404907
    2. 'fin' → logprob: -2.388576030731201
    3. 'r' → logprob: -2.638576030731201
    4. ' f' → logprob: -3.263576030731201
    5. ' la' → logprob: -3.513576030731201
    6. ' ' → logprob: -4.513576030731201
    7. '
' → logprob: -5.138576030731201
    8. 'pas' → logprob: -5.138576030731201
    9. ' r' → logprob: -5.513576030731201
    10. '#' → logprob: -5.513576030731201

Token 1302: ' indépendante' (ID: 188424)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.36458641290664673
    2. 'strict' → logprob: -2.614586353302002
    3. ' continue' → logprob: -2.739586353302002
    4. 'contin' → logprob: -3.614586353302002
    5. 'possible' → logprob: -4.114586353302002
    6. '```' → logprob: -4.114586353302002
    7. 'ind' → logprob: -4.364586353302002
    8. 'à' → logprob: -4.739586353302002
    9. ' indépendante' → logprob: -4.864586353302002
    10. 'distinct' → logprob: -5.239586353302002

Token 1303: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10716984421014786
    2. ':' → logprob: -2.9821698665618896
    3. 'def' → logprob: -4.3571696281433105
    4. ')' → logprob: -4.7321696281433105
    5. ',' → logprob: -4.9821696281433105
    6. '(n' → logprob: -5.3571696281433105
    7. '[' → logprob: -5.9821696281433105
    8. '(' → logprob: -6.3571696281433105
    9. '[n' → logprob: -6.6071696281433105
    10. '(
' → logprob: -6.7321696281433105

Token 1304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041949231177568436
    2. 'n' → logprob: -4.041949272155762
    3. 'def' → logprob: -4.291949272155762
    4. '(n' → logprob: -5.041949272155762
    5. '    
' → logprob: -6.916949272155762
    6. '
' → logprob: -7.666949272155762
    7. '```' → logprob: -7.666949272155762
    8. '\n' → logprob: -8.416949272155762
    9. '\' → logprob: -8.416949272155762
    10. '(
' → logprob: -8.666949272155762

Token 1305: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008227902464568615
    2. 'n' → logprob: -5.883227825164795
    3. 'def' → logprob: -6.258227825164795
    4. '    
' → logprob: -6.383227825164795
    5. 'j' → logprob: -7.008227825164795
    6. '```' → logprob: -8.508228302001953
    7. 'p' → logprob: -9.508228302001953
    8. '(
' → logprob: -9.508228302001953
    9. '
' → logprob: -9.633228302001953
    10. ')' → logprob: -9.633228302001953

Token 1306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0389777235686779
    2. 'n' → logprob: -3.53897762298584
    3. 'def' → logprob: -5.03897762298584
    4. '    
' → logprob: -6.78897762298584
    5. '(n' → logprob: -7.53897762298584
    6. ':' → logprob: -8.53897762298584
    7. '```' → logprob: -8.91397762298584
    8. '
' → logprob: -9.16397762298584
    9. ')' → logprob: -9.16397762298584
    10. '\' → logprob: -9.53897762298584

Token 1307: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12383940070867538
    2. 'n' → logprob: -2.9988393783569336
    3. 'j' → logprob: -3.1238393783569336
    4. '    
' → logprob: -5.248839378356934
    5. 'p' → logprob: -5.373839378356934
    6. 'def' → logprob: -5.373839378356934
    7. '[
' → logprob: -7.123839378356934
    8. '[' → logprob: -7.248839378356934
    9. '"' → logprob: -7.373839378356934
    10. '#' (adapté à ' #') → logprob: -7.373839378356934

Token 1308: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6253180503845215
    2. 'n' → logprob: -0.8753180503845215
    3. 'p' → logprob: -4.1253180503845215
    4. 'j' → logprob: -4.3753180503845215
    5. 'def' → logprob: -4.3753180503845215
    6. '#' → logprob: -5.8753180503845215
    7. 'pipes' → logprob: -6.8753180503845215
    8. 'length' → logprob: -7.3753180503845215
    9. '    
' → logprob: -7.6253180503845215
    10. 'joint' → logprob: -7.7503180503845215

Token 1309: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18837979435920715
    2. ' i' → logprob: -1.9383797645568848
    3. '_' → logprob: -4.688379764556885
    4. 'j' → logprob: -4.938379764556885
    5. ' _' → logprob: -5.438379764556885
    6. '   ' → logprob: -6.313379764556885
    7. '_i' → logprob: -6.688379764556885
    8. ' j' → logprob: -6.813379764556885
    9. '_j' → logprob: -6.938379764556885
    10. ' line' → logprob: -7.188379764556885

Token 1310: ' formation' (ID: 18704)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0919913798570633
    2. 'j' → logprob: -3.091991424560547
    3. '   ' → logprob: -3.591991424560547
    4. ')' → logprob: -5.966991424560547
    5. 'i' → logprob: -6.216991424560547
    6. 'def' → logprob: -6.216991424560547
    7. ' n' → logprob: -6.841991424560547
    8. '_' → logprob: -6.841991424560547
    9. 'p' → logprob: -7.216991424560547
    10. ']' → logprob: -7.466991424560547

Token 1311: ' finale' (ID: 37759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.083716630935669
    2. ' des' → logprob: -1.333716630935669
    3. ' de' → logprob: -1.583716630935669
    4. 'def' → logprob: -2.958716630935669
    5. 'de' → logprob: -3.458716630935669
    6. 'des' → logprob: -3.958716630935669
    7. ' ' → logprob: -4.58371639251709
    8. '_' → logprob: -4.70871639251709
    9. ' of' → logprob: -4.83371639251709
    10. '#' → logprob: -4.83371639251709

Token 1312: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2564009130001068
    2. ':' → logprob: -2.0064008235931396
    3. 'def' → logprob: -3.7564008235931396
    4. '_' → logprob: -4.381401062011719
    5. ':
' → logprob: -4.756401062011719
    6. 'n' → logprob: -5.256401062011719
    7. 's' → logprob: -5.381401062011719
    8. ',' → logprob: -5.631401062011719
    9. '(
' → logprob: -5.756401062011719
    10. '(n' → logprob: -6.131401062011719

Token 1313: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03978661820292473
    2. 'n' → logprob: -3.4147865772247314
    3. '```' → logprob: -6.5397868156433105
    4. 'def' → logprob: -6.7897868156433105
    5. 'j' → logprob: -7.0397868156433105
    6. '    
' → logprob: -7.4147868156433105
    7. ' n' → logprob: -7.6647868156433105
    8. '
' → logprob: -7.7897868156433105
    9. '#' → logprob: -8.539786338806152
    10. ':' → logprob: -8.664786338806152

Token 1314: ' segments' (ID: 33749)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9002342820167542
    2. 'n' → logprob: -1.1502342224121094
    3. 'j' → logprob: -2.0252342224121094
    4. '   ' → logprob: -2.7752342224121094
    5. '#' → logprob: -4.150234222412109
    6. 'def' → logprob: -4.275234222412109
    7. 't' → logprob: -4.400234222412109
    8. 'pipes' → logprob: -4.775234222412109
    9. ' n' → logprob: -5.400234222412109
    10. ' p' → logprob: -5.775234222412109

Token 1315: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.395814448595047
    2. '=' → logprob: -1.5208144187927246
    3. '   ' → logprob: -2.6458144187927246
    4. 's' → logprob: -3.8958144187927246
    5. ':' → logprob: -5.645814418792725
    6. '```' → logprob: -5.770814418792725
    7. '.append' → logprob: -6.645814418792725
    8. '=[]' → logprob: -6.770814418792725
    9. ' sont' → logprob: -6.895814418792725
    10. '=[]
' → logprob: -7.520814418792725

Token 1316: ' form' (ID: 1625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4766663908958435
    2. 'form' → logprob: -1.3516664505004883
    3. ' form' → logprob: -2.7266664505004883
    4. 'dé' → logprob: -3.7266664505004883
    5. '[]' → logprob: -5.351666450500488
    6. 'une' → logprob: -5.976666450500488
    7. ' défin' → logprob: -5.976666450500488
    8. 'def' → logprob: -6.101666450500488
    9. '```' → logprob: -6.226666450500488
    10. '[]
' → logprob: -6.351666450500488

Token 1317: 'és' (ID: 1756)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2162548005580902
    2. 'ed' → logprob: -2.216254711151123
    3. 'és' → logprob: -3.091254711151123
    4. '()
' → logprob: -4.716254711151123
    5. 'é' → logprob: -4.841254711151123
    6. 'ées' → logprob: -5.341254711151123
    7. '   ' → logprob: -5.341254711151123
    8. 'ée' → logprob: -6.216254711151123
    9. '```' → logprob: -6.216254711151123
    10. '[
' → logprob: -6.341254711151123

Token 1318: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.0178486108779907
    2. '   ' → logprob: -1.2678486108779907
    3. ' de' → logprob: -2.517848491668701
    4. 'de' → logprob: -2.642848491668701
    5. '=' → logprob: -3.392848491668701
    6. ' =' → logprob: -3.642848491668701
    7. 'par' → logprob: -3.642848491668701
    8. '```' → logprob: -3.642848491668701
    9. 'd' → logprob: -4.017848491668701
    10. ' by' → logprob: -5.017848491668701

Token 1319: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8879423141479492
    2. 'les' → logprob: -1.1379423141479492
    3. 'la' → logprob: -2.762942314147949
    4. 'une' → logprob: -2.887942314147949
    5. ' les' → logprob: -3.012942314147949
    6. 'p' → logprob: -3.512942314147949
    7. ' la' → logprob: -4.262942314147949
    8. 'un' → logprob: -4.512942314147949
    9. 'l' → logprob: -4.887942314147949
    10. ' p' → logprob: -5.137942314147949

Token 1320: ' suppression' (ID: 78014)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1324387788772583
    2. 't' → logprob: -2.0074386596679688
    3. 'p' → logprob: -2.0074386596679688
    4. '#' → logprob: -2.5074386596679688
    5. 'sé' → logprob: -2.5074386596679688
    6. 's' → logprob: -3.0074386596679688
    7. 'suite' → logprob: -3.3824386596679688
    8. 'def' → logprob: -4.007438659667969
    9. ' j' → logprob: -4.257438659667969
    10. 'joint' → logprob: -4.757438659667969

Token 1321: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0921528339385986
    2. ' des' → logprob: -1.4671528339385986
    3. 's' → logprob: -2.2171528339385986
    4. ' d' → logprob: -2.3421528339385986
    5. ' de' → logprob: -2.5921528339385986
    6. 'des' → logprob: -3.2171528339385986
    7. ' _' → logprob: -3.5921528339385986
    8. 'de' → logprob: -4.0921525955200195
    9. '_des' → logprob: -4.2171525955200195
    10. '_s' → logprob: -4.9671525955200195

Token 1322: ' joints' (ID: 47223)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7741839289665222
    2. 'j' → logprob: -1.274183988571167
    3. '"' → logprob: -3.149183988571167
    4. '\n' → logprob: -3.149183988571167
    5. '"\' → logprob: -3.649183988571167
    6. ' ' → logprob: -3.774183988571167
    7. 'cuts' → logprob: -4.024183750152588
    8. '   ' → logprob: -4.399183750152588
    9. 'if' → logprob: -4.399183750152588
    10. ' #' → logprob: -4.649183750152588

Token 1323: ' non' (ID: 2893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1189560666680336
    2. '_used' → logprob: -3.6189560890197754
    3. '```' → logprob: -3.6189560890197754
    4. 'between' → logprob: -4.868956089019775
    5. ' between' → logprob: -5.118956089019775
    6. '[' → logprob: -5.243956089019775
    7. '_util' → logprob: -5.243956089019775
    8. 'used' → logprob: -5.743956089019775
    9. '_between' → logprob: -5.743956089019775
    10. ' utilisés' → logprob: -5.743956089019775

Token 1324: ' utilisés' (ID: 94258)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.0864022970199585
    2. ' utilisés' → logprob: -2.586402416229248
    3. ' utilisées' → logprob: -6.336402416229248
    4. '-util' → logprob: -7.336402416229248
    5. 'used' → logprob: -7.586402416229248
    6. '_util' → logprob: -7.711402416229248
    7. ' utilis' → logprob: -7.711402416229248
    8. '\n' → logprob: -7.711402416229248
    9. 's' → logprob: -7.961402416229248
    10. '```' → logprob: -8.08640193939209

Token 1325: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.468605101108551
    2. '_' → logprob: -2.5936050415039062
    3. '[
' → logprob: -2.7186050415039062
    4. 'def' → logprob: -2.8436050415039062
    5. '[' → logprob: -2.9686050415039062
    6. 's' → logprob: -3.8436050415039062
    7. '(
' → logprob: -4.218605041503906
    8. '```' → logprob: -4.468605041503906
    9. ':' → logprob: -4.718605041503906
    10. ')' → logprob: -4.843605041503906

Token 1326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00384662882424891
    2. 'def' → logprob: -6.628846645355225
    3. '    
' → logprob: -7.253846645355225
    4. 'j' → logprob: -7.753846645355225
    5. 'n' → logprob: -8.003846168518066
    6. ':' → logprob: -8.503846168518066
    7. ')' → logprob: -8.628846168518066
    8. 's' → logprob: -9.878846168518066
    9. '
' → logprob: -10.003846168518066
    10. '```' → logprob: -10.003846168518066

Token 1327: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009377779439091682
    2. 'n' → logprob: -5.509377956390381
    3. 'def' → logprob: -6.134377956390381
    4. '    
' → logprob: -6.509377956390381
    5. '(n' → logprob: -7.759377956390381
    6. '```' → logprob: -8.259377479553223
    7. 'import' → logprob: -9.009377479553223
    8. ')' → logprob: -9.134377479553223
    9. '(
' → logprob: -9.134377479553223
    10. 'j' → logprob: -9.384377479553223

Token 1328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031097328290343285
    2. 'n' → logprob: -3.531097412109375
    3. 'def' → logprob: -7.281097412109375
    4. '    
' → logprob: -8.031097412109375
    5. '
' → logprob: -8.781097412109375
    6. '```' → logprob: -9.781097412109375
    7. ' n' → logprob: -11.031097412109375
    8. '(n' → logprob: -11.031097412109375
    9. '\' → logprob: -11.031097412109375
    10. '       ' → logprob: -11.281097412109375

Token 1329: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03796907141804695
    2. 'n' → logprob: -3.4129691123962402
    3. 'def' → logprob: -6.28796911239624
    4. 'j' → logprob: -6.78796911239624
    5. '    
' → logprob: -7.66296911239624
    6. 'p' → logprob: -7.78796911239624
    7. '```' → logprob: -9.412968635559082
    8. '       ' → logprob: -9.537968635559082
    9. '(n' → logprob: -10.037968635559082
    10. '\' → logprob: -10.412968635559082

Token 1330: ' D' (ID: 415)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2541906237602234
    2. 'n' → logprob: -1.5041906833648682
    3. 'def' → logprob: -6.629190444946289
    4. '    
' → logprob: -7.504190444946289
    5. '```' → logprob: -9.504190444946289
    6. '(n' → logprob: -9.879190444946289
    7. ' n' → logprob: -9.879190444946289
    8. '
' → logprob: -9.879190444946289
    9. '	n' → logprob: -10.379190444946289
    10. '\' → logprob: -10.879190444946289

Token 1331: ''où' (ID: 186468)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8151333928108215
    2. 'ef' → logprob: -0.8151333928108215
    3. '=' → logprob: -3.4401333332061768
    4. 'f' → logprob: -3.9401333332061768
    5. ' =' → logprob: -4.065133571624756
    6. ')' → logprob: -4.565133571624756
    7. '_' → logprob: -4.690133571624756
    8. ':' → logprob: -5.190133571624756
    9. 'n' → logprob: -5.315133571624756
    10. ',' → logprob: -5.940133571624756

Token 1332: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02183109149336815
    2. 'j' → logprob: -4.771831035614014
    3. 'n' → logprob: -4.896831035614014
    4. '```' → logprob: -6.771831035614014
    5. '    
' → logprob: -7.271831035614014
    6. 'la' → logprob: -7.521831035614014
    7. '#' → logprob: -7.646831035614014
    8. 'joint' → logprob: -7.896831035614014
    9. 'l' → logprob: -8.146831512451172
    10. 'segments' → logprob: -8.396831512451172

Token 1333: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25415170192718506
    2. 'n' → logprob: -1.504151701927185
    3. '    
' → logprob: -7.504151821136475
    4. ' n' → logprob: -7.629151821136475
    5. '```' → logprob: -7.754151821136475
    6. 'def' → logprob: -7.879151821136475
    7. 'j' → logprob: -9.129151344299316
    8. '	n' → logprob: -10.004151344299316
    9. 't' → logprob: -10.629151344299316
    10. '\' → logprob: -11.004151344299316

Token 1334: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0897198915481567
    2. '   ' → logprob: -2.214719772338867
    3. '#' → logprob: -2.589719772338867
    4. 'def' → logprob: -2.589719772338867
    5. ' total' → logprob: -3.089719772338867
    6. ' n' → logprob: -3.214719772338867
    7. ' #' → logprob: -3.339719772338867
    8. ' for' → logprob: -3.464719772338867
    9. 'total' → logprob: -3.714719772338867
    10. 'max' → logprob: -3.839719772338867

Token 1335: ' total' (ID: 3609)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.8154609203338623
    2. '   ' → logprob: -1.1904609203338623
    3. '_' → logprob: -1.8154609203338623
    4. '_of' → logprob: -3.0654609203338623
    5. ' de' → logprob: -4.565461158752441
    6. '_des' → logprob: -4.815461158752441
    7. '_d' → logprob: -5.065461158752441
    8. 'de' → logprob: -5.440461158752441
    9. 'def' → logprob: -5.565461158752441
    10. ' =' → logprob: -5.815461158752441

Token 1336: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5817980766296387
    2. '_de' → logprob: -1.0817980766296387
    3. '=' → logprob: -3.7067980766296387
    4. '_of' → logprob: -3.9567980766296387
    5. '_j' → logprob: -4.081798076629639
    6. 'de' → logprob: -4.831798076629639
    7. ' =' → logprob: -4.831798076629639
    8. '_des' → logprob: -4.831798076629639
    9. '   ' → logprob: -5.581798076629639
    10. '_d' → logprob: -6.456798076629639

Token 1337: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6102985739707947
    2. '_' → logprob: -1.8602986335754395
    3. '_segments' → logprob: -1.8602986335754395
    4. '_j' → logprob: -2.3602986335754395
    5. 'j' → logprob: -3.6102986335754395
    6. 't' → logprob: -4.7352986335754395
    7. '_t' → logprob: -4.9852986335754395
    8. '\' → logprob: -6.8602986335754395
    9. '_p' → logprob: -7.1102986335754395
    10. 's' → logprob: -7.1102986335754395

Token 1338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40779194235801697
    2. '=' → logprob: -1.2827919721603394
    3. '   ' → logprob: -3.28279185295105
    4. 's' → logprob: -4.907792091369629
    5. '=n' → logprob: -6.157792091369629
    6. 'def' → logprob: -6.407792091369629
    7. '=
' → logprob: -6.657792091369629
    8. ')' → logprob: -6.657792091369629
    9. '```' → logprob: -6.657792091369629
    10. ',' → logprob: -6.782792091369629

Token 1339: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35049495100975037
    2. ' n' → logprob: -1.2254949808120728
    3. '   ' → logprob: -6.225494861602783
    4. 'len' → logprob: -10.975495338439941
    5. ' len' → logprob: -11.100495338439941
    6. '	n' → logprob: -11.600495338439941
    7. ' sys' → logprob: -11.850495338439941
    8. '(n' → logprob: -12.225495338439941
    9. 'sys' → logprob: -12.975495338439941
    10. ' (' → logprob: -13.225495338439941

Token 1340: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.22092410922050476
    2. '_' → logprob: -1.8459241390228271
    3. '_total' → logprob: -4.095923900604248
    4. 'de' → logprob: -4.845923900604248
    5. '_des' → logprob: -4.970923900604248
    6. '_util' → logprob: -6.095923900604248
    7. '_d' → logprob: -6.595923900604248
    8. '   ' → logprob: -7.095923900604248
    9. '_of' → logprob: -7.470923900604248
    10. ' de' → logprob: -7.595923900604248

Token 1341: ' tuy' (ID: 45164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6287863254547119
    2. 'p' → logprob: -1.628786325454712
    3. 'pipes' → logprob: -2.128786325454712
    4. 'segments' → logprob: -2.253786325454712
    5. ' tuy' → logprob: -4.503786087036133
    6. ' pipes' → logprob: -5.503786087036133
    7. ' segments' → logprob: -5.503786087036133
    8. '_t' → logprob: -5.628786087036133
    9. '   ' → logprob: -5.628786087036133
    10. 'j' → logprob: -6.003786087036133

Token 1342: 'aux' (ID: 5454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.42920276522636414
    2. 'pipes' → logprob: -2.3042027950286865
    3. 'p' → logprob: -3.1792027950286865
    4. 'aux' → logprob: -3.4292027950286865
    5. 's' → logprob: -3.5542027950286865
    6. '#' → logprob: -3.5542027950286865
    7. '   ' → logprob: -3.9292027950286865
    8. 'n' → logprob: -4.429202556610107
    9. '[
' → logprob: -4.679202556610107
    10. 'es' → logprob: -4.679202556610107

Token 1343: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2396397739648819
    2. '   ' → logprob: -2.3646397590637207
    3. ' =' → logprob: -3.7396397590637207
    4. '()' → logprob: -3.9896397590637207
    5. '=' → logprob: -4.489639759063721
    6. 'n' → logprob: -4.489639759063721
    7. 's' → logprob: -4.739639759063721
    8. ':' → logprob: -4.739639759063721
    9. '```' → logprob: -5.114639759063721
    10. '(
' → logprob: -5.239639759063721

Token 1344: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.11876162141561508
    2. ' nombre' → logprob: -2.2437615394592285
    3. 'sum' → logprob: -6.8687615394592285
    4. '1' → logprob: -6.8687615394592285
    5. 'len' → logprob: -7.2437615394592285
    6. 'number' → logprob: -7.3687615394592285
    7. 'used' → logprob: -7.3687615394592285
    8. ' used' → logprob: -7.7437615394592285
    9. ' nombres' → logprob: -8.118762016296387
    10. '(nombre' → logprob: -8.368762016296387

Token 1345: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.18300697207450867
    2. '_' → logprob: -2.058007001876831
    3. '_d' → logprob: -4.183006763458252
    4. '_util' → logprob: -4.433006763458252
    5. '_of' → logprob: -4.933006763458252
    6. '_des' → logprob: -5.808006763458252
    7. '_used' → logprob: -7.183006763458252
    8. '_total' → logprob: -7.808006763458252
    9. ' de' → logprob: -8.80800724029541
    10. '_s' → logprob: -9.05800724029541

Token 1346: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06181618198752403
    2. '_j' → logprob: -3.0618162155151367
    3. ' joints' → logprob: -5.686816215515137
    4. 'used' → logprob: -6.061816215515137
    5. '```' → logprob: -6.186816215515137
    6. '\' → logprob: -6.811816215515137
    7. 'joint' → logprob: -6.811816215515137
    8. '_used' → logprob: -6.936816215515137
    9. 'util' → logprob: -7.811816215515137
    10. 'joins' → logprob: -7.936816215515137

Token 1347: ' utilisés' (ID: 94258)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9908674359321594
    2. '(' → logprob: -1.6158673763275146
    3. '_' → logprob: -1.6158673763275146
    4. 's' → logprob: -1.9908673763275146
    5. '(
' → logprob: -3.3658673763275146
    6. '=' → logprob: -4.740867614746094
    7. '.' → logprob: -4.740867614746094
    8. ' =' → logprob: -5.240867614746094
    9. '[' → logprob: -5.490867614746094
    10. '()' → logprob: -5.490867614746094

Token 1348: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47938090562820435
    2. 'def' → logprob: -1.3543808460235596
    3. 'n' → logprob: -3.4793808460235596
    4. ':' → logprob: -3.6043808460235596
    5. '(
' → logprob: -4.104381084442139
    6. ':
' → logprob: -4.729381084442139
    7. '(n' → logprob: -4.729381084442139
    8. '(' → logprob: -4.854381084442139
    9. ' =' → logprob: -5.104381084442139
    10. '=' → logprob: -5.854381084442139

Token 1349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02748977579176426
    2. 'def' → logprob: -4.27748966217041
    3. 'n' → logprob: -4.52748966217041
    4. '(n' → logprob: -7.40248966217041
    5. '```' → logprob: -7.90248966217041
    6. '    
' → logprob: -8.15248966217041
    7. ')' → logprob: -8.52748966217041
    8. ':' → logprob: -8.52748966217041
    9. 'import' → logprob: -9.02748966217041
    10. 'j' → logprob: -9.15248966217041

Token 1350: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36975669860839844
    2. 'n' → logprob: -1.3697566986083984
    3. 'def' → logprob: -2.9947566986083984
    4. 'import' → logprob: -6.244756698608398
    5. '(n' → logprob: -7.244756698608398
    6. '```' → logprob: -7.869756698608398
    7. '    
' → logprob: -8.244756698608398
    8. ')' → logprob: -8.494756698608398
    9. 'j' → logprob: -8.494756698608398
    10. ' n' → logprob: -8.619756698608398

Token 1351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06411866843700409
    2. 'n' → logprob: -2.8141186237335205
    3. 'def' → logprob: -6.6891188621521
    4. '    
' → logprob: -7.8141188621521
    5. '```' → logprob: -8.689118385314941
    6. 'import' → logprob: -9.189118385314941
    7. '
' → logprob: -9.564118385314941
    8. ' n' → logprob: -9.689118385314941
    9. '(n' → logprob: -10.439118385314941
    10. '	n' → logprob: -11.314118385314941

Token 1352: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33099210262298584
    2. 'n' → logprob: -1.3309921026229858
    3. 'def' → logprob: -4.080992221832275
    4. ' n' → logprob: -8.580991744995117
    5. 'import' → logprob: -8.705991744995117
    6. '    
' → logprob: -8.955991744995117
    7. '```' → logprob: -9.705991744995117
    8. '
' → logprob: -10.705991744995117
    9. '#' (adapté à ' #') → logprob: -10.955991744995117
    10. ')' → logprob: -11.205991744995117

Token 1353: ' Maintenant' (ID: 163349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6454640030860901
    2. 'n' → logprob: -0.7704640030860901
    3. 'def' → logprob: -4.395463943481445
    4. '    
' → logprob: -9.020463943481445
    5. 'import' → logprob: -9.145463943481445
    6. '```' → logprob: -9.395463943481445
    7. ' n' → logprob: -9.895463943481445
    8. '	n' → logprob: -10.895463943481445
    9. 't' → logprob: -11.145463943481445
    10. '(n' → logprob: -11.270463943481445

Token 1354: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03450256213545799
    2. 'n' → logprob: -3.4095025062561035
    3. '    
' → logprob: -8.659502983093262
    4. 'def' → logprob: -9.034502983093262
    5. 'j' → logprob: -9.159502983093262
    6. ' n' → logprob: -9.659502983093262
    7. '	n' → logprob: -10.034502983093262
    8. '```' → logprob: -10.034502983093262
    9. '       ' → logprob: -10.159502983093262
    10. ',' → logprob: -10.284502983093262

Token 1355: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32716596126556396
    2. '   ' → logprob: -1.327165961265564
    3. 'j' → logprob: -4.5771660804748535
    4. 'p' → logprob: -6.7021660804748535
    5. ' n' → logprob: -7.2021660804748535
    6. 'for' → logprob: -7.9521660804748535
    7. 'length' → logprob: -8.327165603637695
    8. 'pipes' → logprob: -8.327165603637695
    9. 'joint' → logprob: -9.077165603637695
    10. '#' → logprob: -9.577165603637695

Token 1356: ' solution' (ID: 7578)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013920074328780174
    2. 'def' → logprob: -4.888920307159424
    3. '#' → logprob: -6.638920307159424
    4. '   ' → logprob: -6.763920307159424
    5. 'total' → logprob: -7.263920307159424
    6. '
' → logprob: -7.263920307159424
    7. 'j' → logprob: -7.638920307159424
    8. 'p' → logprob: -8.013919830322266
    9. 's' → logprob: -8.138919830322266
    10. ' n' → logprob: -8.513919830322266

Token 1357: ' consiste' (ID: 46504)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10793325304985046
    2. ':' → logprob: -2.732933282852173
    3. ' =' → logprob: -4.357933044433594
    4. 'def' → logprob: -4.857933044433594
    5. '(n' → logprob: -4.982933044433594
    6. 'n' → logprob: -5.982933044433594
    7. ':
' → logprob: -6.232933044433594
    8. '```' → logprob: -6.482933044433594
    9. '():' → logprob: -6.857933044433594
    10. '=' → logprob: -7.357933044433594

Token 1358: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8759246468544006
    2. '   ' → logprob: -1.1259245872497559
    3. 'à' → logprob: -1.3759245872497559
    4. 'import' → logprob: -5.750924587249756
    5. '    ' → logprob: -6.875924587249756
    6. 'def' → logprob: -7.500924587249756
    7. ''à' → logprob: -7.875924587249756
    8. ' ' → logprob: -8.250925064086914
    9. '```' → logprob: -8.500925064086914
    10. ' =' → logprob: -8.500925064086914

Token 1359: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1439143717288971
    2. 'n' → logprob: -2.5189144611358643
    3. 'j' → logprob: -3.7689144611358643
    4. 'p' → logprob: -4.768914222717285
    5. 'def' → logprob: -4.768914222717285
    6. ' n' → logprob: -5.393914222717285
    7. 't' → logprob: -6.518914222717285
    8. '#' → logprob: -6.768914222717285
    9. ' j' → logprob: -6.893914222717285
    10. 'dp' → logprob: -6.893914222717285

Token 1360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007630494073964655
    2. 'n' → logprob: -7.875762939453125
    3. 'def' → logprob: -8.875762939453125
    4. '#' → logprob: -9.375762939453125
    5. '```' → logprob: -9.750762939453125
    6. '    
' → logprob: -10.625762939453125
    7. 'import' → logprob: -10.750762939453125
    8. '	n' → logprob: -11.000762939453125
    9. ' n' → logprob: -11.875762939453125
    10. '
' → logprob: -12.250762939453125

Token 1361: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010489522479474545
    2. 'n' → logprob: -4.635489463806152
    3. '#' (adapté à ' #') → logprob: -8.135489463806152
    4. 'def' → logprob: -8.885489463806152
    5. '    
' → logprob: -9.510489463806152
    6. 'pass' → logprob: -9.760489463806152
    7. '	n' → logprob: -10.135489463806152
    8. ' n' → logprob: -10.135489463806152
    9. '
' → logprob: -10.510489463806152
    10. 't' → logprob: -11.385489463806152

Token 1362: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028463639318943024
    2. 'n' → logprob: -6.5028462409973145
    3. 'def' → logprob: -7.5028462409973145
    4. '#' → logprob: -8.627846717834473
    5. '```' → logprob: -8.627846717834473
    6. ' n' → logprob: -9.252846717834473
    7. 'sum' → logprob: -9.377846717834473
    8. '    
' → logprob: -9.877846717834473
    9. '
' → logprob: -10.627846717834473
    10. 's' → logprob: -10.877846717834473

Token 1363: ' Calcul' (ID: 57243)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7411158084869385
    2. '   ' → logprob: -1.1161158084869385
    3. 'sum' → logprob: -2.8661158084869385
    4. 'p' → logprob: -3.4911158084869385
    5. 'pipes' → logprob: -3.4911158084869385
    6. 'S' → logprob: -3.6161158084869385
    7. '#' → logprob: -4.366115570068359
    8. 'def' → logprob: -4.741115570068359
    9. 'prefix' → logprob: -4.866115570068359
    10. 'total' → logprob: -5.366115570068359

Token 1364: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.016747359186410904
    2. 'ate' → logprob: -4.76674747467041
    3. 'r' → logprob: -4.89174747467041
    4. '   ' → logprob: -8.26674747467041
    5. '#' → logprob: -9.01674747467041
    6. 'ons' → logprob: -9.76674747467041
    7. 'e' → logprob: -10.01674747467041
    8. 'rer' → logprob: -10.39174747467041
    9. '       ' → logprob: -10.51674747467041
    10. 'n' → logprob: -11.76674747467041

Token 1365: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.40081334114074707
    2. '   ' → logprob: -1.650813341140747
    3. ' la' → logprob: -2.150813341140747
    4. 'sum' → logprob: -4.650813102722168
    5. 'n' → logprob: -5.775813102722168
    6. 'total' → logprob: -6.150813102722168
    7. 's' → logprob: -6.275813102722168
    8. 'le' → logprob: -6.400813102722168
    9. 'les' → logprob: -6.775813102722168
    10. 'S' → logprob: -7.400813102722168

Token 1366: ' salaire' (ID: 135427)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5154761075973511
    2. 'p' → logprob: -1.765476107597351
    3. 'S' → logprob: -2.8904762268066406
    4. 'sum' → logprob: -2.8904762268066406
    5. 'total' → logprob: -3.3904762268066406
    6. 'pipes' → logprob: -3.5154762268066406
    7. 's' → logprob: -4.015476226806641
    8. 'j' → logprob: -4.140476226806641
    9. 'def' → logprob: -5.390476226806641
    10. 'pipe' → logprob: -6.140476226806641

Token 1367: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10832750797271729
    2. '_' → logprob: -3.1083273887634277
    3. 's' → logprob: -3.8583273887634277
    4. ' =' → logprob: -4.483327388763428
    5. ':' → logprob: -5.233327388763428
    6. '_j' → logprob: -5.858327388763428
    7. '=' → logprob: -5.983327388763428
    8. 'def' → logprob: -6.358327388763428
    9. '(s' → logprob: -6.483327388763428
    10. '_total' → logprob: -6.483327388763428

Token 1368: ' tous' (ID: 10688)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0158876180648804
    2. 'c' → logprob: -2.01588773727417
    3. 'x' → logprob: -2.64088773727417
    4. 't' → logprob: -2.76588773727417
    5. 'les' → logprob: -2.76588773727417
    6. ' chaque' → logprob: -3.01588773727417
    7. 'une' → logprob: -3.26588773727417
    8. 'k' → logprob: -3.26588773727417
    9. 'i' → logprob: -3.39088773727417
    10. 'la' → logprob: -3.39088773727417

Token 1369: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8077627420425415
    2. 'les' → logprob: -1.1827627420425415
    3. ':' → logprob: -1.9327627420425415
    4. '_j' → logprob: -4.057762622833252
    5. '_' → logprob: -4.182762622833252
    6. 'j' → logprob: -4.557762622833252
    7. '```' → logprob: -4.557762622833252
    8. ' les' → logprob: -4.682762622833252
    9. '`' → logprob: -5.432762622833252
    10. '[j' → logprob: -5.432762622833252

Token 1370: ' sous' (ID: 14487)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5851598381996155
    2. 'j' → logprob: -1.3351597785949707
    3. 'n' → logprob: -2.3351597785949707
    4. 'segments' → logprob: -4.335159778594971
    5. 'ranges' → logprob: -4.710159778594971
    6. '   ' → logprob: -4.835159778594971
    7. '#' → logprob: -4.960159778594971
    8. 'p' → logprob: -5.085159778594971
    9. 'range' → logprob: -5.710159778594971
    10. '_j' → logprob: -5.835159778594971

Token 1371: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.044182632118463516
    2. '   ' → logprob: -3.419182538986206
    3. '_j' → logprob: -5.419182777404785
    4. '_p' → logprob: -6.919182777404785
    5. '\' → logprob: -7.044182777404785
    6. 'segments' → logprob: -7.669182777404785
    7. '_segments' → logprob: -7.919182777404785
    8. 's' → logprob: -8.044182777404785
    9. ' =' → logprob: -8.294182777404785
    10. ' _' → logprob: -8.294182777404785

Token 1372: 'ense' (ID: 1603)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.1319496631622314
    2. '_' → logprob: -2.1319496631622314
    3. '#' → logprob: -2.3819496631622314
    4. '   ' → logprob: -2.5069496631622314
    5. 'j' → logprob: -3.0069496631622314
    6. '`' → logprob: -3.1319496631622314
    7. '```' → logprob: -3.3819496631622314
    8. '
' → logprob: -3.5069496631622314
    9. 'arrays' → logprob: -3.8819496631622314
    10. '_p' → logprob: -4.131949424743652

Token 1373: 'mbles' (ID: 60383)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.2471480816602707
    2. 't' → logprob: -1.622148036956787
    3. 'quences' → logprob: -4.247148036956787
    4. 'gments' → logprob: -5.372148036956787
    5. 'ments' → logprob: -6.997148036956787
    6. 'nts' → logprob: -7.622148036956787
    7. 'q' → logprob: -8.372148513793945
    8. 'g' → logprob: -8.497148513793945
    9. '```' → logprob: -9.122148513793945
    10. '   ' → logprob: -9.247148513793945

Token 1374: ' possibles' (ID: 97753)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9433788061141968
    2. 's' → logprob: -1.9433788061141968
    3. '```' → logprob: -2.0683789253234863
    4. '_j' → logprob: -2.1933789253234863
    5. '   ' → logprob: -2.4433789253234863
    6. '[' → logprob: -3.5683789253234863
    7. 'def' → logprob: -3.9433789253234863
    8. ':' → logprob: -4.193378925323486
    9. '[]' → logprob: -4.693378925323486
    10. ' =' → logprob: -4.818378925323486

Token 1375: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0405770018696785
    2. 'def' → logprob: -4.165576934814453
    3. '_j' → logprob: -5.415576934814453
    4. 'import' → logprob: -6.040576934814453
    5. '
' → logprob: -6.040576934814453
    6. 's' → logprob: -6.165576934814453
    7. '_' → logprob: -6.665576934814453
    8. ')' → logprob: -6.790576934814453
    9. '#' → logprob: -7.040576934814453
    10. ',' → logprob: -7.040576934814453

Token 1376: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11431259661912918
    2. 'l' → logprob: -3.8643126487731934
    3. '   ' → logprob: -4.114312648773193
    4. ' joints' → logprob: -4.114312648773193
    5. 'la' → logprob: -4.239312648773193
    6. ' la' → logprob: -4.739312648773193
    7. 'n' → logprob: -4.739312648773193
    8. '#' → logprob: -4.739312648773193
    9. '```' → logprob: -5.739312648773193
    10. ' j' → logprob: -6.614312648773193

Token 1377: ' utilisés' (ID: 94258)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3586333394050598
    2. 'def' → logprob: -1.983633279800415
    3. '_' → logprob: -3.358633279800415
    4. 's' → logprob: -3.358633279800415
    5. ':' → logprob: -4.108633518218994
    6. '[
' → logprob: -4.608633518218994
    7. '_j' → logprob: -4.733633518218994
    8. '[' → logprob: -4.983633518218994
    9. ' =' → logprob: -5.233633518218994
    10. '[]' → logprob: -5.358633518218994

Token 1378: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09419329464435577
    2. ':' → logprob: -3.71919322013855
    3. 'def' → logprob: -4.219193458557129
    4. 'j' → logprob: -4.219193458557129
    5. '```' → logprob: -5.094193458557129
    6. 'n' → logprob: -5.719193458557129
    7. '(n' → logprob: -5.844193458557129
    8. '(' → logprob: -5.969193458557129
    9. ':
' → logprob: -5.969193458557129
    10. '`' → logprob: -6.094193458557129

Token 1379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029806718230247498
    2. 'def' → logprob: -7.002980709075928
    3. '    
' → logprob: -8.00298023223877
    4. ':' → logprob: -8.12798023223877
    5. 'n' → logprob: -8.12798023223877
    6. ')' → logprob: -9.00298023223877
    7. '(n' → logprob: -9.00298023223877
    8. '
' → logprob: -9.12798023223877
    9. 'j' → logprob: -9.12798023223877
    10. 'import' → logprob: -9.25298023223877

Token 1380: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021534085273742676
    2. 'n' → logprob: -5.146533966064453
    3. 'j' → logprob: -5.896533966064453
    4. '(' → logprob: -6.021533966064453
    5. '    
' → logprob: -6.646533966064453
    6. ':' → logprob: -6.771533966064453
    7. 'p' → logprob: -7.021533966064453
    8. '\' → logprob: -7.396533966064453
    9. '()' → logprob: -7.521533966064453
    10. '```' → logprob: -7.521533966064453

Token 1381: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058553531765937805
    2. 'n' → logprob: -3.058553457260132
    3. 'def' → logprob: -6.183553695678711
    4. 'j' → logprob: -6.308553695678711
    5. '    
' → logprob: -6.683553695678711
    6. 'p' → logprob: -7.058553695678711
    7. '```' → logprob: -7.308553695678711
    8. '(' → logprob: -7.558553695678711
    9. '(n' → logprob: -7.683553695678711
    10. '       ' → logprob: -8.433553695678711

Token 1382: ' Trou' (ID: 58947)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2622252106666565
    2. 'j' → logprob: -2.3872251510620117
    3. 'n' → logprob: -2.5122251510620117
    4. 'p' → logprob: -3.7622251510620117
    5. '#' → logprob: -4.387225151062012
    6. 'def' → logprob: -5.637225151062012
    7. '    
' → logprob: -6.137225151062012
    8. ' #' → logprob: -6.137225151062012
    9. 'for' → logprob: -6.262225151062012
    10. 'lines' → logprob: -6.762225151062012

Token 1383: 'ver' (ID: 445)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5310308933258057
    2. 'def' → logprob: -1.1560308933258057
    3. ' =' → logprob: -4.031030654907227
    4. 's' → logprob: -4.656030654907227
    5. '_' → logprob: -4.781030654907227
    6. '```' → logprob: -4.781030654907227
    7. '=' → logprob: -5.156030654907227
    8. '#' → logprob: -5.531030654907227
    9. '[]' → logprob: -5.656030654907227
    10. 'r' → logprob: -5.656030654907227

Token 1384: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3963102102279663
    2. 'la' → logprob: -1.6463102102279663
    3. '_' → logprob: -1.7713102102279663
    4. 'le' → logprob: -2.021310329437256
    5. ' la' → logprob: -2.271310329437256
    6. ' ' → logprob: -3.646310329437256
    7. '`' → logprob: -4.271310329437256
    8. '_le' → logprob: -4.271310329437256
    9. ' le' → logprob: -4.396310329437256
    10. '=' → logprob: -4.646310329437256

Token 1385: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.46476036310195923
    2. 'maximum' → logprob: -1.5897603034973145
    3. 'best' → logprob: -1.9647603034973145
    4. ' maximum' → logprob: -4.9647603034973145
    5. ' max' → logprob: -5.9647603034973145
    6. ' best' → logprob: -6.0897603034973145
    7. 'm' → logprob: -6.3397603034973145
    8. 'n' → logprob: -6.3397603034973145
    9. 'i' → logprob: -6.5897603034973145
    10. 'me' → logprob: -6.9647603034973145

Token 1386: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13012050092220306
    2. 'def' → logprob: -2.8801205158233643
    3. 'n' → logprob: -3.3801205158233643
    4. ':' → logprob: -5.130120277404785
    5. '(n' → logprob: -5.130120277404785
    6. '(' → logprob: -5.505120277404785
    7. '()' → logprob: -5.630120277404785
    8. '(
' → logprob: -6.255120277404785
    9. ':
' → logprob: -6.505120277404785
    10. '```' → logprob: -6.630120277404785

Token 1387: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7918344140052795
    2. 'j' → logprob: -1.6668343544006348
    3. 'max' → logprob: -1.7918343544006348
    4. 'x' → logprob: -2.6668343544006348
    5. 'joint' → logprob: -3.6668343544006348
    6. 'n' → logprob: -4.166834354400635
    7. 'range' → logprob: -4.291834354400635
    8. 'len' → logprob: -4.791834354400635
    9. 's' → logprob: -4.791834354400635
    10. '(sum' → logprob: -4.791834354400635

Token 1388: 'nombre' (ID: 28576)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0214612483978271
    2. ' (' → logprob: -2.021461248397827
    3. ')' → logprob: -2.146461248397827
    4. 'max' → logprob: -2.271461248397827
    5. '(n' → logprob: -2.646461248397827
    6. 'c' → logprob: -3.146461248397827
    7. 'n' → logprob: -3.521461248397827
    8. ' max' → logprob: -3.521461248397827
    9. ' x' → logprob: -3.896461248397827
    10. '(' → logprob: -4.146461486816406

Token 1389: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.22971951961517334
    2. '_' → logprob: -1.7297195196151733
    3. '_of' → logprob: -4.354719638824463
    4. '_des' → logprob: -4.854719638824463
    5. '_j' → logprob: -5.979719638824463
    6. 'de' → logprob: -7.229719638824463
    7. '_segments' → logprob: -7.479719638824463
    8. '_d' → logprob: -7.604719638824463
    9. ')_' → logprob: -7.729719638824463
    10. ')' → logprob: -7.729719638824463

Token 1390: '_segments' (ID: 142925)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.1372578740119934
    2. '_segments' → logprob: -2.3872578144073486
    3. '_' → logprob: -3.3872578144073486
    4. ''_' → logprob: -7.137258052825928
    5. '_joint' → logprob: -8.51225757598877
    6. 'segments' → logprob: -8.88725757598877
    7. 'j' → logprob: -8.88725757598877
    8. '_t' → logprob: -9.13725757598877
    9. ' _' → logprob: -9.13725757598877
    10. ')_' → logprob: -9.13725757598877

Token 1391: ')' (ID: 8)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20485050976276398
    2. ')' → logprob: -2.579850435256958
    3. '*' → logprob: -2.829850435256958
    4. ' *' → logprob: -3.579850435256958
    5. '+' → logprob: -5.579850673675537
    6. '-' → logprob: -5.704850673675537
    7. ' _' → logprob: -5.829850673675537
    8. '=' → logprob: -5.954850673675537
    9. '_used' → logprob: -6.579850673675537
    10. ' ' → logprob: -6.954850673675537

Token 1392: ' *' (ID: 425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24110949039459229
    2. '=' → logprob: -1.9911094903945923
    3. ' =' → logprob: -3.3661093711853027
    4. '   ' → logprob: -4.241109371185303
    5. '_used' → logprob: -5.241109371185303
    6. '```' → logprob: -5.366109371185303
    7. ',' → logprob: -5.616109371185303
    8. ':' → logprob: -6.241109371185303
    9. 'def' → logprob: -6.366109371185303
    10. ')' → logprob: -6.616109371185303

Token 1393: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17726154625415802
    2. ' (' → logprob: -2.3022615909576416
    3. '(n' → logprob: -2.9272615909576416
    4. '(S' → logprob: -5.5522613525390625
    5. '(x' → logprob: -6.6772613525390625
    6. '_' → logprob: -6.9272613525390625
    7. '(s' → logprob: -7.1772613525390625
    8. '```' → logprob: -7.8022613525390625
    9. 'x' → logprob: -7.9272613525390625
    10. ' ' → logprob: -8.802261352539062

Token 1394: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19226504862308502
    2. ' (' → logprob: -2.817265033721924
    3. 'sum' → logprob: -3.317265033721924
    4. '(s' → logprob: -3.567265033721924
    5. '(sum' → logprob: -3.567265033721924
    6. '(n' → logprob: -4.817265033721924
    7. '(S' → logprob: -4.942265033721924
    8. ' sum' → logprob: -6.442265033721924
    9. 's' → logprob: -6.692265033721924
    10. ' somme' → logprob: -6.942265033721924

Token 1395: 'omme' (ID: 30420)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.02945077419281
    2. '_' → logprob: -1.02945077419281
    3. 'um' → logprob: -2.0294508934020996
    4. '=' → logprob: -3.1544508934020996
    5. 'eg' → logprob: -3.9044508934020996
    6. '(n' → logprob: -4.6544508934021
    7. ']' → logprob: -4.6544508934021
    8. '_n' → logprob: -4.7794508934021
    9. 'egment' → logprob: -5.0294508934021
    10. '_i' → logprob: -5.1544508934021

Token 1396: '_des' (ID: 28977)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.5366635322570801
    2. '_' → logprob: -0.9116635322570801
    3. '_des' → logprob: -5.28666353225708
    4. ')' → logprob: -6.53666353225708
    5. '_t' → logprob: -6.53666353225708
    6. 'des' → logprob: -6.66166353225708
    7. '_de' → logprob: -7.03666353225708
    8. '_of' → logprob: -7.16166353225708
    9. '```' → logprob: -7.41166353225708
    10. 'de' → logprob: -7.78666353225708

Token 1397: '_t' (ID: 838)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.4200197756290436
    2. '_' → logprob: -1.2950197458267212
    3. 'j' → logprob: -2.7950198650360107
    4. ')' → logprob: -6.045019626617432
    5. '_p' → logprob: -6.170019626617432
    6. '_t' → logprob: -6.795019626617432
    7. 'p' → logprob: -7.920019626617432
    8. 't' → logprob: -8.17002010345459
    9. '\' → logprob: -8.67002010345459
    10. '   ' → logprob: -8.79502010345459

Token 1398: 'uy' (ID: 3731)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.645997166633606
    2. '_' → logprob: -0.895997166633606
    3. '_p' → logprob: -3.3959970474243164
    4. '_i' → logprob: -4.520997047424316
    5. 'j' → logprob: -5.020997047424316
    6. '_joint' → logprob: -6.020997047424316
    7. ')' → logprob: -6.145997047424316
    8. 'eg' → logprob: -6.770997047424316
    9. ')_' → logprob: -7.145997047424316
    10. '_n' → logprob: -7.270997047424316

Token 1399: 'aux' (ID: 5454)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7918774485588074
    2. 'pipes' → logprob: -1.1668775081634521
    3. 'p' → logprob: -3.041877508163452
    4. '   ' → logprob: -3.166877508163452
    5. 'pes' → logprob: -3.541877508163452
    6. 'aux' → logprob: -4.041877269744873
    7. '```' → logprob: -4.166877269744873
    8. 's' → logprob: -4.666877269744873
    9. 'ipes' → logprob: -4.791877269744873
    10. 'ages' → logprob: -4.916877269744873

Token 1400: '_et' (ID: 103440)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5601348876953125
    2. ')' → logprob: -1.1851348876953125
    3. '_used' → logprob: -3.0601348876953125
    4. '_util' → logprob: -3.4351348876953125
    5. '+' → logprob: -4.1851348876953125
    6. ' +' → logprob: -5.0601348876953125
    7. '_)' → logprob: -5.5601348876953125
    8. '_j' → logprob: -5.8101348876953125
    9. 's' → logprob: -6.1851348876953125
    10. '[' → logprob: -6.1851348876953125

Token 1401: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.1795329451560974
    2. '_' → logprob: -1.9295330047607422
    3. 'j' → logprob: -4.054533004760742
    4. ' _' → logprob: -7.679533004760742
    5. '_des' → logprob: -8.304533004760742
    6. '\' → logprob: -8.429533004760742
    7. 'des' → logprob: -8.554533004760742
    8. '_used' → logprob: -8.804533004760742
    9. '_joint' → logprob: -9.054533004760742
    10. ')' → logprob: -9.179533004760742

Token 1402: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.009079540148377419
    2. 'o' → logprob: -5.509079456329346
    3. 'oint' → logprob: -6.259079456329346
    4. '_' → logprob: -6.509079456329346
    5. 's' → logprob: -8.134079933166504
    6. 'oin' → logprob: -8.509079933166504
    7. '_o' → logprob: -8.509079933166504
    8. '```' → logprob: -9.259079933166504
    9. ']' → logprob: -9.634079933166504
    10. ')' → logprob: -9.759079933166504

Token 1403: '_util' (ID: 46866)
  Prédit: '_util'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.5119996070861816
    2. '_used' → logprob: -1.1369996070861816
    3. '_' → logprob: -2.7619996070861816
    4. ')' → logprob: -4.261999607086182
    5. '```' → logprob: -7.511999607086182
    6. '_)' → logprob: -7.636999607086182
    7. '[' → logprob: -8.636999130249023
    8. 'util' → logprob: -8.761999130249023
    9. ')_' → logprob: -8.886999130249023
    10. '`)' → logprob: -9.386999130249023

Token 1404: 'ises' (ID: 5555)
  Prédit: 'isés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isés' → logprob: -0.029928555712103844
    2. 'és' → logprob: -3.90492844581604
    3. 'es' → logprob: -5.529928684234619
    4. 'isées' → logprob: -5.904928684234619
    5. 'érés' → logprob: -7.154928684234619
    6. '```' → logprob: -7.404928684234619
    7. 'ises' → logprob: -8.154928207397461
    8. 'is' → logprob: -8.154928207397461
    9. ' utilisés' → logprob: -9.529928207397461
    10. 's' → logprob: -9.529928207397461

Token 1405: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7267187833786011
    2. '_' → logprob: -0.9767187833786011
    3. '_used' → logprob: -2.6017189025878906
    4. '_)' → logprob: -3.7267189025878906
    5. 's' → logprob: -4.101718902587891
    6. '_util' → logprob: -4.601718902587891
    7. ')_' → logprob: -4.976718902587891
    8. '[' → logprob: -5.851718902587891
    9. '[])' → logprob: -7.601718902587891
    10. '```' → logprob: -7.601718902587891

Token 1406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002837918931618333
    2. 'def' → logprob: -7.002838134765625
    3. ':' → logprob: -8.127838134765625
    4. '    
' → logprob: -8.252838134765625
    5. 'n' → logprob: -8.377838134765625
    6. '(n' → logprob: -8.752838134765625
    7. '
' → logprob: -9.002838134765625
    8. '(
' → logprob: -9.377838134765625
    9. ')' → logprob: -9.377838134765625
    10. '       ' → logprob: -9.502838134765625

Token 1407: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017926793545484543
    2. 'n' → logprob: -4.2679266929626465
    3. 'def' → logprob: -6.5179266929626465
    4. '(n' → logprob: -7.1429266929626465
    5. 'import' → logprob: -7.7679266929626465
    6. '    
' → logprob: -7.8929266929626465
    7. '\' → logprob: -8.767927169799805
    8. '```' → logprob: -9.142927169799805
    9. '\n' → logprob: -9.767927169799805
    10. '(' → logprob: -10.017927169799805

Token 1408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4016300439834595
    2. 'n' → logprob: -1.1516300439834595
    3. 'def' → logprob: -4.27662992477417
    4. '```' → logprob: -7.90162992477417
    5. 'import' → logprob: -9.026630401611328
    6. '    
' → logprob: -9.276630401611328
    7. '(n' → logprob: -10.026630401611328
    8. ' n' → logprob: -10.151630401611328
    9. '#' → logprob: -10.526630401611328
    10. 'from' → logprob: -11.276630401611328

Token 1409: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07520481944084167
    2. 'n' → logprob: -2.950204849243164
    3. 'p' → logprob: -4.450204849243164
    4. 'def' → logprob: -5.700204849243164
    5. 'pipes' → logprob: -6.450204849243164
    6. '    
' → logprob: -6.950204849243164
    7. 'j' → logprob: -7.325204849243164
    8. '```' → logprob: -7.825204849243164
    9. 't' → logprob: -8.200204849243164
    10. '#' (adapté à ' #') → logprob: -8.200204849243164

Token 1410: ' Puis' (ID: 87717)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5535447597503662
    2. '   ' → logprob: -0.9285447597503662
    3. 'def' → logprob: -3.553544759750366
    4. '    
' → logprob: -7.553544998168945
    5. 'import' → logprob: -8.428544998168945
    6. ' n' → logprob: -9.178544998168945
    7. 'from' → logprob: -9.303544998168945
    8. '#' → logprob: -9.303544998168945
    9. '```' → logprob: -9.803544998168945
    10. '
' → logprob: -9.928544998168945

Token 1411: 'que' (ID: 1126)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005241821985691786
    2. 'n' → logprob: -5.880241870880127
    3. 'def' → logprob: -6.880241870880127
    4. '#' → logprob: -7.880241870880127
    5. 'j' → logprob: -8.130241394042969
    6. '    
' → logprob: -8.630241394042969
    7. '
' → logprob: -8.755241394042969
    8. '```' → logprob: -8.755241394042969
    9. 'pipes' → logprob: -10.380241394042969
    10. '   ' → logprob: -10.630241394042969

Token 1412: ' joints' (ID: 47223)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21870960295200348
    2. '   ' → logprob: -1.7187095880508423
    3. ' n' → logprob: -4.718709468841553
    4. 'j' → logprob: -5.218709468841553
    5. 'len' → logprob: -6.968709468841553
    6. 'def' → logprob: -8.593709945678711
    7. '    
' → logprob: -8.593709945678711
    8. '#' → logprob: -8.843709945678711
    9. '
' → logprob: -8.843709945678711
    10. '```' → logprob: -8.968709945678711

Token 1413: ' sont' (ID: 5242)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.4602023661136627
    2. ' =' → logprob: -1.3352023363113403
    3. '_util' → logprob: -3.33520245552063
    4. '_' → logprob: -3.46020245552063
    5. '=' → logprob: -3.96020245552063
    6. 's' → logprob: -5.460202217102051
    7. '[' → logprob: -5.960202217102051
    8. '_lengths' → logprob: -6.210202217102051
    9. '_length' → logprob: -6.960202217102051
    10. ')' → logprob: -7.085202217102051

Token 1414: ' cons' (ID: 1473)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8477762341499329
    2. 'n' → logprob: -1.222776174545288
    3. ' utilisés' → logprob: -2.972776174545288
    4. '   ' → logprob: -3.222776174545288
    5. 'util' → logprob: -3.597776174545288
    6. 's' → logprob: -3.847776174545288
    7. '#' → logprob: -4.347776412963867
    8. 't' → logprob: -4.597776412963867
    9. '[]
' → logprob: -4.597776412963867
    10. 'une' → logprob: -4.597776412963867

Token 1415: 'écut' (ID: 96392)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.7002612352371216
    2. 't' → logprob: -1.2002612352371216
    3. '#' → logprob: -2.200261116027832
    4. 'écut' → logprob: -4.200261116027832
    5. 'tr' → logprob: -4.450261116027832
    6. 'idé' → logprob: -4.450261116027832
    7. 'd' → logprob: -4.825261116027832
    8. 's' → logprob: -5.325261116027832
    9. 'erv' → logprob: -5.450261116027832
    10. 'omm' → logprob: -5.575261116027832

Token 1416: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.8056264519691467
    2. '[j' → logprob: -2.430626392364502
    3. 'def' → logprob: -2.555626392364502
    4. 'ents' → logprob: -2.805626392364502
    5. 'j' → logprob: -3.305626392364502
    6. '#' → logprob: -3.430626392364502
    7. 'e' → logprob: -3.555626392364502
    8. 's' → logprob: -3.555626392364502
    9. 'ive' → logprob: -3.555626392364502
    10. 'if' → logprob: -3.555626392364502

Token 1417: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.519339919090271
    2. '   ' → logprob: -1.769339919090271
    3. ',' → logprob: -1.894339919090271
    4. '[' → logprob: -2.3943400382995605
    5. '[j' → logprob: -2.5193400382995605
    6. '[
' → logprob: -3.2693400382995605
    7. '[n' → logprob: -3.3943400382995605
    8. ']' → logprob: -3.5193400382995605
    9. 'def' → logprob: -3.6443400382995605
    10. '_j' → logprob: -3.6443400382995605

Token 1418: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05928132310509682
    2. 'n' → logprob: -3.934281349182129
    3. 'j' → logprob: -4.309281349182129
    4. '#' → logprob: -5.059281349182129
    5. ' n' → logprob: -5.434281349182129
    6. '    
' → logprob: -6.059281349182129
    7. ' j' → logprob: -6.559281349182129
    8. ' #' → logprob: -6.934281349182129
    9. '```' → logprob: -7.059281349182129
    10. ':' → logprob: -7.184281349182129

Token 1419: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.5088819861412048
    2. '#' → logprob: -2.3838820457458496
    3. '_' → logprob: -2.7588820457458496
    4. ' peux' → logprob: -3.1338820457458496
    5. '_pe' → logprob: -3.3838820457458496
    6. ' peut' → logprob: -3.8838820457458496
    7. '[]' → logprob: -4.38388204574585
    8. 'do' → logprob: -4.50888204574585
    9. '[' → logprob: -4.50888204574585
    10. 'continue' → logprob: -4.63388204574585

Token 1420: ' choisir' (ID: 47004)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.1704732179641724
    2. 'penser' → logprob: -1.4204732179641724
    3. 'util' → logprob: -1.9204732179641724
    4. 'chercher' → logprob: -3.045473098754883
    5. '#' → logprob: -3.170473098754883
    6. 'faire' → logprob: -3.420473098754883
    7. 'contin' → logprob: -3.670473098754883
    8. 'ess' → logprob: -3.795473098754883
    9. 'prendre' → logprob: -4.045473098754883
    10. 'aj' → logprob: -4.170473098754883

Token 1421: ' un' (ID: 537)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1500214338302612
    2. '   ' → logprob: -1.5250214338302612
    3. 'un' → logprob: -2.900021553039551
    4. ':' → logprob: -3.275021553039551
    5. '_' → logprob: -3.275021553039551
    6. 'n' → logprob: -3.275021553039551
    7. '[' → logprob: -3.525021553039551
    8. ''' → logprob: -3.525021553039551
    9. 'j' → logprob: -3.525021553039551
    10. 'une' → logprob: -3.650021553039551

Token 1422: ' sous' (ID: 14487)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.5203168392181396
    2. 'subset' → logprob: -1.3953168392181396
    3. 's' → logprob: -2.3953168392181396
    4. '_' → logprob: -3.8953168392181396
    5. 'sub' → logprob: -4.645317077636719
    6. 'n' → logprob: -4.895317077636719
    7. 'joint' → logprob: -5.020317077636719
    8. '#' → logprob: -6.145317077636719
    9. '_subset' → logprob: -6.270317077636719
    10. '[' → logprob: -6.520317077636719

Token 1423: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0045913998037576675
    2. 'ensemble' → logprob: -6.629591464996338
    3. 'set' → logprob: -6.879591464996338
    4. '#' → logprob: -7.629591464996338
    5. '-' → logprob: -7.754591464996338
    6. '=' → logprob: -8.00459098815918
    7. '\' → logprob: -8.12959098815918
    8. '_
' → logprob: -9.00459098815918
    9. 'sets' → logprob: -9.37959098815918
    10. ' =' → logprob: -9.50459098815918

Token 1424: 'ensemble' (ID: 37301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4840194284915924
    2. 'ensemble' → logprob: -0.98401939868927
    3. 'ense' → logprob: -4.8590192794799805
    4. '```' → logprob: -7.8590192794799805
    5. '_
' → logprob: -8.10901927947998
    6. '\' → logprob: -8.48401927947998
    7. 'élé' → logprob: -8.73401927947998
    8. 'subset' → logprob: -8.85901927947998
    9. ' _' → logprob: -9.10901927947998
    10. '#' → logprob: -9.35901927947998

Token 1425: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5070067644119263
    2. '[' → logprob: -1.3820067644119263
    3. '_j' → logprob: -3.0070066452026367
    4. '   ' → logprob: -3.2570066452026367
    5. '```' → logprob: -3.7570066452026367
    6. '[j' → logprob: -4.882006645202637
    7. '[]' → logprob: -6.007006645202637
    8. '[
' → logprob: -6.007006645202637
    9. ' =' → logprob: -6.132006645202637
    10. 's' → logprob: -6.257006645202637

Token 1426: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.016000110656023026
    2. ' joints' → logprob: -5.516000270843506
    3. 'la' → logprob: -5.891000270843506
    4. ' la' → logprob: -6.141000270843506
    5. 'les' → logprob: -6.641000270843506
    6. 'l' → logprob: -6.891000270843506
    7. ' j' → logprob: -7.016000270843506
    8. '#' → logprob: -7.516000270843506
    9. '_j' → logprob: -8.015999794006348
    10. 'joint' → logprob: -8.015999794006348

Token 1427: ' non' (ID: 2893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3465545177459717
    2. '[' → logprob: -2.2215545177459717
    3. '_used' → logprob: -2.4715545177459717
    4. '_util' → logprob: -3.4715545177459717
    5. '   ' → logprob: -3.5965545177459717
    6. ' =' → logprob: -4.471554756164551
    7. '```' → logprob: -5.346554756164551
    8. 's' → logprob: -5.721554756164551
    9. '=' → logprob: -5.846554756164551
    10. ',' → logprob: -6.221554756164551

Token 1428: ' nécessaire' (ID: 43098)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.2837400436401367
    2. 'cont' → logprob: -1.4087400436401367
    3. 'vide' → logprob: -2.4087400436401367
    4. '#' → logprob: -2.5337400436401367
    5. ' utilisés' → logprob: -2.6587400436401367
    6. ' utilisé' → logprob: -3.7837400436401367
    7. 'import' → logprob: -4.033740043640137
    8. '\n' → logprob: -4.283740043640137
    9. 'esp' → logprob: -4.533740043640137
    10. '```' → logprob: -4.533740043640137

Token 1429: 'ment' (ID: 508)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4318576455116272
    2. '_used' → logprob: -2.0568575859069824
    3. 'util' → logprob: -3.1818575859069824
    4. 'used' → logprob: -3.3068575859069824
    5. '_util' → logprob: -3.4318575859069824
    6. '[' → logprob: -3.9318575859069824
    7. 'def' → logprob: -4.806857585906982
    8. ' utilisé' → logprob: -5.056857585906982
    9. '-util' → logprob: -5.306857585906982
    10. '   ' → logprob: -5.681857585906982

Token 1430: ' cont' (ID: 836)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.33416831493377686
    2. 'cons' → logprob: -3.0841684341430664
    3. '[]' → logprob: -3.0841684341430664
    4. '{' → logprob: -3.7091684341430664
    5. 'contin' → logprob: -4.084168434143066
    6. 'dé' → logprob: -4.084168434143066
    7. 'sé' → logprob: -4.209168434143066
    8. 'vide' → logprob: -4.584168434143066
    9. '[' → logprob: -4.709168434143066
    10. 'distinct' → logprob: -4.834168434143066

Token 1431: 'igus' (ID: 79914)
  Prédit: 'iguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iguous' → logprob: -0.5128052830696106
    2. 'igu' → logprob: -1.0128052234649658
    3. 'igus' → logprob: -4.012805461883545
    4. 'ig' → logprob: -4.387805461883545
    5. 'gu' → logprob: -5.887805461883545
    6. 'inu' → logprob: -6.012805461883545
    7. 'in' → logprob: -7.387805461883545
    8. 'u' → logprob: -7.637805461883545
    9. 'igious' → logprob: -8.637804985046387
    10. 'nu' → logprob: -9.262804985046387

Token 1432: ' ?
' (ID: 19740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22617582976818085
    2. '_' → logprob: -2.8511757850646973
    3. '_j' → logprob: -2.9761757850646973
    4. '[' → logprob: -3.8511757850646973
    5. '[j' → logprob: -4.351175785064697
    6. '[
' → logprob: -4.476175785064697
    7. ':' → logprob: -4.601175785064697
    8. 'def' → logprob: -5.101175785064697
    9. 's' → logprob: -5.476175785064697
    10. ')' → logprob: -5.601175785064697

Token 1433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4533970355987549
    2. '[' → logprob: -1.3283970355987549
    3. ')' → logprob: -3.953397035598755
    4. ']' → logprob: -4.328396797180176
    5. '[n' → logprob: -4.328396797180176
    6. '[
' → logprob: -4.453396797180176
    7. '_' → logprob: -4.703396797180176
    8. '[]' → logprob: -5.203396797180176
    9. ':' → logprob: -5.578396797180176
    10. 'def' → logprob: -5.953396797180176

Token 1434: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5382055640220642
    2. '[' → logprob: -1.788205623626709
    3. ':' → logprob: -2.788205623626709
    4. 'def' → logprob: -2.913205623626709
    5. '[
' → logprob: -3.288205623626709
    6. '[n' → logprob: -3.913205623626709
    7. '#' → logprob: -4.788205623626709
    8. ')' → logprob: -4.913205623626709
    9. '(n' → logprob: -5.163205623626709
    10. '```' → logprob: -5.163205623626709

Token 1435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07034295797348022
    2. 'n' → logprob: -3.320343017578125
    3. 'j' → logprob: -4.445343017578125
    4. 'def' → logprob: -4.445343017578125
    5. ':' → logprob: -6.070343017578125
    6. '[' → logprob: -6.945343017578125
    7. 'p' → logprob: -6.945343017578125
    8. '#' → logprob: -7.570343017578125
    9. '    
' → logprob: -7.820343017578125
    10. '(n' → logprob: -7.820343017578125

Token 1436: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06757654994726181
    2. 'n' → logprob: -3.9425766468048096
    3. 'def' → logprob: -4.1925764083862305
    4. 'j' → logprob: -4.3175764083862305
    5. '[' → logprob: -5.5675764083862305
    6. ':' → logprob: -5.8175764083862305
    7. '#' (adapté à ' #') → logprob: -6.6925764083862305
    8. '[
' → logprob: -6.8175764083862305
    9. '    
' → logprob: -7.1925764083862305
    10. '(' → logprob: -7.3175764083862305

Token 1437: ' En' (ID: 2130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8467859029769897
    2. 'def' → logprob: -1.2217859029769897
    3. 'n' → logprob: -2.8467860221862793
    4. ':' → logprob: -3.3467860221862793
    5. '[' → logprob: -3.4717860221862793
    6. '(n' → logprob: -3.5967860221862793
    7. 'j' → logprob: -3.9717860221862793
    8. ')' → logprob: -4.096786022186279
    9. '(
' → logprob: -4.096786022186279
    10. '(' → logprob: -4.596786022186279

Token 1438: ' fait' (ID: 7473)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2010602504014969
    2. 'n' → logprob: -2.8260602951049805
    3. 'j' → logprob: -3.0760602951049805
    4. '_' → logprob: -3.4510602951049805
    5. ' range' → logprob: -4.8260602951049805
    6. 'def' → logprob: -5.4510602951049805
    7. ')' → logprob: -5.5760602951049805
    8. 'ranges' → logprob: -5.8260602951049805
    9. 't' → logprob: -6.3260602951049805
    10. 'p' → logprob: -6.5760602951049805

Token 1439: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7848530411720276
    2. '_' → logprob: -1.4098529815673828
    3. '   ' → logprob: -1.7848529815673828
    4. 'def' → logprob: -2.534852981567383
    5. '#' → logprob: -4.784852981567383
    6. '[' → logprob: -5.034852981567383
    7. '
' → logprob: -5.284852981567383
    8. ' :' → logprob: -5.284852981567383
    9. '```' → logprob: -5.409852981567383
    10. ')' → logprob: -5.784852981567383

Token 1440: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06762435287237167
    2. ':' → logprob: -4.567624568939209
    3. 'j' → logprob: -4.817624568939209
    4. '[' → logprob: -5.067624568939209
    5. 'n' → logprob: -5.192624568939209
    6. 'def' → logprob: -5.192624568939209
    7. ' j' → logprob: -5.567624568939209
    8. ' :' → logprob: -5.817624568939209
    9. ' n' → logprob: -5.817624568939209
    10. '    ' → logprob: -5.942624568939209

Token 1441: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14710453152656555
    2. '_j' → logprob: -2.772104501724243
    3. 'j' → logprob: -3.147104501724243
    4. ')' → logprob: -5.022104740142822
    5. '#' → logprob: -5.522104740142822
    6. 's' → logprob: -5.647104740142822
    7. 'def' → logprob: -6.397104740142822
    8. 'n' → logprob: -6.397104740142822
    9. 'for' → logprob: -6.772104740142822
    10. '.' → logprob: -7.147104740142822

Token 1442: ' connect' (ID: 4837)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.012434959411621
    2. '_used' → logprob: -1.387434959411621
    3. '[' → logprob: -1.887434959411621
    4. ' =' → logprob: -2.262434959411621
    5. '[i' → logprob: -3.387434959411621
    6. '   ' → logprob: -4.387434959411621
    7. '=' → logprob: -4.637434959411621
    8. '```' → logprob: -4.762434959411621
    9. ')' → logprob: -5.262434959411621
    10. 's' → logprob: -5.387434959411621

Token 1443: 'ent' (ID: 299)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08979456126689911
    2. '[' → logprob: -3.464794635772705
    3. ']' → logprob: -4.464794635772705
    4. '[]' → logprob: -4.464794635772705
    5. 's' → logprob: -5.339794635772705
    6. 'er' → logprob: -5.589794635772705
    7. 'e' → logprob: -5.589794635772705
    8. 'é' → logprob: -5.964794635772705
    9. '=' → logprob: -6.464794635772705
    10. ')' → logprob: -6.589794635772705

Token 1444: ' uniquement' (ID: 65527)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9208763837814331
    2. '_' → logprob: -1.170876383781433
    3. '```' → logprob: -1.670876383781433
    4. '[i' → logprob: -3.5458765029907227
    5. '`' → logprob: -4.295876502990723
    6. '[]' → logprob: -4.420876502990723
    7. ''' → logprob: -5.170876502990723
    8. '   ' → logprob: -5.670876502990723
    9. ',' → logprob: -5.670876502990723
    10. ' _' → logprob: -5.795876502990723

Token 1445: ' connex' (ID: 154480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1706225872039795
    2. 'les' → logprob: -1.6706225872039795
    3. '[' → logprob: -2.2956225872039795
    4. '.' → logprob: -2.9206225872039795
    5. ',' → logprob: -3.5456225872039795
    6. 'des' → logprob: -3.5456225872039795
    7. '<|end|>' → logprob: -3.6706225872039795
    8. 's' → logprob: -3.7956225872039795
    9. ' ' → logprob: -4.170622825622559
    10. 'es' → logprob: -4.295622825622559

Token 1446: 'ement' (ID: 962)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4007397890090942
    2. 'e' → logprob: -1.7757397890090942
    3. 'ect' → logprob: -1.7757397890090942
    4. '[' → logprob: -2.7757396697998047
    5. 'ion' → logprob: -2.9007396697998047
    6. 'u' → logprob: -3.0257396697998047
    7. ']' → logprob: -3.0257396697998047
    8. '```' → logprob: -3.5257396697998047
    9. 'ité' → logprob: -3.7757396697998047
    10. 'ects' → logprob: -3.9007396697998047

Token 1447: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5176879167556763
    2. '[' → logprob: -2.0176877975463867
    3. ']' → logprob: -2.7676877975463867
    4. '[]' → logprob: -3.3926877975463867
    5. '[j' → logprob: -3.3926877975463867
    6. ')' → logprob: -3.6426877975463867
    7. '[i' → logprob: -4.142687797546387
    8. '_j' → logprob: -4.142687797546387
    9. 's' → logprob: -4.392687797546387
    10. '```' → logprob: -4.767687797546387

Token 1448: ' tuy' (ID: 45164)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6349481344223022
    2. 'j' → logprob: -2.134948253631592
    3. '[' → logprob: -2.509948253631592
    4. ')' → logprob: -2.634948253631592
    5. 'n' → logprob: -3.259948253631592
    6. ' ' → logprob: -3.884948253631592
    7. '   ' → logprob: -4.134948253631592
    8. ']' → logprob: -4.259948253631592
    9. 'p' → logprob: -4.384948253631592
    10. ' ' → logprob: -4.634948253631592

Token 1449: 'aux' (ID: 5454)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.606850802898407
    2. '[
' → logprob: -1.2318508625030518
    3. '[i' → logprob: -2.6068508625030518
    4. '#' → logprob: -3.6068508625030518
    5. '[]' → logprob: -3.7318508625030518
    6. '   ' → logprob: -5.106850624084473
    7. ']' → logprob: -5.231850624084473
    8. ' ' → logprob: -5.856850624084473
    9. '```' → logprob: -5.981850624084473
    10. 'pipes' → logprob: -5.981850624084473

Token 1450: ' adj' (ID: 20251)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2759461402893066
    2. '[' → logprob: -1.6509461402893066
    3. '[n' → logprob: -2.0259461402893066
    4. 'def' → logprob: -2.6509461402893066
    5. '[
' → logprob: -2.6509461402893066
    6. '   ' → logprob: -2.6509461402893066
    7. ']' → logprob: -3.1509461402893066
    8. '#' → logprob: -3.2759461402893066
    9. 's' → logprob: -4.025946140289307
    10. '```' → logprob: -4.400946140289307

Token 1451: 'ac' (ID: 359)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9176881909370422
    2. '[' → logprob: -1.6676881313323975
    3. '   ' → logprob: -1.6676881313323975
    4. '[
' → logprob: -2.1676881313323975
    5. '.' → logprob: -4.167688369750977
    6. ')' → logprob: -4.292688369750977
    7. '```' → logprob: -4.417688369750977
    8. ']
' → logprob: -4.667688369750977
    9. 'def' → logprob: -4.917688369750977
    10. '[i' → logprob: -4.917688369750977

Token 1452: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.046961650252342224
    2. 'ent' → logprob: -3.171961545944214
    3. ']' → logprob: -6.921961784362793
    4. 'es' → logprob: -6.921961784362793
    5. 'entes' → logprob: -7.546961784362793
    6. ')' → logprob: -7.921961784362793
    7. '#' → logprob: -8.296961784362793
    8. 'e' → logprob: -8.546961784362793
    9. '[' → logprob: -9.296961784362793
    10. '```' → logprob: -9.671961784362793

Token 1453: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42503488063812256
    2. ':' → logprob: -2.300034999847412
    3. 'def' → logprob: -2.675034999847412
    4. '[' → logprob: -3.425034999847412
    5. '[n' → logprob: -3.675034999847412
    6. 's' → logprob: -3.925034999847412
    7. '[
' → logprob: -4.300034999847412
    8. '[i' → logprob: -4.550034999847412
    9. '.' → logprob: -4.675034999847412
    10. ':
' → logprob: -4.675034999847412

Token 1454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04235437512397766
    2. ':' → logprob: -3.9173543453216553
    3. ')' → logprob: -5.042354583740234
    4. '"' → logprob: -6.292354583740234
    5. '[' → logprob: -6.417354583740234
    6. '#' → logprob: -6.542354583740234
    7. '):' → logprob: -6.542354583740234
    8. '.' → logprob: -6.667354583740234
    9. ',' → logprob: -7.167354583740234
    10. ''' → logprob: -7.417354583740234

Token 1455: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6519559025764465
    2. '#' (adapté à ' #') → logprob: -1.4019558429718018
    3. '[' → logprob: -2.6519558429718018
    4. ')' → logprob: -3.1519558429718018
    5. '_' → logprob: -3.5269558429718018
    6. ''' → logprob: -4.026956081390381
    7. '[i' → logprob: -4.151956081390381
    8. ' #' → logprob: -5.026956081390381
    9. '"' → logprob: -5.151956081390381
    10. ',' → logprob: -5.526956081390381

Token 1456: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12323517352342606
    2. '[' → logprob: -3.1232352256774902
    3. ')' → logprob: -4.24823522567749
    4. '#' → logprob: -4.62323522567749
    5. 'n' → logprob: -4.87323522567749
    6. 'j' → logprob: -5.37323522567749
    7. ''' → logprob: -5.74823522567749
    8. '"' → logprob: -5.87323522567749
    9. '_' → logprob: -5.99823522567749
    10. '[
' → logprob: -6.24823522567749

Token 1457: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.554575800895691
    2. '[' → logprob: -1.804575800895691
    3. 'j' → logprob: -2.0545759201049805
    4. '#' → logprob: -2.3045759201049805
    5. '   ' → logprob: -2.3045759201049805
    6. '_' → logprob: -2.6795759201049805
    7. ' ' → logprob: -3.1795759201049805
    8. ' n' → logprob: -3.4295759201049805
    9. ')' → logprob: -3.5545759201049805
    10. ' j' → logprob: -4.3045759201049805

Token 1458: ' sous' (ID: 14487)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2927390336990356
    2. 'n' → logprob: -1.5427390336990356
    3. ' ' → logprob: -1.6677390336990356
    4. 'j' → logprob: -3.042738914489746
    5. '[' → logprob: -3.167738914489746
    6. 'p' → logprob: -3.417738914489746
    7. '#' → logprob: -3.542738914489746
    8. ')' → logprob: -3.542738914489746
    9. 's' → logprob: -3.917738914489746
    10. 'def' → logprob: -4.292738914489746

Token 1459: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012188084423542023
    2. '_j' → logprob: -5.512187957763672
    3. '_p' → logprob: -6.637187957763672
    4. '[' → logprob: -7.137187957763672
    5. ' _' → logprob: -7.637187957763672
    6. 'set' → logprob: -7.637187957763672
    7. '\' → logprob: -7.887187957763672
    8. 's' → logprob: -7.887187957763672
    9. ' =' → logprob: -8.137187957763672
    10. ')' → logprob: -8.137187957763672

Token 1460: 'ensemble' (ID: 37301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14950008690357208
    2. 'sets' → logprob: -2.7745001316070557
    3. 's' → logprob: -4.399499893188477
    4. 'segments' → logprob: -4.524499893188477
    5. 'set' → logprob: -4.649499893188477
    6. 'j' → logprob: -5.024499893188477
    7. '_j' → logprob: -5.149499893188477
    8. '_
' → logprob: -5.274499893188477
    9. '
' → logprob: -5.649499893188477
    10. 'sequence' → logprob: -6.024499893188477

Token 1461: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20193783938884735
    2. '[' → logprob: -2.3269379138946533
    3. '```' → logprob: -3.9519379138946533
    4. '_j' → logprob: -4.326937675476074
    5. 's' → logprob: -4.451937675476074
    6. ':' → logprob: -5.076937675476074
    7. '=' → logprob: -5.326937675476074
    8. '   ' → logprob: -5.576937675476074
    9. '[i' → logprob: -5.701937675476074
    10. ')' → logprob: -5.951937675476074

Token 1462: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6808913946151733
    2. 'j' → logprob: -1.9308913946151733
    3. ')' → logprob: -2.930891513824463
    4. 'n' → logprob: -3.180891513824463
    5. ' ' → logprob: -3.430891513824463
    6. '[' → logprob: -3.430891513824463
    7. 'p' → logprob: -3.680891513824463
    8. '_j' → logprob: -3.680891513824463
    9. ' ' → logprob: -3.930891513824463
    10. ''' → logprob: -4.055891513824463

Token 1463: ' utilisés' (ID: 94258)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6000986099243164
    2. '_' → logprob: -1.7250986099243164
    3. ' =' → logprob: -1.7250986099243164
    4. 's' → logprob: -2.2250986099243164
    5. '=' → logprob: -2.8500986099243164
    6. '_used' → logprob: -2.8500986099243164
    7. '```' → logprob: -2.9750986099243164
    8. '[i' → logprob: -3.4750986099243164
    9. ':' → logprob: -3.8500986099243164
    10. '   ' → logprob: -3.8500986099243164

Token 1464: ' correspond' (ID: 11095)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9024696350097656
    2. '_' → logprob: -1.1524696350097656
    3. 's' → logprob: -2.2774696350097656
    4. ')' → logprob: -3.6524696350097656
    5. ',' → logprob: -3.6524696350097656
    6. '=' → logprob: -4.027469635009766
    7. '[
' → logprob: -4.027469635009766
    8. ' =' → logprob: -4.152469635009766
    9. ':' → logprob: -4.277469635009766
    10. ']' → logprob: -4.402469635009766

Token 1465: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7673463225364685
    2. ' à' → logprob: -2.1423463821411133
    3. 'à' → logprob: -2.1423463821411133
    4. '=' → logprob: -2.8923463821411133
    5. '```' → logprob: -2.8923463821411133
    6. '_to' → logprob: -3.3923463821411133
    7. ')' → logprob: -3.8923463821411133
    8. '   ' → logprob: -3.8923463821411133
    9. ' ' → logprob: -3.8923463821411133
    10. 'to' → logprob: -4.142346382141113

Token 1466: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.13336980342865
    2. ''' → logprob: -1.63336980342865
    3. '"' → logprob: -2.7583699226379395
    4. '_' → logprob: -2.7583699226379395
    5. ' ' → logprob: -3.0083699226379395
    6. ' j' → logprob: -3.3833699226379395
    7. '<|end|>' → logprob: -3.7583699226379395
    8. ' a' → logprob: -4.2583699226379395
    9. '[]' → logprob: -4.3833699226379395
    10. ' "' → logprob: -4.3833699226379395

Token 1467: ' façon' (ID: 33381)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9751124382019043
    2. '[' → logprob: -1.6001124382019043
    3. 'n' → logprob: -3.2251124382019043
    4. ''' → logprob: -3.3501124382019043
    5. '[]' → logprob: -3.3501124382019043
    6. '"' → logprob: -3.4751124382019043
    7. '_j' → logprob: -3.6001124382019043
    8. '#' → logprob: -3.7251124382019043
    9. '[j' → logprob: -3.7251124382019043
    10. 'j' → logprob: -3.9751124382019043

Token 1468: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3859029710292816
    2. '[' → logprob: -1.635903000831604
    3. '   ' → logprob: -4.1359028816223145
    4. ')' → logprob: -4.2609028816223145
    5. ':' → logprob: -4.2609028816223145
    6. ' de' → logprob: -4.2609028816223145
    7. ' d' → logprob: -4.5109028816223145
    8. '=' → logprob: -4.5109028816223145
    9. '(' → logprob: -5.2609028816223145
    10. '#' → logprob: -5.3859028816223145

Token 1469: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2794860899448395
    2. '[' → logprob: -3.0294861793518066
    3. ' choisir' → logprob: -3.6544861793518066
    4. ''' → logprob: -3.7794861793518066
    5. ' ' → logprob: -3.9044861793518066
    6. 'def' → logprob: -4.154486179351807
    7. '#' → logprob: -4.404486179351807
    8. ')' → logprob: -4.654486179351807
    9. 'n' → logprob: -5.029486179351807
    10. '=' → logprob: -5.154486179351807

Token 1470: 'assembler' (ID: 124638)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -1.2886885404586792
    2. 'partition' → logprob: -1.6636885404586792
    3. '#' → logprob: -2.0386886596679688
    4. 'cho' → logprob: -2.2886886596679688
    5. ' partition' → logprob: -3.9136886596679688
    6. ' ' → logprob: -4.038688659667969
    7. ' #' → logprob: -4.163688659667969
    8. 'connect' → logprob: -4.163688659667969
    9. 'sé' → logprob: -4.163688659667969
    10. '選' → logprob: -4.163688659667969

Token 1471: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5474604368209839
    2. '   ' → logprob: -1.4224604368209839
    3. '[' → logprob: -2.9224605560302734
    4. '```' → logprob: -3.2974605560302734
    5. ')' → logprob: -4.047460556030273
    6. '[]' → logprob: -4.297460556030273
    7. '_j' → logprob: -4.547460556030273
    8. ' ' → logprob: -5.047460556030273
    9. '`' → logprob: -5.297460556030273
    10. ''' → logprob: -5.422460556030273

Token 1472: ' tuy' (ID: 45164)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2822813391685486
    2. '_j' → logprob: -2.1572813987731934
    3. ' _' → logprob: -3.1572813987731934
    4. '_t' → logprob: -3.7822813987731934
    5. 'segments' → logprob: -4.157281398773193
    6. ' segments' → logprob: -4.282281398773193
    7. '_segments' → logprob: -4.532281398773193
    8. ' ' → logprob: -5.532281398773193
    9. 't' → logprob: -5.657281398773193
    10. '_p' → logprob: -6.032281398773193

Token 1473: 'aux' (ID: 5454)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3986202478408813
    2. 'b' → logprob: -1.8986202478408813
    3. 'pipes' → logprob: -1.8986202478408813
    4. '```' → logprob: -2.523620128631592
    5. 'bs' → logprob: -3.273620128631592
    6. '管' → logprob: -3.398620128631592
    7. '[' → logprob: -3.523620128631592
    8. 's' → logprob: -3.523620128631592
    9. 'ts' → logprob: -3.523620128631592
    10. 'p' → logprob: -3.773620128631592

Token 1474: ' cont' (ID: 836)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0071779489517212
    2. '[i' → logprob: -1.6321779489517212
    3. '[
' → logprob: -1.7571779489517212
    4. '   ' → logprob: -3.1321778297424316
    5. '[n' → logprob: -3.2571778297424316
    6. 's' → logprob: -3.3821778297424316
    7. ']' → logprob: -3.6321778297424316
    8. '_' → logprob: -4.007177829742432
    9. '```' → logprob: -4.007177829742432
    10. '#' → logprob: -4.132177829742432

Token 1475: 'igus' (ID: 79914)
  Prédit: 'iguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iguous' → logprob: -0.8961502313613892
    2. 'igu' → logprob: -1.6461502313613892
    3. 'in' → logprob: -2.2711501121520996
    4. '   ' → logprob: -2.5211501121520996
    5. 'u' → logprob: -2.7711501121520996
    6. 'inu' → logprob: -3.2711501121520996
    7. 'i' → logprob: -3.7711501121520996
    8. 'ig' → logprob: -4.0211501121521
    9. '```' → logprob: -4.1461501121521
    10. '[' → logprob: -4.5211501121521

Token 1476: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.836583137512207
    2. '   ' → logprob: -1.086583137512207
    3. '(
' → logprob: -2.461583137512207
    4. '(' → logprob: -3.086583137512207
    5. 's' → logprob: -3.711583137512207
    6. 'n' → logprob: -3.961583137512207
    7. '(n' → logprob: -4.711583137512207
    8. '[
' → logprob: -4.961583137512207
    9. ' def' → logprob: -5.211583137512207
    10. '()' → logprob: -5.336583137512207

Token 1477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03782617673277855
    2. ')' → logprob: -4.287826061248779
    3. ':' → logprob: -4.287826061248779
    4. '[' → logprob: -6.787826061248779
    5. '(' → logprob: -7.037826061248779
    6. 'def' → logprob: -7.037826061248779
    7. '.' → logprob: -7.287826061248779
    8. ''' → logprob: -7.287826061248779
    9. '):' → logprob: -7.287826061248779
    10. '#' → logprob: -7.537826061248779

Token 1478: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14854925870895386
    2. ')' → logprob: -3.0235493183135986
    3. ''' → logprob: -3.3985493183135986
    4. '"' → logprob: -3.8985493183135986
    5. '[' → logprob: -4.3985490798950195
    6. '    ' → logprob: -5.5235490798950195
    7. ':' → logprob: -6.0235490798950195
    8. '#' (adapté à ' #') → logprob: -6.1485490798950195
    9. '(' → logprob: -6.2735490798950195
    10. '_' → logprob: -6.7735490798950195

Token 1479: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.628190279006958
    2. '   ' → logprob: -1.753190279006958
    3. ')' → logprob: -2.503190279006958
    4. ''' → logprob: -3.253190279006958
    5. '_' → logprob: -3.378190279006958
    6. ':' → logprob: -3.503190279006958
    7. '```' → logprob: -4.128190040588379
    8. '[
' → logprob: -4.378190040588379
    9. ']' → logprob: -4.503190040588379
    10. '"' → logprob: -4.503190040588379

Token 1480: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06638196110725403
    2. ':' → logprob: -3.8163819313049316
    3. 'n' → logprob: -4.816381931304932
    4. 'p' → logprob: -5.191381931304932
    5. 'j' → logprob: -5.441381931304932
    6. ' :' → logprob: -5.691381931304932
    7. '       ' → logprob: -5.816381931304932
    8. '```' → logprob: -5.816381931304932
    9. '):' → logprob: -6.691381931304932
    10. '"' → logprob: -6.816381931304932

Token 1481: ' ne' (ID: 453)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09632325917482376
    2. 's' → logprob: -3.721323251724243
    3. 'n' → logprob: -3.971323251724243
    4. '#' → logprob: -4.721323490142822
    5. '[' → logprob: -5.096323490142822
    6. ' _' → logprob: -5.346323490142822
    7. ''' → logprob: -5.846323490142822
    8. 'def' → logprob: -5.846323490142822
    9. ' n' → logprob: -6.096323490142822
    10. '=' → logprob: -6.346323490142822

Token 1482: ' peut' (ID: 9216)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49587446451187134
    2. '#' → logprob: -1.9958744049072266
    3. 'def' → logprob: -2.6208744049072266
    4. 'n' → logprob: -3.1208744049072266
    5. 's' → logprob: -3.6208744049072266
    6. ' #' → logprob: -4.745874404907227
    7. '=' → logprob: -5.120874404907227
    8. ''' → logprob: -5.120874404907227
    9. 'util' → logprob: -5.245874404907227
    10. ' n' → logprob: -5.370874404907227

Token 1483: ' pas' (ID: 2173)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6809230446815491
    2. 'pas' → logprob: -2.0559229850769043
    3. ' pas' → logprob: -2.4309229850769043
    4. ''utiliser' → logprob: -2.4309229850769043
    5. '[
' → logprob: -3.6809229850769043
    6. '[' → logprob: -3.8059229850769043
    7. '   ' → logprob: -3.9309229850769043
    8. '#' → logprob: -4.055922985076904
    9. 'def' → logprob: -4.305922985076904
    10. '_pas' → logprob: -4.930922985076904

Token 1484: ' utiliser' (ID: 43227)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.36679795384407043
    2. ' utiliser' → logprob: -2.241797924041748
    3. 'cho' → logprob: -2.866797924041748
    4. 'util' → logprob: -2.991797924041748
    5. ' pas' → logprob: -4.366797924041748
    6. 'pas' → logprob: -4.616797924041748
    7. ''utiliser' → logprob: -4.866797924041748
    8. ' ' → logprob: -4.991797924041748
    9. '
' → logprob: -5.366797924041748
    10. '#' → logprob: -5.491797924041748

Token 1485: ' un' (ID: 537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0351893901824951
    2. ''' → logprob: -1.1601893901824951
    3. '[' → logprob: -2.160189390182495
    4. '"' → logprob: -3.410189390182495
    5. '```' → logprob: -3.410189390182495
    6. ' ' → logprob: -3.535189390182495
    7. '[]' → logprob: -4.035189628601074
    8. '   ' → logprob: -4.160189628601074
    9. '`' → logprob: -4.410189628601074
    10. ':' → logprob: -4.910189628601074

Token 1486: ' joint' (ID: 14585)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08859162032604218
    2. 'n' → logprob: -2.8385915756225586
    3. ' ' → logprob: -4.588591575622559
    4. '[' → logprob: -5.088591575622559
    5. ' _' → logprob: -6.463591575622559
    6. 's' → logprob: -6.588591575622559
    7. '\' → logprob: -6.713591575622559
    8. ''' → logprob: -7.213591575622559
    9. ' ' → logprob: -7.588591575622559
    10. ' 
' → logprob: -7.713591575622559

Token 1487: ' sans' (ID: 9828)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.042448412626981735
    2. '```' → logprob: -4.5424485206604
    3. ''' → logprob: -5.0424485206604
    4. '_used' → logprob: -5.6674485206604
    5. 's' → logprob: -5.7924485206604
    6. ' _' → logprob: -5.7924485206604
    7. '_
' → logprob: -6.0424485206604
    8. '[i' → logprob: -6.2924485206604
    9. '[' → logprob: -6.2924485206604
    10. '`' → logprob: -6.6674485206604

Token 1488: ' utiliser' (ID: 43227)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.3396801948547363
    2. ' l' → logprob: -1.4646801948547363
    3. 'l' → logprob: -1.5896801948547363
    4. '#' → logprob: -3.0896801948547363
    5. 'sé' → logprob: -3.3396801948547363
    6. 'util' → logprob: -3.4646801948547363
    7. ' le' → logprob: -3.7146801948547363
    8. '\' → logprob: -3.9646801948547363
    9. '\n' → logprob: -4.089680194854736
    10. 'les' → logprob: -4.214680194854736

Token 1489: ' tous' (ID: 10688)
  Prédit: ' celui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' celui' → logprob: -1.0880649089813232
    2. 'le' → logprob: -1.3380649089813232
    3. 'les' → logprob: -1.8380649089813232
    4. 'l' → logprob: -2.7130649089813232
    5. ' les' → logprob: -2.9630649089813232
    6. '```' → logprob: -3.8380649089813232
    7. ' ' → logprob: -4.338065147399902
    8. ' le' → logprob: -4.338065147399902
    9. ' la' → logprob: -4.588065147399902
    10. ' adjacent' → logprob: -4.713065147399902

Token 1490: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8842144012451172
    2. '_' → logprob: -1.0092144012451172
    3. ' les' → logprob: -2.259214401245117
    4. '_j' → logprob: -2.634214401245117
    5. '_le' → logprob: -5.009214401245117
    6. '_neighbors' → logprob: -5.134214401245117
    7. ' _' → logprob: -5.259214401245117
    8. 'le' → logprob: -5.509214401245117
    9. '<|end|>' → logprob: -5.634214401245117
    10. 'the' → logprob: -5.884214401245117

Token 1491: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.34661030769348145
    2. 'p' → logprob: -2.4716103076934814
    3. '```' → logprob: -3.2216103076934814
    4. 't' → logprob: -3.4716103076934814
    5. '#' → logprob: -3.7216103076934814
    6. ' j' → logprob: -4.471610069274902
    7. 'joint' → logprob: -4.471610069274902
    8. 'i' → logprob: -4.596610069274902
    9. 'segments' → logprob: -4.721610069274902
    10. ' p' → logprob: -4.721610069274902

Token 1492: ' entre' (ID: 3853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06610739976167679
    2. '[' → logprob: -4.191107273101807
    3. '[
' → logprob: -4.566107273101807
    4. '_
' → logprob: -4.691107273101807
    5. '```' → logprob: -4.816107273101807
    6. '   ' → logprob: -5.941107273101807
    7. '[i' → logprob: -5.941107273101807
    8. ' _' → logprob: -6.441107273101807
    9. '_used' → logprob: -6.441107273101807
    10. ')' → logprob: -6.566107273101807

Token 1493: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6043389439582825
    2. 'i' → logprob: -1.4793388843536377
    3. 'les' → logprob: -1.8543388843536377
    4. '```' → logprob: -4.479339122772217
    5. 'de' → logprob: -4.604339122772217
    6. '   ' → logprob: -5.229339122772217
    7. 'pipes' → logprob: -5.479339122772217
    8. 't' → logprob: -5.604339122772217
    9. ' i' → logprob: -5.854339122772217
    10. ' les' → logprob: -5.854339122772217

Token 1494: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2729213833808899
    2. '[i' → logprob: -1.5229213237762451
    3. '[
' → logprob: -4.147921562194824
    4. '   ' → logprob: -6.397921562194824
    5. 'def' → logprob: -7.647921562194824
    6. ' [' → logprob: -8.022921562194824
    7. 's' → logprob: -8.147921562194824
    8. ']' → logprob: -8.272921562194824
    9. 'r' → logprob: -8.522921562194824
    10. '```' → logprob: -8.522921562194824

Token 1495: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5732555389404297
    2. '+' → logprob: -1.0732555389404297
    3. '[' → logprob: -3.0732555389404297
    4. '[i' → logprob: -3.4482555389404297
    5. '[
' → logprob: -4.69825553894043
    6. '+]' → logprob: -6.32325553894043
    7. ']
' → logprob: -6.94825553894043
    8. 's' → logprob: -7.32325553894043
    9. '-' → logprob: -7.69825553894043
    10. ' +' → logprob: -7.69825553894043

Token 1496: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3085783123970032
    2. '[
' → logprob: -1.9335782527923584
    3. '[i' → logprob: -2.6835782527923584
    4. '+' → logprob: -3.1835782527923584
    5. ']' → logprob: -5.3085784912109375
    6. '```' → logprob: -5.9335784912109375
    7. '[n' → logprob: -7.5585784912109375
    8. '`' → logprob: -8.058578491210938
    9. ' +' → logprob: -8.433578491210938
    10. ' [' → logprob: -8.433578491210938

Token 1497: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10774745792150497
    2. ' p' → logprob: -2.4827475547790527
    3. 'i' → logprob: -4.232747554779053
    4. ' i' → logprob: -5.982747554779053
    5. ' ' → logprob: -7.357747554779053
    6. '   ' → logprob: -7.982747554779053
    7. '```' → logprob: -8.232747077941895
    8. '
' → logprob: -8.982747077941895
    9. '`' → logprob: -9.482747077941895
    10. '[i' → logprob: -10.232747077941895

Token 1498: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.021229533478617668
    2. 'i' → logprob: -3.8962295055389404
    3. '[' → logprob: -7.7712297439575195
    4. 'p' → logprob: -9.27122974395752
    5. '
' → logprob: -9.89622974395752
    6. '[p' → logprob: -10.39622974395752
    7. '[
' → logprob: -10.64622974395752
    8. '+' → logprob: -10.89622974395752
    9. '```' → logprob: -11.77122974395752
    10. '[j' → logprob: -11.77122974395752

Token 1499: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05453161150217056
    2. '[' → logprob: -3.1795315742492676
    3. '[i' → logprob: -5.429531574249268
    4. '+' → logprob: -5.679531574249268
    5. '],' → logprob: -7.054531574249268
    6. ')' → logprob: -8.429532051086426
    7. '[
' → logprob: -8.429532051086426
    8. ']
' → logprob: -8.679532051086426
    9. ']:' → logprob: -8.679532051086426
    10. '[]' → logprob: -8.679532051086426

Token 1500: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34884384274482727
    2. 's' → logprob: -2.598843812942505
    3. 'def' → logprob: -3.223843812942505
    4. '(
' → logprob: -3.723843812942505
    5. '[
' → logprob: -3.723843812942505
    6. '(n' → logprob: -3.973843812942505
    7. '[' → logprob: -4.098844051361084
    8. '[n' → logprob: -4.223844051361084
    9. '(' → logprob: -4.598844051361084
    10. ':
' → logprob: -4.723844051361084

Token 1501: ' obtenir' (ID: 54423)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.734460175037384
    2. ' i' → logprob: -1.1094601154327393
    3. ' j' → logprob: -3.2344601154327393
    4. 'j' → logprob: -3.6094601154327393
    5. '```' → logprob: -4.109460353851318
    6. 'former' → logprob: -4.234460353851318
    7. '   ' → logprob: -4.234460353851318
    8. 'for' → logprob: -4.234460353851318
    9. '(i' → logprob: -4.859460353851318
    10. ' for' → logprob: -4.984460353851318

Token 1502: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6212762594223022
    2. ''' → logprob: -2.246276378631592
    3. '[i' → logprob: -2.246276378631592
    4. '_' → logprob: -2.246276378631592
    5. 'un' → logprob: -2.746276378631592
    6. '```' → logprob: -2.871276378631592
    7. ' un' → logprob: -3.371276378631592
    8. '"' → logprob: -3.621276378631592
    9. ':' → logprob: -3.746276378631592
    10. ')' → logprob: -3.746276378631592

Token 1503: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.9429184198379517
    2. ' segment' → logprob: -1.1929184198379517
    3. ' contiguous' → logprob: -1.3179184198379517
    4. '```' → logprob: -4.942918300628662
    5. '_segment' → logprob: -5.567918300628662
    6. 's' → logprob: -5.817918300628662
    7. '_' → logprob: -5.942918300628662
    8. '
' → logprob: -6.317918300628662
    9. ' subset' → logprob: -6.442918300628662
    10. 'ensemble' → logprob: -6.817918300628662

Token 1504: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28249427676200867
    2. 'def' → logprob: -2.907494306564331
    3. ':' → logprob: -3.407494306564331
    4. '_' → logprob: -3.532494306564331
    5. '[
' → logprob: -4.032494068145752
    6. '[n' → logprob: -4.532494068145752
    7. 's' → logprob: -4.657494068145752
    8. ':
' → logprob: -4.657494068145752
    9. '[' → logprob: -4.657494068145752
    10. '
' → logprob: -4.907494068145752

Token 1505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28693249821662903
    2. '[' → logprob: -2.1619324684143066
    3. '[
' → logprob: -3.6619324684143066
    4. '_' → logprob: -3.9119324684143066
    5. ')' → logprob: -4.286932468414307
    6. ']' → logprob: -4.536932468414307
    7. '[n' → logprob: -4.661932468414307
    8. 's' → logprob: -5.036932468414307
    9. 'n' → logprob: -5.161932468414307
    10. ',' → logprob: -5.161932468414307

Token 1506: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00904929544776678
    2. ':' → logprob: -5.634049415588379
    3. 'def' → logprob: -7.134049415588379
    4. ')' → logprob: -7.259049415588379
    5. ']' → logprob: -7.384049415588379
    6. '[' → logprob: -7.759049415588379
    7. '[
' → logprob: -8.134049415588379
    8. '    
' → logprob: -8.259049415588379
    9. ',' → logprob: -8.384049415588379
    10. 'n' → logprob: -8.634049415588379

Token 1507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011997550027444959
    2. '    
' → logprob: -8.251199722290039
    3. 'def' → logprob: -8.626199722290039
    4. 'n' → logprob: -8.751199722290039
    5. ')' → logprob: -9.501199722290039
    6. '```' → logprob: -9.501199722290039
    7. ':' → logprob: -9.626199722290039
    8. '#' → logprob: -10.001199722290039
    9. 'import' → logprob: -10.126199722290039
    10. '
' → logprob: -10.251199722290039

Token 1508: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02441069297492504
    2. 'n' → logprob: -4.774410724639893
    3. 'def' → logprob: -5.149410724639893
    4. 'j' → logprob: -6.274410724639893
    5. 'p' → logprob: -6.524410724639893
    6. ')' → logprob: -6.774410724639893
    7. ']' → logprob: -7.399410724639893
    8. '[' → logprob: -7.899410724639893
    9. '(
' → logprob: -7.899410724639893
    10. '       ' → logprob: -7.899410724639893

Token 1509: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1256483942270279
    2. 'n' → logprob: -2.2506484985351562
    3. '#' → logprob: -5.500648498535156
    4. 'j' → logprob: -5.750648498535156
    5. 'p' → logprob: -6.000648498535156
    6. 'def' → logprob: -6.750648498535156
    7. '```' → logprob: -7.625648498535156
    8. '    
' → logprob: -8.000648498535156
    9. 'length' → logprob: -8.750648498535156
    10. '#
' → logprob: -8.875648498535156

Token 1510: ' veut' (ID: 41653)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.510284185409546
    2. ':' → logprob: -1.885284185409546
    3. '   ' → logprob: -2.260284185409546
    4. ' est' → logprob: -2.385284185409546
    5. '_' → logprob: -2.635284185409546
    6. ' n' → logprob: -3.010284185409546
    7. ' =' → logprob: -3.135284185409546
    8. 'n' → logprob: -3.385284185409546
    9. '=' → logprob: -3.635284185409546
    10. 's' → logprob: -3.635284185409546

Token 1511: ' dire' (ID: 4071)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2150120884180069
    2. 's' → logprob: -3.2150120735168457
    3. '```' → logprob: -3.2150120735168457
    4. ''' → logprob: -3.7150120735168457
    5. '=' → logprob: -4.090012073516846
    6. 'à' → logprob: -4.840012073516846
    7. '_' → logprob: -4.840012073516846
    8. 'def' → logprob: -5.340012073516846
    9. '"' → logprob: -5.465012073516846
    10. ' continuer' → logprob: -5.590012073516846

Token 1512: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8513349294662476
    2. ':' → logprob: -0.9763349294662476
    3. ' ' → logprob: -2.851335048675537
    4. '    ' → logprob: -3.351335048675537
    5. '_' → logprob: -3.851335048675537
    6. ',' → logprob: -3.976335048675537
    7. ' ' → logprob: -4.726335048675537
    8. 'def' → logprob: -4.976335048675537
    9. ' que' → logprob: -5.101335048675537
    10. ' :' → logprob: -5.476335048675537

Token 1513: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.036633014678955
    2. '   ' → logprob: -1.286633014678955
    3. '#' → logprob: -2.786633014678955
    4. ' ' → logprob: -3.036633014678955
    5. 'n' → logprob: -3.161633014678955
    6. ' j' → logprob: -3.536633014678955
    7. ':' → logprob: -3.911633014678955
    8. '    ' → logprob: -4.286633014678955
    9. ',' → logprob: -4.286633014678955
    10. 'j' → logprob: -4.286633014678955

Token 1514: ' segments' (ID: 33749)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.487930029630661
    2. 'segments' → logprob: -2.6129300594329834
    3. 'def' → logprob: -2.9879300594329834
    4. '_' → logprob: -2.9879300594329834
    5. 'best' → logprob: -3.2379300594329834
    6. 'max' → logprob: -3.6129300594329834
    7. 'n' → logprob: -4.112929821014404
    8. '(n' → logprob: -4.612929821014404
    9. 's' → logprob: -4.737929821014404
    10. 'j' → logprob: -4.737929821014404

Token 1515: ' correspondent' (ID: 86218)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34740546345710754
    2. 's' → logprob: -1.7224054336547852
    3. '=' → logprob: -2.972405433654785
    4. ' sont' → logprob: -3.722405433654785
    5. '   ' → logprob: -4.347405433654785
    6. ' ' → logprob: -5.722405433654785
    7. ' are' → logprob: -6.097405433654785
    8. ':' → logprob: -6.222405433654785
    9. '#' → logprob: -6.472405433654785
    10. '[n' → logprob: -6.597405433654785

Token 1516: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.9927589297294617
    2. '=' → logprob: -1.1177589893341064
    3. '   ' → logprob: -1.9927589893341064
    4. '```' → logprob: -2.9927589893341064
    5. ' à' → logprob: -3.3677589893341064
    6. ' =' → logprob: -3.3677589893341064
    7. ' ' → logprob: -4.992758750915527
    8. 'to' → logprob: -5.117758750915527
    9. ')' → logprob: -5.242758750915527
    10. ':' → logprob: -5.617758750915527

Token 1517: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0530977249145508
    2. 'des' → logprob: -1.1780977249145508
    3. 'une' → logprob: -2.053097724914551
    4. 'un' → logprob: -2.928097724914551
    5. ' une' → logprob: -3.803097724914551
    6. 'la' → logprob: -3.928097724914551
    7. ' un' → logprob: -4.178097724914551
    8. ' la' → logprob: -4.178097724914551
    9. 's' → logprob: -4.678097724914551
    10. ' choisir' → logprob: -4.678097724914551

Token 1518: ' sous' (ID: 14487)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.8787715435028076
    2. 'group' → logprob: -2.1287715435028076
    3. ' segments' → logprob: -3.1287715435028076
    4. 's' → logprob: -3.2537715435028076
    5. 'partition' → logprob: -3.3787715435028076
    6. 'bl' → logprob: -3.3787715435028076
    7. ' group' → logprob: -3.3787715435028076
    8. 'part' → logprob: -3.5037715435028076
    9. '```' → logprob: -3.7537715435028076
    10. 'cont' → logprob: -4.003771781921387

Token 1519: '-inter' (ID: 63516)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4058014750480652
    2. '#' → logprob: -2.03080153465271
    3. 'segments' → logprob: -2.65580153465271
    4. 'def' → logprob: -3.65580153465271
    5. '_' → logprob: -4.030801296234131
    6. '
' → logprob: -4.155801296234131
    7. '   ' → logprob: -4.405801296234131
    8. '_segments' → logprob: -4.405801296234131
    9. '_sequences' → logprob: -4.655801296234131
    10. 's' → logprob: -5.155801296234131

Token 1520: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.41063183546066284
    2. 'val' → logprob: -1.9106318950653076
    3. 'vals' → logprob: -2.7856318950653076
    4. '_' → logprob: -3.7856318950653076
    5. 's' → logprob: -4.4106316566467285
    6. 'ranges' → logprob: -4.4106316566467285
    7. 'r' → logprob: -4.7856316566467285
    8. 'segments' → logprob: -4.7856316566467285
    9. 'def' → logprob: -5.0356316566467285
    10. 'va' → logprob: -5.1606316566467285

Token 1521: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.1624477356672287
    2. 'als' → logprob: -1.9124476909637451
    3. 'alles' → logprob: -6.912447929382324
    4. 'val' → logprob: -8.287447929382324
    5. 'a' → logprob: -8.287447929382324
    6. 'alle' → logprob: -8.537447929382324
    7. 'all' → logprob: -9.162447929382324
    8. 'vals' → logprob: -9.662447929382324
    9. '   ' → logprob: -10.162447929382324
    10. 'ales' → logprob: -10.287447929382324

Token 1522: ' cont' (ID: 836)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5833098888397217
    2. '   ' → logprob: -1.2083098888397217
    3. '[' → logprob: -2.9583098888397217
    4. '```' → logprob: -3.9583098888397217
    5. ',' → logprob: -4.083310127258301
    6. 's' → logprob: -4.458310127258301
    7. '[
' → logprob: -4.458310127258301
    8. ')' → logprob: -5.083310127258301
    9. '=' → logprob: -5.458310127258301
    10. ']' → logprob: -6.083310127258301

Token 1523: 'igus' (ID: 79914)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.692549467086792
    2. 'inu' → logprob: -0.817549467086792
    3. '```' → logprob: -3.692549467086792
    4. 'igu' → logprob: -4.692549705505371
    5. '#' → logprob: -5.567549705505371
    6. 'iguous' → logprob: -5.567549705505371
    7. 'def' → logprob: -5.942549705505371
    8. '   ' → logprob: -6.317549705505371
    9. 'u' → logprob: -6.567549705505371
    10. '[' → logprob: -6.942549705505371

Token 1524: ' dé' (ID: 2393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29935792088508606
    2. '[' → logprob: -2.5493578910827637
    3. '_' → logprob: -3.4243578910827637
    4. ':' → logprob: -3.5493578910827637
    5. 's' → logprob: -4.174357891082764
    6. '[n' → logprob: -4.174357891082764
    7. '[
' → logprob: -4.299357891082764
    8. ')' → logprob: -4.549357891082764
    9. ',' → logprob: -4.549357891082764
    10. ']' → logprob: -5.049357891082764

Token 1525: 'lim' (ID: 5406)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2857195734977722
    2. 'fin' → logprob: -1.535719633102417
    3. 'c' → logprob: -3.785719633102417
    4. 'cou' → logprob: -5.410719394683838
    5. 'lim' → logprob: -6.035719394683838
    6. 'com' → logprob: -6.410719394683838
    7. 'limit' → logprob: -7.035719394683838
    8. 'ﬁ' → logprob: -8.535719871520996
    9. '#' → logprob: -8.785719871520996
    10. 'fn' → logprob: -9.160719871520996

Token 1526: 'ités' (ID: 12479)
  Prédit: 'ités'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ités' → logprob: -0.15227216482162476
    2. '```' → logprob: -3.1522722244262695
    3. 'érés' → logprob: -3.6522722244262695
    4. 'rés' → logprob: -4.4022722244262695
    5. 'im' → logprob: -4.9022722244262695
    6. 'é' → logprob: -4.9022722244262695
    7. 'és' → logprob: -5.2772722244262695
    8. 'ité' → logprob: -5.6522722244262695
    9. 'it' → logprob: -5.7772722244262695
    10. 'étés' → logprob: -5.9022722244262695

Token 1527: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3323915004730225
    2. 'par' → logprob: -1.3323915004730225
    3. '```' → logprob: -1.9573915004730225
    4. ' par' → logprob: -2.2073915004730225
    5. 'def' → logprob: -2.5823915004730225
    6. '_par' → logprob: -4.207391738891602
    7. ' by' → logprob: -4.582391738891602
    8. '[]' → logprob: -4.707391738891602
    9. 'by' → logprob: -4.707391738891602
    10. 'import' → logprob: -4.832391738891602

Token 1528: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.2830575704574585
    2. 'un' → logprob: -1.7830575704574585
    3. '\n' → logprob: -2.158057689666748
    4. 'une' → logprob: -2.408057689666748
    5. 'la' → logprob: -2.658057689666748
    6. 'les' → logprob: -2.908057689666748
    7. 'de' → logprob: -3.033057689666748
    8. ' des' → logprob: -4.033057689666748
    9. '\' → logprob: -4.158057689666748
    10. '#' → logprob: -4.283057689666748

Token 1529: ' joints' (ID: 47223)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.6688930988311768
    2. 'c' → logprob: -1.0438930988311768
    3. 'cuts' → logprob: -3.1688930988311768
    4. 's' → logprob: -4.168892860412598
    5. '#' → logprob: -4.418892860412598
    6. 'j' → logprob: -4.543892860412598
    7. '\n' → logprob: -4.793892860412598
    8. 'd' → logprob: -4.918892860412598
    9. 'segments' → logprob: -5.168892860412598
    10. 'ret' → logprob: -5.793892860412598

Token 1530: ' supprim' (ID: 142986)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8002660274505615
    2. '_used' → logprob: -1.5502660274505615
    3. '```' → logprob: -1.9252660274505615
    4. '_' → logprob: -2.9252660274505615
    5. '[i' → logprob: -3.5502660274505615
    6. '_util' → logprob: -3.9252660274505615
    7. '[' → logprob: -3.9252660274505615
    8. '[
' → logprob: -4.175266265869141
    9. '`' → logprob: -5.050266265869141
    10. 'def' → logprob: -5.175266265869141

Token 1531: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.887427031993866
    2. 'us' → logprob: -1.2624270915985107
    3. 'érés' → logprob: -2.5124270915985107
    4. 'u' → logprob: -2.7624270915985107
    5. 'rés' → logprob: -4.012426853179932
    6. 's' → logprob: -4.137426853179932
    7. 'é' → logprob: -4.262426853179932
    8. '```' → logprob: -4.512426853179932
    9. '   ' → logprob: -4.637426853179932
    10. 'used' → logprob: -4.762426853179932

Token 1532: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.157613605260849
    2. '(
' → logprob: -3.657613515853882
    3. 'def' → logprob: -3.782613515853882
    4. ':' → logprob: -4.032613754272461
    5. 's' → logprob: -4.282613754272461
    6. '(' → logprob: -4.407613754272461
    7. '(p' → logprob: -4.657613754272461
    8. '[
' → logprob: -4.782613754272461
    9. ',' → logprob: -4.907613754272461
    10. 'n' → logprob: -5.657613754272461

Token 1533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014767897315323353
    2. 'def' → logprob: -5.264768123626709
    3. ':' → logprob: -6.014768123626709
    4. 'n' → logprob: -6.514768123626709
    5. ')' → logprob: -7.139768123626709
    6. '(n' → logprob: -7.514768123626709
    7. ']' → logprob: -7.514768123626709
    8. ',' → logprob: -7.514768123626709
    9. '    
' → logprob: -7.514768123626709
    10. '```' → logprob: -8.13976764678955

Token 1534: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003700081491842866
    2. 'n' → logprob: -6.503700256347656
    3. '    
' → logprob: -7.003700256347656
    4. 'def' → logprob: -8.003700256347656
    5. 'j' → logprob: -8.753700256347656
    6. '```' → logprob: -8.878700256347656
    7. '
' → logprob: -9.503700256347656
    8. '(n' → logprob: -9.628700256347656
    9. '       ' → logprob: -10.003700256347656
    10. ')' → logprob: -10.128700256347656

Token 1535: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005280109471641481
    2. '    
' → logprob: -8.375528335571289
    3. 'n' → logprob: -8.875528335571289
    4. 'j' → logprob: -10.375528335571289
    5. '```' → logprob: -10.500528335571289
    6. '
' → logprob: -10.750528335571289
    7. '       ' → logprob: -11.250528335571289
    8. '#' → logprob: -11.875528335571289
    9. 'import' → logprob: -12.000528335571289
    10. 'def' → logprob: -12.000528335571289

Token 1536: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005843584891408682
    2. 'n' → logprob: -5.880843639373779
    3. '    
' → logprob: -6.755843639373779
    4. '
' → logprob: -7.380843639373779
    5. 'def' → logprob: -7.880843639373779
    6. 'j' → logprob: -8.755843162536621
    7. '```' → logprob: -8.880843162536621
    8. '\n' → logprob: -9.130843162536621
    9. '(n' → logprob: -9.505843162536621
    10. '\' → logprob: -9.505843162536621

Token 1537: ' Ainsi' (ID: 65093)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011771932244300842
    2. 'n' → logprob: -4.636772155761719
    3. 'def' → logprob: -7.261772155761719
    4. '    
' → logprob: -7.636772155761719
    5. '```' → logprob: -8.011772155761719
    6. 'j' → logprob: -9.261772155761719
    7. '#' → logprob: -9.261772155761719
    8. '
' → logprob: -9.636772155761719
    9. 'import' → logprob: -10.011772155761719
    10. ' n' → logprob: -10.261772155761719

Token 1538: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015448570484295487
    2. '#' → logprob: -8.001544952392578
    3. 'def' → logprob: -8.001544952392578
    4. ':' → logprob: -8.001544952392578
    5. '
' → logprob: -8.501544952392578
    6. 'for' → logprob: -9.001544952392578
    7. '    
' → logprob: -10.251544952392578
    8. ',' → logprob: -10.501544952392578
    9. 'n' → logprob: -10.626544952392578
    10. '```' → logprob: -11.376544952392578

Token 1539: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05033562332391739
    2. 'n' → logprob: -4.30033540725708
    3. 'j' → logprob: -4.55033540725708
    4. '#' → logprob: -5.30033540725708
    5. ')' → logprob: -5.80033540725708
    6. ':' → logprob: -5.92533540725708
    7. ' j' → logprob: -5.92533540725708
    8. 'def' → logprob: -6.42533540725708
    9. '       ' → logprob: -6.55033540725708
    10. ' n' → logprob: -6.55033540725708

Token 1540: ' segmentation' (ID: 96046)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0638668537139893
    2. 'def' → logprob: -1.1888668537139893
    3. '#' → logprob: -1.9388668537139893
    4. 'n' → logprob: -2.4388668537139893
    5. 'segments' → logprob: -2.8138668537139893
    6. 's' → logprob: -4.81386661529541
    7. 'max' → logprob: -4.93886661529541
    8. '
' → logprob: -5.06386661529541
    9. ' segments' → logprob: -5.06386661529541
    10. ' n' → logprob: -5.68886661529541

Token 1541: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.506829559803009
    2. ' =' → logprob: -1.0068295001983643
    3. '=' → logprob: -5.131829738616943
    4. ':' → logprob: -5.506829738616943
    5. 'def' → logprob: -5.631829738616943
    6. '#' → logprob: -5.756829738616943
    7. 's' → logprob: -6.131829738616943
    8. ' est' → logprob: -6.131829738616943
    9. '```' → logprob: -7.006829738616943
    10. ':
' → logprob: -7.131829738616943

Token 1542: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6890953779220581
    2. 'e' → logprob: -0.9390953779220581
    3. 'def' → logprob: -3.9390954971313477
    4. 'isation' → logprob: -4.314095497131348
    5. 'ation' → logprob: -4.314095497131348
    6. ' est' → logprob: -4.564095497131348
    7. '
' → logprob: -4.564095497131348
    8. 'ization' → logprob: -5.314095497131348
    9. ' =' → logprob: -5.314095497131348
    10. ':
' → logprob: -5.564095497131348

Token 1543: ' un' (ID: 537)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'form' → logprob: -1.386383056640625
    2. 'faite' → logprob: -1.761383056640625
    3. '```' → logprob: -1.886383056640625
    4. ' form' → logprob: -2.761383056640625
    5. 'dé' → logprob: -2.886383056640625
    6. ' composée' → logprob: -2.886383056640625
    7. 'une' → logprob: -3.261383056640625
    8. 'com' → logprob: -3.886383056640625
    9. '   ' → logprob: -4.011383056640625
    10. ' constitu' → logprob: -4.011383056640625

Token 1544: ' décou' (ID: 68302)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -1.277722716331482
    2. 's' → logprob: -1.777722716331482
    3. 'partition' → logprob: -2.2777228355407715
    4. ' partition' → logprob: -2.5277228355407715
    5. 'e' → logprob: -2.5277228355407715
    6. ' ensemble' → logprob: -2.7777228355407715
    7. ' segment' → logprob: -3.2777228355407715
    8. 'segment' → logprob: -3.2777228355407715
    9. ' décou' → logprob: -4.0277228355407715
    10. 'es' → logprob: -4.1527228355407715

Token 1545: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.804034411907196
    2. 'p' → logprob: -1.3040344715118408
    3. 'mentation' → logprob: -1.9290344715118408
    4. '#' → logprob: -3.054034471511841
    5. 'm' → logprob: -3.179034471511841
    6. 'ment' → logprob: -3.554034471511841
    7. 'pe' → logprob: -4.929034233093262
    8. 't' → logprob: -5.804034233093262
    9. 'ption' → logprob: -6.179034233093262
    10. 'per' → logprob: -6.804034233093262

Token 1546: ' cont' (ID: 836)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7002192139625549
    2. ' des' → logprob: -1.3252191543579102
    3. ' en' → logprob: -2.20021915435791
    4. ' de' → logprob: -2.32521915435791
    5. 'en' → logprob: -5.45021915435791
    6. 'de' → logprob: -5.45021915435791
    7. '#' → logprob: -5.95021915435791
    8. '
' → logprob: -6.07521915435791
    9. ' of' → logprob: -6.32521915435791
    10. ' =' → logprob: -6.45021915435791

Token 1547: 'igu' (ID: 12143)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9197978377342224
    2. '   ' → logprob: -1.2947978973388672
    3. 'inue' → logprob: -1.5447978973388672
    4. 'inu' → logprob: -3.169797897338867
    5. '       ' → logprob: -4.169797897338867
    6. 'in' → logprob: -4.169797897338867
    7. 'def' → logprob: -4.294797897338867
    8. 'ue' → logprob: -4.794797897338867
    9. '#' → logprob: -6.044797897338867
    10. '
' → logprob: -6.294797897338867

Token 1548: ' des' (ID: 731)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.05659153312444687
    2. 'e' → logprob: -4.056591510772705
    3. '   ' → logprob: -4.056591510772705
    4. 'ions' → logprob: -5.056591510772705
    5. 'ation' → logprob: -5.681591510772705
    6. 'u' → logprob: -5.806591510772705
    7. 'é' → logprob: -6.306591510772705
    8. 'ée' → logprob: -6.806591510772705
    9. 'def' → logprob: -7.306591510772705
    10. '
' → logprob: -7.931591510772705

Token 1549: ' tuy' (ID: 45164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8912343382835388
    2. 'segments' → logprob: -0.8912343382835388
    3. ' segments' → logprob: -2.8912343978881836
    4. ' tuy' → logprob: -3.1412343978881836
    5. '   ' → logprob: -3.8912343978881836
    6. 'sé' → logprob: -4.391234397888184
    7. 'p' → logprob: -4.641234397888184
    8. 'pipes' → logprob: -4.641234397888184
    9. 'j' → logprob: -5.266234397888184
    10. 'segment' → logprob: -5.641234397888184

Token 1550: 'aux' (ID: 5454)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7109293341636658
    2. 'u' → logprob: -2.2109293937683105
    3. 'uts' → logprob: -2.4609293937683105
    4. 'ents' → logprob: -2.9609293937683105
    5. '#' → logprob: -3.4609293937683105
    6. 'def' → logprob: -3.7109293937683105
    7. 'é' → logprob: -3.7109293937683105
    8. 'aux' → logprob: -4.0859293937683105
    9. ' segments' → logprob: -4.2109293937683105
    10. 'x' → logprob: -4.4609293937683105

Token 1551: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09251217544078827
    2. '[n' → logprob: -3.7175121307373047
    3. '[
' → logprob: -3.9675121307373047
    4. '[' → logprob: -4.842512130737305
    5. '```' → logprob: -4.842512130737305
    6. 'def' → logprob: -5.717512130737305
    7. ']' → logprob: -5.842512130737305
    8. '[i' → logprob: -6.092512130737305
    9. ' =' → logprob: -6.092512130737305
    10. ')' → logprob: -6.217512130737305

Token 1552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003689509117975831
    2. 'n' → logprob: -7.003689289093018
    3. '
' → logprob: -7.003689289093018
    4. '    
' → logprob: -7.378689289093018
    5. 'def' → logprob: -7.753689289093018
    6. '```' → logprob: -8.378689765930176
    7. 'import' → logprob: -9.878689765930176
    8. 'p' → logprob: -9.878689765930176
    9. 'j' → logprob: -9.878689765930176
    10. '(n' → logprob: -10.128689765930176

Token 1553: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005803774576634169
    2. 'n' → logprob: -5.88080358505249
    3. '    
' → logprob: -6.75580358505249
    4. '
' → logprob: -6.88080358505249
    5. '(n' → logprob: -8.755804061889648
    6. '#' → logprob: -9.505804061889648
    7. 'def' → logprob: -9.505804061889648
    8. '```' → logprob: -9.505804061889648
    9. 'j' → logprob: -9.630804061889648
    10. 'import' → logprob: -10.130804061889648

Token 1554: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0064979433082044125
    2. 'n' → logprob: -5.131497859954834
    3. '    
' → logprob: -8.256498336791992
    4. '
' → logprob: -9.256498336791992
    5. 'import' → logprob: -9.506498336791992
    6. '```' → logprob: -10.256498336791992
    7. 'def' → logprob: -10.381498336791992
    8. '(n' → logprob: -11.381498336791992
    9. '	n' → logprob: -11.631498336791992
    10. '#' → logprob: -11.881498336791992

Token 1555: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006568183656781912
    2. 'n' → logprob: -5.13156795501709
    3. '    
' → logprob: -8.00656795501709
    4. '
' → logprob: -9.38156795501709
    5. '```' → logprob: -9.75656795501709
    6. '       ' → logprob: -10.63156795501709
    7. 'def' → logprob: -10.63156795501709
    8. '\n' → logprob: -10.88156795501709
    9. '(n' → logprob: -10.88156795501709
    10. 'j' → logprob: -11.00656795501709

Token 1556: ' Pro' (ID: 1258)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16774562001228333
    2. 'n' → logprob: -1.917745590209961
    3. 'def' → logprob: -5.042745590209961
    4. 'import' → logprob: -7.167745590209961
    5. '```' → logprob: -9.292745590209961
    6. '    
' → logprob: -10.167745590209961
    7. '#' → logprob: -10.292745590209961
    8. 'from' → logprob: -10.542745590209961
    9. '	n' → logprob: -10.667745590209961
    10. ' n' → logprob: -10.917745590209961

Token 1557: 'bl' (ID: 1751)
  Prédit: 'gram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gram' → logprob: -1.195382833480835
    2. 'def' → logprob: -1.320382833480835
    3. 'c' → logprob: -2.070382833480835
    4. 'f' → logprob: -2.070382833480835
    5. 'cess' → logprob: -2.945382833480835
    6. 'n' → logprob: -3.070382833480835
    7. '   ' → logprob: -3.945382833480835
    8. 'fit' → logprob: -4.445383071899414
    9. 'b' → logprob: -4.945383071899414
    10. 'blem' → logprob: -5.070383071899414

Token 1558: 'ème' (ID: 9767)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1672694683074951
    2. '   ' → logprob: -1.5422694683074951
    3. 'n' → logprob: -1.6672694683074951
    4. 'def' → logprob: -3.292269468307495
    5. ':' → logprob: -3.542269468307495
    6. ' =' → logprob: -3.667269468307495
    7. ')' → logprob: -3.792269468307495
    8. '=' → logprob: -3.792269468307495
    9. '       ' → logprob: -3.792269468307495
    10. 's' → logprob: -4.417269706726074

Token 1559: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2407081425189972
    2. 'def' → logprob: -2.615708112716675
    3. ' =' → logprob: -3.115708112716675
    4. ':
' → logprob: -3.865708112716675
    5. '=' → logprob: -4.115708351135254
    6. ':' → logprob: -4.365708351135254
    7. 's' → logprob: -4.740708351135254
    8. '(n' → logprob: -5.115708351135254
    9. '(
' → logprob: -5.115708351135254
    10. '=
' → logprob: -5.490708351135254

Token 1560: ' choisir' (ID: 47004)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04877357929944992
    2. 'n' → logprob: -3.9237735271453857
    3. '(n' → logprob: -4.798773765563965
    4. 'def' → logprob: -5.048773765563965
    5. '(' → logprob: -6.173773765563965
    6. ' n' → logprob: -6.673773765563965
    7. ':' → logprob: -6.798773765563965
    8. ')' → logprob: -6.923773765563965
    9. '\' → logprob: -7.423773765563965
    10. '       ' → logprob: -7.548773765563965

Token 1561: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.550138533115387
    2. '_' → logprob: -1.3001384735107422
    3. ' ' → logprob: -3.550138473510742
    4. ''' → logprob: -3.550138473510742
    5. 'n' → logprob: -4.300138473510742
    6. '    ' → logprob: -4.675138473510742
    7. '(' → logprob: -4.800138473510742
    8. '(n' → logprob: -4.800138473510742
    9. ' _' → logprob: -5.175138473510742
    10. '"' → logprob: -5.300138473510742

Token 1562: ' segmentation' (ID: 96046)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1513833850622177
    2. '_' → logprob: -3.651383399963379
    3. 's' → logprob: -4.151383399963379
    4. 'nombre' → logprob: -4.526383399963379
    5. '(n' → logprob: -4.651383399963379
    6. 'def' → logprob: -5.026383399963379
    7. 'segments' → logprob: -5.276383399963379
    8. ' n' → logprob: -5.401383399963379
    9. ')
' → logprob: -5.526383399963379
    10. '_
' → logprob: -5.526383399963379

Token 1563: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023713355883955956
    2. '(n' → logprob: -4.7737135887146
    3. ':' → logprob: -6.1487135887146
    4. ' =' → logprob: -6.1487135887146
    5. 'def' → logprob: -6.3987135887146
    6. '```' → logprob: -6.3987135887146
    7. '(
' → logprob: -7.3987135887146
    8. '(' → logprob: -7.3987135887146
    9. ':
' → logprob: -7.5237135887146
    10. ')' → logprob: -7.6487135887146

Token 1564: ' sous' (ID: 14487)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.8265925645828247
    2. 'k' → logprob: -1.4515925645828247
    3. 'n' → logprob: -2.201592445373535
    4. '   ' → logprob: -2.951592445373535
    5. ' ' → logprob: -4.326592445373535
    6. 's' → logprob: -4.451592445373535
    7. '```' → logprob: -4.701592445373535
    8. ' segments' → logprob: -4.701592445373535
    9. '1' → logprob: -4.826592445373535
    10. '#' → logprob: -4.951592445373535

Token 1565: '-inter' (ID: 63516)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3649413585662842
    2. '   ' → logprob: -1.3649413585662842
    3. '#' → logprob: -1.6149413585662842
    4. 'segments' → logprob: -2.739941358566284
    5. 'interval' → logprob: -3.239941358566284
    6. '_n' → logprob: -3.489941358566284
    7. '
' → logprob: -3.989941358566284
    8. '=' → logprob: -3.989941358566284
    9. '\' → logprob: -4.239941596984863
    10. '(n' → logprob: -4.489941596984863

Token 1566: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.305284708738327
    2. 'val' → logprob: -1.5552847385406494
    3. 'vals' → logprob: -3.1802847385406494
    4. '#' → logprob: -5.43028450012207
    5. '```' → logprob: -6.43028450012207
    6. 'vale' → logprob: -7.43028450012207
    7. 'vall' → logprob: -7.43028450012207
    8. '
' → logprob: -7.68028450012207
    9. '   ' → logprob: -7.93028450012207
    10. '_val' → logprob: -8.30528450012207

Token 1567: 'alles' (ID: 28825)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.43227753043174744
    2. 'val' → logprob: -1.1822775602340698
    3. 'al' → logprob: -4.432277679443359
    4. 'vals' → logprob: -4.807277679443359
    5. 'als' → logprob: -5.557277679443359
    6. 'all' → logprob: -6.182277679443359
    7. 'alles' → logprob: -6.307277679443359
    8. 'ments' → logprob: -6.307277679443359
    9. 'êts' → logprob: -6.307277679443359
    10. 'vation' → logprob: -6.307277679443359

Token 1568: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012323272414505482
    2. 'def' → logprob: -5.887323379516602
    3. '
' → logprob: -6.137323379516602
    4. '(n' → logprob: -6.512323379516602
    5. ':' → logprob: -6.887323379516602
    6. ':
' → logprob: -7.387323379516602
    7. ' of' → logprob: -7.637323379516602
    8. ' =' → logprob: -8.012323379516602
    9. '\' → logprob: -8.137323379516602
    10. '```' → logprob: -8.137323379516602

Token 1569: 'segments' (ID: 110314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7460212111473083
    2. '   ' → logprob: -1.2460212707519531
    3. 'n' → logprob: -2.121021270751953
    4. 's' → logprob: -4.371021270751953
    5. '```' → logprob: -4.621021270751953
    6. 'de' → logprob: -4.746021270751953
    7. '(n' → logprob: -4.746021270751953
    8. ')
' → logprob: -4.746021270751953
    9. 'segments' → logprob: -4.871021270751953
    10. ',' → logprob: -5.246021270751953

Token 1570: ' cont' (ID: 836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0504751205444336
    2. '   ' → logprob: -1.3004751205444336
    3. 's' → logprob: -2.0504751205444336
    4. '```' → logprob: -2.5504751205444336
    5. '_' → logprob: -3.4254751205444336
    6. ']' → logprob: -3.6754751205444336
    7. '_cont' → logprob: -4.550475120544434
    8. ' de' → logprob: -4.550475120544434
    9. 'de' → logprob: -4.800475120544434
    10. '[n' → logprob: -4.800475120544434

Token 1571: 'igus' (ID: 79914)
  Prédit: 'iguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iguous' → logprob: -1.4841818809509277
    2. 'igu' → logprob: -1.6091818809509277
    3. 'inu' → logprob: -1.8591818809509277
    4. 'def' → logprob: -1.9841818809509277
    5. '#' → logprob: -3.1091818809509277
    6. '```' → logprob: -3.1091818809509277
    7. 'u' → logprob: -3.9841818809509277
    8. 'in' → logprob: -3.9841818809509277
    9. '   ' → logprob: -4.109181880950928
    10. 'erv' → logprob: -4.109181880950928

Token 1572: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.658852756023407
    2. '   ' → logprob: -1.2838528156280518
    3. ']' → logprob: -3.1588528156280518
    4. '```' → logprob: -3.1588528156280518
    5. 's' → logprob: -3.5338528156280518
    6. ',' → logprob: -3.9088528156280518
    7. '):' → logprob: -4.408852577209473
    8. 'de' → logprob: -4.658852577209473
    9. ':' → logprob: -5.158852577209473
    10. 'n' → logprob: -5.408852577209473

Token 1573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04102756455540657
    2. ':' → logprob: -4.291027545928955
    3. 'def' → logprob: -4.666027545928955
    4. ':
' → logprob: -5.541027545928955
    5. '(n' → logprob: -6.041027545928955
    6. '(
' → logprob: -6.541027545928955
    7. ',' → logprob: -6.916027545928955
    8. '(' → logprob: -7.291027545928955
    9. 'n' → logprob: -7.291027545928955
    10. ')' → logprob: -7.291027545928955

Token 1574: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016008557751774788
    2. 'n' → logprob: -4.266008377075195
    3. '```' → logprob: -7.516008377075195
    4. '    
' → logprob: -7.766008377075195
    5. 'def' → logprob: -8.391008377075195
    6. '
' → logprob: -8.891008377075195
    7. '(n' → logprob: -8.891008377075195
    8. '#' → logprob: -9.391008377075195
    9. 'import' → logprob: -9.641008377075195
    10. '\' → logprob: -10.516008377075195

Token 1575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030217990279197693
    2. 'n' → logprob: -6.003021717071533
    3. '    
' → logprob: -9.003022193908691
    4. '
' → logprob: -9.128022193908691
    5. '```' → logprob: -9.628022193908691
    6. 'def' → logprob: -9.753022193908691
    7. '#' → logprob: -9.878022193908691
    8. 'import' → logprob: -10.003022193908691
    9. '(n' → logprob: -10.003022193908691
    10. 'from' → logprob: -11.503022193908691

Token 1576: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016196712851524353
    2. 'n' → logprob: -4.3911967277526855
    3. '```' → logprob: -6.6411967277526855
    4. 'p' → logprob: -7.0161967277526855
    5. '    
' → logprob: -8.266196250915527
    6. 'j' → logprob: -8.266196250915527
    7. 'def' → logprob: -8.766196250915527
    8. 'pipes' → logprob: -8.891196250915527
    9. '\' → logprob: -9.016196250915527
    10. '       ' → logprob: -9.266196250915527

Token 1577: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00613296078518033
    2. 'n' → logprob: -6.006133079528809
    3. '    
' → logprob: -6.881133079528809
    4. 'j' → logprob: -7.881133079528809
    5. '(n' → logprob: -8.131133079528809
    6. '```' → logprob: -8.131133079528809
    7. '\' → logprob: -8.631133079528809
    8. '\n' → logprob: -8.756133079528809
    9. '#' → logprob: -8.756133079528809
    10. '"' → logprob: -8.881133079528809

Token 1578: ' somme' (ID: 64484)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9630245566368103
    2. '#' → logprob: -1.213024616241455
    3. 'n' → logprob: -1.588024616241455
    4. '
' → logprob: -3.338024616241455
    5. '(n' → logprob: -3.588024616241455
    6. '#
' → logprob: -3.838024616241455
    7. 's' → logprob: -5.213024616241455
    8. 'import' → logprob: -5.713024616241455
    9. ' n' → logprob: -5.963024616241455
    10. '_' → logprob: -6.713024616241455

Token 1579: ' totale' (ID: 52898)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8758994340896606
    2. '_' → logprob: -1.3758994340896606
    3. 's' → logprob: -2.250899314880371
    4. '=' → logprob: -2.625899314880371
    5. '_of' → logprob: -3.000899314880371
    6. '_j' → logprob: -3.500899314880371
    7. 'des' → logprob: -4.500899314880371
    8. '   ' → logprob: -4.875899314880371
    9. '_des' → logprob: -4.875899314880371
    10. '_de' → logprob: -5.125899314880371

Token 1580: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.444320946931839
    2. ' =' → logprob: -1.6943209171295166
    3. '=' → logprob: -2.8193209171295166
    4. 'des' → logprob: -3.4443209171295166
    5. '_' → logprob: -4.194321155548096
    6. '_j' → logprob: -4.444321155548096
    7. ' des' → logprob: -5.069321155548096
    8. '```' → logprob: -5.194321155548096
    9. 'de' → logprob: -5.319321155548096
    10. '_of' → logprob: -5.444321155548096

Token 1581: ' tuy' (ID: 45164)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3795219361782074
    2. 'segments' → logprob: -2.0045218467712402
    3. 'pipes' → logprob: -2.8795218467712402
    4. 't' → logprob: -3.2545218467712402
    5. 'n' → logprob: -3.6295218467712402
    6. '#' → logprob: -3.8795218467712402
    7. '   ' → logprob: -4.50452184677124
    8. 'j' → logprob: -4.62952184677124
    9. 'length' → logprob: -4.87952184677124
    10. 'def' → logprob: -6.87952184677124

Token 1582: 'aux' (ID: 5454)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0075300931930542
    2. 'def' → logprob: -1.5075300931930542
    3. 'b' → logprob: -2.0075302124023438
    4. 'aux' → logprob: -2.7575302124023438
    5. '```' → logprob: -2.8825302124023438
    6. 'bes' → logprob: -3.3825302124023438
    7. '#' → logprob: -4.007530212402344
    8. 'p' → logprob: -4.132530212402344
    9. 'x' → logprob: -4.382530212402344
    10. '##' → logprob: -4.507530212402344

Token 1583: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.181336522102356
    2. 's' → logprob: -1.681336522102356
    3. ' =' → logprob: -2.0563364028930664
    4. '_' → logprob: -2.6813364028930664
    5. '=' → logprob: -3.5563364028930664
    6. ',' → logprob: -3.6813364028930664
    7. '```' → logprob: -3.6813364028930664
    8. '+' → logprob: -4.056336402893066
    9. '_total' → logprob: -4.056336402893066
    10. ' +' → logprob: -4.056336402893066

Token 1584: ' fixe' (ID: 111690)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6217923164367676
    2. '   ' → logprob: -1.1217923164367676
    3. 'sum' → logprob: -2.2467923164367676
    4. 's' → logprob: -5.246792316436768
    5. ' n' → logprob: -5.371792316436768
    6. 'len' → logprob: -5.371792316436768
    7. '=' → logprob: -5.496792316436768
    8. '#' → logprob: -5.496792316436768
    9. ' =' → logprob: -5.871792316436768
    10. ' sum' → logprob: -7.496792316436768

Token 1585: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025051848962903023
    2. '(n' → logprob: -5.275052070617676
    3. ',' → logprob: -5.775052070617676
    4. ':' → logprob: -6.025052070617676
    5. 'n' → logprob: -6.150052070617676
    6. 'def' → logprob: -6.525052070617676
    7. '(p' → logprob: -6.650052070617676
    8. 's' → logprob: -6.775052070617676
    9. '```' → logprob: -7.150052070617676
    10. ')' → logprob: -7.275052070617676

Token 1586: 'S' (ID: 50)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5598953366279602
    2. ')' → logprob: -2.3098952770233154
    3. '   ' → logprob: -2.3098952770233154
    4. ' =' → logprob: -2.6848952770233154
    5. '=' → logprob: -3.8098952770233154
    6. '```' → logprob: -4.0598955154418945
    7. 'p' → logprob: -4.3098955154418945
    8. ')
' → logprob: -4.3098955154418945
    9. '(n' → logprob: -4.4348955154418945
    10. ',' → logprob: -4.4348955154418945

Token 1587: ').
' (ID: 6294)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5742769837379456
    2. '=' → logprob: -1.4492769241333008
    3. '   ' → logprob: -2.824276924133301
    4. 'n' → logprob: -2.824276924133301
    5. '
' → logprob: -4.199276924133301
    6. '#' → logprob: -4.324276924133301
    7. ')' → logprob: -4.449276924133301
    8. 'def' → logprob: -5.449276924133301
    9. '=n' → logprob: -5.449276924133301
    10. ')
' → logprob: -5.574276924133301

Token 1588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01653234288096428
    2. 'n' → logprob: -4.6415324211120605
    3. '
' → logprob: -6.3915324211120605
    4. '```' → logprob: -6.6415324211120605
    5. 'def' → logprob: -6.7665324211120605
    6. 'p' → logprob: -6.8915324211120605
    7. '    
' → logprob: -7.1415324211120605
    8. 'length' → logprob: -9.391531944274902
    9. ',' → logprob: -9.641531944274902
    10. 'j' → logprob: -9.641531944274902

Token 1589: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01385576743632555
    2. '    
' → logprob: -6.013855934143066
    3. 'n' → logprob: -6.263855934143066
    4. 'j' → logprob: -6.763855934143066
    5. '\' → logprob: -6.888855934143066
    6. '
' → logprob: -7.263855934143066
    7. ',' → logprob: -7.513855934143066
    8. '```' → logprob: -7.513855934143066
    9. ',
' → logprob: -7.888855934143066
    10. 'p' → logprob: -7.888855934143066

Token 1590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0044378358870744705
    2. '    
' → logprob: -5.8794379234313965
    3. 'n' → logprob: -7.1294379234313965
    4. 'j' → logprob: -8.504437446594238
    5. 'p' → logprob: -8.629437446594238
    6. '
' → logprob: -9.254437446594238
    7. '```' → logprob: -9.629437446594238
    8. 'import' → logprob: -10.379437446594238
    9. '    
    
' → logprob: -10.379437446594238
    10. 'def' → logprob: -10.379437446594238

Token 1591: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02310197986662388
    2. 'n' → logprob: -4.273101806640625
    3. 'p' → logprob: -5.273101806640625
    4. 'j' → logprob: -6.273101806640625
    5. '    
' → logprob: -7.148101806640625
    6. 'pipes' → logprob: -7.898101806640625
    7. 't' → logprob: -8.398101806640625
    8. '#' (adapté à ' #') → logprob: -9.773101806640625
    9. 'length' → logprob: -10.023101806640625
    10. '       ' → logprob: -10.023101806640625

Token 1592: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6442632079124451
    2. 'n' → logprob: -0.7692632079124451
    3. 'p' → logprob: -5.64426326751709
    4. 'j' → logprob: -5.89426326751709
    5. '```' → logprob: -6.39426326751709
    6. 'def' → logprob: -6.76926326751709
    7. '
' → logprob: -6.89426326751709
    8. '#' → logprob: -7.76926326751709
    9. '    
' → logprob: -8.01926326751709
    10. 'import' → logprob: -9.51926326751709

Token 1593: ' salaire' (ID: 135427)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1403800994157791
    2. 'j' → logprob: -2.8903801441192627
    3. '   ' → logprob: -3.7653801441192627
    4. '#' → logprob: -4.515379905700684
    5. ' =' → logprob: -4.640379905700684
    6. '
' → logprob: -5.140379905700684
    7. ' #' → logprob: -5.890379905700684
    8. 'def' → logprob: -6.015379905700684
    9. ' n' → logprob: -6.015379905700684
    10. 'p' → logprob: -6.265379905700684

Token 1594: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07534391433000565
    2. '   ' → logprob: -3.3253438472747803
    3. '=' → logprob: -3.5753438472747803
    4. '_total' → logprob: -5.825344085693359
    5. ' +=' → logprob: -6.825344085693359
    6. ' est' → logprob: -7.325344085693359
    7. ' #' → logprob: -7.575344085693359
    8. '_' → logprob: -7.575344085693359
    9. 'total' → logprob: -7.700344085693359
    10. '#' → logprob: -8.07534408569336

Token 1595: ' somme' (ID: 64484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8154681921005249
    2. '=' → logprob: -1.690468192100525
    3. '(S' → logprob: -1.690468192100525
    4. '(n' → logprob: -2.5654683113098145
    5. ' =' → logprob: -3.0654683113098145
    6. ' (' → logprob: -3.6904683113098145
    7. '(s' → logprob: -4.3154683113098145
    8. '(' → logprob: -4.5654683113098145
    9. '(sum' → logprob: -5.3154683113098145
    10. '(len' → logprob: -6.6904683113098145

Token 1596: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9938099384307861
    2. '_tot' → logprob: -1.2438099384307861
    3. ' =' → logprob: -2.368809938430786
    4. '_t' → logprob: -2.618809938430786
    5. '_total' → logprob: -2.868809938430786
    6. '_' → logprob: -3.368809938430786
    7. 'des' → logprob: -3.868809938430786
    8. 'tot' → logprob: -4.118809700012207
    9. ' totale' → logprob: -4.993809700012207
    10. 'total' → logprob: -5.118809700012207

Token 1597: ' chaque' (ID: 21194)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.4621885418891907
    2. 'segments' → logprob: -1.212188482284546
    3. '_segments' → logprob: -4.087188720703125
    4. 'des' → logprob: -4.712188720703125
    5. ' les' → logprob: -4.837188720703125
    6. ' segments' → logprob: -4.962188720703125
    7. 'la' → logprob: -5.462188720703125
    8. '   ' → logprob: -5.712188720703125
    9. ' des' → logprob: -5.837188720703125
    10. '_' → logprob: -5.962188720703125

Token 1598: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.004990270361304283
    2. ' segment' → logprob: -6.379990100860596
    3. '
' → logprob: -7.254990100860596
    4. '_segment' → logprob: -7.379990100860596
    5. '   ' → logprob: -7.754990100860596
    6. '#' → logprob: -7.879990100860596
    7. '```' → logprob: -8.879990577697754
    8. '(segment' → logprob: -9.004990577697754
    9. '_' → logprob: -9.129990577697754
    10. 'def' → logprob: -9.254990577697754

Token 1599: ' :' (ID: 712)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2068606615066528
    2. ' =' → logprob: -1.3318606615066528
    3. '   ' → logprob: -1.4568606615066528
    4. 's' → logprob: -2.9568605422973633
    5. '```' → logprob: -3.2068605422973633
    6. '=' → logprob: -4.081860542297363
    7. '_total' → logprob: -4.206860542297363
    8. '(s' → logprob: -4.331860542297363
    9. '_s' → logprob: -5.206860542297363
    10. 'def' → logprob: -5.456860542297363

Token 1600: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29847726225852966
    2. ' =' → logprob: -2.5484771728515625
    3. ' (' → logprob: -3.4234771728515625
    4. ')' → logprob: -3.9234771728515625
    5. '(s' → logprob: -4.0484771728515625
    6. '(' → logprob: -4.5484771728515625
    7. '```' → logprob: -4.5484771728515625
    8. ' *' → logprob: -4.9234771728515625
    9. 's' → logprob: -5.0484771728515625
    10. '=' → logprob: -5.1734771728515625

Token 1601: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10178637504577637
    2. 'sum' → logprob: -3.9767863750457764
    3. 'segments' → logprob: -4.6017866134643555
    4. ' =' → logprob: -4.7267866134643555
    5. ' (' → logprob: -4.8517866134643555
    6. '(sum' → logprob: -5.1017866134643555
    7. '(s' → logprob: -5.4767866134643555
    8. '(' → logprob: -5.7267866134643555
    9. '=' → logprob: -5.7267866134643555
    10. ')' → logprob: -5.8517866134643555

Token 1602: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5668035745620728
    2. '_' → logprob: -1.6918035745620728
    3. ' des' → logprob: -3.191803455352783
    4. ' *' → logprob: -3.941803455352783
    5. ' =' → logprob: -4.066803455352783
    6. '*' → logprob: -4.316803455352783
    7. 'def' → logprob: -4.441803455352783
    8. '```' → logprob: -4.441803455352783
    9. '
' → logprob: -4.566803455352783
    10. ' _' → logprob: -4.816803455352783

Token 1603: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8314446210861206
    2. '(' → logprob: -1.3314446210861206
    3. '(s' → logprob: -3.45644474029541
    4. 'sum' → logprob: -3.45644474029541
    5. '(sum' → logprob: -3.70644474029541
    6. '   ' → logprob: -3.70644474029541
    7. 'segments' → logprob: -3.70644474029541
    8. ' sum' → logprob: -3.95644474029541
    9. 'segment' → logprob: -4.08144474029541
    10. ' ' → logprob: -4.58144474029541

Token 1604: 'long' (ID: 8431)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.8413591384887695
    2. 'p' → logprob: -2.4663591384887695
    3. 'sum' → logprob: -2.5913591384887695
    4. ' segment' → logprob: -2.8413591384887695
    5. 'la' → logprob: -3.0913591384887695
    6. 'les' → logprob: -3.0913591384887695
    7. 'segments' → logprob: -3.3413591384887695
    8. ' la' → logprob: -3.3413591384887695
    9. '   ' → logprob: -3.4663591384887695
    10. 'pipes' → logprob: -3.7163591384887695

Token 1605: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.04132157564163208
    2. 'ues' → logprob: -4.416321754455566
    3. 'ue' → logprob: -4.791321754455566
    4. '_p' → logprob: -4.916321754455566
    5. '#' → logprob: -5.791321754455566
    6. 'def' → logprob: -5.916321754455566
    7. '   ' → logprob: -6.291321754455566
    8. 's' → logprob: -7.416321754455566
    9. '\' → logprob: -7.791321754455566
    10. '_' → logprob: -7.916321754455566

Token 1606: ' segment' (ID: 14806)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2936038076877594
    2. '_' → logprob: -2.5436038970947266
    3. '_total' → logprob: -2.9186038970947266
    4. '_tot' → logprob: -3.0436038970947266
    5. '```' → logprob: -3.9186038970947266
    6. 'des' → logprob: -4.293603897094727
    7. '_des' → logprob: -4.668603897094727
    8. ')' → logprob: -4.793603897094727
    9. '_s' → logprob: -5.668603897094727
    10. ' des' → logprob: -5.668603897094727

Token 1607: ')
' (ID: 446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.049410201609134674
    2. ')' → logprob: -3.424410104751587
    3. '_' → logprob: -5.174410343170166
    4. 'e' → logprob: -6.049410343170166
    5. 'es' → logprob: -6.049410343170166
    6. ' s' → logprob: -7.049410343170166
    7. '
' → logprob: -7.424410343170166
    8. ')s' → logprob: -7.424410343170166
    9. '_s' → logprob: -7.799410343170166
    10. ']' → logprob: -7.924410343170166

Token 1608: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.217142254114151
    2. '   ' → logprob: -2.467142343521118
    3. ')' → logprob: -3.717142343521118
    4. '_' → logprob: -3.717142343521118
    5. 'def' → logprob: -3.842142343521118
    6. '_s' → logprob: -5.217142105102539
    7. '(s' → logprob: -5.342142105102539
    8. ' s' → logprob: -5.717142105102539
    9. '#' → logprob: -5.967142105102539
    10. '(' → logprob: -6.217142105102539

Token 1609: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0514085479080677
    2. 'def' → logprob: -4.801408767700195
    3. '
' → logprob: -5.176408767700195
    4. ')' → logprob: -5.301408767700195
    5. ')
' → logprob: -5.676408767700195
    6. ' =' → logprob: -5.676408767700195
    7. 's' → logprob: -5.676408767700195
    8. ':' → logprob: -5.676408767700195
    9. ' +' → logprob: -6.051408767700195
    10. ':
' → logprob: -6.176408767700195

Token 1610: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03676924481987953
    2. '
' → logprob: -4.036769390106201
    3. 'def' → logprob: -5.661769390106201
    4. ')' → logprob: -5.911769390106201
    5. '\' → logprob: -6.411769390106201
    6. ')
' → logprob: -6.911769390106201
    7. ':' → logprob: -7.036769390106201
    8. '#
' → logprob: -7.161769390106201
    9. '\n' → logprob: -7.286769390106201
    10. '#' → logprob: -7.286769390106201

Token 1611: ' enfin' (ID: 50642)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27546700835227966
    2. '#' → logprob: -1.525467038154602
    3. ' #' → logprob: -4.1504669189453125
    4. ' la' → logprob: -6.9004669189453125
    5. '
' → logprob: -7.1504669189453125
    6. ' =' → logprob: -7.4004669189453125
    7. '\' → logprob: -7.6504669189453125
    8. 'max' → logprob: -7.9004669189453125
    9. 's' → logprob: -8.025466918945312
    10. '\t' → logprob: -8.025466918945312

Token 1612: ' multiplier' (ID: 61814)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6477214694023132
    2. '*' → logprob: -2.522721529006958
    3. ' =' → logprob: -2.522721529006958
    4. ' *' → logprob: -2.647721529006958
    5. '#' → logprob: -3.022721529006958
    6. 'sum' → logprob: -3.522721529006958
    7. 'max' → logprob: -3.772721529006958
    8. 's' → logprob: -4.397721290588379
    9. ')' → logprob: -4.397721290588379
    10. '=' → logprob: -4.522721290588379

Token 1613: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3849528133869171
    2. ' par' → logprob: -1.8849527835845947
    3. '   ' → logprob: -2.6349527835845947
    4. '_par' → logprob: -3.5099527835845947
    5. 'sur' → logprob: -4.009953022003174
    6. '(par' → logprob: -4.759953022003174
    7. ' ' → logprob: -4.884953022003174
    8. '```' → logprob: -5.259953022003174
    9. '(' → logprob: -5.384953022003174
    10. ' sur' → logprob: -5.884953022003174

Token 1614: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8196702003479004
    2. ' le' → logprob: -1.9446702003479004
    3. '(n' → logprob: -2.1946702003479004
    4. 'n' → logprob: -2.4446702003479004
    5. ' n' → logprob: -2.8196702003479004
    6. ' nombre' → logprob: -3.4446702003479004
    7. 'nombre' → logprob: -3.4446702003479004
    8. 'la' → logprob: -3.6946702003479004
    9. ' la' → logprob: -4.0696702003479
    10. ' (' → logprob: -4.4446702003479

Token 1615: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.20908129215240479
    2. ' nombre' → logprob: -2.0840811729431152
    3. 'n' → logprob: -4.209081172943115
    4. 'total' → logprob: -4.459081172943115
    5. '#' → logprob: -4.584081172943115
    6. 's' → logprob: -4.959081172943115
    7. '(n' → logprob: -5.459081172943115
    8. 'number' → logprob: -5.584081172943115
    9. '\n' → logprob: -5.834081172943115
    10. ' total' → logprob: -6.709081172943115

Token 1616: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.0130791664123535
    2. '_of' → logprob: -1.2630791664123535
    3. '   ' → logprob: -1.5130791664123535
    4. '_' → logprob: -2.5130791664123535
    5. ' de' → logprob: -4.6380791664123535
    6. '_total' → logprob: -4.6380791664123535
    7. 'de' → logprob: -4.8880791664123535
    8. 'def' → logprob: -5.5130791664123535
    9. '_des' → logprob: -5.5130791664123535
    10. '_
' → logprob: -6.2630791664123535

Token 1617: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.1614646166563034
    2. 'segments' → logprob: -2.0364646911621094
    3. '_' → logprob: -4.161464691162109
    4. ' segments' → logprob: -7.161464691162109
    5. 's' → logprob: -7.286464691162109
    6. '\' → logprob: -8.16146469116211
    7. '\n' → logprob: -8.16146469116211
    8. ' _' → logprob: -8.28646469116211
    9. '_s' → logprob: -8.53646469116211
    10. '_seg' → logprob: -9.91146469116211

Token 1618: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4816888570785522
    2. ':' → logprob: -1.6066888570785522
    3. 'def' → logprob: -1.8566888570785522
    4. '(
' → logprob: -2.481688976287842
    5. ')' → logprob: -2.856688976287842
    6. '(' → logprob: -2.856688976287842
    7. ' =' → logprob: -3.481688976287842
    8. '(n' → logprob: -3.481688976287842
    9. 's' → logprob: -3.731688976287842
    10. '```' → logprob: -3.981688976287842

Token 1619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008793608285486698
    2. '    
' → logprob: -6.008793830871582
    3. 'def' → logprob: -6.133793830871582
    4. '
' → logprob: -6.633793830871582
    5. ')' → logprob: -7.508793830871582
    6. 'import' → logprob: -8.133793830871582
    7. ':' → logprob: -8.258793830871582
    8. '(n' → logprob: -8.383793830871582
    9. 'n' → logprob: -8.883793830871582
    10. '```' → logprob: -9.008793830871582

Token 1620: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013526295311748981
    2. '
' → logprob: -5.388526439666748
    3. '    
' → logprob: -6.513526439666748
    4. '\n' → logprob: -6.763526439666748
    5. 'n' → logprob: -6.888526439666748
    6. 'def' → logprob: -6.888526439666748
    7. '\' → logprob: -7.013526439666748
    8. ':' → logprob: -7.638526439666748
    9. '```' → logprob: -7.888526439666748
    10. '(n' → logprob: -8.38852596282959

Token 1621: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001522599020972848
    2. '    
' → logprob: -7.626522541046143
    3. 'n' → logprob: -7.876522541046143
    4. '       ' → logprob: -8.8765230178833
    5. 'j' → logprob: -9.6265230178833
    6. '```' → logprob: -9.7515230178833
    7. '
' → logprob: -10.0015230178833
    8. '\' → logprob: -10.1265230178833
    9. '(n' → logprob: -10.2515230178833
    10. '"' → logprob: -10.2515230178833

Token 1622: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036920562386512756
    2. 'n' → logprob: -3.6619205474853516
    3. 'j' → logprob: -5.536920547485352
    4. 'def' → logprob: -6.286920547485352
    5. '
' → logprob: -6.786920547485352
    6. '    
' → logprob: -7.536920547485352
    7. 'p' → logprob: -7.536920547485352
    8. '#' (adapté à ' #') → logprob: -7.786920547485352
    9. '\n' → logprob: -7.911920547485352
    10. '```' → logprob: -8.036920547485352

Token 1623: ' En' (ID: 2130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2681390047073364
    2. 'n' → logprob: -1.5181390047073364
    3. 'p' → logprob: -4.768138885498047
    4. 'def' → logprob: -5.893138885498047
    5. 'length' → logprob: -6.643138885498047
    6. '#' → logprob: -7.518138885498047
    7. 'j' → logprob: -7.643138885498047
    8. 'lines' → logprob: -7.893138885498047
    9. '```' → logprob: -7.893138885498047
    10. '    
' → logprob: -8.268138885498047

Token 1624: ' réalité' (ID: 63047)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7204809188842773
    2. ' somme' → logprob: -1.8454809188842773
    3. 'def' → logprob: -2.0954809188842773
    4. 's' → logprob: -2.0954809188842773
    5. '#' → logprob: -2.3454809188842773
    6. 'sum' → logprob: -3.4704809188842773
    7. '\' → logprob: -3.8454809188842773
    8. '(n' → logprob: -3.8454809188842773
    9. 'for' → logprob: -4.095480918884277
    10. ' n' → logprob: -4.095480918884277

Token 1625: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9623637795448303
    2. '#' → logprob: -1.3373637199401855
    3. '   ' → logprob: -1.9623637199401855
    4. 'def' → logprob: -2.5873637199401855
    5. ' =' → logprob: -2.8373637199401855
    6. '=' → logprob: -4.0873637199401855
    7. ',' → logprob: -4.3373637199401855
    8. ':
' → logprob: -4.5873637199401855
    9. '...' → logprob: -5.2123637199401855
    10. '_' → logprob: -5.4623637199401855

Token 1626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010247539728879929
    2. '#' → logprob: -5.260247707366943
    3. ')' → logprob: -6.135247707366943
    4. '\' → logprob: -7.635247707366943
    5. '\n' → logprob: -7.635247707366943
    6. ' =' → logprob: -8.385247230529785
    7. '(n' → logprob: -8.510247230529785
    8. '
' → logprob: -8.635247230529785
    9. 'def' → logprob: -8.885247230529785
    10. 'n' → logprob: -9.010247230529785

Token 1627: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005278938449919224
    2. ')' → logprob: -6.630279064178467
    3. '#' (adapté à ' #') → logprob: -6.755279064178467
    4. '\n' → logprob: -7.505279064178467
    5. '(n' → logprob: -8.130278587341309
    6. 'def' → logprob: -8.130278587341309
    7. '\' → logprob: -8.130278587341309
    8. '       ' → logprob: -8.255278587341309
    9. '"' → logprob: -8.755278587341309
    10. '(' → logprob: -9.130278587341309

Token 1628: ' salaire' (ID: 135427)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08897697925567627
    2. '#' → logprob: -2.9639768600463867
    3. 'def' → logprob: -5.088976860046387
    4. 'n' → logprob: -5.338976860046387
    5. '(n' → logprob: -5.463976860046387
    6. ' #' → logprob: -5.713976860046387
    7. '#
' → logprob: -6.213976860046387
    8. ')' → logprob: -6.213976860046387
    9. '\' → logprob: -6.338976860046387
    10. '\n' → logprob: -6.838976860046387

Token 1629: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5780243277549744
    2. ' =' → logprob: -0.8280243277549744
    3. '_' → logprob: -7.453024387359619
    4. '   ' → logprob: -7.828024387359619
    5. ')' → logprob: -8.703023910522461
    6. ' ' → logprob: -8.703023910522461
    7. ':' → logprob: -9.078023910522461
    8. '(' → logprob: -9.328023910522461
    9. '(s' → logprob: -9.328023910522461
    10. 'def' → logprob: -9.703023910522461

Token 1630: ' k' (ID: 372)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.780091404914856
    2. '(n' → logprob: -2.0300912857055664
    3. 'sum' → logprob: -2.5300912857055664
    4. '   ' → logprob: -2.7800912857055664
    5. ' sum' → logprob: -2.9050912857055664
    6. ' n' → logprob: -3.1550912857055664
    7. ' S' → logprob: -3.5300912857055664
    8. 'S' → logprob: -3.6550912857055664
    9. '(' → logprob: -4.030091285705566
    10. '(s' → logprob: -4.030091285705566

Token 1631: ' *' (ID: 425)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5800938606262207
    2. '=' → logprob: -0.9550938606262207
    3. ' *' → logprob: -3.4550938606262207
    4. ')' → logprob: -4.580093860626221
    5. '*' → logprob: -5.830093860626221
    6. '   ' → logprob: -6.080093860626221
    7. ' ' → logprob: -6.080093860626221
    8. '_' → logprob: -6.580093860626221
    9. '<|end|>' → logprob: -6.705093860626221
    10. '#' → logprob: -7.830093860626221

Token 1632: ' somme' (ID: 64484)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2633908987045288
    2. '(S' → logprob: -2.3883910179138184
    3. '(' → logprob: -3.1383910179138184
    4. '(s' → logprob: -3.6383910179138184
    5. '(n' → logprob: -3.6383910179138184
    6. '(sum' → logprob: -3.6383910179138184
    7. 'sum' → logprob: -5.388391017913818
    8. '(len' → logprob: -5.638391017913818
    9. ' sum' → logprob: -5.888391017913818
    10. '(total' → logprob: -6.263391017913818

Token 1633: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1284436583518982
    2. '=' → logprob: -3.253443717956543
    3. ' =' → logprob: -3.753443717956543
    4. 's' → logprob: -4.628443717956543
    5. '(s' → logprob: -5.128443717956543
    6. '   ' → logprob: -5.253443717956543
    7. ')' → logprob: -5.253443717956543
    8. '_des' → logprob: -5.378443717956543
    9. '_total' → logprob: -5.503443717956543
    10. '```' → logprob: -5.503443717956543

Token 1634: ' longue' (ID: 59564)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.5938794016838074
    2. 'segment' → logprob: -1.9688794612884521
    3. 'p' → logprob: -2.593879461288452
    4. 'length' → logprob: -2.843879461288452
    5. 't' → logprob: -3.468879461288452
    6. 'la' → logprob: -3.593879461288452
    7. 'long' → logprob: -3.593879461288452
    8. 'les' → logprob: -3.718879461288452
    9. '(p' → logprob: -4.218879222869873
    10. ' segments' → logprob: -5.093879222869873

Token 1635: 'urs' (ID: 1628)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9768723845481873
    2. 'urs' → logprob: -1.601872444152832
    3. '_segments' → logprob: -1.726872444152832
    4. 's' → logprob: -3.101872444152832
    5. 'ur' → logprob: -3.476872444152832
    6. 'ments' → logprob: -3.601872444152832
    7. '_t' → logprob: -3.851872444152832
    8. '_p' → logprob: -4.101872444152832
    9. 't' → logprob: -4.351872444152832
    10. 'r' → logprob: -4.726872444152832

Token 1636: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0448472499847412
    2. '   ' → logprob: -1.6698472499847412
    3. 's' → logprob: -2.044847249984741
    4. '```' → logprob: -2.919847249984741
    5. ' =' → logprob: -3.044847249984741
    6. '=' → logprob: -3.794847249984741
    7. ':' → logprob: -3.919847249984741
    8. ')' → logprob: -3.919847249984741
    9. 'def' → logprob: -3.919847249984741
    10. '**' → logprob: -4.04484748840332

Token 1637: ' tous' (ID: 10688)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.049150895327329636
    2. ' segments' → logprob: -3.9241509437561035
    3. 'segment' → logprob: -4.4241509437561035
    4. 't' → logprob: -4.7991509437561035
    5. '_segments' → logprob: -5.2991509437561035
    6. 'k' → logprob: -8.049150466918945
    7. 'p' → logprob: -8.174150466918945
    8. 'les' → logprob: -8.424150466918945
    9. '_' → logprob: -8.549150466918945
    10. 'tout' → logprob: -8.549150466918945

Token 1638: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0498233400285244
    2. '_segments' → logprob: -3.67482328414917
    3. '_t' → logprob: -4.79982328414917
    4. 'segments' → logprob: -5.92482328414917
    5. '_p' → logprob: -6.17482328414917
    6. '_j' → logprob: -6.17482328414917
    7. 'des' → logprob: -6.29982328414917
    8. ' _' → logprob: -6.92482328414917
    9. '```' → logprob: -7.17482328414917
    10. '_des' → logprob: -7.29982328414917

Token 1639: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.5953503847122192
    2. 't' → logprob: -1.0953503847122192
    3. 'pipes' → logprob: -2.8453502655029297
    4. 'p' → logprob: -3.4703502655029297
    5. ' segments' → logprob: -5.47035026550293
    6. '\t' → logprob: -5.84535026550293
    7. '```' → logprob: -6.22035026550293
    8. '   ' → logprob: -6.22035026550293
    9. '\' → logprob: -6.34535026550293
    10. '_segments' → logprob: -6.34535026550293

Token 1640: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6512987017631531
    2. '_' → logprob: -2.026298761367798
    3. '(
' → logprob: -2.526298761367798
    4. ':' → logprob: -2.901298761367798
    5. '(' → logprob: -3.026298761367798
    6. 's' → logprob: -3.276298761367798
    7. '(n' → logprob: -3.776298761367798
    8. '```' → logprob: -4.276298522949219
    9. ' =' → logprob: -4.401298522949219
    10. 'def' → logprob: -4.526298522949219

Token 1641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21811801195144653
    2. '=' → logprob: -2.8431179523468018
    3. '(n' → logprob: -3.2181179523468018
    4. ')' → logprob: -3.7181179523468018
    5. ' =' → logprob: -3.8431179523468018
    6. '#' → logprob: -3.9681179523468018
    7. 's' → logprob: -4.968118190765381
    8. '(k' → logprob: -5.718118190765381
    9. ' *' → logprob: -6.093118190765381
    10. '(' → logprob: -6.218118190765381

Token 1642: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.17827437818050385
    2. '   ' → logprob: -2.678274393081665
    3. '=' → logprob: -3.303274393081665
    4. 'k' → logprob: -3.678274393081665
    5. ' =' → logprob: -4.553274154663086
    6. ' k' → logprob: -4.928274154663086
    7. '\' → logprob: -5.678274154663086
    8. '#
' → logprob: -6.303274154663086
    9. ' #' → logprob: -6.428274154663086
    10. '=k' → logprob: -6.678274154663086

Token 1643: ' où' (ID: 15113)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39110344648361206
    2. '   ' → logprob: -1.1411035060882568
    3. '"' → logprob: -6.141103267669678
    4. ' #' → logprob: -6.766103267669678
    5. '=' → logprob: -8.516103744506836
    6. ' =' → logprob: -8.891103744506836
    7. '#
' → logprob: -9.141103744506836
    8. '
' → logprob: -9.516103744506836
    9. ' k' → logprob: -9.766103744506836
    10. '\' → logprob: -9.891103744506836

Token 1644: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.19727644324302673
    2. ' k' → logprob: -2.3222763538360596
    3. '   ' → logprob: -2.5722763538360596
    4. '#' → logprob: -6.447276592254639
    5. '```' → logprob: -7.197276592254639
    6. ' ' → logprob: -7.697276592254639
    7. '`' → logprob: -7.822276592254639
    8. ' ' → logprob: -8.19727611541748
    9. ' la' → logprob: -8.19727611541748
    10. ' #' → logprob: -8.69727611541748

Token 1645: ' somme' (ID: 64484)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1307332515716553
    2. '#' → logprob: -2.2557332515716553
    3. 's' → logprob: -2.2557332515716553
    4. '_' → logprob: -2.6307332515716553
    5. 'nombre' → logprob: -2.6307332515716553
    6. '=' → logprob: -3.0057332515716553
    7. 'segments' → logprob: -3.0057332515716553
    8. 'n' → logprob: -3.1307332515716553
    9. ' =' → logprob: -3.7557332515716553
    10. ' #' → logprob: -3.8807332515716553

Token 1646: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7134397625923157
    2. ' =' → logprob: -0.7134397625923157
    3. 's' → logprob: -5.33843994140625
    4. '_' → logprob: -5.83843994140625
    5. '_total' → logprob: -6.08843994140625
    6. '```' → logprob: -6.21343994140625
    7. '   ' → logprob: -6.58843994140625
    8. ' de' → logprob: -6.58843994140625
    9. 'de' → logprob: -7.71343994140625
    10. ' des' → logprob: -7.71343994140625

Token 1647: ' longue' (ID: 59564)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.038375839591026306
    2. '_segments' → logprob: -3.7883758544921875
    3. 't' → logprob: -5.6633758544921875
    4. '_' → logprob: -6.4133758544921875
    5. '_j' → logprob: -6.4133758544921875
    6. '```' → logprob: -6.5383758544921875
    7. 'long' → logprob: -6.7883758544921875
    8. '_t' → logprob: -6.9133758544921875
    9. 'length' → logprob: -7.0383758544921875
    10. ' segments' → logprob: -7.2883758544921875

Token 1648: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.21265962719917297
    2. 'r' → logprob: -2.4626595973968506
    3. 's' → logprob: -3.4626595973968506
    4. 'ur' → logprob: -3.7126595973968506
    5. '#' → logprob: -4.33765983581543
    6. '_segments' → logprob: -4.96265983581543
    7. '_' → logprob: -5.08765983581543
    8. 'nts' → logprob: -5.83765983581543
    9. 'rs' → logprob: -5.96265983581543
    10. 'ments' → logprob: -6.33765983581543

Token 1649: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4530249536037445
    2. ' =' → logprob: -1.953024983406067
    3. '_des' → logprob: -3.2030248641967773
    4. '=' → logprob: -3.5780248641967773
    5. 'des' → logprob: -3.9530248641967773
    6. 's' → logprob: -3.9530248641967773
    7. '```' → logprob: -4.078024864196777
    8. '_tot' → logprob: -4.203024864196777
    9. '_total' → logprob: -4.328024864196777
    10. '_of' → logprob: -4.703024864196777

Token 1650: ' segments' (ID: 33749)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1035677194595337
    2. 'segments' → logprob: -1.3535677194595337
    3. 'j' → logprob: -1.6035677194595337
    4. 'p' → logprob: -2.228567600250244
    5. 'pipes' → logprob: -2.728567600250244
    6. '#' → logprob: -4.853567600250244
    7. '```' → logprob: -5.353567600250244
    8. '_j' → logprob: -5.728567600250244
    9. ' segments' → logprob: -5.728567600250244
    10. 'joint' → logprob: -6.103567600250244

Token 1651: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9225070476531982
    2. 's' → logprob: -1.0475070476531982
    3. '_' → logprob: -2.5475070476531982
    4. ' =' → logprob: -2.6725070476531982
    5. ')' → logprob: -4.047507286071777
    6. 'es' → logprob: -4.047507286071777
    7. '#' → logprob: -4.672507286071777
    8. '+' → logprob: -4.922507286071777
    9. 'import' → logprob: -5.047507286071777
    10. '[' → logprob: -5.297507286071777

Token 1652: ' ég' (ID: 33150)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.183315634727478
    2. 'sum' → logprob: -1.808315634727478
    3. ' =' → logprob: -2.1833157539367676
    4. '   ' → logprob: -3.0583157539367676
    5. 's' → logprob: -3.4333157539367676
    6. ' la' → logprob: -3.4333157539367676
    7. ' somme' → logprob: -3.4333157539367676
    8. ' p' → logprob: -3.5583157539367676
    9. ' totale' → logprob: -3.6833157539367676
    10. '=' → logprob: -3.6833157539367676

Token 1653: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.07688254863023758
    2. 'al' → logprob: -2.8268826007843018
    3. 'a' → logprob: -4.951882362365723
    4. 'gal' → logprob: -6.576882362365723
    5. 'aux' → logprob: -6.701882362365723
    6. 'ales' → logprob: -7.201882362365723
    7. '=' → logprob: -7.701882362365723
    8. '
' → logprob: -7.826882362365723
    9. 'u' → logprob: -8.201882362365723
    10. '\' → logprob: -8.326882362365723

Token 1654: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6570952534675598
    2. ' à' → logprob: -1.907095193862915
    3. ' =' → logprob: -2.157095193862915
    4. 'à' → logprob: -2.532095193862915
    5. '=' → logprob: -3.407095193862915
    6. ' des' → logprob: -3.657095193862915
    7. 'au' → logprob: -3.907095193862915
    8. ' aux' → logprob: -4.282095432281494
    9. 'aux' → logprob: -4.407095432281494
    10. ' ' → logprob: -4.657095432281494

Token 1655: ' sum' (ID: 4215)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8368869423866272
    2. 'sum' → logprob: -1.9618868827819824
    3. 'la' → logprob: -1.9618868827819824
    4. ' la' → logprob: -2.2118868827819824
    5. '   ' → logprob: -2.8368868827819824
    6. ' S' → logprob: -3.3368868827819824
    7. 'len' → logprob: -3.5868868827819824
    8. ' sum' → logprob: -3.9618868827819824
    9. 's' → logprob: -4.586886882781982
    10. ' len' → logprob: -5.211886882781982

Token 1656: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18085987865924835
    2. '_p' → logprob: -2.1808598041534424
    3. '_j' → logprob: -3.8058598041534424
    4. 's' → logprob: -4.1808600425720215
    5. '_
' → logprob: -5.9308600425720215
    6. '(p' → logprob: -6.1808600425720215
    7. '_t' → logprob: -6.6808600425720215
    8. '\' → logprob: -6.8058600425720215
    9. '```' → logprob: -6.9308600425720215
    10. ')' → logprob: -7.4308600425720215

Token 1657: ' tuy' (ID: 45164)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4863200783729553
    2. 't' → logprob: -1.7363200187683105
    3. 'pipes' → logprob: -2.7363200187683105
    4. ' p' → logprob: -3.1113200187683105
    5. ' tuy' → logprob: -3.6113200187683105
    6. 'j' → logprob: -3.7363200187683105
    7. ' pipes' → logprob: -5.1113200187683105
    8. '   ' → logprob: -5.3613200187683105
    9. 'long' → logprob: -5.6113200187683105
    10. '```' → logprob: -5.8613200187683105

Token 1658: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.09020136296749115
    2. 'au' → logprob: -3.5902013778686523
    3. '```' → logprob: -4.215201377868652
    4. '##' → logprob: -4.340201377868652
    5. 'es' → logprob: -4.590201377868652
    6. 'pipes' → logprob: -5.340201377868652
    7. '   ' → logprob: -5.965201377868652
    8. 's' → logprob: -6.215201377868652
    9. 'x' → logprob: -6.590201377868652
    10. '#' → logprob: -6.590201377868652

Token 1659: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08213357627391815
    2. 's' → logprob: -3.9571335315704346
    3. '(
' → logprob: -4.707133769989014
    4. '(n' → logprob: -5.207133769989014
    5. ',' → logprob: -5.332133769989014
    6. '```' → logprob: -5.332133769989014
    7. 'def' → logprob: -5.582133769989014
    8. '_' → logprob: -5.957133769989014
    9. '[
' → logprob: -6.082133769989014
    10. '(' → logprob: -6.332133769989014

Token 1660: ' joints' (ID: 47223)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4462154805660248
    2. ' sum' → logprob: -1.1962155103683472
    3. 'j' → logprob: -3.4462153911590576
    4. ' j' → logprob: -4.321215629577637
    5. 's' → logprob: -5.071215629577637
    6. ' joints' → logprob: -6.196215629577637
    7. ' somme' → logprob: -7.071215629577637
    8. '(sum' → logprob: -7.696215629577637
    9. '```' → logprob: -8.196215629577637
    10. 'join' → logprob: -8.571215629577637

Token 1661: ' utilisés' (ID: 94258)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.029785394668579
    2. 's' → logprob: -2.029785394668579
    3. '[' → logprob: -2.404785394668579
    4. '(
' → logprob: -2.779785394668579
    5. '[
' → logprob: -2.779785394668579
    6. '_' → logprob: -3.029785394668579
    7. '(' → logprob: -3.279785394668579
    8. '```' → logprob: -3.404785394668579
    9. '(n' → logprob: -3.654785394668579
    10. ',' → logprob: -3.904785394668579

Token 1662: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30355629324913025
    2. 'def' → logprob: -1.9285563230514526
    3. 'n' → logprob: -2.303556203842163
    4. '(
' → logprob: -5.803556442260742
    5. '(n' → logprob: -6.178556442260742
    6. 'import' → logprob: -6.178556442260742
    7. '```' → logprob: -6.553556442260742
    8. ':
' → logprob: -6.803556442260742
    9. ':' → logprob: -7.178556442260742
    10. '()
' → logprob: -7.178556442260742

Token 1663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012996799312531948
    2. 'n' → logprob: -4.762996673583984
    3. 'def' → logprob: -6.137996673583984
    4. '    
' → logprob: -7.137996673583984
    5. '
' → logprob: -7.262996673583984
    6. '(n' → logprob: -8.262996673583984
    7. 'import' → logprob: -9.387996673583984
    8. '\' → logprob: -10.012996673583984
    9. '```' → logprob: -10.012996673583984
    10. ' n' → logprob: -10.262996673583984

Token 1664: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033652037382125854
    2. 'n' → logprob: -3.9086520671844482
    3. 'def' → logprob: -5.283651828765869
    4. 'j' → logprob: -6.408651828765869
    5. '\' → logprob: -6.783651828765869
    6. 'p' → logprob: -6.908651828765869
    7. '(n' → logprob: -7.533651828765869
    8. '    
' → logprob: -7.658651828765869
    9. '```' → logprob: -7.783651828765869
    10. ':' → logprob: -8.158652305603027

Token 1665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023174879606813192
    2. 'n' → logprob: -6.752317428588867
    3. '    
' → logprob: -7.627317428588867
    4. '
' → logprob: -8.377317428588867
    5. 'def' → logprob: -8.502317428588867
    6. 'p' → logprob: -9.127317428588867
    7. '```' → logprob: -10.877317428588867
    8. '       ' → logprob: -11.127317428588867
    9. 'import' → logprob: -11.377317428588867
    10. 'j' → logprob: -11.377317428588867

Token 1666: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02159370854496956
    2. 'n' → logprob: -4.8965935707092285
    3. 'j' → logprob: -5.5215935707092285
    4. 'p' → logprob: -5.7715935707092285
    5. '    
' → logprob: -6.0215935707092285
    6. 'def' → logprob: -6.1465935707092285
    7. ')' → logprob: -8.021594047546387
    8. 'length' → logprob: -8.271594047546387
    9. '#' (adapté à ' #') → logprob: -8.521594047546387
    10. 'import' → logprob: -8.646594047546387

Token 1667: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048271629959344864
    2. 'n' → logprob: -4.048271656036377
    3. 'def' → logprob: -4.423271656036377
    4. 'j' → logprob: -4.548271656036377
    5. 'p' → logprob: -5.423271656036377
    6. '    
' → logprob: -7.173271656036377
    7. '\' → logprob: -8.048271179199219
    8. '"' → logprob: -8.423271179199219
    9. ')' → logprob: -8.923271179199219
    10. '       ' → logprob: -9.048271179199219

Token 1668: ''' (ID: 6)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1809906959533691
    2. '=' → logprob: -1.8059906959533691
    3. ' =' → logprob: -2.055990695953369
    4. '#' → logprob: -2.305990695953369
    5. 'def' → logprob: -3.055990695953369
    6. '   ' → logprob: -3.180990695953369
    7. '_' → logprob: -3.555990695953369
    8. '(n' → logprob: -3.555990695953369
    9. '[n' → logprob: -3.805990695953369
    10. 's' → logprob: -3.805990695953369

Token 1669: 'én' (ID: 3289)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24539971351623535
    2. '   ' → logprob: -2.9953997135162354
    3. 'def' → logprob: -3.2453997135162354
    4. ' =' → logprob: -3.6203997135162354
    5. 'j' → logprob: -3.9953997135162354
    6. '=' → logprob: -3.9953997135162354
    7. '#' → logprob: -4.120399475097656
    8. 'total' → logprob: -4.370399475097656
    9. 'length' → logprob: -4.870399475097656
    10. '
' → logprob: -5.745399475097656

Token 1670: 'oncé' (ID: 59071)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9587907791137695
    2. '_
' → logprob: -1.4587907791137695
    3. '#' → logprob: -2.5837907791137695
    4. 'def' → logprob: -2.8337907791137695
    5. 't' → logprob: -3.0837907791137695
    6. '#
' → logprob: -3.4587907791137695
    7. 'n' → logprob: -4.0837907791137695
    8. '[' → logprob: -4.0837907791137695
    9. '```' → logprob: -4.2087907791137695
    10. '[
' → logprob: -4.4587907791137695

Token 1671: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36079367995262146
    2. ' =' → logprob: -2.2357935905456543
    3. '=' → logprob: -3.2357935905456543
    4. 'def' → logprob: -3.6107935905456543
    5. '(n' → logprob: -3.9857935905456543
    6. ':' → logprob: -3.9857935905456543
    7. '[n' → logprob: -4.485793590545654
    8. '#' → logprob: -4.610793590545654
    9. '```' → logprob: -4.735793590545654
    10. 'n' → logprob: -4.735793590545654

Token 1672: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5796880722045898
    2. 'n' → logprob: -2.07968807220459
    3. 'def' → logprob: -2.45468807220459
    4. '(n' → logprob: -3.20468807220459
    5. '(
' → logprob: -3.32968807220459
    6. '(' → logprob: -3.45468807220459
    7. '```' → logprob: -3.70468807220459
    8. ')' → logprob: -3.95468807220459
    9. ':' → logprob: -4.32968807220459
    10. '[' → logprob: -4.82968807220459

Token 1673: '給' (ID: 45805)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6757562160491943
    2. 'n' → logprob: -0.8007562160491943
    3. 'def' → logprob: -4.050756454467773
    4. 'j' → logprob: -4.550756454467773
    5. 'p' → logprob: -6.300756454467773
    6. ')' → logprob: -6.425756454467773
    7. ')
' → logprob: -6.800756454467773
    8. '#' → logprob: -6.925756454467773
    9. '#
' → logprob: -7.050756454467773
    10. '```' → logprob: -7.300756454467773

Token 1674: '料' (ID: 9268)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0232861042022705
    2. 'def' → logprob: -1.3982861042022705
    3. ' =' → logprob: -2.3982861042022705
    4. '_' → logprob: -2.8982861042022705
    5. 'é' → logprob: -3.1482861042022705
    6. ')' → logprob: -3.6482861042022705
    7. 'import' → logprob: -3.8982861042022705
    8. 'from' → logprob: -4.023285865783691
    9. ' ' → logprob: -4.148285865783691
    10. '_
' → logprob: -4.523285865783691

Token 1675: 'は' (ID: 5205)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0136895179748535
    2. '"' → logprob: -1.3886895179748535
    3. '=' → logprob: -1.3886895179748535
    4. '_' → logprob: -3.3886895179748535
    5. '"""' → logprob: -3.7636895179748535
    6. ')' → logprob: -4.2636895179748535
    7. '```' → logprob: -4.6386895179748535
    8. ' ' → logprob: -5.3886895179748535
    9. ',' → logprob: -5.6386895179748535
    10. ':' → logprob: -5.7636895179748535

Token 1676: '「' (ID: 6055)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.4031790494918823
    2. ')' → logprob: -1.7781790494918823
    3. '(n' → logprob: -2.153179168701172
    4. 'n' → logprob: -2.403179168701172
    5. '   ' → logprob: -2.903179168701172
    6. ' ' → logprob: -3.153179168701172
    7. ':' → logprob: -3.403179168701172
    8. '```' → logprob: -3.653179168701172
    9. 'len' → logprob: -3.903179168701172
    10. 'def' → logprob: -4.028179168701172

Token 1677: 'パ' (ID: 24065)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7198389172554016
    2. '   ' → logprob: -1.5948388576507568
    3. ')' → logprob: -2.594838857650757
    4. '(n' → logprob: -2.844838857650757
    5. 'k' → logprob: -3.094838857650757
    6. 'def' → logprob: -4.219839096069336
    7. 'p' → logprob: -4.344839096069336
    8. 's' → logprob: -4.469839096069336
    9. '"' → logprob: -4.594839096069336
    10. ' (' → logprob: -4.969839096069336

Token 1678: 'イ' (ID: 6339)
  Prédit: 'イ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'イ' → logprob: -0.3392585813999176
    2. '#' → logprob: -2.2142586708068848
    3. 'p' → logprob: -3.5892586708068848
    4. 'ipes' → logprob: -3.9642586708068848
    5. '```' → logprob: -4.214258670806885
    6. ')' → logprob: -4.589258670806885
    7. 's' → logprob: -4.714258670806885
    8. 'i' → logprob: -4.714258670806885
    9. '`' → logprob: -4.839258670806885
    10. 'def' → logprob: -4.964258670806885

Token 1679: 'プ' (ID: 14515)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.25978654623031616
    2. 'イ' → logprob: -2.509786605834961
    3. 'pe' → logprob: -3.134786605834961
    4. ')' → logprob: -4.259786605834961
    5. 'プ' → logprob: -4.509786605834961
    6. 'ipes' → logprob: -4.634786605834961
    7. '#' → logprob: -4.634786605834961
    8. '）' → logprob: -4.634786605834961
    9. '```' → logprob: -5.134786605834961
    10. 'pes' → logprob: -5.759786605834961

Token 1680: 'の' (ID: 3385)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6462746262550354
    2. '[' → logprob: -2.3962745666503906
    3. 'の' → logprob: -2.5212745666503906
    4. '_' → logprob: -2.6462745666503906
    5. ']' → logprob: -2.7712745666503906
    6. '[
' → logprob: -3.5212745666503906
    7. '=' → logprob: -4.146274566650391
    8. ')' → logprob: -4.271274566650391
    9. '[]' → logprob: -4.396274566650391
    10. '[i' → logprob: -5.021274566650391

Token 1681: '本' (ID: 4087)
  Prédit: '長'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '長' → logprob: -0.573332667350769
    2. 's' → logprob: -1.698332667350769
    3. 'n' → logprob: -2.5733327865600586
    4. '#' → logprob: -3.0733327865600586
    5. 'length' → logprob: -4.073332786560059
    6. '[n' → logprob: -4.198332786560059
    7. 'の' → logprob: -4.323332786560059
    8. '数' → logprob: -4.698332786560059
    9. 'len' → logprob: -4.698332786560059
    10. ' n' → logprob: -5.198332786560059

Token 1682: '数' (ID: 7135)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5564050674438477
    2. 'の' → logprob: -1.8064050674438477
    3. 's' → logprob: -2.1814050674438477
    4. '数' → logprob: -2.6814050674438477
    5. ']' → logprob: -2.9314050674438477
    6. '[
' → logprob: -3.0564050674438477
    7. '[]
' → logprob: -3.4314050674438477
    8. '=' → logprob: -3.6814050674438477
    9. '"' → logprob: -3.6814050674438477
    10. ')' → logprob: -3.6814050674438477

Token 1683: '×' (ID: 12378)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -2.006145477294922
    2. ')' → logprob: -2.131145477294922
    3. ']' → logprob: -2.506145477294922
    4. '```' → logprob: -2.506145477294922
    5. '[n' → logprob: -2.631145477294922
    6. 's' → logprob: -2.756145477294922
    7. '=' → logprob: -3.006145477294922
    8. '[' → logprob: -3.131145477294922
    9. '[i' → logprob: -3.256145477294922
    10. '_' → logprob: -3.506145477294922

Token 1684: 'パ' (ID: 24065)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.44276657700538635
    2. 'n' → logprob: -1.942766547203064
    3. '(' → logprob: -2.3177666664123535
    4. '」' → logprob: -3.3177666664123535
    5. ' (' → logprob: -3.8177666664123535
    6. '1' → logprob: -4.9427666664123535
    7. '```' → logprob: -4.9427666664123535
    8. '（' → logprob: -5.3177666664123535
    9. '(p' → logprob: -5.4427666664123535
    10. ')' → logprob: -5.5677666664123535

Token 1685: 'イ' (ID: 6339)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5068232417106628
    2. '#' → logprob: -2.3818233013153076
    3. 'ipes' → logprob: -2.6318233013153076
    4. '```' → logprob: -2.7568233013153076
    5. 'i' → logprob: -3.7568233013153076
    6. '`' → logprob: -4.1318230628967285
    7. ')' → logprob: -4.2568230628967285
    8. 'ipe' → logprob: -4.3818230628967285
    9. '=' → logprob: -4.5068230628967285
    10. 'r' → logprob: -4.8818230628967285

Token 1686: 'プ' (ID: 14515)
  Prédit: 'イ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'イ' → logprob: -0.004499785136431456
    2. 'ｲ' → logprob: -6.504499912261963
    3. '|' → logprob: -7.629499912261963
    4. 'й' → logprob: -7.879499912261963
    5. 'い' → logprob: -8.004499435424805
    6. '
' → logprob: -8.129499435424805
    7. '```' → logprob: -8.754499435424805
    8. ')' → logprob: -9.004499435424805
    9. 'ィ' → logprob: -9.129499435424805
    10. '�' → logprob: -9.254499435424805

Token 1687: 'の' (ID: 3385)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7830746173858643
    2. '数' → logprob: -1.1580746173858643
    3. 'の' → logprob: -1.6580746173858643
    4. '*' → logprob: -5.158074378967285
    5. '[]' → logprob: -5.658074378967285
    6. '
' → logprob: -5.908074378967285
    7. '[' → logprob: -6.158074378967285
    8. ']' → logprob: -6.283074378967285
    9. '```' → logprob: -6.283074378967285
    10. '_count' → logprob: -6.408074378967285

Token 1688: '長' (ID: 35081)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.872197151184082
    2. '長' → logprob: -1.997197151184082
    3. 'n' → logprob: -2.247197151184082
    4. '#' → logprob: -2.497197151184082
    5. '本' → logprob: -2.622197151184082
    6. 's' → logprob: -3.247197151184082
    7. 'length' → logprob: -4.122197151184082
    8. ' n' → logprob: -4.247197151184082
    9. '```' → logprob: -4.247197151184082
    10. ''' → logprob: -4.372197151184082

Token 1689: 'さ' (ID: 7500)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34336626529693604
    2. ')' → logprob: -1.968366265296936
    3. 'es' → logprob: -2.9683661460876465
    4. ']' → logprob: -3.8433661460876465
    5. ')
' → logprob: -4.3433661460876465
    6. 'e' → logprob: -4.8433661460876465
    7. 'def' → logprob: -5.2183661460876465
    8. '_' → logprob: -5.2183661460876465
    9. '#' → logprob: -5.3433661460876465
    10. '(
' → logprob: -5.4683661460876465

Token 1690: 'の' (ID: 3385)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23696261644363403
    2. ']' → logprob: -2.2369625568389893
    3. '_' → logprob: -3.4869625568389893
    4. ')' → logprob: -3.6119625568389893
    5. '```' → logprob: -4.611962795257568
    6. '[' → logprob: -4.986962795257568
    7. '）' → logprob: -5.611962795257568
    8. '+' → logprob: -5.736962795257568
    9. '」' → logprob: -6.236962795257568
    10. '#' → logprob: -6.361962795257568

Token 1691: '総' (ID: 109704)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3106997013092041
    2. 'n' → logprob: -3.310699701309204
    3. '```' → logprob: -3.310699701309204
    4. ' ' → logprob: -3.685699701309204
    5. ')' → logprob: -3.935699701309204
    6. ' n' → logprob: -3.935699701309204
    7. ' ' → logprob: -4.060699462890625
    8. ''' → logprob: -4.060699462890625
    9. '_' → logprob: -4.435699462890625
    10. ']' → logprob: -4.685699462890625

Token 1692: '和' (ID: 5884)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3848779797554016
    2. '数' → logprob: -2.759877920150757
    3. ']' → logprob: -3.634877920150757
    4. 's' → logprob: -4.009878158569336
    5. '
' → logprob: -4.009878158569336
    6. ')' → logprob: -4.009878158569336
    7. '=' → logprob: -4.134878158569336
    8. '[]' → logprob: -4.259878158569336
    9. '[]
' → logprob: -4.384878158569336
    10. 'es' → logprob: -4.634878158569336

Token 1693: '」で' (ID: 169037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7897109985351562
    2. 's' → logprob: -2.4147109985351562
    3. ']' → logprob: -2.6647109985351562
    4. '[' → logprob: -3.0397109985351562
    5. '#' → logprob: -3.1647109985351562
    6. '```' → logprob: -3.5397109985351562
    7. '_' → logprob: -3.6647109985351562
    8. '+' → logprob: -3.7897109985351562
    9. '[
' → logprob: -3.7897109985351562
    10. '(
' → logprob: -4.039710998535156

Token 1694: '支' (ID: 18904)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6750584244728088
    2. '(' → logprob: -2.925058364868164
    3. '(n' → logprob: -2.925058364868164
    4. '=' → logprob: -3.050058364868164
    5. '   ' → logprob: -3.050058364868164
    6. 'def' → logprob: -3.050058364868164
    7. '#' → logprob: -3.175058364868164
    8. '_' → logprob: -3.550058364868164
    9. '\n' → logprob: -4.050058364868164
    10. '*' → logprob: -4.175058364868164

Token 1695: '払' (ID: 103561)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8762902021408081
    2. ')' → logprob: -1.876290202140808
    3. '_' → logprob: -2.2512903213500977
    4. 'ay' → logprob: -2.7512903213500977
    5. '=' → logprob: -2.8762903213500977
    6. ')
' → logprob: -3.1262903213500977
    7. 'er' → logprob: -4.126290321350098
    8. '_
' → logprob: -4.501290321350098
    9. ' =' → logprob: -4.751290321350098
    10. 'def' → logprob: -5.126290321350098

Token 1696: 'う' (ID: 8574)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0730726718902588
    2. '\' → logprob: -2.323072671890259
    3. 'は' → logprob: -2.573072671890259
    4. 'け' → logprob: -2.698072671890259
    5. '__' → logprob: -2.698072671890259
    6. 'い' → logprob: -3.073072671890259
    7. 'わせ' → logprob: -3.198072671890259
    8. 'う' → logprob: -3.698072671890259
    9. 'わ' → logprob: -3.823072671890259
    10. '"' → logprob: -3.823072671890259

Token 1697: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7517043948173523
    2. '_' → logprob: -1.876704454421997
    3. '=' → logprob: -2.751704454421997
    4. ']' → logprob: -2.876704454421997
    5. '#' → logprob: -3.376704454421997
    6. '）' → logprob: -3.376704454421997
    7. '」' → logprob: -4.001704216003418
    8. 'の' → logprob: -4.251704216003418
    9. '```' → logprob: -4.376704216003418
    10. '\n' → logprob: -4.501704216003418

Token 1698: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.230383038520813
    2. '(n' → logprob: -1.605383038520813
    3. 'def' → logprob: -1.855383038520813
    4. '[n' → logprob: -2.7303829193115234
    5. '(
' → logprob: -2.9803829193115234
    6. '(' → logprob: -3.7303829193115234
    7. ')' → logprob: -3.7303829193115234
    8. 'n' → logprob: -3.8553829193115234
    9. '[
' → logprob: -4.105382919311523
    10. '#' → logprob: -4.105382919311523

Token 1699: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4076008796691895
    2. '(n' → logprob: -2.2826008796691895
    3. '(' → logprob: -2.5326008796691895
    4. ')' → logprob: -2.5326008796691895
    5. 'def' → logprob: -2.5326008796691895
    6. '()' → logprob: -2.9076008796691895
    7. ':' → logprob: -3.0326008796691895
    8. '#' (adapté à ' #') → logprob: -3.4076008796691895
    9. '[' → logprob: -3.4076008796691895
    10. '(p' → logprob: -3.4076008796691895

Token 1700: ' ce' (ID: 2357)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -1.1626170873641968
    2. '(' → logprob: -1.6626170873641968
    3. '   ' → logprob: -2.2876172065734863
    4. '(n' → logprob: -2.4126172065734863
    5. 'def' → logprob: -2.5376172065734863
    6. '[' → logprob: -3.2876172065734863
    7. '(p' → logprob: -3.4126172065734863
    8. ')' → logprob: -3.7876172065734863
    9. 'n' → logprob: -3.7876172065734863
    10. '[
' → logprob: -4.037617206573486

Token 1701: ' qui' (ID: 2780)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4926517605781555
    2. '\' → logprob: -2.6176517009735107
    3. ')' → logprob: -2.7426517009735107
    4. 'def' → logprob: -2.7426517009735107
    5. '#' → logprob: -3.1176517009735107
    6. '   ' → logprob: -3.6176517009735107
    7. '=' → logprob: -3.9926517009735107
    8. '\n' → logprob: -4.24265193939209
    9. ' =' → logprob: -4.61765193939209
    10. ''' → logprob: -4.74265193939209

Token 1702: ' veut' (ID: 41653)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3828085660934448
    2. '_' → logprob: -1.7578085660934448
    3. ')' → logprob: -2.6328086853027344
    4. ''' → logprob: -2.8828086853027344
    5. ' =' → logprob: -3.0078086853027344
    6. '\' → logprob: -3.0078086853027344
    7. ':' → logprob: -3.0078086853027344
    8. '```' → logprob: -3.1328086853027344
    9. '\n' → logprob: -3.2578086853027344
    10. '#' → logprob: -3.2578086853027344

Token 1703: ' dire' (ID: 4071)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5973596572875977
    2. '_' → logprob: -1.9723596572875977
    3. '=' → logprob: -2.3473596572875977
    4. '"' → logprob: -2.7223596572875977
    5. '```' → logprob: -3.9723596572875977
    6. '#' → logprob: -4.222359657287598
    7. 'à' → logprob: -4.597359657287598
    8. '   ' → logprob: -4.847359657287598
    9. '\' → logprob: -4.847359657287598
    10. ')' → logprob: -4.972359657287598

Token 1704: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6651505827903748
    2. ' n' → logprob: -2.4151506423950195
    3. ' (' → logprob: -2.5401506423950195
    4. '(n' → logprob: -2.7901506423950195
    5. ' "' → logprob: -3.0401506423950195
    6. ' ' → logprob: -3.4151506423950195
    7. '"' → logprob: -3.6651506423950195
    8. 'n' → logprob: -3.6651506423950195
    9. ' sys' → logprob: -4.1651506423950195
    10. '(' → logprob: -4.4151506423950195

Token 1705: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2610845565795898
    2. '(' → logprob: -1.8860845565795898
    3. ' (' → logprob: -2.13608455657959
    4. ' ' → logprob: -2.13608455657959
    5. ' ' → logprob: -3.38608455657959
    6. '"' → logprob: -3.51108455657959
    7. '#' → logprob: -3.63608455657959
    8. ')' → logprob: -3.63608455657959
    9. '(n' → logprob: -3.88608455657959
    10. 'n' → logprob: -4.01108455657959

Token 1706: ' pay' (ID: 2777)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1826372146606445
    2. 'n' → logprob: -1.6826372146606445
    3. '(n' → logprob: -2.0576372146606445
    4. '#' → logprob: -2.1826372146606445
    5. 's' → logprob: -2.9326372146606445
    6. '"' → logprob: -3.5576372146606445
    7. 't' → logprob: -3.6826372146606445
    8. 'salary' → logprob: -4.0576372146606445
    9. 'total' → logprob: -4.3076372146606445
    10. 'p' → logprob: -4.3076372146606445

Token 1707: 'e' (ID: 68)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.118350625038147
    2. ')' → logprob: -1.243350625038147
    3. '=' → logprob: -1.618350625038147
    4. '_' → logprob: -3.2433505058288574
    5. ' =' → logprob: -3.3683505058288574
    6. '#' → logprob: -3.7433505058288574
    7. 't' → logprob: -4.243350505828857
    8. ']' → logprob: -4.993350505828857
    9. 'y' → logprob: -5.368350505828857
    10. ')
' → logprob: -5.368350505828857

Token 1708: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30248114466667175
    2. ' =' → logprob: -1.5524811744689941
    3. ')' → logprob: -4.177481174468994
    4. '#' → logprob: -4.802481174468994
    5. '_' → logprob: -4.802481174468994
    6. '   ' → logprob: -6.052481174468994
    7. '
' → logprob: -6.427481174468994
    8. ' ' → logprob: -6.427481174468994
    9. 'r' → logprob: -6.552481174468994
    10. 's' → logprob: -6.677481174468994

Token 1709: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2650487422943115
    2. '_' → logprob: -2.3900487422943115
    3. ' *' → logprob: -2.3900487422943115
    4. ' "' → logprob: -2.6400487422943115
    5. ' n' → logprob: -2.8900487422943115
    6. '(n' → logprob: -2.8900487422943115
    7. '*' → logprob: -3.0150487422943115
    8. ' (' → logprob: -3.2650487422943115
    9. '(' → logprob: -3.5150487422943115
    10. '   ' → logprob: -3.6400487422943115

Token 1710: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9624539613723755
    2. ' n' → logprob: -1.4624539613723755
    3. ' (' → logprob: -2.087453842163086
    4. '(n' → logprob: -2.087453842163086
    5. 'n' → logprob: -2.837453842163086
    6. ' p' → logprob: -4.337453842163086
    7. '(' → logprob: -4.462453842163086
    8. '(p' → logprob: -4.587453842163086
    9. ' ' → logprob: -4.712453842163086
    10. ')' → logprob: -5.462453842163086

Token 1711: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.234638974070549
    2. '(n' → logprob: -2.2346389293670654
    3. 'n' → logprob: -3.3596389293670654
    4. ' n' → logprob: -3.6096389293670654
    5. ' (' → logprob: -4.3596391677856445
    6. '#' (adapté à ' #') → logprob: -4.9846391677856445
    7. '(' → logprob: -5.3596391677856445
    8. ' ' → logprob: -5.7346391677856445
    9. '    ' → logprob: -6.4846391677856445
    10. '  ' → logprob: -6.8596391677856445

Token 1712: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0481822490692139
    2. '   ' → logprob: -1.4231822490692139
    3. '(' → logprob: -2.423182249069214
    4. ')' → logprob: -3.048182249069214
    5. ' (' → logprob: -3.298182249069214
    6. ' *' → logprob: -3.298182249069214
    7. '#' → logprob: -3.298182249069214
    8. '(p' → logprob: -3.423182249069214
    9. ' ' → logprob: -3.798182249069214
    10. 'n' → logprob: -4.173182487487793

Token 1713: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7696784734725952
    2. '(n' → logprob: -1.0196784734725952
    3. 'sum' → logprob: -3.6446785926818848
    4. '#' → logprob: -4.269678592681885
    5. 's' → logprob: -4.269678592681885
    6. '(s' → logprob: -4.269678592681885
    7. 'S' → logprob: -4.269678592681885
    8. '   ' → logprob: -4.269678592681885
    9. 'len' → logprob: -4.394678592681885
    10. ' (' → logprob: -4.394678592681885

Token 1714: 'nombre' (ID: 28576)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02191575989127159
    2. '(n' → logprob: -5.146915912628174
    3. 'len' → logprob: -5.771915912628174
    4. 'nombre' → logprob: -5.771915912628174
    5. ')' → logprob: -6.021915912628174
    6. 'p' → logprob: -6.271915912628174
    7. 'number' → logprob: -7.271915912628174
    8. 's' → logprob: -7.521915912628174
    9. ')n' → logprob: -7.521915912628174
    10. '#' → logprob: -7.646915912628174

Token 1715: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01924741454422474
    2. '_de' → logprob: -4.894247531890869
    3. ')' → logprob: -5.394247531890869
    4. '_of' → logprob: -6.644247531890869
    5. '_des' → logprob: -6.894247531890869
    6. '=' → logprob: -7.144247531890869
    7. 's' → logprob: -7.144247531890869
    8. 'de' → logprob: -7.269247531890869
    9. 'des' → logprob: -7.769247531890869
    10. ')_' → logprob: -8.019247055053711

Token 1716: ' segments' (ID: 33749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0912725105881691
    2. '_segments' → logprob: -2.4662725925445557
    3. 'segments' → logprob: -6.716272354125977
    4. ' _' → logprob: -7.466272354125977
    5. '_p' → logprob: -9.216272354125977
    6. 's' → logprob: -9.591272354125977
    7. '_segment' → logprob: -9.716272354125977
    8. ')' → logprob: -9.966272354125977
    9. ' segments' → logprob: -10.091272354125977
    10. '_t' → logprob: -10.341272354125977

Token 1717: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.781663715839386
    2. '=' → logprob: -1.7816636562347412
    3. '_' → logprob: -1.9066636562347412
    4. '*' → logprob: -2.656663656234741
    5. ' =' → logprob: -2.781663656234741
    6. ' *' → logprob: -3.156663656234741
    7. '+' → logprob: -4.03166389465332
    8. '   ' → logprob: -4.53166389465332
    9. ' +' → logprob: -5.53166389465332
    10. ' ' → logprob: -6.15666389465332

Token 1718: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45063287019729614
    2. ' *' → logprob: -2.4506328105926514
    3. '(n' → logprob: -2.7006328105926514
    4. ')' → logprob: -2.8256328105926514
    5. '_' → logprob: -3.7006328105926514
    6. '(' → logprob: -3.8256328105926514
    7. 'def' → logprob: -4.0756330490112305
    8. ' =' → logprob: -4.2006330490112305
    9. '```' → logprob: -4.3256330490112305
    10. '(
' → logprob: -4.9506330490112305

Token 1719: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4740316569805145
    2. '(sum' → logprob: -1.974031686782837
    3. '(' → logprob: -3.099031686782837
    4. '(s' → logprob: -3.349031686782837
    5. ' sum' → logprob: -3.349031686782837
    6. '(S' → logprob: -3.349031686782837
    7. 'sum' → logprob: -3.849031686782837
    8. '(p' → logprob: -4.099031448364258
    9. '(n' → logprob: -4.599031448364258
    10. '(total' → logprob: -4.849031448364258

Token 1720: 's' (ID: 82)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9503790140151978
    2. '(sum' → logprob: -1.8253790140151978
    3. '(s' → logprob: -1.9503790140151978
    4. 's' → logprob: -2.325378894805908
    5. '(n' → logprob: -2.825378894805908
    6. '(S' → logprob: -3.700378894805908
    7. ' (' → logprob: -4.075378894805908
    8. 'total' → logprob: -4.075378894805908
    9. '(' → logprob: -4.075378894805908
    10. ' sum' → logprob: -4.575378894805908

Token 1721: 'omme' (ID: 30420)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0344678163528442
    2. '_' → logprob: -1.1594678163528442
    3. '=' → logprob: -3.0344676971435547
    4. '_segments' → logprob: -3.1594676971435547
    5. 'n' → logprob: -3.4094676971435547
    6. 'um' → logprob: -3.5344676971435547
    7. '_n' → logprob: -3.7844676971435547
    8. ')_' → logprob: -4.284467697143555
    9. '(n' → logprob: -4.409467697143555
    10. 'egment' → logprob: -4.409467697143555

Token 1722: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01184768509119749
    2. ')' → logprob: -6.011847496032715
    3. '_des' → logprob: -6.011847496032715
    4. '_of' → logprob: -6.136847496032715
    5. '_de' → logprob: -6.261847496032715
    6. 'des' → logprob: -7.636847496032715
    7. '```' → logprob: -7.886847496032715
    8. '_total' → logprob: -8.386847496032715
    9. '_
' → logprob: -8.636847496032715
    10. '_)' → logprob: -8.636847496032715

Token 1723: ' longue' (ID: 59564)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.8396562337875366
    2. ')' → logprob: -1.5896562337875366
    3. '_t' → logprob: -2.839656352996826
    4. '_' → logprob: -2.839656352996826
    5. '_p' → logprob: -2.839656352996826
    6. '_segments' → logprob: -2.964656352996826
    7. 't' → logprob: -3.089656352996826
    8. '_j' → logprob: -3.839656352996826
    9. 'p' → logprob: -4.089656352996826
    10. 'j' → logprob: -4.339656352996826

Token 1724: 'urs' (ID: 1628)
  Prédit: 'ments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.289027601480484
    2. 'gments' → logprob: -2.789027690887451
    3. '_' → logprob: -2.914027690887451
    4. 'g' → logprob: -3.164027690887451
    5. '_segments' → logprob: -3.914027690887451
    6. 'r' → logprob: -4.164027690887451
    7. 'ts' → logprob: -4.289027690887451
    8. 's' → logprob: -4.539027690887451
    9. 'segments' → logprob: -4.539027690887451
    10. 'nts' → logprob: -4.914027690887451

Token 1725: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04846460372209549
    2. ')' → logprob: -3.42346453666687
    3. '_des' → logprob: -5.798464775085449
    4. '```' → logprob: -6.048464775085449
    5. '_p' → logprob: -6.298464775085449
    6. '_of' → logprob: -6.673464775085449
    7. 'des' → logprob: -6.798464775085449
    8. '[' → logprob: -7.173464775085449
    9. '_total' → logprob: -7.423464775085449
    10. '_de' → logprob: -7.798464775085449

Token 1726: ' segments' (ID: 33749)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.048804521560669
    2. 'segments' → logprob: -1.173804521560669
    3. 't' → logprob: -1.798804521560669
    4. 'pipes' → logprob: -2.548804521560669
    5. 'j' → logprob: -3.173804521560669
    6. ')' → logprob: -3.423804521560669
    7. ' segments' → logprob: -4.92380428314209
    8. '#' → logprob: -6.04880428314209
    9. 'pipe' → logprob: -6.92380428314209
    10. ' p' → logprob: -7.17380428314209

Token 1727: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5967912673950195
    2. 's' → logprob: -1.9717912673950195
    3. '```' → logprob: -2.2217912673950195
    4. '_' → logprob: -2.4717912673950195
    5. '[' → logprob: -3.8467912673950195
    6. '   ' → logprob: -4.0967912673950195
    7. '(' → logprob: -4.4717912673950195
    8. ',' → logprob: -4.7217912673950195
    9. '**' → logprob: -5.3467912673950195
    10. ':' → logprob: -5.5967912673950195

Token 1728: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036445263773202896
    2. 'def' → logprob: -4.161445140838623
    3. '(n' → logprob: -4.536445140838623
    4. 'n' → logprob: -6.411445140838623
    5. '
' → logprob: -6.661445140838623
    6. ')' → logprob: -6.911445140838623
    7. '```' → logprob: -7.286445140838623
    8. 'import' → logprob: -7.286445140838623
    9. '(' → logprob: -7.411445140838623
    10. '(p' → logprob: -7.536445140838623

Token 1729: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0194413885474205
    2. '(n' → logprob: -5.644441604614258
    3. 'n' → logprob: -6.269441604614258
    4. '#' → logprob: -6.394441604614258
    5. 'def' → logprob: -6.394441604614258
    6. ':' → logprob: -6.394441604614258
    7. '(' → logprob: -6.519441604614258
    8. ')' → logprob: -6.769441604614258
    9. '[' → logprob: -7.144441604614258
    10. '\' → logprob: -7.269441604614258

Token 1730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025367679074406624
    2. 'n' → logprob: -4.025367736816406
    3. '(n' → logprob: -6.650367736816406
    4. '    
' → logprob: -6.775367736816406
    5. 'def' → logprob: -7.275367736816406
    6. '\n' → logprob: -7.525367736816406
    7. '(
' → logprob: -7.775367736816406
    8. '\' → logprob: -7.775367736816406
    9. '"' → logprob: -8.025367736816406
    10. '```' → logprob: -8.150367736816406

Token 1731: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07521100342273712
    2. 'def' → logprob: -3.5752110481262207
    3. 'n' → logprob: -3.9502110481262207
    4. 'j' → logprob: -5.325211048126221
    5. '(' → logprob: -5.450211048126221
    6. ')' → logprob: -6.075211048126221
    7. '(n' → logprob: -6.200211048126221
    8. '[' → logprob: -6.450211048126221
    9. '```' → logprob: -6.950211048126221
    10. '"' → logprob: -6.950211048126221

Token 1732: ' Comme' (ID: 53252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1842852532863617
    2. ')' → logprob: -3.5592851638793945
    3. 'def' → logprob: -3.6842851638793945
    4. '(' → logprob: -3.6842851638793945
    5. ':' → logprob: -4.0592851638793945
    6. 'n' → logprob: -4.1842851638793945
    7. '(n' → logprob: -4.1842851638793945
    8. '\n' → logprob: -4.9342851638793945
    9. '(
' → logprob: -5.1842851638793945
    10. '\' → logprob: -5.6842851638793945

Token 1733: ' chaque' (ID: 21194)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9813093543052673
    2. '(n' → logprob: -1.606309413909912
    3. '   ' → logprob: -1.856309413909912
    4. ':' → logprob: -2.731309413909912
    5. ')' → logprob: -3.481309413909912
    6. '(' → logprob: -3.731309413909912
    7. '(
' → logprob: -4.106309413909912
    8. 'len' → logprob: -4.106309413909912
    9. 's' → logprob: -4.606309413909912
    10. '```' → logprob: -4.606309413909912

Token 1734: ' segment' (ID: 14806)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23239338397979736
    2. 'segment' → logprob: -3.107393264770508
    3. 't' → logprob: -3.482393264770508
    4. ')' → logprob: -3.857393264770508
    5. '(' → logprob: -4.107393264770508
    6. '#' → logprob: -4.107393264770508
    7. '\' → logprob: -4.232393264770508
    8. 'def' → logprob: -4.732393264770508
    9. 'n' → logprob: -5.107393264770508
    10. ':' → logprob: -5.357393264770508

Token 1735: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4840104281902313
    2. ' =' → logprob: -1.9840104579925537
    3. 's' → logprob: -2.3590104579925537
    4. '   ' → logprob: -2.9840104579925537
    5. ' ' → logprob: -3.9840104579925537
    6. '_' → logprob: -4.359010219573975
    7. '(n' → logprob: -4.609010219573975
    8. '(' → logprob: -4.859010219573975
    9. ':' → logprob: -4.984010219573975
    10. '(s' → logprob: -5.234010219573975

Token 1736: ' considéré' (ID: 136279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.250101089477539
    2. ''' → logprob: -1.625101089477539
    3. '(' → logprob: -1.625101089477539
    4. '_' → logprob: -1.875101089477539
    5. '   ' → logprob: -3.750101089477539
    6. ')' → logprob: -3.875101089477539
    7. ' =' → logprob: -4.000101089477539
    8. 'n' → logprob: -4.000101089477539
    9. 's' → logprob: -4.375101089477539
    10. ' (' → logprob: -4.375101089477539

Token 1737: ' comme' (ID: 7971)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0281609296798706
    2. '_' → logprob: -1.4031609296798706
    3. ''' → logprob: -2.27816104888916
    4. '(' → logprob: -2.40316104888916
    5. 'def' → logprob: -2.77816104888916
    6. ':' → logprob: -3.40316104888916
    7. '```' → logprob: -3.52816104888916
    8. '=' → logprob: -4.15316104888916
    9. '(
' → logprob: -4.40316104888916
    10. '   ' → logprob: -5.27816104888916

Token 1738: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9519029855728149
    2. 'un' → logprob: -1.576902985572815
    3. 'au' → logprob: -2.5769028663635254
    4. 'unique' → logprob: -2.7019028663635254
    5. '   ' → logprob: -2.9519028663635254
    6. 'def' → logprob: -3.3269028663635254
    7. '```' → logprob: -4.076902866363525
    8. ' un' → logprob: -4.076902866363525
    9. '(' → logprob: -4.451902866363525
    10. 'dé' → logprob: -4.576902866363525

Token 1739: ' tuy' (ID: 45164)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7000221014022827
    2. ')' → logprob: -1.5750221014022827
    3. '(' → logprob: -2.8250222206115723
    4. ''' → logprob: -2.9500222206115723
    5. ' segment' → logprob: -3.4500222206115723
    6. ' ' → logprob: -3.5750222206115723
    7. 'segment' → logprob: -3.5750222206115723
    8. '"' → logprob: -4.325022220611572
    9. '\' → logprob: -4.450022220611572
    10. '#' → logprob: -4.575022220611572

Token 1740: 'au' (ID: 753)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.13654929399490356
    2. 'be' → logprob: -2.761549234390259
    3. 'p' → logprob: -3.636549234390259
    4. '   ' → logprob: -4.761549472808838
    5. 'es' → logprob: -5.636549472808838
    6. '#' → logprob: -5.761549472808838
    7. ')
' → logprob: -5.886549472808838
    8. 'n' → logprob: -6.136549472808838
    9. 'def' → logprob: -6.136549472808838
    10. ')' → logprob: -6.261549472808838

Token 1741: ' consist' (ID: 8897)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17085327208042145
    2. 's' → logprob: -2.17085337638855
    3. '[' → logprob: -4.795853137969971
    4. '_
' → logprob: -5.295853137969971
    5. '#' → logprob: -5.545853137969971
    6. ')' → logprob: -5.795853137969971
    7. '[
' → logprob: -5.920853137969971
    8. ',' → logprob: -6.045853137969971
    9. '\' → logprob: -6.045853137969971
    10. '(' → logprob: -6.045853137969971

Token 1742: 'ant' (ID: 493)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4350659847259521
    2. '_' → logprob: -1.5600659847259521
    3. 'e' → logprob: -1.9350659847259521
    4. 's' → logprob: -2.310065984725952
    5. ')' → logprob: -2.560065984725952
    6. '#' → logprob: -2.810065984725952
    7. '=' → logprob: -2.935065984725952
    8. 'ation' → logprob: -4.185066223144531
    9. ' ' → logprob: -4.435066223144531
    10. ':' → logprob: -4.935066223144531

Token 1743: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40473222732543945
    2. '   ' → logprob: -2.5297322273254395
    3. ''' → logprob: -2.6547322273254395
    4. 's' → logprob: -3.1547322273254395
    5. ')' → logprob: -4.0297322273254395
    6. ' ' → logprob: -4.0297322273254395
    7. '=' → logprob: -4.2797322273254395
    8. '```' → logprob: -4.2797322273254395
    9. 'def' → logprob: -4.5297322273254395
    10. '[' → logprob: -4.9047322273254395

Token 1744: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3892167806625366
    2. ')' → logprob: -2.264216899871826
    3. '```' → logprob: -2.514216899871826
    4. 'un' → logprob: -2.639216899871826
    5. '(n' → logprob: -3.014216899871826
    6. 'une' → logprob: -3.014216899871826
    7. '"' → logprob: -3.264216899871826
    8. '1' → logprob: -3.514216899871826
    9. 'au' → logprob: -3.639216899871826
    10. '   ' → logprob: -3.639216899871826

Token 1745: ' somme' (ID: 64484)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17070625722408295
    2. ''' → logprob: -2.420706272125244
    3. 'n' → logprob: -3.795706272125244
    4. '#' → logprob: -4.420706272125244
    5. 's' → logprob: -5.420706272125244
    6. ')' → logprob: -5.545706272125244
    7. ' ' → logprob: -5.795706272125244
    8. '\' → logprob: -6.045706272125244
    9. '*' → logprob: -6.295706272125244
    10. ' ' → logprob: -6.295706272125244

Token 1746: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0707787573337555
    2. '   ' → logprob: -4.445778846740723
    3. '_des' → logprob: -4.445778846740723
    4. '_of' → logprob: -4.820778846740723
    5. ' des' → logprob: -4.945778846740723
    6. '_de' → logprob: -5.320778846740723
    7. '```' → logprob: -5.445778846740723
    8. 's' → logprob: -5.570778846740723
    9. ''' → logprob: -5.695778846740723
    10. 'des' → logprob: -6.070778846740723

Token 1747: ' tuy' (ID: 45164)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9746583104133606
    2. ')' → logprob: -1.3496582508087158
    3. 't' → logprob: -2.099658250808716
    4. 'segments' → logprob: -2.724658250808716
    5. '_j' → logprob: -3.349658250808716
    6. 'j' → logprob: -3.599658250808716
    7. '_segments' → logprob: -3.849658250808716
    8. '_p' → logprob: -4.099658489227295
    9. '_t' → logprob: -4.474658489227295
    10. '\' → logprob: -4.474658489227295

Token 1748: 'aux' (ID: 5454)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.549305260181427
    2. 'bes' → logprob: -1.6743052005767822
    3. 'be' → logprob: -2.9243052005767822
    4. 'es' → logprob: -3.1743052005767822
    5. 'pes' → logprob: -3.7993052005767822
    6. 'p' → logprob: -3.9243052005767822
    7. '#' → logprob: -4.549305438995361
    8. ')' → logprob: -4.549305438995361
    9. ')
' → logprob: -4.799305438995361
    10. '   ' → logprob: -4.799305438995361

Token 1749: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.083080530166626
    2. '   ' → logprob: -2.083080530166626
    3. '[
' → logprob: -2.458080530166626
    4. '```' → logprob: -2.458080530166626
    5. '_' → logprob: -2.708080530166626
    6. ',' → logprob: -2.708080530166626
    7. '[' → logprob: -3.333080530166626
    8. '_lengths' → logprob: -3.583080530166626
    9. 'def' → logprob: -4.083080291748047
    10. '[n' → logprob: -4.333080291748047

Token 1750: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.18245446681976318
    2. 'des' → logprob: -2.5574545860290527
    3. ' joints' → logprob: -3.1824545860290527
    4. ' des' → logprob: -3.5574545860290527
    5. ' j' → logprob: -4.807454586029053
    6. '_j' → logprob: -5.807454586029053
    7. '```' → logprob: -6.057454586029053
    8. 'joint' → logprob: -6.307454586029053
    9. '#' → logprob: -6.682454586029053
    10. 'joins' → logprob: -7.182454586029053

Token 1751: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5987825989723206
    2. '_used' → logprob: -2.098782539367676
    3. '```' → logprob: -2.223782539367676
    4. '[' → logprob: -2.848782539367676
    5. '_util' → logprob: -2.973782539367676
    6. '[
' → logprob: -3.848782539367676
    7. '   ' → logprob: -4.723782539367676
    8. 'util' → logprob: -4.848782539367676
    9. 's' → logprob: -4.973782539367676
    10. ''' → logprob: -4.973782539367676

Token 1752: ' ce' (ID: 2357)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.324789047241211
    2. 'la' → logprob: -2.324789047241211
    3. '`' → logprob: -2.449789047241211
    4. ' la' → logprob: -2.699789047241211
    5. 'n' → logprob: -2.949789047241211
    6. ''' → logprob: -3.074789047241211
    7. '\' → logprob: -3.324789047241211
    8. ' ' → logprob: -3.324789047241211
    9. '"' → logprob: -3.324789047241211
    10. 'p' → logprob: -3.449789047241211

Token 1753: ' segment' (ID: 14806)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4883056879043579
    2. ''' → logprob: -1.863305687904358
    3. '`' → logprob: -3.1133055686950684
    4. '```' → logprob: -3.1133055686950684
    5. 's' → logprob: -3.4883055686950684
    6. 'n' → logprob: -4.238305568695068
    7. ' ' → logprob: -4.363305568695068
    8. '\' → logprob: -4.488305568695068
    9. '\n' → logprob: -4.863305568695068
    10. '+' → logprob: -4.863305568695068

Token 1754: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2436610758304596
    2. ':' → logprob: -3.1186611652374268
    3. '_' → logprob: -3.1186611652374268
    4. '(' → logprob: -3.8686611652374268
    5. '(
' → logprob: -3.8686611652374268
    6. 'def' → logprob: -4.118660926818848
    7. '(n' → logprob: -4.243660926818848
    8. '```' → logprob: -4.368660926818848
    9. '[' → logprob: -4.743660926818848
    10. '[
' → logprob: -5.118660926818848

Token 1755: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06322561204433441
    2. ')' → logprob: -3.563225507736206
    3. '#' → logprob: -4.938225746154785
    4. ''' → logprob: -5.063225746154785
    5. '"' → logprob: -5.438225746154785
    6. '(' → logprob: -6.438225746154785
    7. '       ' → logprob: -6.438225746154785
    8. '    
' → logprob: -6.563225746154785
    9. '
' → logprob: -6.813225746154785
    10. '_' → logprob: -6.813225746154785

Token 1756: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034916263073682785
    2. ')' → logprob: -4.534916400909424
    3. '#' (adapté à ' #') → logprob: -5.159916400909424
    4. '"' → logprob: -5.534916400909424
    5. ':' → logprob: -5.659916400909424
    6. '(' → logprob: -6.409916400909424
    7. ''' → logprob: -6.534916400909424
    8. '       ' → logprob: -7.034916400909424
    9. '\' → logprob: -7.159916400909424
    10. '    ' → logprob: -7.409916400909424

Token 1757: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021799717098474503
    2. '"' → logprob: -5.271799564361572
    3. ')' → logprob: -5.771799564361572
    4. ':' → logprob: -6.271799564361572
    5. '       ' → logprob: -6.521799564361572
    6. '#' → logprob: -6.771799564361572
    7. 'n' → logprob: -6.896799564361572
    8. '\n' → logprob: -6.896799564361572
    9. '(' → logprob: -7.146799564361572
    10. ''' → logprob: -7.521799564361572

Token 1758: ' rémun' (ID: 146660)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8319442868232727
    2. ' ' → logprob: -2.081944227218628
    3. 'n' → logprob: -2.331944227218628
    4. ')' → logprob: -2.831944227218628
    5. '   ' → logprob: -3.331944227218628
    6. '(' → logprob: -3.331944227218628
    7. 's' → logprob: -3.456944227218628
    8. ':' → logprob: -3.706944227218628
    9. '#' → logprob: -4.331944465637207
    10. 'def' → logprob: -4.456944465637207

Token 1759: 'ération' (ID: 24977)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.1455347090959549
    2. ')' → logprob: -3.0205347537994385
    3. '=' → logprob: -3.7705347537994385
    4. '   ' → logprob: -4.395534515380859
    5. 'def' → logprob: -4.645534515380859
    6. ' =' → logprob: -4.770534515380859
    7. '\n' → logprob: -5.645534515380859
    8. ')
' → logprob: -5.770534515380859
    9. 'n' → logprob: -6.145534515380859
    10. 's' → logprob: -6.270534515380859

Token 1760: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1651296615600586
    2. '   ' → logprob: -1.2901296615600586
    3. ' =' → logprob: -1.6651296615600586
    4. 'def' → logprob: -2.6651296615600586
    5. '```' → logprob: -3.5401296615600586
    6. ')' → logprob: -3.6651296615600586
    7. '_' → logprob: -3.9151296615600586
    8. ':' → logprob: -4.040129661560059
    9. ' ' → logprob: -4.290129661560059
    10. '
' → logprob: -4.665129661560059

Token 1761: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8920257687568665
    2. '(n' → logprob: -1.2670257091522217
    3. ')' → logprob: -2.6420257091522217
    4. ' =' → logprob: -3.2670257091522217
    5. '=' → logprob: -3.3920257091522217
    6. '(' → logprob: -3.3920257091522217
    7. ' *' → logprob: -3.6420257091522217
    8. ' (' → logprob: -3.7670257091522217
    9. '*' → logprob: -4.392025947570801
    10. '    ' → logprob: -4.642025947570801

Token 1762: ' (#' (ID: 66375)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5939902663230896
    2. '(n' → logprob: -1.9689903259277344
    3. ' (' → logprob: -2.7189903259277344
    4. '(' → logprob: -2.8439903259277344
    5. ')' → logprob: -3.0939903259277344
    6. ' *' → logprob: -3.7189903259277344
    7. ' ' → logprob: -3.9689903259277344
    8. '=' → logprob: -4.343990325927734
    9. ' =' → logprob: -4.468990325927734
    10. '*' → logprob: -4.718990325927734

Token 1763: 'segments' (ID: 110314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5551074147224426
    2. ')' → logprob: -1.3051073551177979
    3. 'segments' → logprob: -2.805107355117798
    4. '_segments' → logprob: -4.180107593536377
    5. '(n' → logprob: -4.305107593536377
    6. '(' → logprob: -4.430107593536377
    7. ' segments' → logprob: -4.680107593536377
    8. ' *' → logprob: -5.180107593536377
    9. '*' → logprob: -5.305107593536377
    10. '   ' → logprob: -5.430107593536377

Token 1764: ')' (ID: 8)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9574809670448303
    2. ')' → logprob: -1.3324809074401855
    3. ' =' → logprob: -1.4574809074401855
    4. '_' → logprob: -3.2074809074401855
    5. ' *' → logprob: -3.7074809074401855
    6. '*' → logprob: -3.8324809074401855
    7. 's' → logprob: -4.8324809074401855
    8. '```' → logprob: -4.9574809074401855
    9. '   ' → logprob: -5.8324809074401855
    10. '+' → logprob: -6.5824809074401855

Token 1765: ' x' (ID: 1215)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0314254760742188
    2. ' =' → logprob: -1.6564254760742188
    3. ' *' → logprob: -2.1564254760742188
    4. ')' → logprob: -2.1564254760742188
    5. '_' → logprob: -2.5314254760742188
    6. '   ' → logprob: -3.2814254760742188
    7. '*' → logprob: -3.5314254760742188
    8. '```' → logprob: -3.5314254760742188
    9. '#' → logprob: -4.781425476074219
    10. ',' → logprob: -5.656425476074219

Token 1766: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6113946437835693
    2. '(' → logprob: -1.3613946437835693
    3. '(sum' → logprob: -2.2363946437835693
    4. '(S' → logprob: -3.4863946437835693
    5. '(s' → logprob: -3.7363946437835693
    6. 'sum' → logprob: -4.486394882202148
    7. '(n' → logprob: -4.486394882202148
    8. ' sum' → logprob: -4.986394882202148
    9. '(len' → logprob: -6.236394882202148
    10. '(total' → logprob: -6.361394882202148

Token 1767: 's' (ID: 82)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.036613941192627
    2. '(sum' → logprob: -1.286613941192627
    3. '(s' → logprob: -2.161613941192627
    4. ' (' → logprob: -2.286613941192627
    5. ' sum' → logprob: -3.411613941192627
    6. ' somme' → logprob: -3.661613941192627
    7. 's' → logprob: -3.786613941192627
    8. '(S' → logprob: -4.036613941192627
    9. 'total' → logprob: -4.286613941192627
    10. '(' → logprob: -4.786613941192627

Token 1768: 'omme' (ID: 30420)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.28287073969841003
    2. ')' → logprob: -3.0328707695007324
    3. 'ég' → logprob: -3.4078707695007324
    4. '=' → logprob: -3.4078707695007324
    5. '```' → logprob: -3.9078707695007324
    6. 'segments' → logprob: -4.032870769500732
    7. 'egment' → logprob: -4.157870769500732
    8. ']' → logprob: -4.657870769500732
    9. ')
' → logprob: -5.032870769500732
    10. 'gments' → logprob: -5.157870769500732

Token 1769: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.462099552154541
    2. ')' → logprob: -2.212099552154541
    3. '   ' → logprob: -2.462099552154541
    4. '```' → logprob: -3.087099552154541
    5. ' des' → logprob: -3.712099552154541
    6. '_of' → logprob: -4.087099552154541
    7. 'des' → logprob: -4.087099552154541
    8. ' _' → logprob: -4.587099552154541
    9. ' de' → logprob: -4.712099552154541
    10. '_des' → logprob: -5.212099552154541

Token 1770: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6327377557754517
    2. 'segments' → logprob: -1.2577377557754517
    3. ' segments' → logprob: -3.007737636566162
    4. '   ' → logprob: -3.257737636566162
    5. ' la' → logprob: -4.007737636566162
    6. 'length' → logprob: -4.757737636566162
    7. ' ' → logprob: -4.882737636566162
    8. 'la' → logprob: -5.007737636566162
    9. '_segments' → logprob: -5.257737636566162
    10. 'long' → logprob: -5.382737636566162

Token 1771: ' longueur' (ID: 104613)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3998901844024658
    2. 'segments' → logprob: -2.024890184402466
    3. '_segments' → logprob: -2.149890184402466
    4. ')' → logprob: -2.274890184402466
    5. ' _' → logprob: -2.274890184402466
    6. '_t' → logprob: -2.524890184402466
    7. '_long' → logprob: -3.399890184402466
    8. ' segments' → logprob: -3.524890184402466
    9. 'long' → logprob: -3.649890184402466
    10. '_lengths' → logprob: -3.649890184402466

Token 1772: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.132601261138916
    2. '   ' → logprob: -1.132601261138916
    3. ' des' → logprob: -1.882601261138916
    4. ')' → logprob: -2.632601261138916
    5. 'des' → logprob: -3.632601261138916
    6. '(s' → logprob: -3.757601261138916
    7. 'es' → logprob: -4.132601261138916
    8. ' )' → logprob: -4.757601261138916
    9. '_total' → logprob: -5.382601261138916
    10. '```' → logprob: -5.507601261138916

Token 1773: ' tous' (ID: 10688)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7226502299308777
    2. 'segments' → logprob: -1.7226502895355225
    3. 's' → logprob: -2.0976502895355225
    4. ' segments' → logprob: -2.9726502895355225
    5. 't' → logprob: -3.3476502895355225
    6. ' ' → logprob: -3.4726502895355225
    7. ' la' → logprob: -4.222650051116943
    8. ' )' → logprob: -4.472650051116943
    9. '   ' → logprob: -4.972650051116943
    10. 'tout' → logprob: -5.222650051116943

Token 1774: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9412901997566223
    2. ' des' → logprob: -1.1912901401519775
    3. 'des' → logprob: -2.1912901401519775
    4. 'segments' → logprob: -2.3162901401519775
    5. ')' → logprob: -3.6912901401519775
    6. ' segments' → logprob: -4.816290378570557
    7. '\' → logprob: -4.941290378570557
    8. '_segments' → logprob: -5.066290378570557
    9. '_' → logprob: -5.191290378570557
    10. ' ' → logprob: -5.316290378570557

Token 1775: ' tuy' (ID: 45164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7814656496047974
    2. 'segments' → logprob: -0.9064656496047974
    3. '\t' → logprob: -3.531465530395508
    4. ' segments' → logprob: -3.656465530395508
    5. 'pipes' → logprob: -3.906465530395508
    6. 'p' → logprob: -4.281465530395508
    7. '\' → logprob: -4.906465530395508
    8. ' tuy' → logprob: -5.031465530395508
    9. ')' → logprob: -5.281465530395508
    10. '```' → logprob: -5.906465530395508

Token 1776: 'aux' (ID: 5454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.35814714431762695
    2. 'b' → logprob: -2.358147144317627
    3. '```' → logprob: -2.983147144317627
    4. '   ' → logprob: -3.358147144317627
    5. 'pipes' → logprob: -3.983147144317627
    6. 'es' → logprob: -3.983147144317627
    7. 'bles' → logprob: -4.108147144317627
    8. 'bes' → logprob: -4.233147144317627
    9. '管' → logprob: -4.483147144317627
    10. '``' → logprob: -4.983147144317627

Token 1777: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31926101446151733
    2. 's' → logprob: -2.569261074066162
    3. ' +' → logprob: -3.069261074066162
    4. '+' → logprob: -3.194261074066162
    5. ' )' → logprob: -3.569261074066162
    6. ' des' → logprob: -3.944261074066162
    7. '   ' → logprob: -4.444261074066162
    8. ' et' → logprob: -4.694261074066162
    9. '_' → logprob: -5.069261074066162
    10. '）' → logprob: -5.194261074066162

Token 1778: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.554176926612854
    2. ' des' → logprob: -1.929176926612854
    3. ' joints' → logprob: -2.3041768074035645
    4. 'des' → logprob: -2.5541768074035645
    5. '   ' → logprob: -4.0541768074035645
    6. ' used' → logprob: -4.4291768074035645
    7. ' j' → logprob: -4.5541768074035645
    8. '```' → logprob: -4.6791768074035645
    9. '#' → logprob: -5.1791768074035645
    10. 'les' → logprob: -5.6791768074035645

Token 1779: ' utilisés' (ID: 94258)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1397017240524292
    2. '_used' → logprob: -3.1397018432617188
    3. ' utilisés' → logprob: -3.7647018432617188
    4. '_util' → logprob: -4.639701843261719
    5. ']' → logprob: -5.139701843261719
    6. '   ' → logprob: -5.264701843261719
    7. ' )' → logprob: -5.389701843261719
    8. 's' → logprob: -5.639701843261719
    9. '```' → logprob: -5.639701843261719
    10. ')
' → logprob: -5.764701843261719

Token 1780: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043340910226106644
    2. '   ' → logprob: -4.168340682983398
    3. ' +' → logprob: -5.168340682983398
    4. ')
' → logprob: -5.418340682983398
    5. ' )' → logprob: -5.668340682983398
    6. 's' → logprob: -5.793340682983398
    7. '```' → logprob: -6.043340682983398
    8. '）' → logprob: -7.043340682983398
    9. '+' → logprob: -7.293340682983398
    10. '.' → logprob: -7.418340682983398

Token 1781: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036950089037418365
    2. 'def' → logprob: -4.41195011138916
    3. ')' → logprob: -4.91195011138916
    4. 'import' → logprob: -5.78695011138916
    5. '(n' → logprob: -5.78695011138916
    6. 'n' → logprob: -6.41195011138916
    7. ':' → logprob: -6.41195011138916
    8. '(' → logprob: -7.28695011138916
    9. '```' → logprob: -7.28695011138916
    10. '(p' → logprob: -7.53695011138916

Token 1782: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029091402888298035
    2. 'n' → logprob: -4.7790913581848145
    3. 'def' → logprob: -5.0290913581848145
    4. ':' → logprob: -5.4040913581848145
    5. ')' → logprob: -5.9040913581848145
    6. '(n' → logprob: -6.5290913581848145
    7. ':
' → logprob: -7.5290913581848145
    8. 'j' → logprob: -7.9040913581848145
    9. 'p' → logprob: -8.029091835021973
    10. '    
' → logprob: -8.029091835021973

Token 1783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3370198905467987
    2. 'n' → logprob: -1.587019920349121
    3. 'def' → logprob: -2.587019920349121
    4. 'import' → logprob: -5.837019920349121
    5. '```' → logprob: -6.337019920349121
    6. '(n' → logprob: -7.462019920349121
    7. '    
' → logprob: -8.212019920349121
    8. '\' → logprob: -8.837019920349121
    9. ' n' → logprob: -9.462019920349121
    10. '
' → logprob: -9.462019920349121

Token 1784: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006652610842138529
    2. 'n' → logprob: -5.25665283203125
    3. 'def' → logprob: -6.75665283203125
    4. '```' → logprob: -9.63165283203125
    5. 'import' → logprob: -10.25665283203125
    6. '(n' → logprob: -10.38165283203125
    7. '    
' → logprob: -10.50665283203125
    8. '	n' → logprob: -11.13165283203125
    9. '       ' → logprob: -11.25665283203125
    10. '\' → logprob: -11.50665283203125

Token 1785: ' Comme' (ID: 53252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3325445055961609
    2. 'n' → logprob: -1.3325445652008057
    3. 'def' → logprob: -4.957544326782227
    4. 'pass' → logprob: -5.832544326782227
    5. 'j' → logprob: -5.957544326782227
    6. '    
' → logprob: -6.707544326782227
    7. '```' → logprob: -6.832544326782227
    8. 'p' → logprob: -7.207544326782227
    9. '(n' → logprob: -7.582544326782227
    10. 'length' → logprob: -7.707544326782227

Token 1786: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10126445442438126
    2. '   ' → logprob: -2.726264476776123
    3. ' n' → logprob: -4.101264476776123
    4. '(n' → logprob: -5.601264476776123
    5. 'def' → logprob: -6.101264476776123
    6. 'len' → logprob: -6.726264476776123
    7. ':' → logprob: -7.226264476776123
    8. ')' → logprob: -7.476264476776123
    9. '```' → logprob: -7.476264476776123
    10. ' ' → logprob: -7.601264476776123

Token 1787: ' somme' (ID: 64484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7265287041664124
    2. '(n' → logprob: -1.3515286445617676
    3. 'def' → logprob: -2.4765286445617676
    4. '#' → logprob: -3.1015286445617676
    5. 'total' → logprob: -3.6015286445617676
    6. 'sum' → logprob: -4.101528644561768
    7. 'len' → logprob: -4.226528644561768
    8. 't' → logprob: -4.476528644561768
    9. 's' → logprob: -4.851528644561768
    10. 'j' → logprob: -4.851528644561768

Token 1788: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7857007384300232
    2. '=' → logprob: -2.160700798034668
    3. 's' → logprob: -2.535700798034668
    4. '_j' → logprob: -2.660700798034668
    5. 'of' → logprob: -2.910700798034668
    6. 'def' → logprob: -3.035700798034668
    7. '(' → logprob: -3.535700798034668
    8. ' =' → logprob: -3.785700798034668
    9. '_of' → logprob: -3.785700798034668
    10. '_p' → logprob: -4.410700798034668

Token 1789: ' tuy' (ID: 45164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2970986366271973
    2. 'n' → logprob: -1.5470986366271973
    3. 'j' → logprob: -1.9220986366271973
    4. 'p' → logprob: -2.9220986366271973
    5. '_j' → logprob: -2.9220986366271973
    6. '_p' → logprob: -3.0470986366271973
    7. '_' → logprob: -3.0470986366271973
    8. 'pipes' → logprob: -3.4220986366271973
    9. '_t' → logprob: -3.5470986366271973
    10. ')' → logprob: -3.9220986366271973

Token 1790: 'aux' (ID: 5454)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4919790029525757
    2. '```' → logprob: -2.6169791221618652
    3. '   ' → logprob: -3.3669791221618652
    4. '々' → logprob: -3.7419791221618652
    5. '
' → logprob: -3.8669791221618652
    6. '#' → logprob: -3.9919791221618652
    7. 'def' → logprob: -3.9919791221618652
    8. '管' → logprob: -4.241979122161865
    9. 'の' → logprob: -4.241979122161865
    10. 'k' → logprob: -4.741979122161865

Token 1791: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4517601728439331
    2. ' =' → logprob: -2.4517602920532227
    3. '_' → logprob: -2.7017602920532227
    4. '#' → logprob: -2.9517602920532227
    5. 's' → logprob: -3.7017602920532227
    6. '+' → logprob: -3.9517602920532227
    7. ')' → logprob: -4.451760292053223
    8. '```' → logprob: -4.451760292053223
    9. 'des' → logprob: -4.576760292053223
    10. ':' → logprob: -4.701760292053223

Token 1792: ' constante' (ID: 49652)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.7226607203483582
    2. 'tou' → logprob: -0.7226607203483582
    3. 'fix' → logprob: -3.972660779953003
    4. 'tot' → logprob: -6.222660541534424
    5. 'fixed' → logprob: -6.722660541534424
    6. 't' → logprob: -6.847660541534424
    7. ' constante' → logprob: -6.847660541534424
    8. 'always' → logprob: -6.972660541534424
    9. ' toujours' → logprob: -6.972660541534424
    10. 'tout' → logprob: -7.222660541534424

Token 1793: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8295891284942627
    2. ',' → logprob: -1.3295891284942627
    3. ':' → logprob: -2.3295891284942627
    4. '+' → logprob: -2.9545891284942627
    5. '(p' → logprob: -3.2045891284942627
    6. ' +' → logprob: -3.7045891284942627
    7. '#' → logprob: -3.7045891284942627
    8. '```' → logprob: -4.454588890075684
    9. '(n' → logprob: -5.079588890075684
    10. ')' → logprob: -5.204588890075684

Token 1794: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07134069502353668
    2. '#' → logprob: -2.696340799331665
    3. ' #' → logprob: -8.196340560913086
    4. 'n' → logprob: -8.196340560913086
    5. ' ' → logprob: -8.946340560913086
    6. '    
' → logprob: -9.196340560913086
    7. 'j' → logprob: -9.696340560913086
    8. '    ' → logprob: -9.946340560913086
    9. '  ' → logprob: -10.071340560913086
    10. '       ' → logprob: -10.196340560913086

Token 1795: ' problème' (ID: 35630)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.04041588306427
    2. '_' → logprob: -1.54041588306427
    3. ')' → logprob: -2.9154157638549805
    4. 'n' → logprob: -3.1654157638549805
    5. '+' → logprob: -3.2904157638549805
    6. '(' → logprob: -3.2904157638549805
    7. 's' → logprob: -3.4154157638549805
    8. '=' → logprob: -3.5404157638549805
    9. ' ' → logprob: -3.7904157638549805
    10. ' =' → logprob: -3.7904157638549805

Token 1796: ' revient' (ID: 95900)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5844699740409851
    2. '   ' → logprob: -2.20947003364563
    3. ' =' → logprob: -2.33447003364563
    4. '(n' → logprob: -2.70947003364563
    5. 'n' → logprob: -3.08447003364563
    6. 's' → logprob: -3.58447003364563
    7. ':' → logprob: -3.83447003364563
    8. '[n' → logprob: -4.709469795227051
    9. '_' → logprob: -5.084469795227051
    10. 'def' → logprob: -5.334469795227051

Token 1797: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.17925778031349182
    2. ' à' → logprob: -2.429257869720459
    3. '   ' → logprob: -3.054257869720459
    4. '```' → logprob: -4.554257869720459
    5. '=' → logprob: -5.054257869720459
    6. '#' → logprob: -5.054257869720459
    7. 'to' → logprob: -6.554257869720459
    8. ''à' → logprob: -6.679257869720459
    9. '    ' → logprob: -7.179257869720459
    10. ' =' → logprob: -7.679257869720459

Token 1798: ':
' (ID: 734)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2099001556634903
    2. 'cho' → logprob: -2.709900140762329
    3. 'maximize' → logprob: -3.334900140762329
    4. 'calcul' → logprob: -3.959900140762329
    5. 'chercher' → logprob: -4.584900379180908
    6. 'tr' → logprob: -4.709900379180908
    7. 'optim' → logprob: -4.834900379180908
    8. '(n' → logprob: -5.209900379180908
    9. 'n' → logprob: -5.334900379180908
    10. '#' → logprob: -5.334900379180908

Token 1799: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03365250304341316
    2. 'n' → logprob: -4.283652305603027
    3. '#' → logprob: -5.533652305603027
    4. 'j' → logprob: -5.783652305603027
    5. '(n' → logprob: -6.158652305603027
    6. 'pass' → logprob: -6.158652305603027
    7. '```' → logprob: -6.783652305603027
    8. '    ' → logprob: -7.283652305603027
    9. '"' → logprob: -7.283652305603027
    10. 'def' → logprob: -7.658652305603027

Token 1800: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04876915365457535
    2. 'n' → logprob: -3.673769235610962
    3. '#' (adapté à ' #') → logprob: -4.923768997192383
    4. 'pass' → logprob: -5.173768997192383
    5. 'def' → logprob: -5.673768997192383
    6. '(n' → logprob: -6.798768997192383
    7. '    ' → logprob: -6.923768997192383
    8. '```' → logprob: -7.173768997192383
    9. 'p' → logprob: -7.548768997192383
    10. 'return' → logprob: -7.673768997192383

Token 1801: ' trouver' (ID: 23195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28234246373176575
    2. 'n' → logprob: -1.7823424339294434
    3. '#' → logprob: -3.7823424339294434
    4. 'pass' → logprob: -4.032342433929443
    5. 'def' → logprob: -4.532342433929443
    6. 'S' → logprob: -5.157342433929443
    7. 'total' → logprob: -5.282342433929443
    8. '```' → logprob: -5.407342433929443
    9. 'return' → logprob: -5.782342433929443
    10. 'p' → logprob: -6.532342433929443

Token 1802: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4824215173721313
    2. 'la' → logprob: -1.7324215173721313
    3. ' la' → logprob: -1.7324215173721313
    4. 'n' → logprob: -2.107421398162842
    5. 'max' → logprob: -2.482421398162842
    6. 'le' → logprob: -2.982421398162842
    7. 'un' → logprob: -3.482421398162842
    8. ' ' → logprob: -3.607421398162842
    9. '_' → logprob: -4.357421398162842
    10. 'une' → logprob: -4.482421398162842

Token 1803: ' partition' (ID: 31512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4759310185909271
    2. 'max' → logprob: -2.22593092918396
    3. 'def' → logprob: -2.97593092918396
    4. 'subset' → logprob: -3.35093092918396
    5. 'segment' → logprob: -4.225931167602539
    6. '(
' → logprob: -4.225931167602539
    7. 'partition' → logprob: -4.350931167602539
    8. '(n' → logprob: -4.475931167602539
    9. 'joint' → logprob: -4.475931167602539
    10. '(' → logprob: -4.475931167602539

Token 1804: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35778436064720154
    2. '   ' → logprob: -1.357784390449524
    3. '[' → logprob: -4.857784271240234
    4. ' de' → logprob: -5.107784271240234
    5. ' of' → logprob: -5.482784271240234
    6. ')' → logprob: -5.732784271240234
    7. 'de' → logprob: -5.857784271240234
    8. '```' → logprob: -6.107784271240234
    9. ' _' → logprob: -6.607784271240234
    10. '(n' → logprob: -6.607784271240234

Token 1805: ' tuy' (ID: 45164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6993899345397949
    2. 'j' → logprob: -2.074389934539795
    3. ' tuy' → logprob: -2.074389934539795
    4. 'pipes' → logprob: -2.074389934539795
    5. 'segments' → logprob: -3.449389934539795
    6. 'p' → logprob: -3.824389934539795
    7. 'n' → logprob: -3.824389934539795
    8. ' pipes' → logprob: -4.199389934539795
    9. ' segments' → logprob: -4.199389934539795
    10. ' joints' → logprob: -5.324389934539795

Token 1806: 'aux' (ID: 5454)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.1738996505737305
    2. 'p' → logprob: -1.9238996505737305
    3. 'pipes' → logprob: -2.1738996505737305
    4. 'tes' → logprob: -2.2988996505737305
    5. 'n' → logprob: -2.7988996505737305
    6. '   ' → logprob: -2.9238996505737305
    7. '```' → logprob: -3.2988996505737305
    8. 'pes' → logprob: -4.2988996505737305
    9. '#' → logprob: -4.4238996505737305
    10. 'x' → logprob: -4.5488996505737305

Token 1807: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.118261456489563
    2. '_' → logprob: -1.618261456489563
    3. '```' → logprob: -2.2432613372802734
    4. 'def' → logprob: -2.4932613372802734
    5. '[n' → logprob: -2.7432613372802734
    6. '[' → logprob: -3.1182613372802734
    7. '(n' → logprob: -3.6182613372802734
    8. ' =' → logprob: -3.7432613372802734
    9. ',' → logprob: -3.7432613372802734
    10. '`' → logprob: -4.368261337280273

Token 1808: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.10537441074848175
    2. 's' → logprob: -2.605374336242676
    3. 'des' → logprob: -4.980374336242676
    4. 'sub' → logprob: -5.605374336242676
    5. 'k' → logprob: -6.105374336242676
    6. '1' → logprob: -6.105374336242676
    7. 'segment' → logprob: -6.105374336242676
    8. 'plus' → logprob: -6.480374336242676
    9. '```' → logprob: -6.605374336242676
    10. ' segments' → logprob: -6.980374336242676

Token 1809: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06940606981515884
    2. ':' → logprob: -3.944406032562256
    3. '(n' → logprob: -4.194406032562256
    4. 'def' → logprob: -5.069406032562256
    5. '```' → logprob: -5.069406032562256
    6. '(' → logprob: -5.569406032562256
    7. '[' → logprob: -6.194406032562256
    8. '_' → logprob: -6.319406032562256
    9. ')' → logprob: -6.694406032562256
    10. '[n' → logprob: -6.694406032562256

Token 1810: 'cont' (ID: 1377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4160517156124115
    2. 'en' → logprob: -1.4160517454147339
    3. '```' → logprob: -3.0410516262054443
    4. 'def' → logprob: -5.041051864624023
    5. ' en' → logprob: -5.166051864624023
    6. '#' → logprob: -5.291051864624023
    7. 'de' → logprob: -5.291051864624023
    8. 'cont' → logprob: -5.541051864624023
    9. ',' → logprob: -5.541051864624023
    10. ' (' → logprob: -6.166051864624023

Token 1811: 'igus' (ID: 79914)
  Prédit: 'igu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igu' → logprob: -0.6727038621902466
    2. 'iguous' → logprob: -0.7977038621902466
    3. 'igus' → logprob: -3.672703742980957
    4. 'ig' → logprob: -4.922703742980957
    5. 'in' → logprob: -5.547703742980957
    6. '   ' → logprob: -7.047703742980957
    7. 'inu' → logprob: -7.047703742980957
    8. 'inue' → logprob: -8.297703742980957
    9. 'u' → logprob: -9.047703742980957
    10. 'igue' → logprob: -9.172703742980957

Token 1812: '*,' (ID: 24077)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7269847989082336
    2. '   ' → logprob: -1.4769847393035889
    3. '```' → logprob: -2.476984739303589
    4. '(n' → logprob: -2.976984739303589
    5. ':' → logprob: -3.226984739303589
    6. 'def' → logprob: -4.226984977722168
    7. '[' → logprob: -4.226984977722168
    8. ')' → logprob: -4.226984977722168
    9. '(' → logprob: -4.476984977722168
    10. ',' → logprob: -4.601984977722168

Token 1813: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01949142850935459
    2. 'n' → logprob: -5.269491195678711
    3. ')' → logprob: -6.019491195678711
    4. '"' → logprob: -6.519491195678711
    5. ' n' → logprob: -6.519491195678711
    6. '    ' → logprob: -6.644491195678711
    7. '```' → logprob: -6.769491195678711
    8. '       ' → logprob: -7.269491195678711
    9. '[' → logprob: -7.394491195678711
    10. '#' → logprob: -7.769491195678711

Token 1814: '’est' (ID: 6838)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38638919591903687
    2. '#' → logprob: -2.7613892555236816
    3. 'es' → logprob: -3.1363892555236816
    4. 'u' → logprob: -3.3863892555236816
    5. 'def' → logprob: -3.7613892555236816
    6. ''' → logprob: -3.7613892555236816
    7. 'ont' → logprob: -3.7613892555236816
    8. '```' → logprob: -4.011389255523682
    9. 'e' → logprob: -4.386389255523682
    10. '_' → logprob: -4.886389255523682

Token 1815: '-à' (ID: 56297)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9002430438995361
    2. 'à' → logprob: -1.1502430438995361
    3. 'possible' → logprob: -2.400243043899536
    4. '   ' → logprob: -2.900243043899536
    5. 'une' → logprob: -3.525243043899536
    6. '-à' → logprob: -3.900243043899536
    7. 'exact' → logprob: -3.900243043899536
    8. '#' → logprob: -4.150242805480957
    9. 'au' → logprob: -4.650242805480957
    10. '``' → logprob: -6.025242805480957

Token 1816: '-dire' (ID: 76064)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5676146149635315
    2. ')' → logprob: -1.6926145553588867
    3. '(n' → logprob: -2.3176145553588867
    4. 'def' → logprob: -3.4426145553588867
    5. ''' → logprob: -3.9426145553588867
    6. '```' → logprob: -3.9426145553588867
    7. '`' → logprob: -4.692614555358887
    8. ' ' → logprob: -5.067614555358887
    9. '(' → logprob: -5.567614555358887
    10. 's' → logprob: -5.567614555358887

Token 1817: ' choisir' (ID: 47004)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3856958746910095
    2. 'n' → logprob: -2.7606959342956543
    3. '(n' → logprob: -2.8856959342956543
    4. '[]' → logprob: -3.2606959342956543
    5. 'def' → logprob: -3.3856959342956543
    6. '```' → logprob: -3.8856959342956543
    7. '...' → logprob: -4.260695934295654
    8. 'une' → logprob: -4.385695934295654
    9. ')' → logprob: -4.760695934295654
    10. '[' → logprob: -5.010695934295654

Token 1818: ' où' (ID: 15113)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.527178168296814
    2. ' ' → logprob: -1.652178168296814
    3. 'une' → logprob: -1.777178168296814
    4. '   ' → logprob: -2.9021782875061035
    5. 'des' → logprob: -3.0271782875061035
    6. 'où' → logprob: -3.2771782875061035
    7. 'un' → logprob: -3.5271782875061035
    8. '\n' → logprob: -3.6521782875061035
    9. 'à' → logprob: -3.6521782875061035
    10. 'le' → logprob: -3.9021782875061035

Token 1819: ' 
' (ID: 793)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.7171391844749451
    2. 'c' → logprob: -1.3421392440795898
    3. ' couper' → logprob: -2.09213924407959
    4. '   ' → logprob: -3.21713924407959
    5. '#' → logprob: -3.59213924407959
    6. 'faire' → logprob: -4.59213924407959
    7. ' ' → logprob: -4.84213924407959
    8. ' ' → logprob: -4.96713924407959
    9. '```' → logprob: -5.46713924407959
    10. 'break' → logprob: -5.59213924407959

Token 1820: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2094998359680176
    2. 'cou' → logprob: -1.7094998359680176
    3. ' couper' → logprob: -1.9594998359680176
    4. 'c' → logprob: -2.3344998359680176
    5. 's' → logprob: -3.2094998359680176
    6. '#' → logprob: -3.3344998359680176
    7. '```' → logprob: -3.7094998359680176
    8. ' ' → logprob: -4.084499835968018
    9. 'à' → logprob: -4.209499835968018
    10. 'faire' → logprob: -4.209499835968018

Token 1821: ' #' (ID: 1069)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.7181393504142761
    2. '   ' → logprob: -1.468139410018921
    3. '#' (adapté à ' #') → logprob: -2.718139410018921
    4. ' couper' → logprob: -2.718139410018921
    5. 'c' → logprob: -2.843139410018921
    6. 'faire' → logprob: -3.468139410018921
    7. '```' → logprob: -4.343139171600342
    8. 's' → logprob: -4.593139171600342
    9. 'mettre' → logprob: -5.593139171600342
    10. ' ' → logprob: -5.718139171600342

Token 1822: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.09031104296445847
    2. 'c' → logprob: -2.840311050415039
    3. ' couper' → logprob: -4.840311050415039
    4. 'faire' → logprob: -4.965311050415039
    5. 'cut' → logprob: -5.090311050415039
    6. '   ' → logprob: -6.340311050415039
    7. '#' → logprob: -6.840311050415039
    8. 'break' → logprob: -7.090311050415039
    9. 'mettre' → logprob: -7.090311050415039
    10. 'sup' → logprob: -7.465311050415039

Token 1823: ' entre' (ID: 3853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21184062957763672
    2. '```' → logprob: -2.4618406295776367
    3. '   ' → logprob: -2.7118406295776367
    4. '`' → logprob: -4.586840629577637
    5. ''' → logprob: -5.211840629577637
    6. '"' → logprob: -5.336840629577637
    7. '[' → logprob: -6.211840629577637
    8. ':' → logprob: -6.336840629577637
    9. ' ' → logprob: -6.586840629577637
    10. ',' → logprob: -6.836840629577637

Token 1824: ' des' (ID: 731)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.800042450428009
    2. 'p' → logprob: -1.0500423908233643
    3. 't' → logprob: -1.6750423908233643
    4. 'pipes' → logprob: -5.050042629241943
    5. 'eux' → logprob: -5.800042629241943
    6. '```' → logprob: -6.800042629241943
    7. 'pipe' → logprob: -7.550042629241943
    8. '   ' → logprob: -7.550042629241943
    9. ' les' → logprob: -8.050042152404785
    10. 'tu' → logprob: -8.175042152404785

Token 1825: ' tuy' (ID: 45164)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.11568356305360794
    2. 't' → logprob: -2.3656835556030273
    3. 'pipes' → logprob: -5.115683555603027
    4. ' tuy' → logprob: -5.240683555603027
    5. ' p' → logprob: -6.240683555603027
    6. '```' → logprob: -7.615683555603027
    7. ' ' → logprob: -8.115683555603027
    8. 'tu' → logprob: -8.115683555603027
    9. 'pipe' → logprob: -8.365683555603027
    10. ' pipes' → logprob: -8.615683555603027

Token 1826: 'aux' (ID: 5454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09358217567205429
    2. 'aux' → logprob: -2.7185821533203125
    3. '```' → logprob: -4.7185821533203125
    4. '#' → logprob: -4.7185821533203125
    5. '##' → logprob: -6.9685821533203125
    6. '``' → logprob: -7.0935821533203125
    7. 'b' → logprob: -7.4685821533203125
    8. 'es' → logprob: -7.5935821533203125
    9. 'pipes' → logprob: -7.7185821533203125
    10. 't' → logprob: -7.9685821533203125

Token 1827: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20005632936954498
    2. '[i' → logprob: -2.950056314468384
    3. '```' → logprob: -2.950056314468384
    4. ',' → logprob: -4.075056552886963
    5. '[n' → logprob: -4.325056552886963
    6. '[' → logprob: -4.325056552886963
    7. '#' → logprob: -4.700056552886963
    8. '`' → logprob: -5.200056552886963
    9. '[]' → logprob: -6.200056552886963
    10. '[
' → logprob: -6.325056552886963

Token 1828: ' maxim' (ID: 29045)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09007510542869568
    2. '#' → logprob: -3.0900750160217285
    3. '"' → logprob: -4.2150750160217285
    4. 'n' → logprob: -4.9650750160217285
    5. '```' → logprob: -6.0900750160217285
    6. 'p' → logprob: -6.2150750160217285
    7. 'i' → logprob: -6.2150750160217285
    8. ' #' → logprob: -6.3400750160217285
    9. '`' → logprob: -6.9650750160217285
    10. '"\' → logprob: -7.0900750160217285

Token 1829: 'isant' (ID: 56111)
  Prédit: 'ales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.4581405520439148
    2. 'ale' → logprob: -1.3331406116485596
    3. 'iser' → logprob: -3.0831406116485596
    4. 'aux' → logprob: -4.0831403732299805
    5. '```' → logprob: -4.2081403732299805
    6. 'um' → logprob: -4.4581403732299805
    7. 'al' → logprob: -4.9581403732299805
    8. '#' → logprob: -5.9581403732299805
    9. 'er' → logprob: -6.8331403732299805
    10. 'e' → logprob: -6.9581403732299805

Token 1830: ':
' (ID: 734)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5309091210365295
    2. '(n' → logprob: -2.0309090614318848
    3. '   ' → logprob: -2.4059090614318848
    4. 'la' → logprob: -3.0309090614318848
    5. ' le' → logprob: -3.5309090614318848
    6. 'le' → logprob: -3.5309090614318848
    7. ' (' → logprob: -3.6559090614318848
    8. ' n' → logprob: -4.905909061431885
    9. 'max' → logprob: -5.280909061431885
    10. 'l' → logprob: -5.405909061431885

Token 1831: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17312590777873993
    2. '(n' → logprob: -2.423125982284546
    3. '(' → logprob: -4.423125743865967
    4. 'n' → logprob: -4.423125743865967
    5. ' (' → logprob: -4.548125743865967
    6. '1' → logprob: -4.673125743865967
    7. ')' → logprob: -4.923125743865967
    8. '"' → logprob: -5.298125743865967
    9. ' n' → logprob: -5.548125743865967
    10. 'max' → logprob: -6.298125743865967

Token 1832: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2512284219264984
    2. '(n' → logprob: -2.0012283325195312
    3. ')' → logprob: -3.8762283325195312
    4. '(' → logprob: -4.251228332519531
    5. '"' → logprob: -4.501228332519531
    6. '1' → logprob: -4.501228332519531
    7. ' (' → logprob: -4.751228332519531
    8. 'n' → logprob: -5.126228332519531
    9. ' n' → logprob: -6.001228332519531
    10. 'max' → logprob: -6.001228332519531

Token 1833: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2640218734741211
    2. '(n' → logprob: -1.889021873474121
    3. ')' → logprob: -3.639021873474121
    4. 'n' → logprob: -3.889021873474121
    5. ''' → logprob: -4.889021873474121
    6. '"' → logprob: -5.139021873474121
    7. '(' → logprob: -5.639021873474121
    8. ' n' → logprob: -5.889021873474121
    9. ' (' → logprob: -6.014021873474121
    10. '    ' → logprob: -6.264021873474121

Token 1834: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5142982006072998
    2. '(n' → logprob: -1.0142982006072998
    3. ' (' → logprob: -5.139298439025879
    4. '(' → logprob: -5.389298439025879
    5. 'n' → logprob: -5.389298439025879
    6. '1' → logprob: -5.514298439025879
    7. '#' (adapté à ' #') → logprob: -5.639298439025879
    8. '"' → logprob: -6.139298439025879
    9. ')' → logprob: -6.139298439025879
    10. '    ' → logprob: -6.389298439025879

Token 1835: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7276183366775513
    2. '(n' → logprob: -0.8526183366775513
    3. '#' → logprob: -3.7276182174682617
    4. 'n' → logprob: -4.227618217468262
    5. '"' → logprob: -4.227618217468262
    6. '(' → logprob: -4.352618217468262
    7. ')' → logprob: -5.227618217468262
    8. ''' → logprob: -5.602618217468262
    9. ' (' → logprob: -5.602618217468262
    10. 'k' → logprob: -5.852618217468262

Token 1836: 'nombre' (ID: 28576)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.122541904449463
    2. 'nombre' → logprob: -1.122541904449463
    3. ')' → logprob: -1.747541904449463
    4. 'k' → logprob: -2.747541904449463
    5. 'segments' → logprob: -2.997541904449463
    6. '(n' → logprob: -4.122541904449463
    7. '1' → logprob: -4.497541904449463
    8. ' nombre' → logprob: -5.122541904449463
    9. '(' → logprob: -5.372541904449463
    10. '#' → logprob: -5.622541904449463

Token 1837: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.3813649117946625
    2. '_' → logprob: -1.6313649415969849
    3. '_des' → logprob: -2.8813648223876953
    4. '_of' → logprob: -3.0063648223876953
    5. '   ' → logprob: -5.131364822387695
    6. ' de' → logprob: -5.756364822387695
    7. '_d' → logprob: -5.881364822387695
    8. ')' → logprob: -6.131364822387695
    9. 'de' → logprob: -8.256364822387695
    10. ')_' → logprob: -8.381364822387695

Token 1838: ' segments' (ID: 33749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2905425429344177
    2. '_de' → logprob: -1.7905426025390625
    3. '_segments' → logprob: -2.9155426025390625
    4. ' de' → logprob: -3.9155426025390625
    5. '_des' → logprob: -5.6655426025390625
    6. ' _' → logprob: -5.6655426025390625
    7. 'segments' → logprob: -6.0405426025390625
    8. 'de' → logprob: -7.6655426025390625
    9. ' segments' → logprob: -8.415542602539062
    10. ' ' → logprob: -8.540542602539062

Token 1839: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03789021819829941
    2. ' =' → logprob: -3.9128901958465576
    3. ' +' → logprob: -5.037890434265137
    4. ' )' → logprob: -6.037890434265137
    5. '   ' → logprob: -6.662890434265137
    6. '+' → logprob: -6.662890434265137
    7. ' *' → logprob: -6.787890434265137
    8. '=' → logprob: -6.912890434265137
    9. ' -' → logprob: -6.912890434265137
    10. ' ' → logprob: -8.162890434265137

Token 1840: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02456541173160076
    2. '*' → logprob: -4.89956521987915
    3. ' =' → logprob: -5.02456521987915
    4. ')' → logprob: -5.27456521987915
    5. '=' → logprob: -7.27456521987915
    6. 'def' → logprob: -7.52456521987915
    7. '```' → logprob: -7.52456521987915
    8. '<|end|>' → logprob: -7.64956521987915
    9. ' ' → logprob: -7.77456521987915
    10. ' #' → logprob: -7.89956521987915

Token 1841: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2812317907810211
    2. '(S' → logprob: -2.4062318801879883
    3. '(sum' → logprob: -2.5312318801879883
    4. '(s' → logprob: -3.0312318801879883
    5. '(' → logprob: -3.7812318801879883
    6. '(total' → logprob: -6.781231880187988
    7. 'sum' → logprob: -7.031231880187988
    8. ' sum' → logprob: -7.656231880187988
    9. '(len' → logprob: -7.781231880187988
    10. ' ' → logprob: -8.156231880187988

Token 1842: 's' (ID: 82)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.18576180934906
    2. 'sum' → logprob: -1.43576180934906
    3. ' sum' → logprob: -1.81076180934906
    4. '(S' → logprob: -2.1857619285583496
    5. '(sum' → logprob: -2.4357619285583496
    6. '(s' → logprob: -3.3107619285583496
    7. '(' → logprob: -3.5607619285583496
    8. ' somme' → logprob: -4.31076192855835
    9. ' total' → logprob: -5.81076192855835
    10. 'total' → logprob: -6.06076192855835

Token 1843: 'omme' (ID: 30420)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.45414111018180847
    2. 'omme' → logprob: -2.079141139984131
    3. 'egment' → logprob: -2.704141139984131
    4. 'um' → logprob: -2.829141139984131
    5. '_' → logprob: -3.079141139984131
    6. '_segments' → logprob: -3.704141139984131
    7. '```' → logprob: -4.204141139984131
    8. 'é' → logprob: -5.454141139984131
    9. 'ég' → logprob: -5.579141139984131
    10. 'égr' → logprob: -6.329141139984131

Token 1844: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5555448532104492
    2. '_des' → logprob: -1.1805448532104492
    3. ' des' → logprob: -3.180544853210449
    4. 'des' → logprob: -3.680544853210449
    5. '   ' → logprob: -4.430544853210449
    6. '_de' → logprob: -4.680544853210449
    7. '```' → logprob: -4.930544853210449
    8. ')' → logprob: -5.055544853210449
    9. '_of' → logprob: -5.180544853210449
    10. ' de' → logprob: -5.555544853210449

Token 1845: ' tuy' (ID: 45164)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.2778049409389496
    2. 'cuts' → logprob: -2.6528048515319824
    3. 'j' → logprob: -3.2778048515319824
    4. 'p' → logprob: -3.5278048515319824
    5. '_j' → logprob: -3.6528048515319824
    6. '_segments' → logprob: -4.402804851531982
    7. ' segments' → logprob: -4.652804851531982
    8. 'pipes' → logprob: -4.652804851531982
    9. 't' → logprob: -4.777804851531982
    10. 'long' → logprob: -5.152804851531982

Token 1846: 'aux' (ID: 5454)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.180782675743103
    2. 'es' → logprob: -1.555782675743103
    3. 'pes' → logprob: -1.680782675743103
    4. '```' → logprob: -2.3057827949523926
    5. 'pipes' → logprob: -3.1807827949523926
    6. 'ples' → logprob: -3.6807827949523926
    7. 'ps' → logprob: -3.9307827949523926
    8. 'pas' → logprob: -4.305782794952393
    9. 'aux' → logprob: -4.555782794952393
    10. '##' → logprob: -4.680782794952393

Token 1847: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21910914778709412
    2. '```' → logprob: -3.094109058380127
    3. ' +' → logprob: -3.344109058380127
    4. '+' → logprob: -3.844109058380127
    5. '_util' → logprob: -4.094109058380127
    6. '_used' → logprob: -4.094109058380127
    7. '   ' → logprob: -4.219109058380127
    8. 'des' → logprob: -5.469109058380127
    9. '_rest' → logprob: -5.469109058380127
    10. '[' → logprob: -5.594109058380127

Token 1848: ' somme' (ID: 64484)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4540807604789734
    2. ' joints' → logprob: -1.8290808200836182
    3. 'sum' → logprob: -3.204080820083618
    4. ' des' → logprob: -3.204080820083618
    5. ' sum' → logprob: -3.329080820083618
    6. '```' → logprob: -3.704080820083618
    7. 'des' → logprob: -3.954080820083618
    8. 's' → logprob: -4.329080581665039
    9. ' used' → logprob: -5.204080581665039
    10. ' j' → logprob: -5.329080581665039

Token 1849: ' des' (ID: 731)
  Prédit: '_des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_des' → logprob: -0.6385334730148315
    2. 'des' → logprob: -1.2635334730148315
    3. '_j' → logprob: -2.138533592224121
    4. '_' → logprob: -4.013533592224121
    5. '```' → logprob: -4.138533592224121
    6. '_used' → logprob: -4.513533592224121
    7. '_of' → logprob: -4.638533592224121
    8. ' des' → logprob: -5.763533592224121
    9. '_util' → logprob: -6.138533592224121
    10. '_selected' → logprob: -6.263533592224121

Token 1850: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0178813636302948
    2. '_j' → logprob: -4.267881393432617
    3. ' joints' → logprob: -6.142881393432617
    4. ' j' → logprob: -7.642881393432617
    5. '```' → logprob: -8.017881393432617
    6. '   ' → logprob: -8.392881393432617
    7. 'joint' → logprob: -8.517881393432617
    8. 'joins' → logprob: -9.642881393432617
    9. '	j' → logprob: -10.017881393432617
    10. ' ' → logprob: -10.142881393432617

Token 1851: ' dans' (ID: 2671)
  Prédit: '_util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.3667793869972229
    2. '_used' → logprob: -1.7417793273925781
    3. ')' → logprob: -2.741779327392578
    4. 'util' → logprob: -3.366779327392578
    5. '   ' → logprob: -4.616779327392578
    6. ')
' → logprob: -5.116779327392578
    7. '_' → logprob: -5.491779327392578
    8. '```' → logprob: -6.241779327392578
    9. ' utilisés' → logprob: -6.366779327392578
    10. '[' → logprob: -6.741779327392578

Token 1852: ' les' (ID: 1341)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -1.321403980255127
    2. 'segments' → logprob: -1.696403980255127
    3. 'used' → logprob: -1.946403980255127
    4. ' segments' → logprob: -2.071403980255127
    5. ' utilisés' → logprob: -3.071403980255127
    6. 'les' → logprob: -3.071403980255127
    7. ' les' → logprob: -3.446403980255127
    8. ' ' → logprob: -3.571403980255127
    9. ' la' → logprob: -3.696403980255127
    10. 'la' → logprob: -4.196403980255127

Token 1853: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.05475419759750366
    2. ' segments' → logprob: -3.0547542572021484
    3. ' used' → logprob: -6.554754257202148
    4. '_segments' → logprob: -7.054754257202148
    5. 'used' → logprob: -7.304754257202148
    6. ' ' → logprob: -7.679754257202148
    7. 'segment' → logprob: -7.804754257202148
    8. '_' → logprob: -7.929754257202148
    9. '   ' → logprob: -8.179754257202148
    10. 'selected' → logprob: -8.804754257202148

Token 1854: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5033032298088074
    2. 'util' → logprob: -1.8783032894134521
    3. ')
' → logprob: -2.253303289413452
    4. ' utilisés' → logprob: -2.628303289413452
    5. '_used' → logprob: -4.253303050994873
    6. '   ' → logprob: -4.253303050994873
    7. '_util' → logprob: -4.378303050994873
    8. 'used' → logprob: -5.128303050994873
    9. ')\' → logprob: -6.253303050994873
    10. 'activ' → logprob: -6.378303050994873

Token 1855: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005158808082342148
    2. 'def' → logprob: -6.0051589012146
    3. 'n' → logprob: -7.1301589012146
    4. '
' → logprob: -7.7551589012146
    5. '```' → logprob: -8.005158424377441
    6. '    
' → logprob: -8.255158424377441
    7. '(n' → logprob: -8.380158424377441
    8. ')' → logprob: -9.630158424377441
    9. 'p' → logprob: -9.755158424377441
    10. 'import' → logprob: -9.755158424377441

Token 1856: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0044137402437627316
    2. 'n' → logprob: -5.754413604736328
    3. '
' → logprob: -7.629413604736328
    4. '    
' → logprob: -8.504413604736328
    5. '```' → logprob: -8.754413604736328
    6. 'def' → logprob: -9.004413604736328
    7. '(n' → logprob: -9.004413604736328
    8. '\' → logprob: -11.004413604736328
    9. 'import' → logprob: -11.129413604736328
    10. '\n' → logprob: -11.129413604736328

Token 1857: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02484441176056862
    2. 'n' → logprob: -3.8998444080352783
    3. 'def' → logprob: -6.024844646453857
    4. '```' → logprob: -7.274844646453857
    5. '
' → logprob: -8.5248441696167
    6. 'p' → logprob: -8.5248441696167
    7. '    
' → logprob: -8.6498441696167
    8. '(n' → logprob: -8.7748441696167
    9. 'j' → logprob: -8.8998441696167
    10. ':' → logprob: -10.1498441696167

Token 1858: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009246084839105606
    2. 'n' → logprob: -4.884245872497559
    3. '
' → logprob: -7.509245872497559
    4. '```' → logprob: -7.759245872497559
    5. 'j' → logprob: -8.259245872497559
    6. '    
' → logprob: -9.009245872497559
    7. 'p' → logprob: -9.509245872497559
    8. 'def' → logprob: -10.259245872497559
    9. '(n' → logprob: -10.384245872497559
    10. '#' (adapté à ' #') → logprob: -10.759245872497559

Token 1859: ' Où' (ID: 199045)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3660913109779358
    2. 'n' → logprob: -1.366091251373291
    3. 'def' → logprob: -3.116091251373291
    4. 'p' → logprob: -5.366091251373291
    5. '```' → logprob: -6.491091251373291
    6. '    
' → logprob: -8.24109172821045
    7. 'pipes' → logprob: -8.86609172821045
    8. 'j' → logprob: -8.86609172821045
    9. '
' → logprob: -9.86609172821045
    10. 'pipe' → logprob: -10.24109172821045

Token 1860: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3615952432155609
    2. '#' → logprob: -1.9865952730178833
    3. 'n' → logprob: -2.3615951538085938
    4. 'def' → logprob: -3.7365951538085938
    5. '(n' → logprob: -3.9865951538085938
    6. '```' → logprob: -4.736595153808594
    7. 'la' → logprob: -5.361595153808594
    8. '`' → logprob: -5.986595153808594
    9. 'j' → logprob: -5.986595153808594
    10. 'le' → logprob: -6.236595153808594

Token 1861: ' somme' (ID: 64484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09260758757591248
    2. 'def' → logprob: -2.8426074981689453
    3. '_' → logprob: -4.967607498168945
    4. '(n' → logprob: -5.092607498168945
    5. ')' → logprob: -5.967607498168945
    6. '   ' → logprob: -6.092607498168945
    7. 'j' → logprob: -6.092607498168945
    8. '#' → logprob: -6.217607498168945
    9. '```' → logprob: -7.092607498168945
    10. 's' → logprob: -7.217607498168945

Token 1862: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.7041182518005371
    2. '_des' → logprob: -1.579118251800537
    3. '=' → logprob: -2.454118251800537
    4. ' =' → logprob: -2.579118251800537
    5. '   ' → logprob: -3.704118251800537
    6. '_' → logprob: -4.079118251800537
    7. '#' → logprob: -4.079118251800537
    8. '_of' → logprob: -4.204118251800537
    9. '```' → logprob: -4.579118251800537
    10. '_j' → logprob: -4.579118251800537

Token 1863: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09386710077524185
    2. '#' → logprob: -3.593867063522339
    3. '_j' → logprob: -3.968867063522339
    4. 'segments' → logprob: -4.343867301940918
    5. ' joints' → logprob: -4.843867301940918
    6. 't' → logprob: -5.468867301940918
    7. 'joint' → logprob: -5.718867301940918
    8. '```' → logprob: -5.843867301940918
    9. '\' → logprob: -5.968867301940918
    10. 'long' → logprob: -6.718867301940918

Token 1864: ' dans' (ID: 2671)
  Prédit: '_util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.5428634285926819
    2. '_used' → logprob: -2.667863368988037
    3. '_in' → logprob: -2.792863368988037
    4. 'util' → logprob: -2.917863368988037
    5. '_rest' → logprob: -2.917863368988037
    6. '_' → logprob: -3.417863368988037
    7. '#' → logprob: -3.667863368988037
    8. 'est' → logprob: -3.667863368988037
    9. '_des' → logprob: -4.292863368988037
    10. ')' → logprob: -4.667863368988037

Token 1865: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.0036532911472022533
    2. 'segments' → logprob: -6.378653526306152
    3. ' les' → logprob: -7.003653526306152
    4. 'le' → logprob: -8.503653526306152
    5. '```' → logprob: -8.878653526306152
    6. '#' → logprob: -8.878653526306152
    7. 'ces' → logprob: -9.003653526306152
    8. 'la' → logprob: -9.003653526306152
    9. 'l' → logprob: -9.878653526306152
    10. 's' → logprob: -10.378653526306152

Token 1866: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.02487836964428425
    2. ' segments' → logprob: -3.8998782634735107
    3. 'segment' → logprob: -6.64987850189209
    4. '_segments' → logprob: -6.77487850189209
    5. '#' → logprob: -6.89987850189209
    6. '_' → logprob: -7.89987850189209
    7. 'j' → logprob: -9.27487850189209
    8. 'seg' → logprob: -9.89987850189209
    9. '   ' → logprob: -10.14987850189209
    10. ' ' → logprob: -10.39987850189209

Token 1867: ' =' (ID: 314)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.1831496953964233
    2. ')' → logprob: -1.4331496953964233
    3. '   ' → logprob: -2.058149814605713
    4. '```' → logprob: -2.183149814605713
    5. ' =' → logprob: -2.558149814605713
    6. '=' → logprob: -3.308149814605713
    7. '#' → logprob: -3.808149814605713
    8. 'est' → logprob: -4.433149814605713
    9. '_util' → logprob: -4.558149814605713
    10. 's' → logprob: -5.058149814605713

Token 1868: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5145294666290283
    2. ' sum' → logprob: -1.5145294666290283
    3. 'j' → logprob: -2.1395294666290283
    4. ' j' → logprob: -3.8895294666290283
    5. ' joints' → logprob: -4.139529228210449
    6. '0' → logprob: -4.264529228210449
    7. '   ' → logprob: -5.639529228210449
    8. 'joint' → logprob: -6.014529228210449
    9. ' ' → logprob: -6.514529228210449
    10. 'prefix' → logprob: -6.639529228210449

Token 1869: ' totale' (ID: 52898)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0131003856658936
    2. '_j' → logprob: -1.0131003856658936
    3. 'des' → logprob: -1.7631003856658936
    4. '_des' → logprob: -2.8881003856658936
    5. '[j' → logprob: -4.388100624084473
    6. '_used' → logprob: -4.888100624084473
    7. '(' → logprob: -5.638100624084473
    8. '(j' → logprob: -5.888100624084473
    9. '```' → logprob: -5.888100624084473
    10. 'j' → logprob: -6.513100624084473

Token 1870: ' des' (ID: 731)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.44980815052986145
    2. ' =' → logprob: -2.074808120727539
    3. 'des' → logprob: -2.824808120727539
    4. '   ' → logprob: -3.324808120727539
    5. '_des' → logprob: -3.324808120727539
    6. '_' → logprob: -4.074808120727539
    7. '_of' → logprob: -4.324808120727539
    8. ' des' → logprob: -4.449808120727539
    9. 'j' → logprob: -4.449808120727539
    10. '[j' → logprob: -4.699808120727539

Token 1871: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0634254440665245
    2. ' j' → logprob: -3.3134255409240723
    3. ' joints' → logprob: -3.9384255409240723
    4. 'joint' → logprob: -6.438425540924072
    5. '_j' → logprob: -7.063425540924072
    6. ' used' → logprob: -7.188425540924072
    7. 'used' → logprob: -8.063425064086914
    8. ' joint' → logprob: -8.063425064086914
    9. '```' → logprob: -8.063425064086914
    10. ' ' → logprob: -8.438425064086914

Token 1872: ' utilisés' (ID: 94258)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02931775338947773
    2. '(n' → logprob: -4.529317855834961
    3. 'n' → logprob: -5.154317855834961
    4. 'def' → logprob: -5.779317855834961
    5. '
' → logprob: -5.904317855834961
    6. ':' → logprob: -6.904317855834961
    7. '```' → logprob: -7.154317855834961
    8. 's' → logprob: -7.279317855834961
    9. '[n' → logprob: -7.654317855834961
    10. '(' → logprob: -8.029317855834961

Token 1873: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1219126284122467
    2. 'n' → logprob: -2.621912717819214
    3. '(n' → logprob: -3.996912717819214
    4. 'def' → logprob: -4.621912479400635
    5. '```' → logprob: -5.371912479400635
    6. ':' → logprob: -6.246912479400635
    7. '(' → logprob: -6.621912479400635
    8. ':
' → logprob: -7.121912479400635
    9. '\' → logprob: -7.121912479400635
    10. '()' → logprob: -7.621912479400635

Token 1874: ' joints' (ID: 47223)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05281950533390045
    2. ')' → logprob: -3.9278194904327393
    3. '"' → logprob: -4.552819728851318
    4. 'n' → logprob: -5.927819728851318
    5. 'def' → logprob: -6.052819728851318
    6. '.' → logprob: -6.177819728851318
    7. '#' → logprob: -6.427819728851318
    8. '\' → logprob: -6.802819728851318
    9. '(n' → logprob: -6.927819728851318
    10. '"\' → logprob: -6.927819728851318

Token 1875: ' situ' (ID: 4581)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3722772598266602
    2. '_used' → logprob: -1.3722772598266602
    3. '_' → logprob: -1.6222772598266602
    4. '_util' → logprob: -1.7472772598266602
    5. '=' → logprob: -3.24727725982666
    6. '[' → logprob: -3.49727725982666
    7. 's' → logprob: -4.12227725982666
    8. ',' → logprob: -5.37227725982666
    9. '```' → logprob: -5.87227725982666
    10. '_selected' → logprob: -5.99727725982666

Token 1876: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0023350934498012066
    2. 'ées' → logprob: -6.502335071563721
    3. 'es' → logprob: -7.752335071563721
    4. 'é' → logprob: -8.752335548400879
    5. '#' → logprob: -9.502335548400879
    6. '[' → logprob: -9.627335548400879
    7. '=' → logprob: -10.252335548400879
    8. '```' → logprob: -10.752335548400879
    9. ']' → logprob: -11.377335548400879
    10. 'ès' → logprob: -11.627335548400879

Token 1877: ' entre' (ID: 3853)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.42836686968803406
    2. 'entre' → logprob: -1.4283668994903564
    3. 'avant' → logprob: -2.8033668994903564
    4. ' entre' → logprob: -4.053366661071777
    5. '   ' → logprob: -4.428366661071777
    6. ' dans' → logprob: -5.678366661071777
    7. '```' → logprob: -6.053366661071777
    8. 'au' → logprob: -6.428366661071777
    9. 'à' → logprob: -6.553366661071777
    10. '=' → logprob: -6.553366661071777

Token 1878: ' tuy' (ID: 45164)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05795736610889435
    2. 'les' → logprob: -3.557957410812378
    3. 't' → logprob: -4.057957172393799
    4. 'pipes' → logprob: -5.307957172393799
    5. '   ' → logprob: -6.307957172393799
    6. 'des' → logprob: -7.432957172393799
    7. '```' → logprob: -7.682957172393799
    8. 'de' → logprob: -7.807957172393799
    9. 'j' → logprob: -7.807957172393799
    10. 'segments' → logprob: -7.932957172393799

Token 1879: 'aux' (ID: 5454)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.440844863653183
    2. 'es' → logprob: -2.315844774246216
    3. '[
' → logprob: -2.565844774246216
    4. ']' → logprob: -2.815844774246216
    5. '[]' → logprob: -3.440844774246216
    6. 'aux' → logprob: -4.065845012664795
    7. '```' → logprob: -4.065845012664795
    8. '   ' → logprob: -4.315845012664795
    9. '[n' → logprob: -4.690845012664795
    10. '#' → logprob: -4.815845012664795

Token 1880: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014581236056983471
    2. 'def' → logprob: -5.264581203460693
    3. 'n' → logprob: -5.639581203460693
    4. '(n' → logprob: -6.389581203460693
    5. '```' → logprob: -7.264581203460693
    6. ')' → logprob: -7.264581203460693
    7. '
' → logprob: -8.139581680297852
    8. ':' → logprob: -8.264581680297852
    9. 's' → logprob: -8.514581680297852
    10. '[n' → logprob: -8.764581680297852

Token 1881: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2515834867954254
    2. '[i' → logprob: -2.1265835762023926
    3. '[
' → logprob: -2.8765835762023926
    4. '```' → logprob: -4.501583576202393
    5. '   ' → logprob: -4.751583576202393
    6. ',' → logprob: -4.876583576202393
    7. '[n' → logprob: -5.376583576202393
    8. '#' → logprob: -6.251583576202393
    9. '[j' → logprob: -6.501583576202393
    10. '`' → logprob: -6.626583576202393

Token 1882: ' #' (ID: 1069)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6743733286857605
    2. '[' → logprob: -0.9243733286857605
    3. '[
' → logprob: -3.5493733882904053
    4. '[n' → logprob: -3.7993733882904053
    5. '   ' → logprob: -4.674373149871826
    6. ',' → logprob: -5.049373149871826
    7. '```' → logprob: -5.049373149871826
    8. '#' (adapté à ' #') → logprob: -5.549373149871826
    9. '[j' → logprob: -5.549373149871826
    10. ']' → logprob: -5.674373149871826

Token 1883: ' qui' (ID: 2780)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7074027061462402
    2. '[' → logprob: -1.2074027061462402
    3. '[n' → logprob: -1.9574027061462402
    4. '[
' → logprob: -3.8324027061462402
    5. '```' → logprob: -4.45740270614624
    6. ',' → logprob: -4.70740270614624
    7. '`' → logprob: -5.08240270614624
    8. '+' → logprob: -6.20740270614624
    9. 'n' → logprob: -6.33240270614624
    10. '#' → logprob: -6.58240270614624

Token 1884: ' ne' (ID: 453)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08156381547451019
    2. ' sont' → logprob: -3.581563711166382
    3. '#' → logprob: -3.831563711166382
    4. '[' → logprob: -5.081563949584961
    5. '=' → logprob: -5.331563949584961
    6. 'n' → logprob: -5.706563949584961
    7. 'éta' → logprob: -5.831563949584961
    8. '```' → logprob: -6.331563949584961
    9. 'ont' → logprob: -6.706563949584961
    10. ' =' → logprob: -6.831563949584961

Token 1885: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00410998472943902
    2. '#' → logprob: -5.879109859466553
    3. 'ser' → logprob: -7.004109859466553
    4. ' sont' → logprob: -8.504110336303711
    5. 'pe' → logprob: -9.504110336303711
    6. '```' → logprob: -10.754110336303711
    7. 'ont' → logprob: -11.379110336303711
    8. ' ' → logprob: -11.504110336303711
    9. ' #' → logprob: -11.629110336303711
    10. 'pas' → logprob: -11.754110336303711

Token 1886: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.04022276774048805
    2. 'util' → logprob: -3.7902228832244873
    3. ' pas' → logprob: -5.165222644805908
    4. '```' → logprob: -6.165222644805908
    5. ' utilisés' → logprob: -6.165222644805908
    6. 'used' → logprob: -6.290222644805908
    7. 'prés' → logprob: -6.665222644805908
    8. '#' → logprob: -7.415222644805908
    9. 'import' → logprob: -7.415222644805908
    10. '
' → logprob: -7.540222644805908

Token 1887: ' coup' (ID: 25465)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.398947149515152
    2. ' utilisés' → logprob: -1.8989471197128296
    3. '\n' → logprob: -2.648947238922119
    4. 's' → logprob: -4.273947238922119
    5. 'used' → logprob: -4.273947238922119
    6. 'sup' → logprob: -4.523947238922119
    7. 'c' → logprob: -4.898947238922119
    8. '\' → logprob: -4.898947238922119
    9. ' utilisé' → logprob: -5.023947238922119
    10. ' utilisées' → logprob: -5.148947238922119

Token 1888: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.10855180770158768
    2. 'é' → logprob: -2.9835517406463623
    3. 's' → logprob: -3.2335517406463623
    4. 'es' → logprob: -5.233551979064941
    5. '#' → logprob: -5.983551979064941
    6. 't' → logprob: -6.608551979064941
    7. '```' → logprob: -7.108551979064941
    8. 'ées' → logprob: -7.358551979064941
    9. 'ts' → logprob: -7.483551979064941
    10. 'étés' → logprob: -8.108551979064941

Token 1889: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05899987369775772
    2. ':' → logprob: -3.93399977684021
    3. '_j' → logprob: -5.309000015258789
    4. ')' → logprob: -5.434000015258789
    5. 'def' → logprob: -5.684000015258789
    6. '):' → logprob: -5.934000015258789
    7. '```' → logprob: -6.059000015258789
    8. 'j' → logprob: -6.059000015258789
    9. ':
' → logprob: -6.434000015258789
    10. 'n' → logprob: -6.434000015258789

Token 1890: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005441143177449703
    2. 'def' → logprob: -5.880441188812256
    3. 'n' → logprob: -6.880441188812256
    4. '```' → logprob: -7.755441188812256
    5. 'j' → logprob: -8.130440711975098
    6. '    
' → logprob: -8.380440711975098
    7. 'p' → logprob: -8.630440711975098
    8. '(n' → logprob: -10.005440711975098
    9. '
' → logprob: -10.255440711975098
    10. 'import' → logprob: -10.255440711975098

Token 1891: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13834400475025177
    2. 'def' → logprob: -2.6383440494537354
    3. 'n' → logprob: -3.1383440494537354
    4. 'p' → logprob: -4.888343811035156
    5. 'j' → logprob: -6.013343811035156
    6. '```' → logprob: -6.263343811035156
    7. 'import' → logprob: -7.888343811035156
    8. '    
' → logprob: -8.138343811035156
    9. '\' → logprob: -8.263343811035156
    10. ':' → logprob: -8.763343811035156

Token 1892: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008846903219819069
    2. 'n' → logprob: -5.383846759796143
    3. 'def' → logprob: -5.758846759796143
    4. 'p' → logprob: -8.2588472366333
    5. '    
' → logprob: -8.5088472366333
    6. '```' → logprob: -8.5088472366333
    7. 'j' → logprob: -8.7588472366333
    8. '(n' → logprob: -10.3838472366333
    9. '\' → logprob: -10.3838472366333
    10. '       ' → logprob: -10.7588472366333

Token 1893: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11656153202056885
    2. 'n' → logprob: -2.2415614128112793
    3. 'def' → logprob: -6.116561412811279
    4. 'j' → logprob: -7.866561412811279
    5. '(n' → logprob: -8.366561889648438
    6. '    
' → logprob: -8.741561889648438
    7. ':' → logprob: -8.741561889648438
    8. ')' → logprob: -8.866561889648438
    9. '\' → logprob: -9.241561889648438
    10. '```' → logprob: -9.741561889648438

Token 1894: ' Cette' (ID: 27383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10191340744495392
    2. 'n' → logprob: -2.3519134521484375
    3. 'j' → logprob: -7.7269134521484375
    4. 'def' → logprob: -7.7269134521484375
    5. '    
' → logprob: -7.8519134521484375
    6. '```' → logprob: -8.851913452148438
    7. '(n' → logprob: -9.851913452148438
    8. 'p' → logprob: -10.101913452148438
    9. ' n' → logprob: -10.726913452148438
    10. '
' → logprob: -10.976913452148438

Token 1895: ' phrase' (ID: 27179)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6941866874694824
    2. '_j' → logprob: -1.8191866874694824
    3. 'def' → logprob: -2.3191866874694824
    4. '#' → logprob: -2.3191866874694824
    5. '\n' → logprob: -2.4441866874694824
    6. '   ' → logprob: -2.5691866874694824
    7. '\' → logprob: -3.1941866874694824
    8. '
' → logprob: -3.3191866874694824
    9. 'n' → logprob: -3.5691866874694824
    10. 'j' → logprob: -3.6941866874694824

Token 1896: ' sous' (ID: 14487)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.174849510192871
    2. '#' → logprob: -1.924849510192871
    3. ' =' → logprob: -2.174849510192871
    4. ':' → logprob: -2.299849510192871
    5. '\n' → logprob: -2.299849510192871
    6. '   ' → logprob: -3.549849510192871
    7. 's' → logprob: -3.549849510192871
    8. '
' → logprob: -3.924849510192871
    9. 'n' → logprob: -4.049849510192871
    10. ' ' → logprob: -4.174849510192871

Token 1897: '-ent' (ID: 171464)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9297820925712585
    2. '=' → logprob: -2.0547821521759033
    3. ' =' → logprob: -2.1797821521759033
    4. '_' → logprob: -2.4297821521759033
    5. 'def' → logprob: -3.1797821521759033
    6. '_j' → logprob: -3.1797821521759033
    7. '"' → logprob: -3.8047821521759033
    8. 'est' → logprob: -3.8047821521759033
    9. '\' → logprob: -3.9297821521759033
    10. 's' → logprob: -4.179781913757324

Token 1898: 'end' (ID: 419)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -1.238692283630371
    2. 'def' → logprob: -1.988692283630371
    3. '#' → logprob: -2.238692283630371
    4. '=' → logprob: -2.738692283630371
    5. '_' → logprob: -3.113692283630371
    6. 'é' → logprob: -3.113692283630371
    7. 'pected' → logprob: -3.238692283630371
    8. ' =' → logprob: -3.613692283630371
    9. '   ' → logprob: -3.738692283630371
    10. 'es' → logprob: -3.863692283630371

Token 1899: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029407111927866936
    2. ':' → logprob: -5.029407024383545
    3. '"' → logprob: -5.529407024383545
    4. '_' → logprob: -6.029407024383545
    5. 'def' → logprob: -6.029407024383545
    6. '       ' → logprob: -6.654407024383545
    7. ' ' → logprob: -6.904407024383545
    8. 'n' → logprob: -7.029407024383545
    9. '#' → logprob: -7.029407024383545
    10. ' que' → logprob: -7.279407024383545

Token 1900: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5445844531059265
    2. '   ' → logprob: -1.0445845127105713
    3. ' #' → logprob: -4.419584274291992
    4. ' la' → logprob: -4.794584274291992
    5. 'n' → logprob: -5.294584274291992
    6. 'pass' → logprob: -5.419584274291992
    7. ' ' → logprob: -5.794584274291992
    8. 'def' → logprob: -5.919584274291992
    9. 'le' → logprob: -6.044584274291992
    10. ' ' → logprob: -6.169584274291992

Token 1901: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8604293465614319
    2. 'on' → logprob: -1.485429286956787
    3. 'i' → logprob: -2.735429286956787
    4. ' i' → logprob: -3.485429286956787
    5. 'les' → logprob: -3.735429286956787
    6. 'nous' → logprob: -3.860429286956787
    7. ' la' → logprob: -3.985429286956787
    8. '(n' → logprob: -3.985429286956787
    9. '   ' → logprob: -3.985429286956787
    10. 'la' → logprob: -4.110429286956787

Token 1902: ' coupe' (ID: 71780)
  Prédit: ' chois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chois' → logprob: -1.598006248474121
    2. '_' → logprob: -1.848006248474121
    3. 'continue' → logprob: -1.973006248474121
    4. 's' → logprob: -2.473006248474121
    5. 'cho' → logprob: -2.598006248474121
    6. ' continue' → logprob: -2.723006248474121
    7. 'n' → logprob: -3.348006248474121
    8. '_continue' → logprob: -3.723006248474121
    9. '_util' → logprob: -3.848006248474121
    10. '[' → logprob: -3.848006248474121

Token 1903: ' entre' (ID: 3853)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.081882119178772
    2. '_' → logprob: -1.956882119178772
    3. 'au' → logprob: -2.0818819999694824
    4. 'la' → logprob: -2.4568819999694824
    5. ' entre' → logprob: -2.8318819999694824
    6. 'à' → logprob: -3.0818819999694824
    7. 'entre' → logprob: -3.4568819999694824
    8. 'le' → logprob: -3.7068819999694824
    9. '#' → logprob: -3.9568819999694824
    10. 'l' → logprob: -4.331881999969482

Token 1904: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.013182703405618668
    2. 't' → logprob: -5.388182640075684
    3. ' p' → logprob: -5.638182640075684
    4. 'les' → logprob: -6.138182640075684
    5. 'de' → logprob: -6.263182640075684
    6. ' ' → logprob: -8.138182640075684
    7. '   ' → logprob: -8.763182640075684
    8. '```' → logprob: -9.013182640075684
    9. ' deux' → logprob: -9.263182640075684
    10. ' les' → logprob: -9.888182640075684

Token 1905: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06544223427772522
    2. '[i' → logprob: -3.0654423236846924
    3. '[
' → logprob: -4.940442085266113
    4. ']' → logprob: -6.315442085266113
    5. ''' → logprob: -6.690442085266113
    6. '[n' → logprob: -6.815442085266113
    7. '#' → logprob: -6.815442085266113
    8. '[]' → logprob: -6.940442085266113
    9. '   ' → logprob: -7.065442085266113
    10. ''[' → logprob: -7.940442085266113

Token 1906: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06642423570156097
    2. '[i' → logprob: -3.0664241313934326
    3. '],' → logprob: -5.191424369812012
    4. '+' → logprob: -5.816424369812012
    5. '[' → logprob: -5.816424369812012
    6. ']
' → logprob: -6.191424369812012
    7. '   ' → logprob: -6.816424369812012
    8. '']' → logprob: -7.441424369812012
    9. '+]' → logprob: -7.941424369812012
    10. '[]' → logprob: -8.191424369812012

Token 1907: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0022118091583252
    2. ']' → logprob: -1.2522118091583252
    3. '[i' → logprob: -1.6272118091583252
    4. '+' → logprob: -2.752211809158325
    5. '[
' → logprob: -3.877211809158325
    6. '```' → logprob: -4.127211570739746
    7. ' et' → logprob: -4.377211570739746
    8. 'et' → logprob: -4.377211570739746
    9. '`' → logprob: -5.002211570739746
    10. '   ' → logprob: -5.752211570739746

Token 1908: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014231795445084572
    2. ' p' → logprob: -4.2642316818237305
    3. 'i' → logprob: -10.01423168182373
    4. '   ' → logprob: -12.01423168182373
    5. '```' → logprob: -12.76423168182373
    6. '`' → logprob: -12.88923168182373
    7. '
' → logprob: -13.01423168182373
    8. ' ' → logprob: -13.01423168182373
    9. ' i' → logprob: -13.38923168182373
    10. ' ' → logprob: -13.51423168182373

Token 1909: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0028803572058677673
    2. ']' → logprob: -6.377880573272705
    3. '[' → logprob: -7.127880573272705
    4. 'i' → logprob: -8.377880096435547
    5. '```' → logprob: -10.377880096435547
    6. '#' → logprob: -10.502880096435547
    7. '   ' → logprob: -11.002880096435547
    8. '[p' → logprob: -11.252880096435547
    9. '[
' → logprob: -11.627880096435547
    10. 'p' → logprob: -12.127880096435547

Token 1910: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5829001665115356
    2. ']' → logprob: -0.9579001665115356
    3. '[i' → logprob: -3.082900047302246
    4. '[' → logprob: -5.457900047302246
    5. '],' → logprob: -5.707900047302246
    6. '-' → logprob: -6.957900047302246
    7. ']
' → logprob: -7.082900047302246
    8. '+]' → logprob: -7.207900047302246
    9. '[
' → logprob: -7.707900047302246
    10. ']+' → logprob: -7.832900047302246

Token 1911: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009825863875448704
    2. '+' → logprob: -4.634825706481934
    3. ']' → logprob: -10.509825706481934
    4. '+]' → logprob: -10.759825706481934
    5. '2' → logprob: -11.634825706481934
    6. '
' → logprob: -13.009825706481934
    7. '```' → logprob: -13.134825706481934
    8. '[' → logprob: -13.384825706481934
    9. ']+' → logprob: -13.759825706481934
    10. '{' → logprob: -13.884825706481934

Token 1912: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3025716245174408
    2. '],' → logprob: -2.1775715351104736
    3. ')' → logprob: -2.8025715351104736
    4. '])' → logprob: -3.0525715351104736
    5. ']
' → logprob: -4.927571773529053
    6. '),' → logprob: -5.052571773529053
    7. '"]' → logprob: -5.302571773529053
    8. '[i' → logprob: -5.677571773529053
    9. ']),' → logprob: -6.052571773529053
    10. '")' → logprob: -6.302571773529053

Token 1913: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8866726756095886
    2. '   ' → logprob: -1.2616727352142334
    3. '\n' → logprob: -1.3866727352142334
    4. ' #' → logprob: -4.261672496795654
    5. '\' → logprob: -5.261672496795654
    6. '"' → logprob: -5.511672496795654
    7. '       ' → logprob: -5.511672496795654
    8. ' (' → logprob: -5.636672496795654
    9. ' ' → logprob: -6.011672496795654
    10. ',' → logprob: -6.261672496795654

Token 1914: ' excl' (ID: 57282)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -1.2778772115707397
    2. ' ne' → logprob: -1.6528772115707397
    3. '#' → logprob: -1.7778772115707397
    4. 'n' → logprob: -2.0278773307800293
    5. ' n' → logprob: -2.9028773307800293
    6. '\' → logprob: -3.4028773307800293
    7. 'util' → logprob: -3.9028773307800293
    8. ' utilise' → logprob: -3.9028773307800293
    9. '```' → logprob: -4.027877330780029
    10. '\n' → logprob: -4.027877330780029

Token 1915: 'ut' (ID: 339)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1556248962879181
    2. 't' → logprob: -2.9056248664855957
    3. 'ut' → logprob: -4.280624866485596
    4. '```' → logprob: -4.405624866485596
    5. 'ù' → logprob: -4.530624866485596
    6. 'ue' → logprob: -4.655624866485596
    7. 'cut' → logprob: -4.905624866485596
    8. '   ' → logprob: -5.030624866485596
    9. 'ude' → logprob: -6.030624866485596
    10. 'ût' → logprob: -6.593124866485596

Token 1916: ' le' (ID: 505)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.1261008977890015
    2. ' un' → logprob: -2.001101016998291
    3. 'le' → logprob: -2.626101016998291
    4. ' le' → logprob: -2.876101016998291
    5. 'l' → logprob: -3.001101016998291
    6. ' ' → logprob: -3.126101016998291
    7. 'p' → logprob: -3.376101016998291
    8. ' la' → logprob: -3.626101016998291
    9. ' ' → logprob: -3.626101016998291
    10. ' l' → logprob: -3.751101016998291

Token 1917: ' joint' (ID: 14585)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4016309082508087
    2. 'p' → logprob: -2.1516308784484863
    3. 'joint' → logprob: -2.4016308784484863
    4. 'i' → logprob: -3.9016308784484863
    5. '```' → logprob: -4.026630878448486
    6. '#' → logprob: -4.276630878448486
    7. '`' → logprob: -4.776630878448486
    8. '"' → logprob: -4.776630878448486
    9. '\n' → logprob: -4.776630878448486
    10. ' p' → logprob: -4.901630878448486

Token 1918: ' j' (ID: 441)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1402372121810913
    2. '_used' → logprob: -1.1402372121810913
    3. '_' → logprob: -2.015237331390381
    4. '```' → logprob: -2.890237331390381
    5. '_util' → logprob: -3.140237331390381
    6. '   ' → logprob: -3.515237331390381
    7. '#' → logprob: -3.765237331390381
    8. 's' → logprob: -4.515237331390381
    9. '[' → logprob: -4.765237331390381
    10. ' utilisé' → logprob: -5.140237331390381

Token 1919: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.17111609876155853
    2. '[' → logprob: -1.9211161136627197
    3. '[
' → logprob: -4.671115875244141
    4. '```' → logprob: -7.921115875244141
    5. '\[' → logprob: -8.54611587524414
    6. '[]' → logprob: -8.92111587524414
    7. '#' → logprob: -9.29611587524414
    8. '`' → logprob: -9.79611587524414
    9. '_used' → logprob: -9.79611587524414
    10. '[...]' → logprob: -9.79611587524414

Token 1920: '].
' (ID: 49887)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4502291679382324
    2. ']' → logprob: -1.0752291679382324
    3. '[i' → logprob: -4.450229167938232
    4. '])
' → logprob: -5.075229167938232
    5. '],' → logprob: -7.700229167938232
    6. ']
' → logprob: -7.700229167938232
    7. '[' → logprob: -7.950229167938232
    8. '"])' → logprob: -8.20022964477539
    9. ''])' → logprob: -8.32522964477539
    10. '   ' → logprob: -8.45022964477539

Token 1921: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003146223723888397
    2. '    
' → logprob: -6.878146171569824
    3. 'def' → logprob: -8.128146171569824
    4. ')' → logprob: -8.378146171569824
    5. 's' → logprob: -8.878146171569824
    6. '       ' → logprob: -8.878146171569824
    7. '"' → logprob: -8.878146171569824
    8. ']' → logprob: -9.003146171569824
    9. '_' → logprob: -9.128146171569824
    10. '    ' → logprob: -9.253146171569824

Token 1922: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007203113287687302
    2. 'def' → logprob: -5.882203102111816
    3. 'p' → logprob: -6.382203102111816
    4. 'n' → logprob: -6.757203102111816
    5. 'j' → logprob: -7.507203102111816
    6. '```' → logprob: -8.007203102111816
    7. '    
' → logprob: -8.757203102111816
    8. ')' → logprob: -10.007203102111816
    9. '#' → logprob: -10.007203102111816
    10. '\' → logprob: -10.257203102111816

Token 1923: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009336916729807854
    2. 'n' → logprob: -5.384336948394775
    3. 'def' → logprob: -5.509336948394775
    4. '```' → logprob: -8.509336471557617
    5. '    
' → logprob: -8.884336471557617
    6. 'p' → logprob: -9.009336471557617
    7. 'j' → logprob: -9.384336471557617
    8. '       ' → logprob: -11.259336471557617
    9. 'pipes' → logprob: -11.259336471557617
    10. '
' → logprob: -11.384336471557617

Token 1924: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06154206022620201
    2. 'n' → logprob: -2.93654203414917
    3. 'def' → logprob: -5.68654203414917
    4. 'p' → logprob: -6.81154203414917
    5. 'j' → logprob: -7.31154203414917
    6. '    
' → logprob: -7.56154203414917
    7. 'length' → logprob: -7.68654203414917
    8. '#' (adapté à ' #') → logprob: -9.311542510986328
    9. ' n' → logprob: -10.061542510986328
    10. '
' → logprob: -10.311542510986328

Token 1925: ' En' (ID: 2130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43363508582115173
    2. 'n' → logprob: -1.0586351156234741
    3. 'def' → logprob: -5.558635234832764
    4. '```' → logprob: -8.183634757995605
    5. 'j' → logprob: -8.308634757995605
    6. '    
' → logprob: -8.433634757995605
    7. ' n' → logprob: -9.808634757995605
    8. 'p' → logprob: -10.058634757995605
    9. '#' → logprob: -10.433634757995605
    10. 'import' → logprob: -10.808634757995605

Token 1926: ' résumé' (ID: 140184)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6132476329803467
    2. 'suite' → logprob: -1.6132476329803467
    3. '_
' → logprob: -1.7382476329803467
    4. 'def' → logprob: -2.7382476329803467
    5. 's' → logprob: -3.1132476329803467
    6. '```' → logprob: -3.3632476329803467
    7. '_s' → logprob: -3.4882476329803467
    8. 'n' → logprob: -3.8632476329803467
    9. '\' → logprob: -3.8632476329803467
    10. '#' → logprob: -3.8632476329803467

Token 1927: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1545133739709854
    2. 'n' → logprob: -2.404513359069824
    3. 'def' → logprob: -3.529513359069824
    4. ':' → logprob: -4.029513359069824
    5. '(n' → logprob: -5.529513359069824
    6. ':
' → logprob: -7.529513359069824
    7. '```' → logprob: -8.154513359069824
    8. ' n' → logprob: -8.154513359069824
    9. ',' → logprob: -8.779513359069824
    10. '    
' → logprob: -9.279513359069824

Token 1928: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5507881045341492
    2. 'n' → logprob: -0.9257881045341492
    3. ' n' → logprob: -4.425787925720215
    4. 'def' → logprob: -4.675787925720215
    5. 'pass' → logprob: -6.300787925720215
    6. 'p' → logprob: -6.925787925720215
    7. ' pass' → logprob: -7.300787925720215
    8. '    
' → logprob: -7.425787925720215
    9. '#' → logprob: -7.925787925720215
    10. 't' → logprob: -8.800787925720215

Token 1929: ' veut' (ID: 41653)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4058471918106079
    2. '   ' → logprob: -1.655847191810608
    3. '#' → logprob: -2.9058470726013184
    4. 'n' → logprob: -3.5308470726013184
    5. ' n' → logprob: -4.530847072601318
    6. 'continue' → logprob: -4.780847072601318
    7. '(n' → logprob: -5.655847072601318
    8. 'for' → logprob: -5.655847072601318
    9. '_' → logprob: -6.030847072601318
    10. '
' → logprob: -6.155847072601318

Token 1930: ' décou' (ID: 68302)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4546583294868469
    2. 'cho' → logprob: -1.5796582698822021
    3. 'tr' → logprob: -3.079658269882202
    4. ' choisir' → logprob: -3.704658269882202
    5. 'maximize' → logprob: -4.204658508300781
    6. 'partition' → logprob: -4.329658508300781
    7. '   ' → logprob: -4.954658508300781
    8. 'contin' → logprob: -5.204658508300781
    9. 'chercher' → logprob: -5.204658508300781
    10. 'calcul' → logprob: -5.454658508300781

Token 1931: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0816161185503006
    2. 'p' → logprob: -2.581616163253784
    3. 'page' → logprob: -6.831615924835205
    4. 'pe' → logprob: -7.956615924835205
    5. '#' → logprob: -8.456616401672363
    6. '
' → logprob: -8.831616401672363
    7. '```' → logprob: -8.956616401672363
    8. '\' → logprob: -9.206616401672363
    9. '   ' → logprob: -9.831616401672363
    10. '``' → logprob: -9.956616401672363

Token 1932: ' en' (ID: 469)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.39723995327949524
    2. 'la' → logprob: -1.1472399234771729
    3. '   ' → logprob: -6.397240161895752
    4. ' ' → logprob: -6.647240161895752
    5. 'le' → logprob: -6.772240161895752
    6. ' les' → logprob: -6.897240161895752
    7. '```' → logprob: -7.022240161895752
    8. ' ' → logprob: -7.022240161895752
    9. 'les' → logprob: -7.272240161895752
    10. ':' → logprob: -7.897240161895752

Token 1933: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.2824624478816986
    2. ' segments' → logprob: -1.907462477684021
    3. ' sous' → logprob: -3.2824623584747314
    4. 's' → logprob: -4.1574625968933105
    5. '   ' → logprob: -5.0324625968933105
    6. 'n' → logprob: -5.1574625968933105
    7. ' n' → logprob: -5.4074625968933105
    8. 'k' → logprob: -5.7824625968933105
    9. '```' → logprob: -6.1574625968933105
    10. '_' → logprob: -6.1574625968933105

Token 1934: ' cont' (ID: 836)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04712666571140289
    2. ' de' → logprob: -3.5471267700195312
    3. 'de' → logprob: -5.672126770019531
    4. ' en' → logprob: -6.297126770019531
    5. '[]' → logprob: -6.297126770019531
    6. ' =' → logprob: -6.672126770019531
    7. ' (' → logprob: -6.672126770019531
    8. ',' → logprob: -7.422126770019531
    9. '(n' → logprob: -7.547126770019531
    10. '_cont' → logprob: -7.672126770019531

Token 1935: 'igus' (ID: 79914)
  Prédit: 'igus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igus' → logprob: -0.2810279428958893
    2. 'igu' → logprob: -1.906027913093567
    3. 'iguous' → logprob: -2.7810280323028564
    4. 'inu' → logprob: -4.531027793884277
    5. 'in' → logprob: -5.156027793884277
    6. 'u' → logprob: -5.906027793884277
    7. 'ig' → logprob: -6.156027793884277
    8. '```' → logprob: -6.281027793884277
    9. 'inue' → logprob: -6.906027793884277
    10. ''' → logprob: -7.031027793884277

Token 1936: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17102158069610596
    2. '.' → logprob: -2.9210214614868164
    3. ',' → logprob: -3.6710214614868164
    4. ':' → logprob: -4.171021461486816
    5. ' des' → logprob: -4.296021461486816
    6. ' de' → logprob: -4.671021461486816
    7. 'de' → logprob: -4.796021461486816
    8. '```' → logprob: -5.421021461486816
    9. '[' → logprob: -5.546021461486816
    10. '[]' → logprob: -5.796021461486816

Token 1937: ' tableau' (ID: 67053)
  Prédit: ' tuy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuy' → logprob: -1.842370867729187
    2. 's' → logprob: -2.0923709869384766
    3. ' segments' → logprob: -2.0923709869384766
    4. '_' → logprob: -2.5923709869384766
    5. ' sequences' → logprob: -2.7173709869384766
    6. 't' → logprob: -2.8423709869384766
    7. ' n' → logprob: -3.0923709869384766
    8. ' pipes' → logprob: -3.2173709869384766
    9. 'segments' → logprob: -3.2173709869384766
    10. ' ' → logprob: -3.3423709869384766

Token 1938: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4503900110721588
    2. '   ' → logprob: -2.325390100479126
    3. ' des' → logprob: -2.325390100479126
    4. '[' → logprob: -3.450390100479126
    5. 'des' → logprob: -3.450390100479126
    6. 'de' → logprob: -3.700390100479126
    7. ' de' → logprob: -3.950390100479126
    8. '_de' → logprob: -4.325389862060547
    9. '_des' → logprob: -4.450389862060547
    10. ' _' → logprob: -5.200389862060547

Token 1939: ' tuy' (ID: 45164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8445722460746765
    2. 'p' → logprob: -1.3445723056793213
    3. 'pipes' → logprob: -1.8445723056793213
    4. 'j' → logprob: -2.2195723056793213
    5. '#' → logprob: -4.344572067260742
    6. ' tuy' → logprob: -4.719572067260742
    7. '   ' → logprob: -5.219572067260742
    8. ' pipes' → logprob: -5.344572067260742
    9. 'pipe' → logprob: -6.594572067260742
    10. 'joint' → logprob: -6.719572067260742

Token 1940: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.07902627438306808
    2. 'x' → logprob: -2.829026222229004
    3. '   ' → logprob: -4.454026222229004
    4. '#' → logprob: -6.454026222229004
    5. 'def' → logprob: -7.204026222229004
    6. 'bles' → logprob: -7.829026222229004
    7. '```' → logprob: -8.204026222229004
    8. '[' → logprob: -8.329026222229004
    9. 'pipes' → logprob: -8.329026222229004
    10. '[]' → logprob: -8.454026222229004

Token 1941: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9741917848587036
    2. '   ' → logprob: -0.9741917848587036
    3. '[n' → logprob: -2.224191665649414
    4. ',' → logprob: -3.849191665649414
    5. '[
' → logprob: -3.849191665649414
    6. '```' → logprob: -4.099191665649414
    7. ' =' → logprob: -4.099191665649414
    8. '[i' → logprob: -4.474191665649414
    9. '[j' → logprob: -4.599191665649414
    10. 's' → logprob: -4.724191665649414

Token 1942: ' chois' (ID: 33475)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.6958984136581421
    2. 'segments' → logprob: -0.8208984136581421
    3. ' morceaux' → logprob: -3.3208985328674316
    4. 'n' → logprob: -5.945898532867432
    5. 's' → logprob: -6.070898532867432
    6. ' n' → logprob: -6.195898532867432
    7. ' parts' → logprob: -6.320898532867432
    8. '```' → logprob: -6.570898532867432
    9. ' p' → logprob: -6.945898532867432
    10. 'élé' → logprob: -7.070898532867432

Token 1943: 'issant' (ID: 31359)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.7883411645889282
    2. 'çant' → logprob: -1.9133411645889282
    3. 'ements' → logprob: -2.1633410453796387
    4. 'çons' → logprob: -2.1633410453796387
    5. 'ant' → logprob: -2.6633410453796387
    6. 'ets' → logprob: -2.9133410453796387
    7. '[]' → logprob: -2.9133410453796387
    8. 'es' → logprob: -3.5383410453796387
    9. '   ' → logprob: -3.6633410453796387
    10. 'ç' → logprob: -3.7883410453796387

Token 1944: ' où' (ID: 15113)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.4161055088043213
    2. ' où' → logprob: -2.0411055088043213
    3. 'des' → logprob: -2.6661055088043213
    4. ' where' → logprob: -3.5411055088043213
    5. 'au' → logprob: -3.9161055088043213
    6. ' des' → logprob: -4.041105270385742
    7. 'where' → logprob: -4.166105270385742
    8. 'les' → logprob: -4.291105270385742
    9. '```' → logprob: -4.416105270385742
    10. 'une' → logprob: -5.166105270385742

Token 1945: ' couper' (ID: 135212)
  Prédit: ' couper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couper' → logprob: -0.44214537739753723
    2. 'cou' → logprob: -1.6921453475952148
    3. '   ' → logprob: -2.192145347595215
    4. '#' → logprob: -4.192145347595215
    5. 'c' → logprob: -4.317145347595215
    6. 'cut' → logprob: -4.692145347595215
    7. ' ' → logprob: -4.942145347595215
    8. ' les' → logprob: -6.067145347595215
    9. ' ' → logprob: -6.317145347595215
    10. ' #' → logprob: -6.317145347595215

Token 1946: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02826397493481636
    2. ' entre' → logprob: -4.778264045715332
    3. 'between' → logprob: -5.278264045715332
    4. ' between' → logprob: -5.528264045715332
    5. '[' → logprob: -6.278264045715332
    6. '```' → logprob: -6.528264045715332
    7. '_' → logprob: -6.778264045715332
    8. ',' → logprob: -6.903264045715332
    9. '       ' → logprob: -7.403264045715332
    10. 'entre' → logprob: -7.403264045715332

Token 1947: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011730826226994395
    2. ',' → logprob: -8.00117301940918
    3. '       ' → logprob: -9.00117301940918
    4. '.' → logprob: -9.00117301940918
    5. '[' → logprob: -9.25117301940918
    6. ')' → logprob: -9.62617301940918
    7. '```' → logprob: -10.00117301940918
    8. 'between' → logprob: -10.25117301940918
    9. ' between' → logprob: -10.37617301940918
    10. '[i' → logprob: -10.50117301940918

Token 1948: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014736770652234554
    2. '```' → logprob: -5.014736652374268
    3. '[' → logprob: -6.764736652374268
    4. '#' (adapté à ' #') → logprob: -6.764736652374268
    5. ' entre' → logprob: -6.889736652374268
    6. ',' → logprob: -7.264736652374268
    7. '[i' → logprob: -7.639736652374268
    8. '`' → logprob: -7.639736652374268
    9. '_' → logprob: -7.764736652374268
    10. 'between' → logprob: -7.889736652374268

Token 1949: ' pour' (ID: 1930)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'between' → logprob: -1.3907606601715088
    2. '#' → logprob: -1.7657606601715088
    3. ',' → logprob: -1.7657606601715088
    4. '=' → logprob: -2.390760660171509
    5. ' entre' → logprob: -2.515760660171509
    6. ' between' → logprob: -2.890760660171509
    7. '   ' → logprob: -3.140760660171509
    8. 'entre' → logprob: -3.265760660171509
    9. 'au' → logprob: -4.14076042175293
    10. '.' → logprob: -4.89076042175293

Token 1950: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11619630455970764
    2. 'aj' → logprob: -2.866196393966675
    3. 'mettre' → logprob: -4.116196155548096
    4. 'sé' → logprob: -4.866196155548096
    5. ' maxim' → logprob: -5.116196155548096
    6. 'avoir' → logprob: -5.116196155548096
    7. 'faire' → logprob: -5.616196155548096
    8. 'optim' → logprob: -5.866196155548096
    9. 'maximize' → logprob: -5.866196155548096
    10. 'partition' → logprob: -6.491196155548096

Token 1951: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.01317328680306673
    2. 'al' → logprob: -5.2631731033325195
    3. '#' → logprob: -6.3881731033325195
    4. 'izer' → logprob: -6.7631731033325195
    5. 'aiser' → logprob: -7.0131731033325195
    6. 'ser' → logprob: -7.2631731033325195
    7. '```' → logprob: -7.2631731033325195
    8. 'er' → logprob: -7.6381731033325195
    9. 'um' → logprob: -8.01317310333252
    10. 'alyser' → logprob: -8.26317310333252

Token 1952: ':
' (ID: 734)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.2061257362365723
    2. ' la' → logprob: -1.3311257362365723
    3. '   ' → logprob: -1.4561257362365723
    4. 'len' → logprob: -2.8311257362365723
    5. '1' → logprob: -3.4561257362365723
    6. 'le' → logprob: -3.5811257362365723
    7. 'l' → logprob: -3.9561257362365723
    8. ' le' → logprob: -4.456125736236572
    9. 'max' → logprob: -4.706125736236572
    10. ' len' → logprob: -5.081125736236572

Token 1953: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010571738705039024
    2. '(n' → logprob: -4.6355719566345215
    3. 'n' → logprob: -7.7605719566345215
    4. '"' → logprob: -9.510571479797363
    5. ' n' → logprob: -9.885571479797363
    6. '    ' → logprob: -10.010571479797363
    7. '```' → logprob: -10.010571479797363
    8. ' (' → logprob: -10.635571479797363
    9. '(' → logprob: -10.760571479797363
    10. '       ' → logprob: -11.135571479797363

Token 1954: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051665909588336945
    2. '(n' → logprob: -3.176666021347046
    3. 'n' → logprob: -5.051665782928467
    4. '(' → logprob: -7.301665782928467
    5. ')' → logprob: -7.551665782928467
    6. ' n' → logprob: -8.176666259765625
    7. ' (' → logprob: -8.926666259765625
    8. '#' (adapté à ' #') → logprob: -9.051666259765625
    9. '    ' → logprob: -9.801666259765625
    10. 'def' → logprob: -9.926666259765625

Token 1955: ' (#' (ID: 66375)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27457013726234436
    2. '#' → logprob: -2.1495702266693115
    3. '(n' → logprob: -2.6495702266693115
    4. 'n' → logprob: -3.7745702266693115
    5. '(s' → logprob: -4.899569988250732
    6. 's' → logprob: -4.899569988250732
    7. 'total' → logprob: -5.524569988250732
    8. '```' → logprob: -6.024569988250732
    9. 'max' → logprob: -6.399569988250732
    10. 'sum' → logprob: -6.524569988250732

Token 1956: 'segments' (ID: 110314)
  Prédit: 'segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.5917915105819702
    2. '_segments' → logprob: -0.8417915105819702
    3. '_' → logprob: -4.46679162979126
    4. ' segments' → logprob: -6.84179162979126
    5. ')' → logprob: -7.34179162979126
    6. '_segment' → logprob: -7.96679162979126
    7. ' _' → logprob: -8.341791152954102
    8. '_\' → logprob: -8.591791152954102
    9. '_s' → logprob: -8.591791152954102
    10. '_t' → logprob: -8.841791152954102

Token 1957: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030554274562746286
    2. ' )' → logprob: -7.128055572509766
    3. '```' → logprob: -8.128055572509766
    4. '=' → logprob: -8.253055572509766
    5. ')_' → logprob: -8.503055572509766
    6. '_' → logprob: -8.503055572509766
    7. '   ' → logprob: -8.628055572509766
    8. ')*' → logprob: -8.753055572509766
    9. ' =' → logprob: -9.128055572509766
    10. ',' → logprob: -9.253055572509766

Token 1958: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14856866002082825
    2. ' =' → logprob: -2.398568630218506
    3. ')' → logprob: -3.523568630218506
    4. '   ' → logprob: -5.148568630218506
    5. '```' → logprob: -5.898568630218506
    6. '*' → logprob: -6.398568630218506
    7. ' #' → logprob: -6.398568630218506
    8. ' )' → logprob: -6.898568630218506
    9. '*(' → logprob: -7.023568630218506
    10. ' (' → logprob: -7.273568630218506

Token 1959: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11148087680339813
    2. '(S' → logprob: -3.236480951309204
    3. '(s' → logprob: -3.486480951309204
    4. '(sum' → logprob: -3.486480951309204
    5. '(' → logprob: -6.611480712890625
    6. ' sum' → logprob: -7.111480712890625
    7. 'sum' → logprob: -7.361480712890625
    8. '(len' → logprob: -7.611480712890625
    9. '(total' → logprob: -7.861480712890625
    10. ' somme' → logprob: -8.361480712890625

Token 1960: 'S' (ID: 50)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2220234870910645
    2. '(sum' → logprob: -1.2220234870910645
    3. '(s' → logprob: -1.3470234870910645
    4. 'sum' → logprob: -2.8470234870910645
    5. '(' → logprob: -3.3470234870910645
    6. '(S' → logprob: -3.4720234870910645
    7. ' sum' → logprob: -4.2220234870910645
    8. ' somme' → logprob: -5.3470234870910645
    9. 's' → logprob: -5.9720234870910645
    10. 'total' → logprob: -6.7220234870910645

Token 1961: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5290750861167908
    2. ' +' → logprob: -1.1540751457214355
    3. '+' → logprob: -3.2790751457214355
    4. 'des' → logprob: -4.7790751457214355
    5. ' )' → logprob: -4.9040751457214355
    6. '_total' → logprob: -5.0290751457214355
    7. ' -' → logprob: -5.4040751457214355
    8. '_des' → logprob: -5.4040751457214355
    9. ' des' → logprob: -5.5290751457214355
    10. '```' → logprob: -5.9040751457214355

Token 1962: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.19833904504776
    2. ' sum' → logprob: -2.0733389854431152
    3. 'j' → logprob: -3.8233389854431152
    4. 'x' → logprob: -4.698338985443115
    5. ' j' → logprob: -5.448338985443115
    6. 's' → logprob: -5.698338985443115
    7. ' joints' → logprob: -5.698338985443115
    8. '(sum' → logprob: -6.448338985443115
    9. ' x' → logprob: -6.448338985443115
    10. 'joint' → logprob: -6.698338985443115

Token 1963: ' des' (ID: 731)
  Prédit: '_des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_des' → logprob: -0.6129505038261414
    2. '_j' → logprob: -0.9879505038261414
    3. 'des' → logprob: -3.362950563430786
    4. '_' → logprob: -3.612950563430786
    5. '_of' → logprob: -4.737950325012207
    6. '_used' → logprob: -5.487950325012207
    7. '_de' → logprob: -5.737950325012207
    8. '[j' → logprob: -5.987950325012207
    9. ' des' → logprob: -6.487950325012207
    10. '   ' → logprob: -7.237950325012207

Token 1964: ' joints' (ID: 47223)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.6042412519454956
    2. 'j' → logprob: -0.9792412519454956
    3. ' joints' → logprob: -2.729241371154785
    4. ' j' → logprob: -5.229241371154785
    5. ' _' → logprob: -6.604241371154785
    6. '_' → logprob: -6.604241371154785
    7. 'joins' → logprob: -7.354241371154785
    8. ' ' → logprob: -7.729241371154785
    9. '   ' → logprob: -7.729241371154785
    10. 'joint' → logprob: -8.104241371154785

Token 1965: ' utilisés' (ID: 94258)
  Prédit: '_util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.22456428408622742
    2. ')' → logprob: -2.09956431388855
    3. '_used' → logprob: -2.84956431388855
    4. ')
' → logprob: -4.474564075469971
    5. 'util' → logprob: -5.599564075469971
    6. '_' → logprob: -6.599564075469971
    7. '[' → logprob: -7.099564075469971
    8. ')**' → logprob: -8.099564552307129
    9. '```' → logprob: -8.099564552307129
    10. '_rest' → logprob: -8.224564552307129

Token 1966: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003514310345053673
    2. '```' → logprob: -7.378514289855957
    3. '_used' → logprob: -7.878514289855957
    4. ')
' → logprob: -7.878514289855957
    5. ')`' → logprob: -8.003514289855957
    6. '   ' → logprob: -8.253514289855957
    7. '`)' → logprob: -8.253514289855957
    8. '[j' → logprob: -8.378514289855957
    9. '])' → logprob: -8.628514289855957
    10. '))' → logprob: -9.378514289855957

Token 1967: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19805940985679626
    2. ':' → logprob: -2.073059320449829
    3. '(n' → logprob: -4.198059558868408
    4. '[' → logprob: -5.198059558868408
    5. 'n' → logprob: -5.323059558868408
    6. ':
' → logprob: -5.323059558868408
    7. '[n' → logprob: -5.573059558868408
    8. '(' → logprob: -5.823059558868408
    9. 'def' → logprob: -6.323059558868408
    10. '```' → logprob: -6.448059558868408

Token 1968: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09957128018140793
    2. 'n' → logprob: -2.4745712280273438
    3. 'def' → logprob: -5.349571228027344
    4. '    
' → logprob: -6.599571228027344
    5. '(n' → logprob: -6.974571228027344
    6. '```' → logprob: -7.224571228027344
    7. '
' → logprob: -7.474571228027344
    8. ':' → logprob: -7.849571228027344
    9. '\' → logprob: -7.849571228027344
    10. '\n' → logprob: -8.224571228027344

Token 1969: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014742057770490646
    2. 'n' → logprob: -4.764741897583008
    3. '(n' → logprob: -6.889741897583008
    4. '```' → logprob: -7.139741897583008
    5. '    
' → logprob: -7.389741897583008
    6. ':' → logprob: -7.514741897583008
    7. 'def' → logprob: -7.514741897583008
    8. '\n' → logprob: -7.514741897583008
    9. '\' → logprob: -7.764741897583008
    10. 'j' → logprob: -7.889741897583008

Token 1970: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06267555803060532
    2. 'n' → logprob: -2.8126754760742188
    3. '    
' → logprob: -7.937675476074219
    4. 'j' → logprob: -8.812675476074219
    5. 'def' → logprob: -10.062675476074219
    6. ' n' → logprob: -10.562675476074219
    7. '
' → logprob: -10.937675476074219
    8. '(n' → logprob: -11.187675476074219
    9. '```' → logprob: -11.187675476074219
    10. '	n' → logprob: -11.312675476074219

Token 1971: ' où' (ID: 15113)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5295068025588989
    2. '   ' → logprob: -0.9045068025588989
    3. 'def' → logprob: -5.654506683349609
    4. 'j' → logprob: -7.154506683349609
    5. '    
' → logprob: -7.279506683349609
    6. '
' → logprob: -7.779506683349609
    7. '```' → logprob: -8.40450668334961
    8. '#' → logprob: -8.77950668334961
    9. 'from' → logprob: -9.02950668334961
    10. 'p' → logprob: -9.15450668334961

Token 1972: ' S' (ID: 336)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08537889271974564
    2. '#' → logprob: -2.960378885269165
    3. '   ' → logprob: -4.460379123687744
    4. ' n' → logprob: -4.460379123687744
    5. ' #' → logprob: -6.835379123687744
    6. 'j' → logprob: -6.835379123687744
    7. '(n' → logprob: -7.585379123687744
    8. '`' → logprob: -7.710379123687744
    9. ' la' → logprob: -7.710379123687744
    10. 'les' → logprob: -7.835379123687744

Token 1973: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7951556444168091
    2. '=' → logprob: -0.9201556444168091
    3. '#' → logprob: -3.5451555252075195
    4. '   ' → logprob: -3.9201555252075195
    5. '+' → logprob: -4.0451555252075195
    6. ' +' → logprob: -4.1701555252075195
    7. ')' → logprob: -4.2951555252075195
    8. '_' → logprob: -4.6701555252075195
    9. '(n' → logprob: -5.1701555252075195
    10. '_total' → logprob: -5.5451555252075195

Token 1974: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17096349596977234
    2. ' n' → logprob: -2.6709635257720947
    3. 'len' → logprob: -3.1709635257720947
    4. '   ' → logprob: -3.4209635257720947
    5. ' len' → logprob: -5.545963287353516
    6. 'sum' → logprob: -6.545963287353516
    7. 'la' → logprob: -6.670963287353516
    8. ' la' → logprob: -6.795963287353516
    9. '=' → logprob: -6.920963287353516
    10. ' =' → logprob: -7.045963287353516

Token 1975: ' somme' (ID: 64484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011398401111364365
    2. ' n' → logprob: -5.2613983154296875
    3. 'int' → logprob: -6.3863983154296875
    4. 'sum' → logprob: -6.5113983154296875
    5. '   ' → logprob: -7.2613983154296875
    6. 'len' → logprob: -8.386398315429688
    7. '
' → logprob: -8.386398315429688
    8. '`' → logprob: -8.886398315429688
    9. '#' → logprob: -9.011398315429688
    10. ' ' → logprob: -9.261398315429688

Token 1976: ' des' (ID: 731)
  Prédit: '_des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_des' → logprob: -1.285127878189087
    2. '_j' → logprob: -1.535127878189087
    3. 'des' → logprob: -1.660127878189087
    4. '_' → logprob: -1.785127878189087
    5. '_of' → logprob: -2.785127878189087
    6. '_p' → logprob: -3.285127878189087
    7. '   ' → logprob: -4.410127639770508
    8. 'of' → logprob: -4.535127639770508
    9. '_t' → logprob: -4.660127639770508
    10. '=' → logprob: -5.660127639770508

Token 1977: ' tuy' (ID: 45164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8719467520713806
    2. 'j' → logprob: -1.2469468116760254
    3. 'pipes' → logprob: -1.8719468116760254
    4. 'p' → logprob: -2.1219468116760254
    5. 'pipe' → logprob: -5.371946811676025
    6. 'joint' → logprob: -6.121946811676025
    7. 'n' → logprob: -6.246946811676025
    8. '#' → logprob: -6.246946811676025
    9. '_j' → logprob: -6.371946811676025
    10. ' tuy' → logprob: -6.621946811676025

Token 1978: 'aux' (ID: 5454)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.4119983911514282
    2. 'pes' → logprob: -1.7869983911514282
    3. 'b' → logprob: -2.0369982719421387
    4. 'p' → logprob: -2.1619982719421387
    5. 'pipes' → logprob: -2.1619982719421387
    6. ']' → logprob: -3.4119982719421387
    7. 'n' → logprob: -3.6619982719421387
    8. 'bes' → logprob: -3.7869982719421387
    9. '```' → logprob: -3.7869982719421387
    10. 's' → logprob: -4.161998271942139

Token 1979: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1888987421989441
    2. 's' → logprob: -3.188898801803589
    3. ')' → logprob: -3.438898801803589
    4. '[n' → logprob: -3.813898801803589
    5. '[' → logprob: -4.06389856338501
    6. ' +' → logprob: -4.93889856338501
    7. ' =' → logprob: -5.06389856338501
    8. '_' → logprob: -5.31389856338501
    9. ',' → logprob: -5.43889856338501
    10. '```' → logprob: -5.56389856338501

Token 1980: 'fix' (ID: 11853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4421592354774475
    2. 'p' → logprob: -1.9421591758728027
    3. ')
' → logprob: -2.1921591758728027
    4. 'n' → logprob: -3.0671591758728027
    5. '   ' → logprob: -4.567159175872803
    6. 't' → logprob: -4.817159175872803
    7. '),' → logprob: -5.192159175872803
    8. ',' → logprob: -5.567159175872803
    9. ').' → logprob: -5.567159175872803
    10. '#' → logprob: -5.692159175872803

Token 1981: 'e' (ID: 68)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6649689078330994
    2. 'é' → logprob: -1.4149689674377441
    3. 'e' → logprob: -2.664968967437744
    4. ']' → logprob: -3.789968967437744
    5. '#' → logprob: -3.914968967437744
    6. 'n' → logprob: -4.164968967437744
    7. 'és' → logprob: -4.164968967437744
    8. '=' → logprob: -4.164968967437744
    9. ')n' → logprob: -4.539968967437744
    10. 'ation' → logprob: -5.039968967437744

Token 1982: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016929050907492638
    2. '   ' → logprob: -4.8919291496276855
    3. ')
' → logprob: -5.1419291496276855
    4. ',' → logprob: -7.5169291496276855
    5. '+' → logprob: -7.7669291496276855
    6. ' +' → logprob: -7.7669291496276855
    7. ' )' → logprob: -7.7669291496276855
    8. 'n' → logprob: -8.266928672790527
    9. '=' → logprob: -8.641928672790527
    10. 's' → logprob: -8.891928672790527

Token 1983: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6412981748580933
    2. '   ' → logprob: -0.7662981748580933
    3. ' n' → logprob: -5.766298294067383
    4. 'def' → logprob: -5.891298294067383
    5. '#' → logprob: -6.516298294067383
    6. 'j' → logprob: -8.016298294067383
    7. '```' → logprob: -8.641298294067383
    8. '    ' → logprob: -9.391298294067383
    9. ')' → logprob: -9.391298294067383
    10. 'import' → logprob: -9.766298294067383

Token 1984: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21618075668811798
    2. 'n' → logprob: -2.2161808013916016
    3. '#' → logprob: -3.0911808013916016
    4. ' n' → logprob: -3.5911808013916016
    5. ' #' → logprob: -5.716180801391602
    6. ' la' → logprob: -5.966180801391602
    7. ' les' → logprob: -6.716180801391602
    8. 'j' → logprob: -6.841180801391602
    9. '(n' → logprob: -6.841180801391602
    10. 'def' → logprob: -7.466180801391602

Token 1985: ' somme' (ID: 64484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5891304016113281
    2. '#' → logprob: -2.214130401611328
    3. 'j' → logprob: -2.214130401611328
    4. '   ' → logprob: -2.714130401611328
    5. 'def' → logprob: -2.964130401611328
    6. ' n' → logprob: -3.714130401611328
    7. 'sum' → logprob: -3.714130401611328
    8. ' joints' → logprob: -3.964130401611328
    9. 's' → logprob: -5.089130401611328
    10. ' #' → logprob: -5.339130401611328

Token 1986: ' des' (ID: 731)
  Prédit: '_des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_des' → logprob: -0.8338013291358948
    2. 'des' → logprob: -0.9588013291358948
    3. '_j' → logprob: -2.08380126953125
    4. '_' → logprob: -3.95880126953125
    5. '_tot' → logprob: -4.45880126953125
    6. '_total' → logprob: -5.08380126953125
    7. ' =' → logprob: -5.20880126953125
    8. '_of' → logprob: -5.95880126953125
    9. '```' → logprob: -6.45880126953125
    10. 'tot' → logprob: -6.58380126953125

Token 1987: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.021980492398142815
    2. ' joints' → logprob: -4.146980285644531
    3. '_j' → logprob: -5.521980285644531
    4. 'joint' → logprob: -7.521980285644531
    5. '   ' → logprob: -8.271980285644531
    6. 'joins' → logprob: -8.271980285644531
    7. '#' → logprob: -8.771980285644531
    8. ' j' → logprob: -9.396980285644531
    9. '\n' → logprob: -9.396980285644531
    10. 'join' → logprob: -9.771980285644531

Token 1988: ' utilisés' (ID: 94258)
  Prédit: '_util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.7576292157173157
    2. '_used' → logprob: -0.8826292157173157
    3. '_' → logprob: -3.007629156112671
    4. 'util' → logprob: -3.382629156112671
    5. 'used' → logprob: -4.88262939453125
    6. ' =' → logprob: -5.25762939453125
    7. '+' → logprob: -5.63262939453125
    8. ' utilisés' → logprob: -5.63262939453125
    9. ')' → logprob: -6.13262939453125
    10. '```' → logprob: -7.00762939453125

Token 1989: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0578577518463135
    2. ' =' → logprob: -1.8078577518463135
    3. ' +' → logprob: -1.9328577518463135
    4. '+' → logprob: -2.4328577518463135
    5. '<|end|>' → logprob: -2.4328577518463135
    6. '[' → logprob: -3.6828577518463135
    7. '   ' → logprob: -3.9328577518463135
    8. '=' → logprob: -4.057857513427734
    9. '[j' → logprob: -4.307857513427734
    10. '<|end|>' → logprob: -4.432857513427734

Token 1990: ' la' (ID: 557)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.27603235840797424
    2. 'sum' → logprob: -2.0260324478149414
    3. ' j' → logprob: -2.9010324478149414
    4. 'j' → logprob: -4.026032447814941
    5. '0' → logprob: -4.526032447814941
    6. ' joints' → logprob: -4.651032447814941
    7. ' ' → logprob: -5.526032447814941
    8. ' s' → logprob: -6.026032447814941
    9. ' somme' → logprob: -6.526032447814941
    10. 's' → logprob: -6.651032447814941

Token 1991: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.32013899087905884
    2. 's' → logprob: -2.070138931274414
    3. ' sum' → logprob: -2.320138931274414
    4. ' somme' → logprob: -3.570138931274414
    5. 'j' → logprob: -5.320138931274414
    6. 'max' → logprob: -5.945138931274414
    7. ' j' → logprob: -6.070138931274414
    8. 'total' → logprob: -6.320138931274414
    9. 'joint' → logprob: -6.695138931274414
    10. 'som' → logprob: -6.695138931274414

Token 1992: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.4641358852386475
    2. '_j' → logprob: -1.4641358852386475
    3. '+' → logprob: -1.5891358852386475
    4. ' des' → logprob: -2.2141358852386475
    5. '_' → logprob: -2.3391358852386475
    6. '_des' → logprob: -2.5891358852386475
    7. ' +' → logprob: -3.8391358852386475
    8. '[j' → logprob: -4.964136123657227
    9. '   ' → logprob: -5.339136123657227
    10. '+j' → logprob: -5.589136123657227

Token 1993: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05816445127129555
    2. ' joints' → logprob: -3.558164358139038
    3. ' j' → logprob: -4.058164596557617
    4. '_j' → logprob: -5.683164596557617
    5. 'joint' → logprob: -6.558164596557617
    6. '[j' → logprob: -7.058164596557617
    7. 'joins' → logprob: -7.183164596557617
    8. ' used' → logprob: -7.433164596557617
    9. 'join' → logprob: -7.808164596557617
    10. 's' → logprob: -7.933164596557617

Token 1994: ' qui' (ID: 2780)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.109824299812317
    2. '   ' → logprob: -1.359824299812317
    3. '[' → logprob: -1.734824299812317
    4. '[i' → logprob: -2.6098241806030273
    5. '_util' → logprob: -2.8598241806030273
    6. '_used' → logprob: -2.9848241806030273
    7. '```' → logprob: -4.109824180603027
    8. '_' → logprob: -5.484824180603027
    9. 'util' → logprob: -5.609824180603027
    10. '[:]' → logprob: -5.609824180603027

Token 1995: ' ne' (ID: 453)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8529221415519714
    2. ' sont' → logprob: -0.9779221415519714
    3. ' are' → logprob: -3.227922201156616
    4. 'are' → logprob: -3.602922201156616
    5. '+' → logprob: -3.727922201156616
    6. '```' → logprob: -4.352921962738037
    7. 'ont' → logprob: -4.602921962738037
    8. 'preced' → logprob: -4.852921962738037
    9. 'contin' → logprob: -4.977921962738037
    10. '#' → logprob: -5.227921962738037

Token 1996: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.7964918613433838
    2. 's' → logprob: -0.9214918613433838
    3. '#' → logprob: -2.671491861343384
    4. ' are' → logprob: -3.796491861343384
    5. ' #' → logprob: -3.796491861343384
    6. 'cut' → logprob: -4.296491622924805
    7. ' coup' → logprob: -4.921491622924805
    8. 'cou' → logprob: -5.796491622924805
    9. 'pas' → logprob: -6.421491622924805
    10. ' cut' → logprob: -6.546491622924805

Token 1997: ' pas' (ID: 2173)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -1.1333492994308472
    2. ' coup' → logprob: -1.3833492994308472
    3. 'pas' → logprob: -1.7583492994308472
    4. 'c' → logprob: -2.6333494186401367
    5. '#' → logprob: -3.2583494186401367
    6. '\n' → logprob: -3.6333494186401367
    7. 'used' → logprob: -3.6333494186401367
    8. 'util' → logprob: -4.008349418640137
    9. '```' → logprob: -4.008349418640137
    10. 'cut' → logprob: -4.258349418640137

Token 1998: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3823543190956116
    2. ' coup' → logprob: -2.007354259490967
    3. 'cou' → logprob: -2.757354259490967
    4. 'util' → logprob: -3.132354259490967
    5. 'cut' → logprob: -3.882354259490967
    6. 'used' → logprob: -4.882354259490967
    7. '#' → logprob: -5.132354259490967
    8. 'b' → logprob: -5.507354259490967
    9. ' utilisés' → logprob: -5.507354259490967
    10. 's' → logprob: -5.632354259490967

Token 1999: '   ' (ID: 271)
  Prédit: ' coup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coup' → logprob: -0.9250741004943848
    2. '#' → logprob: -1.6750741004943848
    3. ' utilisés' → logprob: -1.6750741004943848
    4. 'util' → logprob: -2.9250741004943848
    5. 'c' → logprob: -2.9250741004943848
    6. '```' → logprob: -3.6750741004943848
    7. '   ' → logprob: -4.050074100494385
    8. 'cou' → logprob: -4.050074100494385
    9. ' #' → logprob: -5.300074100494385
    10. 'd' → logprob: -5.675074100494385

Token 2000: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3734091520309448
    2. 'c' → logprob: -1.9984091520309448
    3. ' coup' → logprob: -2.8734092712402344
    4. 'cou' → logprob: -3.2484092712402344
    5. 'pas' → logprob: -3.4984092712402344
    6. 'util' → logprob: -4.373409271240234
    7. '   ' → logprob: -4.998409271240234
    8. ' #' → logprob: -5.123409271240234
    9. 'cut' → logprob: -5.873409271240234
    10. '\n' → logprob: -5.873409271240234

Token 2001: ' coup' (ID: 25465)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8841432332992554
    2. 'c' → logprob: -1.5091432332992554
    3. 'cou' → logprob: -1.6341432332992554
    4. 'util' → logprob: -2.259143352508545
    5. 'used' → logprob: -4.009143352508545
    6. 'cut' → logprob: -4.134143352508545
    7. '```' → logprob: -4.884143352508545
    8. ' coup' → logprob: -5.009143352508545
    9. '
' → logprob: -5.509143352508545
    10. 'cass' → logprob: -5.634143352508545

Token 2002: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.3104621171951294
    2. 'é' → logprob: -1.6854621171951294
    3. 'ées' → logprob: -2.93546199798584
    4. 'es' → logprob: -4.31046199798584
    5. 'ée' → logprob: -4.68546199798584
    6. '#' → logprob: -6.56046199798584
    7. 'e' → logprob: -6.81046199798584
    8. '_' → logprob: -6.93546199798584
    9. 's' → logprob: -7.06046199798584
    10. 'u' → logprob: -8.31046199798584

Token 2003: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10343728959560394
    2. 'n' → logprob: -3.3534371852874756
    3. 'def' → logprob: -3.4784371852874756
    4. '```' → logprob: -4.603437423706055
    5. '(n' → logprob: -4.853437423706055
    6. 's' → logprob: -6.353437423706055
    7. '
' → logprob: -6.478437423706055
    8. ')' → logprob: -6.603437423706055
    9. ')
' → logprob: -6.978437423706055
    10. '[n' → logprob: -7.353437423706055

Token 2004: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02881312184035778
    2. 'n' → logprob: -4.278812885284424
    3. 'def' → logprob: -4.403812885284424
    4. '    
' → logprob: -7.528812885284424
    5. '(n' → logprob: -7.653812885284424
    6. '```' → logprob: -7.653812885284424
    7. 'import' → logprob: -7.903812885284424
    8. '
' → logprob: -8.653813362121582
    9. ' n' → logprob: -9.903813362121582
    10. '\' → logprob: -10.028813362121582

Token 2005: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05114796385169029
    2. 'n' → logprob: -3.051147937774658
    3. 'def' → logprob: -6.551147937774658
    4. '    
' → logprob: -7.801147937774658
    5. '(n' → logprob: -8.551148414611816
    6. '
' → logprob: -9.176148414611816
    7. '\n' → logprob: -9.551148414611816
    8. '\' → logprob: -9.676148414611816
    9. '```' → logprob: -9.801148414611816
    10. 'import' → logprob: -10.051148414611816

Token 2006: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10264766216278076
    2. 'n' → logprob: -2.3526477813720703
    3. 'def' → logprob: -6.10264778137207
    4. '    
' → logprob: -9.10264778137207
    5. '```' → logprob: -10.72764778137207
    6. '(n' → logprob: -11.10264778137207
    7. ' n' → logprob: -11.22764778137207
    8. 'import' → logprob: -11.35264778137207
    9. '
' → logprob: -11.60264778137207
    10. '	n' → logprob: -11.97764778137207

Token 2007: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5260555148124695
    2. 'n' → logprob: -0.9010555148124695
    3. 'def' → logprob: -5.901055335998535
    4. '    
' → logprob: -9.651055335998535
    5. '```' → logprob: -10.026055335998535
    6. ' n' → logprob: -10.526055335998535
    7. 'import' → logprob: -10.651055335998535
    8. '	n' → logprob: -11.276055335998535
    9. '#' (adapté à ' #') → logprob: -12.151055335998535
    10. '(n' → logprob: -12.651055335998535

Token 2008: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2827228605747223
    2. 'n' → logprob: -1.4077228307724
    3. 'def' → logprob: -6.5327229499816895
    4. '```' → logprob: -10.157722473144531
    5. '    
' → logprob: -10.282722473144531
    6. ' n' → logprob: -10.907722473144531
    7. '(n' → logprob: -11.907722473144531
    8. '	n' → logprob: -12.032722473144531
    9. '
' → logprob: -12.157722473144531
    10. '#' → logprob: -13.782722473144531

Token 2009: ' peut' (ID: 9216)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9876288771629333
    2. '=' → logprob: -1.3626289367675781
    3. '   ' → logprob: -1.9876289367675781
    4. 'def' → logprob: -2.237628936767578
    5. 'n' → logprob: -2.737628936767578
    6. '_j' → logprob: -4.487628936767578
    7. ':' → logprob: -4.612628936767578
    8. 'j' → logprob: -4.987628936767578
    9. '_' → logprob: -5.362628936767578
    10. '#' → logprob: -5.487628936767578

Token 2010: ' reform' (ID: 20257)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.238418698310852
    2. 'continue' → logprob: -1.363418698310852
    3. 'n' → logprob: -1.863418698310852
    4. '=' → logprob: -2.2384185791015625
    5. ' =' → logprob: -2.6134185791015625
    6. 'range' → logprob: -3.4884185791015625
    7. ' continue' → logprob: -4.1134185791015625
    8. '   ' → logprob: -4.8634185791015625
    9. ' continuer' → logprob: -4.8634185791015625
    10. ' n' → logprob: -5.1134185791015625

Token 2011: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.9470656514167786
    2. 'def' → logprob: -1.1970655918121338
    3. '#' → logprob: -2.572065591812134
    4. 'er' → logprob: -3.072065591812134
    5. 'm' → logprob: -3.697065591812134
    6. 'ule' → logprob: -3.822065591812134
    7. ')' → logprob: -4.572065830230713
    8. 'érer' → logprob: -4.697065830230713
    9. 'al' → logprob: -4.822065830230713
    10. 'n' → logprob: -4.947065830230713

Token 2012: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1958102136850357
    2. '(n' → logprob: -2.695810317993164
    3. 'def' → logprob: -3.320810317993164
    4. 'n' → logprob: -4.445810317993164
    5. ' =' → logprob: -4.445810317993164
    6. '(
' → logprob: -4.570810317993164
    7. ':' → logprob: -4.570810317993164
    8. '=' → logprob: -5.695810317993164
    9. '\n' → logprob: -5.695810317993164
    10. '[n' → logprob: -5.695810317993164

Token 2013: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044703491032123566
    2. 'n' → logprob: -3.169703483581543
    3. 'def' → logprob: -6.919703483581543
    4. ' n' → logprob: -8.294703483581543
    5. '#' → logprob: -8.794703483581543
    6. '    
' → logprob: -9.169703483581543
    7. '```' → logprob: -10.169703483581543
    8. '(n' → logprob: -10.544703483581543
    9. '    ' → logprob: -10.669703483581543
    10. '
' → logprob: -11.044703483581543

Token 2014: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054614584892988205
    2. 'n' → logprob: -3.054614543914795
    3. ' n' → logprob: -6.304614543914795
    4. 'def' → logprob: -6.929614543914795
    5. '    
' → logprob: -7.054614543914795
    6. 'pass' → logprob: -7.179614543914795
    7. '(n' → logprob: -8.054615020751953
    8. '#' → logprob: -8.679615020751953
    9. ' pass' → logprob: -8.679615020751953
    10. '
' → logprob: -8.804615020751953

Token 2015: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11547838151454926
    2. 'def' → logprob: -2.990478277206421
    3. '#' → logprob: -3.365478277206421
    4. 'n' → logprob: -4.365478515625
    5. '```' → logprob: -5.240478515625
    6. '(n' → logprob: -5.740478515625
    7. ' n' → logprob: -7.240478515625
    8. '"' → logprob: -7.990478515625
    9. '#
' → logprob: -8.615478515625
    10. '`' → logprob: -8.615478515625

Token 2016: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3424873650074005
    2. 'n' → logprob: -1.8424873352050781
    3. 'def' → logprob: -2.717487335205078
    4. '#' (adapté à ' #') → logprob: -2.967487335205078
    5. ' n' → logprob: -5.842487335205078
    6. ' #' → logprob: -6.217487335205078
    7. '"' → logprob: -6.342487335205078
    8. '```' → logprob: -7.217487335205078
    9. ' def' → logprob: -7.342487335205078
    10. '(n' → logprob: -7.717487335205078

Token 2017: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2391526997089386
    2. '   ' → logprob: -1.8641526699066162
    3. '#' → logprob: -3.239152669906616
    4. 'def' → logprob: -4.239152908325195
    5. 'pass' → logprob: -6.614152908325195
    6. ' n' → logprob: -7.489152908325195
    7. 'S' → logprob: -7.614152908325195
    8. 'p' → logprob: -8.364152908325195
    9. 'total' → logprob: -8.739152908325195
    10. 'from' → logprob: -8.739152908325195

Token 2018: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27462729811668396
    2. '=' → logprob: -1.5246273279190063
    3. 'def' → logprob: -5.399627208709717
    4. '_' → logprob: -5.524627208709717
    5. ' n' → logprob: -5.524627208709717
    6. 's' → logprob: -6.274627208709717
    7. ' continue' → logprob: -6.649627208709717
    8. ' def' → logprob: -6.899627208709717
    9. 'n' → logprob: -7.149627208709717
    10. '[' → logprob: -7.524627208709717

Token 2019: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35959771275520325
    2. ' n' → logprob: -1.3595976829528809
    3. '   ' → logprob: -3.109597682952881
    4. '\n' → logprob: -9.484598159790039
    5. 'def' → logprob: -9.484598159790039
    6. ' ' → logprob: -9.609598159790039
    7. '	n' → logprob: -9.734598159790039
    8. '```' → logprob: -9.859598159790039
    9. ' =' → logprob: -10.234598159790039
    10. '[n' → logprob: -10.484598159790039

Token 2020: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0037949695251882076
    2. ' n' → logprob: -5.753795146942139
    3. ')' → logprob: -7.753795146942139
    4. '   ' → logprob: -8.75379467010498
    5. ')n' → logprob: -10.87879467010498
    6. ' ' → logprob: -13.62879467010498
    7. ' ' → logprob: -13.62879467010498
    8. ' )' → logprob: -13.62879467010498
    9. '_n' → logprob: -13.75379467010498
    10. '\n' → logprob: -14.00379467010498

Token 2021: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.163205862045288
    2. ' =' → logprob: -1.413205862045288
    3. ' -' → logprob: -1.788205862045288
    4. '=' → logprob: -1.788205862045288
    5. '-' → logprob: -2.788205862045288
    6. '_' → logprob: -4.163206100463867
    7. '#' → logprob: -4.538206100463867
    8. ',' → logprob: -5.038206100463867
    9. '   ' → logprob: -5.538206100463867
    10. '
' → logprob: -6.413206100463867

Token 2022: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29939377307891846
    2. ')' → logprob: -1.7993937730789185
    3. '=' → logprob: -3.174393653869629
    4. ' -' → logprob: -3.674393653869629
    5. ' =' → logprob: -4.674393653869629
    6. '1' → logprob: -4.924393653869629
    7. '#' → logprob: -5.424393653869629
    8. ',' → logprob: -7.049393653869629
    9. '−' → logprob: -7.299393653869629
    10. ')#' → logprob: -7.674393653869629

Token 2023: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013104226440191269
    2. ')
' → logprob: -6.138104438781738
    3. ',' → logprob: -6.513104438781738
    4. '-' → logprob: -6.763104438781738
    5. '#' → logprob: -7.138104438781738
    6. ' -' → logprob: -7.263104438781738
    7. ')#' → logprob: -7.263104438781738
    8. '   ' → logprob: -7.388104438781738
    9. '_j' → logprob: -7.513104438781738
    10. ']' → logprob: -7.638104438781738

Token 2024: ' joints' (ID: 47223)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.3213375508785248
    2. '_' → logprob: -2.4463374614715576
    3. 'j' → logprob: -2.4463374614715576
    4. ',' → logprob: -3.5713374614715576
    5. '   ' → logprob: -3.6963374614715576
    6. 'def' → logprob: -4.821337699890137
    7. '#' → logprob: -5.071337699890137
    8. ' =' → logprob: -5.321337699890137
    9. ' joints' → logprob: -5.446337699890137
    10. '_,' → logprob: -5.571337699890137

Token 2025: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1322285532951355
    2. ' =' → logprob: -3.2572286128997803
    3. ':' → logprob: -3.6322286128997803
    4. ',' → logprob: -3.7572286128997803
    5. '```' → logprob: -4.757228374481201
    6. 'def' → logprob: -5.382228374481201
    7. '
' → logprob: -5.757228374481201
    8. '=' → logprob: -6.007228374481201
    9. ')' → logprob: -6.257228374481201
    10. 'n' → logprob: -6.382228374481201

Token 2026: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07371822744607925
    2. '#' → logprob: -2.948718309402466
    3. 'j' → logprob: -5.323718070983887
    4. 'n' → logprob: -5.573718070983887
    5. ' #' → logprob: -5.948718070983887
    6. 'def' → logprob: -6.448718070983887
    7. ',' → logprob: -7.073718070983887
    8. ' n' → logprob: -7.198718070983887
    9. 'for' → logprob: -7.573718070983887
    10. '```' → logprob: -7.698718070983887

Token 2027: ' peut' (ID: 9216)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6362202167510986
    2. '=' → logprob: -1.0112202167510986
    3. ' veut' → logprob: -3.0112202167510986
    4. ' peut' → logprob: -4.3862199783325195
    5. 'pe' → logprob: -4.3862199783325195
    6. 'n' → logprob: -5.0112199783325195
    7. 's' → logprob: -5.6362199783325195
    8. ' n' → logprob: -5.7612199783325195
    9. '#' → logprob: -5.8862199783325195
    10. 'a' → logprob: -6.1362199783325195

Token 2028: ' choisir' (ID: 47004)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.044568516314029694
    2. ' choisir' → logprob: -3.9195685386657715
    3. 'choose' → logprob: -4.9195685386657715
    4. 'util' → logprob: -6.0445685386657715
    5. 'cut' → logprob: -6.0445685386657715
    6. 'd' → logprob: -6.1695685386657715
    7. '#' → logprob: -6.4195685386657715
    8. 'prendre' → logprob: -7.1695685386657715
    9. '```' → logprob: -7.1695685386657715
    10. 'cou' → logprob: -7.2945685386657715

Token 2029: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8372072577476501
    2. ' de' → logprob: -1.587207317352295
    3. 'de' → logprob: -1.837207317352295
    4. 'k' → logprob: -2.962207317352295
    5. 'c' → logprob: -3.712207317352295
    6. ' ' → logprob: -3.962207317352295
    7. 'i' → logprob: -4.587207317352295
    8. 'd' → logprob: -4.587207317352295
    9. ' k' → logprob: -4.712207317352295
    10. 'une' → logprob: -4.837207317352295

Token 2030: ' sous' (ID: 14487)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.8978394269943237
    2. 's' → logprob: -1.6478394269943237
    3. ' subset' → logprob: -2.2728395462036133
    4. '_' → logprob: -3.1478395462036133
    5. 'c' → logprob: -3.2728395462036133
    6. '`' → logprob: -3.5228395462036133
    7. 'cut' → logprob: -3.6478395462036133
    8. 'sub' → logprob: -3.8978395462036133
    9. '=' → logprob: -3.8978395462036133
    10. '```' → logprob: -4.522839546203613

Token 2031: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08465448766946793
    2. 'set' → logprob: -3.5846545696258545
    3. '-' → logprob: -4.959654331207275
    4. '_
' → logprob: -5.209654331207275
    5. '_array' → logprob: -5.209654331207275
    6. '\' → logprob: -5.459654331207275
    7. '
' → logprob: -5.459654331207275
    8. '=' → logprob: -5.584654331207275
    9. 'ensemble' → logprob: -5.709654331207275
    10. '   ' → logprob: -5.959654331207275

Token 2032: 'ensemble' (ID: 37301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4407902657985687
    2. 'ensemble' → logprob: -1.3157902956008911
    3. 'ense' → logprob: -3.3157901763916016
    4. ')' → logprob: -4.315790176391602
    5. '#' → logprob: -4.440790176391602
    6. '
' → logprob: -4.940790176391602
    7. '_
' → logprob: -5.565790176391602
    8. ' _' → logprob: -5.690790176391602
    9. 'subset' → logprob: -6.190790176391602
    10. '=' → logprob: -6.565790176391602

Token 2033: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.434396505355835
    2. '_' → logprob: -1.559396505355835
    3. 'des' → logprob: -1.809396505355835
    4. '```' → logprob: -2.184396505355835
    5. '_des' → logprob: -2.809396505355835
    6. ')' → logprob: -2.934396505355835
    7. ' de' → logprob: -3.684396505355835
    8. '   ' → logprob: -3.934396505355835
    9. 'de' → logprob: -4.059396743774414
    10. '
' → logprob: -4.059396743774414

Token 2034: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1545942723751068
    2. '_j' → logprob: -2.0295941829681396
    3. '_' → logprob: -5.279594421386719
    4. ' joints' → logprob: -6.154594421386719
    5. 'joint' → logprob: -7.029594421386719
    6. 'joins' → logprob: -7.529594421386719
    7. 'b' → logprob: -7.904594421386719
    8. 'n' → logprob: -8.279594421386719
    9. ' j' → logprob: -8.279594421386719
    10. '\' → logprob: -8.404594421386719

Token 2035: ' à' (ID: 1221)
  Prédit: '_util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.6573837995529175
    2. '_used' → logprob: -1.5323837995529175
    3. ' à' → logprob: -2.657383918762207
    4. '_' → logprob: -2.782383918762207
    5. '   ' → logprob: -3.532383918762207
    6. 'à' → logprob: -3.532383918762207
    7. '```' → logprob: -4.657383918762207
    8. 'util' → logprob: -4.907383918762207
    9. ')' → logprob: -5.157383918762207
    10. '[' → logprob: -5.282383918762207

Token 2036: ' couper' (ID: 135212)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.09196201711893082
    2. 'cou' → logprob: -2.9669620990753174
    3. ' utiliser' → logprob: -3.9669620990753174
    4. 'c' → logprob: -4.716961860656738
    5. 'act' → logprob: -6.091961860656738
    6. ' couper' → logprob: -6.591961860656738
    7. 'cut' → logprob: -6.716961860656738
    8. '1' → logprob: -7.091961860656738
    9. ''utiliser' → logprob: -7.466961860656738
    10. '```' → logprob: -8.091961860656738

Token 2037: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7110632658004761
    2. ':' → logprob: -1.836063265800476
    3. ',' → logprob: -2.7110633850097656
    4. ' =' → logprob: -2.8360633850097656
    5. ')' → logprob: -2.9610633850097656
    6. '```' → logprob: -2.9610633850097656
    7. '.' → logprob: -3.5860633850097656
    8. '[' → logprob: -4.086063385009766
    9. '=' → logprob: -4.586063385009766
    10. ']' → logprob: -4.961063385009766

Token 2038: ' pas' (ID: 2173)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -1.02908194065094
    2. 'à' → logprob: -1.40408194065094
    3. '#' → logprob: -2.0290818214416504
    4. 'pas' → logprob: -2.2790818214416504
    5. 'non' → logprob: -2.4040818214416504
    6. 'not' → logprob: -3.1540818214416504
    7. '```' → logprob: -4.77908182144165
    8. 'util' → logprob: -5.40408182144165
    9. 'lais' → logprob: -5.65408182144165
    10. 'n' → logprob: -6.02908182144165

Token 2039: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2736237943172455
    2. '(n' → logprob: -2.2736237049102783
    3. ':' → logprob: -2.6486237049102783
    4. ',' → logprob: -4.648623943328857
    5. 'n' → logprob: -4.898623943328857
    6. ' =' → logprob: -5.023623943328857
    7. ')' → logprob: -5.273623943328857
    8. 'def' → logprob: -5.273623943328857
    9. '(' → logprob: -5.523623943328857
    10. '.' → logprob: -5.523623943328857

Token 2040: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010299584828317165
    2. ')' → logprob: -6.0102996826171875
    3. 'n' → logprob: -6.0102996826171875
    4. ':' → logprob: -6.2602996826171875
    5. 'def' → logprob: -6.8852996826171875
    6. '(n' → logprob: -8.135299682617188
    7. '):' → logprob: -8.260299682617188
    8. ',' → logprob: -8.385299682617188
    9. 'j' → logprob: -8.760299682617188
    10. '    
' → logprob: -8.885299682617188

Token 2041: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01844220981001854
    2. 'n' → logprob: -4.268442153930664
    3. '(n' → logprob: -6.768442153930664
    4. 'def' → logprob: -6.768442153930664
    5. '```' → logprob: -7.268442153930664
    6. ' n' → logprob: -8.768442153930664
    7. ',' → logprob: -8.893442153930664
    8. '\' → logprob: -9.018442153930664
    9. '    
' → logprob: -9.018442153930664
    10. ':' → logprob: -9.018442153930664

Token 2042: ' Cho' (ID: 14207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043550919741392136
    2. 'n' → logprob: -3.918550968170166
    3. '(n' → logprob: -4.918550968170166
    4. '\n' → logprob: -5.793550968170166
    5. '\' → logprob: -5.918550968170166
    6. ':' → logprob: -6.043550968170166
    7. '```' → logprob: -6.668550968170166
    8. 'def' → logprob: -6.793550968170166
    9. '(' → logprob: -7.043550968170166
    10. '    
' → logprob: -7.418550968170166

Token 2043: 'isir' (ID: 104403)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7246888875961304
    2. 'ices' → logprob: -1.3496888875961304
    3. 'i' → logprob: -2.72468900680542
    4. '   ' → logprob: -2.84968900680542
    5. 's' → logprob: -3.22468900680542
    6. 'ice' → logprob: -3.97468900680542
    7. 'ise' → logprob: -4.59968900680542
    8. 'ix' → logprob: -4.97468900680542
    9. '```' → logprob: -5.09968900680542
    10. 'ose' → logprob: -5.34968900680542

Token 2044: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1862536072731018
    2. ' ' → logprob: -3.811253547668457
    3. 'de' → logprob: -3.811253547668457
    4. '   ' → logprob: -4.311253547668457
    5. ' =' → logprob: -4.436253547668457
    6. ' des' → logprob: -4.436253547668457
    7. ' un' → logprob: -4.561253547668457
    8. '_' → logprob: -4.561253547668457
    9. '=' → logprob: -4.686253547668457
    10. 'un' → logprob: -4.936253547668457

Token 2045: ' couper' (ID: 135212)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.2586929500102997
    2. 'ne' → logprob: -1.758692979812622
    3. ' couper' → logprob: -3.383692979812622
    4. 'cou' → logprob: -4.758692741394043
    5. 'cut' → logprob: -4.883692741394043
    6. ' cut' → logprob: -6.133692741394043
    7. ' les' → logprob: -6.758692741394043
    8. 'les' → logprob: -6.883692741394043
    9. ' cou' → logprob: -8.383692741394043
    10. '#' → logprob: -8.758692741394043

Token 2046: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8521355986595154
    2. '=' → logprob: -2.22713565826416
    3. ' entre' → logprob: -2.35213565826416
    4. ' ou' → logprob: -2.72713565826416
    5. 'between' → logprob: -3.10213565826416
    6. 'entre' → logprob: -3.35213565826416
    7. ' ' → logprob: -3.47713565826416
    8. ' between' → logprob: -3.72713565826416
    9. ')' → logprob: -3.72713565826416
    10. ' =' → logprob: -3.85213565826416

Token 2047: ' i' (ID: 575)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5108765959739685
    2. ' i' → logprob: -1.8858766555786133
    3. 'i' → logprob: -2.2608766555786133
    4. ' ' → logprob: -3.3858766555786133
    5. 'n' → logprob: -3.8858766555786133
    6. ' l' → logprob: -4.635876655578613
    7. 'l' → logprob: -4.760876655578613
    8. '[i' → logprob: -4.885876655578613
    9. ' la' → logprob: -5.260876655578613
    10. 'c' → logprob: -5.260876655578613

Token 2048: ' signifie' (ID: 81149)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6183090209960938
    2. ')' → logprob: -1.1183090209960938
    3. '=' → logprob: -2.9933090209960938
    4. '[i' → logprob: -3.9933090209960938
    5. ',' → logprob: -4.118309020996094
    6. ']' → logprob: -4.493309020996094
    7. ' =' → logprob: -4.868309020996094
    8. ' _' → logprob: -4.993309020996094
    9. '[' → logprob: -5.493309020996094
    10. ' ' → logprob: -5.868309020996094

Token 2049: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8429656624794006
    2. ''' → logprob: -1.9679656028747559
    3. '<|end|>' → logprob: -2.092965602874756
    4. '"' → logprob: -2.717965602874756
    5. '_' → logprob: -2.967965602874756
    6. ' not' → logprob: -3.467965602874756
    7. ' ' → logprob: -3.717965602874756
    8. ' True' → logprob: -3.717965602874756
    9. ' i' → logprob: -3.842965602874756
    10. ' (' → logprob: -4.342965602874756

Token 2050: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.16897714138031006
    2. 'i' → logprob: -3.4189772605895996
    3. ' i' → logprob: -3.5439772605895996
    4. 'on' → logprob: -3.7939772605895996
    5. ' le' → logprob: -4.5439772605896
    6. ''on' → logprob: -4.5439772605896
    7. ' la' → logprob: -4.7939772605896
    8. '_' → logprob: -4.9189772605896
    9. ' ' → logprob: -5.1689772605896
    10. ' l' → logprob: -5.4189772605896

Token 2051: ' segment' (ID: 14806)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2400356531143188
    2. ' joint' → logprob: -1.2400356531143188
    3. ' i' → logprob: -1.2400356531143188
    4. ' ' → logprob: -3.8650355339050293
    5. 'joint' → logprob: -3.8650355339050293
    6. '_' → logprob: -3.9900355339050293
    7. ')' → logprob: -4.490035533905029
    8. '[i' → logprob: -4.740035533905029
    9. '#' → logprob: -4.740035533905029
    10. 'j' → logprob: -4.865035533905029

Token 2052: ' s' (ID: 265)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.513580322265625
    2. '_' → logprob: -2.138580322265625
    3. ' i' → logprob: -3.013580322265625
    4. ' est' → logprob: -3.138580322265625
    5. 'i' → logprob: -3.263580322265625
    6. 's' → logprob: -3.513580322265625
    7. ' _' → logprob: -3.513580322265625
    8. '   ' → logprob: -3.763580322265625
    9. ' =' → logprob: -4.638580322265625
    10. '[' → logprob: -4.763580322265625

Token 2053: ''arr' (ID: 49695)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11302631348371506
    2. 'era' → logprob: -3.2380263805389404
    3. 'er' → logprob: -4.238026142120361
    4. 'i' → logprob: -4.613026142120361
    5. ''' → logprob: -5.113026142120361
    6. '[i' → logprob: -5.363026142120361
    7. ''agit' → logprob: -5.738026142120361
    8. ''est' → logprob: -5.988026142120361
    9. 'éra' → logprob: -5.988026142120361
    10. ' =' → logprob: -5.988026142120361

Token 2054: 'ête' (ID: 16808)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0438302755355835
    2. 't' → logprob: -1.4188302755355835
    3. 'a' → logprob: -2.543830394744873
    4. 'er' → logprob: -2.668830394744873
    5. 'êt' → logprob: -2.668830394744873
    6. 'i' → logprob: -3.043830394744873
    7. 'ête' → logprob: -3.418830394744873
    8. 'et' → logprob: -3.793830394744873
    9. 'ê' → logprob: -4.293830394744873
    10. 'ait' → logprob: -4.293830394744873

Token 2055: ' en' (ID: 469)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8196890950202942
    2. '[i' → logprob: -1.0696890354156494
    3. 'à' → logprob: -2.6946890354156494
    4. 'i' → logprob: -3.8196890354156494
    5. ' i' → logprob: -3.8196890354156494
    6. '_' → logprob: -3.9446890354156494
    7. 'au' → logprob: -4.3196892738342285
    8. ' =' → logprob: -4.5696892738342285
    9. '   ' → logprob: -4.8196892738342285
    10. '=' → logprob: -5.0696892738342285

Token 2056: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47556689381599426
    2. ' i' → logprob: -0.9755668640136719
    3. ' ' → logprob: -6.975566864013672
    4. '[i' → logprob: -8.850566864013672
    5. '   ' → logprob: -9.600566864013672
    6. 'l' → logprob: -9.975566864013672
    7. ' la' → logprob: -10.225566864013672
    8. '`' → logprob: -10.350566864013672
    9. ' l' → logprob: -10.350566864013672
    10. ' =' → logprob: -10.600566864013672

Token 2057: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013376560993492603
    2. '[' → logprob: -5.013376712799072
    3. 'i' → logprob: -5.138376712799072
    4. ']' → logprob: -8.013376235961914
    5. '   ' → logprob: -8.263376235961914
    6. '[
' → logprob: -9.263376235961914
    7. '][' → logprob: -10.763376235961914
    8. '\[' → logprob: -11.013376235961914
    9. ' i' → logprob: -11.888376235961914
    10. '```' → logprob: -12.138376235961914

Token 2058: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14494860172271729
    2. '+' → logprob: -2.2699484825134277
    3. '])' → logprob: -4.019948482513428
    4. ')' → logprob: -5.644948482513428
    5. '   ' → logprob: -5.894948482513428
    6. ' +' → logprob: -6.269948482513428
    7. ' ]' → logprob: -6.394948482513428
    8. ']+' → logprob: -6.769948482513428
    9. ')]' → logprob: -7.894948482513428
    10. '-' → logprob: -8.269948959350586

Token 2059: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.283429354429245
    2. '#' → logprob: -2.2834293842315674
    3. '"' → logprob: -2.7834293842315674
    4. ' #' → logprob: -3.4084293842315674
    5. ' i' → logprob: -3.7834293842315674
    6. ''' → logprob: -4.908429145812988
    7. 'i' → logprob: -6.033429145812988
    8. ' ' → logprob: -6.033429145812988
    9. ' et' → logprob: -6.283429145812988
    10. ' "' → logprob: -6.533429145812988

Token 2060: ' un' (ID: 537)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7810667753219604
    2. 'on' → logprob: -1.9060667753219604
    3. ' chois' → logprob: -2.03106689453125
    4. 'p' → logprob: -3.15606689453125
    5. ' la' → logprob: -3.28106689453125
    6. 'cho' → logprob: -3.28106689453125
    7. ' le' → logprob: -3.65606689453125
    8. ' p' → logprob: -4.15606689453125
    9. 'le' → logprob: -4.65606689453125
    10. ' i' → logprob: -4.90606689453125

Token 2061: ' nouveau' (ID: 23184)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.639947235584259
    2. ' ' → logprob: -2.3899471759796143
    3. 'e' → logprob: -3.0149471759796143
    4. 't' → logprob: -3.2649471759796143
    5. 'n' → logprob: -3.7649471759796143
    6. 'u' → logprob: -3.8899471759796143
    7. '`' → logprob: -3.8899471759796143
    8. 'space' → logprob: -3.8899471759796143
    9. ''' → logprob: -4.139947414398193
    10. ')' → logprob: -4.264947414398193

Token 2062: ' segment' (ID: 14806)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03963756933808327
    2. ' _' → logprob: -3.914637565612793
    3. ' ' → logprob: -5.539637565612793
    4. ' segment' → logprob: -5.914637565612793
    5. 'segment' → logprob: -6.164637565612793
    6. ')' → logprob: -6.664637565612793
    7. ' espace' → logprob: -6.664637565612793
    8. '_segment' → logprob: -6.914637565612793
    9. '_cut' → logprob: -6.914637565612793
    10. ' ' → logprob: -7.039637565612793

Token 2063: ' commence' (ID: 44755)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8883943557739258
    2. '   ' → logprob: -1.3883943557739258
    3. '[i' → logprob: -2.013394355773926
    4. ' _' → logprob: -3.513394355773926
    5. ')' → logprob: -3.638394355773926
    6. 'i' → logprob: -3.763394355773926
    7. '(i' → logprob: -4.013394355773926
    8. ' est' → logprob: -4.263394355773926
    9. '```' → logprob: -4.263394355773926
    10. '_i' → logprob: -4.638394355773926

Token 2064: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6754494905471802
    2. '   ' → logprob: -1.0504494905471802
    3. 'à' → logprob: -2.0504493713378906
    4. ' =' → logprob: -5.425449371337891
    5. ' ' → logprob: -5.675449371337891
    6. '=' → logprob: -7.050449371337891
    7. '```' → logprob: -7.175449371337891
    8. 'au' → logprob: -7.800449371337891
    9. ' après' → logprob: -8.17544937133789
    10. '    ' → logprob: -8.17544937133789

Token 2065: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9789412617683411
    2. ' p' → logprob: -1.3539412021636963
    3. ' i' → logprob: -1.3539412021636963
    4. 'p' → logprob: -2.2289412021636963
    5. ' ' → logprob: -9.478940963745117
    6. ' ' → logprob: -10.228940963745117
    7. 'l' → logprob: -11.103940963745117
    8. '   ' → logprob: -11.228940963745117
    9. '[i' → logprob: -11.353940963745117
    10. ' la' → logprob: -11.603940963745117

Token 2066: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020973898062948138
    2. '[' → logprob: -8.75020980834961
    3. 'i' → logprob: -10.00020980834961
    4. '   ' → logprob: -12.87520980834961
    5. '```' → logprob: -14.00020980834961
    6. '[j' → logprob: -14.37520980834961
    7. ' [' → logprob: -14.87520980834961
    8. '[
' → logprob: -14.87520980834961
    9. '`' → logprob: -15.62520980834961
    10. '
' → logprob: -15.75020980834961

Token 2067: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00611270172521472
    2. '[i' → logprob: -5.881112575531006
    3. ' +' → logprob: -6.131112575531006
    4. ']' → logprob: -7.631112575531006
    5. '   ' → logprob: -8.006113052368164
    6. '[' → logprob: -8.881113052368164
    7. '+
' → logprob: -10.006113052368164
    8. ']+' → logprob: -10.506113052368164
    9. '```' → logprob: -11.131113052368164
    10. '+]' → logprob: -11.256113052368164

Token 2068: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04067807272076607
    2. '1' → logprob: -3.290678024291992
    3. ']' → logprob: -6.415678024291992
    4. ' +' → logprob: -7.540678024291992
    5. ']+' → logprob: -8.040678024291992
    6. '+]' → logprob: -10.290678024291992
    7. '```' → logprob: -10.915678024291992
    8. 'i' → logprob: -10.915678024291992
    9. ' ' → logprob: -11.040678024291992
    10. ')' → logprob: -11.540678024291992

Token 2069: '].
' (ID: 49887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30561602115631104
    2. '])' → logprob: -1.930616021156311
    3. ']' → logprob: -2.1806159019470215
    4. '   ' → logprob: -7.0556159019470215
    5. ')
' → logprob: -7.4306159019470215
    6. '[' → logprob: -7.6806159019470215
    7. '#' → logprob: -7.8056159019470215
    8. '.' → logprob: -7.8056159019470215
    9. '）' → logprob: -7.8056159019470215
    10. '[i' → logprob: -8.18061637878418

Token 2070: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016574477776885033
    2. 'def' → logprob: -7.376657485961914
    3. '```' → logprob: -8.376657485961914
    4. '    
' → logprob: -8.501657485961914
    5. '
' → logprob: -8.751657485961914
    6. 'n' → logprob: -9.126657485961914
    7. '       ' → logprob: -9.626657485961914
    8. '#' → logprob: -10.001657485961914
    9. '`' → logprob: -10.376657485961914
    10. '\' → logprob: -10.626657485961914

Token 2071: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029013702645897865
    2. 'n' → logprob: -3.9040136337280273
    3. 'def' → logprob: -5.029013633728027
    4. 'j' → logprob: -7.279013633728027
    5. 'p' → logprob: -8.154013633728027
    6. ')' → logprob: -8.279013633728027
    7. '```' → logprob: -8.404013633728027
    8. '    
' → logprob: -8.904013633728027
    9. '#' → logprob: -10.404013633728027
    10. '`' → logprob: -10.654013633728027

Token 2072: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008445297717116773
    2. 'n' → logprob: -7.250844478607178
    3. '    
' → logprob: -9.250844955444336
    4. '    ' → logprob: -11.750844955444336
    5. '```' → logprob: -11.875844955444336
    6. '       ' → logprob: -12.375844955444336
    7. '(n' → logprob: -12.625844955444336
    8. ')' → logprob: -12.750844955444336
    9. 'def' → logprob: -13.500844955444336
    10. '`' → logprob: -13.500844955444336

Token 2073: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004080420359969139
    2. 'n' → logprob: -5.754080295562744
    3. '    
' → logprob: -7.754080295562744
    4. '```' → logprob: -8.504080772399902
    5. '
' → logprob: -9.629080772399902
    6. 'j' → logprob: -9.754080772399902
    7. '#' (adapté à ' #') → logprob: -10.254080772399902
    8. 'length' → logprob: -10.879080772399902
    9. 'def' → logprob: -10.879080772399902
    10. '(n' → logprob: -11.254080772399902

Token 2074: ' Ainsi' (ID: 65093)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4770337641239166
    2. 'n' → logprob: -0.9770337343215942
    3. 'def' → logprob: -5.977033615112305
    4. '```' → logprob: -8.477033615112305
    5. 'j' → logprob: -9.102033615112305
    6. '    
' → logprob: -10.477033615112305
    7. ' n' → logprob: -11.352033615112305
    8. 'import' → logprob: -11.477033615112305
    9. '	n' → logprob: -11.852033615112305
    10. '#' → logprob: -12.102033615112305

Token 2075: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014625291340053082
    2. 'n' → logprob: -5.264625072479248
    3. '#' → logprob: -5.389625072479248
    4. '(n' → logprob: -6.389625072479248
    5. 'def' → logprob: -6.514625072479248
    6. ',' → logprob: -7.639625072479248
    7. 'on' → logprob: -8.264625549316406
    8. 'for' → logprob: -8.389625549316406
    9. ' on' → logprob: -8.389625549316406
    10. 'nous' → logprob: -10.139625549316406

Token 2076: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004881842527538538
    2. 'n' → logprob: -5.379881858825684
    3. '#' → logprob: -9.254881858825684
    4. 'for' → logprob: -9.754881858825684
    5. ' n' → logprob: -10.754881858825684
    6. '       ' → logprob: -10.879881858825684
    7. '    
' → logprob: -11.004881858825684
    8. '    ' → logprob: -11.754881858825684
    9. 'def' → logprob: -12.004881858825684
    10. '	n' → logprob: -12.004881858825684

Token 2077: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03537561371922493
    2. 'n' → logprob: -3.6603755950927734
    3. '#' (adapté à ' #') → logprob: -5.035375595092773
    4. 'for' → logprob: -7.035375595092773
    5. 'segments' → logprob: -7.910375595092773
    6. 'cuts' → logprob: -8.285375595092773
    7. 'def' → logprob: -8.410375595092773
    8. 'segment' → logprob: -8.910375595092773
    9. ' n' → logprob: -9.035375595092773
    10. 'total' → logprob: -9.160375595092773

Token 2078: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44530871510505676
    2. '   ' → logprob: -1.4453086853027344
    3. 'n' → logprob: -2.9453086853027344
    4. 'for' → logprob: -3.4453086853027344
    5. 'segments' → logprob: -4.195308685302734
    6. 'k' → logprob: -4.945308685302734
    7. 'cuts' → logprob: -4.945308685302734
    8. 'c' → logprob: -6.070308685302734
    9. 'total' → logprob: -6.695308685302734
    10. 'max' → logprob: -6.945308685302734

Token 2079: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19385868310928345
    2. '   ' → logprob: -2.0688586235046387
    3. 'cuts' → logprob: -4.193858623504639
    4. 'for' → logprob: -4.818858623504639
    5. 'segments' → logprob: -4.943858623504639
    6. 'j' → logprob: -5.193858623504639
    7. '#' → logprob: -5.818858623504639
    8. ' n' → logprob: -6.068858623504639
    9. ' cuts' → logprob: -6.318858623504639
    10. ' for' → logprob: -6.818858623504639

Token 2080: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.6187774538993835
    2. '_' → logprob: -1.3687775135040283
    3. '_of' → logprob: -2.4937775135040283
    4. '_des' → logprob: -2.9937775135040283
    5. '   ' → logprob: -3.2437775135040283
    6. ' =' → logprob: -4.743777275085449
    7. 'de' → logprob: -4.993777275085449
    8. '=' → logprob: -4.993777275085449
    9. ' de' → logprob: -5.618777275085449
    10. '_d' → logprob: -5.993777275085449

Token 2081: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.3221072256565094
    2. 'segments' → logprob: -1.322107195854187
    3. '_' → logprob: -5.072107315063477
    4. ' segments' → logprob: -7.197107315063477
    5. '   ' → logprob: -8.072107315063477
    6. 's' → logprob: -8.572107315063477
    7. '_j' → logprob: -8.822107315063477
    8. 'cuts' → logprob: -8.947107315063477
    9. '_segment' → logprob: -9.197107315063477
    10. '_p' → logprob: -9.322107315063477

Token 2082: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0143906744197011
    2. '=' → logprob: -4.264390468597412
    3. '   ' → logprob: -8.88939094543457
    4. ' +=' → logprob: -10.38939094543457
    5. '=n' → logprob: -10.88939094543457
    6. ' ' → logprob: -12.13939094543457
    7. '=int' → logprob: -12.13939094543457
    8. '_' → logprob: -12.76439094543457
    9. ')' → logprob: -12.88939094543457
    10. '=s' → logprob: -13.01439094543457

Token 2083: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6725721955299377
    2. 'k' → logprob: -1.297572135925293
    3. 'c' → logprob: -2.922572135925293
    4. '1' → logprob: -3.547572135925293
    5. 'cuts' → logprob: -3.672572135925293
    6. 'segments' → logprob: -3.672572135925293
    7. ' n' → logprob: -3.797572135925293
    8. 'j' → logprob: -4.172572135925293
    9. '   ' → logprob: -4.672572135925293
    10. ' k' → logprob: -5.047572135925293

Token 2084: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.26914530992507935
    2. '_' → logprob: -2.3941452503204346
    3. '_of' → logprob: -2.3941452503204346
    4. '_des' → logprob: -3.6441452503204346
    5. ' de' → logprob: -4.769145488739014
    6. '_d' → logprob: -4.769145488739014
    7. '   ' → logprob: -5.394145488739014
    8. 'de' → logprob: -6.269145488739014
    9. ' _' → logprob: -6.769145488739014
    10. '_s' → logprob: -7.644145488739014

Token 2085: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013495593331754208
    2. ' _' → logprob: -5.138495445251465
    3. '_segments' → logprob: -5.888495445251465
    4. '_j' → logprob: -6.888495445251465
    5. 'segments' → logprob: -7.013495445251465
    6. '_c' → logprob: -7.138495445251465
    7. ' ' → logprob: -7.638495445251465
    8. 's' → logprob: -8.013495445251465
    9. '_\' → logprob: -8.388495445251465
    10. '_s' → logprob: -8.513495445251465

Token 2086: 'ures' (ID: 1609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21409733593463898
    2. '_' → logprob: -2.214097261428833
    3. '=' → logprob: -3.464097261428833
    4. 'es' → logprob: -3.714097261428833
    5. 'é' → logprob: -4.339097499847412
    6. '#' → logprob: -6.339097499847412
    7. 'ures' → logprob: -6.339097499847412
    8. 'u' → logprob: -6.839097499847412
    9. ' ' → logprob: -6.964097499847412
    10. ' =' → logprob: -6.964097499847412

Token 2087: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.09868968278169632
    2. ' =' → logprob: -2.4736897945404053
    3. '+' → logprob: -5.473689556121826
    4. '   ' → logprob: -5.473689556121826
    5. ' +=' → logprob: -7.473689556121826
    6. 's' → logprob: -8.723690032958984
    7. ' -' → logprob: -8.848690032958984
    8. '=' → logprob: -9.223690032958984
    9. '```' → logprob: -9.848690032958984
    10. '_used' → logprob: -10.473690032958984

Token 2088: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008130819769576192
    2. ' ' → logprob: -7.125813007354736
    3. '0' → logprob: -13.000813484191895
    4. 'import' → logprob: -13.125813484191895
    5. '```' → logprob: -13.250813484191895
    6. '   ' → logprob: -13.500813484191895
    7. ' ' → logprob: -14.500813484191895
    8. '+' → logprob: -15.375813484191895
    9. 'n' → logprob: -15.625813484191895
    10. '#' → logprob: -16.125812530517578

Token 2089: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020141465589404106
    2. ' =' → logprob: -4.7701416015625
    3. ' +' → logprob: -6.2701416015625
    4. 'def' → logprob: -6.2701416015625
    5. ',' → logprob: -6.3951416015625
    6. '
' → logprob: -6.8951416015625
    7. '.' → logprob: -7.2701416015625
    8. '+' → logprob: -7.3951416015625
    9. '=' → logprob: -7.3951416015625
    10. '```' → logprob: -7.7701416015625

Token 2090: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014191943046171218
    2. '    
' → logprob: -9.750142097473145
    3. '
' → logprob: -10.500142097473145
    4. 'import' → logprob: -11.250142097473145
    5. 'def' → logprob: -11.625142097473145
    6. 'n' → logprob: -12.000142097473145
    7. '#' → logprob: -12.375142097473145
    8. '```' → logprob: -12.375142097473145
    9. ')' → logprob: -12.625142097473145
    10. '(n' → logprob: -12.625142097473145

Token 2091: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009938681032508612
    2. '#' (adapté à ' #') → logprob: -7.750993728637695
    3. 'n' → logprob: -8.500993728637695
    4. '    
' → logprob: -9.250993728637695
    5. '
' → logprob: -9.750993728637695
    6. 'def' → logprob: -10.000993728637695
    7. 'import' → logprob: -10.375993728637695
    8. 'cut' → logprob: -10.500993728637695
    9. 'j' → logprob: -10.750993728637695
    10. 'p' → logprob: -11.000993728637695

Token 2092: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017291966825723648
    2. 'n' → logprob: -4.642292022705078
    3. '(n' → logprob: -5.517292022705078
    4. '#' → logprob: -6.892292022705078
    5. '
' → logprob: -7.642292022705078
    6. '    
' → logprob: -8.142292022705078
    7. '(' → logprob: -8.517292022705078
    8. 'def' → logprob: -8.517292022705078
    9. '#
' → logprob: -8.517292022705078
    10. '\n' → logprob: -8.642292022705078

Token 2093: ' somme' (ID: 64484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46097221970558167
    2. 'c' → logprob: -1.5859721899032593
    3. '#' → logprob: -2.460972309112549
    4. 'cuts' → logprob: -3.085972309112549
    5. 'nombre' → logprob: -4.710972309112549
    6. 'cut' → logprob: -5.335972309112549
    7. 'n' → logprob: -5.460972309112549
    8. 'def' → logprob: -5.835972309112549
    9. 'nb' → logprob: -5.835972309112549
    10. 'for' → logprob: -6.585972309112549

Token 2094: ' des' (ID: 731)
  Prédit: '_des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_des' → logprob: -0.48831599950790405
    2. 'des' → logprob: -1.9883160591125488
    3. '_of' → logprob: -2.238316059112549
    4. '_j' → logprob: -2.988316059112549
    5. '   ' → logprob: -3.363316059112549
    6. ' =' → logprob: -3.613316059112549
    7. '=' → logprob: -5.238316059112549
    8. '_' → logprob: -5.738316059112549
    9. '_c' → logprob: -5.863316059112549
    10. 'de' → logprob: -6.238316059112549

Token 2095: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.46391019225120544
    2. 'c' → logprob: -1.5889102220535278
    3. '_j' → logprob: -2.5889101028442383
    4. 'cuts' → logprob: -3.2139101028442383
    5. 'segments' → logprob: -3.9639101028442383
    6. 'cou' → logprob: -4.588910102844238
    7. 'joint' → logprob: -4.963910102844238
    8. '_c' → logprob: -5.463910102844238
    9. '#' → logprob: -6.088910102844238
    10. 'cut' → logprob: -6.713910102844238

Token 2096: ' utilisés' (ID: 94258)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6075605154037476
    2. '_util' → logprob: -1.3575605154037476
    3. '_used' → logprob: -2.482560634613037
    4. '=' → logprob: -2.732560634613037
    5. '_' → logprob: -3.857560634613037
    6. 'util' → logprob: -4.732560634613037
    7. '_c' → logprob: -4.857560634613037
    8. '_cut' → logprob: -6.482560634613037
    9. '_rest' → logprob: -6.607560634613037
    10. '   ' → logprob: -6.732560634613037

Token 2097: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029313694685697556
    2. '=' → logprob: -3.654313802719116
    3. '   ' → logprob: -6.904313564300537
    4. ' +=' → logprob: -6.904313564300537
    5. '_used' → logprob: -8.279314041137695
    6. '_util' → logprob: -9.529314041137695
    7. '=[]' → logprob: -9.529314041137695
    8. ' ' → logprob: -9.654314041137695
    9. '```' → logprob: -10.154314041137695
    10. 'def' → logprob: -10.279314041137695

Token 2098: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7642563581466675
    2. '0' → logprob: -1.2642563581466675
    3. ' sum' → logprob: -1.6392563581466675
    4. 'total' → logprob: -4.264256477355957
    5. 'S' → logprob: -4.889256477355957
    6. ' total' → logprob: -4.889256477355957
    7. ' S' → logprob: -5.139256477355957
    8. 's' → logprob: -5.264256477355957
    9. ' ' → logprob: -5.389256477355957
    10. ' n' → logprob: -5.389256477355957

Token 2099: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.2138635665178299
    2. '_j' → logprob: -2.4638636112213135
    3. '_des' → logprob: -2.8388636112213135
    4. '+' → logprob: -5.088863372802734
    5. '(j' → logprob: -5.338863372802734
    6. 'of' → logprob: -5.588863372802734
    7. '[j' → logprob: -5.588863372802734
    8. '_rest' → logprob: -5.713863372802734
    9. '=' → logprob: -5.838863372802734
    10. 'j' → logprob: -5.838863372802734

Token 2100: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.409920334815979
    2. '_j' → logprob: -1.534920334815979
    3. ' j' → logprob: -2.5349202156066895
    4. ' joints' → logprob: -4.6599202156066895
    5. '_' → logprob: -4.9099202156066895
    6. ' _' → logprob: -5.2849202156066895
    7. 'joint' → logprob: -5.9099202156066895
    8. '[j' → logprob: -6.0349202156066895
    9. ' ' → logprob: -6.5349202156066895
    10. 'cuts' → logprob: -6.6599202156066895

Token 2101: ' non' (ID: 2893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8013109564781189
    2. '_used' → logprob: -1.6763110160827637
    3. '[' → logprob: -2.1763110160827637
    4. '_' → logprob: -2.4263110160827637
    5. '=' → logprob: -3.5513110160827637
    6. '   ' → logprob: -3.5513110160827637
    7. '_util' → logprob: -3.8013110160827637
    8. '[i' → logprob: -3.8013110160827637
    9. '[
' → logprob: -4.551311016082764
    10. ']' → logprob: -4.926311016082764

Token 2102: ' supprim' (ID: 142986)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.37426093220710754
    2. 'c' → logprob: -1.4992609024047852
    3. '_' → logprob: -3.124260902404785
    4. ' coup' → logprob: -3.374260902404785
    5. 'cou' → logprob: -5.874260902404785
    6. 'util' → logprob: -5.999260902404785
    7. '_cut' → logprob: -7.124260902404785
    8. 'cut' → logprob: -7.624260902404785
    9. '#' → logprob: -7.874260902404785
    10. ' ' → logprob: -8.249260902404785

Token 2103: 'és' (ID: 1756)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.315254807472229
    2. 'és' → logprob: -1.565254807472229
    3. '_used' → logprob: -4.0652546882629395
    4. '_cut' → logprob: -4.8152546882629395
    5. 'é' → logprob: -5.0652546882629395
    6. '_c' → logprob: -5.3152546882629395
    7. 's' → logprob: -5.5652546882629395
    8. '\' → logprob: -6.5652546882629395
    9. 'ées' → logprob: -6.5652546882629395
    10. ']' → logprob: -6.6902546882629395

Token 2104: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023696590214967728
    2. 'n' → logprob: -4.148696422576904
    3. '(n' → logprob: -6.648696422576904
    4. ' =' → logprob: -7.023696422576904
    5. 's' → logprob: -7.523696422576904
    6. '=' → logprob: -8.023696899414062
    7. '\' → logprob: -8.023696899414062
    8. '(
' → logprob: -8.023696899414062
    9. ')' → logprob: -8.148696899414062
    10. '
' → logprob: -8.148696899414062

Token 2105: 'ce' (ID: 400)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30122438073158264
    2. ')
' → logprob: -2.30122447013855
    3. '=' → logprob: -3.67622447013855
    4. '+' → logprob: -3.92622447013855
    5. 'util' → logprob: -4.176224231719971
    6. ' =' → logprob: -4.176224231719971
    7. '_used' → logprob: -4.301224231719971
    8. '   ' → logprob: -4.426224231719971
    9. 'used' → logprob: -4.426224231719971
    10. ' +' → logprob: -5.301224231719971

Token 2106: 'ux' (ID: 1778)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5055081844329834
    2. ')' → logprob: -1.3805081844329834
    3. ']' → logprob: -3.3805081844329834
    4. '#' → logprob: -4.0055084228515625
    5. '=' → logprob: -4.0055084228515625
    6. '
' → logprob: -4.8805084228515625
    7. ' =' → logprob: -5.0055084228515625
    8. 's' → logprob: -5.2555084228515625
    9. 'x' → logprob: -5.6305084228515625
    10. '+' → logprob: -5.6305084228515625

Token 2107: ' pas' (ID: 2173)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6811292171478271
    2. ' =' → logprob: -2.431129217147827
    3. '```' → logprob: -2.556129217147827
    4. '[' → logprob: -2.681129217147827
    5. '[i' → logprob: -3.181129217147827
    6. '   ' → logprob: -3.806129217147827
    7. '_util' → logprob: -4.056129455566406
    8. '_used' → logprob: -4.056129455566406
    9. ')' → logprob: -4.181129455566406
    10. '_' → logprob: -4.306129455566406

Token 2108: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5100820660591125
    2. '_c' → logprob: -1.1350820064544678
    3. '_s' → logprob: -2.8850820064544678
    4. '_cut' → logprob: -5.385082244873047
    5. ' _' → logprob: -6.010082244873047
    6. '#' → logprob: -6.135082244873047
    7. 'c' → logprob: -6.135082244873047
    8. 's' → logprob: -6.260082244873047
    9. ')' → logprob: -6.385082244873047
    10. '_used' → logprob: -6.510082244873047

Token 2109: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.2868381142616272
    2. 'é' → logprob: -1.4118380546569824
    3. '#' → logprob: -6.036838054656982
    4. 'es' → logprob: -7.286838054656982
    5. 't' → logprob: -7.411838054656982
    6. '_' → logprob: -7.536838054656982
    7. 'ées' → logprob: -7.786838054656982
    8. 'ée' → logprob: -8.16183853149414
    9. 's' → logprob: -8.66183853149414
    10. '```' → logprob: -9.03683853149414

Token 2110: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8796577453613281
    2. '])' → logprob: -1.2546577453613281
    3. ')' → logprob: -1.5046577453613281
    4. '[i' → logprob: -3.004657745361328
    5. '   ' → logprob: -5.254657745361328
    6. '[' → logprob: -5.379657745361328
    7. '```' → logprob: -5.879657745361328
    8. '`)' → logprob: -6.254657745361328
    9. '_used' → logprob: -6.379657745361328
    10. ' )' → logprob: -6.754657745361328

Token 2111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006888241972774267
    2. 'def' → logprob: -5.756888389587402
    3. '    
' → logprob: -6.881888389587402
    4. ')' → logprob: -7.256888389587402
    5. 'j' → logprob: -8.006888389587402
    6. '
' → logprob: -8.006888389587402
    7. 'n' → logprob: -8.256888389587402
    8. 'import' → logprob: -8.756888389587402
    9. ',' → logprob: -9.006888389587402
    10. ']' → logprob: -9.381888389587402

Token 2112: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015303479507565498
    2. 'n' → logprob: -4.640303611755371
    3. 'j' → logprob: -6.390303611755371
    4. '    
' → logprob: -6.640303611755371
    5. 'def' → logprob: -7.015303611755371
    6. '
' → logprob: -7.890303611755371
    7. 'p' → logprob: -8.765303611755371
    8. '(n' → logprob: -8.890303611755371
    9. '```' → logprob: -9.140303611755371
    10. 'joint' → logprob: -9.515303611755371

Token 2113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004045156296342611
    2. 'n' → logprob: -6.004045009613037
    3. 'j' → logprob: -7.129045009613037
    4. '    
' → logprob: -8.129045486450195
    5. '```' → logprob: -9.129045486450195
    6. 'p' → logprob: -9.379045486450195
    7. 'def' → logprob: -9.504045486450195
    8. '
' → logprob: -9.629045486450195
    9. '       ' → logprob: -10.629045486450195
    10. ',' → logprob: -11.129045486450195

Token 2114: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25956448912620544
    2. 'n' → logprob: -1.5095645189285278
    3. 'j' → logprob: -5.259564399719238
    4. 'def' → logprob: -7.134564399719238
    5. '    
' → logprob: -7.509564399719238
    6. 'joint' → logprob: -8.634564399719238
    7. '
' → logprob: -8.884564399719238
    8. 'p' → logprob: -9.134564399719238
    9. '(n' → logprob: -9.259564399719238
    10. '#' (adapté à ' #') → logprob: -9.509564399719238

Token 2115: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06386516243219376
    2. 'n' → logprob: -2.8138651847839355
    3. 'def' → logprob: -6.5638651847839355
    4. '```' → logprob: -8.563864707946777
    5. '
' → logprob: -9.438864707946777
    6. '    
' → logprob: -9.813864707946777
    7. 'import' → logprob: -9.938864707946777
    8. '(n' → logprob: -10.688864707946777
    9. '\' → logprob: -10.688864707946777
    10. ' n' → logprob: -11.063864707946777

Token 2116: 'it' (ID: 278)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1027398556470871
    2. 'ur' → logprob: -2.8527398109436035
    3. ' =' → logprob: -4.3527398109436035
    4. '(n' → logprob: -5.4777398109436035
    5. '=' → logprob: -5.6027398109436035
    6. '  ' → logprob: -5.9777398109436035
    7. 'r' → logprob: -5.9777398109436035
    8. ':' → logprob: -6.3527398109436035
    9. 'um' → logprob: -6.6027398109436035
    10. '#' → logprob: -6.7277398109436035

Token 2117: ' k' (ID: 372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02513519860804081
    2. '   ' → logprob: -3.9001352787017822
    3. ' n' → logprob: -5.650135040283203
    4. 'def' → logprob: -7.150135040283203
    5. '```' → logprob: -9.150135040283203
    6. '`' → logprob: -10.025135040283203
    7. 'j' → logprob: -10.775135040283203
    8. '
' → logprob: -11.025135040283203
    9. '	n' → logprob: -11.025135040283203
    10. 'import' → logprob: -11.275135040283203

Token 2118: ' le' (ID: 505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043344784528017044
    2. '=' → logprob: -3.168344736099243
    3. 's' → logprob: -9.168344497680664
    4. '   ' → logprob: -9.793344497680664
    5. ' ' → logprob: -10.168344497680664
    6. '=n' → logprob: -10.168344497680664
    7. ',' → logprob: -10.543344497680664
    8. ' ' → logprob: -11.793344497680664
    9. '    ' → logprob: -11.918344497680664
    10. ':' → logprob: -12.043344497680664

Token 2119: ' nombre' (ID: 9733)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3657222390174866
    2. ' =' → logprob: -1.2407221794128418
    3. '=n' → logprob: -5.490722179412842
    4. '(n' → logprob: -5.615722179412842
    5. ' ' → logprob: -6.865722179412842
    6. 'nombre' → logprob: -6.865722179412842
    7. '_' → logprob: -6.990722179412842
    8. ')' → logprob: -7.115722179412842
    9. 'n' → logprob: -7.115722179412842
    10. 's' → logprob: -7.115722179412842

Token 2120: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13078875839710236
    2. '_' → logprob: -3.380788803100586
    3. ' =' → logprob: -3.380788803100586
    4. '   ' → logprob: -3.505788803100586
    5. ' de' → logprob: -4.880788803100586
    6. '_of' → logprob: -5.380788803100586
    7. 'of' → logprob: -6.505788803100586
    8. '#' → logprob: -6.630788803100586
    9. '_de' → logprob: -6.630788803100586
    10. ')' → logprob: -6.755788803100586

Token 2121: ' segments' (ID: 33749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5671922564506531
    2. '_segments' → logprob: -1.1921923160552979
    3. 'segments' → logprob: -2.692192316055298
    4. '=' → logprob: -3.067192316055298
    5. '_j' → logprob: -5.067192077636719
    6. ' =' → logprob: -5.942192077636719
    7. ' segments' → logprob: -6.192192077636719
    8. 'j' → logprob: -7.067192077636719
    9. '_c' → logprob: -7.317192077636719
    10. 's' → logprob: -7.692192077636719

Token 2122: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1329963058233261
    2. '   ' → logprob: -2.2579963207244873
    3. '=' → logprob: -4.007996082305908
    4. ',' → logprob: -7.882996082305908
    5. '(n' → logprob: -8.132996559143066
    6. ' (' → logprob: -8.507996559143066
    7. '```' → logprob: -8.882996559143066
    8. '_' → logprob: -8.882996559143066
    9. 's' → logprob: -9.257996559143066
    10. ')' → logprob: -9.382996559143066

Token 2123: ' soit' (ID: 17293)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2881377935409546
    2. '#' → logprob: -2.163137912750244
    3. ' =' → logprob: -2.413137912750244
    4. ' #' → logprob: -4.288137912750244
    5. '=' → logprob: -4.663137912750244
    6. ':' → logprob: -4.788137912750244
    7. ' k' → logprob: -5.663137912750244
    8. 'k' → logprob: -6.163137912750244
    9. '    ' → logprob: -6.663137912750244
    10. '       ' → logprob: -6.663137912750244

Token 2124: ' c' (ID: 274)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.33266961574554443
    2. ' k' → logprob: -1.3326696157455444
    3. 'c' → logprob: -5.457669734954834
    4. ' nombre' → logprob: -5.957669734954834
    5. ' n' → logprob: -6.457669734954834
    6. ' joints' → logprob: -6.457669734954834
    7. 'j' → logprob: -6.582669734954834
    8. 'n' → logprob: -6.957669734954834
    9. ' ' → logprob: -7.207669734954834
    10. 'nombre' → logprob: -7.332669734954834

Token 2125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08248138427734375
    2. ' =' → logprob: -2.7074813842773438
    3. '_' → logprob: -5.207481384277344
    4. 'o' → logprob: -6.582481384277344
    5. 'u' → logprob: -6.582481384277344
    6. '   ' → logprob: -7.082481384277344
    7. '#' → logprob: -7.207481384277344
    8. 'k' → logprob: -7.832481384277344
    9. 'a' → logprob: -8.082481384277344
    10. ' ' → logprob: -8.082481384277344

Token 2126: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28276941180229187
    2. ' k' → logprob: -1.6577694416046143
    3. '0' → logprob: -4.157769203186035
    4. ' nombre' → logprob: -4.282769203186035
    5. 'nombre' → logprob: -4.907769203186035
    6. ' ' → logprob: -5.407769203186035
    7. ' n' → logprob: -5.407769203186035
    8. 'n' → logprob: -5.532769203186035
    9. 'c' → logprob: -5.907769203186035
    10. ' c' → logprob: -7.032769203186035

Token 2127: '-' (ID: 12)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5432480573654175
    2. ' =' → logprob: -0.9182480573654175
    3. 'o' → logprob: -5.293248176574707
    4. '_' → logprob: -5.418248176574707
    5. '-' → logprob: -5.918248176574707
    6. 'ut' → logprob: -6.293248176574707
    7. 'uts' → logprob: -6.543248176574707
    8. 'u' → logprob: -7.293248176574707
    9. '#' → logprob: -7.668248176574707
    10. ',' → logprob: -7.918248176574707

Token 2128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10056387633085251
    2. ' ' → logprob: -2.3505637645721436
    3. '   ' → logprob: -8.975564002990723
    4. ' ' → logprob: -9.475564002990723
    5. 'c' → logprob: -10.350564002990723
    6. ' =' → logprob: -10.350564002990723
    7. '=' → logprob: -11.225564002990723
    8. '```' → logprob: -11.350564002990723
    9. '  ' → logprob: -11.850564002990723
    10. ' (' → logprob: -11.975564002990723

Token 2129: ' le' (ID: 505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.560711681842804
    2. '   ' → logprob: -1.0607116222381592
    3. '=' → logprob: -3.435711622238159
    4. ':' → logprob: -4.185711860656738
    5. '```' → logprob: -5.185711860656738
    6. ')' → logprob: -5.310711860656738
    7. '+' → logprob: -5.560711860656738
    8. ',' → logprob: -5.560711860656738
    9. '
' → logprob: -5.560711860656738
    10. ' +' → logprob: -5.560711860656738

Token 2130: ' nombre' (ID: 9733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8859737515449524
    2. '_c' → logprob: -1.8859736919403076
    3. 'u' → logprob: -2.3859736919403076
    4. 'c' → logprob: -2.7609736919403076
    5. 'uts' → logprob: -3.0109736919403076
    6. 's' → logprob: -3.5109736919403076
    7. 'nombre' → logprob: -3.6359736919403076
    8. 'n' → logprob: -4.010973930358887
    9. 'o' → logprob: -4.010973930358887
    10. 'cou' → logprob: -4.135973930358887

Token 2131: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43241456151008606
    2. '_of' → logprob: -2.1824145317077637
    3. '_' → logprob: -2.8074145317077637
    4. ' =' → logprob: -2.9324145317077637
    5. ' de' → logprob: -3.4324145317077637
    6. '_de' → logprob: -3.5574145317077637
    7. 's' → logprob: -4.557414531707764
    8. 'of' → logprob: -4.682414531707764
    9. '_c' → logprob: -4.932414531707764
    10. '```' → logprob: -4.932414531707764

Token 2132: ' coup' (ID: 25465)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.4116729497909546
    2. 'c' → logprob: -1.7866729497909546
    3. 'segments' → logprob: -2.661673069000244
    4. 'cut' → logprob: -3.411673069000244
    5. '_c' → logprob: -3.411673069000244
    6. 'cou' → logprob: -3.911673069000244
    7. '_cut' → logprob: -5.911673069000244
    8. ' segments' → logprob: -6.411673069000244
    9. 'j' → logprob: -6.786673069000244
    10. ' cuts' → logprob: -6.911673069000244

Token 2133: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.44874700903892517
    2. 's' → logprob: -1.5737470388412476
    3. 'ure' → logprob: -3.198746919631958
    4. 'é' → logprob: -3.573746919631958
    5. 'es' → logprob: -4.073747158050537
    6. 't' → logprob: -4.198747158050537
    7. 'cuts' → logprob: -4.323747158050537
    8. 'urations' → logprob: -4.448747158050537
    9. 'és' → logprob: -5.323747158050537
    10. '
' → logprob: -5.698747158050537

Token 2134: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021738123148679733
    2. ':' → logprob: -4.771738052368164
    3. ' =' → logprob: -5.021738052368164
    4. 'def' → logprob: -6.396738052368164
    5. '
' → logprob: -6.646738052368164
    6. 's' → logprob: -7.271738052368164
    7. '    
' → logprob: -7.771738052368164
    8. ')' → logprob: -8.021738052368164
    9. '=' → logprob: -8.021738052368164
    10. ':
' → logprob: -8.021738052368164

Token 2135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037997264880687
    2. 'n' → logprob: -6.378799915313721
    3. '#' → logprob: -7.378799915313721
    4. 'def' → logprob: -8.128799438476562
    5. '    
' → logprob: -8.378799438476562
    6. '(n' → logprob: -8.378799438476562
    7. '```' → logprob: -9.378799438476562
    8. 'c' → logprob: -9.378799438476562
    9. '`' → logprob: -9.628799438476562
    10. ',' → logprob: -9.878799438476562

Token 2136: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010813985718414187
    2. 'def' → logprob: -7.751081466674805
    3. '
' → logprob: -8.501081466674805
    4. '    
' → logprob: -8.876081466674805
    5. '```' → logprob: -9.751081466674805
    6. '#' → logprob: -9.876081466674805
    7. 'n' → logprob: -10.501081466674805
    8. 'import' → logprob: -10.876081466674805
    9. 'c' → logprob: -10.876081466674805
    10. ')' → logprob: -11.501081466674805

Token 2137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027235636953264475
    2. 'n' → logprob: -6.377723693847656
    3. 'j' → logprob: -7.502723693847656
    4. '    
' → logprob: -9.002723693847656
    5. 'def' → logprob: -9.127723693847656
    6. '#' → logprob: -9.877723693847656
    7. '       ' → logprob: -10.502723693847656
    8. '(n' → logprob: -10.627723693847656
    9. ',' → logprob: -11.127723693847656
    10. '    ' → logprob: -11.627723693847656

Token 2138: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00482181878760457
    2. 'n' → logprob: -5.50482177734375
    3. '#' (adapté à ' #') → logprob: -8.37982177734375
    4. 'c' → logprob: -8.75482177734375
    5. 'j' → logprob: -9.25482177734375
    6. '    
' → logprob: -9.62982177734375
    7. '
' → logprob: -10.25482177734375
    8. 'def' → logprob: -10.25482177734375
    9. 'length' → logprob: -10.87982177734375
    10. '       ' → logprob: -10.87982177734375

Token 2139: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5778326988220215
    2. 'n' → logprob: -0.8278326988220215
    3. 'def' → logprob: -7.4528326988220215
    4. 'j' → logprob: -7.5778326988220215
    5. '(n' → logprob: -8.82783317565918
    6. '
' → logprob: -9.32783317565918
    7. 'for' → logprob: -9.45283317565918
    8. ' n' → logprob: -9.70283317565918
    9. '    
' → logprob: -9.82783317565918
    10. '#' → logprob: -9.95283317565918

Token 2140: 'it' (ID: 278)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5889898538589478
    2. 't' → logprob: -1.2139898538589478
    3. 'r' → logprob: -2.838989734649658
    4. '       ' → logprob: -3.338989734649658
    5. ' =' → logprob: -3.963989734649658
    6. 'i' → logprob: -4.713989734649658
    7. '=' → logprob: -5.213989734649658
    8. 'ur' → logprob: -5.338989734649658
    9. 'it' → logprob: -6.213989734649658
    10. '     ' → logprob: -6.338989734649658

Token 2141: ' sum' (ID: 4215)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7534734606742859
    2. ' c' → logprob: -1.3784735202789307
    3. ' n' → logprob: -1.8784735202789307
    4. 'n' → logprob: -2.8784735202789307
    5. '   ' → logprob: -3.2534735202789307
    6. ' k' → logprob: -4.753473281860352
    7. 'k' → logprob: -5.253473281860352
    8. '```' → logprob: -5.253473281860352
    9. ' total' → logprob: -6.503473281860352
    10. '`' → logprob: -6.753473281860352

Token 2142: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.5952261090278625
    2. '_' → logprob: -1.0952260494232178
    3. 's' → logprob: -2.4702260494232178
    4. '_of' → logprob: -4.095226287841797
    5. ' =' → logprob: -5.470226287841797
    6. '_i' → logprob: -6.845226287841797
    7. '_c' → logprob: -6.970226287841797
    8. '_des' → logprob: -6.970226287841797
    9. '_p' → logprob: -7.095226287841797
    10. 'es' → logprob: -7.220226287841797

Token 2143: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.0712251365184784
    2. '_' → logprob: -3.071225166320801
    3. 'oint' → logprob: -4.071225166320801
    4. ' =' → logprob: -6.696225166320801
    5. '_c' → logprob: -6.946225166320801
    6. 's' → logprob: -7.321225166320801
    7. '_o' → logprob: -7.821225166320801
    8. '=' → logprob: -8.0712251663208
    9. '_i' → logprob: -8.1962251663208
    10. '```' → logprob: -8.3212251663208

Token 2144: ' =' (ID: 314)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.8408793807029724
    2. ' =' → logprob: -0.9658793807029724
    3. '_util' → logprob: -2.090879440307617
    4. '_' → logprob: -3.090879440307617
    5. '=' → logprob: -4.215879440307617
    6. '_selected' → logprob: -7.465879440307617
    7. '   ' → logprob: -7.465879440307617
    8. '_rest' → logprob: -7.590879440307617
    9. '_total' → logprob: -7.840879440307617
    10. 'used' → logprob: -8.090879440307617

Token 2145: ' somme' (ID: 64484)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3908866047859192
    2. 'sum' → logprob: -1.7658865451812744
    3. ' sum' → logprob: -2.2658865451812744
    4. ' ' → logprob: -3.1408865451812744
    5. '   ' → logprob: -6.3908867835998535
    6. ' n' → logprob: -6.6408867835998535
    7. ' j' → logprob: -7.5158867835998535
    8. 'n' → logprob: -7.7658867835998535
    9. 'j' → logprob: -8.015886306762695
    10. ' [' → logprob: -8.265886306762695

Token 2146: ' totale' (ID: 52898)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3526572287082672
    2. '_j' → logprob: -1.4776571989059448
    3. '_used' → logprob: -3.4776573181152344
    4. '_des' → logprob: -4.477657318115234
    5. ' =' → logprob: -4.727657318115234
    6. '=' → logprob: -5.727657318115234
    7. 'des' → logprob: -5.727657318115234
    8. '_of' → logprob: -5.727657318115234
    9. '_rest' → logprob: -6.352657318115234
    10. '   ' → logprob: -6.727657318115234

Token 2147: ' des' (ID: 731)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.1148746013641357
    2. '_des' → logprob: -1.2398746013641357
    3. '_' → logprob: -1.3648746013641357
    4. '_of' → logprob: -2.7398746013641357
    5. 'des' → logprob: -3.8648746013641357
    6. ' =' → logprob: -4.739874839782715
    7. '_used' → logprob: -4.739874839782715
    8. '_util' → logprob: -5.239874839782715
    9. '=' → logprob: -5.614874839782715
    10. '```' → logprob: -5.864874839782715

Token 2148: ' joints' (ID: 47223)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.5682297348976135
    2. '_' → logprob: -0.9432297348976135
    3. 'j' → logprob: -3.1932296752929688
    4. ' _' → logprob: -6.318229675292969
    5. '_used' → logprob: -8.818229675292969
    6. ' j' → logprob: -8.943229675292969
    7. ' ' → logprob: -9.068229675292969
    8. '\' → logprob: -9.193229675292969
    9. '_
' → logprob: -9.193229675292969
    10. '_joint' → logprob: -9.193229675292969

Token 2149: ' (' (ID: 350)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.34426426887512207
    2. ' =' → logprob: -2.469264268875122
    3. '   ' → logprob: -2.594264268875122
    4. '_util' → logprob: -2.969264268875122
    5. '```' → logprob: -3.844264268875122
    6. '[' → logprob: -4.594264030456543
    7. '_' → logprob: -4.594264030456543
    8. '=' → logprob: -4.719264030456543
    9. 'used' → logprob: -4.719264030456543
    10. '[i' → logprob: -5.969264030456543

Token 2150: 'fix' (ID: 11853)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8048992156982422
    2. ')' → logprob: -0.9298992156982422
    3. '   ' → logprob: -3.429899215698242
    4. '[j' → logprob: -3.804899215698242
    5. '[' → logprob: -3.929899215698242
    6. '_j' → logprob: -4.679899215698242
    7. ' -' → logprob: -4.804899215698242
    8. '=' → logprob: -5.054899215698242
    9. '[n' → logprob: -5.054899215698242
    10. ' =' → logprob: -5.179899215698242

Token 2151: 'e' (ID: 68)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.237309455871582
    2. ']' → logprob: -1.362309455871582
    3. ')
' → logprob: -1.612309455871582
    4. '=' → logprob: -2.612309455871582
    5. '_' → logprob: -3.862309455871582
    6. ' =' → logprob: -3.987309455871582
    7. ']
' → logprob: -4.112309455871582
    8. '[
' → logprob: -4.112309455871582
    9. ')
' → logprob: -4.612309455871582
    10. '   ' → logprob: -4.612309455871582

Token 2152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5541644096374512
    2. ')
' → logprob: -1.9291644096374512
    3. ' -' → logprob: -2.679164409637451
    4. '_j' → logprob: -2.929164409637451
    5. '   ' → logprob: -3.179164409637451
    6. ']' → logprob: -3.929164409637451
    7. '
' → logprob: -4.054164409637451
    8. '-' → logprob: -4.179164409637451
    9. 's' → logprob: -4.304164409637451
    10. '```' → logprob: -4.679164409637451

Token 2153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014001889154314995
    2. '
' → logprob: -5.514001846313477
    3. 'def' → logprob: -6.264001846313477
    4. '#' → logprob: -6.639001846313477
    5. '_j' → logprob: -6.764001846313477
    6. '```' → logprob: -6.889001846313477
    7. ',' → logprob: -7.139001846313477
    8. ' =' → logprob: -7.389001846313477
    9. ',
' → logprob: -8.014001846313477
    10. ':' → logprob: -8.139001846313477

Token 2154: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005714877508580685
    2. '
' → logprob: -6.2557148933410645
    3. 'def' → logprob: -6.8807148933410645
    4. '#' → logprob: -7.1307148933410645
    5. ' =' → logprob: -7.8807148933410645
    6. '_j' → logprob: -8.130714416503906
    7. ',' → logprob: -8.380714416503906
    8. '    
' → logprob: -8.755714416503906
    9. '=' → logprob: -9.130714416503906
    10. ')' → logprob: -9.255714416503906

Token 2155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012474933173507452
    2. 'n' → logprob: -8.00124740600586
    3. 'def' → logprob: -8.12624740600586
    4. '    
' → logprob: -8.62624740600586
    5. '#' → logprob: -9.37624740600586
    6. '```' → logprob: -9.87624740600586
    7. 'j' → logprob: -10.00124740600586
    8. '
' → logprob: -10.12624740600586
    9. ',' → logprob: -10.25124740600586
    10. '(n' → logprob: -10.37624740600586

Token 2156: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025347920134663582
    2. 'j' → logprob: -4.775347709655762
    3. '#' (adapté à ' #') → logprob: -5.150347709655762
    4. 'n' → logprob: -5.400347709655762
    5. 'p' → logprob: -6.900347709655762
    6. 'joint' → logprob: -7.150347709655762
    7. 'sum' → logprob: -7.275347709655762
    8. 'def' → logprob: -7.650347709655762
    9. ')' → logprob: -7.775347709655762
    10. '`' → logprob: -7.775347709655762

Token 2157: ' somme' (ID: 64484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.223289966583252
    2. 'sum' → logprob: -1.598289966583252
    3. 'joint' → logprob: -2.098289966583252
    4. 'j' → logprob: -2.223289966583252
    5. 'm' → logprob: -2.473289966583252
    6. 'n' → logprob: -2.598289966583252
    7. '#' → logprob: -3.098289966583252
    8. 'total' → logprob: -3.348289966583252
    9. 'c' → logprob: -4.723289966583252
    10. 'def' → logprob: -5.098289966583252

Token 2158: ' joints' (ID: 47223)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.021238520741462708
    2. '_' → logprob: -4.771238327026367
    3. '_des' → logprob: -4.896238327026367
    4. '_used' → logprob: -5.896238327026367
    5. '_rest' → logprob: -7.896238327026367
    6. 'des' → logprob: -8.146238327026367
    7. '_total' → logprob: -8.146238327026367
    8. ' =' → logprob: -8.271238327026367
    9. '_c' → logprob: -8.521238327026367
    10. 'j' → logprob: -8.521238327026367

Token 2159: ' utilisés' (ID: 94258)
  Prédit: '_util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.12630946934223175
    2. '_used' → logprob: -2.501309394836426
    3. ' =' → logprob: -3.876309394836426
    4. '_' → logprob: -4.501309394836426
    5. '_c' → logprob: -6.501309394836426
    6. 'util' → logprob: -6.751309394836426
    7. '_non' → logprob: -7.376309394836426
    8. '=' → logprob: -7.626309394836426
    9. '_rest' → logprob: -8.376309394836426
    10. '_unused' → logprob: -8.876309394836426

Token 2160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26036348938941956
    2. '=' → logprob: -2.1353635787963867
    3. ' -' → logprob: -2.3853635787963867
    4. '-' → logprob: -5.385363578796387
    5. ' ' → logprob: -5.510363578796387
    6. '_' → logprob: -5.760363578796387
    7. ' +' → logprob: -6.010363578796387
    8. ')' → logprob: -6.385363578796387
    9. '+' → logprob: -7.385363578796387
    10. ' -=' → logprob: -7.385363578796387

Token 2161: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.062138643115758896
    2. ' sum' → logprob: -2.812138557434082
    3. '   ' → logprob: -9.562138557434082
    4. 'total' → logprob: -10.437138557434082
    5. 's' → logprob: -11.062138557434082
    6. '(sum' → logprob: -11.062138557434082
    7. ' ' → logprob: -11.812138557434082
    8. '`' → logprob: -12.312138557434082
    9. '```' → logprob: -12.437138557434082
    10. ' total' → logprob: -12.687138557434082

Token 2162: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.1475066840648651
    2. '_' → logprob: -2.0225067138671875
    3. ' _' → logprob: -6.6475067138671875
    4. ' -' → logprob: -7.2725067138671875
    5. '-' → logprob: -7.3975067138671875
    6. '_des' → logprob: -8.272506713867188
    7. '_used' → logprob: -8.397506713867188
    8. '```' → logprob: -8.397506713867188
    9. ' =' → logprob: -8.772506713867188
    10. '_c' → logprob: -8.897506713867188

Token 2163: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.00857036467641592
    2. '_' → logprob: -5.133570194244385
    3. '_o' → logprob: -7.008570194244385
    4. 'oint' → logprob: -7.133570194244385
    5. 'o' → logprob: -8.258570671081543
    6. '__' → logprob: -9.258570671081543
    7. '_j' → logprob: -10.258570671081543
    8. '_points' → logprob: -10.258570671081543
    9. '_u' → logprob: -10.258570671081543
    10. '=' → logprob: -10.383570671081543

Token 2164: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.042292833328247
    2. '[' → logprob: -2.042292833328247
    3. ' -' → logprob: -2.417292833328247
    4. '[i' → logprob: -2.667292833328247
    5. '[n' → logprob: -2.917292833328247
    6. '-' → logprob: -3.417292833328247
    7. '_used' → logprob: -3.542292833328247
    8. '_' → logprob: -3.667292833328247
    9. ' =' → logprob: -3.667292833328247
    10. '[
' → logprob: -3.792292833328247

Token 2165: ' somme' (ID: 64484)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.484531044960022
    2. ' c' → logprob: -1.359531044960022
    3. 'sum' → logprob: -3.1095309257507324
    4. ' sum' → logprob: -3.3595309257507324
    5. 'cut' → logprob: -4.234530925750732
    6. ' cut' → logprob: -4.734530925750732
    7. 'cuts' → logprob: -5.734530925750732
    8. ' used' → logprob: -5.859530925750732
    9. ' cuts' → logprob: -5.859530925750732
    10. 'x' → logprob: -5.859530925750732

Token 2166: ' des' (ID: 731)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.07246049493551254
    2. '_des' → logprob: -3.072460412979126
    3. 'des' → logprob: -4.447460651397705
    4. '_cut' → logprob: -5.072460651397705
    5. '_' → logprob: -6.072460651397705
    6. 'c' → logprob: -7.072460651397705
    7. '_j' → logprob: -7.322460651397705
    8. '_of' → logprob: -7.697460651397705
    9. '```' → logprob: -8.322460174560547
    10. ' des' → logprob: -8.572460174560547

Token 2167: ' joints' (ID: 47223)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.8433315753936768
    2. 'c' → logprob: -1.3433315753936768
    3. 'cut' → logprob: -1.8433315753936768
    4. ' cuts' → logprob: -2.8433315753936768
    5. 'cou' → logprob: -3.5933315753936768
    6. ' cut' → logprob: -4.468331336975098
    7. ' used' → logprob: -4.593331336975098
    8. 'used' → logprob: -4.593331336975098
    9. ' coup' → logprob: -5.218331336975098
    10. 'j' → logprob: -5.468331336975098

Token 2168: ' coup' (ID: 25465)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.05462813377380371
    2. '_used' → logprob: -3.6796281337738037
    3. '_util' → logprob: -4.554628372192383
    4. '_cut' → logprob: -5.054628372192383
    5. 'c' → logprob: -6.179628372192383
    6. '_' → logprob: -6.304628372192383
    7. '_sup' → logprob: -6.429628372192383
    8. 'util' → logprob: -7.179628372192383
    9. '```' → logprob: -7.179628372192383
    10. '#' → logprob: -7.554628372192383

Token 2169: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.03502412140369415
    2. 'é' → logprob: -4.160024166107178
    3. '_' → logprob: -4.660024166107178
    4. 'es' → logprob: -5.910024166107178
    5. 'ées' → logprob: -6.035024166107178
    6. '__' → logprob: -7.160024166107178
    7. '[' → logprob: -7.410024166107178
    8. '=' → logprob: -7.410024166107178
    9. 's' → logprob: -7.410024166107178
    10. 'ée' → logprob: -8.03502368927002

Token 2170: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08017218858003616
    2. '_j' → logprob: -3.080172300338745
    3. 'j' → logprob: -5.330172061920166
    4. ' =' → logprob: -5.955172061920166
    5. '[j' → logprob: -5.955172061920166
    6. '
' → logprob: -5.955172061920166
    7. 'def' → logprob: -6.080172061920166
    8. '[
' → logprob: -6.205172061920166
    9. '_' → logprob: -6.455172061920166
    10. ')' → logprob: -6.705172061920166

Token 2171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010189377702772617
    2. '
' → logprob: -5.635189533233643
    3. 'def' → logprob: -6.135189533233643
    4. '    
' → logprob: -6.510189533233643
    5. '_j' → logprob: -7.385189533233643
    6. 'j' → logprob: -7.760189533233643
    7. ')' → logprob: -8.260189056396484
    8. '[
' → logprob: -8.635189056396484
    9. '\' → logprob: -8.760189056396484
    10. 'import' → logprob: -9.010189056396484

Token 2172: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005167223978787661
    2. '
' → logprob: -5.880167007446289
    3. 'def' → logprob: -7.005167007446289
    4. '    
' → logprob: -7.880167007446289
    5. '```' → logprob: -7.880167007446289
    6. 'import' → logprob: -8.630167007446289
    7. 'j' → logprob: -9.380167007446289
    8. '#' → logprob: -9.380167007446289
    9. ')' → logprob: -9.880167007446289
    10. ')
' → logprob: -10.755167007446289

Token 2173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007097654510289431
    2. '
' → logprob: -5.7570977210998535
    3. '    
' → logprob: -6.1320977210998535
    4. '```' → logprob: -7.7570977210998535
    5. '#' → logprob: -8.007097244262695
    6. 'j' → logprob: -8.882097244262695
    7. '`' → logprob: -9.257097244262695
    8. 'def' → logprob: -9.382097244262695
    9. ',' → logprob: -9.507097244262695
    10. '#
' → logprob: -9.632097244262695

Token 2174: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017663314938545227
    2. 'def' → logprob: -4.642663478851318
    3. 'j' → logprob: -5.767663478851318
    4. '#' (adapté à ' #') → logprob: -6.642663478851318
    5. 'p' → logprob: -6.892663478851318
    6. 'n' → logprob: -7.892663478851318
    7. 'import' → logprob: -8.26766300201416
    8. ')' → logprob: -8.64266300201416
    9. 'c' → logprob: -8.64266300201416
    10. 'sum' → logprob: -8.76766300201416

Token 2175: ' salaire' (ID: 135427)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04274486005306244
    2. 'c' → logprob: -4.2927446365356445
    3. 'sum' → logprob: -4.9177446365356445
    4. '
' → logprob: -5.1677446365356445
    5. '#' → logprob: -5.2927446365356445
    6. 'def' → logprob: -6.0427446365356445
    7. '```' → logprob: -6.1677446365356445
    8. 'cut' → logprob: -6.9177446365356445
    9. 'total' → logprob: -6.9177446365356445
    10. 'n' → logprob: -7.0427446365356445

Token 2176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10367942601442337
    2. '=' → logprob: -2.3536794185638428
    3. '   ' → logprob: -5.728679656982422
    4. '_' → logprob: -9.603679656982422
    5. ')' → logprob: -10.478679656982422
    6. ' ' → logprob: -10.728679656982422
    7. '```' → logprob: -11.103679656982422
    8. ' +=' → logprob: -11.478679656982422
    9. ' =
' → logprob: -11.478679656982422
    10. '#' → logprob: -11.978679656982422

Token 2177: ' k' (ID: 372)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5305147767066956
    2. '(k' → logprob: -1.4055147171020508
    3. '(n' → logprob: -1.9055147171020508
    4. '   ' → logprob: -4.405514717102051
    5. 'k' → logprob: -5.655514717102051
    6. '(' → logprob: -7.155514717102051
    7. '(sum' → logprob: -7.905514717102051
    8. ' k' → logprob: -8.03051471710205
    9. '(c' → logprob: -8.40551471710205
    10. 'sum' → logprob: -9.28051471710205

Token 2178: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.015302659012377262
    2. '*' → logprob: -4.515302658081055
    3. ' =' → logprob: -5.640302658081055
    4. '=' → logprob: -7.640302658081055
    5. ')' → logprob: -9.265302658081055
    6. ' ' → logprob: -10.265302658081055
    7. '*(' → logprob: -10.390302658081055
    8. '   ' → logprob: -10.890302658081055
    9. '```' → logprob: -11.390302658081055
    10. ' ' → logprob: -12.015302658081055

Token 2179: ' (' (ID: 350)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.8507075309753418
    2. ' (' → logprob: -0.9757075309753418
    3. '(' → logprob: -1.9757075309753418
    4. '(sum' → logprob: -3.100707530975342
    5. '(s' → logprob: -4.475707530975342
    6. '(sys' → logprob: -7.975707530975342
    7. '((' → logprob: -8.6007080078125
    8. 'sum' → logprob: -8.7257080078125
    9. '(total' → logprob: -10.1007080078125
    10. ' sum' → logprob: -10.4757080078125

Token 2180: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1044357642531395
    2. '(S' → logprob: -2.354435682296753
    3. 'sum' → logprob: -6.854435920715332
    4. ' S' → logprob: -6.979435920715332
    5. '(' → logprob: -7.229435920715332
    6. ' (' → logprob: -7.604435920715332
    7. 's' → logprob: -7.979435920715332
    8. '(s' → logprob: -8.354435920715332
    9. '(sum' → logprob: -8.354435920715332
    10. 'total' → logprob: -9.729435920715332

Token 2181: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12883998453617096
    2. ' +' → logprob: -2.2538399696350098
    3. '-' → logprob: -4.75383996963501
    4. '+' → logprob: -5.12883996963501
    5. ')' → logprob: -7.37883996963501
    6. '   ' → logprob: -7.62883996963501
    7. ' ' → logprob: -8.628840446472168
    8. '  ' → logprob: -11.253840446472168
    9. ' ' → logprob: -11.753840446472168
    10. '_' → logprob: -11.878840446472168

Token 2182: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.14082154631614685
    2. '(sum' → logprob: -2.3908214569091797
    3. ' sum' → logprob: -3.8908214569091797
    4. '(' → logprob: -4.76582145690918
    5. ' (' → logprob: -4.76582145690918
    6. '(s' → logprob: -6.14082145690918
    7. ')' → logprob: -10.01582145690918
    8. 's' → logprob: -10.51582145690918
    9. '(
' → logprob: -11.51582145690918
    10. '`' → logprob: -11.76582145690918

Token 2183: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0035657386761158705
    2. '_c' → logprob: -5.878565788269043
    3. '_' → logprob: -7.753565788269043
    4. '\' → logprob: -9.003565788269043
    5. '_cut' → logprob: -9.128565788269043
    6. '_des' → logprob: -11.003565788269043
    7. '```' → logprob: -11.003565788269043
    8. '(_' → logprob: -11.378565788269043
    9. ')' → logprob: -11.628565788269043
    10. '_joint' → logprob: -12.003565788269043

Token 2184: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.003025125479325652
    2. '_' → logprob: -6.128025054931641
    3. 'oint' → logprob: -7.753025054931641
    4. '_o' → logprob: -8.62802505493164
    5. 'o' → logprob: -9.37802505493164
    6. '__' → logprob: -11.00302505493164
    7. '_)' → logprob: -11.12802505493164
    8. 'oin' → logprob: -11.25302505493164
    9. '```' → logprob: -11.62802505493164
    10. '_
' → logprob: -11.75302505493164

Token 2185: ' -' (ID: 533)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.14151354134082794
    2. '_' → logprob: -2.8915135860443115
    3. ' -' → logprob: -3.2665135860443115
    4. '_cut' → logprob: -4.141513347625732
    5. ')' → logprob: -4.266513347625732
    6. '-' → logprob: -5.766513347625732
    7. '_used' → logprob: -6.141513347625732
    8. '   ' → logprob: -6.891513347625732
    9. ' _' → logprob: -7.016513347625732
    10. ' coup' → logprob: -9.01651382446289

Token 2186: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.08898679167032242
    2. ' sum' → logprob: -2.838986873626709
    3. 's' → logprob: -4.713986873626709
    4. 'c' → logprob: -4.963986873626709
    5. ' somme' → logprob: -5.588986873626709
    6. '(sum' → logprob: -6.338986873626709
    7. 'cut' → logprob: -6.463986873626709
    8. ' (' → logprob: -6.963986873626709
    9. ' c' → logprob: -8.33898639678955
    10. '(' → logprob: -8.46398639678955

Token 2187: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.08121435344219208
    2. '_' → logprob: -2.706214427947998
    3. '_cut' → logprob: -4.706214427947998
    4. '_j' → logprob: -6.831214427947998
    5. '_des' → logprob: -7.206214427947998
    6. '"_' → logprob: -9.95621395111084
    7. '```' → logprob: -9.95621395111084
    8. ')_' → logprob: -10.08121395111084
    9. ' _' → logprob: -10.45621395111084
    10. '_s' → logprob: -10.83121395111084

Token 2188: 'oup' (ID: 9999)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.015794677659869194
    2. 'oup' → logprob: -4.76579475402832
    3. '_cut' → logprob: -6.01579475402832
    4. 'utt' → logprob: -6.01579475402832
    5. '_' → logprob: -6.89079475402832
    6. '_ut' → logprob: -8.26579475402832
    7. '=cut' → logprob: -8.39079475402832
    8. 'uts' → logprob: -8.51579475402832
    9. '_c' → logprob: -9.26579475402832
    10. 'utting' → logprob: -9.76579475402832

Token 2189: 'ures' (ID: 1609)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.708439290523529
    2. 'é' → logprob: -0.833439290523529
    3. '_' → logprob: -2.958439350128174
    4. 'ées' → logprob: -4.458439350128174
    5. 'ed' → logprob: -5.708439350128174
    6. 'es' → logprob: -6.333439350128174
    7. 'éd' → logprob: -6.458439350128174
    8. 'ée' → logprob: -6.833439350128174
    9. '_cut' → logprob: -7.333439350128174
    10. '__' → logprob: -7.583439350128174

Token 2190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7684712409973145
    2. '_c' → logprob: -0.7684712409973145
    3. '_cut' → logprob: -3.2684712409973145
    4. '_' → logprob: -3.7684712409973145
    5. '_)' → logprob: -4.6434712409973145
    6. 's' → logprob: -8.018470764160156
    7. ')_' → logprob: -8.893470764160156
    8. 'cut' → logprob: -9.018470764160156
    9. '`)' → logprob: -9.018470764160156
    10. '[' → logprob: -9.143470764160156

Token 2191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016389968805015087
    2. '
' → logprob: -7.001638889312744
    3. 'def' → logprob: -7.751638889312744
    4. '    
' → logprob: -9.751639366149902
    5. ' =' → logprob: -10.001639366149902
    6. '       ' → logprob: -10.501639366149902
    7. ')' → logprob: -10.751639366149902
    8. 'import' → logprob: -10.876639366149902
    9. ' +' → logprob: -10.876639366149902
    10. '```' → logprob: -11.001639366149902

Token 2192: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009269236586987972
    2. '
' → logprob: -5.1342692375183105
    3. '    
' → logprob: -6.6342692375183105
    4. 'def' → logprob: -7.0092692375183105
    5. '```' → logprob: -8.634268760681152
    6. 'import' → logprob: -9.009268760681152
    7. '\' → logprob: -9.384268760681152
    8. ')' → logprob: -9.384268760681152
    9. ')
' → logprob: -10.134268760681152
    10. '"' → logprob: -10.134268760681152

Token 2193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002166491176467389
    2. '    
' → logprob: -9.750216484069824
    3. '
' → logprob: -10.375216484069824
    4. 'def' → logprob: -10.375216484069824
    5. '```' → logprob: -10.375216484069824
    6. 'import' → logprob: -10.625216484069824
    7. '       ' → logprob: -12.000216484069824
    8. '"' → logprob: -12.250216484069824
    9. '`' → logprob: -12.500216484069824
    10. '#' → logprob: -12.625216484069824

Token 2194: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011916564544662833
    2. '    
' → logprob: -7.12619161605835
    3. '
' → logprob: -8.751192092895508
    4. 'c' → logprob: -10.251192092895508
    5. '```' → logprob: -10.376192092895508
    6. 'def' → logprob: -10.501192092895508
    7. '       ' → logprob: -10.751192092895508
    8. '`' → logprob: -10.876192092895508
    9. '"' → logprob: -11.251192092895508
    10. 'sum' → logprob: -11.376192092895508

Token 2195: ' salaire' (ID: 135427)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13349440693855286
    2. 'n' → logprob: -2.1334943771362305
    3. 'def' → logprob: -5.3834943771362305
    4. '
' → logprob: -7.2584943771362305
    5. 'sum' → logprob: -7.5084943771362305
    6. 'total' → logprob: -8.50849437713623
    7. 'for' → logprob: -8.88349437713623
    8. '#' → logprob: -9.88349437713623
    9. ' n' → logprob: -10.00849437713623
    10. 'j' → logprob: -10.13349437713623

Token 2196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01329293753951788
    2. '=' → logprob: -4.3882927894592285
    3. '   ' → logprob: -7.2632927894592285
    4. ' +=' → logprob: -10.888293266296387
    5. ' ' → logprob: -11.013293266296387
    6. ')' → logprob: -11.388293266296387
    7. ',' → logprob: -11.888293266296387
    8. 'import' → logprob: -12.638293266296387
    9. '    ' → logprob: -12.888293266296387
    10. ' ==' → logprob: -12.888293266296387

Token 2197: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1383841037750244
    2. ' (' → logprob: -1.1383841037750244
    3. '(k' → logprob: -1.3883841037750244
    4. '(n' → logprob: -2.5133841037750244
    5. ' k' → logprob: -4.138383865356445
    6. '   ' → logprob: -5.388383865356445
    7. '(' → logprob: -5.513383865356445
    8. '(S' → logprob: -6.638383865356445
    9. '(s' → logprob: -7.013383865356445
    10. '(c' → logprob: -7.263383865356445

Token 2198: 'c' (ID: 66)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28853389620780945
    2. 'n' → logprob: -1.4135339260101318
    3. '(n' → logprob: -5.163533687591553
    4. 'c' → logprob: -7.038533687591553
    5. '(k' → logprob: -8.538534164428711
    6. ' n' → logprob: -8.913534164428711
    7. ' (' → logprob: -9.163534164428711
    8. '   ' → logprob: -9.288534164428711
    9. ' k' → logprob: -9.288534164428711
    10. '(' → logprob: -10.413534164428711

Token 2199: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6098833084106445
    2. ' +' → logprob: -1.4848833084106445
    3. 'ut' → logprob: -2.6098833084106445
    4. ')' → logprob: -3.2348833084106445
    5. ' *' → logprob: -3.6098833084106445
    6. '*' → logprob: -3.7348833084106445
    7. 'uts' → logprob: -3.8598833084106445
    8. ' =' → logprob: -4.2348833084106445
    9. '=' → logprob: -4.3598833084106445
    10. '_' → logprob: -5.3598833084106445

Token 2200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '```' → logprob: -17.750001907348633
    5. '
' → logprob: -18.500001907348633
    6. '=' → logprob: -18.500001907348633
    7. ')' → logprob: -19.125001907348633
    8. '+' → logprob: -19.250001907348633
    9. '	' → logprob: -19.375001907348633
    10. ' =' → logprob: -20.750001907348633

Token 2201: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.758300438988954e-05
    2. ')*' → logprob: -10.000097274780273
    3. ')*(' → logprob: -10.875097274780273
    4. '*' → logprob: -11.500097274780273
    5. ' )' → logprob: -12.000097274780273
    6. '+' → logprob: -12.125097274780273
    7. ' *' → logprob: -12.500097274780273
    8. '   ' → logprob: -12.625097274780273
    9. ' +' → logprob: -14.000097274780273
    10. '*(' → logprob: -14.125097274780273

Token 2202: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0004278083215467632
    2. '*' → logprob: -7.875427722930908
    3. '*(' → logprob: -10.125428199768066
    4. ')' → logprob: -12.250428199768066
    5. ' ' → logprob: -13.625428199768066
    6. '```' → logprob: -14.500428199768066
    7. ' ' → logprob: -14.875428199768066
    8. ' *(' → logprob: -15.250428199768066
    9. ' ```' → logprob: -15.875428199768066
    10. ' \' → logprob: -16.62542724609375

Token 2203: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1641867756843567
    2. '(S' → logprob: -1.914186716079712
    3. '(' → logprob: -5.539186954498291
    4. '(s' → logprob: -11.289186477661133
    5. '((' → logprob: -13.164186477661133
    6. ' ((' → logprob: -13.664186477661133
    7. '(P' → logprob: -13.664186477661133
    8. '(T' → logprob: -13.789186477661133
    9. ' ' → logprob: -13.914186477661133
    10. '```' → logprob: -14.289186477661133

Token 2204: 'S' (ID: 50)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.001200827769935131
    2. ' (' → logprob: -7.3762006759643555
    3. '(' → logprob: -7.5012006759643555
    4. '(s' → logprob: -11.501200675964355
    5. '(sum' → logprob: -12.126200675964355
    6. '(sys' → logprob: -13.126200675964355
    7. '((' → logprob: -13.376200675964355
    8. '(
' → logprob: -13.751200675964355
    9. 'S' → logprob: -14.501200675964355
    10. '(C' → logprob: -15.501200675964355

Token 2205: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5813974738121033
    2. ' +' → logprob: -1.081397533416748
    3. '+' → logprob: -2.331397533416748
    4. '-' → logprob: -5.706397533416748
    5. '   ' → logprob: -6.831397533416748
    6. '    ' → logprob: -9.33139705657959
    7. ' ' → logprob: -9.58139705657959
    8. '  ' → logprob: -11.20639705657959
    9. ')' → logprob: -11.33139705657959
    10. '```' → logprob: -12.33139705657959

Token 2206: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.47410181164741516
    2. 'sum' → logprob: -0.9741017818450928
    3. ' ' → logprob: -10.974102020263672
    4. '(sum' → logprob: -13.099102020263672
    5. '_sum' → logprob: -13.849102020263672
    6. ' ' → logprob: -13.974102020263672
    7. '	sum' → logprob: -14.349102020263672
    8. ''' → logprob: -14.599102020263672
    9. ')' → logprob: -14.724102020263672
    10. '`' → logprob: -14.974102020263672

Token 2207: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0020882810931652784
    2. '_c' → logprob: -6.5020880699157715
    3. '_' → logprob: -7.5020880699157715
    4. '\' → logprob: -11.37708854675293
    5. ')_' → logprob: -11.75208854675293
    6. ')' → logprob: -12.62708854675293
    7. ' _' → logprob: -12.75208854675293
    8. '_des' → logprob: -12.87708854675293
    9. '```' → logprob: -13.25208854675293
    10. '_b' → logprob: -14.25208854675293

Token 2208: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.126899853348732
    2. '_c' → logprob: -2.7518999576568604
    3. '_' → logprob: -3.1268999576568604
    4. '_j' → logprob: -4.876899719238281
    5. 'oint' → logprob: -6.001899719238281
    6. '_o' → logprob: -7.876899719238281
    7. 'c' → logprob: -8.376899719238281
    8. '_cut' → logprob: -8.376899719238281
    9. 'uts' → logprob: -9.126899719238281
    10. 'o' → logprob: -9.126899719238281

Token 2209: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002815217012539506
    2. '-' → logprob: -5.877815246582031
    3. ')' → logprob: -12.502815246582031
    4. ' ' → logprob: -12.502815246582031
    5. ' ' → logprob: -13.377815246582031
    6. '    ' → logprob: -14.252815246582031
    7. '   ' → logprob: -15.002815246582031
    8. '  ' → logprob: -16.37781524658203
    9. '```' → logprob: -16.62781524658203
    10. '-c' → logprob: -16.87781524658203

Token 2210: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.28150978684425354
    2. ' sum' → logprob: -1.4065097570419312
    3. 'c' → logprob: -8.406509399414062
    4. ' c' → logprob: -9.531509399414062
    5. '(sum' → logprob: -11.156509399414062
    6. '_sum' → logprob: -11.156509399414062
    7. '	sum' → logprob: -12.156509399414062
    8. ')' → logprob: -12.156509399414062
    9. '```' → logprob: -12.156509399414062
    10. 's' → logprob: -13.156509399414062

Token 2211: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0011791547294706106
    2. '_' → logprob: -6.876179218292236
    3. '_cut' → logprob: -9.126178741455078
    4. '\' → logprob: -11.626178741455078
    5. 'c' → logprob: -12.001178741455078
    6. '```' → logprob: -12.251178741455078
    7. ')_' → logprob: -12.501178741455078
    8. '_des' → logprob: -12.876178741455078
    9. '_j' → logprob: -13.126178741455078
    10. '_s' → logprob: -13.126178741455078

Token 2212: 'oup' (ID: 9999)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.06617055088281631
    2. '_' → logprob: -3.1911704540252686
    3. '_c' → logprob: -4.691170692443848
    4. '_cut' → logprob: -5.441170692443848
    5. 'uts' → logprob: -5.566170692443848
    6. 'utt' → logprob: -6.441170692443848
    7. 'u' → logprob: -6.941170692443848
    8. 'oup' → logprob: -7.191170692443848
    9. 'out' → logprob: -8.066170692443848
    10. 'utting' → logprob: -8.191170692443848

Token 2213: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2946486473083496
    2. '_cut' → logprob: -1.6696486473083496
    3. 'ut' → logprob: -3.6696486473083496
    4. 'ures' → logprob: -5.16964864730835
    5. '_u' → logprob: -5.41964864730835
    6. 'up' → logprob: -5.41964864730835
    7. ' cuts' → logprob: -5.54464864730835
    8. 'u' → logprob: -5.54464864730835
    9. '_up' → logprob: -6.41964864730835
    10. 'urt' → logprob: -6.41964864730835

Token 2214: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6018334627151489
    2. ' -' → logprob: -1.351833462715149
    3. '   ' → logprob: -1.726833462715149
    4. '-' → logprob: -4.476833343505859
    5. '       ' → logprob: -6.976833343505859
    6. ' ' → logprob: -7.476833343505859
    7. ' )' → logprob: -7.476833343505859
    8. '    ' → logprob: -7.601833343505859
    9. '_' → logprob: -8.22683334350586
    10. '  ' → logprob: -8.35183334350586

Token 2215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002420129720121622
    2. 'def' → logprob: -7.127419948577881
    3. '
' → logprob: -7.752419948577881
    4. '    
' → logprob: -8.127420425415039
    5. '```' → logprob: -8.377420425415039
    6. ')' → logprob: -9.502420425415039
    7. ' =' → logprob: -9.752420425415039
    8. 'import' → logprob: -9.752420425415039
    9. '"' → logprob: -9.877420425415039
    10. '       ' → logprob: -9.877420425415039

Token 2216: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03403591737151146
    2. '
' → logprob: -3.5340359210968018
    3. '```' → logprob: -6.284035682678223
    4. 'def' → logprob: -6.659035682678223
    5. '    
' → logprob: -8.034035682678223
    6. 'import' → logprob: -8.909035682678223
    7. '`
' → logprob: -9.034035682678223
    8. '
' → logprob: -9.534035682678223
    9. '``' → logprob: -9.659035682678223
    10. ')' → logprob: -9.909035682678223

Token 2217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016470879781991243
    2. '    
' → logprob: -6.751646995544434
    3. '
' → logprob: -8.001646995544434
    4. '```' → logprob: -10.251646995544434
    5. 'def' → logprob: -10.501646995544434
    6. 'import' → logprob: -10.751646995544434
    7. '`' → logprob: -11.751646995544434
    8. '       ' → logprob: -12.001646995544434
    9. '"' → logprob: -12.126646995544434
    10. 'n' → logprob: -12.501646995544434

Token 2218: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0067037660628557205
    2. 'n' → logprob: -6.006703853607178
    3. 'c' → logprob: -6.131703853607178
    4. 'cuts' → logprob: -7.381703853607178
    5. 'j' → logprob: -8.25670337677002
    6. '```' → logprob: -8.50670337677002
    7. 'def' → logprob: -8.75670337677002
    8. '`' → logprob: -9.38170337677002
    9. 'cut' → logprob: -9.38170337677002
    10. '    
' → logprob: -9.38170337677002

Token 2219: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04243332892656326
    2. 'n' → logprob: -3.542433261871338
    3. 'def' → logprob: -5.042433261871338
    4. 'c' → logprob: -5.542433261871338
    5. 'sum' → logprob: -7.417433261871338
    6. 'j' → logprob: -7.542433261871338
    7. 'm' → logprob: -8.292433738708496
    8. 'cuts' → logprob: -8.917433738708496
    9. 'joint' → logprob: -9.292433738708496
    10. '```' → logprob: -9.292433738708496

Token 2220: ' doit' (ID: 21822)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3444743752479553
    2. '_c' → logprob: -1.5944743156433105
    3. 'c' → logprob: -3.8444743156433105
    4. ' =' → logprob: -3.8444743156433105
    5. '#' → logprob: -4.5944743156433105
    6. '_' → logprob: -4.7194743156433105
    7. 's' → logprob: -5.8444743156433105
    8. '_s' → logprob: -5.8444743156433105
    9. '*' → logprob: -5.9694743156433105
    10. 'def' → logprob: -6.0944743156433105

Token 2221: ' choisir' (ID: 47004)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.19984324276447296
    2. '   ' → logprob: -2.074843168258667
    3. ' choisir' → logprob: -3.824843168258667
    4. 'chercher' → logprob: -4.699843406677246
    5. 'maximize' → logprob: -5.324843406677246
    6. 'contin' → logprob: -5.699843406677246
    7. 'tr' → logprob: -5.949843406677246
    8. 'choose' → logprob: -6.324843406677246
    9. 'max' → logprob: -6.574843406677246
    10. '```' → logprob: -6.699843406677246

Token 2222: ' un' (ID: 537)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10805609077215195
    2. '   ' → logprob: -3.23305606842041
    3. 'une' → logprob: -4.35805606842041
    4. '```' → logprob: -4.35805606842041
    5. 'les' → logprob: -4.60805606842041
    6. 'la' → logprob: -4.73305606842041
    7. 'où' → logprob: -5.73305606842041
    8. 'des' → logprob: -5.98305606842041
    9. '_c' → logprob: -6.35805606842041
    10. 'un' → logprob: -6.48305606842041

Token 2223: ' ensemble' (ID: 33081)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13843907415866852
    2. 's' → logprob: -2.513439178466797
    3. 'sub' → logprob: -3.763439178466797
    4. 'subset' → logprob: -4.513439178466797
    5. '_c' → logprob: -6.013439178466797
    6. '```' → logprob: -6.138439178466797
    7. 'cut' → logprob: -6.638439178466797
    8. '   ' → logprob: -6.638439178466797
    9. 'cou' → logprob: -6.638439178466797
    10. '
' → logprob: -6.763439178466797

Token 2224: ' de' (ID: 334)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.4875025153160095
    2. 'des' → logprob: -1.8625025749206543
    3. '```' → logprob: -2.4875025749206543
    4. 'de' → logprob: -2.6125025749206543
    5. '_des' → logprob: -4.237502574920654
    6. 'c' → logprob: -4.237502574920654
    7. ' de' → logprob: -4.612502574920654
    8. '(c' → logprob: -4.987502574920654
    9. ' des' → logprob: -4.987502574920654
    10. '=' → logprob: -5.612502574920654

Token 2225: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011173609644174576
    2. 'cou' → logprob: -5.386173725128174
    3. 'indices' → logprob: -5.761173725128174
    4. 'cuts' → logprob: -7.011173725128174
    5. '```' → logprob: -7.636173725128174
    6. '_c' → logprob: -7.636173725128174
    7. 'cut' → logprob: -7.761173725128174
    8. ' coup' → logprob: -8.386173248291016
    9. 'j' → logprob: -8.511173248291016
    10. '#' → logprob: -9.261173248291016

Token 2226: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20589770376682281
    2. 's' → logprob: -2.205897808074951
    3. 'é' → logprob: -4.080897808074951
    4. 'ures' → logprob: -4.205897808074951
    5. 'es' → logprob: -4.705897808074951
    6. 'u' → logprob: -4.955897808074951
    7. 'ure' → logprob: -5.205897808074951
    8. 't' → logprob: -5.580897808074951
    9. 'e' → logprob: -5.955897808074951
    10. '=' → logprob: -6.330897808074951

Token 2227: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3799576759338379
    2. ' =' → logprob: -1.504957675933838
    3. '```' → logprob: -3.004957675933838
    4. '=' → logprob: -4.004957675933838
    5. '[]' → logprob: -5.004957675933838
    6. '`' → logprob: -6.004957675933838
    7. '_' → logprob: -6.129957675933838
    8. ',' → logprob: -6.379957675933838
    9. '[' → logprob: -6.379957675933838
    10. '[i' → logprob: -6.504957675933838

Token 2228: 'indices' (ID: 30992)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2333022505044937
    2. '   ' → logprob: -2.233302354812622
    3. ')' → logprob: -2.733302354812622
    4. ' c' → logprob: -4.858302116394043
    5. '1' → logprob: -5.358302116394043
    6. ' (' → logprob: -5.858302116394043
    7. 'n' → logprob: -5.983302116394043
    8. '):
' → logprob: -6.108302116394043
    9. ' =' → logprob: -6.108302116394043
    10. '[]' → logprob: -6.608302116394043

Token 2229: ' où' (ID: 15113)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7817460894584656
    2. '```' → logprob: -1.7817461490631104
    3. ' )' → logprob: -2.9067461490631104
    4. ' =' → logprob: -3.0317461490631104
    5. ' à' → logprob: -3.1567461490631104
    6. '_c' → logprob: -3.4067461490631104
    7. '_' → logprob: -3.6567461490631104
    8. '[' → logprob: -3.7817461490631104
    9. '_des' → logprob: -4.406745910644531
    10. '`' → logprob: -4.781745910644531

Token 2230: ' on' (ID: 402)
  Prédit: ' couper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couper' → logprob: -0.8647713661193848
    2. 'cou' → logprob: -1.4897713661193848
    3. 'c' → logprob: -1.7397713661193848
    4. 'on' → logprob: -2.7397713661193848
    5. 'cut' → logprob: -3.3647713661193848
    6. ' ' → logprob: -3.8647713661193848
    7. ' on' → logprob: -4.489771366119385
    8. '   ' → logprob: -4.614771366119385
    9. 'mettre' → logprob: -5.739771366119385
    10. ' ' → logprob: -5.739771366119385

Token 2231: ' coupe' (ID: 71780)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.15851719677448273
    2. 'veux' → logprob: -2.9085171222686768
    3. 'c' → logprob: -3.5335171222686768
    4. 'cut' → logprob: -4.158517360687256
    5. ' coupe' → logprob: -4.283517360687256
    6. 'do' → logprob: -5.158517360687256
    7. 'cho' → logprob: -5.283517360687256
    8. '_cut' → logprob: -5.908517360687256
    9. ' couper' → logprob: -6.033517360687256
    10. ' cou' → logprob: -6.283517360687256

Token 2232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2440313696861267
    2. '_' → logprob: -1.9940314292907715
    3. '=' → logprob: -3.2440314292907715
    4. ' =' → logprob: -4.6190314292907715
    5. '   ' → logprob: -4.9940314292907715
    6. '```' → logprob: -5.2440314292907715
    7. '`' → logprob: -5.6190314292907715
    8. ' )' → logprob: -5.8690314292907715
    9. '[' → logprob: -6.3690314292907715
    10. ',' → logprob: -6.4940314292907715

Token 2233: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001242613303475082
    2. ' =' → logprob: -7.626242637634277
    3. '```' → logprob: -8.126242637634277
    4. 'def' → logprob: -8.751242637634277
    5. '
' → logprob: -9.501242637634277
    6. ',' → logprob: -9.501242637634277
    7. 'import' → logprob: -10.626242637634277
    8. '       ' → logprob: -10.876242637634277
    9. '=' → logprob: -11.251242637634277
    10. '    
' → logprob: -11.376242637634277

Token 2234: ' maxim' (ID: 29045)
  Prédit: ' maxim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maxim' → logprob: -1.262892246246338
    2. 'max' → logprob: -1.387892246246338
    3. ' couper' → logprob: -2.137892246246338
    4. ' maximize' → logprob: -2.637892246246338
    5. ' choisir' → logprob: -2.762892246246338
    6. 'c' → logprob: -3.137892246246338
    7. 'maximize' → logprob: -3.512892246246338
    8. ' max' → logprob: -3.762892246246338
    9. ' ' → logprob: -3.762892246246338
    10. '   ' → logprob: -4.137892246246338

Token 2235: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.002016548067331314
    2. 'aiser' → logprob: -7.252016544342041
    3. 'izer' → logprob: -8.2520170211792
    4. 'is' → logprob: -8.3770170211792
    5. 'al' → logprob: -8.3770170211792
    6. 'er' → logprob: -8.7520170211792
    7. 'ser' → logprob: -9.1270170211792
    8. '```' → logprob: -9.1270170211792
    9. '#' → logprob: -10.0020170211792
    10. 'aser' → logprob: -10.3770170211792

Token 2236: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0302762985229492
    2. ' sum' → logprob: -1.5302762985229492
    3. 'sum' → logprob: -1.6552762985229492
    4. '   ' → logprob: -2.405276298522949
    5. ' c' → logprob: -2.780276298522949
    6. '```' → logprob: -3.155276298522949
    7. ' la' → logprob: -4.030276298522949
    8. '	c' → logprob: -5.780276298522949
    9. '`' → logprob: -6.030276298522949
    10. '(sum' → logprob: -6.155276298522949

Token 2237: ' salaire' (ID: 135427)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0858228206634521
    2. 'sum' → logprob: -1.4608228206634521
    3. ' sum' → logprob: -1.5858228206634521
    4. '_c' → logprob: -1.8358228206634521
    5. 's' → logprob: -4.960823059082031
    6. 'score' → logprob: -4.960823059082031
    7. ' c' → logprob: -4.960823059082031
    8. '_' → logprob: -5.085823059082031
    9. ' _' → logprob: -5.210823059082031
    10. '_sum' → logprob: -5.335823059082031

Token 2238: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038647815585136414
    2. '
' → logprob: -3.4136478900909424
    3. '    
' → logprob: -5.788647651672363
    4. 'def' → logprob: -7.163647651672363
    5. ':' → logprob: -8.538647651672363
    6. '```' → logprob: -8.663647651672363
    7. '_j' → logprob: -8.913647651672363
    8. ':
' → logprob: -9.788647651672363
    9. ',' → logprob: -9.913647651672363
    10. 'import' → logprob: -10.038647651672363

Token 2239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002967238426208496
    2. 'n' → logprob: -6.002967357635498
    3. 'def' → logprob: -8.62796688079834
    4. '    
' → logprob: -9.00296688079834
    5. 'j' → logprob: -10.12796688079834
    6. '(n' → logprob: -10.25296688079834
    7. '
' → logprob: -10.87796688079834
    8. 'import' → logprob: -10.87796688079834
    9. '```' → logprob: -11.37796688079834
    10. '`' → logprob: -12.00296688079834

Token 2240: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003113899379968643
    2. 'n' → logprob: -6.378113746643066
    3. 'def' → logprob: -7.878113746643066
    4. '    
' → logprob: -8.003113746643066
    5. '
' → logprob: -8.878113746643066
    6. ')' → logprob: -9.253113746643066
    7. '(n' → logprob: -9.253113746643066
    8. 'j' → logprob: -10.003113746643066
    9. '```' → logprob: -10.003113746643066
    10. ':' → logprob: -10.503113746643066

Token 2241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016644196584820747
    2. 'n' → logprob: -4.14164400100708
    3. '(n' → logprob: -8.641644477844238
    4. 'def' → logprob: -9.141644477844238
    5. '    
' → logprob: -9.266644477844238
    6. '```' → logprob: -9.516644477844238
    7. '
' → logprob: -10.141644477844238
    8. ' n' → logprob: -10.766644477844238
    9. '\n' → logprob: -11.016644477844238
    10. 'j' → logprob: -11.391644477844238

Token 2242: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030273372307419777
    2. 'n' → logprob: -3.5302734375
    3. 'def' → logprob: -9.0302734375
    4. '    
' → logprob: -9.0302734375
    5. 'j' → logprob: -9.1552734375
    6. '```' → logprob: -10.0302734375
    7. ' n' → logprob: -10.2802734375
    8. '(n' → logprob: -10.6552734375
    9. '	n' → logprob: -11.4052734375
    10. '
' → logprob: -11.5302734375

Token 2243: ' Comme' (ID: 53252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15217655897140503
    2. 'n' → logprob: -2.02717661857605
    3. 'dp' → logprob: -6.152176380157471
    4. 'def' → logprob: -6.777176380157471
    5. '
' → logprob: -7.027176380157471
    6. 'm' → logprob: -7.277176380157471
    7. '```' → logprob: -7.527176380157471
    8. 'j' → logprob: -7.527176380157471
    9. 'c' → logprob: -7.652176380157471
    10. 'cuts' → logprob: -8.027176856994629

Token 2244: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3100149929523468
    2. '   ' → logprob: -1.5600149631500244
    3. 'n' → logprob: -3.6850149631500244
    4. ' c' → logprob: -4.1850152015686035
    5. 'len' → logprob: -5.0600152015686035
    6. ' n' → logprob: -5.8100152015686035
    7. 'not' → logprob: -6.3100152015686035
    8. 'sum' → logprob: -7.0600152015686035
    9. '
' → logprob: -7.5600152015686035
    10. ' len' → logprob: -7.9350152015686035

Token 2245: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27090635895729065
    2. ' =' → logprob: -1.6459063291549683
    3. ' ' → logprob: -4.270906448364258
    4. '_' → logprob: -5.145906448364258
    5. '+' → logprob: -5.520906448364258
    6. '   ' → logprob: -5.520906448364258
    7. '#' → logprob: -5.645906448364258
    8. '  ' → logprob: -6.520906448364258
    9. ' ==' → logprob: -6.645906448364258
    10. ''' → logprob: -7.145906448364258

Token 2246: ' aller' (ID: 18383)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05192319676280022
    2. '<=' → logprob: -3.3019232749938965
    3. 'être' → logprob: -5.3019232749938965
    4. 'ont' → logprob: -6.0519232749938965
    5. ' <=' → logprob: -6.3019232749938965
    6. ' =' → logprob: -6.8019232749938965
    7. ''' → logprob: -7.4269232749938965
    8. ''être' → logprob: -7.6769232749938965
    9. '>=' → logprob: -7.9269232749938965
    10. '==' → logprob: -8.426922798156738

Token 2247: ' de' (ID: 334)
  Prédit: 'jus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jus' → logprob: -1.0891005992889404
    2. ' jusqu' → logprob: -1.5891005992889404
    3. 'de' → logprob: -1.9641005992889404
    4. 'up' → logprob: -2.0891005992889404
    5. 'from' → logprob: -2.0891005992889404
    6. ' de' → logprob: -3.3391005992889404
    7. '=' → logprob: -4.5891008377075195
    8. ' up' → logprob: -4.8391008377075195
    9. '```' → logprob: -4.9641008377075195
    10. ' jusque' → logprob: -5.3391008377075195

Token 2248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07276634871959686
    2. ' ' → logprob: -2.6977663040161133
    3. '1' → logprob: -6.072766304016113
    4. ' n' → logprob: -8.197766304016113
    5. 'n' → logprob: -8.822766304016113
    6. 'c' → logprob: -10.697766304016113
    7. ' ' → logprob: -11.197766304016113
    8. ' c' → logprob: -11.572766304016113
    9. '   ' → logprob: -12.010266304016113
    10. '`' → logprob: -12.072766304016113

Token 2249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00868300162255764
    2. '1' → logprob: -5.258683204650879
    3. ' ' → logprob: -6.133683204650879
    4. 'n' → logprob: -7.008683204650879
    5. 'c' → logprob: -8.508683204650879
    6. ' n' → logprob: -9.633683204650879
    7. '`' → logprob: -11.258683204650879
    8. 'k' → logprob: -11.258683204650879
    9. '```' → logprob: -11.633683204650879
    10. ' c' → logprob: -12.133683204650879

Token 2250: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8987601399421692
    2. '   ' → logprob: -1.3987600803375244
    3. ',' → logprob: -2.0237600803375244
    4. ' jusqu' → logprob: -3.0237600803375244
    5. '...' → logprob: -3.3987600803375244
    6. '       ' → logprob: -4.0237603187561035
    7. ' ' → logprob: -4.2737603187561035
    8. 'à' → logprob: -4.3987603187561035
    9. ' to' → logprob: -4.5237603187561035
    10. '..' → logprob: -4.6487603187561035

Token 2251: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.225828155875206
    2. ' n' → logprob: -1.6008281707763672
    3. '(n' → logprob: -7.975828170776367
    4. ' (' → logprob: -9.850828170776367
    5. '   ' → logprob: -12.350828170776367
    6. '	n' → logprob: -12.600828170776367
    7. '\n' → logprob: -12.850828170776367
    8. ' ' → logprob: -13.225828170776367
    9. ' ' → logprob: -13.850828170776367
    10. '#' → logprob: -14.100828170776367

Token 2252: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019310165662318468
    2. ' -' → logprob: -7.126931190490723
    3. '#' → logprob: -8.001931190490723
    4. '```' → logprob: -8.001931190490723
    5. '
' → logprob: -8.626931190490723
    6. '-
' → logprob: -9.376931190490723
    7. '   ' → logprob: -9.376931190490723
    8. '=' → logprob: -9.626931190490723
    9. '``' → logprob: -12.126931190490723
    10. '−' → logprob: -12.251931190490723

Token 2253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.590104698669165e-05
    2. '-' → logprob: -10.375085830688477
    3. '#' → logprob: -10.500085830688477
    4. ')' → logprob: -11.750085830688477
    5. ' ' → logprob: -12.125085830688477
    6. '2' → logprob: -12.250085830688477
    7. '0' → logprob: -13.000085830688477
    8. '```' → logprob: -13.875085830688477
    9. ']' → logprob: -14.000085830688477
    10. '`' → logprob: -14.125085830688477

Token 2254: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3248400092124939
    2. ':' → logprob: -1.5748400688171387
    3. ':
' → logprob: -3.3248400688171387
    4. '```' → logprob: -4.199840068817139
    5. '(n' → logprob: -5.324840068817139
    6. ',' → logprob: -5.824840068817139
    7. '[n' → logprob: -5.949840068817139
    8. 'n' → logprob: -6.074840068817139
    9. '):
' → logprob: -6.574840068817139
    10. '):' → logprob: -6.699840068817139

Token 2255: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000977671123109758
    2. '#' → logprob: -8.500977516174316
    3. 'n' → logprob: -8.500977516174316
    4. '       ' → logprob: -8.625977516174316
    5. '    
' → logprob: -8.750977516174316
    6. ' n' → logprob: -10.000977516174316
    7. '(n' → logprob: -11.000977516174316
    8. ' for' → logprob: -11.125977516174316
    9. ',' → logprob: -11.250977516174316
    10. '```' → logprob: -11.250977516174316

Token 2256: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28199437260627747
    2. 'c' → logprob: -2.156994342803955
    3. '#' → logprob: -3.656994342803955
    4. ' on' → logprob: -3.656994342803955
    5. 'n' → logprob: -3.906994342803955
    6. ' n' → logprob: -4.281994342803955
    7. ' c' → logprob: -4.906994342803955
    8. ' #' → logprob: -5.031994342803955
    9. '```' → logprob: -5.281994342803955
    10. 'max' → logprob: -5.906994342803955

Token 2257: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31948837637901306
    2. '_' → logprob: -2.694488286972046
    3. 'j' → logprob: -2.694488286972046
    4. ')' → logprob: -3.819488286972046
    5. 'n' → logprob: -3.944488286972046
    6. '#' → logprob: -4.194488525390625
    7. '_c' → logprob: -4.694488525390625
    8. '(' → logprob: -5.319488525390625
    9. '`' → logprob: -5.319488525390625
    10. ' c' → logprob: -5.319488525390625

Token 2258: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.3860330283641815
    2. 'ure' → logprob: -1.761033058166504
    3. 's' → logprob: -3.386033058166504
    4. 'es' → logprob: -3.886033058166504
    5. 'é' → logprob: -4.261033058166504
    6. 'er' → logprob: -4.261033058166504
    7. '
' → logprob: -4.636033058166504
    8. '#' → logprob: -5.011033058166504
    9. '_' → logprob: -5.261033058166504
    10. ')' → logprob: -5.261033058166504

Token 2259: ' se' (ID: 458)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5642174482345581
    2. '=' → logprob: -1.439217448234558
    3. 's' → logprob: -1.939217448234558
    4. '```' → logprob: -3.8142175674438477
    5. ')' → logprob: -5.439217567443848
    6. '_possible' → logprob: -5.939217567443848
    7. '_' → logprob: -6.314217567443848
    8. '[' → logprob: -6.564217567443848
    9. 'possible' → logprob: -6.689217567443848
    10. ' s' → logprob: -6.814217567443848

Token 2260: ' font' (ID: 5109)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2553868889808655
    2. 'nt' → logprob: -2.1303868293762207
    3. 'r' → logprob: -2.8803868293762207
    4. 'lect' → logprob: -4.880386829376221
    5. 'ts' → logprob: -5.005386829376221
    6. 's' → logprob: -5.630386829376221
    7. 'rc' → logprob: -5.630386829376221
    8. ' t' → logprob: -5.880386829376221
    9. 'ont' → logprob: -6.005386829376221
    10. 'lection' → logprob: -6.130386829376221

Token 2261: ' en' (ID: 469)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.6433546543121338
    2. 'sur' → logprob: -1.5183546543121338
    3. 'à' → logprob: -3.143354654312134
    4. 'dans' → logprob: -3.268354654312134
    5. ' sur' → logprob: -3.518354654312134
    6. 'aux' → logprob: -3.643354654312134
    7. ' à' → logprob: -3.768354654312134
    8. '[' → logprob: -4.268354415893555
    9. ' aux' → logprob: -4.518354415893555
    10. ' entre' → logprob: -4.518354415893555

Token 2262: ' indices' (ID: 30378)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.4227216243743896
    2. 'n' → logprob: -1.5477216243743896
    3. ' i' → logprob: -1.5477216243743896
    4. 'i' → logprob: -2.5477216243743896
    5. 'range' → logprob: -3.0477216243743896
    6. ' ' → logprob: -3.2977216243743896
    7. 'c' → logprob: -3.5477216243743896
    8. ' range' → logprob: -3.5477216243743896
    9. ' chaque' → logprob: -3.5477216243743896
    10. '0' → logprob: -3.9227216243743896

Token 2263: ' des' (ID: 731)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.29011115431785583
    2. '`' → logprob: -3.1651110649108887
    3. 'c' → logprob: -3.1651110649108887
    4. '0' → logprob: -3.2901110649108887
    5. '   ' → logprob: -3.9151110649108887
    6. '[' → logprob: -4.290111064910889
    7. '[i' → logprob: -4.290111064910889
    8. 'des' → logprob: -4.415111064910889
    9. ' des' → logprob: -4.540111064910889
    10. '[
' → logprob: -5.040111064910889

Token 2264: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5878803730010986
    2. '_j' → logprob: -1.9628803730010986
    3. ' joints' → logprob: -2.2128803730010986
    4. 'j' → logprob: -2.3378803730010986
    5. ' _' → logprob: -3.8378803730010986
    6. '#' → logprob: -4.3378801345825195
    7. ' #' → logprob: -4.3378801345825195
    8. ' j' → logprob: -4.7128801345825195
    9. 'c' → logprob: -4.9628801345825195
    10. 'joint' → logprob: -5.3378801345825195

Token 2265: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011745071969926357
    2. '[' → logprob: -6.636744976043701
    3. ':' → logprob: -6.761744976043701
    4. '```' → logprob: -6.761744976043701
    5. 'def' → logprob: -6.886744976043701
    6. '[
' → logprob: -7.011744976043701
    7. ' =' → logprob: -7.136744976043701
    8. '[n' → logprob: -7.136744976043701
    9. ')' → logprob: -7.261744976043701
    10. '[i' → logprob: -7.261744976043701

Token 2266: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.651763916015625
    2. '   ' → logprob: -0.776763916015625
    3. ':' → logprob: -4.276763916015625
    4. 'n' → logprob: -6.651763916015625
    5. '"' → logprob: -7.526763916015625
    6. '```' → logprob: -7.526763916015625
    7. '`' → logprob: -7.901763916015625
    8. 'i' → logprob: -8.026763916015625
    9. '[' → logprob: -8.151763916015625
    10. ''' → logprob: -8.276763916015625

Token 2267: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37250852584838867
    2. '#' (adapté à ' #') → logprob: -1.2475085258483887
    3. ':' → logprob: -4.497508525848389
    4. ' #' → logprob: -5.622508525848389
    5. 'n' → logprob: -6.622508525848389
    6. ':
' → logprob: -6.997508525848389
    7. 'c' → logprob: -6.997508525848389
    8. '"' → logprob: -6.997508525848389
    9. '#
' → logprob: -7.497508525848389
    10. '       ' → logprob: -7.747508525848389

Token 2268: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05996200442314148
    2. '#' → logprob: -3.059962034225464
    3. 'c' → logprob: -5.809961795806885
    4. 'n' → logprob: -6.809961795806885
    5. '[' → logprob: -7.184961795806885
    6. '```' → logprob: -7.184961795806885
    7. ':' → logprob: -7.309961795806885
    8. ')' → logprob: -7.434961795806885
    9. '"' → logprob: -7.684961795806885
    10. '\' → logprob: -7.809961795806885

Token 2269: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5830002427101135
    2. ' =' → logprob: -1.0830001831054688
    3. '#' → logprob: -3.0830001831054688
    4. '_' → logprob: -4.333000183105469
    5. '   ' → logprob: -4.583000183105469
    6. '+' → logprob: -5.208000183105469
    7. '```' → logprob: -5.458000183105469
    8. ',' → logprob: -6.083000183105469
    9. 'o' → logprob: -6.083000183105469
    10. '`' → logprob: -6.208000183105469

Token 2270: ' un' (ID: 537)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.1200495958328247
    2. 'n' → logprob: -1.8700495958328247
    3. '   ' → logprob: -1.9950495958328247
    4. ' possible' → logprob: -2.620049476623535
    5. ' =' → logprob: -3.120049476623535
    6. 'une' → logprob: -3.370049476623535
    7. '```' → logprob: -3.620049476623535
    8. ' n' → logprob: -3.620049476623535
    9. '(n' → logprob: -3.745049476623535
    10. '0' → logprob: -3.745049476623535

Token 2271: ' problème' (ID: 35630)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.6551893949508667
    2. '_' → logprob: -1.7801893949508667
    3. 'n' → logprob: -2.2801895141601562
    4. ' problem' → logprob: -3.1551895141601562
    5. ' n' → logprob: -3.2801895141601562
    6. '\' → logprob: -3.4051895141601562
    7. ' subset' → logprob: -3.5301895141601562
    8. ' max' → logprob: -3.7801895141601562
    9. ' choix' → logprob: -3.7801895141601562
    10. 'max' → logprob: -4.030189514160156

Token 2272: ' combin' (ID: 25307)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8295433521270752
    2. '=' → logprob: -1.7045433521270752
    3. '#' → logprob: -2.079543352127075
    4. ' =' → logprob: -2.704543352127075
    5. '```' → logprob: -3.204543352127075
    6. '(n' → logprob: -3.829543352127075
    7. ' de' → logprob: -4.079543113708496
    8. '[n' → logprob: -4.204543113708496
    9. '
' → logprob: -4.454543113708496
    10. 'de' → logprob: -4.454543113708496

Token 2273: 'atoire' (ID: 41651)
  Prédit: 'atorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atorial' → logprob: -0.12193341553211212
    2. 'ation' → logprob: -2.6219334602355957
    3. 'atoire' → logprob: -3.6219334602355957
    4. 'a' → logprob: -5.121933460235596
    5. 'at' → logprob: -6.371933460235596
    6. '```' → logprob: -6.746933460235596
    7. 'ator' → logprob: -6.871933460235596
    8. 'ationale' → logprob: -7.121933460235596
    9. '_' → logprob: -7.371933460235596
    10. 'e' → logprob: -7.371933460235596

Token 2274: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20935051143169403
    2. ':' → logprob: -3.2093505859375
    3. '[n' → logprob: -3.4593505859375
    4. 'def' → logprob: -3.5843505859375
    5. '[' → logprob: -3.9593505859375
    6. '#' → logprob: -4.4593505859375
    7. '(n' → logprob: -4.4593505859375
    8. '[
' → logprob: -4.5843505859375
    9. '```' → logprob: -4.8343505859375
    10. ']' → logprob: -5.3343505859375

Token 2275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005391703452914953
    2. 'n' → logprob: -6.005391597747803
    3. 'def' → logprob: -6.255391597747803
    4. '    
' → logprob: -8.505392074584961
    5. '```' → logprob: -8.505392074584961
    6. '(n' → logprob: -9.130392074584961
    7. '
' → logprob: -9.255392074584961
    8. ')' → logprob: -9.380392074584961
    9. 'import' → logprob: -9.380392074584961
    10. '#' → logprob: -10.255392074584961

Token 2276: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033202528953552246
    2. 'n' → logprob: -3.658202648162842
    3. 'def' → logprob: -5.783202648162842
    4. '    
' → logprob: -7.408202648162842
    5. '
' → logprob: -7.533202648162842
    6. '(n' → logprob: -7.658202648162842
    7. ')' → logprob: -7.908202648162842
    8. '\' → logprob: -8.033202171325684
    9. '```' → logprob: -8.158202171325684
    10. 'j' → logprob: -8.408202171325684

Token 2277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019556308165192604
    2. 'n' → logprob: -4.269556522369385
    3. 'def' → logprob: -5.769556522369385
    4. '(n' → logprob: -7.269556522369385
    5. '    
' → logprob: -8.144556045532227
    6. '```' → logprob: -8.644556045532227
    7. 'j' → logprob: -8.769556045532227
    8. '
' → logprob: -9.144556045532227
    9. '\n' → logprob: -9.394556045532227
    10. ' n' → logprob: -9.519556045532227

Token 2278: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056504443287849426
    2. 'n' → logprob: -3.306504487991333
    3. 'j' → logprob: -4.431504249572754
    4. 'def' → logprob: -5.556504249572754
    5. 'p' → logprob: -7.681504249572754
    6. '    
' → logprob: -7.681504249572754
    7. ')' → logprob: -8.431504249572754
    8. '\' → logprob: -8.556504249572754
    9. 'joint' → logprob: -8.556504249572754
    10. '```' → logprob: -9.056504249572754

Token 2279: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39573079347610474
    2. 'n' → logprob: -1.14573073387146
    3. 'def' → logprob: -4.895730972290039
    4. 'from' → logprob: -8.020730972290039
    5. '```' → logprob: -8.020730972290039
    6. 'import' → logprob: -8.645730972290039
    7. ' n' → logprob: -8.895730972290039
    8. '    
' → logprob: -9.520730972290039
    9. '#' → logprob: -9.895730972290039
    10. 'j' → logprob: -9.895730972290039

Token 2280: ' difficulté' (ID: 115364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30520352721214294
    2. 'n' → logprob: -1.6802035570144653
    3. '#' → logprob: -2.805203437805176
    4. '
' → logprob: -5.555203437805176
    5. '#
' → logprob: -5.805203437805176
    6. '(n' → logprob: -6.430203437805176
    7. '   ' → logprob: -6.555203437805176
    8. 'from' → logprob: -7.680203437805176
    9. ')' → logprob: -7.805203437805176
    10. '_' → logprob: -7.805203437805176

Token 2281: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5506998300552368
    2. ':' → logprob: -1.6756998300552368
    3. '=' → logprob: -2.8006997108459473
    4. 'def' → logprob: -3.1756997108459473
    5. ' =' → logprob: -3.3006997108459473
    6. '[' → logprob: -4.050699710845947
    7. '[n' → logprob: -4.300699710845947
    8. '```' → logprob: -4.800699710845947
    9. '#' → logprob: -4.925699710845947
    10. '(n' → logprob: -5.050699710845947

Token 2282: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6689601540565491
    2. 'n' → logprob: -1.1689600944519043
    3. 'def' → logprob: -1.9189600944519043
    4. ' n' → logprob: -5.043960094451904
    5. 'import' → logprob: -5.418960094451904
    6. '(n' → logprob: -5.668960094451904
    7. ')' → logprob: -6.543960094451904
    8. ':' → logprob: -6.668960094451904
    9. 'j' → logprob: -6.668960094451904
    10. 'pass' → logprob: -6.793960094451904

Token 2283: ' somme' (ID: 64484)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7292673587799072
    2. 'n' → logprob: -1.2292673587799072
    3. 'c' → logprob: -2.7292673587799072
    4. 'j' → logprob: -3.2292673587799072
    5. 's' → logprob: -3.8542673587799072
    6. '#' → logprob: -4.229267120361328
    7. ')' → logprob: -4.354267120361328
    8. ',' → logprob: -5.354267120361328
    9. '\' → logprob: -5.354267120361328
    10. '
' → logprob: -5.479267120361328

Token 2284: ' des' (ID: 731)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.6251153349876404
    2. '=' → logprob: -1.7501153945922852
    3. 'des' → logprob: -2.125115394592285
    4. '_' → logprob: -3.000115394592285
    5. '   ' → logprob: -3.875115394592285
    6. ' =' → logprob: -3.875115394592285
    7. '#' → logprob: -4.375115394592285
    8. ' des' → logprob: -4.500115394592285
    9. 'de' → logprob: -4.750115394592285
    10. '```' → logprob: -4.875115394592285

Token 2285: ' joint' (ID: 14585)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.8705137372016907
    2. '_' → logprob: -1.870513677597046
    3. 'c' → logprob: -1.870513677597046
    4. 'j' → logprob: -2.745513677597046
    5. '_c' → logprob: -2.745513677597046
    6. 'cuts' → logprob: -3.120513677597046
    7. '_cut' → logprob: -3.370513677597046
    8. ']' → logprob: -3.995513677597046
    9. 'cut' → logprob: -4.620513916015625
    10. ')' → logprob: -5.120513916015625

Token 2286: ' coup' (ID: 25465)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00031949623371474445
    2. ' s' → logprob: -9.375319480895996
    3. ''s' → logprob: -9.750319480895996
    4. '_s' → logprob: -10.250319480895996
    5. ''' → logprob: -10.500319480895996
    6. ']' → logprob: -10.750319480895996
    7. '_' → logprob: -11.000319480895996
    8. ')' → logprob: -11.375319480895996
    9. '_lengths' → logprob: -11.625319480895996
    10. 'def' → logprob: -12.125319480895996

Token 2287: 'és' (ID: 1756)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3198776245117188
    2. 'é' → logprob: -1.3198776245117188
    3. 'es' → logprob: -1.9448776245117188
    4. 'ures' → logprob: -2.0698776245117188
    5. 's' → logprob: -2.4448776245117188
    6. '=' → logprob: -3.4448776245117188
    7. '_cut' → logprob: -4.069877624511719
    8. 'és' → logprob: -4.569877624511719
    9. 'e' → logprob: -4.694877624511719
    10. 'ed' → logprob: -4.819877624511719

Token 2288: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5420437455177307
    2. '_used' → logprob: -1.667043685913086
    3. '_util' → logprob: -2.292043685913086
    4. ' =' → logprob: -3.292043685913086
    5. '_' → logprob: -3.417043685913086
    6. 'es' → logprob: -4.917043685913086
    7. ' est' → logprob: -5.167043685913086
    8. 'util' → logprob: -5.542043685913086
    9. ' utilisés' → logprob: -5.667043685913086
    10. 'used' → logprob: -5.792043685913086

Token 2289: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19989480078220367
    2. ' ' → logprob: -3.449894905090332
    3. ' j' → logprob: -3.449894905090332
    4. ' max' → logprob: -3.699894905090332
    5. 'sum' → logprob: -3.699894905090332
    6. ' sum' → logprob: -3.949894905090332
    7. 'max' → logprob: -4.324894905090332
    8. 'j' → logprob: -4.574894905090332
    9. 'n' → logprob: -5.824894905090332
    10. '=' → logprob: -6.074894905090332

Token 2290: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.1181395053863525
    2. 'j' → logprob: -1.3681395053863525
    3. 's' → logprob: -2.2431395053863525
    4. '0' → logprob: -2.7431395053863525
    5. 'joint' → logprob: -2.8681395053863525
    6. ' sum' → logprob: -3.3681395053863525
    7. '+' → logprob: -3.7431395053863525
    8. 'p' → logprob: -3.9931395053863525
    9. 'max' → logprob: -4.493139266967773
    10. 'prefix' → logprob: -4.743139266967773

Token 2291: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.784365713596344
    2. '_des' → logprob: -1.4093656539916992
    3. ' des' → logprob: -2.034365653991699
    4. '_' → logprob: -2.409365653991699
    5. '_c' → logprob: -4.034365653991699
    6. '_j' → logprob: -4.534365653991699
    7. '```' → logprob: -4.534365653991699
    8. '_of' → logprob: -4.909365653991699
    9. '+' → logprob: -5.284365653991699
    10. 'of' → logprob: -5.409365653991699

Token 2292: ' j' (ID: 441)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6301239728927612
    2. 'j' → logprob: -1.2551239728927612
    3. 'joint' → logprob: -3.630124092102051
    4. ')' → logprob: -3.880124092102051
    5. 'cuts' → logprob: -3.880124092102051
    6. 'cut' → logprob: -4.005124092102051
    7. ']' → logprob: -4.130124092102051
    8. '_j' → logprob: -4.505124092102051
    9. 'i' → logprob: -4.880124092102051
    10. '+' → logprob: -5.255124092102051

Token 2293: '_i' (ID: 10853)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.16001315414905548
    2. '_' → logprob: -2.660013198852539
    3. '[' → logprob: -3.410013198852539
    4. 'oint' → logprob: -3.910013198852539
    5. 's' → logprob: -5.160013198852539
    6. '[i' → logprob: -5.410013198852539
    7. '[]' → logprob: -5.535013198852539
    8. '_c' → logprob: -6.660013198852539
    9. '_used' → logprob: -6.785013198852539
    10. ']' → logprob: -7.035013198852539

Token 2294: ' pour' (ID: 1930)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7052171230316162
    2. '[' → logprob: -1.4552171230316162
    3. '_used' → logprob: -2.205217123031616
    4. 's' → logprob: -2.455217123031616
    5. '_' → logprob: -3.830217123031616
    6. '```' → logprob: -3.955217123031616
    7. '[]' → logprob: -4.580217361450195
    8. '[
' → logprob: -5.080217361450195
    9. ']' → logprob: -5.455217361450195
    10. '[_' → logprob: -6.330217361450195

Token 2295: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.29556509852409363
    2. 'i' → logprob: -2.795565128326416
    3. ' ' → logprob: -2.795565128326416
    4. '_' → logprob: -2.920565128326416
    5. ')' → logprob: -4.045565128326416
    6. ' _' → logprob: -4.045565128326416
    7. ''' → logprob: -4.170565128326416
    8. ' =' → logprob: -5.045565128326416
    9. ' )' → logprob: -6.170565128326416
    10. '=' → logprob: -6.545565128326416

Token 2296: ' dans' (ID: 2671)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25233447551727295
    2. '[' → logprob: -1.877334475517273
    3. '=' → logprob: -3.7523345947265625
    4. ' +' → logprob: -3.8773345947265625
    5. ']' → logprob: -5.0023345947265625
    6. ')' → logprob: -5.8773345947265625
    7. '[
' → logprob: -5.8773345947265625
    8. '```' → logprob: -6.7523345947265625
    9. '<=' → logprob: -6.8773345947265625
    10. ' in' → logprob: -7.1273345947265625

Token 2297: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5896262526512146
    2. ' range' → logprob: -0.8396262526512146
    3. 'c' → logprob: -5.089626312255859
    4. 'cuts' → logprob: -6.714626312255859
    5. 'cut' → logprob: -6.839626312255859
    6. ' used' → logprob: -7.339626312255859
    7. ' cuts' → logprob: -7.464626312255859
    8. ' la' → logprob: -7.964626312255859
    9. ' cut' → logprob: -7.964626312255859
    10. '   ' → logprob: -8.08962631225586

Token 2298: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.150369644165039
    2. 'range' → logprob: -2.025369644165039
    3. '_cut' → logprob: -2.025369644165039
    4. '_c' → logprob: -2.150369644165039
    5. ' range' → logprob: -2.775369644165039
    6. ' _' → logprob: -2.900369644165039
    7. 'cut' → logprob: -2.900369644165039
    8. ' coup' → logprob: -4.150369644165039
    9. 'cuts' → logprob: -4.275369644165039
    10. '_used' → logprob: -4.525369644165039

Token 2299: 'ures' (ID: 1609)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1112099885940552
    2. '_' → logprob: -1.4862099885940552
    3. '[]' → logprob: -1.8612099885940552
    4. '_cut' → logprob: -2.1112098693847656
    5. '[' → logprob: -2.9862098693847656
    6. '[
' → logprob: -3.6112098693847656
    7. 'u' → logprob: -3.9862098693847656
    8. '[i' → logprob: -4.486209869384766
    9. 'cuts' → logprob: -4.736209869384766
    10. 'ections' → logprob: -5.111209869384766

Token 2300: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013713735155761242
    2. '```' → logprob: -5.888713836669922
    3. '
' → logprob: -6.388713836669922
    4. ']' → logprob: -6.763713836669922
    5. ':' → logprob: -6.888713836669922
    6. 'def' → logprob: -6.888713836669922
    7. ')' → logprob: -6.888713836669922
    8. '[' → logprob: -7.513713836669922
    9. '[i' → logprob: -7.763713836669922
    10. ' =' → logprob: -7.888713836669922

Token 2301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035227409098297358
    2. 'def' → logprob: -6.503522872924805
    3. '#' → logprob: -7.128522872924805
    4. '#
' → logprob: -8.003522872924805
    5. 'n' → logprob: -8.628522872924805
    6. '    
' → logprob: -8.628522872924805
    7. '```' → logprob: -9.003522872924805
    8. '
' → logprob: -9.253522872924805
    9. 'import' → logprob: -9.503522872924805
    10. ')' → logprob: -10.378522872924805

Token 2302: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002347338479012251
    2. 'def' → logprob: -6.627347469329834
    3. 'n' → logprob: -8.252346992492676
    4. '    
' → logprob: -8.252346992492676
    5. '
' → logprob: -8.877346992492676
    6. ')' → logprob: -9.752346992492676
    7. '```' → logprob: -9.877346992492676
    8. '#' → logprob: -10.002346992492676
    9. 'import' → logprob: -10.377346992492676
    10. 'j' → logprob: -10.377346992492676

Token 2303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005906161852180958
    2. 'n' → logprob: -6.130906105041504
    3. 'def' → logprob: -6.755906105041504
    4. 'j' → logprob: -7.005906105041504
    5. '    
' → logprob: -7.880906105041504
    6. '```' → logprob: -7.880906105041504
    7. '`' → logprob: -8.880906105041504
    8. 'import' → logprob: -9.505906105041504
    9. '       ' → logprob: -9.505906105041504
    10. '#' → logprob: -9.505906105041504

Token 2304: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028147153556346893
    2. 'n' → logprob: -3.6531472206115723
    3. 'def' → logprob: -7.153147220611572
    4. 'j' → logprob: -8.278146743774414
    5. '
' → logprob: -8.653146743774414
    6. '    
' → logprob: -8.778146743774414
    7. '(n' → logprob: -9.153146743774414
    8. '```' → logprob: -9.278146743774414
    9. '#' (adapté à ' #') → logprob: -10.153146743774414
    10. '\' → logprob: -10.778146743774414

Token 2305: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06954553723335266
    2. 'n' → logprob: -2.8195455074310303
    3. 'def' → logprob: -5.194545745849609
    4. '```' → logprob: -7.444545745849609
    5. '
' → logprob: -7.819545745849609
    6. 'j' → logprob: -8.19454574584961
    7. '    
' → logprob: -8.31954574584961
    8. '#' → logprob: -8.94454574584961
    9. ' n' → logprob: -9.44454574584961
    10. '(n' → logprob: -10.44454574584961

Token 2306: ' cherche' (ID: 52345)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6279698610305786
    2. '=' → logprob: -1.8779698610305786
    3. '#' → logprob: -2.627969741821289
    4. 'def' → logprob: -3.127969741821289
    5. 'continue' → logprob: -3.377969741821289
    6. ' =' → logprob: -3.627969741821289
    7. '_j' → logprob: -4.002969741821289
    8. '[]' → logprob: -4.252969741821289
    9. 'do' → logprob: -4.377969741821289
    10. 'n' → logprob: -5.127969741821289

Token 2307: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25269168615341187
    2. ':' → logprob: -3.2526917457580566
    3. '"' → logprob: -3.3776917457580566
    4. 'à' → logprob: -3.3776917457580566
    5. ''' → logprob: -3.8776917457580566
    6. ')' → logprob: -3.8776917457580566
    7. '_' → logprob: -4.252691745758057
    8. 'def' → logprob: -4.627691745758057
    9. ' ' → logprob: -5.127691745758057
    10. '       ' → logprob: -5.252691745758057

Token 2308: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6100931167602539
    2. 'cho' → logprob: -1.110093116760254
    3. 'maximize' → logprob: -2.610093116760254
    4. 'chercher' → logprob: -4.610093116760254
    5. '#' → logprob: -4.735093116760254
    6. 'prendre' → logprob: -4.735093116760254
    7. 'tr' → logprob: -5.110093116760254
    8. 'import' → logprob: -5.985093116760254
    9. 'choose' → logprob: -5.985093116760254
    10. 'optim' → logprob: -5.985093116760254

Token 2309: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.11973229795694351
    2. 'al' → logprob: -3.74473237991333
    3. 'izer' → logprob: -4.36973237991333
    4. '```' → logprob: -4.61973237991333
    5. 'm' → logprob: -4.74473237991333
    6. 'ser' → logprob: -4.86973237991333
    7. '#' → logprob: -4.99473237991333
    8. 'ze' → logprob: -5.24473237991333
    9. '=' → logprob: -5.36973237991333
    10. 'ize' → logprob: -5.36973237991333

Token 2310: ':
' (ID: 734)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8691436648368835
    2. '(' → logprob: -2.1191437244415283
    3. ' (' → logprob: -2.4941437244415283
    4. ' sum' → logprob: -2.4941437244415283
    5. 'c' → logprob: -2.6191437244415283
    6. '   ' → logprob: -3.1191437244415283
    7. 'j' → logprob: -3.4941437244415283
    8. ' ' → logprob: -4.119143486022949
    9. '(sum' → logprob: -4.119143486022949
    10. ')' → logprob: -4.244143486022949

Token 2311: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8441262245178223
    2. '   ' → logprob: -1.4691262245178223
    3. ' (' → logprob: -1.9691262245178223
    4. ''' → logprob: -2.7191262245178223
    5. '(' → logprob: -2.8441262245178223
    6. '(n' → logprob: -4.094126224517822
    7. 'sum' → logprob: -4.719126224517822
    8. ' sum' → logprob: -4.969126224517822
    9. '(
' → logprob: -5.469126224517822
    10. 'c' → logprob: -5.469126224517822

Token 2312: ' #
' (ID: 21888)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.4233646392822266
    2. 'sum' → logprob: -1.9233646392822266
    3. '(' → logprob: -2.0483646392822266
    4. ' sum' → logprob: -2.2983646392822266
    5. 'c' → logprob: -2.4233646392822266
    6. '"' → logprob: -2.7983646392822266
    7. '   ' → logprob: -2.7983646392822266
    8. ' c' → logprob: -3.6733646392822266
    9. '(n' → logprob: -4.048364639282227
    10. ''' → logprob: -4.423364639282227

Token 2313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21000732481479645
    2. ' (' → logprob: -2.710007429122925
    3. '#' → logprob: -3.210007429122925
    4. 'c' → logprob: -3.335007429122925
    5. ' c' → logprob: -4.335007190704346
    6. '(n' → logprob: -4.460007190704346
    7. '(c' → logprob: -5.335007190704346
    8. 'n' → logprob: -6.210007190704346
    9. 'def' → logprob: -6.210007190704346
    10. '(' → logprob: -6.210007190704346

Token 2314: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7563201189041138
    2. '(' → logprob: -1.7563201189041138
    3. '(n' → logprob: -2.256319999694824
    4. 'c' → logprob: -2.506319999694824
    5. '   ' → logprob: -3.006319999694824
    6. '1' → logprob: -3.756319999694824
    7. ' c' → logprob: -3.881319999694824
    8. ' n' → logprob: -4.631319999694824
    9. 'n' → logprob: -5.131319999694824
    10. '(c' → logprob: -5.131319999694824

Token 2315: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8549630641937256
    2. 'c' → logprob: -1.6049630641937256
    3. ''' → logprob: -2.7299630641937256
    4. ' (' → logprob: -2.8549630641937256
    5. '"' → logprob: -2.9799630641937256
    6. ')' → logprob: -3.3549630641937256
    7. '1' → logprob: -4.229963302612305
    8. '   ' → logprob: -4.354963302612305
    9. 'sum' → logprob: -4.479963302612305
    10. '_' → logprob: -4.604963302612305

Token 2316: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.013599196448922157
    2. 'n' → logprob: -5.513599395751953
    3. ')' → logprob: -6.013599395751953
    4. 'k' → logprob: -6.263599395751953
    5. '-' → logprob: -6.763599395751953
    6. '1' → logprob: -6.888599395751953
    7. '(n' → logprob: -7.138599395751953
    8. '(' → logprob: -8.388599395751953
    9. 'sum' → logprob: -8.513599395751953
    10. '(
' → logprob: -8.763599395751953

Token 2317: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0033548781648278236
    2. ' +' → logprob: -6.628355026245117
    3. ')' → logprob: -7.253355026245117
    4. '_' → logprob: -7.503355026245117
    5. '+)' → logprob: -8.253355026245117
    6. '**' → logprob: -9.503355026245117
    7. '```' → logprob: -9.628355026245117
    8. ')+' → logprob: -9.628355026245117
    9. '+
' → logprob: -10.003355026245117
    10. ',' → logprob: -10.503355026245117

Token 2318: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4753168821334839
    2. '1' → logprob: -0.9753168821334839
    3. ')' → logprob: -7.475317001342773
    4. ' +' → logprob: -7.475317001342773
    5. '+)' → logprob: -10.225317001342773
    6. '```' → logprob: -10.475317001342773
    7. ')+' → logprob: -11.225317001342773
    8. ' ' → logprob: -12.350317001342773
    9. '   ' → logprob: -12.350317001342773
    10. '=' → logprob: -12.350317001342773

Token 2319: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1928003813372925e-05
    2. ')*' → logprob: -10.625051498413086
    3. '*' → logprob: -12.000051498413086
    4. '-' → logprob: -12.250051498413086
    5. '```' → logprob: -12.500051498413086
    6. ' )' → logprob: -12.875051498413086
    7. ' -' → logprob: -13.500051498413086
    8. '   ' → logprob: -13.625051498413086
    9. '#' → logprob: -13.625051498413086
    10. '*)' → logprob: -13.750051498413086

Token 2320: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0076765380799770355
    2. '*' → logprob: -4.882676601409912
    3. '   ' → logprob: -10.632676124572754
    4. '*(' → logprob: -11.007676124572754
    5. ')' → logprob: -11.632676124572754
    6. ' ' → logprob: -11.882676124572754
    7. '```' → logprob: -12.007676124572754
    8. ' ' → logprob: -13.257676124572754
    9. '**' → logprob: -13.632676124572754
    10. '    ' → logprob: -14.007676124572754

Token 2321: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4594249129295349
    2. '(S' → logprob: -1.0844249725341797
    3. '(sum' → logprob: -3.8344249725341797
    4. '(' → logprob: -5.33442497253418
    5. '(s' → logprob: -5.70942497253418
    6. '(total' → logprob: -8.95942497253418
    7. 'sum' → logprob: -9.33442497253418
    8. '(N' → logprob: -9.70942497253418
    9. '(max' → logprob: -9.83442497253418
    10. ' sum' → logprob: -10.20942497253418

Token 2322: 'S' (ID: 50)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.4155258238315582
    2. '(sum' → logprob: -1.4155257940292358
    3. ' (' → logprob: -2.7905259132385254
    4. '(' → logprob: -4.040525913238525
    5. 'sum' → logprob: -4.165525913238525
    6. '(s' → logprob: -6.415525913238525
    7. ' sum' → logprob: -7.540525913238525
    8. '(total' → logprob: -9.040525436401367
    9. '(n' → logprob: -9.165525436401367
    10. '(N' → logprob: -9.290525436401367

Token 2323: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.15029053390026093
    2. '+' → logprob: -2.2752904891967773
    3. '-' → logprob: -3.6502904891967773
    4. ' +' → logprob: -4.775290489196777
    5. ')' → logprob: -6.775290489196777
    6. ' ' → logprob: -7.900290489196777
    7. '   ' → logprob: -8.650290489196777
    8. '```' → logprob: -8.900290489196777
    9. '_' → logprob: -9.650290489196777
    10. '  ' → logprob: -9.775290489196777

Token 2324: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02643801085650921
    2. '-s' → logprob: -3.776437997817993
    3. ' sum' → logprob: -6.276438236236572
    4. '-' → logprob: -7.526438236236572
    5. ' -' → logprob: -8.401437759399414
    6. 'total' → logprob: -9.401437759399414
    7. '-j' → logprob: -9.776437759399414
    8. '(-' → logprob: -9.901437759399414
    9. '```' → logprob: -9.901437759399414
    10. '_sum' → logprob: -10.026437759399414

Token 2325: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.5479130744934082
    2. '_c' → logprob: -0.9229130744934082
    3. '_' → logprob: -3.922913074493408
    4. '_des' → logprob: -6.297913074493408
    5. '_cut' → logprob: -6.922913074493408
    6. '```' → logprob: -7.172913074493408
    7. '\' → logprob: -8.67291259765625
    8. '_joint' → logprob: -8.79791259765625
    9. 'des' → logprob: -9.04791259765625
    10. '_i' → logprob: -9.04791259765625

Token 2326: 'oints' (ID: 28687)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7435070872306824
    2. 'oints' → logprob: -0.7435070872306824
    3. '_i' → logprob: -3.993507146835327
    4. '_o' → logprob: -4.368506908416748
    5. '_c' → logprob: -4.618506908416748
    6. '_j' → logprob: -5.618506908416748
    7. 'oint' → logprob: -6.868506908416748
    8. '_
' → logprob: -7.493506908416748
    9. '_cut' → logprob: -7.618506908416748
    10. '_points' → logprob: -7.868506908416748

Token 2327: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.15298126637935638
    2. '-' → logprob: -2.4029812812805176
    3. ')' → logprob: -3.6529812812805176
    4. '_used' → logprob: -4.902981281280518
    5. '_c' → logprob: -5.027981281280518
    6. '_cut' → logprob: -5.402981281280518
    7. '_' → logprob: -5.652981281280518
    8. '   ' → logprob: -7.152981281280518
    9. '-used' → logprob: -7.152981281280518
    10. '```' → logprob: -7.652981281280518

Token 2328: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.11863850057125092
    2. ' sum' → logprob: -2.368638515472412
    3. 'cut' → logprob: -5.243638515472412
    4. '_sum' → logprob: -5.743638515472412
    5. '_cut' → logprob: -5.993638515472412
    6. '_c' → logprob: -5.993638515472412
    7. ' cut' → logprob: -6.743638515472412
    8. 'c' → logprob: -6.868638515472412
    9. ' _' → logprob: -7.868638515472412
    10. '```' → logprob: -7.868638515472412

Token 2329: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.1665266901254654
    2. '_' → logprob: -1.9165266752243042
    3. '_cut' → logprob: -5.166526794433594
    4. ')_' → logprob: -9.291526794433594
    5. ' _' → logprob: -9.541526794433594
    6. '_j' → logprob: -9.541526794433594
    7. '_des' → logprob: -9.541526794433594
    8. '```' → logprob: -9.666526794433594
    9. '\' → logprob: -9.916526794433594
    10. ''_' → logprob: -11.291526794433594

Token 2330: 'oup' (ID: 9999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16755568981170654
    2. '_c' → logprob: -2.417555809020996
    3. '_i' → logprob: -3.417555809020996
    4. '_cut' → logprob: -4.667555809020996
    5. '_o' → logprob: -5.792555809020996
    6. '_used' → logprob: -6.042555809020996
    7. ')' → logprob: -6.167555809020996
    8. '_)' → logprob: -6.167555809020996
    9. 'uts' → logprob: -6.542555809020996
    10. ')_' → logprob: -6.667555809020996

Token 2331: 'ures' (ID: 1609)
  Prédit: '_cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.385879248380661
    2. 'cuts' → logprob: -2.0108792781829834
    3. '_' → logprob: -2.7608792781829834
    4. 'és' → logprob: -3.5108792781829834
    5. 'cut' → logprob: -3.7608792781829834
    6. 'u' → logprob: -4.010879039764404
    7. 'ed' → logprob: -4.635879039764404
    8. ' cuts' → logprob: -4.885879039764404
    9. 'es' → logprob: -5.135879039764404
    10. '_l' → logprob: -5.510879039764404

Token 2332: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040646716952323914
    2. '   ' → logprob: -3.54064679145813
    3. ')
' → logprob: -5.290646553039551
    4. '[i' → logprob: -6.540646553039551
    5. 'def' → logprob: -7.040646553039551
    6. ')`' → logprob: -7.290646553039551
    7. '`)' → logprob: -8.16564655303955
    8. '_i' → logprob: -8.54064655303955
    9. '[j' → logprob: -8.54064655303955
    10. ')`
' → logprob: -8.54064655303955

Token 2333: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2369416505098343
    2. 'def' → logprob: -2.4869415760040283
    3. '(
' → logprob: -3.2369415760040283
    4. '[
' → logprob: -3.8619415760040283
    5. '```' → logprob: -4.611941814422607
    6. '[' → logprob: -4.611941814422607
    7. ':' → logprob: -5.236941814422607
    8. '(' → logprob: -5.361941814422607
    9. '(n' → logprob: -5.486941814422607
    10. ':
' → logprob: -5.611941814422607

Token 2334: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6894727349281311
    2. '(S' → logprob: -1.5644726753234863
    3. 'sum' → logprob: -2.0644726753234863
    4. ' sum' → logprob: -2.9394726753234863
    5. 'S' → logprob: -3.4394726753234863
    6. ' S' → logprob: -3.8144726753234863
    7. '(' → logprob: -4.189472675323486
    8. 'c' → logprob: -5.064472675323486
    9. '(n' → logprob: -5.064472675323486
    10. '(c' → logprob: -5.564472675323486

Token 2335: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.44869041442871094
    2. '(c' → logprob: -1.198690414428711
    3. 'sum' → logprob: -3.948690414428711
    4. ' (' → logprob: -4.448690414428711
    5. '(' → logprob: -4.573690414428711
    6. 'n' → logprob: -4.948690414428711
    7. '(n' → logprob: -5.323690414428711
    8. '```' → logprob: -6.948690414428711
    9. ')' → logprob: -7.073690414428711
    10. ')c' → logprob: -7.198690414428711

Token 2336: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002486715093255043
    2. ' +' → logprob: -6.002486705780029
    3. ')' → logprob: -12.627487182617188
    4. ')+' → logprob: -13.127487182617188
    5. '＋' → logprob: -14.002487182617188
    6. '   ' → logprob: -14.127487182617188
    7. '+
' → logprob: -14.127487182617188
    8. '```' → logprob: -14.377487182617188
    9. '+)' → logprob: -14.752487182617188
    10. '-' → logprob: -14.877487182617188

Token 2337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018881839932873845
    2. '+' → logprob: -6.376888275146484
    3. ')' → logprob: -9.251888275146484
    4. ' +' → logprob: -9.876888275146484
    5. '=' → logprob: -11.626888275146484
    6. '```' → logprob: -12.001888275146484
    7. ')+' → logprob: -12.251888275146484
    8. ' ' → logprob: -12.251888275146484
    9. '   ' → logprob: -12.751888275146484
    10. '0' → logprob: -13.126888275146484

Token 2338: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004428243264555931
    2. ' -' → logprob: -9.125442504882812
    3. '-' → logprob: -9.375442504882812
    4. ')*' → logprob: -9.625442504882812
    5. '*' → logprob: -9.875442504882812
    6. ' *' → logprob: -10.125442504882812
    7. '+' → logprob: -10.250442504882812
    8. ' )' → logprob: -11.000442504882812
    9. '*)' → logprob: -11.750442504882812
    10. ' +' → logprob: -12.000442504882812

Token 2339: 'const' (ID: 1671)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.062557652592659
    2. ' S' → logprob: -3.3125576972961426
    3. 'sum' → logprob: -4.187557697296143
    4. '(S' → logprob: -5.187557697296143
    5. ' sum' → logprob: -6.312557697296143
    6. 's' → logprob: -8.437557220458984
    7. ' (' → logprob: -8.562557220458984
    8. ')' → logprob: -8.562557220458984
    9. '```' → logprob: -8.687557220458984
    10. 'total' → logprob: -9.062557220458984

Token 2340: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07758314162492752
    2. '+' → logprob: -3.952583074569702
    3. 'ant' → logprob: -4.452583312988281
    4. '_' → logprob: -4.577583312988281
    5. '-' → logprob: -4.702583312988281
    6. ' -' → logprob: -5.327583312988281
    7. '*' → logprob: -5.952583312988281
    8. 'e' → logprob: -6.327583312988281
    9. ' +' → logprob: -6.452583312988281
    10. ' _' → logprob: -6.452583312988281

Token 2341: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1039980798959732
    2. ' sum' → logprob: -2.3539981842041016
    3. '_sum' → logprob: -5.728998184204102
    4. ' _' → logprob: -8.603998184204102
    5. '   ' → logprob: -9.978998184204102
    6. '_' → logprob: -10.541498184204102
    7. '_s' → logprob: -10.728998184204102
    8. ' ' → logprob: -10.791498184204102
    9. '```' → logprob: -10.791498184204102
    10. ')' → logprob: -10.916498184204102

Token 2342: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.016615349799394608
    2. '_' → logprob: -4.641615390777588
    3. '_cut' → logprob: -5.391615390777588
    4. '_j' → logprob: -6.891615390777588
    5. ')_' → logprob: -7.766615390777588
    6. '```' → logprob: -8.39161491394043
    7. '_des' → logprob: -9.01661491394043
    8. '\' → logprob: -9.26661491394043
    9. '(_' → logprob: -9.89161491394043
    10. '_of' → logprob: -10.14161491394043

Token 2343: 'oup' (ID: 9999)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.6935622096061707
    2. '_' → logprob: -1.4435622692108154
    3. 'oup' → logprob: -1.9435622692108154
    4. '_cut' → logprob: -2.8185622692108154
    5. '_c' → logprob: -3.1935622692108154
    6. 'ou' → logprob: -5.943562030792236
    7. 'u' → logprob: -6.068562030792236
    8. 'op' → logprob: -6.193562030792236
    9. '=cut' → logprob: -6.193562030792236
    10. 'cut' → logprob: -6.318562030792236

Token 2344: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06437578052282333
    2. '_cut' → logprob: -3.814375877380371
    3. 't' → logprob: -4.689375877380371
    4. 'ur' → logprob: -5.564375877380371
    5. 'é' → logprob: -5.564375877380371
    6. 'û' → logprob: -5.689375877380371
    7. 'u' → logprob: -5.939375877380371
    8. '_p' → logprob: -6.064375877380371
    9. 'ures' → logprob: -6.564375877380371
    10. 'r' → logprob: -6.689375877380371

Token 2345: ')
' (ID: 446)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5290685296058655
    2. ')' → logprob: -1.6540684700012207
    3. '_)' → logprob: -1.6540684700012207
    4. '_' → logprob: -3.6540684700012207
    5. ')_' → logprob: -7.654068470001221
    6. '_i' → logprob: -7.654068470001221
    7. '_j' → logprob: -7.779068470001221
    8. ')`' → logprob: -7.904068470001221
    9. '`)' → logprob: -9.029068946838379
    10. '   ' → logprob: -9.529068946838379

Token 2346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007375073153525591
    2. 'def' → logprob: -6.132375240325928
    3. 'import' → logprob: -6.757375240325928
    4. ')' → logprob: -7.132375240325928
    5. '    
' → logprob: -7.757375240325928
    6. ')
' → logprob: -8.38237476348877
    7. '[
' → logprob: -8.50737476348877
    8. '_j' → logprob: -8.63237476348877
    9. '
' → logprob: -8.75737476348877
    10. '```' → logprob: -8.88237476348877

Token 2347: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03803965821862221
    2. 'def' → logprob: -4.288039684295654
    3. ':' → logprob: -5.288039684295654
    4. ':
' → logprob: -5.663039684295654
    5. ')' → logprob: -5.788039684295654
    6. '
' → logprob: -6.288039684295654
    7. ')
' → logprob: -6.413039684295654
    8. '\' → logprob: -6.913039684295654
    9. '\n' → logprob: -7.163039684295654
    10. '```' → logprob: -7.288039684295654

Token 2348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025293760001659393
    2. 'def' → logprob: -4.775293827056885
    3. '_j' → logprob: -5.525293827056885
    4. 'j' → logprob: -5.650293827056885
    5. ':' → logprob: -6.150293827056885
    6. ')' → logprob: -6.900293827056885
    7. 'n' → logprob: -7.150293827056885
    8. ',' → logprob: -7.525293827056885
    9. '[' → logprob: -7.650293827056885
    10. '"' → logprob: -7.650293827056885

Token 2349: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022349873557686806
    2. 'def' → logprob: -5.272349834442139
    3. 'n' → logprob: -5.897349834442139
    4. '"' → logprob: -6.147349834442139
    5. '#' (adapté à ' #') → logprob: -6.522349834442139
    6. 'j' → logprob: -6.647349834442139
    7. 'import' → logprob: -6.897349834442139
    8. ')' → logprob: -7.272349834442139
    9. 'p' → logprob: -7.272349834442139
    10. '[
' → logprob: -7.272349834442139

Token 2350: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6483827829360962
    2. 'n' → logprob: -1.2733827829360962
    3. 'def' → logprob: -1.7733827829360962
    4. 'import' → logprob: -3.8983826637268066
    5. 'j' → logprob: -6.273382663726807
    6. '#' → logprob: -6.398382663726807
    7. 'p' → logprob: -7.023382663726807
    8. 'from' → logprob: -7.523382663726807
    9. 'return' → logprob: -8.523383140563965
    10. 'if' → logprob: -8.648383140563965

Token 2351: ' const' (ID: 1026)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.05755804106593132
    2. ' sum' → logprob: -3.807558059692383
    3. 'c' → logprob: -4.557558059692383
    4. 'j' → logprob: -5.057558059692383
    5. 'n' → logprob: -5.307558059692383
    6. '#' → logprob: -5.557558059692383
    7. '`' → logprob: -6.682558059692383
    8. '_j' → logprob: -6.682558059692383
    9. 'const' → logprob: -7.057558059692383
    10. '_sum' → logprob: -7.307558059692383

Token 2352: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05442538484930992
    2. ' =' → logprob: -3.1794254779815674
    3. '_' → logprob: -4.679425239562988
    4. '_j' → logprob: -7.554425239562988
    5. '-' → logprob: -7.929425239562988
    6. '+' → logprob: -8.179425239562988
    7. ')' → logprob: -8.429425239562988
    8. ' _' → logprob: -8.929425239562988
    9. '#' → logprob: -9.304425239562988
    10. '_=' → logprob: -9.804425239562988

Token 2353: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.21342144906520844
    2. 'sum' → logprob: -1.7134214639663696
    3. ' S' → logprob: -5.21342134475708
    4. '   ' → logprob: -5.83842134475708
    5. ' sum' → logprob: -6.58842134475708
    6. 's' → logprob: -6.58842134475708
    7. 'n' → logprob: -8.838421821594238
    8. '(S' → logprob: -8.963421821594238
    9. '`' → logprob: -9.588421821594238
    10. '(sum' → logprob: -9.588421821594238

Token 2354: ' +' (ID: 659)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.598232626914978
    2. '=' → logprob: -1.848232626914978
    3. '_j' → logprob: -2.2232327461242676
    4. ' +' → logprob: -2.5982327461242676
    5. ' =' → logprob: -2.8482327461242676
    6. '+' → logprob: -3.2232327461242676
    7. '   ' → logprob: -5.973232746124268
    8. '+j' → logprob: -6.598232746124268
    9. ')' → logprob: -6.848232746124268
    10. ',' → logprob: -6.848232746124268

Token 2355: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -9.841743303695694e-05
    2. ' sum' → logprob: -9.25009822845459
    3. '```' → logprob: -13.62509822845459
    4. 'total' → logprob: -15.12509822845459
    5. '`' → logprob: -15.62509822845459
    6. '_sum' → logprob: -16.625099182128906
    7. '(sum' → logprob: -16.625099182128906
    8. '   ' → logprob: -16.625099182128906
    9. '\' → logprob: -16.750099182128906
    10. '
' → logprob: -17.000099182128906

Token 2356: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.3782830137643032e-05
    2. '_joint' → logprob: -11.75001335144043
    3. '_' → logprob: -12.75001335144043
    4. '_des' → logprob: -13.75001335144043
    5. 'j' → logprob: -14.75001335144043
    6. '\' → logprob: -14.87501335144043
    7. '_total' → logprob: -15.75001335144043
    8. '_of' → logprob: -15.87501335144043
    9. '```' → logprob: -15.87501335144043
    10. '_p' → logprob: -16.12501335144043

Token 2357: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.11896993219852448
    2. '_' → logprob: -2.6189699172973633
    3. '_j' → logprob: -3.7439699172973633
    4. '_i' → logprob: -5.743969917297363
    5. '_
' → logprob: -5.743969917297363
    6. '_o' → logprob: -5.743969917297363
    7. 'oint' → logprob: -6.493969917297363
    8. '_points' → logprob: -7.368969917297363
    9. '_]' → logprob: -8.118969917297363
    10. '_\' → logprob: -8.243969917297363

Token 2358: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11084854602813721
    2. '
' → logprob: -3.4858484268188477
    3. 'n' → logprob: -3.8608484268188477
    4. 'def' → logprob: -4.235848426818848
    5. '(n' → logprob: -4.985848426818848
    6. 'import' → logprob: -5.235848426818848
    7. ',' → logprob: -5.235848426818848
    8. '    
' → logprob: -5.610848426818848
    9. ')' → logprob: -6.110848426818848
    10. ',
' → logprob: -6.110848426818848

Token 2359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0333399772644043
    2. 'def' → logprob: -3.7833399772644043
    3. 'n' → logprob: -5.533339977264404
    4. 'import' → logprob: -5.533339977264404
    5. '    
' → logprob: -7.408339977264404
    6. '```' → logprob: -7.908339977264404
    7. '
' → logprob: -8.283340454101562
    8. '(n' → logprob: -9.033340454101562
    9. '\' → logprob: -9.283340454101562
    10. ',' → logprob: -9.533340454101562

Token 2360: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014001300558447838
    2. 'n' → logprob: -5.014001369476318
    3. 'def' → logprob: -6.014001369476318
    4. 'j' → logprob: -7.014001369476318
    5. '(n' → logprob: -7.139001369476318
    6. ')' → logprob: -7.514001369476318
    7. '    
' → logprob: -7.889001369476318
    8. ':' → logprob: -8.01400089263916
    9. '\' → logprob: -8.38900089263916
    10. '\n' → logprob: -8.88900089263916

Token 2361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02430272288620472
    2. 'def' → logprob: -4.274302959442139
    3. 'n' → logprob: -5.024302959442139
    4. 'import' → logprob: -6.649302959442139
    5. 'j' → logprob: -6.899302959442139
    6. ':' → logprob: -7.399302959442139
    7. '    
' → logprob: -8.64930248260498
    8. ':
' → logprob: -9.89930248260498
    9. 'p' → logprob: -10.14930248260498
    10. '(n' → logprob: -10.14930248260498

Token 2362: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45198482275009155
    2. 'n' → logprob: -1.0769848823547363
    3. 'def' → logprob: -4.201984882354736
    4. '```' → logprob: -6.201984882354736
    5. 'j' → logprob: -6.326984882354736
    6. 'import' → logprob: -6.576984882354736
    7. '\' → logprob: -8.076984405517578
    8. '    
' → logprob: -8.076984405517578
    9. '`' → logprob: -8.076984405517578
    10. '\n' → logprob: -8.326984405517578

Token 2363: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5823140740394592
    2. 'n' → logprob: -0.8323140740394592
    3. 'def' → logprob: -5.2073140144348145
    4. 'import' → logprob: -7.3323140144348145
    5. '    
' → logprob: -9.457314491271973
    6. ' n' → logprob: -10.207314491271973
    7. '#' → logprob: -10.957314491271973
    8. '```' → logprob: -10.957314491271973
    9. '
' → logprob: -11.207314491271973
    10. 'from' → logprob: -11.582314491271973

Token 2364: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30803540349006653
    2. ' =' → logprob: -2.308035373687744
    3. '#' → logprob: -2.933035373687744
    4. 'def' → logprob: -3.058035373687744
    5. 'n' → logprob: -3.933035373687744
    6. '_j' → logprob: -4.058035373687744
    7. 'j' → logprob: -5.433035373687744
    8. '+=' → logprob: -6.433035373687744
    9. 'import' → logprob: -6.558035373687744
    10. '_' → logprob: -6.558035373687744

Token 2365: ' écrire' (ID: 118651)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3556131422519684
    2. 'continue' → logprob: -2.3556132316589355
    3. '   ' → logprob: -2.4806132316589355
    4. ' continuer' → logprob: -3.6056132316589355
    5. 'prendre' → logprob: -3.9806132316589355
    6. 'contin' → logprob: -4.2306132316589355
    7. '#' → logprob: -4.4806132316589355
    8. 'try' → logprob: -4.4806132316589355
    9. '
' → logprob: -5.6056132316589355
    10. 'penser' → logprob: -5.8556132316589355

Token 2366: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7134431004524231
    2. '   ' → logprob: -1.3384430408477783
    3. '=' → logprob: -2.0884430408477783
    4. 'def' → logprob: -3.7134430408477783
    5. ':' → logprob: -3.8384430408477783
    6. '"' → logprob: -4.213443279266357
    7. '(
' → logprob: -4.338443279266357
    8. '(' → logprob: -4.588443279266357
    9. 'sum' → logprob: -4.963443279266357
    10. 'const' → logprob: -5.213443279266357

Token 2367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1385897845029831
    2. 'const' → logprob: -3.138589859008789
    3. '"' → logprob: -3.513589859008789
    4. ' =' → logprob: -4.263589859008789
    5. 'def' → logprob: -4.763589859008789
    6. '#' → logprob: -4.888589859008789
    7. '`' → logprob: -5.513589859008789
    8. 'sum' → logprob: -5.763589859008789
    9. ' const' → logprob: -6.013589859008789
    10. '(
' → logprob: -6.138589859008789

Token 2368: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4781761169433594
    2. 'def' → logprob: -1.7281761169433594
    3. 'const' → logprob: -2.4781761169433594
    4. 'n' → logprob: -3.9781761169433594
    5. '(
' → logprob: -3.9781761169433594
    6. '"' → logprob: -4.603176116943359
    7. ' =' → logprob: -4.603176116943359
    8. '#' → logprob: -5.103176116943359
    9. '#
' (adapté à ' #
') → logprob: -5.228176116943359
    10. '(n' → logprob: -5.353176116943359

Token 2369: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5763576030731201
    2. '=' → logprob: -1.5763576030731201
    3. '   ' → logprob: -2.32635760307312
    4. 'const' → logprob: -2.57635760307312
    5. '#' → logprob: -4.326357841491699
    6. '"' → logprob: -4.451357841491699
    7. ' (' → logprob: -5.326357841491699
    8. '(
' → logprob: -5.576357841491699
    9. '=
' → logprob: -5.701357841491699
    10. ' const' → logprob: -5.826357841491699

Token 2370: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22862064838409424
    2. '"' → logprob: -2.3536205291748047
    3. '#' (adapté à ' #') → logprob: -3.3536205291748047
    4. 'def' → logprob: -3.6036205291748047
    5. '#
' → logprob: -4.228620529174805
    6. 'n' → logprob: -5.228620529174805
    7. 'const' → logprob: -5.353620529174805
    8. '=' → logprob: -5.603620529174805
    9. ' =' → logprob: -5.853620529174805
    10. '"
' → logprob: -6.228620529174805

Token 2371: ' salaire' (ID: 135427)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.074654459953308
    2. 'const' → logprob: -1.449654459953308
    3. 'n' → logprob: -2.4496545791625977
    4. 'sum' → logprob: -2.8246545791625977
    5. 'c' → logprob: -3.0746545791625977
    6. '#' → logprob: -3.0746545791625977
    7. '(
' → logprob: -3.1996545791625977
    8. '(' → logprob: -3.4496545791625977
    9. '(n' → logprob: -4.199654579162598
    10. '   ' → logprob: -4.199654579162598

Token 2372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10184891521930695
    2. '=' → logprob: -2.351848840713501
    3. '   ' → logprob: -6.85184907913208
    4. '_' → logprob: -8.101848602294922
    5. 's' → logprob: -9.976848602294922
    6. ' =
' → logprob: -10.351848602294922
    7. '```' → logprob: -10.601848602294922
    8. ')' → logprob: -10.726848602294922
    9. ' +=' → logprob: -11.226848602294922
    10. ',' → logprob: -11.351848602294922

Token 2373: ' (' (ID: 350)
  Prédit: '(const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(const' → logprob: -0.5069670677185059
    2. 'const' → logprob: -1.3819670677185059
    3. ' (' → logprob: -2.131967067718506
    4. '(c' → logprob: -4.381967067718506
    5. ' const' → logprob: -4.881967067718506
    6. '   ' → logprob: -6.131967067718506
    7. '(n' → logprob: -6.756967067718506
    8. '(' → logprob: -7.006967067718506
    9. '(lambda' → logprob: -7.381967067718506
    10. '(S' → logprob: -7.631967067718506

Token 2374: 'c' (ID: 66)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.1647436022758484
    2. 'c' → logprob: -2.164743661880493
    3. 'n' → logprob: -3.539743661880493
    4. '(const' → logprob: -5.789743423461914
    5. '(n' → logprob: -6.414743423461914
    6. ' const' → logprob: -7.039743423461914
    7. '(c' → logprob: -8.164743423461914
    8. 'S' → logprob: -8.414743423461914
    9. 'sum' → logprob: -8.539743423461914
    10. 'constant' → logprob: -8.539743423461914

Token 2375: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013336940901353955
    2. ' +' → logprob: -6.626333713531494
    3. ')' → logprob: -13.376333236694336
    4. '+)' → logprob: -13.376333236694336
    5. '＋' → logprob: -13.501333236694336
    6. '+
' → logprob: -13.876333236694336
    7. '_' → logprob: -14.751333236694336
    8. '   ' → logprob: -14.751333236694336
    9. '_plus' → logprob: -15.126333236694336
    10. ')+' → logprob: -15.251333236694336

Token 2376: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023346686735749245
    2. '1' → logprob: -3.7733466625213623
    3. ' +' → logprob: -9.398346900939941
    4. ')' → logprob: -12.023346900939941
    5. ')+' → logprob: -12.773346900939941
    6. '+)' → logprob: -12.898346900939941
    7. '+
' → logprob: -13.523346900939941
    8. '=' → logprob: -13.523346900939941
    9. '```' → logprob: -13.523346900939941
    10. ' ' → logprob: -14.398346900939941

Token 2377: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011941811069846153
    2. ')*(' → logprob: -5.261941909790039
    3. ')*' → logprob: -5.261941909790039
    4. '*' → logprob: -7.386941909790039
    5. '*(' → logprob: -7.511941909790039
    6. ' *' → logprob: -8.511941909790039
    7. '-' → logprob: -9.761941909790039
    8. '*)' → logprob: -10.261941909790039
    9. ' -' → logprob: -10.511941909790039
    10. ' )' → logprob: -12.761941909790039

Token 2378: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1459195613861084
    2. '*' → logprob: -2.0209195613861084
    3. '*(' → logprob: -5.7709197998046875
    4. ')' → logprob: -9.645919799804688
    5. '```' → logprob: -11.020919799804688
    6. '   ' → logprob: -11.520919799804688
    7. ')*' → logprob: -12.145919799804688
    8. '**' → logprob: -12.270919799804688
    9. '*(-' → logprob: -12.645919799804688
    10. '#' → logprob: -12.895919799804688

Token 2379: ' (' (ID: 350)
  Prédit: '(const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(const' → logprob: -0.05867021158337593
    2. '(S' → logprob: -3.1836702823638916
    3. 'const' → logprob: -4.6836700439453125
    4. ' (' → logprob: -5.3086700439453125
    5. '(' → logprob: -6.8086700439453125
    6. '(CON' → logprob: -9.808670043945312
    7. ' const' → logprob: -10.433670043945312
    8. '(sum' → logprob: -10.558670043945312
    9. '(C' → logprob: -11.433670043945312
    10. '(int' → logprob: -11.433670043945312

Token 2380: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.5097524523735046
    2. '(const' → logprob: -1.1347525119781494
    3. '(S' → logprob: -2.6347525119781494
    4. ' (' → logprob: -5.63475227355957
    5. '(' → logprob: -6.75975227355957
    6. ' const' → logprob: -7.38475227355957
    7. 'S' → logprob: -8.75975227355957
    8. 'sum' → logprob: -9.00975227355957
    9. '(sum' → logprob: -9.50975227355957
    10. '(
' → logprob: -9.50975227355957

Token 2381: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00989255029708147
    2. '-' → logprob: -4.634892463684082
    3. ')' → logprob: -9.009892463684082
    4. ' ' → logprob: -11.884892463684082
    5. '_' → logprob: -12.884892463684082
    6. ' ' → logprob: -13.384892463684082
    7. '```' → logprob: -14.134892463684082
    8. '  ' → logprob: -14.509892463684082
    9. '[' → logprob: -14.884892463684082
    10. '   ' → logprob: -15.134892463684082

Token 2382: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.07002991437911987
    2. 'sum' → logprob: -2.6950299739837646
    3. '_sum' → logprob: -10.070030212402344
    4. ' ' → logprob: -10.695030212402344
    5. ' _' → logprob: -11.070030212402344
    6. ' ' → logprob: -13.320030212402344
    7. ' total' → logprob: -13.570030212402344
    8. '_' → logprob: -13.820030212402344
    9. 's' → logprob: -13.945030212402344
    10. ' s' → logprob: -14.070030212402344

Token 2383: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.030813829973340034
    2. '_' → logprob: -3.6558139324188232
    3. '_cut' → logprob: -6.280813694000244
    4. '_j' → logprob: -6.530813694000244
    5. '(_' → logprob: -8.155814170837402
    6. ')_' → logprob: -8.530814170837402
    7. '\' → logprob: -8.780814170837402
    8. '_des' → logprob: -9.280814170837402
    9. '```' → logprob: -9.280814170837402
    10. ' _' → logprob: -9.655814170837402

Token 2384: 'oup' (ID: 9999)
  Prédit: 'oup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.9498384594917297
    2. 'ut' → logprob: -1.699838399887085
    3. '_c' → logprob: -2.199838399887085
    4. '_' → logprob: -2.449838399887085
    5. '_cut' → logprob: -2.449838399887085
    6. 'o' → logprob: -2.949838399887085
    7. 'out' → logprob: -3.199838399887085
    8. '_o' → logprob: -4.699838638305664
    9. 'ou' → logprob: -4.949838638305664
    10. '_out' → logprob: -5.199838638305664

Token 2385: 'ures' (ID: 1609)
  Prédit: '_cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -1.232956886291504
    2. '_' → logprob: -1.357956886291504
    3. 'out' → logprob: -1.482956886291504
    4. 'oupes' → logprob: -2.857956886291504
    5. '_out' → logprob: -3.107956886291504
    6. '_c' → logprob: -3.607956886291504
    7. 'ur' → logprob: -4.107956886291504
    8. 'ures' → logprob: -4.607956886291504
    9. 'oup' → logprob: -4.732956886291504
    10. 'ou' → logprob: -4.982956886291504

Token 2386: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028743278235197067
    2. '[i' → logprob: -4.528743267059326
    3. '_)' → logprob: -5.028743267059326
    4. '_c' → logprob: -5.653743267059326
    5. '   ' → logprob: -6.153743267059326
    6. '_' → logprob: -6.653743267059326
    7. '[c' → logprob: -6.653743267059326
    8. '_i' → logprob: -7.403743267059326
    9. ')`' → logprob: -7.778743267059326
    10. '[' → logprob: -7.903743267059326

Token 2387: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03627169504761696
    2. 'def' → logprob: -3.786271810531616
    3. 'import' → logprob: -5.161271572113037
    4. '
' → logprob: -5.786271572113037
    5. ',' → logprob: -7.411271572113037
    6. '```' → logprob: -7.536271572113037
    7. '    
' → logprob: -7.786271572113037
    8. ')' → logprob: -7.786271572113037
    9. ' =' → logprob: -8.161272048950195
    10. ':' → logprob: -8.536272048950195

Token 2388: ' (' (ID: 350)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.13366149365901947
    2. ' const' → logprob: -2.7586615085601807
    3. '(const' → logprob: -3.1336615085601807
    4. ' (' → logprob: -4.258661270141602
    5. '   ' → logprob: -6.133661270141602
    6. 'sum' → logprob: -8.258661270141602
    7. '```' → logprob: -8.508661270141602
    8. '(' → logprob: -8.758661270141602
    9. 'lambda' → logprob: -9.008661270141602
    10. '_const' → logprob: -9.008661270141602

Token 2389: 'c' (ID: 66)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.3864975571632385
    2. 'c' → logprob: -2.0114974975585938
    3. '(c' → logprob: -2.6364974975585938
    4. 'sum' → logprob: -2.6364974975585938
    5. '(const' → logprob: -4.011497497558594
    6. ' (' → logprob: -4.886497497558594
    7. '(' → logprob: -4.886497497558594
    8. '(sum' → logprob: -6.011497497558594
    9. '(s' → logprob: -6.636497497558594
    10. '```' → logprob: -7.011497497558594

Token 2390: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003036457928828895
    2. ' +' → logprob: -8.125303268432617
    3. ')' → logprob: -13.375303268432617
    4. '+
' → logprob: -13.500303268432617
    5. '-' → logprob: -13.625303268432617
    6. '   ' → logprob: -13.875303268432617
    7. '+)' → logprob: -14.500303268432617
    8. '＋' → logprob: -14.500303268432617
    9. ')+' → logprob: -15.125303268432617
    10. '[' → logprob: -15.750303268432617

Token 2391: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007223472930490971
    2. '1' → logprob: -5.007223606109619
    3. ' +' → logprob: -8.507223129272461
    4. ')' → logprob: -8.882223129272461
    5. '```' → logprob: -9.882223129272461
    6. ')+' → logprob: -10.257223129272461
    7. '+)' → logprob: -11.632223129272461
    8. '
' → logprob: -12.007223129272461
    9. 'import' → logprob: -12.132223129272461
    10. '＋' → logprob: -12.132223129272461

Token 2392: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03817013278603554
    2. ' -' → logprob: -3.663170099258423
    3. '-' → logprob: -4.913170337677002
    4. ')*' → logprob: -5.913170337677002
    5. ' *' → logprob: -7.288170337677002
    6. '*' → logprob: -7.663170337677002
    7. ')*(' → logprob: -8.788169860839844
    8. '+' → logprob: -9.163169860839844
    9. ' )' → logprob: -9.538169860839844
    10. '*)' → logprob: -9.913169860839844

Token 2393: 'const' (ID: 1671)
  Prédit: '(const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(const' → logprob: -0.7767290472984314
    2. ' (' → logprob: -1.0267291069030762
    3. '(' → logprob: -2.026729106903076
    4. '(sum' → logprob: -3.776729106903076
    5. 'const' → logprob: -4.401729106903076
    6. '(S' → logprob: -4.526729106903076
    7. '(s' → logprob: -6.776729106903076
    8. ' const' → logprob: -7.151729106903076
    9. 'sum' → logprob: -7.276729106903076
    10. '*' → logprob: -7.401729106903076

Token 2394: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10192901641130447
    2. '-' → logprob: -2.351928949356079
    3. ')' → logprob: -6.851929187774658
    4. ' ' → logprob: -8.9769287109375
    5. '   ' → logprob: -8.9769287109375
    6. '[' → logprob: -9.7269287109375
    7. '*' → logprob: -9.8519287109375
    8. '    ' → logprob: -10.1019287109375
    9. 'import' → logprob: -10.1019287109375
    10. ' *' → logprob: -10.3519287109375

Token 2395: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.08926703035831451
    2. ' (' → logprob: -2.4642670154571533
    3. '(' → logprob: -8.214266777038574
    4. 'sum' → logprob: -10.839266777038574
    5. '(sum' → logprob: -11.214266777038574
    6. '(const' → logprob: -11.589266777038574
    7. '(C' → logprob: -12.089266777038574
    8. ' sum' → logprob: -13.214266777038574
    9. 'const' → logprob: -13.339266777038574
    10. '((' → logprob: -14.089266777038574

Token 2396: 'c' (ID: 66)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7009034752845764
    2. 'c' → logprob: -0.8259034752845764
    3. ' sum' → logprob: -3.2009034156799316
    4. ' c' → logprob: -4.075903415679932
    5. '(c' → logprob: -5.450903415679932
    6. ' (' → logprob: -6.200903415679932
    7. '(sum' → logprob: -7.325903415679932
    8. '   ' → logprob: -7.950903415679932
    9. '(' → logprob: -8.45090389251709
    10. '```' → logprob: -8.95090389251709

Token 2397: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.047134305234067e-05
    2. ' +' → logprob: -10.500030517578125
    3. '-' → logprob: -13.375030517578125
    4. '   ' → logprob: -14.625030517578125
    5. '+-' → logprob: -15.375030517578125
    6. ')' → logprob: -16.000030517578125
    7. '+)' → logprob: -16.250030517578125
    8. '_' → logprob: -16.375030517578125
    9. ')+' → logprob: -16.500030517578125
    10. '+j' → logprob: -17.125030517578125

Token 2398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20266640186309814
    2. '+' → logprob: -1.7026664018630981
    3. '_j' → logprob: -7.077666282653809
    4. 'j' → logprob: -9.077666282653809
    5. '   ' → logprob: -9.452666282653809
    6. '+j' → logprob: -9.702666282653809
    7. ')' → logprob: -9.952666282653809
    8. '```' → logprob: -10.577666282653809
    9. ' ' → logprob: -11.202666282653809
    10. ' +' → logprob: -11.452666282653809

Token 2399: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3134368658065796
    2. ')*' → logprob: -1.3134368658065796
    3. '*' → logprob: -8.938436508178711
    4. '*)' → logprob: -10.563436508178711
    5. ' )' → logprob: -11.813436508178711
    6. ')*(' → logprob: -11.938436508178711
    7. ' *' → logprob: -12.938436508178711
    8. ')
' → logprob: -14.813436508178711
    9. '```' → logprob: -15.188436508178711
    10. '#' → logprob: -15.313436508178711

Token 2400: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1797965168952942
    2. ' sum' → logprob: -1.8047964572906494
    3. '(sum' → logprob: -10.42979621887207
    4. '_sum' → logprob: -11.17979621887207
    5. ' ' → logprob: -12.80479621887207
    6. ' (' → logprob: -13.80479621887207
    7. '(' → logprob: -14.05479621887207
    8. '"' → logprob: -14.42979621887207
    9. ' _' → logprob: -14.42979621887207
    10. ' ' → logprob: -14.67979621887207

Token 2401: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0038377325981855392
    2. '_' → logprob: -6.253837585449219
    3. '_cut' → logprob: -6.628837585449219
    4. '\' → logprob: -9.128837585449219
    5. '_des' → logprob: -9.753837585449219
    6. ' _' → logprob: -9.753837585449219
    7. ')_' → logprob: -10.128837585449219
    8. '(_' → logprob: -10.378837585449219
    9. '_j' → logprob: -10.378837585449219
    10. '_f' → logprob: -10.628837585449219

Token 2402: 'oup' (ID: 9999)
  Prédit: 'oup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.23383577167987823
    2. '_' → logprob: -2.3588356971740723
    3. 'ut' → logprob: -2.7338356971740723
    4. 'oupes' → logprob: -4.483835697174072
    5. 'ou' → logprob: -4.733835697174072
    6. 'o' → logprob: -4.858835697174072
    7. '_cut' → logprob: -5.108835697174072
    8. '_c' → logprob: -5.108835697174072
    9. 'oupe' → logprob: -6.233835697174072
    10. 'op' → logprob: -6.358835697174072

Token 2403: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3026527464389801
    2. 't' → logprob: -2.3026528358459473
    3. 'ur' → logprob: -3.1776528358459473
    4. 'ures' → logprob: -3.8026528358459473
    5. '_cut' → logprob: -3.8026528358459473
    6. 'ut' → logprob: -3.9276528358459473
    7. '_r' → logprob: -4.552652835845947
    8. 'u' → logprob: -4.802652835845947
    9. '_t' → logprob: -4.927652835845947
    10. '_u' → logprob: -5.302652835845947

Token 2404: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11404887586832047
    2. 'def' → logprob: -2.489048957824707
    3. '_j' → logprob: -5.114048957824707
    4. '
' → logprob: -5.864048957824707
    5. '_' → logprob: -6.239048957824707
    6. '\' → logprob: -6.239048957824707
    7. '[
' → logprob: -6.739048957824707
    8. '[' → logprob: -6.864048957824707
    9. 'j' → logprob: -6.989048957824707
    10. ' =' → logprob: -7.114048957824707

Token 2405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00462972279638052
    2. 'def' → logprob: -6.379629611968994
    3. 'import' → logprob: -6.629629611968994
    4. '
' → logprob: -7.379629611968994
    5. '```' → logprob: -7.879629611968994
    6. '    
' → logprob: -8.254630088806152
    7. '#
' → logprob: -9.879630088806152
    8. '\' → logprob: -9.879630088806152
    9. '#' → logprob: -10.254630088806152
    10. '`
' → logprob: -10.629630088806152

Token 2406: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004329710267484188
    2. 'def' → logprob: -6.254329681396484
    3. '    
' → logprob: -7.379329681396484
    4. '
' → logprob: -7.754329681396484
    5. '\' → logprob: -8.004329681396484
    6. 'import' → logprob: -8.254329681396484
    7. '\n' → logprob: -8.629329681396484
    8. 'n' → logprob: -9.379329681396484
    9. 'j' → logprob: -9.504329681396484
    10. ')' → logprob: -9.879329681396484

Token 2407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007969641126692295
    2. 'def' → logprob: -5.257969856262207
    3. 'import' → logprob: -6.257969856262207
    4. '    
' → logprob: -8.507969856262207
    5. '
' → logprob: -8.882969856262207
    6. 'j' → logprob: -9.257969856262207
    7. 'n' → logprob: -9.507969856262207
    8. '\' → logprob: -10.257969856262207
    9. '#' → logprob: -10.382969856262207
    10. '```' → logprob: -10.382969856262207

Token 2408: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005361940711736679
    2. 'import' → logprob: -5.880362033843994
    3. 'def' → logprob: -6.505362033843994
    4. '
' → logprob: -7.255362033843994
    5. '#' (adapté à ' #') → logprob: -9.505361557006836
    6. '    
' → logprob: -9.630361557006836
    7. '```' → logprob: -9.630361557006836
    8. 'from' → logprob: -9.880361557006836
    9. '#
' → logprob: -10.505361557006836
    10. '`
' → logprob: -11.755361557006836

Token 2409: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42620012164115906
    2. 'def' → logprob: -1.4262001514434814
    3. 'n' → logprob: -2.5512001514434814
    4. '#' → logprob: -4.551199913024902
    5. 'j' → logprob: -5.676199913024902
    6. 'return' → logprob: -5.801199913024902
    7. 'from' → logprob: -6.426199913024902
    8. '
' → logprob: -6.551199913024902
    9. '```' → logprob: -6.676199913024902
    10. '\' → logprob: -6.926199913024902

Token 2410: ' cherche' (ID: 52345)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5414154529571533
    2. '_' → logprob: -1.1664154529571533
    3. '#' → logprob: -3.5414154529571533
    4. 'def' → logprob: -3.9164154529571533
    5. ' =' → logprob: -3.9164154529571533
    6. '[' → logprob: -4.541415214538574
    7. '(' → logprob: -5.166415214538574
    8. '(c' → logprob: -6.041415214538574
    9. '(
' → logprob: -6.291415214538574
    10. 'import' → logprob: -6.416415214538574

Token 2411: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9361593127250671
    2. 'à' → logprob: -1.561159372329712
    3. ' à' → logprob: -2.186159372329712
    4. '   ' → logprob: -2.686159372329712
    5. 'def' → logprob: -2.936159372329712
    6. '_' → logprob: -2.936159372329712
    7. ' de' → logprob: -3.686159372329712
    8. ' =' → logprob: -3.936159372329712
    9. ' to' → logprob: -4.811159133911133
    10. 'to' → logprob: -4.811159133911133

Token 2412: ' maxim' (ID: 29045)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -0.49407610297203064
    2. 'max' → logprob: -0.994076132774353
    3. ' maximize' → logprob: -5.869076251983643
    4. 'chercher' → logprob: -5.994076251983643
    5. 'cho' → logprob: -6.119076251983643
    6. '(c' → logprob: -6.244076251983643
    7. 'find' → logprob: -6.494076251983643
    8. 'optim' → logprob: -6.869076251983643
    9. 'choose' → logprob: -6.869076251983643
    10. '(' → logprob: -6.869076251983643

Token 2413: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.509699821472168
    2. 'iser' → logprob: -1.384699821472168
    3. 'ax' → logprob: -2.634699821472168
    4. 'izer' → logprob: -3.259699821472168
    5. 'a' → logprob: -4.134699821472168
    6. 'is' → logprob: -5.009699821472168
    7. 'al' → logprob: -5.509699821472168
    8. '```' → logprob: -6.009699821472168
    9. 'er' → logprob: -6.509699821472168
    10. 'i' → logprob: -7.259699821472168

Token 2414: ' cette' (ID: 7696)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12082627415657043
    2. '(' → logprob: -3.245826244354248
    3. '(c' → logprob: -3.370826244354248
    4. '_' → logprob: -4.495826244354248
    5. '   ' → logprob: -4.995826244354248
    6. ' _' → logprob: -5.120826244354248
    7. ' ' → logprob: -5.120826244354248
    8. ' (
' → logprob: -6.370826244354248
    9. '(sum' → logprob: -6.495826244354248
    10. '(
' → logprob: -7.120826244354248

Token 2415: ' valeur' (ID: 41664)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020491553470492363
    2. ' _' → logprob: -4.895491600036621
    3. ')' → logprob: -5.395491600036621
    4. '+' → logprob: -6.770491600036621
    5. ' (' → logprob: -7.020491600036621
    6. '*' → logprob: -7.145491600036621
    7. '\n' → logprob: -7.270491600036621
    8. '(' → logprob: -7.520491600036621
    9. ' \' → logprob: -7.895491600036621
    10. ' ' → logprob: -8.020491600036621

Token 2416: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20693252980709076
    2. 'def' → logprob: -2.456932544708252
    3. ':' → logprob: -3.581932544708252
    4. ',' → logprob: -4.206932544708252
    5. 'import' → logprob: -4.956932544708252
    6. '```' → logprob: -5.081932544708252
    7. '(
' → logprob: -5.206932544708252
    8. '[
' → logprob: -5.331932544708252
    9. '[' → logprob: -5.456932544708252
    10. ' =' → logprob: -5.456932544708252

Token 2417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019001580774784088
    2. 'def' → logprob: -4.644001483917236
    3. ':' → logprob: -5.894001483917236
    4. '    
' → logprob: -6.894001483917236
    5. '_j' → logprob: -7.019001483917236
    6. '\' → logprob: -7.269001483917236
    7. 'j' → logprob: -7.519001483917236
    8. '
' → logprob: -8.019001960754395
    9. '"' → logprob: -8.019001960754395
    10. '_' → logprob: -8.269001960754395

Token 2418: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045011453330516815
    2. 'def' → logprob: -3.295011520385742
    3. 'n' → logprob: -5.545011520385742
    4. '(n' → logprob: -7.920011520385742
    5. 'import' → logprob: -7.920011520385742
    6. ')' → logprob: -8.170011520385742
    7. '(
' → logprob: -8.420011520385742
    8. 'j' → logprob: -8.545011520385742
    9. ':
' → logprob: -8.545011520385742
    10. ')
' → logprob: -8.920011520385742

Token 2419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004716225899755955
    2. 'n' → logprob: -6.004716396331787
    3. 'def' → logprob: -7.129716396331787
    4. 'p' → logprob: -7.879716396331787
    5. '    
' → logprob: -8.004715919494629
    6. 'j' → logprob: -8.129715919494629
    7. 'import' → logprob: -9.504715919494629
    8. '```' → logprob: -9.754715919494629
    9. '`' → logprob: -10.004715919494629
    10. '"' → logprob: -10.504715919494629

Token 2420: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04452314227819443
    2. 'n' → logprob: -3.419523239135742
    3. 'def' → logprob: -4.794523239135742
    4. 'j' → logprob: -6.419523239135742
    5. '```' → logprob: -7.919523239135742
    6. 'dp' → logprob: -9.169523239135742
    7. '
' → logprob: -9.794523239135742
    8. ' n' → logprob: -10.294523239135742
    9. 'c' → logprob: -10.294523239135742
    10. 'p' → logprob: -10.669523239135742

Token 2421: ' Or' (ID: 2604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4004315137863159
    2. 'n' → logprob: -1.150431513786316
    3. 'def' → logprob: -5.2754316329956055
    4. '```' → logprob: -5.2754316329956055
    5. 'j' → logprob: -6.4004316329956055
    6. '
' → logprob: -7.9004316329956055
    7. '    
' → logprob: -8.150431632995605
    8. '`' → logprob: -8.275431632995605
    9. ' n' → logprob: -8.525431632995605
    10. 'import' → logprob: -9.650431632995605

Token 2422: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3916211724281311
    2. '#' → logprob: -1.5166211128234863
    3. ' (' → logprob: -3.6416211128234863
    4. 'n' → logprob: -4.016621112823486
    5. '(n' → logprob: -4.391621112823486
    6. 'def' → logprob: -4.391621112823486
    7. ' n' → logprob: -5.016621112823486
    8. 'c' → logprob: -5.266621112823486
    9. 'import' → logprob: -5.391621112823486
    10. ' #' → logprob: -5.641621112823486

Token 2423: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6815913319587708
    2. 'n' → logprob: -1.806591272354126
    3. 'def' → logprob: -1.806591272354126
    4. 'c' → logprob: -2.931591272354126
    5. ' (' → logprob: -4.056591510772705
    6. ' n' → logprob: -4.181591510772705
    7. '(
' → logprob: -4.431591510772705
    8. '(n' → logprob: -4.431591510772705
    9. '#' → logprob: -4.556591510772705
    10. ')' → logprob: -5.181591510772705

Token 2424: ' un' (ID: 537)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7090616226196289
    2. 'i' → logprob: -2.209061622619629
    3. '(c' → logprob: -2.459061622619629
    4. ' chaque' → logprob: -2.584061622619629
    5. ' (' → logprob: -3.084061622619629
    6. ' c' → logprob: -3.209061622619629
    7. 'max' → logprob: -3.334061622619629
    8. '(' → logprob: -4.209061622619629
    9. ' maxim' → logprob: -4.209061622619629
    10. ' i' → logprob: -4.209061622619629

Token 2425: ' ensemble' (ID: 33081)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37984952330589294
    2. ')' → logprob: -2.254849433898926
    3. '=' → logprob: -3.504849433898926
    4. '(c' → logprob: -4.004849433898926
    5. 'c' → logprob: -4.129849433898926
    6. '_c' → logprob: -4.254849433898926
    7. ' =' → logprob: -4.504849433898926
    8. '(' → logprob: -4.629849433898926
    9. ' (' → logprob: -4.629849433898926
    10. ' ' → logprob: -4.754849433898926

Token 2426: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14555563032627106
    2. '_c' → logprob: -3.0205557346343994
    3. '=' → logprob: -3.1455557346343994
    4. ')' → logprob: -4.52055549621582
    5. ' _' → logprob: -5.02055549621582
    6. '```' → logprob: -5.14555549621582
    7. ' =' → logprob: -5.27055549621582
    8. '   ' → logprob: -6.27055549621582
    9. '[' → logprob: -6.39555549621582
    10. '(c' → logprob: -6.52055549621582

Token 2427: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.350428968667984
    2. '_j' → logprob: -2.600429058074951
    3. 'cou' → logprob: -2.600429058074951
    4. '_c' → logprob: -3.225429058074951
    5. 'j' → logprob: -3.350429058074951
    6. 'indices' → logprob: -4.475429058074951
    7. 'joint' → logprob: -4.725429058074951
    8. ')' → logprob: -4.850429058074951
    9. 'cuts' → logprob: -5.225429058074951
    10. '```' → logprob: -5.350429058074951

Token 2428: 'ures' (ID: 1609)
  Prédit: '_cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.8890067338943481
    2. '_' → logprob: -1.0140067338943481
    3. 's' → logprob: -3.3890066146850586
    4. ')' → logprob: -3.6390066146850586
    5. 'u' → logprob: -3.8890066146850586
    6. '#' → logprob: -4.139006614685059
    7. 'uts' → logprob: -4.389006614685059
    8. 'cut' → logprob: -5.014006614685059
    9. 'cuts' → logprob: -5.139006614685059
    10. '_c' → logprob: -5.139006614685059

Token 2429: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7849889993667603
    2. '_i' → logprob: -2.0349888801574707
    3. '[i' → logprob: -2.0349888801574707
    4. '_selected' → logprob: -2.1599888801574707
    5. ' _' → logprob: -3.7849888801574707
    6. ',' → logprob: -3.9099888801574707
    7. '```' → logprob: -3.9099888801574707
    8. ' chosen' → logprob: -4.284988880157471
    9. ' =' → logprob: -4.784988880157471
    10. 'chosen' → logprob: -4.909988880157471

Token 2430: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6609712839126587
    2. ')' → logprob: -1.9109712839126587
    3. ' (' → logprob: -2.035971164703369
    4. '"' → logprob: -2.660971164703369
    5. '#' → logprob: -2.785971164703369
    6. ' *' → logprob: -2.785971164703369
    7. ''' → logprob: -2.910971164703369
    8. '(' → logprob: -3.535971164703369
    9. '(c' → logprob: -3.535971164703369
    10. '*' → logprob: -3.660971164703369

Token 2431: ' sait' (ID: 52101)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.9257144927978516
    2. '=' → logprob: -1.8007144927978516
    3. '#' → logprob: -2.4257144927978516
    4. ' =' → logprob: -3.0507144927978516
    5. '_' → logprob: -3.3007144927978516
    6. ')' → logprob: -3.5507144927978516
    7. '*' → logprob: -3.9257144927978516
    8. ' peut' → logprob: -4.175714492797852
    9. ' chois' → logprob: -4.175714492797852
    10. '[' → logprob: -4.300714492797852

Token 2432: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3242751359939575
    2. '_' → logprob: -1.5742751359939575
    3. ':' → logprob: -2.324275016784668
    4. '=' → logprob: -2.449275016784668
    5. '   ' → logprob: -2.699275016784668
    6. '```' → logprob: -2.949275016784668
    7. '[' → logprob: -3.324275016784668
    8. ''' → logprob: -3.324275016784668
    9. ' :' → logprob: -3.949275016784668
    10. ' _' → logprob: -4.074275016784668

Token 2433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5166259407997131
    2. ' =' → logprob: -1.0166258811950684
    3. '_' → logprob: -3.6416258811950684
    4. ')' → logprob: -5.766625881195068
    5. ' _' → logprob: -6.141625881195068
    6. ' (' → logprob: -6.266625881195068
    7. '#' → logprob: -6.391625881195068
    8. ''' → logprob: -6.766625881195068
    9. '+' → logprob: -7.266625881195068
    10. ' ' → logprob: -7.391625881195068

Token 2434: ' |' (ID: 1022)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10369876027107239
    2. ' {' → logprob: -4.35369873046875
    3. ' len' → logprob: -4.35369873046875
    4. ''' → logprob: -4.72869873046875
    5. ' ' → logprob: -4.72869873046875
    6. ' "' → logprob: -4.85369873046875
    7. ' c' → logprob: -5.10369873046875
    8. ' '' → logprob: -5.22869873046875
    9. ' sum' → logprob: -5.35369873046875
    10. '"' → logprob: -5.60369873046875

Token 2435: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7256174087524414
    2. '_' → logprob: -1.9756174087524414
    3. '_c' → logprob: -2.1006174087524414
    4. 'c' → logprob: -2.6006174087524414
    5. 'cuts' → logprob: -3.2256174087524414
    6. ' _' → logprob: -3.3506174087524414
    7. '_cut' → logprob: -3.3506174087524414
    8. ' ' → logprob: -3.4756174087524414
    9. ' ' → logprob: -3.6006174087524414
    10. '=' → logprob: -3.7256174087524414

Token 2436: 'oup' (ID: 9999)
  Prédit: 'uts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.5662862658500671
    2. '_' → logprob: -1.191286325454712
    3. 'ut' → logprob: -2.941286325454712
    4. '_c' → logprob: -3.441286325454712
    5. '=' → logprob: -5.316286087036133
    6. ' =' → logprob: -5.441286087036133
    7. ' _' → logprob: -5.566286087036133
    8. '}_' → logprob: -6.066286087036133
    9. '_cut' → logprob: -6.066286087036133
    10. '```' → logprob: -6.066286087036133

Token 2437: 'ures' (ID: 1609)
  Prédit: 'uts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.32015085220336914
    2. '_' → logprob: -1.8201508522033691
    3. 'ut' → logprob: -2.570150852203369
    4. 'u' → logprob: -4.820150852203369
    5. 't' → logprob: -5.320150852203369
    6. 's' → logprob: -5.695150852203369
    7. '_t' → logprob: -5.695150852203369
    8. '_cut' → logprob: -6.570150852203369
    9. ')_' → logprob: -6.820150852203369
    10. ' _' → logprob: -6.945150852203369

Token 2438: '|' (ID: 91)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.087532877922058
    2. 's' → logprob: -1.587532877922058
    3. ']' → logprob: -1.837532877922058
    4. ')' → logprob: -1.962532877922058
    5. '|' → logprob: -2.8375329971313477
    6. ')_' → logprob: -3.5875329971313477
    7. ']_' → logprob: -3.9625329971313477
    8. '_used' → logprob: -4.337532997131348
    9. '```' → logprob: -4.712532997131348
    10. '[' → logprob: -5.587532997131348

Token 2439: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0685500055551529
    2. ')' → logprob: -4.568550109863281
    3. ':' → logprob: -4.568550109863281
    4. 'def' → logprob: -4.693550109863281
    5. '```' → logprob: -5.193550109863281
    6. ' =' → logprob: -5.943550109863281
    7. ':
' → logprob: -6.068550109863281
    8. ']' → logprob: -6.193550109863281
    9. '_' → logprob: -6.193550109863281
    10. '
' → logprob: -6.193550109863281

Token 2440: ' sum' (ID: 4215)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.3944175243377686
    2. ' sum' → logprob: -1.6444175243377686
    3. ')' → logprob: -2.1444175243377686
    4. 'sum' → logprob: -2.3944175243377686
    5. 'j' → logprob: -2.7694175243377686
    6. '   ' → logprob: -3.3944175243377686
    7. '"' → logprob: -3.5194175243377686
    8. ' (' → logprob: -3.5194175243377686
    9. ' n' → logprob: -3.7694175243377686
    10. ''' → logprob: -4.019417762756348

Token 2441: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.02085447683930397
    2. '_' → logprob: -3.8958544731140137
    3. '_j' → logprob: -9.020854949951172
    4. '\' → logprob: -10.395854949951172
    5. '_cut' → logprob: -10.520854949951172
    6. '```' → logprob: -10.520854949951172
    7. ' =' → logprob: -11.145854949951172
    8. '_des' → logprob: -11.395854949951172
    9. ')_' → logprob: -11.645854949951172
    10. '_of' → logprob: -11.895854949951172

Token 2442: 'oup' (ID: 9999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01960926316678524
    2. '_c' → logprob: -4.394609451293945
    3. '_o' → logprob: -5.519609451293945
    4. '_cut' → logprob: -6.519609451293945
    5. 'oup' → logprob: -8.144609451293945
    6. 'o' → logprob: -8.644609451293945
    7. '__' → logprob: -8.894609451293945
    8. '_op' → logprob: -9.144609451293945
    9. ' _' → logprob: -9.269609451293945
    10. '_u' → logprob: -9.394609451293945

Token 2443: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009713366627693176
    2. 'ures' → logprob: -5.884713172912598
    3. '_cut' → logprob: -6.134713172912598
    4. '_u' → logprob: -6.259713172912598
    5. '__' → logprob: -6.884713172912598
    6. '_c' → logprob: -7.759713172912598
    7. ' _' → logprob: -8.509713172912598
    8. '_out' → logprob: -9.259713172912598
    9. '_r' → logprob: -9.509713172912598
    10. 'u' → logprob: -9.634713172912598

Token 2444: ' =' (ID: 314)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.6655654907226562
    2. ' =' → logprob: -1.6655654907226562
    3. '_util' → logprob: -2.1655654907226562
    4. '_' → logprob: -2.7905654907226562
    5. '=' → logprob: -3.0405654907226562
    6. ')' → logprob: -3.4155654907226562
    7. '   ' → logprob: -4.790565490722656
    8. '[i' → logprob: -4.915565490722656
    9. '```' → logprob: -5.040565490722656
    10. ']' → logprob: -5.915565490722656

Token 2445: ' somme' (ID: 64484)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.044581413269043
    2. ' ' → logprob: -1.669581413269043
    3. ' sum' → logprob: -1.669581413269043
    4. 'sum' → logprob: -2.419581413269043
    5. ' set' → logprob: -3.544581413269043
    6. 'c' → logprob: -3.544581413269043
    7. ' {' → logprob: -3.794581413269043
    8. ' c' → logprob: -3.919581413269043
    9. '{' → logprob: -4.044581413269043
    10. ' (' → logprob: -4.419581413269043

Token 2446: ' des' (ID: 731)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.3888855278491974
    2. '_' → logprob: -1.513885498046875
    3. '_des' → logprob: -2.513885498046875
    4. 'des' → logprob: -4.263885498046875
    5. '_of' → logprob: -5.763885498046875
    6. '```' → logprob: -6.388885498046875
    7. '_j' → logprob: -7.513885498046875
    8. ' _' → logprob: -8.138885498046875
    9. '_{' → logprob: -8.638885498046875
    10. 'of' → logprob: -8.888885498046875

Token 2447: ' j' (ID: 441)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6792858839035034
    2. '_j' → logprob: -1.5542858839035034
    3. '_c' → logprob: -1.5542858839035034
    4. 'j' → logprob: -3.679286003112793
    5. ' _' → logprob: -4.179286003112793
    6. '_' → logprob: -4.679286003112793
    7. ' coup' → logprob: -5.429286003112793
    8. '_cut' → logprob: -5.429286003112793
    9. ' ' → logprob: -6.304286003112793
    10. '```' → logprob: -6.679286003112793

Token 2448: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4080999791622162
    2. 'oints' → logprob: -1.5331000089645386
    3. '_s' → logprob: -3.658099889755249
    4. '_i' → logprob: -3.783099889755249
    5. 's' → logprob: -4.033100128173828
    6. 'oint' → logprob: -4.783100128173828
    7. '[' → logprob: -5.158100128173828
    8. ''_' → logprob: -5.408100128173828
    9. ' _' → logprob: -5.533100128173828
    10. '[i' → logprob: -5.658100128173828

Token 2449: ' coup' (ID: 25465)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7847818732261658
    2. '[i' → logprob: -1.1597819328308105
    3. ')' → logprob: -1.9097819328308105
    4. '```' → logprob: -3.5347819328308105
    5. '_i' → logprob: -4.5347819328308105
    6. ']' → logprob: -5.0347819328308105
    7. '_' → logprob: -5.2847819328308105
    8. '[' → logprob: -5.4097819328308105
    9. '[
' → logprob: -5.5347819328308105
    10. ' _' → logprob: -6.0347819328308105

Token 2450: 'és' (ID: 1756)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.9425445199012756
    2. 'é' → logprob: -1.0675444602966309
    3. '_cut' → logprob: -2.317544460296631
    4. 'és' → logprob: -2.942544460296631
    5. 'cuts' → logprob: -3.442544460296631
    6. 'cut' → logprob: -4.442544460296631
    7. '[' → logprob: -4.567544460296631
    8. '=' → logprob: -4.692544460296631
    9. 'es' → logprob: -5.317544460296631
    10. ']' → logprob: -5.442544460296631

Token 2451: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033308956772089005
    2. ':' → logprob: -5.033308982849121
    3. '[i' → logprob: -5.533308982849121
    4. '[
' → logprob: -5.533308982849121
    5. 'def' → logprob: -5.908308982849121
    6. '[j' → logprob: -6.158308982849121
    7. ':
' → logprob: -6.158308982849121
    8. '```' → logprob: -6.408308982849121
    9. '[' → logprob: -6.658308982849121
    10. '_j' → logprob: -6.783308982849121

Token 2452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014538954012095928
    2. 'def' → logprob: -4.514538764953613
    3. ')' → logprob: -7.514538764953613
    4. '    
' → logprob: -7.514538764953613
    5. 'j' → logprob: -7.639538764953613
    6. 'n' → logprob: -7.639538764953613
    7. '```' → logprob: -8.264538764953613
    8. '_j' → logprob: -8.889538764953613
    9. 'import' → logprob: -9.014538764953613
    10. ')
' → logprob: -9.014538764953613

Token 2453: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012299010530114174
    2. 'def' → logprob: -5.762299060821533
    3. ')' → logprob: -6.387299060821533
    4. '_j' → logprob: -6.387299060821533
    5. 'j' → logprob: -7.012299060821533
    6. '"' → logprob: -7.512299060821533
    7. ']' → logprob: -7.637299060821533
    8. ':' → logprob: -7.762299060821533
    9. '[
' → logprob: -8.012298583984375
    10. ')
' → logprob: -8.137298583984375

Token 2454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017164701130241156
    2. 'def' → logprob: -7.626716613769531
    3. '    
' → logprob: -8.376716613769531
    4. '
' → logprob: -8.501716613769531
    5. '```' → logprob: -8.501716613769531
    6. 'j' → logprob: -9.376716613769531
    7. ')' → logprob: -9.501716613769531
    8. '"' → logprob: -9.501716613769531
    9. '       ' → logprob: -10.376716613769531
    10. '#' → logprob: -10.501716613769531

Token 2455: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01925969123840332
    2. 'j' → logprob: -5.394259452819824
    3. 'def' → logprob: -5.894259452819824
    4. 'n' → logprob: -5.894259452819824
    5. '"' → logprob: -6.019259452819824
    6. '    
' → logprob: -6.519259452819824
    7. ':' → logprob: -7.019259452819824
    8. '```' → logprob: -7.144259452819824
    9. '[
' → logprob: -8.144259452819824
    10. '       ' → logprob: -8.519259452819824

Token 2456: ' Il' (ID: 5329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02004881761968136
    2. 'n' → logprob: -5.02004861831665
    3. 'j' → logprob: -5.14504861831665
    4. '    
' → logprob: -6.64504861831665
    5. 'def' → logprob: -6.64504861831665
    6. '"' → logprob: -6.89504861831665
    7. '```' → logprob: -7.14504861831665
    8. '\' → logprob: -7.77004861831665
    9. '_j' → logprob: -8.020049095153809
    10. ':' → logprob: -8.270049095153809

Token 2457: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48904895782470703
    2. '_i' → logprob: -1.864048957824707
    3. ' =' → logprob: -2.364048957824707
    4. '_' → logprob: -2.614048957824707
    5. 's' → logprob: -3.489048957824707
    6. '#' → logprob: -4.239048957824707
    7. '=
' → logprob: -6.114048957824707
    8. 'i' → logprob: -6.364048957824707
    9. '_
' → logprob: -6.364048957824707
    10. ' _' → logprob: -6.489048957824707

Token 2458: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09874249994754791
    2. ' =' → logprob: -2.4737424850463867
    3. '=
' → logprob: -5.598742485046387
    4. ''s' → logprob: -6.098742485046387
    5. '#' → logprob: -6.348742485046387
    6. 's' → logprob: -7.848742485046387
    7. '_' → logprob: -8.348742485046387
    8. ')' → logprob: -8.473742485046387
    9. ',' → logprob: -8.848742485046387
    10. '```' → logprob: -9.223742485046387

Token 2459: ' pas' (ID: 2173)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.2338550090789795
    2. 'possible' → logprob: -1.2338550090789795
    3. 'pas' → logprob: -1.3588550090789795
    4. ' possible' → logprob: -3.1088550090789795
    5. '#' → logprob: -3.7338550090789795
    6. ' pas' → logprob: -4.108855247497559
    7. '_pas' → logprob: -4.483855247497559
    8. '_possible' → logprob: -4.608855247497559
    9. 'éc' → logprob: -4.983855247497559
    10. 'cess' → logprob: -5.108855247497559

Token 2460: ' trivial' (ID: 86130)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3596341609954834
    2. 'pas' → logprob: -2.2346341609954834
    3. 'é' → logprob: -3.1096341609954834
    4. 'né' → logprob: -3.3596341609954834
    5. 'égal' → logprob: -4.3596343994140625
    6. ' évident' → logprob: -4.6096343994140625
    7. 'f' → logprob: -4.8596343994140625
    8. '=' → logprob: -4.9846343994140625
    9. '_' → logprob: -4.9846343994140625
    10. 'd' → logprob: -5.1096343994140625

Token 2461: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8166918754577637
    2. '```' → logprob: -1.6916918754577637
    3. '   ' → logprob: -2.5666918754577637
    4. '_' → logprob: -2.6916918754577637
    5. 'def' → logprob: -2.8166918754577637
    6. '=' → logprob: -3.1916918754577637
    7. ')' → logprob: -4.066691875457764
    8. '[i' → logprob: -4.191691875457764
    9. '[' → logprob: -4.316691875457764
    10. '#' → logprob: -4.316691875457764

Token 2462: ' choisir' (ID: 47004)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.847389578819275
    2. 'cho' → logprob: -1.847389578819275
    3. 'contin' → logprob: -2.2223896980285645
    4. 'faire' → logprob: -2.2223896980285645
    5. 'optim' → logprob: -2.7223896980285645
    6. 'prendre' → logprob: -2.8473896980285645
    7. ' choisir' → logprob: -2.9723896980285645
    8. 'max' → logprob: -3.0973896980285645
    9. 'choose' → logprob: -3.2223896980285645
    10. 'import' → logprob: -3.7223896980285645

Token 2463: ' arbit' (ID: 96555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30943217873573303
    2. ''' → logprob: -2.6844322681427
    3. ')' → logprob: -2.6844322681427
    4. '#' → logprob: -4.059432029724121
    5. 'c' → logprob: -4.309432029724121
    6. 'i' → logprob: -4.309432029724121
    7. '```' → logprob: -4.434432029724121
    8. '"' → logprob: -4.684432029724121
    9. ' _' → logprob: -4.809432029724121
    10. ' ' → logprob: -5.059432029724121

Token 2464: 'ra' (ID: 614)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49762091040611267
    2. 'def' → logprob: -1.747620940208435
    3. '       ' → logprob: -2.4976208209991455
    4. '```' → logprob: -3.3726208209991455
    5. 'inaire' → logprob: -4.497621059417725
    6. '#' → logprob: -4.747621059417725
    7. '
' → logprob: -4.872621059417725
    8. 'r' → logprob: -5.122621059417725
    9. 'ément' → logprob: -5.247621059417725
    10. 'aire' → logprob: -5.372621059417725

Token 2465: 'irement' (ID: 19343)
  Prédit: 'ire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.5146090984344482
    2. 'ry' → logprob: -1.1396090984344482
    3. 'irement' → logprob: -3.3896090984344482
    4. 'i' → logprob: -4.264609336853027
    5. 'ires' → logprob: -4.389609336853027
    6. 'r' → logprob: -5.014609336853027
    7. '```' → logprob: -5.139609336853027
    8. 'n' → logprob: -6.389609336853027
    9. ')' → logprob: -6.889609336853027
    10. '#' → logprob: -7.014609336853027

Token 2466: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46584782004356384
    2. ''' → logprob: -2.4658477306365967
    3. ')' → logprob: -2.5908477306365967
    4. '```' → logprob: -2.8408477306365967
    5. '[' → logprob: -3.4658477306365967
    6. ',' → logprob: -4.340847969055176
    7. '"' → logprob: -4.465847969055176
    8. ' _' → logprob: -4.715847969055176
    9. '_i' → logprob: -4.715847969055176
    10. '   ' → logprob: -4.840847969055176

Token 2467: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14276321232318878
    2. ')' → logprob: -3.017763137817383
    3. '_c' → logprob: -3.517763137817383
    4. '_j' → logprob: -3.892763137817383
    5. 'c' → logprob: -5.142763137817383
    6. 'j' → logprob: -5.267763137817383
    7. ' _' → logprob: -5.767763137817383
    8. ' ' → logprob: -6.017763137817383
    9. '"' → logprob: -6.392763137817383
    10. 'indices' → logprob: -6.642763137817383

Token 2468: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.026212509721517563
    2. ' _' → logprob: -5.651212692260742
    3. '_
' → logprob: -5.651212692260742
    4. 's' → logprob: -5.901212692260742
    5. '_cut' → logprob: -6.401212692260742
    6. '#' → logprob: -6.526212692260742
    7. 'ures' → logprob: -6.651212692260742
    8. ']' → logprob: -7.026212692260742
    9. '_set' → logprob: -7.026212692260742
    10. '_c' → logprob: -7.401212692260742

Token 2469: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19186368584632874
    2. ':' → logprob: -1.9418636560440063
    3. 'def' → logprob: -5.066863536834717
    4. '[' → logprob: -5.191863536834717
    5. ')' → logprob: -5.816863536834717
    6. '```' → logprob: -6.191863536834717
    7. '_' → logprob: -6.316863536834717
    8. '[i' → logprob: -6.566863536834717
    9. ',' → logprob: -6.816863536834717
    10. '):' → logprob: -6.816863536834717

Token 2470: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2303546667098999
    2. '[i' → logprob: -2.9803547859191895
    3. '_' → logprob: -3.3553547859191895
    4. '   ' → logprob: -3.4803547859191895
    5. '[' → logprob: -3.8553547859191895
    6. ']' → logprob: -4.2303547859191895
    7. ':' → logprob: -5.1053547859191895
    8. '#' → logprob: -5.7303547859191895
    9. '[n' → logprob: -5.7303547859191895
    10. '[
' → logprob: -5.7303547859191895

Token 2471: '.e' (ID: 2560)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.066774606704712
    2. '_' → logprob: -1.066774606704712
    3. 'n' → logprob: -2.066774606704712
    4. ')' → logprob: -3.316774606704712
    5. ']' → logprob: -3.566774606704712
    6. ' =' → logprob: -3.816774606704712
    7. 'nd' → logprob: -4.191774368286133
    8. 's' → logprob: -4.441774368286133
    9. 'def' → logprob: -4.816774368286133
    10. '[' → logprob: -4.816774368286133

Token 2472: '.,' (ID: 4213)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6441243886947632
    2. 'n' → logprob: -1.5191243886947632
    3. '=' → logprob: -2.6441245079040527
    4. '_' → logprob: -2.8941245079040527
    5. ')' → logprob: -3.2691245079040527
    6. ''' → logprob: -3.3941245079040527
    7. 'nd' → logprob: -4.144124507904053
    8. 'f' → logprob: -4.894124507904053
    9. 't' → logprob: -4.894124507904053
    10. '+' → logprob: -5.019124507904053

Token 2473: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09042953699827194
    2. ' n' → logprob: -4.715429306030273
    3. 'c' → logprob: -4.840429306030273
    4. 'j' → logprob: -5.090429306030273
    5. 'n' → logprob: -5.090429306030273
    6. '   ' → logprob: -5.215429306030273
    7. '#' → logprob: -5.340429306030273
    8. 'def' → logprob: -5.340429306030273
    9. ' c' → logprob: -5.465429306030273
    10. ''' → logprob: -5.465429306030273

Token 2474: ' indices' (ID: 30378)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9609331488609314
    2. '_' → logprob: -0.9609331488609314
    3. 'c' → logprob: -2.835933208465576
    4. '_j' → logprob: -2.835933208465576
    5. '_c' → logprob: -2.835933208465576
    6. 'j' → logprob: -3.960933208465576
    7. ']' → logprob: -4.960933208465576
    8. '_i' → logprob: -5.335933208465576
    9. ',' → logprob: -5.585933208465576
    10. '[' → logprob: -5.710933208465576

Token 2475: ')' (ID: 8)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42278480529785156
    2. ')' → logprob: -1.7977848052978516
    3. '=' → logprob: -2.9227848052978516
    4. '[' → logprob: -3.0477848052978516
    5. '```' → logprob: -3.4227848052978516
    6. ']' → logprob: -5.047784805297852
    7. ''' → logprob: -5.547784805297852
    8. '+' → logprob: -5.547784805297852
    9. 's' → logprob: -5.547784805297852
    10. '[i' → logprob: -5.547784805297852

Token 2476: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7991060018539429
    2. '[' → logprob: -1.5491060018539429
    3. '[i' → logprob: -2.5491061210632324
    4. '   ' → logprob: -2.9241061210632324
    5. '```' → logprob: -3.0491061210632324
    6. '[
' → logprob: -3.2991061210632324
    7. '_' → logprob: -3.7991061210632324
    8. ')' → logprob: -3.9241061210632324
    9. 'def' → logprob: -4.299106121063232
    10. ',' → logprob: -4.549106121063232

Token 2477: ' maxim' (ID: 29045)
  Prédit: ' cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -1.2461278438568115
    2. ' couper' → logprob: -1.8711278438568115
    3. ' maximize' → logprob: -1.9961278438568115
    4. '_' → logprob: -2.1211278438568115
    5. '_cut' → logprob: -2.6211278438568115
    6. ' choisir' → logprob: -2.8711278438568115
    7. ' _' → logprob: -3.4961278438568115
    8. ' max' → logprob: -3.6211278438568115
    9. ' maxim' → logprob: -3.7461278438568115
    10. 'cut' → logprob: -3.8711278438568115

Token 2478: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.195813849568367
    2. 'um' → logprob: -2.6958138942718506
    3. 'izer' → logprob: -3.3208138942718506
    4. '```' → logprob: -3.3208138942718506
    5. 'al' → logprob: -4.1958136558532715
    6. 'iser' → logprob: -5.3208136558532715
    7. 'ze' → logprob: -5.6958136558532715
    8. '#' → logprob: -5.9458136558532715
    9. 'a' → logprob: -6.1958136558532715
    10. 'ale' → logprob: -6.4458136558532715

Token 2479: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8908507823944092
    2. '_' → logprob: -0.8908507823944092
    3. '"' → logprob: -3.015850782394409
    4. ''' → logprob: -3.265850782394409
    5. '```' → logprob: -3.390850782394409
    6. '<|end|>' → logprob: -3.640850782394409
    7. '(' → logprob: -5.140851020812988
    8. ' (' → logprob: -5.515851020812988
    9. ' ' → logprob: -5.515851020812988
    10. ' ' → logprob: -6.140851020812988

Token 2480: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6516326069831848
    2. '_' → logprob: -1.77663254737854
    3. '<|end|>' → logprob: -1.90163254737854
    4. ''' → logprob: -2.65163254737854
    5. '"' → logprob: -3.90163254737854
    6. '```' → logprob: -3.90163254737854
    7. '=' → logprob: -5.151632785797119
    8. '[' → logprob: -5.276632785797119
    9. ' _' → logprob: -5.651632785797119
    10. '<|end|>' → logprob: -5.651632785797119

Token 2481: ' #' (ID: 1069)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48876720666885376
    2. ')' → logprob: -1.863767147064209
    3. '```' → logprob: -2.363767147064209
    4. '_c' → logprob: -3.113767147064209
    5. ' _' → logprob: -3.738767147064209
    6. ''' → logprob: -3.988767147064209
    7. '"' → logprob: -5.113767147064209
    8. '`' → logprob: -5.738767147064209
    9. ' ' → logprob: -5.738767147064209
    10. 'c' → logprob: -5.988767147064209

Token 2482: ' ce' (ID: 2357)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6765149831771851
    2. ')' → logprob: -1.051514983177185
    3. '1' → logprob: -3.1765151023864746
    4. '_c' → logprob: -3.9265151023864746
    5. ' ' → logprob: -4.301515102386475
    6. 'sum' → logprob: -4.301515102386475
    7. '_' → logprob: -4.926515102386475
    8. 'i' → logprob: -5.051515102386475
    9. '```' → logprob: -5.301515102386475
    10. '(c' → logprob: -5.301515102386475

Token 2483: ' produit' (ID: 29429)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2965584993362427
    2. ' _' → logprob: -2.421558380126953
    3. '_c' → logprob: -3.046558380126953
    4. '\' → logprob: -3.796558380126953
    5. '_
' → logprob: -4.421558380126953
    6. ')' → logprob: -4.796558380126953
    7. '\n' → logprob: -4.921558380126953
    8. 'def' → logprob: -5.046558380126953
    9. '_i' → logprob: -5.046558380126953
    10. '_j' → logprob: -5.171558380126953

Token 2484: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03039584308862686
    2. ':' → logprob: -4.030395984649658
    3. ':
' → logprob: -5.780395984649658
    4. '
' → logprob: -6.030395984649658
    5. 'def' → logprob: -6.405395984649658
    6. '\' → logprob: -6.780395984649658
    7. '```' → logprob: -7.030395984649658
    8. '\n' → logprob: -7.655395984649658
    9. ',' → logprob: -8.0303955078125
    10. '[
' → logprob: -8.2803955078125

Token 2485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07769399881362915
    2. 'def' → logprob: -3.0776939392089844
    3. ':' → logprob: -4.202693939208984
    4. ':
' → logprob: -5.202693939208984
    5. 'n' → logprob: -6.952693939208984
    6. '(n' → logprob: -7.077693939208984
    7. '\' → logprob: -7.327693939208984
    8. ')' → logprob: -7.327693939208984
    9. '
' → logprob: -7.702693939208984
    10. '):' → logprob: -7.952693939208984

Token 2486: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01164611428976059
    2. 'def' → logprob: -5.761646270751953
    3. ':' → logprob: -5.886646270751953
    4. 'n' → logprob: -6.636646270751953
    5. '\' → logprob: -7.261646270751953
    6. ')' → logprob: -7.636646270751953
    7. ':
' → logprob: -8.136646270751953
    8. '(n' → logprob: -8.136646270751953
    9. 'j' → logprob: -8.261646270751953
    10. '
' → logprob: -8.261646270751953

Token 2487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008687140420079231
    2. 'n' → logprob: -5.5086870193481445
    3. 'j' → logprob: -6.5086870193481445
    4. 'def' → logprob: -7.1336870193481445
    5. ')' → logprob: -7.6336870193481445
    6. '    
' → logprob: -8.258687019348145
    7. '```' → logprob: -8.383687019348145
    8. ':' → logprob: -8.758687019348145
    9. '\' → logprob: -9.008687019348145
    10. '"' → logprob: -9.258687019348145

Token 2488: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04632313922047615
    2. 'n' → logprob: -3.29632306098938
    3. 'def' → logprob: -5.796323299407959
    4. 'j' → logprob: -6.296323299407959
    5. '    
' → logprob: -6.421323299407959
    6. 'p' → logprob: -8.0463228225708
    7. '```' → logprob: -8.4213228225708
    8. '"' → logprob: -8.6713228225708
    9. ' n' → logprob: -9.1713228225708
    10. ')' → logprob: -9.2963228225708

Token 2489: ' Cependant' (ID: 74480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09188579022884369
    2. 'n' → logprob: -2.841885805130005
    3. 'def' → logprob: -4.466885566711426
    4. ':' → logprob: -5.841885566711426
    5. 'j' → logprob: -5.966885566711426
    6. '```' → logprob: -6.466885566711426
    7. '\n' → logprob: -6.591885566711426
    8. '(n' → logprob: -6.966885566711426
    9. '\' → logprob: -6.966885566711426
    10. ':
' → logprob: -6.966885566711426

Token 2490: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006309846881777048
    2. ':' → logprob: -6.131309986114502
    3. 'def' → logprob: -6.381309986114502
    4. 'n' → logprob: -7.506309986114502
    5. '
' → logprob: -7.881309986114502
    6. ' n' → logprob: -8.256309509277344
    7. ',' → logprob: -8.631309509277344
    8. '#' → logprob: -8.756309509277344
    9. '    
' → logprob: -9.506309509277344
    10. ')' → logprob: -9.506309509277344

Token 2491: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10530219972133636
    2. '#' → logprob: -3.105302095413208
    3. 'n' → logprob: -3.730302095413208
    4. ' n' → logprob: -4.605302333831787
    5. ' #' → logprob: -5.230302333831787
    6. 'j' → logprob: -6.480302333831787
    7. '    
' → logprob: -6.480302333831787
    8. ' for' → logprob: -6.480302333831787
    9. '```' → logprob: -6.480302333831787
    10. 'def' → logprob: -6.605302333831787

Token 2492: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3506808876991272
    2. ' n' → logprob: -1.9756808280944824
    3. 'c' → logprob: -2.2256808280944824
    4. '   ' → logprob: -3.9756808280944824
    5. ' c' → logprob: -4.100680828094482
    6. '(n' → logprob: -5.350680828094482
    7. 'i' → logprob: -6.475680828094482
    8. ' (' → logprob: -6.600680828094482
    9. 'def' → logprob: -6.975680828094482
    10. 'sum' → logprob: -7.100680828094482

Token 2493: ' salaire' (ID: 135427)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25896522402763367
    2. '(n' → logprob: -2.008965253829956
    3. 'j' → logprob: -3.883965253829956
    4. '"' → logprob: -4.508965015411377
    5. 'def' → logprob: -4.508965015411377
    6. '   ' → logprob: -4.883965015411377
    7. ' (' → logprob: -5.258965015411377
    8. '[n' → logprob: -5.258965015411377
    9. 'len' → logprob: -5.383965015411377
    10. '#' → logprob: -5.383965015411377

Token 2494: ' dépend' (ID: 68660)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15234608948230743
    2. '=' → logprob: -2.152346134185791
    3. '   ' → logprob: -4.152346134185791
    4. ')' → logprob: -6.277346134185791
    5. ' +=' → logprob: -6.527346134185791
    6. '_' → logprob: -6.902346134185791
    7. ':' → logprob: -7.152346134185791
    8. 'def' → logprob: -7.152346134185791
    9. '```' → logprob: -7.277346134185791
    10. '#' → logprob: -7.402346134185791

Token 2495: ' uniquement' (ID: 65527)
  Prédit: ' uniquement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uniquement' → logprob: -0.6812147498130798
    2. '=' → logprob: -1.5562148094177246
    3. '_' → logprob: -2.3062148094177246
    4. ' =' → logprob: -3.0562148094177246
    5. '   ' → logprob: -3.4312148094177246
    6. 'import' → logprob: -4.181214809417725
    7. ' seulement' → logprob: -4.181214809417725
    8. ' surtout' → logprob: -4.556214809417725
    9. '```' → logprob: -4.556214809417725
    10. 's' → logprob: -4.931214809417725

Token 2496: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9967179298400879
    2. ' des' → logprob: -1.371717929840088
    3. '=' → logprob: -1.746717929840088
    4. '   ' → logprob: -2.121717929840088
    5. ' de' → logprob: -3.746717929840088
    6. 'des' → logprob: -4.246717929840088
    7. ' =' → logprob: -4.246717929840088
    8. ' on' → logprob: -4.996717929840088
    9. ' du' → logprob: -5.871717929840088
    10. ')' → logprob: -6.121717929840088

Token 2497: ' coup' (ID: 25465)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18438318371772766
    2. 'j' → logprob: -2.5593831539154053
    3. '   ' → logprob: -3.1843831539154053
    4. 'c' → logprob: -4.434383392333984
    5. '(n' → logprob: -5.059383392333984
    6. 'len' → logprob: -5.434383392333984
    7. 'joint' → logprob: -5.434383392333984
    8. ' n' → logprob: -6.184383392333984
    9. '#' → logprob: -6.309383392333984
    10. ')' → logprob: -6.559383392333984

Token 2498: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.884054958820343
    2. 's' → logprob: -2.0090548992156982
    3. 'ures' → logprob: -2.2590548992156982
    4. '   ' → logprob: -2.7590548992156982
    5. '#' → logprob: -3.3840548992156982
    6. '_
' → logprob: -3.5090548992156982
    7. 'urations' → logprob: -3.5090548992156982
    8. ' _' → logprob: -3.7590548992156982
    9. 'u' → logprob: -3.8840548992156982
    10. '_c' → logprob: -4.009055137634277

Token 2499: ' chois' (ID: 33475)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4478719234466553
    2. '_' → logprob: -1.5728719234466553
    3. '[i' → logprob: -1.6978719234466553
    4. '```' → logprob: -2.1978719234466553
    5. '[' → logprob: -2.5728719234466553
    6. ',' → logprob: -2.9478719234466553
    7. ':' → logprob: -3.8228719234466553
    8. '_i' → logprob: -4.072872161865234
    9. '#' → logprob: -4.697872161865234
    10. ')' → logprob: -4.947872161865234

Token 2500: 'ies' (ID: 566)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5708385109901428
    2. '   ' → logprob: -2.570838451385498
    3. '```' → logprob: -3.070838451385498
    4. ']' → logprob: -3.195838451385498
    5. 's' → logprob: -3.570838451385498
    6. 'def' → logprob: -3.570838451385498
    7. '[' → logprob: -3.820838451385498
    8. 'es' → logprob: -3.820838451385498
    9. ')' → logprob: -3.945838451385498
    10. '=' → logprob: -4.070838451385498

Token 2501: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4059772789478302
    2. ':' → logprob: -1.9059772491455078
    3. ',' → logprob: -2.530977249145508
    4. '[i' → logprob: -4.030977249145508
    5. '[' → logprob: -4.155977249145508
    6. '[
' → logprob: -4.530977249145508
    7. '```' → logprob: -4.655977249145508
    8. '#' → logprob: -4.905977249145508
    9. ')' → logprob: -5.030977249145508
    10. '_' → logprob: -5.155977249145508

Token 2502: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019360477104783058
    2. '#' → logprob: -4.394360542297363
    3. ')' → logprob: -6.269360542297363
    4. ',' → logprob: -6.769360542297363
    5. ':' → logprob: -7.269360542297363
    6. 'n' → logprob: -7.269360542297363
    7. '       ' → logprob: -8.269360542297363
    8. ' n' → logprob: -8.269360542297363
    9. ' #' → logprob: -8.269360542297363
    10. 'j' → logprob: -8.394360542297363

Token 2503: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06387165188789368
    2. '#' → logprob: -2.9388716220855713
    3. 'n' → logprob: -6.06387186050415
    4. '"' → logprob: -6.81387186050415
    5. ':' → logprob: -6.93887186050415
    6. '       ' → logprob: -7.43887186050415
    7. 'def' → logprob: -7.68887186050415
    8. ')' → logprob: -7.93887186050415
    9. ''' → logprob: -8.063871383666992
    10. ' n' → logprob: -8.063871383666992

Token 2504: ' ces' (ID: 10532)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5905723571777344
    2. '#' → logprob: -2.7155723571777344
    3. 'n' → logprob: -2.7155723571777344
    4. ' c' → logprob: -3.0905723571777344
    5. ' les' → logprob: -3.0905723571777344
    6. ' la' → logprob: -3.2155723571777344
    7. ' n' → logprob: -3.3405723571777344
    8. 'len' → logprob: -3.7155723571777344
    9. ' (' → logprob: -3.8405723571777344
    10. '(c' → logprob: -4.215572357177734

Token 2505: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2455740123987198
    2. '_j' → logprob: -1.9955739974975586
    3. ' _' → logprob: -3.6205739974975586
    4. '   ' → logprob: -4.245573997497559
    5. 'j' → logprob: -4.870573997497559
    6. ' =' → logprob: -5.370573997497559
    7. '#' → logprob: -5.745573997497559
    8. 'def' → logprob: -5.870573997497559
    9. ' ' → logprob: -5.995573997497559
    10. ')' → logprob: -6.120573997497559

Token 2506: 'ures' (ID: 1609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2420514822006226
    2. 's' → logprob: -1.4920514822006226
    3. '#' → logprob: -2.742051601409912
    4. ')' → logprob: -3.117051601409912
    5. 'uts' → logprob: -3.242051601409912
    6. 'ures' → logprob: -3.242051601409912
    7. 'def' → logprob: -3.492051601409912
    8. 't' → logprob: -3.492051601409912
    9. '_' → logprob: -3.742051601409912
    10. 'ut' → logprob: -4.242051601409912

Token 2507: ' divis' (ID: 37826)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.508978009223938
    2. '=' → logprob: -2.1339778900146484
    3. 's' → logprob: -2.3839778900146484
    4. '```' → logprob: -2.6339778900146484
    5. '_' → logprob: -3.1339778900146484
    6. ':' → logprob: -4.258977890014648
    7. '   ' → logprob: -4.633977890014648
    8. '[i' → logprob: -5.008977890014648
    9. '_i' → logprob: -5.133977890014648
    10. '[' → logprob: -5.133977890014648

Token 2508: 'ent' (ID: 299)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8730905055999756
    2. 'e' → logprob: -1.8730905055999756
    3. 'ition' → logprob: -1.8730905055999756
    4. ')' → logprob: -2.2480905055999756
    5. 'ions' → logprob: -2.3730905055999756
    6. 'er' → logprob: -2.6230905055999756
    7. 'ion' → logprob: -3.2480905055999756
    8. '```' → logprob: -3.4980905055999756
    9. 'def' → logprob: -3.6230905055999756
    10. 'es' → logprob: -3.7480905055999756

Token 2509: '
' (ID: 198)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9117441773414612
    2. ' la' → logprob: -1.2867441177368164
    3. 'la' → logprob: -2.0367441177368164
    4. 'le' → logprob: -2.7867441177368164
    5. '   ' → logprob: -2.9117441177368164
    6. ' the' → logprob: -4.036744117736816
    7. '(n' → logprob: -4.286744117736816
    8. ' le' → logprob: -4.411744117736816
    9. 'n' → logprob: -5.411744117736816
    10. ' ' → logprob: -5.661744117736816

Token 2510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5053663849830627
    2. 'the' → logprob: -1.505366325378418
    3. ' la' → logprob: -3.255366325378418
    4. ''' → logprob: -3.630366325378418
    5. '```' → logprob: -3.880366325378418
    6. '"' → logprob: -4.130366325378418
    7. ' the' → logprob: -4.505366325378418
    8. 'la' → logprob: -5.130366325378418
    9. ')' → logprob: -5.130366325378418
    10. '_' → logprob: -5.130366325378418

Token 2511: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1908537894487381
    2. '#' (adapté à ' #') → logprob: -3.0658538341522217
    3. ' la' → logprob: -3.4408538341522217
    4. ' le' → logprob: -3.5658538341522217
    5. 'the' → logprob: -3.8158538341522217
    6. 'le' → logprob: -4.815853595733643
    7. '_' → logprob: -4.940853595733643
    8. 'def' → logprob: -5.565853595733643
    9. ' the' → logprob: -5.940853595733643
    10. ')' → logprob: -5.940853595733643

Token 2512: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9853046536445618
    2. 'the' → logprob: -1.235304594039917
    3. ' la' → logprob: -2.360304594039917
    4. 'n' → logprob: -2.610304594039917
    5. 'la' → logprob: -3.360304594039917
    6. '(n' → logprob: -3.485304594039917
    7. ')' → logprob: -4.235304832458496
    8. ' n' → logprob: -4.485304832458496
    9. '```' → logprob: -4.485304832458496
    10. 'le' → logprob: -4.610304832458496

Token 2513: ' chaîne' (ID: 89288)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.25145649909973145
    2. ' segments' → logprob: -2.3764564990997314
    3. '_' → logprob: -3.6264564990997314
    4. 'sequence' → logprob: -3.8764564990997314
    5. ' ' → logprob: -4.126456260681152
    6. 's' → logprob: -5.001456260681152
    7. 'n' → logprob: -5.251456260681152
    8. 'segment' → logprob: -5.626456260681152
    9. 'j' → logprob: -5.751456260681152
    10. ')' → logprob: -5.751456260681152

Token 2514: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4142866134643555
    2. '```' → logprob: -1.5392866134643555
    3. '   ' → logprob: -1.7892866134643555
    4. ''' → logprob: -2.1642866134643555
    5. '[' → logprob: -2.9142866134643555
    6. '\' → logprob: -3.9142866134643555
    7. '[i' → logprob: -4.0392866134643555
    8. ':' → logprob: -4.1642866134643555
    9. '[
' → logprob: -4.2892866134643555
    10. ' =' → logprob: -4.4142866134643555

Token 2515: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.672716498374939
    2. 'n' → logprob: -1.422716498374939
    3. ' segments' → logprob: -2.1727166175842285
    4. '   ' → logprob: -3.0477166175842285
    5. ' (' → logprob: -3.9227166175842285
    6. '"' → logprob: -4.5477166175842285
    7. '```' → logprob: -4.6727166175842285
    8. ' n' → logprob: -4.9227166175842285
    9. '(n' → logprob: -5.4227166175842285
    10. ')' → logprob: -5.9227166175842285

Token 2516: ' cont' (ID: 836)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14745257794857025
    2. '```' → logprob: -3.0224525928497314
    3. '_' → logprob: -4.147452354431152
    4. ' =' → logprob: -4.397452354431152
    5. 'def' → logprob: -5.147452354431152
    6. ',' → logprob: -5.272452354431152
    7. '#' → logprob: -5.522452354431152
    8. ':' → logprob: -5.647452354431152
    9. '[n' → logprob: -5.897452354431152
    10. '=' → logprob: -5.897452354431152

Token 2517: 'igus' (ID: 79914)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.2286251783370972
    2. 'iguous' → logprob: -1.2286251783370972
    3. 'in' → logprob: -1.6036251783370972
    4. 'igu' → logprob: -2.3536252975463867
    5. 'i' → logprob: -3.7286252975463867
    6. '#' → logprob: -3.8536252975463867
    7. 'inue' → logprob: -3.8536252975463867
    8. 'inu' → logprob: -4.853625297546387
    9. '```' → logprob: -4.978625297546387
    10. 'def' → logprob: -5.353625297546387

Token 2518: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1589043140411377
    2. ':' → logprob: -2.1589043140411377
    3. ':
' → logprob: -5.158904075622559
    4. ',' → logprob: -5.158904075622559
    5. '```' → logprob: -5.533904075622559
    6. '#' → logprob: -5.658904075622559
    7. 'def' → logprob: -5.908904075622559
    8. '):' → logprob: -6.908904075622559
    9. '[i' → logprob: -6.908904075622559
    10. '
' → logprob: -7.033904075622559

Token 2519: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02683429606258869
    2. '#' → logprob: -4.651834487915039
    3. ':' → logprob: -5.401834487915039
    4. '```' → logprob: -6.026834487915039
    5. ')' → logprob: -6.276834487915039
    6. '
' → logprob: -6.526834487915039
    7. '       ' → logprob: -6.901834487915039
    8. 'n' → logprob: -7.151834487915039
    9. 'def' → logprob: -7.401834487915039
    10. '"' → logprob: -7.526834487915039

Token 2520: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07470227032899857
    2. '"' → logprob: -4.199702262878418
    3. '#' → logprob: -4.199702262878418
    4. 'def' → logprob: -4.699702262878418
    5. ''' → logprob: -5.324702262878418
    6. 'n' → logprob: -5.449702262878418
    7. ':' → logprob: -5.574702262878418
    8. ' n' → logprob: -5.824702262878418
    9. ')' → logprob: -5.949702262878418
    10. '
' → logprob: -5.949702262878418

Token 2521: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20210440456867218
    2. 'n' → logprob: -3.327104330062866
    3. 'c' → logprob: -3.702104330062866
    4. '#' → logprob: -4.077104568481445
    5. ')' → logprob: -4.077104568481445
    6. '
' → logprob: -4.827104568481445
    7. ' n' → logprob: -4.827104568481445
    8. '(
' → logprob: -5.077104568481445
    9. ' (' → logprob: -5.077104568481445
    10. ' ' → logprob: -5.202104568481445

Token 2522: ' problème' (ID: 35630)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5541210770606995
    2. 'def' → logprob: -2.1791210174560547
    3. 'j' → logprob: -2.5541210174560547
    4. '   ' → logprob: -3.5541210174560547
    5. '(n' → logprob: -3.6791210174560547
    6. '"' → logprob: -3.8041210174560547
    7. '```' → logprob: -4.179121017456055
    8. '_' → logprob: -4.304121017456055
    9. ')' → logprob: -4.304121017456055
    10. '(
' → logprob: -4.429121017456055

Token 2523: ' demande' (ID: 26737)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1287345886230469
    2. '   ' → logprob: -1.3787345886230469
    3. ' =' → logprob: -2.253734588623047
    4. 'def' → logprob: -2.378734588623047
    5. ':' → logprob: -2.878734588623047
    6. '_' → logprob: -3.378734588623047
    7. '(n' → logprob: -3.503734588623047
    8. 'n' → logprob: -4.128734588623047
    9. '```' → logprob: -4.378734588623047
    10. 's' → logprob: -4.503734588623047

Token 2524: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0738664865493774
    2. 'def' → logprob: -1.1988664865493774
    3. ':' → logprob: -2.198866367340088
    4. '(n' → logprob: -2.448866367340088
    5. 'n' → logprob: -2.698866367340088
    6. '```' → logprob: -3.573866367340088
    7. '"' → logprob: -4.323866367340088
    8. ')' → logprob: -4.448866367340088
    9. '":' → logprob: -5.323866367340088
    10. ''\' → logprob: -5.448866367340088

Token 2525: ' maximum' (ID: 10562)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5852472186088562
    2. 'def' → logprob: -1.585247278213501
    3. '   ' → logprob: -2.210247278213501
    4. ')' → logprob: -3.460247278213501
    5. '(n' → logprob: -3.710247278213501
    6. ']' → logprob: -4.585247039794922
    7. '"' → logprob: -4.835247039794922
    8. 'j' → logprob: -5.210247039794922
    9. '#' → logprob: -5.335247039794922
    10. '[n' → logprob: -5.710247039794922

Token 2526: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4695483148097992
    2. 'def' → logprob: -1.0945483446121216
    3. ':' → logprob: -4.094548225402832
    4. '_' → logprob: -4.594548225402832
    5. '```' → logprob: -5.594548225402832
    6. ' def' → logprob: -6.344548225402832
    7. '):' → logprob: -7.219548225402832
    8. '#' → logprob: -7.594548225402832
    9. '(n' → logprob: -7.594548225402832
    10. '_j' → logprob: -7.719548225402832

Token 2527: ' toutes' (ID: 17502)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.369459867477417
    2. '   ' → logprob: -1.369459867477417
    3. ')' → logprob: -1.994459867477417
    4. '(n' → logprob: -2.244459867477417
    5. '```' → logprob: -2.619459867477417
    6. ']' → logprob: -4.244460105895996
    7. 'c' → logprob: -4.244460105895996
    8. ':' → logprob: -4.244460105895996
    9. 'j' → logprob: -4.244460105895996
    10. 'len' → logprob: -4.369460105895996

Token 2528: ' partitions' (ID: 89097)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15884310007095337
    2. 'def' → logprob: -3.1588430404663086
    3. '```' → logprob: -4.033843040466309
    4. '_j' → logprob: -4.158843040466309
    5. '_' → logprob: -4.158843040466309
    6. ':' → logprob: -4.783843040466309
    7. '#' → logprob: -5.033843040466309
    8. '(
' → logprob: -5.158843040466309
    9. '()' → logprob: -5.533843040466309
    10. 'des' → logprob: -5.533843040466309

Token 2529: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06793069839477539
    2. 'def' → logprob: -4.192930698394775
    3. '(n' → logprob: -4.442930698394775
    4. '_' → logprob: -4.442930698394775
    5. ':' → logprob: -5.067930698394775
    6. '```' → logprob: -5.192930698394775
    7. 'de' → logprob: -6.692930698394775
    8. '(
' → logprob: -6.817930698394775
    9. '_possible' → logprob: -6.817930698394775
    10. ' of' → logprob: -6.942930698394775

Token 2530: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01927395910024643
    2. ':' → logprob: -4.51927375793457
    3. '```' → logprob: -6.26927375793457
    4. 'def' → logprob: -6.76927375793457
    5. '(n' → logprob: -6.89427375793457
    6. '"' → logprob: -7.51927375793457
    7. '(' → logprob: -7.89427375793457
    8. ':
' → logprob: -7.89427375793457
    9. 'n' → logprob: -8.01927375793457
    10. '
' → logprob: -8.14427375793457

Token 2531: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005415892228484154
    2. '"' → logprob: -7.005415916442871
    3. '
' → logprob: -7.005415916442871
    4. ')' → logprob: -7.255415916442871
    5. ':' → logprob: -7.505415916442871
    6. 'n' → logprob: -7.755415916442871
    7. '    
' → logprob: -7.880415916442871
    8. '#' (adapté à ' #') → logprob: -8.130415916442871
    9. ')
' → logprob: -8.255415916442871
    10. '       ' → logprob: -8.755415916442871

Token 2532: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0894261971116066
    2. ':' → logprob: -3.714426279067993
    3. 'n' → logprob: -4.214426040649414
    4. '#' → logprob: -4.714426040649414
    5. ')' → logprob: -4.964426040649414
    6. 'def' → logprob: -5.464426040649414
    7. '(
' → logprob: -5.589426040649414
    8. ':
' → logprob: -5.589426040649414
    9. '(n' → logprob: -5.839426040649414
    10. '
' → logprob: -6.089426040649414

Token 2533: ' peut' (ID: 9216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09570477157831192
    2. 'def' → logprob: -3.2207047939300537
    3. '
' → logprob: -3.8457047939300537
    4. ':' → logprob: -4.845704555511475
    5. '\n' → logprob: -5.720704555511475
    6. 'n' → logprob: -5.845704555511475
    7. '#' → logprob: -5.970704555511475
    8. ':
' → logprob: -6.095704555511475
    9. '(n' → logprob: -6.095704555511475
    10. '#
' → logprob: -6.470704555511475

Token 2534: ' penser' (ID: 70315)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006299177184700966
    2. '
' → logprob: -6.256299018859863
    3. 'def' → logprob: -6.881299018859863
    4. ' continuer' → logprob: -7.506299018859863
    5. 'continue' → logprob: -8.006299018859863
    6. '\' → logprob: -8.006299018859863
    7. ' continue' → logprob: -8.131299018859863
    8. '#' → logprob: -8.506299018859863
    9. 'return' → logprob: -8.756299018859863
    10. '\t' → logprob: -9.006299018859863

Token 2535: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027175894007086754
    2. '```' → logprob: -4.0271759033203125
    3. '    ' → logprob: -6.7771759033203125
    4. ' de' → logprob: -6.7771759033203125
    5. 'def' → logprob: -6.7771759033203125
    6. ':' → logprob: -7.0271759033203125
    7. '_' → logprob: -7.4021759033203125
    8. ' à' → logprob: -7.5271759033203125
    9. 'à' → logprob: -7.6521759033203125
    10. ' ' → logprob: -7.7771759033203125

Token 2536: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05445451661944389
    2. 'def' → logprob: -3.8044545650482178
    3. 'n' → logprob: -5.179454326629639
    4. '"' → logprob: -5.304454326629639
    5. 'max' → logprob: -5.554454326629639
    6. 'range' → logprob: -6.179454326629639
    7. 'dp' → logprob: -6.679454326629639
    8. ''\' → logprob: -6.804454326629639
    9. '\' → logprob: -7.179454326629639
    10. '[
' → logprob: -7.179454326629639

Token 2537: ' solution' (ID: 7578)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5664536356925964
    2. 'def' → logprob: -1.0664536952972412
    3. 'for' → logprob: -3.941453695297241
    4. 'n' → logprob: -4.066453456878662
    5. 'max' → logprob: -4.566453456878662
    6. 'binary' → logprob: -4.691453456878662
    7. 'dynamic' → logprob: -5.066453456878662
    8. 'd' → logprob: -5.441453456878662
    9. 'b' → logprob: -5.566453456878662
    10. 'DP' → logprob: -5.816453456878662

Token 2538: ' DP' (ID: 51992)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07398306578397751
    2. 'def' → logprob: -3.3239829540252686
    3. ':' → logprob: -4.698983192443848
    4. '(n' → logprob: -4.823983192443848
    5. '```' → logprob: -5.323983192443848
    6. '_' → logprob: -6.073983192443848
    7. '(
' → logprob: -6.698983192443848
    8. '_n' → logprob: -6.698983192443848
    9. ' =' → logprob: -6.948983192443848
    10. '
' → logprob: -7.323983192443848

Token 2539: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020909816026687622
    2. ':' → logprob: -4.020909786224365
    3. 'def' → logprob: -7.645909786224365
    4. '
' → logprob: -7.645909786224365
    5. '(n' → logprob: -8.145910263061523
    6. '    
' → logprob: -8.270910263061523
    7. ':
' → logprob: -8.395910263061523
    8. '```' → logprob: -8.770910263061523
    9. ',' → logprob: -9.020910263061523
    10. '\' → logprob: -9.395910263061523

Token 2540: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015442610019817948
    2. ':' → logprob: -7.25154447555542
    3. '    
' → logprob: -8.376543998718262
    4. 'def' → logprob: -9.001543998718262
    5. '```' → logprob: -9.126543998718262
    6. 'n' → logprob: -9.376543998718262
    7. '\' → logprob: -9.876543998718262
    8. '(n' → logprob: -10.001543998718262
    9. 'import' → logprob: -10.501543998718262
    10. '
' → logprob: -10.626543998718262

Token 2541: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011619601398706436
    2. 'n' → logprob: -4.886619567871094
    3. '(n' → logprob: -6.636619567871094
    4. ':' → logprob: -7.136619567871094
    5. '\' → logprob: -7.761619567871094
    6. '```' → logprob: -7.761619567871094
    7. '\n' → logprob: -9.011619567871094
    8. '\t' → logprob: -9.011619567871094
    9. '(' → logprob: -9.261619567871094
    10. '[n' → logprob: -9.386619567871094

Token 2542: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002353168558329344
    2. 'n' → logprob: -7.252353191375732
    3. '```' → logprob: -8.002352714538574
    4. '    
' → logprob: -8.252352714538574
    5. 'def' → logprob: -8.252352714538574
    6. ':' → logprob: -8.502352714538574
    7. '\' → logprob: -9.377352714538574
    8. '(n' → logprob: -9.377352714538574
    9. 'import' → logprob: -9.627352714538574
    10. '`' → logprob: -10.127352714538574

Token 2543: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07276546210050583
    2. 'n' → logprob: -2.697765350341797
    3. 'j' → logprob: -6.947765350341797
    4. 'def' → logprob: -7.197765350341797
    5. '```' → logprob: -8.197765350341797
    6. 'p' → logprob: -8.322765350341797
    7. '    
' → logprob: -8.572765350341797
    8. '
' → logprob: -10.197765350341797
    9. 'import' → logprob: -10.197765350341797
    10. '(n' → logprob: -10.322765350341797

Token 2544: ' Solution' (ID: 20858)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0717988982796669
    2. 'n' → logprob: -2.821798801422119
    3. '```' → logprob: -5.696798801422119
    4. '    
' → logprob: -6.571798801422119
    5. 'def' → logprob: -6.696798801422119
    6. '(n' → logprob: -6.821798801422119
    7. 'j' → logprob: -7.321798801422119
    8. '\' → logprob: -7.821798801422119
    9. '	n' → logprob: -8.321799278259277
    10. ':' → logprob: -8.821799278259277

Token 2545: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11913353949785233
    2. ' =' → logprob: -3.619133472442627
    3. 'def' → logprob: -3.744133472442627
    4. '=' → logprob: -3.869133472442627
    5. '(n' → logprob: -4.494133472442627
    6. 'n' → logprob: -4.869133472442627
    7. 'import' → logprob: -4.994133472442627
    8. ':' → logprob: -5.244133472442627
    9. '(
' → logprob: -6.369133472442627
    10. 'from' → logprob: -6.869133472442627

Token 2546: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008834966458380222
    2. ':' → logprob: -5.3838348388671875
    3. '(n' → logprob: -6.8838348388671875
    4. 'def' → logprob: -7.3838348388671875
    5. 'n' → logprob: -7.5088348388671875
    6. 'import' → logprob: -7.7588348388671875
    7. '    
' → logprob: -8.133834838867188
    8. ' =' → logprob: -8.508834838867188
    9. '
' → logprob: -8.758834838867188
    10. '```' → logprob: -8.758834838867188

Token 2547: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026815256103873253
    2. 'n' → logprob: -3.651815176010132
    3. '    
' → logprob: -8.901815414428711
    4. 'def' → logprob: -9.151815414428711
    5. ' n' → logprob: -9.901815414428711
    6. '	n' → logprob: -10.151815414428711
    7. '```' → logprob: -10.526815414428711
    8. 'import' → logprob: -10.651815414428711
    9. '
' → logprob: -10.651815414428711
    10. '#' → logprob: -10.651815414428711

Token 2548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005328982952050865
    2. 'n' → logprob: -8.125533103942871
    3. 'def' → logprob: -9.250533103942871
    4. '
' → logprob: -10.500533103942871
    5. '#' → logprob: -10.500533103942871
    6. 'from' → logprob: -10.625533103942871
    7. '```' → logprob: -11.125533103942871
    8. '    
' → logprob: -11.250533103942871
    9. '(n' → logprob: -11.625533103942871
    10. '       ' → logprob: -12.250533103942871

Token 2549: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003355228342115879
    2. 'n' → logprob: -6.003355026245117
    3. '
' → logprob: -7.878355026245117
    4. '#' (adapté à ' #') → logprob: -8.503355026245117
    5. 'def' → logprob: -9.128355026245117
    6. '    
' → logprob: -9.628355026245117
    7. 'from' → logprob: -10.753355026245117
    8. ' n' → logprob: -11.128355026245117
    9. '(n' → logprob: -11.128355026245117
    10. 'dp' → logprob: -11.128355026245117

Token 2550: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054477427154779434
    2. 'n' → logprob: -3.1794774532318115
    3. 'dp' → logprob: -5.429477214813232
    4. ' n' → logprob: -6.054477214813232
    5. '```' → logprob: -6.804477214813232
    6. '\' → logprob: -7.054477214813232
    7. '
' → logprob: -7.429477214813232
    8. '(n' → logprob: -7.429477214813232
    9. 'def' → logprob: -8.17947769165039
    10. 'from' → logprob: -8.42947769165039

Token 2551: ' Calcul' (ID: 57243)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3837054371833801
    2. '   ' → logprob: -1.3837053775787354
    3. 'dp' → logprob: -3.0087053775787354
    4. 'from' → logprob: -4.6337056159973145
    5. 'def' → logprob: -5.2587056159973145
    6. '#' → logprob: -6.7587056159973145
    7. 'import' → logprob: -6.8837056159973145
    8. '
' → logprob: -7.7587056159973145
    9. 'for' → logprob: -8.383705139160156
    10. ' n' → logprob: -8.633705139160156

Token 2552: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6851779818534851
    2. '   ' → logprob: -1.1851780414581299
    3. '_' → logprob: -2.81017804145813
    4. 'ate' → logprob: -3.43517804145813
    5. '
' → logprob: -3.93517804145813
    6. ':' → logprob: -4.310177803039551
    7. 'def' → logprob: -4.935177803039551
    8. 'ation' → logprob: -4.935177803039551
    9. ' ' → logprob: -5.310177803039551
    10. 'atrice' → logprob: -5.435177803039551

Token 2553: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19012680649757385
    2. 'n' → logprob: -2.065126895904541
    3. 'def' → logprob: -3.940126895904541
    4. '_' → logprob: -4.940126895904541
    5. '```' → logprob: -4.940126895904541
    6. '`' → logprob: -6.440126895904541
    7. ' n' → logprob: -6.565126895904541
    8. '(n' → logprob: -6.690126895904541
    9. '\' → logprob: -7.065126895904541
    10. 'import' → logprob: -7.190126895904541

Token 2554: ' salaire' (ID: 135427)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23314033448696136
    2. 'dp' → logprob: -2.358140230178833
    3. 'def' → logprob: -3.233140230178833
    4. 'max' → logprob: -3.358140230178833
    5. '   ' → logprob: -4.608140468597412
    6. 'prefix' → logprob: -5.108140468597412
    7. 's' → logprob: -5.483140468597412
    8. 'j' → logprob: -5.733140468597412
    9. 'total' → logprob: -5.858140468597412
    10. 'sum' → logprob: -6.483140468597412

Token 2555: ' quand' (ID: 18026)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6043820977210999
    2. '=' → logprob: -1.104382038116455
    3. '   ' → logprob: -2.604382038116455
    4. '_' → logprob: -4.854382038116455
    5. 'for' → logprob: -4.854382038116455
    6. 's' → logprob: -5.354382038116455
    7. '```' → logprob: -5.354382038116455
    8. ' ' → logprob: -6.229382038116455
    9. 'def' → logprob: -6.229382038116455
    10. ':' → logprob: -6.229382038116455

Token 2556: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8965297341346741
    2. ' on' → logprob: -1.6465296745300293
    3. 'c' → logprob: -2.0215296745300293
    4. 'n' → logprob: -2.7715296745300293
    5. ' c' → logprob: -2.7715296745300293
    6. ' n' → logprob: -3.2715296745300293
    7. 'on' → logprob: -3.2715296745300293
    8. 'i' → logprob: -4.646529674530029
    9. 'len' → logprob: -4.771529674530029
    10. '```' → logprob: -4.771529674530029

Token 2557: ' ne' (ID: 453)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.170874685049057
    2. 'part' → logprob: -3.42087459564209
    3. 'cou' → logprob: -3.92087459564209
    4. 'd' → logprob: -4.17087459564209
    5. 'partition' → logprob: -4.17087459564209
    6. 'n' → logprob: -4.17087459564209
    7. 'c' → logprob: -4.42087459564209
    8. 'fait' → logprob: -4.92087459564209
    9. '#' → logprob: -5.04587459564209
    10. 'util' → logprob: -5.54587459564209

Token 2558: ' fait' (ID: 7473)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.414272665977478
    2. '   ' → logprob: -1.414272665977478
    3. ' def' → logprob: -4.039272785186768
    4. 'pas' → logprob: -4.539272785186768
    5. ' =' → logprob: -5.289272785186768
    6. '
' → logprob: -5.289272785186768
    7. '_' → logprob: -5.539272785186768
    8. 'c' → logprob: -5.664272785186768
    9. '=' → logprob: -5.664272785186768
    10. ' pas' → logprob: -5.789272785186768

Token 2559: ' aucune' (ID: 51173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.12894383072853088
    2. '   ' → logprob: -2.503943920135498
    3. 'auc' → logprob: -4.378943920135498
    4. '```' → logprob: -4.503943920135498
    5. 'r' → logprob: -5.628943920135498
    6. ' pas' → logprob: -6.128943920135498
    7. 'une' → logprob: -6.253943920135498
    8. 's' → logprob: -6.503943920135498
    9. '
' → logprob: -6.753943920135498
    10. 'plus' → logprob: -7.128943920135498

Token 2560: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.874763548374176
    2. 'cou' → logprob: -1.9997634887695312
    3. 'partition' → logprob: -2.4997634887695312
    4. 'cut' → logprob: -2.7497634887695312
    5. 'd' → logprob: -2.8747634887695312
    6. '#' → logprob: -3.1247634887695312
    7. '   ' → logprob: -3.2497634887695312
    8. '\n' → logprob: -3.3747634887695312
    9. '\' → logprob: -3.7497634887695312
    10. '_' → logprob: -4.124763488769531

Token 2561: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -1.5675615072250366
    2. 'er' → logprob: -2.192561626434326
    3. '_' → logprob: -2.317561626434326
    4. 's' → logprob: -2.317561626434326
    5. 'cut' → logprob: -2.317561626434326
    6. '   ' → logprob: -2.442561626434326
    7. '=' → logprob: -3.067561626434326
    8. '_cut' → logprob: -3.317561626434326
    9. 'cuts' → logprob: -3.442561626434326
    10. '-' → logprob: -3.567561626434326

Token 2562: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03836115449666977
    2. ':' → logprob: -3.538361072540283
    3. ' =' → logprob: -5.538361072540283
    4. ':
' → logprob: -7.288361072540283
    5. '=' → logprob: -7.413361072540283
    6. ',' → logprob: -7.663361072540283
    7. ' :' → logprob: -7.788361072540283
    8. '```' → logprob: -7.788361072540283
    9. '       ' → logprob: -7.913361072540283
    10. '(' → logprob: -8.163361549377441

Token 2563: 'k' (ID: 74)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07042063027620316
    2. '(n' → logprob: -3.445420742034912
    3. ' =' → logprob: -5.070420742034912
    4. 'n' → logprob: -5.320420742034912
    5. ')' → logprob: -5.570420742034912
    6. ':' → logprob: -5.945420742034912
    7. ' (' → logprob: -6.070420742034912
    8. ' n' → logprob: -6.195420742034912
    9. '=' → logprob: -6.320420742034912
    10. '       ' → logprob: -6.695420742034912

Token 2564: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39248502254486084
    2. ' =' → logprob: -1.2674850225448608
    3. '+' → logprob: -4.64248514175415
    4. ')' → logprob: -4.89248514175415
    5. '   ' → logprob: -4.89248514175415
    6. '_' → logprob: -4.89248514175415
    7. '#' → logprob: -6.64248514175415
    8. ' +' → logprob: -7.01748514175415
    9. 'n' → logprob: -7.14248514175415
    10. ' (' → logprob: -7.14248514175415

Token 2565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12881441414356232
    2. '=' → logprob: -2.253814458847046
    3. ' =' → logprob: -5.378814220428467
    4. 'n' → logprob: -5.503814220428467
    5. '0' → logprob: -5.503814220428467
    6. ' ' → logprob: -6.128814220428467
    7. '   ' → logprob: -8.128814697265625
    8. ' n' → logprob: -8.378814697265625
    9. '=n' → logprob: -8.378814697265625
    10. '```' → logprob: -10.253814697265625

Token 2566: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40389320254325867
    2. ':' → logprob: -2.028893232345581
    3. ')' → logprob: -3.028893232345581
    4. '
' → logprob: -3.403893232345581
    5. ' =' → logprob: -3.403893232345581
    6. ',' → logprob: -4.028892993927002
    7. ')
' → logprob: -4.278892993927002
    8. 'def' → logprob: -4.278892993927002
    9. ' (' → logprob: -4.903892993927002
    10. '):' → logprob: -5.028892993927002

Token 2567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030707605183124542
    2. ':' → logprob: -6.503070831298828
    3. '
' → logprob: -7.503070831298828
    4. '    
' → logprob: -8.253070831298828
    5. ',' → logprob: -9.003070831298828
    6. ')' → logprob: -9.253070831298828
    7. ' =' → logprob: -9.503070831298828
    8. 'def' → logprob: -9.628070831298828
    9. '(n' → logprob: -9.753070831298828
    10. ')
' → logprob: -9.878070831298828

Token 2568: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006058142753317952
    2. '    
' → logprob: -8.625605583190918
    3. ':' → logprob: -8.875605583190918
    4. '
' → logprob: -10.125605583190918
    5. '```' → logprob: -10.125605583190918
    6. ',' → logprob: -10.125605583190918
    7. 'def' → logprob: -10.250605583190918
    8. '#' (adapté à ' #') → logprob: -10.500605583190918
    9. ')' → logprob: -11.000605583190918
    10. 'n' → logprob: -11.375605583190918

Token 2569: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004202932585030794
    2. ':' → logprob: -6.504202842712402
    3. '
' → logprob: -7.004202842712402
    4. '    
' → logprob: -7.129202842712402
    5. '```' → logprob: -8.004202842712402
    6. 'n' → logprob: -9.129202842712402
    7. ',' → logprob: -9.754202842712402
    8. ':
' → logprob: -9.754202842712402
    9. ',
' → logprob: -10.004202842712402
    10. '#' → logprob: -10.129202842712402

Token 2570: ' Calcul' (ID: 57243)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21014539897441864
    2. 'max' → logprob: -2.0851454734802246
    3. '
' → logprob: -3.9601454734802246
    4. '#' → logprob: -4.210145473480225
    5. 'n' → logprob: -4.710145473480225
    6. 'dp' → logprob: -4.710145473480225
    7. 'for' → logprob: -4.960145473480225
    8. ' max' → logprob: -6.335145473480225
    9. ' for' → logprob: -7.210145473480225
    10. ' n' → logprob: -7.210145473480225

Token 2571: 'er' (ID: 259)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4287247061729431
    2. 'er' → logprob: -1.678724765777588
    3. '=' → logprob: -3.053724765777588
    4. ' =' → logprob: -3.053724765777588
    5. 'def' → logprob: -4.178724765777588
    6. '#' → logprob: -4.428724765777588
    7. 'ation' → logprob: -4.428724765777588
    8. '       ' → logprob: -5.303724765777588
    9. 'ate' → logprob: -5.803724765777588
    10. 'aire' → logprob: -6.178724765777588

Token 2572: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06267578154802322
    2. 'max' → logprob: -3.687675714492798
    3. ' la' → logprob: -4.937675952911377
    4. '```' → logprob: -5.062675952911377
    5. 'c' → logprob: -5.312675952911377
    6. 'le' → logprob: -5.562675952911377
    7. 'la' → logprob: -5.937675952911377
    8. '#' → logprob: -6.312675952911377
    9. '       ' → logprob: -7.062675952911377
    10. 'k' → logprob: -7.312675952911377

Token 2573: ' chaque' (ID: 21194)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3505444824695587
    2. 'k' → logprob: -1.6005444526672363
    3. ' c' → logprob: -2.9755444526672363
    4. ' k' → logprob: -3.7255444526672363
    5. '   ' → logprob: -5.350544452667236
    6. 'i' → logprob: -5.475544452667236
    7. '_c' → logprob: -5.475544452667236
    8. 'cut' → logprob: -6.850544452667236
    9. ' _' → logprob: -6.850544452667236
    10. '_' → logprob: -6.975544452667236

Token 2574: ' possible' (ID: 4149)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8617485761642456
    2. 'i' → logprob: -1.3617485761642456
    3. 'k' → logprob: -1.7367485761642456
    4. '   ' → logprob: -2.611748695373535
    5. 'cut' → logprob: -4.111748695373535
    6. '_' → logprob: -4.611748695373535
    7. '_c' → logprob: -4.611748695373535
    8. 'segment' → logprob: -4.986748695373535
    9. 'nombre' → logprob: -5.236748695373535
    10. 'position' → logprob: -5.736748695373535

Token 2575: ' déc' (ID: 8498)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8045749664306641
    2. '   ' → logprob: -1.054574966430664
    3. 'k' → logprob: -2.804574966430664
    4. 'cut' → logprob: -3.179574966430664
    5. '_' → logprob: -4.179574966430664
    6. '_c' → logprob: -4.179574966430664
    7. 'i' → logprob: -4.304574966430664
    8. 'segment' → logprob: -5.054574966430664
    9. '`' → logprob: -5.304574966430664
    10. ' ' → logprob: -5.429574966430664

Token 2576: 'oup' (ID: 9999)
  Prédit: 'oupe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oupe' → logprob: -0.07330166548490524
    2. 'oup' → logprob: -2.9483015537261963
    3. 'ou' → logprob: -4.323301792144775
    4. 'u' → logprob: -6.323301792144775
    5. 'ut' → logprob: -7.448301792144775
    6. 'o' → logprob: -7.948301792144775
    7. 'oupes' → logprob: -7.948301792144775
    8. 'ol' → logprob: -8.073301315307617
    9. 'ision' → logprob: -8.073301315307617
    10. '#' → logprob: -8.698301315307617

Token 2577: 'ages' (ID: 1461)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.040052250027656555
    2. 'age' → logprob: -3.5400521755218506
    3. 'oupe' → logprob: -5.91505241394043
    4. 'oup' → logprob: -6.29005241394043
    5. 'up' → logprob: -6.91505241394043
    6. 'o' → logprob: -7.29005241394043
    7. '```' → logprob: -7.41505241394043
    8. 'p' → logprob: -7.91505241394043
    9. 'ope' → logprob: -7.91505241394043
    10. 'page' → logprob: -7.91505241394043

Token 2578: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09573965519666672
    2. ' =' → logprob: -3.9707396030426025
    3. ':' → logprob: -4.095739841461182
    4. 'def' → logprob: -4.595739841461182
    5. '=' → logprob: -5.470739841461182
    6. '```' → logprob: -5.720739841461182
    7. 'n' → logprob: -5.845739841461182
    8. 's' → logprob: -5.845739841461182
    9. ' des' → logprob: -6.095739841461182
    10. ' en' → logprob: -6.220739841461182

Token 2579: ' prendre' (ID: 24257)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9964966773986816
    2. 'c' → logprob: -2.3714966773986816
    3. '   ' → logprob: -2.3714966773986816
    4. ' #' → logprob: -2.3714966773986816
    5. 'k' → logprob: -2.9964966773986816
    6. 'for' → logprob: -3.6214966773986816
    7. 'segments' → logprob: -3.6214966773986816
    8. 'return' → logprob: -3.7464966773986816
    9. 'j' → logprob: -3.8714966773986816
    10. ' for' → logprob: -3.9964966773986816

Token 2580: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9551621079444885
    2. 'k' → logprob: -1.7051620483398438
    3. 'c' → logprob: -1.8301620483398438
    4. 'max' → logprob: -2.3301620483398438
    5. 'range' → logprob: -3.2051620483398438
    6. 'i' → logprob: -3.5801620483398438
    7. '```' → logprob: -4.205162048339844
    8. '1' → logprob: -5.080162048339844
    9. ':' → logprob: -5.080162048339844
    10. '#' → logprob: -5.205162048339844

Token 2581: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5884912014007568
    2. 'maximum' → logprob: -0.8384912014007568
    3. ' maximum' → logprob: -5.088491439819336
    4. 'me' → logprob: -6.088491439819336
    5. '_max' → logprob: -6.088491439819336
    6. ' max' → logprob: -6.838491439819336
    7. '
' → logprob: -8.838491439819336
    8. 'm' → logprob: -9.213491439819336
    9. ' maximale' → logprob: -9.338491439819336
    10. '```' → logprob: -9.963491439819336

Token 2582: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08581278473138809
    2. 'def' → logprob: -3.71081280708313
    3. 'n' → logprob: -4.085812568664551
    4. ':' → logprob: -4.585812568664551
    5. 'j' → logprob: -5.085812568664551
    6. '(
' → logprob: -5.710812568664551
    7. ':
' → logprob: -5.960812568664551
    8. '\' → logprob: -6.210812568664551
    9. 'p' → logprob: -6.210812568664551
    10. '```' → logprob: -6.210812568664551

Token 2583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19270846247673035
    2. 'n' → logprob: -1.9427084922790527
    3. 'def' → logprob: -3.5677084922790527
    4. '```' → logprob: -6.692708492279053
    5. '(n' → logprob: -7.567708492279053
    6. 'import' → logprob: -7.942708492279053
    7. ' n' → logprob: -8.317708015441895
    8. '()' → logprob: -8.442708015441895
    9. '    
' → logprob: -8.817708015441895
    10. '`' → logprob: -8.817708015441895

Token 2584: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025124046951532364
    2. 'n' → logprob: -6.252512454986572
    3. '    
' → logprob: -8.377511978149414
    4. '(n' → logprob: -9.627511978149414
    5. 'def' → logprob: -9.877511978149414
    6. '```' → logprob: -9.877511978149414
    7. 'j' → logprob: -10.377511978149414
    8. ':' → logprob: -10.502511978149414
    9. ')' → logprob: -11.127511978149414
    10. 'p' → logprob: -11.252511978149414

Token 2585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010353730991482735
    2. 'n' → logprob: -4.6353535652160645
    3. 'def' → logprob: -8.885354042053223
    4. 'import' → logprob: -9.260354042053223
    5. '(n' → logprob: -9.385354042053223
    6. '    
' → logprob: -9.635354042053223
    7. '```' → logprob: -9.760354042053223
    8. 'j' → logprob: -10.260354042053223
    9. ' n' → logprob: -11.010354042053223
    10. 'p' → logprob: -11.135354042053223

Token 2586: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00784001313149929
    2. 'n' → logprob: -4.882840156555176
    3. '    
' → logprob: -10.132840156555176
    4. '(n' → logprob: -10.257840156555176
    5. 'def' → logprob: -10.507840156555176
    6. 'j' → logprob: -10.632840156555176
    7. 'import' → logprob: -10.757840156555176
    8. '	n' → logprob: -11.007840156555176
    9. ' n' → logprob: -11.382840156555176
    10. '```' → logprob: -11.507840156555176

Token 2587: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007947645150125027
    2. 'n' → logprob: -5.0079474449157715
    3. 'def' → logprob: -7.3829474449157715
    4. 'j' → logprob: -8.38294792175293
    5. '    
' → logprob: -9.13294792175293
    6. '```' → logprob: -9.38294792175293
    7. 'p' → logprob: -9.75794792175293
    8. '(n' → logprob: -10.13294792175293
    9. 'import' → logprob: -11.38294792175293
    10. '\' → logprob: -11.75794792175293

Token 2588: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015649287030100822
    2. 'n' → logprob: -4.640649318695068
    3. ' n' → logprob: -6.890649318695068
    4. '(n' → logprob: -6.890649318695068
    5. '       ' → logprob: -7.140649318695068
    6. 'def' → logprob: -7.640649318695068
    7. '    
' → logprob: -8.14064884185791
    8. ':' → logprob: -8.14064884185791
    9. 'j' → logprob: -8.26564884185791
    10. '#' → logprob: -8.39064884185791

Token 2589: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6227068901062012
    2. ' n' → logprob: -1.1227068901062012
    3. '   ' → logprob: -2.122706890106201
    4. 'def' → logprob: -5.622706890106201
    5. 'import' → logprob: -5.622706890106201
    6. ' la' → logprob: -5.622706890106201
    7. 'la' → logprob: -6.247706890106201
    8. '#' → logprob: -6.372706890106201
    9. '```' → logprob: -7.247706890106201
    10. 'l' → logprob: -7.622706890106201

Token 2590: ' jusqu' (ID: 21961)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8238533735275269
    2. '   ' → logprob: -1.8238533735275269
    3. ' =' → logprob: -1.8238533735275269
    4. '+' → logprob: -2.4488534927368164
    5. '=' → logprob: -2.4488534927368164
    6. ' -' → logprob: -3.6988534927368164
    7. '#' → logprob: -4.323853492736816
    8. ')' → logprob: -5.198853492736816
    9. '```' → logprob: -5.448853492736816
    10. ' +' → logprob: -5.823853492736816

Token 2591: ''à' (ID: 33688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09214044362306595
    2. '   ' → logprob: -2.7171404361724854
    3. '```' → logprob: -5.7171406745910645
    4. ' =' → logprob: -6.0921406745910645
    5. ''' → logprob: -6.0921406745910645
    6. '#' → logprob: -6.2171406745910645
    7. '-' → logprob: -6.3421406745910645
    8. 'def' → logprob: -6.3421406745910645
    9. '_' → logprob: -6.7171406745910645
    10. '**' → logprob: -6.9671406745910645

Token 2592: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6415250897407532
    2. '10' → logprob: -1.6415250301361084
    3. '65' → logprob: -2.0165250301361084
    4. '650' → logprob: -2.5165250301361084
    5. 'int' → logprob: -3.8915250301361084
    6. '   ' → logprob: -3.8915250301361084
    7. '655' → logprob: -5.3915252685546875
    8. 'def' → logprob: -5.3915252685546875
    9. ')' → logprob: -6.0165252685546875
    10. '```' → logprob: -6.3915252685546875

Token 2593: '650' (ID: 20864)
  Prédit: '650'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '650' → logprob: -0.31030890345573425
    2. '65' → logprob: -1.4353089332580566
    3. '655' → logprob: -4.435308933258057
    4. 'n' → logprob: -4.810308933258057
    5. '10' → logprob: -5.685308933258057
    6. '   ' → logprob: -6.685308933258057
    7. '600' → logprob: -6.935308933258057
    8. '6' → logprob: -7.310308933258057
    9. ')' → logprob: -7.810308933258057
    10. ' ' → logprob: -8.185308456420898

Token 2594: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.50347501039505
    2. '   ' → logprob: -1.3784749507904053
    3. '00' → logprob: -2.7534749507904053
    4. ')' → logprob: -3.8784749507904053
    5. '000' → logprob: -4.628475189208984
    6. 'def' → logprob: -4.878475189208984
    7. 'n' → logprob: -5.253475189208984
    8. ',' → logprob: -5.253475189208984
    9. '**' → logprob: -5.628475189208984
    10. '1' → logprob: -6.003475189208984

Token 2595: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7177237272262573
    2. ':' → logprob: -1.3427237272262573
    3. 'def' → logprob: -1.7177237272262573
    4. ',' → logprob: -3.717723846435547
    5. 'n' → logprob: -3.967723846435547
    6. '):' → logprob: -4.967723846435547
    7. ':
' → logprob: -5.467723846435547
    8. ')' → logprob: -5.967723846435547
    9. '```' → logprob: -6.092723846435547
    10. '(n' → logprob: -6.592723846435547

Token 2596: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01292608492076397
    2. '#' → logprob: -5.38792610168457
    3. 'n' → logprob: -6.01292610168457
    4. 'def' → logprob: -6.01292610168457
    5. 'dp' → logprob: -6.38792610168457
    6. '
' → logprob: -8.01292610168457
    7. '```' → logprob: -8.38792610168457
    8. '\' → logprob: -8.88792610168457
    9. '    
' → logprob: -8.88792610168457
    10. 'j' → logprob: -9.01292610168457

Token 2597: ' solution' (ID: 7578)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5094497203826904
    2. 'n' → logprob: -1.6344497203826904
    3. '
' → logprob: -3.2594497203826904
    4. '\' → logprob: -3.2594497203826904
    5. '[n' → logprob: -3.8844497203826904
    6. '#' → logprob: -4.3844499588012695
    7. '=' → logprob: -4.5094499588012695
    8. ' =' → logprob: -4.7594499588012695
    9. '   ' → logprob: -4.7594499588012695
    10. '\n' → logprob: -4.8844499588012695

Token 2598: ' O' (ID: 532)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.823085367679596
    2. '   ' → logprob: -1.4480853080749512
    3. ' =' → logprob: -1.8230853080749512
    4. 'def' → logprob: -2.948085308074951
    5. '```' → logprob: -3.698085308074951
    6. 'import' → logprob: -4.323085308074951
    7. '#' → logprob: -4.323085308074951
    8. ':' → logprob: -4.573085308074951
    9. '(n' → logprob: -4.573085308074951
    10. '_' → logprob: -4.823085308074951

Token 2599: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0552113875746727
    2. '(' → logprob: -3.430211305618286
    3. '=' → logprob: -5.055211544036865
    4. '\' → logprob: -5.430211544036865
    5. '(N' → logprob: -5.555211544036865
    6. ' =' → logprob: -6.680211544036865
    7. 'n' → logprob: -7.055211544036865
    8. '*' → logprob: -7.430211544036865
    9. 'def' → logprob: -7.430211544036865
    10. ' (' → logprob: -7.805211544036865

Token 2600: '²' (ID: 13848)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2621971368789673
    2. '+' → logprob: -2.6371970176696777
    3. '**' → logprob: -3.2621970176696777
    4. '=' → logprob: -3.3871970176696777
    5. 'def' → logprob: -3.8871970176696777
    6. '-' → logprob: -4.387197017669678
    7. 'import' → logprob: -4.887197017669678
    8. '*' → logprob: -4.887197017669678
    9. '#' → logprob: -5.012197017669678
    10. '```' → logprob: -5.262197017669678

Token 2601: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018218310549855232
    2. '+' → logprob: -5.393218517303467
    3. '
' → logprob: -6.018218517303467
    4. 'def' → logprob: -6.143218517303467
    5. '   ' → logprob: -6.268218517303467
    6. '#' → logprob: -6.518218517303467
    7. '*' → logprob: -6.768218517303467
    8. '**' → logprob: -7.268218517303467
    9. ':' → logprob: -7.768218517303467
    10. '=' → logprob: -7.768218517303467

Token 2602: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3636302649974823
    2. ')' → logprob: -2.7386302947998047
    3. 'def' → logprob: -2.8636302947998047
    4. ':' → logprob: -2.9886302947998047
    5. '=' → logprob: -3.8636302947998047
    6. 'n' → logprob: -3.8636302947998047
    7. ',' → logprob: -3.9886302947998047
    8. ' =' → logprob: -4.113630294799805
    9. '(n' → logprob: -4.363630294799805
    10. '```' → logprob: -4.988630294799805

Token 2603: ' impossible' (ID: 19786)
  Prédit: ' impossible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impossible' → logprob: -1.0372968912124634
    2. 'n' → logprob: -2.162296772003174
    3. ' infe' → logprob: -2.412296772003174
    4. 'possible' → logprob: -2.662296772003174
    5. 'import' → logprob: -2.912296772003174
    6. '```' → logprob: -3.162296772003174
    7. 'in' → logprob: -3.287296772003174
    8. ' possible' → logprob: -3.412296772003174
    9. '
' → logprob: -3.537296772003174
    10. 'not' → logprob: -3.787296772003174

Token 2604: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06044049188494682
    2. 'def' → logprob: -4.185440540313721
    3. ':' → logprob: -4.435440540313721
    4. '(n' → logprob: -5.185440540313721
    5. ')' → logprob: -5.435440540313721
    6. ',' → logprob: -5.810440540313721
    7. '(' → logprob: -5.935440540313721
    8. 'n' → logprob: -6.060440540313721
    9. '```' → logprob: -6.435440540313721
    10. ']' → logprob: -6.685440540313721

Token 2605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015130772953853011
    2. 'n' → logprob: -7.2515130043029785
    3. '    
' → logprob: -8.251513481140137
    4. '```' → logprob: -8.376513481140137
    5. 'def' → logprob: -9.376513481140137
    6. 'import' → logprob: -9.501513481140137
    7. '
' → logprob: -10.126513481140137
    8. '(n' → logprob: -10.626513481140137
    9. '\' → logprob: -11.126513481140137
    10. '\n' → logprob: -11.751513481140137

Token 2606: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05445924773812294
    2. 'n' → logprob: -3.1794593334198
    3. 'def' → logprob: -4.804459095001221
    4. '```' → logprob: -7.304459095001221
    5. 'j' → logprob: -7.554459095001221
    6. '    
' → logprob: -7.804459095001221
    7. 'p' → logprob: -7.929459095001221
    8. 'import' → logprob: -8.054459571838379
    9. '(n' → logprob: -9.054459571838379
    10. '
' → logprob: -9.679459571838379

Token 2607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01754055917263031
    2. 'n' → logprob: -4.142540454864502
    3. 'def' → logprob: -7.142540454864502
    4. 'import' → logprob: -8.51754093170166
    5. '    
' → logprob: -8.51754093170166
    6. '```' → logprob: -8.76754093170166
    7. '
' → logprob: -9.89254093170166
    8. 'p' → logprob: -10.76754093170166
    9. 'j' → logprob: -11.01754093170166
    10. 'from' → logprob: -11.51754093170166

Token 2608: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02262950874865055
    2. 'n' → logprob: -3.897629499435425
    3. 'def' → logprob: -6.522629737854004
    4. '    
' → logprob: -7.897629737854004
    5. 'import' → logprob: -9.397629737854004
    6. 'j' → logprob: -10.147629737854004
    7. '```' → logprob: -10.147629737854004
    8. '
' → logprob: -11.272629737854004
    9. '  
' → logprob: -11.772629737854004
    10. 'p' → logprob: -11.772629737854004

Token 2609: ' Observation' (ID: 143762)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6376099586486816
    2. 'n' → logprob: -0.7626099586486816
    3. 'def' → logprob: -5.512609958648682
    4. '```' → logprob: -8.137609481811523
    5. '    
' → logprob: -8.512609481811523
    6. 'import' → logprob: -9.012609481811523
    7. 'j' → logprob: -9.262609481811523
    8. '#' → logprob: -9.887609481811523
    9. ' n' → logprob: -9.887609481811523
    10. 'p' → logprob: -10.762609481811523

Token 2610: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05696094408631325
    2. 'n' → logprob: -3.6819610595703125
    3. 'def' → logprob: -4.1819610595703125
    4. ':' → logprob: -4.9319610595703125
    5. ':
' → logprob: -6.4319610595703125
    6. '#' → logprob: -6.5569610595703125
    7. '```' → logprob: -6.9319610595703125
    8. '(n' → logprob: -7.5569610595703125
    9. 'import' → logprob: -7.6819610595703125
    10. '
' → logprob: -7.8069610595703125

Token 2611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03174157440662384
    2. 'n' → logprob: -3.7817416191101074
    3. 'def' → logprob: -5.281741619110107
    4. '```' → logprob: -6.281741619110107
    5. '#' → logprob: -7.531741619110107
    6. 'from' → logprob: -8.40674114227295
    7. '    
' → logprob: -8.53174114227295
    8. '
' → logprob: -8.90674114227295
    9. ' n' → logprob: -9.15674114227295
    10. 'if' → logprob: -9.90674114227295

Token 2612: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037547092884778976
    2. 'n' → logprob: -3.4125471115112305
    3. ' n' → logprob: -7.0375471115112305
    4. '#' → logprob: -7.1625471115112305
    5. '```' → logprob: -7.7875471115112305
    6. 'def' → logprob: -7.9125471115112305
    7. 'from' → logprob: -8.41254711151123
    8. '    
' → logprob: -8.66254711151123
    9. 'j' → logprob: -8.78754711151123
    10. 'max' → logprob: -9.28754711151123

Token 2613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44608259201049805
    2. '#' → logprob: -1.196082592010498
    3. 'n' → logprob: -3.071082592010498
    4. '```' → logprob: -4.946082592010498
    5. '#
' → logprob: -5.946082592010498
    6. 'def' → logprob: -7.446082592010498
    7. '``' → logprob: -9.071083068847656
    8. '    
' → logprob: -9.321083068847656
    9. '"""
' → logprob: -9.446083068847656
    10. ' n' → logprob: -9.446083068847656

Token 2614: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12256457656621933
    2. '#' (adapté à ' #') → logprob: -2.8725645542144775
    3. 'n' → logprob: -2.8725645542144775
    4. '```' → logprob: -7.372564792633057
    5. 'def' → logprob: -7.747564792633057
    6. '    
' → logprob: -7.747564792633057
    7. '
' → logprob: -8.622564315795898
    8. '#
' → logprob: -9.122564315795898
    9. 'max' → logprob: -9.372564315795898
    10. 'for' → logprob: -9.622564315795898

Token 2615: ' Le' (ID: 2018)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3980368971824646
    2. '#' → logprob: -1.5230369567871094
    3. 'max' → logprob: -3.2730369567871094
    4. 'def' → logprob: -4.023036956787109
    5. 'for' → logprob: -4.398036956787109
    6. 'from' → logprob: -4.898036956787109
    7. '   ' → logprob: -5.023036956787109
    8. '```' → logprob: -5.648036956787109
    9. 'prefix' → logprob: -5.898036956787109
    10. '#
' → logprob: -6.023036956787109

Token 2616: ' salaire' (ID: 135427)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29034489393234253
    2. 'def' → logprob: -1.5403449535369873
    3. '   ' → logprob: -3.7903449535369873
    4. '
' → logprob: -5.540344715118408
    5. '_' → logprob: -6.040344715118408
    6. '#' → logprob: -6.415344715118408
    7. '(n' → logprob: -6.790344715118408
    8. ' n' → logprob: -7.290344715118408
    9. ' =' → logprob: -7.540344715118408
    10. ')' → logprob: -7.540344715118408

Token 2617: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6510809063911438
    2. ' =' → logprob: -0.7760809063911438
    3. ' +=' → logprob: -5.651081085205078
    4. '_' → logprob: -5.776081085205078
    5. '#' → logprob: -5.901081085205078
    6. '   ' → logprob: -6.526081085205078
    7. ')' → logprob: -6.776081085205078
    8. 'def' → logprob: -6.776081085205078
    9. '```' → logprob: -6.901081085205078
    10. 's' → logprob: -7.526081085205078

Token 2618: ' somme' (ID: 64484)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5666515231132507
    2. ' (' → logprob: -1.4416515827178955
    3. 'S' → logprob: -2.6916515827178955
    4. 'const' → logprob: -2.9416515827178955
    5. 'n' → logprob: -3.5666515827178955
    6. '(S' → logprob: -4.316651344299316
    7. 'sum' → logprob: -5.066651344299316
    8. '   ' → logprob: -5.191651344299316
    9. ' S' → logprob: -5.691651344299316
    10. '(s' → logprob: -5.816651344299316

Token 2619: '_{' (ID: 22305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8918988704681396
    2. '=' → logprob: -1.2668988704681396
    3. ' =' → logprob: -1.7668988704681396
    4. 'des' → logprob: -3.7668988704681396
    5. ')' → logprob: -4.391899108886719
    6. '#' → logprob: -4.391899108886719
    7. '_j' → logprob: -4.516899108886719
    8. '   ' → logprob: -4.516899108886719
    9. '```' → logprob: -4.766899108886719
    10. ' des' → logprob: -5.141899108886719

Token 2620: 'segments' (ID: 110314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1664135456085205
    2. 'i' → logprob: -2.5414135456085205
    3. '_{' → logprob: -4.166413307189941
    4. '_i' → logprob: -4.541413307189941
    5. 'segments' → logprob: -4.916413307189941
    6. '   ' → logprob: -5.541413307189941
    7. ' _' → logprob: -5.791413307189941
    8. 'p' → logprob: -5.916413307189941
    9. 'n' → logprob: -6.166413307189941
    10. 's' → logprob: -6.166413307189941

Token 2621: '}' (ID: 92)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18871161341667175
    2. ')' → logprob: -2.813711643218994
    3. '=' → logprob: -3.313711643218994
    4. ' =' → logprob: -3.938711643218994
    5. 's' → logprob: -4.688711643218994
    6. '```' → logprob: -4.813711643218994
    7. '   ' → logprob: -5.188711643218994
    8. ' _' → logprob: -5.563711643218994
    9. '_{' → logprob: -5.688711643218994
    10. '}' → logprob: -6.188711643218994

Token 2622: ' |' (ID: 1022)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32325080037117004
    2. '=' → logprob: -2.4482507705688477
    3. '(' → logprob: -2.9482507705688477
    4. ' =' → logprob: -3.0732507705688477
    5. ' _' → logprob: -4.448250770568848
    6. ' *' → logprob: -4.448250770568848
    7. '*' → logprob: -4.823250770568848
    8. ')' → logprob: -4.948250770568848
    9. ' (' → logprob: -4.948250770568848
    10. 's' → logprob: -5.323250770568848

Token 2623: 'segment' (ID: 45362)
  Prédit: 'segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5128442049026489
    2. 'length' → logprob: -1.512844204902649
    3. 'segments' → logprob: -2.0128440856933594
    4. ' segment' → logprob: -3.5128440856933594
    5. '   ' → logprob: -5.762844085693359
    6. '(segment' → logprob: -6.137844085693359
    7. 's' → logprob: -6.262844085693359
    8. ' lengths' → logprob: -6.512844085693359
    9. ' segments' → logprob: -6.637844085693359
    10. 'leng' → logprob: -6.762844085693359

Token 2624: '|' (ID: 91)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6190615892410278
    2. '_' → logprob: -0.8690615892410278
    3. ']' → logprob: -4.494061470031738
    4. '[' → logprob: -5.119061470031738
    5. '|' → logprob: -5.119061470031738
    6. ')' → logprob: -5.494061470031738
    7. '_lengths' → logprob: -6.494061470031738
    8. '[
' → logprob: -6.994061470031738
    9. '_|' → logprob: -6.994061470031738
    10. '```' → logprob: -6.994061470031738

Token 2625: ' *' (ID: 425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8317630887031555
    2. 's' → logprob: -1.8317630290985107
    3. 'def' → logprob: -2.3317630290985107
    4. ')' → logprob: -2.9567630290985107
    5. ']' → logprob: -3.2067630290985107
    6. '```' → logprob: -3.5817630290985107
    7. '   ' → logprob: -3.8317630290985107
    8. '[' → logprob: -4.08176326751709
    9. ' =' → logprob: -4.33176326751709
    10. '=' → logprob: -4.58176326751709

Token 2626: ' nb' (ID: 28791)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.3859180212020874
    2. 'p' → logprob: -1.8859180212020874
    3. 'segment' → logprob: -2.135918140411377
    4. '(' → logprob: -2.385918140411377
    5. ' (' → logprob: -2.385918140411377
    6. 'sum' → logprob: -3.760918140411377
    7. '(p' → logprob: -3.760918140411377
    8. '```' → logprob: -3.760918140411377
    9. '(segment' → logprob: -3.760918140411377
    10. '(n' → logprob: -4.010918140411377

Token 2627: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.9628942608833313
    2. '_' → logprob: -1.9628942012786865
    3. 'segments' → logprob: -2.2128942012786865
    4. 's' → logprob: -2.2128942012786865
    5. '_p' → logprob: -3.0878942012786865
    6. 'def' → logprob: -3.3378942012786865
    7. 'e' → logprob: -3.5878942012786865
    8. '   ' → logprob: -3.8378942012786865
    9. '_t' → logprob: -4.212894439697266
    10. ' =' → logprob: -4.337894439697266

Token 2628: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05741623044013977
    2. '(
' → logprob: -4.3074164390563965
    3. '(' → logprob: -4.4324164390563965
    4. 'def' → logprob: -5.0574164390563965
    5. '(n' → logprob: -5.6824164390563965
    6. '```' → logprob: -5.6824164390563965
    7. 'n' → logprob: -5.8074164390563965
    8. ' =' → logprob: -6.0574164390563965
    9. ':' → logprob: -6.4324164390563965
    10. '_' → logprob: -6.5574164390563965

Token 2629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22350220382213593
    2. 'def' → logprob: -3.0985021591186523
    3. '(n' → logprob: -3.4735021591186523
    4. '(' → logprob: -3.7235021591186523
    5. '(
' → logprob: -3.8485021591186523
    6. '_' → logprob: -4.348502159118652
    7. ':' → logprob: -4.348502159118652
    8. ')' → logprob: -4.723502159118652
    9. '[' → logprob: -4.848502159118652
    10. '```' → logprob: -5.098502159118652

Token 2630: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06609712541103363
    2. 'def' → logprob: -4.066097259521484
    3. ':' → logprob: -4.316097259521484
    4. ')' → logprob: -4.941097259521484
    5. '_j' → logprob: -5.691097259521484
    6. ']' → logprob: -6.066097259521484
    7. '_' → logprob: -6.191097259521484
    8. '(n' → logprob: -6.441097259521484
    9. '[' → logprob: -6.441097259521484
    10. ' =' → logprob: -6.566097259521484

Token 2631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03985695540904999
    2. 'def' → logprob: -3.9148569107055664
    3. 'n' → logprob: -4.914856910705566
    4. ':' → logprob: -5.789856910705566
    5. '```' → logprob: -6.164856910705566
    6. '(n' → logprob: -6.914856910705566
    7. ')' → logprob: -7.289856910705566
    8. '"' → logprob: -7.789856910705566
    9. 'p' → logprob: -7.789856910705566
    10. '\' → logprob: -7.789856910705566

Token 2632: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09222263097763062
    2. ':' → logprob: -3.9672226905822754
    3. 'n' → logprob: -3.9672226905822754
    4. '\n' → logprob: -4.467222690582275
    5. 'def' → logprob: -4.842222690582275
    6. ')' → logprob: -5.342222690582275
    7. '\' → logprob: -5.342222690582275
    8. '(n' → logprob: -5.717222690582275
    9. '"' → logprob: -5.967222690582275
    10. '```' → logprob: -6.467222690582275

Token 2633: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049120478332042694
    2. 'n' → logprob: -3.2991204261779785
    3. '```' → logprob: -5.6741204261779785
    4. 'def' → logprob: -6.5491204261779785
    5. 'total' → logprob: -6.6741204261779785
    6. '\' → logprob: -6.7991204261779785
    7. '#' → logprob: -7.0491204261779785
    8. '
' → logprob: -7.7991204261779785
    9. 'length' → logprob: -7.9241204261779785
    10. '(n' → logprob: -8.174120903015137

Token 2634: ' segment' (ID: 14806)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.049039676785469055
    2. ')' → logprob: -4.924039840698242
    3. '   ' → logprob: -5.174039840698242
    4. '=' → logprob: -5.424039840698242
    5. '#' → logprob: -5.424039840698242
    6. 'j' → logprob: -5.674039840698242
    7. '_j' → logprob: -5.674039840698242
    8. '(' → logprob: -6.049039840698242
    9. 'n' → logprob: -6.174039840698242
    10. ':' → logprob: -6.299039840698242

Token 2635: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5145094990730286
    2. 's' → logprob: -1.2645094394683838
    3. '   ' → logprob: -3.389509439468384
    4. ' =' → logprob: -3.764509439468384
    5. '[' → logprob: -4.139509677886963
    6. '=' → logprob: -4.264509677886963
    7. '_length' → logprob: -5.389509677886963
    8. ',' → logprob: -6.014509677886963
    9. 'def' → logprob: -6.139509677886963
    10. '#' → logprob: -6.139509677886963

Token 2636: ' cont' (ID: 836)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2691752910614014
    2. '   ' → logprob: -1.8941752910614014
    3. '[' → logprob: -2.5191752910614014
    4. '_' → logprob: -2.5191752910614014
    5. ' =' → logprob: -2.5191752910614014
    6. ''' → logprob: -3.0191752910614014
    7. '(' → logprob: -3.5191752910614014
    8. '[]' → logprob: -3.5191752910614014
    9. 'def' → logprob: -3.7691752910614014
    10. '=' → logprob: -3.7691752910614014

Token 2637: 'igu' (ID: 12143)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2162035703659058
    2. '   ' → logprob: -1.5912035703659058
    3. 'u' → logprob: -1.5912035703659058
    4. '```' → logprob: -2.5912036895751953
    5. 'def' → logprob: -3.0912036895751953
    6. '[' → logprob: -4.216203689575195
    7. '[
' → logprob: -4.341203689575195
    8. '[]' → logprob: -4.466203689575195
    9. 'n' → logprob: -4.466203689575195
    10. ']' → logprob: -4.591203689575195

Token 2638: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6313546895980835
    2. '_' → logprob: -1.7563546895980835
    3. 'u' → logprob: -2.006354808807373
    4. '#' → logprob: -2.381354808807373
    5. ')' → logprob: -2.506354808807373
    6. 'e' → logprob: -2.631354808807373
    7. 's' → logprob: -2.881354808807373
    8. '[' → logprob: -2.881354808807373
    9. ']' → logprob: -3.381354808807373
    10. 'def' → logprob: -3.631354808807373

Token 2639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009730471298098564
    2. 'def' → logprob: -5.509730339050293
    3. ':' → logprob: -6.759730339050293
    4. '    
' → logprob: -7.384730339050293
    5. 'n' → logprob: -7.509730339050293
    6. '_' → logprob: -7.759730339050293
    7. ')' → logprob: -8.009730339050293
    8. '
' → logprob: -8.134730339050293
    9. 'j' → logprob: -8.509730339050293
    10. '```' → logprob: -8.509730339050293

Token 2640: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012542732991278172
    2. ':' → logprob: -6.012542724609375
    3. 'def' → logprob: -6.012542724609375
    4. '```' → logprob: -6.512542724609375
    5. 'n' → logprob: -7.012542724609375
    6. 'j' → logprob: -7.137542724609375
    7. '[' → logprob: -7.512542724609375
    8. '\' → logprob: -7.512542724609375
    9. '(n' → logprob: -7.762542724609375
    10. ')' → logprob: -8.012542724609375

Token 2641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029329439625144005
    2. 'def' → logprob: -4.154329299926758
    3. 'n' → logprob: -5.154329299926758
    4. 'p' → logprob: -6.404329299926758
    5. 'j' → logprob: -6.779329299926758
    6. ')' → logprob: -7.529329299926758
    7. '```' → logprob: -7.529329299926758
    8. '"' → logprob: -7.779329299926758
    9. '\' → logprob: -8.154329299926758
    10. ':' → logprob: -8.154329299926758

Token 2642: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007120022550225258
    2. 'def' → logprob: -6.382120132446289
    3. 'j' → logprob: -6.632120132446289
    4. 'n' → logprob: -6.757120132446289
    5. '"' → logprob: -7.382120132446289
    6. ')' → logprob: -7.882120132446289
    7. ':' → logprob: -8.007120132446289
    8. '    
' → logprob: -8.632120132446289
    9. '_' → logprob: -9.007120132446289
    10. '```' → logprob: -9.132120132446289

Token 2643: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052875492721796036
    2. 'n' → logprob: -3.302875518798828
    3. 'def' → logprob: -4.927875518798828
    4. '```' → logprob: -6.052875518798828
    5. 'j' → logprob: -7.052875518798828
    6. '    
' → logprob: -7.427875518798828
    7. 'p' → logprob: -7.802875518798828
    8. '\' → logprob: -8.052875518798828
    9. ')' → logprob: -8.177875518798828
    10. '
' → logprob: -8.427875518798828

Token 2644: ' remarque' (ID: 183406)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1151018142700195
    2. 'def' → logprob: -1.6151018142700195
    3. '[' → logprob: -2.2401018142700195
    4. ':' → logprob: -2.3651018142700195
    5. 'n' → logprob: -2.9901018142700195
    6. ' =' → logprob: -2.9901018142700195
    7. '   ' → logprob: -3.2401018142700195
    8. '#' → logprob: -3.3651018142700195
    9. '(n' → logprob: -4.1151018142700195
    10. ')' → logprob: -4.1151018142700195

Token 2645: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03420561924576759
    2. '_' → logprob: -4.784205436706543
    3. 'def' → logprob: -4.909205436706543
    4. ' =' → logprob: -5.784205436706543
    5. ':' → logprob: -6.159205436706543
    6. '    ' → logprob: -6.159205436706543
    7. '#' → logprob: -6.159205436706543
    8. '=' → logprob: -6.659205436706543
    9. ' que' → logprob: -6.909205436706543
    10. '```' → logprob: -7.034205436706543

Token 2646: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016097482293844223
    2. '#' → logprob: -5.141097545623779
    3. 'def' → logprob: -5.641097545623779
    4. 'n' → logprob: -6.641097545623779
    5. '```' → logprob: -7.141097545623779
    6. '
' → logprob: -7.516097545623779
    7. '#
' → logprob: -7.641097545623779
    8. ':' → logprob: -8.016097068786621
    9. '       ' → logprob: -8.141097068786621
    10. '\' → logprob: -8.516097068786621

Token 2647: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14642012119293213
    2. 'def' → logprob: -3.2714200019836426
    3. '#' → logprob: -3.3964200019836426
    4. 'n' → logprob: -3.8964200019836426
    5. '(n' → logprob: -5.146420001983643
    6. '```' → logprob: -5.146420001983643
    7. ' la' → logprob: -5.271420001983643
    8. ' n' → logprob: -5.521420001983643
    9. 'la' → logprob: -5.646420001983643
    10. '\' → logprob: -6.146420001983643

Token 2648: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.729337215423584
    2. '_' → logprob: -0.854337215423584
    3. 'j' → logprob: -3.729337215423584
    4. 's' → logprob: -4.604337215423584
    5. '`' → logprob: -4.979337215423584
    6. 'p' → logprob: -5.104337215423584
    7. 'def' → logprob: -5.604337215423584
    8. '#' → logprob: -5.729337215423584
    9. ')' → logprob: -5.729337215423584
    10. '(' → logprob: -5.854337215423584

Token 2649: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5366972088813782
    2. ':' → logprob: -2.5366971492767334
    3. 'def' → logprob: -2.5366971492767334
    4. ')' → logprob: -2.7866971492767334
    5. '=' → logprob: -2.9116971492767334
    6. ' =' → logprob: -3.4116971492767334
    7. '(' → logprob: -4.2866973876953125
    8. '(n' → logprob: -4.2866973876953125
    9. '```' → logprob: -4.4116973876953125
    10. ''' → logprob: -4.6616973876953125

Token 2650: ' sous' (ID: 14487)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1971982717514038
    2. '_' → logprob: -1.6971982717514038
    3. '"' → logprob: -2.3221983909606934
    4. 'n' → logprob: -2.5721983909606934
    5. ''' → logprob: -2.6971983909606934
    6. 'def' → logprob: -2.8221983909606934
    7. ' =' → logprob: -3.3221983909606934
    8. '=' → logprob: -3.6971983909606934
    9. '(' → logprob: -3.9471983909606934
    10. '```' → logprob: -3.9471983909606934

Token 2651: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13136258721351624
    2. '\' → logprob: -3.5063626766204834
    3. '=' → logprob: -4.381362438201904
    4. '
' → logprob: -4.506362438201904
    5. ' =' → logprob: -4.506362438201904
    6. 'import' → logprob: -5.131362438201904
    7. '_' → logprob: -5.256362438201904
    8. ')' → logprob: -5.256362438201904
    9. '   ' → logprob: -5.256362438201904
    10. '```' → logprob: -5.256362438201904

Token 2652: ' forme' (ID: 27450)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7998929619789124
    2. '#' → logprob: -2.2998929023742676
    3. '```' → logprob: -2.5498929023742676
    4. ')' → logprob: -2.7998929023742676
    5. 'n' → logprob: -2.9248929023742676
    6. '_' → logprob: -3.2998929023742676
    7. 'import' → logprob: -3.4248929023742676
    8. 'for' → logprob: -3.9248929023742676
    9. '=' → logprob: -4.174892902374268
    10. 'max' → logprob: -4.674892902374268

Token 2653: ':
' (ID: 734)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7068868279457092
    2. '"' → logprob: -2.2068867683410645
    3. '```' → logprob: -2.3318867683410645
    4. '_' → logprob: -2.5818867683410645
    5. ')' → logprob: -3.4568867683410645
    6. '(' → logprob: -3.5818867683410645
    7. ':' → logprob: -3.7068867683410645
    8. '`' → logprob: -3.8318867683410645
    9. '   ' → logprob: -4.4568867683410645
    10. ' =' → logprob: -4.8318867683410645

Token 2654: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.5427062511444092
    2. ')' → logprob: -1.9177062511444092
    3. ''' → logprob: -2.042706251144409
    4. '   ' → logprob: -2.167706251144409
    5. 'def' → logprob: -2.292706251144409
    6. '_' → logprob: -3.167706251144409
    7. '(' → logprob: -3.167706251144409
    8. ':' → logprob: -3.542706251144409
    9. '#' → logprob: -3.792706251144409
    10. '(
' → logprob: -3.917706251144409

Token 2655: ' #' (ID: 1069)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.3911547660827637
    2. ')' → logprob: -1.6411547660827637
    3. ''' → logprob: -1.7661547660827637
    4. '(' → logprob: -2.2661547660827637
    5. ' *' → logprob: -3.1411547660827637
    6. '_' → logprob: -3.2661547660827637
    7. '   ' → logprob: -3.2661547660827637
    8. ' (' → logprob: -4.016154766082764
    9. '(
' → logprob: -4.266154766082764
    10. ' )' → logprob: -4.516154766082764

Token 2656: ' f' (ID: 285)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1857960224151611
    2. '   ' → logprob: -1.3107960224151611
    3. '(n' → logprob: -1.8107960224151611
    4. ')' → logprob: -2.810796022415161
    5. '(
' → logprob: -3.435796022415161
    6. '(' → logprob: -3.435796022415161
    7. '"' → logprob: -3.560796022415161
    8. ''' → logprob: -4.560795783996582
    9. ' def' → logprob: -4.935795783996582
    10. '
' → logprob: -4.935795783996582

Token 2657: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7637565732002258
    2. ')' → logprob: -2.013756513595581
    3. '_' → logprob: -2.138756513595581
    4. '(n' → logprob: -3.138756513595581
    5. ''' → logprob: -3.263756513595581
    6. '#' → logprob: -3.638756513595581
    7. '=' → logprob: -3.763756513595581
    8. '**' → logprob: -4.01375675201416
    9. '```' → logprob: -4.01375675201416
    10. ' (' → logprob: -4.01375675201416

Token 2658: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22575120627880096
    2. '=' → logprob: -2.1007511615753174
    3. '#' → logprob: -4.1007513999938965
    4. '[' → logprob: -4.7257513999938965
    5. '+' → logprob: -4.8507513999938965
    6. '*' → logprob: -4.8507513999938965
    7. '**' → logprob: -4.9757513999938965
    8. ' =' → logprob: -5.1007513999938965
    9. 'def' → logprob: -5.6007513999938965
    10. '(n' → logprob: -5.6007513999938965

Token 2659: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24256500601768494
    2. 'segments' → logprob: -2.4925649166107178
    3. 'k' → logprob: -3.3675649166107178
    4. ' segments' → logprob: -3.8675649166107178
    5. '=' → logprob: -4.492565155029297
    6. ' (' → logprob: -5.117565155029297
    7. 'c' → logprob: -5.242565155029297
    8. ' )' → logprob: -5.367565155029297
    9. '(n' → logprob: -5.367565155029297
    10. 'n' → logprob: -5.367565155029297

Token 2660: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0374729186296463
    2. '_' → logprob: -4.912472724914551
    3. ',' → logprob: -5.287472724914551
    4. '_)' → logprob: -5.912472724914551
    5. '=' → logprob: -6.037472724914551
    6. '**' → logprob: -6.162472724914551
    7. ')
' → logprob: -6.162472724914551
    8. ')**' → logprob: -6.412472724914551
    9. ')=' → logprob: -6.537472724914551
    10. '[' → logprob: -6.662472724914551

Token 2661: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1530914306640625
    2. '(' → logprob: -1.4030914306640625
    3. '(k' → logprob: -2.4030914306640625
    4. '(
' → logprob: -2.6530914306640625
    5. '[' → logprob: -2.9030914306640625
    6. '(n' → logprob: -3.2780914306640625
    7. '   ' → logprob: -3.2780914306640625
    8. ',' → logprob: -3.7780914306640625
    9. '[
' → logprob: -4.1530914306640625
    10. '#' → logprob: -4.5280914306640625

Token 2662: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9708446264266968
    2. '(' → logprob: -1.5958446264266968
    3. ' (' → logprob: -1.5958446264266968
    4. '(k' → logprob: -2.4708447456359863
    5. '(c' → logprob: -2.9708447456359863
    6. '(n' → logprob: -3.0958447456359863
    7. 'c' → logprob: -4.595844745635986
    8. ' k' → logprob: -4.595844745635986
    9. ')' → logprob: -5.470844745635986
    10. 'lambda' → logprob: -6.720844745635986

Token 2663: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20515233278274536
    2. ')' → logprob: -2.4551522731781006
    3. ',' → logprob: -3.3301522731781006
    4. '*' → logprob: -3.3301522731781006
    5. ' +' → logprob: -5.45515251159668
    6. ' =' → logprob: -5.70515251159668
    7. '+' → logprob: -5.70515251159668
    8. '=' → logprob: -5.70515251159668
    9. '*(' → logprob: -6.08015251159668
    10. '**' → logprob: -6.20515251159668

Token 2664: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04930830001831055
    2. ' (' → logprob: -3.9243083000183105
    3. '(n' → logprob: -4.2993083000183105
    4. '(x' → logprob: -4.7993083000183105
    5. '(S' → logprob: -6.0493083000183105
    6. '(c' → logprob: -6.5493083000183105
    7. '(
' → logprob: -7.1743083000183105
    8. '(k' → logprob: -7.2993083000183105
    9. '(sum' → logprob: -7.9243083000183105
    10. '(s' → logprob: -8.049308776855469

Token 2665: 'const' (ID: 1671)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.256103515625
    2. '(' → logprob: -1.506103515625
    3. ' (' → logprob: -1.631103515625
    4. 'x' → logprob: -2.381103515625
    5. '(S' → logprob: -2.506103515625
    6. '(x' → logprob: -3.381103515625
    7. 'k' → logprob: -4.506103515625
    8. 'n' → logprob: -4.631103515625
    9. '(sum' → logprob: -4.631103515625
    10. '(k' → logprob: -4.756103515625

Token 2666: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08348332345485687
    2. '_' → logprob: -3.8334832191467285
    3. '+' → logprob: -3.9584832191467285
    4. '(' → logprob: -4.9584832191467285
    5. '**' → logprob: -5.2084832191467285
    6. '*' → logprob: -5.4584832191467285
    7. ',' → logprob: -5.4584832191467285
    8. ' +' → logprob: -5.7084832191467285
    9. ' *' → logprob: -6.7084832191467285
    10. '_)' → logprob: -6.8334832191467285

Token 2667: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13839995861053467
    2. 'sum' → logprob: -3.013400077819824
    3. 'c' → logprob: -3.263400077819824
    4. ' x' → logprob: -4.013400077819824
    5. ' (' → logprob: -5.263400077819824
    6. ')' → logprob: -5.513400077819824
    7. '(c' → logprob: -5.513400077819824
    8. '(x' → logprob: -5.638400077819824
    9. ' sum' → logprob: -6.513400077819824
    10. 'cut' → logprob: -6.888400077819824

Token 2668: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0754089206457138
    2. '_)' → logprob: -3.575408935546875
    3. '_' → logprob: -3.700408935546875
    4. '_co' → logprob: -5.700408935546875
    5. ')**' → logprob: -5.700408935546875
    6. ')`' → logprob: -5.700408935546875
    7. '**' → logprob: -6.075408935546875
    8. ')_' → logprob: -6.700408935546875
    9. '[' → logprob: -7.200408935546875
    10. ',' → logprob: -7.450408935546875

Token 2669: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49321362376213074
    2. ':' → logprob: -2.368213653564453
    3. ')' → logprob: -2.618213653564453
    4. '):' → logprob: -3.243213653564453
    5. 'def' → logprob: -3.368213653564453
    6. '(n' → logprob: -3.743213653564453
    7. '[n' → logprob: -3.868213653564453
    8. ')
' → logprob: -4.243213653564453
    9. ' =' → logprob: -4.368213653564453
    10. ',' → logprob: -4.868213653564453

Token 2670: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6193225383758545
    2. ' (' → logprob: -1.4943225383758545
    3. 'k' → logprob: -1.9943225383758545
    4. ' c' → logprob: -3.4943225383758545
    5. ' x' → logprob: -4.619322776794434
    6. '0' → logprob: -4.619322776794434
    7. ' n' → logprob: -4.744322776794434
    8. '(c' → logprob: -4.869322776794434
    9. '(k' → logprob: -5.244322776794434
    10. 'c' → logprob: -5.494322776794434

Token 2671: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12847773730754852
    2. ')' → logprob: -2.6284778118133545
    3. '*' → logprob: -3.6284778118133545
    4. ' +' → logprob: -5.378477573394775
    5. '*(' → logprob: -5.628477573394775
    6. '+' → logprob: -5.878477573394775
    7. ' -' → logprob: -6.253477573394775
    8. ' =' → logprob: -6.628477573394775
    9. '**' → logprob: -6.753477573394775
    10. ',' → logprob: -6.753477573394775

Token 2672: 'const' (ID: 1671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22153745591640472
    2. ' (' → logprob: -1.721537470817566
    3. ' ' → logprob: -5.3465375900268555
    4. ' ' → logprob: -5.8465375900268555
    5. ')' → logprob: -6.0965375900268555
    6. 'x' → logprob: -6.3465375900268555
    7. '(n' → logprob: -6.4715375900268555
    8. 'sum' → logprob: -7.2215375900268555
    9. '(k' → logprob: -7.3465375900268555
    10. '(
' → logprob: -7.5965375900268555

Token 2673: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2469053268432617
    2. '   ' → logprob: -1.4969053268432617
    3. ' +' → logprob: -1.4969053268432617
    4. ' -' → logprob: -2.7469053268432617
    5. ' *' → logprob: -2.7469053268432617
    6. '+' → logprob: -3.7469053268432617
    7. '(n' → logprob: -4.246905326843262
    8. '#' → logprob: -4.621905326843262
    9. '-' → logprob: -4.746905326843262
    10. 'def' → logprob: -4.871905326843262

Token 2674: ' k' (ID: 372)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1512784957885742
    2. 'k' → logprob: -1.2762784957885742
    3. '(c' → logprob: -1.7762784957885742
    4. 'x' → logprob: -2.276278495788574
    5. ' k' → logprob: -2.776278495788574
    6. ' x' → logprob: -2.901278495788574
    7. '(k' → logprob: -4.651278495788574
    8. '(' → logprob: -6.276278495788574
    9. '(x' → logprob: -6.276278495788574
    10. ' ' → logprob: -7.401278495788574

Token 2675: '*x' (ID: 46987)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4861918091773987
    2. '*' → logprob: -1.236191749572754
    3. ')' → logprob: -2.611191749572754
    4. '*(' → logprob: -4.986191749572754
    5. '_' → logprob: -5.986191749572754
    6. ' _' → logprob: -6.486191749572754
    7. '+' → logprob: -6.611191749572754
    8. '*_' → logprob: -6.736191749572754
    9. '#' → logprob: -7.236191749572754
    10. '*)' → logprob: -7.236191749572754

Token 2676: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13932420313358307
    2. ')' → logprob: -3.014324188232422
    3. 'def' → logprob: -3.764324188232422
    4. '_' → logprob: -4.389324188232422
    5. ':' → logprob: -4.639324188232422
    6. ' *' → logprob: -4.889324188232422
    7. ' +' → logprob: -5.389324188232422
    8. ' =' → logprob: -5.639324188232422
    9. '):' → logprob: -6.014324188232422
    10. '```' → logprob: -6.014324188232422

Token 2677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1936453878879547
    2. 'def' → logprob: -3.068645477294922
    3. ')' → logprob: -3.818645477294922
    4. ':' → logprob: -4.318645477294922
    5. ')
' → logprob: -4.693645477294922
    6. ' =' → logprob: -4.943645477294922
    7. '_' → logprob: -4.943645477294922
    8. '(n' → logprob: -5.193645477294922
    9. ']' → logprob: -5.318645477294922
    10. '```' → logprob: -5.443645477294922

Token 2678: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02360822819173336
    2. ')' → logprob: -4.898608207702637
    3. 'def' → logprob: -5.398608207702637
    4. ')
' → logprob: -6.648608207702637
    5. ' +' → logprob: -6.648608207702637
    6. '
' → logprob: -6.773608207702637
    7. 'import' → logprob: -7.398608207702637
    8. ']' → logprob: -7.523608207702637
    9. ':' → logprob: -7.898608207702637
    10. '[
' → logprob: -7.898608207702637

Token 2679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032948799431324005
    2. 'def' → logprob: -4.407948970794678
    3. '
' → logprob: -5.157948970794678
    4. '#' → logprob: -6.032948970794678
    5. ')' → logprob: -6.032948970794678
    6. 'import' → logprob: -6.532948970794678
    7. ':' → logprob: -6.657948970794678
    8. ' +' → logprob: -7.282948970794678
    9. ' =' → logprob: -7.407948970794678
    10. ',' → logprob: -7.907948970794678

Token 2680: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00948464684188366
    2. '#' (adapté à ' #') → logprob: -6.009484767913818
    3. 'def' → logprob: -6.134484767913818
    4. ')' → logprob: -6.134484767913818
    5. 'import' → logprob: -7.384484767913818
    6. '(n' → logprob: -7.384484767913818
    7. '    
' → logprob: -8.38448429107666
    8. ':' → logprob: -8.88448429107666
    9. '       ' → logprob: -9.13448429107666
    10. 'n' → logprob: -9.25948429107666

Token 2681: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10146836191415787
    2. 'def' → logprob: -4.101468563079834
    3. '\n' → logprob: -4.226468563079834
    4. ')' → logprob: -4.351468563079834
    5. 'n' → logprob: -4.601468563079834
    6. '(n' → logprob: -4.726468563079834
    7. '
' → logprob: -4.976468563079834
    8. ':' → logprob: -5.226468563079834
    9. '"' → logprob: -5.726468563079834
    10. '\' → logprob: -5.976468563079834

Token 2682: ' que' (ID: 661)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.032888013869524
    2. 'k' → logprob: -4.657887935638428
    3. 'def' → logprob: -5.157887935638428
    4. '   ' → logprob: -5.282887935638428
    5. '
' → logprob: -5.782887935638428
    6. ' #' → logprob: -5.782887935638428
    7. '#
' → logprob: -6.157887935638428
    8. 'n' → logprob: -7.157887935638428
    9. ' k' → logprob: -7.532887935638428
    10. 'x' → logprob: -8.157888412475586

Token 2683: ' x' (ID: 1215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6009387373924255
    2. 'def' → logprob: -2.2259387969970703
    3. '#' → logprob: -2.3509387969970703
    4. 'x' → logprob: -2.8509387969970703
    5. ' k' → logprob: -3.1009387969970703
    6. 'const' → logprob: -3.4759387969970703
    7. 'n' → logprob: -3.6009387969970703
    8. 'c' → logprob: -4.22593879699707
    9. '   ' → logprob: -4.60093879699707
    10. ' (' → logprob: -4.72593879699707

Token 2684: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6942977905273438
    2. '=' → logprob: -1.4442977905273438
    3. ')' → logprob: -2.5692977905273438
    4. ' =' → logprob: -2.8192977905273438
    5. '#' → logprob: -3.8192977905273438
    6. '+' → logprob: -4.319297790527344
    7. '_i' → logprob: -4.819297790527344
    8. '```' → logprob: -4.819297790527344
    9. '[' → logprob: -4.944297790527344
    10. '_co' → logprob: -5.319297790527344

Token 2685: ' somme' (ID: 64484)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6758490800857544
    2. 'sum' → logprob: -1.6758490800857544
    3. 'k' → logprob: -2.425848960876465
    4. ' ' → logprob: -2.800848960876465
    5. ' sum' → logprob: -2.925848960876465
    6. ' k' → logprob: -4.175848960876465
    7. ' (' → logprob: -4.175848960876465
    8. 'c' → logprob: -4.300848960876465
    9. 'len' → logprob: -4.425848960876465
    10. ' len' → logprob: -5.425848960876465

Token 2686: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4229517877101898
    2. '_j' → logprob: -1.2979518175125122
    3. '=' → logprob: -3.2979516983032227
    4. '```' → logprob: -5.172951698303223
    5. ' =' → logprob: -5.422951698303223
    6. ')' → logprob: -5.547951698303223
    7. 'des' → logprob: -6.172951698303223
    8. ' _' → logprob: -6.297951698303223
    9. '_of' → logprob: -6.422951698303223
    10. 'of' → logprob: -6.547951698303223

Token 2687: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5177508592605591
    2. '_j' → logprob: -1.142750859260559
    3. ')' → logprob: -2.8927507400512695
    4. 'j' → logprob: -4.0177507400512695
    5. '#' → logprob: -6.6427507400512695
    6. '```' → logprob: -6.8927507400512695
    7. '(' → logprob: -7.3927507400512695
    8. ' _' → logprob: -7.3927507400512695
    9. 'segments' → logprob: -7.6427507400512695
    10. '_i' → logprob: -7.6427507400512695

Token 2688: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14971964061260223
    2. '_used' → logprob: -2.649719715118408
    3. 's' → logprob: -3.774719715118408
    4. '[' → logprob: -4.274719715118408
    5. '[
' → logprob: -4.774719715118408
    6. '```' → logprob: -5.399719715118408
    7. '[i' → logprob: -5.524719715118408
    8. ']' → logprob: -6.149719715118408
    9. '_i' → logprob: -6.524719715118408
    10. '_util' → logprob: -6.649719715118408

Token 2689: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9001831412315369
    2. 'és' → logprob: -1.7751832008361816
    3. 'ed' → logprob: -1.9001832008361816
    4. 'éd' → logprob: -2.6501832008361816
    5. '_cut' → logprob: -2.6501832008361816
    6. 'es' → logprob: -3.2751832008361816
    7. 'ées' → logprob: -3.5251832008361816
    8. '_' → logprob: -3.7751832008361816
    9. '_i' → logprob: -4.400183200836182
    10. 'étés' → logprob: -5.525183200836182

Token 2690: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6598007082939148
    2. '[i' → logprob: -2.1598007678985596
    3. '```' → logprob: -2.4098007678985596
    4. ']' → logprob: -3.2848007678985596
    5. '[
' → logprob: -3.4098007678985596
    6. ')' → logprob: -3.4098007678985596
    7. 'def' → logprob: -3.5348007678985596
    8. '[' → logprob: -4.2848005294799805
    9. '_' → logprob: -4.6598005294799805
    10. ':' → logprob: -4.6598005294799805

Token 2691: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07229028642177582
    2. 'def' → logprob: -4.072290420532227
    3. ')' → logprob: -4.322290420532227
    4. '
' → logprob: -5.197290420532227
    5. ')
' → logprob: -5.322290420532227
    6. ']' → logprob: -5.697290420532227
    7. ':' → logprob: -5.822290420532227
    8. '```' → logprob: -6.322290420532227
    9. '):' → logprob: -6.572290420532227
    10. '_' → logprob: -6.697290420532227

Token 2692: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03138294443488121
    2. 'def' → logprob: -4.656383037567139
    3. '_j' → logprob: -5.281383037567139
    4. ')' → logprob: -5.906383037567139
    5. ']' → logprob: -6.031383037567139
    6. 'j' → logprob: -6.031383037567139
    7. '_' → logprob: -6.531383037567139
    8. ':' → logprob: -7.031383037567139
    9. '    
' → logprob: -7.531383037567139
    10. ' =' → logprob: -7.781383037567139

Token 2693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021258696913719177
    2. 'def' → logprob: -5.39625883102417
    3. ')' → logprob: -5.77125883102417
    4. '
' → logprob: -6.14625883102417
    5. ':' → logprob: -6.52125883102417
    6. '```' → logprob: -6.52125883102417
    7. '[
' → logprob: -6.52125883102417
    8. ')
' → logprob: -7.27125883102417
    9. '"' → logprob: -7.27125883102417
    10. '\n' → logprob: -7.39625883102417

Token 2694: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02520134672522545
    2. 'n' → logprob: -4.775201320648193
    3. 'j' → logprob: -5.275201320648193
    4. 'def' → logprob: -5.275201320648193
    5. ')' → logprob: -6.275201320648193
    6. '    
' → logprob: -7.150201320648193
    7. '
' → logprob: -7.650201320648193
    8. '"' → logprob: -7.775201320648193
    9. '```' → logprob: -8.150201797485352
    10. '#' (adapté à ' #') → logprob: -8.400201797485352

Token 2695: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14905661344528198
    2. 'n' → logprob: -2.2740566730499268
    3. 'def' → logprob: -4.149056434631348
    4. '#' → logprob: -5.274056434631348
    5. 'total' → logprob: -5.774056434631348
    6. 'j' → logprob: -6.149056434631348
    7. ')' → logprob: -6.399056434631348
    8. '
' → logprob: -6.774056434631348
    9. ')
' → logprob: -6.774056434631348
    10. 'sum' → logprob: -6.899056434631348

Token 2696: ' sugg' (ID: 6014)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7973017692565918
    2. ' =' → logprob: -1.5473017692565918
    3. '#' → logprob: -1.6723017692565918
    4. 'def' → logprob: -3.047301769256592
    5. '   ' → logprob: -3.172301769256592
    6. '
' → logprob: -4.422301769256592
    7. 'continue' → logprob: -5.172301769256592
    8. 'import' → logprob: -5.422301769256592
    9. '=
' → logprob: -5.422301769256592
    10. '#
' → logprob: -5.922301769256592

Token 2697: 'ère' (ID: 4346)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39859384298324585
    2. ')' → logprob: -2.0235939025878906
    3. ' =' → logprob: -2.2735939025878906
    4. 'e' → logprob: -4.273593902587891
    5. '=
' → logprob: -4.273593902587891
    6. ')
' → logprob: -4.648593902587891
    7. 'def' → logprob: -5.023593902587891
    8. '#' → logprob: -5.398593902587891
    9. 'érer' → logprob: -5.648593902587891
    10. 'es' → logprob: -5.773593902587891

Token 2698: ' que' (ID: 661)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.551319420337677
    2. '#' → logprob: -1.9263193607330322
    3. 'une' → logprob: -2.6763193607330322
    4. 'd' → logprob: -2.9263193607330322
    5. '   ' → logprob: -3.0513193607330322
    6. ' que' → logprob: -3.8013193607330322
    7. 'import' → logprob: -4.051319599151611
    8. ' de' → logprob: -4.176319599151611
    9. 'de' → logprob: -4.551319599151611
    10. ' d' → logprob: -4.801319599151611

Token 2699: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18347659707069397
    2. 'la' → logprob: -2.308476686477661
    3. 'le' → logprob: -3.058476686477661
    4. 'l' → logprob: -4.808476448059082
    5. ' la' → logprob: -6.183476448059082
    6. 'les' → logprob: -6.183476448059082
    7. 'on' → logprob: -6.433476448059082
    8. 'c' → logprob: -6.808476448059082
    9. ' #' → logprob: -6.933476448059082
    10. 'pour' → logprob: -7.308476448059082

Token 2700: ' réduire' (ID: 78295)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6083008646965027
    2. 'c' → logprob: -0.9833008646965027
    3. 'x' → logprob: -3.9833009243011475
    4. 'k' → logprob: -4.233300685882568
    5. 'j' → logprob: -4.858300685882568
    6. 'la' → logprob: -4.983300685882568
    7. 'les' → logprob: -5.483300685882568
    8. ' c' → logprob: -5.608300685882568
    9. '_' → logprob: -5.733300685882568
    10. ' i' → logprob: -5.983300685882568

Token 2701: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.3996727466583252
    2. 'x' → logprob: -1.8996727466583252
    3. 'c' → logprob: -2.024672746658325
    4. ' (' → logprob: -2.899672746658325
    5. '_' → logprob: -2.899672746658325
    6. 'le' → logprob: -3.274672746658325
    7. 'les' → logprob: -3.524672746658325
    8. 'n' → logprob: -3.649672746658325
    9. ' la' → logprob: -3.649672746658325
    10. 'k' → logprob: -3.899672746658325

Token 2702: ' salaire' (ID: 135427)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5437987446784973
    2. 'def' → logprob: -2.0437986850738525
    3. 'const' → logprob: -3.2937986850738525
    4. ')' → logprob: -3.6687986850738525
    5. '(n' → logprob: -3.6687986850738525
    6. 'sum' → logprob: -3.7937986850738525
    7. 'i' → logprob: -3.7937986850738525
    8. 'c' → logprob: -3.9187986850738525
    9. '
' → logprob: -3.9187986850738525
    10. 'j' → logprob: -4.043798923492432

Token 2703: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3497666120529175
    2. ' =' → logprob: -1.3497666120529175
    3. '   ' → logprob: -1.7247666120529175
    4. 'def' → logprob: -2.099766731262207
    5. '#' → logprob: -2.599766731262207
    6. ',' → logprob: -2.974766731262207
    7. '_' → logprob: -4.099766731262207
    8. ' *' → logprob: -5.099766731262207
    9. ')' → logprob: -5.349766731262207
    10. '_max' → logprob: -5.599766731262207

Token 2704: ' il' (ID: 1793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2919946908950806
    2. '   ' → logprob: -1.5419946908950806
    3. '#' → logprob: -2.166994571685791
    4. '_' → logprob: -2.541994571685791
    5. ' ' → logprob: -2.666994571685791
    6. ' #' → logprob: -3.291994571685791
    7. ' on' → logprob: -3.541994571685791
    8. 'x' → logprob: -3.666994571685791
    9. ' x' → logprob: -3.666994571685791
    10. ' ' → logprob: -3.791994571685791

Token 2705: ' faut' (ID: 17821)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04566866159439087
    2. ' faut' → logprob: -3.420668601989746
    3. '#' → logprob: -5.545668601989746
    4. '=' → logprob: -6.295668601989746
    5. 'fa' → logprob: -6.545668601989746
    6. 'fall' → logprob: -6.795668601989746
    7. '_f' → logprob: -6.920668601989746
    8. ' faudra' → logprob: -7.795668601989746
    9. '_' → logprob: -8.045668601989746
    10. 'n' → logprob: -8.045668601989746

Token 2706: ' éviter' (ID: 64013)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4638885259628296
    2. 'cho' → logprob: -1.4638885259628296
    3. 'contin' → logprob: -2.088888645172119
    4. 'sup' → logprob: -2.713888645172119
    5. 'faire' → logprob: -2.838888645172119
    6. 'cou' → logprob: -2.963888645172119
    7. ' choisir' → logprob: -3.463888645172119
    8. 'max' → logprob: -3.463888645172119
    9. 'aj' → logprob: -3.713888645172119
    10. 'c' → logprob: -3.838888645172119

Token 2707: ' trop' (ID: 14765)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.8328037261962891
    2. 'util' → logprob: -2.207803726196289
    3. 'de' → logprob: -2.832803726196289
    4. ' couper' → logprob: -2.957803726196289
    5. 'les' → logprob: -3.082803726196289
    6. 'cho' → logprob: -3.207803726196289
    7. 'd' → logprob: -3.207803726196289
    8. 'c' → logprob: -3.707803726196289
    9. 'cut' → logprob: -3.832803726196289
    10. 'faire' → logprob: -3.957803726196289

Token 2708: ' de' (ID: 334)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.5577387809753418
    2. '_' → logprob: -1.9327387809753418
    3. '_c' → logprob: -2.432738780975342
    4. 'de' → logprob: -3.182738780975342
    5. 'c' → logprob: -3.807738780975342
    6. 'cut' → logprob: -3.932738780975342
    7. 'util' → logprob: -4.182738780975342
    8. '```' → logprob: -4.182738780975342
    9. 'import' → logprob: -4.557738780975342
    10. 'long' → logprob: -4.807738780975342

Token 2709: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1259433478116989
    2. 'cou' → logprob: -2.750943422317505
    3. 'j' → logprob: -4.625943183898926
    4. ' coup' → logprob: -5.000943183898926
    5. 'cuts' → logprob: -5.250943183898926
    6. '```' → logprob: -5.500943183898926
    7. ' ' → logprob: -5.750943183898926
    8. '\' → logprob: -5.875943183898926
    9. '\n' → logprob: -6.000943183898926
    10. 'd' → logprob: -6.125943183898926

Token 2710: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0112149715423584
    2. 's' → logprob: -1.0112149715423584
    3. 'u' → logprob: -3.3862149715423584
    4. '   ' → logprob: -3.8862149715423584
    5. 'ure' → logprob: -4.0112152099609375
    6. ')' → logprob: -4.0112152099609375
    7. 'ures' → logprob: -4.1362152099609375
    8. 'er' → logprob: -4.2612152099609375
    9. 'utions' → logprob: -4.3862152099609375
    10. 'cuts' → logprob: -4.3862152099609375

Token 2711: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1193859875202179
    2. ':' → logprob: -3.7443859577178955
    3. ')' → logprob: -3.9943859577178955
    4. ',' → logprob: -4.244386196136475
    5. 'def' → logprob: -4.369386196136475
    6. '(n' → logprob: -4.619386196136475
    7. '(
' → logprob: -4.994386196136475
    8. '(' → logprob: -5.494386196136475
    9. ']' → logprob: -5.619386196136475
    10. '_' → logprob: -6.119386196136475

Token 2712: ' joints' (ID: 47223)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.539145827293396
    2. ' des' → logprob: -2.1641459465026855
    3. 'des' → logprob: -2.5391459465026855
    4. 'def' → logprob: -2.5391459465026855
    5. ' trop' → logprob: -2.6641459465026855
    6. '```' → logprob: -2.6641459465026855
    7. 'une' → logprob: -2.7891459465026855
    8. 'un' → logprob: -2.7891459465026855
    9. 't' → logprob: -3.0391459465026855
    10. ' #' → logprob: -3.2891459465026855

Token 2713: ' longs' (ID: 102836)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19943229854106903
    2. '_used' → logprob: -2.574432373046875
    3. '```' → logprob: -3.324432373046875
    4. '[' → logprob: -3.824432373046875
    5. ' =' → logprob: -4.949432373046875
    6. '=' → logprob: -4.949432373046875
    7. 's' → logprob: -4.949432373046875
    8. ']' → logprob: -5.324432373046875
    9. '[
' → logprob: -5.324432373046875
    10. '[i' → logprob: -5.949432373046875

Token 2714: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14285796880722046
    2. ':' → logprob: -3.8928580284118652
    3. 'def' → logprob: -4.517858028411865
    4. ')' → logprob: -4.642858028411865
    5. ']' → logprob: -4.892858028411865
    6. ',' → logprob: -5.017858028411865
    7. '[
' → logprob: -5.017858028411865
    8. 'n' → logprob: -5.142858028411865
    9. ':
' → logprob: -5.142858028411865
    10. 's' → logprob: -5.142858028411865

Token 2715: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01312552485615015
    2. 'def' → logprob: -4.888125419616699
    3. ')' → logprob: -6.763125419616699
    4. 'import' → logprob: -7.138125419616699
    5. 'n' → logprob: -7.388125419616699
    6. '```' → logprob: -7.388125419616699
    7. '    
' → logprob: -7.513125419616699
    8. ')
' → logprob: -8.2631254196167
    9. ']' → logprob: -8.5131254196167
    10. 'j' → logprob: -8.6381254196167

Token 2716: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034121328499168158
    2. ')' → logprob: -6.503412246704102
    3. 'def' → logprob: -7.253412246704102
    4. 'j' → logprob: -8.378412246704102
    5. '    
' → logprob: -8.753412246704102
    6. 'import' → logprob: -9.503412246704102
    7. '
' → logprob: -9.503412246704102
    8. 'n' → logprob: -9.503412246704102
    9. '```' → logprob: -9.628412246704102
    10. ')
' → logprob: -10.003412246704102

Token 2717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004525415599346161
    2. 'j' → logprob: -6.629525184631348
    3. '    
' → logprob: -7.129525184631348
    4. '"' → logprob: -7.504525184631348
    5. 'def' → logprob: -7.504525184631348
    6. ')' → logprob: -8.004525184631348
    7. '
' → logprob: -8.754525184631348
    8. '```' → logprob: -8.879525184631348
    9. 'n' → logprob: -9.254525184631348
    10. '       ' → logprob: -9.254525184631348

Token 2718: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007638567127287388
    2. 'n' → logprob: -5.507638454437256
    3. 'def' → logprob: -7.007638454437256
    4. 'j' → logprob: -7.007638454437256
    5. '    
' → logprob: -7.257638454437256
    6. '
' → logprob: -8.382638931274414
    7. '```' → logprob: -8.757638931274414
    8. 'p' → logprob: -8.882638931274414
    9. 'length' → logprob: -9.507638931274414
    10. ')' → logprob: -9.632638931274414

Token 2719: ' Or' (ID: 2604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15523691475391388
    2. 'n' → logprob: -2.0302369594573975
    3. 'def' → logprob: -5.155236721038818
    4. 'j' → logprob: -5.905236721038818
    5. 'p' → logprob: -6.780236721038818
    6. '#' → logprob: -7.155236721038818
    7. '    
' → logprob: -7.155236721038818
    8. '```' → logprob: -7.905236721038818
    9. '
' → logprob: -8.905237197875977
    10. 'length' → logprob: -9.280237197875977

Token 2720: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6362585425376892
    2. 'def' → logprob: -1.886258602142334
    3. '#' → logprob: -2.511258602142334
    4. 'n' → logprob: -2.636258602142334
    5. ' n' → logprob: -3.011258602142334
    6. '(
' → logprob: -4.011258602142334
    7. '
' → logprob: -4.136258602142334
    8. ')' → logprob: -4.136258602142334
    9. '(n' → logprob: -4.511258602142334
    10. 'import' → logprob: -5.386258602142334

Token 2721: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2285427749156952
    2. 'n' → logprob: -2.1035428047180176
    3. ' n' → logprob: -3.3535428047180176
    4. 'j' → logprob: -4.103542804718018
    5. ')' → logprob: -4.853542804718018
    6. 'def' → logprob: -5.603542804718018
    7. '#' → logprob: -5.853542804718018
    8. ' ' → logprob: -5.978542804718018
    9. '    
' → logprob: -6.853542804718018
    10. '\' → logprob: -7.103542804718018

Token 2722: ' on' (ID: 402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8665130734443665
    2. ' n' → logprob: -1.1165130138397217
    3. ' len' → logprob: -2.6165130138397217
    4. 'len' → logprob: -3.4915130138397217
    5. 'j' → logprob: -3.9915130138397217
    6. 'c' → logprob: -4.116513252258301
    7. ' c' → logprob: -4.241513252258301
    8. '   ' → logprob: -4.491513252258301
    9. ' j' → logprob: -4.491513252258301
    10. '(n' → logprob: -4.616513252258301

Token 2723: ' chois' (ID: 33475)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.468226820230484
    2. 'contin' → logprob: -1.7182267904281616
    3. 'n' → logprob: -2.343226909637451
    4. '_' → logprob: -4.468226909637451
    5. ' continue' → logprob: -4.468226909637451
    6. 'def' → logprob: -4.593226909637451
    7. '#' → logprob: -4.968226909637451
    8. 'cho' → logprob: -5.218226909637451
    9. 'cons' → logprob: -5.343226909637451
    10. ' n' → logprob: -5.468226909637451

Token 2724: 'it' (ID: 278)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5356026291847229
    2. '_' → logprob: -1.9106025695800781
    3. ' =' → logprob: -2.285602569580078
    4. ''' → logprob: -2.785602569580078
    5. '[' → logprob: -4.410602569580078
    6. ' ==' → logprob: -4.535602569580078
    7. ')' → logprob: -4.660602569580078
    8. 'def' → logprob: -4.660602569580078
    9. '"' → logprob: -5.035602569580078
    10. '[i' → logprob: -5.410602569580078

Token 2725: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.577941656112671
    2. '_' → logprob: -2.202941656112671
    3. 'n' → logprob: -2.202941656112671
    4. '(n' → logprob: -2.327941656112671
    5. '```' → logprob: -2.827941656112671
    6. ''' → logprob: -2.952941656112671
    7. '"' → logprob: -3.327941656112671
    8. 'une' → logprob: -3.327941656112671
    9. ' n' → logprob: -3.452941656112671
    10. '(
' → logprob: -3.702941656112671

Token 2726: ' coup' (ID: 25465)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1305545568466187
    2. '_' → logprob: -1.5055545568466187
    3. '#' → logprob: -2.380554676055908
    4. 'j' → logprob: -2.505554676055908
    5. '_j' → logprob: -3.255554676055908
    6. ']' → logprob: -3.630554676055908
    7. '[
' → logprob: -3.630554676055908
    8. '+' → logprob: -3.880554676055908
    9. 'c' → logprob: -3.880554676055908
    10. '=' → logprob: -4.130554676055908

Token 2727: 'ures' (ID: 1609)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.6671589016914368
    2. '[i' → logprob: -1.542158842086792
    3. ']' → logprob: -2.542158842086792
    4. '   ' → logprob: -3.542158842086792
    5. '[' → logprob: -3.667158842086792
    6. 's' → logprob: -4.167159080505371
    7. '[]' → logprob: -4.292159080505371
    8. 'def' → logprob: -4.292159080505371
    9. 'ions' → logprob: -4.292159080505371
    10. '=' → logprob: -4.292159080505371

Token 2728: ' aux' (ID: 5850)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11518064141273499
    2. '=' → logprob: -3.115180730819702
    3. '[' → logprob: -3.865180730819702
    4. '[i' → logprob: -4.740180492401123
    5. ' =' → logprob: -4.740180492401123
    6. '```' → logprob: -4.740180492401123
    7. ',' → logprob: -5.365180492401123
    8. ' _' → logprob: -6.240180492401123
    9. '   ' → logprob: -6.740180492401123
    10. ':' → logprob: -6.865180492401123

Token 2729: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.319298505783081
    2. ']' → logprob: -1.694298505783081
    3. 'indices' → logprob: -2.319298505783081
    4. ' ' → logprob: -3.069298505783081
    5. 'i' → logprob: -3.319298505783081
    6. ' indices' → logprob: -3.444298505783081
    7. '[' → logprob: -3.569298505783081
    8. 'positions' → logprob: -3.819298505783081
    9. '#' → logprob: -3.944298505783081
    10. ' _' → logprob: -4.06929874420166

Token 2730: ' qui' (ID: 2780)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6564604640007019
    2. '```' → logprob: -1.4064605236053467
    3. '[' → logprob: -1.9064605236053467
    4. '_' → logprob: -3.7814605236053467
    5. '[
' → logprob: -3.9064605236053467
    6. '_util' → logprob: -4.781460285186768
    7. '`' → logprob: -4.906460285186768
    8. ' [' → logprob: -5.531460285186768
    9. '#' → logprob: -5.781460285186768
    10. '\[' → logprob: -6.156460285186768

Token 2731: ' maxim' (ID: 29045)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6299822926521301
    2. '[' → logprob: -1.6299822330474854
    3. '[i' → logprob: -2.5049822330474854
    4. ' est' → logprob: -3.1299822330474854
    5. '.' → logprob: -4.0049824714660645
    6. 's' → logprob: -4.0049824714660645
    7. ' n' → logprob: -4.1299824714660645
    8. '```' → logprob: -4.2549824714660645
    9. '[n' → logprob: -4.6299824714660645
    10. '#' → logprob: -5.1299824714660645

Token 2732: 'isent' (ID: 68781)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'als' → logprob: -1.935856580734253
    2. '```' → logprob: -1.935856580734253
    3. 'à' → logprob: -2.310856580734253
    4. 'é' → logprob: -2.560856580734253
    5. 'ales' → logprob: -3.060856580734253
    6. '   ' → logprob: -3.060856580734253
    7. 'aux' → logprob: -3.310856580734253
    8. 'import' → logprob: -3.435856580734253
    9. 'i' → logprob: -3.560856580734253
    10. '[i' → logprob: -3.685856580734253

Token 2733: ' le' (ID: 505)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.3011984825134277
    2. ' la' → logprob: -1.5511984825134277
    3. '_' → logprob: -1.6761984825134277
    4. ' leur' → logprob: -2.0511984825134277
    5. ' le' → logprob: -3.4261984825134277
    6. 'leur' → logprob: -3.5511984825134277
    7. 'le' → logprob: -3.8011984825134277
    8. 'la' → logprob: -4.301198482513428
    9. ' l' → logprob: -4.301198482513428
    10. '_j' → logprob: -4.676198482513428

Token 2734: ' terme' (ID: 42959)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7469998598098755
    2. '+' → logprob: -1.2469998598098755
    3. '-' → logprob: -2.996999740600586
    4. ''' → logprob: -3.246999740600586
    5. '=' → logprob: -3.496999740600586
    6. '*' → logprob: -4.496999740600586
    7. ' +' → logprob: -4.621999740600586
    8. ')' → logprob: -4.621999740600586
    9. '`' → logprob: -4.621999740600586
    10. 'max' → logprob: -5.246999740600586

Token 2735: ' -' (ID: 533)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.66118323802948
    2. '```' → logprob: -2.0361833572387695
    3. ' _' → logprob: -2.6611833572387695
    4. '`' → logprob: -2.9111833572387695
    5. '[i' → logprob: -3.2861833572387695
    6. ''' → logprob: -3.7861833572387695
    7. ' suivant' → logprob: -3.9111833572387695
    8. '+' → logprob: -4.1611833572387695
    9. ' de' → logprob: -4.4111833572387695
    10. '_i' → logprob: -4.7861833572387695

Token 2736: 'k' (ID: 74)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17002110183238983
    2. ')' → logprob: -2.4200210571289062
    3. 'j' → logprob: -3.1700210571289062
    4. ' ' → logprob: -5.795021057128906
    5. ' ' → logprob: -5.795021057128906
    6. '```' → logprob: -5.920021057128906
    7. ' j' → logprob: -6.295021057128906
    8. '`' → logprob: -6.420021057128906
    9. '=' → logprob: -6.670021057128906
    10. '+' → logprob: -6.920021057128906

Token 2737: '*x' (ID: 46987)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6891942024230957
    2. '*' → logprob: -1.9391942024230957
    3. '[' → logprob: -2.3141942024230957
    4. ' *' → logprob: -2.6891942024230957
    5. '_' → logprob: -2.8141942024230957
    6. '+' → logprob: -3.4391942024230957
    7. ')' → logprob: -3.6891942024230957
    8. '#' → logprob: -4.314194202423096
    9. '_i' → logprob: -4.689194202423096
    10. ' _' → logprob: -5.439194202423096

Token 2738: ',
' (ID: 412)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06609111279249191
    2. ')' → logprob: -3.6910910606384277
    3. '[' → logprob: -3.6910910606384277
    4. ']' → logprob: -5.691091060638428
    5. '[
' → logprob: -6.441091060638428
    6. '   ' → logprob: -6.691091060638428
    7. '_
' → logprob: -6.816091060638428
    8. '=' → logprob: -6.816091060638428
    9. '+' → logprob: -7.316091060638428
    10. ' _' → logprob: -7.316091060638428

Token 2739: '   ' (ID: 271)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6521053314208984
    2. '   ' → logprob: -1.9021053314208984
    3. ')' → logprob: -2.5271053314208984
    4. '#' → logprob: -2.9021053314208984
    5. '```' → logprob: -3.2771053314208984
    6. '[' → logprob: -3.6521053314208984
    7. '_' → logprob: -3.7771053314208984
    8. ':' → logprob: -4.027105331420898
    9. 'def' → logprob: -4.152105331420898
    10. '[
' → logprob: -4.777105331420898

Token 2740: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0353082418441772
    2. '[i' → logprob: -1.2853082418441772
    3. ')' → logprob: -2.035308361053467
    4. '[' → logprob: -2.910308361053467
    5. '   ' → logprob: -3.035308361053467
    6. '_' → logprob: -3.160308361053467
    7. '=' → logprob: -4.410308361053467
    8. '[
' → logprob: -4.785308361053467
    9. ' #' → logprob: -4.910308361053467
    10. '+' → logprob: -5.035308361053467

Token 2741: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5486333966255188
    2. '#' → logprob: -1.673633337020874
    3. ')' → logprob: -2.548633337020874
    4. '[' → logprob: -3.173633337020874
    5. '[i' → logprob: -3.673633337020874
    6. '=' → logprob: -4.423633575439453
    7. '*' → logprob: -4.548633575439453
    8. ''' → logprob: -4.798633575439453
    9. '"' → logprob: -5.423633575439453
    10. ',' → logprob: -5.423633575439453

Token 2742: ' fonction' (ID: 17610)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9761431813240051
    2. '#' → logprob: -1.2261431217193604
    3. ')' → logprob: -1.8511431217193604
    4. '=' → logprob: -3.1011431217193604
    5. '+' → logprob: -3.6011431217193604
    6. ' ' → logprob: -4.1011433601379395
    7. '*' → logprob: -4.6011433601379395
    8. ''' → logprob: -5.1011433601379395
    9. ',' → logprob: -5.2261433601379395
    10. ' )' → logprob: -5.2261433601379395

Token 2743: ' globale' (ID: 87991)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7204758524894714
    2. '=' → logprob: -0.9704758524894714
    3. ' =' → logprob: -3.345475912094116
    4. ')' → logprob: -3.470475912094116
    5. '+' → logprob: -4.720475673675537
    6. '#' → logprob: -4.720475673675537
    7. '(' → logprob: -4.970475673675537
    8. ''' → logprob: -5.595475673675537
    9. ' _' → logprob: -5.720475673675537
    10. '   ' → logprob: -5.970475673675537

Token 2744: ' sera' (ID: 15511)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5935935974121094
    2. '=' → logprob: -1.5935935974121094
    3. ')' → logprob: -1.9685935974121094
    4. ' =' → logprob: -4.218593597412109
    5. ':' → logprob: -4.468593597412109
    6. '   ' → logprob: -4.593593597412109
    7. '#' → logprob: -4.718593597412109
    8. '(' → logprob: -5.093593597412109
    9. '+' → logprob: -5.093593597412109
    10. ' ' → logprob: -5.093593597412109

Token 2745: ' maxim' (ID: 29045)
  Prédit: ' maxim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maxim' → logprob: -0.39554363489151
    2. 'max' → logprob: -2.5205435752868652
    3. ' max' → logprob: -3.1455435752868652
    4. ')' → logprob: -3.3955435752868652
    5. ' optim' → logprob: -3.3955435752868652
    6. ' maximale' → logprob: -3.6455435752868652
    7. ' optimale' → logprob: -3.7705435752868652
    8. '_max' → logprob: -3.8955435752868652
    9. '_' → logprob: -4.145543575286865
    10. 'optim' → logprob: -4.770543575286865

Token 2746: 'isée' (ID: 59331)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5024970769882202
    2. 'a' → logprob: -1.3774970769882202
    3. 'um' → logprob: -3.7524971961975098
    4. 'm' → logprob: -4.00249719619751
    5. 'ized' → logprob: -4.00249719619751
    6. 'é' → logprob: -4.25249719619751
    7. 'isée' → logprob: -4.25249719619751
    8. 'al' → logprob: -4.62749719619751
    9. 'ize' → logprob: -4.75249719619751
    10. '#' → logprob: -5.00249719619751

Token 2747: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12223707139492035
    2. ':' → logprob: -2.372236967086792
    3. '[' → logprob: -5.747237205505371
    4. ',' → logprob: -5.747237205505371
    5. ')' → logprob: -5.872237205505371
    6. '       ' → logprob: -6.497237205505371
    7. '):' → logprob: -6.747237205505371
    8. '_' → logprob: -6.872237205505371
    9. 'def' → logprob: -6.872237205505371
    10. '.' → logprob: -6.997237205505371

Token 2748: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00585152767598629
    2. ')' → logprob: -6.630851745605469
    3. 'def' → logprob: -6.755851745605469
    4. ':' → logprob: -7.005851745605469
    5. '    
' → logprob: -7.755851745605469
    6. 'j' → logprob: -7.880851745605469
    7. '
' → logprob: -8.130851745605469
    8. 'import' → logprob: -8.255851745605469
    9. '```' → logprob: -9.130851745605469
    10. '#' → logprob: -9.130851745605469

Token 2749: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02578890509903431
    2. 'def' → logprob: -5.0257887840271
    3. ':' → logprob: -5.4007887840271
    4. '_' → logprob: -5.4007887840271
    5. ')' → logprob: -5.6507887840271
    6. 'j' → logprob: -6.2757887840271
    7. '    ' → logprob: -7.6507887840271
    8. 'import' → logprob: -7.6507887840271
    9. '       ' → logprob: -7.7757887840271
    10. '[' → logprob: -7.9007887840271

Token 2750: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004753476474434137
    2. '"' → logprob: -7.129753589630127
    3. ')' → logprob: -7.129753589630127
    4. 'j' → logprob: -7.379753589630127
    5. ':' → logprob: -7.629753589630127
    6. 'def' → logprob: -8.129753112792969
    7. '[' → logprob: -8.629753112792969
    8. '       ' → logprob: -8.754753112792969
    9. 'n' → logprob: -8.879753112792969
    10. '    
' → logprob: -8.879753112792969

Token 2751: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025857683271169662
    2. 'j' → logprob: -4.150857448577881
    3. ')' → logprob: -5.900857448577881
    4. 'n' → logprob: -6.400857448577881
    5. 'def' → logprob: -6.900857448577881
    6. '_' → logprob: -7.025857448577881
    7. '"' → logprob: -7.275857448577881
    8. '       ' → logprob: -7.775857448577881
    9. ']' → logprob: -8.150857925415039
    10. '[' → logprob: -8.150857925415039

Token 2752: ' Final' (ID: 12625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017386987805366516
    2. 'n' → logprob: -4.7673869132995605
    3. 'j' → logprob: -5.8923869132995605
    4. 'def' → logprob: -6.5173869132995605
    5. '
' → logprob: -6.7673869132995605
    6. '    
' → logprob: -7.3923869132995605
    7. '\n' → logprob: -7.8923869132995605
    8. ')' → logprob: -8.017387390136719
    9. '(n' → logprob: -8.142387390136719
    10. '\' → logprob: -8.267387390136719

Token 2753: 'ement' (ID: 962)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02898487262427807
    2. '   ' → logprob: -4.653985023498535
    3. ')' → logprob: -5.153985023498535
    4. '\' → logprob: -6.153985023498535
    5. '_
' → logprob: -6.153985023498535
    6. 'def' → logprob: -6.653985023498535
    7. '```' → logprob: -7.028985023498535
    8. '#' → logprob: -7.028985023498535
    9. '(' → logprob: -7.153985023498535
    10. '"' → logprob: -7.278985023498535

Token 2754: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5540029406547546
    2. '   ' → logprob: -0.9290029406547546
    3. ':
' → logprob: -4.55400276184082
    4. 'def' → logprob: -4.67900276184082
    5. '):' → logprob: -6.05400276184082
    6. 'j' → logprob: -6.67900276184082
    7. 'n' → logprob: -7.17900276184082
    8. ',' → logprob: -7.42900276184082
    9. '```' → logprob: -7.55400276184082
    10. '#' → logprob: -7.80400276184082

Token 2755: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007851487956941128
    2. 'n' → logprob: -6.757851600646973
    3. ' n' → logprob: -6.882851600646973
    4. '       ' → logprob: -7.007851600646973
    5. '    
' → logprob: -7.257851600646973
    6. '
' → logprob: -7.257851600646973
    7. 'j' → logprob: -7.507851600646973
    8. '#' → logprob: -7.632851600646973
    9. ')' → logprob: -8.257851600646973
    10. ' #' → logprob: -8.257851600646973

Token 2756: ' solution' (ID: 7578)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6645543575286865
    2. 'n' → logprob: -0.9145543575286865
    3. '(n' → logprob: -4.164554595947266
    4. 'max' → logprob: -4.414554595947266
    5. '#' → logprob: -4.539554595947266
    6. ')' → logprob: -4.664554595947266
    7. '
' → logprob: -5.414554595947266
    8. '(
' → logprob: -5.414554595947266
    9. 's' → logprob: -5.789554595947266
    10. '_' → logprob: -5.789554595947266

Token 2757: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612829864025116
    2. ' =' → logprob: -1.2378299236297607
    3. 'def' → logprob: -2.8628299236297607
    4. ':' → logprob: -3.7378299236297607
    5. '_' → logprob: -3.8628299236297607
    6. '=' → logprob: -4.237829685211182
    7. '```' → logprob: -4.362829685211182
    8. '
' → logprob: -4.987829685211182
    9. 'import' → logprob: -4.987829685211182
    10. 's' → logprob: -5.112829685211182

Token 2758: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11294551193714142
    2. 'def' → logprob: -2.987945556640625
    3. '[]
' → logprob: -4.112945556640625
    4. '[]' → logprob: -4.612945556640625
    5. '```' → logprob: -4.737945556640625
    6. ':' → logprob: -5.237945556640625
    7. 'import' → logprob: -6.112945556640625
    8. 'sum' → logprob: -6.362945556640625
    9. '
' → logprob: -6.737945556640625
    10. ':
' → logprob: -6.737945556640625

Token 2759: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29565635323524475
    2. '   ' → logprob: -1.9206563234329224
    3. 'import' → logprob: -3.045656442642212
    4. '```' → logprob: -4.420656204223633
    5. 'continue' → logprob: -5.045656204223633
    6. '#' → logprob: -5.045656204223633
    7. 'pass' → logprob: -5.170656204223633
    8. 'return' → logprob: -5.295656204223633
    9. 'from' → logprob: -5.420656204223633
    10. '
' → logprob: -5.420656204223633

Token 2760: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032563015818595886
    2. 'def' → logprob: -3.7825629711151123
    3. '#' → logprob: -5.157563209533691
    4. '```' → logprob: -6.907563209533691
    5. 'import' → logprob: -7.532563209533691
    6. 'pass' → logprob: -8.282563209533691
    7. 'return' → logprob: -8.407563209533691
    8. 'from' → logprob: -8.407563209533691
    9. ' #' → logprob: -8.657563209533691
    10. ' def' → logprob: -8.657563209533691

Token 2761: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3257932960987091
    2. '#' → logprob: -1.5757932662963867
    3. 'def' → logprob: -2.9507932662963867
    4. 'sort' → logprob: -5.075793266296387
    5. '
' → logprob: -6.075793266296387
    6. '```' → logprob: -6.325793266296387
    7. 'import' → logprob: -6.700793266296387
    8. 'return' → logprob: -6.950793266296387
    9. 'pass' → logprob: -6.950793266296387
    10. 'n' → logprob: -7.200793266296387

Token 2762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061855968087911606
    2. '```' → logprob: -3.3118560314178467
    3. '#' → logprob: -3.8118560314178467
    4. '``' → logprob: -7.436855792999268
    5. 'def' → logprob: -7.936855792999268
    6. '
' → logprob: -8.811856269836426
    7. 'import' → logprob: -8.811856269836426
    8. 'for' → logprob: -10.686856269836426
    9. ' #' → logprob: -10.811856269836426
    10. '       ' → logprob: -10.936856269836426

Token 2763: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4317508041858673
    2. '   ' → logprob: -1.056750774383545
    3. 'tr' → logprob: -6.431750774383545
    4. 'def' → logprob: -8.306751251220703
    5. ' #' → logprob: -8.431751251220703
    6. '#
' → logprob: -8.681751251220703
    7. '```' → logprob: -9.181751251220703
    8. 'chercher' → logprob: -9.181751251220703
    9. '
' → logprob: -9.306751251220703
    10. 'for' → logprob: -9.556751251220703

Token 2764: ' Ét' (ID: 54156)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4333936870098114
    2. '#' → logprob: -1.3083937168121338
    3. 'max' → logprob: -4.308393478393555
    4. '```' → logprob: -4.683393478393555
    5. 'sum' → logprob: -4.808393478393555
    6. 'def' → logprob: -5.058393478393555
    7. 'choose' → logprob: -5.058393478393555
    8. 'cut' → logprob: -5.058393478393555
    9. 'sort' → logprob: -5.433393478393555
    10. 'for' → logprob: -5.808393478393555

Token 2765: 'udier' (ID: 151781)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.698799729347229
    2. 'def' → logprob: -1.823799729347229
    3. 'ape' → logprob: -2.1987996101379395
    4. 'rn' → logprob: -2.1987996101379395
    5. 'n' → logprob: -2.4487996101379395
    6. '   ' → logprob: -2.6987996101379395
    7. 'r' → logprob: -2.8237996101379395
    8. 'end' → logprob: -3.6987996101379395
    9. 'd' → logprob: -3.8237996101379395
    10. '#' → logprob: -3.8237996101379395

Token 2766: ' tous' (ID: 10688)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0170098543167114
    2. '   ' → logprob: -1.2670098543167114
    3. 'n' → logprob: -2.767009735107422
    4. '_' → logprob: -2.892009735107422
    5. '#' → logprob: -3.142009735107422
    6. 'def' → logprob: -3.517009735107422
    7. 'range' → logprob: -3.642009735107422
    8. 'j' → logprob: -3.767009735107422
    9. 'len' → logprob: -4.017009735107422
    10. '[]' → logprob: -4.267009735107422

Token 2767: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9393386244773865
    2. '_' → logprob: -1.1893386840820312
    3. '```' → logprob: -2.3143386840820312
    4. '_c' → logprob: -4.189338684082031
    5. ')' → logprob: -4.314338684082031
    6. ':' → logprob: -4.439338684082031
    7. 'segments' → logprob: -4.439338684082031
    8. '\' → logprob: -4.439338684082031
    9. '`' → logprob: -4.564338684082031
    10. '_j' → logprob: -4.814338684082031

Token 2768: ' cas' (ID: 2108)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.659580409526825
    2. 'j' → logprob: -2.4095804691314697
    3. '_j' → logprob: -2.4095804691314697
    4. 'c' → logprob: -2.9095804691314697
    5. '_c' → logprob: -3.1595804691314697
    6. ')' → logprob: -3.2845804691314697
    7. 'segments' → logprob: -3.4095804691314697
    8. 'i' → logprob: -3.5345804691314697
    9. 'cuts' → logprob: -4.534580230712891
    10. ']' → logprob: -4.784580230712891

Token 2769: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2998867332935333
    2. ':' → logprob: -1.549886703491211
    3. '[n' → logprob: -4.924886703491211
    4. '(n' → logprob: -5.049886703491211
    5. '```' → logprob: -5.049886703491211
    6. '[' → logprob: -5.424886703491211
    7. 'def' → logprob: -6.174886703491211
    8. '[i' → logprob: -6.174886703491211
    9. '[]' → logprob: -6.299886703491211
    10. 'n' → logprob: -6.299886703491211

Token 2770: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5981121063232422
    2. '   ' → logprob: -0.9731121063232422
    3. '```' → logprob: -3.348112106323242
    4. '[' → logprob: -5.348112106323242
    5. 'def' → logprob: -5.473112106323242
    6. ' :' → logprob: -5.973112106323242
    7. ',' → logprob: -5.973112106323242
    8. '(n' → logprob: -6.098112106323242
    9. '[n' → logprob: -6.223112106323242
    10. ')' → logprob: -6.348112106323242

Token 2771: ' k' (ID: 372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5698878169059753
    2. 'c' → logprob: -1.4448878765106201
    3. 'k' → logprob: -2.56988787651062
    4. 'j' → logprob: -3.44488787651062
    5. '```' → logprob: -3.81988787651062
    6. '(n' → logprob: -4.319887638092041
    7. ':' → logprob: -4.694887638092041
    8. 'la' → logprob: -5.444887638092041
    9. '   ' → logprob: -5.444887638092041
    10. '`' → logprob: -5.569887638092041

Token 2772: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10014822334051132
    2. '(n' → logprob: -3.3501482009887695
    3. ':' → logprob: -3.7251482009887695
    4. '
' → logprob: -4.9751482009887695
    5. '```' → logprob: -5.1001482009887695
    6. '(' → logprob: -6.1001482009887695
    7. 'def' → logprob: -6.1001482009887695
    8. '[n' → logprob: -6.3501482009887695
    9. '`' → logprob: -6.7251482009887695
    10. ' (' → logprob: -6.8501482009887695

Token 2773: ' nombre' (ID: 9733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44731345772743225
    2. '0' → logprob: -1.9473134279251099
    3. ' ' → logprob: -2.8223135471343994
    4. 'n' → logprob: -2.9473135471343994
    5. ' n' → logprob: -3.0723135471343994
    6. 'k' → logprob: -4.69731330871582
    7. '(n' → logprob: -4.69731330871582
    8. 'range' → logprob: -4.69731330871582
    9. 'c' → logprob: -5.07231330871582
    10. ' range' → logprob: -5.44731330871582

Token 2774: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49149566888809204
    2. '   ' → logprob: -1.9914956092834473
    3. '=' → logprob: -2.7414956092834473
    4. ' de' → logprob: -2.7414956092834473
    5. ')' → logprob: -3.6164956092834473
    6. 'de' → logprob: -4.241495609283447
    7. '_de' → logprob: -4.491495609283447
    8. '[' → logprob: -4.616495609283447
    9. 'def' → logprob: -4.616495609283447
    10. 'of' → logprob: -4.991495609283447

Token 2775: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.17319969832897186
    2. '_' → logprob: -2.9231996536254883
    3. 'segments' → logprob: -2.9231996536254883
    4. ' segments' → logprob: -3.0481996536254883
    5. ' _' → logprob: -6.173199653625488
    6. '_segment' → logprob: -6.923199653625488
    7. '_s' → logprob: -8.298199653625488
    8. ' ' → logprob: -8.673199653625488
    9. 'Segments' → logprob: -8.798199653625488
    10. 's' → logprob: -9.548199653625488

Token 2776: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08993828296661377
    2. '(n' → logprob: -3.089938163757324
    3. ':' → logprob: -4.464938163757324
    4. '(' → logprob: -5.089938163757324
    5. '(
' → logprob: -5.214938163757324
    6. ',' → logprob: -5.214938163757324
    7. '```' → logprob: -5.839938163757324
    8. 'n' → logprob: -6.964938163757324
    9. '_' → logprob: -7.089938163757324
    10. '[n' → logprob: -7.339938163757324

Token 2777: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45085373520851135
    2. 'n' → logprob: -1.950853705406189
    3. ' ' → logprob: -2.3258538246154785
    4. ' n' → logprob: -3.2008538246154785
    5. '0' → logprob: -3.4508538246154785
    6. 'range' → logprob: -3.7008538246154785
    7. ' range' → logprob: -5.0758538246154785
    8. 'i' → logprob: -5.4508538246154785
    9. 'c' → logprob: -5.5758538246154785
    10. 'k' → logprob: -6.0758538246154785

Token 2778: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35678061842918396
    2. '1' → logprob: -1.4817806482315063
    3. 'range' → logprob: -2.731780529022217
    4. 'i' → logprob: -5.731780529022217
    5. '[n' → logprob: -6.981780529022217
    6. 'list' → logprob: -7.481780529022217
    7. 'for' → logprob: -7.606780529022217
    8. ' n' → logprob: -7.856780529022217
    9. 'import' → logprob: -8.231781005859375
    10. 'from' → logprob: -8.356781005859375

Token 2779: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2319228649139404
    2. '   ' → logprob: -1.2319228649139404
    3. ',' → logprob: -1.4819228649139404
    4. '...' → logprob: -3.9819228649139404
    5. ')' → logprob: -4.1069231033325195
    6. ' <=' → logprob: -4.1069231033325195
    7. ' ' → logprob: -4.3569231033325195
    8. '=' → logprob: -4.4819231033325195
    9. ' :' → logprob: -4.6069231033325195
    10. '
' → logprob: -4.6069231033325195

Token 2780: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020234835392329842
    2. ' n' → logprob: -8.625202178955078
    3. '650' → logprob: -11.250202178955078
    4. '   ' → logprob: -11.750202178955078
    5. '	n' → logprob: -14.375202178955078
    6. '```' → logprob: -14.750202178955078
    7. '
' → logprob: -15.250202178955078
    8. '65' → logprob: -15.375202178955078
    9. '(n' → logprob: -16.250202178955078
    10. '`' → logprob: -16.500202178955078

Token 2781: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02364489622414112
    2. ':' → logprob: -4.898644924163818
    3. '```' → logprob: -5.648644924163818
    4. '
' → logprob: -6.523644924163818
    5. ',' → logprob: -6.523644924163818
    6. '_' → logprob: -6.648644924163818
    7. '(n' → logprob: -6.898644924163818
    8. '[n' → logprob: -6.898644924163818
    9. ':
' → logprob: -7.023644924163818
    10. '_n' → logprob: -7.023644924163818

Token 2782: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005093580111861229
    2. '    
' → logprob: -6.880093574523926
    3. ':' → logprob: -7.005093574523926
    4. 'n' → logprob: -7.380093574523926
    5. '
' → logprob: -7.380093574523926
    6. '```' → logprob: -7.755093574523926
    7. 'def' → logprob: -8.255093574523926
    8. '`' → logprob: -8.755093574523926
    9. '\' → logprob: -9.005093574523926
    10. '(n' → logprob: -9.130093574523926

Token 2783: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01872819848358631
    2. '```' → logprob: -5.268728256225586
    3. ':' → logprob: -5.518728256225586
    4. 'n' → logprob: -5.893728256225586
    5. '    
' → logprob: -6.518728256225586
    6. '\' → logprob: -7.268728256225586
    7. 'def' → logprob: -7.393728256225586
    8. '
' → logprob: -7.643728256225586
    9. '`' → logprob: -7.768728256225586
    10. '\n' → logprob: -7.893728256225586

Token 2784: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025860045570880175
    2. 'n' → logprob: -6.2525858879089355
    3. 'for' → logprob: -7.8775858879089355
    4. '
' → logprob: -9.127586364746094
    5. '```' → logprob: -9.127586364746094
    6. '    
' → logprob: -10.252586364746094
    7. '#' → logprob: -12.127586364746094
    8. '(n' → logprob: -12.627586364746094
    9. 'def' → logprob: -12.752586364746094
    10. ' for' → logprob: -13.002586364746094

Token 2785: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008571072481572628
    2. 'n' → logprob: -4.883571147918701
    3. '
' → logprob: -7.633571147918701
    4. '    
' → logprob: -8.258570671081543
    5. 'for' → logprob: -9.258570671081543
    6. '```' → logprob: -9.633570671081543
    7. '(n' → logprob: -11.383570671081543
    8. '#' (adapté à ' #') → logprob: -11.883570671081543
    9. '       ' → logprob: -12.008570671081543
    10. '`' → logprob: -12.008570671081543

Token 2786: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01725306548178196
    2. 'n' → logprob: -4.7672529220581055
    3. '```' → logprob: -5.2672529220581055
    4. '    
' → logprob: -7.1422529220581055
    5. '
' → logprob: -7.2672529220581055
    6. 'for' → logprob: -7.8922529220581055
    7. '\' → logprob: -8.392252922058105
    8. ':' → logprob: -8.392252922058105
    9. 'j' → logprob: -8.642252922058105
    10. '`' → logprob: -8.767252922058105

Token 2787: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.126537561416626
    2. ' k' → logprob: -1.376537561416626
    3. 'i' → logprob: -1.501537561416626
    4. 'k' → logprob: -1.876537561416626
    5. ' c' → logprob: -3.501537561416626
    6. 'c' → logprob: -4.501537322998047
    7. '   ' → logprob: -5.751537322998047
    8. ' n' → logprob: -7.376537322998047
    9. ' _' → logprob: -7.376537322998047
    10. ' j' → logprob: -7.626537322998047

Token 2788: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07178869843482971
    2. '   ' → logprob: -3.321788787841797
    3. 'c' → logprob: -3.571788787841797
    4. 'for' → logprob: -6.946788787841797
    5. 'i' → logprob: -7.696788787841797
    6. '`' → logprob: -7.821788787841797
    7. 'segment' → logprob: -7.946788787841797
    8. '(c' → logprob: -8.071788787841797
    9. '       ' → logprob: -8.321788787841797
    10. ':
' → logprob: -8.446788787841797

Token 2789: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9008376598358154
    2. ':' → logprob: -1.2758376598358154
    3. '_' → logprob: -2.4008376598358154
    4. ',' → logprob: -2.4008376598358154
    5. '=' → logprob: -3.5258376598358154
    6. ' =' → logprob: -3.7758376598358154
    7. ' :' → logprob: -4.1508378982543945
    8. ' (' → logprob: -4.9008378982543945
    9. '):' → logprob: -5.0258378982543945
    10. '[' → logprob: -5.1508378982543945

Token 2790: ' choisir' (ID: 47004)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7129738926887512
    2. ':' → logprob: -0.9629738926887512
    3. '       ' → logprob: -2.5879738330841064
    4. ':
' → logprob: -4.0879740715026855
    5. '    ' → logprob: -4.7129740715026855
    6. ' ' → logprob: -5.2129740715026855
    7. ' :' → logprob: -5.5879740715026855
    8. '   ' → logprob: -5.9629740715026855
    9. '#' → logprob: -6.0879740715026855
    10. 'j' → logprob: -6.5879740715026855

Token 2791: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0556817054748535
    2. '    ' → logprob: -2.0556817054748535
    3. ' c' → logprob: -2.5556817054748535
    4. 'c' → logprob: -2.8056817054748535
    5. ' (' → logprob: -2.9306817054748535
    6. ' k' → logprob: -3.1806817054748535
    7. ' ' → logprob: -3.3056817054748535
    8. ' j' → logprob: -3.4306817054748535
    9. ')' → logprob: -3.6806817054748535
    10. ':' → logprob: -3.8056817054748535

Token 2792: ' -' (ID: 533)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0538328886032104
    2. ' _' → logprob: -1.6788328886032104
    3. '=' → logprob: -2.4288330078125
    4. ' *' → logprob: -2.6788330078125
    5. '-' → logprob: -2.6788330078125
    6. ')' → logprob: -3.0538330078125
    7. ' -' → logprob: -3.1788330078125
    8. ' =' → logprob: -3.5538330078125
    9. '*' → logprob: -3.8038330078125
    10. ',' → logprob: -3.9288330078125

Token 2793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007455537561327219
    2. ' ' → logprob: -5.007455348968506
    3. '   ' → logprob: -7.632455348968506
    4. '```' → logprob: -9.507455825805664
    5. '       ' → logprob: -9.757455825805664
    6. '=' → logprob: -9.882455825805664
    7. ')' → logprob: -10.382455825805664
    8. ' =' → logprob: -11.632455825805664
    9. '    ' → logprob: -12.382455825805664
    10. '`' → logprob: -12.382455825805664

Token 2794: ' joints' (ID: 47223)
  Prédit: '_cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.7273343205451965
    2. '```' → logprob: -1.7273342609405518
    3. '_c' → logprob: -1.8523342609405518
    4. ' _' → logprob: -2.8523342609405518
    5. ' *' → logprob: -3.2273342609405518
    6. ')' → logprob: -4.602334499359131
    7. '`' → logprob: -4.602334499359131
    8. ' ' → logprob: -4.727334499359131
    9. '_' → logprob: -4.727334499359131
    10. 'c' → logprob: -4.852334499359131

Token 2795: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10717745125293732
    2. '   ' → logprob: -3.357177495956421
    3. '```' → logprob: -3.607177495956421
    4. '[' → logprob: -5.107177257537842
    5. ' =' → logprob: -5.482177257537842
    6. ']' → logprob: -5.607177257537842
    7. ' _' → logprob: -5.607177257537842
    8. ')' → logprob: -5.732177257537842
    9. 'def' → logprob: -5.857177257537842
    10. '_to' → logprob: -5.982177257537842

Token 2796: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.03022109530866146
    2. 'c' → logprob: -3.7802209854125977
    3. 'cut' → logprob: -5.530220985412598
    4. ' couper' → logprob: -6.780220985412598
    5. '#' → logprob: -7.405220985412598
    6. '
' → logprob: -7.655220985412598
    7. '```' → logprob: -9.030220985412598
    8. ' ' → logprob: -9.030220985412598
    9. 'sup' → logprob: -9.280220985412598
    10. '_c' → logprob: -9.530220985412598

Token 2797: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06763972342014313
    2. ':' → logprob: -3.5676398277282715
    3. '_' → logprob: -4.3176398277282715
    4. '_j' → logprob: -5.3176398277282715
    5. '```' → logprob: -5.5676398277282715
    6. ',' → logprob: -6.0676398277282715
    7. '`' → logprob: -6.3176398277282715
    8. '[' → logprob: -6.5676398277282715
    9. ' =' → logprob: -7.3176398277282715
    10. '[
' → logprob: -7.3176398277282715

Token 2798: ' minim' (ID: 23874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0250684022903442
    2. ' #' → logprob: -2.0250682830810547
    3. ' sorted' → logprob: -2.5250682830810547
    4. '       ' → logprob: -2.6500682830810547
    5. ' en' → logprob: -2.7750682830810547
    6. ',' → logprob: -3.2750682830810547
    7. '#' → logprob: -3.6500682830810547
    8. '[' → logprob: -3.7750682830810547
    9. 'sorted' → logprob: -3.7750682830810547
    10. '```' → logprob: -3.9000682830810547

Token 2799: 'isant' (ID: 56111)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.07878876477479935
    2. 'er' → logprob: -3.8287887573242188
    3. 'izer' → logprob: -4.328788757324219
    4. 'ax' → logprob: -4.578788757324219
    5. '```' → logprob: -4.953788757324219
    6. '   ' → logprob: -4.953788757324219
    7. 'isez' → logprob: -5.828788757324219
    8. '#' → logprob: -5.953788757324219
    9. 'à' → logprob: -5.953788757324219
    10. 'iner' → logprob: -6.953788757324219

Token 2800: ' sum' (ID: 4215)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7897475957870483
    2. '_le' → logprob: -1.9147475957870483
    3. ' _' → logprob: -2.539747714996338
    4. '_' → logprob: -3.164747714996338
    5. '_sum' → logprob: -3.414747714996338
    6. '_j' → logprob: -3.664747714996338
    7. 'le' → logprob: -3.664747714996338
    8. '```' → logprob: -3.664747714996338
    9. 'la' → logprob: -3.789747714996338
    10. 'sum' → logprob: -4.164747714996338

Token 2801: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04899347200989723
    2. '_c' → logprob: -3.1739935874938965
    3. '_j' → logprob: -6.4239935874938965
    4. '_
' → logprob: -6.5489935874938965
    5. ' _' → logprob: -6.7989935874938965
    6. ''_' → logprob: -7.9239935874938965
    7. '```' → logprob: -8.298993110656738
    8. '_cut' → logprob: -8.423993110656738
    9. '"_' → logprob: -8.423993110656738
    10. '_{' → logprob: -9.423993110656738

Token 2802: 'oup' (ID: 9999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24846230447292328
    2. 'ut' → logprob: -2.123462200164795
    3. 'oup' → logprob: -3.248462200164795
    4. 'o' → logprob: -4.248462200164795
    5. '_cut' → logprob: -4.498462200164795
    6. '_u' → logprob: -4.623462200164795
    7. 'u' → logprob: -4.623462200164795
    8. 'utt' → logprob: -5.623462200164795
    9. '_ut' → logprob: -6.248462200164795
    10. '_o' → logprob: -6.373462200164795

Token 2803: 'ures' (ID: 1609)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.2802707552909851
    2. 'uts' → logprob: -2.78027081489563
    3. 'u' → logprob: -3.28027081489563
    4. '_' → logprob: -3.40527081489563
    5. 'é' → logprob: -3.90527081489563
    6. '_cut' → logprob: -4.280270576477051
    7. 'ures' → logprob: -4.905270576477051
    8. 'es' → logprob: -5.030270576477051
    9. 'utes' → logprob: -5.280270576477051
    10. '__' → logprob: -5.905270576477051

Token 2804: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3493659794330597
    2. ':' → logprob: -2.5993659496307373
    3. 'def' → logprob: -3.4743659496307373
    4. '```' → logprob: -3.4743659496307373
    5. '(
' → logprob: -3.7243659496307373
    6. 'n' → logprob: -3.9743659496307373
    7. '(n' → logprob: -3.9743659496307373
    8. '_' → logprob: -4.224366188049316
    9. ',' → logprob: -4.474366188049316
    10. '[' → logprob: -4.599366188049316

Token 2805: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17701919376850128
    2. ':' → logprob: -3.1770191192626953
    3. '```' → logprob: -3.5520191192626953
    4. ')' → logprob: -4.177019119262695
    5. '       ' → logprob: -4.677019119262695
    6. ' i' → logprob: -4.802019119262695
    7. '\n' → logprob: -4.927019119262695
    8. 'i' → logprob: -5.302019119262695
    9. '    ' → logprob: -5.427019119262695
    10. '"' → logprob: -5.552019119262695

Token 2806: ' plus' (ID: 2932)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -2.1472017765045166
    2. ' (' → logprob: -2.3972017765045166
    3. ' ' → logprob: -2.6472017765045166
    4. '\n' → logprob: -3.1472017765045166
    5. '```' → logprob: -3.1472017765045166
    6. ' les' → logprob: -3.2722017765045166
    7. 'n' → logprob: -3.2722017765045166
    8. ' c' → logprob: -3.2722017765045166
    9. ' on' → logprob: -3.3972017765045166
    10. ' il' → logprob: -3.5222017765045166

Token 2807: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04322012513875961
    2. ')' → logprob: -4.293220043182373
    3. ' _' → logprob: -4.543220043182373
    4. '=' → logprob: -5.918220043182373
    5. ' =' → logprob: -6.168220043182373
    6. '_c' → logprob: -6.668220043182373
    7. '```' → logprob: -6.668220043182373
    8. '   ' → logprob: -6.793220043182373
    9. '_j' → logprob: -6.918220043182373
    10. ' \' → logprob: -7.168220043182373

Token 2808: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11728004366159439
    2. '_c' → logprob: -2.2422800064086914
    3. '_j' → logprob: -6.492280006408691
    4. '_cut' → logprob: -6.867280006408691
    5. '```' → logprob: -7.992280006408691
    6. '__' → logprob: -8.367280006408691
    7. '_
' → logprob: -8.742280006408691
    8. ' _' → logprob: -8.742280006408691
    9. ''_' → logprob: -8.867280006408691
    10. '"_' → logprob: -9.117280006408691

Token 2809: 'oup' (ID: 9999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0015156269073486
    2. '_cut' → logprob: -1.5015156269073486
    3. 'oup' → logprob: -1.7515156269073486
    4. 'ut' → logprob: -2.6265156269073486
    5. '_c' → logprob: -2.8765156269073486
    6. 'u' → logprob: -3.7515156269073486
    7. 'uts' → logprob: -4.1265153884887695
    8. 'oupes' → logprob: -4.2515153884887695
    9. 'ou' → logprob: -4.5015153884887695
    10. 'o' → logprob: -4.6265153884887695

Token 2810: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08613033592700958
    2. '_c' → logprob: -3.086130380630493
    3. '_cut' → logprob: -3.461130380630493
    4. ''_' → logprob: -7.086130142211914
    5. ' _' → logprob: -7.336130142211914
    6. 'es' → logprob: -7.836130142211914
    7. '__' → logprob: -7.836130142211914
    8. 's' → logprob: -8.086130142211914
    9. ')_' → logprob: -8.336130142211914
    10. 'ures' → logprob: -8.836130142211914

Token 2811: ' petites' (ID: 55617)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1787900924682617
    2. '_util' → logprob: -1.8037900924682617
    3. '_used' → logprob: -2.0537900924682617
    4. ' =' → logprob: -2.8037900924682617
    5. '_c' → logprob: -2.9287900924682617
    6. ')' → logprob: -3.3037900924682617
    7. '_cut' → logprob: -3.3037900924682617
    8. '   ' → logprob: -3.5537900924682617
    9. '```' → logprob: -3.8037900924682617
    10. ' est' → logprob: -3.9287900924682617

Token 2812: ',
' (ID: 412)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9512529969215393
    2. '   ' → logprob: -1.3262529373168945
    3. ')' → logprob: -2.2012529373168945
    4. ',' → logprob: -3.0762529373168945
    5. '_j' → logprob: -3.3262529373168945
    6. ' =' → logprob: -3.7012529373168945
    7. ':' → logprob: -3.9512529373168945
    8. '```' → logprob: -4.3262529373168945
    9. ' _' → logprob: -4.7012529373168945
    10. ']' → logprob: -4.8262529373168945

Token 2813: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3192613422870636
    2. '```' → logprob: -2.444261312484741
    3. ':' → logprob: -3.194261312484741
    4. '_c' → logprob: -3.819261312484741
    5. ''_' → logprob: -4.19426155090332
    6. ' _' → logprob: -4.44426155090332
    7. ',' → logprob: -4.56926155090332
    8. '   ' → logprob: -4.81926155090332
    9. '`' → logprob: -4.81926155090332
    10. ')' → logprob: -4.81926155090332

Token 2814: ' #' (ID: 1069)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2850894331932068
    2. '#' (adapté à ' #') → logprob: -3.0350894927978516
    3. '```' → logprob: -3.1600894927978516
    4. '=' → logprob: -3.9100894927978516
    5. '   ' → logprob: -3.9100894927978516
    6. ':' → logprob: -4.285089492797852
    7. ')' → logprob: -4.535089492797852
    8. '_c' → logprob: -4.660089492797852
    9. ' =' → logprob: -4.660089492797852
    10. '`' → logprob: -4.660089492797852

Token 2815: ' plus' (ID: 2932)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.500442624092102
    2. ')' → logprob: -2.8754425048828125
    3. '```' → logprob: -3.0004425048828125
    4. ',' → logprob: -3.3754425048828125
    5. ' #' → logprob: -3.3754425048828125
    6. '=' → logprob: -3.5004425048828125
    7. '   ' → logprob: -3.6254425048828125
    8. '+' → logprob: -3.7504425048828125
    9. ' =' → logprob: -3.8754425048828125
    10. ' est' → logprob: -4.5004425048828125

Token 2816: ' salaire' (ID: 135427)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.004561185836792
    2. ' on' → logprob: -2.254561185836792
    3. 'k' → logprob: -2.504561185836792
    4. '_on' → logprob: -2.879561185836792
    5. '_c' → logprob: -3.129561185836792
    6. ' _' → logprob: -3.254561185836792
    7. 'on' → logprob: -3.504561185836792
    8. 'c' → logprob: -3.504561185836792
    9. '*' → logprob: -3.754561185836792
    10. '```' → logprob: -3.754561185836792

Token 2817: ' grande' (ID: 10094)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0283117294311523
    2. '_' → logprob: -1.5283117294311523
    3. '   ' → logprob: -2.1533117294311523
    4. '=' → logprob: -2.2783117294311523
    5. '```' → logprob: -3.0283117294311523
    6. '_c' → logprob: -3.7783117294311523
    7. '_max' → logprob: -4.153311729431152
    8. ' est' → logprob: -4.278311729431152
    9. '_used' → logprob: -4.278311729431152
    10. ' _' → logprob: -4.653311729431152

Token 2818: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03255113214254379
    2. ':' → logprob: -4.782551288604736
    3. '_j' → logprob: -5.032551288604736
    4. '_' → logprob: -5.907551288604736
    5. ':
' → logprob: -6.282551288604736
    6. '
' → logprob: -6.282551288604736
    7. '\n' → logprob: -6.907551288604736
    8. '\' → logprob: -7.157551288604736
    9. '[j' → logprob: -7.157551288604736
    10. 'def' → logprob: -7.282551288604736

Token 2819: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00853183027356863
    2. '
' → logprob: -6.2585320472717285
    3. ':' → logprob: -6.7585320472717285
    4. 'def' → logprob: -7.0085320472717285
    5. '    
' → logprob: -7.3835320472717285
    6. '```' → logprob: -7.5085320472717285
    7. '       ' → logprob: -7.7585320472717285
    8. '`' → logprob: -8.13353157043457
    9. ':
' → logprob: -8.25853157043457
    10. '_j' → logprob: -8.38353157043457

Token 2820: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005317362025380135
    2. 'n' → logprob: -6.505317211151123
    3. '    
' → logprob: -7.005317211151123
    4. 'def' → logprob: -7.255317211151123
    5. '
' → logprob: -7.880317211151123
    6. 'j' → logprob: -8.005317687988281
    7. ':' → logprob: -8.755317687988281
    8. '#' → logprob: -8.880317687988281
    9. '(n' → logprob: -8.880317687988281
    10. '```' → logprob: -8.880317687988281

Token 2821: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004398309625685215
    2. 'n' → logprob: -6.129398345947266
    3. 'def' → logprob: -7.629398345947266
    4. '
' → logprob: -7.629398345947266
    5. '    
' → logprob: -7.754398345947266
    6. 'j' → logprob: -7.879398345947266
    7. '```' → logprob: -9.379398345947266
    8. '(n' → logprob: -9.629398345947266
    9. '       ' → logprob: -10.379398345947266
    10. '#' → logprob: -10.379398345947266

Token 2822: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053642597049474716
    2. 'n' → logprob: -3.303642511367798
    3. 'j' → logprob: -4.553642749786377
    4. 'def' → logprob: -6.178642749786377
    5. '#' (adapté à ' #') → logprob: -7.303642749786377
    6. '    
' → logprob: -7.553642749786377
    7. 'p' → logprob: -7.553642749786377
    8. '
' → logprob: -7.928642749786377
    9. 'joint' → logprob: -8.303642272949219
    10. 'length' → logprob: -9.678642272949219

Token 2823: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023795073851943016
    2. 'n' → logprob: -4.523795127868652
    3. '```' → logprob: -5.273795127868652
    4. 'j' → logprob: -6.398795127868652
    5. 'def' → logprob: -6.648795127868652
    6. '
' → logprob: -6.898795127868652
    7. '    
' → logprob: -7.398795127868652
    8. '#' → logprob: -7.523795127868652
    9. '\n' → logprob: -7.648795127868652
    10. '\' → logprob: -8.023795127868652

Token 2824: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10165101289749146
    2. '#' → logprob: -2.7266509532928467
    3. 'j' → logprob: -4.476651191711426
    4. '```' → logprob: -5.726651191711426
    5. ' #' → logprob: -6.226651191711426
    6. 'sorted' → logprob: -6.601651191711426
    7. 'for' → logprob: -6.726651191711426
    8. 'import' → logprob: -6.851651191711426
    9. ' for' → logprob: -6.976651191711426
    10. ' j' → logprob: -7.101651191711426

Token 2825: ' fixed' (ID: 13213)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.38256576657295227
    2. ' k' → logprob: -1.5075657367706299
    3. 'c' → logprob: -2.75756573677063
    4. ' c' → logprob: -4.382565975189209
    5. '_k' → logprob: -5.632565975189209
    6. 'cut' → logprob: -5.882565975189209
    7. '_c' → logprob: -6.257565975189209
    8. ' _' → logprob: -6.257565975189209
    9. '_cut' → logprob: -6.382565975189209
    10. 'i' → logprob: -6.507565975189209

Token 2826: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2195248156785965
    2. ' (' → logprob: -2.59452486038208
    3. ' k' → logprob: -3.59452486038208
    4. '-' → logprob: -3.96952486038208
    5. '=' → logprob: -4.09452486038208
    6. '(k' → logprob: -4.34452486038208
    7. '-k' → logprob: -4.71952486038208
    8. ' =' → logprob: -4.84452486038208
    9. '_' → logprob: -5.21952486038208
    10. ' -' → logprob: -5.34452486038208

Token 2827: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.307852864265442
    2. ' =' → logprob: -1.682852864265442
    3. ':' → logprob: -1.807852864265442
    4. ' -' → logprob: -1.932852864265442
    5. '-' → logprob: -2.3078527450561523
    6. ' (' → logprob: -3.3078527450561523
    7. ',' → logprob: -3.4328527450561523
    8. '   ' → logprob: -4.182852745056152
    9. '_' → logprob: -4.557852745056152
    10. '+' → logprob: -5.057852745056152

Token 2828: ' choisir' (ID: 47004)
  Prédit: ' tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tr' → logprob: -0.6120221018791199
    2. ' on' → logprob: -1.4870221614837646
    3. '#' → logprob: -2.9870221614837646
    4. 'tr' → logprob: -2.9870221614837646
    5. '   ' → logprob: -3.6120221614837646
    6. 'on' → logprob: -3.8620221614837646
    7. '       ' → logprob: -3.9870221614837646
    8. ' choisir' → logprob: -4.3620219230651855
    9. ' tri' → logprob: -4.7370219230651855
    10. ' ' → logprob: -4.8620219230651855

Token 2829: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2569986879825592
    2. 'les' → logprob: -2.2569987773895264
    3. ' k' → logprob: -3.0069987773895264
    4. 'c' → logprob: -4.131998538970947
    5. 'k' → logprob: -4.506998538970947
    6. '`' → logprob: -4.881998538970947
    7. ' la' → logprob: -5.006998538970947
    8. ' c' → logprob: -5.006998538970947
    9. '```' → logprob: -5.506998538970947
    10. ' (' → logprob: -6.006998538970947

Token 2830: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8718821406364441
    2. ' k' → logprob: -0.9968821406364441
    3. ' (' → logprob: -2.621882200241089
    4. '-' → logprob: -3.496882200241089
    5. ' -' → logprob: -3.746882200241089
    6. ' smallest' → logprob: -3.746882200241089
    7. '(k' → logprob: -4.62188196182251
    8. 'c' → logprob: -4.74688196182251
    9. ' joints' → logprob: -5.37188196182251
    10. ' ' → logprob: -5.49688196182251

Token 2831: 'k' (ID: 74)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5219775438308716
    2. 'k' → logprob: -1.2719775438308716
    3. ' smallest' → logprob: -3.021977424621582
    4. ' (' → logprob: -3.521977424621582
    5. ' n' → logprob: -4.646977424621582
    6. 'c' → logprob: -5.271977424621582
    7. ' -' → logprob: -5.646977424621582
    8. ' c' → logprob: -5.771977424621582
    9. ' largest' → logprob: -5.896977424621582
    10. '-' → logprob: -6.021977424621582

Token 2832: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18950729072093964
    2. '-' → logprob: -1.814507246017456
    3. '_' → logprob: -6.064507484436035
    4. ')' → logprob: -6.314507484436035
    5. ' _' → logprob: -7.189507484436035
    6. '```' → logprob: -7.314507484436035
    7. '#' → logprob: -7.564507484436035
    8. '=' → logprob: -7.689507484436035
    9. '_-' → logprob: -7.814507484436035
    10. '   ' → logprob: -7.814507484436035

Token 2833: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024959182366728783
    2. ' ' → logprob: -4.274959087371826
    3. ')' → logprob: -5.399959087371826
    4. ' -' → logprob: -5.774959087371826
    5. '-' → logprob: -5.899959087371826
    6. '   ' → logprob: -9.149959564208984
    7. ' )' → logprob: -10.149959564208984
    8. ' ' → logprob: -10.149959564208984
    9. '```' → logprob: -10.524959564208984
    10. '       ' → logprob: -11.024959564208984

Token 2834: ')' (ID: 8)
  Prédit: ' joints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joints' → logprob: -0.4599882662296295
    2. ' largest' → logprob: -2.2099883556365967
    3. ')' → logprob: -2.8349883556365967
    4. ' smallest' → logprob: -3.0849883556365967
    5. ' ' → logprob: -3.9599883556365967
    6. 'largest' → logprob: -4.334988117218018
    7. '_j' → logprob: -4.459988117218018
    8. ' closest' → logprob: -4.584988117218018
    9. ' #' → logprob: -4.834988117218018
    10. '#' → logprob: -4.834988117218018

Token 2835: ' joints' (ID: 47223)
  Prédit: ' joints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joints' → logprob: -1.020933985710144
    2. '_j' → logprob: -2.0209341049194336
    3. '#' → logprob: -2.3959341049194336
    4. ' smallest' → logprob: -2.7709341049194336
    5. 'j' → logprob: -2.7709341049194336
    6. ' #' → logprob: -3.1459341049194336
    7. '-' → logprob: -3.2709341049194336
    8. ' -' → logprob: -3.2709341049194336
    9. '```' → logprob: -3.7709341049194336
    10. ' _' → logprob: -4.270934104919434

Token 2836: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05376359447836876
    2. '_to' → logprob: -3.9287636280059814
    3. '_c' → logprob: -4.053763389587402
    4. '```' → logprob: -5.428763389587402
    5. '_sorted' → logprob: -6.053763389587402
    6. '_cut' → logprob: -6.178763389587402
    7. ' à' → logprob: -6.803763389587402
    8. 's' → logprob: -7.303763389587402
    9. ')' → logprob: -7.678763389587402
    10. 'à' → logprob: -7.803763389587402

Token 2837: ' couper' (ID: 135212)
  Prédit: ' couper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couper' → logprob: -0.093267522752285
    2. 'cou' → logprob: -2.7182674407958984
    3. 'cut' → logprob: -4.093267440795898
    4. '_cut' → logprob: -6.093267440795898
    5. ' cut' → logprob: -6.468267440795898
    6. ' utiliser' → logprob: -7.218267440795898
    7. ' cou' → logprob: -7.468267440795898
    8. 'c' → logprob: -8.343267440795898
    9. 'util' → logprob: -8.593267440795898
    10. ' ' → logprob: -8.718267440795898

Token 2838: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6360549926757812
    2. '_' → logprob: -1.7610549926757812
    3. '[i' → logprob: -2.3860549926757812
    4. ':' → logprob: -3.0110549926757812
    5. '```' → logprob: -3.6360549926757812
    6. '[' → logprob: -4.011054992675781
    7. ' =' → logprob: -4.136054992675781
    8. '[
' → logprob: -4.386054992675781
    9. '[j' → logprob: -4.511054992675781
    10. ',' → logprob: -4.636054992675781

Token 2839: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3141293227672577
    2. ' la' → logprob: -1.43912935256958
    3. 'plus' → logprob: -4.93912935256958
    4. ' plus' → logprob: -4.93912935256958
    5. 'le' → logprob: -5.06412935256958
    6. 'les' → logprob: -5.93912935256958
    7. '```' → logprob: -5.93912935256958
    8. ' smallest' → logprob: -6.06412935256958
    9. 'the' → logprob: -6.81412935256958
    10. ' les' → logprob: -7.06412935256958

Token 2840: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.7685850262641907
    2. ' plus' → logprob: -1.143584966659546
    3. ' smallest' → logprob: -2.268584966659546
    4. 'small' → logprob: -3.268584966659546
    5. 'min' → logprob: -3.768584966659546
    6. 'minimum' → logprob: -4.268585205078125
    7. 'max' → logprob: -4.518585205078125
    8. ' minimal' → logprob: -4.893585205078125
    9. ' minimum' → logprob: -5.518585205078125
    10. '```' → logprob: -5.768585205078125

Token 2841: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.042557861655950546
    2. '```' → logprob: -3.917557954788208
    3. 'gr' → logprob: -5.042557716369629
    4. ' petites' → logprob: -6.042557716369629
    5. ' petite' → logprob: -6.042557716369629
    6. 'grand' → logprob: -6.417557716369629
    7. ' petit' → logprob: -6.542557716369629
    8. ' petits' → logprob: -6.542557716369629
    9. ' pet' → logprob: -6.917557716369629
    10. 'import' → logprob: -7.417557716369629

Token 2842: ' longueur' (ID: 104613)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.26829954981803894
    2. '_val' → logprob: -3.3932995796203613
    3. 'values' → logprob: -3.6432995796203613
    4. '_' → logprob: -3.6432995796203613
    5. '_j' → logprob: -3.7682995796203613
    6. ' _' → logprob: -3.8932995796203613
    7. 'j' → logprob: -4.018299579620361
    8. '`' → logprob: -4.393299579620361
    9. 'long' → logprob: -4.518299579620361
    10. '_lengths' → logprob: -5.018299579620361

Token 2843: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17162580788135529
    2. '_j' → logprob: -2.296625852584839
    3. '   ' → logprob: -4.17162561416626
    4. '```' → logprob: -4.79662561416626
    5. '_
' → logprob: -5.54662561416626
    6. 's' → logprob: -5.54662561416626
    7. '[j' → logprob: -5.67162561416626
    8. ':' → logprob: -5.79662561416626
    9. '[' → logprob: -5.92162561416626
    10. ' =' → logprob: -6.04662561416626

Token 2844: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19050130248069763
    2. '_j' → logprob: -3.1905012130737305
    3. ']' → logprob: -3.5655012130737305
    4. '_' → logprob: -3.8155012130737305
    5. 'j' → logprob: -4.0655012130737305
    6. '```' → logprob: -5.0655012130737305
    7. 's' → logprob: -5.4405012130737305
    8. ',' → logprob: -5.4405012130737305
    9. '.' → logprob: -5.4405012130737305
    10. ')
' → logprob: -5.5655012130737305

Token 2845: ' minim' (ID: 23874)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.9197403192520142
    2. 'max' → logprob: -2.0447402000427246
    3. '_' → logprob: -2.2947402000427246
    4. 'i' → logprob: -2.4197402000427246
    5. ' i' → logprob: -2.6697402000427246
    6. ' maxim' → logprob: -2.6697402000427246
    7. ' _' → logprob: -2.9197402000427246
    8. ' ' → logprob: -3.1697402000427246
    9. ' max' → logprob: -3.2947402000427246
    10. ')' → logprob: -3.4197402000427246

Token 2846: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.6618162989616394
    2. 'er' → logprob: -1.0368163585662842
    3. 'um' → logprob: -3.286816358566284
    4. 'izer' → logprob: -3.411816358566284
    5. '_' → logprob: -4.536816120147705
    6. 'e' → logprob: -4.661816120147705
    7. 'u' → logprob: -4.786816120147705
    8. 'ser' → logprob: -5.286816120147705
    9. 'ize' → logprob: -5.786816120147705
    10. 'a' → logprob: -5.786816120147705

Token 2847: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7495571374893188
    2. ' sum' → logprob: -0.8745571374893188
    3. ' la' → logprob: -3.6245570182800293
    4. 'leur' → logprob: -3.9995570182800293
    5. 'le' → logprob: -4.249557018280029
    6. ' leur' → logprob: -4.874557018280029
    7. 'l' → logprob: -4.874557018280029
    8. ' l' → logprob: -4.999557018280029
    9. ' le' → logprob: -5.374557018280029
    10. ' _' → logprob: -5.499557018280029

Token 2848: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.04364734888076782
    2. '_' → logprob: -3.293647289276123
    3. '_j' → logprob: -6.293647289276123
    4. ')_' → logprob: -6.668647289276123
    5. '_cut' → logprob: -7.668647289276123
    6. '```' → logprob: -7.793647289276123
    7. ''_' → logprob: -7.918647289276123
    8. ')' → logprob: -8.418647766113281
    9. '"_' → logprob: -8.668647766113281
    10. '`' → logprob: -8.918647766113281

Token 2849: 'oup' (ID: 9999)
  Prédit: 'oup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.13344226777553558
    2. '_' → logprob: -2.8834421634674072
    3. 'ut' → logprob: -3.8834421634674072
    4. 'oupes' → logprob: -4.133442401885986
    5. 'ou' → logprob: -4.383442401885986
    6. 'uts' → logprob: -5.258442401885986
    7. '_cut' → logprob: -5.383442401885986
    8. 'o' → logprob: -5.883442401885986
    9. '_c' → logprob: -6.258442401885986
    10. '_o' → logprob: -6.883442401885986

Token 2850: 'ures' (ID: 1609)
  Prédit: '_cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.7560849785804749
    2. '_' → logprob: -0.8810849785804749
    3. '_c' → logprob: -2.75608491897583
    4. 's' → logprob: -4.75608491897583
    5. ')_' → logprob: -5.25608491897583
    6. '_choices' → logprob: -5.50608491897583
    7. 'ures' → logprob: -5.63108491897583
    8. '_out' → logprob: -5.75608491897583
    9. ''_' → logprob: -5.75608491897583
    10. 'es' → logprob: -6.13108491897583

Token 2851: ').
' (ID: 6294)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.817362666130066
    2. '_' → logprob: -2.0673627853393555
    3. '[
' → logprob: -2.0673627853393555
    4. '[i' → logprob: -2.1923627853393555
    5. '```' → logprob: -2.1923627853393555
    6. '   ' → logprob: -2.5673627853393555
    7. '[j' → logprob: -2.8173627853393555
    8. ':' → logprob: -3.0673627853393555
    9. ']' → logprob: -3.3173627853393555
    10. ')' → logprob: -3.4423627853393555

Token 2852: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04255728796124458
    2. 'def' → logprob: -4.042557239532471
    3. ':' → logprob: -5.542557239532471
    4. '_j' → logprob: -5.542557239532471
    5. '```' → logprob: -6.042557239532471
    6. 'j' → logprob: -6.167557239532471
    7. '"' → logprob: -6.667557239532471
    8. '_' → logprob: -6.917557239532471
    9. '`' → logprob: -6.917557239532471
    10. '[
' → logprob: -6.917557239532471

Token 2853: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08482140302658081
    2. 'def' → logprob: -3.2098214626312256
    3. ':' → logprob: -4.2098212242126465
    4. 'j' → logprob: -4.7098212242126465
    5. '_j' → logprob: -4.8348212242126465
    6. ':
' → logprob: -5.7098212242126465
    7. '_' → logprob: -7.7098212242126465
    8. '```' → logprob: -7.8348212242126465
    9. '       ' → logprob: -8.084821701049805
    10. '(
' → logprob: -8.209821701049805

Token 2854: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031038738787174225
    2. ':' → logprob: -3.906038761138916
    3. 'j' → logprob: -5.531038761138916
    4. '```' → logprob: -6.531038761138916
    5. ':
' → logprob: -6.656038761138916
    6. '_j' → logprob: -7.031038761138916
    7. 'def' → logprob: -7.281038761138916
    8. '    
' → logprob: -7.781038761138916
    9. 'n' → logprob: -8.281038284301758
    10. '`' → logprob: -8.656038284301758

Token 2855: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04067886993288994
    2. 'n' → logprob: -3.9156789779663086
    3. 'def' → logprob: -4.165678977966309
    4. '    
' → logprob: -6.790678977966309
    5. 'j' → logprob: -6.915678977966309
    6. '
' → logprob: -7.290678977966309
    7. '#' (adapté à ' #') → logprob: -7.790678977966309
    8. 'import' → logprob: -8.665678977966309
    9. '(n' → logprob: -8.790678977966309
    10. '\' → logprob: -8.915678977966309

Token 2856: ' En' (ID: 2130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0911459922790527
    2. 'def' → logprob: -1.0911459922790527
    3. 'n' → logprob: -2.0911459922790527
    4. '#' → logprob: -3.3411459922790527
    5. 'j' → logprob: -3.3411459922790527
    6. ':' → logprob: -3.5911459922790527
    7. ':
' → logprob: -3.7161459922790527
    8. '```' → logprob: -4.466145992279053
    9. 'import' → logprob: -4.591145992279053
    10. '(n' → logprob: -4.591145992279053

Token 2857: ' résumé' (ID: 140184)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.17095305025577545
    2. '.sort' → logprob: -2.7959530353546143
    3. '#' → logprob: -3.1709530353546143
    4. 'range' → logprob: -4.545953273773193
    5. 'sorted' → logprob: -4.545953273773193
    6. ' =' → logprob: -5.295953273773193
    7. 's' → logprob: -5.545953273773193
    8. '```' → logprob: -6.045953273773193
    9. 'append' → logprob: -6.295953273773193
    10. '=' → logprob: -6.295953273773193

Token 2858: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7068026065826416
    2. ':
' → logprob: -1.4568026065826416
    3. '   ' → logprob: -2.0818026065826416
    4. '#' → logprob: -2.0818026065826416
    5. '#
' → logprob: -5.0818023681640625
    6. ',' → logprob: -5.5818023681640625
    7. 'def' → logprob: -5.7068023681640625
    8. 'j' → logprob: -5.9568023681640625
    9. 'n' → logprob: -6.0818023681640625
    10. '```' → logprob: -6.9568023681640625

Token 2859: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021837621927261353
    2. 'def' → logprob: -4.3968377113342285
    3. 'n' → logprob: -5.8968377113342285
    4. 'j' → logprob: -6.0218377113342285
    5. '#' → logprob: -6.1468377113342285
    6. '```' → logprob: -7.1468377113342285
    7. 'joint' → logprob: -7.8968377113342285
    8. '
' → logprob: -8.02183723449707
    9. '    
' → logprob: -8.39683723449707
    10. '`' → logprob: -10.64683723449707

Token 2860: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04169657081365585
    2. 'j' → logprob: -4.041696548461914
    3. '#' (adapté à ' #') → logprob: -4.416696548461914
    4. 'def' → logprob: -4.916696548461914
    5. 'n' → logprob: -6.791696548461914
    6. '
' → logprob: -7.166696548461914
    7. '    
' → logprob: -7.541696548461914
    8. 'joint' → logprob: -7.541696548461914
    9. '```' → logprob: -8.041696548461914
    10. '#
' → logprob: -9.416696548461914

Token 2861: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28823602199554443
    2. '#' → logprob: -1.5382360219955444
    3. 'sorted' → logprob: -4.163236141204834
    4. 'sort' → logprob: -4.663236141204834
    5. '#
' → logprob: -6.038236141204834
    6. 'j' → logprob: -6.288236141204834
    7. '```' → logprob: -6.413236141204834
    8. '    
' → logprob: -7.038236141204834
    9. 'n' → logprob: -7.288236141204834
    10. ':
' → logprob: -8.163235664367676

Token 2862: ' On' (ID: 2160)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22205398976802826
    2. '#' → logprob: -2.0970540046691895
    3. 'joint' → logprob: -2.8470540046691895
    4. 'n' → logprob: -5.2220540046691895
    5. '   ' → logprob: -5.5970540046691895
    6. 'sorted' → logprob: -6.4720540046691895
    7. '```' → logprob: -6.5970540046691895
    8. 'import' → logprob: -6.7220540046691895
    9. 'sort' → logprob: -6.9720540046691895
    10. ' joints' → logprob: -7.0970540046691895

Token 2863: ' trie' (ID: 139428)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6043405532836914
    2. '#' → logprob: -1.1043405532836914
    3. '
' → logprob: -3.4793405532836914
    4. 'j' → logprob: -4.479340553283691
    5. '.sort' → logprob: -4.479340553283691
    6. '_j' → logprob: -4.729340553283691
    7. '   ' → logprob: -4.854340553283691
    8. ' =' → logprob: -4.854340553283691
    9. 'sort' → logprob: -4.979340553283691
    10. 'n' → logprob: -5.104340553283691

Token 2864: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20920944213867188
    2. 'les' → logprob: -2.459209442138672
    3. ' les' → logprob: -4.459209442138672
    4. '.' → logprob: -4.459209442138672
    5. ' des' → logprob: -4.459209442138672
    6. 'le' → logprob: -4.459209442138672
    7. '_j' → logprob: -4.959209442138672
    8. ')' → logprob: -5.084209442138672
    9. 'des' → logprob: -5.334209442138672
    10. '   ' → logprob: -5.459209442138672

Token 2865: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018442561849951744
    2. 'joint' → logprob: -4.518442630767822
    3. 'sorted' → logprob: -5.893442630767822
    4. '_j' → logprob: -6.393442630767822
    5. ' joints' → logprob: -6.518442630767822
    6. ' j' → logprob: -8.268442153930664
    7. 'join' → logprob: -8.893442153930664
    8. 'length' → logprob: -9.143442153930664
    9. '   ' → logprob: -9.393442153930664
    10. '.j' → logprob: -9.393442153930664

Token 2866: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.229222059249878
    2. '.sort' → logprob: -1.479222059249878
    3. '_j' → logprob: -1.604222059249878
    4. '[j' → logprob: -2.729222059249878
    5. '=' → logprob: -2.979222059249878
    6. '```' → logprob: -3.229222059249878
    7. '_sorted' → logprob: -3.229222059249878
    8. '_' → logprob: -4.104222297668457
    9. '_lengths' → logprob: -4.854222297668457
    10. '_par' → logprob: -5.229222297668457

Token 2867: ' longueur' (ID: 104613)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.7500960826873779
    2. 'length' → logprob: -0.8750960826873779
    3. 'leur' → logprob: -2.625096082687378
    4. 'len' → logprob: -4.125096321105957
    5. ' longueur' → logprob: -4.750096321105957
    6. 'sorted' → logprob: -6.500096321105957
    7. 'lon' → logprob: -6.625096321105957
    8. 'sort' → logprob: -6.750096321105957
    9. 'la' → logprob: -6.875096321105957
    10. ' leur' → logprob: -7.125096321105957

Token 2868: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5815980434417725
    2. '_sorted' → logprob: -1.8315980434417725
    3. '_j' → logprob: -2.5815980434417725
    4. '.sort' → logprob: -2.9565980434417725
    5. '[j' → logprob: -3.5815980434417725
    6. '.' → logprob: -3.9565980434417725
    7. 'sorted' → logprob: -4.331598281860352
    8. '[' → logprob: -4.456598281860352
    9. '   ' → logprob: -4.456598281860352
    10. '[
' → logprob: -4.456598281860352

Token 2869: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038157057017087936
    2. ' =' → logprob: -5.288156986236572
    3. '.sort' → logprob: -5.538156986236572
    4. '#' → logprob: -5.663156986236572
    5. '_j' → logprob: -5.663156986236572
    6. 'sorted' → logprob: -5.788156986236572
    7. 'j' → logprob: -5.913156986236572
    8. 'def' → logprob: -6.163156986236572
    9. '[
' → logprob: -6.538156986236572
    10. '[j' → logprob: -6.663156986236572

Token 2870: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15156462788581848
    2. '#' (adapté à ' #') → logprob: -2.901564598083496
    3. '.sort' → logprob: -3.901564598083496
    4. 'sorted' → logprob: -4.276564598083496
    5. '[
' → logprob: -4.526564598083496
    6. ' =' → logprob: -5.401564598083496
    7. '#
' → logprob: -5.526564598083496
    8. ')
' → logprob: -5.776564598083496
    9. '[' → logprob: -5.776564598083496
    10. 'j' → logprob: -5.901564598083496

Token 2871: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1248449087142944
    2. '[
' → logprob: -1.4998449087142944
    3. 'def' → logprob: -3.499845027923584
    4. ':
' → logprob: -3.499845027923584
    5. '[j' → logprob: -3.499845027923584
    6. ']' → logprob: -3.624845027923584
    7. '```' → logprob: -3.624845027923584
    8. '[' → logprob: -3.624845027923584
    9. '   ' → logprob: -3.749845027923584
    10. '=' → logprob: -3.749845027923584

Token 2872: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1803873777389526
    2. 'On' → logprob: -1.4303873777389526
    3. 'j' → logprob: -2.055387496948242
    4. ' joints' → logprob: -2.430387496948242
    5. '-' → logprob: -3.305387496948242
    6. 'les' → logprob: -3.555387496948242
    7. 'joint' → logprob: -3.555387496948242
    8. 'sorted' → logprob: -3.680387496948242
    9. 'for' → logprob: -3.805387496948242
    10. '   ' → logprob: -4.305387496948242

Token 2873: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6594297289848328
    2. 'i' → logprob: -1.0344297885894775
    3. ' k' → logprob: -2.5344297885894775
    4. 'k' → logprob: -3.7844297885894775
    5. ' c' → logprob: -5.159429550170898
    6. ' _' → logprob: -5.284429550170898
    7. ' ' → logprob: -5.284429550170898
    8. 'c' → logprob: -6.159429550170898
    9. '   ' → logprob: -7.159429550170898
    10. ' cut' → logprob: -7.159429550170898

Token 2874: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04395734891295433
    2. ' k' → logprob: -4.168957233428955
    3. 'c' → logprob: -4.293957233428955
    4. 'i' → logprob: -5.168957233428955
    5. '(k' → logprob: -6.668957233428955
    6. ' c' → logprob: -6.918957233428955
    7. ' (' → logprob: -7.043957233428955
    8. 'nombre' → logprob: -7.293957233428955
    9. '   ' → logprob: -7.543957233428955
    10. ' i' → logprob: -7.668957233428955

Token 2875: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6672846674919128
    2. '=' → logprob: -1.4172847270965576
    3. '_sorted' → logprob: -3.1672847270965576
    4. '   ' → logprob: -3.2922847270965576
    5. '_' → logprob: -3.5422847270965576
    6. 'from' → logprob: -3.9172847270965576
    7. ' (' → logprob: -4.2922844886779785
    8. ',' → logprob: -4.4172844886779785
    9. 'sorted' → logprob: -4.4172844886779785
    10. '#' → logprob: -4.6672844886779785

Token 2876: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3492124080657959
    2. '   ' → logprob: -2.474212408065796
    3. '#' → logprob: -2.849212408065796
    4. 'on' → logprob: -2.974212408065796
    5. ' tr' → logprob: -3.474212408065796
    6. ' #' → logprob: -4.224212646484375
    7. '    ' → logprob: -4.474212646484375
    8. ':' → logprob: -4.599212646484375
    9. ' ' → logprob: -5.224212646484375
    10. '       ' → logprob: -5.349212646484375

Token 2877: ' sélection' (ID: 43472)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.7016833424568176
    2. ' trie' → logprob: -1.7016832828521729
    3. '_tr' → logprob: -2.326683282852173
    4. 'tri' → logprob: -2.576683282852173
    5. 'range' → logprob: -3.451683282852173
    6. '#' → logprob: -3.701683282852173
    7. ' tr' → logprob: -4.076683521270752
    8. '_tri' → logprob: -4.701683521270752
    9. ' tri' → logprob: -4.826683521270752
    10. 'tris' → logprob: -4.951683521270752

Token 2878: 'ne' (ID: 611)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4135943651199341
    2. 'er' → logprob: -1.288594365119934
    3. '_' → logprob: -3.4135942459106445
    4. '   ' → logprob: -3.9135942459106445
    5. ':' → logprob: -7.1635942459106445
    6. 'ion' → logprob: -7.1635942459106445
    7. '_e' → logprob: -7.2885942459106445
    8. '=' → logprob: -7.4135942459106445
    9. '_sorted' → logprob: -7.5385942459106445
    10. '       ' → logprob: -7.6635942459106445

Token 2879: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0315320491790771
    2. ' la' → logprob: -1.7815320491790771
    3. 'les' → logprob: -1.7815320491790771
    4. '   ' → logprob: -2.281532049179077
    5. 'la' → logprob: -2.406532049179077
    6. 'sorted' → logprob: -3.031532049179077
    7. 'j' → logprob: -4.531532287597656
    8. ' sorted' → logprob: -4.656532287597656
    9. ' j' → logprob: -5.031532287597656
    10. 'le' → logprob: -5.156532287597656

Token 2880: ' (' (ID: 350)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.6900195479393005
    2. ' joints' → logprob: -1.9400196075439453
    3. ' smallest' → logprob: -2.4400196075439453
    4. 'plus' → logprob: -2.5650196075439453
    5. ' k' → logprob: -2.9400196075439453
    6. 'k' → logprob: -3.6900196075439453
    7. 'j' → logprob: -3.8150196075439453
    8. ' j' → logprob: -4.315019607543945
    9. 'joint' → logprob: -4.565019607543945
    10. '[:' → logprob: -4.690019607543945

Token 2881: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023552918806672096
    2. ' k' → logprob: -4.273552894592285
    3. ' (' → logprob: -5.398552894592285
    4. '(k' → logprob: -5.398552894592285
    5. 'c' → logprob: -8.648552894592285
    6. '   ' → logprob: -10.023552894592285
    7. ' ' → logprob: -10.898552894592285
    8. '  ' → logprob: -11.648552894592285
    9. ' c' → logprob: -11.773552894592285
    10. 'sorted' → logprob: -11.898552894592285

Token 2882: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08042874187231064
    2. ' -' → logprob: -2.5804288387298584
    3. '#' → logprob: -7.830428600311279
    4. '-j' → logprob: -8.080429077148438
    5. '
' → logprob: -8.705429077148438
    6. '-
' → logprob: -9.080429077148438
    7. ')' → logprob: -9.330429077148438
    8. '   ' → logprob: -9.830429077148438
    9. '=' → logprob: -9.955429077148438
    10. '[-' → logprob: -10.080429077148438

Token 2883: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4181317687034607
    2. '1' → logprob: -1.1681318283081055
    3. ' k' → logprob: -4.1681318283081055
    4. '(k' → logprob: -4.9181318283081055
    5. ' (' → logprob: -5.6681318283081055
    6. ' ' → logprob: -6.1681318283081055
    7. '   ' → logprob: -7.5431318283081055
    8. ' -' → logprob: -7.6681318283081055
    9. '-' → logprob: -7.7931318283081055
    10. 'c' → logprob: -8.543131828308105

Token 2884: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23939238488674164
    2. '-' → logprob: -2.4893922805786133
    3. '_' → logprob: -2.7393922805786133
    4. '#' → logprob: -5.114392280578613
    5. ')_' → logprob: -5.114392280578613
    6. ' -' → logprob: -5.239392280578613
    7. '```' → logprob: -5.489392280578613
    8. '+' → logprob: -5.489392280578613
    9. '[' → logprob: -5.739392280578613
    10. '_j' → logprob: -5.864392280578613

Token 2885: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5690755248069763
    2. '_j' → logprob: -1.194075584411621
    3. '-' → logprob: -2.944075584411621
    4. ' -' → logprob: -4.444075584411621
    5. 'j' → logprob: -5.069075584411621
    6. '```' → logprob: -5.069075584411621
    7. ' _' → logprob: -5.194075584411621
    8. '`' → logprob: -5.319075584411621
    9. '[j' → logprob: -5.319075584411621
    10. '   ' → logprob: -5.319075584411621

Token 2886: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08916553854942322
    2. '[' → logprob: -3.964165449142456
    3. '```' → logprob: -4.464165687561035
    4. '_to' → logprob: -4.714165687561035
    5. '_used' → logprob: -4.964165687561035
    6. ']' → logprob: -5.089165687561035
    7. '_sorted' → logprob: -5.214165687561035
    8. '[
' → logprob: -5.339165687561035
    9. '=' → logprob: -5.839165687561035
    10. '_
' → logprob: -6.089165687561035

Token 2887: ' ne' (ID: 453)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.011162539944052696
    2. 'cou' → logprob: -5.261162757873535
    3. 'cut' → logprob: -6.136162757873535
    4. 'g' → logprob: -6.761162757873535
    5. ' utiliser' → logprob: -6.886162757873535
    6. 'ret' → logprob: -8.261162757873535
    7. '```' → logprob: -8.261162757873535
    8. 'pas' → logprob: -8.761162757873535
    9. 'c' → logprob: -9.261162757873535
    10. ''utiliser' → logprob: -9.386162757873535

Token 2888: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.09367313981056213
    2. ' pas' → logprob: -2.8436732292175293
    3. '#' → logprob: -4.093673229217529
    4. '```' → logprob: -5.468673229217529
    5. '_pas' → logprob: -6.093673229217529
    6. 'util' → logprob: -6.093673229217529
    7. ''utiliser' → logprob: -6.343673229217529
    8. ' #' → logprob: -6.843673229217529
    9. 'u' → logprob: -7.343673229217529
    10. 'cut' → logprob: -8.218672752380371

Token 2889: ' utiliser' (ID: 43227)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.3505212962627411
    2. ' utiliser' → logprob: -1.3505213260650635
    3. 'cut' → logprob: -4.475521087646484
    4. 'cou' → logprob: -4.600521087646484
    5. ' couper' → logprob: -4.600521087646484
    6. ' used' → logprob: -6.100521087646484
    7. 'used' → logprob: -7.100521087646484
    8. ''utiliser' → logprob: -8.100521087646484
    9. ' cut' → logprob: -8.225521087646484
    10. '```' → logprob: -8.350521087646484

Token 2890: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.061087075620889664
    2. '[' → logprob: -3.561087131500244
    3. ']' → logprob: -3.936087131500244
    4. '.' → logprob: -6.186087131500244
    5. '```' → logprob: -6.311087131500244
    6. '_sorted' → logprob: -6.436087131500244
    7. '_
' → logprob: -7.061087131500244
    8. '[
' → logprob: -7.311087131500244
    9. '   ' → logprob: -7.686087131500244
    10. ')' → logprob: -7.686087131500244

Token 2891: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1767236292362213
    2. 'tri' → logprob: -3.9267237186431885
    3. ' tri' → logprob: -4.301723480224609
    4. ' à' → logprob: -4.301723480224609
    5. 'tr' → logprob: -4.426723480224609
    6. ',' → logprob: -4.426723480224609
    7. '),' → logprob: -4.551723480224609
    8. ')
' → logprob: -4.551723480224609
    9. '[' → logprob: -5.426723480224609
    10. '```' → logprob: -5.426723480224609

Token 2892: 'oup' (ID: 9999)
  Prédit: 'ho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.403225302696228
    2. 'ut' → logprob: -2.1532254219055176
    3. 'ou' → logprob: -2.5282254219055176
    4. 'oup' → logprob: -2.6532254219055176
    5. 'o' → logprob: -4.653225421905518
    6. 'u' → logprob: -4.653225421905518
    7. 'utting' → logprob: -5.278225421905518
    8. '#' → logprob: -5.403225421905518
    9. 'oupe' → logprob: -5.403225421905518
    10. ''''' → logprob: -5.903225421905518

Token 2893: 'és' (ID: 1756)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.10437165945768356
    2. 'é' → logprob: -2.6043715476989746
    3. '_' → logprob: -4.604371547698975
    4. 'és' → logprob: -4.604371547698975
    5. 'e' → logprob: -6.729371547698975
    6. 'ées' → logprob: -6.854371547698975
    7. 'ée' → logprob: -6.979371547698975
    8. '#' → logprob: -7.854371547698975
    9. 'éer' → logprob: -7.979371547698975
    10. 'es' → logprob: -8.104372024536133

Token 2894: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44500088691711426
    2. ']' → logprob: -1.3200008869171143
    3. '[' → logprob: -3.6950008869171143
    4. '```' → logprob: -3.8200008869171143
    5. '_' → logprob: -4.570000648498535
    6. ',' → logprob: -5.070000648498535
    7. '])' → logprob: -5.695000648498535
    8. '.' → logprob: -5.820000648498535
    9. '   ' → logprob: -5.820000648498535
    10. '),' → logprob: -6.070000648498535

Token 2895: ' correspond' (ID: 11095)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.507812261581421
    2. '[' → logprob: -2.007812261581421
    3. '[
' → logprob: -2.007812261581421
    4. '```' → logprob: -2.132812261581421
    5. 's' → logprob: -2.882812261581421
    6. 'def' → logprob: -3.382812261581421
    7. '_j' → logprob: -3.382812261581421
    8. '[n' → logprob: -3.382812261581421
    9. ' =' → logprob: -3.507812261581421
    10. ':' → logprob: -3.507812261581421

Token 2896: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.05862828344106674
    2. 'à' → logprob: -4.308628082275391
    3. ' à' → logprob: -4.433628082275391
    4. ')' → logprob: -4.808628082275391
    5. '=' → logprob: -5.433628082275391
    6. 'aux' → logprob: -5.933628082275391
    7. 'ants' → logprob: -6.058628082275391
    8. 'a' → logprob: -6.308628082275391
    9. 'és' → logprob: -6.308628082275391
    10. 'au' → logprob: -6.433628082275391

Token 2897: ' aux' (ID: 5850)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5653002262115479
    2. ']' → logprob: -1.9403002262115479
    3. '=' → logprob: -2.065300226211548
    4. '[' → logprob: -2.065300226211548
    5. '   ' → logprob: -2.315300226211548
    6. '```' → logprob: -2.940300226211548
    7. '[
' → logprob: -3.065300226211548
    8. ' =' → logprob: -3.315300226211548
    9. '_sorted' → logprob: -3.565300226211548
    10. ')' → logprob: -3.815300226211548

Token 2898: ' (' (ID: 350)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.842748761177063
    2. ' plus' → logprob: -1.217748761177063
    3. 'sorted' → logprob: -2.5927486419677734
    4. ' smallest' → logprob: -2.9677486419677734
    5. 'small' → logprob: -4.092748641967773
    6. 'long' → logprob: -4.092748641967773
    7. ' sorted' → logprob: -4.342748641967773
    8. 'la' → logprob: -4.592748641967773
    9. 'joint' → logprob: -4.717748641967773
    10. ' la' → logprob: -4.842748641967773

Token 2899: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2852307558059692
    2. 'n' → logprob: -1.4102307558059692
    3. '(n' → logprob: -1.9102307558059692
    4. 'plus' → logprob: -2.4102306365966797
    5. ' plus' → logprob: -3.1602306365966797
    6. 'k' → logprob: -3.2852306365966797
    7. 'small' → logprob: -3.2852306365966797
    8. ' smallest' → logprob: -3.4102306365966797
    9. ' k' → logprob: -4.03523063659668
    10. ' (' → logprob: -4.16023063659668

Token 2900: '-k' (ID: 10897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.634021520614624
    2. ' -' → logprob: -0.759021520614624
    3. '#' → logprob: -7.009021759033203
    4. ')' → logprob: -9.384021759033203
    5. '
' → logprob: -9.634021759033203
    6. '-k' → logprob: -9.759021759033203
    7. '```' → logprob: -9.759021759033203
    8. '-
' → logprob: -9.884021759033203
    9. ' ' → logprob: -9.884021759033203
    10. ' #' → logprob: -9.884021759033203

Token 2901: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6834526062011719
    2. '-' → logprob: -0.8084526062011719
    3. ']' → logprob: -4.433452606201172
    4. ' -' → logprob: -4.433452606201172
    5. '_' → logprob: -5.183452606201172
    6. '[-' → logprob: -5.808452606201172
    7. '[' → logprob: -6.058452606201172
    8. ')-' → logprob: -6.058452606201172
    9. ')_' → logprob: -6.183452606201172
    10. '-)' → logprob: -6.183452606201172

Token 2902: ' joints' (ID: 47223)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1322007179260254
    2. ' -' → logprob: -1.2572007179260254
    3. '#' → logprob: -2.3822007179260254
    4. '_j' → logprob: -3.2572007179260254
    5. 'j' → logprob: -3.3822007179260254
    6. ')' → logprob: -3.5072007179260254
    7. ' joints' → logprob: -3.5072007179260254
    8. '```' → logprob: -3.5072007179260254
    9. ' #' → logprob: -3.8822007179260254
    10. '[' → logprob: -3.8822007179260254

Token 2903: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.68105149269104
    2. '_sorted' → logprob: -1.55605149269104
    3. '```' → logprob: -2.68105149269104
    4. ']' → logprob: -3.18105149269104
    5. '=' → logprob: -3.30605149269104
    6. ' =' → logprob: -3.55605149269104
    7. '_to' → logprob: -3.80605149269104
    8. '   ' → logprob: -4.306051254272461
    9. '[' → logprob: -4.556051254272461
    10. '_used' → logprob: -4.931051254272461

Token 2904: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6198562979698181
    2. '_sorted' → logprob: -2.119856357574463
    3. '[' → logprob: -2.369856357574463
    4. '#' → logprob: -3.744856357574463
    5. 'sorted' → logprob: -3.869856357574463
    6. '[
' → logprob: -3.994856357574463
    7. 'à' → logprob: -4.369856357574463
    8. 'import' → logprob: -4.619856357574463
    9. '.sort' → logprob: -4.619856357574463
    10. '   ' → logprob: -4.619856357574463

Token 2905: ' #' (ID: 1069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.6145037412643433
    2. '```' → logprob: -1.6145037412643433
    3. ' à' → logprob: -1.8645037412643433
    4. '+' → logprob: -2.489503860473633
    5. '_sorted' → logprob: -3.239503860473633
    6. ' -' → logprob: -3.364503860473633
    7. '#' (adapté à ' #') → logprob: -3.489503860473633
    8. 'à' → logprob: -3.614503860473633
    9. '   ' → logprob: -3.614503860473633
    10. '_to' → logprob: -3.864503860473633

Token 2906: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.239816665649414
    2. '_sorted' → logprob: -1.364816665649414
    3. '```' → logprob: -1.739816665649414
    4. '_tri' → logprob: -3.614816665649414
    5. 'tri' → logprob: -3.614816665649414
    6. '[
' → logprob: -3.864816665649414
    7. 'sorted' → logprob: -3.989816665649414
    8. '_tr' → logprob: -4.239816665649414
    9. '#' → logprob: -4.364816665649414
    10. ')' → logprob: -4.364816665649414

Token 2907: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.6796846389770508
    2. 'plus' → logprob: -1.4296846389770508
    3. ' les' → logprob: -2.179684638977051
    4. 'les' → logprob: -3.429684638977051
    5. 'moins' → logprob: -3.804684638977051
    6. ' de' → logprob: -4.179684638977051
    7. '_plus' → logprob: -4.679684638977051
    8. 'à' → logprob: -5.179684638977051
    9. ' tri' → logprob: -5.179684638977051
    10. 'tri' → logprob: -5.179684638977051

Token 2908: ' courts' (ID: 33374)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.45332634449005127
    2. 'cour' → logprob: -1.0783263444900513
    3. 'long' → logprob: -5.203326225280762
    4. 'gr' → logprob: -5.328326225280762
    5. 'court' → logprob: -5.453326225280762
    6. '```' → logprob: -5.578326225280762
    7. '_pet' → logprob: -6.578326225280762
    8. ' petites' → logprob: -6.953326225280762
    9. '_long' → logprob: -7.328326225280762
    10. 'grand' → logprob: -7.578326225280762

Token 2909: ' ou' (ID: 2031)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2079432010650635
    2. ':' → logprob: -2.2079432010650635
    3. '[
' → logprob: -2.4579432010650635
    4. '_' → logprob: -2.7079432010650635
    5. '_j' → logprob: -3.0829432010650635
    6. 'def' → logprob: -3.0829432010650635
    7. ']' → logprob: -3.2079432010650635
    8. '(
' → logprob: -3.3329432010650635
    9. ')' → logprob: -3.5829432010650635
    10. '```' → logprob: -3.5829432010650635

Token 2910: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.117213487625122
    2. 'util' → logprob: -1.867213487625122
    3. 'import' → logprob: -2.242213487625122
    4. 'long' → logprob: -2.492213487625122
    5. 'plus' → logprob: -2.617213487625122
    6. 'pas' → logprob: -2.992213487625122
    7. 'gr' → logprob: -3.492213487625122
    8. 'moins' → logprob: -3.617213487625122
    9. '```' → logprob: -4.117213249206543
    10. ' utilisés' → logprob: -4.367213249206543

Token 2911: ' plus' (ID: 2932)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.038779936730861664
    2. 'gr' → logprob: -3.9137799739837646
    3. 'import' → logprob: -4.2887797355651855
    4. 'util' → logprob: -6.5387797355651855
    5. 'larg' → logprob: -7.2887797355651855
    6. 'plus' → logprob: -7.4137797355651855
    7. 'lo' → logprob: -8.038780212402344
    8. 'l' → logprob: -8.663780212402344
    9. '#' → logprob: -8.788780212402344
    10. 'lon' → logprob: -8.913780212402344

Token 2912: ' longs' (ID: 102836)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.1637212187051773
    2. 'gr' → logprob: -1.9137212038040161
    3. ' longues' → logprob: -6.788721084594727
    4. 'larg' → logprob: -7.163721084594727
    5. 'import' → logprob: -7.538721084594727
    6. 'grand' → logprob: -7.663721084594727
    7. '```' → logprob: -9.163721084594727
    8. '_long' → logprob: -9.163721084594727
    9. 'lon' → logprob: -9.538721084594727
    10. 'util' → logprob: -9.913721084594727

Token 2913: '?' (ID: 30)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1039071083068848
    2. '[' → logprob: -1.4789071083068848
    3. '[n' → logprob: -2.6039071083068848
    4. ']' → logprob: -2.7289071083068848
    5. '[
' → logprob: -2.9789071083068848
    6. 'def' → logprob: -3.3539071083068848
    7. '_sorted' → logprob: -3.6039071083068848
    8. '   ' → logprob: -3.7289071083068848
    9. '=' → logprob: -3.7289071083068848
    10. ')' → logprob: -3.8539071083068848

Token 2914: ' Attention' (ID: 81932)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.158951997756958
    2. 'sorted' → logprob: -1.783951997756958
    3. '[-' → logprob: -2.533951997756958
    4. '[' → logprob: -2.533951997756958
    5. '#' → logprob: -2.783951997756958
    6. '-' → logprob: -3.033951997756958
    7. '.' → logprob: -3.283951997756958
    8. '.sort' → logprob: -3.533951997756958
    9. 'def' → logprob: -3.783951997756958
    10. '[::-' → logprob: -3.908951997756958

Token 2915: '.
' (ID: 558)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.580091118812561
    2. 'sorted' → logprob: -1.580091118812561
    3. '_sorted' → logprob: -2.0800909996032715
    4. '#' → logprob: -2.5800909996032715
    5. '[' → logprob: -2.8300909996032715
    6. 'les' → logprob: -3.2050909996032715
    7. '[
' → logprob: -3.2050909996032715
    8. 'import' → logprob: -3.5800909996032715
    9. '[::-' → logprob: -3.5800909996032715
    10. ' sorted' → logprob: -3.8300909996032715

Token 2916: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1028223037719727
    2. '   ' → logprob: -1.8528223037719727
    3. '.sort' → logprob: -2.4778223037719727
    4. '[
' → logprob: -2.9778223037719727
    5. ' =' → logprob: -3.1028223037719727
    6. 'def' → logprob: -3.3528223037719727
    7. '#
' → logprob: -3.4778223037719727
    8. '[j' → logprob: -3.6028223037719727
    9. ']' → logprob: -3.7278223037719727
    10. '=' → logprob: -3.7278223037719727

Token 2917: ' #
' (ID: 21888)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0376813411712646
    2. '[' → logprob: -1.2876813411712646
    3. '=' → logprob: -2.9126813411712646
    4. '.' → logprob: -2.9126813411712646
    5. '[
' → logprob: -3.4126813411712646
    6. 'import' → logprob: -3.7876813411712646
    7. '.sort' → logprob: -3.9126813411712646
    8. ')' → logprob: -3.9126813411712646
    9. 'j' → logprob: -4.287681579589844
    10. 'sorted' → logprob: -4.287681579589844

Token 2918: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8306356072425842
    2. '   ' → logprob: -1.2056355476379395
    3. '[
' → logprob: -2.5806355476379395
    4. '[' → logprob: -3.0806355476379395
    5. 'n' → logprob: -3.5806355476379395
    6. 'j' → logprob: -4.2056355476379395
    7. 'def' → logprob: -4.3306355476379395
    8. '#
' → logprob: -4.4556355476379395
    9. ':' → logprob: -4.5806355476379395
    10. 'p' → logprob: -4.5806355476379395

Token 2919: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.40664198994636536
    2. '   ' → logprob: -1.656641960144043
    3. 'n' → logprob: -3.156641960144043
    4. 'p' → logprob: -3.531641960144043
    5. 'def' → logprob: -3.906641960144043
    6. '#
' → logprob: -4.531641960144043
    7. '[
' → logprob: -4.906641960144043
    8. 'j' → logprob: -4.906641960144043
    9. '(p' → logprob: -5.781641960144043
    10. '(
' → logprob: -5.906641960144043

Token 2920: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24317024648189545
    2. '   ' → logprob: -3.2431702613830566
    3. '#
' → logprob: -3.6181702613830566
    4. 'n' → logprob: -3.8681702613830566
    5. '[
' → logprob: -4.118170261383057
    6. 'j' → logprob: -4.243170261383057
    7. '=' → logprob: -4.493170261383057
    8. 'sorted' → logprob: -4.618170261383057
    9. 'def' → logprob: -4.868170261383057
    10. ']' → logprob: -4.993170261383057

Token 2921: ' veut' (ID: 41653)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.37628743052482605
    2. 'sort' → logprob: -1.7512874603271484
    3. '#' → logprob: -3.5012874603271484
    4. '=' → logprob: -3.5012874603271484
    5. '_sorted' → logprob: -3.7512874603271484
    6. '.' → logprob: -4.251287460327148
    7. 'sorted' → logprob: -4.251287460327148
    8. 'def' → logprob: -5.376287460327148
    9. '[' → logprob: -5.376287460327148
    10. '_sort' → logprob: -6.126287460327148

Token 2922: ' minim' (ID: 23874)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.06963448971509933
    2. '_tr' → logprob: -3.819634437561035
    3. '_' → logprob: -4.819634437561035
    4. '#' → logprob: -5.319634437561035
    5. 'tri' → logprob: -5.819634437561035
    6. 'sort' → logprob: -5.819634437561035
    7. ':' → logprob: -6.069634437561035
    8. ' Trier' → logprob: -6.194634437561035
    9. '-' → logprob: -6.444634437561035
    10. 'max' → logprob: -6.569634437561035

Token 2923: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -1.0632705688476562
    2. 'a' → logprob: -1.1882705688476562
    3. 'ize' → logprob: -2.0632705688476562
    4. 'izer' → logprob: -2.6882705688476562
    5. 'e' → logprob: -3.1882705688476562
    6. 'al' → logprob: -3.5632705688476562
    7. 'er' → logprob: -4.313270568847656
    8. '#' → logprob: -4.563270568847656
    9. '```' → logprob: -4.688270568847656
    10. 'um' → logprob: -4.813270568847656

Token 2924: ' sum' (ID: 4215)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5473255515098572
    2. '_c' → logprob: -2.172325611114502
    3. '_' → logprob: -2.797325611114502
    4. 'sum' → logprob: -2.922325611114502
    5. 'la' → logprob: -2.922325611114502
    6. 'le' → logprob: -3.047325611114502
    7. '_sum' → logprob: -3.922325611114502
    8. 'l' → logprob: -4.047325611114502
    9. '_j' → logprob: -4.672325611114502
    10. 'c' → logprob: -4.922325611114502

Token 2925: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01164740789681673
    2. '_c' → logprob: -5.0116472244262695
    3. '_j' → logprob: -5.3866472244262695
    4. '_
' → logprob: -9.38664722442627
    5. '_)' → logprob: -10.01164722442627
    6. '_cut' → logprob: -10.26164722442627
    7. ''_' → logprob: -10.51164722442627
    8. '_-' → logprob: -11.01164722442627
    9. ' _' → logprob: -11.01164722442627
    10. '__' → logprob: -11.63664722442627

Token 2926: 'oup' (ID: 9999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09938295930624008
    2. '_c' → logprob: -2.9743828773498535
    3. '_cut' → logprob: -3.3493828773498535
    4. '_j' → logprob: -5.3493828773498535
    5. ''_' → logprob: -7.3493828773498535
    6. '_
' → logprob: -7.4743828773498535
    7. '__' → logprob: -7.8493828773498535
    8. ' _' → logprob: -8.974383354187012
    9. '"_' → logprob: -9.099383354187012
    10. '```' → logprob: -9.224383354187012

Token 2927: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06337488442659378
    2. '_c' → logprob: -2.9383749961853027
    3. '_cut' → logprob: -6.063374996185303
    4. '__' → logprob: -6.938374996185303
    5. ' _' → logprob: -7.063374996185303
    6. 'é' → logprob: -7.188374996185303
    7. ''_' → logprob: -7.313374996185303
    8. '_u' → logprob: -7.563374996185303
    9. '_
' → logprob: -7.813374996185303
    10. 'u' → logprob: -8.063374519348145

Token 2928: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9306080937385559
    2. '_j' → logprob: -2.055608034133911
    3. 'def' → logprob: -2.180608034133911
    4. '[j' → logprob: -3.055608034133911
    5. '[
' → logprob: -3.180608034133911
    6. '[' → logprob: -3.430608034133911
    7. ']' → logprob: -3.430608034133911
    8. '_' → logprob: -3.680608034133911
    9. ' =' → logprob: -3.805608034133911
    10. 'j' → logprob: -4.05560827255249

Token 2929: ' données' (ID: 30580)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1503671407699585
    2. ' k' → logprob: -2.025367259979248
    3. 'cut' → logprob: -2.275367259979248
    4. 'max' → logprob: -2.900367259979248
    5. '_' → logprob: -3.025367259979248
    6. 'c' → logprob: -3.275367259979248
    7. 'être' → logprob: -3.650367259979248
    8. 'min' → logprob: -3.775367259979248
    9. 'cho' → logprob: -4.025367259979248
    10. ' ' → logprob: -4.275367259979248

Token 2930: ' c' (ID: 274)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2586785852909088
    2. '_c' → logprob: -2.258678674697876
    3. '_j' → logprob: -3.008678674697876
    4. ' _' → logprob: -4.008678436279297
    5. '_cut' → logprob: -4.383678436279297
    6. 'des' → logprob: -5.508678436279297
    7. ' =' → logprob: -5.633678436279297
    8. 'les' → logprob: -5.633678436279297
    9. ' des' → logprob: -5.758678436279297
    10. '=' → logprob: -6.008678436279297

Token 2931: '=' (ID: 28)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6307018399238586
    2. 'uts' → logprob: -1.7557017803192139
    3. 'ut' → logprob: -2.005701780319214
    4. '_c' → logprob: -2.755701780319214
    5. 'u' → logprob: -3.630701780319214
    6. ''_' → logprob: -4.880702018737793
    7. '_cut' → logprob: -4.880702018737793
    8. '_u' → logprob: -5.255702018737793
    9. '_j' → logprob: -5.255702018737793
    10. ')' → logprob: -5.380702018737793

Token 2932: ' k' (ID: 372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4033851623535156
    2. ' (' → logprob: -1.7783851623535156
    3. '(n' → logprob: -2.4033851623535156
    4. 'n' → logprob: -2.6533851623535156
    5. ' n' → logprob: -2.7783851623535156
    6. '+' → logprob: -2.7783851623535156
    7. ' =' → logprob: -2.9033851623535156
    8. 'k' → logprob: -3.2783851623535156
    9. 'c' → logprob: -3.2783851623535156
    10. '-' → logprob: -3.6533851623535156

Token 2933: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.127727672457695
    2. ')' → logprob: -3.627727746963501
    3. '=' → logprob: -4.002727508544922
    4. '   ' → logprob: -4.252727508544922
    5. '[' → logprob: -4.377727508544922
    6. '+' → logprob: -5.002727508544922
    7. ' =' → logprob: -5.377727508544922
    8. '```' → logprob: -5.502727508544922
    9. ']' → logprob: -5.627727508544922
    10. '-' → logprob: -5.627727508544922

Token 2934: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4319603443145752
    2. '-' → logprob: -1.4319603443145752
    3. '+' → logprob: -2.306960344314575
    4. 'ut' → logprob: -5.431960105895996
    5. 'uts' → logprob: -6.056960105895996
    6. ')' → logprob: -6.806960105895996
    7. '−' → logprob: -7.181960105895996
    8. '```' → logprob: -7.431960105895996
    9. '=' → logprob: -7.681960105895996
    10. ' -' → logprob: -7.681960105895996

Token 2935: ' coup' (ID: 25465)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4652095437049866
    2. '[
' → logprob: -2.715209484100342
    3. '_j' → logprob: -3.340209484100342
    4. 'def' → logprob: -3.340209484100342
    5. ']' → logprob: -3.590209484100342
    6. 'j' → logprob: -3.715209484100342
    7. ' =' → logprob: -3.715209484100342
    8. '[' → logprob: -3.965209484100342
    9. '[j' → logprob: -3.965209484100342
    10. '_' → logprob: -3.965209484100342

Token 2936: 'ures' (ID: 1609)
  Prédit: 'uts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.7112453579902649
    2. 'u' → logprob: -1.8362452983856201
    3. 'ut' → logprob: -1.8362452983856201
    4. '_' → logprob: -2.71124529838562
    5. 's' → logprob: -3.33624529838562
    6. '_cut' → logprob: -4.336245536804199
    7. '#' → logprob: -4.711245536804199
    8. '=' → logprob: -4.961245536804199
    9. ')' → logprob: -5.711245536804199
    10. ']' → logprob: -5.961245536804199

Token 2937: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43952885270118713
    2. '   ' → logprob: -1.1895288228988647
    3. ']' → logprob: -4.939528942108154
    4. ' =' → logprob: -5.189528942108154
    5. ':
' → logprob: -5.189528942108154
    6. '_j' → logprob: -5.189528942108154
    7. ':' → logprob: -5.814528942108154
    8. '_' → logprob: -5.939528942108154
    9. 'j' → logprob: -6.189528942108154
    10. ')' → logprob: -6.314528942108154

Token 2938: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36291420459747314
    2. 'def' → logprob: -2.8629140853881836
    3. ']' → logprob: -2.9879140853881836
    4. '[
' → logprob: -3.3629140853881836
    5. '=' → logprob: -3.8629140853881836
    6. ']
' → logprob: -4.237914085388184
    7. ' =' → logprob: -4.362914085388184
    8. ':
' → logprob: -4.487914085388184
    9. ':' → logprob: -4.487914085388184
    10. '#' → logprob: -4.737914085388184

Token 2939: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14507463574409485
    2. 'def' → logprob: -2.6450746059417725
    3. ':
' → logprob: -4.020074844360352
    4. 'j' → logprob: -4.645074844360352
    5. ':' → logprob: -5.020074844360352
    6. ']
' → logprob: -5.270074844360352
    7. ']' → logprob: -5.520074844360352
    8. '#' → logprob: -5.770074844360352
    9. ')
' → logprob: -5.770074844360352
    10. '_j' → logprob: -6.270074844360352

Token 2940: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02253451757133007
    2. 'def' → logprob: -4.522534370422363
    3. 'j' → logprob: -5.147534370422363
    4. ':' → logprob: -6.522534370422363
    5. '```' → logprob: -7.147534370422363
    6. ']' → logprob: -7.272534370422363
    7. ':
' → logprob: -7.897534370422363
    8. 'n' → logprob: -8.022534370422363
    9. '#' → logprob: -8.022534370422363
    10. '_j' → logprob: -8.397534370422363

Token 2941: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0653943344950676
    2. 'j' → logprob: -3.190394401550293
    3. '#' (adapté à ' #') → logprob: -5.315394401550293
    4. 'def' → logprob: -5.315394401550293
    5. 'n' → logprob: -5.815394401550293
    6. 'p' → logprob: -6.065394401550293
    7. 'joint' → logprob: -6.565394401550293
    8. '```' → logprob: -7.065394401550293
    9. 'length' → logprob: -7.815394401550293
    10. '
' → logprob: -7.815394401550293

Token 2942: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2250366061925888
    2. 'j' → logprob: -2.85003662109375
    3. 'n' → logprob: -2.85003662109375
    4. 'def' → logprob: -3.60003662109375
    5. ']' → logprob: -4.35003662109375
    6. '#' → logprob: -4.72503662109375
    7. 'sorted' → logprob: -5.85003662109375
    8. ')' → logprob: -6.10003662109375
    9. ':
' → logprob: -6.10003662109375
    10. ']
' → logprob: -6.10003662109375

Token 2943: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.030516333878040314
    2. '   ' → logprob: -4.030516147613525
    3. 'on' → logprob: -5.530516147613525
    4. '-' → logprob: -6.405516147613525
    5. 'tri' → logprob: -6.655516147613525
    6. ':' → logprob: -7.030516147613525
    7. 'les' → logprob: -7.155516147613525
    8. 'sorted' → logprob: -7.280516147613525
    9. 'j' → logprob: -7.405516147613525
    10. 'tr' → logprob: -7.530516147613525

Token 2944: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8250569701194763
    2. 'k' → logprob: -0.8250569701194763
    3. 'c' → logprob: -3.075057029724121
    4. ' k' → logprob: -3.075057029724121
    5. ' i' → logprob: -4.075057029724121
    6. ' c' → logprob: -5.325057029724121
    7. 'cut' → logprob: -5.825057029724121
    8. '_' → logprob: -7.075057029724121
    9. 'j' → logprob: -7.325057029724121
    10. ' _' → logprob: -7.825057029724121

Token 2945: ' valeur' (ID: 41664)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.298536092042923
    2. 'i' → logprob: -1.5485360622406006
    3. 'c' → logprob: -4.17353630065918
    4. ')' → logprob: -4.79853630065918
    5. 'n' → logprob: -5.54853630065918
    6. '#' → logprob: -6.17353630065918
    7. 'joint' → logprob: -6.29853630065918
    8. 'j' → logprob: -6.42353630065918
    9. '=' → logprob: -6.54853630065918
    10. '(' → logprob: -6.54853630065918

Token 2946: ' k' (ID: 372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08737070113420486
    2. '=' → logprob: -3.0873706340789795
    3. ')' → logprob: -5.212370872497559
    4. ' _' → logprob: -5.962370872497559
    5. '```' → logprob: -6.087370872497559
    6. ' =' → logprob: -6.087370872497559
    7. ' de' → logprob: -6.337370872497559
    8. 'k' → logprob: -6.462370872497559
    9. ',' → logprob: -6.462370872497559
    10. '_
' → logprob: -6.712370872497559

Token 2947: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1558034420013428
    2. ' =' → logprob: -1.1558034420013428
    3. '=' → logprob: -2.2808034420013428
    4. '_j' → logprob: -3.4058034420013428
    5. '#' → logprob: -3.5308034420013428
    6. ':' → logprob: -3.6558034420013428
    7. ',' → logprob: -3.7808034420013428
    8. ')' → logprob: -3.7808034420013428
    9. '_' → logprob: -4.030803680419922
    10. '-' → logprob: -4.655803680419922

Token 2948: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5275195240974426
    2. ' on' → logprob: -1.2775194644927979
    3. '   ' → logprob: -2.777519464492798
    4. 'on' → logprob: -3.402519464492798
    5. ' #' → logprob: -4.277519702911377
    6. ' ' → logprob: -5.527519702911377
    7. ':' → logprob: -6.027519702911377
    8. 'j' → logprob: -6.027519702911377
    9. '       ' → logprob: -6.152519702911377
    10. ' j' → logprob: -6.402519702911377

Token 2949: ' doit' (ID: 21822)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8777015805244446
    2. '=' → logprob: -1.2527015209197998
    3. '#' → logprob: -2.0027015209198
    4. '[' → logprob: -3.2527015209198
    5. '_sorted' → logprob: -3.8777015209198
    6. 'sort' → logprob: -4.377701759338379
    7. 's' → logprob: -4.377701759338379
    8. ']' → logprob: -4.502701759338379
    9. ',' → logprob: -4.627701759338379
    10. ':' → logprob: -4.877701759338379

Token 2950: ' prendre' (ID: 24257)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.0978062152862549
    2. ' tr' → logprob: -1.4728062152862549
    3. '#' → logprob: -1.8478062152862549
    4. '   ' → logprob: -2.222806215286255
    5. ':' → logprob: -3.472806215286255
    6. '_tr' → logprob: -3.972806215286255
    7. ' choisir' → logprob: -3.972806215286255
    8. ' #' → logprob: -4.222805976867676
    9. '```' → logprob: -4.597805976867676
    10. 'cho' → logprob: -4.597805976867676

Token 2951: ' c' (ID: 274)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9743894338607788
    2. '`' → logprob: -2.3493895530700684
    3. ')' → logprob: -2.7243895530700684
    4. 'les' → logprob: -2.7243895530700684
    5. '```' → logprob: -2.7243895530700684
    6. ']' → logprob: -2.8493895530700684
    7. 'n' → logprob: -2.9743895530700684
    8. '(n' → logprob: -2.9743895530700684
    9. 'the' → logprob: -3.0993895530700684
    10. '=' → logprob: -3.3493895530700684

Token 2952: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7011561393737793
    2. '+' → logprob: -1.3261561393737793
    3. '_' → logprob: -2.2011561393737793
    4. ' =' → logprob: -2.5761561393737793
    5. '-' → logprob: -4.576156139373779
    6. 'h' → logprob: -5.201156139373779
    7. '```' → logprob: -5.201156139373779
    8. ')' → logprob: -5.951156139373779
    9. ',' → logprob: -6.076156139373779
    10. ']' → logprob: -6.326156139373779

Token 2953: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013054695911705494
    2. ' k' → logprob: -4.388054847717285
    3. 'n' → logprob: -8.513054847717285
    4. '(k' → logprob: -9.138054847717285
    5. ' (' → logprob: -9.513054847717285
    6. 'c' → logprob: -9.638054847717285
    7. '(n' → logprob: -10.138054847717285
    8. ' n' → logprob: -10.513054847717285
    9. '0' → logprob: -11.888054847717285
    10. ' c' → logprob: -12.263054847717285

Token 2954: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7331436276435852
    2. '-' → logprob: -0.8581436276435852
    3. '=' → logprob: -3.1081435680389404
    4. '_' → logprob: -3.4831435680389404
    5. ' -' → logprob: -4.9831438064575195
    6. ' =' → logprob: -5.7331438064575195
    7. ' +' → logprob: -6.3581438064575195
    8. ')' → logprob: -6.6081438064575195
    9. '```' → logprob: -6.6081438064575195
    10. ',' → logprob: -7.1081438064575195

Token 2955: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016022215131670237
    2. ' ' → logprob: -6.7516021728515625
    3. '-' → logprob: -8.001602172851562
    4. ' -' → logprob: -9.876602172851562
    5. ')' → logprob: -11.126602172851562
    6. '```' → logprob: -11.751602172851562
    7. '+' → logprob: -11.876602172851562
    8. '=' → logprob: -12.126602172851562
    9. '   ' → logprob: -12.501602172851562
    10. '#' → logprob: -13.376602172851562

Token 2956: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.179569077678025e-05
    2. ' ' → logprob: -10.500041961669922
    3. '```' → logprob: -11.750041961669922
    4. '   ' → logprob: -12.625041961669922
    5. ')' → logprob: -13.875041961669922
    6. '
' → logprob: -14.000041961669922
    7. '#' → logprob: -15.000041961669922
    8. '`' → logprob: -15.250041961669922
    9. '=' → logprob: -15.750041961669922
    10. ']' → logprob: -16.375041961669922

Token 2957: ' joints' (ID: 47223)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3766697347164154
    2. '=' → logprob: -2.1266696453094482
    3. '_' → logprob: -2.7516696453094482
    4. ')' → logprob: -3.3766696453094482
    5. ' =' → logprob: -3.7516696453094482
    6. ' +' → logprob: -3.7516696453094482
    7. '-' → logprob: -4.376669883728027
    8. ':' → logprob: -5.126669883728027
    9. '```' → logprob: -5.376669883728027
    10. ']' → logprob: -5.376669883728027

Token 2958: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05574144795536995
    2. 's' → logprob: -3.805741548538208
    3. ' =' → logprob: -4.805741310119629
    4. '=' → logprob: -4.805741310119629
    5. '_c' → logprob: -5.805741310119629
    6. '```' → logprob: -6.180741310119629
    7. '_to' → logprob: -6.305741310119629
    8. '[' → logprob: -6.430741310119629
    9. ']' → logprob: -6.930741310119629
    10. ')' → logprob: -6.930741310119629

Token 2959: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.11511807143688202
    2. 'é' → logprob: -2.7401180267333984
    3. '_' → logprob: -3.7401180267333984
    4. 'ées' → logprob: -4.615118026733398
    5. 'es' → logprob: -4.990118026733398
    6. 'er' → logprob: -6.615118026733398
    7. '__' → logprob: -7.490118026733398
    8. 's' → logprob: -8.365118026733398
    9. '�' → logprob: -8.615118026733398
    10. '#' → logprob: -8.740118026733398

Token 2960: ' qui' (ID: 2780)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8638501763343811
    2. '[' → logprob: -1.9888501167297363
    3. ']' → logprob: -2.1138501167297363
    4. '   ' → logprob: -2.4888501167297363
    5. ' =' → logprob: -2.9888501167297363
    6. '=' → logprob: -3.1138501167297363
    7. ':' → logprob: -3.4888501167297363
    8. '[
' → logprob: -3.4888501167297363
    9. ')' → logprob: -3.9888501167297363
    10. '[i' → logprob: -4.238850116729736

Token 2961: ' minim' (ID: 23874)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36644217371940613
    2. 's' → logprob: -1.8664422035217285
    3. '```' → logprob: -3.3664422035217285
    4. ' =' → logprob: -3.7414422035217285
    5. 'est' → logprob: -4.1164422035217285
    6. ' sont' → logprob: -4.1164422035217285
    7. '#' → logprob: -4.2414422035217285
    8. '+' → logprob: -4.6164422035217285
    9. 'ont' → logprob: -5.3664422035217285
    10. '<=' → logprob: -5.6164422035217285

Token 2962: 'isent' (ID: 68781)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9890813827514648
    2. 'er' → logprob: -2.239081382751465
    3. '=' → logprob: -2.489081382751465
    4. '=
' → logprob: -2.614081382751465
    5. 'e' → logprob: -2.989081382751465
    6. 'és' → logprob: -3.114081382751465
    7. 'isés' → logprob: -3.114081382751465
    8. 'ents' → logprob: -3.114081382751465
    9. '```' → logprob: -3.614081382751465
    10. ')' → logprob: -4.614081382751465

Token 2963: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1723150908946991
    2. '```' → logprob: -2.9223151206970215
    3. '=' → logprob: -3.4223151206970215
    4. ' _' → logprob: -3.9223151206970215
    5. '_l' → logprob: -4.6723151206970215
    6. 'le' → logprob: -4.9223151206970215
    7. '_le' → logprob: -5.0473151206970215
    8. 'la' → logprob: -5.2973151206970215
    9. '_la' → logprob: -5.4223151206970215
    10. ' la' → logprob: -6.0473151206970215

Token 2964: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.2539328336715698
    2. '_' → logprob: -1.5039328336715698
    3. '_j' → logprob: -7.378932952880859
    4. '_cut' → logprob: -7.628932952880859
    5. '```' → logprob: -8.62893295288086
    6. 's' → logprob: -9.25393295288086
    7. '_)' → logprob: -9.25393295288086
    8. '\' → logprob: -9.75393295288086
    9. ')_' → logprob: -9.87893295288086
    10. ''_' → logprob: -10.12893295288086

Token 2965: 'oup' (ID: 9999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9625830054283142
    2. 'ut' → logprob: -1.337583065032959
    3. 'oup' → logprob: -1.337583065032959
    4. 'oupes' → logprob: -3.712583065032959
    5. 'o' → logprob: -4.212583065032959
    6. 'ou' → logprob: -4.212583065032959
    7. 'uts' → logprob: -4.337583065032959
    8. 'u' → logprob: -4.587583065032959
    9. '__' → logprob: -5.587583065032959
    10. 'utt' → logprob: -6.087583065032959

Token 2966: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02391228824853897
    2. 'ures' → logprob: -4.77391242980957
    3. 'u' → logprob: -5.02391242980957
    4. '_u' → logprob: -6.14891242980957
    5. '_cut' → logprob: -6.64891242980957
    6. '__' → logprob: -6.89891242980957
    7. 'es' → logprob: -7.27391242980957
    8. 'e' → logprob: -7.77391242980957
    9. '_
' → logprob: -8.02391242980957
    10. 'é' → logprob: -8.27391242980957

Token 2967: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0278548002243042
    2. 'def' → logprob: -2.0278549194335938
    3. '_j' → logprob: -2.1528549194335938
    4. '[
' → logprob: -2.7778549194335938
    5. ']' → logprob: -3.0278549194335938
    6. ' =' → logprob: -3.2778549194335938
    7. 's' → logprob: -3.4028549194335938
    8. '[j' → logprob: -3.5278549194335938
    9. ':
' → logprob: -3.7778549194335938
    10. '_' → logprob: -3.9028549194335938

Token 2968: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062286511063575745
    2. 'def' → logprob: -3.437286615371704
    3. ':' → logprob: -5.062286376953125
    4. 'j' → logprob: -5.437286376953125
    5. ':
' → logprob: -5.437286376953125
    6. '```' → logprob: -6.187286376953125
    7. '_j' → logprob: -6.687286376953125
    8. '       ' → logprob: -7.187286376953125
    9. ']' → logprob: -7.187286376953125
    10. 'n' → logprob: -7.312286376953125

Token 2969: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03765064477920532
    2. 'def' → logprob: -3.6626505851745605
    3. ':' → logprob: -5.9126505851745605
    4. ':
' → logprob: -6.4126505851745605
    5. 'j' → logprob: -6.4126505851745605
    6. 'n' → logprob: -7.0376505851745605
    7. '```' → logprob: -7.2876505851745605
    8. '       ' → logprob: -7.6626505851745605
    9. ',' → logprob: -8.412651062011719
    10. '    
' → logprob: -8.412651062011719

Token 2970: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24216768145561218
    2. 'def' → logprob: -1.7421677112579346
    3. 'n' → logprob: -4.1171674728393555
    4. ':' → logprob: -4.3671674728393555
    5. '```' → logprob: -5.7421674728393555
    6. 'j' → logprob: -6.2421674728393555
    7. '#' → logprob: -7.1171674728393555
    8. ':
' → logprob: -7.4921674728393555
    9. 'import' → logprob: -7.4921674728393555
    10. 'p' → logprob: -7.4921674728393555

Token 2971: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010677903890609741
    2. 'def' → logprob: -5.135677814483643
    3. 'j' → logprob: -6.260677814483643
    4. 'n' → logprob: -6.635677814483643
    5. ':' → logprob: -8.1356782913208
    6. '       ' → logprob: -8.5106782913208
    7. '    
' → logprob: -8.6356782913208
    8. '
' → logprob: -8.7606782913208
    9. '```' → logprob: -9.2606782913208
    10. ')' → logprob: -9.5106782913208

Token 2972: ' En' (ID: 2130)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9321227669715881
    2. 'n' → logprob: -1.0571227073669434
    3. '   ' → logprob: -1.4321227073669434
    4. '#' → logprob: -5.432122707366943
    5. '```' → logprob: -5.557122707366943
    6. 'j' → logprob: -6.057122707366943
    7. 'import' → logprob: -6.057122707366943
    8. '(n' → logprob: -6.307122707366943
    9. '
' → logprob: -7.432122707366943
    10. ':' → logprob: -7.807122707366943

Token 2973: ' d' (ID: 272)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7102808356285095
    2. 'n' → logprob: -1.3352808952331543
    3. 'j' → logprob: -2.7102808952331543
    4. '=' → logprob: -2.7102808952331543
    5. 'def' → logprob: -4.460280895233154
    6. ']' → logprob: -4.710280895233154
    7. 'append' → logprob: -4.835280895233154
    8. ' =' → logprob: -4.835280895233154
    9. '
' → logprob: -4.960280895233154
    10. 'sort' → logprob: -5.085280895233154

Token 2974: ''autres' (ID: 38753)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.972801148891449
    2. '=' → logprob: -1.4728012084960938
    3. 'ef' → logprob: -2.0978012084960938
    4. ']' → logprob: -2.8478012084960938
    5. 'e' → logprob: -3.3478012084960938
    6. '_' → logprob: -3.4728012084960938
    7. 'n' → logprob: -3.4728012084960938
    8. '[' → logprob: -3.8478012084960938
    9. ' =' → logprob: -3.8478012084960938
    10. 'j' → logprob: -3.9728012084960938

Token 2975: ' termes' (ID: 72480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3589100241661072
    2. '_
' → logprob: -2.608910083770752
    3. 'range' → logprob: -2.858910083770752
    4. '```' → logprob: -4.108910083770752
    5. '_j' → logprob: -4.233910083770752
    6. '   ' → logprob: -4.233910083770752
    7. ''' → logprob: -4.358910083770752
    8. 'def' → logprob: -4.483910083770752
    9. '`' → logprob: -4.483910083770752
    10. '_\' → logprob: -4.733910083770752

Token 2976: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7747138142585754
    2. '#' → logprob: -1.1497137546539307
    3. '   ' → logprob: -1.8997137546539307
    4. ':
' → logprob: -3.5247137546539307
    5. ',' → logprob: -3.8997137546539307
    6. ' =' → logprob: -5.52471399307251
    7. 'def' → logprob: -6.02471399307251
    8. '=' → logprob: -6.64971399307251
    9. ' (' → logprob: -6.77471399307251
    10. '#
' → logprob: -6.89971399307251

Token 2977: ' c' (ID: 274)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20289525389671326
    2. '   ' → logprob: -1.9528952836990356
    3. ':' → logprob: -4.577895164489746
    4. 'n' → logprob: -5.827895164489746
    5. '#
' → logprob: -5.827895164489746
    6. 'j' → logprob: -5.952895164489746
    7. ':
' → logprob: -5.952895164489746
    8. 'for' → logprob: -5.952895164489746
    9. '```' → logprob: -6.202895164489746
    10. ' on' → logprob: -6.327895164489746

Token 2978: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10812798887491226
    2. ' =' → logprob: -2.358128070831299
    3. '_' → logprob: -5.358128070831299
    4. ',' → logprob: -7.483128070831299
    5. '#' → logprob: -7.608128070831299
    6. '=
' → logprob: -8.10812759399414
    7. 'on' → logprob: -8.85812759399414
    8. '+' → logprob: -8.98312759399414
    9. 'h' → logprob: -9.35812759399414
    10. '=c' → logprob: -9.35812759399414

Token 2979: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.26290592551231384
    2. '0' → logprob: -1.6379059553146362
    3. '=' → logprob: -3.8879058361053467
    4. 'n' → logprob: -4.887906074523926
    5. ' k' → logprob: -6.012906074523926
    6. '1' → logprob: -6.262906074523926
    7. ' =' → logprob: -7.012906074523926
    8. 'c' → logprob: -7.137906074523926
    9. '=k' → logprob: -7.512906074523926
    10. '(n' → logprob: -7.762906074523926

Token 2980: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06044745072722435
    2. ' -' → logprob: -2.9354474544525146
    3. ' =' → logprob: -5.9354472160339355
    4. '=' → logprob: -6.5604472160339355
    5. '_' → logprob: -7.9354472160339355
    6. '   ' → logprob: -8.310447692871094
    7. '_minus' → logprob: -8.935447692871094
    8. '```' → logprob: -9.310447692871094
    9. '+' → logprob: -9.560447692871094
    10. '#' → logprob: -9.685447692871094

Token 2981: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47946712374687195
    2. '1' → logprob: -0.9794671535491943
    3. ' -' → logprob: -5.354466915130615
    4. ' ' → logprob: -7.854466915130615
    5. '```' → logprob: -9.229467391967773
    6. 'minus' → logprob: -10.229467391967773
    7. '   ' → logprob: -10.604467391967773
    8. '
' → logprob: -11.229467391967773
    9. ' ' → logprob: -11.354467391967773
    10. '#' → logprob: -11.354467391967773

Token 2982: ' plus' (ID: 2932)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.414939045906067
    2. '   ' → logprob: -1.914939045906067
    3. ']' → logprob: -2.2899389266967773
    4. '_j' → logprob: -2.2899389266967773
    5. ':' → logprob: -2.6649389266967773
    6. ')' → logprob: -3.0399389266967773
    7. '=' → logprob: -3.0399389266967773
    8. '_' → logprob: -3.0399389266967773
    9. '[j' → logprob: -3.2899389266967773
    10. '[' → logprob: -4.039938926696777

Token 2983: ' petits' (ID: 38141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8275725245475769
    2. ')' → logprob: -2.0775725841522217
    3. ' =' → logprob: -2.0775725841522217
    4. '+' → logprob: -2.3275725841522217
    5. '1' → logprob: -2.8275725841522217
    6. ']' → logprob: -2.8275725841522217
    7. '_' → logprob: -3.5775725841522217
    8. ',' → logprob: -5.077572345733643
    9. '[' → logprob: -5.077572345733643
    10. '>' → logprob: -5.327572345733643

Token 2984: ' joints' (ID: 47223)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.25918877124786377
    2. '_' → logprob: -1.6341887712478638
    3. 'j' → logprob: -4.634188652038574
    4. ']' → logprob: -5.509188652038574
    5. '```' → logprob: -5.884188652038574
    6. ' =' → logprob: -6.009188652038574
    7. ')' → logprob: -6.009188652038574
    8. '_joint' → logprob: -6.134188652038574
    9. ' _' → logprob: -6.634188652038574
    10. '`' → logprob: -7.134188652038574

Token 2985: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3746447563171387
    2. '[
' → logprob: -1.6246447563171387
    3. '[' → logprob: -2.1246447563171387
    4. ']' → logprob: -2.3746447563171387
    5. '```' → logprob: -2.6246447563171387
    6. '_' → logprob: -3.2496447563171387
    7. ' =' → logprob: -3.7496447563171387
    8. 'def' → logprob: -3.7496447563171387
    9. '[j' → logprob: -3.7496447563171387
    10. 's' → logprob: -4.124644756317139

Token 2986: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.03952974081039429
    2. 'util' → logprob: -4.039529800415039
    3. 'cut' → logprob: -4.414529800415039
    4. 'c' → logprob: -4.914529800415039
    5. '
' → logprob: -7.164529800415039
    6. ' couper' → logprob: -7.664529800415039
    7. '#' → logprob: -9.289529800415039
    8. '```' → logprob: -9.664529800415039
    9. ' utiliser' → logprob: -10.164529800415039
    10. 'co' → logprob: -10.789529800415039

Token 2987: '?' (ID: 30)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44111308455467224
    2. 'def' → logprob: -2.191112995147705
    3. ']' → logprob: -2.941112995147705
    4. ':
' → logprob: -3.691112995147705
    5. ' =' → logprob: -3.941112995147705
    6. ']
' → logprob: -4.191112995147705
    7. '[i' → logprob: -4.316112995147705
    8. '_j' → logprob: -4.441112995147705
    9. '[
' → logprob: -4.566112995147705
    10. '```' → logprob: -4.566112995147705

Token 2988: ' Non' (ID: 13763)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6440794467926025
    2. '   ' → logprob: -2.0190794467926025
    3. ']' → logprob: -2.2690794467926025
    4. 'def' → logprob: -2.8940794467926025
    5. '#' → logprob: -3.2690794467926025
    6. '[' → logprob: -3.6440794467926025
    7. ':
' → logprob: -3.7690794467926025
    8. 'import' → logprob: -4.144079208374023
    9. '[
' → logprob: -4.269079208374023
    10. '[j' → logprob: -5.019079208374023

Token 2989: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4468395709991455
    2. '#' → logprob: -1.6968395709991455
    3. '[' → logprob: -1.8218395709991455
    4. ':' → logprob: -2.1968395709991455
    5. '<|end|>' → logprob: -2.1968395709991455
    6. ',' → logprob: -3.0718395709991455
    7. '=' → logprob: -3.3218395709991455
    8. 'import' → logprob: -4.071839332580566
    9. '[
' → logprob: -4.321839332580566
    10. '+' → logprob: -4.696839332580566

Token 2990: ' car' (ID: 1669)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.017861222848296165
    2. ' #' → logprob: -4.892861366271973
    3. ' c' → logprob: -6.767861366271973
    4. 'c' → logprob: -7.017861366271973
    5. 'il' → logprob: -7.642861366271973
    6. 'import' → logprob: -7.642861366271973
    7. 'mais' → logprob: -7.642861366271973
    8. 'non' → logprob: -7.767861366271973
    9. '```' → logprob: -7.767861366271973
    10. 'car' → logprob: -7.892861366271973

Token 2991: ' couper' (ID: 135212)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2164310216903687
    2. ' k' → logprob: -2.341431140899658
    3. ' ' → logprob: -2.716431140899658
    4. ' n' → logprob: -2.841431140899658
    5. ' #' → logprob: -3.091431140899658
    6. ' c' → logprob: -3.216431140899658
    7. ' la' → logprob: -3.216431140899658
    8. 'n' → logprob: -3.591431140899658
    9. 'the' → logprob: -3.716431140899658
    10. 'c' → logprob: -3.716431140899658

Token 2992: ' les' (ID: 1341)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8980050086975098
    2. '_' → logprob: -1.0230050086975098
    3. 'les' → logprob: -2.0230050086975098
    4. ' =' → logprob: -3.0230050086975098
    5. '#' → logprob: -5.02300500869751
    6. 'des' → logprob: -5.14800500869751
    7. 'à' → logprob: -5.89800500869751
    8. 's' → logprob: -6.02300500869751
    9. 'the' → logprob: -6.14800500869751
    10. '_des' → logprob: -6.27300500869751

Token 2993: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.2055751383304596
    2. '+' → logprob: -1.9555751085281372
    3. ' plus' → logprob: -3.7055752277374268
    4. '+
' → logprob: -5.330574989318848
    5. '#' → logprob: -5.830574989318848
    6. 'c' → logprob: -6.205574989318848
    7. 'n' → logprob: -6.205574989318848
    8. '=' → logprob: -6.455574989318848
    9. ')' → logprob: -7.455574989318848
    10. '_plus' → logprob: -7.580574989318848

Token 2994: ' petits' (ID: 38141)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.47877106070518494
    2. 'grand' → logprob: -1.6037710905075073
    3. 'pet' → logprob: -2.7287709712982178
    4. 'long' → logprob: -3.1037709712982178
    5. ' grands' → logprob: -3.3537709712982178
    6. 'import' → logprob: -4.853771209716797
    7. ' grand' → logprob: -4.978771209716797
    8. ' ' → logprob: -5.853771209716797
    9. ' grandes' → logprob: -5.853771209716797
    10. '_' → logprob: -5.978771209716797

Token 2995: ' joints' (ID: 47223)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.12720181047916412
    2. '_' → logprob: -2.627201795578003
    3. '_joint' → logprob: -4.127202033996582
    4. 'j' → logprob: -4.877202033996582
    5. '_lengths' → logprob: -5.377202033996582
    6. ' _' → logprob: -5.877202033996582
    7. '_length' → logprob: -6.002202033996582
    8. ')' → logprob: -6.252202033996582
    9. '_val' → logprob: -6.502202033996582
    10. '_p' → logprob: -7.002202033996582

Token 2996: ' réduit' (ID: 120775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2818443775177002
    2. '[i' → logprob: -1.6568443775177002
    3. ']' → logprob: -2.5318443775177
    4. '=' → logprob: -2.7818443775177
    5. '```' → logprob: -2.9068443775177
    6. '[j' → logprob: -3.1568443775177
    7. '[
' → logprob: -3.1568443775177
    8. ' =' → logprob: -3.2818443775177
    9. '_' → logprob: -3.2818443775177
    10. ')' → logprob: -3.4068443775177

Token 2997: ' sum' (ID: 4215)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0516854524612427
    2. 'la' → logprob: -1.8016854524612427
    3. 'les' → logprob: -2.051685333251953
    4. 'l' → logprob: -2.176685333251953
    5. ' la' → logprob: -2.676685333251953
    6. '<|end|>' → logprob: -3.301685333251953
    7. '_le' → logprob: -3.926685333251953
    8. 'leur' → logprob: -4.176685333251953
    9. '_' → logprob: -4.301685333251953
    10. ' les' → logprob: -4.301685333251953

Token 2998: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6979703307151794
    2. '_c' → logprob: -0.6979703307151794
    3. ''_' → logprob: -5.947970390319824
    4. '"_' → logprob: -7.197970390319824
    5. '_j' → logprob: -7.572970390319824
    6. '_cut' → logprob: -8.697970390319824
    7. '_)' → logprob: -8.947970390319824
    8. ')_' → logprob: -8.947970390319824
    9. '_
' → logprob: -9.572970390319824
    10. '\' → logprob: -9.697970390319824

Token 2999: 'oup' (ID: 9999)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.09676162898540497
    2. '_' → logprob: -2.471761703491211
    3. '_cut' → logprob: -5.346761703491211
    4. 'c' → logprob: -6.596761703491211
    5. 'oup' → logprob: -8.596761703491211
    6. '_co' → logprob: -8.721761703491211
    7. ''_' → logprob: -8.721761703491211
    8. ' _' → logprob: -8.846761703491211
    9. '```' → logprob: -8.846761703491211
    10. '__' → logprob: -8.971761703491211

Token 3000: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21885451674461365
    2. 'ures' → logprob: -1.968854546546936
    3. '__' → logprob: -3.7188544273376465
    4. '_cut' → logprob: -4.7188544273376465
    5. 'u' → logprob: -5.8438544273376465
    6. '_c' → logprob: -5.8438544273376465
    7. '```' → logprob: -5.9688544273376465
    8. 'uré' → logprob: -6.7188544273376465
    9. ''_' → logprob: -6.7188544273376465
    10. ' _' → logprob: -6.8438544273376465

Token 3001: ' ?
' (ID: 19740)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1490917205810547
    2. '_' → logprob: -1.2740917205810547
    3. '[' → logprob: -1.7740917205810547
    4. '[i' → logprob: -3.1490917205810547
    5. ')' → logprob: -3.3990917205810547
    6. '```' → logprob: -3.6490917205810547
    7. '[j' → logprob: -3.8990917205810547
    8. '   ' → logprob: -4.274091720581055
    9. '=' → logprob: -4.399091720581055
    10. '_j' → logprob: -4.649091720581055

Token 3002: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2763497829437256
    2. '[' → logprob: -1.6513497829437256
    3. '#' → logprob: -2.1513497829437256
    4. '   ' → logprob: -2.7763497829437256
    5. ':' → logprob: -2.9013497829437256
    6. '=' → logprob: -3.2763497829437256
    7. ',' → logprob: -3.4013497829437256
    8. '.' → logprob: -3.5263497829437256
    9. ')' → logprob: -3.5263497829437256
    10. 'import' → logprob: -4.151350021362305

Token 3003: ' #
' (ID: 21888)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5288984775543213
    2. '.' → logprob: -1.9038984775543213
    3. '[' → logprob: -2.0288984775543213
    4. '   ' → logprob: -2.2788984775543213
    5. ',' → logprob: -2.6538984775543213
    6. ':' → logprob: -2.7788984775543213
    7. ')' → logprob: -3.1538984775543213
    8. '+' → logprob: -3.5288984775543213
    9. '=' → logprob: -3.9038984775543213
    10. '?' → logprob: -3.9038984775543213

Token 3004: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8283137083053589
    2. '#' → logprob: -0.9533137083053589
    3. '[' → logprob: -3.0783138275146484
    4. ':' → logprob: -3.5783138275146484
    5. ']' → logprob: -3.9533138275146484
    6. ')' → logprob: -4.203313827514648
    7. '[
' → logprob: -4.828313827514648
    8. '=' → logprob: -5.203313827514648
    9. '+' → logprob: -5.203313827514648
    10. 'import' → logprob: -5.328313827514648

Token 3005: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9613385200500488
    2. '#' (adapté à ' #') → logprob: -1.4613385200500488
    3. '=' → logprob: -2.586338520050049
    4. '   ' → logprob: -3.211338520050049
    5. '(' → logprob: -3.461338520050049
    6. ')' → logprob: -3.461338520050049
    7. '-' → logprob: -3.461338520050049
    8. '[' → logprob: -3.461338520050049
    9. ',' → logprob: -3.711338520050049
    10. ':' → logprob: -3.711338520050049

Token 3006: ' Oui' (ID: 87429)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5035779476165771
    2. 'def' → logprob: -2.753577947616577
    3. '#' → logprob: -3.003577947616577
    4. ']' → logprob: -3.128577947616577
    5. ':
' → logprob: -3.253577947616577
    6. ':' → logprob: -3.503577947616577
    7. ']
' → logprob: -3.628577947616577
    8. '[
' → logprob: -3.628577947616577
    9. '#
' → logprob: -4.128578186035156
    10. '=' → logprob: -4.253578186035156

Token 3007: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8939530253410339
    2. '[' → logprob: -1.8939530849456787
    3. ']' → logprob: -2.2689530849456787
    4. 'def' → logprob: -2.6439530849456787
    5. '[
' → logprob: -2.8939530849456787
    6. '   ' → logprob: -3.0189530849456787
    7. '[n' → logprob: -3.5189530849456787
    8. ',' → logprob: -3.7689530849456787
    9. '.' → logprob: -4.3939528465271
    10. '```' → logprob: -4.5189528465271

Token 3008: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05497831478714943
    2. ':' → logprob: -3.804978370666504
    3. 'def' → logprob: -4.054978370666504
    4. ':
' → logprob: -5.304978370666504
    5. 'j' → logprob: -6.679978370666504
    6. ',' → logprob: -6.804978370666504
    7. ' =' → logprob: -7.304978370666504
    8. ')' → logprob: -7.429978370666504
    9. '#' → logprob: -7.679978370666504
    10. '
' → logprob: -7.804978370666504

Token 3009: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1271446943283081
    2. 'def' → logprob: -2.3771448135375977
    3. ':' → logprob: -4.877144813537598
    4. 'j' → logprob: -5.877144813537598
    5. ':
' → logprob: -5.877144813537598
    6. '#' → logprob: -6.502144813537598
    7. '       ' → logprob: -6.752144813537598
    8. ')' → logprob: -6.877144813537598
    9. '[' → logprob: -7.002144813537598
    10. '```' → logprob: -7.002144813537598

Token 3010: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08685465157032013
    2. 'def' → logprob: -2.7118546962738037
    3. ':' → logprob: -5.961854457855225
    4. '#' → logprob: -6.086854457855225
    5. 'n' → logprob: -6.086854457855225
    6. 'j' → logprob: -6.461854457855225
    7. 'import' → logprob: -6.586854457855225
    8. ')' → logprob: -7.461854457855225
    9. '(
' → logprob: -7.461854457855225
    10. 'p' → logprob: -7.586854457855225

Token 3011: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041313569992780685
    2. 'def' → logprob: -3.541313648223877
    3. 'j' → logprob: -5.416313648223877
    4. 'p' → logprob: -6.416313648223877
    5. 'n' → logprob: -6.416313648223877
    6. '#' (adapté à ' #') → logprob: -6.916313648223877
    7. '```' → logprob: -7.541313648223877
    8. 'import' → logprob: -8.166313171386719
    9. '[
' → logprob: -8.541313171386719
    10. 'joint' → logprob: -8.666313171386719

Token 3012: ' Donc' (ID: 88837)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4543790817260742
    2. '   ' → logprob: -1.9543790817260742
    3. 'n' → logprob: -2.829379081726074
    4. '#' → logprob: -3.079379081726074
    5. '[
' → logprob: -3.329379081726074
    6. 'j' → logprob: -4.329379081726074
    7. '(
' → logprob: -4.454379081726074
    8. 'p' → logprob: -4.454379081726074
    9. ']' → logprob: -4.704379081726074
    10. '[' → logprob: -4.829379081726074

Token 3013: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3163635730743408
    2. '   ' → logprob: -2.066363573074341
    3. 'sorted' → logprob: -3.816363573074341
    4. ' on' → logprob: -4.066363334655762
    5. ' #' → logprob: -4.441363334655762
    6. 'on' → logprob: -4.691363334655762
    7. 'for' → logprob: -4.816363334655762
    8. 'import' → logprob: -4.816363334655762
    9. ':' → logprob: -4.941363334655762
    10. 'j' → logprob: -5.066363334655762

Token 3014: ' coupe' (ID: 71780)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.8787007331848145
    2. '.' → logprob: -1.6287007331848145
    3. '#' → logprob: -2.0037007331848145
    4. 'sort' → logprob: -3.1287007331848145
    5. ' .' → logprob: -3.2537007331848145
    6. '=' → logprob: -3.6287007331848145
    7. '[' → logprob: -3.6287007331848145
    8. '_sorted' → logprob: -3.6287007331848145
    9. '.append' → logprob: -4.0037007331848145
    10. 'sorted' → logprob: -4.5037007331848145

Token 3015: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07521233707666397
    2. ' =' → logprob: -3.825212240219116
    3. 'les' → logprob: -4.200212478637695
    4. ' _' → logprob: -4.450212478637695
    5. '=' → logprob: -4.575212478637695
    6. ' les' → logprob: -5.075212478637695
    7. '```' → logprob: -6.075212478637695
    8. '_le' → logprob: -7.450212478637695
    9. '   ' → logprob: -7.825212478637695
    10. '_sur' → logprob: -7.950212478637695

Token 3016: ' joints' (ID: 47223)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.09859658032655716
    2. ' plus' → logprob: -2.4735965728759766
    3. 'pet' → logprob: -5.598596572875977
    4. 'moins' → logprob: -5.973596572875977
    5. 'j' → logprob: -7.348596572875977
    6. ' petits' → logprob: -7.473596572875977
    7. 'minus' → logprob: -7.723596572875977
    8. '+' → logprob: -8.223596572875977
    9. '#' → logprob: -8.723596572875977
    10. ' ' → logprob: -8.848596572875977

Token 3017: ' avec' (ID: 3937)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9834851622581482
    2. '[' → logprob: -1.483485221862793
    3. '_' → logprob: -1.983485221862793
    4. 'les' → logprob: -2.608485221862793
    5. '[len' → logprob: -3.733485221862793
    6. '#' → logprob: -3.858485221862793
    7. '_util' → logprob: -3.983485221862793
    8. '_c' → logprob: -4.108485221862793
    9. '```' → logprob: -4.108485221862793
    10. '[i' → logprob: -4.233485221862793

Token 3018: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3451510965824127
    2. 'les' → logprob: -1.5951510667800903
    3. 'plus' → logprob: -2.84515118598938
    4. ' la' → logprob: -3.97015118598938
    5. 'le' → logprob: -5.720150947570801
    6. ' les' → logprob: -5.845150947570801
    7. ' plus' → logprob: -5.970150947570801
    8. '#' → logprob: -7.220150947570801
    9. 'l' → logprob: -7.970150947570801
    10. '_la' → logprob: -7.970150947570801

Token 3019: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.02773086540400982
    2. ' plus' → logprob: -4.027730941772461
    3. 'pet' → logprob: -5.527730941772461
    4. 'moins' → logprob: -6.027730941772461
    5. '+
' → logprob: -7.277730941772461
    6. '+' → logprob: -7.652730941772461
    7. '#' → logprob: -7.777730941772461
    8. 'me' → logprob: -7.902730941772461
    9. 'small' → logprob: -8.027730941772461
    10. 'min' → logprob: -8.527730941772461

Token 3020: ' petites' (ID: 55617)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.035398274660110474
    2. 'cour' → logprob: -3.910398244857788
    3. '```' → logprob: -5.535398483276367
    4. ' petits' → logprob: -5.660398483276367
    5. 'court' → logprob: -5.785398483276367
    6. 'long' → logprob: -6.535398483276367
    7. '   ' → logprob: -7.410398483276367
    8. 'b' → logprob: -7.910398483276367
    9. 'short' → logprob: -8.160398483276367
    10. ' petites' → logprob: -8.535398483276367

Token 3021: ' longue' (ID: 59564)
  Prédit: '_long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -0.5462328195571899
    2. '_' → logprob: -1.67123281955719
    3. ' longue' → logprob: -2.4212327003479004
    4. '_lengths' → logprob: -3.1712327003479004
    5. ' _' → logprob: -3.2962327003479004
    6. '_val' → logprob: -3.5462327003479004
    7. 'long' → logprob: -4.1712327003479
    8. '_length' → logprob: -5.1712327003479
    9. '_joint' → logprob: -6.2962327003479
    10. '_j' → logprob: -6.5462327003479

Token 3022: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.06406767666339874
    2. 'r' → logprob: -3.5640676021575928
    3. 'ur' → logprob: -4.439067840576172
    4. '_' → logprob: -4.439067840576172
    5. 'rs' → logprob: -6.439067840576172
    6. 't' → logprob: -6.689067840576172
    7. 'reurs' → logprob: -6.939067840576172
    8. '_r' → logprob: -7.189067840576172
    9. '```' → logprob: -7.189067840576172
    10. 's' → logprob: -7.314067840576172

Token 3023: ' pour' (ID: 1930)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4311412572860718
    2. 'def' → logprob: -1.8061412572860718
    3. '[' → logprob: -2.3061413764953613
    4. '[
' → logprob: -2.3061413764953613
    5. ']' → logprob: -2.5561413764953613
    6. '   ' → logprob: -2.6811413764953613
    7. '```' → logprob: -2.8061413764953613
    8. ':
' → logprob: -3.3061413764953613
    9. '[j' → logprob: -3.4311413764953613
    10. ':' → logprob: -3.6811413764953613

Token 3024: ' minim' (ID: 23874)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.6354517936706543
    2. 'i' → logprob: -2.0104517936706543
    3. '#' → logprob: -2.6354517936706543
    4. '   ' → logprob: -3.2604517936706543
    5. ' ' → logprob: -3.5104517936706543
    6. ' couper' → logprob: -3.7604517936706543
    7. '_cut' → logprob: -3.7604517936706543
    8. 'c' → logprob: -3.8854517936706543
    9. '```' → logprob: -4.010451793670654
    10. ' i' → logprob: -4.135451793670654

Token 3025: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.009235928766429424
    2. 'er' → logprob: -5.134235858917236
    3. 'izer' → logprob: -6.509235858917236
    4. 'ser' → logprob: -6.759235858917236
    5. 'isez' → logprob: -8.384236335754395
    6. '```' → logprob: -9.259236335754395
    7. 'ver' → logprob: -9.634236335754395
    8. 'zer' → logprob: -10.259236335754395
    9. 'ner' → logprob: -10.509236335754395
    10. 'ize' → logprob: -10.759236335754395

Token 3026: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.13649001717567444
    2. '_' → logprob: -3.0114901065826416
    3. 'sum' → logprob: -3.2614901065826416
    4. '_c' → logprob: -4.3864898681640625
    5. ' _' → logprob: -4.7614898681640625
    6. '_le' → logprob: -4.8864898681640625
    7. '_cut' → logprob: -5.6364898681640625
    8. '_l' → logprob: -6.2614898681640625
    9. '_la' → logprob: -6.8864898681640625
    10. '```' → logprob: -7.2614898681640625

Token 3027: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4347548484802246
    2. '_c' → logprob: -1.0597548484802246
    3. '_cut' → logprob: -6.434754848480225
    4. ''_' → logprob: -6.684754848480225
    5. '```' → logprob: -6.934754848480225
    6. '_j' → logprob: -7.809754848480225
    7. '`' → logprob: -8.184755325317383
    8. '"_' → logprob: -8.309755325317383
    9. '_)' → logprob: -8.684755325317383
    10. 's' → logprob: -9.059755325317383

Token 3028: 'oup' (ID: 9999)
  Prédit: 'oup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.09947728365659714
    2. 'oupes' → logprob: -3.0994772911071777
    3. '_' → logprob: -3.9744772911071777
    4. 'ou' → logprob: -4.724477291107178
    5. 'ut' → logprob: -4.974477291107178
    6. '_cut' → logprob: -5.474477291107178
    7. 'out' → logprob: -5.599477291107178
    8. 'o' → logprob: -5.849477291107178
    9. 'oupe' → logprob: -7.349477291107178
    10. 'op' → logprob: -7.349477291107178

Token 3029: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4454894959926605
    2. '_cut' → logprob: -1.195489525794983
    3. 'ures' → logprob: -4.070489406585693
    4. '_c' → logprob: -4.195489406585693
    5. '__' → logprob: -5.070489406585693
    6. 'es' → logprob: -5.570489406585693
    7. 'é' → logprob: -6.695489406585693
    8. '_u' → logprob: -7.195489406585693
    9. ''_' → logprob: -7.195489406585693
    10. 'u' → logprob: -7.320489406585693

Token 3030: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08329710364341736
    2. '   ' → logprob: -2.83329701423645
    3. 's' → logprob: -5.583297252655029
    4. '(
' → logprob: -5.833297252655029
    5. '(n' → logprob: -5.958297252655029
    6. 'import' → logprob: -6.458297252655029
    7. '()
' → logprob: -6.583297252655029
    8. ':
' → logprob: -6.708297252655029
    9. ':' → logprob: -7.083297252655029
    10. 'n' → logprob: -7.208297252655029

Token 3031: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02254372648894787
    2. '   ' → logprob: -4.022543907165527
    3. 'if' → logprob: -5.897543907165527
    4. ':
' → logprob: -7.897543907165527
    5. ':' → logprob: -8.647543907165527
    6. 'import' → logprob: -8.772543907165527
    7. 'n' → logprob: -8.772543907165527
    8. 'from' → logprob: -8.772543907165527
    9. ' def' → logprob: -9.147543907165527
    10. '(
' → logprob: -9.147543907165527

Token 3032: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10933767259120941
    2. '   ' → logprob: -2.359337568283081
    3. 'if' → logprob: -4.85933780670166
    4. 'import' → logprob: -8.23433780670166
    5. 'n' → logprob: -8.35933780670166
    6. '(n' → logprob: -8.60933780670166
    7. ' def' → logprob: -8.73433780670166
    8. ' if' → logprob: -9.48433780670166
    9. ':
' → logprob: -9.73433780670166
    10. ':' → logprob: -9.73433780670166

Token 3033: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5289170145988464
    2. '   ' → logprob: -0.9039170145988464
    3. 'if' → logprob: -6.028916835784912
    4. 'import' → logprob: -6.528916835784912
    5. 'n' → logprob: -7.653916835784912
    6. '```' → logprob: -8.02891731262207
    7. 'j' → logprob: -8.77891731262207
    8. ':' → logprob: -8.77891731262207
    9. ':
' → logprob: -9.15391731262207
    10. '    
' → logprob: -9.90391731262207

Token 3034: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.411568284034729
    2. '   ' → logprob: -1.161568284034729
    3. 'j' → logprob: -4.5365681648254395
    4. 'n' → logprob: -4.5365681648254395
    5. '#' (adapté à ' #') → logprob: -6.9115681648254395
    6. 'p' → logprob: -8.161568641662598
    7. '```' → logprob: -8.161568641662598
    8. 'if' → logprob: -8.286568641662598
    9. 'joint' → logprob: -9.036568641662598
    10. ')' → logprob: -9.161568641662598

Token 3035: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5856025815010071
    2. 'def' → logprob: -1.2106025218963623
    3. 'n' → logprob: -2.4606025218963623
    4. 'j' → logprob: -3.3356025218963623
    5. ':
' → logprob: -5.585602760314941
    6. '#' → logprob: -5.710602760314941
    7. '(n' → logprob: -5.835602760314941
    8. ':' → logprob: -5.960602760314941
    9. ']' → logprob: -6.335602760314941
    10. '(
' → logprob: -6.835602760314941

Token 3036: ' attention' (ID: 8684)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1706000566482544
    2. '   ' → logprob: -1.5456000566482544
    3. 'def' → logprob: -2.545599937438965
    4. '#' → logprob: -2.545599937438965
    5. '[
' → logprob: -2.545599937438965
    6. 'j' → logprob: -3.045599937438965
    7. ']' → logprob: -3.420599937438965
    8. ':' → logprob: -3.920599937438965
    9. ':
' → logprob: -4.170599937438965
    10. '(
' → logprob: -4.170599937438965

Token 3037: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0904695987701416
    2. ':' → logprob: -1.9654695987701416
    3. '[
' → logprob: -2.0904695987701416
    4. '[' → logprob: -2.2154695987701416
    5. '   ' → logprob: -2.5904695987701416
    6. '_' → logprob: -2.5904695987701416
    7. '=' → logprob: -3.2154695987701416
    8. 'import' → logprob: -3.4654695987701416
    9. ',' → logprob: -4.4654693603515625
    10. ' =' → logprob: -4.8404693603515625

Token 3038: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21995602548122406
    2. '#' → logprob: -2.2199559211730957
    3. ':' → logprob: -3.2199559211730957
    4. ':
' → logprob: -4.719955921173096
    5. 'j' → logprob: -4.719955921173096
    6. 'n' → logprob: -5.219955921173096
    7. ']' → logprob: -5.594955921173096
    8. '       ' → logprob: -5.719955921173096
    9. ')' → logprob: -5.844955921173096
    10. '[
' → logprob: -6.344955921173096

Token 3039: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8374699354171753
    2. '[
' → logprob: -1.8374699354171753
    3. '[' → logprob: -2.087470054626465
    4. '_' → logprob: -2.587470054626465
    5. ']' → logprob: -2.587470054626465
    6. 'n' → logprob: -2.712470054626465
    7. '[len' → logprob: -3.087470054626465
    8. 'len' → logprob: -3.087470054626465
    9. ' =' → logprob: -3.587470054626465
    10. '[n' → logprob: -3.587470054626465

Token 3040: 'interval' (ID: 37558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.9590212106704712
    2. '[
' → logprob: -1.9590212106704712
    3. 'n' → logprob: -2.0840210914611816
    4. '=' → logprob: -2.0840210914611816
    5. '[' → logprob: -2.8340210914611816
    6. ']' → logprob: -2.9590210914611816
    7. 'max' → logprob: -3.2090210914611816
    8. 's' → logprob: -3.4590210914611816
    9. 'sorted' → logprob: -3.7090210914611816
    10. ')' → logprob: -3.8340210914611816

Token 3041: 'le' (ID: 282)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7589011788368225
    2. '[' → logprob: -1.8839011192321777
    3. ']' → logprob: -2.3839011192321777
    4. 'val' → logprob: -2.7589011192321777
    5. '#' → logprob: -3.3839011192321777
    6. '_' → logprob: -3.3839011192321777
    7. '[
' → logprob: -3.5089011192321777
    8. ')' → logprob: -3.8839011192321777
    9. '```' → logprob: -4.258901119232178
    10. '[]' → logprob: -4.633901119232178

Token 3042: ' doit' (ID: 21822)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1175599098205566
    2. '[' → logprob: -1.4925599098205566
    3. ' =' → logprob: -2.1175599098205566
    4. '_' → logprob: -3.2425599098205566
    5. '[
' → logprob: -3.2425599098205566
    6. ':' → logprob: -3.3675599098205566
    7. 's' → logprob: -3.4925599098205566
    8. '#' → logprob: -3.6175599098205566
    9. '```' → logprob: -4.117559909820557
    10. ']' → logprob: -4.117559909820557

Token 3043: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.5080153346061707
    2. '_' → logprob: -1.6330153942108154
    3. '=' → logprob: -1.7580153942108154
    4. '<=' → logprob: -5.633015155792236
    5. 'etre' → logprob: -5.633015155792236
    6. 's' → logprob: -5.758015155792236
    7. '[' → logprob: -5.758015155792236
    8. 'be' → logprob: -6.383015155792236
    9. '```' → logprob: -6.383015155792236
    10. '[]' → logprob: -6.633015155792236

Token 3044: ' cont' (ID: 836)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7640089988708496
    2. '[' → logprob: -2.0140089988708496
    3. '_' → logprob: -2.2640089988708496
    4. '=' → logprob: -2.6390089988708496
    5. '[]' → logprob: -3.0140089988708496
    6. '[
' → logprob: -3.7640089988708496
    7. ':' → logprob: -4.13900899887085
    8. '```' → logprob: -4.13900899887085
    9. 'range' → logprob: -4.38900899887085
    10. 'n' → logprob: -4.38900899887085

Token 3045: 'igu' (ID: 12143)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.21734718978405
    2. 'inu' → logprob: -2.7173471450805664
    3. 'iguous' → logprob: -3.2173471450805664
    4. 'igu' → logprob: -3.5923471450805664
    5. 'i' → logprob: -3.7173471450805664
    6. 'inue' → logprob: -4.092347145080566
    7. 'u' → logprob: -5.092347145080566
    8. '```' → logprob: -5.217347145080566
    9. '[i' → logprob: -6.967347145080566
    10. '#' → logprob: -7.467347145080566

Token 3046: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1045989990234375
    2. '[
' → logprob: -1.4795989990234375
    3. 'def' → logprob: -2.1045989990234375
    4. ']' → logprob: -2.6045989990234375
    5. '[n' → logprob: -2.7295989990234375
    6. '   ' → logprob: -3.7295989990234375
    7. '_' → logprob: -3.9795989990234375
    8. '[]' → logprob: -4.1045989990234375
    9. '[i' → logprob: -4.1045989990234375
    10. '```' → logprob: -4.6045989990234375

Token 3047: 'les' (ID: 1032)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26177534461021423
    2. '[' → logprob: -2.886775255203247
    3. ')' → logprob: -3.011775255203247
    4. '[
' → logprob: -3.636775255203247
    5. ':' → logprob: -4.011775493621826
    6. '_' → logprob: -4.511775493621826
    7. '=' → logprob: -4.636775493621826
    8. '[i' → logprob: -5.011775493621826
    9. '#' → logprob: -5.136775493621826
    10. '   ' → logprob: -5.386775493621826

Token 3048: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9145416021347046
    2. '[' → logprob: -1.7895416021347046
    3. ')' → logprob: -2.164541721343994
    4. '#' → logprob: -2.539541721343994
    5. ']' → logprob: -2.789541721343994
    6. '=' → logprob: -3.289541721343994
    7. 'j' → logprob: -3.414541721343994
    8. '_j' → logprob: -3.914541721343994
    9. 'n' → logprob: -4.164541721343994
    10. 's' → logprob: -4.414541721343994

Token 3049: 'ures' (ID: 1609)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.108944058418274
    2. '_' → logprob: -1.358944058418274
    3. 'u' → logprob: -2.3589439392089844
    4. '#' → logprob: -2.8589439392089844
    5. ']
' → logprob: -3.3589439392089844
    6. 'é' → logprob: -3.4839439392089844
    7. 's' → logprob: -3.7339439392089844
    8. '```' → logprob: -3.8589439392089844
    9. ')' → logprob: -3.9839439392089844
    10. ')
' → logprob: -4.233943939208984

Token 3050: ' sont' (ID: 5242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7616661190986633
    2. 's' → logprob: -0.8866661190986633
    3. ']' → logprob: -2.5116660594940186
    4. '[' → logprob: -4.636666297912598
    5. '```' → logprob: -5.761666297912598
    6. '=' → logprob: -6.011666297912598
    7. '])' → logprob: -6.261666297912598
    8. '_' → logprob: -6.261666297912598
    9. '[i' → logprob: -6.511666297912598
    10. ',' → logprob: -6.511666297912598

Token 3051: ' dans' (ID: 2671)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.5954871773719788
    2. ')' → logprob: -1.970487117767334
    3. 'contin' → logprob: -2.470487117767334
    4. 'cons' → logprob: -2.720487117767334
    5. 'cho' → logprob: -4.095487117767334
    6. 'dans' → logprob: -4.470487117767334
    7. 'dis' → logprob: -4.595487117767334
    8. 'distinct' → logprob: -4.720487117767334
    9. ']' → logprob: -4.845487117767334
    10. '```' → logprob: -4.970487117767334

Token 3052: ' un' (ID: 537)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9334081411361694
    2. 'une' → logprob: -1.5584081411361694
    3. 'un' → logprob: -1.6834081411361694
    4. 'le' → logprob: -2.683408260345459
    5. 'l' → logprob: -3.308408260345459
    6. 'range' → logprob: -3.433408260345459
    7. 'les' → logprob: -3.683408260345459
    8. 'n' → logprob: -4.933408260345459
    9. '```' → logprob: -4.933408260345459
    10. 'j' → logprob: -5.058408260345459

Token 3053: ' ordre' (ID: 103061)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.6961742639541626
    2. ']' → logprob: -1.9461742639541626
    3. 'ensemble' → logprob: -1.9461742639541626
    4. 'subset' → logprob: -2.571174144744873
    5. 'segment' → logprob: -2.696174144744873
    6. '[
' → logprob: -3.321174144744873
    7. 'continu' → logprob: -3.696174144744873
    8. '```' → logprob: -3.696174144744873
    9. ']
' → logprob: -3.821174144744873
    10. 's' → logprob: -3.821174144744873

Token 3054: ' cro' (ID: 11270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12353316694498062
    2. '_' → logprob: -3.248533248901367
    3. ']' → logprob: -4.123533248901367
    4. ',' → logprob: -4.248533248901367
    5. 's' → logprob: -4.873533248901367
    6. '=' → logprob: -4.998533248901367
    7. 'de' → logprob: -5.748533248901367
    8. 'possible' → logprob: -5.748533248901367
    9. '```' → logprob: -5.873533248901367
    10. '),' → logprob: -6.498533248901367

Token 3055: 'issant' (ID: 31359)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2556589841842651
    2. 'mp' → logprob: -1.2556589841842651
    3. 'd' → logprob: -2.0056591033935547
    4. 'p' → logprob: -2.5056591033935547
    5. 'pped' → logprob: -3.0056591033935547
    6. 'up' → logprob: -3.3806591033935547
    7. 'nt' → logprob: -3.8806591033935547
    8. 'def' → logprob: -4.255659103393555
    9. '#' → logprob: -4.505659103393555
    10. 'pe' → logprob: -4.880659103393555

Token 3056: ').
' (ID: 6294)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27428629994392395
    2. '[' → logprob: -2.1492862701416016
    3. ')' → logprob: -2.6492862701416016
    4. '_' → logprob: -4.649286270141602
    5. '[
' → logprob: -4.899286270141602
    6. '```' → logprob: -5.149286270141602
    7. ',' → logprob: -5.399286270141602
    8. ':' → logprob: -5.524286270141602
    9. '[i' → logprob: -5.524286270141602
    10. '=' → logprob: -6.399286270141602

Token 3057: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4627043604850769
    2. 'def' → logprob: -1.7127044200897217
    3. ']' → logprob: -2.5877044200897217
    4. ':' → logprob: -3.0877044200897217
    5. ')' → logprob: -3.8377044200897217
    6. '[' → logprob: -4.712704181671143
    7. '[
' → logprob: -4.962704181671143
    8. ':
' → logprob: -5.212704181671143
    9. 'j' → logprob: -6.087704181671143
    10. '[j' → logprob: -6.337704181671143

Token 3058: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31589916348457336
    2. ':' → logprob: -2.940899133682251
    3. ']' → logprob: -2.940899133682251
    4. '   ' → logprob: -3.315899133682251
    5. 'n' → logprob: -3.440899133682251
    6. '(n' → logprob: -3.940899133682251
    7. '[' → logprob: -4.06589937210083
    8. ')' → logprob: -4.69089937210083
    9. '[n' → logprob: -4.69089937210083
    10. '[]' → logprob: -5.44089937210083

Token 3059: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17724737524986267
    2. 'def' → logprob: -2.0522472858428955
    3. 'n' → logprob: -4.302247524261475
    4. ':' → logprob: -5.802247524261475
    5. ':
' → logprob: -5.927247524261475
    6. '#' → logprob: -6.177247524261475
    7. ']' → logprob: -6.177247524261475
    8. '(n' → logprob: -6.802247524261475
    9. '[
' → logprob: -6.927247524261475
    10. '```' → logprob: -7.052247524261475

Token 3060: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.660003125667572
    2. 'def' → logprob: -0.785003125667572
    3. 'n' → logprob: -4.285003185272217
    4. 'j' → logprob: -5.160003185272217
    5. ']' → logprob: -6.660003185272217
    6. ')' → logprob: -7.035003185272217
    7. 'p' → logprob: -7.285003185272217
    8. '```' → logprob: -7.285003185272217
    9. '#' (adapté à ' #') → logprob: -7.410003185272217
    10. ':' → logprob: -7.910003185272217

Token 3061: ' Ce' (ID: 14228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5923893451690674
    2. 'def' → logprob: -0.8423893451690674
    3. 'n' → logprob: -4.842389106750488
    4. ')' → logprob: -6.217389106750488
    5. 'j' → logprob: -6.842389106750488
    6. ':' → logprob: -6.967389106750488
    7. 'if' → logprob: -7.092389106750488
    8. ']' → logprob: -7.342389106750488
    9. ':
' → logprob: -7.717389106750488
    10. '```' → logprob: -7.717389106750488

Token 3062: ' rais' (ID: 8690)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.805496335029602
    2. ']' → logprob: -2.0554962158203125
    3. 'def' → logprob: -2.0554962158203125
    4. '[n' → logprob: -2.0554962158203125
    5. '#' → logprob: -2.4304962158203125
    6. 'n' → logprob: -2.8054962158203125
    7. '[
' → logprob: -3.0554962158203125
    8. ' =' → logprob: -3.0554962158203125
    9. 's' → logprob: -3.5554962158203125
    10. '[' → logprob: -3.9304962158203125

Token 3063: 'onnement' (ID: 52552)
  Prédit: 'son'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'son' → logprob: -0.28181472420692444
    2. 'on' → logprob: -1.781814694404602
    3. 'n' → logprob: -2.7818148136138916
    4. 'onnement' → logprob: -5.6568145751953125
    5. 's' → logprob: -5.7818145751953125
    6. '#' → logprob: -6.4068145751953125
    7. 'sons' → logprob: -7.1568145751953125
    8. 'g' → logprob: -7.7818145751953125
    9. 'def' → logprob: -7.9068145751953125
    10. 'ons' → logprob: -8.156814575195312

Token 3064: ' ne' (ID: 453)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8060818910598755
    2. '=' → logprob: -1.4310818910598755
    3. '#' → logprob: -2.681081771850586
    4. '[n' → logprob: -3.181081771850586
    5. '[' → logprob: -3.306081771850586
    6. ' =' → logprob: -3.431081771850586
    7. ']' → logprob: -3.806081771850586
    8. 'import' → logprob: -3.931081771850586
    9. '   ' → logprob: -4.181081771850586
    10. 'def' → logprob: -4.306081771850586

Token 3065: ' tient' (ID: 69541)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19457659125328064
    2. '=' → logprob: -2.6945765018463135
    3. '[' → logprob: -2.9445765018463135
    4. ' =' → logprob: -4.319576740264893
    5. ',' → logprob: -5.069576740264893
    6. ' ' → logprob: -5.194576740264893
    7. ']' → logprob: -5.319576740264893
    8. ':' → logprob: -5.694576740264893
    9. 'def' → logprob: -5.819576740264893
    10. 's' → logprob: -6.069576740264893

Token 3066: ' que' (ID: 661)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.673918604850769
    2. ':' → logprob: -1.173918604850769
    3. '   ' → logprob: -3.4239187240600586
    4. ']' → logprob: -3.9239187240600586
    5. '_' → logprob: -4.048918724060059
    6. '```' → logprob: -4.173918724060059
    7. '[' → logprob: -4.673918724060059
    8. '=' → logprob: -5.048918724060059
    9. ')' → logprob: -5.048918724060059
    10. ':
' → logprob: -5.173918724060059

Token 3067: ' si' (ID: 1784)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.039374828338623
    2. '_' → logprob: -1.289374828338623
    3. '   ' → logprob: -2.164374828338623
    4. '=' → logprob: -3.164374828338623
    5. '[
' → logprob: -3.539374828338623
    6. '[' → logprob: -3.664374828338623
    7. 'def' → logprob: -3.789374828338623
    8. ')' → logprob: -4.039374828338623
    9. ',' → logprob: -4.414374828338623
    10. ']' → logprob: -4.539374828338623

Token 3068: ' on' (ID: 402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06541410088539124
    2. 'True' → logprob: -4.065413951873779
    3. ' n' → logprob: -4.440413951873779
    4. 'k' → logprob: -4.815413951873779
    5. '   ' → logprob: -5.065413951873779
    6. 'j' → logprob: -5.565413951873779
    7. 'len' → logprob: -5.690413951873779
    8. ' True' → logprob: -6.065413951873779
    9. '(n' → logprob: -6.440413951873779
    10. 'not' → logprob: -6.690413951873779

Token 3069: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.808214783668518
    2. '#' → logprob: -2.0582146644592285
    3. 'sorted' → logprob: -2.3082146644592285
    4. 'sort' → logprob: -2.6832146644592285
    5. '_sorted' → logprob: -2.6832146644592285
    6. '_' → logprob: -3.0582146644592285
    7. '[
' → logprob: -3.0582146644592285
    8. '[' → logprob: -3.3082146644592285
    9. ':' → logprob: -3.3082146644592285
    10. 's' → logprob: -3.4332146644592285

Token 3070: ' choisir' (ID: 47004)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.014809489250183
    2. 'continue' → logprob: -2.2648096084594727
    3. ' continue' → logprob: -3.0148096084594727
    4. '[' → logprob: -3.1398096084594727
    5. 'sort' → logprob: -3.1398096084594727
    6. 'import' → logprob: -3.2648096084594727
    7. '[
' → logprob: -3.2648096084594727
    8. 'def' → logprob: -3.5148096084594727
    9. ' continuer' → logprob: -3.7648096084594727
    10. 'n' → logprob: -3.8898096084594727

Token 3071: ' arbit' (ID: 96555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1088329553604126
    2. '[
' → logprob: -1.8588329553604126
    3. 'les' → logprob: -2.608832836151123
    4. '[' → logprob: -3.233832836151123
    5. '[]' → logprob: -3.233832836151123
    6. 'n' → logprob: -3.358832836151123
    7. 'j' → logprob: -3.358832836151123
    8. '```' → logprob: -3.358832836151123
    9. ',' → logprob: -3.858832836151123
    10. '#' → logprob: -4.358832836151123

Token 3072: 'ra' (ID: 614)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2542130947113037
    2. 'def' → logprob: -1.2542130947113037
    3. 'u' → logprob: -2.0042130947113037
    4. '[
' → logprob: -3.2542130947113037
    5. 'aire' → logprob: -3.7542130947113037
    6. '```' → logprob: -3.7542130947113037
    7. '
' → logprob: -3.8792130947113037
    8. '[]' → logprob: -4.379213333129883
    9. ')' → logprob: -4.379213333129883
    10. '       ' → logprob: -4.504213333129883

Token 3073: 'irement' (ID: 19343)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.6048228740692139
    2. 'r' → logprob: -1.3548228740692139
    3. 'ire' → logprob: -2.604822874069214
    4. ']' → logprob: -2.979822874069214
    5. '[' → logprob: -3.854822874069214
    6. 'rray' → logprob: -3.979822874069214
    7. ')' → logprob: -5.854823112487793
    8. '[
' → logprob: -6.104823112487793
    9. 'n' → logprob: -6.229823112487793
    10. '_' → logprob: -6.354823112487793

Token 3074: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1728569269180298
    2. '_' → logprob: -1.4228569269180298
    3. '_j' → logprob: -1.5478569269180298
    4. '[j' → logprob: -2.7978568077087402
    5. '```' → logprob: -3.5478568077087402
    6. '[i' → logprob: -3.7978568077087402
    7. '[
' → logprob: -4.17285680770874
    8. ')' → logprob: -4.29785680770874
    9. ':' → logprob: -4.42285680770874
    10. ']' → logprob: -4.42285680770874

Token 3075: ' coup' (ID: 25465)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9306939840316772
    2. ')' → logprob: -1.3056939840316772
    3. '_' → logprob: -2.680694103240967
    4. ']' → logprob: -2.805694103240967
    5. '#' → logprob: -3.680694103240967
    6. 'joint' → logprob: -3.930694103240967
    7. '_j' → logprob: -4.055694103240967
    8. 'i' → logprob: -4.180694103240967
    9. 'indices' → logprob: -4.305694103240967
    10. ',' → logprob: -4.430694103240967

Token 3076: 'ures' (ID: 1609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7252978086471558
    2. 'oints' → logprob: -2.1002979278564453
    3. ']' → logprob: -2.7252979278564453
    4. 's' → logprob: -2.8502979278564453
    5. 'u' → logprob: -3.4752979278564453
    6. '[
' → logprob: -3.6002979278564453
    7. 'def' → logprob: -3.7252979278564453
    8. '#' → logprob: -3.8502979278564453
    9. '_
' → logprob: -3.9752979278564453
    10. 'uts' → logprob: -4.100297927856445

Token 3077: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39593395590782166
    2. '   ' → logprob: -2.5209338665008545
    3. ':' → logprob: -2.7709338665008545
    4. ':
' → logprob: -3.0209338665008545
    5. '(
' → logprob: -3.5209338665008545
    6. '(n' → logprob: -4.145934104919434
    7. '=' → logprob: -4.395934104919434
    8. ' =' → logprob: -4.770934104919434
    9. '[
' → logprob: -4.895934104919434
    10. '[n' → logprob: -5.145934104919434

Token 3078: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2649281322956085
    2. '(
' → logprob: -1.8899281024932861
    3. '   ' → logprob: -3.889928102493286
    4. '(n' → logprob: -4.139928340911865
    5. '(' → logprob: -4.264928340911865
    6. ':' → logprob: -4.889928340911865
    7. '[
' → logprob: -5.389928340911865
    8. ':
' → logprob: -5.889928340911865
    9. '```' → logprob: -6.264928340911865
    10. '[' → logprob: -6.514928340911865

Token 3079: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07969290763139725
    2. '   ' → logprob: -3.954692840576172
    3. 'n' → logprob: -4.329692840576172
    4. '(n' → logprob: -4.454692840576172
    5. ':' → logprob: -4.579692840576172
    6. '(
' → logprob: -5.454692840576172
    7. 'import' → logprob: -5.579692840576172
    8. '[]' → logprob: -6.329692840576172
    9. '[' → logprob: -6.704692840576172
    10. '(' → logprob: -6.704692840576172

Token 3080: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09783735871315002
    2. '   ' → logprob: -3.222837448120117
    3. ':' → logprob: -4.097837448120117
    4. 'n' → logprob: -5.097837448120117
    5. 'import' → logprob: -5.597837448120117
    6. '[' → logprob: -5.722837448120117
    7. ':
' → logprob: -5.847837448120117
    8. '[
' → logprob: -5.847837448120117
    9. '[n' → logprob: -5.972837448120117
    10. '(n' → logprob: -6.097837448120117

Token 3081: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6599786877632141
    2. '   ' → logprob: -1.6599786281585693
    3. '(
' → logprob: -2.4099786281585693
    4. 'n' → logprob: -2.4099786281585693
    5. ':' → logprob: -4.034978866577148
    6. '(' → logprob: -4.284978866577148
    7. 'j' → logprob: -4.409978866577148
    8. 'p' → logprob: -4.909978866577148
    9. '(n' → logprob: -4.909978866577148
    10. '```' → logprob: -4.909978866577148

Token 3082: ' Or' (ID: 2604)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.053115732967853546
    2. 'n' → logprob: -3.5531158447265625
    3. '   ' → logprob: -4.4281158447265625
    4. 'import' → logprob: -5.1781158447265625
    5. '(n' → logprob: -6.3031158447265625
    6. '#' → logprob: -6.9281158447265625
    7. ':' → logprob: -7.1781158447265625
    8. 'from' → logprob: -7.5531158447265625
    9. '```' → logprob: -8.553115844726562
    10. ' def' → logprob: -8.803115844726562

Token 3083: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.525068998336792
    2. 'n' → logprob: -1.775068998336792
    3. ' n' → logprob: -2.650068998336792
    4. '(n' → logprob: -3.400068998336792
    5. '[
' → logprob: -3.525068998336792
    6. 'def' → logprob: -4.275069236755371
    7. '   ' → logprob: -4.400069236755371
    8. '_' → logprob: -4.525069236755371
    9. '(
' → logprob: -4.900069236755371
    10. ')' → logprob: -5.025069236755371

Token 3084: ' oui' (ID: 50908)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8501008749008179
    2. '   ' → logprob: -1.9751008749008179
    3. ':' → logprob: -2.1001009941101074
    4. '(' → logprob: -2.3501009941101074
    5. '[' → logprob: -2.4751009941101074
    6. 'n' → logprob: -2.6001009941101074
    7. ')' → logprob: -2.9751009941101074
    8. ' :' → logprob: -3.4751009941101074
    9. 'def' → logprob: -3.4751009941101074
    10. '(
' → logprob: -3.9751009941101074

Token 3085: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3339262008666992
    2. 'def' → logprob: -1.4589262008666992
    3. '[' → logprob: -2.083926200866699
    4. '   ' → logprob: -2.583926200866699
    5. '[
' → logprob: -2.708926200866699
    6. '_' → logprob: -3.208926200866699
    7. '[n' → logprob: -3.583926200866699
    8. '#' → logprob: -3.583926200866699
    9. ']' → logprob: -4.208926200866699
    10. 'n' → logprob: -4.208926200866699

Token 3086: ' on' (ID: 402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.132386326789856
    2. 'def' → logprob: -1.257386326789856
    3. '   ' → logprob: -1.507386326789856
    4. ':' → logprob: -2.8823862075805664
    5. 'import' → logprob: -3.1323862075805664
    6. ' n' → logprob: -3.8823862075805664
    7. '#' → logprob: -3.8823862075805664
    8. '(n' → logprob: -5.257386207580566
    9. ')' → logprob: -5.507386207580566
    10. '.' → logprob: -5.507386207580566

Token 3087: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35198524594306946
    2. '=' → logprob: -2.476985216140747
    3. ' =' → logprob: -3.476985216140747
    4. '[n' → logprob: -3.851985216140747
    5. '[
' → logprob: -3.976985216140747
    6. '#' → logprob: -4.226985454559326
    7. '_sorted' → logprob: -4.226985454559326
    8. ':
' → logprob: -4.351985454559326
    9. 'import' → logprob: -4.476985454559326
    10. '.sort' → logprob: -4.851985454559326

Token 3088: ':' (ID: 25)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.8062680959701538
    2. 'choose' → logprob: -1.8062680959701538
    3. ' choisir' → logprob: -2.3062682151794434
    4. '[' → logprob: -2.5562682151794434
    5. 'cho' → logprob: -2.5562682151794434
    6. '#' → logprob: -2.6812682151794434
    7. 'import' → logprob: -2.9312682151794434
    8. 'continue' → logprob: -2.9312682151794434
    9. 'def' → logprob: -3.1812682151794434
    10. ']' → logprob: -3.4312682151794434

Token 3089: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6809970736503601
    2. '   ' → logprob: -1.0559971332550049
    3. 'n' → logprob: -2.680997133255005
    4. 'import' → logprob: -4.055996894836426
    5. '(n' → logprob: -4.430996894836426
    6. ' n' → logprob: -4.555996894836426
    7. ':' → logprob: -4.930996894836426
    8. '#' → logprob: -5.180996894836426
    9. 'pass' → logprob: -6.055996894836426
    10. ' def' → logprob: -6.055996894836426

Token 3090: ''importe' (ID: 103032)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6329246163368225
    2. '#' → logprob: -1.6329245567321777
    3. ' -' → logprob: -2.1329245567321777
    4. '=' → logprob: -2.3829245567321777
    5. ' =' → logprob: -3.2579245567321777
    6. ')' → logprob: -4.757924556732178
    7. ',' → logprob: -5.882924556732178
    8. '```' → logprob: -6.007924556732178
    9. '[' → logprob: -6.257924556732178
    10. ' #' → logprob: -7.257924556732178

Token 3091: ' quel' (ID: 10613)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6672369241714478
    2. ''t' → logprob: -1.5422369241714478
    3. '-' → logprob: -2.417236804962158
    4. '```' → logprob: -3.667236804962158
    5. ')' → logprob: -4.167236804962158
    6. ''un' → logprob: -4.667236804962158
    7. 'import' → logprob: -4.792236804962158
    8. '   ' → logprob: -4.917236804962158
    9. 'def' → logprob: -4.917236804962158
    10. '#' → logprob: -4.917236804962158

Token 3092: ' joint' (ID: 14585)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5278772115707397
    2. 'joint' → logprob: -2.0278773307800293
    3. '#' → logprob: -2.1528773307800293
    4. ')' → logprob: -3.7778773307800293
    5. ' ' → logprob: -3.7778773307800293
    6. ',' → logprob: -4.402877330780029
    7. '.' → logprob: -4.527877330780029
    8. '
' → logprob: -4.777877330780029
    9. ' joint' → logprob: -5.027877330780029
    10. ' #' → logprob: -5.027877330780029

Token 3093: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5772528648376465
    2. 'def' → logprob: -1.4522528648376465
    3. ':
' → logprob: -2.9522528648376465
    4. 's' → logprob: -3.4522528648376465
    5. ':' → logprob: -3.7022528648376465
    6. ' =' → logprob: -4.5772528648376465
    7. '```' → logprob: -4.5772528648376465
    8. '_' → logprob: -4.7022528648376465
    9. ']' → logprob: -4.9522528648376465
    10. '=' → logprob: -5.2022528648376465

Token 3094: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3379102647304535
    2. ']' → logprob: -3.3379101753234863
    3. ')' → logprob: -3.4629101753234863
    4. '=' → logprob: -3.5879101753234863
    5. ',' → logprob: -3.8379101753234863
    6. ''' → logprob: -3.8379101753234863
    7. '```' → logprob: -3.9629101753234863
    8. ' utilisé' → logprob: -4.087910175323486
    9. '[' → logprob: -4.212910175323486
    10. 'possible' → logprob: -4.462910175323486

Token 3095: 'ure' (ID: 627)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019811827689409256
    2. 'é' → logprob: -4.019811630249023
    3. '_
' → logprob: -7.394811630249023
    4. ']' → logprob: -8.269811630249023
    5. '#' → logprob: -8.644811630249023
    6. ' _' → logprob: -9.269811630249023
    7. ''' → logprob: -9.769811630249023
    8. '=' → logprob: -10.019811630249023
    9. 'u' → logprob: -10.019811630249023
    10. '-' → logprob: -10.269811630249023

Token 3096: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6851803660392761
    2. '(
' → logprob: -1.810180425643921
    3. 'def' → logprob: -2.435180425643921
    4. ':' → logprob: -2.935180425643921
    5. '(' → logprob: -3.060180425643921
    6. '[
' → logprob: -3.435180425643921
    7. '[' → logprob: -3.685180425643921
    8. '```' → logprob: -3.935180425643921
    9. 's' → logprob: -4.435180187225342
    10. '(n' → logprob: -4.560180187225342

Token 3097: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.75594162940979
    2. ':' → logprob: -1.50594162940979
    3. '   ' → logprob: -2.50594162940979
    4. ':
' → logprob: -3.13094162940979
    5. '(
' → logprob: -3.50594162940979
    6. ',' → logprob: -3.88094162940979
    7. 's' → logprob: -4.005941390991211
    8. 'n' → logprob: -4.255941390991211
    9. '[
' → logprob: -4.255941390991211
    10. '```' → logprob: -4.255941390991211

Token 3098: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3350728452205658
    2. 'def' → logprob: -1.3350728750228882
    3. 'n' → logprob: -4.710072994232178
    4. '(n' → logprob: -5.460072994232178
    5. ':
' → logprob: -6.460072994232178
    6. ':' → logprob: -6.960072994232178
    7. '(
' → logprob: -7.210072994232178
    8. '```' → logprob: -7.335072994232178
    9. '()
' → logprob: -7.710072994232178
    10. '
' → logprob: -7.835072994232178

Token 3099: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6601165533065796
    2. '   ' → logprob: -0.7851165533065796
    3. ':' → logprob: -5.035116672515869
    4. ':
' → logprob: -5.160116672515869
    5. '(n' → logprob: -6.035116672515869
    6. '(
' → logprob: -6.285116672515869
    7. 'n' → logprob: -6.285116672515869
    8. '```' → logprob: -6.785116672515869
    9. '()
' → logprob: -7.285116672515869
    10. ')' → logprob: -7.535116672515869

Token 3100: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25498688220977783
    2. '   ' → logprob: -2.0049867630004883
    3. 'n' → logprob: -2.5049867630004883
    4. 'import' → logprob: -6.004986763000488
    5. ':' → logprob: -6.379986763000488
    6. '```' → logprob: -6.504986763000488
    7. '(n' → logprob: -7.129986763000488
    8. ':
' → logprob: -7.379986763000488
    9. 'j' → logprob: -8.254986763000488
    10. '(
' → logprob: -8.879986763000488

Token 3101: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15031945705413818
    2. '   ' → logprob: -2.1503195762634277
    3. 'n' → logprob: -3.9003195762634277
    4. 'import' → logprob: -7.525319576263428
    5. '```' → logprob: -7.650319576263428
    6. '(n' → logprob: -7.775319576263428
    7. ':
' → logprob: -8.15031909942627
    8. ':' → logprob: -8.40031909942627
    9. 'p' → logprob: -8.77531909942627
    10. 'j' → logprob: -9.15031909942627

Token 3102: ' Donc' (ID: 88837)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45718294382095337
    2. '   ' → logprob: -1.0821828842163086
    3. 'n' → logprob: -3.7071828842163086
    4. '```' → logprob: -6.332182884216309
    5. '(n' → logprob: -7.832182884216309
    6. '
' → logprob: -7.957182884216309
    7. 'import' → logprob: -8.582182884216309
    8. 'if' → logprob: -8.707182884216309
    9. '    
' → logprob: -8.707182884216309
    10. '`' → logprob: -9.582182884216309

Token 3103: ' idéal' (ID: 65736)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2053366899490356
    2. 'n' → logprob: -1.2053366899490356
    3. '   ' → logprob: -1.5803366899490356
    4. '#' → logprob: -2.580336570739746
    5. 'def' → logprob: -3.080336570739746
    6. 'joint' → logprob: -3.955336570739746
    7. 'import' → logprob: -4.455336570739746
    8. 'sorted' → logprob: -4.705336570739746
    9. 'pass' → logprob: -5.205336570739746
    10. ' n' → logprob: -5.705336570739746

Token 3104: 'ement' (ID: 962)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3564991354942322
    2. '_' → logprob: -2.231499195098877
    3. ' =' → logprob: -3.106499195098877
    4. ':' → logprob: -3.606499195098877
    5. '=' → logprob: -3.606499195098877
    6. '   ' → logprob: -3.856499195098877
    7. ' def' → logprob: -4.356499195098877
    8. '(n' → logprob: -4.981499195098877
    9. '_
' → logprob: -5.106499195098877
    10. 'import' → logprob: -5.106499195098877

Token 3105: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.234735131263733
    2. '_' → logprob: -2.3597350120544434
    3. ' =' → logprob: -2.3597350120544434
    4. '_j' → logprob: -2.4847350120544434
    5. '=' → logprob: -2.7347350120544434
    6. ',' → logprob: -3.1097350120544434
    7. '   ' → logprob: -3.3597350120544434
    8. '#' → logprob: -3.3597350120544434
    9. '_sorted' → logprob: -3.4847350120544434
    10. '[
' → logprob: -3.4847350120544434

Token 3106: ' pour' (ID: 1930)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2735886573791504
    2. '   ' → logprob: -1.5235886573791504
    3. '#' → logprob: -1.6485886573791504
    4. ' on' → logprob: -2.5235886573791504
    5. 'sorted' → logprob: -2.7735886573791504
    6. ' j' → logprob: -3.7735886573791504
    7. ' joints' → logprob: -3.7735886573791504
    8. 'n' → logprob: -3.7735886573791504
    9. ' n' → logprob: -3.8985886573791504
    10. 'joint' → logprob: -4.27358865737915

Token 3107: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3981841504573822
    2. '_' → logprob: -1.7731841802597046
    3. 'k' → logprob: -2.773184061050415
    4. 'n' → logprob: -3.523184061050415
    5. ' _' → logprob: -3.648184061050415
    6. ' i' → logprob: -4.273184299468994
    7. ' k' → logprob: -5.148184299468994
    8. ' n' → logprob: -5.523184299468994
    9. '_i' → logprob: -5.648184299468994
    10. '_j' → logprob: -5.773184299468994

Token 3108: ' segments' (ID: 33749)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.423613041639328
    2. ' -' → logprob: -1.7986130714416504
    3. '=' → logprob: -2.1736130714416504
    4. '-' → logprob: -3.5486130714416504
    5. ' <=' → logprob: -3.7986130714416504
    6. ' ==' → logprob: -4.92361307144165
    7. '<=' → logprob: -6.29861307144165
    8. ')' → logprob: -6.67361307144165
    9. '==' → logprob: -7.04861307144165
    10. ' (' → logprob: -7.42361307144165

Token 3109: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7862502932548523
    2. '=' → logprob: -1.661250352859497
    3. '   ' → logprob: -1.661250352859497
    4. '-' → logprob: -2.661250352859497
    5. '_' → logprob: -2.911250352859497
    6. ' -' → logprob: -4.661250114440918
    7. ':' → logprob: -4.786250114440918
    8. ',' → logprob: -5.411250114440918
    9. '```' → logprob: -5.536250114440918
    10. '_j' → logprob: -6.036250114440918

Token 3110: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9288432002067566
    2. '=' → logprob: -1.3038432598114014
    3. ' =' → logprob: -1.9288432598114014
    4. '_' → logprob: -2.0538432598114014
    5. ' ' → logprob: -4.303843021392822
    6. ' )' → logprob: -4.303843021392822
    7. '-' → logprob: -5.178843021392822
    8. ' (' → logprob: -5.178843021392822
    9. '(n' → logprob: -5.428843021392822
    10. ',' → logprob: -5.803843021392822

Token 3111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45762911438941956
    2. ' =' → logprob: -1.2076290845870972
    3. '+' → logprob: -3.2076292037963867
    4. ')' → logprob: -4.707629203796387
    5. '-' → logprob: -5.332629203796387
    6. ' (' → logprob: -5.582629203796387
    7. ',' → logprob: -6.207629203796387
    8. '#' → logprob: -6.332629203796387
    9. '_' → logprob: -7.207629203796387
    10. ' ' → logprob: -7.332629203796387

Token 3112: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22543612122535706
    2. ' k' → logprob: -1.6004360914230347
    3. ' =' → logprob: -12.100436210632324
    4. ' n' → logprob: -12.475436210632324
    5. 'n' → logprob: -13.100436210632324
    6. '0' → logprob: -13.350436210632324
    7. ' ' → logprob: -13.350436210632324
    8. '1' → logprob: -13.475436210632324
    9. ')' → logprob: -13.600436210632324
    10. '=k' → logprob: -13.600436210632324

Token 3113: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20291955769062042
    2. ' -' → logprob: -1.702919602394104
    3. '=' → logprob: -7.0779194831848145
    4. ')' → logprob: -8.577919960021973
    5. ' =' → logprob: -8.577919960021973
    6. '_' → logprob: -9.202919960021973
    7. ' ' → logprob: -10.327919960021973
    8. '   ' → logprob: -10.577919960021973
    9. '```' → logprob: -10.952919960021973
    10. '-)' → logprob: -11.077919960021973

Token 3114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.051941752433776855
    2. ' ' → logprob: -3.0519418716430664
    3. ' -' → logprob: -6.301941871643066
    4. '-' → logprob: -6.551941871643066
    5. '```' → logprob: -9.926941871643066
    6. ')' → logprob: -11.176941871643066
    7. ' ' → logprob: -11.926941871643066
    8. '   ' → logprob: -12.426941871643066
    9. 'minus' → logprob: -12.551941871643066
    10. ' =' → logprob: -13.551941871643066

Token 3115: ' coup' (ID: 25465)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04775330051779747
    2. '):' → logprob: -4.29775333404541
    3. '):
' → logprob: -4.54775333404541
    4. ' =' → logprob: -5.42275333404541
    5. ' ' → logprob: -5.67275333404541
    6. ':' → logprob: -5.92275333404541
    7. '=' → logprob: -6.67275333404541
    8. ' joints' → logprob: -6.79775333404541
    9. '),' → logprob: -6.92275333404541
    10. '#' → logprob: -7.17275333404541

Token 3116: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.06854800134897232
    2. 'u' → logprob: -3.5685479640960693
    3. 'ure' → logprob: -4.443548202514648
    4. '_' → logprob: -4.568548202514648
    5. 's' → logprob: -5.193548202514648
    6. 'urations' → logprob: -6.068548202514648
    7. '_cut' → logprob: -6.193548202514648
    8. 'es' → logprob: -6.568548202514648
    9. ')' → logprob: -7.443548202514648
    10. 'é' → logprob: -7.568548202514648

Token 3117: '),' (ID: 936)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.001876950263977
    2. ')' → logprob: -1.376876950263977
    3. '):' → logprob: -2.0018768310546875
    4. ' =' → logprob: -2.7518768310546875
    5. '```' → logprob: -3.1268768310546875
    6. ']' → logprob: -3.2518768310546875
    7. '):
' → logprob: -3.5018768310546875
    8. ':' → logprob: -3.6268768310546875
    9. 's' → logprob: -4.5018768310546875
    10. '_' → logprob: -5.0018768310546875

Token 3118: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5195351243019104
    2. '#' → logprob: -1.7695350646972656
    3. ' on' → logprob: -2.6445350646972656
    4. '       ' → logprob: -3.2695350646972656
    5. 'j' → logprob: -3.2695350646972656
    6. ' j' → logprob: -4.269535064697266
    7. ' #' → logprob: -4.519535064697266
    8. ' joints' → logprob: -4.519535064697266
    9. 'sorted' → logprob: -5.019535064697266
    10. ':' → logprob: -5.394535064697266

Token 3119: ' chois' (ID: 33475)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38855013251304626
    2. 'do' → logprob: -2.638550043106079
    3. 'cho' → logprob: -3.138550043106079
    4. ' #' → logprob: -3.638550043106079
    5. ' doit' → logprob: -3.638550043106079
    6. ' =' → logprob: -4.013550281524658
    7. '=' → logprob: -4.138550281524658
    8. '```' → logprob: -4.513550281524658
    9. ' chois' → logprob: -4.638550281524658
    10. '_tr' → logprob: -4.888550281524658

Token 3120: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.10735177248716354
    2. 't' → logprob: -2.357351779937744
    3. '=' → logprob: -6.107351779937744
    4. 's' → logprob: -6.857351779937744
    5. 'd' → logprob: -6.982351779937744
    6. '_' → logprob: -7.732351779937744
    7. 'oit' → logprob: -7.732351779937744
    8. 'et' → logprob: -8.107351303100586
    9. '_t' → logprob: -8.232351303100586
    10. 'dev' → logprob: -8.607351303100586

Token 3121: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.08575764298439026
    2. ' les' → logprob: -2.5857577323913574
    3. 'la' → logprob: -6.085757732391357
    4. 'le' → logprob: -6.835757732391357
    5. '   ' → logprob: -7.210757732391357
    6. '#' → logprob: -7.460757732391357
    7. ' la' → logprob: -7.710757732391357
    8. 'c' → logprob: -7.835757732391357
    9. 'j' → logprob: -8.7107572555542
    10. '=' → logprob: -9.2107572555542

Token 3122: ' c' (ID: 274)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.2380955219268799
    2. 'c' → logprob: -1.4880955219268799
    3. 'k' → logprob: -1.8630955219268799
    4. 'n' → logprob: -2.98809552192688
    5. 'small' → logprob: -2.98809552192688
    6. '(n' → logprob: -2.98809552192688
    7. '(k' → logprob: -3.23809552192688
    8. ' smallest' → logprob: -3.36309552192688
    9. ' (' → logprob: -3.73809552192688
    10. 'j' → logprob: -4.363095283508301

Token 3123: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.2699563503265381
    2. 'plus' → logprob: -2.019956350326538
    3. ' smallest' → logprob: -3.019956350326538
    4. ' =' → logprob: -4.144956588745117
    5. ' joints' → logprob: -4.394956588745117
    6. '#' → logprob: -5.269956588745117
    7. '=' → logprob: -5.519956588745117
    8. '+' → logprob: -5.644956588745117
    9. ' +' → logprob: -5.769956588745117
    10. ' shortest' → logprob: -6.644956588745117

Token 3124: ' petits' (ID: 38141)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.05282685533165932
    2. 'gr' → logprob: -4.177826881408691
    3. 'cour' → logprob: -4.677826881408691
    4. '_pet' → logprob: -4.927826881408691
    5. '_small' → logprob: -5.552826881408691
    6. '```' → logprob: -5.802826881408691
    7. 'long' → logprob: -6.177826881408691
    8. ' petits' → logprob: -6.552826881408691
    9. '_p' → logprob: -6.677826881408691
    10. 'grand' → logprob: -6.677826881408691

Token 3125: ' joints' (ID: 47223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4890555441379547
    2. '_j' → logprob: -1.1140555143356323
    3. '_length' → logprob: -3.989055633544922
    4. '_lengths' → logprob: -4.364055633544922
    5. ' _' → logprob: -4.614055633544922
    6. 'j' → logprob: -4.989055633544922
    7. '_long' → logprob: -6.114055633544922
    8. '_joint' → logprob: -6.364055633544922
    9. '_
' → logprob: -7.239055633544922
    10. '_s' → logprob: -7.364055633544922

Token 3126: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37674134969711304
    2. 'def' → logprob: -1.5017414093017578
    3. ' =' → logprob: -4.126741409301758
    4. 's' → logprob: -4.251741409301758
    5. ':
' → logprob: -4.376741409301758
    6. '(s' → logprob: -5.126741409301758
    7. '\' → logprob: -5.376741409301758
    8. '```' → logprob: -5.376741409301758
    9. '
' → logprob: -5.626741409301758
    10. 'import' → logprob: -5.751741409301758

Token 3127: ' minim' (ID: 23874)
  Prédit: ' couper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couper' → logprob: -0.48991256952285767
    2. 'cut' → logprob: -1.114912509918213
    3. 'cou' → logprob: -3.364912509918213
    4. ' cut' → logprob: -4.364912509918213
    5. '   ' → logprob: -5.489912509918213
    6. '_cut' → logprob: -5.739912509918213
    7. 'c' → logprob: -6.739912509918213
    8. '#' → logprob: -6.864912509918213
    9. ' ' → logprob: -7.864912509918213
    10. '       ' → logprob: -8.239912986755371

Token 3128: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.013321049511432648
    2. 'er' → logprob: -4.7633209228515625
    3. 'izer' → logprob: -6.3883209228515625
    4. 'ser' → logprob: -6.3883209228515625
    5. 'is' → logprob: -8.138320922851562
    6. '```' → logprob: -8.638320922851562
    7. '#' → logprob: -9.388320922851562
    8. 'al' → logprob: -9.513320922851562
    9. 'ier' → logprob: -9.513320922851562
    10. 'e' → logprob: -9.763320922851562

Token 3129: '
' (ID: 198)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.6671524047851562
    2. '_c' → logprob: -0.9171524047851562
    3. '_' → logprob: -3.2921524047851562
    4. 'sum' → logprob: -3.7921524047851562
    5. '_cut' → logprob: -4.167152404785156
    6. '```' → logprob: -6.042152404785156
    7. ' _' → logprob: -6.292152404785156
    8. ''_' → logprob: -6.292152404785156
    9. '_s' → logprob: -6.792152404785156
    10. '_le' → logprob: -7.292152404785156

Token 3130: '   ' (ID: 271)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2864420711994171
    2. ' sum' → logprob: -1.9114420413970947
    3. '_sum' → logprob: -2.7864420413970947
    4. ' _' → logprob: -4.911442279815674
    5. ' la' → logprob: -5.161442279815674
    6. '_' → logprob: -5.411442279815674
    7. '_c' → logprob: -5.411442279815674
    8. 'la' → logprob: -5.786442279815674
    9. 'le' → logprob: -5.786442279815674
    10. 'l' → logprob: -6.161442279815674

Token 3131: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.17537127435207367
    2. '_sum' → logprob: -1.9253712892532349
    3. ' sum' → logprob: -4.675371170043945
    4. '_c' → logprob: -5.550371170043945
    5. '   ' → logprob: -7.925371170043945
    6. '_le' → logprob: -8.675371170043945
    7. 'la' → logprob: -8.925371170043945
    8. 'c' → logprob: -8.925371170043945
    9. 'le' → logprob: -8.925371170043945
    10. ' _' → logprob: -8.925371170043945

Token 3132: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01673891954123974
    2. 'c' → logprob: -4.6417388916015625
    3. '_sum' → logprob: -5.7667388916015625
    4. ' sum' → logprob: -6.7667388916015625
    5. '_c' → logprob: -6.7667388916015625
    6. ')' → logprob: -7.5167388916015625
    7. 'cut' → logprob: -8.391738891601562
    8. '_' → logprob: -8.891738891601562
    9. '   ' → logprob: -9.141738891601562
    10. '_cut' → logprob: -9.516738891601562

Token 3133: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.006132841110229492
    2. '_j' → logprob: -5.756133079528809
    3. '_cut' → logprob: -6.506133079528809
    4. '_' → logprob: -7.006133079528809
    5. '_des' → logprob: -9.006133079528809
    6. 's' → logprob: -9.756133079528809
    7. ''_' → logprob: -10.006133079528809
    8. '```' → logprob: -10.131133079528809
    9. '_co' → logprob: -10.506133079528809
    10. '_sorted' → logprob: -10.506133079528809

Token 3134: 'oup' (ID: 9999)
  Prédit: 'oup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.08394324779510498
    2. 'ou' → logprob: -3.7089433670043945
    3. '_' → logprob: -3.8339433670043945
    4. 'ut' → logprob: -4.5839433670043945
    5. 'oupes' → logprob: -4.8339433670043945
    6. '_cut' → logprob: -5.3339433670043945
    7. 'o' → logprob: -5.9589433670043945
    8. 'out' → logprob: -6.4589433670043945
    9. 'op' → logprob: -7.0839433670043945
    10. 'oupe' → logprob: -7.2089433670043945

Token 3135: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.1557648777961731
    2. '_' → logprob: -2.7807648181915283
    3. 'ur' → logprob: -3.6557648181915283
    4. '_cut' → logprob: -4.280765056610107
    5. 't' → logprob: -4.405765056610107
    6. 'u' → logprob: -4.905765056610107
    7. 'uré' → logprob: -5.280765056610107
    8. 'out' → logprob: -6.405765056610107
    9. '_out' → logprob: -6.405765056610107
    10. 'up' → logprob: -6.530765056610107

Token 3136: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34902575612068176
    2. '(
' → logprob: -2.0990257263183594
    3. '   ' → logprob: -2.7240257263183594
    4. ':' → logprob: -3.4740257263183594
    5. 's' → logprob: -3.9740257263183594
    6. '(' → logprob: -4.474025726318359
    7. ':
' → logprob: -4.599025726318359
    8. '_' → logprob: -5.099025726318359
    9. 'import' → logprob: -5.474025726318359
    10. ',' → logprob: -6.099025726318359

Token 3137: 'co' (ID: 1191)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.357138991355896
    2. ')' → logprob: -1.732138991355896
    3. ')
' → logprob: -3.4821391105651855
    4. ']
' → logprob: -3.4821391105651855
    5. '=' → logprob: -4.6071391105651855
    6. '   ' → logprob: -4.9821391105651855
    7. '_sorted' → logprob: -5.4821391105651855
    8. '])' → logprob: -5.7321391105651855
    9. '.' → logprob: -5.9821391105651855
    10. '[:' → logprob: -6.1071391105651855

Token 3138: 'ût' (ID: 24581)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -1.141027808189392
    2. 'unts' → logprob: -1.266027808189392
    3. 'uts' → logprob: -1.891027808189392
    4. 'unt' → logprob: -2.7660279273986816
    5. 'nt' → logprob: -3.3910279273986816
    6. ')' → logprob: -3.3910279273986816
    7. 'nst' → logprob: -4.391027927398682
    8. '_' → logprob: -4.516027927398682
    9. 'st' → logprob: -4.766027927398682
    10. 'u' → logprob: -4.766027927398682

Token 3139: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9453158378601074
    2. 's' → logprob: -1.6953158378601074
    3. ' =' → logprob: -2.0703158378601074
    4. '_' → logprob: -2.1953158378601074
    5. '=' → logprob: -2.3203158378601074
    6. ']' → logprob: -3.9453158378601074
    7. '_j' → logprob: -4.820315837860107
    8. ')_' → logprob: -4.820315837860107
    9. '   ' → logprob: -4.945315837860107
    10. '])' → logprob: -6.070315837860107

Token 3140: ' coup' (ID: 25465)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5574434399604797
    2. '_cut' → logprob: -1.682443380355835
    3. '_j' → logprob: -2.557443380355835
    4. 'cut' → logprob: -3.307443380355835
    5. ')' → logprob: -3.557443380355835
    6. 'c' → logprob: -3.682443380355835
    7. 'j' → logprob: -4.057443618774414
    8. ']' → logprob: -4.682443618774414
    9. '   ' → logprob: -4.807443618774414
    10. '#' → logprob: -4.932443618774414

Token 3141: 'ures' (ID: 1609)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.36599501967430115
    2. 'ts' → logprob: -1.4909950494766235
    3. 'uts' → logprob: -2.865994930267334
    4. 'ut' → logprob: -4.990994930267334
    5. 'ted' → logprob: -5.615994930267334
    6. 's' → logprob: -5.740994930267334
    7. ')' → logprob: -6.365994930267334
    8. 'té' → logprob: -6.615994930267334
    9. '_t' → logprob: -6.990994930267334
    10. 'p' → logprob: -6.990994930267334

Token 3142: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8671557307243347
    2. ']' → logprob: -1.1171557903289795
    3. '[i' → logprob: -2.6171557903289795
    4. '_used' → logprob: -2.9921557903289795
    5. 's' → logprob: -3.9921557903289795
    6. '[' → logprob: -4.1171555519104
    7. '```' → logprob: -4.1171555519104
    8. '])' → logprob: -4.1171555519104
    9. '   ' → logprob: -4.8671555519104
    10. ':' → logprob: -5.1171555519104

Token 3143: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7305796146392822
    2. '   ' → logprob: -1.9805796146392822
    3. '(
' → logprob: -2.2305796146392822
    4. ':' → logprob: -2.8555796146392822
    5. ':
' → logprob: -2.8555796146392822
    6. '[
' → logprob: -3.3555796146392822
    7. '```' → logprob: -4.605579376220703
    8. '(n' → logprob: -4.605579376220703
    9. ')
' → logprob: -4.730579376220703
    10. ' =' → logprob: -4.730579376220703

Token 3144: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5295680165290833
    2. 'def' → logprob: -1.0295679569244385
    3. ':
' → logprob: -3.9045679569244385
    4. ':' → logprob: -4.779568195343018
    5. 'j' → logprob: -4.779568195343018
    6. 'n' → logprob: -5.529568195343018
    7. '_j' → logprob: -6.404568195343018
    8. '```' → logprob: -6.654568195343018
    9. 's' → logprob: -6.779568195343018
    10. '):
' → logprob: -7.154568195343018

Token 3145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037466373294591904
    2. 'def' → logprob: -3.912466287612915
    3. ':' → logprob: -4.912466526031494
    4. 'j' → logprob: -5.912466526031494
    5. ':
' → logprob: -6.537466526031494
    6. '```' → logprob: -6.662466526031494
    7. 'n' → logprob: -6.912466526031494
    8. 'p' → logprob: -7.662466526031494
    9. '#' → logprob: -8.162466049194336
    10. '    
' → logprob: -8.537466049194336

Token 3146: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5915965437889099
    2. 'def' → logprob: -1.0915966033935547
    3. '   ' → logprob: -2.3415966033935547
    4. '#' (adapté à ' #') → logprob: -5.591596603393555
    5. 'import' → logprob: -6.341596603393555
    6. 'j' → logprob: -6.466596603393555
    7. '(n' → logprob: -6.466596603393555
    8. ':' → logprob: -6.716596603393555
    9. ':
' → logprob: -7.091596603393555
    10. 'if' → logprob: -7.841596603393555

Token 3147: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5917785167694092
    2. '   ' → logprob: -1.3417785167694092
    3. 'n' → logprob: -2.091778516769409
    4. ':' → logprob: -4.216778755187988
    5. '(n' → logprob: -4.466778755187988
    6. ':
' → logprob: -4.716778755187988
    7. 'import' → logprob: -5.841778755187988
    8. 'j' → logprob: -6.091778755187988
    9. '#' → logprob: -6.216778755187988
    10. '(
' → logprob: -6.216778755187988

Token 3148: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04716317355632782
    2. ' i' → logprob: -4.547163009643555
    3. '_i' → logprob: -4.797163009643555
    4. 'joint' → logprob: -4.922163009643555
    5. 'j' → logprob: -5.297163009643555
    6. '_joint' → logprob: -5.422163009643555
    7. '_j' → logprob: -6.047163009643555
    8. 'n' → logprob: -6.172163009643555
    9. '_' → logprob: -6.547163009643555
    10. ' _' → logprob: -7.172163009643555

Token 3149: ' variant' (ID: 16914)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4019310772418976
    2. ' =' → logprob: -1.1519310474395752
    3. '+' → logprob: -5.651931285858154
    4. ',' → logprob: -6.526931285858154
    5. '#' → logprob: -6.526931285858154
    6. '_' → logprob: -6.776931285858154
    7. ' ' → logprob: -7.151931285858154
    8. '-' → logprob: -7.651931285858154
    9. '+=' → logprob: -7.651931285858154
    10. 'c' → logprob: -7.901931285858154

Token 3150: ' entre' (ID: 3853)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6974560618400574
    2. ' in' → logprob: -0.8224560618400574
    3. '=' → logprob: -3.197456121444702
    4. 'from' → logprob: -4.822455883026123
    5. '_' → logprob: -5.572455883026123
    6. ' =' → logprob: -5.822455883026123
    7. ',' → logprob: -6.572455883026123
    8. '+' → logprob: -6.697455883026123
    9. 's' → logprob: -6.947455883026123
    10. ')' → logprob: -7.072455883026123

Token 3151: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030563266947865486
    2. '1' → logprob: -4.1555633544921875
    3. ' ' → logprob: -4.4055633544921875
    4. 'c' → logprob: -6.7805633544921875
    5. 'n' → logprob: -8.030563354492188
    6. ' c' → logprob: -8.405563354492188
    7. ' n' → logprob: -8.530563354492188
    8. 'k' → logprob: -9.280563354492188
    9. '=' → logprob: -9.655563354492188
    10. '   ' → logprob: -10.280563354492188

Token 3152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06500612199306488
    2. 'c' → logprob: -3.6900060176849365
    3. '1' → logprob: -4.065006256103516
    4. 'n' → logprob: -4.315006256103516
    5. ' ' → logprob: -5.940006256103516
    6. 'k' → logprob: -6.065006256103516
    7. '(n' → logprob: -7.440006256103516
    8. '=' → logprob: -8.315006256103516
    9. '`' → logprob: -8.315006256103516
    10. ' c' → logprob: -8.565006256103516

Token 3153: '..' (ID: 485)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0314288139343262
    2. ',' → logprob: -1.7814288139343262
    3. ' jusqu' → logprob: -1.9064288139343262
    4. '+' → logprob: -2.156428813934326
    5. '<=' → logprob: -3.281428813934326
    6. ':' → logprob: -3.406428813934326
    7. ' and' → logprob: -3.781428813934326
    8. '```' → logprob: -4.156428813934326
    9. ' <=' → logprob: -4.656428813934326
    10. '   ' → logprob: -4.656428813934326

Token 3154: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24988390505313873
    2. ',' → logprob: -2.4998838901519775
    3. '=' → logprob: -3.3748838901519775
    4. '(n' → logprob: -3.4998838901519775
    5. '(' → logprob: -4.124884128570557
    6. '-' → logprob: -4.249884128570557
    7. 'c' → logprob: -4.749884128570557
    8. ')' → logprob: -5.874884128570557
    9. '`' → logprob: -5.874884128570557
    10. ',
' → logprob: -5.999884128570557

Token 3155: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011776290833950043
    2. ')' → logprob: -5.761776447296143
    3. ' -' → logprob: -5.886776447296143
    4. '[-' → logprob: -6.636776447296143
    5. ']' → logprob: -7.011776447296143
    6. '#' → logprob: -7.011776447296143
    7. ':' → logprob: -7.261776447296143
    8. ',' → logprob: -7.511776447296143
    9. '[' → logprob: -7.761776447296143
    10. '-
' → logprob: -9.011775970458984

Token 3156: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007777814287692308
    2. '1' → logprob: -4.882777690887451
    3. ' -' → logprob: -8.88277816772461
    4. '#' → logprob: -11.25777816772461
    5. '```' → logprob: -12.00777816772461
    6. '−' → logprob: -12.75777816772461
    7. '=' → logprob: -13.50777816772461
    8. 'n' → logprob: -13.75777816772461
    9. '–' → logprob: -13.75777816772461
    10. '`' → logprob: -13.88277816772461

Token 3157: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2769373953342438
    2. '   ' → logprob: -2.026937484741211
    3. ':
' → logprob: -3.276937484741211
    4. ']' → logprob: -3.526937484741211
    5. ']:' → logprob: -4.276937484741211
    6. '):' → logprob: -4.776937484741211
    7. '[' → logprob: -5.776937484741211
    8. ')' → logprob: -5.901937484741211
    9. '```' → logprob: -6.151937484741211
    10. ',' → logprob: -6.401937484741211

Token 3158: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1551210582256317
    2. '   ' → logprob: -2.780121088027954
    3. '#' → logprob: -3.155121088027954
    4. ']' → logprob: -4.905120849609375
    5. ':
' → logprob: -5.280120849609375
    6. 'j' → logprob: -5.405120849609375
    7. '):' → logprob: -5.655120849609375
    8. ']:' → logprob: -6.280120849609375
    9. ')' → logprob: -6.405120849609375
    10. 'sorted' → logprob: -6.780120849609375

Token 3159: ' calc' (ID: 25691)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2362054586410522
    2. '#' → logprob: -1.3612054586410522
    3. '_sorted' → logprob: -2.111205577850342
    4. 'sort' → logprob: -2.861205577850342
    5. 'sorted' → logprob: -3.111205577850342
    6. '.sort' → logprob: -3.361205577850342
    7. ']' → logprob: -3.486205577850342
    8. ' =' → logprob: -3.861205577850342
    9. ':' → logprob: -4.111205577850342
    10. 's' → logprob: -4.236205577850342

Token 3160: 'ule' (ID: 1601)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.8639922738075256
    2. 'culate' → logprob: -1.3639922142028809
    3. 'u' → logprob: -2.113992214202881
    4. '=' → logprob: -3.113992214202881
    5. 'cule' → logprob: -3.238992214202881
    6. 'cul' → logprob: -3.613992214202881
    7. '_' → logprob: -4.113992214202881
    8. ' =' → logprob: -4.738992214202881
    9. 'c' → logprob: -4.738992214202881
    10. ')' → logprob: -4.863992214202881

Token 3161: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8483039140701294
    2. ':' → logprob: -1.4733039140701294
    3. '_' → logprob: -2.59830379486084
    4. ']' → logprob: -3.09830379486084
    5. 'j' → logprob: -3.47330379486084
    6. '```' → logprob: -3.72330379486084
    7. '`' → logprob: -4.09830379486084
    8. '_j' → logprob: -4.22330379486084
    9. '[]' → logprob: -4.47330379486084
    10. 'n' → logprob: -4.59830379486084

Token 3162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017348794266581535
    2. '#' → logprob: -5.767348766326904
    3. ':' → logprob: -6.017348766326904
    4. ':
' → logprob: -6.142348766326904
    5. ')' → logprob: -6.892348766326904
    6. '(
' → logprob: -6.892348766326904
    7. '[
' → logprob: -6.892348766326904
    8. ']' → logprob: -7.267348766326904
    9. '```' → logprob: -7.517348766326904
    10. '(n' → logprob: -8.267349243164062

Token 3163: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12136172503232956
    2. ':' → logprob: -2.87136173248291
    3. '[
' → logprob: -4.24636173248291
    4. '(
' → logprob: -4.62136173248291
    5. ':
' → logprob: -4.87136173248291
    6. '#' (adapté à ' #') → logprob: -5.37136173248291
    7. '[' → logprob: -5.62136173248291
    8. ')' → logprob: -5.74636173248291
    9. ']' → logprob: -6.49636173248291
    10. '(' → logprob: -6.62136173248291

Token 3164: ' salaire' (ID: 135427)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47473111748695374
    2. '#' → logprob: -2.724731206893921
    3. 'j' → logprob: -3.099731206893921
    4. 'n' → logprob: -3.099731206893921
    5. 'sum' → logprob: -3.099731206893921
    6. 'c' → logprob: -3.349731206893921
    7. '```' → logprob: -3.974731206893921
    8. 'sorted' → logprob: -4.474730968475342
    9. 'joint' → logprob: -4.474730968475342
    10. 'for' → logprob: -4.599730968475342

Token 3165: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.801037609577179
    2. ' =' → logprob: -0.926037609577179
    3. '=' → logprob: -2.801037549972534
    4. 'def' → logprob: -3.801037549972534
    5. '(n' → logprob: -4.051037788391113
    6. 's' → logprob: -5.301037788391113
    7. ':' → logprob: -5.426037788391113
    8. '_j' → logprob: -5.426037788391113
    9. '```' → logprob: -5.801037788391113
    10. 'import' → logprob: -5.926037788391113

Token 3166: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.8302672505378723
    2. '(n' → logprob: -1.0802671909332275
    3. ' (' → logprob: -1.5802671909332275
    4. '(lambda' → logprob: -5.080267429351807
    5. '(const' → logprob: -5.705267429351807
    6. '(s' → logprob: -5.955267429351807
    7. '   ' → logprob: -6.455267429351807
    8. 'lambda' → logprob: -6.580267429351807
    9. 'const' → logprob: -6.705267429351807
    10. '```' → logprob: -8.330266952514648

Token 3167: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12848131358623505
    2. 'n' → logprob: -2.253481388092041
    3. '(c' → logprob: -4.878481388092041
    4. '(n' → logprob: -5.503481388092041
    5. 'k' → logprob: -5.753481388092041
    6. ' c' → logprob: -8.628480911254883
    7. ' (' → logprob: -8.628480911254883
    8. '   ' → logprob: -9.253480911254883
    9. ' n' → logprob: -10.378480911254883
    10. ')' → logprob: -10.378480911254883

Token 3168: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011736786691471934
    2. ' +' → logprob: -6.751173496246338
    3. ')' → logprob: -13.876173973083496
    4. ')+' → logprob: -14.126173973083496
    5. '   ' → logprob: -14.626173973083496
    6. '+
' → logprob: -14.751173973083496
    7. '```' → logprob: -15.126173973083496
    8. '+)' → logprob: -15.376173973083496
    9. '＋' → logprob: -15.626173973083496
    10. '
' → logprob: -16.37617301940918

Token 3169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ')' → logprob: -14.12500286102295
    3. ' ' → logprob: -14.37500286102295
    4. '0' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.25000286102295
    6. '```' → logprob: -15.50000286102295
    7. '=' → logprob: -15.62500286102295
    8. '+' → logprob: -15.87500286102295
    9. '
' → logprob: -16.250001907348633
    10. ' =' → logprob: -17.875001907348633

Token 3170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002857416868209839
    2. ')*' → logprob: -6.002857208251953
    3. '*' → logprob: -8.502857208251953
    4. ' *' → logprob: -8.877857208251953
    5. ')*(' → logprob: -10.877857208251953
    6. '*)' → logprob: -11.627857208251953
    7. '*(' → logprob: -12.627857208251953
    8. ' )' → logprob: -12.752857208251953
    9. '```' → logprob: -13.377857208251953
    10. '   ' → logprob: -13.627857208251953

Token 3171: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06379426270723343
    2. '*' → logprob: -2.9387943744659424
    3. '*(' → logprob: -4.813794136047363
    4. ')' → logprob: -7.438794136047363
    5. '   ' → logprob: -10.063794136047363
    6. ')*' → logprob: -10.063794136047363
    7. '```' → logprob: -10.063794136047363
    8. '*c' → logprob: -11.438794136047363
    9. ')*(' → logprob: -11.938794136047363
    10. '**' → logprob: -12.063794136047363

Token 3172: ' (' (ID: 350)
  Prédit: '(const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(const' → logprob: -0.10935530811548233
    2. ' (' → logprob: -2.4843552112579346
    3. 'const' → logprob: -3.9843552112579346
    4. '(' → logprob: -7.109355449676514
    5. ' const' → logprob: -7.859355449676514
    6. '(S' → logprob: -8.609354972839355
    7. '(cons' → logprob: -10.734354972839355
    8. '(total' → logprob: -11.109354972839355
    9. '(CON' → logprob: -11.109354972839355
    10. '(int' → logprob: -11.234354972839355

Token 3173: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.426859587430954
    2. '(const' → logprob: -1.5518596172332764
    3. '(S' → logprob: -2.0518596172332764
    4. 'S' → logprob: -5.926859378814697
    5. ' (' → logprob: -5.926859378814697
    6. ' const' → logprob: -7.551859378814697
    7. 'CONST' → logprob: -8.801859855651855
    8. '(' → logprob: -9.051859855651855
    9. 'total' → logprob: -9.176859855651855
    10. 'sum' → logprob: -9.301859855651855

Token 3174: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.031828999519348145
    2. ')' → logprob: -3.7818288803100586
    3. '-' → logprob: -4.781828880310059
    4. ' ' → logprob: -10.406828880310059
    5. ' )' → logprob: -10.906828880310059
    6. '```' → logprob: -10.906828880310059
    7. '=' → logprob: -11.031828880310059
    8. '-c' → logprob: -11.281828880310059
    9. ')-' → logprob: -11.281828880310059
    10. '-)' → logprob: -11.281828880310059

Token 3175: ' sum' (ID: 4215)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.35344237089157104
    2. 'sum' → logprob: -1.4784424304962158
    3. ' prefix' → logprob: -3.478442430496216
    4. 'pref' → logprob: -4.978442192077637
    5. 'cum' → logprob: -5.228442192077637
    6. 'c' → logprob: -5.353442192077637
    7. '_prefix' → logprob: -5.478442192077637
    8. 'cut' → logprob: -5.478442192077637
    9. 'cuts' → logprob: -5.978442192077637
    10. ' sum' → logprob: -5.978442192077637

Token 3176: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.005120853893458843
    2. '_cut' → logprob: -5.880120754241943
    3. '_' → logprob: -6.755120754241943
    4. '_j' → logprob: -7.505120754241943
    5. '(_' → logprob: -8.255121231079102
    6. '_des' → logprob: -9.005121231079102
    7. '\' → logprob: -10.630121231079102
    8. '```' → logprob: -10.755121231079102
    9. '_joint' → logprob: -11.130121231079102
    10. ')_' → logprob: -11.130121231079102

Token 3177: 'oup' (ID: 9999)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.860594630241394
    2. '_' → logprob: -1.235594630241394
    3. '_cut' → logprob: -1.485594630241394
    4. 'o' → logprob: -3.7355947494506836
    5. '_o' → logprob: -4.360594749450684
    6. 'uts' → logprob: -5.485594749450684
    7. 'ut' → logprob: -5.735594749450684
    8. ' _' → logprob: -5.985594749450684
    9. '_co' → logprob: -6.110594749450684
    10. '_op' → logprob: -6.610594749450684

Token 3178: 'ures' (ID: 1609)
  Prédit: '_cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.8473687171936035
    2. '_' → logprob: -0.9723687171936035
    3. 'ur' → logprob: -2.5973687171936035
    4. '__' → logprob: -4.0973687171936035
    5. 'ures' → logprob: -4.2223687171936035
    6. '_c' → logprob: -4.2223687171936035
    7. '_p' → logprob: -4.8473687171936035
    8. ' _' → logprob: -4.8473687171936035
    9. 'uré' → logprob: -4.9723687171936035
    10. 'r' → logprob: -4.9723687171936035

Token 3179: ')
' (ID: 446)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.673583984375
    2. ')' → logprob: -0.798583984375
    3. '_c' → logprob: -4.423583984375
    4. '[:' → logprob: -4.548583984375
    5. ')
' → logprob: -5.298583984375
    6. '[' → logprob: -5.798583984375
    7. '   ' → logprob: -6.298583984375
    8. '[-' → logprob: -6.798583984375
    9. '(c' → logprob: -7.298583984375
    10. ')c' → logprob: -7.423583984375

Token 3180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23219342529773712
    2. '_j' → logprob: -2.9821934700012207
    3. ':' → logprob: -3.1071934700012207
    4. ':
' → logprob: -3.8571934700012207
    5. '[j' → logprob: -3.9821934700012207
    6. ' =' → logprob: -4.732193470001221
    7. 'def' → logprob: -4.857193470001221
    8. '[
' → logprob: -4.982193470001221
    9. ')' → logprob: -5.107193470001221
    10. '_' → logprob: -5.357193470001221

Token 3181: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.677599310874939
    2. 'def' → logprob: -1.677599310874939
    3. ':' → logprob: -2.0525994300842285
    4. ':
' → logprob: -2.5525994300842285
    5. ' =' → logprob: -4.3025994300842285
    6. '(
' → logprob: -4.4275994300842285
    7. '_j' → logprob: -4.5525994300842285
    8. '_' → logprob: -4.8025994300842285
    9. '=' → logprob: -5.3025994300842285
    10. '(p' → logprob: -5.4275994300842285

Token 3182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038373202085494995
    2. 'def' → logprob: -3.6633732318878174
    3. ':' → logprob: -5.413372993469238
    4. ':
' → logprob: -6.038372993469238
    5. 'n' → logprob: -7.288372993469238
    6. '):
' → logprob: -7.413372993469238
    7. '
' → logprob: -8.038372993469238
    8. ')' → logprob: -8.038372993469238
    9. 'j' → logprob: -8.163372993469238
    10. ' =' → logprob: -8.288372993469238

Token 3183: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18695403635501862
    2. ':' → logprob: -2.5619540214538574
    3. 'def' → logprob: -3.8119540214538574
    4. 'n' → logprob: -3.8119540214538574
    5. 'j' → logprob: -4.561954021453857
    6. ':
' → logprob: -4.936954021453857
    7. '#' (adapté à ' #') → logprob: -5.311954021453857
    8. ')' → logprob: -5.936954021453857
    9. '(
' → logprob: -6.186954021453857
    10. '```' → logprob: -6.186954021453857

Token 3184: ' Où' (ID: 199045)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6766135692596436
    2. '   ' → logprob: -1.3016135692596436
    3. 'def' → logprob: -2.0516135692596436
    4. ':' → logprob: -3.9266135692596436
    5. 'j' → logprob: -4.176613807678223
    6. ':
' → logprob: -4.426613807678223
    7. '#' → logprob: -4.551613807678223
    8. 'import' → logprob: -5.301613807678223
    9. '(
' → logprob: -5.551613807678223
    10. '(n' → logprob: -5.551613807678223

Token 3185: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.167237401008606
    2. 'const' → logprob: -1.417237401008606
    3. 'j' → logprob: -1.667237401008606
    4. 'joint' → logprob: -2.1672372817993164
    5. ' joints' → logprob: -3.0422372817993164
    6. 'sorted' → logprob: -4.167237281799316
    7. ' sum' → logprob: -4.292237281799316
    8. 'n' → logprob: -4.292237281799316
    9. '   ' → logprob: -5.167237281799316
    10. '_j' → logprob: -5.167237281799316

Token 3186: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0024349973537027836
    2. '_j' → logprob: -6.377435207366943
    3. '_cut' → logprob: -7.752435207366943
    4. '_' → logprob: -8.877434730529785
    5. '_joint' → logprob: -10.127434730529785
    6. '_des' → logprob: -11.002434730529785
    7. '\' → logprob: -11.127434730529785
    8. '_of' → logprob: -11.252434730529785
    9. '```' → logprob: -11.252434730529785
    10. 's' → logprob: -11.502434730529785

Token 3187: 'oup' (ID: 9999)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.003819791367277503
    2. '_' → logprob: -6.378819942474365
    3. '_cut' → logprob: -6.503819942474365
    4. '_co' → logprob: -8.628819465637207
    5. 's' → logprob: -8.878819465637207
    6. ' =' → logprob: -10.003819465637207
    7. '\' → logprob: -10.253819465637207
    8. '_j' → logprob: -10.378819465637207
    9. '_p' → logprob: -11.003819465637207
    10. ' _' → logprob: -11.003819465637207

Token 3188: 'ures' (ID: 1609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8635069727897644
    2. 'ures' → logprob: -1.6135070323944092
    3. 'o' → logprob: -2.113507032394409
    4. '_out' → logprob: -2.613507032394409
    5. '_o' → logprob: -3.238507032394409
    6. '_c' → logprob: -3.363507032394409
    7. '_cut' → logprob: -3.363507032394409
    8. 'ou' → logprob: -3.863507032394409
    9. 'out' → logprob: -4.73850679397583
    10. 'u' → logprob: -5.11350679397583

Token 3189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7688186764717102
    2. '_c' → logprob: -1.0188186168670654
    3. ' =' → logprob: -2.1438186168670654
    4. 's' → logprob: -4.2688188552856445
    5. '_cut' → logprob: -4.2688188552856445
    6. '_' → logprob: -4.6438188552856445
    7. '_used' → logprob: -5.0188188552856445
    8. '_list' → logprob: -6.1438188552856445
    9. '_sorted' → logprob: -6.6438188552856445
    10. '=cut' → logprob: -6.6438188552856445

Token 3190: ' somme' (ID: 64484)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006930266506969929
    2. 'sum' → logprob: -5.256930351257324
    3. '[' → logprob: -7.006930351257324
    4. ' ' → logprob: -7.881930351257324
    5. '[]' → logprob: -9.131930351257324
    6. 'prefix' → logprob: -9.256930351257324
    7. 'c' → logprob: -10.256930351257324
    8. 'sorted' → logprob: -10.756930351257324
    9. 's' → logprob: -11.006930351257324
    10. '=' → logprob: -11.381930351257324

Token 3191: ' des' (ID: 731)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6775561571121216
    2. '_' → logprob: -1.5525561571121216
    3. '_des' → logprob: -1.5525561571121216
    4. '_j' → logprob: -3.802556037902832
    5. 'des' → logprob: -4.177556037902832
    6. '_of' → logprob: -4.552556037902832
    7. '_cut' → logprob: -4.677556037902832
    8. 's' → logprob: -5.802556037902832
    9. '_sorted' → logprob: -6.927556037902832
    10. '(_' → logprob: -7.052556037902832

Token 3192: ' c' (ID: 274)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.35292503237724304
    2. 'j' → logprob: -1.7279250621795654
    3. '_j' → logprob: -2.7279250621795654
    4. 'cut' → logprob: -3.9779250621795654
    5. 'c' → logprob: -4.352924823760986
    6. '_c' → logprob: -5.102924823760986
    7. 'joint' → logprob: -5.352924823760986
    8. '_cut' → logprob: -5.727924823760986
    9. '_sorted' → logprob: -5.852924823760986
    10. 'cou' → logprob: -6.727924823760986

Token 3193: ' plus' (ID: 2932)
  Prédit: '_small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_small' → logprob: -0.5518996119499207
    2. '_c' → logprob: -1.6768996715545654
    3. '_sorted' → logprob: -2.3018996715545654
    4. '_' → logprob: -3.0518996715545654
    5. '_plus' → logprob: -3.6768996715545654
    6. '_j' → logprob: -4.426899433135986
    7. '_m' → logprob: -4.676899433135986
    8. '_min' → logprob: -4.801899433135986
    9. '_selected' → logprob: -5.426899433135986
    10. '_sm' → logprob: -5.801899433135986

Token 3194: ' petites' (ID: 55617)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012199041433632374
    2. '_pet' → logprob: -5.2621989250183105
    3. '_small' → logprob: -5.7621989250183105
    4. '_p' → logprob: -6.6371989250183105
    5. 'pet' → logprob: -6.6371989250183105
    6. '_plus' → logprob: -8.012199401855469
    7. '+' → logprob: -8.012199401855469
    8. ' _' → logprob: -9.512199401855469
    9. '_c' → logprob: -9.512199401855469
    10. '_short' → logprob: -9.762199401855469

Token 3195: ' valeurs' (ID: 73668)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.5343378186225891
    2. '_' → logprob: -1.1593377590179443
    3. '_sorted' → logprob: -3.5343377590179443
    4. '_
' → logprob: -4.909337997436523
    5. '[j' → logprob: -5.034337997436523
    6. '_c' → logprob: -5.159337997436523
    7. '_joint' → logprob: -5.159337997436523
    8. ')' → logprob: -5.784337997436523
    9. '_i' → logprob: -5.909337997436523
    10. ']' → logprob: -5.909337997436523

Token 3196: ' de' (ID: 334)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.9030447006225586
    2. '(
' → logprob: -2.0280447006225586
    3. '_j' → logprob: -2.1530447006225586
    4. ':' → logprob: -2.4030447006225586
    5. 'def' → logprob: -2.5280447006225586
    6. ']' → logprob: -3.0280447006225586
    7. ':
' → logprob: -3.0280447006225586
    8. '_' → logprob: -3.5280447006225586
    9. '=' → logprob: -3.7780447006225586
    10. '[j' → logprob: -3.7780447006225586

Token 3197: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.026951616629958153
    2. '_j' → logprob: -4.526951789855957
    3. 'joint' → logprob: -4.901951789855957
    4. ' j' → logprob: -5.776951789855957
    5. ' joints' → logprob: -6.526951789855957
    6. 'length' → logprob: -7.276951789855957
    7. '   ' → logprob: -7.651951789855957
    8. '```' → logprob: -7.901951789855957
    9. 'join' → logprob: -8.401951789855957
    10. '`' → logprob: -8.526951789855957

Token 3198: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.134295105934143
    2. 'def' → logprob: -1.759295105934143
    3. '_j' → logprob: -2.0092949867248535
    4. ' =' → logprob: -2.7592949867248535
    5. '(
' → logprob: -3.1342949867248535
    6. '_' → logprob: -3.3842949867248535
    7. 'j' → logprob: -3.5092949867248535
    8. '_p' → logprob: -3.6342949867248535
    9. ']' → logprob: -3.8842949867248535
    10. ':
' → logprob: -4.3842949867248535

Token 3199: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6961767673492432
    2. '   ' → logprob: -1.0711767673492432
    3. '(
' → logprob: -3.571176767349243
    4. ':' → logprob: -4.071176528930664
    5. ']' → logprob: -4.321176528930664
    6. 'j' → logprob: -4.446176528930664
    7. ':
' → logprob: -4.821176528930664
    8. '[
' → logprob: -4.821176528930664
    9. '_j' → logprob: -4.946176528930664
    10. '\' → logprob: -4.946176528930664

Token 3200: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20010647177696228
    2. 'def' → logprob: -1.8251065015792847
    3. ':' → logprob: -5.075106620788574
    4. ':
' → logprob: -5.575106620788574
    5. 'n' → logprob: -6.825106620788574
    6. '#' → logprob: -6.825106620788574
    7. '\' → logprob: -6.950106620788574
    8. 'j' → logprob: -7.200106620788574
    9. 'import' → logprob: -7.700106620788574
    10. 'p' → logprob: -7.825106620788574

Token 3201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.789662778377533
    2. ':' → logprob: -1.6646628379821777
    3. 'def' → logprob: -1.7896628379821777
    4. ':
' → logprob: -2.9146628379821777
    5. '(
' → logprob: -3.2896628379821777
    6. 'j' → logprob: -4.289662837982178
    7. 'n' → logprob: -4.664662837982178
    8. '#' → logprob: -4.914662837982178
    9. ')' → logprob: -4.914662837982178
    10. ' =' → logprob: -5.539662837982178

Token 3202: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8281325101852417
    2. '   ' → logprob: -1.8281325101852417
    3. ':' → logprob: -1.9531325101852417
    4. 'j' → logprob: -2.2031326293945312
    5. ':
' → logprob: -3.9531326293945312
    6. 'n' → logprob: -3.9531326293945312
    7. '_' → logprob: -4.203132629394531
    8. 'p' → logprob: -4.328132629394531
    9. '#' (adapté à ' #') → logprob: -4.578132629394531
    10. '[
' → logprob: -4.828132629394531

Token 3203: ' Pre' (ID: 4659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.668286919593811
    2. 'n' → logprob: -1.293286919593811
    3. 'j' → logprob: -2.1682868003845215
    4. 'def' → logprob: -3.2932868003845215
    5. '#' → logprob: -3.5432868003845215
    6. 'p' → logprob: -5.4182868003845215
    7. 'joint' → logprob: -5.5432868003845215
    8. ']' → logprob: -5.7932868003845215
    9. 'sorted' → logprob: -6.1682868003845215
    10. '#
' → logprob: -6.2932868003845215

Token 3204: 'processing' (ID: 41376)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.5710302591323853
    2. 'sum' → logprob: -1.0710302591323853
    3. 's' → logprob: -3.5710301399230957
    4. 'c' → logprob: -3.8210301399230957
    5. 'm' → logprob: -4.196030139923096
    6. 'f' → logprob: -4.571030139923096
    7. 'v' → logprob: -5.321030139923096
    8. 'compute' → logprob: -5.321030139923096
    9. 'cis' → logprob: -6.446030139923096
    10. 'd' → logprob: -7.321030139923096

Token 3205: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7621452212333679
    2. 'n' → logprob: -1.6371452808380127
    3. ' =' → logprob: -1.8871452808380127
    4. 'def' → logprob: -3.0121452808380127
    5. 'j' → logprob: -3.6371452808380127
    6. ':' → logprob: -3.6371452808380127
    7. '#' → logprob: -3.8871452808380127
    8. ',' → logprob: -4.137145042419434
    9. '   ' → logprob: -4.762145042419434
    10. 'sys' → logprob: -5.137145042419434

Token 3206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1791960895061493
    2. 'n' → logprob: -2.1791961193084717
    3. 'j' → logprob: -4.304195880889893
    4. '#' → logprob: -4.804195880889893
    5. 'sum' → logprob: -5.054195880889893
    6. 'p' → logprob: -5.054195880889893
    7. 'joint' → logprob: -5.179195880889893
    8. 'pipes' → logprob: -5.804195880889893
    9. 'def' → logprob: -6.304195880889893
    10. 's' → logprob: -6.929195880889893

Token 3207: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9128378629684448
    2. 'n' → logprob: -1.0378378629684448
    3. 'j' → logprob: -1.9128378629684448
    4. 'sum' → logprob: -3.5378379821777344
    5. 'joint' → logprob: -3.5378379821777344
    6. '#' (adapté à ' #') → logprob: -3.9128379821777344
    7. 'sys' → logprob: -4.662837982177734
    8. 'p' → logprob: -6.787837982177734
    9. 'def' → logprob: -6.912837982177734
    10. '```' → logprob: -7.037837982177734

Token 3208: '  ' (ID: 256)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3524206578731537
    2. 'joint' → logprob: -1.852420687675476
    3. '   ' → logprob: -2.7274205684661865
    4. '#' → logprob: -3.8524205684661865
    5. 'n' → logprob: -4.102420806884766
    6. 'sum' → logprob: -4.477420806884766
    7. 'sorted' → logprob: -4.602420806884766
    8. 'def' → logprob: -6.102420806884766
    9. '```' → logprob: -6.102420806884766
    10. 's' → logprob: -6.977420806884766

Token 3209: ' -' (ID: 533)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1909054070711136
    2. 'joint' → logprob: -1.9409054517745972
    3. 'sorted' → logprob: -4.315905570983887
    4. '#' → logprob: -5.065905570983887
    5. 'sum' → logprob: -5.065905570983887
    6. '   ' → logprob: -6.440905570983887
    7. ' joints' → logprob: -7.815905570983887
    8. 'n' → logprob: -8.190905570983887
    9. 'sort' → logprob: -8.190905570983887
    10. 'length' → logprob: -8.440905570983887

Token 3210: ' calcul' (ID: 7559)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.30951598286628723
    2. 'joint' → logprob: -1.4345159530639648
    3. 'n' → logprob: -4.809515953063965
    4. '#' → logprob: -5.184515953063965
    5. 'sorted' → logprob: -5.559515953063965
    6. 'import' → logprob: -5.684515953063965
    7. 'sum' → logprob: -6.434515953063965
    8. 'join' → logprob: -6.934515953063965
    9. ' joints' → logprob: -7.184515953063965
    10. '   ' → logprob: -7.309515953063965

Token 3211: ' total' (ID: 3609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8512123823165894
    2. 'r' → logprob: -1.8512123823165894
    3. 'cess' → logprob: -1.8512123823165894
    4. 'ss' → logprob: -1.9762123823165894
    5. '_' → logprob: -3.226212501525879
    6. '   ' → logprob: -4.351212501525879
    7. ' ' → logprob: -4.601212501525879
    8. '[
' → logprob: -4.976212501525879
    9. ')' → logprob: -5.226212501525879
    10. 'c' → logprob: -5.351212501525879

Token 3212: ' S' (ID: 336)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.9736079573631287
    2. '_' → logprob: -1.3486080169677734
    3. '   ' → logprob: -2.0986080169677734
    4. '_p' → logprob: -2.9736080169677734
    5. 's' → logprob: -3.3486080169677734
    6. '=' → logprob: -3.7236080169677734
    7. ' =' → logprob: -3.9736080169677734
    8. '_
' → logprob: -4.598608016967773
    9. '_sum' → logprob: -4.848608016967773
    10. 'j' → logprob: -4.973608016967773

Token 3213: ' (' (ID: 350)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.918883204460144
    2. '_p' → logprob: -1.043883204460144
    3. '_' → logprob: -2.5438833236694336
    4. ' =' → logprob: -2.9188833236694336
    5. '=' → logprob: -3.4188833236694336
    6. '   ' → logprob: -3.7938833236694336
    7. 's' → logprob: -4.418883323669434
    8. '_pipe' → logprob: -4.668883323669434
    9. '_t' → logprob: -4.793883323669434
    10. ',' → logprob: -5.918883323669434

Token 3214: 's' (ID: 82)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6525991559028625
    2. 'p' → logprob: -1.2775990962982178
    3. 'j' → logprob: -2.9025990962982178
    4. 'pipes' → logprob: -3.0275990962982178
    5. ' =' → logprob: -4.027599334716797
    6. '   ' → logprob: -4.277599334716797
    7. 't' → logprob: -4.402599334716797
    8. ')' → logprob: -4.527599334716797
    9. 'pipe' → logprob: -4.777599334716797
    10. 'n' → logprob: -5.027599334716797

Token 3215: 'omme' (ID: 30420)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.1703320741653442
    2. '=' → logprob: -1.2953320741653442
    3. '_p' → logprob: -1.7953320741653442
    4. ' =' → logprob: -2.6703319549560547
    5. '_j' → logprob: -2.6703319549560547
    6. '_' → logprob: -3.1703319549560547
    7. '_u' → logprob: -4.670331954956055
    8. '_i' → logprob: -4.795331954956055
    9. ')' → logprob: -5.295331954956055
    10. ',' → logprob: -5.545331954956055

Token 3216: ' des' (ID: 731)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.8732483386993408
    2. '_' → logprob: -1.1232483386993408
    3. '_p' → logprob: -2.248248338699341
    4. 'des' → logprob: -2.748248338699341
    5. '_t' → logprob: -3.498248338699341
    6. '_des' → logprob: -3.623248338699341
    7. '=' → logprob: -4.498248100280762
    8. 't' → logprob: -5.248248100280762
    9. ' =' → logprob: -5.248248100280762
    10. '_of' → logprob: -6.748248100280762

Token 3217: ' tuy' (ID: 45164)
  Prédit: 'pipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pipes' → logprob: -0.38698437809944153
    2. 'p' → logprob: -1.7619843482971191
    3. 'j' → logprob: -2.136984348297119
    4. 't' → logprob: -3.886984348297119
    5. '_p' → logprob: -6.136984348297119
    6. '_j' → logprob: -6.511984348297119
    7. 'joint' → logprob: -6.511984348297119
    8. 'pipe' → logprob: -6.761984348297119
    9. 'length' → logprob: -7.011984348297119
    10. '#' → logprob: -7.136984348297119

Token 3218: 'aux' (ID: 5454)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.031049605458974838
    2. '   ' → logprob: -5.031049728393555
    3. '_' → logprob: -5.156049728393555
    4. 'pipes' → logprob: -5.281049728393555
    5. '_
' → logprob: -5.656049728393555
    6. ')
' → logprob: -6.406049728393555
    7. '_lengths' → logprob: -6.781049728393555
    8. ')' → logprob: -7.156049728393555
    9. '_pipe' → logprob: -7.156049728393555
    10. 's' → logprob: -7.406049728393555

Token 3219: ')
' (ID: 446)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.8447586894035339
    2. ' =' → logprob: -1.7197587490081787
    3. '_' → logprob: -2.3447587490081787
    4. '=' → logprob: -2.4697587490081787
    5. 'p' → logprob: -3.2197587490081787
    6. ')' → logprob: -3.3447587490081787
    7. ',' → logprob: -4.0947585105896
    8. '+' → logprob: -4.0947585105896
    9. '   ' → logprob: -4.3447585105896
    10. '_t' → logprob: -4.7197585105896

Token 3220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5553830862045288
    2. 'pipes' → logprob: -1.9303830862045288
    3. 'p' → logprob: -2.0553832054138184
    4. '_' → logprob: -2.0553832054138184
    5. 'def' → logprob: -2.1803832054138184
    6. ' =' → logprob: -3.0553832054138184
    7. '#' → logprob: -3.4303832054138184
    8. '_p' → logprob: -3.6803832054138184
    9. '=' → logprob: -3.6803832054138184
    10. ',' → logprob: -4.055383205413818

Token 3221: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03015146777033806
    2. '#' (adapté à ' #') → logprob: -4.7801513671875
    3. 'p' → logprob: -5.2801513671875
    4. ',' → logprob: -5.2801513671875
    5. ')' → logprob: -6.5301513671875
    6. 'import' → logprob: -6.5301513671875
    7. '+' → logprob: -6.9051513671875
    8. 'j' → logprob: -7.1551513671875
    9. 'n' → logprob: -7.2801513671875
    10. '```' → logprob: -7.6551513671875

Token 3222: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37028777599334717
    2. 'p' → logprob: -1.8702877759933472
    3. 'def' → logprob: -2.8702878952026367
    4. 'pipes' → logprob: -3.4952878952026367
    5. 'n' → logprob: -3.8702878952026367
    6. 'j' → logprob: -4.120287895202637
    7. '#' → logprob: -4.870287895202637
    8. 'pipe' → logprob: -5.495287895202637
    9. '(
' → logprob: -6.245287895202637
    10. '(' → logprob: -6.745287895202637

Token 3223: ' -' (ID: 533)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8242453932762146
    2. '#' → logprob: -1.6992454528808594
    3. '   ' → logprob: -2.6992454528808594
    4. 'pipes' → logprob: -2.8242454528808594
    5. '=' → logprob: -2.9492454528808594
    6. 'j' → logprob: -3.1992454528808594
    7. ' =' → logprob: -3.4492454528808594
    8. '+' → logprob: -3.5742454528808594
    9. 'sum' → logprob: -3.6992454528808594
    10. 't' → logprob: -4.324245452880859

Token 3224: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2253175526857376
    2. 'n' → logprob: -2.6003174781799316
    3. '   ' → logprob: -3.2253174781799316
    4. '#' → logprob: -3.3503174781799316
    5. 'joint' → logprob: -4.100317478179932
    6. 'p' → logprob: -4.100317478179932
    7. 'j' → logprob: -4.600317478179932
    8. 'm' → logprob: -5.975317478179932
    9. 'def' → logprob: -6.100317478179932
    10. ' ' → logprob: -7.600317478179932

Token 3225: ' totale' (ID: 52898)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.043792724609375
    2. '_' → logprob: -3.918792724609375
    3. '_des' → logprob: -4.668792724609375
    4. 'des' → logprob: -5.668792724609375
    5. '_of' → logprob: -5.918792724609375
    6. 'j' → logprob: -6.043792724609375
    7. '_total' → logprob: -6.543792724609375
    8. '_joint' → logprob: -6.543792724609375
    9. 's' → logprob: -7.918792724609375
    10. 'of' → logprob: -8.543792724609375

Token 3226: ' des' (ID: 731)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0678241029381752
    2. '_' → logprob: -4.192823886871338
    3. 'des' → logprob: -4.317823886871338
    4. 'j' → logprob: -4.567823886871338
    5. '_of' → logprob: -5.317823886871338
    6. '_des' → logprob: -5.567823886871338
    7. '_p' → logprob: -5.692823886871338
    8. '```' → logprob: -6.067823886871338
    9. 'of' → logprob: -6.442823886871338
    10. ' =' → logprob: -6.817823886871338

Token 3227: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004125419072806835
    2. '_j' → logprob: -5.754125595092773
    3. 'joint' → logprob: -8.129125595092773
    4. '#' → logprob: -8.254125595092773
    5. ' joints' → logprob: -9.379125595092773
    6. 'pipes' → logprob: -9.379125595092773
    7. 'joins' → logprob: -9.629125595092773
    8. 'join' → logprob: -10.879125595092773
    9. '```' → logprob: -10.879125595092773
    10. 'p' → logprob: -11.129125595092773

Token 3228: ' J' (ID: 643)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3811827898025513
    2. 's' → logprob: -2.3811826705932617
    3. '(
' → logprob: -2.5061826705932617
    4. '_j' → logprob: -2.5061826705932617
    5. ' =' → logprob: -2.6311826705932617
    6. '   ' → logprob: -2.7561826705932617
    7. '[
' → logprob: -2.8811826705932617
    8. '=' → logprob: -3.1311826705932617
    9. 'n' → logprob: -3.7561826705932617
    10. ']' → logprob: -3.8811826705932617

Token 3229: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7598742246627808
    2. '_' → logprob: -1.7598742246627808
    3. '=' → logprob: -2.5098743438720703
    4. '   ' → logprob: -2.6348743438720703
    5. 'def' → logprob: -2.7598743438720703
    6. '_j' → logprob: -3.1348743438720703
    7. 's' → logprob: -3.3848743438720703
    8. '_
' → logprob: -5.00987434387207
    9. ',' → logprob: -5.38487434387207
    10. ']' → logprob: -5.50987434387207

Token 3230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2650439739227295
    2. 'def' → logprob: -1.5150439739227295
    3. ' =' → logprob: -2.5150439739227295
    4. '_j' → logprob: -2.7650439739227295
    5. ':' → logprob: -3.1400439739227295
    6. 'n' → logprob: -3.2650439739227295
    7. '#' → logprob: -3.3900439739227295
    8. '=' → logprob: -3.3900439739227295
    9. 'j' → logprob: -3.5150439739227295
    10. 'p' → logprob: -3.6400439739227295

Token 3231: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.127553939819336
    2. 'def' → logprob: -1.377553939819336
    3. 'j' → logprob: -2.252553939819336
    4. 'p' → logprob: -2.627553939819336
    5. '_j' → logprob: -3.002553939819336
    6. ' =' → logprob: -3.127553939819336
    7. ',' → logprob: -3.627553939819336
    8. '#' (adapté à ' #') → logprob: -3.752553939819336
    9. 'n' → logprob: -4.127553939819336
    10. '=' → logprob: -4.502553939819336

Token 3232: '  ' (ID: 256)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5177653431892395
    2. 'n' → logprob: -1.5177652835845947
    3. '   ' → logprob: -2.1427652835845947
    4. 'import' → logprob: -3.2677652835845947
    5. '#' → logprob: -4.642765522003174
    6. 'p' → logprob: -5.392765522003174
    7. 'j' → logprob: -6.017765522003174
    8. '
' → logprob: -6.017765522003174
    9. 'sys' → logprob: -6.517765522003174
    10. '(n' → logprob: -7.142765522003174

Token 3233: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2611171007156372
    2. '=' → logprob: -1.2611171007156372
    3. 'j' → logprob: -2.1361169815063477
    4. ' =' → logprob: -2.3861169815063477
    5. '   ' → logprob: -2.6361169815063477
    6. ':' → logprob: -3.1361169815063477
    7. 'n' → logprob: -4.011116981506348
    8. 'sum' → logprob: -4.261116981506348
    9. ']' → logprob: -4.386116981506348
    10. 'p' → logprob: -4.636116981506348

Token 3234: ' On' (ID: 2160)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7380491495132446
    2. 'p' → logprob: -1.8630491495132446
    3. '   ' → logprob: -2.113049030303955
    4. 'pipes' → logprob: -2.613049030303955
    5. 'n' → logprob: -2.738049030303955
    6. 'joint' → logprob: -3.113049030303955
    7. '#' → logprob: -3.613049030303955
    8. 'pipe' → logprob: -4.863049030303955
    9. 'lines' → logprob: -5.488049030303955
    10. 'sys' → logprob: -5.863049030303955

Token 3235: ' trie' (ID: 139428)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7120160460472107
    2. 'sort' → logprob: -1.5870161056518555
    3. '#' → logprob: -1.8370161056518555
    4. '.sort' → logprob: -2.9620161056518555
    5. '
' → logprob: -3.8370161056518555
    6. ' =' → logprob: -3.8370161056518555
    7. 's' → logprob: -4.9620161056518555
    8. '.' → logprob: -5.2120161056518555
    9. 'j' → logprob: -5.5870161056518555
    10. 'sorted' → logprob: -5.5870161056518555

Token 3236: ' la' (ID: 557)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.5315577387809753
    2. 'j' → logprob: -1.9065577983856201
    3. '_' → logprob: -2.28155779838562
    4. '_joint' → logprob: -2.90655779838562
    5. '_sorted' → logprob: -3.65655779838562
    6. '[' → logprob: -4.031557559967041
    7. '[j' → logprob: -4.281557559967041
    8. 'sorted' → logprob: -4.656557559967041
    9. ']' → logprob: -4.781557559967041
    10. '```' → logprob: -5.531557559967041

Token 3237: ' liste' (ID: 31719)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018350696191191673
    2. 'joint' → logprob: -4.518350601196289
    3. '_j' → logprob: -5.518350601196289
    4. 'sorted' → logprob: -6.393350601196289
    5. ' joints' → logprob: -7.893350601196289
    6. 'join' → logprob: -8.393350601196289
    7. '_joint' → logprob: -8.643350601196289
    8. 'joins' → logprob: -8.643350601196289
    9. '.j' → logprob: -9.768350601196289
    10. 'length' → logprob: -9.893350601196289

Token 3238: ' des' (ID: 731)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.6890503764152527
    2. '_' → logprob: -1.3140504360198975
    3. '[j' → logprob: -3.0640504360198975
    4. 's' → logprob: -3.4390504360198975
    5. '=' → logprob: -3.5640504360198975
    6. ']' → logprob: -3.6890504360198975
    7. '[' → logprob: -4.064050197601318
    8. '```' → logprob: -4.189050197601318
    9. 'j' → logprob: -4.314050197601318
    10. '[
' → logprob: -5.064050197601318

Token 3239: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.015561852604150772
    2. 'joint' → logprob: -4.515562057495117
    3. '_j' → logprob: -6.140562057495117
    4. 'sorted' → logprob: -7.140562057495117
    5. ' joints' → logprob: -7.390562057495117
    6. 'join' → logprob: -8.015562057495117
    7. 'length' → logprob: -8.765562057495117
    8. '[j' → logprob: -9.515562057495117
    9. 'joins' → logprob: -9.765562057495117
    10. 'js' → logprob: -10.140562057495117

Token 3240: ' pour' (ID: 1930)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.9941206574440002
    2. '[j' → logprob: -1.7441205978393555
    3. ':' → logprob: -2.6191205978393555
    4. ' =' → logprob: -2.7441205978393555
    5. ']' → logprob: -2.9941205978393555
    6. '=' → logprob: -3.3691205978393555
    7. ':
' → logprob: -3.4941205978393555
    8. '```' → logprob: -3.4941205978393555
    9. '   ' → logprob: -4.2441205978393555
    10. 'j' → logprob: -4.2441205978393555

Token 3241: ' déterminer' (ID: 122024)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.39621391892433167
    2. 'i' → logprob: -2.146214008331299
    3. 'joint' → logprob: -2.396214008331299
    4. 'sort' → logprob: -3.896214008331299
    5. '_j' → logprob: -4.146214008331299
    6. 'len' → logprob: -4.271214008331299
    7. ' j' → logprob: -5.021214008331299
    8. 'join' → logprob: -5.146214008331299
    9. '=' → logprob: -5.521214008331299
    10. 'l' → logprob: -5.521214008331299

Token 3242: ' facilement' (ID: 54086)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5502852201461792
    2. 'sorted' → logprob: -1.6752852201461792
    3. 'j' → logprob: -2.0502853393554688
    4. '   ' → logprob: -2.3002853393554688
    5. '=' → logprob: -2.3002853393554688
    6. ')' → logprob: -2.9252853393554688
    7. 'joint' → logprob: -3.6752853393554688
    8. '[j' → logprob: -3.8002853393554688
    9. '_' → logprob: -3.8002853393554688
    10. '_j' → logprob: -4.050285339355469

Token 3243: ' les' (ID: 1341)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14193564653396606
    2. 'sorted' → logprob: -3.3919355869293213
    3. 'j' → logprob: -3.5169355869293213
    4. '_j' → logprob: -4.7669358253479
    5. '   ' → logprob: -4.8919358253479
    6. '[]' → logprob: -4.8919358253479
    7. '[j' → logprob: -5.0169358253479
    8. '`' → logprob: -5.5169358253479
    9. '],' → logprob: -5.5169358253479
    10. 'joint' → logprob: -5.7669358253479

Token 3244: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3505456447601318
    2. 'sorted' → logprob: -1.3505456447601318
    3. 'k' → logprob: -2.600545644760132
    4. '#' → logprob: -3.100545644760132
    5. 'small' → logprob: -3.350545644760132
    6. 'best' → logprob: -3.725545644760132
    7. '```' → logprob: -3.725545644760132
    8. '_' → logprob: -3.850545644760132
    9. '_j' → logprob: -3.850545644760132
    10. 'i' → logprob: -3.850545644760132

Token 3245: ' plus' (ID: 2932)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.4508482217788696
    2. '_j' → logprob: -1.7008482217788696
    3. ' =' → logprob: -1.8258482217788696
    4. '=' → logprob: -2.07584810256958
    5. ')' → logprob: -3.32584810256958
    6. '#' → logprob: -3.32584810256958
    7. 'sorted' → logprob: -3.57584810256958
    8. ']' → logprob: -3.95084810256958
    9. 's' → logprob: -3.95084810256958
    10. '_' → logprob: -4.20084810256958

Token 3246: ' petites' (ID: 55617)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.11524947732686996
    2. '_pet' → logprob: -3.2402493953704834
    3. '_small' → logprob: -3.6152493953704834
    4. '```' → logprob: -4.4902496337890625
    5. '_' → logprob: -4.6152496337890625
    6. '_p' → logprob: -4.7402496337890625
    7. 'small' → logprob: -5.8652496337890625
    8. 'cour' → logprob: -5.9902496337890625
    9. 'import' → logprob: -6.1152496337890625
    10. 'gr' → logprob: -7.1152496337890625

Token 3247: ' valeurs' (ID: 73668)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.2223021686077118
    2. '_' → logprob: -1.7223021984100342
    3. '_joint' → logprob: -5.597301959991455
    4. ')' → logprob: -6.222301959991455
    5. 'j' → logprob: -6.472301959991455
    6. '[j' → logprob: -6.597301959991455
    7. ']' → logprob: -6.722301959991455
    8. '_sorted' → logprob: -6.722301959991455
    9. '```' → logprob: -6.847301959991455
    10. ' =' → logprob: -6.972301959991455

Token 3248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5855189561843872
    2. '_j' → logprob: -1.5855189561843872
    3. ':' → logprob: -2.4605188369750977
    4. ' =' → logprob: -2.5855188369750977
    5. ']' → logprob: -2.7105188369750977
    6. 'j' → logprob: -2.8355188369750977
    7. '_' → logprob: -2.9605188369750977
    8. '=' → logprob: -3.3355188369750977
    9. '[j' → logprob: -3.4605188369750977
    10. ':
' → logprob: -3.4605188369750977

Token 3249: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.7683035135269165
    2. '   ' → logprob: -1.7683035135269165
    3. ':' → logprob: -2.268303394317627
    4. 'def' → logprob: -2.268303394317627
    5. ']' → logprob: -2.518303394317627
    6. '_j' → logprob: -2.518303394317627
    7. ':
' → logprob: -2.893303394317627
    8. ' =' → logprob: -3.518303394317627
    9. '#' → logprob: -4.143303394317627
    10. ',' → logprob: -4.143303394317627

Token 3250: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3223276436328888
    2. '   ' → logprob: -1.4473276138305664
    3. ':' → logprob: -5.072327613830566
    4. 'n' → logprob: -5.697327613830566
    5. ':
' → logprob: -5.947327613830566
    6. '()
' → logprob: -6.197327613830566
    7. 'j' → logprob: -6.197327613830566
    8. '#' → logprob: -6.197327613830566
    9. '\' → logprob: -6.447327613830566
    10. '()' → logprob: -6.447327613830566

Token 3251: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8609901070594788
    2. '   ' → logprob: -1.110990047454834
    3. 'n' → logprob: -2.985990047454834
    4. 'p' → logprob: -3.610990047454834
    5. '(
' → logprob: -3.610990047454834
    6. ':' → logprob: -3.860990047454834
    7. 'j' → logprob: -3.860990047454834
    8. '()
' → logprob: -4.610990047454834
    9. ' =' → logprob: -4.735990047454834
    10. '()' → logprob: -4.735990047454834

Token 3252: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8788968920707703
    2. 'n' → logprob: -1.378896951675415
    3. '   ' → logprob: -1.378896951675415
    4. 'j' → logprob: -2.878896951675415
    5. 'import' → logprob: -4.378896713256836
    6. 'joint' → logprob: -5.503896713256836
    7. 'p' → logprob: -6.378896713256836
    8. '#' (adapté à ' #') → logprob: -6.378896713256836
    9. '(n' → logprob: -7.753896713256836
    10. 'sys' → logprob: -7.878896713256836

Token 3253: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5186424851417542
    2. 'n' → logprob: -1.3936424255371094
    3. '   ' → logprob: -2.1436424255371094
    4. 'j' → logprob: -4.393642425537109
    5. 'joint' → logprob: -5.143642425537109
    6. 'import' → logprob: -5.643642425537109
    7. 'p' → logprob: -5.893642425537109
    8. '(n' → logprob: -5.893642425537109
    9. '#' → logprob: -6.268642425537109
    10. '()' → logprob: -6.893642425537109

Token 3254: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6174704432487488
    2. 'j' → logprob: -2.1174705028533936
    3. 'joint' → logprob: -2.1174705028533936
    4. '_' → logprob: -2.9924705028533936
    5. '_joint' → logprob: -2.9924705028533936
    6. '_j' → logprob: -3.4924705028533936
    7. ' joint' → logprob: -4.1174702644348145
    8. ' i' → logprob: -4.3674702644348145
    9. ' line' → logprob: -4.4924702644348145
    10. 'n' → logprob: -4.6174702644348145

Token 3255: ' possible' (ID: 4149)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5772795081138611
    2. 'c' → logprob: -1.0772795677185059
    3. 'i' → logprob: -2.452279567718506
    4. '_c' → logprob: -5.702279567718506
    5. '_k' → logprob: -6.327279567718506
    6. '_i' → logprob: -7.077279567718506
    7. '_' → logprob: -7.202279567718506
    8. '```' → logprob: -7.452279567718506
    9. 'n' → logprob: -7.577279567718506
    10. '   ' → logprob: -7.577279567718506

Token 3256: ' c' (ID: 274)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.2682143449783325
    2. '_k' → logprob: -1.3932143449783325
    3. '_j' → logprob: -2.018214225769043
    4. '_' → logprob: -2.268214225769043
    5. 'k' → logprob: -3.018214225769043
    6. ':' → logprob: -3.268214225769043
    7. '_joint' → logprob: -3.893214225769043
    8. 'c' → logprob: -4.143214225769043
    9. ' =' → logprob: -4.518214225769043
    10. ' _' → logprob: -4.768214225769043

Token 3257: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32650136947631836
    2. ')' → logprob: -3.0765013694763184
    3. 's' → logprob: -3.2015013694763184
    4. ']' → logprob: -3.4515013694763184
    5. '_c' → logprob: -3.8265013694763184
    6. ' =' → logprob: -3.8265013694763184
    7. '=' → logprob: -3.8265013694763184
    8. ',' → logprob: -4.451501369476318
    9. '_i' → logprob: -4.826501369476318
    10. '_j' → logprob: -4.951501369476318

Token 3258: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7490193843841553
    2. '   ' → logprob: -1.8740193843841553
    3. '#' → logprob: -2.1240193843841553
    4. ':
' → logprob: -2.7490193843841553
    5. 'sum' → logprob: -3.3740193843841553
    6. '):' → logprob: -3.6240193843841553
    7. '```' → logprob: -4.249019622802734
    8. ' sum' → logprob: -4.374019622802734
    9. 'j' → logprob: -4.624019622802734
    10. ' #' → logprob: -4.749019622802734

Token 3259: ' calc' (ID: 25691)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39517202973365784
    2. '#' → logprob: -2.145172119140625
    3. ' =' → logprob: -3.395172119140625
    4. '_' → logprob: -3.520172119140625
    5. 's' → logprob: -3.895172119140625
    6. '_sorted' → logprob: -3.895172119140625
    7. 'for' → logprob: -4.395172119140625
    8. ']' → logprob: -4.395172119140625
    9. '[]' → logprob: -4.645172119140625
    10. '[' → logprob: -4.770172119140625

Token 3260: 'ule' (ID: 1601)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.9025474190711975
    2. '=' → logprob: -1.6525473594665527
    3. '[
' → logprob: -2.4025473594665527
    4. 'ul' → logprob: -2.6525473594665527
    5. 'l' → logprob: -3.0275473594665527
    6. '[' → logprob: -3.4025473594665527
    7. 'alculate' → logprob: -3.6525473594665527
    8. 'u' → logprob: -3.7775473594665527
    9. ' =' → logprob: -4.277547359466553
    10. ']' → logprob: -4.402547359466553

Token 3261: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12717829644680023
    2. '_c' → logprob: -3.252178192138672
    3. '_sum' → logprob: -3.752178192138672
    4. '_prefix' → logprob: -3.877178192138672
    5. '```' → logprob: -4.877178192138672
    6. '_s' → logprob: -5.002178192138672
    7. '   ' → logprob: -5.877178192138672
    8. 'sum' → logprob: -6.002178192138672
    9. 's' → logprob: -6.627178192138672
    10. '`' → logprob: -6.752178192138672

Token 3262: ' somme' (ID: 64484)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.9213151335716248
    2. '_' → logprob: -1.0463151931762695
    3. 'prefix' → logprob: -2.5463151931762695
    4. '_max' → logprob: -3.2963151931762695
    5. '_c' → logprob: -3.6713151931762695
    6. 'max' → logprob: -3.7963151931762695
    7. '_sum' → logprob: -4.0463151931762695
    8. 's' → logprob: -4.1713151931762695
    9. 'sum' → logprob: -4.9213151931762695
    10. '_s' → logprob: -5.2963151931762695

Token 3263: ' des' (ID: 731)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5352607369422913
    2. '_j' → logprob: -1.1602606773376465
    3. '_' → logprob: -3.0352606773376465
    4. 's' → logprob: -3.9102606773376465
    5. '_des' → logprob: -4.5352606773376465
    6. 'des' → logprob: -4.9102606773376465
    7. '_cut' → logprob: -5.2852606773376465
    8. '_joint' → logprob: -6.4102606773376465
    9. '_of' → logprob: -6.9102606773376465
    10. ' =' → logprob: -7.0352606773376465

Token 3264: ' c' (ID: 274)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0128127336502075
    2. '_j' → logprob: -1.7628127336502075
    3. 'c' → logprob: -2.512812614440918
    4. '_c' → logprob: -2.637812614440918
    5. 'j' → logprob: -2.762812614440918
    6. 'sorted' → logprob: -2.762812614440918
    7. 'prefix' → logprob: -2.887812614440918
    8. '_prefix' → logprob: -3.262812614440918
    9. '_sorted' → logprob: -3.762812614440918
    10. '_joint' → logprob: -3.887812614440918

Token 3265: ' plus' (ID: 2932)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.3691962957382202
    2. '_plus' → logprob: -1.6191962957382202
    3. '_small' → logprob: -1.8691962957382202
    4. '_c' → logprob: -1.9941962957382202
    5. '_' → logprob: -2.1191964149475098
    6. '_joint' → logprob: -3.7441964149475098
    7. '_min' → logprob: -3.8691964149475098
    8. '_sorted' → logprob: -4.24419641494751
    9. 'plus' → logprob: -4.74419641494751
    10. '```' → logprob: -4.86919641494751

Token 3266: ' petites' (ID: 55617)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.2771948277950287
    2. '_' → logprob: -2.0271947383880615
    3. 'plus' → logprob: -3.4021947383880615
    4. '+' → logprob: -4.027194976806641
    5. 'import' → logprob: -4.652194976806641
    6. '_pet' → logprob: -4.777194976806641
    7. '```' → logprob: -5.402194976806641
    8. '#' → logprob: -5.402194976806641
    9. 'minus' → logprob: -5.527194976806641
    10. '_small' → logprob: -5.652194976806641

Token 3267: ' joints' (ID: 47223)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.5137380957603455
    2. '_' → logprob: -2.3887381553649902
    3. '_val' → logprob: -2.3887381553649902
    4. 'j' → logprob: -2.7637381553649902
    5. '_values' → logprob: -3.3887381553649902
    6. ']' → logprob: -3.8887381553649902
    7. '_joint' → logprob: -3.8887381553649902
    8. '[j' → logprob: -4.38873815536499
    9. '[
' → logprob: -4.63873815536499
    10. '```' → logprob: -5.26373815536499

Token 3268: ',
' (ID: 412)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29163578152656555
    2. '_j' → logprob: -2.916635751724243
    3. 's' → logprob: -3.041635751724243
    4. ']' → logprob: -3.291635751724243
    5. '_sorted' → logprob: -3.791635751724243
    6. '_c' → logprob: -4.291635990142822
    7. '```' → logprob: -4.541635990142822
    8. '[' → logprob: -4.666635990142822
    9. '   ' → logprob: -5.041635990142822
    10. ' =' → logprob: -5.291635990142822

Token 3269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4011271595954895
    2. '=' → logprob: -3.1511270999908447
    3. '[' → logprob: -3.2761270999908447
    4. ']' → logprob: -3.4011270999908447
    5. '#' → logprob: -3.5261270999908447
    6. '_' → logprob: -3.6511270999908447
    7. ')' → logprob: -3.6511270999908447
    8. '[]' → logprob: -3.7761270999908447
    9. ':' → logprob: -3.9011270999908447
    10. ' =' → logprob: -4.026127338409424

Token 3270: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7633343935012817
    2. '   ' → logprob: -1.8883343935012817
    3. '#' (adapté à ' #') → logprob: -2.013334274291992
    4. ')' → logprob: -3.263334274291992
    5. ' =' → logprob: -3.263334274291992
    6. '[' → logprob: -3.513334274291992
    7. ':' → logprob: -3.513334274291992
    8. '_' → logprob: -4.013334274291992
    9. ']' → logprob: -4.138334274291992
    10. '[]' → logprob: -4.388334274291992

Token 3271: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2278114557266235
    2. '#' → logprob: -1.7278114557266235
    3. ']' → logprob: -2.852811336517334
    4. 'sorted' → logprob: -3.227811336517334
    5. '[i' → logprob: -3.477811336517334
    6. '[]' → logprob: -3.602811336517334
    7. 'j' → logprob: -3.727811336517334
    8. '[j' → logprob: -3.727811336517334
    9. 'c' → logprob: -3.852811336517334
    10. '=' → logprob: -3.852811336517334

Token 3272: ' dé' (ID: 2393)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9491258859634399
    2. 'on' → logprob: -1.69912588596344
    3. 'for' → logprob: -2.3241257667541504
    4. 'ens' → logprob: -2.8241257667541504
    5. 'p' → logprob: -2.9491257667541504
    6. 'print' → logprob: -2.9491257667541504
    7. 'aff' → logprob: -3.0741257667541504
    8. 'range' → logprob: -4.44912576675415
    9. ' on' → logprob: -4.57412576675415
    10. '   ' → logprob: -4.57412576675415

Token 3273: 'duit' (ID: 90246)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0016342396847903728
    2. 'fin' → logprob: -7.251634120941162
    3. '#' → logprob: -7.876634120941162
    4. 'for' → logprob: -9.00163459777832
    5. 'fine' → logprob: -9.25163459777832
    6. 'r' → logprob: -9.62663459777832
    7. 'c' → logprob: -10.50163459777832
    8. 'fen' → logprob: -10.50163459777832
    9. 'code' → logprob: -10.75163459777832
    10. '=' → logprob: -10.75163459777832

Token 3274: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.798480212688446
    2. ' la' → logprob: -1.4234802722930908
    3. 'le' → logprob: -2.798480272293091
    4. 'c' → logprob: -3.798480272293091
    5. '   ' → logprob: -3.798480272293091
    6. '_la' → logprob: -4.048480033874512
    7. '-la' → logprob: -4.173480033874512
    8. ' le' → logprob: -4.423480033874512
    9. 'sum' → logprob: -4.423480033874512
    10. 'leur' → logprob: -4.423480033874512

Token 3275: ' salaire' (ID: 135427)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.253631830215454
    2. 'max' → logprob: -1.753631830215454
    3. '_max' → logprob: -2.128631830215454
    4. ' max' → logprob: -2.253631830215454
    5. 'result' → logprob: -3.253631830215454
    6. ' result' → logprob: -3.378631830215454
    7. ' _' → logprob: -3.378631830215454
    8. 's' → logprob: -3.628631830215454
    9. '_result' → logprob: -3.628631830215454
    10. ' maximum' → logprob: -3.878631830215454

Token 3276: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7900677919387817
    2. '   ' → logprob: -1.2900677919387817
    3. '(
' → logprob: -2.290067672729492
    4. '_j' → logprob: -2.790067672729492
    5. ':' → logprob: -3.915067672729492
    6. 's' → logprob: -4.540067672729492
    7. '_' → logprob: -4.540067672729492
    8. ':
' → logprob: -4.790067672729492
    9. 'j' → logprob: -4.915067672729492
    10. '(' → logprob: -5.165067672729492

Token 3277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33162322640419006
    2. 'def' → logprob: -1.4566231966018677
    3. ':' → logprob: -4.456623077392578
    4. ':
' → logprob: -4.706623077392578
    5. 'j' → logprob: -5.581623077392578
    6. ' =' → logprob: -5.706623077392578
    7. '(p' → logprob: -5.706623077392578
    8. '(
' → logprob: -6.206623077392578
    9. '```' → logprob: -6.331623077392578
    10. 'n' → logprob: -6.331623077392578

Token 3278: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8630727529525757
    2. '   ' → logprob: -1.1130727529525757
    3. 'n' → logprob: -1.4880727529525757
    4. '(n' → logprob: -5.488072872161865
    5. 'import' → logprob: -5.613072872161865
    6. 'p' → logprob: -5.988072872161865
    7. '()
' → logprob: -6.613072872161865
    8. 'j' → logprob: -6.613072872161865
    9. '#' → logprob: -6.738072872161865
    10. '(
' → logprob: -6.863072872161865

Token 3279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28669410943984985
    2. 'def' → logprob: -2.286694049835205
    3. 'n' → logprob: -2.536694049835205
    4. 'j' → logprob: -3.911694049835205
    5. 'p' → logprob: -4.036694049835205
    6. ':' → logprob: -4.786694049835205
    7. ':
' → logprob: -5.286694049835205
    8. '(
' → logprob: -6.036694049835205
    9. '#' → logprob: -6.286694049835205
    10. '\' → logprob: -6.786694049835205

Token 3280: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2710404396057129
    2. 'def' → logprob: -2.146040439605713
    3. '   ' → logprob: -2.396040439605713
    4. 'j' → logprob: -4.646040439605713
    5. ']' → logprob: -5.771040439605713
    6. '#' (adapté à ' #') → logprob: -5.896040439605713
    7. ':' → logprob: -6.146040439605713
    8. '(
' → logprob: -6.271040439605713
    9. ':
' → logprob: -6.896040439605713
    10. ')' → logprob: -6.896040439605713

Token 3281: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8545331954956055
    2. 'n' → logprob: -1.4795331954956055
    3. 'def' → logprob: -1.6045331954956055
    4. 'j' → logprob: -2.3545331954956055
    5. '#' → logprob: -4.1045331954956055
    6. 'p' → logprob: -4.4795331954956055
    7. 'joint' → logprob: -4.6045331954956055
    8. 'import' → logprob: -5.3545331954956055
    9. 'pipes' → logprob: -6.6045331954956055
    10. '```' → logprob: -6.7295331954956055

Token 3282: ' maximum' (ID: 10562)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.1857120990753174
    2. 'j' → logprob: -1.3107120990753174
    3. '_' → logprob: -1.9357120990753174
    4. 'n' → logprob: -3.1857120990753174
    5. 'def' → logprob: -3.5607120990753174
    6. '#' → logprob: -3.5607120990753174
    7. '_
' → logprob: -3.8107120990753174
    8. '_max' → logprob: -4.185711860656738
    9. '_joint' → logprob: -4.310711860656738
    10. 'joint' → logprob: -4.310711860656738

Token 3283: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2065398693084717
    2. '=' → logprob: -1.9565398693084717
    3. 'def' → logprob: -2.0815398693084717
    4. ':' → logprob: -2.0815398693084717
    5. '   ' → logprob: -2.3315398693084717
    6. '_' → logprob: -3.2065398693084717
    7. '_j' → logprob: -3.5815398693084717
    8. '```' → logprob: -3.7065398693084717
    9. 's' → logprob: -3.8315398693084717
    10. '[
' → logprob: -4.331540107727051

Token 3284: ' ce' (ID: 2357)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6341623663902283
    2. 'sum' → logprob: -2.134162425994873
    3. '_j' → logprob: -2.634162425994873
    4. ')' → logprob: -3.134162425994873
    5. 's' → logprob: -3.134162425994873
    6. ':' → logprob: -3.134162425994873
    7. '(
' → logprob: -4.009162425994873
    8. ']' → logprob: -4.134162425994873
    9. '_sum' → logprob: -4.384162425994873
    10. '_' → logprob: -4.384162425994873

Token 3285: ' salaire' (ID: 135427)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03448805212974548
    2. '=' → logprob: -4.534488201141357
    3. ')' → logprob: -4.784488201141357
    4. ' =' → logprob: -5.159488201141357
    5. '_
' → logprob: -5.909488201141357
    6. '_max' → logprob: -6.659488201141357
    7. ' _' → logprob: -6.784488201141357
    8. 's' → logprob: -7.284488201141357
    9. '_)' → logprob: -7.784488201141357
    10. '\' → logprob: -8.0344877243042

Token 3286: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7148643136024475
    2. ' =' → logprob: -1.2148642539978027
    3. '   ' → logprob: -2.4648642539978027
    4. '```' → logprob: -3.4648642539978027
    5. '_' → logprob: -3.8398642539978027
    6. ':' → logprob: -4.089864253997803
    7. 's' → logprob: -4.339864253997803
    8. ')' → logprob: -4.714864253997803
    9. ']' → logprob: -5.339864253997803
    10. 'def' → logprob: -5.464864253997803

Token 3287: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0834074020385742
    2. '   ' → logprob: -1.2084074020385742
    3. ':' → logprob: -1.8334074020385742
    4. '\' → logprob: -3.083407402038574
    5. ':
' → logprob: -3.458407402038574
    6. '```' → logprob: -3.708407402038574
    7. ' max' → logprob: -4.083407402038574
    8. '0' → logprob: -4.708407402038574
    9. ']' → logprob: -4.833407402038574
    10. '\n' → logprob: -5.083407402038574

Token 3288: ' réponse' (ID: 50332)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.34230467677116394
    2. '_max' → logprob: -1.9673047065734863
    3. 'def' → logprob: -3.0923047065734863
    4. ')' → logprob: -3.2173047065734863
    5. '_' → logprob: -4.342304706573486
    6. ']' → logprob: -4.842304706573486
    7. ' max' → logprob: -5.092304706573486
    8. 'n' → logprob: -5.467304706573486
    9. ':' → logprob: -5.467304706573486
    10. '\n' → logprob: -5.592304706573486

Token 3289: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21118223667144775
    2. '   ' → logprob: -1.8361822366714478
    3. ':' → logprob: -4.586182117462158
    4. ':
' → logprob: -4.961182117462158
    5. '(
' → logprob: -5.586182117462158
    6. '():' → logprob: -6.711182117462158
    7. '(p' → logprob: -6.836182117462158
    8. '():
' → logprob: -7.086182117462158
    9. '```' → logprob: -7.086182117462158
    10. '()
' → logprob: -7.336182117462158

Token 3290: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2990261912345886
    2. '   ' → logprob: -2.2990262508392334
    3. 'n' → logprob: -2.9240262508392334
    4. 'p' → logprob: -3.5490262508392334
    5. ':' → logprob: -3.9240262508392334
    6. '(
' → logprob: -4.299026012420654
    7. 'j' → logprob: -5.049026012420654
    8. 'pipes' → logprob: -5.299026012420654
    9. '(p' → logprob: -5.299026012420654
    10. '```' → logprob: -5.674026012420654

Token 3291: ' #
' (ID: 21888)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0730153322219849
    2. '   ' → logprob: -1.0730153322219849
    3. 'def' → logprob: -1.1980153322219849
    4. 'p' → logprob: -5.198015213012695
    5. 'j' → logprob: -6.698015213012695
    6. '(n' → logprob: -6.823015213012695
    7. 'import' → logprob: -6.948015213012695
    8. '```' → logprob: -6.948015213012695
    9. '#' → logprob: -7.073015213012695
    10. '
' → logprob: -7.198015213012695

Token 3292: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6576609015464783
    2. 'n' → logprob: -1.032660961151123
    3. '   ' → logprob: -2.282660961151123
    4. '(n' → logprob: -5.532660961151123
    5. ':' → logprob: -5.782660961151123
    6. '(
' → logprob: -6.032660961151123
    7. 'import' → logprob: -6.282660961151123
    8. ':
' → logprob: -6.282660961151123
    9. '#' → logprob: -6.532660961151123
    10. '\' → logprob: -6.907660961151123

Token 3293: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4081130027770996
    2. '   ' → logprob: -1.7831130027770996
    3. 'n' → logprob: -1.9081130027770996
    4. 'p' → logprob: -4.4081130027771
    5. 'j' → logprob: -6.1581130027771
    6. '#' (adapté à ' #') → logprob: -7.0331130027771
    7. 'import' → logprob: -7.1581130027771
    8. 'if' → logprob: -7.2831130027771
    9. 'pipes' → logprob: -7.7831130027771
    10. 'sys' → logprob: -7.9081130027771

Token 3294: ' Su' (ID: 3893)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8067067265510559
    2. 'n' → logprob: -1.0567066669464111
    3. 'p' → logprob: -2.181706666946411
    4. 'pipes' → logprob: -3.431706666946411
    5. '   ' → logprob: -4.18170690536499
    6. 'j' → logprob: -4.80670690536499
    7. ':' → logprob: -4.93170690536499
    8. '#' → logprob: -4.93170690536499
    9. '(
' → logprob: -5.68170690536499
    10. 't' → logprob: -5.93170690536499

Token 3295: 'ivant' (ID: 100782)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.015494709834456444
    2. 'mm' → logprob: -4.2654948234558105
    3. 'r' → logprob: -7.6404948234558105
    4. '
' → logprob: -8.265494346618652
    5. 'mma' → logprob: -8.515494346618652
    6. 'p' → logprob: -9.265494346618652
    7. 'b' → logprob: -9.390494346618652
    8. 'ms' → logprob: -10.390494346618652
    9. 'mmi' → logprob: -11.140494346618652
    10. '\' → logprob: -11.140494346618652

Token 3296: ' l' (ID: 305)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35460802912712097
    2. '   ' → logprob: -1.9796080589294434
    3. '(
' → logprob: -3.2296080589294434
    4. 'n' → logprob: -3.9796080589294434
    5. 'pipes' → logprob: -4.104608058929443
    6. '```' → logprob: -4.354608058929443
    7. 'p' → logprob: -4.604608058929443
    8. ':' → logprob: -4.729608058929443
    9. '_' → logprob: -4.729608058929443
    10. 'import' → logprob: -4.854608058929443

Token 3297: ''ex' (ID: 23472)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9746112823486328
    2. 's' → logprob: -1.8496112823486328
    3. 'def' → logprob: -2.724611282348633
    4. '   ' → logprob: -2.974611282348633
    5. 'm' → logprob: -3.349611282348633
    6. '_' → logprob: -3.349611282348633
    7. 'r' → logprob: -3.724611282348633
    8. '[
' → logprob: -3.849611282348633
    9. 'range' → logprob: -3.849611282348633
    10. '`' → logprob: -3.974611282348633

Token 3298: 'emple' (ID: 55259)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1911749839782715
    2. 'n' → logprob: -1.1911749839782715
    3. 'p' → logprob: -2.9411749839782715
    4. 'j' → logprob: -2.9411749839782715
    5. '_j' → logprob: -3.0661749839782715
    6. '_
' → logprob: -3.4411749839782715
    7. '   ' → logprob: -3.5661749839782715
    8. '[
' → logprob: -3.8161749839782715
    9. 'pression' → logprob: -3.9411749839782715
    10. 't' → logprob: -4.0661749839782715

Token 3299: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4175254702568054
    2. '   ' → logprob: -2.16752552986145
    3. 'j' → logprob: -3.04252552986145
    4. 'n' → logprob: -3.16752552986145
    5. '(
' → logprob: -3.41752552986145
    6. ':' → logprob: -3.91752552986145
    7. 'import' → logprob: -4.292525291442871
    8. 'p' → logprob: -4.792525291442871
    9. '(n' → logprob: -5.167525291442871
    10. '(p' → logprob: -5.167525291442871

Token 3300: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42384853959083557
    2. 'def' → logprob: -1.9238485097885132
    3. 'j' → logprob: -2.6738486289978027
    4. '"' → logprob: -3.4238486289978027
    5. '   ' → logprob: -4.048848628997803
    6. 'sys' → logprob: -4.173848628997803
    7. ':' → logprob: -4.548848628997803
    8. ']' → logprob: -5.048848628997803
    9. '[
' → logprob: -5.298848628997803
    10. ''' → logprob: -5.298848628997803

Token 3301: ''' (ID: 6)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3104135990142822
    2. 'j' → logprob: -2.4354135990142822
    3. ']' → logprob: -3.0604135990142822
    4. 'def' → logprob: -3.6854135990142822
    5. '[' → logprob: -4.185413360595703
    6. 's' → logprob: -4.310413360595703
    7. '[
' → logprob: -4.685413360595703
    8. '`' → logprob: -4.935413360595703
    9. 'range' → logprob: -4.935413360595703
    10. 't' → logprob: -5.310413360595703

Token 3302: 'én' (ID: 3289)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6590798497200012
    2. 'def' → logprob: -0.9090798497200012
    3. '   ' → logprob: -4.1590800285339355
    4. 'j' → logprob: -4.4090800285339355
    5. ']' → logprob: -5.0340800285339355
    6. ')' → logprob: -5.4090800285339355
    7. 'range' → logprob: -5.5340800285339355
    8. 'int' → logprob: -5.5340800285339355
    9. '`' → logprob: -5.7840800285339355
    10. '(n' → logprob: -5.9090800285339355

Token 3303: 'oncé' (ID: 59071)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0876507759094238
    2. 'def' → logprob: -1.8376507759094238
    3. '```' → logprob: -2.462650775909424
    4. '_' → logprob: -2.712650775909424
    5. '   ' → logprob: -2.837650775909424
    6. 'j' → logprob: -3.337650775909424
    7. '[
' → logprob: -3.462650775909424
    8. ')
' → logprob: -3.712650775909424
    9. '`' → logprob: -3.837650775909424
    10. 't' → logprob: -3.962650775909424

Token 3304: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7945496439933777
    2. '   ' → logprob: -1.1695497035980225
    3. 'n' → logprob: -1.5445497035980225
    4. '(n' → logprob: -5.544549465179443
    5. 'import' → logprob: -5.919549465179443
    6. ':' → logprob: -6.044549465179443
    7. ':
' → logprob: -6.419549465179443
    8. 'p' → logprob: -6.419549465179443
    9. '()' → logprob: -6.794549465179443
    10. 'if' → logprob: -7.044549465179443

Token 3305: ' cela' (ID: 17542)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6200605034828186
    2. '   ' → logprob: -0.8700605034828186
    3. 'def' → logprob: -3.245060443878174
    4. 'import' → logprob: -6.745060443878174
    5. ' n' → logprob: -7.495060443878174
    6. ':' → logprob: -7.745060443878174
    7. 'p' → logprob: -8.120060920715332
    8. '```' → logprob: -8.495060920715332
    9. '(n' → logprob: -8.620060920715332
    10. '
' → logprob: -8.620060920715332

Token 3306: ' colle' (ID: 22001)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9973768591880798
    2. '=' → logprob: -1.6223769187927246
    3. '[' → logprob: -1.7473769187927246
    4. '[j' → logprob: -2.8723769187927246
    5. ']' → logprob: -3.6223769187927246
    6. ' =' → logprob: -3.7473769187927246
    7. '#' → logprob: -3.8723769187927246
    8. '_j' → logprob: -4.122376918792725
    9. 'def' → logprob: -4.247376918792725
    10. '.' → logprob: -4.622376918792725

Token 3307: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8010337948799133
    2. '   ' → logprob: -1.0510337352752686
    3. 'n' → logprob: -1.6760337352752686
    4. 'import' → logprob: -6.051033973693848
    5. '(n' → logprob: -6.176033973693848
    6. 'if' → logprob: -6.676033973693848
    7. ':
' → logprob: -6.926033973693848
    8. 'p' → logprob: -7.176033973693848
    9. 'sys' → logprob: -7.426033973693848
    10. '```' → logprob: -7.426033973693848

Token 3308: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5494106411933899
    2. 'def' → logprob: -1.2994105815887451
    3. '   ' → logprob: -2.174410581588745
    4. 'import' → logprob: -3.674410581588745
    5. 'from' → logprob: -6.549410820007324
    6. ' n' → logprob: -6.549410820007324
    7. 'sys' → logprob: -6.549410820007324
    8. '(n' → logprob: -6.799410820007324
    9. '
' → logprob: -6.924410820007324
    10. '```' → logprob: -7.299410820007324

Token 3309: ' coup' (ID: 25465)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.473807692527771
    2. '   ' → logprob: -1.723807692527771
    3. 'j' → logprob: -2.5988078117370605
    4. ' =' → logprob: -2.9738078117370605
    5. 'def' → logprob: -3.3488078117370605
    6. '=' → logprob: -5.0988078117370605
    7. '
' → logprob: -5.0988078117370605
    8. 't' → logprob: -5.3488078117370605
    9. 'range' → logprob: -5.7238078117370605
    10. ')' → logprob: -5.8488078117370605

Token 3310: 'ant' (ID: 493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44412851333618164
    2. 's' → logprob: -2.8191285133361816
    3. 't' → logprob: -3.1941285133361816
    4. 'def' → logprob: -3.1941285133361816
    5. ')
' → logprob: -3.5691285133361816
    6. 'u' → logprob: -3.5691285133361816
    7. '[
' → logprob: -4.069128513336182
    8. ']' → logprob: -4.569128513336182
    9. '       ' → logprob: -4.569128513336182
    10. '{
' → logprob: -4.944128513336182

Token 3311: ' certains' (ID: 30681)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5510641932487488
    2. '_j' → logprob: -1.5510642528533936
    3. 'j' → logprob: -3.5510642528533936
    4. '   ' → logprob: -3.6760642528533936
    5. '```' → logprob: -3.9260642528533936
    6. '`' → logprob: -4.3010640144348145
    7. '[' → logprob: -4.3010640144348145
    8. '(' → logprob: -4.3010640144348145
    9. '[]' → logprob: -4.5510640144348145
    10. 'def' → logprob: -4.5510640144348145

Token 3312: ' joints' (ID: 47223)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.15037710964679718
    2. 'j' → logprob: -2.275377035140991
    3. '_' → logprob: -4.15037727355957
    4. '_joint' → logprob: -5.52537727355957
    5. '_p' → logprob: -6.02537727355957
    6. 'joint' → logprob: -6.27537727355957
    7. '```' → logprob: -6.52537727355957
    8. '`' → logprob: -7.15037727355957
    9. '_lengths' → logprob: -7.15037727355957
    10. '   ' → logprob: -7.40037727355957

Token 3313: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0236015319824219
    2. '(
' → logprob: -1.0236015319824219
    3. '(' → logprob: -1.5236015319824219
    4. ':' → logprob: -4.148601531982422
    5. '   ' → logprob: -4.398601531982422
    6. 's' → logprob: -5.148601531982422
    7. 'n' → logprob: -5.273601531982422
    8. 'p' → logprob: -5.648601531982422
    9. '[' → logprob: -6.023601531982422
    10. '[
' → logprob: -6.023601531982422

Token 3314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03965120017528534
    2. ':' → logprob: -3.9146511554718018
    3. 'j' → logprob: -5.414651393890381
    4. '#' → logprob: -5.914651393890381
    5. ')' → logprob: -6.664651393890381
    6. '`' → logprob: -6.664651393890381
    7. '"' → logprob: -6.664651393890381
    8. '```' → logprob: -6.914651393890381
    9. '       ' → logprob: -7.039651393890381
    10. ':
' → logprob: -7.164651393890381

Token 3315: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1701374053955078
    2. '   ' → logprob: -1.6701374053955078
    3. 'j' → logprob: -1.7951374053955078
    4. '#' (adapté à ' #') → logprob: -1.9201374053955078
    5. ')' → logprob: -3.170137405395508
    6. 'n' → logprob: -3.420137405395508
    7. ':
' → logprob: -4.420137405395508
    8. '```' → logprob: -4.420137405395508
    9. '):' → logprob: -4.545137405395508
    10. '_j' → logprob: -4.795137405395508

Token 3316: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6829259395599365
    2. 'j' → logprob: -1.1829259395599365
    3. '#' → logprob: -2.0579259395599365
    4. 'n' → logprob: -4.182926177978516
    5. 'joint' → logprob: -4.682926177978516
    6. 'p' → logprob: -5.432926177978516
    7. '```' → logprob: -5.432926177978516
    8. 'def' → logprob: -5.682926177978516
    9. ')
' → logprob: -6.057926177978516
    10. ')' → logprob: -6.182926177978516

Token 3317: ' obt' (ID: 5564)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6795209646224976
    2. ' =' → logprob: -2.179521083831787
    3. 'j' → logprob: -2.304521083831787
    4. ']' → logprob: -2.429521083831787
    5. '_j' → logprob: -2.929521083831787
    6. 'sort' → logprob: -3.554521083831787
    7. '.sort' → logprob: -4.179521083831787
    8. 's' → logprob: -4.554521083831787
    9. 'n' → logprob: -4.679521083831787
    10. ')' → logprob: -4.929521083831787

Token 3318: 'ient' (ID: 773)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4263335466384888
    2. 'puts' → logprob: -1.8013335466384888
    3. '   ' → logprob: -2.301333427429199
    4. 'p' → logprob: -2.551333427429199
    5. 't' → logprob: -2.676333427429199
    6. '[
' → logprob: -2.926333427429199
    7. '```' → logprob: -3.176333427429199
    8. 'put' → logprob: -3.301333427429199
    9. 's' → logprob: -3.926333427429199
    10. '=
' → logprob: -4.051333427429199

Token 3319: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07056105881929398
    2. 'n' → logprob: -3.445561170578003
    3. ':' → logprob: -4.445560932159424
    4. 'j' → logprob: -5.070560932159424
    5. '```' → logprob: -5.820560932159424
    6. 'def' → logprob: -6.195560932159424
    7. ':
' → logprob: -6.445560932159424
    8. ']' → logprob: -6.445560932159424
    9. '`' → logprob: -6.945560932159424
    10. '[
' → logprob: -7.070560932159424

Token 3320: ' segments' (ID: 33749)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.074798583984375
    2. '_j' → logprob: -1.574798583984375
    3. ']' → logprob: -1.824798583984375
    4. '_' → logprob: -2.949798583984375
    5. ':' → logprob: -3.324798583984375
    6. 'n' → logprob: -3.449798583984375
    7. ')' → logprob: -3.824798583984375
    8. '#' → logprob: -3.949798583984375
    9. '[
' → logprob: -4.449798583984375
    10. '   ' → logprob: -4.574798583984375

Token 3321: ' multiples' (ID: 70720)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2346213310956955
    2. 'def' → logprob: -2.609621286392212
    3. '_' → logprob: -3.859621286392212
    4. '(
' → logprob: -4.109621524810791
    5. '=' → logprob: -4.234621524810791
    6. ' =' → logprob: -4.609621524810791
    7. ':' → logprob: -4.609621524810791
    8. '[
' → logprob: -4.609621524810791
    9. '```' → logprob: -5.234621524810791
    10. ']' → logprob: -5.234621524810791

Token 3322: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8074377775192261
    2. 'n' → logprob: -0.9324377775192261
    3. '   ' → logprob: -1.932437777519226
    4. 'import' → logprob: -5.932437896728516
    5. '(n' → logprob: -5.932437896728516
    6. ':' → logprob: -6.432437896728516
    7. 'if' → logprob: -6.432437896728516
    8. '(
' → logprob: -6.432437896728516
    9. ':
' → logprob: -6.807437896728516
    10. '```' → logprob: -7.182437896728516

Token 3323: ' augment' (ID: 44474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5112816095352173
    2. 'def' → logprob: -1.8862816095352173
    3. 'n' → logprob: -2.3862814903259277
    4. ':' → logprob: -2.6362814903259277
    5. 'j' → logprob: -4.511281490325928
    6. 'p' → logprob: -4.636281490325928
    7. '":' → logprob: -4.636281490325928
    8. ')' → logprob: -4.886281490325928
    9. '):' → logprob: -4.886281490325928
    10. '"' → logprob: -5.261281490325928

Token 3324: 'ant' (ID: 493)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.747115969657898
    2. '   ' → logprob: -1.122115969657898
    3. 'ing' → logprob: -3.4971160888671875
    4. '=' → logprob: -3.6221160888671875
    5. '_' → logprob: -3.8721160888671875
    6. ')' → logprob: -3.8721160888671875
    7. 'def' → logprob: -3.9971160888671875
    8. 'er' → logprob: -4.4971160888671875
    9. 'ation' → logprob: -4.8721160888671875
    10. 'ant' → logprob: -4.8721160888671875

Token 3325: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8129274249076843
    2. 'la' → logprob: -0.9379274249076843
    3. '```' → logprob: -2.937927484512329
    4. ':' → logprob: -3.937927484512329
    5. 'le' → logprob: -4.06292724609375
    6. '_' → logprob: -4.06292724609375
    7. 'def' → logprob: -4.31292724609375
    8. ' la' → logprob: -4.56292724609375
    9. ')' → logprob: -5.18792724609375
    10. 'au' → logprob: -5.81292724609375

Token 3326: ' rémun' (ID: 146660)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.321146845817566
    2. '```' → logprob: -2.0711469650268555
    3. 'sum' → logprob: -2.9461469650268555
    4. 's' → logprob: -2.9461469650268555
    5. '_max' → logprob: -3.0711469650268555
    6. 'segments' → logprob: -3.3211469650268555
    7. ')
' → logprob: -3.6961469650268555
    8. ')' → logprob: -3.9461469650268555
    9. '_j' → logprob: -3.9461469650268555
    10. '#' → logprob: -4.0711469650268555

Token 3327: 'ération' (ID: 24977)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.37209492921829224
    2. 'ations' → logprob: -1.8720948696136475
    3. 's' → logprob: -2.4970948696136475
    4. '_p' → logprob: -3.4970948696136475
    5. '   ' → logprob: -4.747095108032227
    6. '_length' → logprob: -5.122095108032227
    7. 'def' → logprob: -5.622095108032227
    8. '_j' → logprob: -5.872095108032227
    9. '_' → logprob: -5.997095108032227
    10. ')' → logprob: -6.122095108032227

Token 3328: ' globale' (ID: 87991)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1705223172903061
    2. '   ' → logprob: -2.4205222129821777
    3. 'n' → logprob: -3.7955222129821777
    4. '(
' → logprob: -4.170522212982178
    5. ':' → logprob: -4.795522212982178
    6. 'p' → logprob: -5.545522212982178
    7. '()' → logprob: -6.420522212982178
    8. ':
' → logprob: -6.420522212982178
    9. 'import' → logprob: -6.420522212982178
    10. '(' → logprob: -6.670522212982178

Token 3329: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5007044076919556
    2. 'n' → logprob: -1.5007044076919556
    3. '   ' → logprob: -1.8757044076919556
    4. ':
' → logprob: -5.875704288482666
    5. '(
' → logprob: -6.125704288482666
    6. '(n' → logprob: -6.375704288482666
    7. ':' → logprob: -6.750704288482666
    8. '()
' → logprob: -6.750704288482666
    9. 'p' → logprob: -6.750704288482666
    10. ',
' → logprob: -7.250704288482666

Token 3330: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6753589510917664
    2. '   ' → logprob: -0.9253589510917664
    3. 'n' → logprob: -2.800359010696411
    4. 'p' → logprob: -4.050358772277832
    5. 'j' → logprob: -6.175358772277832
    6. '(
' → logprob: -6.300358772277832
    7. '(n' → logprob: -6.300358772277832
    8. 'pipes' → logprob: -6.425358772277832
    9. '```' → logprob: -6.800358772277832
    10. '(p' → logprob: -7.050358772277832

Token 3331: ' #
' (ID: 21888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7717172503471375
    2. '   ' → logprob: -1.2717173099517822
    3. 'n' → logprob: -1.3967173099517822
    4. 'p' → logprob: -5.521717071533203
    5. 'pipes' → logprob: -6.646717071533203
    6. '(n' → logprob: -6.896717071533203
    7. '```' → logprob: -7.646717071533203
    8. 'import' → logprob: -8.271717071533203
    9. '#' → logprob: -8.271717071533203
    10. 'pipe' → logprob: -8.271717071533203

Token 3332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8410146236419678
    2. 'def' → logprob: -0.9660146236419678
    3. 'n' → logprob: -1.7160146236419678
    4. 'p' → logprob: -5.216014862060547
    5. '(n' → logprob: -7.341014862060547
    6. 'j' → logprob: -7.716014862060547
    7. ' n' → logprob: -8.091014862060547
    8. 'import' → logprob: -8.091014862060547
    9. '```' → logprob: -8.091014862060547
    10. 'pipes' → logprob: -8.966014862060547

Token 3333: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.32851937413215637
    2. 'n' → logprob: -2.078519344329834
    3. 'def' → logprob: -2.828519344329834
    4. 'pipes' → logprob: -3.578519344329834
    5. ':' → logprob: -3.953519344329834
    6. '   ' → logprob: -4.328519344329834
    7. 'j' → logprob: -4.453519344329834
    8. ',' → logprob: -5.078519344329834
    9. 't' → logprob: -5.203519344329834
    10. '#' (adapté à ' #') → logprob: -5.703519344329834

Token 3334: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7743480801582336
    2. 'def' → logprob: -1.1493480205535889
    3. 'n' → logprob: -1.7743480205535889
    4. 'p' → logprob: -4.024348258972168
    5. 'j' → logprob: -5.399348258972168
    6. 'import' → logprob: -5.399348258972168
    7. '#' → logprob: -5.524348258972168
    8. ':' → logprob: -5.774348258972168
    9. '(n' → logprob: -6.024348258972168
    10. ':
' → logprob: -6.149348258972168

Token 3335: ' impl' (ID: 15443)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6608685851097107
    2. ' =' → logprob: -2.2858686447143555
    3. '   ' → logprob: -2.4108686447143555
    4. 'n' → logprob: -2.7858686447143555
    5. '_j' → logprob: -3.1608686447143555
    6. 't' → logprob: -3.6608686447143555
    7. 'j' → logprob: -3.7858686447143555
    8. 's' → logprob: -4.0358686447143555
    9. '#' → logprob: -4.2858686447143555
    10. '=' → logprob: -4.4108686447143555

Token 3336: 'é' (ID: 377)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6537386178970337
    2. 'port' → logprob: -1.9037386178970337
    3. 'ort' → logprob: -2.153738498687744
    4. ':
' → logprob: -3.153738498687744
    5. '
' → logprob: -3.653738498687744
    6. 'ement' → logprob: -3.778738498687744
    7. '):
' → logprob: -3.778738498687744
    8. '```' → logprob: -4.028738498687744
    9. 'ment' → logprob: -4.153738498687744
    10. '   ' → logprob: -4.153738498687744

Token 3337: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.031009500846266747
    2. 'def' → logprob: -3.7810094356536865
    3. 'r' → logprob: -5.906009674072266
    4. 'nt' → logprob: -6.406009674072266
    5. 'ments' → logprob: -7.156009674072266
    6. 'mentation' → logprob: -7.656009674072266
    7. 'rt' → logprob: -7.906009674072266
    8. 'n' → logprob: -7.906009674072266
    9. '   ' → logprob: -8.531009674072266
    10. 't' → logprob: -8.656009674072266

Token 3338: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34749287366867065
    2. 'def' → logprob: -1.7224929332733154
    3. 'n' → logprob: -2.4724929332733154
    4. '(
' → logprob: -4.597492694854736
    5. '(n' → logprob: -5.472492694854736
    6. '```' → logprob: -5.972492694854736
    7. 'p' → logprob: -6.347492694854736
    8. 'import' → logprob: -6.472492694854736
    9. '():
' → logprob: -6.472492694854736
    10. '()' → logprob: -6.847492694854736

Token 3339: ' cette' (ID: 7696)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3041333258152008
    2. 'def' → logprob: -1.5541332960128784
    3. ':
' → logprob: -4.054133415222168
    4. '```' → logprob: -4.679133415222168
    5. '(
' → logprob: -4.929133415222168
    6. ':' → logprob: -5.554133415222168
    7. 'n' → logprob: -5.679133415222168
    8. '):
' → logprob: -6.304133415222168
    9. 'sys' → logprob: -6.304133415222168
    10. 'import' → logprob: -7.179133415222168

Token 3340: ' solution' (ID: 7578)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6494928002357483
    2. '   ' → logprob: -1.3994927406311035
    3. ':
' → logprob: -2.5244927406311035
    4. '#' → logprob: -3.6494927406311035
    5. 'def' → logprob: -3.6494927406311035
    6. '[j' → logprob: -4.1494927406311035
    7. '```' → logprob: -4.3994927406311035
    8. '[
' → logprob: -5.0244927406311035
    9. '_j' → logprob: -5.1494927406311035
    10. '\' → logprob: -5.2744927406311035

Token 3341: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09166784584522247
    2. '   ' → logprob: -2.966667890548706
    3. ':' → logprob: -4.466667652130127
    4. 'if' → logprob: -5.216667652130127
    5. '(
' → logprob: -5.216667652130127
    6. '():' → logprob: -5.341667652130127
    7. '():
' → logprob: -5.716667652130127
    8. '(n' → logprob: -6.716667652130127
    9. '(' → logprob: -6.966667652130127
    10. '()' → logprob: -7.216667652130127

Token 3342: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7845101952552795
    2. '   ' → logprob: -0.9095101952552795
    3. 'n' → logprob: -2.2845101356506348
    4. '(n' → logprob: -4.159510135650635
    5. ':' → logprob: -5.034510135650635
    6. '()' → logprob: -5.409510135650635
    7. ':
' → logprob: -6.284510135650635
    8. '():' → logprob: -6.409510135650635
    9. '()
' → logprob: -6.659510135650635
    10. '```' → logprob: -6.659510135650635

Token 3343: ' #
' (ID: 21888)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7319537401199341
    2. '   ' → logprob: -1.356953740119934
    3. 'def' → logprob: -1.356953740119934
    4. '(n' → logprob: -6.3569536209106445
    5. 'import' → logprob: -6.8569536209106445
    6. ' n' → logprob: -8.231953620910645
    7. '
' → logprob: -8.231953620910645
    8. '    
' → logprob: -8.731953620910645
    9. '()' → logprob: -9.231953620910645
    10. '#' → logprob: -9.356953620910645

Token 3344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.063533902168274
    2. 'def' → logprob: -1.063533902168274
    3. 'n' → logprob: -1.188533902168274
    4. 'p' → logprob: -6.688533782958984
    5. '(n' → logprob: -6.938533782958984
    6. ' n' → logprob: -7.688533782958984
    7. '```' → logprob: -8.063533782958984
    8. '()' → logprob: -8.313533782958984
    9. 'pipes' → logprob: -8.313533782958984
    10. ':' → logprob: -8.688533782958984

Token 3345: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4530552327632904
    2. 'n' → logprob: -1.0780552625656128
    3. 'def' → logprob: -4.203055381774902
    4. 'p' → logprob: -5.328055381774902
    5. '```' → logprob: -6.328055381774902
    6. 'pipes' → logprob: -7.078055381774902
    7. '#' (adapté à ' #') → logprob: -7.703055381774902
    8. '    
' → logprob: -8.203055381774902
    9. 'j' → logprob: -8.828055381774902
    10. 'pipe' → logprob: -8.953055381774902

Token 3346: ' Note' (ID: 12225)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3073565661907196
    2. '   ' → logprob: -1.557356595993042
    3. 'def' → logprob: -2.932356595993042
    4. '```' → logprob: -8.682356834411621
    5. 'import' → logprob: -9.182356834411621
    6. ' n' → logprob: -9.307356834411621
    7. '    
' → logprob: -9.432356834411621
    8. '(n' → logprob: -9.682356834411621
    9. '
' → logprob: -10.057356834411621
    10. ' ' → logprob: -11.057356834411621

Token 3347: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.506861686706543
    2. '   ' → logprob: -1.506861686706543
    3. 'n' → logprob: -2.631861686706543
    4. ':' → logprob: -3.631861686706543
    5. '(
' → logprob: -4.381861686706543
    6. '():' → logprob: -4.381861686706543
    7. '()' → logprob: -4.631861686706543
    8. '(n' → logprob: -4.756861686706543
    9. 'import' → logprob: -5.381861686706543
    10. 'p' → logprob: -5.506861686706543

Token 3348: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22089335322380066
    2. 'n' → logprob: -1.720893383026123
    3. 'def' → logprob: -4.220893383026123
    4. '```' → logprob: -6.595893383026123
    5. ' n' → logprob: -6.970893383026123
    6. '    
' → logprob: -7.470893383026123
    7. '(n' → logprob: -7.720893383026123
    8. 'j' → logprob: -8.595892906188965
    9. 'joint' → logprob: -8.720892906188965
    10. 'import' → logprob: -8.845892906188965

Token 3349: ' il' (ID: 1793)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8588926196098328
    2. '   ' → logprob: -0.8588926196098328
    3. 'def' → logprob: -2.2338926792144775
    4. 'j' → logprob: -5.108892440795898
    5. '"' → logprob: -5.483892440795898
    6. ' n' → logprob: -5.483892440795898
    7. ':' → logprob: -5.608892440795898
    8. '(
' → logprob: -5.733892440795898
    9. '):
' → logprob: -5.858892440795898
    10. ')
' → logprob: -6.233892440795898

Token 3350: ' y' (ID: 342)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.075275182723999
    2. 's' → logprob: -1.200275182723999
    3. 'def' → logprob: -2.700275182723999
    4. 'n' → logprob: -2.950275182723999
    5. '   ' → logprob: -2.950275182723999
    6. '[
' → logprob: -3.075275182723999
    7. '_' → logprob: -3.825275182723999
    8. ' =' → logprob: -4.450275421142578
    9. '(
' → logprob: -4.575275421142578
    10. '[' → logprob: -4.700275421142578

Token 3351: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0411508083343506
    2. 'is' → logprob: -1.5411508083343506
    3. 'def' → logprob: -1.7911508083343506
    4. '#' → logprob: -2.4161508083343506
    5. 's' → logprob: -2.5411508083343506
    6. '   ' → logprob: -3.6661508083343506
    7. ''s' → logprob: -4.16615104675293
    8. 'n' → logprob: -4.54115104675293
    9. '#
' → logprob: -4.66615104675293
    10. '=
' → logprob: -4.79115104675293

Token 3352: ' up' (ID: 869)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37464481592178345
    2. '   ' → logprob: -1.2496447563171387
    3. ' n' → logprob: -5.749644756317139
    4. '(n' → logprob: -5.874644756317139
    5. 'def' → logprob: -6.124644756317139
    6. ')' → logprob: -6.624644756317139
    7. '\n' → logprob: -6.624644756317139
    8. ' ' → logprob: -6.749644756317139
    9. '
' → logprob: -6.874644756317139
    10. '1' → logprob: -6.874644756317139

Token 3353: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1094852685928345
    2. 'n' → logprob: -1.2344852685928345
    3. 'def' → logprob: -2.359485149383545
    4. '(n' → logprob: -2.359485149383545
    5. 'p' → logprob: -3.609485149383545
    6. ''\' → logprob: -4.234485149383545
    7. '()
' → logprob: -4.359485149383545
    8. ' =' → logprob: -4.359485149383545
    9. '[n' → logprob: -4.609485149383545
    10. '```' → logprob: -4.734485149383545

Token 3354: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1666242778301239
    2. '   ' → logprob: -2.9166243076324463
    3. 'def' → logprob: -3.0416243076324463
    4. ' n' → logprob: -4.916624069213867
    5. '`' → logprob: -5.416624069213867
    6. '(n' → logprob: -5.416624069213867
    7. '"' → logprob: -5.666624069213867
    8. ''\' → logprob: -6.166624069213867
    9. ' ' → logprob: -6.291624069213867
    10. '\' → logprob: -6.416624069213867

Token 3355: '100' (ID: 1353)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01524396613240242
    2. ')' → logprob: -4.890244007110596
    3. '   ' → logprob: -6.140244007110596
    4. 'int' → logprob: -6.765244007110596
    5. ']' → logprob: -7.390244007110596
    6. '1' → logprob: -7.640244007110596
    7. '65' → logprob: -8.140243530273438
    8. ' n' → logprob: -8.265243530273438
    9. '10' → logprob: -8.515243530273438
    10. ':' → logprob: -8.640243530273438

Token 3356: ' datasets' (ID: 57711)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31664639711380005
    2. ')' → logprob: -3.0666463375091553
    3. 'def' → logprob: -3.0666463375091553
    4. '_' → logprob: -3.9416463375091553
    5. '_n' → logprob: -3.9416463375091553
    6. '`' → logprob: -4.191646575927734
    7. 's' → logprob: -4.316646575927734
    8. '_j' → logprob: -4.441646575927734
    9. '\' → logprob: -4.566646575927734
    10. 'j' → logprob: -4.816646575927734

Token 3357: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.717707097530365
    2. 'def' → logprob: -0.967707097530365
    3. 'n' → logprob: -2.7177071571350098
    4. '(n' → logprob: -3.9677071571350098
    5. '()' → logprob: -4.59270715713501
    6. '():
' → logprob: -5.09270715713501
    7. '():' → logprob: -5.34270715713501
    8. ':' → logprob: -5.59270715713501
    9. 'import' → logprob: -5.71770715713501
    10. '()
' → logprob: -5.84270715713501

Token 3358: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5832105278968811
    2. 'def' → logprob: -0.9582105278968811
    3. 'n' → logprob: -3.8332104682922363
    4. '```' → logprob: -4.583210468292236
    5. '(n' → logprob: -5.208210468292236
    6. ':' → logprob: -5.208210468292236
    7. 'import' → logprob: -5.958210468292236
    8. ':
' → logprob: -6.083210468292236
    9. '(
' → logprob: -6.708210468292236
    10. '():
' → logprob: -7.083210468292236

Token 3359: ' faut' (ID: 17821)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9157392978668213
    2. ':' → logprob: -1.7907392978668213
    3. 's' → logprob: -2.0407392978668213
    4. 'def' → logprob: -2.0407392978668213
    5. ' =' → logprob: -2.5407392978668213
    6. '   ' → logprob: -3.9157392978668213
    7. '_' → logprob: -4.415739059448242
    8. ':
' → logprob: -4.665739059448242
    9. 'n' → logprob: -5.040739059448242
    10. '(s' → logprob: -5.040739059448242

Token 3360: ' être' (ID: 9104)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1869942843914032
    2. '   ' → logprob: -2.1869943141937256
    3. 't' → logprob: -3.8119943141937256
    4. 'int' → logprob: -4.6869940757751465
    5. 'n' → logprob: -4.8119940757751465
    6. 'T' → logprob: -5.5619940757751465
    7. 'True' → logprob: -6.1869940757751465
    8. '```' → logprob: -6.4369940757751465
    9. 'for' → logprob: -6.6869940757751465
    10. 'sys' → logprob: -6.8119940757751465

Token 3361: ' efficace' (ID: 54338)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17103071510791779
    2. '   ' → logprob: -3.0460307598114014
    3. 't' → logprob: -3.1710307598114014
    4. 'n' → logprob: -3.6710307598114014
    5. 'int' → logprob: -4.171030521392822
    6. 'T' → logprob: -4.421030521392822
    7. 's' → logprob: -6.046030521392822
    8. '
' → logprob: -6.171030521392822
    9. 'sys' → logprob: -7.171030521392822
    10. '\' → logprob: -7.421030521392822

Token 3362: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7418183088302612
    2. '   ' → logprob: -0.8668183088302612
    3. 'n' → logprob: -2.491818428039551
    4. '(n' → logprob: -5.116818428039551
    5. 'import' → logprob: -5.241818428039551
    6. ':' → logprob: -5.866818428039551
    7. ':
' → logprob: -6.616818428039551
    8. '```' → logprob: -7.616818428039551
    9. 'from' → logprob: -7.991818428039551
    10. '    
' → logprob: -7.991818428039551

Token 3363: 'O' (ID: 46)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5968940854072571
    2. '   ' → logprob: -1.9718940258026123
    3. 'n' → logprob: -2.2218940258026123
    4. ':' → logprob: -3.2218940258026123
    5. ')' → logprob: -3.3468940258026123
    6. '):' → logprob: -3.7218940258026123
    7. '(
' → logprob: -4.471894264221191
    8. '(n' → logprob: -4.721894264221191
    9. 'p' → logprob: -4.971894264221191
    10. 't' → logprob: -4.971894264221191

Token 3364: '(n' (ID: 2406)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34206247329711914
    2. '   ' → logprob: -2.217062473297119
    3. '(n' → logprob: -3.217062473297119
    4. 'n' → logprob: -3.592062473297119
    5. ' =' → logprob: -3.842062473297119
    6. ')' → logprob: -3.967062473297119
    7. '=' → logprob: -4.342062473297119
    8. '```' → logprob: -4.967062473297119
    9. '\' → logprob: -5.217062473297119
    10. 'import' → logprob: -5.467062473297119

Token 3365: ' log' (ID: 2142)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2514805793762207
    2. '=' → logprob: -1.6264805793762207
    3. '_' → logprob: -1.6264805793762207
    4. ')' → logprob: -2.1264805793762207
    5. '   ' → logprob: -2.6264805793762207
    6. ' =' → logprob: -3.6264805793762207
    7. '_j' → logprob: -4.126480579376221
    8. '_
' → logprob: -4.251480579376221
    9. ',' → logprob: -4.876480579376221
    10. ']' → logprob: -5.251480579376221

Token 3366: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13459084928035736
    2. 'n' → logprob: -2.6345908641815186
    3. ' n' → logprob: -3.6345908641815186
    4. '_n' → logprob: -3.7595908641815186
    5. '_' → logprob: -6.6345906257629395
    6. '
' → logprob: -6.8845906257629395
    7. ')' → logprob: -7.5095906257629395
    8. ')n' → logprob: -8.134591102600098
    9. ')
' → logprob: -8.259591102600098
    10. '10' → logprob: -8.509591102600098

Token 3367: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5290606617927551
    2. '   ' → logprob: -2.2790606021881104
    3. ')
' → logprob: -2.4040606021881104
    4. 'def' → logprob: -2.6540606021881104
    5. '):' → logprob: -3.5290606021881104
    6. '_' → logprob: -4.0290608406066895
    7. '):
' → logprob: -4.1540608406066895
    8. '```' → logprob: -5.0290608406066895
    9. ']' → logprob: -5.1540608406066895
    10. '=' → logprob: -5.4040608406066895

Token 3368: ' max' (ID: 2999)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31458714604377747
    2. '   ' → logprob: -1.814587116241455
    3. '():
' → logprob: -3.939587116241455
    4. '():' → logprob: -4.064587116241455
    5. '()' → logprob: -4.314587116241455
    6. '(
' → logprob: -4.564587116241455
    7. '()
' → logprob: -4.939587116241455
    8. ':' → logprob: -5.064587116241455
    9. '(n' → logprob: -5.564587116241455
    10. '_' → logprob: -5.814587116241455

Token 3369: ')
' (ID: 446)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5978039503097534
    2. '():' → logprob: -1.8478039503097534
    3. ':' → logprob: -2.597804069519043
    4. '()' → logprob: -3.097804069519043
    5. '():
' → logprob: -3.472804069519043
    6. '=' → logprob: -3.722804069519043
    7. ' =' → logprob: -4.222804069519043
    8. '(
' → logprob: -4.347804069519043
    9. '_p' → logprob: -4.472804069519043
    10. '()
' → logprob: -4.472804069519043

Token 3370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5440592169761658
    2. 'def' → logprob: -0.9190592169761658
    3. '(n' → logprob: -5.2940592765808105
    4. 'n' → logprob: -5.2940592765808105
    5. ':' → logprob: -5.5440592765808105
    6. '```' → logprob: -6.6690592765808105
    7. 'import' → logprob: -6.7940592765808105
    8. ':
' → logprob: -7.4190592765808105
    9. '():' → logprob: -7.6690592765808105
    10. '()' → logprob: -7.9190592765808105

Token 3371: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4770720899105072
    2. 'def' → logprob: -1.1020721197128296
    3. 'n' → logprob: -3.47707200050354
    4. '(n' → logprob: -5.102072238922119
    5. 'import' → logprob: -5.602072238922119
    6. ':' → logprob: -7.102072238922119
    7. 'if' → logprob: -7.602072238922119
    8. ':
' → logprob: -7.602072238922119
    9. '(
' → logprob: -7.727072238922119
    10. ',' → logprob: -7.727072238922119

Token 3372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7398356795310974
    2. 'def' → logprob: -0.8648356795310974
    3. 'n' → logprob: -2.364835739135742
    4. '(n' → logprob: -5.989835739135742
    5. ':' → logprob: -6.614835739135742
    6. '```' → logprob: -7.489835739135742
    7. '    
' → logprob: -7.864835739135742
    8. ':
' → logprob: -7.989835739135742
    9. '(
' → logprob: -8.114835739135742
    10. '()' → logprob: -8.114835739135742

Token 3373: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5706070065498352
    2. 'def' → logprob: -1.3206069469451904
    3. 'n' → logprob: -1.8206069469451904
    4. ':' → logprob: -6.6956071853637695
    5. '(n' → logprob: -6.8206071853637695
    6. 'import' → logprob: -6.9456071853637695
    7. '\' → logprob: -8.07060718536377
    8. ' n' → logprob: -8.32060718536377
    9. '#' (adapté à ' #') → logprob: -8.32060718536377
    10. '```' → logprob: -8.69560718536377

Token 3374: ' ---
' (ID: 128468)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7608100771903992
    2. '   ' → logprob: -1.260810136795044
    3. 'n' → logprob: -1.510810136795044
    4. ':' → logprob: -4.510809898376465
    5. '(n' → logprob: -5.510809898376465
    6. ':
' → logprob: -6.635809898376465
    7. 'j' → logprob: -6.885809898376465
    8. 'import' → logprob: -6.885809898376465
    9. '#' → logprob: -6.885809898376465
    10. 't' → logprob: -7.010809898376465

Token 3375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1263657808303833
    2. 'def' → logprob: -2.5013656616210938
    3. 'n' → logprob: -3.5013656616210938
    4. 'import' → logprob: -6.501365661621094
    5. '```' → logprob: -6.876365661621094
    6. '    
' → logprob: -7.126365661621094
    7. 'p' → logprob: -7.751365661621094
    8. '#' → logprob: -7.751365661621094
    9. '(n' → logprob: -7.751365661621094
    10. ':' → logprob: -7.751365661621094

Token 3376: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6164206862449646
    2. 'n' → logprob: -0.9914206862449646
    3. 'def' → logprob: -2.4914207458496094
    4. 't' → logprob: -5.241420745849609
    5. 'if' → logprob: -7.866420745849609
    6. 'import' → logprob: -8.61642074584961
    7. 'for' → logprob: -9.36642074584961
    8. 'T' → logprob: -9.49142074584961
    9. ' n' → logprob: -9.99142074584961
    10. 'sys' → logprob: -10.24142074584961

Token 3377: ' Impl' (ID: 144563)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.653426468372345
    2. 'n' → logprob: -1.0284264087677002
    3. 'def' → logprob: -2.2784264087677
    4. 't' → logprob: -4.153426647186279
    5. 'import' → logprob: -6.028426647186279
    6. '```' → logprob: -8.278426170349121
    7. '    
' → logprob: -8.403426170349121
    8. 'T' → logprob: -8.653426170349121
    9. 'for' → logprob: -8.778426170349121
    10. '
' → logprob: -9.028426170349121

Token 3378: 'ément' (ID: 17645)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.3513214886188507
    2. 'ément' → logprob: -1.8513214588165283
    3. 'import' → logprob: -3.1013214588165283
    4. 'mentation' → logprob: -3.2263214588165283
    5. 'def' → logprob: -3.4763214588165283
    6. 'n' → logprob: -4.726321697235107
    7. 'entation' → logprob: -5.226321697235107
    8. 'ements' → logprob: -5.601321697235107
    9. '
' → logprob: -6.476321697235107
    10. '   ' → logprob: -6.851321697235107

Token 3379: 'ation' (ID: 387)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6216323375701904
    2. 'def' → logprob: -0.8716323375701904
    3. '()' → logprob: -4.1216325759887695
    4. '(
' → logprob: -5.4966325759887695
    5. '():' → logprob: -5.4966325759887695
    6. '():
' → logprob: -5.6216325759887695
    7. ':' → logprob: -5.8716325759887695
    8. ' def' → logprob: -6.3716325759887695
    9. '[]' → logprob: -6.4966325759887695
    10. '_' → logprob: -6.4966325759887695

Token 3380: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6612566113471985
    2. '   ' → logprob: -0.7862566113471985
    3. ':' → logprob: -4.036256790161133
    4. '():' → logprob: -6.161256790161133
    5. 'n' → logprob: -6.286256790161133
    6. '(n' → logprob: -6.786256790161133
    7. ' def' → logprob: -6.911256790161133
    8. '()' → logprob: -7.286256790161133
    9. 'if' → logprob: -7.286256790161133
    10. '():
' → logprob: -7.661256790161133

Token 3381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004621303640305996
    2. 'def' → logprob: -6.504621505737305
    3. 'n' → logprob: -6.629621505737305
    4. '```' → logprob: -7.254621505737305
    5. '    
' → logprob: -7.379621505737305
    6. 'import' → logprob: -8.629621505737305
    7. '(n' → logprob: -8.879621505737305
    8. '
' → logprob: -10.254621505737305
    9. '       ' → logprob: -10.629621505737305
    10. '``' → logprob: -11.379621505737305

Token 3382: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04462312534451485
    2. 'n' → logprob: -3.4196231365203857
    3. 'def' → logprob: -4.544622898101807
    4. 'import' → logprob: -9.169623374938965
    5. '	n' → logprob: -9.919623374938965
    6. '    
' → logprob: -10.044623374938965
    7. '```' → logprob: -10.794623374938965
    8. 't' → logprob: -10.919623374938965
    9. 'sys' → logprob: -11.169623374938965
    10. '(n' → logprob: -11.419623374938965

Token 3383: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08403587341308594
    2. 'n' → logprob: -2.834035873413086
    3. 'def' → logprob: -4.834035873413086
    4. ' n' → logprob: -5.459035873413086
    5. '(n' → logprob: -6.209035873413086
    6. 'import' → logprob: -6.459035873413086
    7. '    
' → logprob: -6.584035873413086
    8. '(
' → logprob: -7.459035873413086
    9. '```' → logprob: -7.459035873413086
    10. '
' → logprob: -7.834035873413086

Token 3384: ' Lire' (ID: 57624)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20420800149440765
    2. 'def' → logprob: -2.0792078971862793
    3. '   ' → logprob: -3.5792078971862793
    4. 'p' → logprob: -4.204207897186279
    5. 't' → logprob: -5.079207897186279
    6. 'sys' → logprob: -6.204207897186279
    7. 'pipes' → logprob: -6.204207897186279
    8. '#' → logprob: -6.329207897186279
    9. 'import' → logprob: -6.704207897186279
    10. 'data' → logprob: -7.204207897186279

Token 3385: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5828799605369568
    2. '   ' → logprob: -0.8328799605369568
    3. 't' → logprob: -5.582880020141602
    4. ' n' → logprob: -6.457880020141602
    5. ' ' → logprob: -7.832880020141602
    6. '```' → logprob: -8.582880020141602
    7. '(n' → logprob: -8.707880020141602
    8. '    ' → logprob: -8.957880020141602
    9. '	n' → logprob: -9.207880020141602
    10. '       ' → logprob: -9.457880020141602

Token 3386: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40942561626434326
    2. ',' → logprob: -1.5344256162643433
    3. '=' → logprob: -2.909425735473633
    4. '   ' → logprob: -3.159425735473633
    5. '=int' → logprob: -4.284425735473633
    6. ',n' → logprob: -5.409425735473633
    7. 'n' → logprob: -6.409425735473633
    8. ')' → logprob: -7.659425735473633
    9. ' ,' → logprob: -7.659425735473633
    10. '(n' → logprob: -7.909425735473633

Token 3387: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42516815662384033
    2. 'n' → logprob: -1.5501681566238403
    3. ' n' → logprob: -3.175168037414551
    4. 'p' → logprob: -4.300168037414551
    5. ' =' → logprob: -4.300168037414551
    6. 'int' → logprob: -4.425168037414551
    7. ')' → logprob: -4.800168037414551
    8. '    ' → logprob: -5.050168037414551
    9. '"' → logprob: -5.175168037414551
    10. ' p' → logprob: -5.425168037414551

Token 3388: '[]
' (ID: 41761)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2821938991546631
    2. '=' → logprob: -2.032193899154663
    3. ',' → logprob: -2.657193899154663
    4. '   ' → logprob: -3.532193899154663
    5. '=int' → logprob: -5.657194137573242
    6. ')' → logprob: -6.032194137573242
    7. '(n' → logprob: -6.532194137573242
    8. ' ' → logprob: -6.782194137573242
    9. 'def' → logprob: -7.282194137573242
    10. 'n' → logprob: -7.407194137573242

Token 3389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3026086091995239
    2. ' =' → logprob: -1.677608609199524
    3. '=' → logprob: -3.4276084899902344
    4. ',' → logprob: -3.4276084899902344
    5. '
' → logprob: -6.052608489990234
    6. '(n' → logprob: -6.427608489990234
    7. '```' → logprob: -6.802608489990234
    8. ',n' → logprob: -7.052608489990234
    9. 'def' → logprob: -7.052608489990234
    10. 'n' → logprob: -8.052608489990234

Token 3390: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.768304169178009
    2. '   ' → logprob: -0.768304169178009
    3. '```' → logprob: -4.018304347991943
    4. ' =' → logprob: -4.393304347991943
    5. ',
' → logprob: -4.893304347991943
    6. '(n' → logprob: -5.018304347991943
    7. '[n' → logprob: -5.393304347991943
    8. '=' → logprob: -5.643304347991943
    9. '[' → logprob: -5.893304347991943
    10. ':' → logprob: -6.268304347991943

Token 3391: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.400532066822052
    2. ',' → logprob: -1.6505320072174072
    3. ' =' → logprob: -3.4005320072174072
    4. 'n' → logprob: -3.7755320072174072
    5. '=' → logprob: -4.025532245635986
    6. 'def' → logprob: -4.900532245635986
    7. ',
' → logprob: -4.900532245635986
    8. '```' → logprob: -5.025532245635986
    9. '(n' → logprob: -5.150532245635986
    10. ',n' → logprob: -5.525532245635986

Token 3392: ' Lire' (ID: 57624)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1199580579996109
    2. '   ' → logprob: -2.2449581623077393
    3. 'j' → logprob: -5.49495792388916
    4. ' n' → logprob: -6.49495792388916
    5. 'm' → logprob: -7.99495792388916
    6. '
' → logprob: -8.49495792388916
    7. '#' → logprob: -8.61995792388916
    8. 'for' → logprob: -8.86995792388916
    9. '       ' → logprob: -8.86995792388916
    10. 'def' → logprob: -9.61995792388916

Token 3393: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06377894431352615
    2. 'm' → logprob: -3.438778877258301
    3. 'n' → logprob: -4.188778877258301
    4. ' j' → logprob: -4.688778877258301
    5. '   ' → logprob: -5.813778877258301
    6. ' m' → logprob: -7.688778877258301
    7. 'joint' → logprob: -7.688778877258301
    8. ' n' → logprob: -7.813778877258301
    9. 'sys' → logprob: -8.0637788772583
    10. 't' → logprob: -9.1887788772583

Token 3394: '[]
' (ID: 41761)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7453786730766296
    2. 's' → logprob: -0.9953786730766296
    3. '_' → logprob: -2.6203787326812744
    4. '[]' → logprob: -3.3703787326812744
    5. '   ' → logprob: -4.120378494262695
    6. '=' → logprob: -4.745378494262695
    7. '[' → logprob: -4.995378494262695
    8. 'oints' → logprob: -4.995378494262695
    9. '[i' → logprob: -7.245378494262695
    10. '=[]
' → logprob: -7.245378494262695

Token 3395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016234008595347404
    2. 'n' → logprob: -5.016233921051025
    3. 'def' → logprob: -5.016233921051025
    4. '
' → logprob: -6.891233921051025
    5. '(n' → logprob: -7.266233921051025
    6. ',' → logprob: -8.391234397888184
    7. ',
' → logprob: -8.891234397888184
    8. ':' → logprob: -9.141234397888184
    9. '```' → logprob: -9.141234397888184
    10. ' =' → logprob: -9.266234397888184

Token 3396: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03637147322297096
    2. 'n' → logprob: -3.9113714694976807
    3. '
' → logprob: -4.41137170791626
    4. 'def' → logprob: -6.78637170791626
    5. '(n' → logprob: -7.03637170791626
    6. '    
' → logprob: -7.41137170791626
    7. ',
' → logprob: -9.161371231079102
    8. '```' → logprob: -9.286371231079102
    9. '()
' → logprob: -9.411371231079102
    10. ',' → logprob: -9.411371231079102

Token 3397: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04375997558236122
    2. 'n' → logprob: -3.543760061264038
    3. 'def' → logprob: -4.293759822845459
    4. ' n' → logprob: -9.793760299682617
    5. '
' → logprob: -9.793760299682617
    6. '    
' → logprob: -10.043760299682617
    7. '(n' → logprob: -10.293760299682617
    8. 'import' → logprob: -10.793760299682617
    9. 'if' → logprob: -11.293760299682617
    10. '	n' → logprob: -11.668760299682617

Token 3398: ' Calcul' (ID: 57243)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030776377767324448
    2. '   ' → logprob: -3.530776262283325
    3. 'def' → logprob: -7.530776500701904
    4. 'for' → logprob: -8.405776023864746
    5. ' n' → logprob: -9.655776023864746
    6. '#' → logprob: -9.780776023864746
    7. '
' → logprob: -9.780776023864746
    8. 'j' → logprob: -10.780776023864746
    9. 'sys' → logprob: -11.405776023864746
    10. 't' → logprob: -11.905776023864746

Token 3399: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.023691581562161446
    2. '   ' → logprob: -3.8986916542053223
    3. ' =' → logprob: -7.148691654205322
    4. '=' → logprob: -7.398691654205322
    5. 'total' → logprob: -7.648691654205322
    6. 'e' → logprob: -8.023691177368164
    7. '_total' → logprob: -8.023691177368164
    8. 'des' → logprob: -9.148691177368164
    9. 'ate' → logprob: -9.398691177368164
    10. 'n' → logprob: -9.523691177368164

Token 3400: ' S' (ID: 336)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09899119287729263
    2. '   ' → logprob: -2.9739911556243896
    3. 'total' → logprob: -3.9739911556243896
    4. 'S' → logprob: -4.223991394042969
    5. 'sum' → logprob: -4.973991394042969
    6. 'J' → logprob: -7.223991394042969
    7. 'p' → logprob: -7.723991394042969
    8. 'def' → logprob: -7.848991394042969
    9. 's' → logprob: -8.098991394042969
    10. 'N' → logprob: -8.473991394042969

Token 3401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36221715807914734
    2. '=' → logprob: -1.8622171878814697
    3. ',' → logprob: -2.6122171878814697
    4. '   ' → logprob: -2.8622171878814697
    5. 's' → logprob: -5.612216949462891
    6. 'def' → logprob: -5.987216949462891
    7. 'n' → logprob: -6.237216949462891
    8. 'p' → logprob: -6.237216949462891
    9. '_' → logprob: -6.862216949462891
    10. '_p' → logprob: -7.612216949462891

Token 3402: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -7.5649528298527e-05
    2. ' sum' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.375075340270996
    4. '=sum' → logprob: -16.250076293945312
    5. '(sum' → logprob: -17.000076293945312
    6. ' ' → logprob: -18.625076293945312
    7. '
' → logprob: -19.000076293945312
    8. 'sys' → logprob: -19.250076293945312
    9. '_sum' → logprob: -19.625076293945312
    10. '	sum' → logprob: -19.750076293945312

Token 3403: '(p' (ID: 2407)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.42951250076293945
    2. 'des' → logprob: -1.8045125007629395
    3. '_t' → logprob: -2.4295125007629395
    4. 't' → logprob: -3.4295125007629395
    5. 'p' → logprob: -3.6795125007629395
    6. '_' → logprob: -4.1795125007629395
    7. '_des' → logprob: -5.0545125007629395
    8. ' =' → logprob: -5.8045125007629395
    9. 'pipes' → logprob: -6.0545125007629395
    10. '_pipe' → logprob: -6.3045125007629395

Token 3404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20990905165672302
    2. ')
' → logprob: -2.334908962249756
    3. 's' → logprob: -3.709908962249756
    4. '   ' → logprob: -3.834908962249756
    5. '[' → logprob: -4.834908962249756
    6. '_p' → logprob: -4.834908962249756
    7. '[p' → logprob: -5.584908962249756
    8. '[]' → logprob: -5.834908962249756
    9. 'p' → logprob: -5.834908962249756
    10. '=' → logprob: -6.209908962249756

Token 3405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003991846460849047
    2. '
' → logprob: -6.378992080688477
    3. 'n' → logprob: -6.503992080688477
    4. '    
' → logprob: -8.253992080688477
    5. 'def' → logprob: -8.878992080688477
    6. '```' → logprob: -9.753992080688477
    7. ',' → logprob: -10.128992080688477
    8. '(n' → logprob: -10.253992080688477
    9. 'p' → logprob: -10.503992080688477
    10. ',
' → logprob: -10.628992080688477

Token 3406: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005829372443258762
    2. 'n' → logprob: -5.255829334259033
    3. '
' → logprob: -8.505829811096191
    4. '```' → logprob: -9.005829811096191
    5. '    
' → logprob: -9.255829811096191
    6. 'def' → logprob: -9.880829811096191
    7. 'j' → logprob: -10.880829811096191
    8. '(n' → logprob: -10.880829811096191
    9. '       ' → logprob: -11.005829811096191
    10. ',' → logprob: -11.380829811096191

Token 3407: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2953318953514099
    2. 'n' → logprob: -1.4203319549560547
    3. 'def' → logprob: -5.170331954956055
    4. '
' → logprob: -5.920331954956055
    5. '```' → logprob: -6.670331954956055
    6. '(n' → logprob: -7.170331954956055
    7. 'j' → logprob: -7.420331954956055
    8. '#' → logprob: -7.420331954956055
    9. '       ' → logprob: -8.295331954956055
    10. ' =' → logprob: -8.420331954956055

Token 3408: ' Calcul' (ID: 57243)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.10476420074701309
    2. 'sum' → logprob: -2.354764223098755
    3. 'j' → logprob: -6.104763984680176
    4. 'read' → logprob: -7.229763984680176
    5. '#' → logprob: -7.354763984680176
    6. '   ' → logprob: -8.104763984680176
    7. 'sort' → logprob: -8.354763984680176
    8. 'n' → logprob: -9.479763984680176
    9. 'Read' → logprob: -9.604763984680176
    10. 'sorted' → logprob: -10.104763984680176

Token 3409: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4131163954734802
    2. 'J' → logprob: -1.538116455078125
    3. 'j' → logprob: -3.538116455078125
    4. '   ' → logprob: -3.913116455078125
    5. '_j' → logprob: -4.538116455078125
    6. '=' → logprob: -4.663116455078125
    7. 'total' → logprob: -4.663116455078125
    8. ' =' → logprob: -4.788116455078125
    9. 'sum' → logprob: -4.788116455078125
    10. 'r' → logprob: -4.913116455078125

Token 3410: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.5769216418266296
    2. 'sum' → logprob: -0.8269216418266296
    3. '   ' → logprob: -7.951921463012695
    4. ' sum' → logprob: -8.076921463012695
    5. ' J' → logprob: -8.326921463012695
    6. 'total' → logprob: -10.576921463012695
    7. 'len' → logprob: -12.076921463012695
    8. 'j' → logprob: -12.201921463012695
    9. '(sum' → logprob: -12.451921463012695
    10. '`' → logprob: -12.701921463012695

Token 3411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08119578659534454
    2. '=' → logprob: -2.581195831298828
    3. '_j' → logprob: -6.831195831298828
    4. ' ' → logprob: -8.456195831298828
    5. '_' → logprob: -8.581195831298828
    6. '   ' → logprob: -8.581195831298828
    7. ',' → logprob: -9.206195831298828
    8. 'j' → logprob: -9.331195831298828
    9. 's' → logprob: -9.706195831298828
    10. '_joint' → logprob: -9.831195831298828

Token 3412: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0003361774142831564
    2. ' sum' → logprob: -8.000336647033691
    3. '0' → logprob: -15.000336647033691
    4. '   ' → logprob: -15.125336647033691
    5. '(sum' → logprob: -17.000335693359375
    6. 'sys' → logprob: -17.375335693359375
    7. '
' → logprob: -17.375335693359375
    8. '	sum' → logprob: -17.750335693359375
    9. ' ' → logprob: -17.875335693359375
    10. '=sum' → logprob: -18.250335693359375

Token 3413: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0026234546676278114
    2. 'j' → logprob: -6.127623558044434
    3. '(' → logprob: -8.252623558044434
    4. '_j' → logprob: -9.127623558044434
    5. '=' → logprob: -10.877623558044434
    6. ' =' → logprob: -11.002623558044434
    7. '   ' → logprob: -12.002623558044434
    8. ' (' → logprob: -12.252623558044434
    9. '[j' → logprob: -12.502623558044434
    10. '(
' → logprob: -12.627623558044434

Token 3414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008458667434751987
    2. ')
' → logprob: -5.258458614349365
    3. ' )' → logprob: -7.258458614349365
    4. '_)' → logprob: -7.508458614349365
    5. 's' → logprob: -7.633458614349365
    6. ' =' → logprob: -7.633458614349365
    7. '[])' → logprob: -8.383459091186523
    8. '_' → logprob: -8.758459091186523
    9. '   ' → logprob: -9.133459091186523
    10. '_j' → logprob: -9.258459091186523

Token 3415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2531399130821228
    2. 'def' → logprob: -2.0031399726867676
    3. 'n' → logprob: -2.7531399726867676
    4. '(n' → logprob: -4.503139972686768
    5. '
' → logprob: -6.003139972686768
    6. '```' → logprob: -6.253139972686768
    7. '()
' → logprob: -6.378139972686768
    8. '\' → logprob: -7.128139972686768
    9. ',
' → logprob: -7.253139972686768
    10. '    
' → logprob: -7.628139972686768

Token 3416: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7623763680458069
    2. 'def' → logprob: -0.8873763680458069
    3. 'n' → logprob: -2.262376308441162
    4. '(n' → logprob: -5.012376308441162
    5. '()
' → logprob: -6.762376308441162
    6. ':' → logprob: -6.762376308441162
    7. '
' → logprob: -6.887376308441162
    8. '\' → logprob: -7.137376308441162
    9. '(' → logprob: -7.137376308441162
    10. '()' → logprob: -7.262376308441162

Token 3417: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13555046916007996
    2. '   ' → logprob: -2.1355504989624023
    3. 'n' → logprob: -5.010550498962402
    4. 'if' → logprob: -6.510550498962402
    5. 't' → logprob: -8.760550498962402
    6. '(n' → logprob: -9.385550498962402
    7. '```' → logprob: -9.760550498962402
    8. 'import' → logprob: -10.135550498962402
    9. ' def' → logprob: -10.385550498962402
    10. 'for' → logprob: -11.385550498962402

Token 3418: ' Trier' (ID: 191551)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01775219850242138
    2. '   ' → logprob: -4.517752170562744
    3. 'def' → logprob: -5.142752170562744
    4. '#' → logprob: -8.017752647399902
    5. 'j' → logprob: -8.767752647399902
    6. 'for' → logprob: -9.392752647399902
    7. 'sys' → logprob: -10.017752647399902
    8. ' n' → logprob: -10.142752647399902
    9. '
' → logprob: -10.142752647399902
    10. 't' → logprob: -10.267752647399902

Token 3419: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0042442502453923225
    2. '   ' → logprob: -6.254244327545166
    3. ' j' → logprob: -7.129244327545166
    4. 'joint' → logprob: -7.379244327545166
    5. '(j' → logprob: -7.629244327545166
    6. ' joints' → logprob: -8.879243850708008
    7. '_j' → logprob: -9.254243850708008
    8. 'def' → logprob: -9.879243850708008
    9. ' =' → logprob: -10.504243850708008
    10. '[j' → logprob: -11.504243850708008

Token 3420: ' en' (ID: 469)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.10359527915716171
    2. 's' → logprob: -2.97859525680542
    3. ' =' → logprob: -3.47859525680542
    4. '_sorted' → logprob: -4.35359525680542
    5. '=' → logprob: -6.97859525680542
    6. '_j' → logprob: -7.22859525680542
    7. '.' → logprob: -8.103595733642578
    8. ')' → logprob: -8.478595733642578
    9. 'sorted' → logprob: -8.478595733642578
    10. '_' → logprob: -8.603595733642578

Token 3421: ' ordre' (ID: 103061)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6478760838508606
    2. 'sorted' → logprob: -1.7728760242462158
    3. 'cro' → logprob: -2.022876024246216
    4. 'reverse' → logprob: -2.897876024246216
    5. 'ascending' → logprob: -3.272876024246216
    6. 'ordre' → logprob: -3.397876024246216
    7. 'asc' → logprob: -3.772876024246216
    8. ')' → logprob: -5.772876262664795
    9. 's' → logprob: -5.897876262664795
    10. '   ' → logprob: -5.897876262664795

Token 3422: ' cro' (ID: 11270)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.46833130717277527
    2. '_j' → logprob: -2.0933313369750977
    3. '.' → logprob: -2.3433313369750977
    4. '_' → logprob: -2.8433313369750977
    5. '=' → logprob: -3.0933313369750977
    6. ' =' → logprob: -4.718331336975098
    7. 's' → logprob: -4.718331336975098
    8. '_sorted' → logprob: -4.843331336975098
    9. '.
' → logprob: -4.968331336975098
    10. '_desc' → logprob: -6.468331336975098

Token 3423: 'issant' (ID: 31359)
  Prédit: 'ute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.9198500514030457
    2. 'de' → logprob: -1.7948501110076904
    3. 'te' → logprob: -2.1698501110076904
    4. 'mp' → logprob: -2.5448501110076904
    5. 'nte' → logprob: -2.6698501110076904
    6. 'ut' → logprob: -2.9198501110076904
    7. 'up' → logprob: -3.1698501110076904
    8. 't' → logprob: -3.7948501110076904
    9. 'nt' → logprob: -4.544849872589111
    10. 'd' → logprob: -5.044849872589111

Token 3424: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6056711077690125
    2. '   ' → logprob: -1.4806711673736572
    3. '
' → logprob: -3.1056711673736572
    4. 'j' → logprob: -3.7306711673736572
    5. '_j' → logprob: -3.7306711673736572
    6. ' =' → logprob: -3.9806711673736572
    7. '```' → logprob: -4.105670928955078
    8. ',' → logprob: -4.230670928955078
    9. ',
' → logprob: -4.480670928955078
    10. 's' → logprob: -4.730670928955078

Token 3425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2568270266056061
    2. 'def' → logprob: -1.5068269968032837
    3. '```' → logprob: -6.631826877593994
    4. '
' → logprob: -6.756826877593994
    5. '    
' → logprob: -7.756826877593994
    6. 'j' → logprob: -7.756826877593994
    7. '()
' → logprob: -8.256827354431152
    8. '[]
' → logprob: -8.381827354431152
    9. ',' → logprob: -9.006827354431152
    10. '()' → logprob: -9.506827354431152

Token 3426: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22848519682884216
    2. 'def' → logprob: -1.6034852266311646
    3. 'n' → logprob: -6.728485107421875
    4. '    
' → logprob: -7.353485107421875
    5. '
' → logprob: -8.228485107421875
    6. 'j' → logprob: -8.353485107421875
    7. 'import' → logprob: -8.728485107421875
    8. '```' → logprob: -9.478485107421875
    9. 'p' → logprob: -9.603485107421875
    10. ',' → logprob: -9.978485107421875

Token 3427: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08480563014745712
    2. '   ' → logprob: -2.834805727005005
    3. 'n' → logprob: -3.834805727005005
    4. 'if' → logprob: -7.709805488586426
    5. '
' → logprob: -8.834805488586426
    6. 'import' → logprob: -9.709805488586426
    7. 't' → logprob: -9.834805488586426
    8. '(n' → logprob: -10.209805488586426
    9. '    
' → logprob: -10.209805488586426
    10. ' def' → logprob: -10.334805488586426

Token 3428: ' Calcul' (ID: 57243)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.09062913060188293
    2. 'j' → logprob: -2.7156291007995605
    3. '   ' → logprob: -4.2156291007995605
    4. '#' → logprob: -6.3406291007995605
    5. 'pref' → logprob: -6.5906291007995605
    6. 'sorted' → logprob: -6.8406291007995605
    7. 'def' → logprob: -7.9656291007995605
    8. 'cum' → logprob: -7.9656291007995605
    9. 'for' → logprob: -8.715629577636719
    10. 'joint' → logprob: -9.090629577636719

Token 3429: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.027119044214487076
    2. 'ate' → logprob: -3.9021191596984863
    3. '   ' → logprob: -6.027119159698486
    4. '=' → logprob: -6.277119159698486
    5. '#' → logprob: -6.902119159698486
    6. ' =' → logprob: -7.652119159698486
    7. 'uer' → logprob: -8.777118682861328
    8. 'def' → logprob: -8.902118682861328
    9. 'r' → logprob: -9.027118682861328
    10. '       ' → logprob: -9.152118682861328

Token 3430: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.004632807336747646
    2. '   ' → logprob: -5.754632949829102
    3. 'pref' → logprob: -6.754632949829102
    4. ' prefix' → logprob: -8.754632949829102
    5. 'pre' → logprob: -9.754632949829102
    6. 'j' → logprob: -10.629632949829102
    7. 'psum' → logprob: -11.379632949829102
    8. '       ' → logprob: -12.004632949829102
    9. 'cum' → logprob: -12.254632949829102
    10. 'c' → logprob: -12.379632949829102

Token 3431: ' sum' (ID: 4215)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.2549848258495331
    2. '_sum' → logprob: -1.7549848556518555
    3. '_j' → logprob: -3.2549848556518555
    4. '_' → logprob: -4.7549848556518555
    5. 's' → logprob: -6.0049848556518555
    6. 'sum' → logprob: -6.1299848556518555
    7. '_prefix' → logprob: -8.754984855651855
    8. '_suffix' → logprob: -9.754984855651855
    9. '
' → logprob: -10.629984855651855
    10. ' =' → logprob: -11.129984855651855

Token 3432: ' de' (ID: 334)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.8755881190299988
    2. '_' → logprob: -1.2505881786346436
    3. ' =' → logprob: -2.2505881786346436
    4. '   ' → logprob: -2.5005881786346436
    5. 's' → logprob: -2.7505881786346436
    6. '[j' → logprob: -4.3755879402160645
    7. '_prefix' → logprob: -5.3755879402160645
    8. '_s' → logprob: -5.5005879402160645
    9. '=' → logprob: -5.6255879402160645
    10. 'def' → logprob: -5.8755879402160645

Token 3433: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0046985456719994545
    2. ' j' → logprob: -5.754698753356934
    3. 'sorted' → logprob: -7.379698753356934
    4. 'joint' → logprob: -8.004698753356934
    5. '_j' → logprob: -8.504698753356934
    6. '[j' → logprob: -9.379698753356934
    7. '   ' → logprob: -10.004698753356934
    8. 'joined' → logprob: -10.254698753356934
    9. ' joints' → logprob: -10.629698753356934
    10. ' ' → logprob: -10.879698753356934

Token 3434: ' tri' (ID: 12665)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45789700746536255
    2. '_' → logprob: -2.0828969478607178
    3. '   ' → logprob: -2.5828969478607178
    4. ' =' → logprob: -2.5828969478607178
    5. '_j' → logprob: -2.9578969478607178
    6. '_s' → logprob: -4.332897186279297
    7. 'def' → logprob: -4.957897186279297
    8. '_prefix' → logprob: -4.957897186279297
    9. '
' → logprob: -5.457897186279297
    10. '_
' → logprob: -5.957897186279297

Token 3435: 'é' (ID: 377)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9047203063964844
    2. '[' → logprob: -2.4047203063964844
    3. '[j' → logprob: -2.4047203063964844
    4. '   ' → logprob: -2.5297203063964844
    5. ']' → logprob: -2.6547203063964844
    6. 'sum' → logprob: -2.7797203063964844
    7. 'm' → logprob: -3.4047203063964844
    8. 's' → logprob: -3.6547203063964844
    9. '[]
' → logprob: -3.6547203063964844
    10. ')' → logprob: -3.7797203063964844

Token 3436: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11810509860515594
    2. 'def' → logprob: -2.243105173110962
    3. '
' → logprob: -6.118104934692383
    4. 'j' → logprob: -6.743104934692383
    5. 'n' → logprob: -7.118104934692383
    6. '    
' → logprob: -7.993104934692383
    7. 'p' → logprob: -8.993104934692383
    8. '(n' → logprob: -9.618104934692383
    9. 'import' → logprob: -9.868104934692383
    10. '(p' → logprob: -9.993104934692383

Token 3437: ' prefix' (ID: 18633)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.117602825164795
    2. 'prefix' → logprob: -1.117602825164795
    3. ' prefix' → logprob: -1.117602825164795
    4. ' j' → logprob: -4.867602825164795
    5. 'j' → logprob: -5.242602825164795
    6. '[j' → logprob: -7.492602825164795
    7. 'psum' → logprob: -7.492602825164795
    8. '(prefix' → logprob: -7.617602825164795
    9. 'sorted' → logprob: -7.992602825164795
    10. '_prefix' → logprob: -7.992602825164795

Token 3438: '[i' (ID: 1768)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.0408567190170288
    2. '_sum' → logprob: -1.4158567190170288
    3. '_s' → logprob: -1.5408567190170288
    4. ' =' → logprob: -2.2908568382263184
    5. 's' → logprob: -3.2908568382263184
    6. '_' → logprob: -3.4158568382263184
    7. 'sum' → logprob: -4.290856838226318
    8. '\' → logprob: -6.290856838226318
    9. '_prefix' → logprob: -7.040856838226318
    10. '_lengths' → logprob: -8.16585636138916

Token 3439: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4330623149871826
    2. ' =' → logprob: -1.5580623149871826
    3. 's' → logprob: -2.5580623149871826
    4. '=' → logprob: -3.0580623149871826
    5. ']=' → logprob: -5.683062553405762
    6. '+' → logprob: -5.933062553405762
    7. '   ' → logprob: -5.933062553405762
    8. '[i' → logprob: -6.308062553405762
    9. '[' → logprob: -6.808062553405762
    10. '[j' → logprob: -7.308062553405762

Token 3440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2021414190530777
    2. '=' → logprob: -2.077141523361206
    3. '   ' → logprob: -3.577141523361206
    4. 's' → logprob: -5.202141284942627
    5. '[' → logprob: -5.327141284942627
    6. '[j' → logprob: -5.327141284942627
    7. '```' → logprob: -6.077141284942627
    8. '_' → logprob: -6.202141284942627
    9. '[i' → logprob: -6.452141284942627
    10. '
' → logprob: -6.577141284942627

Token 3441: ' somme' (ID: 64484)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.020811865106225014
    2. ' prefix' → logprob: -3.8958117961883545
    3. '0' → logprob: -9.145812034606934
    4. 'j' → logprob: -9.270812034606934
    5. '   ' → logprob: -10.770812034606934
    6. '(prefix' → logprob: -10.895812034606934
    7. ' j' → logprob: -11.145812034606934
    8. '[j' → logprob: -12.020812034606934
    9. '[' → logprob: -12.395812034606934
    10. ' ' → logprob: -13.645812034606934

Token 3442: ' des' (ID: 731)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.96718829870224
    2. '_' → logprob: -1.2171883583068848
    3. '_j' → logprob: -2.0921883583068848
    4. '_prefix' → logprob: -2.9671883583068848
    5. '[:' → logprob: -3.2171883583068848
    6. 's' → logprob: -3.8421883583068848
    7. '[' → logprob: -3.8421883583068848
    8. '```' → logprob: -4.217188358306885
    9. '[_' → logprob: -4.842188358306885
    10. 'des' → logprob: -5.217188358306885

Token 3443: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.040517136454582214
    2. 'prefix' → logprob: -3.4155170917510986
    3. 'sorted' → logprob: -6.165517330169678
    4. '[j' → logprob: -6.290517330169678
    5. ' j' → logprob: -6.790517330169678
    6. 'i' → logprob: -7.415517330169678
    7. '_j' → logprob: -8.29051685333252
    8. '   ' → logprob: -8.54051685333252
    9. 'joint' → logprob: -8.54051685333252
    10. '0' → logprob: -9.29051685333252

Token 3444: ' premiers' (ID: 59140)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1063216924667358
    2. '_j' → logprob: -1.4813216924667358
    3. '[' → logprob: -1.7313216924667358
    4. '[j' → logprob: -2.3563218116760254
    5. 's' → logprob: -3.1063218116760254
    6. '_prefix' → logprob: -3.4813218116760254
    7. '_s' → logprob: -3.8563218116760254
    8. '[_' → logprob: -4.231321811676025
    9. '```' → logprob: -4.981321811676025
    10. ']' → logprob: -5.106321811676025

Token 3445: ' joints' (ID: 47223)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.050791677087545395
    2. '_' → logprob: -3.8007917404174805
    3. '[j' → logprob: -4.5507917404174805
    4. 'j' → logprob: -5.3007917404174805
    5. '```' → logprob: -6.0507917404174805
    6. '_prefix' → logprob: -6.4257917404174805
    7. ']' → logprob: -7.0507917404174805
    8. '`' → logprob: -7.0507917404174805
    9. '_joint' → logprob: -7.0507917404174805
    10. '_sorted' → logprob: -7.5507917404174805

Token 3446: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38861173391342163
    2. 'def' → logprob: -1.6386117935180664
    3. ' =' → logprob: -3.0136117935180664
    4. '
' → logprob: -3.6386117935180664
    5. '[j' → logprob: -4.263611793518066
    6. 's' → logprob: -5.263611793518066
    7. ']' → logprob: -5.388611793518066
    8. '_j' → logprob: -5.638611793518066
    9. '(j' → logprob: -5.888611793518066
    10. '```' → logprob: -6.013611793518066

Token 3447: ' plus' (ID: 2932)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49270299077033997
    2. 't' → logprob: -2.6177029609680176
    3. 'plus' → logprob: -2.6177029609680176
    4. 'ts' → logprob: -2.7427029609680176
    5. 'és' → logprob: -3.2427029609680176
    6. 'ss' → logprob: -3.2427029609680176
    7. 'tr' → logprob: -4.117702960968018
    8. 'rés' → logprob: -4.492702960968018
    9. '
' → logprob: -4.617702960968018
    10. 'rt' → logprob: -5.117702960968018

Token 3448: ' petits' (ID: 38141)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.03682209551334381
    2. 'import' → logprob: -3.7868220806121826
    3. 'gr' → logprob: -5.036822319030762
    4. 'cour' → logprob: -6.286822319030762
    5. 'small' → logprob: -6.786822319030762
    6. 'min' → logprob: -7.411822319030762
    7. ' petits' → logprob: -7.786822319030762
    8. '   ' → logprob: -8.161822319030762
    9. 'c' → logprob: -8.286822319030762
    10. '_' → logprob: -8.411822319030762

Token 3449: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10664483904838562
    2. 'def' → logprob: -2.356644868850708
    3. '
' → logprob: -7.231644630432129
    4. '[]
' → logprob: -7.606644630432129
    5. 'n' → logprob: -7.731644630432129
    6. '(n' → logprob: -7.856644630432129
    7. ' =' → logprob: -7.981644630432129
    8. '```' → logprob: -8.106644630432129
    9. 's' → logprob: -8.231644630432129
    10. '(' → logprob: -8.231644630432129

Token 3450: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.636077880859375
    2. '   ' → logprob: -0.761077880859375
    3. 'n' → logprob: -6.636077880859375
    4. '
' → logprob: -8.386077880859375
    5. '()
' → logprob: -8.511077880859375
    6. '(n' → logprob: -8.511077880859375
    7. '```' → logprob: -8.886077880859375
    8. ' =' → logprob: -8.886077880859375
    9. '()' → logprob: -9.011077880859375
    10. 'j' → logprob: -9.011077880859375

Token 3451: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20653167366981506
    2. 'def' → logprob: -1.7065316438674927
    3. 'n' → logprob: -5.831531524658203
    4. '(n' → logprob: -7.706531524658203
    5. '
' → logprob: -7.831531524658203
    6. 'import' → logprob: -8.331531524658203
    7. '    
' → logprob: -8.706531524658203
    8. '```' → logprob: -9.206531524658203
    9. '(' → logprob: -9.331531524658203
    10. ' def' → logprob: -9.456531524658203

Token 3452: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20753814280033112
    2. '   ' → logprob: -1.70753812789917
    3. 'n' → logprob: -5.70753812789917
    4. '(n' → logprob: -7.45753812789917
    5. 'import' → logprob: -7.45753812789917
    6. 'if' → logprob: -7.58253812789917
    7. '```' → logprob: -8.957538604736328
    8. ' def' → logprob: -9.207538604736328
    9. '
' → logprob: -9.332538604736328
    10. '\' → logprob: -9.332538604736328

Token 3453: ' Pour' (ID: 13931)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22107714414596558
    2. 'def' → logprob: -2.3460772037506104
    3. '   ' → logprob: -2.5960772037506104
    4. '#' → logprob: -4.096076965332031
    5. 'prefix' → logprob: -5.221076965332031
    6. 'for' → logprob: -5.346076965332031
    7. '
' → logprob: -7.971076965332031
    8. 't' → logprob: -8.846076965332031
    9. 'j' → logprob: -8.971076965332031
    10. ' n' → logprob: -9.471076965332031

Token 3454: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.41664865612983704
    2. ' i' → logprob: -1.6666486263275146
    3. 'c' → logprob: -2.1666486263275146
    4. ' c' → logprob: -3.2916486263275146
    5. '   ' → logprob: -10.166648864746094
    6. 'k' → logprob: -10.291648864746094
    7. ' ' → logprob: -11.166648864746094
    8. ' k' → logprob: -11.166648864746094
    9. '	i' → logprob: -12.916648864746094
    10. '_i' → logprob: -13.166648864746094

Token 3455: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5554772615432739
    2. '=' → logprob: -0.9304772615432739
    3. ' in' → logprob: -4.305477142333984
    4. '_' → logprob: -5.430477142333984
    5. ']' → logprob: -6.305477142333984
    6. 'in' → logprob: -6.430477142333984
    7. 's' → logprob: -6.555477142333984
    8. ')' → logprob: -6.555477142333984
    9. 'for' → logprob: -6.805477142333984
    10. '#' → logprob: -6.930477142333984

Token 3456: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759819746017456
    2. ' range' → logprob: -0.8259819746017456
    3. ' n' → logprob: -10.825982093811035
    4. 'n' → logprob: -12.325982093811035
    5. ' ' → logprob: -12.450982093811035
    6. '0' → logprob: -12.450982093811035
    7. '(range' → logprob: -12.700982093811035
    8. 'c' → logprob: -13.075982093811035
    9. '   ' → logprob: -13.325982093811035
    10. ' c' → logprob: -13.450982093811035

Token 3457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01054154522716999
    2. 'n' → logprob: -4.8855414390563965
    3. '1' → logprob: -5.8855414390563965
    4. ' ' → logprob: -10.010541915893555
    5. ']' → logprob: -10.385541915893555
    6. 'range' → logprob: -10.635541915893555
    7. '(n' → logprob: -11.010541915893555
    8. '   ' → logprob: -11.510541915893555
    9. ' n' → logprob: -11.760541915893555
    10. ',' → logprob: -11.760541915893555

Token 3458: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20644612610340118
    2. ',n' → logprob: -1.8314461708068848
    3. '..' → logprob: -4.331446170806885
    4. ' ,' → logprob: -4.706446170806885
    5. '...' → logprob: -6.831446170806885
    6. '   ' → logprob: -7.331446170806885
    7. ':n' → logprob: -7.706446170806885
    8. ',
' → logprob: -7.706446170806885
    9. 'n' → logprob: -7.956446170806885
    10. ' ' → logprob: -8.331445693969727

Token 3459: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005426656571216881
    2. ' n' → logprob: -7.625542640686035
    3. '   ' → logprob: -9.875542640686035
    4. '(n' → logprob: -13.625542640686035
    5. 'len' → logprob: -14.375542640686035
    6. '	n' → logprob: -15.125542640686035
    7. '_n' → logprob: -15.875542640686035
    8. ' ' → logprob: -16.00054359436035
    9. '[n' → logprob: -16.37554359436035
    10. '{' → logprob: -16.50054359436035

Token 3460: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004914700984954834
    2. ' -' → logprob: -5.5049147605896
    3. ']' → logprob: -7.7549147605896
    4. '   ' → logprob: -8.754914283752441
    5. ']:
' → logprob: -9.504914283752441
    6. '):
' → logprob: -9.629914283752441
    7. ')' → logprob: -11.254914283752441
    8. '
' → logprob: -11.254914283752441
    9. ']:' → logprob: -11.504914283752441
    10. '1' → logprob: -11.629914283752441

Token 3461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001761272142175585
    2. '-' → logprob: -8.750176429748535
    3. ' ' → logprob: -12.500176429748535
    4. '#' → logprob: -12.625176429748535
    5. '```' → logprob: -12.875176429748535
    6. ' -' → logprob: -13.000176429748535
    7. '   ' → logprob: -13.500176429748535
    8. '2' → logprob: -13.875176429748535
    9. '`' → logprob: -14.000176429748535
    10. ')' → logprob: -14.875176429748535

Token 3462: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.1263292133808136
    2. ':
' → logprob: -3.126329183578491
    3. ']:' → logprob: -3.126329183578491
    4. ']' → logprob: -3.876329183578491
    5. '   ' → logprob: -5.25132942199707
    6. ']
' → logprob: -6.25132942199707
    7. ':' → logprob: -6.75132942199707
    8. '):
' → logprob: -7.12632942199707
    9. '+' → logprob: -7.62632942199707
    10. ',' → logprob: -9.12632942199707

Token 3463: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1807834953069687
    2. '   ' → logprob: -1.8057835102081299
    3. ' for' → logprob: -7.805783271789551
    4. 'for' → logprob: -8.18078327178955
    5. '```' → logprob: -10.18078327178955
    6. ':' → logprob: -10.30578327178955
    7. '	   ' → logprob: -10.55578327178955
    8. '    ' → logprob: -10.68078327178955
    9. '     ' → logprob: -10.80578327178955
    10. '           ' → logprob: -10.80578327178955

Token 3464: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6451627016067505
    2. '       ' → logprob: -0.7701627016067505
    3. 'for' → logprob: -4.895162582397461
    4. ':' → logprob: -6.270162582397461
    5. ' for' → logprob: -6.395162582397461
    6. ':
' → logprob: -7.270162582397461
    7. '#' (adapté à ' #') → logprob: -9.395162582397461
    8. '           ' → logprob: -9.395162582397461
    9. '
' → logprob: -9.645162582397461
    10. '(' → logprob: -9.645162582397461

Token 3465: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18326136469841003
    2. '       ' → logprob: -1.8082613945007324
    3. 'for' → logprob: -6.558261394500732
    4. ' for' → logprob: -7.308261394500732
    5. '#' → logprob: -8.433260917663574
    6. 'prefix' → logprob: -8.683260917663574
    7. '    ' → logprob: -9.183260917663574
    8. ':' → logprob: -9.308260917663574
    9. '[' → logprob: -9.558260917663574
    10. ' #' → logprob: -9.683260917663574

Token 3466: ' salaire' (ID: 135427)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.768541693687439
    2. '   ' → logprob: -0.893541693687439
    3. 'sum' → logprob: -2.5185418128967285
    4. 'prefix' → logprob: -4.6435418128967285
    5. '#' → logprob: -4.7685418128967285
    6. 'salary' → logprob: -4.7685418128967285
    7. 'for' → logprob: -5.1435418128967285
    8. '     ' → logprob: -6.3935418128967285
    9. 'c' → logprob: -6.5185418128967285
    10. ' sum' → logprob: -6.5185418128967285

Token 3467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016698479652404785
    2. '=' → logprob: -4.141698360443115
    3. '   ' → logprob: -7.516698360443115
    4. '     ' → logprob: -9.891698837280273
    5. '       ' → logprob: -11.141698837280273
    6. 's' → logprob: -11.391698837280273
    7. '=(' → logprob: -11.641698837280273
    8. '=c' → logprob: -11.641698837280273
    9. '    ' → logprob: -11.891698837280273
    10. '(c' → logprob: -12.266698837280273

Token 3468: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.28380247950553894
    2. ' (' → logprob: -1.4088025093078613
    3. '   ' → logprob: -6.783802509307861
    4. '(prefix' → logprob: -7.408802509307861
    5. '(n' → logprob: -7.783802509307861
    6. '(const' → logprob: -8.658802032470703
    7. 'const' → logprob: -9.408802032470703
    8. 'prefix' → logprob: -9.658802032470703
    9. '(' → logprob: -10.533802032470703
    10. ' ' → logprob: -10.533802032470703

Token 3469: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006172468420118093
    2. '(c' → logprob: -7.500617027282715
    3. ' c' → logprob: -10.125617027282715
    4. '   ' → logprob: -11.125617027282715
    5. ' (' → logprob: -12.250617027282715
    6. ')c' → logprob: -12.625617027282715
    7. '	c' → logprob: -14.750617027282715
    8. 'n' → logprob: -14.750617027282715
    9. ' ' → logprob: -16.12561798095703
    10. '_c' → logprob: -16.12561798095703

Token 3470: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01817862130701542
    2. ' +' → logprob: -4.018178462982178
    3. '   ' → logprob: -10.643178939819336
    4. ')+' → logprob: -13.393178939819336
    5. '```' → logprob: -13.518178939819336
    6. ')' → logprob: -14.268178939819336
    7. '  ' → logprob: -15.018178939819336
    8. ' ' → logprob: -15.018178939819336
    9. '＋' → logprob: -15.518178939819336
    10. '()+' → logprob: -16.018178939819336

Token 3471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.575563020305708e-05
    2. '+' → logprob: -10.000065803527832
    3. ')' → logprob: -11.750065803527832
    4. ' ' → logprob: -12.125065803527832
    5. '```' → logprob: -12.875065803527832
    6. '   ' → logprob: -13.000065803527832
    7. '
' → logprob: -13.625065803527832
    8. ' +' → logprob: -15.000065803527832
    9. '=' → logprob: -15.500065803527832
    10. '``' → logprob: -16.500064849853516

Token 3472: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43017905950546265
    2. ' *' → logprob: -1.1801791191101074
    3. '*' → logprob: -3.1801791191101074
    4. ')*' → logprob: -7.930179119110107
    5. '   ' → logprob: -8.05517864227295
    6. '*(' → logprob: -9.68017864227295
    7. ' )' → logprob: -10.80517864227295
    8. ')*(' → logprob: -11.05517864227295
    9. '*)' → logprob: -11.55517864227295
    10. ' ' → logprob: -11.68017864227295

Token 3473: 'S' (ID: 50)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.017559178173542023
    2. 'S' → logprob: -4.642559051513672
    3. ' const' → logprob: -5.142559051513672
    4. '(const' → logprob: -7.392559051513672
    5. '(S' → logprob: -7.517559051513672
    6. 'C' → logprob: -8.267559051513672
    7. ' S' → logprob: -9.267559051513672
    8. 'CONST' → logprob: -9.517559051513672
    9. '_const' → logprob: -9.767559051513672
    10. ' (' → logprob: -9.767559051513672

Token 3474: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029753148555755615
    2. '+' → logprob: -3.5297532081604004
    3. '    ' → logprob: -14.029752731323242
    4. ' plus' → logprob: -14.404752731323242
    5. '   ' → logprob: -14.779752731323242
    6. ' ' → logprob: -15.154752731323242
    7. ' +
' → logprob: -15.154752731323242
    8. ' ' → logprob: -15.654752731323242
    9. '＋' → logprob: -16.154752731323242
    10. ')+' → logprob: -16.779752731323242

Token 3475: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.00286170095205307
    2. 'sum' → logprob: -6.377861499786377
    3. 'prefix' → logprob: -7.002861499786377
    4. ' J' → logprob: -8.377861976623535
    5. '   ' → logprob: -12.502861976623535
    6. ' prefix' → logprob: -12.502861976623535
    7. 'j' → logprob: -12.752861976623535
    8. '-J' → logprob: -13.502861976623535
    9. ' sum' → logprob: -13.627861976623535
    10. ' ' → logprob: -13.877861976623535

Token 3476: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12712517380714417
    2. '-' → logprob: -2.1271252632141113
    3. '-c' → logprob: -8.877124786376953
    4. ')' → logprob: -10.127124786376953
    5. ' ' → logprob: -11.877124786376953
    6. '   ' → logprob: -12.627124786376953
    7. '-prefix' → logprob: -13.627124786376953
    8. '-s' → logprob: -14.127124786376953
    9. ')-' → logprob: -14.377124786376953
    10. '-p' → logprob: -14.502124786376953

Token 3477: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -3.666993507067673e-05
    2. ' prefix' → logprob: -10.250036239624023
    3. '(prefix' → logprob: -14.000036239624023
    4. '   ' → logprob: -14.875036239624023
    5. '_prefix' → logprob: -17.125036239624023
    6. 'pref' → logprob: -17.875036239624023
    7. '
' → logprob: -18.000036239624023
    8. '```' → logprob: -18.500036239624023
    9. '`' → logprob: -18.750036239624023
    10. 'c' → logprob: -18.750036239624023

Token 3478: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.010419572703540325
    2. '[_' → logprob: -5.6354193687438965
    3. '_c' → logprob: -5.8854193687438965
    4. '[' → logprob: -6.0104193687438965
    5. '   ' → logprob: -7.6354193687438965
    6. '[i' → logprob: -8.260419845581055
    7. '\[' → logprob: -8.885419845581055
    8. ')' → logprob: -9.010419845581055
    9. '_[' → logprob: -9.385419845581055
    10. '[:' → logprob: -9.635419845581055

Token 3479: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.009297584183514118
    2. '[c' → logprob: -5.3842973709106445
    3. '])
' → logprob: -5.5092973709106445
    4. ']' → logprob: -7.7592973709106445
    5. '[' → logprob: -10.134297370910645
    6. '   ' → logprob: -10.259297370910645
    7. ' ])' → logprob: -10.384297370910645
    8. '])
' → logprob: -10.634297370910645
    9. '[i' → logprob: -11.384297370910645
    10. '])

' → logprob: -11.634297370910645

Token 3480: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20412975549697876
    2. '   ' → logprob: -2.329129695892334
    3. '(n' → logprob: -3.454129695892334
    4. '(
' → logprob: -4.579129695892334
    5. '():' → logprob: -4.704129695892334
    6. '()' → logprob: -4.704129695892334
    7. ':' → logprob: -4.829129695892334
    8. '():
' → logprob: -5.579129695892334
    9. '()
' → logprob: -5.829129695892334
    10. '(' → logprob: -5.954129695892334

Token 3481: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6870164275169373
    2. 'def' → logprob: -0.8120164275169373
    3. 'if' → logprob: -4.062016487121582
    4. 'n' → logprob: -4.062016487121582
    5. '(n' → logprob: -4.812016487121582
    6. ':' → logprob: -5.937016487121582
    7. ':
' → logprob: -6.937016487121582
    8. 'import' → logprob: -7.437016487121582
    9. '
' → logprob: -7.562016487121582
    10. '```' → logprob: -7.687016487121582

Token 3482: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1419893354177475
    2. 'def' → logprob: -2.141989231109619
    3. 'if' → logprob: -5.766989231109619
    4. '()' → logprob: -6.266989231109619
    5. '(n' → logprob: -6.391989231109619
    6. ' =' → logprob: -6.641989231109619
    7. '()
' → logprob: -6.766989231109619
    8. 'n' → logprob: -6.766989231109619
    9. 'import' → logprob: -7.016989231109619
    10. '       ' → logprob: -7.016989231109619

Token 3483: ' Aff' (ID: 13741)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1063576266169548
    2. '   ' → logprob: -2.6063575744628906
    3. 'best' → logprob: -4.731357574462891
    4. 'for' → logprob: -4.981357574462891
    5. 'n' → logprob: -5.606357574462891
    6. 'ans' → logprob: -6.231357574462891
    7. 'def' → logprob: -6.231357574462891
    8. 'result' → logprob: -6.856357574462891
    9. ' max' → logprob: -6.981357574462891
    10. 'res' → logprob: -7.606357574462891

Token 3484: 'icher' (ID: 13617)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.46628740429878235
    2. 'icher' → logprob: -1.34128737449646
    3. 'fic' → logprob: -2.34128737449646
    4. '#' → logprob: -5.091287612915039
    5. '_f' → logprob: -6.216287612915039
    6. 'cher' → logprob: -6.591287612915039
    7. '```' → logprob: -7.466287612915039
    8. '{}' → logprob: -7.591287612915039
    9. 'fin' → logprob: -7.716287612915039
    10. '   ' → logprob: -7.841287612915039

Token 3485: ' le' (ID: 505)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5187037587165833
    2. '   ' → logprob: -1.3937036991119385
    3. 'n' → logprob: -2.2687036991119385
    4. 'import' → logprob: -3.7687036991119385
    5. '
' → logprob: -4.518703937530518
    6. '```' → logprob: -4.893703937530518
    7. 'sys' → logprob: -6.018703937530518
    8. '(n' → logprob: -6.143703937530518
    9. '()
' → logprob: -6.768703937530518
    10. 'if' → logprob: -7.143703937530518

Token 3486: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011860881932079792
    2. '(max' → logprob: -5.7618608474731445
    3. 'maximum' → logprob: -6.1368608474731445
    4. 'result' → logprob: -6.5118608474731445
    5. ' max' → logprob: -6.5118608474731445
    6. '   ' → logprob: -6.6368608474731445
    7. 's' → logprob: -7.2618608474731445
    8. 'answer' → logprob: -8.261860847473145
    9. 'ans' → logprob: -8.511860847473145
    10. 'n' → logprob: -8.636860847473145

Token 3487: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05744616687297821
    2. '   ' → logprob: -3.057446241378784
    3. 'n' → logprob: -5.057446002960205
    4. 'if' → logprob: -6.307446002960205
    5. '(n' → logprob: -8.057446479797363
    6. 'import' → logprob: -9.932446479797363
    7. ':' → logprob: -10.057446479797363
    8. '():
' → logprob: -10.307446479797363
    9. ' def' → logprob: -10.557446479797363
    10. 't' → logprob: -10.682446479797363

Token 3488: ' salaire' (ID: 135427)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2916891276836395
    2. ' salaire' → logprob: -2.041689157485962
    3. 's' → logprob: -2.791689157485962
    4. ' (' → logprob: -3.666689157485962
    5. '(c' → logprob: -5.041688919067383
    6. '[(' → logprob: -5.166688919067383
    7. 'salary' → logprob: -5.166688919067383
    8. '[s' → logprob: -5.666688919067383
    9. 'sal' → logprob: -5.916688919067383
    10. '(
' → logprob: -6.041688919067383

Token 3489: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0070325471460819244
    2. '   ' → logprob: -5.88203239440918
    3. 'if' → logprob: -6.63203239440918
    4. '():' → logprob: -7.13203239440918
    5. '():
' → logprob: -7.38203239440918
    6. '()' → logprob: -8.00703239440918
    7. 'import' → logprob: -8.63203239440918
    8. ':' → logprob: -8.63203239440918
    9. 'n' → logprob: -8.88203239440918
    10. ' def' → logprob: -8.88203239440918

Token 3490: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02450956590473652
    2. '   ' → logprob: -4.149509429931641
    3. 'n' → logprob: -5.524509429931641
    4. 'if' → logprob: -5.899509429931641
    5. '(n' → logprob: -7.524509429931641
    6. ':' → logprob: -7.649509429931641
    7. 'import' → logprob: -8.52450942993164
    8. '```' → logprob: -8.77450942993164
    9. ' def' → logprob: -9.89950942993164
    10. ':
' → logprob: -10.02450942993164

Token 3491: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.690201461315155
    2. 'def' → logprob: -1.1902015209197998
    3. '   ' → logprob: -1.6902015209197998
    4. 'if' → logprob: -5.065201282501221
    5. 't' → logprob: -5.815201282501221
    6. 'import' → logprob: -7.940201282501221
    7. 'T' → logprob: -9.315201759338379
    8. 'thread' → logprob: -9.815201759338379
    9. 'sys' → logprob: -10.815201759338379
    10. '#' → logprob: -10.940201759338379

Token 3492: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.38690730929374695
    2. 'True' → logprob: -1.1369073390960693
    3. '(True' → logprob: -11.136907577514648
    4. '   ' → logprob: -11.511907577514648
    5. '1' → logprob: -12.136907577514648
    6. ' ' → logprob: -12.761907577514648
    7. '=True' → logprob: -13.386907577514648
    8. '  ' → logprob: -14.136907577514648
    9. '_true' → logprob: -14.636907577514648
    10. '    ' → logprob: -15.136907577514648

Token 3493: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2732560634613037
    2. '   ' → logprob: -1.8982560634613037
    3. ':
' → logprob: -3.3982560634613037
    4. ',' → logprob: -3.6482560634613037
    5. '       ' → logprob: -3.8982560634613037
    6. ' :' → logprob: -5.773256301879883
    7. '():' → logprob: -5.898256301879883
    8. ' =' → logprob: -7.398256301879883
    9. ' line' → logprob: -7.523256301879883
    10. '():
' → logprob: -7.648256301879883

Token 3494: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13320709764957428
    2. '       ' → logprob: -2.133207082748413
    3. 'line' → logprob: -5.633207321166992
    4. ' line' → logprob: -6.008207321166992
    5. 'try' → logprob: -9.258207321166992
    6. '```' → logprob: -9.383207321166992
    7. '	line' → logprob: -11.008207321166992
    8. '(line' → logprob: -11.883207321166992
    9. 'n' → logprob: -12.133207321166992
    10. '#line' → logprob: -12.383207321166992

Token 3495: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06829840689897537
    2. '   ' → logprob: -3.06829833984375
    3. 'n' (adapté à ' n') → logprob: -4.06829833984375
    4. ' line' → logprob: -6.56829833984375
    5. 's' → logprob: -7.19329833984375
    6. 'try' → logprob: -9.19329833984375
    7. '       ' → logprob: -9.69329833984375
    8. '	line' → logprob: -10.06829833984375
    9. 'l' → logprob: -10.69329833984375
    10. 't' → logprob: -11.81829833984375

Token 3496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20167148113250732
    2. '=' → logprob: -1.7016714811325073
    3. ' ==' → logprob: -9.076671600341797
    4. '=input' → logprob: -10.076671600341797
    5. '=int' → logprob: -10.576671600341797
    6. '==' → logprob: -10.826671600341797
    7. ',' → logprob: -11.076671600341797
    8. '=line' → logprob: -11.451671600341797
    9. ' ' → logprob: -11.701671600341797
    10. '   ' → logprob: -11.826671600341797

Token 3497: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12721072137355804
    2. ' int' → logprob: -2.1272106170654297
    3. '   ' → logprob: -8.50221061706543
    4. ' sys' → logprob: -10.62721061706543
    5. '=int' → logprob: -10.62721061706543
    6. 'input' → logprob: -11.37721061706543
    7. 'sys' → logprob: -11.37721061706543
    8. ' input' → logprob: -13.25221061706543
    9. ' ' → logprob: -13.75221061706543
    10. '0' → logprob: -13.87721061706543

Token 3498: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31619587540626526
    2. '().' → logprob: -1.3161958456039429
    3. '()
' → logprob: -6.316195964813232
    4. '.strip' → logprob: -7.566195964813232
    5. '.rstrip' → logprob: -8.566195487976074
    6. '.readline' → logprob: -8.691195487976074
    7. '=' → logprob: -8.941195487976074
    8. '   ' → logprob: -10.941195487976074
    9. 'rstrip' → logprob: -10.941195487976074
    10. '())' → logprob: -11.191195487976074

Token 3499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41959336400032043
    2. '.strip' → logprob: -1.419593334197998
    3. '   ' → logprob: -3.169593334197998
    4. '().' → logprob: -3.419593334197998
    5. ' =' → logprob: -4.419593334197998
    6. '.rstrip' → logprob: -5.294593334197998
    7. 'if' → logprob: -6.169593334197998
    8. '=' → logprob: -6.294593334197998
    9. '.' → logprob: -6.669593334197998
    10. ' if' → logprob: -7.044593334197998

Token 3500: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21354316174983978
    2. '       ' → logprob: -1.963543176651001
    3. ' if' → logprob: -2.963543176651001
    4. 'n' → logprob: -9.588542938232422
    5. '   ' → logprob: -9.713542938232422
    6. ' =' → logprob: -9.963542938232422
    7. '
' → logprob: -10.213542938232422
    8. '=' → logprob: -10.588542938232422
    9. '	if' → logprob: -10.963542938232422
    10. 'try' → logprob: -11.088542938232422

Token 3501: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0242451224476099
    2. 'not' → logprob: -3.774245023727417
    3. ' n' → logprob: -7.024245262145996
    4. 'n' → logprob: -9.149245262145996
    5. '       ' → logprob: -14.024245262145996
    6. '   ' → logprob: -14.149245262145996
    7. '.strip' → logprob: -15.149245262145996
    8. '\n' → logprob: -15.774245262145996
    9. '
' → logprob: -16.27424430847168
    10. ' !' → logprob: -16.39924430847168

Token 3502: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022443771362305
    2. ' n' → logprob: -1.910224437713623
    3. '	n' → logprob: -16.16022491455078
    4. '   ' → logprob: -16.66022491455078
    5. '_n' → logprob: -16.66022491455078
    6. '(n' → logprob: -17.16022491455078
    7. '
' → logprob: -18.16022491455078
    8. ')n' → logprob: -18.41022491455078
    9. '```' → logprob: -19.03522491455078
    10. ' ' → logprob: -19.03522491455078

Token 3503: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.15074914693832397
    2. ':
' → logprob: -2.5257492065429688
    3. ':' → logprob: -2.9007492065429688
    4. ' or' → logprob: -6.025749206542969
    5. '.readline' → logprob: -7.150749206542969
    6. '.' → logprob: -7.525749206542969
    7. '.rstrip' → logprob: -7.650749206542969
    8. '   ' → logprob: -8.400749206542969
    9. ')' → logprob: -9.150749206542969
    10. 'strip' → logprob: -9.400749206542969

Token 3504: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4372032880783081
    2. '           ' → logprob: -1.437203288078308
    3. ' =' → logprob: -3.0622034072875977
    4. ':' → logprob: -3.5622034072875977
    5. ':
' → logprob: -3.8122034072875977
    6. ' or' → logprob: -5.062203407287598
    7. '=' → logprob: -5.187203407287598
    8. '.strip' → logprob: -5.437203407287598
    9. '.rstrip' → logprob: -7.437203407287598
    10. '\' → logprob: -7.562203407287598

Token 3505: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6185343861579895
    2. 'break' (adapté à ' break') → logprob: -1.1185343265533447
    3. 'n' → logprob: -2.3685343265533447
    4. ' break' → logprob: -3.2435343265533447
    5. ' n' → logprob: -6.493534564971924
    6. '           ' → logprob: -8.868534088134766
    7. 'if' → logprob: -9.118534088134766
    8. ' if' → logprob: -10.118534088134766
    9. 'continue' → logprob: -10.993534088134766
    10. '	break' → logprob: -11.243534088134766

Token 3506: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01119824405759573
    2. ' =' → logprob: -4.636198043823242
    3. 'n' → logprob: -7.386198043823242
    4. '=' → logprob: -8.011198043823242
    5. '
' → logprob: -8.136198043823242
    6. '        
' → logprob: -9.636198043823242
    7. ' n' → logprob: -10.261198043823242
    8. ':' → logprob: -10.886198043823242
    9. '           ' → logprob: -11.261198043823242
    10. '   ' → logprob: -11.511198043823242

Token 3507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007067138212732971
    2. 'n' → logprob: -7.375706672668457
    3. ' n' → logprob: -10.375706672668457
    4. ' =' → logprob: -11.500706672668457
    5. '        
' → logprob: -11.625706672668457
    6. '=' → logprob: -11.750706672668457
    7. '   ' → logprob: -11.875706672668457
    8. '
' → logprob: -12.375706672668457
    9. '           ' → logprob: -12.500706672668457
    10. ',' → logprob: -13.750706672668457

Token 3508: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.8167802095413208
    2. '       ' → logprob: -1.1917802095413208
    3. ' =' → logprob: -1.5667802095413208
    4. '=' → logprob: -3.5667800903320312
    5. ' n' → logprob: -4.191780090332031
    6. '=n' → logprob: -7.691780090332031
    7. 'int' → logprob: -7.816780090332031
    8. '\n' → logprob: -8.316780090332031
    9. '=int' → logprob: -8.441780090332031
    10. '```' → logprob: -8.441780090332031

Token 3509: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1275593638420105
    2. ' =' → logprob: -2.1275594234466553
    3. '=int' → logprob: -7.377559185028076
    4. '=n' → logprob: -12.627559661865234
    5. '   ' → logprob: -13.502559661865234
    6. 'int' → logprob: -14.502559661865234
    7. 'n' → logprob: -15.502559661865234
    8. '=
' → logprob: -15.752559661865234
    9. '＝' → logprob: -15.877559661865234
    10. ')' → logprob: -15.877559661865234

Token 3510: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005233882926404476
    2. ' int' → logprob: -5.2552337646484375
    3. '   ' → logprob: -15.755233764648438
    4. '	int' → logprob: -18.380233764648438
    5. '(int' → logprob: -19.380233764648438
    6. '=int' → logprob: -19.630233764648438
    7. '[int' → logprob: -20.380233764648438
    8. '```' → logprob: -20.630233764648438
    9. '
' → logprob: -20.755233764648438
    10. ' ' → logprob: -21.130233764648438

Token 3511: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.25147661566734314
    2. '.' → logprob: -2.126476526260376
    3. '.readline' → logprob: -3.376476526260376
    4. '=int' → logprob: -3.751476526260376
    5. 'int' → logprob: -4.376476764678955
    6. '=' → logprob: -4.376476764678955
    7. 'strip' → logprob: -4.876476764678955
    8. '().' → logprob: -5.001476764678955
    9. '()
' → logprob: -6.876476764678955
    10. 'def' → logprob: -7.126476764678955

Token 3512: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.01173718087375164
    2. '()' → logprob: -4.51173734664917
    3. '       ' → logprob: -7.51173734664917
    4. '()\' → logprob: -10.261736869812012
    5. '()
' → logprob: -10.386736869812012
    6. '   ' → logprob: -10.511736869812012
    7. ' =' → logprob: -11.386736869812012
    8. '=' → logprob: -11.386736869812012
    9. 'def' → logprob: -11.511736869812012
    10. '
' → logprob: -12.636736869812012

Token 3513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014428149908781052
    2. 'if' → logprob: -4.26442813873291
    3. ' if' → logprob: -8.26442813873291
    4. '```' → logprob: -12.88942813873291
    5. '	if' → logprob: -13.51442813873291
    6. '        
' → logprob: -14.01442813873291
    7. '	' → logprob: -14.13942813873291
    8. 'n' → logprob: -14.63942813873291
    9. '   ' → logprob: -15.51442813873291
    10. 'import' → logprob: -15.51442813873291

Token 3514: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0017990543274208903
    2. '       ' → logprob: -6.5017991065979
    3. ' if' → logprob: -8.126798629760742
    4. 'n' → logprob: -14.251798629760742
    5. '```' → logprob: -15.001798629760742
    6. '	if' → logprob: -15.876798629760742
    7. 'try' → logprob: -17.126798629760742
    8. 'If' → logprob: -17.126798629760742
    9. '   ' → logprob: -17.251798629760742
    10. '
' → logprob: -18.251798629760742

Token 3515: ' n' (ID: 297)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0620848722755909
    2. ' not' → logprob: -2.812084913253784
    3. 'n' → logprob: -9.062085151672363
    4. '   ' → logprob: -14.312085151672363
    5. ' n' → logprob: -15.437085151672363
    6. '!' → logprob: -15.437085151672363
    7. 'len' → logprob: -16.437084197998047
    8. '	not' → logprob: -16.937084197998047
    9. 'n't' → logprob: -17.312084197998047
    10. '(not' → logprob: -17.562084197998047

Token 3516: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6934237480163574
    2. ' ==' → logprob: -0.6934237480163574
    3. '=' → logprob: -9.693424224853516
    4. '=='' → logprob: -10.193424224853516
    5. '==
' → logprob: -10.443424224853516
    6. '.startswith' → logprob: -10.693424224853516
    7. '```' → logprob: -10.818424224853516
    8. '=="' → logprob: -11.068424224853516
    9. '<=' → logprob: -11.068424224853516
    10. ' =' → logprob: -11.193424224853516

Token 3517: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.40420377254486084
    2. ''' → logprob: -1.9042037725448608
    3. '""' → logprob: -2.4042038917541504
    4. '"' → logprob: -2.4042038917541504
    5. '"":' → logprob: -5.90420389175415
    6. '0' → logprob: -9.154203414916992
    7. '   ' → logprob: -11.029203414916992
    8. '''
' → logprob: -11.654203414916992
    9. ' '':
' → logprob: -12.529203414916992
    10. ' "":
' → logprob: -12.904203414916992

Token 3518: '0' (ID: 15)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -1.2576980590820312
    2. '\n' → logprob: -1.6326980590820312
    3. '0' → logprob: -1.7576980590820312
    4. '''' → logprob: -2.6326980590820312
    5. '':' → logprob: -2.7576980590820312
    6. ''' → logprob: -2.7576980590820312
    7. ''):
' → logprob: -3.1326980590820312
    8. ':
' → logprob: -3.2576980590820312
    9. ''\' → logprob: -3.7576980590820312
    10. '       ' → logprob: -5.257698059082031

Token 3519: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.039259038865566254
    2. ':
' → logprob: -4.28925895690918
    3. '\n' → logprob: -4.53925895690918
    4. '':' → logprob: -4.66425895690918
    5. ':' → logprob: -6.16425895690918
    6. ''' → logprob: -7.16425895690918
    7. '       ' → logprob: -7.28925895690918
    8. '):
' → logprob: -7.91425895690918
    9. '           ' → logprob: -8.28925895690918
    10. ''):
' → logprob: -8.41425895690918

Token 3520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005059692775830626
    2. ':' → logprob: -8.250506401062012
    3. '		' → logprob: -9.000506401062012
    4. ':
' → logprob: -9.500506401062012
    5. '       ' → logprob: -11.250506401062012
    6. '	       ' → logprob: -11.375506401062012
    7. '               ' → logprob: -12.125506401062012
    8. ' break' → logprob: -12.375506401062012
    9. '          ' → logprob: -13.125506401062012
    10. '	   ' → logprob: -13.125506401062012

Token 3521: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.14792051911354065
    2. '       ' → logprob: -2.647920608520508
    3. 'return' → logprob: -3.147920608520508
    4. '           ' → logprob: -4.147920608520508
    5. ' break' → logprob: -4.897920608520508
    6. '	break' → logprob: -8.022920608520508
    7. '               ' → logprob: -9.147920608520508
    8. ' return' → logprob: -10.147920608520508
    9. '   ' → logprob: -11.397920608520508
    10. '		' → logprob: -12.147920608520508

Token 3522: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001998346531763673
    2. '        
' → logprob: -6.501998424530029
    3. '
' → logprob: -8.626997947692871
    4. '	' → logprob: -8.751997947692871
    5. '		
' → logprob: -10.001997947692871
    6. 'n' → logprob: -10.501997947692871
    7. '<|end|>' → logprob: -10.876997947692871
    8. '	   ' → logprob: -11.376997947692871
    9. '```' → logprob: -11.376997947692871
    10. '    
' → logprob: -12.001997947692871

Token 3523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022010602697264403
    2. 'n' → logprob: -9.25022029876709
    3. 'p' → logprob: -10.00022029876709
    4. '   ' → logprob: -10.37522029876709
    5. '	' → logprob: -10.62522029876709
    6. '        
' → logprob: -11.87522029876709
    7. '```' → logprob: -11.87522029876709
    8. '	   ' → logprob: -12.25022029876709
    9. '
' → logprob: -13.37522029876709
    10. 'import' → logprob: -14.75022029876709

Token 3524: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.25891390442848206
    2. '       ' → logprob: -1.5089138746261597
    3. 'p' → logprob: -5.008913993835449
    4. '   ' → logprob: -8.50891399383545
    5. ' n' → logprob: -10.50891399383545
    6. 'import' → logprob: -11.50891399383545
    7. 'j' → logprob: -11.88391399383545
    8. '```' → logprob: -12.13391399383545
    9. 't' → logprob: -12.38391399383545
    10. '        
' → logprob: -12.50891399383545

Token 3525: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06208251789212227
    2. '=' → logprob: -2.812082529067993
    3. '=int' → logprob: -9.437082290649414
    4. '   ' → logprob: -10.812082290649414
    5. '       ' → logprob: -11.437082290649414
    6. 'int' → logprob: -13.937082290649414
    7. 'n' → logprob: -13.937082290649414
    8. '    ' → logprob: -14.437082290649414
    9. '        ' → logprob: -14.937082290649414
    10. '           ' → logprob: -15.062082290649414

Token 3526: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '       ' → logprob: -18.000335693359375
    4. '   ' → logprob: -19.125335693359375
    5. '	int' → logprob: -21.375335693359375
    6. '(int' → logprob: -22.000335693359375
    7. '=int' → logprob: -22.250335693359375
    8. '[int' → logprob: -22.250335693359375
    9. '<int' → logprob: -23.500335693359375
    10. ' ' → logprob: -23.500335693359375

Token 3527: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.749814019713085e-06
    2. 'n' → logprob: -12.250006675720215
    3. '(' → logprob: -13.375006675720215
    4. ' (' → logprob: -16.00000762939453
    5. '(input' → logprob: -16.50000762939453
    6. '(
' → logprob: -18.00000762939453
    7. ' n' → logprob: -18.12500762939453
    8. '(sys' → logprob: -18.37500762939453
    9. '(next' → logprob: -18.50000762939453
    10. '()' → logprob: -18.50000762939453

Token 3528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11317228525876999
    2. ')
' → logprob: -2.2381722927093506
    3. '       ' → logprob: -8.73817253112793
    4. ' )' → logprob: -9.48817253112793
    5. '   ' → logprob: -9.86317253112793
    6. ' )
' → logprob: -11.36317253112793
    7. '.strip' → logprob: -11.48817253112793
    8. ')
' → logprob: -11.48817253112793
    9. '-' → logprob: -12.36317253112793
    10. ')n' → logprob: -12.73817253112793

Token 3529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02365037053823471
    2. 'p' → logprob: -3.7736504077911377
    3. 'pipes' → logprob: -8.898650169372559
    4. 't' → logprob: -9.148650169372559
    5. '   ' → logprob: -9.773650169372559
    6. '	' → logprob: -10.273650169372559
    7. '	p' → logprob: -10.648650169372559
    8. '        
' → logprob: -11.023650169372559
    9. '```' → logprob: -11.773650169372559
    10. 'j' → logprob: -11.898650169372559

Token 3530: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.012470686808228493
    2. '       ' → logprob: -4.887470722198486
    3. 'pipes' → logprob: -5.387470722198486
    4. '   ' → logprob: -8.637470245361328
    5. 'pipe' → logprob: -9.512470245361328
    6. 't' → logprob: -11.637470245361328
    7. 'P' → logprob: -11.637470245361328
    8. '        
' → logprob: -13.012470245361328
    9. 'pip' → logprob: -13.387470245361328
    10. ' p' → logprob: -13.887470245361328

Token 3531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44552454352378845
    2. ' =' → logprob: -1.0705245733261108
    3. '[]' → logprob: -5.0705246925354
    4. '.' → logprob: -6.0705246925354
    5. '   ' → logprob: -6.0705246925354
    6. '=[]' → logprob: -6.3205246925354
    7. '[' → logprob: -6.8205246925354
    8. '_lengths' → logprob: -7.6955246925354
    9. '.readline' → logprob: -8.195524215698242
    10. ')' → logprob: -8.445524215698242

Token 3532: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08227170258760452
    2. '[list' → logprob: -2.5822718143463135
    3. ' list' → logprob: -6.082271575927734
    4. '[' → logprob: -6.832271575927734
    5. ' [' → logprob: -12.082271575927734
    6. '[]' → logprob: -13.082271575927734
    7. '[len' → logprob: -13.582271575927734
    8. '[int' → logprob: -13.707271575927734
    9. '[p' → logprob: -14.082271575927734
    10. '[input' → logprob: -14.332271575927734

Token 3533: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.641841820150148e-05
    2. 'map' → logprob: -11.50002670288086
    3. '()' → logprob: -11.62502670288086
    4. '(' → logprob: -12.75002670288086
    5. '(int' → logprob: -13.00002670288086
    6. '[int' → logprob: -14.50002670288086
    7. '	map' → logprob: -15.37502670288086
    8. '   ' → logprob: -15.37502670288086
    9. ' map' → logprob: -15.37502670288086
    10. '.map' → logprob: -15.50002670288086

Token 3534: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006733018439263105
    2. 'int' → logprob: -5.006732940673828
    3. '(' → logprob: -12.006732940673828
    4. '[int' → logprob: -12.006732940673828
    5. '(input' → logprob: -13.381732940673828
    6. 'input' → logprob: -13.881732940673828
    7. '<int' → logprob: -14.256732940673828
    8. '(
' → logprob: -14.381732940673828
    9. '=int' → logprob: -14.506732940673828
    10. ' int' → logprob: -14.881732940673828

Token 3535: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1348426640033722
    2. ',input' → logprob: -2.13484263420105
    3. ',' → logprob: -5.134842872619629
    4. '(' → logprob: -6.884842872619629
    5. 'input' → logprob: -7.134842872619629
    6. '(sys' → logprob: -10.134842872619629
    7. '(
' → logprob: -10.384842872619629
    8. ' input' → logprob: -11.009842872619629
    9. '   ' → logprob: -11.259842872619629
    10. '=input' → logprob: -11.259842872619629

Token 3536: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.56102097814437e-05
    2. ' input' → logprob: -10.000045776367188
    3. '       ' → logprob: -17.000045776367188
    4. '   ' → logprob: -17.000045776367188
    5. '(input' → logprob: -17.625045776367188
    6. '           ' → logprob: -18.000045776367188
    7. '	input' → logprob: -18.750045776367188
    8. '<input' → logprob: -19.250045776367188
    9. ',input' → logprob: -19.625045776367188
    10. 'sys' → logprob: -19.750045776367188

Token 3537: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.981667537620524e-06
    2. '()' → logprob: -13.375001907348633
    3. '()))' → logprob: -15.625001907348633
    4. '.strip' → logprob: -16.875001907348633
    5. '()
' → logprob: -17.000001907348633
    6. '())' → logprob: -17.375001907348633
    7. '.readline' → logprob: -17.500001907348633
    8. '()[' → logprob: -18.000001907348633
    9. '(' → logprob: -18.500001907348633
    10. ' ().' → logprob: -18.875001907348633

Token 3538: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.17577223479747772
    2. 'strip' → logprob: -1.9257721900939941
    3. 'rstrip' → logprob: -4.175772190093994
    4. 'read' → logprob: -10.300772666931152
    5. '(split' → logprob: -11.050772666931152
    6. '_split' → logprob: -12.425772666931152
    7. '().' → logprob: -12.800772666931152
    8. '(strip' → logprob: -12.925772666931152
    9. ' split' → logprob: -13.425772666931152
    10. ' strip' → logprob: -13.675772666931152

Token 3539: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009168725460767746
    2. '))' → logprob: -5.25916862487793
    3. '()))
' → logprob: -6.13416862487793
    4. '()' → logprob: -6.38416862487793
    5. '(' → logprob: -10.75916862487793
    6. '()));' → logprob: -11.00916862487793
    7. '()
' → logprob: -12.00916862487793
    8. '   ' → logprob: -12.13416862487793
    9. '().' → logprob: -12.50916862487793
    10. ''))' → logprob: -12.63416862487793

Token 3540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11338910460472107
    2. 'j' → logprob: -2.238389015197754
    3. '	' → logprob: -8.113389015197754
    4. '	j' → logprob: -8.488389015197754
    5. ' j' → logprob: -10.863389015197754
    6. '   ' → logprob: -11.238389015197754
    7. '        
' → logprob: -11.863389015197754
    8. '```' → logprob: -12.113389015197754
    9. '[j' → logprob: -12.488389015197754
    10. '
' → logprob: -12.988389015197754

Token 3541: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.004117699805647135
    2. '       ' → logprob: -5.504117488861084
    3. '	j' → logprob: -10.879117965698242
    4. 'if' → logprob: -11.379117965698242
    5. ' j' → logprob: -12.379117965698242
    6. '   ' → logprob: -12.879117965698242
    7. '	' → logprob: -13.504117965698242
    8. '        
' → logprob: -15.254117965698242
    9. '
' → logprob: -15.504117965698242
    10. '_j' → logprob: -15.629117965698242

Token 3542: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740840494632721
    2. ' =' → logprob: -0.9740840196609497
    3. '   ' → logprob: -13.09908390045166
    4. ' ' → logprob: -13.47408390045166
    5. 's' → logprob: -13.97408390045166
    6. '[' → logprob: -14.47408390045166
    7. '=[]' → logprob: -14.72408390045166
    8. '_' → logprob: -15.22408390045166
    9. ')' → logprob: -15.22408390045166
    10. '	' → logprob: -15.34908390045166

Token 3543: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00020354038861114532
    2. ' list' → logprob: -8.500203132629395
    3. '(list' → logprob: -18.87520408630371
    4. '=list' → logprob: -19.37520408630371
    5. 'map' → logprob: -22.00020408630371
    6. '[list' → logprob: -22.25020408630371
    7. '	list' → logprob: -22.50020408630371
    8. 'List' → logprob: -22.62520408630371
    9. '   ' → logprob: -22.87520408630371
    10. '.list' → logprob: -23.75020408630371

Token 3544: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001019590417854488
    2. '(int' → logprob: -7.501019477844238
    3. '(' → logprob: -7.751019477844238
    4. '(
' → logprob: -10.626019477844238
    5. 'map' → logprob: -11.501019477844238
    6. '.map' → logprob: -14.251019477844238
    7. ' (' → logprob: -15.126019477844238
    8. ' map' → logprob: -15.626019477844238
    9. '(list' → logprob: -15.626019477844238
    10. ',map' → logprob: -16.126020431518555

Token 3545: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03825550153851509
    2. 'int' → logprob: -3.288255453109741
    3. '[int' → logprob: -8.66325569152832
    4. '=int' → logprob: -10.91325569152832
    5. '<int' → logprob: -11.28825569152832
    6. ',int' → logprob: -12.53825569152832
    7. ']int' → logprob: -12.91325569152832
    8. ' int' → logprob: -13.03825569152832
    9. '(' → logprob: -13.91325569152832
    10. ':int' → logprob: -14.66325569152832

Token 3546: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.015757950022816658
    2. ',' → logprob: -4.890758037567139
    3. 'int' → logprob: -5.140758037567139
    4. ',int' → logprob: -6.140758037567139
    5. '[int' → logprob: -9.76575756072998
    6. '=int' → logprob: -10.64075756072998
    7. '(' → logprob: -11.64075756072998
    8. '   ' → logprob: -11.76575756072998
    9. ' int' → logprob: -12.89075756072998
    10. '           ' → logprob: -13.14075756072998

Token 3547: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.729906196298543e-06
    2. 'input' → logprob: -11.750009536743164
    3. ' int' → logprob: -13.250009536743164
    4. '(int' → logprob: -16.875009536743164
    5. '[int' → logprob: -19.750009536743164
    6. ' ' → logprob: -21.750009536743164
    7. ' input' → logprob: -21.875009536743164
    8. '   ' → logprob: -22.375009536743164
    9. 'map' → logprob: -22.875009536743164
    10. 'ints' → logprob: -23.000009536743164

Token 3548: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -15.000000953674316
    3. '.split' → logprob: -15.375000953674316
    4. '.' → logprob: -17.125
    5. ' ().' → logprob: -17.375
    6. '   ' → logprob: -17.5
    7. '.readline' → logprob: -17.75
    8. '       ' → logprob: -18.0
    9. '()[' → logprob: -18.25
    10. ').' → logprob: -18.5

Token 3549: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.836499985889532e-05
    2. 'strip' → logprob: -9.7500581741333
    3. ' split' → logprob: -16.750059127807617
    4. '(split' → logprob: -17.875059127807617
    5. 'map' → logprob: -18.000059127807617
    6. 'skip' → logprob: -18.500059127807617
    7. '.split' → logprob: -18.875059127807617
    8. 'spl' → logprob: -19.125059127807617
    9. 'rstrip' → logprob: -20.750059127807617
    10. '_split' → logprob: -21.125059127807617

Token 3550: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.31858786940574646
    2. '()))
' → logprob: -1.3185878992080688
    3. '()' → logprob: -5.318587779998779
    4. '())' → logprob: -8.318588256835938
    5. '))' → logprob: -10.068588256835938
    6. '())))
' → logprob: -10.693588256835938
    7. '()))

' → logprob: -10.693588256835938
    8. '()[' → logprob: -11.193588256835938
    9. '().' → logprob: -11.318588256835938
    10. '()))
' → logprob: -11.443588256835938

Token 3551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03653354197740555
    2. '
' → logprob: -3.4115335941314697
    3. 'S' → logprob: -6.786533355712891
    4. 'J' → logprob: -7.161533355712891
    5. 'if' → logprob: -7.786533355712891
    6. '        
' → logprob: -8.41153335571289
    7. 'j' → logprob: -9.28653335571289
    8. 'n' → logprob: -9.78653335571289
    9. '#' → logprob: -10.16153335571289
    10. ' if' → logprob: -10.53653335571289

Token 3552: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.0009646998951211572
    2. '       ' → logprob: -7.125964641571045
    3. 'if' → logprob: -10.125965118408203
    4. 's' → logprob: -10.125965118408203
    5. 'p' → logprob: -10.250965118408203
    6. 'J' → logprob: -10.375965118408203
    7. '   ' → logprob: -12.125965118408203
    8. 'import' → logprob: -12.875965118408203
    9. 'j' → logprob: -13.375965118408203
    10. ' S' → logprob: -13.625965118408203

Token 3553: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31397536396980286
    2. ' =' → logprob: -1.3139753341674805
    3. '=sum' → logprob: -7.3139753341674805
    4. '   ' → logprob: -11.06397533416748
    5. '_sum' → logprob: -11.06397533416748
    6. 'sum' → logprob: -11.93897533416748
    7. '_total' → logprob: -13.31397533416748
    8. '       ' → logprob: -13.56397533416748
    9. ' +=' → logprob: -13.81397533416748
    10. '+=' → logprob: -13.93897533416748

Token 3554: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.688212614681106e-05
    2. ' sum' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.000017166137695
    4. '       ' → logprob: -18.500017166137695
    5. '(sum' → logprob: -20.500017166137695
    6. '	sum' → logprob: -20.500017166137695
    7. '=sum' → logprob: -21.125017166137695
    8. '_sum' → logprob: -22.250017166137695
    9. '           ' → logprob: -22.375017166137695
    10. '    ' → logprob: -22.375017166137695

Token 3555: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.584861744660884e-05
    2. 'p' → logprob: -10.000045776367188
    3. '(' → logprob: -15.125045776367188
    4. '(
' → logprob: -16.500045776367188
    5. '   ' → logprob: -17.875045776367188
    6. '_p' → logprob: -18.875045776367188
    7. ' (' → logprob: -19.000045776367188
    8. ' p' → logprob: -20.125045776367188
    9. 'import' → logprob: -20.125045776367188
    10. '[p' → logprob: -20.250045776367188

Token 3556: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13285261392593384
    2. '       ' → logprob: -2.132852554321289
    3. ')
' → logprob: -5.882852554321289
    4. ' +' → logprob: -6.882852554321289
    5. '<|end|>' → logprob: -7.132852554321289
    6. '
' → logprob: -7.257852554321289
    7. '+' → logprob: -8.007852554321289
    8. '   ' → logprob: -10.007852554321289
    9. '	' → logprob: -10.007852554321289
    10. ' )' → logprob: -10.757852554321289

Token 3557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20142951607704163
    2. 'J' → logprob: -1.7014294862747192
    3. ' J' → logprob: -11.20142936706543
    4. '   ' → logprob: -13.32642936706543
    5. '	J' → logprob: -15.20142936706543
    6. '```' → logprob: -15.32642936706543
    7. '	' → logprob: -16.20142936706543
    8. '           ' → logprob: -16.32642936706543
    9. 'if' → logprob: -16.70142936706543
    10. '      ' → logprob: -16.82642936706543

Token 3558: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' (adapté à ' J') → logprob: -0.0007513784803450108
    2. 'if' → logprob: -7.250751495361328
    3. '       ' → logprob: -10.125751495361328
    4. ' J' → logprob: -14.000751495361328
    5. '   ' → logprob: -14.750751495361328
    6. ' if' → logprob: -16.625751495361328
    7. '        
' → logprob: -18.500751495361328
    8. '
' → logprob: -19.250751495361328
    9. '           ' → logprob: -19.500751495361328
    10. '	J' → logprob: -19.500751495361328

Token 3559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759459733963013
    2. ' =' → logprob: -0.8259459733963013
    3. '       ' → logprob: -12.700945854187012
    4. '   ' → logprob: -12.950945854187012
    5. '        ' → logprob: -14.825945854187012
    6. '    ' → logprob: -15.575945854187012
    7. '=sum' → logprob: -15.825945854187012
    8. '	' → logprob: -16.075946807861328
    9. ')' → logprob: -16.450946807861328
    10. ' ' → logprob: -16.700946807861328

Token 3560: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0015028368216007948
    2. ' sum' → logprob: -6.501502990722656
    3. '0' → logprob: -14.626502990722656
    4. '   ' → logprob: -17.626502990722656
    5. '(sum' → logprob: -17.876502990722656
    6. '	sum' → logprob: -19.751502990722656
    7. ' ' → logprob: -20.001502990722656
    8. '=sum' → logprob: -20.751502990722656
    9. '
' → logprob: -21.251502990722656
    10. '.sum' → logprob: -21.876502990722656

Token 3561: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -3.054500666621607e-06
    2. 'j' → logprob: -12.75000286102295
    3. '[j' → logprob: -16.125003814697266
    4. '(' → logprob: -17.625003814697266
    5. '	j' → logprob: -19.250003814697266
    6. '(
' → logprob: -19.500003814697266
    7. '   ' → logprob: -20.000003814697266
    8. ' (' → logprob: -20.500003814697266
    9. ' j' → logprob: -21.125003814697266
    10. ',j' → logprob: -21.500003814697266

Token 3562: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036750135477632284
    2. '       ' → logprob: -5.6286749839782715
    3. ')
' → logprob: -9.62867546081543
    4. ' )' → logprob: -13.62867546081543
    5. '<|end|>' → logprob: -13.62867546081543
    6. '[j' → logprob: -13.75367546081543
    7. '   ' → logprob: -14.37867546081543
    8. '
' → logprob: -14.50367546081543
    9. '))' → logprob: -15.00367546081543
    10. 'j' → logprob: -15.00367546081543

Token 3563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07924666255712509
    2. 'j' → logprob: -2.579246759414673
    3. '   ' → logprob: -8.704246520996094
    4. '
' → logprob: -9.204246520996094
    5. '        
' → logprob: -9.954246520996094
    6. '	j' → logprob: -10.954246520996094
    7. '```' → logprob: -11.579246520996094
    8. 'sorted' → logprob: -12.579246520996094
    9. ' j' → logprob: -12.829246520996094
    10. '_j' → logprob: -13.454246520996094

Token 3564: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00029160623671486974
    2. '       ' → logprob: -8.62529182434082
    3. 'if' → logprob: -9.50029182434082
    4. '   ' → logprob: -10.37529182434082
    5. 'sorted' → logprob: -13.37529182434082
    6. ' j' → logprob: -13.87529182434082
    7. '	j' → logprob: -14.37529182434082
    8. 'p' → logprob: -14.50029182434082
    9. '#' (adapté à ' #') → logprob: -14.50029182434082
    10. '        
' → logprob: -14.87529182434082

Token 3565: ' Trier' (ID: 191551)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003348224563524127
    2. 'if' → logprob: -6.128348350524902
    3. '       ' → logprob: -6.878348350524902
    4. '   ' → logprob: -9.128348350524902
    5. 'sorted' → logprob: -11.628348350524902
    6. '#' → logprob: -12.503348350524902
    7. '
' → logprob: -13.003348350524902
    8. ' j' → logprob: -13.628348350524902
    9. '        
' → logprob: -13.753348350524902
    10. 'for' → logprob: -13.878348350524902

Token 3566: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.019095391035079956
    2. '       ' → logprob: -4.019095420837402
    3. '   ' → logprob: -7.269095420837402
    4. ' j' → logprob: -8.519095420837402
    5. '	j' → logprob: -11.019095420837402
    6. 'sorted' → logprob: -11.269095420837402
    7. '_j' → logprob: -11.269095420837402
    8. '(j' → logprob: -12.644095420837402
    9. '[j' → logprob: -13.394095420837402
    10. '=j' → logprob: -14.894095420837402

Token 3567: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23902928829193115
    2. 'j' → logprob: -1.6140292882919312
    3. '.sort' → logprob: -5.239029407501221
    4. ' =' → logprob: -5.489029407501221
    5. '   ' → logprob: -5.739029407501221
    6. '=' → logprob: -8.114028930664062
    7. '	j' → logprob: -8.864028930664062
    8. '=j' → logprob: -8.864028930664062
    9. ' j' → logprob: -8.989028930664062
    10. '[j' → logprob: -10.114028930664062

Token 3568: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0032879903446882963
    2. 'sorted' → logprob: -6.0032877922058105
    3. 'ascending' → logprob: -8.128288269042969
    4. 'l' → logprob: -8.378288269042969
    5. '   ' → logprob: -8.628288269042969
    6. ' j' → logprob: -10.253288269042969
    7. 'asc' → logprob: -10.628288269042969
    8. 'reverse' → logprob: -11.003288269042969
    9. '```' → logprob: -11.503288269042969
    10. 'cro' → logprob: -12.378288269042969

Token 3569: ''ordre' (ID: 124753)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.21464426815509796
    2. ')' → logprob: -2.964644193649292
    3. 'ascending' → logprob: -3.214644193649292
    4. 'j' → logprob: -3.714644193649292
    5. 'asc' → logprob: -3.714644193649292
    6. '=' → logprob: -4.589644432067871
    7. '[]' → logprob: -5.089644432067871
    8. 'orted' → logprob: -5.714644432067871
    9. 'reverse' → logprob: -5.714644432067871
    10. '```' → logprob: -5.714644432067871

Token 3570: ' cro' (ID: 11270)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00709398090839386
    2. '   ' → logprob: -5.507093906402588
    3. '       ' → logprob: -5.882093906402588
    4. '(j' → logprob: -9.882094383239746
    5. '.sort' → logprob: -10.382094383239746
    6. '_j' → logprob: -10.507094383239746
    7. '	j' → logprob: -10.507094383239746
    8. ' =' → logprob: -10.757094383239746
    9. ' j' → logprob: -10.882094383239746
    10. '=j' → logprob: -11.382094383239746

Token 3571: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.03596721589565277
    2. 'issante' → logprob: -3.4109671115875244
    3. 'issance' → logprob: -6.7859673500061035
    4. 'issants' → logprob: -7.5359673500061035
    5. 'issan' → logprob: -8.285966873168945
    6. 'iss' → logprob: -8.410966873168945
    7. 'ass' → logprob: -10.035966873168945
    8. 'issent' → logprob: -10.160966873168945
    9. 'issa' → logprob: -10.410966873168945
    10. 'issait' → logprob: -10.910966873168945

Token 3572: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16923776268959045
    2. 'j' → logprob: -2.0442378520965576
    3. '.sort' → logprob: -4.1692376136779785
    4. '   ' → logprob: -4.6692376136779785
    5. 'sorted' → logprob: -8.169238090515137
    6. '	j' → logprob: -8.794238090515137
    7. ',' → logprob: -8.919238090515137
    8. ')' → logprob: -9.169238090515137
    9. ',j' → logprob: -9.294238090515137
    10. '[j' → logprob: -9.419238090515137

Token 3573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47580787539482117
    2. 'j' → logprob: -0.9758079051971436
    3. '   ' → logprob: -6.4758076667785645
    4. '.sort' → logprob: -10.225808143615723
    5. '	j' → logprob: -10.350808143615723
    6. '[j' → logprob: -10.475808143615723
    7. ' j' → logprob: -10.600808143615723
    8. '        
' → logprob: -10.850808143615723
    9. 'sorted' → logprob: -11.100808143615723
    10. 'sort' → logprob: -11.850808143615723

Token 3574: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.04887416586279869
    2. '       ' → logprob: -3.0488741397857666
    3. '   ' → logprob: -8.298873901367188
    4. ' j' → logprob: -10.673873901367188
    5. '	j' → logprob: -11.298873901367188
    6. '        
' → logprob: -14.048873901367188
    7. '```' → logprob: -14.798873901367188
    8. '[j' → logprob: -14.923873901367188
    9. 'sorted' → logprob: -15.298873901367188
    10. '      ' → logprob: -16.298873901367188

Token 3575: '_sorted' (ID: 104993)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.006757528521120548
    2. '.' → logprob: -5.006757736206055
    3. '=' → logprob: -10.381757736206055
    4. '_sorted' → logprob: -12.631757736206055
    5. ' =' → logprob: -13.006757736206055
    6. 'sort' → logprob: -13.756757736206055
    7. '.s' → logprob: -13.756757736206055
    8. '.=' → logprob: -14.006757736206055
    9. '.sorted' → logprob: -14.131757736206055
    10. ' .' → logprob: -14.506757736206055

Token 3576: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1617828607559204
    2. '.sort' → logprob: -1.9117828607559204
    3. ' =' → logprob: -6.536782741546631
    4. '.' → logprob: -9.786783218383789
    5. '=j' → logprob: -10.036783218383789
    6. '.=' → logprob: -12.786783218383789
    7. 'sorted' → logprob: -13.536783218383789
    8. 'sort' → logprob: -14.036783218383789
    9. ')' → logprob: -14.161783218383789
    10. '_sorted' → logprob: -14.536783218383789

Token 3577: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -2.339278580620885e-06
    2. ' sorted' → logprob: -13.000001907348633
    3. '(sorted' → logprob: -20.500001907348633
    4. '   ' → logprob: -21.125001907348633
    5. '.sorted' → logprob: -22.750001907348633
    6. 'Sorted' → logprob: -23.875001907348633
    7. 'sort' → logprob: -24.750001907348633
    8. 'list' → logprob: -25.500001907348633
    9. 'j' → logprob: -25.625001907348633
    10. 'sorting' → logprob: -25.750001907348633

Token 3578: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0025158505886793137
    2. 'j' → logprob: -6.00251579284668
    3. '(' → logprob: -10.25251579284668
    4. '	j' → logprob: -13.62751579284668
    5. '[j' → logprob: -13.87751579284668
    6. '_j' → logprob: -14.00251579284668
    7. ' (' → logprob: -14.37751579284668
    8. '(
' → logprob: -14.87751579284668
    9. ' j' → logprob: -15.62751579284668
    10. ',j' → logprob: -15.62751579284668

Token 3579: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001227276516146958
    2. ')
' → logprob: -9.625123023986816
    3. '       ' → logprob: -9.875123023986816
    4. ' )' → logprob: -12.875123023986816
    5. '   ' → logprob: -13.500123023986816
    6. ',' → logprob: -15.125123023986816
    7. '[:' → logprob: -15.625123023986816
    8. ')[' → logprob: -16.1251220703125
    9. ')

' → logprob: -16.5001220703125
    10. ')
' → logprob: -16.8751220703125

Token 3580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47431546449661255
    2. 'prefix' → logprob: -0.9743154644966125
    3. ' prefix' → logprob: -9.099315643310547
    4. '```' → logprob: -9.349315643310547
    5. '(prefix' → logprob: -11.849315643310547
    6. '        
' → logprob: -11.849315643310547
    7. '   ' → logprob: -11.974315643310547
    8. 'pref' → logprob: -11.974315643310547
    9. '_prefix' → logprob: -12.224315643310547
    10. '	' → logprob: -13.099315643310547

Token 3581: ' #' (ID: 1069)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00015312091272789985
    2. '       ' → logprob: -9.000153541564941
    3. 'pref' → logprob: -10.500153541564941
    4. ' prefix' → logprob: -13.625153541564941
    5. 'pre' → logprob: -14.375153541564941
    6. '   ' → logprob: -15.125153541564941
    7. '        
' → logprob: -17.500152587890625
    8. 'from' → logprob: -17.500152587890625
    9. '(prefix' → logprob: -17.750152587890625
    10. '#' (adapté à ' #') → logprob: -18.000152587890625

Token 3582: ' Calcul' (ID: 57243)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -6.392202976712724e-06
    2. 'pref' → logprob: -12.875006675720215
    3. '       ' → logprob: -13.250006675720215
    4. ' prefix' → logprob: -13.500006675720215
    5. '   ' → logprob: -15.250006675720215
    6. 'pre' → logprob: -15.750006675720215
    7. 'from' → logprob: -16.1250057220459
    8. '#' → logprob: -16.5000057220459
    9. '(prefix' → logprob: -18.2500057220459
    10. '
' → logprob: -19.3750057220459

Token 3583: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.6540271043777466
    2. '       ' → logprob: -0.9040271043777466
    3. '_prefix' → logprob: -2.654026985168457
    4. ' prefix' → logprob: -5.779026985168457
    5. '(prefix' → logprob: -7.279026985168457
    6. 'refix' → logprob: -8.779026985168457
    7. 'pref' → logprob: -9.154026985168457
    8. '_' → logprob: -9.154026985168457
    9. '=' → logprob: -9.404026985168457
    10. 'pre' → logprob: -9.529026985168457

Token 3584: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3309612572193146
    2. 'sum' → logprob: -1.8309612274169922
    3. '   ' → logprob: -3.080961227416992
    4. '       ' → logprob: -3.330961227416992
    5. ' =' → logprob: -4.205961227416992
    6. '_prefix' → logprob: -4.830961227416992
    7. 'prefix' → logprob: -4.955961227416992
    8. '_s' → logprob: -5.205961227416992
    9. 's' → logprob: -5.705961227416992
    10. '=' → logprob: -7.830961227416992

Token 3585: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0479462556540966
    2. 'prefix' → logprob: -3.1729462146759033
    3. ' prefix' → logprob: -5.547946453094482
    4. ' =' → logprob: -7.422946453094482
    5. '(prefix' → logprob: -8.172945976257324
    6. '_prefix' → logprob: -9.672945976257324
    7. '   ' → logprob: -9.797945976257324
    8. '=' → logprob: -10.797945976257324
    9. 'pref' → logprob: -12.172945976257324
    10. 'psum' → logprob: -12.922945976257324

Token 3586: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3106324374675751
    2. 'j' → logprob: -1.4356324672698975
    3. 'prefix' → logprob: -3.6856324672698975
    4. 'c' → logprob: -6.310632228851318
    5. ' i' → logprob: -7.435632228851318
    6. ' j' → logprob: -8.310632705688477
    7. '_prefix' → logprob: -8.310632705688477
    8. '[i' → logprob: -8.685632705688477
    9. 'pref' → logprob: -9.060632705688477
    10. '_i' → logprob: -9.310632705688477

Token 3587: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.024547725915908813
    2. 'prefix' → logprob: -3.899547815322876
    3. 'i' → logprob: -6.024547576904297
    4. 'c' → logprob: -6.774547576904297
    5. ' j' → logprob: -9.399547576904297
    6. '[j' → logprob: -9.774547576904297
    7. '_j' → logprob: -9.774547576904297
    8. '_prefix' → logprob: -9.899547576904297
    9. 'len' → logprob: -9.899547576904297
    10. ' prefix' → logprob: -11.274547576904297

Token 3588: ' tri' (ID: 12665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008655465207993984
    2. 'prefix' → logprob: -4.758655548095703
    3. ' prefix' → logprob: -10.383655548095703
    4. '   ' → logprob: -13.133655548095703
    5. '(prefix' → logprob: -13.133655548095703
    6. '        
' → logprob: -13.383655548095703
    7. '	' → logprob: -13.633655548095703
    8. '
' → logprob: -13.633655548095703
    9. '_prefix' → logprob: -14.008655548095703
    10. '```' → logprob: -14.508655548095703

Token 3589: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.038493767380714417
    2. 'é' → logprob: -3.5384938716888428
    3. 'ée' → logprob: -5.038493633270264
    4. 'ées' → logprob: -7.038493633270264
    5. 'ed' → logprob: -7.538493633270264
    6. '   ' → logprob: -8.788494110107422
    7. 'e' → logprob: -8.913494110107422
    8. '[' → logprob: -9.163494110107422
    9. 'érés' → logprob: -9.163494110107422
    10. 'év' → logprob: -10.163494110107422

Token 3590: '
' (ID: 198)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.25303375720977783
    2. '       ' → logprob: -1.5030337572097778
    3. ' prefix' → logprob: -6.878033638000488
    4. '
' → logprob: -10.128033638000488
    5. '   ' → logprob: -11.378033638000488
    6. '(prefix' → logprob: -11.628033638000488
    7. '```' → logprob: -12.253033638000488
    8. '        
' → logprob: -12.628033638000488
    9. 'pref' → logprob: -12.878033638000488
    10. '_prefix' → logprob: -13.503033638000488

Token 3591: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048617683351039886
    2. 'prefix' → logprob: -3.0486176013946533
    3. '
' → logprob: -11.298617362976074
    4. ' prefix' → logprob: -11.673617362976074
    5. '   ' → logprob: -12.548617362976074
    6. '```' → logprob: -12.798617362976074
    7. '        
' → logprob: -13.548617362976074
    8. '(prefix' → logprob: -14.298617362976074
    9. 'pref' → logprob: -14.548617362976074
    10. '_prefix' → logprob: -15.048617362976074

Token 3592: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.0005773392622359097
    2. '       ' → logprob: -7.500577449798584
    3. 'pref' → logprob: -11.375576972961426
    4. ' prefix' → logprob: -11.625576972961426
    5. '   ' → logprob: -12.625576972961426
    6. '(prefix' → logprob: -15.250576972961426
    7. 'psum' → logprob: -15.500576972961426
    8. 'ps' → logprob: -16.125577926635742
    9. 'pre' → logprob: -16.500577926635742
    10. '_prefix' → logprob: -17.500577926635742

Token 3593: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.775762140750885
    2. '=' → logprob: -1.6507620811462402
    3. '_sum' → logprob: -1.6507620811462402
    4. '_' → logprob: -2.4007620811462402
    5. '[' → logprob: -2.9007620811462402
    6. '=[' → logprob: -6.15076208114624
    7. 'sum' → logprob: -6.52576208114624
    8. '_=' → logprob: -7.02576208114624
    9. '=[]' → logprob: -7.15076208114624
    10. '_s' → logprob: -7.15076208114624

Token 3594: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002249933750135824
    2. '[j' → logprob: -8.750225067138672
    3. ' [' → logprob: -9.625225067138672
    4. '[len' → logprob: -16.375225067138672
    5. '[n' → logprob: -16.500225067138672
    6. '[p' → logprob: -16.625225067138672
    7. '[class' → logprob: -17.625225067138672
    8. '[int' → logprob: -17.625225067138672
    9. '[i' → logprob: -18.125225067138672
    10. '0' → logprob: -18.250225067138672

Token 3595: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '[' → logprob: -20.75
    4. '   ' → logprob: -22.75
    5. '{' → logprob: -23.875
    6. '00' → logprob: -24.0
    7. '000' → logprob: -24.0
    8. '
' → logprob: -24.375
    9. '۰' → logprob: -24.375
    10. '_' → logprob: -24.75

Token 3596: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8132193684577942
    2. ',' → logprob: -0.9382193684577942
    3. ']
' → logprob: -2.0632193088531494
    4. '0' → logprob: -3.4382193088531494
    5. '
' → logprob: -6.5632195472717285
    6. ']+' → logprob: -6.5632195472717285
    7. ',
' → logprob: -7.4382195472717285
    8. ']*(' → logprob: -7.9382195472717285
    9. ' ]' → logprob: -8.06321907043457
    10. '[' → logprob: -8.18821907043457

Token 3597: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7835174202919006
    2. '+' → logprob: -1.7835173606872559
    3. 'for' → logprob: -1.9085173606872559
    4. '<|end|>' → logprob: -2.783517360687256
    5. ',' → logprob: -3.158517360687256
    6. '0' → logprob: -3.283517360687256
    7. ' +' → logprob: -3.908517360687256
    8. ' for' → logprob: -4.033517360687256
    9. '[' → logprob: -4.283517360687256
    10. '.append' → logprob: -5.033517360687256

Token 3598: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005296008195728064
    2. '(len' → logprob: -5.255296230316162
    3. ' (' → logprob: -10.130295753479004
    4. '(' → logprob: -11.505295753479004
    5. '((' → logprob: -11.505295753479004
    6. 'len' → logprob: -13.755295753479004
    7. '(max' → logprob: -14.505295753479004
    8. '   ' → logprob: -15.380295753479004
    9. 'n' → logprob: -15.755295753479004
    10. '(length' → logprob: -16.00529670715332

Token 3599: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011125163175165653
    2. 'len' → logprob: -4.511125087738037
    3. '(n' → logprob: -9.886125564575195
    4. '(len' → logprob: -10.761125564575195
    5. ' n' → logprob: -12.386125564575195
    6. '   ' → logprob: -14.636125564575195
    7. '	n' → logprob: -15.511125564575195
    8. '_n' → logprob: -15.886125564575195
    9. ' len' → logprob: -16.261125564575195
    10. '(' → logprob: -16.886125564575195

Token 3600: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3067948818206787
    2. ')' → logprob: -1.4317948818206787
    3. '<|end|>' → logprob: -4.556795120239258
    4. '<|end|>' → logprob: -5.806795120239258
    5. '[' → logprob: -6.306795120239258
    6. ' +' → logprob: -6.431795120239258
    7. '+
' → logprob: -6.556795120239258
    8. ']' → logprob: -6.806795120239258
    9. '1' → logprob: -7.056795120239258
    10. '   ' → logprob: -7.431795120239258

Token 3601: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003536398056894541
    2. '       ' → logprob: -6.253536224365234
    3. ' for' → logprob: -6.503536224365234
    4. '   ' → logprob: -10.128536224365234
    5. '	for' → logprob: -10.378536224365234
    6. 'prefix' → logprob: -10.503536224365234
    7. '```' → logprob: -12.128536224365234
    8. '
' → logprob: -12.753536224365234
    9. '        
' → logprob: -13.753536224365234
    10. 'i' → logprob: -16.753536224365234

Token 3602: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03009837120771408
    2. 'prefix' → logprob: -3.5300984382629395
    3. '       ' → logprob: -8.030097961425781
    4. 'i' → logprob: -11.530097961425781
    5. ' for' → logprob: -12.280097961425781
    6. '	for' → logprob: -12.530097961425781
    7. '   ' → logprob: -13.405097961425781
    8. 'j' → logprob: -13.655097961425781
    9. 'if' → logprob: -14.155097961425781
    10. ' prefix' → logprob: -14.905097961425781

Token 3603: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.5716304410016164e-05
    2. ' i' → logprob: -10.250035285949707
    3. '_i' → logprob: -15.750035285949707
    4. 'k' → logprob: -16.000036239624023
    5. '	i' → logprob: -17.250036239624023
    6. 'idx' → logprob: -17.750036239624023
    7. 'x' → logprob: -19.375036239624023
    8. '   ' → logprob: -20.250036239624023
    9. 'I' → logprob: -20.750036239624023
    10. 'c' → logprob: -20.875036239624023

Token 3604: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014845416881144047
    2. 'in' → logprob: -4.264845371246338
    3. '	in' → logprob: -8.514845848083496
    4. '    ' → logprob: -9.014845848083496
    5. '   ' → logprob: -9.139845848083496
    6. ' ' → logprob: -9.764845848083496
    7. ' i' → logprob: -10.139845848083496
    8. '1' → logprob: -10.139845848083496
    9. 'range' → logprob: -10.764845848083496
    10. '	' → logprob: -10.764845848083496

Token 3605: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. 'in' → logprob: -16.875911712646484
    4. '	range' → logprob: -17.625911712646484
    5. '1' → logprob: -18.500911712646484
    6. '   ' → logprob: -18.750911712646484
    7. '(range' → logprob: -18.875911712646484
    8. ' ' → logprob: -19.875911712646484
    9. ' in' → logprob: -20.750911712646484
    10. '
' → logprob: -20.750911712646484

Token 3606: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34785452485084534
    2. 'n' → logprob: -1.722854495048523
    3. '(n' → logprob: -2.4728546142578125
    4. '(' → logprob: -3.5978546142578125
    5. '   ' → logprob: -5.8478546142578125
    6. ' n' → logprob: -8.347854614257812
    7. '       ' → logprob: -8.847854614257812
    8. ' ' → logprob: -9.097854614257812
    9. 'i' → logprob: -9.597854614257812
    10. '0' → logprob: -10.722854614257812

Token 3607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05771513655781746
    2. 'n' → logprob: -2.9327151775360107
    3. 'i' → logprob: -5.932714939117432
    4. '0' → logprob: -9.55771541595459
    5. '   ' → logprob: -9.93271541595459
    6. '(n' → logprob: -10.80771541595459
    7. 'j' → logprob: -11.55771541595459
    8. '(' → logprob: -12.05771541595459
    9. ' ' → logprob: -12.18271541595459
    10. ' n' → logprob: -12.18271541595459

Token 3608: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012913133949041367
    2. ',n' → logprob: -4.387913227081299
    3. '   ' → logprob: -8.51291275024414
    4. ' ,' → logprob: -8.88791275024414
    5. '(n' → logprob: -10.13791275024414
    6. ',p' → logprob: -12.51291275024414
    7. ',len' → logprob: -12.63791275024414
    8. '       ' → logprob: -12.63791275024414
    9. ',
' → logprob: -13.13791275024414
    10. 'n' → logprob: -13.13791275024414

Token 3609: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006562008056789637
    2. 'i' → logprob: -7.3756561279296875
    3. ' n' → logprob: -10.625656127929688
    4. 'len' → logprob: -12.625656127929688
    5. '   ' → logprob: -13.375656127929688
    6. '	n' → logprob: -14.625656127929688
    7. ' i' → logprob: -16.875656127929688
    8. '(n' → logprob: -17.500656127929688
    9. '       ' → logprob: -17.750656127929688
    10. '    ' → logprob: -18.625656127929688

Token 3610: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003490189090371132
    2. '):' → logprob: -6.003489971160889
    3. '   ' → logprob: -7.503489971160889
    4. '       ' → logprob: -7.878489971160889
    5. ']:
' → logprob: -10.628490447998047
    6. ':
' → logprob: -10.878490447998047
    7. ' ):
' → logprob: -11.128490447998047
    8. '():
' → logprob: -12.378490447998047
    9. '+' → logprob: -12.503490447998047
    10. ':' → logprob: -12.753490447998047

Token 3611: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004692968912422657
    2. 'prefix' → logprob: -5.629693031311035
    3. '           ' → logprob: -7.754693031311035
    4. ' prefix' → logprob: -8.504693031311035
    5. '	   ' → logprob: -8.504693031311035
    6. '	       ' → logprob: -9.379693031311035
    7. '(prefix' → logprob: -9.379693031311035
    8. '   ' → logprob: -9.504693031311035
    9. '	' → logprob: -12.629693031311035
    10. '```' → logprob: -12.754693031311035

Token 3612: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.00878451019525528
    2. '       ' → logprob: -4.758784294128418
    3. ' prefix' → logprob: -8.758784294128418
    4. '   ' → logprob: -11.633784294128418
    5. '(prefix' → logprob: -13.258784294128418
    6. '	' → logprob: -13.633784294128418
    7. '           ' → logprob: -14.383784294128418
    8. '	p' → logprob: -15.133784294128418
    9. '	   ' → logprob: -16.258785247802734
    10. '_prefix' → logprob: -16.633785247802734

Token 3613: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002562137378845364
    2. 'prefix' → logprob: -8.375256538391113
    3. ' prefix' → logprob: -12.000256538391113
    4. '=' → logprob: -12.500256538391113
    5. '[' → logprob: -12.625256538391113
    6. ' [' → logprob: -13.125256538391113
    7. '[p' → logprob: -13.250256538391113
    8. '```' → logprob: -13.375256538391113
    9. '=i' → logprob: -13.625256538391113
    10. '   ' → logprob: -13.875256538391113

Token 3614: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011230080388486385
    2. ' =' → logprob: -4.511229991912842
    3. ']=' → logprob: -9.26123046875
    4. ']' → logprob: -9.51123046875
    5. '=
' → logprob: -12.01123046875
    6. ')' → logprob: -13.38623046875
    7. ')=' → logprob: -13.63623046875
    8. '=p' → logprob: -13.88623046875
    9. 'prefix' → logprob: -14.01123046875
    10. ']+=' → logprob: -14.76123046875

Token 3615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011706985533237457
    2. ' =' → logprob: -6.751170635223389
    3. '+=' → logprob: -14.876171112060547
    4. '=
' → logprob: -15.751171112060547
    5. '=p' → logprob: -16.751171112060547
    6. ' +=' → logprob: -17.501171112060547
    7. '.=' → logprob: -18.251171112060547
    8. '＝' → logprob: -18.626171112060547
    9. 'prefix' → logprob: -18.751171112060547
    10. ']=' → logprob: -18.876171112060547

Token 3616: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.676292231422849e-05
    2. ' prefix' → logprob: -11.000017166137695
    3. '(prefix' → logprob: -17.750017166137695
    4. '   ' → logprob: -18.000017166137695
    5. 'j' → logprob: -21.750017166137695
    6. '           ' → logprob: -22.125017166137695
    7. 'pref' → logprob: -22.625017166137695
    8. '_prefix' → logprob: -22.875017166137695
    9. 'refix' → logprob: -23.375017166137695
    10. ' ' → logprob: -23.500017166137695

Token 3617: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.375000953674316
    3. '[' → logprob: -17.75
    4. '   ' → logprob: -18.125
    5. '	i' → logprob: -19.0
    6. '[I' → logprob: -19.125
    7. '
' → logprob: -19.75
    8. ' i' → logprob: -20.5
    9. '[
' → logprob: -20.625
    10. ' [' → logprob: -20.625

Token 3618: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004130641929805279
    2. '-' → logprob: -5.504130840301514
    3. 'i' → logprob: -10.879130363464355
    4. '[' → logprob: -10.879130363464355
    5. '[I' → logprob: -12.254130363464355
    6. ']' → logprob: -12.504130363464355
    7. '[-' → logprob: -13.004130363464355
    8. '   ' → logprob: -14.129130363464355
    9. ' [' → logprob: -14.504130363464355
    10. '```' → logprob: -14.629130363464355

Token 3619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.25
    3. ' ' → logprob: -17.5
    4. '   ' → logprob: -18.625
    5. 'i' → logprob: -19.375
    6. '-' → logprob: -20.5
    7. '0' → logprob: -20.625
    8. '``' → logprob: -20.8125
    9. 'import' → logprob: -21.25
    10. '१' → logprob: -21.5625

Token 3620: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31709325313568115
    2. '+' → logprob: -1.3170932531356812
    3. '+j' → logprob: -5.567093372344971
    4. '+i' → logprob: -13.942092895507812
    5. '+p' → logprob: -13.942092895507812
    6. '+c' → logprob: -15.567092895507812
    7. '+r' → logprob: -16.317092895507812
    8. '+n' → logprob: -16.442092895507812
    9. '+s' → logprob: -16.567092895507812
    10. '+
' → logprob: -16.567092895507812

Token 3621: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06338013708591461
    2. ' +' → logprob: -2.813380241394043
    3. '+j' → logprob: -6.563380241394043
    4. '+p' → logprob: -15.813380241394043
    5. '+i' → logprob: -16.313379287719727
    6. '+
' → logprob: -16.313379287719727
    7. '+k' → logprob: -17.063379287719727
    8. '+c' → logprob: -17.438379287719727
    9. '＋' → logprob: -17.438379287719727
    10. '+r' → logprob: -17.688379287719727

Token 3622: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.1008713702030946e-06
    2. ' j' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.000001907348633
    4. '	j' → logprob: -19.000001907348633
    5. '$j' → logprob: -22.000001907348633
    6. '  ' → logprob: -22.000001907348633
    7. '    ' → logprob: -22.125001907348633
    8. ' ' → logprob: -22.125001907348633
    9. '_j' → logprob: -22.625001907348633
    10. '```' → logprob: -23.000001907348633

Token 3623: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.7432603272027336e-06
    2. 'sorted' → logprob: -13.500001907348633
    3. 'Sorted' → logprob: -15.250001907348633
    4. '```' → logprob: -16.875001907348633
    5. '[i' → logprob: -17.625001907348633
    6. 'i' → logprob: -17.625001907348633
    7. '_s' → logprob: -18.875001907348633
    8. '`' → logprob: -19.000001907348633
    9. 's' → logprob: -19.250001907348633
    10. '[' → logprob: -19.250001907348633

Token 3624: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4259644558478612e-05
    2. 'i' → logprob: -11.375014305114746
    3. '[' → logprob: -12.875014305114746
    4. '(i' → logprob: -16.37501335144043
    5. ' [' → logprob: -17.12501335144043
    6. '[
' → logprob: -17.50001335144043
    7. '   ' → logprob: -18.87501335144043
    8. '[j' → logprob: -18.87501335144043
    9. 's' → logprob: -19.62501335144043
    10. '	i' → logprob: -19.75001335144043

Token 3625: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025654337368905544
    2. '[i' → logprob: -6.627565383911133
    3. '[' → logprob: -7.627565383911133
    4. ' ]' → logprob: -8.252565383911133
    5. '<|end|>' → logprob: -8.377565383911133
    6. '   ' → logprob: -9.502565383911133
    7. '])' → logprob: -10.377565383911133
    8. '<|end|>' → logprob: -10.877565383911133
    9. '-' → logprob: -11.002565383911133
    10. 'i' → logprob: -11.502565383911133

Token 3626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.250036239624023
    3. '0' → logprob: -14.625036239624023
    4. '```' → logprob: -16.250036239624023
    5. ']' → logprob: -17.125036239624023
    6. '   ' → logprob: -18.000036239624023
    7. '  ' → logprob: -18.625036239624023
    8. 'i' → logprob: -19.000036239624023
    9. '`' → logprob: -19.250036239624023
    10. ')' → logprob: -19.500036239624023

Token 3627: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3628: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.22244779765605927
    2. '   ' → logprob: -1.8474477529525757
    3. '       ' → logprob: -3.3474478721618652
    4. '```' → logprob: -6.347447872161865
    5. '    
' → logprob: -6.972447872161865
    6. '	max' → logprob: -7.097447872161865
    7. '
' → logprob: -7.347447872161865
    8. '        
' → logprob: -7.347447872161865
    9. 'maximum' → logprob: -7.847447872161865
    10. ' max' → logprob: -7.972447872161865

Token 3629: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.012103053741157055
    2. '       ' → logprob: -5.512103080749512
    3. 'res' → logprob: -5.762103080749512
    4. 'ans' → logprob: -6.137103080749512
    5. 'best' → logprob: -6.887103080749512
    6. 'result' → logprob: -6.887103080749512
    7. 'answer' → logprob: -8.012103080749512
    8. 'maximum' → logprob: -8.512103080749512
    9. '```' → logprob: -9.512103080749512
    10. '   ' → logprob: -10.512103080749512

Token 3630: '_salary' (ID: 163644)
  Prédit: '_salary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_salary' → logprob: -0.1425452083349228
    2. '_' → logprob: -2.767545223236084
    3. '_s' → logprob: -3.267545223236084
    4. '_val' → logprob: -4.142545223236084
    5. '_score' → logprob: -4.767545223236084
    6. '_sal' → logprob: -5.017545223236084
    7. '_value' → logprob: -7.767545223236084
    8. '_profit' → logprob: -9.642544746398926
    9. '\' → logprob: -9.767544746398926
    10. '}_' → logprob: -10.392544746398926

Token 3631: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021055489778519
    2. '=' → logprob: -2.350210666656494
    3. '=max' → logprob: -13.600210189819336
    4. '_' → logprob: -13.975210189819336
    5. ' ' → logprob: -14.475210189819336
    6. ',' → logprob: -14.600210189819336
    7. ')' → logprob: -15.350210189819336
    8. ' ' → logprob: -15.600210189819336
    9. ' =
' → logprob: -16.100210189819336
    10. '=None' → logprob: -16.475210189819336

Token 3632: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33137351274490356
    2. 'S' → logprob: -1.7063734531402588
    3. '-S' → logprob: -3.206373453140259
    4. '-(' → logprob: -4.081373691558838
    5. 'float' → logprob: -4.206373691558838
    6. '-' → logprob: -4.706373691558838
    7. '(S' → logprob: -4.831373691558838
    8. '-s' → logprob: -5.581373691558838
    9. '-p' → logprob: -5.706373691558838
    10. 'p' → logprob: -6.206373691558838

Token 3633: '0' (ID: 15)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7605712413787842
    2. '0' → logprob: -1.1355712413787842
    3. '-S' → logprob: -2.260571241378784
    4. 'float' → logprob: -3.010571241378784
    5. '-(' → logprob: -3.635571241378784
    6. '-' → logprob: -4.010571479797363
    7. '-s' → logprob: -4.760571479797363
    8. '(S' → logprob: -5.635571479797363
    9. '-p' → logprob: -7.510571479797363
    10. '(float' → logprob: -8.260571479797363

Token 3634: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11364749073982239
    2. 'for' → logprob: -2.4886474609375
    3. ' for' → logprob: -3.7386474609375
    4. '   ' → logprob: -7.7386474609375
    5. '	for' → logprob: -9.1136474609375
    6. '
' → logprob: -10.6136474609375
    7. '```' → logprob: -10.9886474609375
    8. '<|end|>' → logprob: -11.1136474609375
    9. '        
' → logprob: -11.3636474609375
    10. '	' → logprob: -13.7386474609375

Token 3635: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0400858074426651
    2. '       ' → logprob: -3.290085792541504
    3. ' for' → logprob: -6.290085792541504
    4. '	for' → logprob: -8.665085792541504
    5. '   ' → logprob: -11.290085792541504
    6. '```' → logprob: -13.790085792541504
    7. '
' → logprob: -13.915085792541504
    8. '	' → logprob: -15.290085792541504
    9. '        
' → logprob: -15.290085792541504
    10. '	   ' → logprob: -15.915085792541504

Token 3636: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.943783253314905e-05
    2. '       ' → logprob: -9.750059127807617
    3. ' for' → logprob: -14.000059127807617
    4. '```' → logprob: -15.500059127807617
    5. '	for' → logprob: -18.500059127807617
    6. '   ' → logprob: -18.500059127807617
    7. '``' → logprob: -20.250059127807617
    8. '
' → logprob: -20.875059127807617
    9. 'from' → logprob: -22.125059127807617
    10. '_for' → logprob: -23.125059127807617

Token 3637: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.339278580620885e-06
    2. '       ' → logprob: -13.000001907348633
    3. ' for' → logprob: -16.750001907348633
    4. '   ' → logprob: -20.125001907348633
    5. '
' → logprob: -20.500001907348633
    6. '```' → logprob: -20.750001907348633
    7. '	for' → logprob: -22.125001907348633
    8. 'from' → logprob: -22.875001907348633
    9. '``' → logprob: -23.500001907348633
    10. '        
' → logprob: -24.250001907348633

Token 3638: ' :' (ID: 712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6012178659439087
    2. 'for' → logprob: -1.8512178659439087
    3. 'in' → logprob: -2.101217746734619
    4. ' =' → logprob: -2.476217746734619
    5. '=' → logprob: -3.101217746734619
    6. ' for' → logprob: -3.226217746734619
    7. '	for' → logprob: -6.601217746734619
    8. '_for' → logprob: -8.101218223571777
    9. 'range' → logprob: -8.101218223571777
    10. 'n' → logprob: -8.226218223571777

Token 3639: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43891647458076477
    2. 'for' → logprob: -1.9389164447784424
    3. 'c' → logprob: -2.1889164447784424
    4. ' for' → logprob: -3.4389164447784424
    5. 'range' → logprob: -3.5639164447784424
    6. ' ' → logprob: -4.3139166831970215
    7. ' c' → logprob: -4.3139166831970215
    8. ' range' → logprob: -4.4389166831970215
    9. 'n' → logprob: -8.688916206359863
    10. ' n' → logprob: -9.438916206359863

Token 3640: ' de' (ID: 334)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.237891674041748
    2. '_de' → logprob: -1.612891674041748
    3. ' =' → logprob: -2.237891674041748
    4. '_des' → logprob: -2.362891674041748
    5. ' de' → logprob: -2.862891674041748
    6. 'des' → logprob: -2.987891674041748
    7. '_cut' → logprob: -2.987891674041748
    8. '   ' → logprob: -3.487891674041748
    9. '=' → logprob: -3.737891674041748
    10. '       ' → logprob: -3.737891674041748

Token 3641: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3374824821949005
    2. 'cou' → logprob: -1.7124824523925781
    3. 'cuts' → logprob: -2.462482452392578
    4. 'cut' → logprob: -4.337482452392578
    5. 'segments' → logprob: -5.462482452392578
    6. '```' → logprob: -6.962482452392578
    7. 'dec' → logprob: -7.462482452392578
    8. 'cout' → logprob: -7.837482452392578
    9. 'break' → logprob: -7.962482452392578
    10. '#' → logprob: -8.337482452392578

Token 3642: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.00314171239733696
    2. '_' → logprob: -6.3781418800354
    3. 'es' → logprob: -7.3781418800354
    4. 'cuts' → logprob: -8.253141403198242
    5. '_cut' → logprob: -8.628141403198242
    6. ' cuts' → logprob: -9.128141403198242
    7. 's' → logprob: -9.753141403198242
    8. 't' → logprob: -9.878141403198242
    9. 'u' → logprob: -10.003141403198242
    10. 'ure' → logprob: -10.878141403198242

Token 3643: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34150779247283936
    2. 'for' → logprob: -2.216507911682129
    3. 'in' → logprob: -2.841507911682129
    4. '=' → logprob: -2.841507911682129
    5. ' =' → logprob: -3.841507911682129
    6. ' for' → logprob: -3.966507911682129
    7. '+' → logprob: -4.341507911682129
    8. 'range' → logprob: -5.716507911682129
    9. ' +' → logprob: -6.091507911682129
    10. '   ' → logprob: -6.216507911682129

Token 3644: ' varie' (ID: 103216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4560258090496063
    2. ' for' → logprob: -1.2060258388519287
    3. '       ' → logprob: -2.7060258388519287
    4. '	for' → logprob: -11.456026077270508
    5. '   ' → logprob: -12.331026077270508
    6. ' ' → logprob: -15.581026077270508
    7. '	' → logprob: -15.706026077270508
    8. 'range' → logprob: -15.956026077270508
    9. '
' → logprob: -16.206026077270508
    10. '#' → logprob: -16.331026077270508

Token 3645: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06924367696046829
    2. 'from' → logprob: -3.5692436695098877
    3. 'in' → logprob: -3.9442436695098877
    4. ' from' → logprob: -5.319243907928467
    5. ' =' → logprob: -5.569243907928467
    6. '       ' → logprob: -5.819243907928467
    7. '=' → logprob: -6.319243907928467
    8. 'range' → logprob: -6.569243907928467
    9. '   ' → logprob: -6.819243907928467
    10. 'for' → logprob: -6.944243907928467

Token 3646: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'range' → logprob: -18.000003814697266
    4. 'c' → logprob: -18.500003814697266
    5. '1' → logprob: -18.625003814697266
    6. '   ' → logprob: -19.000003814697266
    7. '۰' → logprob: -19.750003814697266
    8. 'for' → logprob: -20.000003814697266
    9. 'n' → logprob: -20.000003814697266
    10. '=' → logprob: -20.500003814697266

Token 3647: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. 'range' → logprob: -19.375
    4. '1' → logprob: -19.75
    5. 'n' → logprob: -20.375
    6. 'c' → logprob: -20.625
    7. '０' → logprob: -21.0
    8. '
' → logprob: -21.125
    9. '۰' → logprob: -21.25
    10. '   ' → logprob: -21.375

Token 3648: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5548396706581116
    2. '       ' → logprob: -1.9298396110534668
    3. ' to' → logprob: -1.9298396110534668
    4. '   ' → logprob: -3.304839611053467
    5. '<|end|>' → logprob: -4.054839611053467
    6. 'to' → logprob: -4.179839611053467
    7. '        ' → logprob: -4.429839611053467
    8. '    ' → logprob: -4.679839611053467
    9. ' ,' → logprob: -4.804839611053467
    10. ' for' → logprob: -5.679839611053467

Token 3649: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011723674833774567
    2. ' n' → logprob: -6.7511725425720215
    3. '(n' → logprob: -13.376172065734863
    4. '   ' → logprob: -14.376172065734863
    5. '	n' → logprob: -17.12617301940918
    6. '_n' → logprob: -18.12617301940918
    7. '
' → logprob: -18.50117301940918
    8. ' (' → logprob: -18.87617301940918
    9. '[n' → logprob: -19.25117301940918
    10. '$n' → logprob: -19.50117301940918

Token 3650: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003326595760881901
    2. ' -' → logprob: -5.753326416015625
    3. '   ' → logprob: -8.878326416015625
    4. ':' → logprob: -12.753326416015625
    5. '       ' → logprob: -13.128326416015625
    6. ' ' → logprob: -13.628326416015625
    7. '	' → logprob: -14.128326416015625
    8. '```' → logprob: -14.503326416015625
    9. ':
' → logprob: -14.753326416015625
    10. '1' → logprob: -14.878326416015625

Token 3651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '2' → logprob: -17.625003814697266
    5. 'n' → logprob: -17.875003814697266
    6. '１' → logprob: -18.375003814697266
    7. '#' → logprob: -18.375003814697266
    8. '```' → logprob: -18.875003814697266
    9. '0' → logprob: -19.375003814697266
    10. '۱' → logprob: -19.500003814697266

Token 3652: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006319800857454538
    2. ' for' → logprob: -5.131319999694824
    3. 'for' → logprob: -8.881319999694824
    4. '	for' → logprob: -9.131319999694824
    5. '   ' → logprob: -9.256319999694824
    6. '<|end|>' → logprob: -10.506319999694824
    7. '	   ' → logprob: -11.631319999694824
    8. '	' → logprob: -13.131319999694824
    9. '<|end|>' → logprob: -13.131319999694824
    10. '
' → logprob: -13.256319999694824

Token 3653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003704933915287256
    2. 'for' → logprob: -8.625370025634766
    3. ' for' → logprob: -8.875370025634766
    4. '   ' → logprob: -10.375370025634766
    5. '```' → logprob: -11.250370025634766
    6. '	for' → logprob: -12.375370025634766
    7. '	' → logprob: -14.000370025634766
    8. '	   ' → logprob: -14.375370025634766
    9. '<|end|>' → logprob: -14.375370025634766
    10. '           ' → logprob: -16.125370025634766

Token 3654: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5783510804176331
    2. 'for' → logprob: -0.8283510804176331
    3. ' for' → logprob: -6.078351020812988
    4. '   ' → logprob: -9.703351020812988
    5. '	for' → logprob: -10.078351020812988
    6. '```' → logprob: -11.328351020812988
    7. '
' → logprob: -14.328351020812988
    8. '	' → logprob: -14.703351020812988
    9. '	   ' → logprob: -15.328351020812988
    10. '           ' → logprob: -15.953351020812988

Token 3655: ' salaire' (ID: 135427)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5761324167251587
    2. '       ' → logprob: -0.8261324167251587
    3. ' for' → logprob: -8.576132774353027
    4. '   ' → logprob: -12.701132774353027
    5. '	for' → logprob: -13.701132774353027
    6. '```' → logprob: -16.07613182067871
    7. '	' → logprob: -18.07613182067871
    8. '        
' → logprob: -18.07613182067871
    9. '
' → logprob: -18.20113182067871
    10. '           ' → logprob: -18.20113182067871

Token 3656: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6905766129493713
    2. ' =' → logprob: -0.8155766129493713
    3. 'for' → logprob: -3.0655765533447266
    4. ' for' → logprob: -5.315576553344727
    5. '   ' → logprob: -5.815576553344727
    6. '       ' → logprob: -7.440576553344727
    7. ')' → logprob: -7.815576553344727
    8. 'max' → logprob: -8.940576553344727
    9. '_for' → logprob: -8.940576553344727
    10. ' ' → logprob: -9.690576553344727

Token 3657: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7896472215652466
    2. '(c' → logprob: -1.1646472215652466
    3. '0' → logprob: -1.6646472215652466
    4. 'max' → logprob: -3.414647102355957
    5. ' ' → logprob: -5.914647102355957
    6. ' max' → logprob: -6.164647102355957
    7. '   ' → logprob: -6.789647102355957
    8. '(' → logprob: -6.914647102355957
    9. 'lambda' → logprob: -6.914647102355957
    10. 'for' → logprob: -7.039647102355957

Token 3658: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00023214559769257903
    2. '(c' → logprob: -8.500231742858887
    3. ' c' → logprob: -10.625231742858887
    4. '   ' → logprob: -13.250231742858887
    5. ')c' → logprob: -14.000231742858887
    6. '
' → logprob: -15.000231742858887
    7. 'i' → logprob: -15.125231742858887
    8. 'n' → logprob: -15.250231742858887
    9. ' (' → logprob: -15.375231742858887
    10. '	c' → logprob: -15.500231742858887

Token 3659: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002477677771821618
    2. ' +' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.377477645874023
    4. ')+' → logprob: -15.627477645874023
    5. '+
' → logprob: -15.752477645874023
    6. '
' → logprob: -17.252477645874023
    7. ')' → logprob: -17.502477645874023
    8. ' ' → logprob: -17.752477645874023
    9. '＋' → logprob: -17.877477645874023
    10. '	' → logprob: -18.252477645874023

Token 3660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. '+' → logprob: -11.250015258789062
    3. ' ' → logprob: -14.375015258789062
    4. '```' → logprob: -14.500015258789062
    5. '   ' → logprob: -14.625015258789062
    6. ')' → logprob: -16.000015258789062
    7. '0' → logprob: -16.500015258789062
    8. '
' → logprob: -16.625015258789062
    9. ' +' → logprob: -18.125015258789062
    10. '=' → logprob: -19.125015258789062

Token 3661: ')*(' (ID: 44406)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31543850898742676
    2. ')' → logprob: -1.6904385089874268
    3. '*' → logprob: -2.5654385089874268
    4. '*(' → logprob: -4.815438270568848
    5. ')*(' → logprob: -7.315438270568848
    6. ')*' → logprob: -7.815438270568848
    7. '   ' → logprob: -10.940438270568848
    8. '*)' → logprob: -11.940438270568848
    9. ' )' → logprob: -12.690438270568848
    10. ' ' → logprob: -13.315438270568848

Token 3662: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.004498485010117292
    2. '(S' → logprob: -5.504498481750488
    3. 'const' → logprob: -7.879498481750488
    4. ' S' → logprob: -10.254498481750488
    5. ' (' → logprob: -12.879498481750488
    6. '(const' → logprob: -13.879498481750488
    7. '   ' → logprob: -14.004498481750488
    8. 'C' → logprob: -14.629498481750488
    9. 'Const' → logprob: -15.004498481750488
    10. ' ' → logprob: -15.129498481750488

Token 3663: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38687679171562195
    2. '+' → logprob: -1.1368768215179443
    3. ' plus' → logprob: -12.511877059936523
    4. ')' → logprob: -14.511877059936523
    5. ' ' → logprob: -14.511877059936523
    6. '+j' → logprob: -14.761877059936523
    7. ' +
' → logprob: -15.386877059936523
    8. '+
' → logprob: -16.386877059936523
    9. '＋' → logprob: -16.636877059936523
    10. ')+' → logprob: -16.636877059936523

Token 3664: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.00020473242329899222
    2. ' J' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.500205039978027
    4. '(J' → logprob: -14.750205039978027
    5. ' ' → logprob: -15.375205039978027
    6. '(' → logprob: -17.50020408630371
    7. '  ' → logprob: -17.75020408630371
    8. 'j' → logprob: -17.75020408630371
    9. '```' → logprob: -18.12520408630371
    10. '`' → logprob: -18.12520408630371

Token 3665: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0059523796662688255
    2. '-' → logprob: -5.13095235824585
    3. '-prefix' → logprob: -11.005952835083008
    4. '        ' → logprob: -13.255952835083008
    5. '       ' → logprob: -13.505952835083008
    6. ')' → logprob: -13.755952835083008
    7. ' ' → logprob: -14.255952835083008
    8. '           ' → logprob: -14.380952835083008
    9. ' ' → logprob: -14.630952835083008
    10. '   ' → logprob: -15.130952835083008

Token 3666: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00015860427811276168
    2. ' prefix' → logprob: -8.750158309936523
    3. '(prefix' → logprob: -16.500158309936523
    4. '   ' → logprob: -18.250158309936523
    5. '_prefix' → logprob: -20.750158309936523
    6. '```' → logprob: -21.000158309936523
    7. '       ' → logprob: -22.125158309936523
    8. 'refix' → logprob: -22.500158309936523
    9. '           ' → logprob: -23.375158309936523
    10. '``' → logprob: -23.625158309936523

Token 3667: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.318681188422488e-05
    2. '[' → logprob: -11.37501335144043
    3. ' [' → logprob: -14.50001335144043
    4. ')[' → logprob: -14.87501335144043
    5. '[i' → logprob: -14.87501335144043
    6. ')' → logprob: -16.25001335144043
    7. '   ' → logprob: -16.50001335144043
    8. ')c' → logprob: -16.87501335144043
    9. '(c' → logprob: -17.62501335144043
    10. ']' → logprob: -18.62501335144043

Token 3668: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005658217705786228
    2. '[c' → logprob: -5.380658149719238
    3. '])
' → logprob: -7.130658149719238
    4. ')' → logprob: -9.380658149719238
    5. '       ' → logprob: -9.505658149719238
    6. '   ' → logprob: -10.755658149719238
    7. '[i' → logprob: -10.755658149719238
    8. ']' → logprob: -11.130658149719238
    9. ''])' → logprob: -12.630658149719238
    10. '[' → logprob: -12.630658149719238

Token 3669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021998681768309325
    2. 'for' → logprob: -8.75022029876709
    3. ' for' → logprob: -10.00022029876709
    4. '   ' → logprob: -11.25022029876709
    5. '```' → logprob: -14.12522029876709
    6. '<|end|>' → logprob: -14.12522029876709
    7. '	for' → logprob: -14.37522029876709
    8. '           ' → logprob: -15.12522029876709
    9. '	   ' → logprob: -15.25022029876709
    10. '        
' → logprob: -15.62522029876709

Token 3670: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16097162663936615
    2. 'for' (adapté à ' for') → logprob: -1.9109716415405273
    3. ' for' → logprob: -7.285971641540527
    4. '   ' → logprob: -9.910971641540527
    5. '```' → logprob: -11.910971641540527
    6. '	for' → logprob: -12.285971641540527
    7. '
' → logprob: -15.035971641540527
    8. '           ' → logprob: -15.535971641540527
    9. '<|end|>' → logprob: -15.660971641540527
    10. '        
' → logprob: -15.910971641540527

Token 3671: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005562512087635696
    2. ' c' → logprob: -7.500556468963623
    3. '	c' → logprob: -12.875555992126465
    4. '   ' → logprob: -14.375555992126465
    5. '_c' → logprob: -19.00055694580078
    6. 'cation' → logprob: -19.25055694580078
    7. '```' → logprob: -19.50055694580078
    8. ' ' → logprob: -20.00055694580078
    9. '$c' → logprob: -20.25055694580078
    10. ' ' → logprob: -20.50055694580078

Token 3672: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0431000180542469
    2. 'in' → logprob: -3.168100118637085
    3. ')' → logprob: -10.793100357055664
    4. '+' → logprob: -11.418100357055664
    5. ' ' → logprob: -11.418100357055664
    6. '<|end|>' → logprob: -11.543100357055664
    7. '	in' → logprob: -11.918100357055664
    8. ' +=' → logprob: -12.043100357055664
    9. '_in' → logprob: -12.543100357055664
    10. ',' → logprob: -12.793100357055664

Token 3673: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '   ' → logprob: -19.500553131103516
    4. '(range' → logprob: -19.750553131103516
    5. '	range' → logprob: -20.000553131103516
    6. ' ' → logprob: -20.375553131103516
    7. '0' → logprob: -20.375553131103516
    8. '  ' → logprob: -22.875553131103516
    9. 'r' → logprob: -23.500553131103516
    10. '_range' → logprob: -24.375553131103516

Token 3674: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.635688841342926
    2. '(n' → logprob: -0.760688841342926
    3. ' (' → logprob: -6.510688781738281
    4. '0' → logprob: -6.885688781738281
    5. '(
' → logprob: -8.385688781738281
    6. '1' → logprob: -9.260688781738281
    7. '(c' → logprob: -9.510688781738281
    8. 'n' → logprob: -10.135688781738281
    9. '(len' → logprob: -10.135688781738281
    10. '   ' → logprob: -10.510688781738281

Token 3675: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.098524309694767
    2. '):
' → logprob: -2.973524332046509
    3. '+' → logprob: -3.473524332046509
    4. ')' → logprob: -5.09852409362793
    5. '   ' → logprob: -5.84852409362793
    6. '       ' → logprob: -7.22352409362793
    7. ':' → logprob: -7.34852409362793
    8. ' +' → logprob: -7.47352409362793
    9. '<|end|>' → logprob: -9.34852409362793
    10. '	' → logprob: -9.72352409362793

Token 3676: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35456305742263794
    2. '       ' → logprob: -1.2295629978179932
    3. '```' → logprob: -5.979563236236572
    4. '	       ' → logprob: -6.354563236236572
    5. '   ' → logprob: -7.229563236236572
    6. '<|end|>' → logprob: -7.729563236236572
    7. '<|end|>' → logprob: -8.604562759399414
    8. '	   ' → logprob: -8.729562759399414
    9. '    	   ' → logprob: -10.104562759399414
    10. 'max' → logprob: -10.104562759399414

Token 3677: ' #' (ID: 1069)
  Prédit: 'salary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'salary' → logprob: -0.17215043306350708
    2. '           ' → logprob: -2.2971503734588623
    3. '       ' → logprob: -3.9221503734588623
    4. 'val' → logprob: -4.422150611877441
    5. '   ' → logprob: -4.547150611877441
    6. 'current' → logprob: -4.672150611877441
    7. ' salary' → logprob: -6.422150611877441
    8. 'score' → logprob: -6.922150611877441
    9. 'sal' → logprob: -7.547150611877441
    10. 'curr' → logprob: -7.672150611877441

Token 3678: ' prefix' (ID: 18633)
  Prédit: 'salary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'salary' → logprob: -0.10492123663425446
    2. 'current' → logprob: -2.979921340942383
    3. 'val' → logprob: -3.854921340942383
    4. 'curr' → logprob: -5.479921340942383
    5. 'candidate' → logprob: -5.479921340942383
    6. '           ' → logprob: -5.729921340942383
    7. 'total' → logprob: -5.854921340942383
    8. 'cur' → logprob: -5.979921340942383
    9. 'value' → logprob: -6.104921340942383
    10. 'score' → logprob: -6.104921340942383

Token 3679: '[c' (ID: 22840)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.2601899206638336
    2. '[c' → logprob: -2.260190010070801
    3. '_c' → logprob: -2.885190010070801
    4. '_val' → logprob: -3.260190010070801
    5. 'sum' → logprob: -3.635190010070801
    6. '_value' → logprob: -6.760190010070801
    7. ' =' → logprob: -7.510190010070801
    8. 'val' → logprob: -8.0101900100708
    9. '_salary' → logprob: -8.1351900100708
    10. '_s' → logprob: -8.2601900100708

Token 3680: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.32567915320396423
    2. ']' → logprob: -1.3256791830062866
    3. ']+' → logprob: -5.700679302215576
    4. ')' → logprob: -5.950679302215576
    5. '[c' → logprob: -6.075679302215576
    6. ' ])' → logprob: -6.075679302215576
    7. ' ]' → logprob: -7.700679302215576
    8. '[' → logprob: -8.450678825378418
    9. '],' → logprob: -9.075678825378418
    10. ' )' → logprob: -9.450678825378418

Token 3681: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6666375994682312
    2. '           ' → logprob: -2.541637659072876
    3. '<|end|>' → logprob: -2.791637659072876
    4. '=' → logprob: -3.041637659072876
    5. ']' → logprob: -3.166637659072876
    6. '+' → logprob: -3.291637659072876
    7. ' =' → logprob: -3.541637659072876
    8. ' +' → logprob: -3.791637659072876
    9. 'max' → logprob: -3.916637659072876
    10. 'prefix' → logprob: -3.916637659072876

Token 3682: ' somme' (ID: 64484)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.08113082498311996
    2. ' prefix' → logprob: -2.5811307430267334
    3. '0' → logprob: -6.2061309814453125
    4. '(prefix' → logprob: -8.956130981445312
    5. ' ' → logprob: -10.206130981445312
    6. 'c' → logprob: -10.706130981445312
    7. ' c' → logprob: -11.081130981445312
    8. '_prefix' → logprob: -12.581130981445312
    9. 'suffix' → logprob: -12.831130981445312
    10. ' (' → logprob: -13.206130981445312

Token 3683: ' des' (ID: 731)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5223767757415771
    2. '[c' → logprob: -1.3973767757415771
    3. 'prefix' → logprob: -2.397376775741577
    4. '(prefix' → logprob: -4.022377014160156
    5. '(c' → logprob: -4.147377014160156
    6. ' +' → logprob: -4.397377014160156
    7. 'des' → logprob: -5.397377014160156
    8. '_of' → logprob: -5.647377014160156
    9. '+' → logprob: -5.772377014160156
    10. '_prefix' → logprob: -6.147377014160156

Token 3684: ' c' (ID: 274)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09485791623592377
    2. 'c' → logprob: -2.719857931137085
    3. ' j' → logprob: -3.969857931137085
    4. ' c' → logprob: -5.844857692718506
    5. 'prefix' → logprob: -7.344857692718506
    6. '   ' → logprob: -7.844857692718506
    7. 'plus' → logprob: -7.844857692718506
    8. '[j' → logprob: -8.469858169555664
    9. '(c' → logprob: -9.094858169555664
    10. '_j' → logprob: -9.344858169555664

Token 3685: ' plus' (ID: 2932)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.119713544845581
    2. '[j' → logprob: -1.744713544845581
    3. '_small' → logprob: -2.244713544845581
    4. ' _' → logprob: -2.744713544845581
    5. '_j' → logprob: -3.119713544845581
    6. 'j' → logprob: -3.244713544845581
    7. '_des' → logprob: -3.619713544845581
    8. '_' → logprob: -3.619713544845581
    9. ']' → logprob: -3.744713544845581
    10. '```' → logprob: -3.869713544845581

Token 3686: ' petits' (ID: 38141)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.03840257227420807
    2. 'plus' → logprob: -4.038402557373047
    3. ' petits' → logprob: -4.913402557373047
    4. 'import' → logprob: -6.163402557373047
    5. '```' → logprob: -6.163402557373047
    6. '_pet' → logprob: -6.538402557373047
    7. ' petites' → logprob: -6.788402557373047
    8. 'j' → logprob: -6.788402557373047
    9. 'small' → logprob: -7.163402557373047
    10. '_small' → logprob: -7.163402557373047

Token 3687: ' joints' (ID: 47223)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05324109271168709
    2. ' joints' → logprob: -4.05324125289917
    3. '_j' → logprob: -4.30324125289917
    4. ' j' → logprob: -4.55324125289917
    5. ']' → logprob: -5.55324125289917
    6. ')' → logprob: -6.42824125289917
    7. '   ' → logprob: -6.55324125289917
    8. 'joint' → logprob: -6.92824125289917
    9. '	j' → logprob: -7.05324125289917
    10. ' ' → logprob: -8.553240776062012

Token 3688: ' coup' (ID: 25465)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007767542265355587
    2. '
' → logprob: -8.375776290893555
    3. '            
' → logprob: -9.250776290893555
    4. ' =' → logprob: -9.625776290893555
    5. '   ' → logprob: -9.750776290893555
    6. '       ' → logprob: -9.750776290893555
    7. ')' → logprob: -10.000776290893555
    8. ',' → logprob: -10.125776290893555
    9. '	       ' → logprob: -10.875776290893555
    10. '```' → logprob: -10.875776290893555

Token 3689: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.01682589389383793
    2. ']' → logprob: -5.6418256759643555
    3. 'ed' → logprob: -5.6418256759643555
    4. '[' → logprob: -5.7668256759643555
    5. 'éd' → logprob: -5.8918256759643555
    6. 'é' → logprob: -7.0168256759643555
    7. 'cuts' → logprob: -7.2668256759643555
    8. '_cut' → logprob: -7.6418256759643555
    9. 'es' → logprob: -8.016825675964355
    10. 'ées' → logprob: -8.391825675964355

Token 3690: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023698240984231234
    2. '            
' → logprob: -6.5023698806762695
    3. '       ' → logprob: -8.25236988067627
    4. '   ' → logprob: -8.75236988067627
    5. '
' → logprob: -9.12736988067627
    6. '    
' → logprob: -9.37736988067627
    7. '	       ' → logprob: -10.12736988067627
    8. ')' → logprob: -10.62736988067627
    9. ',' → logprob: -11.00236988067627
    10. '        
' → logprob: -11.37736988067627

Token 3691: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003298632800579071
    2. 'salary' → logprob: -8.625329971313477
    3. '       ' → logprob: -9.750329971313477
    4. '            
' → logprob: -10.375329971313477
    5. ' salary' → logprob: -12.000329971313477
    6. '   ' → logprob: -12.000329971313477
    7. '
' → logprob: -12.125329971313477
    8. ',' → logprob: -12.250329971313477
    9. '```' → logprob: -12.625329971313477
    10. '_salary' → logprob: -12.625329971313477

Token 3692: ' salary' (ID: 21627)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5357828736305237
    2. 'salary' (adapté à ' salary') → logprob: -0.9107828736305237
    3. 'val' → logprob: -5.535782814025879
    4. 'current' → logprob: -5.910782814025879
    5. '   ' → logprob: -6.410782814025879
    6. 'sal' → logprob: -6.910782814025879
    7. 's' → logprob: -7.035782814025879
    8. 'curr' → logprob: -7.535782814025879
    9. 'candidate' → logprob: -7.660782814025879
    10. '       ' → logprob: -8.160782814025879

Token 3693: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08904372155666351
    2. '=' → logprob: -2.464043617248535
    3. '   ' → logprob: -10.089043617248535
    4. '           ' → logprob: -10.714043617248535
    5. '=c' → logprob: -11.589043617248535
    6. ')' → logprob: -11.964043617248535
    7. ' ' → logprob: -12.214043617248535
    8. ' +=' → logprob: -12.339043617248535
    9. '=(' → logprob: -12.839043617248535
    10. '       ' → logprob: -13.214043617248535

Token 3694: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.048744287341833115
    2. ' (' → logprob: -3.0487442016601562
    3. '(S' → logprob: -9.298744201660156
    4. '   ' → logprob: -10.173744201660156
    5. '(C' → logprob: -11.298744201660156
    6. '(s' → logprob: -11.798744201660156
    7. '           ' → logprob: -12.673744201660156
    8. '       ' → logprob: -13.048744201660156
    9. ' ' → logprob: -14.298744201660156
    10. '     ' → logprob: -15.048744201660156

Token 3695: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00046272401232272387
    2. '(c' → logprob: -7.875462532043457
    3. ' c' → logprob: -10.125462532043457
    4. '   ' → logprob: -10.375462532043457
    5. ')c' → logprob: -11.500462532043457
    6. '	c' → logprob: -14.250462532043457
    7. ' (' → logprob: -15.375462532043457
    8. '           ' → logprob: -15.875462532043457
    9. '       ' → logprob: -16.000463485717773
    10. ')' → logprob: -17.375463485717773

Token 3696: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002314303710591048
    2. ' +' → logprob: -8.375231742858887
    3. ')+' → logprob: -14.375231742858887
    4. '+
' → logprob: -16.12523078918457
    5. '   ' → logprob: -16.75023078918457
    6. ')' → logprob: -17.75023078918457
    7. '+)' → logprob: -18.00023078918457
    8. '＋' → logprob: -18.00023078918457
    9. '()+' → logprob: -18.12523078918457
    10. ']+' → logprob: -19.12523078918457

Token 3697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. ')' → logprob: -17.375001907348633
    4. '```' → logprob: -17.375001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '+' → logprob: -19.875001907348633
    7. '
' → logprob: -20.625001907348633
    8. '`' → logprob: -21.625001907348633
    9. '#' → logprob: -21.625001907348633
    10. '...' → logprob: -22.000001907348633

Token 3698: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03225314989686012
    2. ' *' → logprob: -3.7822532653808594
    3. '*' → logprob: -4.782253265380859
    4. ')*' → logprob: -7.532253265380859
    5. ')*(' → logprob: -10.65725326538086
    6. '*(' → logprob: -11.15725326538086
    7. '   ' → logprob: -11.28225326538086
    8. '*)' → logprob: -13.40725326538086
    9. ' )' → logprob: -13.40725326538086
    10. '```' → logprob: -14.65725326538086

Token 3699: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05126110464334488
    2. ' *' → logprob: -3.0512611865997314
    3. '*(' → logprob: -5.926260948181152
    4. '*((' → logprob: -14.051260948181152
    5. ')' → logprob: -14.926260948181152
    6. ')*' → logprob: -15.926260948181152
    7. '   ' → logprob: -16.30126190185547
    8. '**' → logprob: -16.42626190185547
    9. '*
' → logprob: -16.55126190185547
    10. '```' → logprob: -16.67626190185547

Token 3700: ' (' (ID: 350)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.029907269403338432
    2. ' (' → logprob: -3.5299072265625
    3. '(const' → logprob: -9.6549072265625
    4. '(' → logprob: -9.6549072265625
    5. '   ' → logprob: -11.5299072265625
    6. '((' → logprob: -11.7799072265625
    7. 'const' → logprob: -12.4049072265625
    8. '(int' → logprob: -13.0299072265625
    9. '(Const' → logprob: -13.1549072265625
    10. ' ' → logprob: -13.5299072265625

Token 3701: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01833406835794449
    2. '(S' → logprob: -4.018333911895752
    3. ' S' → logprob: -8.76833438873291
    4. ' (' → logprob: -10.51833438873291
    5. '(' → logprob: -14.39333438873291
    6. '   ' → logprob: -14.64333438873291
    7. 'const' → logprob: -15.26833438873291
    8. ' ' → logprob: -15.76833438873291
    9. '	S' → logprob: -16.268333435058594
    10. '_S' → logprob: -17.143333435058594

Token 3702: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020720958709717
    2. '+' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.725207328796387
    4. '    ' → logprob: -15.975207328796387
    5. ' ' → logprob: -16.22520637512207
    6. '   ' → logprob: -16.22520637512207
    7. ' +
' → logprob: -17.35020637512207
    8. ')' → logprob: -17.72520637512207
    9. '```' → logprob: -18.10020637512207
    10. '+
' → logprob: -18.35020637512207

Token 3703: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.02324839122593403
    2. ' J' → logprob: -3.7732484340667725
    3. ' ' → logprob: -13.273248672485352
    4. '   ' → logprob: -14.898248672485352
    5. '(J' → logprob: -14.898248672485352
    6. ' (' → logprob: -15.523248672485352
    7. ' ' → logprob: -16.39824867248535
    8. '  ' → logprob: -17.02324867248535
    9. '(' → logprob: -17.27324867248535
    10. '`' → logprob: -17.64824867248535

Token 3704: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0024793429765850306
    2. '-' → logprob: -6.002479553222656
    3. '-prefix' → logprob: -13.252479553222656
    4. ' ' → logprob: -13.502479553222656
    5. ' ' → logprob: -15.752479553222656
    6. '           ' → logprob: -15.877479553222656
    7. '   ' → logprob: -16.627479553222656
    8. '    ' → logprob: -17.127479553222656
    9. '            ' → logprob: -17.502479553222656
    10. '        ' → logprob: -17.627479553222656

Token 3705: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0005530327325686812
    2. ' prefix' → logprob: -7.500553131103516
    3. '(prefix' → logprob: -19.000553131103516
    4. '   ' → logprob: -19.375553131103516
    5. '_prefix' → logprob: -21.500553131103516
    6. '           ' → logprob: -21.750553131103516
    7. '       ' → logprob: -22.000553131103516
    8. '```' → logprob: -22.000553131103516
    9. 'refix' → logprob: -23.000553131103516
    10. 'Prefix' → logprob: -23.625553131103516

Token 3706: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.9361264946837764e-07
    2. 'c' → logprob: -16.5
    3. '[' → logprob: -16.75
    4. '[
' → logprob: -17.625
    5. ' [' → logprob: -18.25
    6. '   ' → logprob: -18.75
    7. ')c' → logprob: -19.25
    8. '```' → logprob: -19.75
    9. ')[' → logprob: -19.875
    10. '	c' → logprob: -20.25

Token 3707: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1273966133594513
    2. '])' → logprob: -2.127396583557129
    3. '))' → logprob: -9.127396583557129
    4. ')
' → logprob: -9.502396583557129
    5. ')]' → logprob: -9.502396583557129
    6. ')])' → logprob: -9.877396583557129
    7. ' )' → logprob: -10.002396583557129
    8. ']' → logprob: -10.377396583557129
    9. '[c' → logprob: -10.752396583557129
    10. '   ' → logprob: -11.002396583557129

Token 3708: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014482904225587845
    2. ' if' → logprob: -4.5144829750061035
    3. 'if' → logprob: -6.2644829750061035
    4. '       ' → logprob: -7.1394829750061035
    5. '<|end|>' → logprob: -8.139482498168945
    6. '```' → logprob: -8.264482498168945
    7. '   ' → logprob: -9.639482498168945
    8. '	       ' → logprob: -10.139482498168945
    9. 'max' → logprob: -11.389482498168945
    10. '<|end|>' → logprob: -11.639482498168945

Token 3709: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009155846200883389
    2. '           ' → logprob: -4.759155750274658
    3. 'max' → logprob: -8.009156227111816
    4. '       ' → logprob: -8.759156227111816
    5. ' if' → logprob: -9.884156227111816
    6. '```' → logprob: -14.259156227111816
    7. '	if' → logprob: -16.0091552734375
    8. '   ' → logprob: -17.2591552734375
    9. '               ' → logprob: -17.6341552734375
    10. 'If' → logprob: -18.3841552734375

Token 3710: ' salary' (ID: 21627)
  Prédit: 'salary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'salary' → logprob: -0.006716436706483364
    2. ' salary' → logprob: -5.006716251373291
    3. '           ' → logprob: -14.63171672821045
    4. '   ' → logprob: -14.63171672821045
    5. '       ' → logprob: -16.131715774536133
    6. 'Salary' → logprob: -17.756715774536133
    7. '_salary' → logprob: -17.881715774536133
    8. 'sal' → logprob: -18.131715774536133
    9. '.salary' → logprob: -18.881715774536133
    10. 'score' → logprob: -19.381715774536133

Token 3711: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.35086768865585327
    2. '>' → logprob: -1.225867748260498
    3. '           ' → logprob: -6.225867748260498
    4. ' >
' → logprob: -9.97586727142334
    5. '       ' → logprob: -10.22586727142334
    6. '		' → logprob: -10.35086727142334
    7. '	' → logprob: -10.47586727142334
    8. '               ' → logprob: -10.47586727142334
    9. '          ' → logprob: -10.47586727142334
    10. ' >
' → logprob: -10.47586727142334

Token 3712: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.001502598519437015
    2. ' max' → logprob: -6.501502513885498
    3. '           ' → logprob: -15.251502990722656
    4. '	max' → logprob: -18.376502990722656
    5. '_max' → logprob: -19.001502990722656
    6. '               ' → logprob: -19.501502990722656
    7. '(max' → logprob: -20.376502990722656
    8. '   ' → logprob: -21.001502990722656
    9. '=max' → logprob: -21.001502990722656
    10. ',max' → logprob: -22.126502990722656

Token 3713: '_salary' (ID: 163644)
  Prédit: '_salary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_salary' → logprob: -1.9623810658231378e-05
    2. 'salary' → logprob: -10.875020027160645
    3. '_sal' → logprob: -15.000020027160645
    4. '_' → logprob: -15.125020027160645
    5. '_s' → logprob: -17.500019073486328
    6. 'Salary' → logprob: -17.750019073486328
    7. '\' → logprob: -18.125019073486328
    8. ' salary' → logprob: -18.250019073486328
    9. '_score' → logprob: -18.625019073486328
    10. '_max' → logprob: -19.125019073486328

Token 3714: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7368938326835632
    2. '           ' → logprob: -0.9868938326835632
    3. ':' → logprob: -2.111893892288208
    4. ':
' → logprob: -4.861893653869629
    5. 'max' → logprob: -6.111893653869629
    6. '=' → logprob: -6.111893653869629
    7. '<|end|>' → logprob: -6.111893653869629
    8. ' =' → logprob: -6.236893653869629
    9. ' max' → logprob: -6.236893653869629
    10. '[max' → logprob: -6.361893653869629

Token 3715: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00638091005384922
    2. '           ' → logprob: -5.256381034851074
    3. 'max' → logprob: -7.631381034851074
    4. '[max' → logprob: -8.631381034851074
    5. ' max' → logprob: -8.756381034851074
    6. '```' → logprob: -8.881381034851074
    7. '(max' → logprob: -9.631381034851074
    8. '=max' → logprob: -10.131381034851074
    9. '                   ' → logprob: -10.756381034851074
    10. '                       ' → logprob: -11.506381034851074

Token 3716: ' max' (ID: 2999)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6226297616958618
    2. 'max' (adapté à ' max') → logprob: -0.8726297616958618
    3. '           ' → logprob: -3.1226296424865723
    4. ' max' → logprob: -6.622629642486572
    5. '```' → logprob: -8.87263011932373
    6. '                   ' → logprob: -9.62263011932373
    7. '[max' → logprob: -11.24763011932373
    8. '   ' → logprob: -11.49763011932373
    9. '       ' → logprob: -12.12263011932373
    10. '(max' → logprob: -12.87263011932373

Token 3717: '_salary' (ID: 163644)
  Prédit: '_salary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_salary' → logprob: -1.3856492842023727e-06
    2. '_sal' → logprob: -14.125000953674316
    3. '_s' → logprob: -15.500000953674316
    4. 'salary' → logprob: -15.875000953674316
    5. '_' → logprob: -15.875000953674316
    6. '_score' → logprob: -16.375001907348633
    7. '_sales' → logprob: -17.375001907348633
    8. '_status' → logprob: -17.750001907348633
    9. '_max' → logprob: -18.625001907348633
    10. 'Salary' → logprob: -18.750001907348633

Token 3718: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042180240154266
    2. ' =' → logprob: -3.2880420684814453
    3. '=s' → logprob: -15.163042068481445
    4. '＝' → logprob: -15.538042068481445
    5. '=max' → logprob: -15.663042068481445
    6. '=
' → logprob: -17.163042068481445
    7. '	' → logprob: -18.038042068481445
    8. '.=' → logprob: -19.038042068481445
    9. '=True' → logprob: -19.038042068481445
    10. 'max' → logprob: -19.288042068481445

Token 3719: ' salary' (ID: 21627)
  Prédit: 'salary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'salary' → logprob: -0.0009115827269852161
    2. ' salary' → logprob: -7.000911712646484
    3. '_salary' → logprob: -17.750911712646484
    4. '   ' → logprob: -19.000911712646484
    5. 'Salary' → logprob: -19.375911712646484
    6. 'score' → logprob: -19.500911712646484
    7. 's' → logprob: -19.500911712646484
    8. 'sal' → logprob: -19.625911712646484
    9. '.salary' → logprob: -19.625911712646484
    10. '           ' → logprob: -19.750911712646484

Token 3720: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017836984246969223
    2. '
' → logprob: -4.642837047576904
    3. '   ' → logprob: -6.267837047576904
    4. '        
' → logprob: -6.267837047576904
    5. '<|end|>' → logprob: -6.642837047576904
    6. '    
' → logprob: -6.892837047576904
    7. '```' → logprob: -7.517837047576904
    8. 'print' → logprob: -7.892837047576904
    9. 'return' → logprob: -8.517836570739746
    10. ')' → logprob: -8.642836570739746

Token 3721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09661423414945602
    2. '   ' → logprob: -3.346614122390747
    3. '
' → logprob: -3.971614122390747
    4. '\n' → logprob: -4.721614360809326
    5. '<|end|>' → logprob: -4.971614360809326
    6. '        
' → logprob: -5.096614360809326
    7. 'print' → logprob: -5.471614360809326
    8. '    
' → logprob: -5.596614360809326
    9. '```' → logprob: -6.096614360809326
    10. '\' → logprob: -6.346614360809326

Token 3722: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006508402875624597
    2. '       ' → logprob: -7.500650882720947
    3. '```' → logprob: -9.375650405883789
    4. ' print' → logprob: -11.500650405883789
    5. '   ' → logprob: -13.125650405883789
    6. '	print' → logprob: -14.875650405883789
    7. '
' → logprob: -15.375650405883789
    8. '``' → logprob: -15.500650405883789
    9. 'sys' → logprob: -16.87565040588379
    10. '        
' → logprob: -17.75065040588379

Token 3723: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -2.069664333248511e-05
    2. '(' → logprob: -11.625020980834961
    3. '(f' → logprob: -11.625020980834961
    4. 'max' → logprob: -12.875020980834961
    5. '(str' → logprob: -15.875020980834961
    6. ' (' → logprob: -17.00002098083496
    7. ' max' → logprob: -19.12502098083496
    8. '(
' → logprob: -19.12502098083496
    9. '(int' → logprob: -19.75002098083496
    10. '((' → logprob: -20.00002098083496

Token 3724: '_salary' (ID: 163644)
  Prédit: '_salary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_salary' → logprob: -0.01778838224709034
    2. '_' → logprob: -4.267788410186768
    3. '(' → logprob: -6.392788410186768
    4. '_score' → logprob: -7.017788410186768
    5. '()' → logprob: -7.267788410186768
    6. '(_' → logprob: -9.39278793334961
    7. '_max' → logprob: -9.51778793334961
    8. '_)' → logprob: -10.39278793334961
    9. ')' → logprob: -10.89278793334961
    10. '("_' → logprob: -11.26778793334961

Token 3725: ')

' (ID: 1029)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07216574251651764
    2. '
' → logprob: -3.3221657276153564
    3. '<|end|>' → logprob: -3.6971657276153564
    4. '```' → logprob: -5.0721659660339355
    5. ' if' → logprob: -7.1971659660339355
    6. 'thread' → logprob: -7.6971659660339355
    7. '#' → logprob: -8.322165489196777
    8. '    
' → logprob: -8.447165489196777
    9. 'main' → logprob: -8.822165489196777
    10. '   ' → logprob: -8.947165489196777

Token 3726: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005925900186412036
    2. 'thread' → logprob: -8.250592231750488
    3. '```' → logprob: -9.250592231750488
    4. '#' → logprob: -9.625592231750488
    5. ' if' → logprob: -10.000592231750488
    6. '
' → logprob: -10.125592231750488
    7. '<|end|>' → logprob: -10.125592231750488
    8. 'main' → logprob: -10.625592231750488
    9. '   ' → logprob: -12.125592231750488
    10. '    
' → logprob: -12.875592231750488

Token 3727: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.348715215921402
    2. ' __' → logprob: -1.2237151861190796
    3. '___' → logprob: -9.473714828491211
    4. '_' → logprob: -9.973714828491211
    5. '_name' → logprob: -10.223714828491211
    6. 'name' → logprob: -10.723714828491211
    7. ' ' → logprob: -10.848714828491211
    8. '  ' → logprob: -11.348714828491211
    9. '____' → logprob: -11.723714828491211
    10. '__
' → logprob: -11.973714828491211

Token 3728: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003831252979580313
    2. ' __' → logprob: -9.000383377075195
    3. '_' → logprob: -10.000383377075195
    4. ' ==' → logprob: -10.625383377075195
    5. '__":
' → logprob: -10.625383377075195
    6. '__':
' → logprob: -10.750383377075195
    7. '___' → logprob: -11.000383377075195
    8. '==' → logprob: -11.000383377075195
    9. '__.__' → logprob: -11.000383377075195
    10. '____' → logprob: -11.125383377075195

Token 3729: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011021859245374799
    2. '==' → logprob: -10.125110626220703
    3. '__.__' → logprob: -10.500110626220703
    4. '=="' → logprob: -10.625110626220703
    5. ' ==' → logprob: -11.750110626220703
    6. '=='' → logprob: -12.375110626220703
    7. '__('' → logprob: -13.625110626220703
    8. '____' → logprob: -13.750110626220703
    9. '__":
' → logprob: -14.250110626220703
    10. '__.' → logprob: -14.375110626220703

Token 3730: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005723997950553894
    2. ' ==' → logprob: -5.75572395324707
    3. '==' → logprob: -6.75572395324707
    4. '=="' → logprob: -7.25572395324707
    5. '__":
' → logprob: -8.38072395324707
    6. '=='' → logprob: -8.50572395324707
    7. '__':
' → logprob: -9.25572395324707
    8. '__.__' → logprob: -9.88072395324707
    9. '__["' → logprob: -10.75572395324707
    10. '__('' → logprob: -11.50572395324707

Token 3731: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006745093036442995
    2. ''' → logprob: -5.006744861602783
    3. ' "__' → logprob: -10.881745338439941
    4. '__' → logprob: -11.631745338439941
    5. '"name' → logprob: -14.756745338439941
    6. '("__' → logprob: -14.881745338439941
    7. '"user' → logprob: -15.006745338439941
    8. ' '__' → logprob: -15.256745338439941
    9. '"text' → logprob: -16.631744384765625
    10. '"class' → logprob: -16.756744384765625

Token 3732: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004957527853548527
    2. '__' → logprob: -5.379957675933838
    3. '"' → logprob: -8.37995719909668
    4. ''' → logprob: -10.00495719909668
    5. 'thread' → logprob: -10.00495719909668
    6. 'name' → logprob: -11.12995719909668
    7. '	main' → logprob: -14.62995719909668
    8. '   ' → logprob: -15.12995719909668
    9. 'built' → logprob: -15.12995719909668
    10. '__":
' → logprob: -15.25495719909668

Token 3733: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.524810254573822
    2. '__":
' → logprob: -0.899810254573822
    3. '__':
' → logprob: -6.524810314178467
    4. '__["' → logprob: -9.899809837341309
    5. '__()
' → logprob: -10.149809837341309
    6. '__
' → logprob: -10.149809837341309
    7. '__.' → logprob: -10.274809837341309
    8. '__.__' → logprob: -11.399809837341309
    9. '==' → logprob: -12.024809837341309
    10. '__("' → logprob: -12.149809837341309

Token 3734: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004905566107481718
    2. 'thread' → logprob: -5.504905700683594
    3. ' threading' → logprob: -7.504905700683594
    4. '	thread' → logprob: -8.254905700683594
    5. '(thread' → logprob: -11.754905700683594
    6. '_thread' → logprob: -12.754905700683594
    7. '```' → logprob: -12.879905700683594
    8. '   ' → logprob: -14.004905700683594
    9. '    
' → logprob: -14.504905700683594
    10. '       ' → logprob: -14.629905700683594

Token 3735: ' threading' (ID: 72047)
  Prédit: 'thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thread' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.500000953674316
    3. ' threading' → logprob: -16.75
    4. 't' → logprob: -19.0
    5. 'main' → logprob: -19.25
    6. '```' → logprob: -19.75
    7. 'sys' → logprob: -20.875
    8. '
' → logprob: -21.25
    9. 'import' → logprob: -21.5
    10. 'th' → logprob: -21.625

Token 3736: '.Thread' (ID: 15531)
  Prédit: '.Thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.0009630310814827681
    2. '.stack' → logprob: -7.50096321105957
    3. '.start' → logprob: -8.00096321105957
    4. '.' → logprob: -10.25096321105957
    5. '.thread' → logprob: -11.37596321105957
    6. '.Threading' → logprob: -11.37596321105957
    7. '.Stack' → logprob: -11.75096321105957
    8. '```' → logprob: -12.87596321105957
    9. 'start' → logprob: -13.75096321105957
    10. '(Thread' → logprob: -14.50096321105957

Token 3737: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.0007855643052607775
    2. 'target' → logprob: -7.2507853507995605
    3. '().' → logprob: -10.000785827636719
    4. '(' → logprob: -10.875785827636719
    5. '()' → logprob: -12.125785827636719
    6. ' target' → logprob: -13.000785827636719
    7. '(
' → logprob: -13.750785827636719
    8. '(start' → logprob: -14.500785827636719
    9. '.target' → logprob: -14.625785827636719
    10. '_target' → logprob: -15.000785827636719

Token 3738: '=' (ID: 28)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0011757015017792583
    2. '(main' → logprob: -7.001175880432129
    3. ' main' → logprob: -8.251175880432129
    4. '=' → logprob: -13.251175880432129
    5. '	main' → logprob: -13.626175880432129
    6. '.main' → logprob: -15.751175880432129
    7. '_main' → logprob: -17.251174926757812
    8. 'target' → logprob: -17.751174926757812
    9. '
' → logprob: -17.876174926757812
    10. ')' → logprob: -17.876174926757812

Token 3739: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -20.125
    4. '(main' → logprob: -20.75
    5. '.main' → logprob: -23.125
    6. '_main' → logprob: -25.0
    7. 'Main' → logprob: -25.625
    8. 'mainwindow' → logprob: -25.75
    9. '   ' → logprob: -26.0
    10. 'target' → logprob: -26.125

Token 3740: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.005798789672553539
    2. '().' → logprob: -5.380798816680908
    3. '()).' → logprob: -6.880798816680908
    4. '   ' → logprob: -9.88079833984375
    5. '()' → logprob: -9.88079833984375
    6. '.start' → logprob: -10.63079833984375
    7. '(' → logprob: -11.63079833984375
    8. ')' → logprob: -12.00579833984375
    9. 'start' → logprob: -13.50579833984375
    10. '.run' → logprob: -13.63079833984375

Token 3741: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.2113979209971149e-05
    2. 'run' → logprob: -11.375012397766113
    3. '```' → logprob: -14.750012397766113
    4. ' start' → logprob: -17.000011444091797
    5. ').' → logprob: -17.125011444091797
    6. ')' → logprob: -17.250011444091797
    7. '.start' → logprob: -17.375011444091797
    8. '(start' → logprob: -18.500011444091797
    9. '	start' → logprob: -18.750011444091797
    10. ':start' → logprob: -19.500011444091797

Token 3742: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3740
Tokens correctement prédits (1ère position, stricte): 826
Tokens correctement prédits (1ère position, avec adaptation): 850
Tokens correctement prédits (top 10): 1893
Précision stricte (1ère position): 22.09%
Précision adaptée (1ère position): 22.73%
Précision (top 10): 50.61%
================================================================================
