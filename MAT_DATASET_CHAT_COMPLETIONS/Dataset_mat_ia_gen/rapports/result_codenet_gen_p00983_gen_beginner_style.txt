================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

MOD = 10**9 + 7

n,m = map(int, input().split())
s = list(map(int, input().split()))

# On va faire une recherche par essais, pour chaque document on peut le mettre dans la pile A ou B
# On garde les piles comme listes (empilent à droite)
# On s'assure qu'en ajoutant le document la pile reste strictement décroissante (car on doit avoir l'ordre inverse)
# et on n'excède pas la capacité m.
# Comme n peut aller jusqu'à 5000, une recherche complète est impossible. Mais on fait comme un débutant et on écrit la solution brute.

# On va essayer une approche purement récursive avec mémoïsation sur (index, lastA, lenA, lastB, lenB)
# Mais lastA et lastB sont les numéros de doc à la tête de A et B, et peuvent être 0 s'ils sont vides.
# Stocker les états serait trop lourd, donc on ne mémorise pas et croit que la mémoire suffira pour les petits input.
# Pour grands input, ce code sera trop lent mais correspond à la consigne.

# Version naïve pure récursive sans mémo :

def dfs(i, lastA, lenA, lastB, lenB):
    if i == n:
        return 1
    ways = 0
    doc = s[i]
    # essayer pile A
    if (lenA < m) and (lastA == 0 or doc < lastA):
        ways += dfs(i+1, doc, lenA+1, lastB, lenB)
    # essayer pile B
    if (lenB < m) and (lastB == 0 or doc < lastB):
        ways += dfs(i+1, lastA, lenA, doc, lenB+1)
    return ways % MOD

# appel initial :
res = dfs(0,0,0,0,0)
print(res % MOD)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.000883833912666887
    2. 'ursive' → logprob: -7.250884056091309
    3. '_limit' → logprob: -9.500884056091309
    4. 'limit' → logprob: -10.500884056091309
    5. 'urs' → logprob: -10.625884056091309
    6. 'ur' → logprob: -11.500884056091309
    7. 'ursively' → logprob: -11.625884056091309
    8. 'ursor' → logprob: -11.750884056091309
    9. 'urf' → logprob: -13.000884056091309
    10. '_' → logprob: -13.250884056091309

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.31425976753234863
    2. '_limit' → logprob: -1.3142597675323486
    3. '_depth' → logprob: -7.1892595291137695
    4. 'depth' → logprob: -8.93925952911377
    5. ' limit' → logprob: -10.06425952911377
    6. 'lim' → logprob: -10.43925952911377
    7. '_stack' → logprob: -12.18925952911377
    8. '_lim' → logprob: -12.31425952911377
    9. '(limit' → logprob: -12.31425952911377
    10. '-limit' → logprob: -13.06425952911377

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3134221136569977
    2. '100' → logprob: -1.3134220838546753
    3. '300' → logprob: -9.938422203063965
    4. '500' → logprob: -10.063422203063965
    5. ' ' → logprob: -10.688422203063965
    6. '150' → logprob: -11.063422203063965
    7. '999' → logprob: -11.188422203063965
    8. '200' → logprob: -11.563422203063965
    9. '1' → logprob: -12.938422203063965
    10. '   ' → logprob: -13.813422203063965

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0019331586081534624
    2. '9' → logprob: -6.5019330978393555
    3. '6' → logprob: -8.001933097839355
    4. '8' → logprob: -9.251933097839355
    5. ' ' → logprob: -16.501934051513672
    6. '```' → logprob: -17.001934051513672
    7. '(' → logprob: -18.376934051513672
    8. ')' → logprob: -19.501934051513672
    9. '``' → logprob: -20.126934051513672
    10. '0' → logprob: -20.876934051513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046520017087459564
    2. '
' → logprob: -3.5465199947357178
    3. '

' → logprob: -4.921520233154297
    4. '```' → logprob: -5.296520233154297
    5. '\' → logprob: -6.421520233154297
    6. '
' → logprob: -7.046520233154297
    7. 'class' → logprob: -7.546520233154297
    8. '\n' → logprob: -7.671520233154297
    9. 'import' → logprob: -8.046520233154297
    10. ')' → logprob: -8.921520233154297

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871683180332184
    2. '=' → logprob: -1.137168288230896
    3. ' ' → logprob: -9.012167930603027
    4. ')' → logprob: -9.387167930603027
    5. '_' → logprob: -10.262167930603027
    6. ' =)' → logprob: -11.137167930603027
    7. ' =
' → logprob: -11.512167930603027
    8. '<|end|>' → logprob: -12.012167930603027
    9. '.' → logprob: -12.137167930603027
    10. ' )' → logprob: -12.262167930603027

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4741199016571045
    2. '10' → logprob: -0.9741199016571045
    3. '100' → logprob: -10.224120140075684
    4. '1' → logprob: -12.349120140075684
    5. 'int' → logprob: -13.599120140075684
    6. ' ' → logprob: -14.599120140075684
    7. ' int' → logprob: -15.599120140075684
    8. '998' → logprob: -16.349119186401367
    9. '2' → logprob: -16.599119186401367
    10. '(' → logprob: -17.224119186401367

Token 16: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009176511666737497
    2. '100' → logprob: -7.000917434692383
    3. '1' → logprob: -12.375917434692383
    4. '998' → logprob: -13.875917434692383
    5. ' ' → logprob: -14.250917434692383
    6. 'int' → logprob: -15.375917434692383
    7. '(' → logprob: -16.625917434692383
    8. '```' → logprob: -17.250917434692383
    9. '`' → logprob: -18.500917434692383
    10. 'pow' → logprob: -18.750917434692383

Token 17: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04052892327308655
    2. '**' → logprob: -3.2905290126800537
    3. '09' → logprob: -6.040528774261475
    4. '0' → logprob: -10.040529251098633
    5. '7' → logprob: -10.415529251098633
    6. '07' → logprob: -11.040529251098633
    7. '00' → logprob: -12.290529251098633
    8. '```' → logprob: -12.540529251098633
    9. ' ' → logprob: -12.790529251098633
    10. '000' → logprob: -13.415529251098633

Token 18: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.2200749754119897e-06
    2. '09' → logprob: -13.125001907348633
    3. '+' → logprob: -16.000001907348633
    4. '10' → logprob: -16.750001907348633
    5. '```' → logprob: -17.500001907348633
    6. ' ' → logprob: -18.625001907348633
    7. '7' → logprob: -19.375001907348633
    8. '18' → logprob: -19.500001907348633
    9. '９' → logprob: -19.875001907348633
    10. '8' → logprob: -20.625001907348633

Token 19: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017048174049705267
    2. ' +' → logprob: -6.376704692840576
    3. '7' → logprob: -13.376705169677734
    4. '＋' → logprob: -14.876705169677734
    5. '+
' → logprob: -15.001705169677734
    6. ' ' → logprob: -15.751705169677734
    7. '+

' → logprob: -16.001705169677734
    8. '```' → logprob: -17.251705169677734
    9. ' plus' → logprob: -17.376705169677734
    10. ' ' → logprob: -17.376705169677734

Token 20: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '+' → logprob: -15.87500286102295
    4. '9' → logprob: -16.000003814697266
    5. '```' → logprob: -17.000003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '07' → logprob: -18.375003814697266
    8. '  ' → logprob: -19.125003814697266
    9. ' ' → logprob: -19.125003814697266
    10. '19' → logprob: -20.125003814697266

Token 21: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -16.875
    3. ' ' → logprob: -17.5
    4. '9' → logprob: -18.5
    5. '```' → logprob: -18.625
    6. '07' → logprob: -20.0
    7. '   ' → logprob: -20.75
    8. '７' → logprob: -21.875
    9. '

' → logprob: -22.125
    10. '79' → logprob: -22.5

Token 22: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9760170578956604
    2. '

' → logprob: -1.1010169982910156
    3. 'def' → logprob: -1.7260169982910156
    4. '```' → logprob: -2.9760169982910156
    5. '\n' → logprob: -3.9760169982910156
    6. '
' → logprob: -3.9760169982910156
    7. '\' → logprob: -4.226016998291016
    8. '' → logprob: -5.101016998291016
    9. 'import' → logprob: -6.851016998291016
    10. '``' → logprob: -7.976016998291016

Token 23: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010547225829213858
    2. '
' → logprob: -7.501054763793945
    3. '```' → logprob: -8.501054763793945
    4. 'n' → logprob: -8.626054763793945
    5. '

' → logprob: -10.251054763793945
    6. 'class' → logprob: -10.501054763793945
    7. '
' → logprob: -10.751054763793945
    8. '\' → logprob: -10.751054763793945
    9. '\n' → logprob: -12.501054763793945
    10. ' def' → logprob: -12.751054763793945

Token 24: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.083685964345932
    2. '=' → logprob: -3.208685874938965
    3. ',' → logprob: -3.333685874938965
    4. ' ,' → logprob: -6.208685874938965
    5. ' ' → logprob: -6.333685874938965
    6. ')' → logprob: -8.208685874938965
    7. '>' → logprob: -10.583685874938965
    8. '.' → logprob: -11.083685874938965
    9. ' =
' → logprob: -11.083685874938965
    10. '<|end|>' → logprob: -11.208685874938965

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05772143602371216
    2. '=' → logprob: -2.9327213764190674
    3. ',' → logprob: -5.9327216148376465
    4. ' ,' → logprob: -8.682721138000488
    5. ' ' → logprob: -12.057721138000488
    6. ' =
' → logprob: -12.557721138000488
    7. ')' → logprob: -13.557721138000488
    8. ' =)' → logprob: -14.182721138000488
    9. ' =
' → logprob: -14.307721138000488
    10. '=int' → logprob: -15.057721138000488

Token 26: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.038057442754507065
    2. 'map' → logprob: -3.288057327270508
    3. ' ' → logprob: -11.538057327270508
    4. ' input' → logprob: -13.038057327270508
    5. ' list' → logprob: -13.288057327270508
    6. '0' → logprob: -13.538057327270508
    7. 'input' → logprob: -15.163057327270508
    8. '	map' → logprob: -15.663057327270508
    9. '10' → logprob: -15.788057327270508
    10. 'list' → logprob: -15.913057327270508

Token 27: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11694285273551941
    2. '(int' → logprob: -2.741942882537842
    3. '(lambda' → logprob: -3.741942882537842
    4. '<|end|>' → logprob: -4.116942882537842
    5. '(str' → logprob: -5.866942882537842
    6. '```' → logprob: -7.741942882537842
    7. '(range' → logprob: -7.866942882537842
    8. '(input' → logprob: -7.866942882537842
    9. '<|end|>' → logprob: -8.241942405700684
    10. '(len' → logprob: -8.866942405700684

Token 28: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.47587132453918457
    2. ',' → logprob: -0.9758713245391846
    3. ',int' → logprob: -6.4758710861206055
    4. ' ,' → logprob: -9.350871086120605
    5. '(input' → logprob: -9.850871086120605
    6. '(' → logprob: -9.975871086120605
    7. 'input' → logprob: -10.725871086120605
    8. ',(' → logprob: -10.725871086120605
    9. ',System' → logprob: -12.850871086120605
    10. '(sys' → logprob: -13.100871086120605

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008616935461759567
    2. ' input' → logprob: -4.758616924285889
    3. ' ' → logprob: -14.008617401123047
    4. 'sys' → logprob: -14.008617401123047
    5. '(input' → logprob: -15.883617401123047
    6. ',input' → logprob: -15.883617401123047
    7. 'open' → logprob: -16.008617401123047
    8. ')' → logprob: -16.133617401123047
    9. 'int' → logprob: -16.383617401123047
    10. '=input' → logprob: -16.633617401123047

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7752694487571716
    2. '())' → logprob: -1.1502695083618164
    3. '()' → logprob: -1.5252695083618164
    4. ')' → logprob: -6.150269508361816
    5. '(' → logprob: -6.650269508361816
    6. '());' → logprob: -7.525269508361816
    7. '(),' → logprob: -8.150269508361816
    8. '();)' → logprob: -8.400269508361816
    9. '()))' → logprob: -9.025269508361816
    10. '()>' → logprob: -9.275269508361816

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1994775377388578e-05
    2. 'strip' → logprob: -11.625012397766113
    3. ' split' → logprob: -13.750012397766113
    4. 'rstrip' → logprob: -13.875012397766113
    5. '(split' → logprob: -14.750012397766113
    6. ')' → logprob: -15.125012397766113
    7. 'spl' → logprob: -15.875012397766113
    8. '```' → logprob: -15.875012397766113
    9. 's' → logprob: -17.125011444091797
    10. ' ' → logprob: -18.375011444091797

Token 32: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008565509924665093
    2. '())' → logprob: -7.500856399536133
    3. '()' → logprob: -8.625856399536133
    4. '(' → logprob: -9.750856399536133
    5. '))' → logprob: -10.000856399536133
    6. '`)' → logprob: -12.125856399536133
    7. ' )' → logprob: -12.625856399536133
    8. '),' → logprob: -12.750856399536133
    9. '('' → logprob: -13.000856399536133
    10. ')`' → logprob: -13.500856399536133

Token 33: 's' (ID: 82)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6654049158096313
    2. 'a' → logprob: -1.0404049158096313
    3. 'edges' → logprob: -3.540404796600342
    4. ' graph' → logprob: -3.665404796600342
    5. ' 
' → logprob: -4.415404796600342
    6. 'array' → logprob: -5.040404796600342
    7. 'd' → logprob: -5.040404796600342
    8. 'A' → logprob: -5.415404796600342
    9. ' edges' → logprob: -5.415404796600342
    10. ')' → logprob: -5.540404796600342

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11401014775037766
    2. '=' → logprob: -2.2390100955963135
    3. ',' → logprob: -8.239009857177734
    4. ' ' → logprob: -8.614009857177734
    5. '.' → logprob: -8.739009857177734
    6. 'p' → logprob: -8.864009857177734
    7. '[' → logprob: -8.989009857177734
    8. 'paces' → logprob: -10.239009857177734
    9. 't' → logprob: -10.489009857177734
    10. ' =[' → logprob: -10.739009857177734

Token 35: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47458115220069885
    2. 'input' → logprob: -0.9745811223983765
    3. ' list' → logprob: -8.099580764770508
    4. 'list' → logprob: -9.099580764770508
    5. ' ' → logprob: -10.224580764770508
    6. '[input' → logprob: -11.099580764770508
    7. ' [' → logprob: -11.724580764770508
    8. '=input' → logprob: -11.849580764770508
    9. '(input' → logprob: -12.599580764770508
    10. '[' → logprob: -12.974580764770508

Token 36: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05013313889503479
    2. '(input' → logprob: -3.175133228302002
    3. '(str' → logprob: -5.050133228302002
    4. '(int' → logprob: -8.425132751464844
    5. '()' → logprob: -8.675132751464844
    6. '(range' → logprob: -9.300132751464844
    7. '(s' → logprob: -9.675132751464844
    8. '(map' → logprob: -10.175132751464844
    9. '("("' → logprob: -10.800132751464844
    10. '('' → logprob: -11.050132751464844

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.157039049663581e-05
    2. '(' → logprob: -10.625051498413086
    3. 'int' → logprob: -11.250051498413086
    4. '[int' → logprob: -11.875051498413086
    5. ',int' → logprob: -12.875051498413086
    6. '(str' → logprob: -12.875051498413086
    7. '=int' → logprob: -14.375051498413086
    8. '<int' → logprob: -14.375051498413086
    9. ']int' → logprob: -14.875051498413086
    10. '```' → logprob: -15.750051498413086

Token 38: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4252474009990692
    2. ',input' → logprob: -1.1752474308013916
    3. ',' → logprob: -3.6752474308013916
    4. '(' → logprob: -4.4252471923828125
    5. ' ,' → logprob: -9.300247192382812
    6. ' (' → logprob: -9.300247192382812
    7. ',(' → logprob: -10.050247192382812
    8. 'input' → logprob: -10.050247192382812
    9. '(),' → logprob: -10.175247192382812
    10. '=input' → logprob: -12.050247192382812

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31326448917388916
    2. ' input' → logprob: -1.3132644891738892
    3. '(input' → logprob: -13.688264846801758
    4. ',input' → logprob: -14.438264846801758
    5. ' ' → logprob: -15.063264846801758
    6. '	input' → logprob: -15.688264846801758
    7. ' sys' → logprob: -15.813264846801758
    8. '=input' → logprob: -15.938264846801758
    9. '[input' → logprob: -16.438264846801758
    10. ')' → logprob: -16.563264846801758

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002124806633219123
    2. '()' → logprob: -8.500212669372559
    3. '(' → logprob: -12.375212669372559
    4. ' ().' → logprob: -12.625212669372559
    5. ')' → logprob: -14.750212669372559
    6. '.' → logprob: -15.125212669372559
    7. '(.' → logprob: -15.375212669372559
    8. '(input' → logprob: -15.875212669372559
    9. '()))' → logprob: -16.500211715698242
    10. '())' → logprob: -16.875211715698242

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001601539261173457
    2. 'strip' → logprob: -8.750160217285156
    3. '(split' → logprob: -14.375160217285156
    4. ' split' → logprob: -15.000160217285156
    5. 'rstrip' → logprob: -15.375160217285156
    6. 'str' → logprob: -16.125160217285156
    7. 'read' → logprob: -16.250160217285156
    8. ')' → logprob: -16.500160217285156
    9. 'plit' → logprob: -17.000160217285156
    10. 'spl' → logprob: -17.125160217285156

Token 42: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.22831130027770996
    2. '))' → logprob: -1.72831130027771
    3. '())' → logprob: -4.103311538696289
    4. ')' → logprob: -4.978311538696289
    5. '()' → logprob: -5.853311538696289
    6. '(' → logprob: -8.353311538696289
    7. '()))
' → logprob: -11.978311538696289
    8. '()));' → logprob: -12.103311538696289
    9. '()),' → logprob: -12.353311538696289
    10. '(),' → logprob: -13.103311538696289

Token 43: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38598790764808655
    2. ')' → logprob: -1.3859878778457642
    3. 'd' → logprob: -3.5109879970550537
    4. 'a' → logprob: -4.385987758636475
    5. 't' → logprob: -5.010987758636475
    6. '[' → logprob: -5.385987758636475
    7. ']' → logprob: -6.260987758636475
    8. '
' → logprob: -6.385987758636475
    9. 'c' → logprob: -6.635987758636475
    10. '#' → logprob: -6.635987758636475

Token 44: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15925265848636627
    2. 'd' → logprob: -2.534252643585205
    3. '_' → logprob: -4.159252643585205
    4. '#' → logprob: -4.284252643585205
    5. ' dp' → logprob: -4.409252643585205
    6. 'for' → logprob: -4.659252643585205
    7. 's' → logprob: -5.034252643585205
    8. 'a' → logprob: -6.159252643585205
    9. '[' → logprob: -6.659252643585205
    10. 'from' → logprob: -6.659252643585205

Token 45: ' va' (ID: 3423)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0005774584715254605
    2. 'ly' → logprob: -8.000577926635742
    3. 'es' → logprob: -9.125577926635742
    4. ' e' → logprob: -10.000577926635742
    5. 'line' → logprob: -10.500577926635742
    6. 'eline' → logprob: -11.250577926635742
    7. '_e' → logprob: -11.500577926635742
    8. 'el' → logprob: -11.750577926635742
    9. 'ed' → logprob: -12.000577926635742
    10. 'ce' → logprob: -12.250577926635742

Token 46: ' faire' (ID: 8119)
  Prédit: ' essayer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' essayer' → logprob: -1.658657193183899
    2. ' continuer' → logprob: -2.2836570739746094
    3. ' construire' → logprob: -2.9086570739746094
    4. 's' → logprob: -3.0336570739746094
    5. 'contin' → logprob: -3.0336570739746094
    6. ' ' → logprob: -3.1586570739746094
    7. 'coder' → logprob: -3.2836570739746094
    8. 'def' → logprob: -3.4086570739746094
    9. ' créer' → logprob: -3.5336570739746094
    10. 'b' → logprob: -3.9086570739746094

Token 47: ' une' (ID: 2463)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7571300864219666
    2. 'une' → logprob: -1.3821301460266113
    3. ' une' → logprob: -2.3821301460266113
    4. 's' → logprob: -3.3821301460266113
    5. ' un' → logprob: -3.5071301460266113
    6. '#' → logprob: -3.8821301460266113
    7. 'dp' → logprob: -4.007130146026611
    8. '[]' → logprob: -4.257130146026611
    9. 'dfs' → logprob: -4.757130146026611
    10. 'def' → logprob: -5.007130146026611

Token 48: ' recherche' (ID: 24975)
  Prédit: ' programmation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -0.27502915263175964
    2. 'programm' → logprob: -2.025029182434082
    3. 'program' → logprob: -3.525029182434082
    4. 'prog' → logprob: -4.275029182434082
    5. 'dfs' → logprob: -4.400029182434082
    6. ' recherche' → logprob: -4.775029182434082
    7. '```' → logprob: -4.900029182434082
    8. 'fonction' → logprob: -5.150029182434082
    9. 'dp' → logprob: -5.525029182434082
    10. 'table' → logprob: -5.650029182434082

Token 49: ' par' (ID: 686)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.15043453872203827
    2. 'en' → logprob: -2.9004344940185547
    3. '_depth' → logprob: -3.6504344940185547
    4. ' en' → logprob: -4.650434494018555
    5. 'b' → logprob: -4.775434494018555
    6. ' dfs' → logprob: -4.775434494018555
    7. '_' → logprob: -5.400434494018555
    8. 'prof' → logprob: -5.525434494018555
    9. 'depth' → logprob: -5.525434494018555
    10. 'd' → logprob: -5.775434494018555

Token 50: ' essais' (ID: 186139)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.09380806237459183
    2. 'prof' → logprob: -3.343808174133301
    3. 'dfs' → logprob: -3.343808174133301
    4. ' profondeur' → logprob: -4.843808174133301
    5. 'd' → logprob: -5.218808174133301
    6. 'back' → logprob: -6.718808174133301
    7. 'p' → logprob: -6.843808174133301
    8. 'b' → logprob: -6.968808174133301
    9. '_pro' → logprob: -7.593808174133301
    10. 'rec' → logprob: -8.2188081741333

Token 51: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13019534945487976
    2. ',' → logprob: -3.130195379257202
    3. 's' → logprob: -4.130195140838623
    4. ':' → logprob: -4.505195140838623
    5. '.' → logprob: -4.630195140838623
    6. 'de' → logprob: -4.755195140838623
    7. 'd' → logprob: -5.255195140838623
    8. '(' → logprob: -5.255195140838623
    9. '_' → logprob: -5.630195140838623
    10. ')' → logprob: -5.755195140838623

Token 52: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8831417560577393
    2. 'low' → logprob: -2.2581417560577393
    3. 'mid' → logprob: -2.8831417560577393
    4. 'left' → logprob: -3.2581417560577393
    5. 'b' → logprob: -3.5081417560577393
    6. 'def' → logprob: -3.6331417560577393
    7. 'lo' → logprob: -3.7581417560577393
    8. 'p' → logprob: -3.7581417560577393
    9. 'dp' → logprob: -4.00814151763916
    10. ' ' → logprob: -4.00814151763916

Token 53: ' chaque' (ID: 21194)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.26986169815063477
    2. ' trouver' → logprob: -2.3948616981506348
    3. 'voir' → logprob: -2.8948616981506348
    4. ' voir' → logprob: -4.144861698150635
    5. ' déterminer' → logprob: -4.519861698150635
    6. 'determ' → logprob: -4.769861698150635
    7. 'dé' → logprob: -4.894861698150635
    8. 't' → logprob: -5.144861698150635
    9. 'val' → logprob: -5.644861698150635
    10. 'v' → logprob: -5.769861698150635

Token 54: ' document' (ID: 3213)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9776783585548401
    2. 'i' → logprob: -1.1026782989501953
    3. 'élé' → logprob: -2.2276782989501953
    4. 'nombre' → logprob: -2.6026782989501953
    5. 'k' → logprob: -3.4776782989501953
    6. 'position' → logprob: -4.352678298950195
    7. 'c' → logprob: -5.477678298950195
    8. 'long' → logprob: -5.477678298950195
    9. 'poss' → logprob: -5.477678298950195
    10. 'possible' → logprob: -5.727678298950195

Token 55: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08385796844959259
    2. ':' → logprob: -2.958858013153076
    3. 's' → logprob: -4.708858013153076
    4. '.' → logprob: -5.333858013153076
    5. ' ,' → logprob: -5.458858013153076
    6. ' i' → logprob: -6.333858013153076
    7. 'i' → logprob: -6.958858013153076
    8. ' :' → logprob: -7.083858013153076
    9. ' s' → logprob: -7.083858013153076
    10. ' ' → logprob: -7.208858013153076

Token 56: ' peut' (ID: 9216)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.7149984836578369
    2. 'cherche' → logprob: -1.964998483657837
    3. 'v' → logprob: -2.714998483657837
    4. 'for' → logprob: -3.089998483657837
    5. ' cherche' → logprob: -3.339998483657837
    6. ' essayer' → logprob: -3.464998483657837
    7. 'ver' → logprob: -3.839998483657837
    8. 'va' → logprob: -4.214998245239258
    9. ' vérifier' → logprob: -4.339998245239258
    10. '#' → logprob: -4.839998245239258

Token 57: ' le' (ID: 505)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -1.639626383781433
    2. 'le' → logprob: -1.764626383781433
    3. ' choisir' → logprob: -1.889626383781433
    4. ' le' → logprob: -2.5146265029907227
    5. 'avoir' → logprob: -2.5146265029907227
    6. 'cho' → logprob: -2.7646265029907227
    7. ' essayer' → logprob: -3.1396265029907227
    8. 'penser' → logprob: -4.014626502990723
    9. ' mettre' → logprob: -4.264626502990723
    10. 'prendre' → logprob: -4.389626502990723

Token 58: ' mettre' (ID: 25339)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.7327960729598999
    2. 'placer' → logprob: -1.4827960729599
    3. 'prendre' → logprob: -2.6077961921691895
    4. 'aj' → logprob: -3.9827961921691895
    5. ' placer' → logprob: -4.1077961921691895
    6. 'r' → logprob: -4.3577961921691895
    7. 'penser' → logprob: -4.3577961921691895
    8. ' mettre' → logprob: -4.6077961921691895
    9. 'tr' → logprob: -4.6077961921691895
    10. 'faire' → logprob: -4.7327961921691895

Token 59: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.42664799094200134
    2. '#' → logprob: -1.8016480207443237
    3. ' ' → logprob: -3.801647901535034
    4. 's' → logprob: -3.801647901535034
    5. 'à' → logprob: -3.801647901535034
    6. 'au' → logprob: -4.051648139953613
    7. ' dans' → logprob: -4.176648139953613
    8. 'a' → logprob: -4.176648139953613
    9. ' à' → logprob: -4.676648139953613
    10. 'en' → logprob: -4.676648139953613

Token 60: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.5313173532485962
    2. 'un' → logprob: -1.9063173532485962
    3. 'le' → logprob: -2.0313172340393066
    4. 'either' → logprob: -2.2813172340393066
    5. 'de' → logprob: -2.5313172340393066
    6. 'l' → logprob: -2.6563172340393066
    7. 'n' → logprob: -2.7813172340393066
    8. ' either' → logprob: -3.0313172340393066
    9. ' un' → logprob: -3.9063172340393066
    10. ' n' → logprob: -3.9063172340393066

Token 61: ' pile' (ID: 39732)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.5743942856788635
    2. 'm' → logprob: -1.9493942260742188
    3. 'mé' → logprob: -2.6993942260742188
    4. 'pile' → logprob: -2.8243942260742188
    5. 'liste' → logprob: -3.6993942260742188
    6. 'case' → logprob: -4.699394226074219
    7. 'memo' → logprob: -4.699394226074219
    8. 'even' → logprob: -4.699394226074219
    9. ' liste' → logprob: -4.824394226074219
    10. 'pl' → logprob: -4.949394226074219

Token 62: ' A' (ID: 355)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6259527206420898
    2. ' ' → logprob: -1.3759527206420898
    3. 's' → logprob: -2.50095272064209
    4. ' ,' → logprob: -2.87595272064209
    5. '.' → logprob: -3.37595272064209
    6. ' #' → logprob: -5.00095272064209
    7. ' ou' → logprob: -5.25095272064209
    8. '#' → logprob: -5.50095272064209
    9. ' or' → logprob: -5.75095272064209
    10. '  ' → logprob: -5.87595272064209

Token 63: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.3907535970211029
    2. ',' → logprob: -1.5157536268234253
    3. 'ou' → logprob: -3.1407535076141357
    4. ' or' → logprob: -3.8907535076141357
    5. ' ' → logprob: -4.015753746032715
    6. '.' → logprob: -5.515753746032715
    7. '#' → logprob: -5.765753746032715
    8. 'or' → logprob: -6.140753746032715
    9. 's' → logprob: -6.265753746032715
    10. ')' → logprob: -6.265753746032715

Token 64: ' B' (ID: 418)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.580300509929657
    2. 'B' → logprob: -1.5803005695343018
    3. ' B' → logprob: -2.4553005695343018
    4. ' dans' → logprob: -2.7053005695343018
    5. 'dans' → logprob: -2.9553005695343018
    6. 'la' → logprob: -4.080300331115723
    7. 'pile' → logprob: -5.080300331115723
    8. '#' → logprob: -6.205300331115723
    9. ' pile' → logprob: -6.205300331115723
    10. ' in' → logprob: -7.705300331115723

Token 65: '
' (ID: 198)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.19156400859355927
    2. ',' → logprob: -2.1915640830993652
    3. 'pile' → logprob: -4.066564083099365
    4. 'for' → logprob: -4.441564083099365
    5. 'def' → logprob: -4.566564083099365
    6. 'a' → logprob: -4.941564083099365
    7. 'A' → logprob: -5.316564083099365
    8. '.' → logprob: -6.191564083099365
    9. 'dp' → logprob: -6.566564083099365
    10. '#' → logprob: -6.566564083099365

Token 66: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20608222484588623
    2. 'stack' → logprob: -1.9560822248458862
    3. ',' → logprob: -4.206082344055176
    4. ':' → logprob: -4.331082344055176
    5. '
' → logprob: -4.831082344055176
    6. '_stack' → logprob: -5.706082344055176
    7. ' stack' → logprob: -7.081082344055176
    8. 'visited' → logprob: -7.456082344055176
    9. '#' → logprob: -7.581082344055176
    10. '(stack' → logprob: -7.706082344055176

Token 67: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10627339035272598
    2. 'stack' → logprob: -2.3562734127044678
    3. 'result' → logprob: -6.606273174285889
    4. 'visited' → logprob: -6.606273174285889
    5. 'dp' → logprob: -6.731273174285889
    6. 'res' → logprob: -7.856273174285889
    7. 'from' → logprob: -7.981273174285889
    8. 'pile' → logprob: -8.231273651123047
    9. '#' → logprob: -8.606273651123047
    10. 'answers' → logprob: -8.606273651123047

Token 68: ' garde' (ID: 65309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5678161382675171
    2. 'a' → logprob: -2.8178162574768066
    3. '=' → logprob: -3.1928162574768066
    4. 'for' → logprob: -3.3178162574768066
    5. ' =' → logprob: -3.3178162574768066
    6. 's' → logprob: -3.4428162574768066
    7. '_' → logprob: -3.4428162574768066
    8. ''' → logprob: -3.6928162574768066
    9. 'n' → logprob: -3.9428162574768066
    10. ' peut' → logprob: -4.067816257476807

Token 69: ' les' (ID: 1341)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4700985252857208
    2. ' deux' → logprob: -2.4700984954833984
    3. ' une' → logprob: -2.7200984954833984
    4. 'une' → logprob: -2.8450984954833984
    5. 'un' → logprob: -3.5950984954833984
    6. 'la' → logprob: -3.7200984954833984
    7. 'le' → logprob: -3.8450984954833984
    8. 'a' → logprob: -3.8450984954833984
    9. ' un' → logprob: -4.470098495483398
    10. '[]' → logprob: -4.970098495483398

Token 70: ' piles' (ID: 90498)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2934831380844116
    2. 'me' → logprob: -2.668483257293701
    3. 'sets' → logprob: -2.668483257293701
    4. ' deux' → logprob: -2.793483257293701
    5. ' piles' → logprob: -3.043483257293701
    6. 'm' → logprob: -3.418483257293701
    7. ' états' → logprob: -3.543483257293701
    8. 'stack' → logprob: -3.918483257293701
    9. 'memo' → logprob: -4.043483257293701
    10. 'indices' → logprob: -4.293483257293701

Token 71: ' comme' (ID: 7971)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5261415839195251
    2. 'a' → logprob: -0.9011415839195251
    3. 'stack' → logprob: -6.77614164352417
    4. 's' → logprob: -7.40114164352417
    5. '_a' → logprob: -7.65114164352417
    6. '_' → logprob: -8.401141166687012
    7. ' A' → logprob: -8.526141166687012
    8. '_stack' → logprob: -9.151141166687012
    9. ',' → logprob: -9.401141166687012
    10. '_A' → logprob: -9.901141166687012

Token 72: ' listes' (ID: 179198)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8339570760726929
    2. 'des' → logprob: -0.8339570760726929
    3. ' deux' → logprob: -3.0839571952819824
    4. '2' → logprob: -3.2089571952819824
    5. ' des' → logprob: -3.8339571952819824
    6. 'une' → logprob: -4.958957195281982
    7. '[]' → logprob: -5.333957195281982
    8. 'list' → logprob: -5.333957195281982
    9. ' ' → logprob: -6.833957195281982
    10. 'a' → logprob: -6.958957195281982

Token 73: ' (' (ID: 350)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16450031101703644
    2. 'a' → logprob: -1.91450035572052
    3. 'stack' → logprob: -6.5395002365112305
    4. ',' → logprob: -6.7895002365112305
    5. '
' → logprob: -7.5395002365112305
    6. ' A' → logprob: -7.7895002365112305
    7. ',
' → logprob: -8.28950023651123
    8. '```' → logprob: -9.03950023651123
    9. '#' → logprob: -9.16450023651123
    10. 'def' → logprob: -9.66450023651123

Token 74: 'emp' (ID: 7175)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3931567668914795
    2. 'A' → logprob: -1.6431567668914795
    3. '[])' → logprob: -1.6431567668914795
    4. '[]' → logprob: -1.7681567668914795
    5. 'stack' → logprob: -2.5181567668914795
    6. '),' → logprob: -3.8931567668914795
    7. 'a' → logprob: -4.143157005310059
    8. 'de' → logprob: -4.143157005310059
    9. ' de' → logprob: -4.643157005310059
    10. ' stacks' → logprob: -4.643157005310059

Token 75: 'ilent' (ID: 127840)
  Prédit: 'iler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iler' → logprob: -0.20701569318771362
    2. 'il' → logprob: -2.2070157527923584
    3. 'ile' → logprob: -3.7070157527923584
    4. '```' → logprob: -4.582015514373779
    5. '#' → logprob: -4.957015514373779
    6. 'ty' → logprob: -5.082015514373779
    7. ')' → logprob: -6.144515514373779
    8. 'ilé' → logprob: -6.269515514373779
    9. '}' → logprob: -6.707015514373779
    10. '   ' → logprob: -6.769515514373779

Token 76: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7119119763374329
    2. ' et' → logprob: -1.336911916732788
    3. 'et' → logprob: -2.336911916732788
    4. '()' → logprob: -3.336911916732788
    5. ',' → logprob: -3.961911916732788
    6. 's' → logprob: -4.086912155151367
    7. '.append' → logprob: -4.086912155151367
    8. ' and' → logprob: -4.586912155151367
    9. '),' → logprob: -4.711912155151367
    10. '())' → logprob: -4.961912155151367

Token 77: ' droite' (ID: 61428)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.29308444261550903
    2. 'l' → logprob: -1.9180843830108643
    3. ' la' → logprob: -2.4180843830108643
    4. 'append' → logprob: -4.668084621429443
    5. ' l' → logprob: -5.918084621429443
    6. '.append' → logprob: -6.543084621429443
    7. ')' → logprob: -7.543084621429443
    8. 'fin' → logprob: -7.668084621429443
    9. 'a' → logprob: -7.918084621429443
    10. 'lap' → logprob: -7.918084621429443

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007587654399685562
    2. '),' → logprob: -8.37575912475586
    3. ',' → logprob: -8.62575912475586
    4. '#' → logprob: -9.37575912475586
    5. ' )' → logprob: -9.50075912475586
    6. ')#' → logprob: -9.75075912475586
    7. ').' → logprob: -10.37575912475586
    8. '):' → logprob: -10.62575912475586
    9. 'for' → logprob: -10.87575912475586
    10. 's' → logprob: -11.75075912475586

Token 79: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8457655906677246
    2. 'stack' → logprob: -1.3457655906677246
    3. 'dp' → logprob: -2.0957655906677246
    4. 'a' → logprob: -2.4707655906677246
    5. 'A' → logprob: -2.9707655906677246
    6. 'pile' → logprob: -3.2207655906677246
    7. 'p' → logprob: -6.095765590667725
    8. 'res' → logprob: -6.220765590667725
    9. 'result' → logprob: -6.720765590667725
    10. 'from' → logprob: -6.845765590667725

Token 80: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5739515423774719
    2. 'stack' → logprob: -1.4489514827728271
    3. 'A' → logprob: -2.448951482772827
    4. 'dp' → logprob: -3.073951482772827
    5. 'pile' → logprob: -3.573951482772827
    6. 'from' → logprob: -4.073951721191406
    7. 'a' → logprob: -4.198951721191406
    8. 'visited' → logprob: -6.448951721191406
    9. 'res' → logprob: -6.698951721191406
    10. 'memo' → logprob: -6.698951721191406

Token 81: ' s' (ID: 265)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.8802908062934875
    2. 'def' → logprob: -1.1302907466888428
    3. ' continue' → logprob: -1.6302907466888428
    4. 'continue' → logprob: -4.005290985107422
    5. ' def' → logprob: -4.630290985107422
    6. ' veut' → logprob: -4.880290985107422
    7. ' peut' → logprob: -5.380290985107422
    8. 'contin' → logprob: -6.130290985107422
    9. ' pense' → logprob: -6.255290985107422
    10. ' a' → logprob: -6.255290985107422

Token 82: ''ass' (ID: 43919)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0769857168197632
    2. 't' → logprob: -2.0769858360290527
    3. 'et' → logprob: -2.2019858360290527
    4. 'u' → logprob: -2.9519858360290527
    5. ''agit' → logprob: -3.4519858360290527
    6. 'ur' → logprob: -3.5769858360290527
    7. 'def' → logprob: -3.5769858360290527
    8. ''inté' → logprob: -3.7019858360290527
    9. 'earch' → logprob: -3.9519858360290527
    10. 'atisf' → logprob: -4.076985836029053

Token 83: 'ure' (ID: 627)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ert' → logprob: -1.3115495443344116
    2. 'er' → logprob: -1.8115495443344116
    3. 'et' → logprob: -2.061549663543701
    4. 'ume' → logprob: -2.686549663543701
    5. 'ur' → logprob: -2.811549663543701
    6. 'ure' → logprob: -2.936549663543701
    7. 'igne' → logprob: -2.936549663543701
    8. '#' → logprob: -3.061549663543701
    9. 'e' → logprob: -3.186549663543701
    10. 'ign' → logprob: -3.436549663543701

Token 84: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.019386552274227142
    2. 'que' → logprob: -4.8943867683410645
    3. 'd' → logprob: -5.8943867683410645
    4. ' de' → logprob: -5.8943867683410645
    5. ' ' → logprob: -6.1443867683410645
    6. 'de' → logprob: -7.1443867683410645
    7. ' à' → logprob: -7.6443867683410645
    8. ' qu' → logprob: -7.7693867683410645
    9. ' toujours' → logprob: -7.7693867683410645
    10. ' d' → logprob: -8.019386291503906

Token 85: ''en' (ID: 16740)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.770297110080719
    2. 'e' → logprob: -1.2702970504760742
    3. ''' → logprob: -2.520297050476074
    4. 'que' → logprob: -2.895297050476074
    5. 'qu' → logprob: -3.645297050476074
    6. '   ' → logprob: -4.145297050476074
    7. ''il' → logprob: -4.270297050476074
    8. ' qu' → logprob: -4.270297050476074
    9. ' ' → logprob: -4.645297050476074
    10. 'a' → logprob: -4.770297050476074

Token 86: ' ajout' (ID: 64605)
  Prédit: ' emp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' emp' → logprob: -0.44113537669181824
    2. 'emp' → logprob: -2.1911354064941406
    3. 'aj' → logprob: -2.4411354064941406
    4. 'met' → logprob: -3.9411354064941406
    5. ' ajout' → logprob: -3.9411354064941406
    6. ' mettant' → logprob: -4.066135406494141
    7. 'stack' → logprob: -4.316135406494141
    8. 'mettre' → logprob: -4.441135406494141
    9. ' respect' → logprob: -4.941135406494141
    10. ' stack' → logprob: -5.066135406494141

Token 87: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.06768807768821716
    2. 'a' → logprob: -3.06768798828125
    3. 'd' → logprob: -4.94268798828125
    4. '```' → logprob: -5.94268798828125
    5. 'ont' → logprob: -6.06768798828125
    6. 'à' → logprob: -6.44268798828125
    7. 'e' → logprob: -7.19268798828125
    8. 'out' → logprob: -7.19268798828125
    9. '#' → logprob: -7.44268798828125
    10. 't' → logprob: -7.81768798828125

Token 88: ' le' (ID: 505)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.5801963806152344
    2. 'le' → logprob: -1.7051963806152344
    3. ' un' → logprob: -1.9551963806152344
    4. 'l' → logprob: -2.4551963806152344
    5. 'a' → logprob: -2.5801963806152344
    6. 'les' → logprob: -2.8301963806152344
    7. ' le' → logprob: -3.3301963806152344
    8. 'dans' → logprob: -3.3301963806152344
    9. 'la' → logprob: -3.8301963806152344
    10. 's' → logprob: -4.080196380615234

Token 89: ' document' (ID: 3213)
  Prédit: 'document'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'document' → logprob: -1.0772520303726196
    2. 'élé' → logprob: -1.2022520303726196
    3. ' document' → logprob: -2.07725191116333
    4. 'nou' → logprob: -2.82725191116333
    5. ' nouveau' → logprob: -2.82725191116333
    6. ' nouvel' → logprob: -3.20225191116333
    7. ' prochain' → logprob: -3.82725191116333
    8. ' élément' → logprob: -4.57725191116333
    9. 's' → logprob: -4.95225191116333
    10. 'token' → logprob: -5.57725191116333

Token 90: ' la' (ID: 557)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6948751211166382
    2. ',' → logprob: -1.0698751211166382
    3. ' ' → logprob: -3.3198752403259277
    4. 'à' → logprob: -3.4448752403259277
    5. ' to' → logprob: -3.8198752403259277
    6. 's' → logprob: -4.194875240325928
    7. ' s' → logprob: -4.569875240325928
    8. ' au' → logprob: -5.319875240325928
    9. ' dans' → logprob: -5.319875240325928
    10. ' a' → logprob: -5.444875240325928

Token 91: ' pile' (ID: 39732)
  Prédit: ' pile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pile' → logprob: -0.6536605358123779
    2. 'pile' → logprob: -1.403660535812378
    3. 's' → logprob: -3.278660535812378
    4. ' taille' → logprob: -3.403660535812378
    5. ' valeur' → logprob: -4.028660774230957
    6. ' hauteur' → logprob: -4.153660774230957
    7. ' stack' → logprob: -4.278660774230957
    8. 'stack' → logprob: -4.528660774230957
    9. ' condition' → logprob: -4.528660774230957
    10. ' propriété' → logprob: -4.591160774230957

Token 92: ' reste' (ID: 26769)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6754063367843628
    2. ' A' → logprob: -0.8004063367843628
    3. ' ne' → logprob: -3.8004064559936523
    4. 'B' → logprob: -5.675406455993652
    5. 's' → logprob: -5.675406455993652
    6. ' B' → logprob: -6.300406455993652
    7. '   ' → logprob: -6.425406455993652
    8. ' de' → logprob: -6.550406455993652
    9. 'ne' → logprob: -6.800406455993652
    10. ' n' → logprob: -7.050406455993652

Token 93: ' strict' (ID: 12035)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.8275527954101562
    2. ' tri' → logprob: -1.3275527954101562
    3. 'cro' → logprob: -1.4525527954101562
    4. 'strict' → logprob: -3.7025527954101562
    5. 'sorted' → logprob: -4.327552795410156
    6. 'tr' → logprob: -4.577552795410156
    7. ' cro' → logprob: -5.202552795410156
    8. ' sorted' → logprob: -5.577552795410156
    9. 'mon' → logprob: -6.952552795410156
    10. ' valide' → logprob: -6.952552795410156

Token 94: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.05811091139912605
    2. 'ly' → logprob: -2.9331109523773193
    3. 'ment' → logprob: -6.55811071395874
    4. 'lement' → logprob: -6.93311071395874
    5. 'ément' → logprob: -8.308111190795898
    6. 'emment' → logprob: -8.558111190795898
    7. 'ely' → logprob: -9.308111190795898
    8. 'e' → logprob: -9.808111190795898
    9. 'ument' → logprob: -10.308111190795898
    10. '_' → logprob: -10.558111190795898

Token 95: ' décro' (ID: 176854)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.040202271193265915
    2. ' cro' → logprob: -3.4152023792266846
    3. 'mon' → logprob: -6.0402021408081055
    4. 'mont' → logprob: -6.5402021408081055
    5. 'in' → logprob: -6.7902021408081055
    6. 'strict' → logprob: -7.9152021408081055
    7. ' décro' → logprob: -8.040202140808105
    8. 'ly' → logprob: -8.165202140808105
    9. 'de' → logprob: -9.290202140808105
    10. 'creasing' → logprob: -10.040202140808105

Token 96: 'issante' (ID: 80061)
  Prédit: 'issante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.009220459498465061
    2. 'issant' → logprob: -4.759220600128174
    3. 'is' → logprob: -7.884220600128174
    4. 'iss' → logprob: -8.759220123291016
    5. '#' → logprob: -10.134220123291016
    6. '
' → logprob: -11.634220123291016
    7. 'issent' → logprob: -12.634220123291016
    8. 'ss' → logprob: -12.634220123291016
    9. 'issants' → logprob: -13.009220123291016
    10. 'i' → logprob: -13.134220123291016

Token 97: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7145285606384277
    2. 'A' → logprob: -1.2145285606384277
    3. 'stack' → logprob: -2.4645285606384277
    4. 'dp' → logprob: -2.9645285606384277
    5. 'from' → logprob: -3.2145285606384277
    6. 'a' → logprob: -3.5895285606384277
    7. 'pile' → logprob: -5.839528560638428
    8. '
' → logprob: -6.214528560638428
    9. 'import' → logprob: -7.089528560638428
    10. '#' → logprob: -7.089528560638428

Token 98: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13417167961597443
    2. ' )' → logprob: -2.134171724319458
    3. 'def' → logprob: -5.384171485900879
    4. 'if' → logprob: -7.634171485900879
    5. '#' → logprob: -8.509171485900879
    6. ')n' → logprob: -8.634171485900879
    7. ')#' → logprob: -8.634171485900879
    8. ',' → logprob: -8.759171485900879
    9. ' if' → logprob: -9.134171485900879
    10. 'si' → logprob: -9.134171485900879

Token 99: ' on' (ID: 402)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1324189901351929
    2. ' on' → logprob: -1.7574189901351929
    3. ' les' → logprob: -1.8824189901351929
    4. 'le' → logprob: -2.7574191093444824
    5. 'on' → logprob: -2.8824191093444824
    6. 'c' → logprob: -3.6324191093444824
    7. 's' → logprob: -3.7574191093444824
    8. ' chaque' → logprob: -3.7574191093444824
    9. ' le' → logprob: -4.382419109344482
    10. 'l' → logprob: -4.382419109344482

Token 100: ' doit' (ID: 21822)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -1.3547285795211792
    2. 've' → logprob: -1.4797285795211792
    3. 'pe' → logprob: -1.7297285795211792
    4. ' ne' → logprob: -3.1047286987304688
    5. 'a' → logprob: -3.2297286987304688
    6. 'aj' → logprob: -3.3547286987304688
    7. ' veut' → logprob: -3.4797286987304688
    8. 'n' → logprob: -3.6047286987304688
    9. 'do' → logprob: -3.7297286987304688
    10. 'cherche' → logprob: -3.9797286987304688

Token 101: ' avoir' (ID: 16595)
  Prédit: 'emp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'emp' → logprob: -1.4859801530838013
    2. ' pouvoir' → logprob: -2.1109800338745117
    3. 'p' → logprob: -2.2359800338745117
    4. ' emp' → logprob: -2.3609800338745117
    5. 'tr' → logprob: -2.3609800338745117
    6. 'avoir' → logprob: -3.1109800338745117
    7. 'respect' → logprob: -3.2359800338745117
    8. 'mettre' → logprob: -3.7359800338745117
    9. ' respecter' → logprob: -3.8609800338745117
    10. ' conserver' → logprob: -4.110980033874512

Token 102: ' l' (ID: 305)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.112884521484375
    2. 'un' → logprob: -1.987884521484375
    3. ' des' → logprob: -2.237884521484375
    4. ' une' → logprob: -2.487884521484375
    5. 'une' → logprob: -2.987884521484375
    6. 'strict' → logprob: -2.987884521484375
    7. 'les' → logprob: -3.237884521484375
    8. 'des' → logprob: -3.612884521484375
    9. 'le' → logprob: -3.737884521484375
    10. ' les' → logprob: -3.862884521484375

Token 103: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.848239004611969
    2. 'e' → logprob: -1.3482389450073242
    3. ''ordre' → logprob: -1.5982389450073242
    4. ''' → logprob: -3.848238945007324
    5. ''état' → logprob: -4.098238945007324
    6. ''a' → logprob: -4.848238945007324
    7. 'es' → logprob: -5.223238945007324
    8. ''ensemble' → logprob: -5.598238945007324
    9. ''ex' → logprob: -5.848238945007324
    10. ''aj' → logprob: -6.098238945007324

Token 104: ' inverse' (ID: 53743)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.321182519197464
    2. ' strict' → logprob: -2.0711824893951416
    3. ' des' → logprob: -3.3211824893951416
    4. 'cro' → logprob: -3.4461824893951416
    5. 'd' → logprob: -4.071182727813721
    6. ' naturel' → logprob: -4.821182727813721
    7. ' décro' → logprob: -4.946182727813721
    8. 'de' → logprob: -4.946182727813721
    9. 'inverse' → logprob: -4.946182727813721
    10. 'des' → logprob: -5.071182727813721

Token 105: ')
' (ID: 446)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2774587869644165
    2. ')' → logprob: -2.277458667755127
    3. 'des' → logprob: -3.027458667755127
    4. 'du' → logprob: -3.277458667755127
    5. ' de' → logprob: -3.527458667755127
    6. 'd' → logprob: -4.527458667755127
    7. ' du' → logprob: -5.402458667755127
    8. 'dans' → logprob: -6.277458667755127
    9. ' des' → logprob: -6.402458667755127
    10. 'pour' → logprob: -7.027458667755127

Token 106: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4642618000507355
    2. 'dp' → logprob: -1.589261770248413
    3. 'A' → logprob: -2.839261770248413
    4. 'from' → logprob: -3.089261770248413
    5. 'stack' → logprob: -3.214261770248413
    6. 'a' → logprob: -4.464262008666992
    7. 'res' → logprob: -5.339262008666992
    8. 'answer' → logprob: -6.839262008666992
    9. 'result' → logprob: -6.964262008666992
    10. 'memo' → logprob: -7.089262008666992

Token 107: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5102611780166626
    2. 'dp' → logprob: -1.5102611780166626
    3. 'from' → logprob: -3.010261058807373
    4. 'A' → logprob: -3.010261058807373
    5. 'stack' → logprob: -3.260261058807373
    6. 'a' → logprob: -4.135261058807373
    7. 'res' → logprob: -4.885261058807373
    8. 'visited' → logprob: -5.510261058807373
    9. 'result' → logprob: -5.885261058807373
    10. 'ans' → logprob: -5.885261058807373

Token 108: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7798227071762085
    2. 'on' → logprob: -1.0298227071762085
    3. 'def' → logprob: -2.779822826385498
    4. 'qu' → logprob: -4.279822826385498
    5. '#' → logprob: -4.779822826385498
    6. ' qu' → logprob: -5.154822826385498
    7. 'len' → logprob: -5.279822826385498
    8. ' que' → logprob: -5.404822826385498
    9. 'que' → logprob: -5.404822826385498
    10. 'non' → logprob: -5.529822826385498

Token 109: ' n' (ID: 297)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0977215766906738
    2. ' continue' → logprob: -2.222721576690674
    3. ' vér' → logprob: -3.097721576690674
    4. 'p' → logprob: -3.347721576690674
    5. 'cherche' → logprob: -3.347721576690674
    6. ' doit' → logprob: -3.347721576690674
    7. 'v' → logprob: -3.472721576690674
    8. 's' → logprob: -3.597721576690674
    9. 'def' → logprob: -3.722721576690674
    10. 'arr' → logprob: -3.722721576690674

Token 110: ''ex' (ID: 23472)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2958699464797974
    2. 'a' → logprob: -2.045869827270508
    3. ''' → logprob: -2.670869827270508
    4. ''oubl' → logprob: -2.920869827270508
    5. ''a' → logprob: -3.045869827270508
    6. ''util' → logprob: -3.045869827270508
    7. ''aj' → logprob: -3.170869827270508
    8. 'continue' → logprob: -3.295869827270508
    9. ''arrive' → logprob: -3.545869827270508
    10. 'aj' → logprob: -3.670869827270508

Token 111: 'c' (ID: 66)
  Prédit: 'plore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plore' → logprob: -0.06073028966784477
    2. 'plo' → logprob: -3.310730218887329
    3. 'ploit' → logprob: -4.935730457305908
    4. 'pl' → logprob: -5.185730457305908
    5. 'plique' → logprob: -5.810730457305908
    6. 'p' → logprob: -6.060730457305908
    7. 'ecute' → logprob: -7.060730457305908
    8. 'cl' → logprob: -7.435730457305908
    9. 'iste' → logprob: -7.560730457305908
    10. 'plic' → logprob: -7.935730457305908

Token 112: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.027280880138278008
    2. 'ede' → logprob: -4.777280807495117
    3. 'lude' → logprob: -5.277280807495117
    4. 'éder' → logprob: -5.402280807495117
    5. 'l' → logprob: -5.527280807495117
    6. 'é' → logprob: -6.402280807495117
    7. 'e' → logprob: -6.777280807495117
    8. 'è' → logprob: -7.902280807495117
    9. 'ep' → logprob: -8.152280807495117
    10. 'édé' → logprob: -8.277280807495117

Token 113: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.06180766597390175
    2. ' jamais' → logprob: -3.186807632446289
    3. 'pas' → logprob: -4.311807632446289
    4. ' ' → logprob: -6.436807632446289
    5. 's' → logprob: -7.186807632446289
    6. 'ra' → logprob: -7.436807632446289
    7. 'a' → logprob: -7.686807632446289
    8. 'r' → logprob: -8.311807632446289
    9. ' plus' → logprob: -8.436807632446289
    10. ' aucun' → logprob: -8.686807632446289

Token 114: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3591289520263672
    2. 'len' → logprob: -1.9841289520263672
    3. 'm' → logprob: -2.109128952026367
    4. '[]' → logprob: -2.734128952026367
    5. ' m' → logprob: -2.859128952026367
    6. ' la' → logprob: -2.859128952026367
    7. 's' → logprob: -2.859128952026367
    8. ' len' → logprob: -2.984128952026367
    9. 'a' → logprob: -3.234128952026367
    10. 'A' → logprob: -3.734128952026367

Token 115: ' capacité' (ID: 62575)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5141497850418091
    2. ' m' → logprob: -2.0141496658325195
    3. ' nombre' → logprob: -2.2641496658325195
    4. '2' → logprob: -3.1391496658325195
    5. 'nombre' → logprob: -3.7641496658325195
    6. 'n' → logprob: -3.8891496658325195
    7. ' taille' → logprob: -4.3891496658325195
    8. 'long' → logprob: -4.8891496658325195
    9. ' longueur' → logprob: -5.0141496658325195
    10. 'max' → logprob: -5.2641496658325195

Token 116: ' m' (ID: 284)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9903149604797363
    2. 'stack' → logprob: -1.2403149604797363
    3. 'dp' → logprob: -1.7403149604797363
    4. 'a' → logprob: -2.1153149604797363
    5. 'def' → logprob: -4.365314960479736
    6. 'res' → logprob: -5.365314960479736
    7. 'capacity' → logprob: -5.365314960479736
    8. '
' → logprob: -5.740314960479736
    9. 'ans' → logprob: -5.990314960479736
    10. ')' → logprob: -6.115314960479736

Token 117: '.
' (ID: 558)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7769670486450195
    2. 'stack' → logprob: -1.5269670486450195
    3. 'a' → logprob: -1.6519670486450195
    4. 'dp' → logprob: -3.0269670486450195
    5. 'def' → logprob: -3.2769670486450195
    6. 'pile' → logprob: -3.6519670486450195
    7. 'from' → logprob: -5.1519670486450195
    8. 'res' → logprob: -5.2769670486450195
    9. 'ans' → logprob: -6.5269670486450195
    10. 'p' → logprob: -6.5269670486450195

Token 118: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7750356793403625
    2. 'dp' → logprob: -1.4000356197357178
    3. 'A' → logprob: -1.7750356197357178
    4. 'a' → logprob: -2.7750356197357178
    5. 'from' → logprob: -3.5250356197357178
    6. 'stack' → logprob: -3.7750356197357178
    7. 'res' → logprob: -6.650035858154297
    8. 'valid' → logprob: -6.775035858154297
    9. '
' → logprob: -6.775035858154297
    10. 'ans' → logprob: -7.025035858154297

Token 119: ' Comme' (ID: 53252)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.793414294719696
    2. 'dp' → logprob: -1.4184143543243408
    3. 'A' → logprob: -2.293414354324341
    4. '
' → logprob: -2.793414354324341
    5. 'from' → logprob: -2.918414354324341
    6. 'stack' → logprob: -3.293414354324341
    7. 'res' → logprob: -4.543414115905762
    8. 'result' → logprob: -4.543414115905762
    9. 'a' → logprob: -4.793414115905762
    10. 'memo' → logprob: -5.418414115905762

Token 120: ' n' (ID: 297)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.2475757598876953
    2. 'la' → logprob: -1.7475757598876953
    3. 'on' → logprob: -2.1225757598876953
    4. 'le' → logprob: -2.4975757598876953
    5. 'c' → logprob: -3.1225757598876953
    6. 'l' → logprob: -3.1225757598876953
    7. ' la' → logprob: -3.2475757598876953
    8. 'les' → logprob: -3.3725757598876953
    9. 'n' → logprob: -3.4975757598876953
    10. 'len' → logprob: -3.6225757598876953

Token 121: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6525208353996277
    2. '<=' → logprob: -1.5275208950042725
    3. ' <=' → logprob: -2.5275208950042725
    4. '>' → logprob: -2.9025208950042725
    5. ' =' → logprob: -2.9025208950042725
    6. '==' → logprob: -4.027520656585693
    7. ' ==' → logprob: -4.152520656585693
    8. ' >' → logprob: -5.027520656585693
    9. ')' → logprob: -5.277520656585693
    10. '#' → logprob: -5.652520656585693

Token 122: ' aller' (ID: 18383)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.4081246554851532
    2. ' être' → logprob: -1.1581246852874756
    3. ''être' → logprob: -5.0331244468688965
    4. '’être' → logprob: -6.1581244468688965
    5. ' dépasser' → logprob: -6.2831244468688965
    6. ' devenir' → logprob: -6.6581244468688965
    7. ' be' → logprob: -6.6581244468688965
    8. ' etre' → logprob: -6.6581244468688965
    9. 'be' → logprob: -6.7831244468688965
    10. 'êtres' → logprob: -7.1581244468688965

Token 123: ' jusqu' (ID: 21961)
  Prédit: 'jus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jus' → logprob: -0.0368485301733017
    2. 'up' → logprob: -4.036848545074463
    3. ' jusqu' → logprob: -4.036848545074463
    4. ' jusque' → logprob: -7.411848545074463
    5. ' up' → logprob: -8.536848068237305
    6. 'à' → logprob: -10.036848068237305
    7. 'upt' → logprob: -12.411848068237305
    8. 'au' → logprob: -12.536848068237305
    9. 'to' → logprob: -12.786848068237305
    10. 'ju' → logprob: -12.911848068237305

Token 124: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.041260719299316406
    2. 'à' → logprob: -3.2912607192993164
    3. '’à' → logprob: -6.291260719299316
    4. '100' → logprob: -7.791260719299316
    5. 'a' → logprob: -8.041260719299316
    6. ' à' → logprob: -8.416260719299316
    7. ''a' → logprob: -9.666260719299316
    8. '500' → logprob: -9.791260719299316
    9. ''' → logprob: -9.916260719299316
    10. '```' → logprob: -10.041260719299316

Token 125: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.10385142266750336
    2. '10' → logprob: -2.978851318359375
    3. '18' → logprob: -3.978851318359375
    4. '100' → logprob: -4.853851318359375
    5. '200' → logprob: -5.103851318359375
    6. ' ' → logprob: -5.603851318359375
    7. '15' → logprob: -5.728851318359375
    8. '16' → logprob: -6.228851318359375
    9. '50' → logprob: -6.478851318359375
    10. '30' → logprob: -7.103851318359375

Token 126: '500' (ID: 3234)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.2708266079425812
    2. '10' → logprob: -1.8958265781402588
    3. '200' → logprob: -3.395826578140259
    4. '18' → logprob: -3.895826578140259
    5. '100' → logprob: -4.270826816558838
    6. '2' → logprob: -4.895826816558838
    7. '15' → logprob: -6.270826816558838
    8. '16' → logprob: -6.395826816558838
    9. '50' → logprob: -6.520826816558838
    10. '40' → logprob: -6.645826816558838

Token 127: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005799620877951384
    2. ',
' → logprob: -5.755799770355225
    3. '0' → logprob: -6.880799770355225
    4. ' ,' → logprob: -7.130799770355225
    5. ')' → logprob: -8.255799293518066
    6. '),' → logprob: -8.755799293518066
    7. '
' → logprob: -9.005799293518066
    8. '000' → logprob: -9.755799293518066
    9. ':' → logprob: -10.505799293518066
    10. 'def' → logprob: -10.630799293518066

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0117488419637084
    2. ',
' → logprob: -4.511748790740967
    3. 'dp' → logprob: -7.886748790740967
    4. 'import' → logprob: -9.136749267578125
    5. 'def' → logprob: -9.886749267578125
    6. ')' → logprob: -10.386749267578125
    7. 'stack' → logprob: -10.636749267578125
    8. 'from' → logprob: -11.011749267578125
    9. ':' → logprob: -11.261749267578125
    10. '
' → logprob: -11.386749267578125

Token 129: ' une' (ID: 2463)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9745187759399414
    2. 'dp' → logprob: -1.7245187759399414
    3. '#' → logprob: -2.3495187759399414
    4. 'def' → logprob: -2.4745187759399414
    5. 'import' → logprob: -2.7245187759399414
    6. 'sys' → logprob: -2.8495187759399414
    7. ' from' → logprob: -2.9745187759399414
    8. ' sys' → logprob: -3.4745187759399414
    9. ' on' → logprob: -3.5995187759399414
    10. ' dp' → logprob: -4.724518775939941

Token 130: ' recherche' (ID: 24975)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.42874911427497864
    2. ' approche' → logprob: -2.5537490844726562
    3. 'dp' → logprob: -2.9287490844726562
    4. 'import' → logprob: -2.9287490844726562
    5. 'appro' → logprob: -2.9287490844726562
    6. 'p' → logprob: -3.5537490844726562
    7. ' recherche' → logprob: -4.053749084472656
    8. 'solution' → logprob: -4.803749084472656
    9. 'optim' → logprob: -4.803749084472656
    10. 'mé' → logprob: -5.053749084472656

Token 131: ' complète' (ID: 75660)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' impossible' (ID: 19786)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.5057604312896729
    2. 'in' → logprob: -1.6307604312896729
    3. 't' → logprob: -2.380760431289673
    4. 'ex' → logprob: -2.630760431289673
    5. 'import' → logprob: -4.755760192871094
    6. 'too' → logprob: -4.880760192871094
    7. 'tr' → logprob: -5.880760192871094
    8. 'ine' → logprob: -6.130760192871094
    9. 'compl' → logprob: -6.130760192871094
    10. ' impossible' → logprob: -6.255760192871094

Token 134: '.' (ID: 13)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6449295282363892
    2. '
' → logprob: -1.5199295282363892
    3. '#' → logprob: -2.3949294090270996
    4. ')' → logprob: -3.0199294090270996
    5. 'def' → logprob: -3.1449294090270996
    6. ',' → logprob: -3.7699294090270996
    7. 'from' → logprob: -4.3949294090271
    8. 'stack' → logprob: -4.7699294090271
    9. '<|end|>' → logprob: -5.2699294090271
    10. 'import' → logprob: -5.3949294090271

Token 135: ' Mais' (ID: 13880)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6481693983078003
    2. '
' → logprob: -1.2731693983078003
    3. '#' → logprob: -2.39816951751709
    4. 'def' → logprob: -2.77316951751709
    5. ' 
' → logprob: -4.02316951751709
    6. 'from' → logprob: -4.89816951751709
    7. ' dp' → logprob: -5.39816951751709
    8. 'visited' → logprob: -6.64816951751709
    9. 'import' → logprob: -6.77316951751709
    10. ')' → logprob: -7.02316951751709

Token 136: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5252012014389038
    2. 'on' → logprob: -1.2752012014389038
    3. ' on' → logprob: -2.4002013206481934
    4. 'une' → logprob: -3.9002013206481934
    5. ' #' → logprob: -5.275201320648193
    6. 'il' → logprob: -6.025201320648193
    7. 'l' → logprob: -6.150201320648193
    8. 'le' → logprob: -7.025201320648193
    9. 'from' → logprob: -7.025201320648193
    10. 'for' → logprob: -7.025201320648193

Token 137: ' fait' (ID: 7473)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.2031184732913971
    2. ' peux' → logprob: -2.5781185626983643
    3. ' faut' → logprob: -4.328118324279785
    4. ''ll' → logprob: -4.453118324279785
    5. ' can' → logprob: -4.578118324279785
    6. 'pe' → logprob: -4.703118324279785
    7. ' faudra' → logprob: -5.078118324279785
    8. ''' → logprob: -5.203118324279785
    9. '```' → logprob: -5.578118324279785
    10. ' n' → logprob: -5.578118324279785

Token 138: ' comme' (ID: 7971)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.2886820137500763
    2. 'un' → logprob: -1.913681983947754
    3. ' une' → logprob: -2.913681983947754
    4. ' un' → logprob: -4.163681983947754
    5. 'du' → logprob: -4.163681983947754
    6. ' du' → logprob: -4.788681983947754
    7. 'de' → logprob: -6.038681983947754
    8. 'des' → logprob: -6.413681983947754
    9. 'def' → logprob: -7.538681983947754
    10. '...' → logprob: -7.538681983947754

Token 139: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5611262321472168
    2. 'un' → logprob: -1.5611262321472168
    3. 'cela' → logprob: -2.186126232147217
    4. 'ça' → logprob: -3.186126232147217
    5. ' ça' → logprob: -3.936126232147217
    6. 'du' → logprob: -4.811126232147217
    7. ' une' → logprob: -4.936126232147217
    8. 'si' → logprob: -5.811126232147217
    9. 'des' → logprob: -5.811126232147217
    10. '```' → logprob: -5.936126232147217

Token 140: ' début' (ID: 29589)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5028718113899231
    2. 'memo' → logprob: -1.6278717517852783
    3. ' dp' → logprob: -3.5028717517852783
    4. 'DP' → logprob: -3.5028717517852783
    5. ' memo' → logprob: -3.7528717517852783
    6. 'e' → logprob: -4.377871990203857
    7. 'program' → logprob: -4.627871990203857
    8. 'from' → logprob: -4.627871990203857
    9. 'dfs' → logprob: -4.752871990203857
    10. ' DP' → logprob: -5.002871990203857

Token 141: 'ant' (ID: 493)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6567972898483276
    2. '<|end|>' → logprob: -1.1567972898483276
    3. 'from' → logprob: -2.781797409057617
    4. '#' → logprob: -3.656797409057617
    5. 'import' → logprob: -3.656797409057617
    6. 'de' → logprob: -4.656797409057617
    7. '<|end|>' → logprob: -4.781797409057617
    8. 'for' → logprob: -5.406797409057617
    9. 'd' → logprob: -5.656797409057617
    10. '
' → logprob: -5.656797409057617

Token 142: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9028669595718384
    2. ':' → logprob: -1.5278669595718384
    3. 'def' → logprob: -1.5278669595718384
    4. 'dp' → logprob: -2.777866840362549
    5. ')' → logprob: -4.027866840362549
    6. 'import' → logprob: -4.152866840362549
    7. 'stack' → logprob: -4.277866840362549
    8. ',
' → logprob: -4.402866840362549
    9. 'from' → logprob: -4.902866840362549
    10. '(' → logprob: -4.902866840362549

Token 143: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6516497135162354
    2. 'sys' → logprob: -1.6516497135162354
    3. 'import' → logprob: -2.5266497135162354
    4. ' on' → logprob: -3.4016497135162354
    5. '#' → logprob: -3.6516497135162354
    6. 'continue' → logprob: -3.7766497135162354
    7. 'voir' → logprob: -3.9016497135162354
    8. 'util' → logprob: -4.901649475097656
    9. '```' → logprob: -4.901649475097656
    10. 'contin' → logprob: -4.901649475097656

Token 144: ' écrit' (ID: 46574)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3619049787521362
    2. 'continue' → logprob: -1.8619049787521362
    3. 'def' → logprob: -2.236905097961426
    4. 'try' → logprob: -2.611905097961426
    5. 'pe' → logprob: -2.986905097961426
    6. ' peut' → logprob: -3.361905097961426
    7. ' continue' → logprob: -3.611905097961426
    8. '...' → logprob: -3.611905097961426
    9. 'p' → logprob: -3.736905097961426
    10. 'dfs' → logprob: -3.736905097961426

Token 145: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14764758944511414
    2. ' la' → logprob: -3.5226476192474365
    3. 'a' → logprob: -3.6476476192474365
    4. 'the' → logprob: -3.8976476192474365
    5. 'la' → logprob: -4.022647380828857
    6. 'le' → logprob: -4.647647380828857
    7. '<|end|>' → logprob: -5.397647380828857
    8. 'une' → logprob: -5.522647380828857
    9. 'l' → logprob: -5.522647380828857
    10. '```' → logprob: -5.522647380828857

Token 146: ' solution' (ID: 7578)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1981528103351593
    2. 'dp' → logprob: -3.073152780532837
    3. 'dfs' → logprob: -3.323152780532837
    4. ' code' → logprob: -4.073153018951416
    5. ' recursive' → logprob: -4.448153018951416
    6. ' def' → logprob: -4.573153018951416
    7. ' dp' → logprob: -4.823153018951416
    8. ' recursion' → logprob: -4.823153018951416
    9. ' dfs' → logprob: -4.948153018951416
    10. 'd' → logprob: -5.573153018951416

Token 147: ' brute' (ID: 128602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22310414910316467
    2. '(' → logprob: -2.723104238510132
    3. ':' → logprob: -3.348104238510132
    4. '#' → logprob: -3.473104238510132
    5. '
' → logprob: -4.223104000091553
    6. ')' → logprob: -4.223104000091553
    7. 'for' → logprob: -4.848104000091553
    8. '.' → logprob: -4.973104000091553
    9. '(
' → logprob: -5.098104000091553
    10. ',' → logprob: -5.848104000091553

Token 148: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28296586871147156
    2. '(
' → logprob: -2.907965898513794
    3. ')' → logprob: -3.032965898513794
    4. '(' → logprob: -3.157965898513794
    5. '#' → logprob: -3.282965898513794
    6. '
' → logprob: -3.532965898513794
    7. 'for' → logprob: -5.032965660095215
    8. 's' → logprob: -6.157965660095215
    9. 'import' → logprob: -6.157965660095215
    10. '.' → logprob: -6.157965660095215

Token 149: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16931313276290894
    2. 'def' → logprob: -2.2943131923675537
    3. 'stack' → logprob: -3.4193131923675537
    4. 'from' → logprob: -4.169312953948975
    5. 'res' → logprob: -6.169312953948975
    6. 'result' → logprob: -7.169312953948975
    7. 'memo' → logprob: -7.169312953948975
    8. ')' → logprob: -7.544312953948975
    9. 'ans' → logprob: -7.669312953948975
    10. 'visited' → logprob: -7.669312953948975

Token 150: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1913275569677353
    2. 'from' → logprob: -2.0663275718688965
    3. 'def' → logprob: -3.5663275718688965
    4. 'memo' → logprob: -4.4413275718688965
    5. 'stack' → logprob: -6.0663275718688965
    6. 'sys' → logprob: -6.4413275718688965
    7. 'ans' → logprob: -7.0663275718688965
    8. 'result' → logprob: -7.1913275718688965
    9. 'import' → logprob: -7.1913275718688965
    10. 'res' → logprob: -7.9413275718688965

Token 151: ' va' (ID: 3423)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014192888513207436
    2. 'from' → logprob: -5.639193058013916
    3. 'for' → logprob: -5.889193058013916
    4. ' =' → logprob: -5.889193058013916
    5. '=' → logprob: -6.014193058013916
    6. 'import' → logprob: -7.514193058013916
    7. 'stack' → logprob: -8.264192581176758
    8. '[' → logprob: -8.764192581176758
    9. '#' → logprob: -8.889192581176758
    10. '_' → logprob: -9.014192581176758

Token 152: ' essayer' (ID: 92713)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.403472363948822
    2. 'contin' → logprob: -1.4034724235534668
    3. 'import' → logprob: -4.278472423553467
    4. 'ess' → logprob: -4.403472423553467
    5. 'sys' → logprob: -4.903472423553467
    6. 'util' → logprob: -4.903472423553467
    7. 'faire' → logprob: -4.903472423553467
    8. 'try' → logprob: -5.153472423553467
    9. ' essayer' → logprob: -5.278472423553467
    10. 'dfs' → logprob: -5.528472423553467

Token 153: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010793480090796947
    2. ' def' → logprob: -5.510793685913086
    3. '(' → logprob: -6.010793685913086
    4. ':' → logprob: -6.885793685913086
    5. 'import' → logprob: -7.510793685913086
    6. 'de' → logprob: -7.760793685913086
    7. 'd' → logprob: -8.135793685913086
    8. '(
' → logprob: -8.135793685913086
    9. 'for' → logprob: -8.760793685913086
    10. ' une' → logprob: -8.885793685913086

Token 154: ' approche' (ID: 102373)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06850770860910416
    2. 'pile' → logprob: -3.068507671356201
    3. 'dé' → logprob: -5.818507671356201
    4. 'from' → logprob: -5.818507671356201
    5. 'import' → logprob: -6.193507671356201
    6. 'p' → logprob: -6.193507671356201
    7. 'memo' → logprob: -6.193507671356201
    8. 'fonction' → logprob: -6.568507671356201
    9. 'stack' → logprob: -6.818507671356201
    10. 'cache' → logprob: -7.443507671356201

Token 155: ' pure' (ID: 14147)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6219677329063416
    2. 'from' → logprob: -1.3719677925109863
    3. 'def' → logprob: -1.6219677925109863
    4. 'import' → logprob: -5.121967792510986
    5. 'dfs' → logprob: -5.746967792510986
    6. '#' → logprob: -7.246967792510986
    7. 'sys' → logprob: -7.246967792510986
    8. 'memo' → logprob: -7.621967792510986
    9. 'de' → logprob: -8.621967315673828
    10. 'DP' → logprob: -8.996967315673828

Token 156: 'ment' (ID: 508)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015091907232999802
    2. 'from' → logprob: -4.390091896057129
    3. 'import' → logprob: -7.390091896057129
    4. '#' → logprob: -7.765091896057129
    5. 'sys' → logprob: -7.765091896057129
    6. 'depth' → logprob: -7.890091896057129
    7. 'dfs' → logprob: -8.390091896057129
    8. '_depth' → logprob: -9.265091896057129
    9. ' def' → logprob: -9.515091896057129
    10. 'de' → logprob: -9.765091896057129

Token 157: ' réc' (ID: 36254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6635421514511108
    2. 'dfs' → logprob: -1.2885421514511108
    3. 'recursive' → logprob: -1.9135421514511108
    4. 'python' → logprob: -3.7885422706604004
    5. 'def' → logprob: -4.5385422706604
    6. 'rec' → logprob: -4.7885422706604
    7. 'br' → logprob: -4.9135422706604
    8. 'back' → logprob: -5.4135422706604
    9. 'DFS' → logprob: -6.0385422706604
    10. 'd' → logprob: -6.5385422706604

Token 158: 'ursive' (ID: 30543)
  Prédit: 'ursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.01832997426390648
    2. 'urs' → logprob: -4.018330097198486
    3. 'usive' → logprob: -9.643329620361328
    4. 'ur' → logprob: -9.893329620361328
    5. 'ursion' → logprob: -10.768329620361328
    6. 'urse' → logprob: -11.268329620361328
    7. 'usr' → logprob: -11.643329620361328
    8. 'ursor' → logprob: -12.143329620361328
    9. 'def' → logprob: -12.268329620361328
    10. 'урс' → logprob: -12.893329620361328

Token 159: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1160917580127716
    2. 'dp' → logprob: -2.366091728210449
    3. 'stack' → logprob: -4.866091728210449
    4. 'memo' → logprob: -5.866091728210449
    5. 'from' → logprob: -6.116091728210449
    6. 'cache' → logprob: -6.741091728210449
    7. 'mem' → logprob: -6.991091728210449
    8. 'memory' → logprob: -8.24109172821045
    9. 'visited' → logprob: -8.86609172821045
    10. 'sys' → logprob: -8.86609172821045

Token 160: ' mé' (ID: 11291)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.853037416934967
    2. 'memo' → logprob: -0.853037416934967
    3. 'sys' → logprob: -2.1030373573303223
    4. '@' → logprob: -4.478037357330322
    5. 'def' → logprob: -5.228037357330322
    6. 'fun' → logprob: -5.853037357330322
    7. 'from' → logprob: -5.853037357330322
    8. 'import' → logprob: -6.478037357330322
    9. 'cache' → logprob: -6.978037357330322
    10. 'dp' → logprob: -8.22803783416748

Token 161: 'mo' (ID: 3690)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.684889554977417
    2. 'mo' → logprob: -0.809889554977417
    3. 'memo' → logprob: -4.059889793395996
    4. 'moire' → logprob: -4.309889793395996
    5. 'import' → logprob: -5.059889793395996
    6. 'mor' → logprob: -5.309889793395996
    7. '```' → logprob: -6.184889793395996
    8. 'mos' → logprob: -6.934889793395996
    9. '#' → logprob: -7.059889793395996
    10. 'mon' → logprob: -7.309889793395996

Token 162: 'ïs' (ID: 96230)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.03092825599014759
    2. 'import' → logprob: -3.530928373336792
    3. 'sys' → logprob: -7.280928134918213
    4. ' from' → logprob: -8.530928611755371
    5. 'dp' → logprob: -8.655928611755371
    6. 'memo' → logprob: -9.155928611755371
    7. 'mem' → logprob: -11.780928611755371
    8. 'cache' → logprob: -13.530928611755371
    9. 'd' → logprob: -13.905928611755371
    10. 'm' → logprob: -15.030928611755371

Token 163: 'ation' (ID: 387)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.15131473541259766
    2. 'ation' → logprob: -2.7763147354125977
    3. 'ze' → logprob: -3.1513147354125977
    4. 'e' → logprob: -3.9013147354125977
    5. 'tion' → logprob: -5.401314735412598
    6. 'r' → logprob: -6.151314735412598
    7. 'ration' → logprob: -6.276314735412598
    8. '#' → logprob: -7.026314735412598
    9. 'from' → logprob: -7.151314735412598
    10. '
' → logprob: -7.401314735412598

Token 164: ' sur' (ID: 1512)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07806418836116791
    2. 'dp' → logprob: -2.953064203262329
    3. 'memo' → logprob: -4.07806396484375
    4. 'import' → logprob: -5.82806396484375
    5. 'mem' → logprob: -6.07806396484375
    6. ' from' → logprob: -7.57806396484375
    7. '_dp' → logprob: -9.57806396484375
    8. 'memory' → logprob: -10.20306396484375
    9. ' memo' → logprob: -10.45306396484375
    10. 'sys' → logprob: -10.57806396484375

Token 165: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9640258550643921
    2. 'l' → logprob: -1.589025855064392
    3. '(' → logprob: -2.2140259742736816
    4. 'i' → logprob: -2.4640259742736816
    5. '(s' → logprob: -2.7140259742736816
    6. ' (' → logprob: -3.5890259742736816
    7. '(len' → logprob: -3.8390259742736816
    8. '(l' → logprob: -4.089025974273682
    9. 'the' → logprob: -4.214025974273682
    10. 's' → logprob: -4.714025974273682

Token 166: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11527890712022781
    2. ' i' → logprob: -2.490278959274292
    3. 'idx' → logprob: -4.990278720855713
    4. 'pos' → logprob: -5.115278720855713
    5. 'index' → logprob: -5.115278720855713
    6. 'len' → logprob: -6.490278720855713
    7. ',' → logprob: -6.615278720855713
    8. ' idx' → logprob: -6.740278720855713
    9. ')' → logprob: -6.990278720855713
    10. ' len' → logprob: -7.990278720855713

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001452375203371048
    2. ' ,' → logprob: -7.126452445983887
    3. ',i' → logprob: -8.376452445983887
    4. ',index' → logprob: -9.626452445983887
    5. ',n' → logprob: -10.001452445983887
    6. ',p' → logprob: -10.126452445983887
    7. ')' → logprob: -10.251452445983887
    8. ',s' → logprob: -10.251452445983887
    9. ',j' → logprob: -10.251452445983887
    10. ',
' → logprob: -10.751452445983887

Token 168: ' last' (ID: 2174)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8417054414749146
    2. 'len' → logprob: -1.3417054414749146
    3. 'tuple' → logprob: -1.5917054414749146
    4. 'pile' → logprob: -3.966705322265625
    5. 'stack' → logprob: -4.216705322265625
    6. 'A' → logprob: -4.216705322265625
    7. 'la' → logprob: -4.591705322265625
    8. 'pos' → logprob: -4.716705322265625
    9. 'top' → logprob: -5.466705322265625
    10. ' tuple' → logprob: -5.466705322265625

Token 169: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6577782034873962
    2. '_a' → logprob: -0.7827782034873962
    3. '_A' → logprob: -4.282778263092041
    4. 'a' → logprob: -4.657778263092041
    5. '_s' → logprob: -8.407777786254883
    6. '_indices' → logprob: -8.407777786254883
    7. ',' → logprob: -8.532777786254883
    8. '_index' → logprob: -8.782777786254883
    9. '_doc' → logprob: -8.907777786254883
    10. '_pos' → logprob: -9.032777786254883

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0721055194735527
    2. '_index' → logprob: -3.5721054077148438
    3. '_idx' → logprob: -4.197105407714844
    4. ' ,' → logprob: -5.197105407714844
    5. ')' → logprob: -5.322105407714844
    6. '_doc' → logprob: -5.447105407714844
    7. '_pos' → logprob: -5.947105407714844
    8. '_last' → logprob: -5.947105407714844
    9. ',last' → logprob: -6.572105407714844
    10. 'index' → logprob: -7.322105407714844

Token 171: ' len' (ID: 4631)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.02326609380543232
    2. ' last' → logprob: -3.773266077041626
    3. '_last' → logprob: -11.898265838623047
    4. ',last' → logprob: -12.773265838623047
    5. ',' → logprob: -13.023265838623047
    6. 'Last' → logprob: -13.398265838623047
    7. 'len' → logprob: -13.773265838623047
    8. ' dernier' → logprob: -14.023265838623047
    9. 'dern' → logprob: -14.398265838623047
    10. ' ' → logprob: -14.523265838623047

Token 172: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.068289615213871
    2. ')' → logprob: -3.0682895183563232
    3. ',' → logprob: -4.568289756774902
    4. 's' → logprob: -5.818289756774902
    5. 'a' → logprob: -6.818289756774902
    6. 'B' → logprob: -6.943289756774902
    7. '_A' → logprob: -6.943289756774902
    8. '_' → logprob: -7.193289756774902
    9. '),' → logprob: -7.693289756774902
    10. '_stack' → logprob: -7.818289756774902

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4303515553474426
    2. ')' → logprob: -1.0553514957427979
    3. ' ,' → logprob: -7.430351734161377
    4. ' )' → logprob: -7.805351734161377
    5. ',)' → logprob: -9.180351257324219
    6. '):' → logprob: -9.805351257324219
    7. ' ' → logprob: -9.805351257324219
    8. ',s' → logprob: -10.055351257324219
    9. ',len' → logprob: -10.180351257324219
    10. '),' → logprob: -10.180351257324219

Token 174: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0927782952785492
    2. ' last' → logprob: -2.717778205871582
    3. 'len' → logprob: -3.842778205871582
    4. ' len' → logprob: -7.092778205871582
    5. ')' → logprob: -8.967778205871582
    6. 'l' → logprob: -10.467778205871582
    7. ' ' → logprob: -10.467778205871582
    8. ',' → logprob: -10.842778205871582
    9. 'length' → logprob: -10.967778205871582
    10. ',last' → logprob: -11.217778205871582

Token 175: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6206493377685547
    2. 'B' → logprob: -1.2456493377685547
    3. ',' → logprob: -2.3706493377685547
    4. ')' → logprob: -2.7456493377685547
    5. 's' → logprob: -4.995649337768555
    6. '_' → logprob: -5.745649337768555
    7. '_,' → logprob: -5.995649337768555
    8. '),' → logprob: -6.870649337768555
    9. 'a' → logprob: -7.370649337768555
    10. ' ,' → logprob: -7.870649337768555

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25453615188598633
    2. ')' → logprob: -1.5045361518859863
    3. '):' → logprob: -6.879536151885986
    4. ' ,' → logprob: -8.004535675048828
    5. ',)' → logprob: -8.004535675048828
    6. ' )' → logprob: -8.504535675048828
    7. ',n' → logprob: -8.754535675048828
    8. ',index' → logprob: -9.004535675048828
    9. ',last' → logprob: -9.379535675048828
    10. ',s' → logprob: -10.254535675048828

Token 177: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2523656189441681
    2. ' len' → logprob: -1.5023655891418457
    3. 'length' → logprob: -9.127366065979004
    4. ')' → logprob: -10.002366065979004
    5. ' ' → logprob: -10.127366065979004
    6. ',' → logprob: -10.127366065979004
    7. 'last' → logprob: -10.252366065979004
    8. ' last' → logprob: -10.377366065979004
    9. ',len' → logprob: -10.377366065979004
    10. ' length' → logprob: -10.502366065979004

Token 178: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06512787193059921
    2. ')' → logprob: -3.0651278495788574
    3. ',' → logprob: -4.940127849578857
    4. '_' → logprob: -5.815127849578857
    5. '_,' → logprob: -6.190127849578857
    6. '_A' → logprob: -6.440127849578857
    7. '_)' → logprob: -7.440127849578857
    8. '),' → logprob: -7.690127849578857
    9. ')_' → logprob: -8.190128326416016
    10. 'B' → logprob: -8.690128326416016

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009872130118310452
    2. '):' → logprob: -5.259871959686279
    3. ',' → logprob: -5.509871959686279
    4. ' )' → logprob: -8.134872436523438
    5. ',)' → logprob: -9.884872436523438
    6. ')
' → logprob: -10.134872436523438
    7. '_)' → logprob: -10.384872436523438
    8. '))' → logprob: -10.759872436523438
    9. '_' → logprob: -10.759872436523438
    10. '):
' → logprob: -11.384872436523438

Token 180: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1129587888717651
    2. '_' → logprob: -1.4879587888717651
    3. ')' → logprob: -1.9879587888717651
    4. 'from' → logprob: -2.2379589080810547
    5. ',
' → logprob: -2.7379589080810547
    6. 'def' → logprob: -3.2379589080810547
    7. '_
' → logprob: -3.7379589080810547
    8. 'import' → logprob: -3.8629589080810547
    9. 'dp' → logprob: -4.487958908081055
    10. '_dp' → logprob: -4.487958908081055

Token 181: ' Mais' (ID: 13880)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3362084925174713
    2. 'dp' → logprob: -1.336208462715149
    3. 'import' → logprob: -4.586208343505859
    4. 'def' → logprob: -4.836208343505859
    5. 'memo' → logprob: -5.836208343505859
    6. 'sys' → logprob: -7.211208343505859
    7. ')' → logprob: -8.08620834350586
    8. 'mem' → logprob: -8.21120834350586
    9. '#' → logprob: -9.21120834350586
    10. 'cache' → logprob: -9.83620834350586

Token 182: ' last' (ID: 2174)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0997756719589233
    2. '...' → logprob: -1.5997756719589233
    3. ' la' → logprob: -2.349775791168213
    4. ')' → logprob: -2.724775791168213
    5. ' ' → logprob: -3.599775791168213
    6. 'import' → logprob: -3.724775791168213
    7. ' (' → logprob: -3.849775791168213
    8. 'len' → logprob: -3.974775791168213
    9. ' il' → logprob: -3.974775791168213
    10. 'sys' → logprob: -4.099775791168213

Token 183: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01581321656703949
    2. 'B' → logprob: -5.26581335067749
    3. '_' → logprob: -5.89081335067749
    4. ')' → logprob: -6.51581335067749
    5. ',' → logprob: -6.51581335067749
    6. ' =' → logprob: -6.76581335067749
    7. '=' → logprob: -7.14081335067749
    8. 's' → logprob: -7.39081335067749
    9. '_indices' → logprob: -8.390812873840332
    10. '_A' → logprob: -8.515812873840332

Token 184: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6638779044151306
    2. ',' → logprob: -0.9138779044151306
    3. '=' → logprob: -3.7888779640197754
    4. ' ,' → logprob: -4.038877964019775
    5. ')' → logprob: -4.163877964019775
    6. '=None' → logprob: -5.538877964019775
    7. '<|end|>' → logprob: -5.538877964019775
    8. ' ' → logprob: -5.788877964019775
    9. ' is' → logprob: -6.163877964019775
    10. 's' → logprob: -6.413877964019775

Token 185: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6909890174865723
    2. 'len' → logprob: -0.8159890174865723
    3. ' last' → logprob: -3.1909890174865723
    4. ' len' → logprob: -4.190989017486572
    5. ' s' → logprob: -9.065988540649414
    6. 's' → logprob: -9.190988540649414
    7. ' ' → logprob: -10.065988540649414
    8. '_last' → logprob: -10.315988540649414
    9. '...' → logprob: -10.565988540649414
    10. 'length' → logprob: -10.565988540649414

Token 186: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0016345973126590252
    2. 'A' → logprob: -7.00163459777832
    3. 's' → logprob: -8.25163459777832
    4. '_len' → logprob: -9.25163459777832
    5. 'len' → logprob: -9.37663459777832
    6. '_length' → logprob: -10.12663459777832
    7. 'b' → logprob: -10.75163459777832
    8. '_s' → logprob: -10.75163459777832
    9. '_B' → logprob: -10.87663459777832
    10. ',' → logprob: -11.12663459777832

Token 187: ' sont' (ID: 5242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8805850148200989
    2. ',' → logprob: -2.130584955215454
    3. ' sont' → logprob: -2.255584955215454
    4. ' are' → logprob: -2.380584955215454
    5. 's' → logprob: -2.505584955215454
    6. '#' → logprob: -2.755584955215454
    7. '<|end|>' → logprob: -3.255584955215454
    8. '=' → logprob: -4.005585193634033
    9. ' =' → logprob: -4.380585193634033
    10. '=None' → logprob: -5.255585193634033

Token 188: ' les' (ID: 1341)
  Prédit: ' trop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trop' → logprob: -1.9670730829238892
    2. 'des' → logprob: -2.2170729637145996
    3. 'indices' → logprob: -2.2170729637145996
    4. 'limit' → logprob: -2.3420729637145996
    5. 'too' → logprob: -2.5920729637145996
    6. 'les' → logprob: -2.8420729637145996
    7. 'pas' → logprob: -2.9670729637145996
    8. 't' → logprob: -3.3420729637145996
    9. 'not' → logprob: -3.9670729637145996
    10. 'index' → logprob: -3.9670729637145996

Token 189: ' num' (ID: 2269)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.47088563442230225
    2. ' indices' → logprob: -1.3458856344223022
    3. 'val' → logprob: -2.970885753631592
    4. ' valeurs' → logprob: -3.845885753631592
    5. 'index' → logprob: -4.220885753631592
    6. 'documents' → logprob: -4.970885753631592
    7. 'élé' → logprob: -5.720885753631592
    8. 's' → logprob: -6.095885753631592
    9. 'document' → logprob: -6.220885753631592
    10. ' documents' → logprob: -6.345885753631592

Token 190: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.0027699286583811045
    2. 'éro' → logprob: -6.377769947052002
    3. '#' → logprob: -8.127769470214844
    4. 'é' → logprob: -8.627769470214844
    5. '__' → logprob: -8.627769470214844
    6. 'ériques' → logprob: -9.252769470214844
    7. '_tokens' → logprob: -9.502769470214844
    8. 'bres' → logprob: -9.627769470214844
    9. 'eros' → logprob: -10.252769470214844
    10. '```' → logprob: -11.127769470214844

Token 191: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.394274353981018
    2. ',' → logprob: -1.519274353981018
    3. ')' → logprob: -1.769274353981018
    4. '<|end|>' → logprob: -2.3942742347717285
    5. 's' → logprob: -2.8942742347717285
    6. ' =' → logprob: -3.0192742347717285
    7. '=' → logprob: -3.1442742347717285
    8. '[' → logprob: -3.6442742347717285
    9. ' ' → logprob: -4.2692742347717285
    10. '<|end|>' → logprob: -4.6442742347717285

Token 192: ' doc' (ID: 6806)
  Prédit: 'documents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'documents' → logprob: -0.0789974108338356
    2. 'document' → logprob: -3.2039973735809326
    3. '-' → logprob: -4.578997611999512
    4. 'la' → logprob: -4.953997611999512
    5. 's' → logprob: -5.453997611999512
    6. 'élé' → logprob: -5.828997611999512
    7. ' documents' → logprob: -5.953997611999512
    8. 'doc' → logprob: -6.453997611999512
    9. 'l' → logprob: -6.703997611999512
    10. 'indices' → logprob: -7.328997611999512

Token 193: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46642425656318665
    2. ')' → logprob: -1.8414242267608643
    3. 'from' → logprob: -2.3414242267608643
    4. ',
' → logprob: -3.8414242267608643
    5. ' ' → logprob: -3.9664242267608643
    6. 'import' → logprob: -4.216424465179443
    7. 'def' → logprob: -4.591424465179443
    8. '#' → logprob: -4.591424465179443
    9. '_' → logprob: -4.841424465179443
    10. '
' → logprob: -4.966424465179443

Token 194: ' la' (ID: 557)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.21515361964702606
    2. 'mettre' → logprob: -1.8401535749435425
    3. 'aj' → logprob: -4.465153694152832
    4. 'placed' → logprob: -4.965153694152832
    5. 'index' → logprob: -5.465153694152832
    6. 'place' → logprob: -5.965153694152832
    7. ' placer' → logprob: -5.965153694152832
    8. 'emp' → logprob: -6.465153694152832
    9. 'trait' → logprob: -7.465153694152832
    10. ' mettre' → logprob: -7.715153694152832

Token 195: ' tête' (ID: 36447)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.6679754853248596
    2. 'mettre' → logprob: -1.7929754257202148
    3. 'None' → logprob: -1.9179754257202148
    4. 'placed' → logprob: -2.667975425720215
    5. '-' → logprob: -3.167975425720215
    6. 'plac' → logprob: -4.417975425720215
    7. 'place' → logprob: -4.917975425720215
    8. '0' → logprob: -5.042975425720215
    9. ' mettre' → logprob: -5.292975425720215
    10. ' placer' → logprob: -5.667975425720215

Token 196: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4476503133773804
    2. 'def' → logprob: -1.4476503133773804
    3. ' ' → logprob: -1.8226503133773804
    4. '_' → logprob: -1.9476503133773804
    5. ',' → logprob: -2.19765043258667
    6. ' =' → logprob: -3.19765043258667
    7. 'import' → logprob: -4.57265043258667
    8. ':' → logprob: -4.94765043258667
    9. ' _' → logprob: -5.19765043258667
    10. 'from' → logprob: -5.19765043258667

Token 197: ' A' (ID: 355)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.45819327235221863
    2. 'pile' → logprob: -1.458193302154541
    3. 'A' → logprob: -2.083193302154541
    4. 'cha' → logprob: -6.333193302154541
    5. 'l' → logprob: -6.333193302154541
    6. ' la' → logprob: -6.458193302154541
    7. 'a' → logprob: -7.083193302154541
    8. '   ' → logprob: -7.333193302154541
    9. 'p' → logprob: -7.458193302154541
    10. ')' → logprob: -7.458193302154541

Token 198: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0606744289398193
    2. ')' → logprob: -1.1856744289398193
    3. '#' → logprob: -2.1856744289398193
    4. 'def' → logprob: -2.3106744289398193
    5. 'from' → logprob: -2.6856744289398193
    6. ',
' → logprob: -4.185674667358398
    7. '<|end|>' → logprob: -4.185674667358398
    8. '
' → logprob: -4.935674667358398
    9. 'dp' → logprob: -5.435674667358398
    10. 'import' → logprob: -5.685674667358398

Token 199: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.0882292985916138
    2. '#' → logprob: -1.3382292985916138
    3. 'None' → logprob: -2.338229179382324
    4. 'last' → logprob: -2.713229179382324
    5. ' ' → logprob: -3.338229179382324
    6. ' #' → logprob: -3.338229179382324
    7. '0' → logprob: -3.338229179382324
    8. ' B' → logprob: -4.088229179382324
    9. ' None' → logprob: -4.088229179382324
    10. ',' → logprob: -4.338229179382324

Token 200: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5311204195022583
    2. ',' → logprob: -1.2811204195022583
    3. '
' → logprob: -3.2811203002929688
    4. 'def' → logprob: -3.5311203002929688
    5. ',
' → logprob: -4.281120300292969
    6. '#' → logprob: -4.281120300292969
    7. '<|end|>' → logprob: -4.531120300292969
    8. 'index' → logprob: -5.406120300292969
    9. ' ' → logprob: -5.906120300292969
    10. ' =' → logprob: -6.281120300292969

Token 201: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5638169050216675
    2. ')' → logprob: -1.3138169050216675
    3. '<|end|>' → logprob: -2.188817024230957
    4. '#' → logprob: -4.438817024230957
    5. ' 
' → logprob: -4.438817024230957
    6. ' )' → logprob: -5.188817024230957
    7. '
' → logprob: -5.438817024230957
    8. ',' → logprob: -5.563817024230957
    9. '...' → logprob: -6.313817024230957
    10. '<|end|>' → logprob: -6.438817024230957

Token 202: ' peuvent' (ID: 21321)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.1264636516571045
    2. 'last' → logprob: -2.1264636516571045
    3. 'not' → logprob: -2.2514636516571045
    4. '#' → logprob: -2.5014636516571045
    5. ' ils' → logprob: -2.6264636516571045
    6. ' not' → logprob: -2.7514636516571045
    7. ' leur' → logprob: -3.2514636516571045
    8. 's' → logprob: -3.3764636516571045
    9. ' pas' → logprob: -3.3764636516571045
    10. 'non' → logprob: -3.6264636516571045

Token 203: ' être' (ID: 9104)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.010947011411190033
    2. ' not' → logprob: -5.885947227478027
    3. 'be' → logprob: -6.760947227478027
    4. '-' → logprob: -6.885947227478027
    5. ' être' → logprob: -6.885947227478027
    6. ' =' → logprob: -7.385947227478027
    7. '<|end|>' → logprob: -7.510947227478027
    8. 'not' → logprob: -7.635947227478027
    9. ' range' → logprob: -7.635947227478027
    10. '=' → logprob: -8.260947227478027

Token 204: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004977104719728231
    2. 'None' → logprob: -5.629977226257324
    3. '0' → logprob: -7.254977226257324
    4. 'n' → logprob: -8.129977226257324
    5. ' -' → logprob: -9.004977226257324
    6. '100' → logprob: -9.254977226257324
    7. '500' → logprob: -9.754977226257324
    8. 'none' → logprob: -10.754977226257324
    9. '-none' → logprob: -11.379977226257324
    10. ' None' → logprob: -11.629977226257324

Token 205: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06906836479902267
    2. 'None' → logprob: -3.319068431854248
    3. '0' → logprob: -4.444068431854248
    4. 'n' → logprob: -4.569068431854248
    5. 'up' → logprob: -5.944068431854248
    6. '100' → logprob: -6.569068431854248
    7. 'jus' → logprob: -6.944068431854248
    8. 'any' → logprob: -7.569068431854248
    9. ' -' → logprob: -7.694068431854248
    10. 'none' → logprob: -8.06906795501709

Token 206: ' s' (ID: 265)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6951872110366821
    2. ',' → logprob: -1.4451872110366821
    3. '<|end|>' → logprob: -1.6951872110366821
    4. '<|end|>' → logprob: -3.6951870918273926
    5. '0' → logprob: -4.820187091827393
    6. '#' → logprob: -5.070187091827393
    7. '),' → logprob: -5.070187091827393
    8. '
' → logprob: -5.195187091827393
    9. '...' → logprob: -5.570187091827393
    10. 'def' → logprob: -5.695187091827393

Token 207: ''ils' (ID: 41108)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.22405333817005157
    2. ''ils' → logprob: -1.7240533828735352
    3. 'ans' → logprob: -4.474053382873535
    4. '=' → logprob: -6.099053382873535
    5. ''il' → logprob: -6.349053382873535
    6. '=None' → logprob: -6.599053382873535
    7. 'i' → logprob: -6.974053382873535
    8. 'None' → logprob: -7.349053382873535
    9. 'u' → logprob: -7.849053382873535
    10. '0' → logprob: -7.849053382873535

Token 208: ' sont' (ID: 5242)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6624051928520203
    2. '#' → logprob: -2.037405252456665
    3. 's' → logprob: -2.287405252456665
    4. ' n' → logprob: -2.412405252456665
    5. '=' → logprob: -3.412405252456665
    6. ')' → logprob: -3.912405252456665
    7. ' are' → logprob: -3.912405252456665
    8. ' sont' → logprob: -4.287405014038086
    9. 'ont' → logprob: -4.537405014038086
    10. ' =' → logprob: -4.662405014038086

Token 209: ' v' (ID: 323)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26715415716171265
    2. 'None' → logprob: -1.5171542167663574
    3. 'auc' → logprob: -4.642154216766357
    4. 'vide' → logprob: -6.142154216766357
    5. 'vid' → logprob: -7.017154216766357
    6. ' None' → logprob: -8.0171537399292
    7. '-v' → logprob: -8.0171537399292
    8. 'none' → logprob: -8.1421537399292
    9. 'abs' → logprob: -8.2671537399292
    10. 'pas' → logprob: -8.5171537399292

Token 210: 'ides' (ID: 4105)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.030918894335627556
    2. '0' → logprob: -4.155919075012207
    3. 'al' → logprob: -5.155919075012207
    4. 'ides' → logprob: -6.030919075012207
    5. 'idé' → logprob: -6.405919075012207
    6. 'ideo' → logprob: -6.530919075012207
    7. 'alid' → logprob: -6.780919075012207
    8. 'id' → logprob: -7.405919075012207
    9. 'oid' → logprob: -7.530919075012207
    10. ' ' → logprob: -8.280919075012207

Token 211: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5505527257919312
    2. ')' → logprob: -1.5505527257919312
    3. 'from' → logprob: -2.1755528450012207
    4. 'def' → logprob: -2.8005528450012207
    5. 'memo' → logprob: -4.300552845001221
    6. 'mem' → logprob: -5.550552845001221
    7. '#' → logprob: -5.675552845001221
    8. ',' → logprob: -5.925552845001221
    9. 'import' → logprob: -6.050552845001221
    10. 'cache' → logprob: -6.925552845001221

Token 212: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23128969967365265
    2. 'from' → logprob: -1.7312897443771362
    3. 'def' → logprob: -3.8562896251678467
    4. 'memo' → logprob: -5.981289863586426
    5. 'visited' → logprob: -6.731289863586426
    6. 'import' → logprob: -6.856289863586426
    7. ')' → logprob: -7.106289863586426
    8. '#' → logprob: -7.356289863586426
    9. 'mem' → logprob: -7.856289863586426
    10. 'stack' → logprob: -8.106289863586426

Token 213: ' Stock' (ID: 16382)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7261316776275635
    2. 'dp' → logprob: -0.7261316776275635
    3. 'memo' → logprob: -3.7261316776275635
    4. 'import' → logprob: -5.226131439208984
    5. 'mem' → logprob: -6.726131439208984
    6. 'def' → logprob: -6.726131439208984
    7. 'sys' → logprob: -8.226131439208984
    8. 'cache' → logprob: -8.726131439208984
    9. ' from' → logprob: -10.351131439208984
    10. '
' → logprob: -10.351131439208984

Token 214: 'er' (ID: 259)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.3253767192363739
    2. ' =' → logprob: -2.0753767490386963
    3. '=' → logprob: -2.9503767490386963
    4. 'er' → logprob: -3.0753767490386963
    5. 'e' → logprob: -4.075376510620117
    6. 'é' → logprob: -4.575376510620117
    7. 'ons' → logprob: -5.825376510620117
    8. 'ed' → logprob: -5.950376510620117
    9. 'memo' → logprob: -5.950376510620117
    10. '={}' → logprob: -6.200376510620117

Token 215: ' les' (ID: 1341)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11359886080026627
    2. '=' → logprob: -2.6135988235473633
    3. 'last' → logprob: -5.613598823547363
    4. 'import' → logprob: -5.738598823547363
    5. 's' → logprob: -5.988598823547363
    6. '={}' → logprob: -5.988598823547363
    7. '_' → logprob: -6.113598823547363
    8. '_last' → logprob: -6.113598823547363
    9. '=None' → logprob: -6.363598823547363
    10. ' ' → logprob: -6.738598823547363

Token 216: ' états' (ID: 184259)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.847879946231842
    2. 'dp' → logprob: -1.2228798866271973
    3. 'last' → logprob: -1.9728798866271973
    4. '#' → logprob: -3.0978798866271973
    5. 'from' → logprob: -3.4728798866271973
    6. 'import' → logprob: -4.597879886627197
    7. 'state' → logprob: -4.597879886627197
    8. 'visited' → logprob: -4.722879886627197
    9. 'states' → logprob: -4.722879886627197
    10. '...' → logprob: -5.472879886627197

Token 217: ' serait' (ID: 35762)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7039386034011841
    2. '=' → logprob: -1.578938603401184
    3. 'visited' → logprob: -1.828938603401184
    4. ' =' → logprob: -2.2039384841918945
    5. '={}' → logprob: -4.5789384841918945
    6. 'import' → logprob: -5.2039384841918945
    7. 'memo' → logprob: -5.7039384841918945
    8. ',' → logprob: -6.4539384841918945
    9. '{}' → logprob: -6.7039384841918945
    10. 'from' → logprob: -6.7039384841918945

Token 218: ' trop' (ID: 14765)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.6841450333595276
    2. ' impossible' → logprob: -1.6841449737548828
    3. 't' → logprob: -2.309144973754883
    4. 'd' → logprob: -2.559144973754883
    5. 'import' → logprob: -3.809144973754883
    6. 'tr' → logprob: -4.059144973754883
    7. ' trop' → logprob: -4.184144973754883
    8. 'too' → logprob: -4.309144973754883
    9. 'inf' → logprob: -4.809144973754883
    10. 'com' → logprob: -5.184144973754883

Token 219: ' lourd' (ID: 150773)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7618156671524048
    2. ' None' → logprob: -1.3868156671524048
    3. 'None' → logprob: -1.8868156671524048
    4. '   ' → logprob: -3.2618155479431152
    5. ' ' → logprob: -3.3868155479431152
    6. '#' → logprob: -4.886815547943115
    7. ' =' → logprob: -4.886815547943115
    8. '0' → logprob: -5.386815547943115
    9. '\n' → logprob: -5.636815547943115
    10. '  ' → logprob: -5.886815547943115

Token 220: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5454574823379517
    2. 'def' → logprob: -1.6704574823379517
    3. 'dp' → logprob: -2.045457363128662
    4. '#' → logprob: -2.420457363128662
    5. 'from' → logprob: -4.795457363128662
    6. 'import' → logprob: -7.420457363128662
    7. '<|end|>' → logprob: -7.670457363128662
    8. '(' → logprob: -7.795457363128662
    9. 'memo' → logprob: -7.795457363128662
    10. ']' → logprob: -8.04545783996582

Token 221: ' donc' (ID: 14206)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6850722432136536
    2. ')' → logprob: -1.1850721836090088
    3. '#' → logprob: -1.9350721836090088
    4. 'from' → logprob: -4.185072422027588
    5. 'import' → logprob: -4.560072422027588
    6. 'dp' → logprob: -5.060072422027588
    7. '...' → logprob: -6.185072422027588
    8. 'sys' → logprob: -6.185072422027588
    9. 'for' → logprob: -6.310072422027588
    10. '),' → logprob: -7.185072422027588

Token 222: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06360680609941483
    2. 'from' → logprob: -2.8136067390441895
    3. 'dp' → logprob: -8.063607215881348
    4. 'import' → logprob: -8.313607215881348
    5. 'sys' → logprob: -8.688607215881348
    6. '
' → logprob: -8.938607215881348
    7. 'memo' → logprob: -9.063607215881348
    8. 'on' → logprob: -9.313607215881348
    9. '...' → logprob: -9.313607215881348
    10. 'pass' → logprob: -9.438607215881348

Token 223: ' ne' (ID: 453)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.9174922108650208
    2. '#' → logprob: -2.167492151260376
    3. 'va' → logprob: -2.417492151260376
    4. ' va' → logprob: -2.667492151260376
    5. 'util' → logprob: -3.042492151260376
    6. 'dev' → logprob: -3.292492151260376
    7. 'pe' → logprob: -3.417492151260376
    8. ' stock' → logprob: -3.542492151260376
    9. 'n' → logprob: -3.917492151260376
    10. 'vais' → logprob: -4.292492389678955

Token 224: ' mém' (ID: 136981)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.4074917137622833
    2. 'pe' → logprob: -2.032491683959961
    3. '#' → logprob: -2.782491683959961
    4. 'p' → logprob: -2.907491683959961
    5. 'cache' → logprob: -3.907491683959961
    6. 'pas' → logprob: -4.157491683959961
    7. 'memo' → logprob: -4.407491683959961
    8. 'g' → logprob: -5.282491683959961
    9. 'store' → logprob: -5.657491683959961
    10. 'st' → logprob: -5.782491683959961

Token 225: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.15851984918117523
    2. 'o' → logprob: -2.033519744873047
    3. 'oire' → logprob: -4.908519744873047
    4. 'oriz' → logprob: -6.033519744873047
    5. 'ory' → logprob: -6.158519744873047
    6. 'oir' → logprob: -7.283519744873047
    7. 'os' → logprob: -7.658519744873047
    8. 'oit' → logprob: -8.158519744873047
    9. 'ot' → logprob: -8.283519744873047
    10. '_' → logprob: -8.533519744873047

Token 226: 'ise' (ID: 1096)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.6673545837402344
    2. 'ise' → logprob: -1.4173545837402344
    3. 'is' → logprob: -2.0423545837402344
    4. 'ize' → logprob: -3.1673545837402344
    5. 'aise' → logprob: -4.792354583740234
    6. 'r' → logprob: -5.042354583740234
    7. 'ir' → logprob: -5.292354583740234
    8. 'store' → logprob: -5.542354583740234
    9. 'import' → logprob: -5.542354583740234
    10. 'm' → logprob: -5.792354583740234

Token 227: ' pas' (ID: 2173)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0030671951826661825
    2. ')' → logprob: -6.0030670166015625
    3. '#' → logprob: -8.878067016601562
    4. 'for' → logprob: -9.128067016601562
    5. 'from' → logprob: -9.628067016601562
    6. 'import' → logprob: -10.003067016601562
    7. '
' → logprob: -10.128067016601562
    8. 'd' → logprob: -10.503067016601562
    9. ' def' → logprob: -10.878067016601562
    10. 'dp' → logprob: -11.128067016601562

Token 228: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02914454974234104
    2. 'from' → logprob: -4.029144763946533
    3. 'dp' → logprob: -5.529144763946533
    4. 'sys' → logprob: -5.654144763946533
    5. ')' → logprob: -6.279144763946533
    6. 'import' → logprob: -7.154144763946533
    7. 'memo' → logprob: -8.154144287109375
    8. 'stack' → logprob: -8.654144287109375
    9. 'cache' → logprob: -9.654144287109375
    10. 'mem' → logprob: -9.779144287109375

Token 229: ' croit' (ID: 169163)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.1382049322128296
    2. 'print' → logprob: -1.3882049322128296
    3. 'continue' → logprob: -1.8882049322128296
    4. ' continue' → logprob: -2.888205051422119
    5. 'import' → logprob: -3.138205051422119
    6. 'on' → logprob: -3.138205051422119
    7. ' sys' → logprob: -3.888205051422119
    8. ' on' → logprob: -4.013205051422119
    9. 'exit' → logprob: -4.763205051422119
    10. ' essay' → logprob: -4.763205051422119

Token 230: ' que' (ID: 661)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.640671730041504
    2. ')' → logprob: -1.765671730041504
    3. 'import' → logprob: -2.265671730041504
    4. 'pas' → logprob: -2.640671730041504
    5. '   ' → logprob: -3.140671730041504
    6. 'possible' → logprob: -3.390671730041504
    7. '\t' → logprob: -3.515671730041504
    8. 'au' → logprob: -3.640671730041504
    9. '\' → logprob: -4.140671730041504
    10. 'try' → logprob: -4.140671730041504

Token 231: ' la' (ID: 557)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.0558279752731323
    2. 'import' → logprob: -1.1808279752731323
    3. 'print' → logprob: -2.055828094482422
    4. 'True' → logprob: -2.680828094482422
    5. ' sys' → logprob: -3.930828094482422
    6. 'l' → logprob: -3.930828094482422
    7. '...' → logprob: -4.305828094482422
    8. 'False' → logprob: -4.430828094482422
    9. ' in' → logprob: -4.680828094482422
    10. 'def' → logprob: -4.805828094482422

Token 232: ' mémoire' (ID: 79071)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.3528393507003784
    2. 'stack' → logprob: -3.227839469909668
    3. ' recursion' → logprob: -3.227839469909668
    4. '
' → logprob: -3.602839469909668
    5. ' stack' → logprob: -3.602839469909668
    6. ' code' → logprob: -3.977839469909668
    7. 's' → logprob: -4.102839469909668
    8. 'code' → logprob: -4.227839469909668
    9. 're' → logprob: -4.852839469909668
    10. 'import' → logprob: -4.852839469909668

Token 233: ' suff' (ID: 9490)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: 'ira' (ID: 2633)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.016660841181874275
    2. 'is' → logprob: -5.641660690307617
    3. '#' → logprob: -5.766660690307617
    4. 'ira' → logprob: -5.891660690307617
    5. 'isant' → logprob: -6.016660690307617
    6. 'ra' → logprob: -6.516660690307617
    7. 't' → logprob: -8.266660690307617
    8. '
' → logprob: -8.266660690307617
    9. 'ît' → logprob: -8.266660690307617
    10. 'isent' → logprob: -8.391660690307617

Token 235: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008020033710636199
    2. '
' → logprob: -7.250802040100098
    3. 'dp' → logprob: -9.875802040100098
    4. ')' → logprob: -11.000802040100098
    5. 'from' → logprob: -11.750802040100098
    6. 'd' → logprob: -12.750802040100098
    7. ' def' → logprob: -13.250802040100098
    8. 'visited' → logprob: -13.500802040100098
    9. ')
' → logprob: -13.625802040100098
    10. ':def' → logprob: -13.875802040100098

Token 236: ' les' (ID: 1341)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5763615965843201
    2. 'l' → logprob: -2.201361656188965
    3. ' tenir' → logprob: -2.451361656188965
    4. 'la' → logprob: -3.201361656188965
    5. 'print' → logprob: -3.451361656188965
    6. ' terminer' → logprob: -3.576361656188965
    7. 'termin' → logprob: -3.701361656188965
    8. 'tenir' → logprob: -4.201361656188965
    9. 'sys' → logprob: -4.201361656188965
    10. ' la' → logprob: -4.576361656188965

Token 237: ' petits' (ID: 38141)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -1.8504700660705566
    2. ' appels' → logprob: -2.1004700660705566
    3. 'return' → logprob: -2.4754700660705566
    4. 'import' → logprob: -2.6004700660705566
    5. ' prochaines' → logprob: -2.7254700660705566
    6. ' prochains' → logprob: -2.8504700660705566
    7. 'pr' → logprob: -2.9754700660705566
    8. 'quel' → logprob: -3.7254700660705566
    9. ' calls' → logprob: -3.7254700660705566
    10. 'pro' → logprob: -3.7254700660705566

Token 238: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00695003429427743
    2. ')' → logprob: -5.6319499015808105
    3. 'sys' → logprob: -6.5069499015808105
    4. 'dp' → logprob: -7.0069499015808105
    5. ')
' → logprob: -8.756950378417969
    6. 'from' → logprob: -8.881950378417969
    7. '
' → logprob: -8.881950378417969
    8. ':' → logprob: -9.131950378417969
    9. ' def' → logprob: -10.006950378417969
    10. 'import' → logprob: -10.006950378417969

Token 239: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050821129232645035
    2. '
' → logprob: -4.050821304321289
    3. 'from' → logprob: -4.050821304321289
    4. 'sys' → logprob: -4.300821304321289
    5. 'import' → logprob: -7.175821304321289
    6. 'dp' → logprob: -8.300821304321289
    7. ')' → logprob: -10.050821304321289
    8. 'memo' → logprob: -10.300821304321289
    9. 'stack' → logprob: -10.675821304321289
    10. ')
' → logprob: -11.300821304321289

Token 240: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008771585416980088
    2. 'from' → logprob: -7.500877380371094
    3. 'dp' → logprob: -8.375877380371094
    4. '
' → logprob: -9.375877380371094
    5. 'memo' → logprob: -12.875877380371094
    6. 'visited' → logprob: -13.500877380371094
    7. 'cache' → logprob: -13.625877380371094
    8. 'sys' → logprob: -13.625877380371094
    9. 'de' → logprob: -14.625877380371094
    10. 'import' → logprob: -14.750877380371094

Token 241: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6394975781440735
    2. 'dp' → logprob: -0.8894975781440735
    3. 'from' → logprob: -3.0144975185394287
    4. 'memo' → logprob: -4.639497756958008
    5. 'cache' → logprob: -6.889497756958008
    6. 'sys' → logprob: -7.639497756958008
    7. '
' → logprob: -7.764497756958008
    8. 'visited' → logprob: -8.264497756958008
    9. 'ans' → logprob: -8.639497756958008
    10. 'res' → logprob: -9.014497756958008

Token 242: ' grands' (ID: 43085)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1447320431470871
    2. 'i' → logprob: -2.2697319984436035
    3. ' _' → logprob: -4.5197319984436035
    4. '_' → logprob: -4.6447319984436035
    5. ' d' → logprob: -5.6447319984436035
    6. ' def' → logprob: -6.1447319984436035
    7. 'd' → logprob: -6.1447319984436035
    8. 'def' → logprob: -6.5197319984436035
    9. 'dfs' → logprob: -8.269732475280762
    10. '_i' → logprob: -8.519732475280762

Token 243: ' input' (ID: 3422)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.3736580014228821
    2. 'n' → logprob: -2.1236579418182373
    3. ' inputs' → logprob: -2.3736579418182373
    4. 'indices' → logprob: -3.3736579418182373
    5. '_' → logprob: -4.373658180236816
    6. 's' → logprob: -4.498658180236816
    7. '_inputs' → logprob: -4.498658180236816
    8. ' n' → logprob: -4.748658180236816
    9. 'input' → logprob: -5.373658180236816
    10. 'indexes' → logprob: -5.998658180236816

Token 244: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5288024544715881
    2. ',' → logprob: -0.9038024544715881
    3. ':
' → logprob: -6.028802394866943
    4. 'def' → logprob: -6.153802394866943
    5. 's' → logprob: -8.528802871704102
    6. ',
' → logprob: -8.903802871704102
    7. ':def' → logprob: -9.028802871704102
    8. 'n' → logprob: -9.278802871704102
    9. ' :' → logprob: -9.403802871704102
    10. '=' → logprob: -9.653802871704102

Token 245: ' ce' (ID: 2357)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0938113927841187
    2. 'sys' → logprob: -1.4688113927841187
    3. 'print' → logprob: -1.9688113927841187
    4. '#' → logprob: -2.343811511993408
    5. 'pass' → logprob: -2.593811511993408
    6. ' on' → logprob: -3.218811511993408
    7. ' sys' → logprob: -3.593811511993408
    8. 'import' → logprob: -3.968811511993408
    9. ' def' → logprob: -4.843811511993408
    10. 'exit' → logprob: -4.968811511993408

Token 246: ' code' (ID: 3490)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020351625978946686
    2. ' def' → logprob: -4.895351409912109
    3. '#' → logprob: -5.145351409912109
    4. ' n' → logprob: -6.270351409912109
    5. 'n' → logprob: -6.395351409912109
    6. 's' → logprob: -7.020351409912109
    7. '```' → logprob: -7.395351409912109
    8. '_' → logprob: -8.02035140991211
    9. ')' → logprob: -9.14535140991211
    10. ''est' → logprob: -9.27035140991211

Token 247: ' sera' (ID: 15511)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -1.3650200366973877
    2. '#' → logprob: -2.1150200366973877
    3. 'def' → logprob: -2.2400200366973877
    4. 's' → logprob: -2.3650200366973877
    5. ' sera' → logprob: -2.6150200366973877
    6. ':' → logprob: -2.6150200366973877
    7. ' s' → logprob: -2.7400200366973877
    8. ' n' → logprob: -2.8650200366973877
    9. 'n' → logprob: -4.115019798278809
    10. ' risque' → logprob: -4.240019798278809

Token 248: ' trop' (ID: 14765)
  Prédit: 'lent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lent' → logprob: -1.3263872861862183
    2. ' ineff' → logprob: -1.8263872861862183
    3. 'l' → logprob: -1.9513872861862183
    4. 'T' → logprob: -2.576387405395508
    5. 'ine' → logprob: -2.826387405395508
    6. 'timeout' → logprob: -3.201387405395508
    7. ' T' → logprob: -3.451387405395508
    8. ' lent' → logprob: -3.576387405395508
    9. 'import' → logprob: -3.576387405395508
    10. ' inutil' → logprob: -3.701387405395508

Token 249: ' lent' (ID: 38609)
  Prédit: 'lent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lent' → logprob: -0.6639512181282043
    2. 'l' → logprob: -0.7889512181282043
    3. 'slow' → logprob: -3.9139511585235596
    4. 'long' → logprob: -5.163951396942139
    5. '```' → logprob: -5.538951396942139
    6. 'd' → logprob: -7.913951396942139
    7. 'import' → logprob: -8.41395092010498
    8. 'lé' → logprob: -9.28895092010498
    9. ' lento' → logprob: -9.41395092010498
    10. 'lim' → logprob: -9.66395092010498

Token 250: ' mais' (ID: 2899)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018790162866935134
    2. '
' → logprob: -6.3768792152404785
    3. 'from' → logprob: -9.12687873840332
    4. ')' → logprob: -10.37687873840332
    5. 'sys' → logprob: -11.62687873840332
    6. 'dp' → logprob: -11.75187873840332
    7. 'stack' → logprob: -11.87687873840332
    8. 'import' → logprob: -12.75187873840332
    9. '(
' → logprob: -14.00187873840332
    10. 'visited' → logprob: -14.12687873840332

Token 251: ' correspond' (ID: 11095)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0421562194824219
    2. 'pass' → logprob: -1.1671562194824219
    3. '#' → logprob: -2.917156219482422
    4. 'pas' → logprob: -3.292156219482422
    5. ' suff' → logprob: -3.542156219482422
    6. ' on' → logprob: -3.792156219482422
    7. ' pass' → logprob: -3.792156219482422
    8. ' ça' → logprob: -4.167156219482422
    9. 'sys' → logprob: -4.292156219482422
    10. ' pas' → logprob: -4.417156219482422

Token 252: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.20501697063446045
    2. ' à' → logprob: -3.08001708984375
    3. 'au' → logprob: -3.33001708984375
    4. 'aux' → logprob: -3.95501708984375
    5. '```' → logprob: -3.95501708984375
    6. 'def' → logprob: -4.45501708984375
    7. ')' → logprob: -4.45501708984375
    8. ''à' → logprob: -4.95501708984375
    9. '_' → logprob: -5.58001708984375
    10. '()' → logprob: -5.70501708984375

Token 253: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.37365883588790894
    2. 'une' → logprob: -1.8736588954925537
    3. 'la' → logprob: -2.1236588954925537
    4. 'un' → logprob: -3.7486588954925537
    5. ' une' → logprob: -4.873658657073975
    6. ' la' → logprob: -5.748658657073975
    7. ' l' → logprob: -6.123658657073975
    8. 'ce' → logprob: -7.623658657073975
    9. 'le' → logprob: -8.498659133911133
    10. '```' → logprob: -8.498659133911133

Token 254: ' cons' (ID: 1473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.4533593654632568
    2. '```' → logprob: -2.078359365463257
    3. 'but' → logprob: -2.203359365463257
    4. 'pro' → logprob: -2.828359365463257
    5. 'objectif' → logprob: -2.953359365463257
    6. 'v' → logprob: -2.953359365463257
    7. 'prem' → logprob: -3.078359365463257
    8. 'problem' → logprob: -3.328359365463257
    9. 'en' → logprob: -3.453359365463257
    10. 'r' → logprob: -3.703359365463257

Token 255: 'igne' (ID: 24120)
  Prédit: 'tra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tra' → logprob: -1.0652027130126953
    2. 't' → logprob: -1.1902027130126953
    3. 'train' → logprob: -2.3152027130126953
    4. 'e' → logprob: -2.8152027130126953
    5. '#' → logprob: -3.3152027130126953
    6. 'def' → logprob: -3.3152027130126953
    7. 'tent' → logprob: -4.065202713012695
    8. 'ent' → logprob: -4.065202713012695
    9. 'ect' → logprob: -4.315202713012695
    10. 'tre' → logprob: -4.565202713012695

Token 256: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006520802620798349
    2. 'from' → logprob: -5.256520748138428
    3. 'dp' → logprob: -7.506520748138428
    4. '
' → logprob: -8.006521224975586
    5. 'sys' → logprob: -8.131521224975586
    6. 'visited' → logprob: -10.381521224975586
    7. 'memo' → logprob: -10.381521224975586
    8. 'cache' → logprob: -11.006521224975586
    9. 'import' → logprob: -11.381521224975586
    10. ')' → logprob: -12.131521224975586

Token 257: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005437385407276452
    2. 'from' → logprob: -7.750543594360352
    3. 'sys' → logprob: -9.750543594360352
    4. 'dp' → logprob: -10.250543594360352
    5. '
' → logprob: -12.000543594360352
    6. 'visited' → logprob: -12.375543594360352
    7. 'memo' → logprob: -12.750543594360352
    8. 'cache' → logprob: -13.000543594360352
    9. 'stack' → logprob: -13.250543594360352
    10. 'import' → logprob: -14.375543594360352

Token 258: ' Version' (ID: 10004)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01707436703145504
    2. 'from' → logprob: -4.2670745849609375
    3. 'sys' → logprob: -5.8920745849609375
    4. 'import' → logprob: -8.892074584960938
    5. '
' → logprob: -12.517074584960938
    6. 'dp' → logprob: -13.767074584960938
    7. ' def' → logprob: -13.892074584960938
    8. ' from' → logprob: -14.392074584960938
    9. '```' → logprob: -14.392074584960938
    10. 'de' → logprob: -15.267074584960938

Token 259: ' naï' (ID: 153475)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023817114997655153
    2. '(
' → logprob: -7.252381801605225
    3. ' def' → logprob: -8.252381324768066
    4. '(' → logprob: -8.377381324768066
    5. ' =' → logprob: -8.627381324768066
    6. '=' → logprob: -8.627381324768066
    7. ':' → logprob: -9.002381324768066
    8. '
' → logprob: -9.252381324768066
    9. '0' → logprob: -9.377381324768066
    10. ':def' → logprob: -9.377381324768066

Token 260: 've' (ID: 737)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014000946655869484
    2. 'ive' → logprob: -4.51400089263916
    3. 'ative' → logprob: -6.26400089263916
    4. 'itive' → logprob: -8.13900089263916
    5. 've' → logprob: -8.51400089263916
    6. 't' → logprob: -9.01400089263916
    7. 'import' → logprob: -10.01400089263916
    8. ' def' → logprob: -10.38900089263916
    9. 'vie' → logprob: -10.51400089263916
    10. '```' → logprob: -10.51400089263916

Token 261: ' pure' (ID: 14147)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.553032628493384e-05
    2. 'from' → logprob: -9.750075340270996
    3. 'sys' → logprob: -11.000075340270996
    4. 'import' → logprob: -15.625075340270996
    5. 'de' → logprob: -16.375076293945312
    6. 'd' → logprob: -16.875076293945312
    7. ' def' → logprob: -17.125076293945312
    8. ':def' → logprob: -17.500076293945312
    9. 'dp' → logprob: -17.750076293945312
    10. '
' → logprob: -18.125076293945312

Token 262: ' réc' (ID: 36254)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001541642239317298
    2. 'from' → logprob: -7.251541614532471
    3. 'sys' → logprob: -7.876541614532471
    4. 'import' → logprob: -7.876541614532471
    5. '
' → logprob: -10.251542091369629
    6. '#' → logprob: -11.626542091369629
    7. '```' → logprob: -11.751542091369629
    8. 'python' → logprob: -12.376542091369629
    9. ':def' → logprob: -13.001542091369629
    10. '
' → logprob: -13.501542091369629

Token 263: 'ursive' (ID: 30543)
  Prédit: 'ursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.006251323036849499
    2. 'def' → logprob: -5.256251335144043
    3. 'urs' → logprob: -7.381251335144043
    4. 'usive' → logprob: -8.756251335144043
    5. 'ursion' → logprob: -9.631251335144043
    6. 'rs' → logprob: -10.131251335144043
    7. '```' → logprob: -10.381251335144043
    8. 'usr' → logprob: -10.506251335144043
    9. 's' → logprob: -10.631251335144043
    10. 'import' → logprob: -11.506251335144043

Token 264: ' sans' (ID: 9828)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00024048985505942255
    2. 'sys' → logprob: -8.625240325927734
    3. '
' → logprob: -10.375240325927734
    4. 'from' → logprob: -10.625240325927734
    5. 'import' → logprob: -12.250240325927734
    6. ' def' → logprob: -15.875240325927734
    7. 'd' → logprob: -16.250240325927734
    8. 'de' → logprob: -16.750240325927734
    9. '=sys' → logprob: -16.875240325927734
    10. '```' → logprob: -17.250240325927734

Token 265: ' mé' (ID: 11291)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0030540041625499725
    2. ' memo' → logprob: -6.628054141998291
    3. 'return' → logprob: -7.253054141998291
    4. 'mé' → logprob: -7.253054141998291
    5. 'def' → logprob: -9.003053665161133
    6. 'mem' → logprob: -9.753053665161133
    7. 'ret' → logprob: -9.878053665161133
    8. 'memor' → logprob: -10.878053665161133
    9. 'cache' → logprob: -11.128053665161133
    10. 'import' → logprob: -11.253053665161133

Token 266: 'mo' (ID: 3690)
  Prédit: 'mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.26059603691101074
    2. 'm' → logprob: -1.5105960369110107
    3. 'def' → logprob: -6.01059627532959
    4. 'memo' → logprob: -6.13559627532959
    5. 'cache' → logprob: -7.13559627532959
    6. 'o' → logprob: -7.26059627532959
    7. '#' → logprob: -7.51059627532959
    8. 'mos' → logprob: -7.88559627532959
    9. 'mé' → logprob: -8.88559627532959
    10. 'moire' → logprob: -9.26059627532959

Token 267: ' :

' (ID: 11287)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00016516048344783485
    2. 'from' → logprob: -9.250164985656738
    3. '
' → logprob: -9.875164985656738
    4. 'sys' → logprob: -11.500164985656738
    5. 'import' → logprob: -12.875164985656738
    6. ' def' → logprob: -13.750164985656738
    7. 'de' → logprob: -13.750164985656738
    8. 'd' → logprob: -14.125164985656738
    9. ')' → logprob: -14.375164985656738
    10. '```' → logprob: -14.750164985656738

Token 268: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. 'from' → logprob: -17.875
    3. 'de' → logprob: -18.125
    4. ' def' → logprob: -18.375
    5. '```' → logprob: -19.5
    6. 'sys' → logprob: -19.625
    7. 'dp' → logprob: -20.625
    8. '
' → logprob: -20.875
    9. 'd' → logprob: -21.0
    10. ':def' → logprob: -21.375

Token 269: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.11063288152217865
    2. 'search' → logprob: -3.36063289642334
    3. 'solve' → logprob: -3.36063289642334
    4. 'rec' → logprob: -3.73563289642334
    5. 'can' → logprob: -5.86063289642334
    6. ' dfs' → logprob: -6.48563289642334
    7. 'place' → logprob: -6.48563289642334
    8. 'try' → logprob: -6.48563289642334
    9. 're' → logprob: -6.98563289642334
    10. 'back' → logprob: -7.11063289642334

Token 270: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0979728028178215
    2. '(index' → logprob: -2.847972869873047
    3. '(idx' → logprob: -3.347972869873047
    4. '(' → logprob: -8.847972869873047
    5. '(pos' → logprob: -10.222972869873047
    6. '(ind' → logprob: -11.722972869873047
    7. ' (' → logprob: -11.847972869873047
    8. '(x' → logprob: -12.222972869873047
    9. '(ix' → logprob: -12.722972869873047
    10. '(id' → logprob: -12.847972869873047

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003020961594302207
    2. '):' → logprob: -8.5003023147583
    3. ' ,' → logprob: -10.0003023147583
    4. ',i' → logprob: -10.6253023147583
    5. ',s' → logprob: -11.5003023147583
    6. ',d' → logprob: -12.2503023147583
    7. ',n' → logprob: -12.8753023147583
    8. ':' → logprob: -13.2503023147583
    9. '):
' → logprob: -13.2503023147583
    10. ')' → logprob: -13.6253023147583

Token 272: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.032920192927122116
    2. 'top' → logprob: -3.7829201221466064
    3. 'a' → logprob: -5.0329203605651855
    4. 'la' → logprob: -6.6579203605651855
    5. 'A' → logprob: -6.7829203605651855
    6. 'head' → logprob: -7.7829203605651855
    7. 'stack' → logprob: -9.032919883728027
    8. ' last' → logprob: -9.407919883728027
    9. 'pile' → logprob: -10.157919883728027
    10. 'len' → logprob: -11.907919883728027

Token 273: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007008800748735666
    2. 'a' → logprob: -8.000700950622559
    3. ',' → logprob: -8.250700950622559
    4. '_a' → logprob: -9.500700950622559
    5. '_A' → logprob: -10.750700950622559
    6. 's' → logprob: -13.125700950622559
    7. '_val' → logprob: -13.375700950622559
    8. '):' → logprob: -13.625700950622559
    9. '_value' → logprob: -14.125700950622559
    10. ' A' → logprob: -14.625700950622559

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.897412822581828e-05
    2. ',last' → logprob: -10.000068664550781
    3. ' ,' → logprob: -10.875068664550781
    4. '_,' → logprob: -13.875068664550781
    5. ',
' → logprob: -14.000068664550781
    6. ',int' → logprob: -14.625068664550781
    7. 'last' → logprob: -14.750068664550781
    8. '#,' → logprob: -15.625068664550781
    9. ',num' → logprob: -15.875068664550781
    10. 'int' → logprob: -16.00006866455078

Token 275: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00048405781853944063
    2. 'last' → logprob: -8.000484466552734
    3. 'la' → logprob: -9.375484466552734
    4. ' len' → logprob: -10.625484466552734
    5. 'length' → logprob: -10.875484466552734
    6. 'size' → logprob: -11.250484466552734
    7. 'l' → logprob: -12.250484466552734
    8. 'count' → logprob: -14.625484466552734
    9. 'leni' → logprob: -14.625484466552734
    10. 'a' → logprob: -15.000484466552734

Token 276: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.650518920039758e-06
    2. 'a' → logprob: -13.750003814697266
    3. ',' → logprob: -14.000003814697266
    4. '_A' → logprob: -14.500003814697266
    5. ' A' → logprob: -14.875003814697266
    6. ')' → logprob: -15.000003814697266
    7. ',A' → logprob: -15.625003814697266
    8. '(A' → logprob: -15.875003814697266
    9. '_a' → logprob: -17.250003814697266
    10. '
' → logprob: -17.375003814697266

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.836499985889532e-05
    2. ' ,' → logprob: -9.8750581741333
    3. ',last' → logprob: -12.3750581741333
    4. ',
' → logprob: -13.3750581741333
    5. ',len' → logprob: -14.0000581741333
    6. '_,' → logprob: -16.500059127807617
    7. ',
' → logprob: -17.625059127807617
    8. ',

' → logprob: -17.750059127807617
    9. ',length' → logprob: -17.875059127807617
    10. '):' → logprob: -18.000059127807617

Token 278: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0008097442332655191
    2. ' last' → logprob: -7.125809669494629
    3. 'len' → logprob: -12.500809669494629
    4. ')' → logprob: -14.500809669494629
    5. ' ' → logprob: -15.500809669494629
    6. '	last' → logprob: -15.625809669494629
    7. '   ' → logprob: -15.750809669494629
    8. ',last' → logprob: -15.750809669494629
    9. ',' → logprob: -16.250810623168945
    10. 'lasti' → logprob: -16.500810623168945

Token 279: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.8802491215174086e-05
    2. ',' → logprob: -10.750028610229492
    3. 'A' → logprob: -12.375028610229492
    4. ')' → logprob: -13.375028610229492
    5. ' B' → logprob: -14.250028610229492
    6. '),' → logprob: -15.250028610229492
    7. '=' → logprob: -15.375028610229492
    8. '```' → logprob: -16.500028610229492
    9. ',B' → logprob: -16.625028610229492
    10. 'b' → logprob: -16.750028610229492

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027099132421426475
    2. '):' → logprob: -8.37527084350586
    3. ' ,' → logprob: -10.37527084350586
    4. ',len' → logprob: -12.75027084350586
    5. '):
' → logprob: -13.37527084350586
    6. ')' → logprob: -13.50027084350586
    7. ',length' → logprob: -14.37527084350586
    8. ',size' → logprob: -14.75027084350586
    9. ',n' → logprob: -14.87527084350586
    10. ',l' → logprob: -15.25027084350586

Token 281: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.424530435353518e-05
    2. 'last' → logprob: -9.500094413757324
    3. ' len' → logprob: -10.875094413757324
    4. 'l' → logprob: -16.500093460083008
    5. '	len' → logprob: -16.750093460083008
    6. ' ' → logprob: -17.375093460083008
    7. 'length' → logprob: -17.375093460083008
    8. ')' → logprob: -17.500093460083008
    9. 'int' → logprob: -17.875093460083008
    10. '   ' → logprob: -18.375093460083008

Token 282: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.45848218582978e-06
    2. ')' → logprob: -13.62500286102295
    3. 'A' → logprob: -14.50000286102295
    4. 'b' → logprob: -15.37500286102295
    5. '):
' → logprob: -15.87500286102295
    6. ',' → logprob: -16.000001907348633
    7. '):' → logprob: -16.250001907348633
    8. ' B' → logprob: -17.000001907348633
    9. '```' → logprob: -17.500001907348633
    10. '),' → logprob: -18.000001907348633

Token 283: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.5649528298527e-05
    2. ')' → logprob: -10.000075340270996
    3. ',' → logprob: -10.750075340270996
    4. '):
' → logprob: -12.375075340270996
    5. ' ):' → logprob: -12.875075340270996
    6. ':' → logprob: -13.250075340270996
    7. '):
' → logprob: -16.750076293945312
    8. '}:' → logprob: -17.625076293945312
    9. ']:' → logprob: -18.125076293945312
    10. ')：' → logprob: -18.125076293945312

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12664100527763367
    2. ' if' → logprob: -2.376641035079956
    3. 'if' → logprob: -4.376640796661377
    4. ':' → logprob: -4.751640796661377
    5. '	if' → logprob: -5.501640796661377
    6. ')' → logprob: -8.126641273498535
    7. '):' → logprob: -9.001641273498535
    8. ',' → logprob: -9.626641273498535
    9. '   ' → logprob: -9.626641273498535
    10. '<|end|>' → logprob: -9.876641273498535

Token 285: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011071135522797704
    2. '   ' → logprob: -7.501107215881348
    3. ' if' → logprob: -7.501107215881348
    4. '	if' → logprob: -13.501107215881348
    5. ')' → logprob: -17.00110626220703
    6. '  ' → logprob: -17.12610626220703
    7. 'If' → logprob: -17.50110626220703
    8. '
' → logprob: -17.75110626220703
    9. '    
' → logprob: -17.75110626220703
    10. ' ' → logprob: -17.87610626220703

Token 286: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06197138875722885
    2. 'i' → logprob: -2.811971426010132
    3. '   ' → logprob: -12.811971664428711
    4. '	i' → logprob: -14.186971664428711
    5. ' ' → logprob: -15.811971664428711
    6. ' ' → logprob: -16.06197166442871
    7. '  ' → logprob: -16.18697166442871
    8. ')' → logprob: -19.56197166442871
    9. '    ' → logprob: -19.68697166442871
    10. '(i' → logprob: -19.68697166442871

Token 287: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10201643407344818
    2. ' ==' → logprob: -2.3520164489746094
    3. '>=' → logprob: -6.352016448974609
    4. ' >=' → logprob: -9.85201644897461
    5. '=' → logprob: -12.10201644897461
    6. ')==' → logprob: -12.97701644897461
    7. ')' → logprob: -12.97701644897461
    8. '==(' → logprob: -14.72701644897461
    9. '==
' → logprob: -14.72701644897461
    10. '>' → logprob: -14.85201644897461

Token 288: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1472419600977446e-06
    2. 'len' → logprob: -14.000000953674316
    3. ' n' → logprob: -15.250000953674316
    4. '   ' → logprob: -20.250001907348633
    5. '	n' → logprob: -20.750001907348633
    6. '[n' → logprob: -20.750001907348633
    7. '(n' → logprob: -21.125001907348633
    8. '```' → logprob: -21.375001907348633
    9. '0' → logprob: -22.000001907348633
    10. '_n' → logprob: -22.375001907348633

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026153710205107927
    2. ':
' → logprob: -6.002615451812744
    3. ':return' → logprob: -8.877614974975586
    4. ' :' → logprob: -15.627614974975586
    5. '):' → logprob: -16.877614974975586
    6. '   ' → logprob: -17.877614974975586
    7. ':
' → logprob: -18.502614974975586
    8. ':def' → logprob: -18.877614974975586
    9. ':

' → logprob: -19.127614974975586
    10. '):
' → logprob: -19.252614974975586

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03126290440559387
    2. '   ' → logprob: -3.5312628746032715
    3. ' return' → logprob: -6.9062628746032715
    4. 'return' → logprob: -7.6562628746032715
    5. '	return' → logprob: -10.65626335144043
    6. '<|end|>' → logprob: -13.15626335144043
    7. ':return' → logprob: -13.28126335144043
    8. '	   ' → logprob: -13.65626335144043
    9. ',' → logprob: -13.65626335144043
    10. '    
' → logprob: -13.90626335144043

Token 291: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08967392146587372
    2. '   ' → logprob: -3.0896739959716797
    3. '       ' → logprob: -3.3396739959716797
    4. ' return' → logprob: -5.33967399597168
    5. '	return' → logprob: -11.96467399597168
    6. ' ' → logprob: -14.46467399597168
    7. '           ' → logprob: -14.96467399597168
    8. '  ' → logprob: -15.21467399597168
    9. '    ' → logprob: -15.83967399597168
    10. '{return' → logprob: -16.33967399597168

Token 292: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. 'True' → logprob: -12.125017166137695
    3. ' ' → logprob: -12.375017166137695
    4. '(' → logprob: -12.375017166137695
    5. '0' → logprob: -14.125017166137695
    6. 'int' → logprob: -14.125017166137695
    7. '
' → logprob: -14.375017166137695
    8. '   ' → logprob: -15.125017166137695
    9. '(True' → logprob: -15.500017166137695
    10. '[' → logprob: -15.875017166137695

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023679454170633107
    2. 'True' → logprob: -8.375236511230469
    3. '0' → logprob: -13.500236511230469
    4. '(' → logprob: -13.625236511230469
    5. '"' → logprob: -14.000236511230469
    6. 'int' → logprob: -14.125236511230469
    7. '(True' → logprob: -14.250236511230469
    8. '[' → logprob: -15.250236511230469
    9. 'true' → logprob: -15.375236511230469
    10. ' ' → logprob: -15.500236511230469

Token 294: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015358541160821915
    2. '    
' → logprob: -4.3903584480285645
    3. '
' → logprob: -6.1403584480285645
    4. '\n' → logprob: -7.5153584480285645
    5. ' if' → logprob: -10.515358924865723
    6. '<|end|>' → logprob: -11.140358924865723
    7. '%' → logprob: -11.265358924865723
    8. 'def' → logprob: -11.390358924865723
    9. '  
' → logprob: -11.515358924865723
    10. '   
' → logprob: -11.640358924865723

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38350313901901245
    2. '    
' → logprob: -1.3835031986236572
    3. '
' → logprob: -2.7585031986236572
    4. '   
' → logprob: -6.508502960205078
    5. '  
' → logprob: -6.883502960205078
    6. '\n' → logprob: -7.133502960205078
    7. '        
' → logprob: -8.758502960205078
    8. '  ' → logprob: -8.883502960205078
    9. ' 
' → logprob: -9.133502960205078
    10. '<|end|>' → logprob: -9.508502960205078

Token 296: ' ways' (ID: 6984)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.023753171786665916
    2. 'ans' → logprob: -3.7737531661987305
    3. 'ret' → logprob: -8.77375316619873
    4. 'total' → logprob: -8.89875316619873
    5. 'result' → logprob: -9.27375316619873
    6. ' res' → logprob: -9.64875316619873
    7. 'ways' (adapté à ' ways') → logprob: -11.02375316619873
    8. 'r' → logprob: -11.39875316619873
    9. '    
' → logprob: -11.89875316619873
    10. 'cnt' → logprob: -12.02375316619873

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740792512893677
    2. '=' → logprob: -0.9740792512893677
    3. ' ' → logprob: -13.599079132080078
    4. '   ' → logprob: -14.724079132080078
    5. ')' → logprob: -15.474079132080078
    6. 'def' → logprob: -16.099079132080078
    7. ' =
' → logprob: -16.474079132080078
    8. ')=' → logprob: -16.849079132080078
    9. ' ' → logprob: -16.974079132080078
    10. ',' → logprob: -17.349079132080078

Token 298: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015074820257723331
    2. ' ' → logprob: -6.50150728225708
    3. 'dfs' → logprob: -12.751507759094238
    4. '   ' → logprob: -14.126507759094238
    5. '(' → logprob: -14.501507759094238
    6. ' dfs' → logprob: -14.626507759094238
    7. ' (' → logprob: -16.001506805419922
    8. '  ' → logprob: -16.689006805419922
    9. '۰' → logprob: -16.751506805419922
    10. ' ' → logprob: -16.939006805419922

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -11.000025749206543
    3. 'dfs' → logprob: -11.875025749206543
    4. '(' → logprob: -13.000025749206543
    5. '   ' → logprob: -16.87502670288086
    6. 'int' → logprob: -17.25002670288086
    7. ' dfs' → logprob: -17.25002670288086
    8. '
' → logprob: -18.00002670288086
    9. ' (' → logprob: -18.00002670288086
    10. '۰' → logprob: -18.25002670288086

Token 300: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012237783521413803
    2. '    
' → logprob: -5.012237548828125
    3. '
' → logprob: -5.262237548828125
    4. 'if' → logprob: -8.887237548828125
    5. ' if' → logprob: -9.637237548828125
    6. '```' → logprob: -10.762237548828125
    7. '  
' → logprob: -11.137237548828125
    8. '   
' → logprob: -11.137237548828125
    9. '#' → logprob: -11.762237548828125
    10. '        
' → logprob: -12.012237548828125

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05286303907632828
    2. 'if' → logprob: -3.302863121032715
    3. ' if' → logprob: -5.052863121032715
    4. '
' → logprob: -5.427863121032715
    5. '    
' → logprob: -6.052863121032715
    6. '#' → logprob: -7.802863121032715
    7. 'doc' → logprob: -7.802863121032715
    8. 'token' → logprob: -7.927863121032715
    9. 'current' → logprob: -9.427863121032715
    10. 'd' → logprob: -9.802863121032715

Token 302: ' doc' (ID: 6806)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03657008334994316
    2. '#' → logprob: -3.5365700721740723
    3. 'doc' (adapté à ' doc') → logprob: -5.536570072174072
    4. 'val' → logprob: -6.161570072174072
    5. 'd' → logprob: -8.66157054901123
    6. 'for' → logprob: -9.03657054901123
    7. 'x' → logprob: -9.16157054901123
    8. 'cur' → logprob: -9.41157054901123
    9. 'current' → logprob: -9.91157054901123
    10. 'ways' → logprob: -10.16157054901123

Token 303: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759940147399902
    2. ' =' → logprob: -0.8259940147399902
    3. '   ' → logprob: -10.825994491577148
    4. ')' → logprob: -11.200994491577148
    5. 's' → logprob: -11.450994491577148
    6. '=s' → logprob: -13.200994491577148
    7. ' ' → logprob: -13.575994491577148
    8. '=int' → logprob: -13.700994491577148
    9. '_id' → logprob: -13.950994491577148
    10. ',' → logprob: -14.200994491577148

Token 304: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1269315630197525
    2. ' s' → logprob: -2.126931667327881
    3. '   ' → logprob: -12.626931190490723
    4. ' ' → logprob: -16.25193214416504
    5. '	s' → logprob: -17.50193214416504
    6. '`s' → logprob: -18.12693214416504
    7. ' ' → logprob: -18.12693214416504
    8. '(s' → logprob: -18.37693214416504
    9. '    ' → logprob: -18.37693214416504
    10. '
' → logprob: -18.75193214416504

Token 305: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -11.50001049041748
    3. '[
' → logprob: -16.125009536743164
    4. '[I' → logprob: -16.250009536743164
    5. ' [' → logprob: -16.750009536743164
    6. '```' → logprob: -17.625009536743164
    7. '[s' → logprob: -17.750009536743164
    8. '[n' → logprob: -18.250009536743164
    9. '   ' → logprob: -18.375009536743164
    10. '
' → logprob: -18.500009536743164

Token 306: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5882536172866821
    2. ']' → logprob: -0.8382536172866821
    3. ')
' → logprob: -4.963253498077393
    4. ')' → logprob: -5.463253498077393
    5. '   ' → logprob: -7.838253498077393
    6. '])' → logprob: -8.08825397491455
    7. '])
' → logprob: -8.96325397491455
    8. ']
' → logprob: -9.21325397491455
    9. ']

' → logprob: -10.58825397491455
    10. ' ]
' → logprob: -11.33825397491455

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008104694075882435
    2. 'if' → logprob: -5.0081048011779785
    3. ' if' → logprob: -7.3831048011779785
    4. '    
' → logprob: -7.7581048011779785
    5. '<|end|>' → logprob: -8.38310432434082
    6. '
' → logprob: -9.88310432434082
    7. '  ' → logprob: -11.13310432434082
    8. '	if' → logprob: -11.75810432434082
    9. '#' → logprob: -12.00810432434082
    10. '    ' → logprob: -12.38310432434082

Token 308: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00335534755140543
    2. '#' (adapté à ' #') → logprob: -6.003355503082275
    3. '   ' → logprob: -7.128355503082275
    4. ' if' → logprob: -9.628355026245117
    5. '
' → logprob: -12.378355026245117
    6. '    
' → logprob: -12.378355026245117
    7. '```' → logprob: -13.628355026245117
    8. 'for' → logprob: -14.503355026245117
    9. '	if' → logprob: -14.628355026245117
    10. '  ' → logprob: -15.628355026245117

Token 309: ' essayer' (ID: 92713)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019418458687141538
    2. '#' → logprob: -6.251941680908203
    3. 'ways' → logprob: -11.876941680908203
    4. '   ' → logprob: -13.126941680908203
    5. 'for' → logprob: -13.251941680908203
    6. ' if' → logprob: -13.251941680908203
    7. '    
' → logprob: -15.001941680908203
    8. 'res' → logprob: -15.876941680908203
    9. 'If' → logprob: -16.626941680908203
    10. 'ans' → logprob: -17.376941680908203

Token 310: ' pile' (ID: 39732)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25134924054145813
    2. ' if' → logprob: -1.7513492107391357
    3. '   ' → logprob: -3.2513492107391357
    4. 'A' → logprob: -4.751349449157715
    5. 'for' → logprob: -7.251349449157715
    6. ' for' → logprob: -9.001349449157715
    7. ' A' → logprob: -9.626349449157715
    8. '#' → logprob: -9.626349449157715
    9. '    ' → logprob: -9.876349449157715
    10. ' in' → logprob: -10.251349449157715

Token 311: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.055064063519239426
    2. ' A' → logprob: -2.9300639629364014
    3. '_A' → logprob: -9.30506420135498
    4. ' =' → logprob: -10.43006420135498
    5. '   ' → logprob: -10.93006420135498
    6. '('' → logprob: -12.05506420135498
    7. '(A' → logprob: -12.18006420135498
    8. 'def' → logprob: -12.30506420135498
    9. ',' → logprob: -12.43006420135498
    10. 'a' → logprob: -12.68006420135498

Token 312: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037529326509684324
    2. 'if' → logprob: -6.253752708435059
    3. ' if' → logprob: -6.878752708435059
    4. '
' → logprob: -7.378752708435059
    5. '    
' → logprob: -9.128752708435059
    6. ',' → logprob: -11.003752708435059
    7. '  
' → logprob: -11.503752708435059
    8. '  ' → logprob: -11.878752708435059
    9. '   
' → logprob: -12.128752708435059
    10. ':' → logprob: -12.128752708435059

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009094370761886239
    2. ' if' → logprob: -7.625909328460693
    3. 'if' → logprob: -8.375909805297852
    4. '    
' → logprob: -8.750909805297852
    5. '
' → logprob: -11.250909805297852
    6. '<|end|>' → logprob: -12.500909805297852
    7. '   
' → logprob: -12.625909805297852
    8. '	if' → logprob: -13.000909805297852
    9. '  
' → logprob: -13.250909805297852
    10. ' 
' → logprob: -13.375909805297852

Token 314: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006823951378464699
    2. ' if' → logprob: -5.006824016571045
    3. '   ' → logprob: -9.131823539733887
    4. '    
' → logprob: -15.631823539733887
    5. '	if' → logprob: -17.006824493408203
    6. '  ' → logprob: -17.256824493408203
    7. ' ' → logprob: -17.381824493408203
    8. '```' → logprob: -17.506824493408203
    9. 'If' → logprob: -17.631824493408203
    10. ')' → logprob: -18.131824493408203

Token 315: ' (' (ID: 350)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.17967180907726288
    2. '(doc' → logprob: -2.4296717643737793
    3. '(last' → logprob: -2.8046717643737793
    4. 'len' → logprob: -4.304671764373779
    5. 'doc' → logprob: -6.929671764373779
    6. 'last' → logprob: -7.429671764373779
    7. ' (' → logprob: -8.304672241210938
    8. '(i' → logprob: -8.929672241210938
    9. '((' → logprob: -9.179672241210938
    10. '(length' → logprob: -9.429672241210938

Token 316: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.1032437086105347
    2. 'last' → logprob: -1.1032437086105347
    3. '(last' → logprob: -1.3532437086105347
    4. '(len' → logprob: -2.603243827819824
    5. '(doc' → logprob: -6.103243827819824
    6. 'doc' → logprob: -6.853243827819824
    7. '(i' → logprob: -8.728243827819824
    8. ' last' → logprob: -8.728243827819824
    9. ' (' → logprob: -9.103243827819824
    10. ' len' → logprob: -9.353243827819824

Token 317: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.438573680294212e-06
    2. ')' → logprob: -12.750005722045898
    3. '(A' → logprob: -14.000005722045898
    4. 'a' → logprob: -14.250005722045898
    5. '(' → logprob: -14.875005722045898
    6. ' A' → logprob: -15.375005722045898
    7. '_A' → logprob: -15.375005722045898
    8. '+' → logprob: -16.7500057220459
    9. '<' → logprob: -16.8750057220459
    10. '(len' → logprob: -17.1250057220459

Token 318: ' <' (ID: 464)
  Prédit: '<m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<m' → logprob: -0.6942618489265442
    2. '<' → logprob: -0.8192618489265442
    3. ' <' → logprob: -2.8192617893218994
    4. '<n' → logprob: -10.06926155090332
    5. '<M' → logprob: -10.19426155090332
    6. ')' → logprob: -10.56926155090332
    7. ')<' → logprob: -11.69426155090332
    8. '<len' → logprob: -11.69426155090332
    9. ')m' → logprob: -12.56926155090332
    10. ' m' → logprob: -12.56926155090332

Token 319: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007105246186256409
    2. ' m' → logprob: -7.250710487365723
    3. ')' → logprob: -15.000710487365723
    4. ')m' → logprob: -16.00071144104004
    5. '   ' → logprob: -16.75071144104004
    6. '
' → logprob: -17.25071144104004
    7. '	m' → logprob: -17.50071144104004
    8. ' ' → logprob: -17.50071144104004
    9. '  ' → logprob: -18.75071144104004
    10. '=m' → logprob: -19.62571144104004

Token 320: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16992415487766266
    2. 'and' → logprob: -2.169924259185791
    3. ')' → logprob: -3.169924259185791
    4. '   ' → logprob: -10.294923782348633
    5. ' )' → logprob: -10.294923782348633
    6. ' ' → logprob: -12.669923782348633
    7. ' и' → logprob: -13.294923782348633
    8. '
' → logprob: -13.669923782348633
    9. '    ' → logprob: -13.794923782348633
    10. '  ' → logprob: -14.544923782348633

Token 321: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12694720923900604
    2. 'and' → logprob: -2.1269471645355225
    3. '   ' → logprob: -11.126947402954102
    4. ')' → logprob: -13.876947402954102
    5. ' ' → logprob: -14.001947402954102
    6. '    ' → logprob: -14.126947402954102
    7. ' и' → logprob: -14.376947402954102
    8. '	and' → logprob: -15.001947402954102
    9. ' và' → logprob: -15.251947402954102
    10. '  ' → logprob: -15.626947402954102

Token 322: ' (' (ID: 350)
  Prédit: '(doc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(doc' → logprob: -0.010216859169304371
    2. '(last' → logprob: -5.13521671295166
    3. '((' → logprob: -5.63521671295166
    4. ' (' → logprob: -7.63521671295166
    5. '(document' → logprob: -9.38521671295166
    6. '(s' → logprob: -10.13521671295166
    7. '(' → logprob: -10.51021671295166
    8. '(len' → logprob: -11.01021671295166
    9. '(not' → logprob: -11.26021671295166
    10. '(all' → logprob: -11.88521671295166

Token 323: 'last' (ID: 6684)
  Prédit: '(doc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(doc' → logprob: -0.6042250990867615
    2. '(last' → logprob: -1.4792251586914062
    3. 'doc' → logprob: -1.7292251586914062
    4. 'last' → logprob: -3.1042251586914062
    5. '(s' → logprob: -6.604225158691406
    6. ' (' → logprob: -7.229225158691406
    7. '(len' → logprob: -8.104225158691406
    8. '(' → logprob: -8.354225158691406
    9. 's' → logprob: -8.479225158691406
    10. '((' → logprob: -8.854225158691406

Token 324: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.028822269290685654
    2. '==' → logprob: -3.903822183609009
    3. '>' → logprob: -4.903822422027588
    4. ' ==' → logprob: -7.403822422027588
    5. ' >' → logprob: -9.02882194519043
    6. ' is' → logprob: -10.40382194519043
    7. '>A' → logprob: -10.90382194519043
    8. '==-' → logprob: -11.02882194519043
    9. ' A' → logprob: -11.40382194519043
    10. '=' → logprob: -11.77882194519043

Token 325: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6476231217384338
    2. '==' → logprob: -1.522623062133789
    3. ' >' → logprob: -2.022623062133789
    4. ' is' → logprob: -2.772623062133789
    5. ' ==' → logprob: -2.772623062133789
    6. 'is' → logprob: -7.397623062133789
    7. '==-' → logprob: -8.022623062133789
    8. ' ' → logprob: -9.272623062133789
    9. '=' → logprob: -9.772623062133789
    10. '>d' → logprob: -10.272623062133789

Token 326: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001293927663937211
    2. '-' → logprob: -6.751294136047363
    3. 'None' → logprob: -9.376294136047363
    4. ' ' → logprob: -10.501294136047363
    5. ' -' → logprob: -11.626294136047363
    6. '[]' → logprob: -13.876294136047363
    7. '   ' → logprob: -14.751294136047363
    8. '''' → logprob: -15.251294136047363
    9. 'or' → logprob: -15.376294136047363
    10. ' None' → logprob: -15.751294136047363

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005694723222404718
    2. '-' → logprob: -5.38069486618042
    3. 'None' → logprob: -6.88069486618042
    4. ' ' → logprob: -11.380694389343262
    5. '[]' → logprob: -11.380694389343262
    6. ' -' → logprob: -11.505694389343262
    7. 'float' → logprob: -12.255694389343262
    8. 'or' → logprob: -13.130694389343262
    9. '''' → logprob: -13.380694389343262
    10. '100' → logprob: -14.005694389343262

Token 328: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.31326553225517273
    2. 'or' → logprob: -1.3132655620574951
    3. '    ' → logprob: -13.688265800476074
    4. '	or' → logprob: -14.188265800476074
    5. '   ' → logprob: -14.313265800476074
    6. ' ' → logprob: -14.688265800476074
    7. ' или' → logprob: -15.313265800476074
    8. ')' → logprob: -15.563265800476074
    9. '  ' → logprob: -15.688265800476074
    10. '
' → logprob: -16.813264846801758

Token 329: ' doc' (ID: 6806)
  Prédit: 'doc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'doc' → logprob: -0.0006772888009436429
    2. 'last' → logprob: -8.250677108764648
    3. 's' → logprob: -8.375677108764648
    4. ' doc' → logprob: -8.625677108764648
    5. '   ' → logprob: -13.375677108764648
    6. '	doc' → logprob: -14.000677108764648
    7. 'document' → logprob: -14.500677108764648
    8. ' s' → logprob: -14.625677108764648
    9. '(doc' → logprob: -14.750677108764648
    10. 'docs' → logprob: -14.750677108764648

Token 330: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.35070499777793884
    2. ' <' → logprob: -1.2257050275802612
    3. '>' → logprob: -6.600705146789551
    4. ' >' → logprob: -7.225705146789551
    5. ')' → logprob: -8.97570514678955
    6. ' ' → logprob: -10.47570514678955
    7. '[' → logprob: -12.22570514678955
    8. '```' → logprob: -13.60070514678955
    9. '<int' → logprob: -13.72570514678955
    10. ')<' → logprob: -13.72570514678955

Token 331: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.00861468818038702
    2. ' last' → logprob: -4.758614540100098
    3. '	last' → logprob: -16.758615493774414
    4. 's' → logprob: -17.383615493774414
    5. ' ' → logprob: -17.633615493774414
    6. '(last' → logprob: -17.883615493774414
    7. '_last' → logprob: -18.133615493774414
    8. '[last' → logprob: -18.508615493774414
    9. ',last' → logprob: -18.883615493774414
    10. ' s' → logprob: -19.133615493774414

Token 332: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -15.875
    3. ' A' → logprob: -17.0
    4. '[' → logprob: -18.25
    5. '<|end|>' → logprob: -18.625
    6. '_A' → logprob: -19.25
    7. ',' → logprob: -19.5
    8. '   ' → logprob: -20.25
    9. 'a' → logprob: -20.375
    10. '  ' → logprob: -20.875

Token 333: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.038226354867219925
    2. '):' → logprob: -3.288226366043091
    3. ')' → logprob: -9.288226127624512
    4. '   ' → logprob: -9.788226127624512
    5. ' ):
' → logprob: -10.913226127624512
    6. '):
' → logprob: -11.288226127624512
    7. '):

' → logprob: -12.788226127624512
    8. '       ' → logprob: -14.288226127624512
    9. ' ):' → logprob: -14.413226127624512
    10. ':' → logprob: -14.663226127624512

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019266709685325623
    2. 'ways' → logprob: -4.019266605377197
    3. ' ways' → logprob: -7.144266605377197
    4. '):
' → logprob: -8.769267082214355
    5. '   ' → logprob: -10.644267082214355
    6. ')' → logprob: -10.644267082214355
    7. '        
' → logprob: -10.769267082214355
    8. ':' → logprob: -10.894267082214355
    9. ':
' → logprob: -11.269267082214355
    10. '):' → logprob: -11.269267082214355

Token 335: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.0003184233792126179
    2. ' ways' → logprob: -8.12531852722168
    3. '       ' → logprob: -10.75031852722168
    4. '   ' → logprob: -15.37531852722168
    5. 'way' → logprob: -15.37531852722168
    6. 'WAYS' → logprob: -15.50031852722168
    7. '           ' → logprob: -15.87531852722168
    8. '
' → logprob: -16.62531852722168
    9. '        
' → logprob: -17.50031852722168
    10. 'Ways' → logprob: -17.62531852722168

Token 336: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5843737721443176
    2. ' +=' → logprob: -0.8343737721443176
    3. '=' → logprob: -4.834373950958252
    4. ' =' → logprob: -8.209373474121094
    5. '   ' → logprob: -8.709373474121094
    6. ']+=' → logprob: -12.459373474121094
    7. '+' → logprob: -12.709373474121094
    8. ' ' → logprob: -13.584373474121094
    9. '  ' → logprob: -14.209373474121094
    10. '    ' → logprob: -15.084373474121094

Token 337: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -2.1888679839321412e-05
    2. ' dfs' → logprob: -10.750021934509277
    3. 'df' → logprob: -14.875021934509277
    4. '   ' → logprob: -19.37502098083496
    5. 'ds' → logprob: -21.00002098083496
    6. 'DFS' → logprob: -21.12502098083496
    7. 'fs' → logprob: -21.62502098083496
    8. 'dp' → logprob: -22.12502098083496
    9. 'd' → logprob: -22.37502098083496
    10. 'dfa' → logprob: -22.75002098083496

Token 338: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. '(
' → logprob: -16.375001907348633
    4. 'i' → logprob: -16.500001907348633
    5. ' (' → logprob: -19.250001907348633
    6. '[i' → logprob: -21.500001907348633
    7. ' i' → logprob: -21.625001907348633
    8. '(I' → logprob: -21.750001907348633
    9. '((' → logprob: -21.875001907348633
    10. '   ' → logprob: -22.625001907348633

Token 339: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029755808413028717
    2. ' +' → logprob: -3.5297558307647705
    3. ',' → logprob: -12.404755592346191
    4. '+,' → logprob: -14.904755592346191
    5. '+
' → logprob: -15.279755592346191
    6. '+i' → logprob: -15.404755592346191
    7. '   ' → logprob: -15.904755592346191
    8. '＋' → logprob: -15.904755592346191
    9. ' ,' → logprob: -16.529756546020508
    10. ' ' → logprob: -16.904756546020508

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. ',' → logprob: -11.625020027160645
    3. ' ' → logprob: -11.875020027160645
    4. 'i' → logprob: -12.875020027160645
    5. '(i' → logprob: -14.375020027160645
    6. '```' → logprob: -14.750020027160645
    7. '(' → logprob: -15.750020027160645
    8. '   ' → logprob: -16.125019073486328
    9. '
' → logprob: -17.000019073486328
    10. ' i' → logprob: -17.500019073486328

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033784625702537596
    2. ' ,' → logprob: -8.000337600708008
    3. ',d' → logprob: -13.750337600708008
    4. ',
' → logprob: -14.750337600708008
    5. 'doc' → logprob: -15.125337600708008
    6. ')' → logprob: -16.125337600708008
    7. '   ' → logprob: -16.250337600708008
    8. ' doc' → logprob: -16.250337600708008
    9. '(doc' → logprob: -16.250337600708008
    10. '),' → logprob: -16.875337600708008

Token 342: ' doc' (ID: 6806)
  Prédit: 'doc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'doc' → logprob: -1.306760805164231e-05
    2. ' doc' → logprob: -11.25001335144043
    3. 's' → logprob: -18.50001335144043
    4. '	doc' → logprob: -18.62501335144043
    5. '   ' → logprob: -19.25001335144043
    6. '(doc' → logprob: -19.75001335144043
    7. 'docs' → logprob: -20.75001335144043
    8. '    ' → logprob: -20.87501335144043
    9. '```' → logprob: -21.12501335144043
    10. 'document' → logprob: -21.12501335144043

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001707540825009346
    2. ',len' → logprob: -6.626707553863525
    3. ' ,' → logprob: -7.876707553863525
    4. '   ' → logprob: -14.126707077026367
    5. 'len' → logprob: -14.376707077026367
    6. ',length' → logprob: -15.251707077026367
    7. ',
' → logprob: -15.876707077026367
    8. ',int' → logprob: -16.501707077026367
    9. ',num' → logprob: -17.001707077026367
    10. ',l' → logprob: -17.001707077026367

Token 344: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0564331205387134e-05
    2. '   ' → logprob: -11.50001049041748
    3. ' len' → logprob: -15.50001049041748
    4. '  ' → logprob: -16.250011444091797
    5. '       ' → logprob: -16.750011444091797
    6. ' ' → logprob: -16.875011444091797
    7. '    ' → logprob: -17.625011444091797
    8. '     ' → logprob: -18.750011444091797
    9. '      ' → logprob: -19.125011444091797
    10. '           ' → logprob: -19.250011444091797

Token 345: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.896309739408025e-07
    2. '+' → logprob: -14.375000953674316
    3. 'a' → logprob: -16.5
    4. ' A' → logprob: -18.625
    5. ' +' → logprob: -19.125
    6. '1' → logprob: -19.125
    7. '[' → logprob: -19.5
    8. ')' → logprob: -19.625
    9. '   ' → logprob: -19.625
    10. ' ' → logprob: -20.0

Token 346: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015023599844425917
    2. ' +' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.501502990722656
    4. ',' → logprob: -18.376502990722656
    5. ' ' → logprob: -20.001502990722656
    6. ')' → logprob: -20.376502990722656
    7. '1' → logprob: -20.501502990722656
    8. '+
' → logprob: -20.626502990722656
    9. '＋' → logprob: -20.876502990722656
    10. ')+' → logprob: -21.251502990722656

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.875004768371582
    4. ')' → logprob: -17.0000057220459
    5. '
' → logprob: -17.0000057220459
    6. '+' → logprob: -17.6250057220459
    7. '```' → logprob: -18.0625057220459
    8. ',' → logprob: -18.2500057220459
    9. '  ' → logprob: -19.0625057220459
    10. '

' → logprob: -19.5625057220459

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.644463479053229e-05
    2. ' ,' → logprob: -10.750046730041504
    3. '   ' → logprob: -11.250046730041504
    4. ')' → logprob: -12.375046730041504
    5. ',last' → logprob: -12.375046730041504
    6. ',
' → logprob: -14.500046730041504
    7. '       ' → logprob: -14.500046730041504
    8. ',len' → logprob: -14.625046730041504
    9. ',None' → logprob: -15.625046730041504
    10. '  ' → logprob: -15.625046730041504

Token 349: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -3.547789674485102e-05
    2. ' last' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.875036239624023
    4. '
' → logprob: -19.625036239624023
    5. '(last' → logprob: -20.000036239624023
    6. '	last' → logprob: -20.000036239624023
    7. '  ' → logprob: -20.250036239624023
    8. '    ' → logprob: -20.500036239624023
    9. '[last' → logprob: -20.750036239624023
    10. ',last' → logprob: -20.875036239624023

Token 350: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.320199877838604e-07
    2. ' B' → logprob: -16.375
    3. ',' → logprob: -16.5
    4. 'b' → logprob: -16.625
    5. 'A' → logprob: -17.75
    6. '```' → logprob: -18.25
    7. ')' → logprob: -18.625
    8. '=' → logprob: -18.875
    9. '   ' → logprob: -19.0
    10. '0' → logprob: -19.0

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013417120499070734
    2. ')' → logprob: -9.000134468078613
    3. ' ,' → logprob: -12.500134468078613
    4. '   ' → logprob: -12.625134468078613
    5. ',)' → logprob: -13.375134468078613
    6. ',len' → logprob: -14.125134468078613
    7. ',
' → logprob: -14.375134468078613
    8. ',n' → logprob: -15.875134468078613
    9. '‌,' → logprob: -16.750133514404297
    10. ',d' → logprob: -16.750133514404297

Token 352: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.9146995327901095e-05
    2. ' len' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.750019073486328
    4. ' ' → logprob: -17.750019073486328
    5. '	len' → logprob: -18.125019073486328
    6. '  ' → logprob: -18.500019073486328
    7. '[len' → logprob: -19.000019073486328
    8. '(len' → logprob: -19.375019073486328
    9. '    ' → logprob: -19.750019073486328
    10. 'l' → logprob: -20.375019073486328

Token 353: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.2664456789934775e-06
    2. ' B' → logprob: -14.250000953674316
    3. '+' → logprob: -15.375000953674316
    4. 'len' → logprob: -16.625001907348633
    5. ')' → logprob: -16.750001907348633
    6. '5' → logprob: -17.000001907348633
    7. 'b' → logprob: -17.625001907348633
    8. '
' → logprob: -18.125001907348633
    9. '(len' → logprob: -18.125001907348633
    10. ' len' → logprob: -18.500001907348633

Token 354: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011212585377506912
    2. ')
' → logprob: -9.500112533569336
    3. '   ' → logprob: -10.250112533569336
    4. ' )' → logprob: -13.625112533569336
    5. ')
' → logprob: -15.500112533569336
    6. '))' → logprob: -16.500112533569336
    7. ')return' → logprob: -16.625112533569336
    8. ')}' → logprob: -17.000112533569336
    9. ')*' → logprob: -17.250112533569336
    10. ' ' → logprob: -17.500112533569336

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020747410599142313
    2. '
' → logprob: -8.875207901000977
    3. 'ways' → logprob: -10.375207901000977
    4. '    
' → logprob: -10.500207901000977
    5. ')' → logprob: -12.875207901000977
    6. '<|end|>' → logprob: -13.375207901000977
    7. '  ' → logprob: -14.125207901000977
    8. ' ways' → logprob: -14.125207901000977
    9. '   
' → logprob: -14.125207901000977
    10. '        
' → logprob: -14.875207901000977

Token 356: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005375436157919466
    2. 'if' → logprob: -8.000537872314453
    3. ' if' → logprob: -8.750537872314453
    4. '    
' → logprob: -11.250537872314453
    5. '  ' → logprob: -11.375537872314453
    6. '
' → logprob: -12.000537872314453
    7. ')' → logprob: -12.500537872314453
    8. '```' → logprob: -12.500537872314453
    9. 'ways' → logprob: -13.625537872314453
    10. '    ' → logprob: -14.125537872314453

Token 357: ' essayer' (ID: 92713)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0987052395939827
    2. ' if' → logprob: -2.723705291748047
    3. '   ' → logprob: -3.598705291748047
    4. '#' → logprob: -7.098705291748047
    5. ' #' → logprob: -9.098705291748047
    6. '  ' → logprob: -10.848705291748047
    7. ' ' → logprob: -10.973705291748047
    8. 'try' → logprob: -11.223705291748047
    9. 'elif' → logprob: -12.723705291748047
    10. '    ' → logprob: -13.098705291748047

Token 358: ' pile' (ID: 39732)
  Prédit: ' pile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pile' → logprob: -0.07181865721940994
    2. 'pile' → logprob: -2.6968185901641846
    3. ' ' → logprob: -6.946818828582764
    4. ' stack' → logprob: -8.071818351745605
    5. ' (' → logprob: -8.446818351745605
    6. ' ' → logprob: -8.821818351745605
    7. '(' → logprob: -9.321818351745605
    8. '  ' → logprob: -10.696818351745605
    9. '('' → logprob: -11.071818351745605
    10. '   ' → logprob: -11.071818351745605

Token 359: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20144441723823547
    2. ' B' → logprob: -1.701444387435913
    3. ' ' → logprob: -10.451444625854492
    4. '_B' → logprob: -14.201444625854492
    5. ' ' → logprob: -14.451444625854492
    6. '   ' → logprob: -14.826444625854492
    7. '  ' → logprob: -14.951444625854492
    8. '	B' → logprob: -16.576444625854492
    9. '=B' → logprob: -16.701444625854492
    10. ',' → logprob: -16.826444625854492

Token 360: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008199920994229615
    2. 'if' → logprob: -7.750820159912109
    3. '
' → logprob: -8.25082015991211
    4. ' if' → logprob: -9.00082015991211
    5. '=' → logprob: -13.25082015991211
    6. ' =' → logprob: -14.00082015991211
    7. '    
' → logprob: -14.37582015991211
    8. '  ' → logprob: -14.62582015991211
    9. '	if' → logprob: -14.87582015991211
    10. ':' → logprob: -14.87582015991211

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006087223067879677
    2. ' if' → logprob: -5.631087303161621
    3. 'if' → logprob: -6.006087303161621
    4. '  ' → logprob: -11.631087303161621
    5. ' =' → logprob: -12.256087303161621
    6. '    ' → logprob: -12.881087303161621
    7. ' ' → logprob: -13.756087303161621
    8. '=' → logprob: -13.881087303161621
    9. ',' → logprob: -14.506087303161621
    10. ':' → logprob: -15.256087303161621

Token 362: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07470890879631042
    2. ' if' → logprob: -3.324708938598633
    3. 'if' (adapté à ' if') → logprob: -3.324708938598633
    4. '  ' → logprob: -11.949708938598633
    5. '    ' → logprob: -12.699708938598633
    6. '    
' → logprob: -12.699708938598633
    7. '	if' → logprob: -13.074708938598633
    8. ' ' → logprob: -13.199708938598633
    9. '
' → logprob: -13.324708938598633
    10. ' 
' → logprob: -13.949708938598633

Token 363: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02325339801609516
    2. '(len' → logprob: -3.7732534408569336
    3. ' len' → logprob: -12.773253440856934
    4. '   ' → logprob: -12.898253440856934
    5. ' ' → logprob: -13.523253440856934
    6. '  ' → logprob: -13.773253440856934
    7. '[len' → logprob: -16.273252487182617
    8. '<len' → logprob: -16.398252487182617
    9. '(' → logprob: -16.898252487182617
    10. '    ' → logprob: -17.148252487182617

Token 364: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10088571906089783
    2. '(len' → logprob: -2.3508856296539307
    3. ' len' → logprob: -7.35088586807251
    4. ' (' → logprob: -10.975885391235352
    5. '[len' → logprob: -11.100885391235352
    6. '<len' → logprob: -12.725885391235352
    7. '=len' → logprob: -14.350885391235352
    8. '	len' → logprob: -14.975885391235352
    9. '   ' → logprob: -15.475885391235352
    10. ',len' → logprob: -15.600885391235352

Token 365: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.128163257315464e-07
    2. ' B' → logprob: -15.375
    3. '_B' → logprob: -17.125
    4. '   ' → logprob: -18.75
    5. '<B' → logprob: -18.875
    6. 'b' → logprob: -19.75
    7. ')' → logprob: -20.125
    8. '(B' → logprob: -20.125
    9. '```' → logprob: -20.625
    10. '<' → logprob: -20.625

Token 366: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.020546209067106247
    2. '<' → logprob: -3.8955461978912354
    3. '<m' → logprob: -13.020545959472656
    4. ')' → logprob: -14.145545959472656
    5. ' ' → logprob: -14.895545959472656
    6. '<len' → logprob: -15.270545959472656
    7. ')<' → logprob: -15.395545959472656
    8. '<int' → logprob: -15.395545959472656
    9. '<n' → logprob: -15.770545959472656
    10. ' ' → logprob: -15.770545959472656

Token 367: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07889000326395035
    2. ' m' → logprob: -2.578890085220337
    3. '   ' → logprob: -15.703889846801758
    4. '	m' → logprob: -16.953889846801758
    5. ' ' → logprob: -17.328889846801758
    6. '    ' → logprob: -17.953889846801758
    7. ')m' → logprob: -18.328889846801758
    8. '  ' → logprob: -18.578889846801758
    9. 'mod' → logprob: -18.578889846801758
    10. '
' → logprob: -18.703889846801758

Token 368: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.518582762917504e-05
    2. ' )' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.125085830688477
    4. ' and' → logprob: -17.000085830688477
    5. 'and' → logprob: -17.000085830688477
    6. ' ' → logprob: -17.125085830688477
    7. ')
' → logprob: -17.500085830688477
    8. '  ' → logprob: -19.750085830688477
    9. '0' → logprob: -19.750085830688477
    10. '    ' → logprob: -20.125085830688477

Token 369: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02326003834605217
    2. 'and' → logprob: -3.7732601165771484
    3. ')' → logprob: -11.773260116577148
    4. ' ' → logprob: -12.523260116577148
    5. '   ' → logprob: -12.773260116577148
    6. ' и' → logprob: -16.14826011657715
    7. '  ' → logprob: -16.89826011657715
    8. ' )' → logprob: -17.02326011657715
    9. ' ' → logprob: -17.02326011657715
    10. '    ' → logprob: -17.14826011657715

Token 370: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2519446313381195
    2. '(last' → logprob: -1.501944661140442
    3. '   ' → logprob: -11.876944541931152
    4. ' ' → logprob: -12.876944541931152
    5. '(' → logprob: -13.501944541931152
    6. '  ' → logprob: -13.751944541931152
    7. '(next' → logprob: -13.876944541931152
    8. ' last' → logprob: -14.251944541931152
    9. '(len' → logprob: -14.876944541931152
    10. '(first' → logprob: -15.501944541931152

Token 371: 'last' (ID: 6684)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.009015973657369614
    2. 'last' → logprob: -4.759016036987305
    3. ' (' → logprob: -8.009016036987305
    4. ' last' → logprob: -9.634016036987305
    5. '[last' → logprob: -12.634016036987305
    6. ',last' → logprob: -16.384016036987305
    7. '   ' → logprob: -17.134016036987305
    8. '(len' → logprob: -17.259016036987305
    9. '(' → logprob: -17.259016036987305
    10. ' ' → logprob: -17.759016036987305

Token 372: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.5048530030981055e-06
    2. ' B' → logprob: -14.125001907348633
    3. '==' → logprob: -15.000001907348633
    4. ' ==' → logprob: -16.625001907348633
    5. ')' → logprob: -17.000001907348633
    6. ' ' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '```' → logprob: -17.250001907348633
    9. '=' → logprob: -17.375001907348633
    10. '!=' → logprob: -17.500001907348633

Token 373: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20143544673919678
    2. '==' → logprob: -1.7014354467391968
    3. ' ' → logprob: -11.326435089111328
    4. ')' → logprob: -11.951435089111328
    5. '=' → logprob: -13.576435089111328
    6. ')==' → logprob: -13.576435089111328
    7. '==
' → logprob: -14.951435089111328
    8. ' ' → logprob: -15.576435089111328
    9. ' )' → logprob: -15.951435089111328
    10. '   ' → logprob: -16.201435089111328

Token 374: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -15.255928993225098
    4. '  ' → logprob: -16.005929946899414
    5. ')' → logprob: -16.380929946899414
    6. ' ' → logprob: -17.380929946899414
    7. '=' → logprob: -17.755929946899414
    8. '    ' → logprob: -18.443429946899414
    9. '
' → logprob: -18.443429946899414
    10. ' or' → logprob: -18.630929946899414

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002043748099822551
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.250204086303711
    4. '  ' → logprob: -15.750204086303711
    5. ')' → logprob: -17.50020408630371
    6. 'or' → logprob: -17.62520408630371
    7. '=' → logprob: -17.81270408630371
    8. '    ' → logprob: -17.93770408630371
    9. '     ' → logprob: -18.25020408630371
    10. ' ' → logprob: -18.31270408630371

Token 376: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07902220636606216
    2. 'or' → logprob: -2.579022169113159
    3. ')' → logprob: -8.954022407531738
    4. ' )' → logprob: -12.954022407531738
    5. ' ' → logprob: -14.329022407531738
    6. '   ' → logprob: -16.704021453857422
    7. '	or' → logprob: -16.704021453857422
    8. '    ' → logprob: -17.079021453857422
    9. ' ' → logprob: -17.829021453857422
    10. ' или' → logprob: -17.829021453857422

Token 377: ' doc' (ID: 6806)
  Prédit: 'doc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'doc' → logprob: -0.01815052703022957
    2. ' doc' → logprob: -4.018150329589844
    3. '(doc' → logprob: -15.018150329589844
    4. '	doc' → logprob: -15.768150329589844
    5. ' ' → logprob: -16.143150329589844
    6. 'd' → logprob: -17.518150329589844
    7. 'docs' → logprob: -17.518150329589844
    8. 'document' → logprob: -17.643150329589844
    9. '   ' → logprob: -18.018150329589844
    10. ' ' → logprob: -18.268150329589844

Token 378: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.36262235045433044
    2. ' >' → logprob: -1.3626223802566528
    3. '<' → logprob: -3.2376222610473633
    4. '>' → logprob: -4.737622261047363
    5. ')' → logprob: -9.237622261047363
    6. ' ' → logprob: -10.237622261047363
    7. ' )' → logprob: -12.737622261047363
    8. ' ' → logprob: -12.987622261047363
    9. '   ' → logprob: -13.237622261047363
    10. ')>' → logprob: -13.237622261047363

Token 379: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.12692831456661224
    2. ' last' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.376928329467773
    4. ' ' → logprob: -16.876928329467773
    5. '(last' → logprob: -17.001928329467773
    6. '[last' → logprob: -17.251928329467773
    7. '	last' → logprob: -17.626928329467773
    8. '
' → logprob: -17.876928329467773
    9. '   ' → logprob: -18.501928329467773
    10. '_last' → logprob: -18.751928329467773

Token 380: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00012594614236149937
    2. 'last' → logprob: -9.125125885009766
    3. '_B' → logprob: -11.875125885009766
    4. ' B' → logprob: -12.000125885009766
    5. ')' → logprob: -13.500125885009766
    6. ' last' → logprob: -14.000125885009766
    7. '```' → logprob: -14.750125885009766
    8. '   ' → logprob: -15.125125885009766
    9. '_last' → logprob: -15.750125885009766
    10. ' ' → logprob: -16.125125885009766

Token 381: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01113012246787548
    2. '):' → logprob: -4.511130332946777
    3. ')' → logprob: -9.636130332946777
    4. '   ' → logprob: -11.511130332946777
    5. ' ):
' → logprob: -12.886130332946777
    6. '):

' → logprob: -13.011130332946777
    7. '):
' → logprob: -14.011130332946777
    8. ':' → logprob: -14.511130332946777
    9. ':
' → logprob: -14.636130332946777
    10. ')
' → logprob: -16.13612937927246

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2106909602880478
    2. 'ways' → logprob: -1.710690975189209
    3. ' ways' → logprob: -4.710690975189209
    4. '   ' → logprob: -8.83569049835205
    5. '      ' → logprob: -10.83569049835205
    6. '     ' → logprob: -10.83569049835205
    7. '           ' → logprob: -11.08569049835205
    8. 'way' → logprob: -12.08569049835205
    9. '        
' → logprob: -12.33569049835205
    10. '```' → logprob: -12.46069049835205

Token 383: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.006717974785715342
    2. ' ways' → logprob: -5.006718158721924
    3. '   ' → logprob: -13.756717681884766
    4. 'way' → logprob: -14.381717681884766
    5. '       ' → logprob: -14.881717681884766
    6. 'WAYS' → logprob: -15.131717681884766
    7. 'Ways' → logprob: -15.756717681884766
    8. ' ' → logprob: -16.506717681884766
    9. '
' → logprob: -16.881717681884766
    10. '    ' → logprob: -17.256717681884766

Token 384: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16027875244617462
    2. ' +=' → logprob: -1.9102787971496582
    3. '   ' → logprob: -10.4102783203125
    4. ']+=' → logprob: -10.9102783203125
    5. '=' → logprob: -13.4102783203125
    6. '       ' → logprob: -13.6602783203125
    7. '+' → logprob: -13.7852783203125
    8. ' ' → logprob: -14.4102783203125
    9. '    ' → logprob: -14.5352783203125
    10. '  ' → logprob: -14.9102783203125

Token 385: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0021866646129637957
    2. ' dfs' → logprob: -6.1271867752075195
    3. '   ' → logprob: -14.00218677520752
    4. 'df' → logprob: -14.25218677520752
    5. 'ways' → logprob: -16.627185821533203
    6. ' ' → logprob: -17.252185821533203
    7. 'DFS' → logprob: -17.627185821533203
    8. '  ' → logprob: -18.002185821533203
    9. '       ' → logprob: -18.627185821533203
    10. 'dp' → logprob: -18.627185821533203

Token 386: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. 'i' → logprob: -17.875
    4. '(
' → logprob: -18.75
    5. ' (' → logprob: -18.875
    6. '   ' → logprob: -20.5
    7. '(I' → logprob: -21.375
    8. ',i' → logprob: -21.875
    9. '```' → logprob: -22.0
    10. '[i' → logprob: -22.25

Token 387: '+' (ID: 10)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07636857032775879
    2. '+' → logprob: -2.701368570327759
    3. 'i' → logprob: -5.07636833190918
    4. ',' → logprob: -9.95136833190918
    5. '(' → logprob: -10.20136833190918
    6. ',i' → logprob: -10.70136833190918
    7. ' +' → logprob: -11.45136833190918
    8. ' (' → logprob: -11.57636833190918
    9. ' i' → logprob: -11.57636833190918
    10. '+i' → logprob: -11.82636833190918

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. 'i' → logprob: -9.875051498413086
    3. '+' → logprob: -15.750051498413086
    4. ' ' → logprob: -16.500051498413086
    5. '```' → logprob: -17.750051498413086
    6. '(i' → logprob: -18.000051498413086
    7. ' i' → logprob: -18.500051498413086
    8. ',' → logprob: -19.375051498413086
    9. '[i' → logprob: -20.125051498413086
    10. '<|end|>' → logprob: -20.250051498413086

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002495279535651207
    2. ' ,' → logprob: -6.502495288848877
    3. '(doc' → logprob: -7.252495288848877
    4. '(i' → logprob: -9.252494812011719
    5. '(' → logprob: -9.377494812011719
    6. ',i' → logprob: -10.127494812011719
    7. 'doc' → logprob: -11.002494812011719
    8. ')' → logprob: -11.252494812011719
    9. ',d' → logprob: -11.752494812011719
    10. ' doc' → logprob: -12.002494812011719

Token 390: ' last' (ID: 2174)
  Prédit: 'doc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'doc' → logprob: -0.009052957408130169
    2. 'last' → logprob: -4.759052753448486
    3. ' doc' → logprob: -7.759052753448486
    4. ' last' → logprob: -11.884053230285645
    5. '(doc' → logprob: -13.384053230285645
    6. '0' → logprob: -14.009053230285645
    7. 'docs' → logprob: -14.259053230285645
    8. ' ' → logprob: -15.384053230285645
    9. '	doc' → logprob: -15.509053230285645
    10. '   ' → logprob: -15.884053230285645

Token 391: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005257118493318558
    2. 'A' → logprob: -5.2552571296691895
    3. 'doc' → logprob: -11.380256652832031
    4. ',' → logprob: -11.755256652832031
    5. ' B' → logprob: -13.380256652832031
    6. ')' → logprob: -13.880256652832031
    7. '```' → logprob: -14.380256652832031
    8. '),' → logprob: -15.505256652832031
    9. '(doc' → logprob: -16.69275665283203
    10. 's' → logprob: -16.94275665283203

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002820920431986451
    2. ',len' → logprob: -6.00282096862793
    3. ' ,' → logprob: -8.00282096862793
    4. 'len' → logprob: -12.37782096862793
    5. 'doc' → logprob: -13.37782096862793
    6. ',
' → logprob: -13.62782096862793
    7. '   ' → logprob: -13.62782096862793
    8. ',d' → logprob: -15.00282096862793
    9. ',length' → logprob: -15.25282096862793
    10. ',s' → logprob: -15.37782096862793

Token 393: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00013250234769657254
    2. ' len' → logprob: -9.50013256072998
    3. '   ' → logprob: -10.37513256072998
    4. '  ' → logprob: -11.75013256072998
    5. ' ' → logprob: -12.37513256072998
    6. '    ' → logprob: -12.50013256072998
    7. '       ' → logprob: -12.75013256072998
    8. '     ' → logprob: -12.87513256072998
    9. '      ' → logprob: -13.00013256072998
    10. '          ' → logprob: -13.87513256072998

Token 394: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10022197663784027
    2. 'A' → logprob: -2.350221872329712
    3. '+' → logprob: -11.725221633911133
    4. ' B' → logprob: -13.100221633911133
    5. 'a' → logprob: -14.100221633911133
    6. ')' → logprob: -14.100221633911133
    7. '```' → logprob: -14.350221633911133
    8. '[' → logprob: -14.475221633911133
    9. '   ' → logprob: -14.850221633911133
    10. '0' → logprob: -14.850221633911133

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015395533409900963
    2. ' ,' → logprob: -8.875153541564941
    3. '   ' → logprob: -11.625153541564941
    4. 'doc' → logprob: -12.750153541564941
    5. '  ' → logprob: -14.250153541564941
    6. '+' → logprob: -14.375153541564941
    7. '    ' → logprob: -14.875153541564941
    8. ',last' → logprob: -15.750153541564941
    9. ',
' → logprob: -16.375154495239258
    10. '       ' → logprob: -16.750154495239258

Token 396: ' doc' (ID: 6806)
  Prédit: 'doc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'doc' → logprob: -7.896309739408025e-07
    2. ' doc' → logprob: -14.125000953674316
    3. 'document' → logprob: -20.125
    4. '	doc' → logprob: -20.125
    5. '(doc' → logprob: -22.0
    6. '   ' → logprob: -22.125
    7. 's' → logprob: -22.125
    8. 'd' → logprob: -22.125
    9. '_doc' → logprob: -22.75
    10. '```' → logprob: -23.0

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018762783147394657
    2. '+' → logprob: -6.751876354217529
    3. ',len' → logprob: -7.376876354217529
    4. ' ,' → logprob: -9.501875877380371
    5. ' +' → logprob: -13.501875877380371
    6. '   ' → logprob: -13.751875877380371
    7. '+,' → logprob: -14.376875877380371
    8. ',l' → logprob: -14.876875877380371
    9. ',
' → logprob: -15.001875877380371
    10. 'len' → logprob: -15.376875877380371

Token 398: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0564331205387134e-05
    2. ' len' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.87501049041748
    4. '          ' → logprob: -16.500011444091797
    5. '    ' → logprob: -17.375011444091797
    6. '       ' → logprob: -17.500011444091797
    7. '           ' → logprob: -17.625011444091797
    8. ' ' → logprob: -17.750011444091797
    9. '  ' → logprob: -17.875011444091797
    10. '      ' → logprob: -18.250011444091797

Token 399: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00032390307751484215
    2. '+' → logprob: -8.250324249267578
    3. '1' → logprob: -9.750324249267578
    4. '+B' → logprob: -13.000324249267578
    5. ' B' → logprob: -13.875324249267578
    6. 'b' → logprob: -14.250324249267578
    7. ' ' → logprob: -16.250324249267578
    8. 'len' → logprob: -16.375324249267578
    9. ' +' → logprob: -16.625324249267578
    10. '-' → logprob: -16.750324249267578

Token 400: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9146995327901095e-05
    2. ' +' → logprob: -10.875019073486328
    3. '+
' → logprob: -16.875019073486328
    4. '+)' → logprob: -17.875019073486328
    5. ')' → logprob: -19.000019073486328
    6. '＋' → logprob: -19.125019073486328
    7. ')+' → logprob: -20.375019073486328
    8. '+=' → logprob: -20.875019073486328
    9. '1' → logprob: -21.375019073486328
    10. '+')' → logprob: -21.500019073486328

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -16.750001907348633
    4. '+' → logprob: -17.125001907348633
    5. '   ' → logprob: -18.125001907348633
    6. ')' → logprob: -18.125001907348633
    7. '
' → logprob: -19.125001907348633
    8. '=' → logprob: -19.437501907348633
    9. '۱' → logprob: -20.125001907348633
    10. '-' → logprob: -20.375001907348633

Token 402: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06201888248324394
    2. ')
' → logprob: -2.812018871307373
    3. '   ' → logprob: -10.062019348144531
    4. ' )' → logprob: -12.812019348144531
    5. ')
' → logprob: -13.187019348144531
    6. ')%' → logprob: -13.562019348144531
    7. ')

' → logprob: -13.812019348144531
    8. ' )
' → logprob: -14.812019348144531
    9. ')return' → logprob: -14.812019348144531
    10. '
' → logprob: -15.687019348144531

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033125809859484434
    2. 'return' → logprob: -5.753312587738037
    3. ' return' → logprob: -9.128312110900879
    4. '```' → logprob: -10.753312110900879
    5. 'ways' → logprob: -12.503312110900879
    6. '	return' → logprob: -14.628312110900879
    7. ' ways' → logprob: -15.378312110900879
    8. '
' → logprob: -15.878312110900879
    9. ':return' → logprob: -16.253313064575195
    10. '       ' → logprob: -16.628313064575195

Token 404: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01153804361820221
    2. '   ' → logprob: -4.511538028717041
    3. ' return' → logprob: -7.761538028717041
    4. '```' → logprob: -10.2615385055542
    5. 'ways' → logprob: -10.5115385055542
    6. '	return' → logprob: -13.5115385055542
    7. ')return' → logprob: -15.5115385055542
    8. 'eturn' → logprob: -15.8865385055542
    9. ')' → logprob: -16.011537551879883
    10. ':return' → logprob: -16.011537551879883

Token 405: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -3.1782583391759545e-05
    2. ' ways' → logprob: -10.375031471252441
    3. 'way' → logprob: -14.500031471252441
    4. '   ' → logprob: -17.500032424926758
    5. 'WAYS' → logprob: -18.125032424926758
    6. '(' → logprob: -19.875032424926758
    7. '```' → logprob: -20.000032424926758
    8. 'Ways' → logprob: -20.250032424926758
    9. ' ' → logprob: -20.375032424926758
    10. ' ' → logprob: -20.750032424926758

Token 406: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6461520791053772
    2. '%' → logprob: -0.7711520791053772
    3. '<|end|>' → logprob: -4.396152019500732
    4. '%n' → logprob: -7.896152019500732
    5. '
' → logprob: -8.77115249633789
    6. '%A' → logprob: -9.02115249633789
    7. 'ways' → logprob: -9.27115249633789
    8. ')' → logprob: -9.27115249633789
    9. '<|end|>' → logprob: -9.39615249633789
    10. ')%' → logprob: -9.77115249633789

Token 407: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0031777136027812958
    2. ' MOD' → logprob: -5.753177642822266
    3. '_MOD' → logprob: -18.503177642822266
    4. '(M' → logprob: -19.628177642822266
    5. '.MOD' → logprob: -20.253177642822266
    6. 'MD' → logprob: -22.253177642822266
    7. 'MO' → logprob: -22.378177642822266
    8. ' ' → logprob: -22.628177642822266
    9. 'M' → logprob: -22.878177642822266
    10. '(mod' → logprob: -23.628177642822266

Token 408: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015383612480945885
    2. 'result' → logprob: -8.875153541564941
    3. '
' → logprob: -11.250153541564941
    4. ' print' → logprob: -15.125153541564941
    5. '```' → logprob: -15.625153541564941
    6. 'res' → logprob: -16.000154495239258
    7. 'ans' → logprob: -16.125154495239258
    8. '  
' → logprob: -16.500154495239258
    9. 'answer' → logprob: -16.875154495239258
    10. ')
' → logprob: -17.750154495239258

Token 409: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.45848218582978e-06
    2. 'result' → logprob: -13.12500286102295
    3. '
' → logprob: -15.75000286102295
    4. '```' → logprob: -15.87500286102295
    5. ' print' → logprob: -16.125001907348633
    6. '  
' → logprob: -18.875001907348633
    7. '(print' → logprob: -19.625001907348633
    8. '``' → logprob: -19.875001907348633
    9. '    
' → logprob: -20.000001907348633
    10. '#print' → logprob: -20.125001907348633

Token 410: ' appel' (ID: 34642)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7120533811976202e-05
    2. 'result' → logprob: -11.000017166137695
    3. 'res' → logprob: -15.500017166137695
    4. 'ans' → logprob: -16.375017166137695
    5. ' print' → logprob: -17.125017166137695
    6. '```' → logprob: -17.375017166137695
    7. 'answer' → logprob: -17.875017166137695
    8. '
' → logprob: -18.625017166137695
    9. 'r' → logprob: -20.750017166137695
    10. '  
' → logprob: -20.750017166137695

Token 411: ' initial' (ID: 4871)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007139815716072917
    2. 'result' → logprob: -7.25071382522583
    3. '
' → logprob: -14.000714302062988
    4. 'r' → logprob: -14.250714302062988
    5. '=' → logprob: -14.500714302062988
    6. ' print' → logprob: -14.625714302062988
    7. 'res' → logprob: -14.875714302062988
    8. 'answer' → logprob: -15.125714302062988
    9. 'ress' → logprob: -15.375714302062988
    10. 'ans' → logprob: -15.500714302062988

Token 412: ' :
' (ID: 10039)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.505351095460355e-05
    2. 'result' → logprob: -9.500075340270996
    3. ' print' → logprob: -16.62507438659668
    4. 'answer' → logprob: -18.62507438659668
    5. 'res' → logprob: -19.00007438659668
    6. '
' → logprob: -19.12507438659668
    7. 'ans' → logprob: -19.25007438659668
    8. '```' → logprob: -19.87507438659668
    9. 'prin' → logprob: -20.87507438659668
    10. 'pr' → logprob: -21.00007438659668

Token 413: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7697225252486533e-06
    2. 'result' → logprob: -12.500003814697266
    3. '```' → logprob: -19.125003814697266
    4. ' print' → logprob: -19.625003814697266
    5. '
' → logprob: -20.625003814697266
    6. 'res' → logprob: -21.250003814697266
    7. 'answer' → logprob: -21.500003814697266
    8. 'pr' → logprob: -21.750003814697266
    9. 'prin' → logprob: -22.125003814697266
    10. 'ans' → logprob: -22.125003814697266

Token 414: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132658004760742
    2. '=' → logprob: -1.3132658004760742
    3. 'ult' → logprob: -13.813265800476074
    4. 's' → logprob: -14.313265800476074
    5. '＝' → logprob: -14.438265800476074
    6. ',' → logprob: -15.188265800476074
    7. '=res' → logprob: -15.188265800476074
    8. ' ' → logprob: -15.563265800476074
    9. 'ults' → logprob: -15.688265800476074
    10. '=int' → logprob: -15.688265800476074

Token 415: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -3.023293538717553e-05
    2. ' dfs' → logprob: -10.500030517578125
    3. 'df' → logprob: -12.875030517578125
    4. 'DFS' → logprob: -19.500030517578125
    5. 'ds' → logprob: -20.375030517578125
    6. 'dp' → logprob: -20.500030517578125
    7. '(' → logprob: -20.750030517578125
    8. 'fs' → logprob: -21.000030517578125
    9. 'dfa' → logprob: -21.125030517578125
    10. '```' → logprob: -21.250030517578125

Token 416: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.836499985889532e-05
    2. '0' → logprob: -9.7500581741333
    3. ' (' → logprob: -18.500059127807617
    4. '(
' → logprob: -21.625059127807617
    5. ' ' → logprob: -22.500059127807617
    6. '(n' → logprob: -22.750059127807617
    7. '```' → logprob: -23.625059127807617
    8. '[' → logprob: -24.000059127807617
    9. '()' → logprob: -24.000059127807617
    10. 'def' → logprob: -24.000059127807617

Token 417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '۰' → logprob: -22.0
    4. '```' → logprob: -22.5
    5. '(' → logprob: -22.625
    6. ')' → logprob: -23.0
    7. '00' → logprob: -23.625
    8. '000' → logprob: -23.625
    9. '０' → logprob: -23.625
    10. ',' → logprob: -24.375

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.633853652398102e-05
    2. '0' → logprob: -10.000056266784668
    3. ' ,' → logprob: -11.500056266784668
    4. ',
' → logprob: -14.750056266784668
    5. ')' → logprob: -16.500057220458984
    6. '(' → logprob: -16.625057220458984
    7. '
' → logprob: -17.125057220458984
    8. ' ' → logprob: -17.500057220458984
    9. ',None' → logprob: -17.500057220458984
    10. '```' → logprob: -18.125057220458984

Token 419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. ')' → logprob: -20.875
    4. '۰' → logprob: -21.875
    5. '   ' → logprob: -22.375
    6. '  ' → logprob: -22.5
    7. '000' → logprob: -23.25
    8. '```' → logprob: -23.625
    9. '00' → logprob: -23.875
    10. 'sys' → logprob: -23.9375

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1054253011243418e-05
    2. ' ,' → logprob: -11.250020980834961
    3. '0' → logprob: -11.750020980834961
    4. ',,' → logprob: -16.25002098083496
    5. ')' → logprob: -17.00002098083496
    6. ',,,' → logprob: -17.25002098083496
    7. ',
' → logprob: -17.75002098083496
    8. ',None' → logprob: -17.87502098083496
    9. ' ' → logprob: -19.12502098083496
    10. ',,,,' → logprob: -19.25002098083496

Token 421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. ',' → logprob: -18.375001907348633
    4. '000' → logprob: -18.687501907348633
    5. '۰' → logprob: -19.250001907348633
    6. '```' → logprob: -19.375001907348633
    7. 'res' → logprob: -19.687501907348633
    8. '00' → logprob: -19.687501907348633
    9. ')' → logprob: -19.750001907348633
    10. '#' → logprob: -19.937501907348633

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.873571692267433e-05
    2. '0' → logprob: -9.625068664550781
    3. ' ,' → logprob: -12.875068664550781
    4. ')' → logprob: -17.25006866455078
    5. ' ' → logprob: -17.50006866455078
    6. ',
' → logprob: -19.25006866455078
    7. ',,' → logprob: -19.25006866455078
    8. '```' → logprob: -19.50006866455078
    9. '
' → logprob: -20.12506866455078
    10. '，' → logprob: -20.62506866455078

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -18.375
    4. '০' → logprob: -19.125
    5. '045' → logprob: -19.25
    6. '047' → logprob: -19.375
    7. ')' → logprob: -19.5
    8. '010' → logprob: -19.5
    9. '000' → logprob: -19.75
    10. '041' → logprob: -19.75

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5491004129871726e-05
    2. '0' → logprob: -10.125045776367188
    3. ' ,' → logprob: -12.500045776367188
    4. ')' → logprob: -13.375045776367188
    5. ' ' → logprob: -17.500045776367188
    6. ',
' → logprob: -18.375045776367188
    7. '```' → logprob: -18.875045776367188
    8. ')
' → logprob: -19.000045776367188
    9. '00' → logprob: -19.250045776367188
    10. ',,' → logprob: -19.375045776367188

Token 425: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.000000953674316
    3. ')' → logprob: -15.875000953674316
    4. '۰' → logprob: -16.25
    5. '<|end|>' → logprob: -17.625
    6. '00' → logprob: -17.875
    7. 'res' → logprob: -18.625
    8. '০' → logprob: -18.8125
    9. '045' → logprob: -18.875
    10. '000' → logprob: -19.25

Token 426: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931632161140442
    2. ')
' → logprob: -0.6931632161140442
    3. ')%' → logprob: -11.69316291809082
    4. ')
' → logprob: -11.94316291809082
    5. ')

' → logprob: -14.19316291809082
    6. ' )
' → logprob: -15.06816291809082
    7. ' )' → logprob: -16.06816291809082
    8. ')`
' → logprob: -16.31816291809082
    9. '%' → logprob: -17.44316291809082
    10. ')#' → logprob: -18.94316291809082

Token 427: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.080963092041202e-06
    2. '```' → logprob: -12.625004768371582
    3. ' print' → logprob: -13.375004768371582
    4. '``' → logprob: -16.1250057220459
    5. '#print' → logprob: -16.3750057220459
    6. '<|end|>' → logprob: -18.0000057220459
    7. '-print' → logprob: -18.8750057220459
    8. '
' → logprob: -19.5000057220459
    9. '.print' → logprob: -20.6250057220459
    10. '	print' → logprob: -20.8750057220459

Token 428: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0011708177626132965
    2. '(' → logprob: -6.751170635223389
    3. ' (' → logprob: -14.876171112060547
    4. '(
' → logprob: -15.876171112060547
    5. '(f' → logprob: -16.751171112060547
    6. '(re' → logprob: -17.376171112060547
    7. 'res' → logprob: -17.626171112060547
    8. '(result' → logprob: -18.626171112060547
    9. '(r' → logprob: -18.626171112060547
    10. '((' → logprob: -19.126171112060547

Token 429: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.375
    3. ' )' → logprob: -15.625
    4. ')`' → logprob: -16.75
    5. '%' → logprob: -18.0
    6. '})' → logprob: -18.5
    7. '())' → logprob: -18.625
    8. '%)' → logprob: -19.125
    9. ')%' → logprob: -19.25
    10. '`)' → logprob: -19.625

Token 430: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.615255839889869e-05
    2. ' MOD' → logprob: -9.250096321105957
    3. '(M' → logprob: -17.62509536743164
    4. '_MOD' → logprob: -18.00009536743164
    5. '(' → logprob: -19.37509536743164
    6. '(Mod' → logprob: -19.62509536743164
    7. '.MOD' → logprob: -20.37509536743164
    8. '(mod' → logprob: -21.00009536743164
    9. ' (' → logprob: -22.12509536743164
    10. '100' → logprob: -22.37509536743164

Token 431: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ')
' → logprob: -12.875006675720215
    3. '```' → logprob: -13.625006675720215
    4. ' )' → logprob: -14.000006675720215
    5. '())' → logprob: -14.375006675720215
    6. '`)' → logprob: -15.250006675720215
    7. '
' → logprob: -15.500006675720215
    8. '()' → logprob: -16.0000057220459
    9. '')' → logprob: -16.1250057220459
    10. '))' → logprob: -16.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 429
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 265
Précision stricte (1ère position): 29.60%
Précision adaptée (1ère position): 31.00%
Précision (top 10): 61.77%
================================================================================
