================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution complète en Python avec commentaires détaillés

def max_consecutive_ones(grid, n):
    """
    Calcule le plus grand nombre de 1 consécutifs dans une grille nxn
    dans les directions horizontale, verticale et diagonales (2 directions).
    
    Args:
    - grid: liste de chaînes, chaque chaîne représentant une ligne de la grille
    - n: taille de la grille (n x n)
    
    Retourne:
    - un entier représentant le nombre maximal de 1 consécutifs
    """
    max_len = 0
    
    # Vérification horizontale
    for i in range(n):
        count = 0
        for j in range(n):
            if grid[i][j] == '1':
                count += 1
                max_len = max(max_len, count)
            else:
                count = 0
    
    # Vérification verticale
    for j in range(n):
        count = 0
        for i in range(n):
            if grid[i][j] == '1':
                count += 1
                max_len = max(max_len, count)
            else:
                count = 0
    
    # Vérification diagonale descendante (de haut-gauche vers bas-droite)
    # On parcourt toutes les diagonales possibles où la différence i-j est constante
    for diff in range(-n+1, n):
        count = 0
        # i valide entre 0 et n-1, j = i - diff
        for i in range(n):
            j = i - diff
            if 0 <= j < n:
                if grid[i][j] == '1':
                    count += 1
                    max_len = max(max_len, count)
                else:
                    count = 0
        # Réinit à chaque diagonale
    
    # Vérification diagonale montante (de bas-gauche vers haut-droite)
    # Ces diagonales ont somme i+j constante entre 0 et 2n-2
    for s in range(2*n -1):
        count = 0
        # i varie de max(0, s-(n-1)) à min(n-1, s)
        start_i = max(0, s - (n -1))
        end_i = min(n-1, s)
        for i in range(start_i, end_i+1):
            j = s - i
            if grid[i][j] == '1':
                count += 1
                max_len = max(max_len, count)
            else:
                count = 0
    
    return max_len

def main():
    """
    Lecture des multiples jeux de données jusqu'à la ligne '0'.
    Pour chaque jeu de données, on calcule la plus grande chaîne de 1 consécutifs
    et on affiche le résultat.
    """
    while True:
        line = input().strip()
        if line == '0':
            break
        n = int(line)
        grid = []
        for _ in range(n):
            row = input().strip()
            grid.append(row)
        
        result = max_consecutive_ones(grid, n)
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' complète' (ID: 75660)
  → Token d'amorce (pas de prédiction)

Token 3: ' en' (ID: 469)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.35752567648887634
    2. ':' → logprob: -1.3575257062911987
    3. 'def' → logprob: -4.232525825500488
    4. ' :' → logprob: -4.357525825500488
    5. '#' → logprob: -4.857525825500488
    6. ' ```' → logprob: -6.357525825500488
    7. '``' → logprob: -6.482525825500488
    8. '\n' → logprob: -6.607525825500488
    9. '\' → logprob: -7.232525825500488
    10. ''''' → logprob: -7.982525825500488

Token 4: ' Python' (ID: 26534)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.19177737832069397
    2. 'Python' → logprob: -1.8167773485183716
    3. ' Python' → logprob: -5.441777229309082
    4. '```' → logprob: -5.441777229309082
    5. 'fr' → logprob: -6.066777229309082
    6. ' python' → logprob: -7.191777229309082
    7. 'py' → logprob: -9.691777229309082
    8. ' français' → logprob: -9.816777229309082
    9. '#' → logprob: -10.441777229309082
    10. 'French' → logprob: -11.441777229309082

Token 5: ' avec' (ID: 3937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7606485486030579
    2. '```' → logprob: -0.7606485486030579
    3. '#' → logprob: -4.260648727416992
    4. '\' → logprob: -4.385648727416992
    5. ' :' → logprob: -4.385648727416992
    6. '\n' → logprob: -4.635648727416992
    7. 'def' → logprob: -4.760648727416992
    8. '``' → logprob: -5.635648727416992
    9. ':def' → logprob: -7.135648727416992
    10. '`' → logprob: -7.385648727416992

Token 6: ' commentaires' (ID: 67971)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.34500759840011597
    2. 'import' → logprob: -2.7200076580047607
    3. 'def' → logprob: -3.3450076580047607
    4. 'un' → logprob: -3.7200076580047607
    5. 'from' → logprob: -3.9700076580047607
    6. ' une' → logprob: -3.9700076580047607
    7. ' un' → logprob: -3.9700076580047607
    8. ' def' → logprob: -4.095007419586182
    9. 'une' → logprob: -4.220007419586182
    10. '``' → logprob: -4.220007419586182

Token 7: ' déta' (ID: 99673)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5194528698921204
    2. '#' → logprob: -1.6444528102874756
    3. ':' → logprob: -1.8944528102874756
    4. '\' → logprob: -3.8944528102874756
    5. '\n' → logprob: -3.8944528102874756
    6. ' :' → logprob: -4.894453048706055
    7. '``' → logprob: -5.269453048706055
    8. '
' → logprob: -6.019453048706055
    9. 'def' → logprob: -7.019453048706055
    10. '`' → logprob: -7.144453048706055

Token 8: 'illés' (ID: 160970)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6851999163627625
    2. 'és' → logprob: -1.4351999759674072
    3. 'r' → logprob: -2.6851999759674072
    4. 'é' → logprob: -3.0601999759674072
    5. 'n' → logprob: -3.6851999759674072
    6. 's' → logprob: -3.8101999759674072
    7. 'aires' → logprob: -3.8101999759674072
    8. 'v' → logprob: -4.810199737548828
    9. 'a' → logprob: -4.810199737548828
    10. '```' → logprob: -5.060199737548828

Token 9: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.780899167060852
    2. ':' → logprob: -1.155899167060852
    3. '#' → logprob: -2.0308990478515625
    4. '\' → logprob: -3.2808990478515625
    5. '\n' → logprob: -3.5308990478515625
    6. ' :' → logprob: -4.2808990478515625
    7. '``' → logprob: -5.6558990478515625
    8. 'def' → logprob: -5.9058990478515625
    9. '
' → logprob: -6.6558990478515625
    10. '`' → logprob: -7.1558990478515625

Token 10: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5670614838600159
    2. '```' → logprob: -0.9420614838600159
    3. 'def' → logprob: -3.317061424255371
    4. 'import' → logprob: -6.567061424255371
    5. '\' → logprob: -6.567061424255371
    6. '``' → logprob: -7.317061424255371
    7. ':' → logprob: -7.567061424255371
    8. 'd' → logprob: -7.692061424255371
    9. ''''
' → logprob: -7.817061424255371
    10. '"""
' → logprob: -8.067061424255371

Token 11: ' max' (ID: 2999)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -1.1057106256484985
    2. ' ' → logprob: -1.2307106256484985
    3. ' hello' → logprob: -2.855710506439209
    4. ' ma' → logprob: -2.980710506439209
    5. ' ' → logprob: -2.980710506439209
    6. ' factorial' → logprob: -3.355710506439209
    7. ' factor' → logprob: -3.480710506439209
    8. '_' → logprob: -3.480710506439209
    9. ' fibonacci' → logprob: -3.980710506439209
    10. ' somme' → logprob: -4.105710506439209

Token 12: '_con' (ID: 7531)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002033561235293746
    2. '_length' → logprob: -8.002033233642578
    3. 'imum' → logprob: -8.252033233642578
    4. '_sum' → logprob: -8.377033233642578
    5. '_max' → logprob: -9.002033233642578
    6. '_val' → logprob: -9.127033233642578
    7. ' _' → logprob: -9.252033233642578
    8. '_depth' → logprob: -9.377033233642578
    9. '_score' → logprob: -9.502033233642578
    10. '_s' → logprob: -9.627033233642578

Token 13: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.269784152507782
    2. 't' → logprob: -2.1447842121124268
    3. 'st' → logprob: -3.2697842121124268
    4. 's' → logprob: -3.5197842121124268
    5. 'sec' → logprob: -4.144783973693848
    6. 'cat' → logprob: -4.144783973693848
    7. 'tin' → logprob: -5.019783973693848
    8. 'secut' → logprob: -5.519783973693848
    9. 'n' → logprob: -6.394783973693848
    10. 'curr' → logprob: -6.894783973693848

Token 14: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00995653122663498
    2. '_chars' → logprob: -6.509956359863281
    3. '_sub' → logprob: -6.634956359863281
    4. '_sum' → logprob: -6.759956359863281
    5. '_char' → logprob: -6.884956359863281
    6. '_v' → logprob: -7.009956359863281
    7. '_s' → logprob: -7.509956359863281
    8. '_letters' → logprob: -7.634956359863281
    9. '_occ' → logprob: -7.884956359863281
    10. '_a' → logprob: -8.384956359863281

Token 15: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.05539964884519577
    2. '1' → logprob: -4.055399417877197
    3. 'v' → logprob: -4.930399417877197
    4. 'equal' → logprob: -4.930399417877197
    5. 'chars' → logprob: -5.055399417877197
    6. 'one' → logprob: -5.180399417877197
    7. 'char' → logprob: -5.555399417877197
    8. 're' → logprob: -6.055399417877197
    9. 'true' → logprob: -6.430399417877197
    10. 'same' → logprob: -7.680399417877197

Token 16: '(grid' (ID: 51818)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0069601042196154594
    2. '_' → logprob: -5.006959915161133
    3. '<|end|>' → logprob: -9.881959915161133
    4. '```' → logprob: -10.256959915161133
    5. 's' → logprob: -10.756959915161133
    6. ' (' → logprob: -10.881959915161133
    7. '(n' → logprob: -11.256959915161133
    8. '(x' → logprob: -11.756959915161133
    9. '<|end|>' → logprob: -11.881959915161133
    10. '(user' → logprob: -12.006959915161133

Token 17: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011356087401509285
    2. '[' → logprob: -4.761355876922607
    3. ')' → logprob: -6.386355876922607
    4. ',' → logprob: -7.761355876922607
    5. ':' → logprob: -8.011356353759766
    6. '[]):' → logprob: -8.636356353759766
    7. '[][]' → logprob: -11.011356353759766
    8. '):
' → logprob: -11.136356353759766
    9. ']:' → logprob: -11.261356353759766
    10. ' ):' → logprob: -11.386356353759766

Token 18: ' n' (ID: 297)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.28361591696739197
    2. 'rows' → logprob: -2.033615827560425
    3. ' n' → logprob: -3.283615827560425
    4. ' row' → logprob: -3.533615827560425
    5. ' m' → logprob: -4.283616065979004
    6. 'row' → logprob: -4.908616065979004
    7. ')' → logprob: -5.033616065979004
    8. ' max' → logprob: -5.283616065979004
    9. 'n' → logprob: -5.408616065979004
    10. 'm' → logprob: -5.908616065979004

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00439783651381731
    2. ')' → logprob: -5.879397869110107
    3. ',' → logprob: -6.879397869110107
    4. '[' → logprob: -7.754397869110107
    5. ':' → logprob: -9.75439739227295
    6. '):
' → logprob: -10.87939739227295
    7. ' ):' → logprob: -11.25439739227295
    8. '[]):' → logprob: -11.25439739227295
    9. '_' → logprob: -12.12939739227295
    10. 's' → logprob: -12.50439739227295

Token 20: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003039982169866562
    2. ':
' → logprob: -6.628039836883545
    3. '_' → logprob: -7.628039836883545
    4. '   ' → logprob: -7.753039836883545
    5. '_:' → logprob: -8.253040313720703
    6. '```' → logprob: -9.003040313720703
    7. ' :' → logprob: -9.253040313720703
    8. '[' → logprob: -9.503040313720703
    9. '():' → logprob: -9.753040313720703
    10. '(' → logprob: -9.878040313720703

Token 21: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021850107237696648
    2. ' max' → logprob: -4.146850109100342
    3. 'max' → logprob: -5.271850109100342
    4. '       ' → logprob: -7.646850109100342
    5. '    ' → logprob: -9.396849632263184
    6. ' ' → logprob: -11.146849632263184
    7. '    
' → logprob: -11.271849632263184
    8. '```' → logprob: -11.521849632263184
    9. ' rows' → logprob: -11.521849632263184
    10. '  ' → logprob: -11.646849632263184

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10045725852251053
    2. '"""' → logprob: -2.850457191467285
    3. 'Calcul' → logprob: -4.225457191467285
    4. 'def' → logprob: -5.475457191467285
    5. 'Calculate' → logprob: -6.100457191467285
    6. ' """' → logprob: -6.475457191467285
    7. '"""
' → logprob: -6.475457191467285
    8. 'Returns' → logprob: -6.475457191467285
    9. ' Calculates' → logprob: -6.725457191467285
    10. '"' → logprob: -6.850457191467285

Token 23: ' Cal' (ID: 4453)
  Prédit: 'Calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calcul' → logprob: -0.7841174602508545
    2. '   ' → logprob: -1.1591174602508545
    3. 'Cal' (adapté à ' Cal') → logprob: -2.5341174602508545
    4. 'Trou' → logprob: -3.1591174602508545
    5. '"""' → logprob: -3.4091174602508545
    6. 'Calculate' → logprob: -4.159117698669434
    7. '"""
' → logprob: -4.284117698669434
    8. 'Compte' → logprob: -4.784117698669434
    9. 'Find' → logprob: -4.909117698669434
    10. 'Cette' → logprob: -5.284117698669434

Token 24: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.02435613051056862
    2. 'cul' → logprob: -3.7743561267852783
    3. 'c' → logprob: -7.024356365203857
    4. 'cules' → logprob: -9.2743558883667
    5. 'culate' → logprob: -10.0243558883667
    6. '#' → logprob: -11.0243558883667
    7. '\' → logprob: -11.1493558883667
    8. 'cula' → logprob: -11.6493558883667
    9. '"' → logprob: -12.1493558883667
    10. '   ' → logprob: -12.5243558883667

Token 25: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.1554383784532547
    2. ' la' → logprob: -2.0304384231567383
    3. 'le' → logprob: -4.905438423156738
    4. '_le' → logprob: -6.155438423156738
    5. ' the' → logprob: -7.155438423156738
    6. 's' → logprob: -7.280438423156738
    7. '   ' → logprob: -7.530438423156738
    8. ' ' → logprob: -8.030438423156738
    9. 'la' → logprob: -8.280438423156738
    10. ' ' → logprob: -8.905438423156738

Token 26: ' plus' (ID: 2932)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6231693625450134
    2. 'nombre' → logprob: -0.9981693625450134
    3. ' maximum' → logprob: -2.998169422149658
    4. 'maximum' → logprob: -3.373169422149658
    5. 'max' → logprob: -5.123169422149658
    6. '   ' → logprob: -6.623169422149658
    7. 's' → logprob: -6.873169422149658
    8. ' max' → logprob: -7.373169422149658
    9. 'plus' → logprob: -7.373169422149658
    10. ' plus' → logprob: -7.373169422149658

Token 27: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -1.001973032951355
    2. 'long' → logprob: -1.251973032951355
    3. ' grand' → logprob: -1.626973032951355
    4. ' long' → logprob: -2.0019731521606445
    5. '_long' → logprob: -4.7519731521606445
    6. '_' → logprob: -6.1269731521606445
    7. '```' → logprob: -6.8769731521606445
    8. '   ' → logprob: -7.0019731521606445
    9. ' ' → logprob: -7.1269731521606445
    10. '	long' → logprob: -7.1269731521606445

Token 28: ' nombre' (ID: 9733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3156763017177582
    2. ' nombre' → logprob: -2.190676212310791
    3. '_nombre' → logprob: -2.440676212310791
    4. 'nombre' → logprob: -3.065676212310791
    5. ' _' → logprob: -3.815676212310791
    6. ' ' → logprob: -6.815676212310791
    7. '_n' → logprob: -8.56567668914795
    8. 'e' → logprob: -8.69067668914795
    9. '_nb' → logprob: -8.69067668914795
    10. 's' → logprob: -8.69067668914795

Token 29: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3623335659503937
    2. ' de' → logprob: -1.6123335361480713
    3. '_' → logprob: -3.1123335361480713
    4. '<|end|>' → logprob: -4.11233377456665
    5. '  ' → logprob: -4.36233377456665
    6. ' ' → logprob: -4.61233377456665
    7. '_con' → logprob: -5.11233377456665
    8. 'd' → logprob: -5.23733377456665
    9. ' cons' → logprob: -6.61233377456665
    10. '_de' → logprob: -6.86233377456665

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07977248728275299
    2. '1' → logprob: -2.704772472381592
    3. '_' → logprob: -5.204772472381592
    4. ' espaces' → logprob: -5.954772472381592
    5. ' uns' → logprob: -7.954772472381592
    6. ' ones' → logprob: -8.20477294921875
    7. 'con' → logprob: -8.32977294921875
    8. '0' → logprob: -9.07977294921875
    9. ' '' → logprob: -9.20477294921875
    10. '```' → logprob: -9.32977294921875

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12831418216228485
    2. ' ' → logprob: -2.128314256668091
    3. ' uns' → logprob: -8.128314018249512
    4. 'con' → logprob: -8.378314018249512
    5. 'uns' → logprob: -8.503314018249512
    6. '```' → logprob: -8.878314018249512
    7. 'un' → logprob: -9.128314018249512
    8. ' ones' → logprob: -9.378314018249512
    9. ' '' → logprob: -9.503314018249512
    10. ' un' → logprob: -10.253314018249512

Token 32: ' cons' (ID: 1473)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014910487458109856
    2. ' cons' → logprob: -4.389910697937012
    3. ' s' → logprob: -6.389910697937012
    4. '_' → logprob: -7.514910697937012
    5. ''s' → logprob: -9.389910697937012
    6. '_s' → logprob: -11.014910697937012
    7. ' ' → logprob: -11.264910697937012
    8. '```' → logprob: -11.264910697937012
    9. 'cons' → logprob: -11.639910697937012
    10. ' _' → logprob: -12.014910697937012

Token 33: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0002625278721097857
    2. 'ecut' → logprob: -8.375262260437012
    3. 'éc' → logprob: -10.500262260437012
    4. 'é' → logprob: -13.500262260437012
    5. 'écution' → logprob: -13.875262260437012
    6. 'secut' → logprob: -14.750262260437012
    7. '```' → logprob: -14.875262260437012
    8. 'ec' → logprob: -15.750262260437012
    9. 'icut' → logprob: -15.875262260437012
    10. 'cut' → logprob: -16.125263214111328

Token 34: 'ifs' (ID: 14119)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.09684127569198608
    2. 'i' → logprob: -3.596841335296631
    3. 'u' → logprob: -3.971841335296631
    4. 'ifs' → logprob: -4.346841335296631
    5. 'uts' → logprob: -4.846841335296631
    6. 'utive' → logprob: -4.846841335296631
    7. 'if' → logprob: -5.346841335296631
    8. 'cut' → logprob: -5.721841335296631
    9. 's' → logprob: -6.096841335296631
    10. 'uti' → logprob: -6.971841335296631

Token 35: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.4777282774448395
    2. ' sur' → logprob: -1.227728247642517
    3. 'dans' → logprob: -3.7277283668518066
    4. 's' → logprob: -3.9777283668518066
    5. 'sur' → logprob: -4.477728366851807
    6. ' présents' → logprob: -4.727728366851807
    7. ' ' → logprob: -5.602728366851807
    8. ',' → logprob: -5.727728366851807
    9. '_' → logprob: -5.977728366851807
    10. ' en' → logprob: -6.102728366851807

Token 36: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.34665337204933167
    2. ' la' → logprob: -1.9716533422470093
    3. 'une' → logprob: -2.471653461456299
    4. ' n' → logprob: -3.596653461456299
    5. '   ' → logprob: -4.846653461456299
    6. 'n' → logprob: -4.971653461456299
    7. ' toute' → logprob: -5.221653461456299
    8. ' chaque' → logprob: -5.471653461456299
    9. ' ' → logprob: -5.846653461456299
    10. 'la' → logprob: -5.971653461456299

Token 37: ' grille' (ID: 99153)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.739522397518158
    2. ' ligne' → logprob: -1.7395224571228027
    3. ' grid' → logprob: -2.4895224571228027
    4. 'une' → logprob: -2.7395224571228027
    5. '   ' → logprob: -3.8645224571228027
    6. 'row' → logprob: -4.239522457122803
    7. 'élé' → logprob: -4.239522457122803
    8. 'e' → logprob: -4.489522457122803
    9. 'l' → logprob: -4.489522457122803
    10. ' row' → logprob: -4.489522457122803

Token 38: ' nx' (ID: 50118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6439691781997681
    2. ',' → logprob: -2.0189690589904785
    3. ' ,' → logprob: -2.7689690589904785
    4. ' de' → logprob: -3.3939690589904785
    5. ' ' → logprob: -3.5189690589904785
    6. ' ligne' → logprob: -3.7689690589904785
    7. ' :' → logprob: -3.8939690589904785
    8. ':' → logprob: -3.8939690589904785
    9. 'def' → logprob: -4.2689690589904785
    10. ' en' → logprob: -4.2689690589904785

Token 39: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015809243777766824
    2. '*' → logprob: -6.876580715179443
    3. '*n' → logprob: -9.001581192016602
    4. 'x' → logprob: -9.126581192016602
    5. 'm' → logprob: -9.251581192016602
    6. ' n' → logprob: -9.626581192016602
    7. '_' → logprob: -10.501581192016602
    8. ' x' → logprob: -10.626581192016602
    9. ' *' → logprob: -10.876581192016602
    10. '-' → logprob: -10.876581192016602

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3964226245880127
    2. ':' → logprob: -1.8964226245880127
    3. ',' → logprob: -3.2714226245880127
    4. '):' → logprob: -3.3964226245880127
    5. ':
' → logprob: -3.8964226245880127
    6. '):
' → logprob: -4.021422386169434
    7. '
' → logprob: -4.146422386169434
    8. ' :' → logprob: -4.396422386169434
    9. ')' → logprob: -4.771422386169434
    10. '```' → logprob: -5.521422386169434

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49440470337867737
    2. ' en' → logprob: -1.119404673576355
    3. '"""
' → logprob: -4.4944047927856445
    4. ' sur' → logprob: -4.7444047927856445
    5. ',' → logprob: -4.7444047927856445
    6. ')' → logprob: -4.9944047927856445
    7. ' dans' → logprob: -5.2444047927856445
    8. '
' → logprob: -5.7444047927856445
    9. ' """
' → logprob: -5.7444047927856445
    10. '```' → logprob: -6.3694047927856445

Token 42: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32629817724227905
    2. ' en' → logprob: -1.8262982368469238
    3. ')' → logprob: -3.451298236846924
    4. ' """
' → logprob: -4.326298236846924
    5. '"""' → logprob: -4.701298236846924
    6. '"""
' → logprob: -4.826298236846924
    7. '.' → logprob: -4.951298236846924
    8. ' ' → logprob: -5.201298236846924
    9. ' )' → logprob: -5.201298236846924
    10. '
' → logprob: -5.326298236846924

Token 43: ' les' (ID: 1341)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6177026033401489
    2. 'les' → logprob: -2.1177024841308594
    3. ' toutes' → logprob: -2.1177024841308594
    4. ' une' → logprob: -3.4927024841308594
    5. 'la' → logprob: -3.4927024841308594
    6. ' la' → logprob: -3.6177024841308594
    7. ' les' → logprob: -3.7427024841308594
    8. 'l' → logprob: -4.242702484130859
    9. ' toute' → logprob: -4.242702484130859
    10. 't' → logprob: -4.367702484130859

Token 44: ' directions' (ID: 24921)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.5525943636894226
    2. ' différentes' → logprob: -1.9275944232940674
    3. ' ' → logprob: -2.6775944232940674
    4. ' quatre' → logprob: -3.1775944232940674
    5. ' horizontal' → logprob: -3.1775944232940674
    6. 'h' → logprob: -3.5525944232940674
    7. ' directions' → logprob: -3.6775944232940674
    8. 'horizontal' → logprob: -4.302594184875488
    9. 'diff' → logprob: -5.177594184875488
    10. ' horizont' → logprob: -5.177594184875488

Token 45: ' horizont' (ID: 69308)
  Prédit: ' horizont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizont' → logprob: -0.1846376210451126
    2. ' suivantes' → logprob: -3.4346375465393066
    3. ' horizontal' → logprob: -3.5596375465393066
    4. ':' → logprob: -4.434637546539307
    5. ' :' → logprob: -4.559637546539307
    6. 'horizontal' → logprob: -4.809637546539307
    7. ' diagon' → logprob: -4.934637546539307
    8. ' =' → logprob: -4.934637546539307
    9. ' "' → logprob: -5.059637546539307
    10. ' ' → logprob: -5.059637546539307

Token 46: 'ale' (ID: 1167)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.049196746200323105
    2. 'ontal' → logprob: -4.299196720123291
    3. 'ale' → logprob: -4.674196720123291
    4. 't' → logprob: -5.299196720123291
    5. '   ' → logprob: -5.424196720123291
    6. 'al' → logprob: -5.799196720123291
    7. '```' → logprob: -6.299196720123291
    8. '#' → logprob: -6.299196720123291
    9. ' ont' → logprob: -7.174196720123291
    10. 'on' → logprob: -7.174196720123291

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004215759225189686
    2. ' ,' → logprob: -5.504215717315674
    3. ' et' → logprob: -9.379216194152832
    4. ' ' → logprob: -11.129216194152832
    5. 'et' → logprob: -12.504216194152832
    6. '   ' → logprob: -12.629216194152832
    7. '.' → logprob: -12.754216194152832
    8. ',
' → logprob: -12.754216194152832
    9. 'e' → logprob: -12.879216194152832
    10. '  ' → logprob: -13.254216194152832

Token 48: ' verticale' (ID: 199428)
  Prédit: ' verticale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' verticale' → logprob: -0.08372970670461655
    2. ' vertical' → logprob: -2.7087297439575195
    3. 'vertical' → logprob: -4.4587297439575195
    4. ',' → logprob: -6.9587297439575195
    5. ' ,' → logprob: -7.8337297439575195
    6. ' ' → logprob: -8.33372974395752
    7. '   ' → logprob: -8.58372974395752
    8. '    ' → logprob: -9.45872974395752
    9. ' вертик' → logprob: -10.08372974395752
    10. ' ' → logprob: -10.33372974395752

Token 49: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004797019064426422
    2. '   ' → logprob: -6.254796981811523
    3. ')' → logprob: -6.754796981811523
    4. ' ,' → logprob: -6.879796981811523
    5. ',
' → logprob: -8.504796981811523
    6. ' et' → logprob: -8.629796981811523
    7. '),' → logprob: -8.879796981811523
    8. '):' → logprob: -10.004796981811523
    9. ' ' → logprob: -11.129796981811523
    10. 's' → logprob: -11.254796981811523

Token 50: ' diagon' (ID: 146014)
  Prédit: ' diagon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diagon' → logprob: -0.06814808398485184
    2. 'di' → logprob: -3.318148136138916
    3. ' diagonal' → logprob: -3.693148136138916
    4. '   ' → logprob: -5.818148136138916
    5. ' diag' → logprob: -7.943148136138916
    6. ' ' → logprob: -7.943148136138916
    7. 'diag' → logprob: -8.193147659301758
    8. ' la' → logprob: -8.193147659301758
    9. ' ob' → logprob: -8.568147659301758
    10. ' di' → logprob: -9.693147659301758

Token 51: 'ales' (ID: 3459)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -5.991464786347933e-05
    2. 'al' → logprob: -10.625060081481934
    3. 'але' → logprob: -11.500060081481934
    4. 'on' → logprob: -12.250060081481934
    5. '
' → logprob: -12.500060081481934
    6. 'ales' → logprob: -12.500060081481934
    7. 'a' → logprob: -12.625060081481934
    8. ' ale' → logprob: -13.500060081481934
    9. '

' → logprob: -14.000060081481934
    10. '#' → logprob: -14.125060081481934

Token 52: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3406243920326233
    2. '):' → logprob: -1.9656243324279785
    3. ')' → logprob: -3.0906243324279785
    4. '.' → logprob: -3.3406243324279785
    5. '):
' → logprob: -3.7156243324279785
    6. ':' → logprob: -4.0906243324279785
    7. ',' → logprob: -4.8406243324279785
    8. '
' → logprob: -5.7156243324279785
    9. '```' → logprob: -5.8406243324279785
    10. ' :' → logprob: -6.2156243324279785

Token 53: '2' (ID: 17)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.30059874057769775
    2. ')' → logprob: -1.4255987405776978
    3. ').
' → logprob: -5.550598621368408
    4. ' ).' → logprob: -5.925598621368408
    5. ')
' → logprob: -6.425598621368408
    6. ' )' → logprob: -6.425598621368408
    7. ' ' → logprob: -6.675598621368408
    8. ' sur' → logprob: -6.800598621368408
    9. 'di' → logprob: -7.175598621368408
    10. ',' → logprob: -7.425598621368408

Token 54: ' directions' (ID: 24921)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5633031129837036
    2. ' directions' → logprob: -1.6883031129837036
    3. ',' → logprob: -2.688302993774414
    4. 'D' → logprob: -3.688302993774414
    5. 'dire' → logprob: -3.938302993774414
    6. '-' → logprob: -4.188302993774414
    7. '0' → logprob: -4.313302993774414
    8. '8' → logprob: -4.438302993774414
    9. 'x' → logprob: -4.563302993774414
    10. ')
' → logprob: -4.563302993774414

Token 55: ').
' (ID: 6294)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.45963841676712036
    2. ')' → logprob: -1.0846383571624756
    3. ').
' → logprob: -4.334638595581055
    4. ')
' → logprob: -4.709638595581055
    5. ':' → logprob: -5.459638595581055
    6. ' diagon' → logprob: -6.959638595581055
    7. '):' → logprob: -7.834638595581055
    8. '):
' → logprob: -7.959638595581055
    9. ').

' → logprob: -8.084638595581055
    10. '"""
' → logprob: -8.584638595581055

Token 56: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003908845596015453
    2. '"""' → logprob: -6.503908634185791
    3. '"""
' → logprob: -7.128908634185791
    4. ')' → logprob: -7.503908634185791
    5. '```' → logprob: -7.503908634185791
    6. ')
' → logprob: -9.00390911102295
    7. '
' → logprob: -9.37890911102295
    8. '    
' → logprob: -9.87890911102295
    9. '"' → logprob: -10.00390911102295
    10. '\n' → logprob: -10.00390911102295

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002570481738075614
    2. '"""
' → logprob: -9.50025749206543
    3. '"""' → logprob: -9.75025749206543
    4. '```' → logprob: -10.00025749206543
    5. '    
' → logprob: -10.62525749206543
    6. '
' → logprob: -11.25025749206543
    7. ')' → logprob: -11.50025749206543
    8. '    ' → logprob: -11.75025749206543
    9. ':' → logprob: -12.62525749206543
    10. ' ' → logprob: -12.87525749206543

Token 58: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016438805032521486
    2. 'max' → logprob: -7.251643657684326
    3. '"""
' → logprob: -8.126644134521484
    4. '    
' → logprob: -9.001644134521484
    5. ':param' → logprob: -9.001644134521484
    6. 'Args' (adapté à ' Args') → logprob: -9.126644134521484
    7. '
' → logprob: -10.001644134521484
    8. '"""' → logprob: -10.126644134521484
    9. '```' → logprob: -10.501644134521484
    10. 'param' → logprob: -10.876644134521484

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7012709379196167
    2. ' :' → logprob: -1.0762709379196167
    3. '   ' → logprob: -2.3262710571289062
    4. '):' → logprob: -2.8262710571289062
    5. '):
' → logprob: -5.576271057128906
    6. ')' → logprob: -6.701271057128906
    7. ',' → logprob: -8.201271057128906
    8. '```' → logprob: -8.201271057128906
    9. ':
' → logprob: -8.326271057128906
    10. ' :
' → logprob: -9.201271057128906

Token 60: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5142969489097595
    2. ' grid' → logprob: -1.1392970085144043
    3. '   ' → logprob: -2.8892970085144043
    4. ' n' → logprob: -4.139297008514404
    5. 'n' → logprob: -5.264297008514404
    6. 'grid' → logprob: -6.264297008514404
    7. ' ' → logprob: -6.389297008514404
    8. '```' → logprob: -7.139297008514404
    9. '       ' → logprob: -8.514296531677246
    10. '     
' → logprob: -8.889296531677246

Token 61: ' -' (ID: 533)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.04351941496133804
    2. '   ' → logprob: -3.4185194969177246
    3. 'grid' → logprob: -4.793519496917725
    4. ' n' → logprob: -7.543519496917725
    5. '    ' → logprob: -7.668519496917725
    6. 'n' → logprob: -8.418519020080566
    7. '```' → logprob: -9.793519020080566
    8. ' ' → logprob: -9.918519020080566
    9. '	grid' → logprob: -10.293519020080566
    10. ')' → logprob: -10.543519020080566

Token 62: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.005959964822977781
    2. 'grid' → logprob: -5.130959987640381
    3. '   ' → logprob: -11.630959510803223
    4. ' `' → logprob: -11.880959510803223
    5. ' n' → logprob: -12.755959510803223
    6. ' list' → logprob: -12.880959510803223
    7. '```' → logprob: -13.005959510803223
    8. '	grid' → logprob: -13.380959510803223
    9. ' grids' → logprob: -13.505959510803223
    10. '`' → logprob: -13.630959510803223

Token 63: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00826255138963461
    2. '):' → logprob: -5.133262634277344
    3. ',' → logprob: -6.633262634277344
    4. ' :' → logprob: -7.883262634277344
    5. '[' → logprob: -8.258262634277344
    6. ')' → logprob: -9.133262634277344
    7. '   ' → logprob: -9.633262634277344
    8. '):
' → logprob: -9.883262634277344
    9. '[n' → logprob: -10.008262634277344
    10. '```' → logprob: -10.258262634277344

Token 64: ' liste' (ID: 31719)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.34555181860923767
    2. ' list' → logprob: -1.34555184841156
    3. 'List' → logprob: -3.8455517292022705
    4. 'list' → logprob: -4.59555196762085
    5. ' ' → logprob: -8.970551490783691
    6. '   ' → logprob: -8.970551490783691
    7. ' liste' → logprob: -10.970551490783691
    8. ' ' → logprob: -11.845551490783691
    9. ' Liste' → logprob: -12.220551490783691
    10. '    ' → logprob: -12.970551490783691

Token 65: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4628264307975769
    2. '[list' → logprob: -1.3378264904022217
    3. ' of' → logprob: -3.2128264904022217
    4. '[List' → logprob: -3.7128264904022217
    5. ' des' → logprob: -4.087826251983643
    6. '[int' → logprob: -4.337826251983643
    7. '[' → logprob: -4.962826251983643
    8. 'de' → logprob: -6.087826251983643
    9. '```' → logprob: -7.087826251983643
    10. ' ' → logprob: -7.837826251983643

Token 66: ' chaînes' (ID: 179904)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6341993808746338
    2. ' listes' → logprob: -1.2591993808746338
    3. ' list' → logprob: -1.8841993808746338
    4. ' liste' → logprob: -4.259199142456055
    5. ' lists' → logprob: -4.509199142456055
    6. 'lists' → logprob: -5.384199142456055
    7. 'liste' → logprob: -5.759199142456055
    8. 'List' → logprob: -8.509199142456055
    9. ' listas' → logprob: -8.509199142456055
    10. '[list' → logprob: -9.259199142456055

Token 67: ',' (ID: 11)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0168969314545393
    2. ' representing' → logprob: -5.641896724700928
    3. '   ' → logprob: -5.891896724700928
    4. 'de' → logprob: -6.016896724700928
    5. '[str' → logprob: -6.016896724700928
    6. '[' → logprob: -6.141896724700928
    7. '[
' → logprob: -6.891896724700928
    8. '[]' → logprob: -7.766896724700928
    9. ' représentant' → logprob: -8.266897201538086
    10. ')' → logprob: -8.391897201538086

Token 68: ' chaque' (ID: 21194)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.4878932237625122
    2. 'each' → logprob: -1.6128932237625122
    3. ' chaque' → logprob: -2.1128931045532227
    4. ' chacune' → logprob: -2.8628931045532227
    5. '   ' → logprob: -5.237893104553223
    6. 'Each' → logprob: -6.362893104553223
    7. '       ' → logprob: -7.737893104553223
    8. 'Chaque' → logprob: -8.112893104553223
    9. ' chacun' → logprob: -8.612893104553223
    10. ' Chaque' → logprob: -9.112893104553223

Token 69: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.07810873538255692
    2. 'chaine' → logprob: -3.328108787536621
    3. 'élé' → logprob: -3.703108787536621
    4. ' ligne' → logprob: -5.578108787536621
    5. ' chaine' → logprob: -5.578108787536621
    6. ' élément' → logprob: -5.828108787536621
    7. 'ligne' → logprob: -6.453108787536621
    8. 'cha' → logprob: -7.328108787536621
    9. '   ' → logprob: -7.453108787536621
    10. ' ' → logprob: -7.453108787536621

Token 70: ' représentant' (ID: 136122)
  Prédit: ' représente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.4009564220905304
    2. ' représentant' → logprob: -1.525956392288208
    3. ' est' → logprob: -2.775956392288208
    4. ' de' → logprob: -4.525956630706787
    5. 'represent' → logprob: -4.900956630706787
    6. ' =' → logprob: -5.025956630706787
    7. ' représ' → logprob: -5.150956630706787
    8. ' contenant' → logprob: -5.775956630706787
    9. ' ' → logprob: -6.150956630706787
    10. ' étant' → logprob: -6.150956630706787

Token 71: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.22767922282218933
    2. 'une' → logprob: -1.6026792526245117
    3. ' ' → logprob: -7.352679252624512
    4. ' la' → logprob: -7.602679252624512
    5. '   ' → logprob: -7.852679252624512
    6. ' ligne' → logprob: -8.852679252624512
    7. ''une' → logprob: -8.977679252624512
    8. 'l' → logprob: -9.352679252624512
    9. ' ' → logprob: -9.477679252624512
    10. 'ligne' → logprob: -9.602679252624512

Token 72: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.03523153066635132
    2. 'ligne' → logprob: -4.160231590270996
    3. ' chaîne' → logprob: -4.660231590270996
    4. ' ' → logprob: -4.910231590270996
    5. '   ' → logprob: -7.160231590270996
    6. ' cellule' → logprob: -7.660231590270996
    7. ' chaine' → logprob: -8.285231590270996
    8. ' row' → logprob: -8.910231590270996
    9. 'chaine' → logprob: -9.160231590270996
    10. 'row' → logprob: -9.660231590270996

Token 73: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.364879310131073
    2. '   ' → logprob: -1.2398793697357178
    3. ')' → logprob: -5.239879131317139
    4. ',' → logprob: -5.489879131317139
    5. ' of' → logprob: -5.739879131317139
    6. 'de' → logprob: -7.364879131317139
    7. ' d' → logprob: -7.489879131317139
    8. ' ' → logprob: -8.114879608154297
    9. '    ' → logprob: -8.364879608154297
    10. '[' → logprob: -8.489879608154297

Token 74: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.48391467332839966
    2. 'la' → logprob: -2.108914613723755
    3. 'gr' → logprob: -2.483914613723755
    4. ' '' → logprob: -3.108914613723755
    5. 'grid' → logprob: -3.233914613723755
    6. ' grid' → logprob: -3.608914613723755
    7. '1' → logprob: -4.358914852142334
    8. ' grille' → logprob: -4.358914852142334
    9. ' ' → logprob: -4.983914852142334
    10. ''' → logprob: -4.983914852142334

Token 75: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.02403741329908371
    2. ' grille' → logprob: -4.2740373611450195
    3. 'grid' → logprob: -4.6490373611450195
    4. 'mat' → logprob: -8.52403736114502
    5. ' gr' → logprob: -10.52403736114502
    6. 'liste' → logprob: -11.39903736114502
    7. ' grid' → logprob: -11.89903736114502
    8. 'g' → logprob: -13.02403736114502
    9. '```' → logprob: -13.77403736114502
    10. 'gram' → logprob: -13.89903736114502

Token 76: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053635478019714355
    2. ')' → logprob: -3.428635597229004
    3. '
' → logprob: -4.803635597229004
    4. ',' → logprob: -5.678635597229004
    5. '):' → logprob: -5.928635597229004
    6. '):
' → logprob: -6.053635597229004
    7. '```' → logprob: -7.178635597229004
    8. '  ' → logprob: -7.928635597229004
    9. '    
' → logprob: -7.928635597229004
    10. ' ' → logprob: -8.303635597229004

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10609114915132523
    2. ')' → logprob: -2.856091260910034
    3. '):' → logprob: -3.481091260910034
    4. '):
' → logprob: -5.106091022491455
    5. '
' → logprob: -5.981091022491455
    6. '```' → logprob: -6.606091022491455
    7. ',' → logprob: -7.106091022491455
    8. ':' → logprob: -8.231091499328613
    9. ')
' → logprob: -8.356091499328613
    10. ' ' → logprob: -8.356091499328613

Token 78: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01497894898056984
    2. '
' → logprob: -4.639978885650635
    3. '```' → logprob: -6.264978885650635
    4. ')' → logprob: -6.389978885650635
    5. '"""' → logprob: -7.514978885650635
    6. '"""
' → logprob: -8.014979362487793
    7. 'def' → logprob: -8.264979362487793
    8. ')
' → logprob: -8.514979362487793
    9. ',' → logprob: -9.889979362487793
    10. ' ' → logprob: -10.014979362487793

Token 79: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.34863656759262085
    2. 'n' → logprob: -1.2236366271972656
    3. ' int' → logprob: -9.848636627197266
    4. '   ' → logprob: -10.098636627197266
    5. 'int' → logprob: -10.473636627197266
    6. ' ' → logprob: -10.973636627197266
    7. '	n' → logprob: -11.098636627197266
    8. ' ' → logprob: -11.598636627197266
    9. ' max' → logprob: -12.223636627197266
    10. ' la' → logprob: -12.973636627197266

Token 80: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47777053713798523
    2. ':' → logprob: -0.9777705669403076
    3. ':int' → logprob: -6.3527703285217285
    4. ' :' → logprob: -6.6027703285217285
    5. ')' → logprob: -8.727770805358887
    6. ' ):' → logprob: -9.102770805358887
    7. ',' → logprob: -9.352770805358887
    8. '=' → logprob: -9.727770805358887
    9. '):
' → logprob: -10.227770805358887
    10. '=int' → logprob: -10.852770805358887

Token 81: ' taille' (ID: 41644)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0035000499337911606
    2. 'int' → logprob: -6.003499984741211
    3. ' l' → logprob: -7.878499984741211
    4. ' la' → logprob: -8.503499984741211
    5. ' ' → logprob: -8.753499984741211
    6. ' ' → logprob: -9.378499984741211
    7. ' len' → logprob: -9.378499984741211
    8. ' n' → logprob: -10.128499984741211
    9. ' entier' → logprob: -10.128499984741211
    10. 'l' → logprob: -11.753499984741211

Token 82: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3994695246219635
    2. '=' → logprob: -1.1494694948196411
    3. ' =' → logprob: -5.399469375610352
    4. ' ' → logprob: -6.399469375610352
    5. 'de' → logprob: -6.399469375610352
    6. ' du' → logprob: -6.899469375610352
    7. '_' → logprob: -7.149469375610352
    8. '   ' → logprob: -7.399469375610352
    9. ')' → logprob: -7.524469375610352
    10. ',' → logprob: -7.524469375610352

Token 83: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.06384861469268799
    2. 'la' → logprob: -2.8138484954833984
    3. 'l' → logprob: -6.438848495483398
    4. ' l' → logprob: -8.688848495483398
    5. 'n' → logprob: -10.188848495483398
    6. ' grid' → logprob: -10.938848495483398
    7. ' the' → logprob: -11.313848495483398
    8. ' ' → logprob: -11.438848495483398
    9. ' n' → logprob: -11.938848495483398
    10. 'a' → logprob: -12.063848495483398

Token 84: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.5071945190429688
    2. ' grille' → logprob: -1.2571945190429688
    3. 'grid' → logprob: -2.3821945190429688
    4. ' grid' → logprob: -3.8821945190429688
    5. ' ' → logprob: -8.632194519042969
    6. ' gr' → logprob: -10.007194519042969
    7. ' ' → logprob: -10.132194519042969
    8. 'n' → logprob: -10.257194519042969
    9. 'ligne' → logprob: -10.507194519042969
    10. '   ' → logprob: -11.132194519042969

Token 85: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10860186070203781
    2. '):
' → logprob: -2.9836018085479736
    3. '   ' → logprob: -3.4836018085479736
    4. ')' → logprob: -4.358602046966553
    5. ':' → logprob: -5.483602046966553
    6. '
' → logprob: -6.108602046966553
    7. '```' → logprob: -6.358602046966553
    8. ',' → logprob: -8.733601570129395
    9. '):
' → logprob: -9.108601570129395
    10. '**' → logprob: -9.983601570129395

Token 86: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049195729196071625
    2. 'int' → logprob: -3.4241957664489746
    3. ' )' → logprob: -4.549195766448975
    4. ' int' → logprob: -5.674195766448975
    5. 'n' → logprob: -7.299195766448975
    6. ' la' → logprob: -8.924195289611816
    7. ',' → logprob: -8.924195289611816
    8. ')n' → logprob: -9.049195289611816
    9. 'la' → logprob: -9.799195289611816
    10. ' n' → logprob: -9.799195289611816

Token 87: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002655797405168414
    2. 'x' → logprob: -6.502655982971191
    3. ',' → logprob: -8.002655982971191
    4. ' x' → logprob: -8.002655982971191
    5. ' )' → logprob: -9.002655982971191
    6. '*' → logprob: -9.377655982971191
    7. '):' → logprob: -9.752655982971191
    8. ' ' → logprob: -10.127655982971191
    9. ')
' → logprob: -10.252655982971191
    10. '*n' → logprob: -10.877655982971191

Token 88: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0619683600962162
    2. ' n' → logprob: -2.8119683265686035
    3. ')' → logprob: -15.186968803405762
    4. ')n' → logprob: -15.186968803405762
    5. '	n' → logprob: -15.186968803405762
    6. ' ' → logprob: -17.186967849731445
    7. ' )' → logprob: -17.186967849731445
    8. ' ' → logprob: -17.436967849731445
    9. '_n' → logprob: -18.436967849731445
    10. '<|end|>' → logprob: -19.561967849731445

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016159649938344955
    2. '):' → logprob: -4.141159534454346
    3. '):
' → logprob: -9.266160011291504
    4. ')
' → logprob: -10.891160011291504
    5. '):
' → logprob: -12.766160011291504
    6. '   ' → logprob: -12.891160011291504
    7. '):

' → logprob: -13.641160011291504
    8. ' )' → logprob: -13.891160011291504
    9. ')

' → logprob: -14.266160011291504
    10. '```' → logprob: -14.266160011291504

Token 90: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06210627406835556
    2. ')' → logprob: -3.4371063709259033
    3. '
' → logprob: -3.9371063709259033
    4. ')
' → logprob: -6.312106132507324
    5. '):
' → logprob: -6.312106132507324
    6. '):' → logprob: -6.687106132507324
    7. '"""' → logprob: -6.687106132507324
    8. '    
' → logprob: -6.812106132507324
    9. '```' → logprob: -7.687106132507324
    10. '"""
' → logprob: -7.937106132507324

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005587508203461766
    2. '
' → logprob: -9.125558853149414
    3. '"""
' → logprob: -9.250558853149414
    4. '"""' → logprob: -9.250558853149414
    5. '    
' → logprob: -9.500558853149414
    6. '    ' → logprob: -10.125558853149414
    7. '```' → logprob: -10.125558853149414
    8. ' """
' → logprob: -10.125558853149414
    9. '  ' → logprob: -11.000558853149414
    10. 'Returns' → logprob: -11.500558853149414

Token 92: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6115766763687134
    2. 'Returns' → logprob: -1.7365766763687134
    3. '"""
' → logprob: -1.9865766763687134
    4. 'max' → logprob: -2.236576557159424
    5. '```' → logprob: -4.611576557159424
    6. 'result' → logprob: -4.736576557159424
    7. 'returns' → logprob: -4.736576557159424
    8. '"""' → logprob: -5.736576557159424
    9. 'Retour' (adapté à ' Retour') → logprob: -6.861576557159424
    10. ' """
' → logprob: -6.986576557159424

Token 93: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.02020069770514965
    2. 'n' → logprob: -4.270200729370117
    3. 'e' → logprob: -5.145200729370117
    4. '   ' → logprob: -9.520200729370117
    5. 'nne' → logprob: -10.020200729370117
    6. 'nera' → logprob: -10.395200729370117
    7. 'neur' → logprob: -12.270200729370117
    8. 'na' → logprob: -12.270200729370117
    9. ' ' → logprob: -12.270200729370117
    10. '```' → logprob: -12.270200729370117

Token 94: ':
' (ID: 734)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.00723685510456562
    2. ' la' → logprob: -5.382236957550049
    3. ':' → logprob: -7.007236957550049
    4. ' ' → logprob: -7.382236957550049
    5. ' ' → logprob: -8.38223648071289
    6. ' int' → logprob: -8.50723648071289
    7. ' max' → logprob: -9.00723648071289
    8. ' un' → logprob: -9.38223648071289
    9. ' l' → logprob: -9.63223648071289
    10. 'le' → logprob: -9.75723648071289

Token 95: '   ' (ID: 271)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8949971795082092
    2. '   ' → logprob: -1.2699971199035645
    3. ' le' → logprob: -1.3949971199035645
    4. ' un' → logprob: -3.8949971199035645
    5. ' max' → logprob: -4.2699971199035645
    6. ' la' → logprob: -4.5199971199035645
    7. 'int' → logprob: -5.2699971199035645
    8. ' maximum' → logprob: -5.6449971199035645
    9. ' ' → logprob: -6.3949971199035645
    10. ' entier' → logprob: -6.6449971199035645

Token 96: ' -' (ID: 533)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5962804555892944
    2. ' le' → logprob: -1.8462804555892944
    3. ' un' → logprob: -1.9712804555892944
    4. '   ' → logprob: -2.346280574798584
    5. 'int' → logprob: -3.221280574798584
    6. 'le' → logprob: -5.096280574798584
    7. ' max' → logprob: -6.096280574798584
    8. ' l' → logprob: -6.221280574798584
    9. 'un' → logprob: -6.221280574798584
    10. ' la' → logprob: -6.971280574798584

Token 97: ' un' (ID: 537)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14298951625823975
    2. 'int' → logprob: -2.7679896354675293
    3. ' un' → logprob: -3.5179896354675293
    4. ' le' → logprob: -4.142989635467529
    5. ' entier' → logprob: -4.142989635467529
    6. 'ent' → logprob: -5.892989635467529
    7. ' ent' → logprob: -6.392989635467529
    8. ' l' → logprob: -6.642989635467529
    9. 'le' → logprob: -7.017989635467529
    10. '   ' → logprob: -7.017989635467529

Token 98: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.37192121148109436
    2. ' entier' → logprob: -1.246921181678772
    3. ' int' → logprob: -4.246921062469482
    4. ' e' → logprob: -4.871921062469482
    5. ' ' → logprob: -7.996921062469482
    6. ' nombre' → logprob: -8.12192153930664
    7. ' entière' → logprob: -8.99692153930664
    8. ' ent' → logprob: -8.99692153930664
    9. ' max' → logprob: -9.62192153930664
    10. ' integer' → logprob: -9.74692153930664

Token 99: ' représentant' (ID: 136122)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7713663578033447
    2. ' max' → logprob: -1.8963663578033447
    3. '_' → logprob: -2.6463663578033447
    4. ' 
' → logprob: -2.8963663578033447
    5. ':' → logprob: -3.0213663578033447
    6. ',' → logprob: -3.6463663578033447
    7. ' _' → logprob: -3.7713663578033447
    8. '<|end|>' → logprob: -3.7713663578033447
    9. ' :' → logprob: -4.021366119384766
    10. ' ,' → logprob: -4.021366119384766

Token 100: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.08150658011436462
    2. ' la' → logprob: -2.5815064907073975
    3. 'le' → logprob: -6.081506729125977
    4. 'la' → logprob: -8.456506729125977
    5. ' ' → logprob: -9.331506729125977
    6. ' the' → logprob: -11.331506729125977
    7. '   ' → logprob: -11.581506729125977
    8. ' ' → logprob: -13.206506729125977
    9. '_le' → logprob: -13.831506729125977
    10. '```' → logprob: -14.206506729125977

Token 101: ' nombre' (ID: 9733)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.0863313376903534
    2. ' plus' → logprob: -3.336331367492676
    3. ' nombre' → logprob: -3.461331367492676
    4. ' max' → logprob: -5.086331367492676
    5. 'maximum' → logprob: -5.086331367492676
    6. 'max' → logprob: -6.461331367492676
    7. ' maximal' → logprob: -6.961331367492676
    8. 'nombre' → logprob: -7.836331367492676
    9. 'plus' → logprob: -8.336331367492676
    10. ' maximale' → logprob: -9.336331367492676

Token 102: ' maximal' (ID: 65414)
  Prédit: ' maximal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.04779341071844101
    2. ' maximum' → logprob: -3.547793388366699
    3. ' max' → logprob: -4.422793388366699
    4. '_' → logprob: -5.672793388366699
    5. ' maximale' → logprob: -7.547793388366699
    6. ' de' → logprob: -7.672793388366699
    7. '_max' → logprob: -7.797793388366699
    8. ' _' → logprob: -7.922793388366699
    9. ' ' → logprob: -8.1727933883667
    10. '  ' → logprob: -9.7977933883667

Token 103: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12826228141784668
    2. '_' → logprob: -2.3782622814178467
    3. ' d' → logprob: -5.003262519836426
    4. ' ' → logprob: -5.253262519836426
    5. '_con' → logprob: -5.503262519836426
    6. '_de' → logprob: -6.003262519836426
    7. '<|end|>' → logprob: -6.003262519836426
    8. 'de' → logprob: -6.503262519836426
    9. ' maximal' → logprob: -6.503262519836426
    10. ' des' → logprob: -7.628262519836426

Token 104: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04964741691946983
    2. '1' → logprob: -3.049647331237793
    3. 'con' → logprob: -7.799647331237793
    4. '_' → logprob: -8.174647331237793
    5. ' cons' → logprob: -8.549647331237793
    6. ' uns' → logprob: -9.799647331237793
    7. ' ones' → logprob: -10.549647331237793
    8. ' espaces' → logprob: -10.799647331237793
    9. ' '' → logprob: -11.549647331237793
    10. '0' → logprob: -11.799647331237793

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009766833856701851
    2. ' ' → logprob: -4.634767055511475
    3. 'con' → logprob: -12.134766578674316
    4. '```' → logprob: -13.259766578674316
    5. ' cons' → logprob: -13.634766578674316
    6. 'uns' → logprob: -14.759766578674316
    7. ' ones' → logprob: -14.759766578674316
    8. ' uns' → logprob: -15.009766578674316
    9. 'un' → logprob: -15.634766578674316
    10. ' '' → logprob: -15.634766578674316

Token 106: ' cons' (ID: 1473)
  Prédit: ' cons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.03530540689826012
    2. 's' → logprob: -3.4103055000305176
    3. ' s' → logprob: -7.410305500030518
    4. 'con' → logprob: -7.785305500030518
    5. 'cons' → logprob: -8.28530502319336
    6. '_con' → logprob: -8.66030502319336
    7. '_' → logprob: -9.53530502319336
    8. '_cons' → logprob: -9.66030502319336
    9. ' consecut' → logprob: -10.91030502319336
    10. ' ' → logprob: -10.91030502319336

Token 107: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -7.32654589228332e-05
    2. 'ecut' → logprob: -10.125073432922363
    3. 'éc' → logprob: -10.625073432922363
    4. 'é' → logprob: -12.750073432922363
    5. 'cut' → logprob: -12.750073432922363
    6. 'secut' → logprob: -13.125073432922363
    7. '_cut' → logprob: -15.625073432922363
    8. 'écution' → logprob: -16.125072479248047
    9. 'équ' → logprob: -16.500072479248047
    10. 'és' → logprob: -16.500072479248047

Token 108: 'ifs' (ID: 14119)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.388026624917984
    2. 'uts' → logprob: -1.1380265951156616
    3. ' ut' → logprob: -7.513026714324951
    4. 'us' → logprob: -8.888026237487793
    5. '   ' → logprob: -8.888026237487793
    6. 's' → logprob: -9.388026237487793
    7. ' uts' → logprob: -9.513026237487793
    8. 'u' → logprob: -10.263026237487793
    9. 'utf' → logprob: -10.263026237487793
    10. 'ifs' → logprob: -10.763026237487793

Token 109: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7110474109649658
    2. ' dans' → logprob: -0.9610474109649658
    3. '```' → logprob: -3.336047410964966
    4. ',' → logprob: -3.461047410964966
    5. '
' → logprob: -4.211047172546387
    6. ')' → logprob: -5.086047172546387
    7. '"""' → logprob: -5.336047172546387
    8. 'dans' → logprob: -5.461047172546387
    9. 'def' → logprob: -5.586047172546387
    10. '.' → logprob: -5.711047172546387

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14815540611743927
    2. ':' → logprob: -2.398155450820923
    3. ':
' → logprob: -4.273155212402344
    4. ')' → logprob: -4.398155212402344
    5. '):' → logprob: -4.773155212402344
    6. '):
' → logprob: -4.773155212402344
    7. '```' → logprob: -6.148155212402344
    8. '
' → logprob: -7.523155212402344
    9. ')
' → logprob: -8.398155212402344
    10. '    
' → logprob: -8.898155212402344

Token 111: ' """
' (ID: 7037)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7825421690940857
    2. '   ' → logprob: -1.1575422286987305
    3. ':
' → logprob: -1.5325422286987305
    4. '):
' → logprob: -5.5325422286987305
    5. ')' → logprob: -5.9075422286987305
    6. '
' → logprob: -6.2825422286987305
    7. '):' → logprob: -6.4075422286987305
    8. '```' → logprob: -7.6575422286987305
    9. ' :' → logprob: -8.28254222869873
    10. '    
' → logprob: -8.28254222869873

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013988605700433254
    2. 'max' → logprob: -4.763988494873047
    3. ' max' → logprob: -5.263988494873047
    4. '    
' → logprob: -8.763988494873047
    5. '
' → logprob: -11.138988494873047
    6. '	max' → logprob: -12.263988494873047
    7. '   ' → logprob: -13.263988494873047
    8. 'def' → logprob: -13.888988494873047
    9. '   
' → logprob: -14.013988494873047
    10. '#' → logprob: -14.138988494873047

Token 113: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.014788218773901463
    2. ' max' → logprob: -4.2647881507873535
    3. '   ' → logprob: -7.3897881507873535
    4. 'result' → logprob: -13.389788627624512
    5. 'count' → logprob: -13.389788627624512
    6. 'dire' → logprob: -13.389788627624512
    7. 'maximum' → logprob: -14.639788627624512
    8. 'dp' → logprob: -14.889788627624512
    9. '	max' → logprob: -15.014788627624512
    10. '    
' → logprob: -15.139788627624512

Token 114: '_len' (ID: 13683)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.11020641028881073
    2. '_' → logprob: -2.610206365585327
    3. '_len' → logprob: -3.610206365585327
    4. '_length' → logprob: -5.985206604003906
    5. '_max' → logprob: -6.985206604003906
    6. '_con' → logprob: -8.360206604003906
    7. '_val' → logprob: -9.985206604003906
    8. '_comp' → logprob: -10.860206604003906
    9. '_cnt' → logprob: -11.360206604003906
    10. '_sum' → logprob: -11.985206604003906

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932057738304138
    2. ' =' → logprob: -0.6932057738304138
    3. '_' → logprob: -10.068205833435059
    4. ' ' → logprob: -11.318205833435059
    5. '_=' → logprob: -13.443205833435059
    6. '   ' → logprob: -14.068205833435059
    7. ',' → logprob: -14.193205833435059
    8. '  ' → logprob: -15.193205833435059
    9. ' ' → logprob: -15.818205833435059
    10. '=int' → logprob: -16.068204879760742

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02054375410079956
    2. ' ' → logprob: -3.8955438137054443
    3. '   ' → logprob: -13.395544052124023
    4. '1' → logprob: -15.645544052124023
    5. ' ' → logprob: -16.270544052124023
    6. '  ' → logprob: -16.520544052124023
    7. '=' → logprob: -18.895544052124023
    8. '    ' → logprob: -18.958044052124023
    9. '       ' → logprob: -19.333044052124023
    10. '     ' → logprob: -19.333044052124023

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -10.750022888183594
    3. '1' → logprob: -13.500022888183594
    4. '   ' → logprob: -17.000022888183594
    5. '۰' → logprob: -18.937522888183594
    6. '```' → logprob: -19.437522888183594
    7. '０' → logprob: -19.937522888183594
    8. '  ' → logprob: -20.375022888183594
    9. 'o' → logprob: -20.500022888183594
    10. '000' → logprob: -20.500022888183594

Token 118: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2897726893424988
    2. '   ' → logprob: -1.5397727489471436
    3. '    
' → logprob: -3.4147727489471436
    4. '  
' → logprob: -6.2897725105285645
    5. '   
' → logprob: -7.1647725105285645
    6. 'for' → logprob: -7.9147725105285645
    7. ' 
' → logprob: -8.164772987365723
    8. ' for' → logprob: -8.289772987365723
    9. '\n' → logprob: -8.289772987365723
    10. '
' → logprob: -9.664772987365723

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08914437890052795
    2. 'for' → logprob: -2.589144468307495
    3. ' for' → logprob: -4.589144229888916
    4. '    
' → logprob: -10.839144706726074
    5. '
' → logprob: -11.839144706726074
    6. 'def' → logprob: -12.339144706726074
    7. '#' → logprob: -12.339144706726074
    8. '	for' → logprob: -12.839144706726074
    9. ' ' → logprob: -14.214144706726074
    10. '  ' → logprob: -14.589144706726074

Token 120: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029769234359264374
    2. '#' (adapté à ' #') → logprob: -3.5297691822052
    3. ' for' → logprob: -11.779768943786621
    4. 'def' → logprob: -12.029768943786621
    5. '   ' → logprob: -13.029768943786621
    6. 'dire' → logprob: -13.029768943786621
    7. ' #' → logprob: -14.779768943786621
    8. '	for' → logprob: -16.029769897460938
    9. 'horizontal' → logprob: -16.904769897460938
    10. 'rows' → logprob: -16.904769897460938

Token 121: ' Vér' (ID: 159169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2828811705112457
    2. '#' → logprob: -1.6578811407089233
    3. ' for' → logprob: -2.907881259918213
    4. ' #' → logprob: -7.532881259918213
    5. 'def' → logprob: -7.532881259918213
    6. 'horizontal' → logprob: -9.782880783081055
    7. 'pour' → logprob: -10.657880783081055
    8. 'Pour' → logprob: -11.032880783081055
    9. '   ' → logprob: -11.157880783081055
    10. ' horizontal' → logprob: -11.157880783081055

Token 122: 'ification' (ID: 3166)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.10379324108362198
    2. 'ifie' → logprob: -2.353793144226074
    3. 'if' → logprob: -6.103793144226074
    4. 'ification' → logprob: -6.978793144226074
    5. 'ifiez' → logprob: -8.103793144226074
    6. 'ifer' → logprob: -9.978793144226074
    7. '   ' → logprob: -10.103793144226074
    8. 'ify' → logprob: -11.228793144226074
    9. '```' → logprob: -12.978793144226074
    10. '#' → logprob: -12.978793144226074

Token 123: ' horizont' (ID: 69308)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42892012000083923
    2. ' des' → logprob: -2.178920030593872
    3. ' de' → logprob: -2.428920030593872
    4. ' horizontal' → logprob: -3.178920030593872
    5. '   ' → logprob: -3.553920030593872
    6. ' ' → logprob: -3.553920030593872
    7. 'for' → logprob: -3.678920030593872
    8. ' horizont' → logprob: -4.178920269012451
    9. 'horizontal' → logprob: -6.428920269012451
    10. ' ' → logprob: -6.553920269012451

Token 124: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0651002824306488
    2. 'al' → logprob: -2.8151001930236816
    3. '   ' → logprob: -5.940100193023682
    4. 'e' → logprob: -8.31510066986084
    5. 'ales' → logprob: -9.19010066986084
    6. 'a' → logprob: -10.69010066986084
    7. '       ' → logprob: -10.69010066986084
    8. 'ont' → logprob: -11.06510066986084
    9. '    ' → logprob: -11.19010066986084
    10. 'ally' → logprob: -11.44010066986084

Token 125: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22819286584854126
    2. ' for' → logprob: -2.2281928062438965
    3. 'for' → logprob: -2.3531928062438965
    4. '
' → logprob: -7.2281928062438965
    5. ':' → logprob: -8.353193283081055
    6. '	for' → logprob: -9.103193283081055
    7. '    
' → logprob: -9.353193283081055
    8. '  ' → logprob: -10.853193283081055
    9. ' ' → logprob: -11.478193283081055
    10. ',' → logprob: -11.853193283081055

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08349516987800598
    2. ' for' → logprob: -2.7084951400756836
    3. 'for' → logprob: -4.458495140075684
    4. '
' → logprob: -6.708495140075684
    5. '    
' → logprob: -7.583495140075684
    6. '  
' → logprob: -10.333495140075684
    7. ' ' → logprob: -10.708495140075684
    8. ' 
' → logprob: -10.708495140075684
    9. '   
' → logprob: -10.958495140075684
    10. '	for' → logprob: -11.083495140075684

Token 127: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1629336178302765
    2. ' for' → logprob: -1.912933588027954
    3. '   ' → logprob: -5.912933826446533
    4. '	for' → logprob: -13.912933349609375
    5. ' ' → logprob: -15.037933349609375
    6. ' ' → logprob: -15.787933349609375
    7. '  ' → logprob: -16.287933349609375
    8. '    
' → logprob: -16.787933349609375
    9. '
' → logprob: -17.912933349609375
    10. ' 
' → logprob: -18.287933349609375

Token 128: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.015410657040774822
    2. 'i' → logprob: -4.515410423278809
    3. ' row' → logprob: -5.515410423278809
    4. '   ' → logprob: -8.890410423278809
    5. 'row' → logprob: -9.890410423278809
    6. ' ' → logprob: -9.890410423278809
    7. '	i' → logprob: -10.140410423278809
    8. ' ' → logprob: -10.640410423278809
    9. '  ' → logprob: -11.890410423278809
    10. '	row' → logprob: -12.390410423278809

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00942324846982956
    2. 'in' → logprob: -4.75942325592041
    3. ' ' → logprob: -7.13442325592041
    4. '	in' → logprob: -13.13442325592041
    5. 'range' → logprob: -13.38442325592041
    6. ' ' → logprob: -13.88442325592041
    7. '_' → logprob: -14.00942325592041
    8. '  ' → logprob: -14.13442325592041
    9. 'n' → logprob: -14.50942325592041
    10. '0' → logprob: -14.50942325592041

Token 130: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2014147937297821
    2. 'range' → logprob: -1.7014148235321045
    3. '	range' → logprob: -14.201415061950684
    4. ' ' → logprob: -15.201415061950684
    5. '(range' → logprob: -15.701415061950684
    6. ')' → logprob: -15.701415061950684
    7. ' xrange' → logprob: -15.701415061950684
    8. '   ' → logprob: -16.576414108276367
    9. 'n' → logprob: -18.076414108276367
    10. '```' → logprob: -18.076414108276367

Token 131: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023739055905025452
    2. '(' → logprob: -8.375237464904785
    3. 'n' → logprob: -12.750237464904785
    4. ' n' → logprob: -13.125237464904785
    5. ' (' → logprob: -13.375237464904785
    6. '	n' → logprob: -15.500237464904785
    7. '   ' → logprob: -15.875237464904785
    8. '(
' → logprob: -16.37523651123047
    9. ')' → logprob: -18.50023651123047
    10. ' ' → logprob: -18.62523651123047

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004184652119874954
    2. '):
' → logprob: -5.504184722900391
    3. ' ):' → logprob: -9.75418472290039
    4. ')' → logprob: -10.25418472290039
    5. '   ' → logprob: -12.00418472290039
    6. ':' → logprob: -12.12918472290039
    7. '):
' → logprob: -15.00418472290039
    8. '):

' → logprob: -15.12918472290039
    9. ' ):
' → logprob: -15.50418472290039
    10. ' ' → logprob: -16.00418472290039

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1382237821817398
    2. '   ' → logprob: -2.138223886489868
    3. ':' → logprob: -4.638223648071289
    4. ' for' → logprob: -7.263223648071289
    5. '    ' → logprob: -8.763223648071289
    6. '        
' → logprob: -9.138223648071289
    7. '    
' → logprob: -9.388223648071289
    8. ' ' → logprob: -9.388223648071289
    9. '      ' → logprob: -9.388223648071289
    10. '     ' → logprob: -10.138223648071289

Token 134: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.11387187242507935
    2. '       ' → logprob: -2.4888718128204346
    3. '   ' → logprob: -4.613872051239014
    4. 'current' → logprob: -4.988872051239014
    5. 'for' → logprob: -5.613872051239014
    6. ' count' → logprob: -5.738872051239014
    7. 'j' → logprob: -7.863872051239014
    8. 'con' → logprob: -8.863871574401855
    9. 'cnt' → logprob: -8.988871574401855
    10. 'max' → logprob: -9.738871574401855

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023093461990356
    2. '=' → logprob: -1.9102308750152588
    3. ' ' → logprob: -12.28523063659668
    4. '_' → logprob: -14.53523063659668
    5. ' ' → logprob: -14.78523063659668
    6. ',' → logprob: -15.41023063659668
    7. '	' → logprob: -15.41023063659668
    8. '_=' → logprob: -15.53523063659668
    9. '<|end|>' → logprob: -15.78523063659668
    10. '   ' → logprob: -16.28523063659668

Token 136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009756443090736866
    2. ' ' → logprob: -4.634756565093994
    3. '1' → logprob: -16.134756088256836
    4. ' ' → logprob: -16.509756088256836
    5. '۰' → logprob: -16.634756088256836
    6. '   ' → logprob: -16.822256088256836
    7. '  ' → logprob: -17.822256088256836
    8. '０' → logprob: -19.384756088256836
    9. '```' → logprob: -19.572256088256836
    10. '	' → logprob: -19.759756088256836

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.698698704596609e-05
    2. ' ' → logprob: -9.250097274780273
    3. '1' → logprob: -14.125097274780273
    4. '۰' → logprob: -16.750097274780273
    5. '０' → logprob: -18.625097274780273
    6. '   ' → logprob: -19.437597274780273
    7. '٠' → logprob: -19.687597274780273
    8. '```' → logprob: -19.875097274780273
    9. ' ' → logprob: -20.062597274780273
    10. '=' → logprob: -20.250097274780273

Token 138: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02497953549027443
    2. ' for' → logprob: -4.399979591369629
    3. '
' → logprob: -5.524979591369629
    4. '        
' → logprob: -5.524979591369629
    5. 'for' → logprob: -6.649979591369629
    6. ' 
' → logprob: -6.899979591369629
    7. '   ' → logprob: -7.024979591369629
    8. '<|end|>' → logprob: -7.649979591369629
    9. '  
' → logprob: -9.024979591369629
    10. '    
' → logprob: -9.024979591369629

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03661214932799339
    2. ' for' → logprob: -3.411612033843994
    3. 'for' → logprob: -6.286612033843994
    4. '   ' → logprob: -7.286612033843994
    5. '<|end|>' → logprob: -8.786612510681152
    6. ' ' → logprob: -9.536612510681152
    7. '        
' → logprob: -9.536612510681152
    8. ' 
' → logprob: -10.286612510681152
    9. '           ' → logprob: -11.161612510681152
    10. '    ' → logprob: -11.286612510681152

Token 140: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003073848783969879
    2. '       ' → logprob: -6.003073692321777
    3. ' for' → logprob: -7.503073692321777
    4. '   ' → logprob: -10.003073692321777
    5. '	for' → logprob: -13.628073692321777
    6. ' ' → logprob: -16.378074645996094
    7. '  ' → logprob: -18.503074645996094
    8. '           ' → logprob: -18.878074645996094
    9. '    ' → logprob: -18.878074645996094
    10. '        
' → logprob: -19.003074645996094

Token 141: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.225440114736557
    2. 'j' → logprob: -1.6004401445388794
    3. 'grid' → logprob: -11.35044002532959
    4. ' grid' → logprob: -11.60044002532959
    5. ' ' → logprob: -13.47544002532959
    6. 'char' → logprob: -13.60044002532959
    7. '   ' → logprob: -13.60044002532959
    8. '	j' → logprob: -14.22544002532959
    9. '0' → logprob: -15.10044002532959
    10. ' char' → logprob: -15.60044002532959

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005977500230073929
    2. 'in' → logprob: -5.130977630615234
    3. ' ' → logprob: -10.255977630615234
    4. '    ' → logprob: -12.505977630615234
    5. '   ' → logprob: -12.505977630615234
    6. '=' → logprob: -13.880977630615234
    7. '	in' → logprob: -14.005977630615234
    8. '        ' → logprob: -14.380977630615234
    9. '  ' → logprob: -14.630977630615234
    10. '0' → logprob: -14.880977630615234

Token 143: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740796685218811
    2. 'range' → logprob: -0.9740796685218811
    3. 'n' → logprob: -13.474080085754395
    4. '(range' → logprob: -14.849080085754395
    5. ' n' → logprob: -15.224080085754395
    6. '	range' → logprob: -15.224080085754395
    7. '   ' → logprob: -15.599080085754395
    8. ' ' → logprob: -15.724080085754395
    9. ' xrange' → logprob: -17.349079132080078
    10. 'grid' → logprob: -17.724079132080078

Token 144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04888392612338066
    2. 'n' → logprob: -3.0488839149475098
    3. '(' → logprob: -8.798884391784668
    4. ' n' → logprob: -9.048884391784668
    5. '1' → logprob: -11.798884391784668
    6. '   ' → logprob: -12.298884391784668
    7. ' (' → logprob: -12.548884391784668
    8. ')n' → logprob: -12.673884391784668
    9. '0' → logprob: -12.923884391784668
    10. '	n' → logprob: -13.173884391784668

Token 145: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048808205872774124
    2. '):' → logprob: -3.0488080978393555
    3. '       ' → logprob: -9.173808097839355
    4. '           ' → logprob: -10.048808097839355
    5. '   ' → logprob: -10.298808097839355
    6. '):
' → logprob: -11.048808097839355
    7. '():
' → logprob: -12.048808097839355
    8. '):

' → logprob: -12.298808097839355
    9. ')' → logprob: -12.548808097839355
    10. ' ):
' → logprob: -12.548808097839355

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00198656739667058
    2. ' if' → logprob: -6.376986503601074
    3. 'if' → logprob: -8.501986503601074
    4. '            
' → logprob: -10.376986503601074
    5. '       ' → logprob: -10.876986503601074
    6. '            ' → logprob: -11.751986503601074
    7. '               ' → logprob: -12.626986503601074
    8. ' ' → logprob: -12.876986503601074
    9. '#' → logprob: -13.001986503601074
    10. '          ' → logprob: -13.126986503601074

Token 147: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.432879239320755
    2. ' if' → logprob: -1.4328792095184326
    3. '           ' → logprob: -2.1828792095184326
    4. '               ' → logprob: -10.807879447937012
    5. '       ' → logprob: -13.182879447937012
    6. '	if' → logprob: -14.932879447937012
    7. '            
' → logprob: -15.057879447937012
    8. '   ' → logprob: -15.307879447937012
    9. 'If' → logprob: -15.682879447937012
    10. '```' → logprob: -15.807879447937012

Token 148: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.20142367482185364
    2. 'grid' → logprob: -1.7014236450195312
    3. 'int' → logprob: -12.576423645019531
    4. ' int' → logprob: -12.826423645019531
    5. '(grid' → logprob: -12.951423645019531
    6. '	grid' → logprob: -13.826423645019531
    7. ':grid' → logprob: -15.451423645019531
    8. '           ' → logprob: -15.451423645019531
    9. '.grid' → logprob: -15.826423645019531
    10. '   ' → logprob: -15.826423645019531

Token 149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.011373155459296e-05
    2. '[j' → logprob: -10.625030517578125
    3. ' [' → logprob: -12.875030517578125
    4. '[' → logprob: -13.000030517578125
    5. '   ' → logprob: -14.625030517578125
    6. '[I' → logprob: -15.500030517578125
    7. '][' → logprob: -16.250030517578125
    8. '[n' → logprob: -16.750030517578125
    9. '```' → logprob: -17.000030517578125
    10. '[
' → logprob: -17.000030517578125

Token 150: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03841955214738846
    2. '[j' → logprob: -3.288419485092163
    3. ']' → logprob: -8.288419723510742
    4. ' ][' → logprob: -9.788419723510742
    5. '[' → logprob: -10.413419723510742
    6. '[i' → logprob: -10.913419723510742
    7. '"][' → logprob: -11.538419723510742
    8. ']==' → logprob: -12.663419723510742
    9. '   ' → logprob: -13.038419723510742
    10. ''][' → logprob: -13.288419723510742

Token 151: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.165027217415627e-05
    2. ' j' → logprob: -10.750021934509277
    3. ' ' → logprob: -16.62502098083496
    4. ']' → logprob: -16.62502098083496
    5. '	j' → logprob: -16.75002098083496
    6. '[j' → logprob: -18.25002098083496
    7. '```' → logprob: -18.50002098083496
    8. '_j' → logprob: -18.62502098083496
    9. '   ' → logprob: -19.00002098083496
    10. '0' → logprob: -19.12502098083496

Token 152: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9928216934204102
    2. ' ==' → logprob: -1.1178216934204102
    3. ']' → logprob: -1.2428216934204102
    4. ']==' → logprob: -4.49282169342041
    5. ' ]' → logprob: -6.24282169342041
    6. '=' → logprob: -7.99282169342041
    7. '']' → logprob: -8.99282169342041
    8. ')' → logprob: -9.11782169342041
    9. ' ' → logprob: -9.36782169342041
    10. ']=='' → logprob: -10.61782169342041

Token 153: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31341734528541565
    2. ' ==' → logprob: -1.3134173154830933
    3. '=' → logprob: -9.188417434692383
    4. '=='' → logprob: -10.688417434692383
    5. '1' → logprob: -11.438417434692383
    6. ']==' → logprob: -11.938417434692383
    7. '==
' → logprob: -12.063417434692383
    8. ']' → logprob: -13.563417434692383
    9. ''' → logprob: -13.563417434692383
    10. ')' → logprob: -14.063417434692383

Token 154: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02069825679063797
    2. ' '' → logprob: -3.895698308944702
    3. '"' → logprob: -9.270698547363281
    4. '1' → logprob: -9.770698547363281
    5. ' ' → logprob: -12.645698547363281
    6. ' "' → logprob: -14.395698547363281
    7. ' ' → logprob: -14.770698547363281
    8. '   ' → logprob: -15.145698547363281
    9. '`' → logprob: -15.895698547363281
    10. '0' → logprob: -16.77069854736328

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '0' → logprob: -18.5
    4. ''' → logprob: -18.75
    5. '' → logprob: -20.75
    6. '11' → logprob: -20.875
    7. '۱' → logprob: -20.9375
    8. '```' → logprob: -21.0625
    9. '１' → logprob: -21.625
    10. '১' → logprob: -21.75

Token 156: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.647773265838623
    2. '':' → logprob: -0.772773265838623
    3. ''' → logprob: -4.272773265838623
    4. ':' → logprob: -7.522773265838623
    5. ' '' → logprob: -8.772773742675781
    6. '':
' → logprob: -9.272773742675781
    7. ''):
' → logprob: -9.397773742675781
    8. ':
' → logprob: -9.522773742675781
    9. '):
' → logprob: -9.772773742675781
    10. '           ' → logprob: -10.272773742675781

Token 157: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005386164411902428
    2. '           ' → logprob: -8.12553882598877
    3. '                
' → logprob: -9.12553882598877
    4. ':' → logprob: -10.12553882598877
    5. '              ' → logprob: -10.87553882598877
    6. ':
' → logprob: -10.87553882598877
    7. '<|end|>' → logprob: -11.50053882598877
    8. '                ' → logprob: -11.87553882598877
    9. 'count' → logprob: -11.87553882598877
    10. '            ' → logprob: -12.50053882598877

Token 158: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.008649791590869427
    2. ' count' → logprob: -4.758649826049805
    3. '               ' → logprob: -10.383649826049805
    4. '                   ' → logprob: -12.633649826049805
    5. '	count' → logprob: -15.383649826049805
    6. '[count' → logprob: -15.508649826049805
    7. '_count' → logprob: -15.883649826049805
    8. '           ' → logprob: -16.008649826049805
    9. '                ' → logprob: -16.133649826049805
    10. '<count' → logprob: -16.258649826049805

Token 159: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759865641593933
    2. '+=' → logprob: -0.8259865641593933
    3. '=' → logprob: -10.075986862182617
    4. ' =' → logprob: -13.200986862182617
    5. ']+=' → logprob: -13.200986862182617
    6. '+' → logprob: -15.200986862182617
    7. '               ' → logprob: -15.200986862182617
    8. ' ' → logprob: -15.575986862182617
    9. ' ' → logprob: -15.825986862182617
    10. '   ' → logprob: -16.075986862182617

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -20.000431060791016
    4. '```' → logprob: -20.625431060791016
    5. ' ' → logprob: -21.750431060791016
    6. '<|end|>' → logprob: -22.375431060791016
    7. '
' → logprob: -22.750431060791016
    8. '  ' → logprob: -22.875431060791016
    9. '۱' → logprob: -23.500431060791016
    10. '１' → logprob: -23.500431060791016

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -19.875
    4. '
' → logprob: -21.25
    5. '<|end|>' → logprob: -21.5
    6. '１' → logprob: -22.0
    7. '

' → logprob: -22.0
    8. '۱' → logprob: -22.0625
    9. ' ' → logprob: -22.125
    10. '   ' → logprob: -22.1875

Token 162: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2939814031124115
    2. '
' → logprob: -1.7939814329147339
    3. ' else' → logprob: -2.9189813137054443
    4. '           ' → logprob: -3.9189813137054443
    5. '<|end|>' → logprob: -4.543981552124023
    6. '               ' → logprob: -6.168981552124023
    7. '       ' → logprob: -7.918981552124023
    8. 'elif' → logprob: -8.293981552124023
    9. ' 
' → logprob: -8.543981552124023
    10. '            
' → logprob: -8.668981552124023

Token 163: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18810248374938965
    2. '               ' → logprob: -2.1881024837493896
    3. 'else' → logprob: -3.4381024837493896
    4. ' else' → logprob: -4.188102722167969
    5. '<|end|>' → logprob: -4.563102722167969
    6. '
' → logprob: -7.313102722167969
    7. '       ' → logprob: -8.563102722167969
    8. '```' → logprob: -9.188102722167969
    9. '<|end|>' → logprob: -9.188102722167969
    10. '                
' → logprob: -9.438102722167969

Token 164: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.2684265375137329
    2. ' max' → logprob: -2.0184264183044434
    3. 'if' → logprob: -3.0184264183044434
    4. ' if' → logprob: -3.0184264183044434
    5. '               ' → logprob: -5.393426418304443
    6. '
' → logprob: -8.893426895141602
    7. '           ' → logprob: -9.393426895141602
    8. '```' → logprob: -11.018426895141602
    9. 'else' → logprob: -12.143426895141602
    10. '                   ' → logprob: -12.643426895141602

Token 165: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.25
    3. '_LEN' → logprob: -16.625
    4. '_le' → logprob: -16.875
    5. 'Len' → logprob: -17.25
    6. '_max' → logprob: -17.5
    7. '_l' → logprob: -17.625
    8. '_val' → logprob: -18.125
    9. 'len' → logprob: -18.25
    10. ' _' → logprob: -18.875

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474077433347702
    2. ' =' → logprob: -0.9740774631500244
    3. '=max' → logprob: -14.849077224731445
    4. 'max' → logprob: -16.599077224731445
    5. ' ' → logprob: -18.724077224731445
    6. ' max' → logprob: -18.974077224731445
    7. '```' → logprob: -18.974077224731445
    8. '＝' → logprob: -19.099077224731445
    9. ')' → logprob: -19.474077224731445
    10. '   ' → logprob: -19.724077224731445

Token 167: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.10020667314529419
    2. 'max' → logprob: -2.3502066135406494
    3. '	max' → logprob: -16.85020637512207
    4. '(max' → logprob: -17.97520637512207
    5. 'count' → logprob: -19.22520637512207
    6. '=max' → logprob: -19.22520637512207
    7. '[max' → logprob: -20.10020637512207
    8. ',max' → logprob: -20.47520637512207
    9. '_max' → logprob: -20.85020637512207
    10. ' ' → logprob: -21.72520637512207

Token 168: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.003512999275699258
    2. '(count' → logprob: -5.753512859344482
    3. '(' → logprob: -8.00351333618164
    4. ' (' → logprob: -14.25351333618164
    5. 'max' → logprob: -16.00351333618164
    6. '(
' → logprob: -16.75351333618164
    7. ' max' → logprob: -17.75351333618164
    8. 'count' → logprob: -18.12851333618164
    9. '```' → logprob: -18.62851333618164
    10. ',max' → logprob: -19.00351333618164

Token 169: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.36574100604048e-06
    2. 'len' → logprob: -12.750004768371582
    3. '_' → logprob: -14.375004768371582
    4. 'Len' → logprob: -15.250004768371582
    5. '_LEN' → logprob: -15.500004768371582
    6. '_count' → logprob: -16.625003814697266
    7. ' _' → logprob: -16.875003814697266
    8. '<len' → logprob: -17.250003814697266
    9. '_length' → logprob: -17.500003814697266
    10. '[len' → logprob: -17.625003814697266

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004723818507045507
    2. ',count' → logprob: -5.379724025726318
    3. ' ,' → logprob: -9.37972354888916
    4. 'count' → logprob: -11.12972354888916
    5. '(count' → logprob: -12.62972354888916
    6. ',max' → logprob: -14.37972354888916
    7. ',
' → logprob: -15.00472354888916
    8. '[count' → logprob: -16.004724502563477
    9. ',c' → logprob: -16.379724502563477
    10. ' count' → logprob: -17.504724502563477

Token 171: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.31326204538345337
    2. 'count' → logprob: -1.3132619857788086
    3. '	count' → logprob: -16.063262939453125
    4. ' ' → logprob: -17.313262939453125
    5. '$count' → logprob: -17.438262939453125
    6. ' ' → logprob: -17.688262939453125
    7. '(count' → logprob: -17.688262939453125
    8. '_count' → logprob: -17.813262939453125
    9. 'c' → logprob: -17.813262939453125
    10. ' coun' → logprob: -18.063262939453125

Token 172: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5782808065414429
    2. ')' → logprob: -0.8282808065414429
    3. '           ' → logprob: -6.078280925750732
    4. '               ' → logprob: -11.078280448913574
    5. ')
' → logprob: -11.328280448913574
    6. 'else' → logprob: -11.453280448913574
    7. ' )
' → logprob: -12.578280448913574
    8. ')

' → logprob: -13.578280448913574
    9. ' )' → logprob: -13.828280448913574
    10. ' else' → logprob: -14.453280448913574

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002656271681189537
    2. 'else' → logprob: -8.625266075134277
    3. ' else' → logprob: -9.375266075134277
    4. '```' → logprob: -14.250266075134277
    5. '	       ' → logprob: -15.750266075134277
    6. '		' → logprob: -16.12526512145996
    7. '
' → logprob: -16.62526512145996
    8. 'elif' → logprob: -16.75026512145996
    9. '       ' → logprob: -16.87526512145996
    10. '          ' → logprob: -17.12526512145996

Token 174: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5151522159576416
    2. '           ' → logprob: -1.3901522159576416
    3. ' else' → logprob: -1.8901522159576416
    4. '       ' → logprob: -6.0151519775390625
    5. '	else' → logprob: -10.640151977539062
    6. '	       ' → logprob: -11.640151977539062
    7. '   ' → logprob: -11.890151977539062
    8. '```' → logprob: -12.015151977539062
    9. '
' → logprob: -12.640151977539062
    10. '<|end|>' → logprob: -13.015151977539062

Token 175: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6382319927215576
    2. ':' → logprob: -0.8882319927215576
    3. ':
' → logprob: -2.8882319927215576
    4. '           ' → logprob: -5.513232231140137
    5. '                   ' → logprob: -7.763232231140137
    6. 'count' → logprob: -9.638232231140137
    7. ' :' → logprob: -10.263232231140137
    8. '              ' → logprob: -10.263232231140137
    9. ' :
' → logprob: -11.013232231140137
    10. '<|end|>' → logprob: -11.388232231140137

Token 176: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0658373236656189
    2. 'count' → logprob: -2.8158373832702637
    3. ' count' → logprob: -5.565837383270264
    4. '	count' → logprob: -11.065836906433105
    5. '           ' → logprob: -11.565836906433105
    6. '   ' → logprob: -13.440836906433105
    7. '              ' → logprob: -13.440836906433105
    8. '                   ' → logprob: -13.940836906433105
    9. '			' → logprob: -13.940836906433105
    10. '[count' → logprob: -14.315836906433105

Token 177: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.25194162130355835
    2. ' count' → logprob: -1.5019416809082031
    3. '               ' → logprob: -11.376941680908203
    4. '	count' → logprob: -14.626941680908203
    5. ' ' → logprob: -14.876941680908203
    6. '_count' → logprob: -16.876941680908203
    7. '                   ' → logprob: -17.001941680908203
    8. '           ' → logprob: -17.501941680908203
    9. '   ' → logprob: -17.626941680908203
    10. 'Count' → logprob: -18.126941680908203

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759396553039551
    2. '=' → logprob: -0.8259396553039551
    3. ' ' → logprob: -15.450939178466797
    4. ' ' → logprob: -17.325939178466797
    5. '＝' → logprob: -17.700939178466797
    6. ' =
' → logprob: -18.075939178466797
    7. '<|end|>' → logprob: -19.075939178466797
    8. ')' → logprob: -19.200939178466797
    9. '	' → logprob: -19.450939178466797
    10. '.=' → logprob: -19.700939178466797

Token 179: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. ' ' → logprob: -19.750911712646484
    4. '   ' → logprob: -21.000911712646484
    5. '۰' → logprob: -22.250911712646484
    6. '```' → logprob: -22.625911712646484
    7. '  ' → logprob: -23.250911712646484
    8. '1' → logprob: -23.250911712646484
    9. '<|end|>' → logprob: -23.250911712646484
    10. '
' → logprob: -23.375911712646484

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۰' → logprob: -22.2500057220459
    4. '```' → logprob: -22.2500057220459
    5. '   ' → logprob: -22.6250057220459
    6. '00' → logprob: -23.3750057220459
    7. ' ' → logprob: -23.5000057220459
    8. '  ' → logprob: -23.6250057220459
    9. '000' → logprob: -23.7500057220459
    10. '1' → logprob: -24.1250057220459

Token 181: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11837093532085419
    2. '    
' → logprob: -2.24337100982666
    3. '   ' → logprob: -5.49337100982666
    4. '\n' → logprob: -7.86837100982666
    5. '  
' → logprob: -7.99337100982666
    6. '        
' → logprob: -8.49337100982666
    7. '   
' → logprob: -8.61837100982666
    8. ' 
' → logprob: -8.99337100982666
    9. '
    
' → logprob: -9.99337100982666
    10. '       ' → logprob: -10.74337100982666

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6345313787460327
    2. '
' → logprob: -1.3845313787460327
    3. '    
' → logprob: -1.6345313787460327
    4. '#' → logprob: -3.7595314979553223
    5. '
    
' → logprob: -8.384531021118164
    6. '        
' → logprob: -8.384531021118164
    7. '   
' → logprob: -8.759531021118164
    8. '  
' → logprob: -8.884531021118164
    9. '

' → logprob: -9.509531021118164
    10. '    
    
' → logprob: -9.509531021118164

Token 183: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1776251196861267
    2. '
' → logprob: -2.4276251792907715
    3. '   ' → logprob: -2.6776251792907715
    4. '    
' → logprob: -5.1776251792907715
    5. '  
' → logprob: -10.052624702453613
    6. '```' → logprob: -10.302624702453613
    7. '   
' → logprob: -10.677624702453613
    8. ' #' → logprob: -11.427624702453613
    9. '  ' → logprob: -12.427624702453613
    10. '

' → logprob: -12.552624702453613

Token 184: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10526056587696075
    2. 'V' → logprob: -2.3552606105804443
    3. ' #' → logprob: -5.730260372161865
    4. ' Vér' → logprob: -7.105260372161865
    5. 'Vertical' → logprob: -7.855260372161865
    6. 'vertical' → logprob: -8.105260848999023
    7. 'Verification' → logprob: -9.605260848999023
    8. 'for' → logprob: -9.855260848999023
    9. 'Vert' → logprob: -10.605260848999023
    10. 'v' → logprob: -10.855260848999023

Token 185: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.00039409202872775495
    2. 'ication' → logprob: -8.875393867492676
    3. '#' → logprob: -9.250393867492676
    4. '_' → logprob: -9.500393867492676
    5. 'if' → logprob: -10.625393867492676
    6. 'fic' → logprob: -10.750393867492676
    7. 'IFICATION' → logprob: -11.500393867492676
    8. '   ' → logprob: -12.250393867492676
    9. 'ifi' → logprob: -12.375393867492676
    10. '```' → logprob: -12.750393867492676

Token 186: ' verticale' (ID: 199428)
  Prédit: ' verticale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' verticale' → logprob: -0.05865582451224327
    2. ' vertical' → logprob: -3.0586557388305664
    3. 'vertical' → logprob: -4.683655738830566
    4. '(vertical' → logprob: -7.558655738830566
    5. '_vertical' → logprob: -9.308655738830566
    6. ' ' → logprob: -10.183655738830566
    7. ' ' → logprob: -10.183655738830566
    8. 'vert' → logprob: -10.558655738830566
    9. ' vertically' → logprob: -10.808655738830566
    10. ' vert' → logprob: -11.308655738830566

Token 187: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18926846981048584
    2. 'for' → logprob: -2.6892685890197754
    3. '   ' → logprob: -2.9392685890197754
    4. ' for' → logprob: -3.0642685890197754
    5. '    
' → logprob: -5.814268589019775
    6. '  
' → logprob: -6.439268589019775
    7. '   
' → logprob: -8.564268112182617
    8. '\n' → logprob: -9.814268112182617
    9. ' 
' → logprob: -10.689268112182617
    10. '  ' → logprob: -10.939268112182617

Token 188: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41468411684036255
    2. '   ' → logprob: -1.9146840572357178
    3. ' for' → logprob: -2.0396840572357178
    4. 'for' → logprob: -2.7896840572357178
    5. '    
' → logprob: -8.289684295654297
    6. '  
' → logprob: -8.414684295654297
    7. '	for' → logprob: -10.664684295654297
    8. '  ' → logprob: -11.289684295654297
    9. '   
' → logprob: -11.289684295654297
    10. ' 
' → logprob: -11.289684295654297

Token 189: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3870280981063843
    2. ' for' → logprob: -1.1370280981063843
    3. '   ' → logprob: -8.762027740478516
    4. '
' → logprob: -15.637027740478516
    5. ' ' → logprob: -15.762027740478516
    6. ' 
' → logprob: -16.262027740478516
    7. '	for' → logprob: -16.387027740478516
    8. '    
' → logprob: -17.387027740478516
    9. '  ' → logprob: -18.387027740478516
    10. '```' → logprob: -18.637027740478516

Token 190: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4166461229324341
    2. 'j' → logprob: -1.166646122932434
    3. ' i' → logprob: -3.9166460037231445
    4. 'i' → logprob: -4.6666460037231445
    5. '   ' → logprob: -11.291646003723145
    6. ' range' → logprob: -12.791646003723145
    7. ' ' → logprob: -13.041646003723145
    8. 'range' → logprob: -13.166646003723145
    9. '	j' → logprob: -13.166646003723145
    10. ' in' → logprob: -13.791646003723145

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021876145619899035
    2. 'in' → logprob: -6.127187728881836
    3. 'range' → logprob: -13.377187728881836
    4. ' ' → logprob: -14.752187728881836
    5. ' range' → logprob: -15.627187728881836
    6. 'n' → logprob: -16.377187728881836
    7. '   ' → logprob: -16.377187728881836
    8. 'In' → logprob: -16.877187728881836
    9. 'int' → logprob: -17.627187728881836
    10. 'd' → logprob: -17.627187728881836

Token 192: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740777611732483
    2. 'range' → logprob: -0.9740777611732483
    3. ' in' → logprob: -15.224078178405762
    4. '(range' → logprob: -15.224078178405762
    5. 'n' → logprob: -15.974078178405762
    6. 'in' → logprob: -16.099077224731445
    7. ' ' → logprob: -16.974077224731445
    8. '0' → logprob: -17.349077224731445
    9. '	range' → logprob: -19.474077224731445
    10. 'ange' → logprob: -20.099077224731445

Token 193: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3515465557575226
    2. 'range' → logprob: -1.6015465259552002
    3. ' range' → logprob: -2.8515465259552
    4. 'n' → logprob: -3.7265465259552
    5. '(' → logprob: -4.476546764373779
    6. '(range' → logprob: -7.476546764373779
    7. ' n' → logprob: -7.851546764373779
    8. ' (' → logprob: -7.976546764373779
    9. ' in' → logprob: -8.851546287536621
    10. '0' → logprob: -8.976546287536621

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1482178121805191
    2. '):
' → logprob: -2.0232179164886475
    3. ':' → logprob: -5.273217678070068
    4. ')' → logprob: -8.773218154907227
    5. '   ' → logprob: -8.773218154907227
    6. ':
' → logprob: -9.773218154907227
    7. ' ):' → logprob: -11.523218154907227
    8. 'n' → logprob: -12.273218154907227
    9. ' in' → logprob: -12.648218154907227
    10. '=' → logprob: -13.023218154907227

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04907689243555069
    2. '   ' → logprob: -3.299076795578003
    3. 'count' → logprob: -4.549077033996582
    4. ' count' → logprob: -7.924077033996582
    5. '
' → logprob: -10.549077033996582
    6. '           ' → logprob: -13.299077033996582
    7. '	count' → logprob: -13.549077033996582
    8. ' ' → logprob: -13.549077033996582
    9. '    ' → logprob: -13.799077033996582
    10. ':
' → logprob: -13.924077033996582

Token 196: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.004209225066006184
    2. '   ' → logprob: -6.004209041595459
    3. ' count' → logprob: -6.879209041595459
    4. '       ' → logprob: -7.629209041595459
    5. 'for' → logprob: -8.504209518432617
    6. ' for' → logprob: -12.004209518432617
    7. ' ' → logprob: -12.754209518432617
    8. '```' → logprob: -13.254209518432617
    9. '
' → logprob: -13.379209518432617
    10. '  ' → logprob: -14.379209518432617

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.326414108276367
    4. '   ' → logprob: -16.826414108276367
    5. ' ' → logprob: -18.576414108276367
    6. '```' → logprob: -20.451414108276367
    7. '	' → logprob: -20.701414108276367
    8. '    ' → logprob: -20.701414108276367
    9. '  ' → logprob: -20.826414108276367
    10. '0' → logprob: -20.951414108276367

Token 198: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014163863845169544
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.014163970947266
    4. ' ' → logprob: -18.639163970947266
    5. '  ' → logprob: -18.889163970947266
    6. '۰' → logprob: -21.201663970947266
    7. '       ' → logprob: -21.264163970947266
    8. '    ' → logprob: -21.639163970947266
    9. '```' → logprob: -22.076663970947266
    10. '	' → logprob: -22.139163970947266

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.250024795532227
    4. '  ' → logprob: -19.750024795532227
    5. '```' → logprob: -20.312524795532227
    6. '=' → logprob: -20.937524795532227
    7. ' ' → logprob: -20.937524795532227
    8. '۰' → logprob: -21.000024795532227
    9. '
' → logprob: -21.437524795532227
    10. '       ' → logprob: -21.437524795532227

Token 200: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018617609748616815
    2. ' for' → logprob: -6.751861572265625
    3. 'for' → logprob: -7.751861572265625
    4. '   ' → logprob: -8.876861572265625
    5. '
' → logprob: -9.501861572265625
    6. '<|end|>' → logprob: -10.876861572265625
    7. '	for' → logprob: -11.876861572265625
    8. '	' → logprob: -11.876861572265625
    9. '        
' → logprob: -12.501861572265625
    10. '           ' → logprob: -12.626861572265625

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26169294118881226
    2. 'for' → logprob: -1.511693000793457
    3. ' for' → logprob: -4.886693000793457
    4. '   ' → logprob: -6.136693000793457
    5. '
' → logprob: -12.636693000793457
    6. '	for' → logprob: -13.261693000793457
    7. '           ' → logprob: -13.511693000793457
    8. ' ' → logprob: -13.886693000793457
    9. '        
' → logprob: -15.636693000793457
    10. '     ' → logprob: -15.886693000793457

Token 202: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007479215855710208
    2. ' for' → logprob: -7.250748157501221
    3. '   ' → logprob: -10.875747680664062
    4. '       ' → logprob: -10.875747680664062
    5. ' ' → logprob: -17.000747680664062
    6. '
' → logprob: -17.375747680664062
    7. '	for' → logprob: -18.125747680664062
    8. '           ' → logprob: -19.000747680664062
    9. '```' → logprob: -19.500747680664062
    10. '     ' → logprob: -20.000747680664062

Token 203: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015024791937321424
    2. ' i' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.376502990722656
    4. '```' → logprob: -18.501502990722656
    5. '	i' → logprob: -19.251502990722656
    6. '_i' → logprob: -19.501502990722656
    7. ' ' → logprob: -19.751502990722656
    8. ' ' → logprob: -20.126502990722656
    9. 'I' → logprob: -20.751502990722656
    10. '`' → logprob: -21.001502990722656

Token 204: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01603648066520691
    2. 'in' → logprob: -4.141036510467529
    3. ' ' → logprob: -14.266036033630371
    4. '   ' → logprob: -14.266036033630371
    5. 'range' → logprob: -15.016036033630371
    6. 'n' → logprob: -15.391036033630371
    7. ' range' → logprob: -16.016036987304688
    8. '(' → logprob: -16.266036987304688
    9. ' ' → logprob: -17.391036987304688
    10. '    ' → logprob: -17.391036987304688

Token 205: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740851819515228
    2. 'range' → logprob: -0.9740852117538452
    3. '(range' → logprob: -11.724084854125977
    4. 'n' → logprob: -16.974084854125977
    5. '	range' → logprob: -17.849084854125977
    6. ' in' → logprob: -18.474084854125977
    7. '(n' → logprob: -18.849084854125977
    8. ' ' → logprob: -18.849084854125977
    9. '   ' → logprob: -18.849084854125977
    10. 'in' → logprob: -19.974084854125977

Token 206: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004444931691978127
    2. 'n' → logprob: -7.750444412231445
    3. '(' → logprob: -11.250444412231445
    4. 'range' → logprob: -14.875444412231445
    5. ' (' → logprob: -15.250444412231445
    6. ' n' → logprob: -16.250444412231445
    7. '
' → logprob: -17.250444412231445
    8. '   ' → logprob: -17.625444412231445
    9. '<n' → logprob: -18.125444412231445
    10. '[n' → logprob: -18.125444412231445

Token 207: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1618773639202118
    2. '):' → logprob: -1.9118773937225342
    3. ':' → logprob: -6.536877155303955
    4. '       ' → logprob: -9.661877632141113
    5. ':
' → logprob: -10.161877632141113
    6. '   ' → logprob: -10.536877632141113
    7. '           ' → logprob: -10.786877632141113
    8. '):

' → logprob: -11.161877632141113
    9. '():
' → logprob: -11.536877632141113
    10. '):
' → logprob: -11.661877632141113

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001363168703392148
    2. 'if' → logprob: -9.500136375427246
    3. ' if' → logprob: -9.875136375427246
    4. '       ' → logprob: -12.375136375427246
    5. '	       ' → logprob: -12.875136375427246
    6. '   ' → logprob: -14.125136375427246
    7. '          ' → logprob: -14.375136375427246
    8. '         ' → logprob: -14.500136375427246
    9. '```' → logprob: -15.125136375427246
    10. '	   ' → logprob: -15.250136375427246

Token 209: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4027213752269745
    2. ' if' → logprob: -1.1527214050292969
    3. '           ' → logprob: -4.152721405029297
    4. '               ' → logprob: -12.902721405029297
    5. '       ' → logprob: -14.527721405029297
    6. '   ' → logprob: -14.902721405029297
    7. '```' → logprob: -15.652721405029297
    8. '	if' → logprob: -15.902721405029297
    9. '            ' → logprob: -15.902721405029297
    10. '          ' → logprob: -16.777721405029297

Token 210: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.0009184855734929442
    2. 'grid' → logprob: -7.000918388366699
    3. '(grid' → logprob: -12.0009183883667
    4. '	grid' → logprob: -14.3759183883667
    5. ':grid' → logprob: -15.8759183883667
    6. '.grid' → logprob: -16.500919342041016
    7. '_grid' → logprob: -17.375919342041016
    8. '/grid' → logprob: -17.750919342041016
    9. 'Grid' → logprob: -18.500919342041016
    10. ' ' → logprob: -18.500919342041016

Token 211: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9981420336989686e-05
    2. '[j' → logprob: -10.875020027160645
    3. '[' → logprob: -14.375020027160645
    4. '[I' → logprob: -15.625020027160645
    5. '][' → logprob: -16.375019073486328
    6. '   ' → logprob: -17.875019073486328
    7. '[u' → logprob: -18.125019073486328
    8. '[int' → logprob: -18.250019073486328
    9. '```' → logprob: -18.250019073486328
    10. '[k' → logprob: -18.375019073486328

Token 212: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002865258604288101
    2. '[j' → logprob: -5.877865314483643
    3. ']' → logprob: -10.752864837646484
    4. '[' → logprob: -11.377864837646484
    5. ' ][' → logprob: -11.502864837646484
    6. '[i' → logprob: -12.127864837646484
    7. '       ' → logprob: -12.752864837646484
    8. '"][' → logprob: -12.877864837646484
    9. ']][' → logprob: -13.252864837646484
    10. ''][' → logprob: -13.377864837646484

Token 213: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.069664333248511e-05
    2. '[j' → logprob: -11.250020980834961
    3. ' j' → logprob: -11.875020980834961
    4. ''' → logprob: -14.375020980834961
    5. '   ' → logprob: -16.87502098083496
    6. ' ' → logprob: -17.50002098083496
    7. ']' → logprob: -17.87502098083496
    8. '
' → logprob: -18.00002098083496
    9. '][' → logprob: -18.00002098083496
    10. '```' → logprob: -18.00002098083496

Token 214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026897944044321775
    2. ']==' → logprob: -6.377689838409424
    3. '==' → logprob: -7.377689838409424
    4. ' ==' → logprob: -8.002689361572266
    5. ' ]' → logprob: -10.752689361572266
    6. ']=='' → logprob: -12.502689361572266
    7. '']' → logprob: -13.252689361572266
    8. '           ' → logprob: -15.627689361572266
    9. ')' → logprob: -15.627689361572266
    10. '=='' → logprob: -16.377689361572266

Token 215: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.575981080532074
    2. '==' → logprob: -0.825981080532074
    3. '=='' → logprob: -10.575981140136719
    4. ']==' → logprob: -11.450981140136719
    5. ']' → logprob: -13.200981140136719
    6. ' =='' → logprob: -14.450981140136719
    7. '           ' → logprob: -14.575981140136719
    8. ''' → logprob: -14.575981140136719
    9. ' ' → logprob: -14.700981140136719
    10. ')==' → logprob: -14.825981140136719

Token 216: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2519306540489197
    2. ' '' → logprob: -1.5019307136535645
    3. '"' → logprob: -13.876930236816406
    4. ' ' → logprob: -15.126930236816406
    5. ' ' → logprob: -15.376930236816406
    6. ')' → logprob: -16.626930236816406
    7. '`' → logprob: -17.126930236816406
    8. '1' → logprob: -17.376930236816406
    9. '[' → logprob: -17.626930236816406
    10. ' "' → logprob: -18.126930236816406

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602276712656021
    2. ''' → logprob: -1.910227656364441
    3. '')' → logprob: -14.16022777557373
    4. '"' → logprob: -14.41022777557373
    5. ' '' → logprob: -14.41022777557373
    6. '```' → logprob: -14.78522777557373
    7. '`' → logprob: -15.03522777557373
    8. ' ' → logprob: -15.16022777557373
    9. ''s' → logprob: -15.91022777557373
    10. ''''' → logprob: -16.160226821899414

Token 218: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6383965611457825
    2. '               ' → logprob: -0.8883965611457825
    3. ':
' → logprob: -3.0133965015411377
    4. '):
' → logprob: -5.263396739959717
    5. '':' → logprob: -6.638396739959717
    6. ''):
' → logprob: -6.763396739959717
    7. '):' → logprob: -6.763396739959717
    8. '<|end|>' → logprob: -7.388396739959717
    9. ']:
' → logprob: -7.513396739959717
    10. '':
' → logprob: -8.138396263122559

Token 219: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011892046313732862
    2. 'count' → logprob: -9.12511920928955
    3. '              ' → logprob: -12.75011920928955
    4. '           ' → logprob: -12.87511920928955
    5. '                
' → logprob: -13.12511920928955
    6. ' count' → logprob: -13.75011920928955
    7. '                ' → logprob: -15.25011920928955
    8. '                   ' → logprob: -15.37511920928955
    9. '             ' → logprob: -15.75011920928955
    10. '
' → logprob: -15.87511920928955

Token 220: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.6099898219108582
    2. ' count' → logprob: -1.359989881515503
    3. '               ' → logprob: -1.609989881515503
    4. '           ' → logprob: -10.609990119934082
    5. '                   ' → logprob: -10.984990119934082
    6. '                ' → logprob: -11.359990119934082
    7. '
' → logprob: -11.609990119934082
    8. '	count' → logprob: -11.984990119934082
    9. '              ' → logprob: -12.234990119934082
    10. ' 
' → logprob: -12.734990119934082

Token 221: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06212083250284195
    2. '+=' → logprob: -2.8121209144592285
    3. '               ' → logprob: -9.06212043762207
    4. '                ' → logprob: -11.06212043762207
    5. '                   ' → logprob: -12.18712043762207
    6. '           ' → logprob: -12.43712043762207
    7. '            ' → logprob: -12.56212043762207
    8. '=' → logprob: -12.93712043762207
    9. ']+=' → logprob: -12.93712043762207
    10. ' ' → logprob: -14.31212043762207

Token 222: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20141392946243286
    2. '1' → logprob: -1.701413869857788
    3. ' ' → logprob: -14.576414108276367
    4. '<|end|>' → logprob: -16.576414108276367
    5. '```' → logprob: -16.701414108276367
    6. '   ' → logprob: -18.576414108276367
    7. '
' → logprob: -20.263914108276367
    8. '0' → logprob: -20.701414108276367
    9. ')' → logprob: -21.013914108276367
    10. '۱' → logprob: -21.013914108276367

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.625139236450195
    4. '```' → logprob: -19.250139236450195
    5. ' ' → logprob: -20.250139236450195
    6. '
' → logprob: -20.250139236450195
    7. '           ' → logprob: -21.000139236450195
    8. '<|end|>' → logprob: -21.312639236450195
    9. '１' → logprob: -21.437639236450195
    10. '۱' → logprob: -22.062639236450195

Token 224: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.031157969729975e-05
    2. '
' → logprob: -10.500090599060059
    3. '<|end|>' → logprob: -10.875090599060059
    4. '           ' → logprob: -11.250090599060059
    5. '                
' → logprob: -11.250090599060059
    6. '                ' → logprob: -12.000090599060059
    7. '                   ' → logprob: -12.250090599060059
    8. '              ' → logprob: -12.500090599060059
    9. '             ' → logprob: -14.125090599060059
    10. '       ' → logprob: -14.375090599060059

Token 225: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3902033970225602e-05
    2. ' max' → logprob: -12.000014305114746
    3. '
' → logprob: -12.750014305114746
    4. 'max' → logprob: -12.875014305114746
    5. '              ' → logprob: -14.000014305114746
    6. '           ' → logprob: -14.625014305114746
    7. '                
' → logprob: -14.625014305114746
    8. '                ' → logprob: -15.125014305114746
    9. '                   ' → logprob: -16.12501335144043
    10. '       ' → logprob: -16.87501335144043

Token 226: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0007854487630538642
    2. 'max' (adapté à ' max') → logprob: -7.2507853507995605
    3. '               ' → logprob: -9.500785827636719
    4. '           ' → logprob: -15.750785827636719
    5. '
' → logprob: -16.12578582763672
    6. '                ' → logprob: -16.37578582763672
    7. ' ' → logprob: -16.50078582763672
    8. '(max' → logprob: -16.62578582763672
    9. '	max' → logprob: -17.12578582763672
    10. ' ' → logprob: -17.12578582763672

Token 227: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. 'len' → logprob: -15.375
    3. '_max' → logprob: -16.375
    4. '_' → logprob: -17.25
    5. '_LEN' → logprob: -17.25
    6. ' _' → logprob: -17.5
    7. 'Len' → logprob: -17.75
    8. '_l' → logprob: -18.625
    9. '(_' → logprob: -18.875
    10. '_val' → logprob: -19.125

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519313097000122
    2. '=' → logprob: -1.5019313097000122
    3. '=max' → logprob: -13.626931190490723
    4. ',' → logprob: -14.751931190490723
    5. 'max' → logprob: -14.876931190490723
    6. ' ' → logprob: -15.751931190490723
    7. ')' → logprob: -15.876931190490723
    8. '   ' → logprob: -17.62693214416504
    9. '```' → logprob: -17.75193214416504
    10. ' max' → logprob: -18.12693214416504

Token 229: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0005530327325686812
    2. 'max' → logprob: -7.500553131103516
    3. '(max' → logprob: -17.000553131103516
    4. ' ' → logprob: -18.375553131103516
    5. '=max' → logprob: -19.000553131103516
    6. '	max' → logprob: -19.750553131103516
    7. ',max' → logprob: -20.500553131103516
    8. '[max' → logprob: -21.125553131103516
    9. '_max' → logprob: -21.375553131103516
    10. ' ' → logprob: -21.500553131103516

Token 230: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0004954866599291563
    2. '(' → logprob: -7.625495433807373
    3. ' (' → logprob: -11.875495910644531
    4. '=max' → logprob: -16.00049591064453
    5. 'max' → logprob: -16.12549591064453
    6. '(Max' → logprob: -16.50049591064453
    7. '(MAX' → logprob: -16.62549591064453
    8. '(
' → logprob: -16.75049591064453
    9. ',max' → logprob: -17.25049591064453
    10. ' max' → logprob: -18.62549591064453

Token 231: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.4391956685576588e-05
    2. 'len' → logprob: -11.500024795532227
    3. 'max' → logprob: -11.875024795532227
    4. '(max' → logprob: -12.125024795532227
    5. '(_' → logprob: -14.500024795532227
    6. '_max' → logprob: -14.875024795532227
    7. 'Len' → logprob: -15.125024795532227
    8. '_LEN' → logprob: -15.375024795532227
    9. '(len' → logprob: -16.000024795532227
    10. ',_' → logprob: -16.000024795532227

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003725138260051608
    2. '(max' → logprob: -5.878725051879883
    3. ',max' → logprob: -7.003725051879883
    4. '(' → logprob: -12.003725051879883
    5. 'max' → logprob: -12.378725051879883
    6. ' ,' → logprob: -14.003725051879883
    7. ' max' → logprob: -16.128725051879883
    8. ')' → logprob: -17.128725051879883
    9. '=max' → logprob: -17.503725051879883
    10. '[max' → logprob: -17.753725051879883

Token 233: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.048587486147880554
    2. ' count' → logprob: -3.0485875606536865
    3. '(count' → logprob: -17.298587799072266
    4. ' ' → logprob: -17.423587799072266
    5. '[count' → logprob: -17.798587799072266
    6. 'max' → logprob: -18.048587799072266
    7. ')' → logprob: -19.048587799072266
    8. '	count' → logprob: -19.173587799072266
    9. '.count' → logprob: -19.673587799072266
    10. '$count' → logprob: -19.673587799072266

Token 234: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4076170325279236
    2. ')' → logprob: -1.4076170921325684
    3. '           ' → logprob: -2.4076170921325684
    4. '               ' → logprob: -12.40761661529541
    5. ')
' → logprob: -12.53261661529541
    6. ' )
' → logprob: -13.65761661529541
    7. ')

' → logprob: -14.28261661529541
    8. '       ' → logprob: -14.53261661529541
    9. ' )' → logprob: -15.03261661529541
    10. '          ' → logprob: -15.78261661529541

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.309382373117842e-05
    2. ' else' → logprob: -10.750033378601074
    3. 'else' → logprob: -11.375033378601074
    4. '          ' → logprob: -16.750032424926758
    5. '       ' → logprob: -17.250032424926758
    6. '		' → logprob: -17.875032424926758
    7. '   ' → logprob: -18.250032424926758
    8. '               ' → logprob: -18.625032424926758
    9. '         ' → logprob: -18.625032424926758
    10. '<|end|>' → logprob: -18.875032424926758

Token 236: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20143848657608032
    2. 'else' (adapté à ' else') → logprob: -1.7014384269714355
    3. '           ' → logprob: -10.826438903808594
    4. '               ' → logprob: -12.326438903808594
    5. '       ' → logprob: -14.326438903808594
    6. '   ' → logprob: -15.826438903808594
    7. '	else' → logprob: -16.826438903808594
    8. '
' → logprob: -16.951438903808594
    9. '```' → logprob: -17.201438903808594
    10. ' ' → logprob: -18.701438903808594

Token 237: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15099765360355377
    2. ':' → logprob: -2.0259976387023926
    3. ':
' → logprob: -5.025997638702393
    4. ' =' → logprob: -7.025997638702393
    5. '=' → logprob: -7.400997638702393
    6. '           ' → logprob: -9.02599811553955
    7. '                   ' → logprob: -10.40099811553955
    8. ' :' → logprob: -11.15099811553955
    9. '              ' → logprob: -11.15099811553955
    10. '                ' → logprob: -11.27599811553955

Token 238: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26936179399490356
    2. ' count' → logprob: -2.019361734390259
    3. 'count' → logprob: -2.269361734390259
    4. '           ' → logprob: -12.39436149597168
    5. '0' → logprob: -12.76936149597168
    6. ' ' → logprob: -13.14436149597168
    7. '              ' → logprob: -13.39436149597168
    8. '	count' → logprob: -14.01936149597168
    9. '   ' → logprob: -14.14436149597168
    10. '                ' → logprob: -14.39436149597168

Token 239: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.20158007740974426
    2. ' count' → logprob: -1.7015800476074219
    3. '               ' → logprob: -8.701580047607422
    4. '                   ' → logprob: -16.076580047607422
    5. ' ' → logprob: -16.201580047607422
    6. '           ' → logprob: -16.701580047607422
    7. '	count' → logprob: -16.826580047607422
    8. '                ' → logprob: -16.951580047607422
    9. '0' → logprob: -17.076580047607422
    10. ' ' → logprob: -17.951580047607422

Token 240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132641315460205
    2. ' =' → logprob: -1.3132641315460205
    3. '               ' → logprob: -13.063263893127441
    4. '           ' → logprob: -16.313264846801758
    5. '                   ' → logprob: -16.563264846801758
    6. ' ' → logprob: -16.813264846801758
    7. '                ' → logprob: -16.938264846801758
    8. '   ' → logprob: -17.438264846801758
    9. ' ' → logprob: -17.438264846801758
    10. ' =
' → logprob: -18.438264846801758

Token 241: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04299977421760559
    2. ' ' → logprob: -3.167999744415283
    3. ' ' → logprob: -15.293000221252441
    4. '   ' → logprob: -16.042999267578125
    5. '               ' → logprob: -16.417999267578125
    6. '           ' → logprob: -17.292999267578125
    7. '```' → logprob: -17.292999267578125
    8. '  ' → logprob: -17.855499267578125
    9. '1' → logprob: -18.167999267578125
    10. '
' → logprob: -18.480499267578125

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.3750057220459
    4. '
' → logprob: -21.0000057220459
    5. '       ' → logprob: -21.2500057220459
    6. '               ' → logprob: -21.3750057220459
    7. '  ' → logprob: -21.5000057220459
    8. '           ' → logprob: -21.5000057220459
    9. '```' → logprob: -21.5000057220459
    10. '۰' → logprob: -21.7500057220459

Token 243: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.000473091087769717
    2. '
' → logprob: -8.250473022460938
    3. '   ' → logprob: -8.625473022460938
    4. '   
' → logprob: -11.625473022460938
    5. '    
    
' → logprob: -11.875473022460938
    6. '  
' → logprob: -12.375473022460938
    7. '
    
' → logprob: -12.375473022460938
    8. '#' → logprob: -13.000473022460938
    9. '        
' → logprob: -13.125473022460938
    10. ' 
' → logprob: -13.750473022460938

Token 244: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.049826398491859436
    2. '   ' → logprob: -3.0498263835906982
    3. '    
' → logprob: -6.924826622009277
    4. '
' → logprob: -8.424826622009277
    5. '```' → logprob: -10.674826622009277
    6. ' #' → logprob: -12.049826622009277
    7. '  
' → logprob: -12.424826622009277
    8. '   
' → logprob: -14.174826622009277
    9. '``' → logprob: -14.549826622009277
    10. '#
' → logprob: -14.924826622009277

Token 245: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.00014442270912695676
    2. '   ' → logprob: -8.875144004821777
    3. '
' → logprob: -13.125144004821777
    4. 'for' → logprob: -13.375144004821777
    5. ' #' → logprob: -14.875144004821777
    6. '    
' → logprob: -15.125144004821777
    7. '```' → logprob: -15.250144004821777
    8. '#
' → logprob: -16.875144958496094
    9. '  ' → logprob: -17.625144958496094
    10. ' ' → logprob: -17.875144958496094

Token 246: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3906009793281555
    2. 'V' → logprob: -1.1406009197235107
    3. ' #' → logprob: -7.01560115814209
    4. ' Vér' → logprob: -7.14060115814209
    5. 'Diagonal' → logprob: -7.26560115814209
    6. 'Di' → logprob: -7.39060115814209
    7. 'for' → logprob: -7.89060115814209
    8. 'Verification' → logprob: -9.26560115814209
    9. 'di' → logprob: -9.64060115814209
    10. 'v' → logprob: -10.39060115814209

Token 247: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.00011486753646750003
    2. '#' → logprob: -9.750114440917969
    3. 'ication' → logprob: -10.375114440917969
    4. 'if' → logprob: -11.375114440917969
    5. 'IFICATION' → logprob: -12.000114440917969
    6. 'fic' → logprob: -12.375114440917969
    7. 'ifi' → logprob: -14.000114440917969
    8. '```' → logprob: -14.500114440917969
    9. '_' → logprob: -14.875114440917969
    10. 'f' → logprob: -15.000114440917969

Token 248: ' diagon' (ID: 146014)
  Prédit: ' diagon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diagon' → logprob: -0.0810137540102005
    2. 'di' → logprob: -3.2060136795043945
    3. ' des' → logprob: -3.7060136795043945
    4. ' diagonal' → logprob: -4.5810136795043945
    5. '_di' → logprob: -7.3310136795043945
    6. 'des' → logprob: -7.5810136795043945
    7. '#' → logprob: -7.8310136795043945
    8. 'diag' → logprob: -8.331013679504395
    9. ' di' → logprob: -8.956013679504395
    10. ' #' → logprob: -9.456013679504395

Token 249: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0003986144147347659
    2. 'ales' → logprob: -7.875398635864258
    3. 'al' → logprob: -11.625398635864258
    4. 'але' → logprob: -12.750398635864258
    5. '
' → logprob: -12.875398635864258
    6. '#' → logprob: -14.125398635864258
    7. 'on' → logprob: -14.250398635864258
    8. '

' → logprob: -15.000398635864258
    9. 'nale' → logprob: -15.125398635864258
    10. '```' → logprob: -15.125398635864258

Token 250: ' descend' (ID: 47877)
  Prédit: ' principale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' principale' → logprob: -0.12262247502803802
    2. ' for' → logprob: -3.247622489929199
    3. 'for' → logprob: -3.997622489929199
    4. ' principal' → logprob: -4.372622489929199
    5. ' \' → logprob: -4.997622489929199
    6. ' (' → logprob: -5.122622489929199
    7. 'from' → logprob: -5.122622489929199
    8. 'principal' → logprob: -5.247622489929199
    9. ' from' → logprob: -5.497622489929199
    10. '1' → logprob: -5.872622489929199

Token 251: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0006402421277016401
    2. 'antes' → logprob: -7.500640392303467
    3. '#' → logprob: -10.500639915466309
    4. 'ant' → logprob: -10.750639915466309
    5. 'ente' → logprob: -11.375639915466309
    6. 's' → logprob: -12.250639915466309
    7. '
' → logprob: -12.875639915466309
    8. '   ' → logprob: -12.875639915466309
    9. 'r' → logprob: -13.000639915466309
    10. ']' → logprob: -13.000639915466309

Token 252: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6050616502761841
    2. ' for' → logprob: -1.105061650276184
    3. '   ' → logprob: -2.1050615310668945
    4. ' (' → logprob: -8.355061531066895
    5. '
' → logprob: -8.480061531066895
    6. ',' → logprob: -9.105061531066895
    7. '\' → logprob: -9.605061531066895
    8. '#' → logprob: -9.730061531066895
    9. '\
' → logprob: -9.855061531066895
    10. ':' → logprob: -10.480061531066895

Token 253: 'de' (ID: 613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027374951168894768
    2. ' for' → logprob: -3.6523749828338623
    3. ')' → logprob: -7.902374744415283
    4. '\' → logprob: -8.277375221252441
    5. 'range' → logprob: -8.902375221252441
    6. 'i' → logprob: -9.277375221252441
    7. '#' → logprob: -9.652375221252441
    8. ' i' → logprob: -10.527375221252441
    9. ' range' → logprob: -10.777375221252441
    10. 'def' → logprob: -11.027375221252441

Token 254: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.17668315768241882
    2. 'g' → logprob: -2.176683187484741
    3. 'i' → logprob: -3.676683187484741
    4. 'la' → logprob: -4.176682949066162
    5. '0' → logprob: -6.176682949066162
    6. 'l' → logprob: -6.426682949066162
    7. '(i' → logprob: -6.551682949066162
    8. 'coin' → logprob: -7.426682949066162
    9. ')' → logprob: -7.801682949066162
    10. '(' → logprob: -8.17668342590332

Token 255: '-g' (ID: 6559)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.05854160711169243
    2. 'g' → logprob: -3.4335415363311768
    3. ' à' → logprob: -4.308541774749756
    4. '   ' → logprob: -5.183541774749756
    5. 'en' → logprob: -5.683541774749756
    6. ' gauche' → logprob: -6.808541774749756
    7. '```' → logprob: -7.433541774749756
    8. 'dro' → logprob: -9.058541297912598
    9. '-à' → logprob: -9.558541297912598
    10. ' ' → logprob: -10.558541297912598

Token 256: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.20531943440437317
    2. 'à' → logprob: -1.7053194046020508
    3. 'a' → logprob: -5.830319404602051
    4. 'au' → logprob: -7.955319404602051
    5. '#' → logprob: -8.58031940460205
    6. ' à' → logprob: -9.58031940460205
    7. 'À' → logprob: -9.58031940460205
    8. '```' → logprob: -9.70531940460205
    9. '`' → logprob: -10.95531940460205
    10. '=' → logprob: -11.20531940460205

Token 257: ' vers' (ID: 3640)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5262850522994995
    2. 'à' → logprob: -0.9012850522994995
    3. ' vers' → logprob: -6.526285171508789
    4. ' ' → logprob: -7.026285171508789
    5. '   ' → logprob: -8.276285171508789
    6. ' ' → logprob: -8.401285171508789
    7. ''à' → logprob: -9.401285171508789
    8. 'vers' → logprob: -9.901285171508789
    9. ' en' → logprob: -10.026285171508789
    10. ')' → logprob: -10.276285171508789

Token 258: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.00018935515254270285
    2. 'b' → logprob: -9.125189781188965
    3. ' bas' → logprob: -9.875189781188965
    4. 'le' → logprob: -10.750189781188965
    5. 'en' → logprob: -12.625189781188965
    6. 'la' → logprob: -14.250189781188965
    7. ' ' → logprob: -14.250189781188965
    8. '_bas' → logprob: -14.375189781188965
    9. 'bottom' → logprob: -14.625189781188965
    10. ' ' → logprob: -14.750189781188965

Token 259: '-dro' (ID: 102350)
  Prédit: '-dro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dro' → logprob: -0.012597242370247841
    2. '-d' → logprob: -5.13759708404541
    3. 'dro' → logprob: -5.13759708404541
    4. '-' → logprob: -7.63759708404541
    5. ' droite' → logprob: -9.13759708404541
    6. '   ' → logprob: -9.13759708404541
    7. 'd' → logprob: -9.76259708404541
    8. ' ' → logprob: -12.38759708404541
    9. 'à' → logprob: -12.38759708404541
    10. '-à' → logprob: -12.63759708404541

Token 260: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.00010020548506872728
    2. 'it' → logprob: -9.875100135803223
    3. 'te' → logprob: -10.250100135803223
    4. 'i' → logprob: -12.250100135803223
    5. 'îte' → logprob: -13.375100135803223
    6. ')' → logprob: -14.125100135803223
    7. '   ' → logprob: -14.375100135803223
    8. 'ate' → logprob: -14.375100135803223
    9. '
' → logprob: -14.500100135803223
    10. '#' → logprob: -14.625100135803223

Token 261: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14609220623970032
    2. ')' → logprob: -2.021092176437378
    3. '   ' → logprob: -5.896092414855957
    4. '):
' → logprob: -8.146092414855957
    5. ' )
' → logprob: -8.271092414855957
    6. ')

' → logprob: -10.146092414855957
    7. ' )' → logprob: -10.646092414855957
    8. '):' → logprob: -11.021092414855957
    9. ',' → logprob: -11.271092414855957
    10. ')
' → logprob: -11.521092414855957

Token 262: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22670878469944
    2. '
' → logprob: -2.4767088890075684
    3. ' for' → logprob: -2.7267088890075684
    4. '   ' → logprob: -2.9767088890075684
    5. '    
' → logprob: -6.226708889007568
    6. '  
' → logprob: -7.851708889007568
    7. '   
' → logprob: -10.10170841217041
    8. ' 
' → logprob: -11.60170841217041
    9. '\n' → logprob: -11.97670841217041
    10. '	for' → logprob: -12.60170841217041

Token 263: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08030211925506592
    2. ' for' → logprob: -2.5803022384643555
    3. '   ' → logprob: -6.5803022384643555
    4. '
' → logprob: -10.705302238464355
    5. '    
' → logprob: -14.205302238464355
    6. '	for' → logprob: -15.580302238464355
    7. 'i' → logprob: -15.830302238464355
    8. '```' → logprob: -15.955302238464355
    9. ' ' → logprob: -16.33030128479004
    10. ' 
' → logprob: -16.58030128479004

Token 264: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003721622342709452
    2. ' for' → logprob: -8.000371932983398
    3. 'dire' → logprob: -10.750371932983398
    4. '   ' → logprob: -11.375371932983398
    5. 'direction' → logprob: -13.750371932983398
    6. 'di' → logprob: -13.750371932983398
    7. 'i' → logprob: -14.000371932983398
    8. 'd' → logprob: -15.500371932983398
    9. 'dx' → logprob: -15.750371932983398
    10. 'dir' → logprob: -15.750371932983398

Token 265: ' parc' (ID: 22138)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5234552621841431
    2. 'for' → logprob: -0.8984552621841431
    3. 'def' → logprob: -9.523455619812012
    4. '#' → logprob: -10.273455619812012
    5. 's' → logprob: -10.398455619812012
    6. ' ' → logprob: -10.523455619812012
    7. ' part' → logprob: -10.898455619812012
    8. ')' → logprob: -10.898455619812012
    9. ' range' → logprob: -11.273455619812012
    10. ' in' → logprob: -11.773455619812012

Token 266: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.007759003899991512
    2. 'ours' → logprob: -5.257759094238281
    3. 'oure' → logprob: -6.007759094238281
    4. 'orre' → logprob: -10.632759094238281
    5. 'our' → logprob: -11.132759094238281
    6. '_' → logprob: -12.382759094238281
    7. 'ourse' → logprob: -12.632759094238281
    8. '
' → logprob: -12.882759094238281
    9. 'court' → logprob: -12.882759094238281
    10. '#' → logprob: -13.132759094238281

Token 267: ' toutes' (ID: 17502)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.4673880338668823
    2. 'i' → logprob: -2.092388153076172
    3. 'for' → logprob: -2.467388153076172
    4. ' les' → logprob: -2.467388153076172
    5. 'la' → logprob: -4.092388153076172
    6. ' toutes' → logprob: -4.467388153076172
    7. ' i' → logprob: -5.092388153076172
    8. 'k' → logprob: -5.092388153076172
    9. 't' → logprob: -5.342388153076172
    10. 'd' → logprob: -5.467388153076172

Token 268: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4734707474708557
    2. 'les' → logprob: -1.223470687866211
    3. 'i' → logprob: -2.723470687866211
    4. ' i' → logprob: -4.223470687866211
    5. 'l' → logprob: -6.848470687866211
    6. ' ' → logprob: -7.223470687866211
    7. '(i' → logprob: -8.723470687866211
    8. '   ' → logprob: -9.348470687866211
    9. ' la' → logprob: -9.473470687866211
    10. 's' → logprob: -9.723470687866211

Token 269: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.18368186056613922
    2. 'i' → logprob: -2.6836819648742676
    3. 'l' → logprob: -3.3086819648742676
    4. 'positions' → logprob: -3.8086819648742676
    5. ' diagon' → logprob: -4.308681964874268
    6. 'poss' → logprob: -4.558681964874268
    7. 'd' → logprob: -5.558681964874268
    8. 'diag' → logprob: -5.808681964874268
    9. 's' → logprob: -6.183681964874268
    10. 'dé' → logprob: -6.433681964874268

Token 270: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0005436192732304335
    2. 'es' → logprob: -8.125543594360352
    3. 'ale' → logprob: -9.500543594360352
    4. 'als' → logprob: -9.625543594360352
    5. 'a' → logprob: -10.375543594360352
    6. 'o' → logprob: -11.000543594360352
    7. 'al' → logprob: -11.250543594360352
    8. '```' → logprob: -11.750543594360352
    9. 'g' → logprob: -12.375543594360352
    10. 'aux' → logprob: -12.750543594360352

Token 271: ' possibles' (ID: 97753)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.799462914466858
    2. ' part' → logprob: -1.799462914466858
    3. 'part' → logprob: -2.1744627952575684
    4. 'de' → logprob: -2.1744627952575684
    5. ' comm' → logprob: -2.1744627952575684
    6. ' qui' → logprob: -2.9244627952575684
    7. 'comm' → logprob: -2.9244627952575684
    8. ' starting' → logprob: -3.2994627952575684
    9. ',' → logprob: -3.4244627952575684
    10. 'd' → logprob: -4.299462795257568

Token 272: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8058732748031616
    2. ' for' → logprob: -1.1808732748031616
    3. 'for' → logprob: -1.4308732748031616
    4. ',' → logprob: -5.680873394012451
    5. '
' → logprob: -6.680873394012451
    6. 'from' → logprob: -7.180873394012451
    7. ':' → logprob: -8.180872917175293
    8. '#' → logprob: -8.430872917175293
    9. '    
' → logprob: -8.555872917175293
    10. ' i' → logprob: -8.555872917175293

Token 273: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14361630380153656
    2. 'la' → logprob: -2.893616199493408
    3. 'le' → logprob: -3.268616199493408
    4. 'l' → logprob: -4.393616199493408
    5. ' la' → logprob: -5.018616199493408
    6. ' i' → logprob: -5.143616199493408
    7. 'les' → logprob: -5.643616199493408
    8. ' le' → logprob: -5.768616199493408
    9. 'len' → logprob: -5.893616199493408
    10. 'k' → logprob: -6.143616199493408

Token 274: ' différence' (ID: 79196)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32648929953575134
    2. 'long' → logprob: -2.576489210128784
    3. 'ligne' → logprob: -2.701489210128784
    4. 'prem' → logprob: -3.701489210128784
    5. 'diff' → logprob: -3.701489210128784
    6. 'part' → logprob: -3.826489210128784
    7. 'dé' → logprob: -4.201489448547363
    8. 's' → logprob: -4.201489448547363
    9. 'di' → logprob: -4.576489448547363
    10. '1' → logprob: -5.201489448547363

Token 275: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.202040672302246
    2. 'i' → logprob: -1.327040672302246
    3. ' de' → logprob: -1.702040672302246
    4. 'd' → logprob: -2.327040672302246
    5. ' d' → logprob: -3.202040672302246
    6. ' entre' → logprob: -3.202040672302246
    7. 'de' → logprob: -3.452040672302246
    8. ' =' → logprob: -4.702040672302246
    9. '   ' → logprob: -4.952040672302246
    10. '(i' → logprob: -5.202040672302246

Token 276: '-j' (ID: 19720)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5253809690475464
    2. '-' → logprob: -0.9003809690475464
    3. '-j' → logprob: -6.275381088256836
    4. '>=' → logprob: -9.275381088256836
    5. ' ' → logprob: -9.525381088256836
    6. '<=' → logprob: -10.400381088256836
    7. ' >=' → logprob: -11.150381088256836
    8. '==' → logprob: -11.400381088256836
    9. '   ' → logprob: -11.400381088256836
    10. 's' → logprob: -11.775381088256836

Token 277: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5449533462524414
    2. 'est' → logprob: -1.0449533462524414
    3. '<=' → logprob: -3.1699533462524414
    4. ' <=' → logprob: -4.919953346252441
    5. '>=' → logprob: -5.044953346252441
    6. ' is' → logprob: -5.544953346252441
    7. '==' → logprob: -6.169953346252441
    8. '=' → logprob: -6.294953346252441
    9. ' >=' → logprob: -7.294953346252441
    10. 'is' → logprob: -7.419953346252441

Token 278: ' constante' (ID: 49652)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.4613485634326935
    2. 'entre' → logprob: -2.211348533630371
    3. 'com' → logprob: -2.961348533630371
    4. '0' → logprob: -3.211348533630371
    5. 'possible' → logprob: -3.336348533630371
    6. ' constante' → logprob: -3.461348533630371
    7. ' ' → logprob: -4.586348533630371
    8. ' const' → logprob: -4.836348533630371
    9. 'constant' → logprob: -4.836348533630371
    10. 'between' → logprob: -4.836348533630371

Token 279: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07364735752344131
    2. ' for' → logprob: -3.5736472606658936
    3. '
' → logprob: -3.6986472606658936
    4. 'for' → logprob: -4.073647499084473
    5. '    
' → logprob: -7.448647499084473
    6. ':' → logprob: -8.823647499084473
    7. ',' → logprob: -8.823647499084473
    8. '.' → logprob: -9.698647499084473
    9. '.
' → logprob: -9.823647499084473
    10. '  
' → logprob: -10.323647499084473

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2417021542787552
    2. ' for' → logprob: -2.116702079772949
    3. 'for' → logprob: -2.366702079772949
    4. '
' → logprob: -8.49170207977295
    5. '    
' → logprob: -8.49170207977295
    6. '```' → logprob: -10.61670207977295
    7. 'from' → logprob: -11.49170207977295
    8. ',' → logprob: -11.86670207977295
    9. '	for' → logprob: -11.86670207977295
    10. '  
' → logprob: -11.86670207977295

Token 281: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.161644846200943
    2. '   ' → logprob: -2.53664493560791
    3. ' for' → logprob: -2.66164493560791
    4. 'diff' → logprob: -9.03664493560791
    5. 'start' → logprob: -10.16164493560791
    6. 'i' → logprob: -10.66164493560791
    7. 'offset' → logprob: -10.78664493560791
    8. '#' → logprob: -10.91164493560791
    9. '	for' → logprob: -11.41164493560791
    10. 'from' → logprob: -11.53664493560791

Token 282: ' diff' (ID: 8868)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.26753875613212585
    2. 'diff' → logprob: -1.5175387859344482
    3. 'k' → logprob: -4.642538547515869
    4. ' diff' → logprob: -6.267538547515869
    5. ' d' → logprob: -6.392538547515869
    6. 'di' → logprob: -7.392538547515869
    7. 'offset' → logprob: -7.392538547515869
    8. 'delta' → logprob: -7.517538547515869
    9. 'diag' → logprob: -8.892539024353027
    10. 'i' → logprob: -9.142539024353027

Token 283: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06199502944946289
    2. 'in' → logprob: -2.811995029449463
    3. 's' → logprob: -11.936994552612305
    4. ' ' → logprob: -12.061994552612305
    5. 'range' → logprob: -12.311994552612305
    6. 'n' → logprob: -13.061994552612305
    7. ' i' → logprob: -13.436994552612305
    8. 'd' → logprob: -13.686994552612305
    9. ')' → logprob: -14.311994552612305
    10. '```' → logprob: -14.811994552612305

Token 284: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25263306498527527
    2. ' range' → logprob: -1.5026330947875977
    3. '-range' → logprob: -7.377633094787598
    4. '-(' → logprob: -10.877633094787598
    5. '-' → logprob: -11.002633094787598
    6. ' -' → logprob: -11.127633094787598
    7. '   ' → logprob: -11.752633094787598
    8. ' ' → logprob: -11.877633094787598
    9. '
' → logprob: -12.377633094787598
    10. '	range' → logprob: -12.627633094787598

Token 285: '(-' (ID: 8087)
  Prédit: '-('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-(' → logprob: -0.5982170701026917
    2. '(-' → logprob: -1.0982170104980469
    3. '-n' → logprob: -2.848217010498047
    4. '(-(' → logprob: -3.223217010498047
    5. '-' → logprob: -4.098217010498047
    6. ' -' → logprob: -6.598217010498047
    7. '   ' → logprob: -7.973217010498047
    8. '(' → logprob: -7.973217010498047
    9. ' -(' → logprob: -8.848217010498047
    10. '  ' → logprob: -10.223217010498047

Token 286: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04859895631670952
    2. '(n' → logprob: -3.0485990047454834
    3. ' n' → logprob: -11.923599243164062
    4. ' (' → logprob: -13.048599243164062
    5. '
' → logprob: -13.298599243164062
    6. '(' → logprob: -14.798599243164062
    7. '{' → logprob: -14.923599243164062
    8. '   ' → logprob: -16.048599243164062
    9. '[n' → logprob: -16.423599243164062
    10. ')n' → logprob: -16.673599243164062

Token 287: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38467153906822205
    2. '(n' → logprob: -1.3846715688705444
    3. '(' → logprob: -3.509671449661255
    4. 'n' → logprob: -3.634671449661255
    5. ' +' → logprob: -4.384671688079834
    6. ' (' → logprob: -9.884671211242676
    7. 'plus' → logprob: -10.134671211242676
    8. '1' → logprob: -11.009671211242676
    9. '+n' → logprob: -11.134671211242676
    10. '2' → logprob: -12.384671211242676

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005998577689751983
    2. 'n' → logprob: -7.5005998611450195
    3. '(n' → logprob: -10.37559986114502
    4. '(' → logprob: -11.62559986114502
    5. ' ' → logprob: -12.50059986114502
    6. ' n' → logprob: -13.00059986114502
    7. '
' → logprob: -15.12559986114502
    8. ' (' → logprob: -15.25059986114502
    9. '```' → logprob: -15.62559986114502
    10. '{' → logprob: -16.625598907470703

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009506382048130035
    2. ' ,' → logprob: -5.0095062255859375
    3. ',n' → logprob: -5.8845062255859375
    4. ',
' → logprob: -12.884506225585938
    5. 'n' → logprob: -13.509506225585938
    6. '   ' → logprob: -14.634506225585938
    7. ' n' → logprob: -15.759506225585938
    8. '
' → logprob: -15.759506225585938
    9. ' ,
' → logprob: -16.134506225585938
    10. '

' → logprob: -17.884506225585938

Token 290: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.860340752406046e-05
    2. ' n' → logprob: -9.7500581741333
    3. '
' → logprob: -15.5000581741333
    4. '   ' → logprob: -17.375059127807617
    5. '	n' → logprob: -17.625059127807617
    6. '+n' → logprob: -20.750059127807617
    7. ' ' → logprob: -21.000059127807617
    8. '```' → logprob: -21.250059127807617
    9. ')n' → logprob: -21.375059127807617
    10. '_n' → logprob: -21.500059127807617

Token 291: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3888484835624695
    2. '):' → logprob: -1.1388485431671143
    3. '+' → logprob: -6.263848304748535
    4. ' ):' → logprob: -10.388848304748535
    5. ' ):
' → logprob: -11.513848304748535
    6. '):
' → logprob: -12.013848304748535
    7. ' +' → logprob: -12.388848304748535
    8. ')' → logprob: -12.513848304748535
    9. ',' → logprob: -12.638848304748535
    10. '   ' → logprob: -12.763848304748535

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016952957957983017
    2. '   ' → logprob: -6.626695156097412
    3. 'count' → logprob: -8.00169563293457
    4. ' count' → logprob: -11.37669563293457
    5. ':' → logprob: -12.00169563293457
    6. '        
' → logprob: -12.50169563293457
    7. '
' → logprob: -12.87669563293457
    8. ',' → logprob: -13.00169563293457
    9. '```' → logprob: -13.25169563293457
    10. '    
' → logprob: -13.50169563293457

Token 293: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0382470041513443
    2. '       ' → logprob: -3.2882471084594727
    3. '   ' → logprob: -9.038247108459473
    4. ' count' → logprob: -9.913247108459473
    5. 'i' → logprob: -10.538247108459473
    6. '           ' → logprob: -12.163247108459473
    7. '```' → logprob: -13.163247108459473
    8. ' ' → logprob: -13.538247108459473
    9. 'counts' → logprob: -14.038247108459473
    10. ' i' → logprob: -14.913247108459473

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687655329704285
    2. ' =' → logprob: -1.1368765830993652
    3. '   ' → logprob: -12.261876106262207
    4. ' ' → logprob: -14.511876106262207
    5. '    ' → logprob: -15.761876106262207
    6. '       ' → logprob: -16.386877059936523
    7. '```' → logprob: -16.636877059936523
    8. '0' → logprob: -17.636877059936523
    9. '  ' → logprob: -17.886877059936523
    10. '        ' → logprob: -18.136877059936523

Token 295: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013266648165881634
    2. ' ' → logprob: -6.626326560974121
    3. '   ' → logprob: -14.251326560974121
    4. '       ' → logprob: -17.001327514648438
    5. '=' → logprob: -17.876327514648438
    6. '  ' → logprob: -18.501327514648438
    7. '           ' → logprob: -19.501327514648438
    8. '```' → logprob: -19.751327514648438
    9. ' ' → logprob: -19.751327514648438
    10. '    ' → logprob: -19.876327514648438

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.250011444091797
    4. '۰' → logprob: -19.625011444091797
    5. '=' → logprob: -20.250011444091797
    6. '```' → logprob: -20.375011444091797
    7. '       ' → logprob: -20.500011444091797
    8. '  ' → logprob: -20.625011444091797
    9. '０' → logprob: -20.750011444091797
    10. 'O' → logprob: -21.750011444091797

Token 297: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007388093508780003
    2. 'for' → logprob: -5.007388114929199
    3. ' for' → logprob: -7.382388114929199
    4. 'i' → logprob: -10.5073881149292
    5. '        
' → logprob: -11.1323881149292
    6. '
' → logprob: -12.2573881149292
    7. '   ' → logprob: -14.0073881149292
    8. ' i' → logprob: -14.2573881149292
    9. '           ' → logprob: -14.3823881149292
    10. 'x' → logprob: -15.3823881149292

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011274518445134163
    2. 'for' → logprob: -4.511274337768555
    3. ' for' → logprob: -8.511274337768555
    4. '        
' → logprob: -11.136274337768555
    5. '   ' → logprob: -12.011274337768555
    6. 'i' → logprob: -12.511274337768555
    7. '
' → logprob: -15.011274337768555
    8. '           ' → logprob: -15.386274337768555
    9. '```' → logprob: -15.386274337768555
    10. '      ' → logprob: -16.386274337768555

Token 299: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018962396308779716
    2. 'i' → logprob: -4.018962383270264
    3. '       ' → logprob: -7.393962383270264
    4. 'start' → logprob: -9.018962860107422
    5. 'prev' → logprob: -9.768962860107422
    6. ' for' → logprob: -11.018962860107422
    7. 'x' → logprob: -14.393962860107422
    8. '        
' → logprob: -14.393962860107422
    9. 'previous' → logprob: -14.893962860107422
    10. '           ' → logprob: -15.018962860107422

Token 300: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03853346034884453
    2. 'i' → logprob: -3.2885334491729736
    3. 'start' → logprob: -7.788533687591553
    4. '   ' → logprob: -10.038533210754395
    5. ' for' → logprob: -10.913533210754395
    6. '       ' → logprob: -11.663533210754395
    7. 'prev' → logprob: -12.663533210754395
    8. '        
' → logprob: -14.163533210754395
    9. ' i' → logprob: -14.413533210754395
    10. '    
' → logprob: -14.538533210754395

Token 301: ' valide' (ID: 137323)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6988772749900818
    2. ',' → logprob: -1.1988773345947266
    3. ' =' → logprob: -1.6988773345947266
    4. ' in' → logprob: -4.948877334594727
    5. 'for' → logprob: -5.073877334594727
    6. ' for' → logprob: -5.573877334594727
    7. 'in' → logprob: -7.823877334594727
    8. ' ,' → logprob: -8.573877334594727
    9. 'max' → logprob: -8.573877334594727
    10. '   ' → logprob: -8.948877334594727

Token 302: ' entre' (ID: 3853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5544136166572571
    2. ' =' → logprob: -1.4294135570526123
    3. ' in' → logprob: -2.1794135570526123
    4. ' for' → logprob: -3.1794135570526123
    5. 'for' → logprob: -3.6794135570526123
    6. 'in' → logprob: -5.679413795471191
    7. ',' → logprob: -6.429413795471191
    8. 'range' → logprob: -7.554413795471191
    9. ' range' → logprob: -7.679413795471191
    10. '   ' → logprob: -9.929413795471191

Token 303: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002000607782974839
    2. '0' → logprob: -6.50200080871582
    3. ' max' → logprob: -7.62700080871582
    4. '(max' → logprob: -12.12700080871582
    5. '   ' → logprob: -13.12700080871582
    6. '	max' → logprob: -14.00200080871582
    7. '[max' → logprob: -14.00200080871582
    8. ' ' → logprob: -14.12700080871582
    9. '=max' → logprob: -14.12700080871582
    10. ',max' → logprob: -15.50200080871582

Token 304: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2014765739440918
    2. '0' → logprob: -1.7014765739440918
    3. ' max' → logprob: -9.82647705078125
    4. '(max' → logprob: -12.20147705078125
    5. '[max' → logprob: -13.32647705078125
    6. ' ' → logprob: -13.82647705078125
    7. '	max' → logprob: -14.20147705078125
    8. '=max' → logprob: -15.07647705078125
    9. ',max' → logprob: -15.45147705078125
    10. '```' → logprob: -16.45147705078125

Token 305: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5646804571151733
    2. 'and' → logprob: -0.9396804571151733
    3. 'max' → logprob: -3.564680576324463
    4. ',' → logprob: -5.564680576324463
    5. ' et' → logprob: -5.689680576324463
    6. ' max' → logprob: -5.814680576324463
    7. 'et' → logprob: -7.189680576324463
    8. ' ,' → logprob: -8.189680099487305
    9. '(max' → logprob: -8.189680099487305
    10. ',max' → logprob: -8.314680099487305

Token 306: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06197262182831764
    2. ' n' → logprob: -2.8119726181030273
    3. '   ' → logprob: -12.436972618103027
    4. ' ' → logprob: -14.811972618103027
    5. '	n' → logprob: -14.936972618103027
    6. '
' → logprob: -15.686972618103027
    7. '(n' → logprob: -15.686972618103027
    8. '       ' → logprob: -17.686973571777344
    9. ' ' → logprob: -17.686973571777344
    10. '    ' → logprob: -17.936973571777344

Token 307: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6325021386146545
    2. 'and' → logprob: -1.8825020790100098
    3. ' and' → logprob: -2.1325020790100098
    4. ',' → logprob: -2.3825020790100098
    5. '
' → logprob: -3.2575020790100098
    6. '       ' → logprob: -3.6325020790100098
    7. '<|end|>' → logprob: -4.75750207901001
    8. '   ' → logprob: -4.88250207901001
    9. ')' → logprob: -5.13250207901001
    10. ' -' → logprob: -5.25750207901001

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '
' → logprob: -18.0625057220459
    4. '2' → logprob: -18.1875057220459
    5. 'n' → logprob: -18.1875057220459
    6. '```' → logprob: -18.4375057220459
    7. '   ' → logprob: -18.5625057220459
    8. '１' → logprob: -19.2500057220459
    9. '۱' → logprob: -19.3750057220459
    10. '-' → logprob: -20.0000057220459

Token 309: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13966067135334015
    2. ' for' → logprob: -2.264660596847534
    3. ',' → logprob: -4.014660835266113
    4. 'for' → logprob: -5.014660835266113
    5. ' and' → logprob: -7.764660835266113
    6. '	for' → logprob: -8.639660835266113
    7. '   ' → logprob: -8.889660835266113
    8. '	' → logprob: -9.014660835266113
    9. ' =' → logprob: -9.139660835266113
    10. '        ' → logprob: -9.264660835266113

Token 310: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5745061039924622
    2. ' j' → logprob: -1.1995060443878174
    3. '       ' → logprob: -2.5745060443878174
    4. ' for' → logprob: -3.8245060443878174
    5. ' and' → logprob: -4.6995062828063965
    6. '        ' → logprob: -4.8245062828063965
    7. 'i' → logprob: -4.9495062828063965
    8. ' i' → logprob: -5.4495062828063965
    9. 'for' → logprob: -5.4495062828063965
    10. 'and' → logprob: -6.4495062828063965

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741370975971222
    2. ' =' → logprob: -0.9741370677947998
    3. '=i' → logprob: -10.599137306213379
    4. '<|end|>' → logprob: -11.224137306213379
    5. '=int' → logprob: -11.849137306213379
    6. ' ' → logprob: -13.724137306213379
    7. '<|end|>' → logprob: -13.724137306213379
    8. ')' → logprob: -13.849137306213379
    9. ',' → logprob: -13.849137306213379
    10. '=index' → logprob: -13.849137306213379

Token 312: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0033717502374202013
    2. ' i' → logprob: -6.128371715545654
    3. 'diff' → logprob: -6.753371715545654
    4. ' diff' → logprob: -11.753372192382812
    5. '
' → logprob: -12.753372192382812
    6. '   ' → logprob: -12.878372192382812
    7. '	i' → logprob: -13.503372192382812
    8. '```' → logprob: -13.628372192382812
    9. '=' → logprob: -13.878372192382812
    10. '=i' → logprob: -15.253372192382812

Token 313: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5195080041885376
    2. '-' → logprob: -1.6445080041885376
    3. ' +' → logprob: -2.144507884979248
    4. ' -' → logprob: -2.394507884979248
    5. 'diff' → logprob: -6.144507884979248
    6. '-d' → logprob: -7.019507884979248
    7. '=' → logprob: -8.519508361816406
    8. '[' → logprob: -9.019508361816406
    9. '+d' → logprob: -9.519508361816406
    10. '+j' → logprob: -9.769508361816406

Token 314: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0007191036129370332
    2. ' diff' → logprob: -7.25071907043457
    3. '(diff' → logprob: -11.87571907043457
    4. '	diff' → logprob: -13.12571907043457
    5. 'dif' → logprob: -16.25071907043457
    6. 'difference' → logprob: -16.37571907043457
    7. '.diff' → logprob: -17.37571907043457
    8. '
' → logprob: -17.37571907043457
    9. '_diff' → logprob: -17.50071907043457
    10. 'd' → logprob: -18.37571907043457

Token 315: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008897949010133743
    2. ' for' → logprob: -5.00889778137207
    3. 'for' → logprob: -6.38389778137207
    4. ',' → logprob: -9.25889778137207
    5. '<|end|>' → logprob: -9.38389778137207
    6. '           ' → logprob: -10.00889778137207
    7. '   ' → logprob: -10.13389778137207
    8. '        
' → logprob: -10.25889778137207
    9. '	' → logprob: -10.38389778137207
    10. ' ' → logprob: -10.38389778137207

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018297502538189292
    2. ' for' → logprob: -6.376829624176025
    3. 'for' → logprob: -10.126830101013184
    4. '        
' → logprob: -11.001830101013184
    5. ',' → logprob: -11.126830101013184
    6. '<|end|>' → logprob: -11.126830101013184
    7. '   ' → logprob: -11.376830101013184
    8. '           ' → logprob: -11.501830101013184
    9. '
' → logprob: -13.001830101013184
    10. '  
' → logprob: -13.126830101013184

Token 317: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16782666742801666
    2. '       ' → logprob: -1.9178266525268555
    3. ' for' → logprob: -4.9178266525268555
    4. 'i' → logprob: -8.417826652526855
    5. '   ' → logprob: -10.542826652526855
    6. ' i' → logprob: -12.292826652526855
    7. ' ' → logprob: -13.417826652526855
    8. '           ' → logprob: -13.542826652526855
    9. '	for' → logprob: -13.792826652526855
    10. '        
' → logprob: -14.667826652526855

Token 318: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25192946195602417
    2. ' i' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.50192928314209
    4. '	i' → logprob: -15.75192928314209
    5. '0' → logprob: -17.751930236816406
    6. '```' → logprob: -18.001930236816406
    7. ')i' → logprob: -18.251930236816406
    8. '_i' → logprob: -18.626930236816406
    9. 'range' → logprob: -18.751930236816406
    10. '   ' → logprob: -18.751930236816406

Token 319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048604074865579605
    2. 'in' → logprob: -3.0486040115356445
    3. ' ' → logprob: -11.423604011535645
    4. '	in' → logprob: -13.173604011535645
    5. ')' → logprob: -13.923604011535645
    6. 'range' → logprob: -14.173604011535645
    7. '<|end|>' → logprob: -14.423604011535645
    8. ' i' → logprob: -14.798604011535645
    9. '=' → logprob: -15.173604011535645
    10. '
' → logprob: -15.173604011535645

Token 320: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519291639328003
    2. ' range' → logprob: -1.5019291639328003
    3. '	range' → logprob: -16.626928329467773
    4. '(range' → logprob: -17.001928329467773
    5. ' ' → logprob: -17.126928329467773
    6. '0' → logprob: -19.126928329467773
    7. '   ' → logprob: -20.626928329467773
    8. ')' → logprob: -21.001928329467773
    9. '  ' → logprob: -21.251928329467773
    10. 'n' → logprob: -21.501928329467773

Token 321: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6018578410148621
    2. 'max' → logprob: -1.1018579006195068
    3. '(max' → logprob: -2.851857900619507
    4. '(n' → logprob: -2.851857900619507
    5. ' max' → logprob: -5.726857662200928
    6. ' n' → logprob: -7.101857662200928
    7. '(' → logprob: -8.101858139038086
    8. ' (' → logprob: -9.726858139038086
    9. '0' → logprob: -11.601858139038086
    10. '   ' → logprob: -11.601858139038086

Token 322: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6328350901603699
    2. '):' → logprob: -0.7578350901603699
    3. ')' → logprob: -9.882835388183594
    4. '   ' → logprob: -10.132835388183594
    5. '<|end|>' → logprob: -10.757835388183594
    6. ':' → logprob: -10.882835388183594
    7. ' ):' → logprob: -11.132835388183594
    8. '       ' → logprob: -11.132835388183594
    9. '):

' → logprob: -11.507835388183594
    10. ' ):
' → logprob: -11.632835388183594

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008825634606182575
    2. '	       ' → logprob: -6.008825778961182
    3. '<|end|>' → logprob: -6.258825778961182
    4. ' j' → logprob: -6.383825778961182
    5. '       ' → logprob: -6.758825778961182
    6. 'j' → logprob: -7.508825778961182
    7. ' if' → logprob: -8.383825302124023
    8. '		' → logprob: -8.883825302124023
    9. ',' → logprob: -9.008825302124023
    10. '<|end|>' → logprob: -9.008825302124023

Token 324: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.6981267929077148
    2. ' j' → logprob: -0.6981267929077148
    3. '           ' → logprob: -5.323126792907715
    4. '               ' → logprob: -9.948126792907715
    5. '	j' → logprob: -10.323126792907715
    6. ' ' → logprob: -12.948126792907715
    7. '   ' → logprob: -13.448126792907715
    8. ' ' → logprob: -13.573126792907715
    9. '            ' → logprob: -13.823126792907715
    10. '	       ' → logprob: -13.948126792907715

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313301682472229
    2. '=' → logprob: -1.313301682472229
    3. '=i' → logprob: -10.813302040100098
    4. '=int' → logprob: -11.188302040100098
    5. ' ' → logprob: -13.563302040100098
    6. ')' → logprob: -14.438302040100098
    7. '<|end|>' → logprob: -14.813302040100098
    8. '=
' → logprob: -14.938302040100098
    9. ' =)' → logprob: -15.063302040100098
    10. '=}' → logprob: -15.188302040100098

Token 326: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10020678490400314
    2. ' i' → logprob: -2.3502068519592285
    3. '	i' → logprob: -16.97520637512207
    4. ' ' → logprob: -19.10020637512207
    5. '```' → logprob: -19.22520637512207
    6. '   ' → logprob: -19.60020637512207
    7. '=i' → logprob: -19.60020637512207
    8. ' ' → logprob: -19.60020637512207
    9. '           ' → logprob: -20.10020637512207
    10. ')i' → logprob: -20.60020637512207

Token 327: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20154714584350586
    2. '-' → logprob: -1.7015471458435059
    3. '-d' → logprob: -8.951547622680664
    4. 'diff' → logprob: -13.701547622680664
    5. ' ' → logprob: -14.451547622680664
    6. '<|end|>' → logprob: -14.576547622680664
    7. '-s' → logprob: -15.076547622680664
    8. ')' → logprob: -15.326547622680664
    9. ' ' → logprob: -15.451547622680664
    10. '
' → logprob: -15.701547622680664

Token 328: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0003357006062287837
    2. ' diff' → logprob: -8.000335693359375
    3. '	diff' → logprob: -15.125335693359375
    4. '(diff' → logprob: -17.250335693359375
    5. 'dif' → logprob: -18.875335693359375
    6. 'difference' → logprob: -19.000335693359375
    7. '_diff' → logprob: -21.000335693359375
    8. '.diff' → logprob: -21.125335693359375
    9. '   ' → logprob: -21.500335693359375
    10. 'd' → logprob: -22.250335693359375

Token 329: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014399961801245809
    2. '<|end|>' → logprob: -6.876440048217773
    3. '
' → logprob: -9.251440048217773
    4. '            
' → logprob: -9.376440048217773
    5. '<|end|>' → logprob: -9.626440048217773
    6. ' if' → logprob: -9.751440048217773
    7. ' 
' → logprob: -11.251440048217773
    8. '          ' → logprob: -11.376440048217773
    9. '       ' → logprob: -11.501440048217773
    10. ' ' → logprob: -11.501440048217773

Token 330: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005459881853312254
    2. ' if' → logprob: -5.380459785461426
    3. '<|end|>' → logprob: -7.380459785461426
    4. '            
' → logprob: -10.255459785461426
    5. 'if' → logprob: -10.255459785461426
    6. ' ' → logprob: -10.380459785461426
    7. '       ' → logprob: -11.130459785461426
    8. '		' → logprob: -11.380459785461426
    9. '<|end|>' → logprob: -11.380459785461426
    10. '   ' → logprob: -11.380459785461426

Token 331: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1531829833984375
    2. 'if' (adapté à ' if') → logprob: -2.1531829833984375
    3. '           ' → logprob: -3.6531829833984375
    4. '	if' → logprob: -13.153182983398438
    5. ' ' → logprob: -13.778182983398438
    6. ' ' → logprob: -14.403182983398438
    7. '		' → logprob: -15.278182983398438
    8. '            ' → logprob: -15.403182983398438
    9. '          ' → logprob: -15.778182983398438
    10. '   ' → logprob: -16.028182983398438

Token 332: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06198852136731148
    2. ' ' → logprob: -2.811988592147827
    3. ' j' → logprob: -11.436988830566406
    4. 'j' → logprob: -12.061988830566406
    5. '           ' → logprob: -12.936988830566406
    6. ' ' → logprob: -13.686988830566406
    7. '   ' → logprob: -15.061988830566406
    8. '               ' → logprob: -15.936988830566406
    9. '  ' → logprob: -16.061988830566406
    10. '            ' → logprob: -16.311988830566406

Token 333: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023166877508629113
    2. ' ' → logprob: -8.375231742858887
    3. 'j' → logprob: -13.750231742858887
    4. ' j' → logprob: -17.12523078918457
    5. '   ' → logprob: -18.62523078918457
    6. ' ' → logprob: -19.25023078918457
    7. '           ' → logprob: -19.50023078918457
    8. '  ' → logprob: -19.50023078918457
    9. '
' → logprob: -20.25023078918457
    10. '۰' → logprob: -20.62523078918457

Token 334: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02054433710873127
    2. '<=' → logprob: -3.8955442905426025
    3. ' <' → logprob: -13.770544052124023
    4. '<' → logprob: -14.520544052124023
    5. ' ≤' → logprob: -15.145544052124023
    6. ')<=' → logprob: -15.645544052124023
    7. ' ' → logprob: -15.770544052124023
    8. 'if' → logprob: -16.395544052124023
    9. ']<=' → logprob: -17.020544052124023
    10. ' <=",' → logprob: -17.270544052124023

Token 335: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009118211455643177
    2. ' j' → logprob: -7.000911712646484
    3. 'i' → logprob: -15.750911712646484
    4. '	j' → logprob: -16.625911712646484
    5. '   ' → logprob: -17.500911712646484
    6. ' ' → logprob: -18.750911712646484
    7. '           ' → logprob: -18.875911712646484
    8. '    ' → logprob: -20.125911712646484
    9. '  ' → logprob: -20.125911712646484
    10. '$j' → logprob: -20.500911712646484

Token 336: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04100171476602554
    2. ' <' → logprob: -3.791001796722412
    3. '<n' → logprob: -4.041001796722412
    4. 'and' → logprob: -11.541001319885254
    5. ' and' → logprob: -11.791001319885254
    6. '<len' → logprob: -14.041001319885254
    7. '<N' → logprob: -14.541001319885254
    8. 'n' → logprob: -14.791001319885254
    9. '<size' → logprob: -15.166001319885254
    10. '<num' → logprob: -16.04100227355957

Token 337: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004078639671206474
    2. ' n' → logprob: -5.5040788650512695
    3. '	n' → logprob: -15.62907886505127
    4. ' ' → logprob: -17.254077911376953
    5. '   ' → logprob: -17.504077911376953
    6. ')n' → logprob: -18.879077911376953
    7. ' ' → logprob: -19.004077911376953
    8. '
' → logprob: -19.504077911376953
    9. '_n' → logprob: -19.629077911376953
    10. '```' → logprob: -20.004077911376953

Token 338: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002693482441827655
    2. 'and' → logprob: -6.6276936531066895
    3. ':
' → logprob: -7.6276936531066895
    4. ':' → logprob: -7.7526936531066895
    5. '           ' → logprob: -7.8776936531066895
    6. '               ' → logprob: -10.002693176269531
    7. '):
' → logprob: -11.377693176269531
    8. '<|end|>' → logprob: -12.377693176269531
    9. ')' → logprob: -13.252693176269531
    10. ',' → logprob: -13.377693176269531

Token 339: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002000250155106187
    2. ' if' → logprob: -6.252000331878662
    3. '                
' → logprob: -10.501999855041504
    4. '<|end|>' → logprob: -11.001999855041504
    5. '           ' → logprob: -12.126999855041504
    6. 'if' → logprob: -12.251999855041504
    7. ' and' → logprob: -12.626999855041504
    8. '              ' → logprob: -13.001999855041504
    9. ' ' → logprob: -13.001999855041504
    10. ' ' → logprob: -13.501999855041504

Token 340: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05877340957522392
    2. ' if' → logprob: -3.5587735176086426
    3. '                   ' → logprob: -3.5587735176086426
    4. '               ' → logprob: -9.183773040771484
    5. '           ' → logprob: -10.558773040771484
    6. '                 ' → logprob: -13.683773040771484
    7. '   ' → logprob: -13.808773040771484
    8. '	if' → logprob: -14.808773040771484
    9. '                ' → logprob: -15.183773040771484
    10. '                  ' → logprob: -16.058773040771484

Token 341: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.12693524360656738
    2. 'grid' → logprob: -2.1269352436065674
    3. '(grid' → logprob: -12.876935005187988
    4. '                   ' → logprob: -13.251935005187988
    5. '               ' → logprob: -13.501935005187988
    6. '	grid' → logprob: -14.251935005187988
    7. ':grid' → logprob: -15.876935005187988
    8. '_grid' → logprob: -15.876935005187988
    9. '.grid' → logprob: -16.126935958862305
    10. 'Grid' → logprob: -16.126935958862305

Token 342: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. 'i' → logprob: -14.000000953674316
    3. ' [' → logprob: -16.625001907348633
    4. '[I' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '```' → logprob: -17.500001907348633
    7. '           ' → logprob: -17.875001907348633
    8. '[int' → logprob: -18.000001907348633
    9. '[' → logprob: -18.125001907348633
    10. '               ' → logprob: -18.375001907348633

Token 343: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0016002024058252573
    2. '[j' → logprob: -6.50160026550293
    3. '[i' → logprob: -9.37660026550293
    4. '[' → logprob: -12.50160026550293
    5. ']' → logprob: -12.75160026550293
    6. ' ][' → logprob: -12.87660026550293
    7. ''][' → logprob: -13.12660026550293
    8. '"][' → logprob: -14.00160026550293
    9. ']][' → logprob: -15.00160026550293
    10. '```' → logprob: -15.87660026550293

Token 344: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.723973582556937e-05
    2. ' j' → logprob: -11.375017166137695
    3. '[j' → logprob: -12.250017166137695
    4. ']' → logprob: -15.000017166137695
    5. '][' → logprob: -15.125017166137695
    6. '```' → logprob: -16.250017166137695
    7. '   ' → logprob: -16.750017166137695
    8. ' ' → logprob: -16.750017166137695
    9. '	j' → logprob: -17.375017166137695
    10. '[' → logprob: -17.875017166137695

Token 345: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006781215779483318
    2. ']==' → logprob: -5.381781101226807
    3. ' ==' → logprob: -6.881781101226807
    4. '==' → logprob: -7.006781101226807
    5. '']' → logprob: -9.256781578063965
    6. ']=='' → logprob: -9.631781578063965
    7. ' ]' → logprob: -9.756781578063965
    8. '=='' → logprob: -13.131781578063965
    9. '']==' → logprob: -13.881781578063965
    10. '']=='' → logprob: -14.006781578063965

Token 346: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.693406879901886
    2. ' ==' → logprob: -0.693406879901886
    3. ']==' → logprob: -9.06840705871582
    4. '=='' → logprob: -9.19340705871582
    5. ']' → logprob: -10.31840705871582
    6. '=' → logprob: -12.81840705871582
    7. ' =='' → logprob: -13.19340705871582
    8. '==
' → logprob: -13.56840705871582
    9. '[' → logprob: -13.94340705871582
    10. ']=='' → logprob: -14.44340705871582

Token 347: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00975833274424076
    2. ' '' → logprob: -4.634758472442627
    3. '"' → logprob: -13.009757995605469
    4. '1' → logprob: -16.38475799560547
    5. ' ' → logprob: -17.00975799560547
    6. '`' → logprob: -17.38475799560547
    7. '('' → logprob: -17.63475799560547
    8. '
' → logprob: -17.88475799560547
    9. '='' → logprob: -18.63475799560547
    10. ' ' → logprob: -18.88475799560547

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975071594119072
    2. ''' → logprob: -3.5297508239746094
    3. '"' → logprob: -16.40475082397461
    4. ''''' → logprob: -16.65475082397461
    5. ' '' → logprob: -17.27975082397461
    6. ' ' → logprob: -17.27975082397461
    7. '''' → logprob: -18.02975082397461
    8. '```' → logprob: -18.15475082397461
    9. '['' → logprob: -18.40475082397461
    10. '')' → logprob: -18.90475082397461

Token 349: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.8697918653488159
    2. '               ' → logprob: -1.744791865348816
    3. '                   ' → logprob: -1.744791865348816
    4. '':' → logprob: -2.2447919845581055
    5. ':' → logprob: -2.8697919845581055
    6. ':
' → logprob: -2.9947919845581055
    7. ''):
' → logprob: -4.4947919845581055
    8. '):
' → logprob: -5.6197919845581055
    9. '<|end|>' → logprob: -6.8697919845581055
    10. '           ' → logprob: -7.3697919845581055

Token 350: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0021754815243184566
    2. '               ' → logprob: -6.252175331115723
    3. 'count' → logprob: -9.127175331115723
    4. '                    
' → logprob: -10.002175331115723
    5. '           ' → logprob: -11.002175331115723
    6. '<|end|>' → logprob: -11.377175331115723
    7. '                       ' → logprob: -11.502175331115723
    8. '                
' → logprob: -11.627175331115723
    9. '                  ' → logprob: -11.877175331115723
    10. '                ' → logprob: -11.877175331115723

Token 351: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.28406408429145813
    2. ' count' → logprob: -1.5340640544891357
    3. '                   ' → logprob: -3.5340640544891357
    4. '               ' → logprob: -6.284064292907715
    5. '                       ' → logprob: -7.534064292907715
    6. '	count' → logprob: -11.534064292907715
    7. '[count' → logprob: -12.409064292907715
    8. '                    ' → logprob: -12.534064292907715
    9. '           ' → logprob: -12.534064292907715
    10. '                ' → logprob: -12.784064292907715

Token 352: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.006117198616266251
    2. '+=' → logprob: -5.131117343902588
    3. '                   ' → logprob: -9.63111686706543
    4. '                    ' → logprob: -10.13111686706543
    5. '                ' → logprob: -10.75611686706543
    6. '<|end|>' → logprob: -10.88111686706543
    7. '               ' → logprob: -11.25611686706543
    8. ' =' → logprob: -11.25611686706543
    9. ' +' → logprob: -12.50611686706543
    10. ' ' → logprob: -12.75611686706543

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014133334159851
    2. ' ' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.201414108276367
    4. '```' → logprob: -18.076414108276367
    5. '   ' → logprob: -18.576414108276367
    6. '<|end|>' → logprob: -18.951414108276367
    7. 'count' → logprob: -20.201414108276367
    8. '+' → logprob: -20.826414108276367
    9. '  ' → logprob: -20.888914108276367
    10. '１' → logprob: -20.888914108276367

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -19.25000762939453
    4. '   ' → logprob: -20.12500762939453
    5. '
' → logprob: -22.25000762939453
    6. 'count' → logprob: -22.87500762939453
    7. '１' → logprob: -22.87500762939453
    8. '۱' → logprob: -23.43750762939453
    9. '<|end|>' → logprob: -23.62500762939453
    10. '  ' → logprob: -23.62500762939453

Token 355: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027119619771838188
    2. '               ' → logprob: -3.7771196365356445
    3. '<|end|>' → logprob: -5.7771196365356445
    4. '                       ' → logprob: -8.027119636535645
    5. '           ' → logprob: -8.777119636535645
    6. '                    ' → logprob: -9.777119636535645
    7. '                ' → logprob: -10.277119636535645
    8. '                    
' → logprob: -10.652119636535645
    9. '                           ' → logprob: -10.652119636535645
    10. '                  ' → logprob: -10.652119636535645

Token 356: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017790839076042175
    2. '               ' → logprob: -4.142790794372559
    3. '
' → logprob: -7.517790794372559
    4. '           ' → logprob: -8.267790794372559
    5. ' ' → logprob: -8.767790794372559
    6. '                       ' → logprob: -9.017790794372559
    7. '<|end|>' → logprob: -9.017790794372559
    8. ' max' → logprob: -9.267790794372559
    9. '                    
' → logprob: -9.392790794372559
    10. ' 
' → logprob: -9.392790794372559

Token 357: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.020329898223280907
    2. 'max' (adapté à ' max') → logprob: -4.02032995223999
    3. '                   ' → logprob: -6.14532995223999
    4. '               ' → logprob: -10.395329475402832
    5. '
' → logprob: -13.520329475402832
    6. '                    ' → logprob: -14.645329475402832
    7. ' ' → logprob: -14.645329475402832
    8. '           ' → logprob: -14.895329475402832
    9. '                       ' → logprob: -14.895329475402832
    10. '   ' → logprob: -16.27033042907715

Token 358: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.2664456789934775e-06
    2. '_max' → logprob: -14.500000953674316
    3. '_' → logprob: -15.500000953674316
    4. '(_' → logprob: -15.500000953674316
    5. '_length' → logprob: -15.625000953674316
    6. ' _' → logprob: -16.250001907348633
    7. 'len' → logprob: -16.500001907348633
    8. '_LEN' → logprob: -17.500001907348633
    9. 'Len' → logprob: -17.750001907348633
    10. '_val' → logprob: -17.750001907348633

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196858361363411
    2. '=' → logprob: -2.8119685649871826
    3. '=max' → logprob: -14.811968803405762
    4. '                   ' → logprob: -15.686968803405762
    5. 'max' → logprob: -15.686968803405762
    6. ' ' → logprob: -16.061967849731445
    7. ')' → logprob: -16.311967849731445
    8. '   ' → logprob: -17.311967849731445
    9. '                       ' → logprob: -18.561967849731445
    10. ' max' → logprob: -18.686967849731445

Token 360: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.006715370807796717
    2. 'max' → logprob: -5.006715297698975
    3. '(max' → logprob: -18.256715774536133
    4. '=max' → logprob: -19.631715774536133
    5. '	max' → logprob: -19.881715774536133
    6. ' ' → logprob: -20.756715774536133
    7. ' ' → logprob: -20.881715774536133
    8. '_max' → logprob: -21.131715774536133
    9. ',max' → logprob: -22.006715774536133
    10. '.max' → logprob: -22.381715774536133

Token 361: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.00016146517009474337
    2. '(' → logprob: -8.750161170959473
    3. ' (' → logprob: -12.750161170959473
    4. '(
' → logprob: -16.62516212463379
    5. '=max' → logprob: -17.37516212463379
    6. 'max' → logprob: -17.37516212463379
    7. '(Max' → logprob: -18.37516212463379
    8. ',max' → logprob: -18.62516212463379
    9. '(MAX' → logprob: -18.62516212463379
    10. '[max' → logprob: -19.37516212463379

Token 362: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.00029852005536668
    2. 'max' → logprob: -8.250298500061035
    3. '(max' → logprob: -10.875298500061035
    4. 'len' → logprob: -11.375298500061035
    5. '_max' → logprob: -12.375298500061035
    6. 'Len' → logprob: -13.750298500061035
    7. '_' → logprob: -14.750298500061035
    8. '(_' → logprob: -14.750298500061035
    9. '_LEN' → logprob: -15.000298500061035
    10. ' _' → logprob: -16.00029945373535

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044163595885038376
    2. ',max' → logprob: -8.000441551208496
    3. '(max' → logprob: -9.250441551208496
    4. ' ,' → logprob: -12.000441551208496
    5. 'max' → logprob: -12.875441551208496
    6. ',count' → logprob: -14.875441551208496
    7. '(' → logprob: -15.125441551208496
    8. ' max' → logprob: -15.250441551208496
    9. '<|end|>' → logprob: -15.500441551208496
    10. ')' → logprob: -16.125442504882812

Token 364: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03804149478673935
    2. ' count' → logprob: -3.288041591644287
    3. '(count' → logprob: -20.163042068481445
    4. '	count' → logprob: -20.788042068481445
    5. '[count' → logprob: -21.163042068481445
    6. '$count' → logprob: -22.288042068481445
    7. ' ' → logprob: -22.538042068481445
    8. '                   ' → logprob: -22.663042068481445
    9. '_count' → logprob: -22.663042068481445
    10. 'counts' → logprob: -23.038042068481445

Token 365: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16400274634361267
    2. '               ' → logprob: -1.914002776145935
    3. ')
' → logprob: -5.664002895355225
    4. '                   ' → logprob: -8.539002418518066
    5. '           ' → logprob: -9.539002418518066
    6. '       ' → logprob: -11.414002418518066
    7. '<|end|>' → logprob: -12.164002418518066
    8. ' )' → logprob: -12.664002418518066
    9. '),' → logprob: -12.664002418518066
    10. '')' → logprob: -12.914002418518066

Token 366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.3795937522663735e-05
    2. 'else' → logprob: -11.37502384185791
    3. ' else' → logprob: -11.37502384185791
    4. '           ' → logprob: -14.75002384185791
    5. '                   ' → logprob: -16.125022888183594
    6. '              ' → logprob: -16.500022888183594
    7. '                
' → logprob: -16.625022888183594
    8. '```' → logprob: -16.875022888183594
    9. '			' → logprob: -17.375022888183594
    10. '                ' → logprob: -17.375022888183594

Token 367: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.046380504965782166
    2. ' else' → logprob: -3.6713805198669434
    3. 'else' (adapté à ' else') → logprob: -3.9213805198669434
    4. '           ' → logprob: -9.671380043029785
    5. '   ' → logprob: -13.921380043029785
    6. ' ' → logprob: -14.671380043029785
    7. '	else' → logprob: -14.796380043029785
    8. '       ' → logprob: -15.046380043029785
    9. '
' → logprob: -15.671380043029785
    10. '```' → logprob: -15.671380043029785

Token 368: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0930737629532814
    2. '               ' → logprob: -3.343073844909668
    3. ':
' → logprob: -3.468073844909668
    4. ':' → logprob: -3.843073844909668
    5. '                       ' → logprob: -7.218073844909668
    6. '           ' → logprob: -9.718073844909668
    7. '                  ' → logprob: -10.593073844909668
    8. '       ' → logprob: -10.718073844909668
    9. '                    ' → logprob: -11.093073844909668
    10. '=' → logprob: -11.718073844909668

Token 369: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0164047721773386
    2. '               ' → logprob: -4.141404628753662
    3. '                       ' → logprob: -8.39140510559082
    4. 'count' → logprob: -9.14140510559082
    5. ' count' → logprob: -11.64140510559082
    6. '
' → logprob: -11.76640510559082
    7. '           ' → logprob: -11.76640510559082
    8. '       ' → logprob: -12.51640510559082
    9. '                    
' → logprob: -13.26640510559082
    10. '   ' → logprob: -13.39140510559082

Token 370: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.10284730792045593
    2. ' count' → logprob: -2.3528473377227783
    3. '                   ' → logprob: -6.102847099304199
    4. '               ' → logprob: -7.852847099304199
    5. '                       ' → logprob: -11.6028470993042
    6. '           ' → logprob: -13.8528470993042
    7. '   ' → logprob: -13.9778470993042
    8. '       ' → logprob: -14.6028470993042
    9. ' ' → logprob: -15.7278470993042
    10. '                ' → logprob: -15.9778470993042

Token 371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. '                   ' → logprob: -15.876928329467773
    4. '＝' → logprob: -18.751928329467773
    5. '                    ' → logprob: -19.501928329467773
    6. ' ' → logprob: -19.876928329467773
    7. '=False' → logprob: -20.501928329467773
    8. ' ' → logprob: -20.501928329467773
    9. '           ' → logprob: -20.501928329467773
    10. '<|end|>' → logprob: -20.626928329467773

Token 372: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048054322600365
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.13604736328125
    4. ' ' → logprob: -16.38604736328125
    5. '                   ' → logprob: -17.38604736328125
    6. '               ' → logprob: -17.88604736328125
    7. '  ' → logprob: -18.51104736328125
    8. '    ' → logprob: -18.51104736328125
    9. '           ' → logprob: -18.94854736328125
    10. '                       ' → logprob: -19.19854736328125

Token 373: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -21.0
    4. '```' → logprob: -22.75
    5. '۰' → logprob: -22.875
    6. '  ' → logprob: -23.625
    7. '
' → logprob: -23.625
    8. '1' → logprob: -24.125
    9. '00' → logprob: -24.125
    10. '           ' → logprob: -24.5

Token 374: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09422019124031067
    2. '<|end|>' → logprob: -2.7192201614379883
    3. '    
' → logprob: -4.719220161437988
    4. '   ' → logprob: -5.344220161437988
    5. '        
' → logprob: -5.469220161437988
    6. '<|end|>' → logprob: -5.969220161437988
    7. '           ' → logprob: -6.469220161437988
    8. '            
' → logprob: -7.219220161437988
    9. '                
' → logprob: -8.844220161437988
    10. '```' → logprob: -8.844220161437988

Token 376: ' #' (ID: 1069)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.05655446648597717
    2. '   ' → logprob: -2.9315545558929443
    3. '#' (adapté à ' #') → logprob: -7.306554317474365
    4. '
' → logprob: -7.806554317474365
    5. '        
' → logprob: -7.931554317474365
    6. '  
' → logprob: -9.431554794311523
    7. '   
' → logprob: -9.681554794311523
    8. '    
    
' → logprob: -10.181554794311523
    9. ' 
' → logprob: -11.181554794311523
    10. '     
' → logprob: -11.806554794311523

Token 377: ' Ré' (ID: 27181)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.9670125246047974
    2. '
' → logprob: -1.4670125246047974
    3. 'return' → logprob: -1.4670125246047974
    4. '#' → logprob: -2.342012405395508
    5. '   ' → logprob: -3.592012405395508
    6. ' return' → logprob: -5.092012405395508
    7. '        
' → logprob: -5.092012405395508
    8. '<|end|>' → logprob: -5.467012405395508
    9. ' 
' → logprob: -5.592012405395508
    10. '  
' → logprob: -5.842012405395508

Token 378: 'init' (ID: 3287)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.26953715085983276
    2. 'init' → logprob: -2.0195372104644775
    3. 'set' → logprob: -2.2695372104644775
    4. 'ini' → logprob: -9.769536972045898
    5. '   ' → logprob: -10.144536972045898
    6. 'int' → logprob: -11.394536972045898
    7. 'initialize' → logprob: -11.519536972045898
    8. '-in' → logprob: -11.644536972045898
    9. '_init' → logprob: -11.769536972045898
    10. 'sum' → logprob: -11.894536972045898

Token 379: ' à' (ID: 1221)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2838450074195862
    2. 'ialize' → logprob: -1.9088449478149414
    3. 'ial' → logprob: -2.6588449478149414
    4. ' count' → logprob: -4.033844947814941
    5. '       ' → logprob: -5.283844947814941
    6. '   ' → logprob: -6.033844947814941
    7. '               ' → logprob: -6.658844947814941
    8. '_count' → logprob: -7.408844947814941
    9. '           ' → logprob: -7.408844947814941
    10. '                   ' → logprob: -8.408844947814941

Token 380: ' chaque' (ID: 21194)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006435725372284651
    2. ' ' → logprob: -7.375643730163574
    3. 'count' → logprob: -11.125643730163574
    4. '   ' → logprob: -13.625643730163574
    5. ' count' → logprob: -14.000643730163574
    6. '       ' → logprob: -16.250642776489258
    7. '=' → logprob: -16.875642776489258
    8. '```' → logprob: -17.125642776489258
    9. '  ' → logprob: -17.375642776489258
    10. 'zero' → logprob: -17.750642776489258

Token 381: ' diagon' (ID: 146014)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.007066408172249794
    2. 'ligne' → logprob: -5.507066249847412
    3. 'di' → logprob: -6.757066249847412
    4. 'count' → logprob: -7.257066249847412
    5. ' diff' → logprob: -7.757066249847412
    6. 'loop' → logprob: -8.88206672668457
    7. 'iteration' → logprob: -9.38206672668457
    8. '```' → logprob: -9.50706672668457
    9. ' boucle' → logprob: -10.00706672668457
    10. 'for' → logprob: -10.38206672668457

Token 382: 'ale' (ID: 1167)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.019138067960739136
    2. '   ' → logprob: -4.394137859344482
    3. '       ' → logprob: -5.769137859344482
    4. ' count' → logprob: -6.269137859344482
    5. 't' → logprob: -7.394137859344482
    6. '               ' → logprob: -8.26913833618164
    7. 'al' → logprob: -8.89413833618164
    8. '           ' → logprob: -9.26913833618164
    9. '_count' → logprob: -9.39413833618164
    10. '                   ' → logprob: -9.51913833618164

Token 383: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.378750205039978
    2. '       ' → logprob: -1.628750205039978
    3. '<|end|>' → logprob: -3.0037503242492676
    4. '   ' → logprob: -3.6287503242492676
    5. '        
' → logprob: -4.253750324249268
    6. '
' → logprob: -4.753750324249268
    7. '  
' → logprob: -5.378750324249268
    8. '            
' → logprob: -5.378750324249268
    9. '<|end|>' → logprob: -6.128750324249268
    10. '                    
' → logprob: -6.128750324249268

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13722515106201172
    2. '#' → logprob: -2.3872251510620117
    3. '    
' → logprob: -3.3872251510620117
    4. '
' → logprob: -6.012225151062012
    5. '        
' → logprob: -10.137225151062012
    6. '```' → logprob: -10.762225151062012
    7. '  
' → logprob: -11.012225151062012
    8. '   
' → logprob: -12.512225151062012
    9. '    
    
' → logprob: -12.512225151062012
    10. ' #' → logprob: -13.262225151062012

Token 385: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.005249176174402237
    2. '   ' → logprob: -5.2552490234375
    3. 'for' → logprob: -12.0052490234375
    4. ' #' → logprob: -12.1302490234375
    5. '
' → logprob: -12.7552490234375
    6. '    
' → logprob: -14.5052490234375
    7. '```' → logprob: -15.6302490234375
    8. '  ' → logprob: -16.2552490234375
    9. ' ' → logprob: -16.3802490234375
    10. '  
' → logprob: -17.8802490234375

Token 386: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0007419686880894005
    2. 'V' → logprob: -7.250741958618164
    3. ' #' → logprob: -10.750741958618164
    4. '
' → logprob: -12.000741958618164
    5. 'for' → logprob: -13.250741958618164
    6. ' Vér' → logprob: -13.375741958618164
    7. 'v' → logprob: -14.375741958618164
    8. '   ' → logprob: -15.500741958618164
    9. 'Verification' → logprob: -16.875741958618164
    10. '

' → logprob: -17.125741958618164

Token 387: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -2.2961512513575144e-05
    2. 'IFICATION' → logprob: -11.125022888183594
    3. '#' → logprob: -12.625022888183594
    4. 'ication' → logprob: -13.125022888183594
    5. 'if' → logprob: -13.500022888183594
    6. '_' → logprob: -15.000022888183594
    7. 'ération' → logprob: -15.500022888183594
    8. 'fic' → logprob: -15.500022888183594
    9. 'ifikation' → logprob: -15.875022888183594
    10. '   ' → logprob: -16.000022888183594

Token 388: ' diagon' (ID: 146014)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3789690136909485
    2. 'ant' → logprob: -1.8789689540863037
    3. 'des' → logprob: -2.8789689540863037
    4. 'anti' → logprob: -3.2539689540863037
    5. 'di' → logprob: -3.7539689540863037
    6. '   ' → logprob: -3.8789689540863037
    7. ' #' → logprob: -4.878969192504883
    8. 'asc' → logprob: -5.378969192504883
    9. ' ' → logprob: -6.378969192504883
    10. ' des' → logprob: -6.503969192504883

Token 389: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0003724006237462163
    2. 'ante' → logprob: -8.375371932983398
    3. 'ales' → logprob: -9.000371932983398
    4. 'e' → logprob: -12.500371932983398
    5. 'al' → logprob: -12.750371932983398
    6. 'nale' → logprob: -13.500371932983398
    7. '   ' → logprob: -13.625371932983398
    8. '#' → logprob: -13.750371932983398
    9. 'dale' → logprob: -13.875371932983398
    10. 'але' → logprob: -14.500371932983398

Token 390: ' mont' (ID: 11554)
  Prédit: 'mont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mont' → logprob: -0.585365355014801
    2. ' mont' → logprob: -0.960365355014801
    3. ' ascend' → logprob: -2.9603652954101562
    4. '   ' → logprob: -5.710365295410156
    5. 'asc' → logprob: -5.835365295410156
    6. ' remont' → logprob: -7.335365295410156
    7. '_' → logprob: -7.585365295410156
    8. ' montant' → logprob: -8.210365295410156
    9. ' asc' → logprob: -8.585365295410156
    10. 'mon' → logprob: -8.585365295410156

Token 391: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -3.292907877039397e-06
    2. ' ante' → logprob: -14.12500286102295
    3. 'a' → logprob: -14.50000286102295
    4. '-' → logprob: -14.75000286102295
    5. '   ' → logprob: -14.87500286102295
    6. 'ANTE' → logprob: -15.00000286102295
    7. 'nante' → logprob: -16.250003814697266
    8. ']' → logprob: -16.250003814697266
    9. 'Ante' → logprob: -16.625003814697266
    10. 'ente' → logprob: -16.750003814697266

Token 392: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.13658487796783447
    2. '   ' → logprob: -2.386584758758545
    3. ' for' → logprob: -3.636584758758545
    4. 'for' → logprob: -5.261584758758545
    5. '(' → logprob: -6.261584758758545
    6. '(for' → logprob: -6.761584758758545
    7. '#' → logprob: -8.011585235595703
    8. '(reverse' → logprob: -8.136585235595703
    9. ' #' → logprob: -9.636585235595703
    10. ',' → logprob: -9.886585235595703

Token 393: 'de' (ID: 613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09332170337438583
    2. 'range' → logprob: -2.5933218002319336
    3. ' for' → logprob: -4.468321800231934
    4. ')' → logprob: -6.468321800231934
    5. ' range' → logprob: -7.218321800231934
    6. 'n' → logprob: -8.843321800231934
    7. '1' → logprob: -8.843321800231934
    8. '(range' → logprob: -9.093321800231934
    9. 'def' → logprob: -10.343321800231934
    10. '#' → logprob: -10.593321800231934

Token 394: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.002911384915933013
    2. ' bas' → logprob: -5.877911567687988
    3. 'haut' → logprob: -9.252911567687988
    4. 'b' → logprob: -12.752911567687988
    5. '#' → logprob: -13.502911567687988
    6. 'base' → logprob: -13.877911567687988
    7. 'dro' → logprob: -13.877911567687988
    8. 'n' → logprob: -14.377911567687988
    9. '```' → logprob: -14.377911567687988
    10. 'baseline' → logprob: -14.502911567687988

Token 395: '-g' (ID: 6559)
  Prédit: '-g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-g' → logprob: -0.39592304825782776
    2. '-' → logprob: -1.3959230184555054
    3. '-n' → logprob: -3.645923137664795
    4. '-dro' → logprob: -3.770923137664795
    5. '-ha' → logprob: -3.770923137664795
    6. '-à' → logprob: -6.395923137664795
    7. '-d' → logprob: -6.645923137664795
    8. '-j' → logprob: -7.520923137664795
    9. '-left' → logprob: -7.770923137664795
    10. 'g' → logprob: -7.895923137664795

Token 396: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.0006416652468033135
    2. 'a' → logprob: -7.375641822814941
    3. '#' → logprob: -12.750641822814941
    4. 'au' → logprob: -13.125641822814941
    5. 'ouche' → logprob: -13.375641822814941
    6. 'che' → logprob: -14.000641822814941
    7. 'auch' → logprob: -14.250641822814941
    8. '**' → logprob: -14.500641822814941
    9. '[' → logprob: -14.500641822814941
    10. 'aule' → logprob: -14.500641822814941

Token 397: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.2600786089897156
    2. ' à' → logprob: -1.6350786685943604
    3. 'vers' → logprob: -3.8850786685943604
    4. 'à' → logprob: -5.010078430175781
    5. ' ' → logprob: -5.135078430175781
    6. '   ' → logprob: -7.385078430175781
    7. ' to' → logprob: -9.135078430175781
    8. ')' → logprob: -10.010078430175781
    9. '  ' → logprob: -10.135078430175781
    10. '```' → logprob: -10.760078430175781

Token 398: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.03298259899020195
    2. 'ha' → logprob: -3.782982587814331
    3. ' haut' → logprob: -4.65798282623291
    4. 'h' → logprob: -9.15798282623291
    5. 'hau' → logprob: -10.40798282623291
    6. 'bas' → logprob: -10.53298282623291
    7. '#' → logprob: -11.65798282623291
    8. ' ' → logprob: -11.78298282623291
    9. '-ha' → logprob: -12.53298282623291
    10. 'H' → logprob: -12.78298282623291

Token 399: '-dro' (ID: 102350)
  Prédit: '-dro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dro' → logprob: -0.0013139282818883657
    2. '-' → logprob: -7.501314163208008
    3. '-d' → logprob: -7.876314163208008
    4. 'dro' → logprob: -8.001314163208008
    5. '-right' → logprob: -10.376314163208008
    6. ' droite' → logprob: -11.751314163208008
    7. '-g' → logprob: -13.126314163208008
    8. '-h' → logprob: -14.126314163208008
    9. '-ha' → logprob: -14.251314163208008
    10. 'd' → logprob: -14.501314163208008

Token 400: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -5.512236498361744e-07
    2. 'îte' → logprob: -16.25
    3. '#' → logprob: -16.625
    4. 'i' → logprob: -17.0
    5. ' ite' → logprob: -17.0
    6. '
' → logprob: -17.125
    7. '   ' → logprob: -17.25
    8. 'it' → logprob: -17.5
    9. '1' → logprob: -17.75
    10. '>' → logprob: -17.875

Token 401: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2218133807182312
    2. ')' → logprob: -2.096813440322876
    3. '   ' → logprob: -2.596813440322876
    4. ' )
' → logprob: -6.721813201904297
    5. ' )' → logprob: -9.221813201904297
    6. '):
' → logprob: -9.221813201904297
    7. '#' → logprob: -9.971813201904297
    8. ')

' → logprob: -10.596813201904297
    9. '):' → logprob: -10.846813201904297
    10. ')
' → logprob: -10.971813201904297

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2816246747970581
    2. 'for' → logprob: -1.531624674797058
    3. ' for' → logprob: -3.5316247940063477
    4. '	for' → logprob: -13.906624794006348
    5. '```' → logprob: -14.906624794006348
    6. 'from' → logprob: -16.40662384033203
    7. '
' → logprob: -16.53162384033203
    8. ',' → logprob: -16.65662384033203
    9. '       ' → logprob: -16.90662384033203
    10. '    
' → logprob: -17.28162384033203

Token 403: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47451937198638916
    2. 'for' → logprob: -0.9745193719863892
    3. '   ' → logprob: -7.7245192527771
    4. '	for' → logprob: -15.349519729614258
    5. '```' → logprob: -15.974519729614258
    6. ' pour' → logprob: -17.474519729614258
    7. ' ' → logprob: -18.099519729614258
    8. '
' → logprob: -18.224519729614258
    9. 'pour' → logprob: -18.224519729614258
    10. '#' (adapté à ' #') → logprob: -18.599519729614258

Token 404: ' Ces' (ID: 35720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011082838289439678
    2. ' for' → logprob: -4.511082649230957
    3. '   ' → logprob: -10.261082649230957
    4. '	for' → logprob: -17.136083602905273
    5. '
' → logprob: -18.136083602905273
    6. 'from' → logprob: -18.261083602905273
    7. ' ' → logprob: -18.636083602905273
    8. '#' → logprob: -19.636083602905273
    9. ' ' → logprob: -20.511083602905273
    10. 'pour' → logprob: -20.511083602905273

Token 405: ' diagon' (ID: 146014)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04955393075942993
    2. ' for' → logprob: -3.049553871154785
    3. 'diff' → logprob: -7.799553871154785
    4. '   ' → logprob: -8.424553871154785
    5. '#' → logprob: -8.549553871154785
    6. ' ' → logprob: -10.174553871154785
    7. ')' → logprob: -10.674553871154785
    8. 'range' → logprob: -10.799553871154785
    9. ' range' → logprob: -11.674553871154785
    10. ' diff' → logprob: -12.174553871154785

Token 406: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0001242772996192798
    2. 'ale' → logprob: -10.375123977661133
    3. '#' → logprob: -10.750123977661133
    4. '   ' → logprob: -10.875123977661133
    5. '```' → logprob: -11.000123977661133
    6. 'al' → logprob: -12.000123977661133
    7. 'on' → logprob: -12.625123977661133
    8. '``' → logprob: -12.750123977661133
    9. 'a' → logprob: -13.250123977661133
    10. '}' → logprob: -13.250123977661133

Token 407: ' ont' (ID: 4930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5259778499603271
    2. ' for' → logprob: -0.9009778499603271
    3. 'pour' → logprob: -6.900978088378906
    4. ' pour' → logprob: -7.150978088378906
    5. ' vont' → logprob: -8.025978088378906
    6. 's' → logprob: -8.525978088378906
    7. ' =' → logprob: -8.775978088378906
    8. ' sont' → logprob: -9.650978088378906
    9. '=' → logprob: -9.650978088378906
    10. ' are' → logprob: -10.025978088378906

Token 408: ' somme' (ID: 64484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9550989866256714
    2. 'i' → logprob: -1.9550989866256714
    3. 'diff' → logprob: -2.080099105834961
    4. 'une' → logprob: -2.455099105834961
    5. 'j' → logprob: -2.830099105834961
    6. 'indices' → logprob: -3.080099105834961
    7. 'la' → logprob: -3.330099105834961
    8. 'sum' → logprob: -3.455099105834961
    9. '#' → logprob: -3.705099105834961
    10. 's' → logprob: -4.330099105834961

Token 409: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7905450463294983
    2. ' i' → logprob: -1.4155449867248535
    3. 'd' → logprob: -2.2905449867248535
    4. '=i' → logprob: -3.0405449867248535
    5. ' =' → logprob: -3.1655449867248535
    6. '   ' → logprob: -3.6655449867248535
    7. '=' → logprob: -3.9155449867248535
    8. 's' → logprob: -4.4155449867248535
    9. ' d' → logprob: -4.5405449867248535
    10. ' de' → logprob: -4.9155449867248535

Token 410: '+j' (ID: 71365)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7594377398490906
    2. '+j' → logprob: -0.8844377398490906
    3. ' +' → logprob: -2.3844377994537354
    4. 'j' → logprob: -4.759437561035156
    5. '=' → logprob: -5.509437561035156
    6. 'for' → logprob: -5.634437561035156
    7. ' for' → logprob: -6.384437561035156
    8. ' j' → logprob: -6.634437561035156
    9. '_j' → logprob: -6.884437561035156
    10. '+=' → logprob: -6.884437561035156

Token 411: ' constante' (ID: 49652)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32295238971710205
    2. 'for' → logprob: -2.3229522705078125
    3. ' in' → logprob: -2.5729522705078125
    4. '=' → logprob: -3.4479522705078125
    5. ' =' → logprob: -3.8229522705078125
    6. ' pour' → logprob: -4.1979522705078125
    7. ' en' → logprob: -4.8229522705078125
    8. '   ' → logprob: -5.4479522705078125
    9. ' range' → logprob: -5.4479522705078125
    10. 'range' → logprob: -5.8229522705078125

Token 412: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004240566398948431
    2. ' for' → logprob: -5.7542405128479
    3. 'for' → logprob: -7.2542405128479
    4. '
' → logprob: -8.004240989685059
    5. '    
' → logprob: -11.254240989685059
    6. ',' → logprob: -12.879240989685059
    7. '  
' → logprob: -13.504240989685059
    8. '  ' → logprob: -13.754240989685059
    9. ' ' → logprob: -13.754240989685059
    10. '```' → logprob: -15.004240989685059

Token 413: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026622318546287715
    2. '1' → logprob: -8.250266075134277
    3. ' ' → logprob: -12.250266075134277
    4. '(' → logprob: -16.625267028808594
    5. '   ' → logprob: -17.000267028808594
    6. '```' → logprob: -18.375267028808594
    7. '
' → logprob: -18.625267028808594
    8. 'n' → logprob: -18.875267028808594
    9. '[' → logprob: -19.125267028808594
    10. '۰' → logprob: -20.125267028808594

Token 414: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3306015716807451e-05
    2. '1' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.25001335144043
    4. '(' → logprob: -18.12501335144043
    5. '   ' → logprob: -19.50001335144043
    6. '
' → logprob: -19.87501335144043
    7. '```' → logprob: -20.00001335144043
    8. '01' → logprob: -20.37501335144043
    9. '۰' → logprob: -20.37501335144043
    10. '[' → logprob: -21.50001335144043

Token 415: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33452075719833374
    2. 'and' → logprob: -1.7095208168029785
    3. ' and' → logprob: -2.3345208168029785
    4. ' et' → logprob: -5.5845208168029785
    5. ' ,' → logprob: -6.0845208168029785
    6. '   ' → logprob: -8.33452033996582
    7. 'et' → logprob: -9.33452033996582
    8. ' à' → logprob: -10.58452033996582
    9. '+' → logprob: -11.08452033996582
    10. ' и' → logprob: -11.33452033996582

Token 416: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00286787748336792
    2. '(' → logprob: -5.877867698669434
    3. ' ' → logprob: -9.752867698669434
    4. ' (' → logprob: -12.502867698669434
    5. '   ' → logprob: -14.377867698669434
    6. '```' → logprob: -15.127867698669434
    7. '(n' → logprob: -15.752867698669434
    8. '
' → logprob: -16.50286865234375
    9. '	' → logprob: -17.12786865234375
    10. ' ' → logprob: -17.50286865234375

Token 417: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010500772623345256
    2. '(' → logprob: -6.876049995422363
    3. ' ' → logprob: -11.126049995422363
    4. ' (' → logprob: -13.876049995422363
    5. '   ' → logprob: -14.251049995422363
    6. '(n' → logprob: -14.751049995422363
    7. '```' → logprob: -14.876049995422363
    8. '{' → logprob: -17.25105094909668
    9. '`' → logprob: -17.37605094909668
    10. '	' → logprob: -17.37605094909668

Token 418: 'n' (ID: 77)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.13656750321388245
    2. '*(' → logprob: -2.1365675926208496
    3. 'n' → logprob: -5.38656759262085
    4. '(n' → logprob: -5.63656759262085
    5. ' *' → logprob: -6.88656759262085
    6. '*' → logprob: -7.76156759262085
    7. '```' → logprob: -14.136567115783691
    8. '
' → logprob: -14.261567115783691
    9. '(*' → logprob: -14.511567115783691
    10. '<n' → logprob: -15.261567115783691

Token 419: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009146820520982146
    2. ' -' → logprob: -7.000914573669434
    3. 'for' → logprob: -13.375914573669434
    4. '-n' → logprob: -14.625914573669434
    5. '   ' → logprob: -14.750914573669434
    6. 'n' → logprob: -15.250914573669434
    7. ' for' → logprob: -15.500914573669434
    8. '+' → logprob: -15.625914573669434
    9. '-range' → logprob: -16.25091552734375
    10. '-
' → logprob: -17.12591552734375

Token 420: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011955115012824535
    2. '1' → logprob: -4.511955261230469
    3. '-' → logprob: -7.386955261230469
    4. ' ' → logprob: -8.261955261230469
    5. '```' → logprob: -11.011955261230469
    6. ' -' → logprob: -11.511955261230469
    7. '(' → logprob: -13.761955261230469
    8. '   ' → logprob: -14.011955261230469
    9. '
' → logprob: -14.886955261230469
    10. '  ' → logprob: -15.261955261230469

Token 421: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17000360786914825
    2. ' for' → logprob: -2.170003652572632
    3. 'for' → logprob: -3.170003652572632
    4. '
' → logprob: -8.920003890991211
    5. '    
' → logprob: -11.545003890991211
    6. '```' → logprob: -11.545003890991211
    7. '	for' → logprob: -13.545003890991211
    8. ' ' → logprob: -14.295003890991211
    9. '  ' → logprob: -14.295003890991211
    10. ',' → logprob: -14.420003890991211

Token 422: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4984385371208191
    2. 'for' → logprob: -1.2484385967254639
    3. '   ' → logprob: -2.248438596725464
    4. '```' → logprob: -12.623438835144043
    5. ' ' → logprob: -14.498438835144043
    6. '	for' → logprob: -14.623438835144043
    7. ' pour' → logprob: -15.248438835144043
    8. ',' → logprob: -15.373438835144043
    9. '  ' → logprob: -16.248437881469727
    10. '
' → logprob: -16.248437881469727

Token 423: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023401077836751938
    2. ' for' → logprob: -3.7734010219573975
    3. '   ' → logprob: -8.773401260375977
    4. '```' → logprob: -14.148401260375977
    5. '	for' → logprob: -17.273401260375977
    6. '
' → logprob: -17.273401260375977
    7. ' ' → logprob: -18.773401260375977
    8. '    
' → logprob: -19.273401260375977
    9. '``' → logprob: -19.273401260375977
    10. 'from' → logprob: -20.773401260375977

Token 424: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22935478389263153
    2. 'sum' → logprob: -1.604354739189148
    3. 'total' → logprob: -6.7293548583984375
    4. ' s' → logprob: -6.8543548583984375
    5. 'diag' → logprob: -6.8543548583984375
    6. 'k' → logprob: -8.104354858398438
    7. 'summ' → logprob: -9.104354858398438
    8. ' sum' → logprob: -9.729354858398438
    9. 'S' → logprob: -10.604354858398438
    10. '_sum' → logprob: -10.729354858398438

Token 425: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04303516075015068
    2. 'in' → logprob: -3.1680352687835693
    3. 'range' → logprob: -10.918035507202148
    4. 'n' → logprob: -11.168035507202148
    5. ' ' → logprob: -14.418035507202148
    6. '   ' → logprob: -14.543035507202148
    7. 's' → logprob: -14.793035507202148
    8. 'd' → logprob: -15.043035507202148
    9. 'en' → logprob: -15.793035507202148
    10. 'ange' → logprob: -15.918035507202148

Token 426: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0040785204619169235
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -16.129077911376953
    4. ' ' → logprob: -19.254077911376953
    5. '	range' → logprob: -19.254077911376953
    6. '   ' → logprob: -19.754077911376953
    7. 'in' → logprob: -20.629077911376953
    8. ')' → logprob: -21.004077911376953
    9. '
' → logprob: -21.129077911376953
    10. '2' → logprob: -21.379077911376953

Token 427: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.8961017202818766e-05
    2. '2' → logprob: -9.750059127807617
    3. ' (' → logprob: -14.375059127807617
    4. '((' → logprob: -16.750059127807617
    5. '0' → logprob: -17.000059127807617
    6. '(
' → logprob: -19.125059127807617
    7. ' ' → logprob: -19.250059127807617
    8. '   ' → logprob: -20.500059127807617
    9. '{' → logprob: -21.000059127807617
    10. '(-' → logprob: -21.500059127807617

Token 428: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017994173686020076
    2. '(' → logprob: -8.7501802444458
    3. '0' → logprob: -11.0001802444458
    4. ' ' → logprob: -12.2501802444458
    5. ' (' → logprob: -17.750179290771484
    6. '   ' → logprob: -18.000179290771484
    7. '1' → logprob: -19.375179290771484
    8. '-' → logprob: -20.000179290771484
    9. '{' → logprob: -20.000179290771484
    10. '
' → logprob: -20.125179290771484

Token 429: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.012807341292500496
    2. '*' → logprob: -5.137807369232178
    3. ' *' → logprob: -5.637807369232178
    4. 'n' → logprob: -5.762807369232178
    5. '*(' → logprob: -8.88780689239502
    6. '(n' → logprob: -11.51280689239502
    7. '
' → logprob: -13.38780689239502
    8. '   ' → logprob: -14.26280689239502
    9. ' n' → logprob: -15.13780689239502
    10. ' ' → logprob: -15.26280689239502

Token 430: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011703446507453918
    2. ' -' → logprob: -6.7511701583862305
    3. ')' → logprob: -16.751171112060547
    4. ' ' → logprob: -18.001171112060547
    5. '```' → logprob: -18.376171112060547
    6. ')-' → logprob: -18.501171112060547
    7. '2' → logprob: -19.126171112060547
    8. '1' → logprob: -19.126171112060547
    9. '   ' → logprob: -19.376171112060547
    10. '()-' → logprob: -20.126171112060547

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. '2' → logprob: -14.500001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '
' → logprob: -18.000001907348633
    6. '  ' → logprob: -19.625001907348633
    7. '１' → logprob: -19.750001907348633
    8. '-' → logprob: -20.125001907348633
    9. '۱' → logprob: -20.125001907348633
    10. '```' → logprob: -20.125001907348633

Token 432: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3134227395057678
    2. '):
' → logprob: -1.313422679901123
    3. ' ):' → logprob: -9.188423156738281
    4. '):
' → logprob: -10.188423156738281
    5. ' ):
' → logprob: -11.313423156738281
    6. ':' → logprob: -11.813423156738281
    7. ')' → logprob: -14.063423156738281
    8. '):

' → logprob: -14.813423156738281
    9. ' :' → logprob: -16.43842315673828
    10. '   ' → logprob: -16.56342315673828

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008507614023983479
    2. '   ' → logprob: -5.13350772857666
    3. '	count' → logprob: -6.38350772857666
    4. 'count' → logprob: -7.38350772857666
    5. ' count' → logprob: -8.88350772857666
    6. '	   ' → logprob: -10.25850772857666
    7. ',' → logprob: -10.75850772857666
    8. '```' → logprob: -11.13350772857666
    9. '<|end|>' → logprob: -11.38350772857666
    10. '
' → logprob: -11.75850772857666

Token 434: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6781682372093201
    2. 'count' (adapté à ' count') → logprob: -1.1781682968139648
    3. ' count' → logprob: -1.8031682968139648
    4. '   ' → logprob: -3.928168296813965
    5. ' ' → logprob: -9.428168296813965
    6. '	count' → logprob: -10.428168296813965
    7. '           ' → logprob: -11.053168296813965
    8. '    ' → logprob: -11.928168296813965
    9. '```' → logprob: -12.303168296813965
    10. ' counts' → logprob: -12.803168296813965

Token 435: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132622241973877
    2. '=' → logprob: -1.3132622241973877
    3. '   ' → logprob: -15.313261985778809
    4. ' ' → logprob: -15.563261985778809
    5. '	' → logprob: -16.938262939453125
    6. '    ' → logprob: -17.688262939453125
    7. ' ' → logprob: -18.688262939453125
    8. ')' → logprob: -19.063262939453125
    9. '```' → logprob: -19.063262939453125
    10. '  ' → logprob: -19.188262939453125

Token 436: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.125335693359375
    4. '       ' → logprob: -20.250335693359375
    5. '=' → logprob: -21.375335693359375
    6. '  ' → logprob: -21.750335693359375
    7. '۰' → logprob: -22.250335693359375
    8. '	' → logprob: -23.250335693359375
    9. '           ' → logprob: -23.250335693359375
    10. ' ' → logprob: -23.250335693359375

Token 437: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.1250057220459
    4. '۰' → logprob: -21.1250057220459
    5. '  ' → logprob: -21.8750057220459
    6. '=' → logprob: -22.2500057220459
    7. '```' → logprob: -22.6250057220459
    8. '000' → logprob: -23.3750057220459
    9. '０' → logprob: -23.5625057220459
    10. '০' → logprob: -23.7500057220459

Token 438: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019716962706297636
    2. '   ' → logprob: -7.00197172164917
    3. ' for' → logprob: -7.50197172164917
    4. '
' → logprob: -8.001971244812012
    5. '<|end|>' → logprob: -9.376971244812012
    6. 'for' → logprob: -10.126971244812012
    7. '        
' → logprob: -10.876971244812012
    8. '	' → logprob: -11.876971244812012
    9. '           ' → logprob: -12.251971244812012
    10. '<|end|>' → logprob: -12.501971244812012

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001050434890203178
    2. ' for' → logprob: -7.2510504722595215
    3. 'for' → logprob: -8.626049995422363
    4. '   ' → logprob: -8.751049995422363
    5. '<|end|>' → logprob: -14.126049995422363
    6. '           ' → logprob: -14.376049995422363
    7. ' ' → logprob: -14.501049995422363
    8. '	for' → logprob: -14.751049995422363
    9. '```' → logprob: -16.12605094909668
    10. '      ' → logprob: -16.62605094909668

Token 440: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12809816002845764
    2. '       ' → logprob: -2.128098249435425
    3. ' for' → logprob: -6.753098011016846
    4. '   ' → logprob: -13.378098487854004
    5. '	for' → logprob: -15.378098487854004
    6. '           ' → logprob: -15.878098487854004
    7. 'i' → logprob: -16.003097534179688
    8. '```' → logprob: -17.128097534179688
    9. '0' → logprob: -17.628097534179688
    10. '        
' → logprob: -18.128097534179688

Token 441: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002551050391048193
    2. 'i' → logprob: -6.002551078796387
    3. ' for' → logprob: -9.502551078796387
    4. '   ' → logprob: -15.127551078796387
    5. '       ' → logprob: -15.502551078796387
    6. ' i' → logprob: -16.00255012512207
    7. 'range' → logprob: -17.00255012512207
    8. '0' → logprob: -17.12755012512207
    9. '           ' → logprob: -19.37755012512207
    10. '        
' → logprob: -19.62755012512207

Token 442: ' varie' (ID: 103216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6447729468345642
    2. ' in' → logprob: -0.8947729468345642
    3. 'in' → logprob: -3.019773006439209
    4. ' =' → logprob: -4.269773006439209
    5. 'range' → logprob: -6.394773006439209
    6. 'for' → logprob: -6.644773006439209
    7. ' range' → logprob: -7.769773006439209
    8. ' for' → logprob: -8.64477252960205
    9. ')' → logprob: -9.76977252960205
    10. 'from' → logprob: -10.14477252960205

Token 443: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11459371447563171
    2. 'from' → logprob: -2.864593744277954
    3. '=' → logprob: -3.864593744277954
    4. 'range' → logprob: -4.489593505859375
    5. '(max' → logprob: -4.614593505859375
    6. 'for' → logprob: -5.739593505859375
    7. ' max' → logprob: -6.239593505859375
    8. '(' → logprob: -6.614593505859375
    9. '=max' → logprob: -7.489593505859375
    10. 'in' → logprob: -7.864593505859375

Token 444: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002096197713399306
    2. ' max' → logprob: -9.00020980834961
    3. '0' → logprob: -9.37520980834961
    4. '(max' → logprob: -13.75020980834961
    5. '[max' → logprob: -16.12520980834961
    6. 'min' → logprob: -16.75020980834961
    7. '	max' → logprob: -17.50020980834961
    8. ' ' → logprob: -17.87520980834961
    9. '=max' → logprob: -18.37520980834961
    10. 's' → logprob: -18.75020980834961

Token 445: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001322639436693862
    2. '(s' → logprob: -9.12513256072998
    3. '0' → logprob: -10.75013256072998
    4. ' (' → logprob: -13.37513256072998
    5. 's' → logprob: -15.12513256072998
    6. '(
' → logprob: -17.250131607055664
    7. ' ' → logprob: -17.375131607055664
    8. '```' → logprob: -17.875131607055664
    9. '[' → logprob: -18.750131607055664
    10. '>' → logprob: -19.125131607055664

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.694766489090398e-05
    2. 's' → logprob: -10.250066757202148
    3. ' ' → logprob: -10.500066757202148
    4. '(' → logprob: -12.625066757202148
    5. '(s' → logprob: -14.875066757202148
    6. ' s' → logprob: -15.250066757202148
    7. ' ' → logprob: -17.37506675720215
    8. '۰' → logprob: -17.75006675720215
    9. '```' → logprob: -18.12506675720215
    10. ')' → logprob: -19.43756675720215

Token 447: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.021980607882142067
    2. ',' → logprob: -4.1469807624816895
    3. '(' → logprob: -5.2719807624816895
    4. 's' → logprob: -7.2719807624816895
    5. ' (' → logprob: -10.396980285644531
    6. ',s' → logprob: -10.521980285644531
    7. ' s' → logprob: -11.271980285644531
    8. ')' → logprob: -11.896980285644531
    9. ' ,' → logprob: -12.021980285644531
    10. '[s' → logprob: -12.646980285644531

Token 448: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033558503491804004
    2. ' s' → logprob: -8.000335693359375
    3. '(s' → logprob: -16.375335693359375
    4. '0' → logprob: -16.875335693359375
    5. '   ' → logprob: -16.875335693359375
    6. ' ' → logprob: -17.500335693359375
    7. '_s' → logprob: -17.750335693359375
    8. ' ' → logprob: -18.625335693359375
    9. 'n' → logprob: -18.625335693359375
    10. '{s' → logprob: -18.625335693359375

Token 449: '-(' (ID: 18825)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15897244215011597
    2. ' -' → logprob: -2.0339725017547607
    3. '-s' → logprob: -4.408972263336182
    4. '-n' → logprob: -5.533972263336182
    5. '-(' → logprob: -10.53397274017334
    6. 's' → logprob: -11.78397274017334
    7. '-k' → logprob: -13.03397274017334
    8. ' ' → logprob: -13.15897274017334
    9. '-N' → logprob: -13.40897274017334
    10. ' s' → logprob: -13.78397274017334

Token 450: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005239683669060469
    2. '(n' → logprob: -5.255239486694336
    3. ' n' → logprob: -12.505239486694336
    4. ' (' → logprob: -13.755239486694336
    5. '
' → logprob: -14.505239486694336
    6. '   ' → logprob: -15.380239486694336
    7. ')n' → logprob: -15.630239486694336
    8. ')' → logprob: -15.880239486694336
    9. '{' → logprob: -16.005239486694336
    10. '<n' → logprob: -17.380239486694336

Token 451: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005645881756208837
    2. '1' → logprob: -7.7505645751953125
    3. '+' → logprob: -9.625564575195312
    4. ' -' → logprob: -9.625564575195312
    5. ')' → logprob: -14.125564575195312
    6. ')+' → logprob: -14.375564575195312
    7. '−' → logprob: -16.500564575195312
    8. ' ' → logprob: -16.500564575195312
    9. '```' → logprob: -16.500564575195312
    10. '   ' → logprob: -16.625564575195312

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '
' → logprob: -18.75
    4. ')' → logprob: -19.25
    5. '```' → logprob: -20.25
    6. '   ' → logprob: -20.625
    7. '2' → logprob: -20.75
    8. '

' → logprob: -21.25
    9. '-' → logprob: -21.75
    10. '0' → logprob: -22.625

Token 453: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002695032162591815
    2. '),' → logprob: -6.127695083618164
    3. ' )' → logprob: -7.627695083618164
    4. ')
' → logprob: -11.502695083618164
    5. ',' → logprob: -12.502695083618164
    6. ' ),' → logprob: -12.877695083618164
    7. '   ' → logprob: -13.252695083618164
    8. ');' → logprob: -14.377695083618164
    9. ')+' → logprob: -14.502695083618164
    10. '))' → logprob: -14.752695083618164

Token 454: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5509576797485352
    2. 'to' → logprob: -0.9259576797485352
    3. ' à' → logprob: -3.925957679748535
    4. ',' → logprob: -5.800957679748535
    5. 'à' → logprob: -6.050957679748535
    6. '       ' → logprob: -7.550957679748535
    7. ')' → logprob: -7.925957679748535
    8. '=' → logprob: -8.175957679748535
    9. 'for' → logprob: -8.175957679748535
    10. ' for' → logprob: -8.425957679748535

Token 455: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20147863030433655
    2. ' min' → logprob: -1.7014786005020142
    3. 'max' → logprob: -10.576478958129883
    4. ' n' → logprob: -11.451478958129883
    5. 'n' → logprob: -11.576478958129883
    6. 's' → logprob: -11.576478958129883
    7. ' s' → logprob: -12.201478958129883
    8. '(min' → logprob: -12.951478958129883
    9. ' max' → logprob: -13.201478958129883
    10. '	min' → logprob: -14.576478958129883

Token 456: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005335505120456219
    2. '(s' → logprob: -5.255335330963135
    3. '(' → logprob: -9.255335807800293
    4. 'n' → logprob: -12.880335807800293
    5. '((' → logprob: -13.255335807800293
    6. '(
' → logprob: -13.505335807800293
    7. ' (' → logprob: -16.005334854125977
    8. 's' → logprob: -16.130334854125977
    9. '(i' → logprob: -16.755334854125977
    10. '(max' → logprob: -16.880334854125977

Token 457: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010022050701081753
    2. '(' → logprob: -7.751002311706543
    3. ',' → logprob: -7.751002311706543
    4. ' -' → logprob: -9.501002311706543
    5. '1' → logprob: -10.376002311706543
    6. '(n' → logprob: -10.876002311706543
    7. '```' → logprob: -11.876002311706543
    8. ')' → logprob: -12.501002311706543
    9. 's' → logprob: -14.251002311706543
    10. '),' → logprob: -14.626002311706543

Token 458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.750004768371582
    3. '
' → logprob: -14.250004768371582
    4. 's' → logprob: -14.750004768371582
    5. '```' → logprob: -15.375004768371582
    6. '(' → logprob: -15.625004768371582
    7. '-' → logprob: -16.0000057220459
    8. '   ' → logprob: -16.5000057220459
    9. ' ' → logprob: -16.5625057220459
    10. ')' → logprob: -16.5625057220459

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034630970912985504
    2. 's' → logprob: -8.875346183776855
    3. ' ,' → logprob: -9.250346183776855
    4. ',s' → logprob: -9.750346183776855
    5. ',
' → logprob: -10.250346183776855
    6. ')' → logprob: -12.375346183776855
    7. ',n' → logprob: -12.625346183776855
    8. '(s' → logprob: -12.875346183776855
    9. '(' → logprob: -13.500346183776855
    10. ',(' → logprob: -13.750346183776855

Token 460: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0031777136027812958
    2. ' s' → logprob: -5.753177642822266
    3. '	s' → logprob: -18.378177642822266
    4. ' ' → logprob: -18.878177642822266
    5. '   ' → logprob: -19.253177642822266
    6. ')' → logprob: -19.628177642822266
    7. '_s' → logprob: -20.128177642822266
    8. '{s' → logprob: -20.253177642822266
    9. ' ' → logprob: -20.503177642822266
    10. '
' → logprob: -20.628177642822266

Token 461: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002246357616968453
    2. '<|end|>' → logprob: -9.500225067138672
    3. ',' → logprob: -9.875225067138672
    4. ')
' → logprob: -10.750225067138672
    5. '),' → logprob: -10.875225067138672
    6. ')n' → logprob: -11.750225067138672
    7. ' )' → logprob: -11.875225067138672
    8. ');' → logprob: -12.250225067138672
    9. ')}' → logprob: -12.375225067138672
    10. '+' → logprob: -12.625225067138672

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032875132746994495
    2. ' for' → logprob: -5.878287315368652
    3. 'for' → logprob: -8.503287315368652
    4. '           ' → logprob: -8.878287315368652
    5. '   ' → logprob: -9.878287315368652
    6. '```' → logprob: -9.878287315368652
    7. '
' → logprob: -11.628287315368652
    8. '	' → logprob: -11.753287315368652
    9. '	for' → logprob: -12.253287315368652
    10. '        
' → logprob: -12.503287315368652

Token 463: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5764780044555664
    2. ' for' → logprob: -0.8264780044555664
    3. 'i' → logprob: -8.951478004455566
    4. ' i' → logprob: -9.076478004455566
    5. '       ' → logprob: -9.076478004455566
    6. 'range' → logprob: -9.576478004455566
    7. '   ' → logprob: -9.826478004455566
    8. ' range' → logprob: -10.076478004455566
    9. 'start' (adapté à ' start') → logprob: -11.701478004455566
    10. ' start' → logprob: -12.826478004455566

Token 464: '_i' (ID: 10853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164687134325504
    2. ' =' → logprob: -4.264164924621582
    3. '=max' → logprob: -14.264164924621582
    4. '=int' → logprob: -15.764164924621582
    5. ',' → logprob: -16.764163970947266
    6. '=}' → logprob: -16.764163970947266
    7. '_=' → logprob: -16.764163970947266
    8. '=start' → logprob: -16.889163970947266
    9. ')' → logprob: -17.139163970947266
    10. '＝' → logprob: -17.139163970947266

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022473573684692
    2. ' =' → logprob: -1.9102246761322021
    3. ',' → logprob: -15.660224914550781
    4. '=max' → logprob: -16.16022491455078
    5. '=
' → logprob: -16.66022491455078
    6. '=int' → logprob: -16.78522491455078
    7. ')' → logprob: -16.91022491455078
    8. '＝' → logprob: -16.91022491455078
    9. '=}' → logprob: -17.16022491455078
    10. '=start' → logprob: -17.53522491455078

Token 466: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06196802109479904
    2. ' max' → logprob: -2.8119680881500244
    3. '	max' → logprob: -15.436967849731445
    4. '0' → logprob: -15.936967849731445
    5. ' ' → logprob: -17.061967849731445
    6. 'min' → logprob: -17.311967849731445
    7. '(max' → logprob: -18.311967849731445
    8. '=max' → logprob: -19.436967849731445
    9. ',max' → logprob: -19.686967849731445
    10. '   ' → logprob: -19.686967849731445

Token 467: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.4849443838757e-06
    2. '0' → logprob: -12.500004768371582
    3. ' (' → logprob: -14.125004768371582
    4. '(
' → logprob: -17.875003814697266
    5. ' ' → logprob: -20.500003814697266
    6. '<|end|>' → logprob: -21.375003814697266
    7. ' ' → logprob: -21.750003814697266
    8. '((' → logprob: -21.750003814697266
    9. 'def' → logprob: -21.750003814697266
    10. '()' → logprob: -22.000003814697266

Token 468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000158842682139948
    2. '(' → logprob: -8.75015926361084
    3. ' ' → logprob: -14.87515926361084
    4. ')' → logprob: -19.750158309936523
    5. '[' → logprob: -20.625158309936523
    6. '(
' → logprob: -20.625158309936523
    7. '۰' → logprob: -20.750158309936523
    8. '   ' → logprob: -21.250158309936523
    9. '00' → logprob: -21.250158309936523
    10. ' (' → logprob: -21.625158309936523

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006671638693660498
    2. '(s' → logprob: -7.625667095184326
    3. ',s' → logprob: -9.375667572021484
    4. '(' → logprob: -9.500667572021484
    5. ' ,' → logprob: -11.000667572021484
    6. '   ' → logprob: -13.375667572021484
    7. 's' → logprob: -14.875667572021484
    8. ',
' → logprob: -15.000667572021484
    9. '       ' → logprob: -15.875667572021484
    10. ')' → logprob: -16.375667572021484

Token 470: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009115827269852161
    2. ' s' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.000911712646484
    4. '(s' → logprob: -18.000911712646484
    5. '{s' → logprob: -19.250911712646484
    6. '	s' → logprob: -19.625911712646484
    7. ')' → logprob: -20.000911712646484
    8. ')s' → logprob: -20.125911712646484
    9. ' ' → logprob: -20.250911712646484
    10. '       ' → logprob: -20.375911712646484

Token 471: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4306155741214752
    2. ' -' → logprob: -1.1806155443191528
    3. '-(' → logprob: -3.1806156635284424
    4. ' -(' → logprob: -7.180615425109863
    5. '-n' → logprob: -7.680615425109863
    6. ')' → logprob: -12.055615425109863
    7. '   ' → logprob: -12.555615425109863
    8. ' ' → logprob: -12.805615425109863
    9. ')-(' → logprob: -12.930615425109863
    10. '-
' → logprob: -14.430615425109863

Token 472: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002969703928101808
    2. ' (' → logprob: -8.125296592712402
    3. 'n' → logprob: -14.250296592712402
    4. '(' → logprob: -16.00029754638672
    5. '   ' → logprob: -16.25029754638672
    6. '(N' → logprob: -17.12529754638672
    7. '(nn' → logprob: -18.12529754638672
    8. '[n' → logprob: -18.25029754638672
    9. '((' → logprob: -18.37529754638672
    10. ' ' → logprob: -19.00029754638672

Token 473: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012607605196535587
    2. 'n' → logprob: -4.387607574462891
    3. ' (' → logprob: -9.26260757446289
    4. '(' → logprob: -13.51260757446289
    5. ' n' → logprob: -14.13760757446289
    6. '
' → logprob: -15.38760757446289
    7. '(
' → logprob: -15.76260757446289
    8. '_n' → logprob: -15.88760757446289
    9. '   ' → logprob: -16.01260757446289
    10. '[n' → logprob: -16.63760757446289

Token 474: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0027169028762727976
    2. '+' → logprob: -6.252717018127441
    3. '1' → logprob: -7.252717018127441
    4. ' -' → logprob: -9.752717018127441
    5. '```' → logprob: -11.627717018127441
    6. '   ' → logprob: -12.127717018127441
    7. 'n' → logprob: -12.252717018127441
    8. ' +' → logprob: -14.127717018127441
    9. ' ' → logprob: -14.502717018127441
    10. '
' → logprob: -14.752717018127441

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -19.625
    4. '(' → logprob: -20.625
    5. '```' → logprob: -21.625
    6. ')' → logprob: -22.0
    7. '
' → logprob: -22.25
    8. '۱' → logprob: -23.375
    9. '  ' → logprob: -23.5
    10. '[' → logprob: -23.875

Token 476: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.53216952085495
    2. ')
' → logprob: -1.2821695804595947
    3. '))
' → logprob: -2.2821695804595947
    4. '))' → logprob: -3.4071695804595947
    5. ' )
' → logprob: -11.407169342041016
    6. ')
' → logprob: -11.657169342041016
    7. ' )' → logprob: -11.907169342041016
    8. ')

' → logprob: -12.782169342041016
    9. ' ))
' → logprob: -13.157169342041016
    10. '))

' → logprob: -13.407169342041016

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006490950006991625
    2. 'end' → logprob: -5.256491184234619
    3. ' end' → logprob: -7.006491184234619
    4. '<|end|>' → logprob: -9.006490707397461
    5. '   ' → logprob: -10.131490707397461
    6. '        
' → logprob: -10.256490707397461
    7. '	end' → logprob: -10.256490707397461
    8. ',end' → logprob: -10.381490707397461
    9. ',' → logprob: -11.131490707397461
    10. '[end' → logprob: -11.756490707397461

Token 478: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.004213974345475435
    2. ' end' → logprob: -5.504213809967041
    3. 'min' → logprob: -9.0042142868042
    4. '       ' → logprob: -11.7542142868042
    5. 'stop' → logprob: -12.7542142868042
    6. '   ' → logprob: -13.8792142868042
    7. ' min' → logprob: -14.3792142868042
    8. '        ' → logprob: -16.379213333129883
    9. '
' → logprob: -16.629213333129883
    10. '(end' → logprob: -16.629213333129883

Token 479: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.7255896925926208
    2. '=' → logprob: -0.9755896925926208
    3. ' =' → logprob: -1.9755897521972656
    4. '_' → logprob: -8.600589752197266
    5. '   ' → logprob: -9.350589752197266
    6. '  ' → logprob: -11.475589752197266
    7. '_=' → logprob: -11.725589752197266
    8. '	' → logprob: -12.100589752197266
    9. '=int' → logprob: -12.225589752197266
    10. ' ' → logprob: -12.350589752197266

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759397745132446
    2. ' =' → logprob: -0.8259397745132446
    3. '=min' → logprob: -14.950940132141113
    4. '=
' → logprob: -17.575939178466797
    5. '=int' → logprob: -18.575939178466797
    6. ')' → logprob: -18.700939178466797
    7. '=}' → logprob: -18.950939178466797
    8. '＝' → logprob: -19.200939178466797
    9. ' =
' → logprob: -19.325939178466797
    10. ' ' → logprob: -19.825939178466797

Token 481: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3868715465068817
    2. ' min' → logprob: -1.136871576309204
    3. '	min' → logprob: -15.136871337890625
    4. 'max' → logprob: -16.511871337890625
    5. '   ' → logprob: -17.261871337890625
    6. '(min' → logprob: -17.511871337890625
    7. ' ' → logprob: -17.761871337890625
    8. '=min' → logprob: -18.011871337890625
    9. ',min' → logprob: -18.636871337890625
    10. '_min' → logprob: -18.761871337890625

Token 482: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.4272752852994017e-05
    2. '(' → logprob: -10.75002384185791
    3. '(
' → logprob: -13.50002384185791
    4. ' (' → logprob: -13.62502384185791
    5. 'n' → logprob: -15.37502384185791
    6. '((' → logprob: -18.000024795532227
    7. ' n' → logprob: -18.875024795532227
    8. ',n' → logprob: -19.250024795532227
    9. ',' → logprob: -20.625024795532227
    10. '	n' → logprob: -21.000024795532227

Token 483: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002806656062602997
    2. ' -' → logprob: -5.877806663513184
    3. '1' → logprob: -14.127806663513184
    4. 'n' → logprob: -14.377806663513184
    5. '(n' → logprob: -15.127806663513184
    6. '<|end|>' → logprob: -16.502805709838867
    7. ',' → logprob: -16.752805709838867
    8. '−' → logprob: -17.002805709838867
    9. ',n' → logprob: -17.252805709838867
    10. ' n' → logprob: -17.502805709838867

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '-' → logprob: -17.625
    4. '   ' → logprob: -18.875
    5. 'n' → logprob: -19.5
    6. 's' → logprob: -20.625
    7. '
' → logprob: -20.75
    8. '```' → logprob: -21.4375
    9. '۱' → logprob: -21.5
    10. ' -' → logprob: -21.5625

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.847109812544659e-05
    2. ',s' → logprob: -10.750048637390137
    3. ' ,' → logprob: -10.750048637390137
    4. 's' → logprob: -12.500048637390137
    5. ',
' → logprob: -13.250048637390137
    6. ',n' → logprob: -17.00004768371582
    7. ')' → logprob: -17.12504768371582
    8. ' s' → logprob: -17.62504768371582
    9. '),' → logprob: -18.12504768371582
    10. '   ' → logprob: -18.75004768371582

Token 486: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4740770161151886
    2. 's' → logprob: -0.9740769863128662
    3. '	s' → logprob: -17.849077224731445
    4. ' ' → logprob: -18.349077224731445
    5. '   ' → logprob: -18.599077224731445
    6. '       ' → logprob: -18.974077224731445
    7. ' ' → logprob: -19.474077224731445
    8. ')' → logprob: -19.474077224731445
    9. '{s' → logprob: -19.849077224731445
    10. ',' → logprob: -21.099077224731445

Token 487: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002132656052708626
    2. ')
' → logprob: -6.252132892608643
    3. ')+' → logprob: -9.252132415771484
    4. '+' → logprob: -9.377132415771484
    5. ' )' → logprob: -11.502132415771484
    6. ' +' → logprob: -12.002132415771484
    7. ',' → logprob: -12.877132415771484
    8. '):
' → logprob: -13.877132415771484
    9. '<|end|>' → logprob: -14.127132415771484
    10. '   ' → logprob: -14.377132415771484

Token 488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010758924297988415
    2. '   ' → logprob: -5.260758876800537
    3. '<|end|>' → logprob: -5.885758876800537
    4. ' for' → logprob: -6.510758876800537
    5. '        
' → logprob: -8.510759353637695
    6. ')' → logprob: -8.510759353637695
    7. '
' → logprob: -8.635759353637695
    8. '	' → logprob: -9.010759353637695
    9. '	for' → logprob: -9.010759353637695
    10. 'for' → logprob: -9.510759353637695

Token 489: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04482568800449371
    2. ' for' → logprob: -3.794825792312622
    3. 'for' (adapté à ' for') → logprob: -3.919825792312622
    4. '   ' → logprob: -6.669825553894043
    5. '	for' → logprob: -9.294825553894043
    6. '
' → logprob: -9.419825553894043
    7. '```' → logprob: -10.544825553894043
    8. '           ' → logprob: -11.419825553894043
    9. '        
' → logprob: -11.544825553894043
    10. ' ' → logprob: -11.794825553894043

Token 490: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868735730648041
    2. 'i' → logprob: -1.1368736028671265
    3. '   ' → logprob: -13.511873245239258
    4. '	i' → logprob: -14.011873245239258
    5. ' ' → logprob: -15.761873245239258
    6. '    ' → logprob: -16.011873245239258
    7. ' ' → logprob: -17.511873245239258
    8. '  ' → logprob: -17.886873245239258
    9. '_i' → logprob: -18.011873245239258
    10. '```' → logprob: -18.511873245239258

Token 491: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008629352785646915
    2. 'in' → logprob: -4.758629322052002
    3. '=' → logprob: -12.00862979888916
    4. ' ' → logprob: -13.50862979888916
    5. 'start' → logprob: -13.50862979888916
    6. '=start' → logprob: -13.50862979888916
    7. '	in' → logprob: -13.88362979888916
    8. 'd' → logprob: -14.00862979888916
    9. ' =' → logprob: -14.63362979888916
    10. ')' → logprob: -14.75862979888916

Token 492: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.049728404730558395
    2. ' range' → logprob: -3.0497283935546875
    3. 'start' → logprob: -6.7997283935546875
    4. ' start' → logprob: -10.674728393554688
    5. 'end' → logprob: -13.549728393554688
    6. ' ' → logprob: -14.049728393554688
    7. '[start' → logprob: -14.799728393554688
    8. '   ' → logprob: -15.549728393554688
    9. '(range' → logprob: -15.674728393554688
    10. '	range' → logprob: -15.799728393554688

Token 493: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0009139667963609099
    2. 'start' → logprob: -7.000914096832275
    3. '(' → logprob: -13.000913619995117
    4. ' (' → logprob: -16.125913619995117
    5. ' start' → logprob: -16.125913619995117
    6. '(
' → logprob: -16.625913619995117
    7. '[start' → logprob: -17.625913619995117
    8. '=start' → logprob: -18.250913619995117
    9. '	start' → logprob: -18.500913619995117
    10. '(end' → logprob: -18.875913619995117

Token 494: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.375
    3. 'start' → logprob: -16.625
    4. ')' → logprob: -17.125
    5. '(start' → logprob: -17.125
    6. '
' → logprob: -18.0
    7. '_' → logprob: -18.5
    8. '=start' → logprob: -18.625
    9. '(i' → logprob: -18.75
    10. ',' → logprob: -18.875

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003392767102923244
    2. ',end' → logprob: -8.62533950805664
    3. ' ,' → logprob: -8.75033950805664
    4. ',
' → logprob: -13.75033950805664
    5. ',start' → logprob: -16.25033950805664
    6. '(end' → logprob: -17.25033950805664
    7. 'end' → logprob: -17.62533950805664
    8. '=end' → logprob: -18.62533950805664
    9. '=' → logprob: -18.75033950805664
    10. ' ,
' → logprob: -18.75033950805664

Token 496: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0009118211455643177
    2. ' end' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.375911712646484
    4. '(end' → logprob: -17.375911712646484
    5. '=end' → logprob: -18.750911712646484
    6. '       ' → logprob: -19.750911712646484
    7. '
' → logprob: -20.125911712646484
    8. '	end' → logprob: -20.250911712646484
    9. ' ' → logprob: -20.250911712646484
    10. '    ' → logprob: -21.125911712646484

Token 497: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0008114131633192301
    2. 'i' → logprob: -7.125811576843262
    3. 'end' → logprob: -12.750811576843262
    4. '+' → logprob: -12.750811576843262
    5. '=end' → logprob: -15.125811576843262
    6. 'int' → logprob: -15.250811576843262
    7. '   ' → logprob: -15.625811576843262
    8. '=' → logprob: -15.875811576843262
    9. '(end' → logprob: -16.500810623168945
    10. 'I' → logprob: -16.625810623168945

Token 498: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029750604182481766
    2. ' +' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.40475082397461
    4. '+
' → logprob: -18.02975082397461
    5. '	' → logprob: -18.15475082397461
    6. ' ' → logprob: -18.40475082397461
    7. '
' → logprob: -18.52975082397461
    8. '1' → logprob: -18.52975082397461
    9. ' ' → logprob: -18.65475082397461
    10. ')+' → logprob: -18.65475082397461

Token 499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.1250057220459
    4. ')' → logprob: -20.1250057220459
    5. '```' → logprob: -20.1250057220459
    6. '0' → logprob: -21.0000057220459
    7. '
' → logprob: -21.0000057220459
    8. '  ' → logprob: -21.6250057220459
    9. '۱' → logprob: -22.3750057220459
    10. '):
' → logprob: -22.5000057220459

Token 500: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.21225999295711517
    2. '):' → logprob: -1.7122600078582764
    3. '       ' → logprob: -5.212259769439697
    4. ':' → logprob: -5.837259769439697
    5. '   ' → logprob: -6.337259769439697
    6. ':
' → logprob: -8.587260246276855
    7. '           ' → logprob: -8.837260246276855
    8. '<|end|>' → logprob: -9.212260246276855
    9. '):
' → logprob: -9.837260246276855
    10. ')' → logprob: -10.462260246276855

Token 501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026595894247293472
    2. 'j' → logprob: -4.4015960693359375
    3. '       ' → logprob: -5.0265960693359375
    4. '   ' → logprob: -5.4015960693359375
    5. ' j' → logprob: -5.9015960693359375
    6. '```' → logprob: -9.401596069335938
    7. '	       ' → logprob: -10.026596069335938
    8. '	   ' → logprob: -11.276596069335938
    9. ',j' → logprob: -11.401596069335938
    10. '	j' → logprob: -11.401596069335938

Token 502: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.004795834422111511
    2. ' j' → logprob: -5.504796028137207
    3. '           ' → logprob: -7.254796028137207
    4. '	j' → logprob: -11.629796028137207
    5. '               ' → logprob: -14.504796028137207
    6. '   ' → logprob: -14.754796028137207
    7. '```' → logprob: -15.129796028137207
    8. '       ' → logprob: -16.12979507446289
    9. '	       ' → logprob: -16.50479507446289
    10. '_j' → logprob: -17.12979507446289

Token 503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048408225178719
    2. ' =' → logprob: -4.511048316955566
    3. '=
' → logprob: -15.136048316955566
    4. '=s' → logprob: -16.136049270629883
    5. 's' → logprob: -16.511049270629883
    6. ' ' → logprob: -17.761049270629883
    7. '<|end|>' → logprob: -18.011049270629883
    8. ')' → logprob: -18.261049270629883
    9. '=

' → logprob: -19.136049270629883
    10. '=int' → logprob: -19.136049270629883

Token 504: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0040785204619169235
    2. ' s' → logprob: -5.504078388214111
    3. '{s' → logprob: -17.129077911376953
    4. '	s' → logprob: -17.254077911376953
    5. ' ' → logprob: -17.379077911376953
    6. '(s' → logprob: -17.629077911376953
    7. ' ' → logprob: -18.254077911376953
    8. '   ' → logprob: -19.129077911376953
    9. '`s' → logprob: -19.379077911376953
    10. '  ' → logprob: -20.254077911376953

Token 505: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20144110918045044
    2. ' -' → logprob: -1.7014410495758057
    3. '-s' → logprob: -11.076440811157227
    4. '-i' → logprob: -11.576440811157227
    5. 's' → logprob: -13.451440811157227
    6. '-j' → logprob: -13.576440811157227
    7. '<|end|>' → logprob: -17.201440811157227
    8. ' ' → logprob: -17.451440811157227
    9. '−' → logprob: -17.826440811157227
    10. ' s' → logprob: -18.326440811157227

Token 506: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7610454708337784e-05
    2. ' i' → logprob: -10.500027656555176
    3. '	i' → logprob: -20.62502670288086
    4. ')i' → logprob: -24.12502670288086
    5. '   ' → logprob: -24.25002670288086
    6. '{i' → logprob: -25.00002670288086
    7. '```' → logprob: -25.00002670288086
    8. ' ' → logprob: -25.12502670288086
    9. '(i' → logprob: -25.75002670288086
    10. '=i' → logprob: -25.75002670288086

Token 507: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0062193358317017555
    2. '<|end|>' → logprob: -5.756219387054443
    3. ' if' → logprob: -6.006219387054443
    4. '       ' → logprob: -8.506218910217285
    5. '          ' → logprob: -9.256218910217285
    6. 'if' → logprob: -9.256218910217285
    7. '            
' → logprob: -10.256218910217285
    8. '   ' → logprob: -10.631218910217285
    9. ' ' → logprob: -10.631218910217285
    10. '<|end|>' → logprob: -10.756218910217285

Token 508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013679367839358747
    2. ' if' → logprob: -9.125136375427246
    3. '<|end|>' → logprob: -11.875136375427246
    4. '            
' → logprob: -12.375136375427246
    5. '       ' → logprob: -12.375136375427246
    6. '               ' → logprob: -12.625136375427246
    7. '          ' → logprob: -12.750136375427246
    8. 'if' → logprob: -12.875136375427246
    9. '```' → logprob: -13.750136375427246
    10. '   ' → logprob: -14.500136375427246

Token 509: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.475465327501297
    2. 'if' (adapté à ' if') → logprob: -1.2254652976989746
    3. ' if' → logprob: -2.4754652976989746
    4. '               ' → logprob: -7.350465297698975
    5. '       ' → logprob: -12.225465774536133
    6. '
' → logprob: -12.600465774536133
    7. '   ' → logprob: -12.725465774536133
    8. '            
' → logprob: -13.600465774536133
    9. '```' → logprob: -13.850465774536133
    10. '          ' → logprob: -14.225465774536133

Token 510: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.7957814931869507
    2. ' grid' → logprob: -1.1707814931869507
    3. '0' → logprob: -1.5457814931869507
    4. ' ' → logprob: -3.6707816123962402
    5. '   ' → logprob: -11.045781135559082
    6. '(grid' → logprob: -11.545781135559082
    7. '	grid' → logprob: -12.795781135559082
    8. '           ' → logprob: -12.983281135559082
    9. '               ' → logprob: -13.295781135559082
    10. '    ' → logprob: -13.920781135559082

Token 511: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -16.0
    3. '[j' → logprob: -16.25
    4. '[I' → logprob: -16.75
    5. '[int' → logprob: -17.125
    6. 'i' → logprob: -17.25
    7. '           ' → logprob: -17.875
    8. ' [' → logprob: -18.0
    9. '```' → logprob: -18.75
    10. '   ' → logprob: -18.875

Token 512: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12700685858726501
    2. '[j' → logprob: -2.127006769180298
    3. ']' → logprob: -10.127006530761719
    4. '[' → logprob: -11.002006530761719
    5. ''][' → logprob: -11.877006530761719
    6. '[i' → logprob: -11.877006530761719
    7. '           ' → logprob: -12.627006530761719
    8. '"][' → logprob: -13.502006530761719
    9. ' ][' → logprob: -14.002006530761719
    10. 'j' → logprob: -14.377006530761719

Token 513: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.2729995988775045e-06
    2. '[j' → logprob: -12.625006675720215
    3. ' j' → logprob: -13.000006675720215
    4. '[' → logprob: -15.375006675720215
    5. ']' → logprob: -15.625006675720215
    6. '][' → logprob: -16.0000057220459
    7. '   ' → logprob: -17.0000057220459
    8. '	j' → logprob: -17.7500057220459
    9. '```' → logprob: -17.8750057220459
    10. '<|end|>' → logprob: -18.3750057220459

Token 514: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054680947214365005
    2. ']==' → logprob: -3.8046810626983643
    3. '==' → logprob: -3.8046810626983643
    4. ' ==' → logprob: -4.804680824279785
    5. ' ]' → logprob: -8.554680824279785
    6. '']' → logprob: -8.554680824279785
    7. ']=='' → logprob: -9.554680824279785
    8. '=='' → logprob: -11.429680824279785
    9. ''' → logprob: -12.304680824279785
    10. '           ' → logprob: -12.554680824279785

Token 515: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3871003985404968
    2. ' ==' → logprob: -1.1371004581451416
    3. '=='' → logprob: -8.512100219726562
    4. ']==' → logprob: -10.762100219726562
    5. ']' → logprob: -13.262100219726562
    6. ' =='' → logprob: -13.262100219726562
    7. '=' → logprob: -13.637100219726562
    8. '           ' → logprob: -14.137100219726562
    9. ')==' → logprob: -14.887100219726562
    10. ''' → logprob: -15.262100219726562

Token 516: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01815216802060604
    2. ' '' → logprob: -4.018152236938477
    3. '"' → logprob: -13.143152236938477
    4. '1' → logprob: -15.518152236938477
    5. ' ' → logprob: -16.643152236938477
    6. '`' → logprob: -17.268152236938477
    7. ' ' → logprob: -17.268152236938477
    8. '('' → logprob: -17.518152236938477
    9. ''s' → logprob: -18.393152236938477
    10. '='' → logprob: -18.518152236938477

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163747429847717
    2. ''' → logprob: -4.264163970947266
    3. '"' → logprob: -15.639163970947266
    4. ''''' → logprob: -17.264163970947266
    5. '\'' → logprob: -17.514163970947266
    6. '''' → logprob: -18.264163970947266
    7. '')' → logprob: -18.264163970947266
    8. '['' → logprob: -18.389163970947266
    9. '```' → logprob: -18.514163970947266
    10. ' '' → logprob: -18.639163970947266

Token 518: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.055063046514987946
    2. ':
' → logprob: -3.180063009262085
    3. ':' → logprob: -4.680063247680664
    4. '):
' → logprob: -6.555063247680664
    5. '<|end|>' → logprob: -7.305063247680664
    6. ']:
' → logprob: -8.430063247680664
    7. '              ' → logprob: -9.430063247680664
    8. '           ' → logprob: -9.555063247680664
    9. '']:
' → logprob: -10.180063247680664
    10. ''):
' → logprob: -10.305063247680664

Token 519: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.4418171455617994e-05
    2. 'count' → logprob: -10.875044822692871
    3. '<|end|>' → logprob: -11.375044822692871
    4. '                   ' → logprob: -12.375044822692871
    5. '                
' → logprob: -12.625044822692871
    6. '[count' → logprob: -13.500044822692871
    7. ' count' → logprob: -13.875044822692871
    8. '```' → logprob: -14.000044822692871
    9. '              ' → logprob: -14.125044822692871
    10. '           ' → logprob: -14.250044822692871

Token 520: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.42258062958717346
    2. ' count' → logprob: -1.672580599784851
    3. '               ' → logprob: -1.922580599784851
    4. '                   ' → logprob: -4.547580718994141
    5. '                ' → logprob: -10.42258071899414
    6. '           ' → logprob: -11.29758071899414
    7. '   ' → logprob: -11.79758071899414
    8. '                       ' → logprob: -12.54758071899414
    9. ' ' → logprob: -13.29758071899414
    10. '	count' → logprob: -13.42258071899414

Token 521: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.030019832774996758
    2. '+=' → logprob: -3.530019760131836
    3. '               ' → logprob: -9.030019760131836
    4. '                ' → logprob: -10.030019760131836
    5. '                   ' → logprob: -10.405019760131836
    6. '            ' → logprob: -10.530019760131836
    7. '           ' → logprob: -11.030019760131836
    8. '<|end|>' → logprob: -11.530019760131836
    9. ']+=' → logprob: -12.155019760131836
    10. '                    ' → logprob: -12.780019760131836

Token 522: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3868717551231384
    2. ' ' → logprob: -1.1368718147277832
    3. ' ' → logprob: -14.636871337890625
    4. '<|end|>' → logprob: -15.261871337890625
    5. '```' → logprob: -17.011871337890625
    6. '   ' → logprob: -19.011871337890625
    7. 'count' → logprob: -19.136871337890625
    8. ')' → logprob: -20.011871337890625
    9. '１' → logprob: -20.136871337890625
    10. '۱' → logprob: -20.386871337890625

Token 523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -19.750045776367188
    4. '   ' → logprob: -20.750045776367188
    5. '<|end|>' → logprob: -22.375045776367188
    6. ' ' → logprob: -22.750045776367188
    7. '１' → logprob: -23.000045776367188
    8. '
' → logprob: -23.312545776367188
    9. '  ' → logprob: -23.312545776367188
    10. 'count' → logprob: -23.562545776367188

Token 524: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0325924449716695e-05
    2. '
' → logprob: -12.12501049041748
    3. '                   ' → logprob: -12.87501049041748
    4. '```' → logprob: -14.12501049041748
    5. '<|end|>' → logprob: -14.62501049041748
    6. '           ' → logprob: -14.87501049041748
    7. '                
' → logprob: -15.50001049041748
    8. 'max' → logprob: -16.000009536743164
    9. '              ' → logprob: -16.000009536743164
    10. ' max' → logprob: -16.625009536743164

Token 525: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5332478142227046e-05
    2. ' max' → logprob: -12.375015258789062
    3. 'max' → logprob: -12.750015258789062
    4. '
' → logprob: -12.750015258789062
    5. '           ' → logprob: -13.375015258789062
    6. '                
' → logprob: -13.375015258789062
    7. '                   ' → logprob: -13.500015258789062
    8. '```' → logprob: -15.875015258789062
    9. '       ' → logprob: -16.000015258789062
    10. '              ' → logprob: -16.000015258789062

Token 526: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.38735777139663696
    2. ' max' → logprob: -1.1373577117919922
    3. '               ' → logprob: -7.637357711791992
    4. '                   ' → logprob: -12.887357711791992
    5. '           ' → logprob: -13.887357711791992
    6. '                ' → logprob: -14.512357711791992
    7. '
' → logprob: -15.762357711791992
    8. '   ' → logprob: -16.137357711791992
    9. ' ' → logprob: -16.387357711791992
    10. '	max' → logprob: -16.762357711791992

Token 527: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -9.088346359931165e-07
    2. '(_' → logprob: -15.125000953674316
    3. 'len' → logprob: -16.0
    4. '_' → logprob: -16.125
    5. 'Len' → logprob: -16.75
    6. '_length' → logprob: -17.0
    7. '_LEN' → logprob: -17.25
    8. '(len' → logprob: -17.625
    9. '_con' → logprob: -17.875
    10. ' _' → logprob: -18.0

Token 528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804252669215202
    2. '=' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.913042068481445
    4. ')' → logprob: -15.413042068481445
    5. '=max' → logprob: -15.413042068481445
    6. 'max' → logprob: -15.663042068481445
    7. '               ' → logprob: -16.163042068481445
    8. '                ' → logprob: -16.913042068481445
    9. ',' → logprob: -17.288042068481445
    10. '                   ' → logprob: -18.163042068481445

Token 529: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.004078401252627373
    2. 'max' → logprob: -5.504078388214111
    3. '(max' → logprob: -17.879077911376953
    4. ' ' → logprob: -20.129077911376953
    5. '	max' → logprob: -20.879077911376953
    6. '=max' → logprob: -21.004077911376953
    7. '_max' → logprob: -21.754077911376953
    8. ',max' → logprob: -21.754077911376953
    9. '.max' → logprob: -22.254077911376953
    10. ' maximum' → logprob: -23.379077911376953

Token 530: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.00043949027894996107
    2. '(' → logprob: -7.750439643859863
    3. ' (' → logprob: -12.625439643859863
    4. '(
' → logprob: -12.875439643859863
    5. 'max' → logprob: -13.000439643859863
    6. '=max' → logprob: -15.000439643859863
    7. '_max' → logprob: -15.875439643859863
    8. ',max' → logprob: -15.875439643859863
    9. ' max' → logprob: -17.000438690185547
    10. '[max' → logprob: -17.375438690185547

Token 531: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -5.676981345459353e-06
    2. '(max' → logprob: -12.875005722045898
    3. 'max' → logprob: -13.375005722045898
    4. 'len' → logprob: -13.625005722045898
    5. 'Len' → logprob: -16.0000057220459
    6. '(len' → logprob: -16.3750057220459
    7. '_LEN' → logprob: -16.5000057220459
    8. '(_' → logprob: -17.2500057220459
    9. '_max' → logprob: -17.5000057220459
    10. '_' → logprob: -18.8750057220459

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022308611369226128
    2. ',max' → logprob: -8.500223159790039
    3. '(max' → logprob: -11.125223159790039
    4. ' ,' → logprob: -12.500223159790039
    5. 'max' → logprob: -14.125223159790039
    6. ',count' → logprob: -16.25022315979004
    7. ',
' → logprob: -16.50022315979004
    8. '(' → logprob: -16.62522315979004
    9. ' max' → logprob: -17.37522315979004
    10. ')' → logprob: -19.12522315979004

Token 533: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.011047814972698689
    2. ' count' → logprob: -4.511047840118408
    3. '               ' → logprob: -17.13604736328125
    4. 'max' → logprob: -20.01104736328125
    5. '(count' → logprob: -20.01104736328125
    6. '[count' → logprob: -20.13604736328125
    7. '	count' → logprob: -20.38604736328125
    8. '$count' → logprob: -20.51104736328125
    9. ' ' → logprob: -20.76104736328125
    10. 'counter' → logprob: -21.13604736328125

Token 534: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4210309088230133
    2. ')' → logprob: -1.171030879020691
    3. ')
' → logprob: -3.4210309982299805
    4. '               ' → logprob: -7.0460309982299805
    5. ' )' → logprob: -11.92103099822998
    6. '<|end|>' → logprob: -12.29603099822998
    7. '       ' → logprob: -12.42103099822998
    8. '          ' → logprob: -12.79603099822998
    9. ' )
' → logprob: -12.92103099822998
    10. '                   ' → logprob: -12.92103099822998

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001696902181720361
    2. 'else' → logprob: -8.75016975402832
    3. ' else' → logprob: -11.50016975402832
    4. '```' → logprob: -14.75016975402832
    5. '               ' → logprob: -15.12516975402832
    6. '		' → logprob: -15.62516975402832
    7. '<|end|>' → logprob: -17.00016975402832
    8. '          ' → logprob: -17.12516975402832
    9. '       ' → logprob: -17.12516975402832
    10. '\
' → logprob: -17.25016975402832

Token 536: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2816793620586395
    2. 'else' (adapté à ' else') → logprob: -1.531679391860962
    3. ' else' → logprob: -3.531679391860962
    4. '               ' → logprob: -10.156679153442383
    5. '       ' → logprob: -12.531679153442383
    6. '```' → logprob: -12.531679153442383
    7. '		' → logprob: -13.031679153442383
    8. '	else' → logprob: -13.031679153442383
    9. '   ' → logprob: -13.406679153442383
    10. '          ' → logprob: -13.781679153442383

Token 537: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.726595241460018e-05
    2. '           ' → logprob: -11.00003719329834
    3. '                   ' → logprob: -11.87503719329834
    4. '              ' → logprob: -12.62503719329834
    5. '                ' → logprob: -13.00003719329834
    6. ':' → logprob: -13.00003719329834
    7. '                
' → logprob: -13.50003719329834
    8. '<|end|>' → logprob: -14.00003719329834
    9. ':
' → logprob: -14.12503719329834
    10. '   ' → logprob: -14.37503719329834

Token 538: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.214019307051785e-05
    2. 'count' → logprob: -10.875032424926758
    3. ' count' → logprob: -11.875032424926758
    4. '           ' → logprob: -12.875032424926758
    5. '                   ' → logprob: -13.250032424926758
    6. '              ' → logprob: -14.000032424926758
    7. '                ' → logprob: -15.000032424926758
    8. '   ' → logprob: -15.000032424926758
    9. '       ' → logprob: -15.750032424926758
    10. '```' → logprob: -16.500032424926758

Token 539: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.011955826543271542
    2. ' count' → logprob: -4.511955738067627
    3. '               ' → logprob: -7.011955738067627
    4. '                   ' → logprob: -12.011956214904785
    5. '           ' → logprob: -15.386956214904785
    6. '   ' → logprob: -15.636956214904785
    7. '                ' → logprob: -16.76195526123047
    8. '	count' → logprob: -17.63695526123047
    9. ' ' → logprob: -17.88695526123047
    10. '              ' → logprob: -18.51195526123047

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408637404441833
    2. ' =' → logprob: -0.9740864038467407
    3. '               ' → logprob: -11.97408676147461
    4. '                   ' → logprob: -12.84908676147461
    5. '                ' → logprob: -15.34908676147461
    6. ' ' → logprob: -16.72408676147461
    7. ' ' → logprob: -17.84908676147461
    8. '   ' → logprob: -17.84908676147461
    9. ')' → logprob: -17.97408676147461
    10. '           ' → logprob: -17.97408676147461

Token 541: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692862749099731
    2. ' ' → logprob: -2.1269285678863525
    3. ' ' → logprob: -14.376928329467773
    4. '   ' → logprob: -17.626928329467773
    5. '               ' → logprob: -18.501928329467773
    6. '           ' → logprob: -19.376928329467773
    7. '  ' → logprob: -19.626928329467773
    8. '=' → logprob: -20.001928329467773
    9. '1' → logprob: -20.001928329467773
    10. '```' → logprob: -20.376928329467773

Token 542: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '```' → logprob: -21.125001907348633
    5. '۰' → logprob: -21.500001907348633
    6. '<|end|>' → logprob: -21.750001907348633
    7. '  ' → logprob: -22.500001907348633
    8. '
' → logprob: -22.625001907348633
    9. '=' → logprob: -22.750001907348633
    10. ' ' → logprob: -23.062501907348633

Token 543: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3920021653175354
    2. '    
' → logprob: -1.1420021057128906
    3. '
' → logprob: -6.142002105712891
    4. 'return' → logprob: -6.892002105712891
    5. ' return' → logprob: -7.267002105712891
    6. '<|end|>' → logprob: -7.267002105712891
    7. '        
' → logprob: -8.64200210571289
    8. '  
' → logprob: -8.64200210571289
    9. '            
' → logprob: -9.76700210571289
    10. '       ' → logprob: -9.89200210571289

Token 544: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20151634514331818
    2. '   ' → logprob: -1.7015163898468018
    3. ' return' → logprob: -9.201516151428223
    4. '    
' → logprob: -13.201516151428223
    5. '	return' → logprob: -16.45151710510254
    6. '```' → logprob: -16.57651710510254
    7. ':return' → logprob: -16.95151710510254
    8. ' ' → logprob: -17.07651710510254
    9. '
' → logprob: -17.45151710510254
    10. '       ' → logprob: -17.82651710510254

Token 545: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001200231839902699
    2. '   ' → logprob: -6.751200199127197
    3. ' return' → logprob: -10.501200675964355
    4. '```' → logprob: -13.376200675964355
    5. '    
' → logprob: -14.376200675964355
    6. '
' → logprob: -15.376200675964355
    7. '	return' → logprob: -16.62619972229004
    8. ' ' → logprob: -17.62619972229004
    9. '  
' → logprob: -18.12619972229004
    10. ':return' → logprob: -18.37619972229004

Token 546: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4740773141384125
    2. 'max' → logprob: -0.9740773439407349
    3. '_max' → logprob: -15.474077224731445
    4. '   ' → logprob: -16.849077224731445
    5. '	max' → logprob: -16.849077224731445
    6. '(max' → logprob: -17.349077224731445
    7. '[max' → logprob: -17.849077224731445
    8. '=max' → logprob: -17.974077224731445
    9. ',max' → logprob: -18.224077224731445
    10. ' ' → logprob: -20.474077224731445

Token 547: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. '_max' → logprob: -16.75
    3. '_' → logprob: -17.5
    4. ' _' → logprob: -18.0
    5. '(_' → logprob: -18.375
    6. '_length' → logprob: -18.375
    7. 'len' → logprob: -18.875
    8. '_LEN' → logprob: -19.125
    9. '_l' → logprob: -19.875
    10. '```' → logprob: -19.875

Token 548: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1099286749958992
    2. ' max' → logprob: -2.734928607940674
    3. ' find' → logprob: -4.359928607940674
    4. ' check' → logprob: -5.234928607940674
    5. ' solve' → logprob: -5.484928607940674
    6. 'main' → logprob: -5.484928607940674
    7. ' longest' → logprob: -5.484928607940674
    8. ' test' → logprob: -6.109928607940674
    9. 'max' → logprob: -6.609928607940674
    10. ' is' → logprob: -7.109928607940674

Token 551: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008350008283741772
    2. '():
' → logprob: -7.250834941864014
    3. ' ():' → logprob: -9.125835418701172
    4. '()' → logprob: -11.875835418701172
    5. '()>' → logprob: -12.625835418701172
    6. '():
' → logprob: -13.000835418701172
    7. '_' → logprob: -13.500835418701172
    8. '(' → logprob: -13.625835418701172
    9. '():

' → logprob: -14.500835418701172
    10. '()">' → logprob: -15.625835418701172

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01324599888175726
    2. ' n' → logprob: -4.638246059417725
    3. '(n' → logprob: -6.263246059417725
    4. 'n' → logprob: -6.888246059417725
    5. ' input' → logprob: -9.263245582580566
    6. '    
' → logprob: -9.388245582580566
    7. ' 
' → logprob: -9.513245582580566
    8. ' grid' → logprob: -9.638245582580566
    9. '```' → logprob: -9.763245582580566
    10. ' import' → logprob: -10.263245582580566

Token 553: ' """
' (ID: 7037)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.027438515797257423
    2. 'n' → logprob: -3.6524384021759033
    3. '   ' → logprob: -6.902438640594482
    4. ' grid' → logprob: -9.652438163757324
    5. ' import' → logprob: -10.652438163757324
    6. ' size' → logprob: -11.027438163757324
    7. ' input' → logprob: -12.152438163757324
    8. ' 
' → logprob: -12.277438163757324
    9. ' #' → logprob: -12.777438163757324
    10. ' t' → logprob: -12.777438163757324

Token 554: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12852752208709717
    2. '   ' → logprob: -2.3785276412963867
    3. ' n' → logprob: -3.6285276412963867
    4. '#' → logprob: -6.753527641296387
    5. '"""' → logprob: -9.503527641296387
    6. 'def' → logprob: -10.628527641296387
    7. ' #' → logprob: -11.253527641296387
    8. '```' → logprob: -11.503527641296387
    9. '(n' → logprob: -11.628527641296387
    10. ')' → logprob: -11.753527641296387

Token 555: ' Lecture' (ID: 106534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15928548574447632
    2. ' grid' → logprob: -2.909285545349121
    3. ' #' → logprob: -3.909285545349121
    4. '#' → logprob: -3.909285545349121
    5. ' lines' → logprob: -4.159285545349121
    6. ' """' → logprob: -4.409285545349121
    7. ' n' → logprob: -5.159285545349121
    8. 'n' → logprob: -5.409285545349121
    9. '"""' → logprob: -5.534285545349121
    10. ' test' → logprob: -6.034285545349121

Token 556: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07573354244232178
    2. '():' → logprob: -3.0757336616516113
    3. '()' → logprob: -3.9507336616516113
    4. '():
' → logprob: -5.575733661651611
    5. ':' → logprob: -6.325733661651611
    6. ' des' → logprob: -7.075733661651611
    7. 'def' → logprob: -7.325733661651611
    8. 'de' → logprob: -9.575733184814453
    9. ' de' → logprob: -9.700733184814453
    10. 'des' → logprob: -9.700733184814453

Token 557: ' multiples' (ID: 70720)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4080686867237091
    2. ' données' → logprob: -1.6580686569213867
    3. ' n' → logprob: -2.1580686569213867
    4. ' lignes' → logprob: -4.783068656921387
    5. 'import' → logprob: -5.283068656921387
    6. ' entr' → logprob: -6.033068656921387
    7. 'l' → logprob: -6.158068656921387
    8. 'don' → logprob: -6.158068656921387
    9. ' inputs' → logprob: -6.283068656921387
    10. 'entrée' → logprob: -7.033068656921387

Token 558: ' jeux' (ID: 38561)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.18619076907634735
    2. ' test' → logprob: -3.1861908435821533
    3. 'l' → logprob: -3.3111908435821533
    4. '   ' → logprob: -3.4361908435821533
    5. ' entr' → logprob: -4.186190605163574
    6. ' tests' → logprob: -4.311190605163574
    7. ' cas' → logprob: -4.686190605163574
    8. 'gr' → logprob: -4.686190605163574
    9. ' cases' → logprob: -5.811190605163574
    10. ' lines' → logprob: -6.061190605163574

Token 559: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9241034984588623
    2. 'd' → logprob: -1.1741034984588623
    3. ' de' → logprob: -1.2991034984588623
    4. ' d' → logprob: -4.174103736877441
    5. '_de' → logprob: -5.799103736877441
    6. 'tests' → logprob: -6.799103736877441
    7. '_d' → logprob: -7.549103736877441
    8. ' tests' → logprob: -7.799103736877441
    9. '_' → logprob: -8.299103736877441
    10. 'test' → logprob: -9.174103736877441

Token 560: ' données' (ID: 30580)
  Prédit: 'tests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tests' → logprob: -0.5399850010871887
    2. 'test' → logprob: -1.289984941482544
    3. 'd' → logprob: -2.039984941482544
    4. 'don' → logprob: -4.664985179901123
    5. ' données' → logprob: -6.164985179901123
    6. '```' → logprob: -9.164984703063965
    7. ' tests' → logprob: -9.414984703063965
    8. 'data' → logprob: -9.539984703063965
    9. 'car' → logprob: -9.789984703063965
    10. '#' → logprob: -10.289984703063965

Token 561: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005432962439954281
    2. '    
' → logprob: -5.880433082580566
    3. ':' → logprob: -6.130433082580566
    4. ',' → logprob: -9.005433082580566
    5. 'import' → logprob: -9.880433082580566
    6. ' :' → logprob: -9.880433082580566
    7. ':
' → logprob: -10.005433082580566
    8. '
' → logprob: -10.630433082580566
    9. '   
' → logprob: -10.755433082580566
    10. 'n' → logprob: -11.005433082580566

Token 562: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.00036144492332823575
    2. '’à' → logprob: -8.500361442565918
    3. 'à' → logprob: -10.000361442565918
    4. ''au' → logprob: -10.125361442565918
    5. '_' → logprob: -10.250361442565918
    6. ''a' → logprob: -10.500361442565918
    7. '_a' → logprob: -12.500361442565918
    8. ''' → logprob: -12.750361442565918
    9. 'a' → logprob: -13.125361442565918
    10. '   ' → logprob: -15.250361442565918

Token 563: ' la' (ID: 557)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.008226483128964901
    2. '''' → logprob: -5.25822639465332
    3. 'la' → logprob: -7.13322639465332
    4. ' EOF' → logprob: -7.25822639465332
    5. '""' → logprob: -7.63322639465332
    6. 'ce' → logprob: -7.63322639465332
    7. '```' → logprob: -8.88322639465332
    8. ' ce' → logprob: -9.13322639465332
    9. 'fin' → logprob: -9.13322639465332
    10. 'une' → logprob: -10.13322639465332

Token 564: ' ligne' (ID: 19583)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.10097796469926834
    2. 'EOF' → logprob: -2.350977897644043
    3. ' fin' → logprob: -8.100977897644043
    4. 'ligne' → logprob: -8.600977897644043
    5. ' EOF' → logprob: -9.100977897644043
    6. 'val' → logprob: -10.350977897644043
    7. '```' → logprob: -10.975977897644043
    8. 'l' → logprob: -11.100977897644043
    9. 'entrée' → logprob: -11.225977897644043
    10. 'f' → logprob: -11.350977897644043

Token 565: ' '' (ID: 461)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.09286782145500183
    2. ' vide' → logprob: -2.467867851257324
    3. 'vid' → logprob: -6.967867851257324
    4. ' =' → logprob: -7.092867851257324
    5. '=""' → logprob: -7.342867851257324
    6. ' de' → logprob: -7.967867851257324
    7. ' ' → logprob: -8.592867851257324
    8. '   ' → logprob: -9.342867851257324
    9. '=''' → logprob: -9.342867851257324
    10. 'de' → logprob: -9.467867851257324

Token 566: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.183576226234436
    2. '"' → logprob: -1.808576226234436
    3. 'END' → logprob: -1.808576226234436
    4. 'STOP' → logprob: -2.5585761070251465
    5. '0' → logprob: -2.6835761070251465
    6. '''' → logprob: -2.8085761070251465
    7. '""' → logprob: -2.8085761070251465
    8. 'fin' → logprob: -3.5585761070251465
    9. 'EOF' → logprob: -3.9335761070251465
    10. 'FIN' → logprob: -3.9335761070251465

Token 567: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00599598279222846
    2. '\n' → logprob: -5.255995750427246
    3. '0' → logprob: -7.755995750427246
    4. ' '' → logprob: -9.380995750427246
    5. ''
' → logprob: -9.505995750427246
    6. '"' → logprob: -9.505995750427246
    7. ''\' → logprob: -10.755995750427246
    8. ''.' → logprob: -10.880995750427246
    9. ''''' → logprob: -11.130995750427246
    10. 'n' → logprob: -11.755995750427246

Token 568: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005756704485975206
    2. '    
' → logprob: -7.625575542449951
    3. '
' → logprob: -9.62557601928711
    4. '```' → logprob: -11.25057601928711
    5. '  
' → logprob: -13.50057601928711
    6. '<|end|>' → logprob: -13.87557601928711
    7. '   
' → logprob: -14.12557601928711
    8. '   ' → logprob: -14.62557601928711
    9. '#' → logprob: -14.75057601928711
    10. 'n' → logprob: -14.75057601928711

Token 569: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020173825323581696
    2. ' while' → logprob: -7.002017498016357
    3. '
' → logprob: -7.252017498016357
    4. '    
' → logprob: -8.2520170211792
    5. ' 
' → logprob: -10.5020170211792
    6. 'while' → logprob: -10.7520170211792
    7. '```' → logprob: -11.1270170211792
    8. '  ' → logprob: -11.6270170211792
    9. ' ' → logprob: -11.6270170211792
    10. '    ' → logprob: -11.7520170211792

Token 570: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.09854656457901001
    2. ' each' → logprob: -2.9735465049743652
    3. ' i' → logprob: -3.9735465049743652
    4. ' line' → logprob: -5.223546504974365
    5. 'each' → logprob: -5.223546504974365
    6. ' n' → logprob: -5.973546504974365
    7. ' ' → logprob: -6.098546504974365
    8. ' chacune' → logprob: -6.723546504974365
    9. ' continuer' → logprob: -6.848546504974365
    10. '_' → logprob: -7.348546504974365

Token 571: ' jeu' (ID: 24626)
  Prédit: ' jeu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jeu' → logprob: -0.7336589097976685
    2. 'jeu' → logprob: -0.7336589097976685
    3. 'data' → logprob: -5.233658790588379
    4. 'cas' → logprob: -5.233658790588379
    5. 'n' → logprob: -5.483658790588379
    6. ' dataset' → logprob: -5.608658790588379
    7. ' data' → logprob: -5.858658790588379
    8. '_' → logprob: -5.983658790588379
    9. 'case' → logprob: -6.108658790588379
    10. 'dataset' → logprob: -6.108658790588379

Token 572: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.053947605192661285
    2. '   ' → logprob: -3.053947687149048
    3. 'de' → logprob: -5.678947448730469
    4. '    ' → logprob: -7.053947448730469
    5. '  ' → logprob: -7.803947448730469
    6. 'def' → logprob: -9.053947448730469
    7. ' ' → logprob: -9.178947448730469
    8. '_' → logprob: -9.553947448730469
    9. ':' → logprob: -9.553947448730469
    10. ' =' → logprob: -10.303947448730469

Token 573: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00037383107701316476
    2. 'don' → logprob: -8.375373840332031
    3. 'test' → logprob: -9.625373840332031
    4. 'data' → logprob: -10.500373840332031
    5. ' données' → logprob: -10.875373840332031
    6. '```' → logprob: -10.875373840332031
    7. 'datas' → logprob: -12.500373840332031
    8. 'tests' → logprob: -12.875373840332031
    9. 'n' → logprob: -13.375373840332031
    10. 'entrée' → logprob: -14.000373840332031

Token 574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.260733425617218
    2. '   ' → logprob: -1.5107333660125732
    3. ':' → logprob: -5.135733604431152
    4. ' ,' → logprob: -6.385733604431152
    5. ',n' → logprob: -7.510733604431152
    6. 'n' → logprob: -8.010733604431152
    7. ' :' → logprob: -9.510733604431152
    8. ' n' → logprob: -9.885733604431152
    9. ',
' → logprob: -10.010733604431152
    10. ':
' → logprob: -10.135733604431152

Token 575: ' on' (ID: 402)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.760622501373291
    2. '   ' → logprob: -0.885622501373291
    3. 'n' → logprob: -2.135622501373291
    4. 't' → logprob: -6.635622501373291
    5. '    ' → logprob: -8.135622024536133
    6. ' t' → logprob: -8.510622024536133
    7. '   ' → logprob: -10.010622024536133
    8. '  ' → logprob: -10.260622024536133
    9. '	n' → logprob: -10.635622024536133
    10. ' ' → logprob: -10.760622024536133

Token 576: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0125538110733032
    2. ' continue' → logprob: -1.1375538110733032
    3. '    ' → logprob: -1.5125538110733032
    4. 'contin' → logprob: -3.8875536918640137
    5. 'continue' → logprob: -4.012553691864014
    6. ' réalise' → logprob: -5.137553691864014
    7. ' continues' → logprob: -5.262553691864014
    8. ' n' → logprob: -5.387553691864014
    9. 'def' → logprob: -5.387553691864014
    10. ' complète' → logprob: -5.762553691864014

Token 577: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -8.423219696851447e-05
    2. 'ul' → logprob: -9.625083923339844
    3. 'cule' → logprob: -11.625083923339844
    4. 'ulte' → logprob: -13.125083923339844
    5. 'ulé' → logprob: -13.125083923339844
    6. '```' → logprob: -13.625083923339844
    7. '_' → logprob: -14.375083923339844
    8. 'ulate' → logprob: -14.750083923339844
    9. 'l' → logprob: -15.125083923339844
    10. '**' → logprob: -15.125083923339844

Token 578: ' la' (ID: 557)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.0898948907852173
    2. ' la' → logprob: -1.2148948907852173
    3. ' le' → logprob: -1.4648948907852173
    4. '   ' → logprob: -2.2148947715759277
    5. 'et' → logprob: -4.089894771575928
    6. '    ' → logprob: -5.714894771575928
    7. 'le' → logprob: -6.214894771575928
    8. 'la' → logprob: -6.589894771575928
    9. '  ' → logprob: -7.089894771575928
    10. ' ' → logprob: -7.339894771575928

Token 579: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.15880465507507324
    2. 'plus' → logprob: -2.7838046550750732
    3. 'val' → logprob: -3.7838046550750732
    4. 'result' → logprob: -4.783804893493652
    5. 'long' → logprob: -4.908804893493652
    6. ' plus' → logprob: -5.033804893493652
    7. 'tail' → logprob: -5.408804893493652
    8. ' max' → logprob: -5.658804893493652
    9. ' maximal' → logprob: -5.783804893493652
    10. ' longueur' → logprob: -5.783804893493652

Token 580: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.09524014592170715
    2. 'grand' → logprob: -2.9702401161193848
    3. ' grande' → logprob: -3.7202401161193848
    4. 'long' → logprob: -5.845240116119385
    5. '_gr' → logprob: -5.970240116119385
    6. 'max' → logprob: -6.095240116119385
    7. 'import' → logprob: -6.345240116119385
    8. 'large' → logprob: -6.470240116119385
    9. '```' → logprob: -6.970240116119385
    10. '_' → logprob: -7.345240116119385

Token 581: ' chaîne' (ID: 89288)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3038017749786377
    2. 'chaine' → logprob: -1.4288017749786377
    3. 'sé' → logprob: -1.5538017749786377
    4. ' sé' → logprob: -2.4288017749786377
    5. 'suite' → logprob: -3.1788017749786377
    6. ' ' → logprob: -3.4288017749786377
    7. ' chaîne' → logprob: -3.4288017749786377
    8. 's' → logprob: -3.6788017749786377
    9. ' longueur' → logprob: -4.303801536560059
    10. 'con' → logprob: -4.928801536560059

Token 582: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32725635170936584
    2. 'de' → logprob: -1.9522563219070435
    3. ' continue' → logprob: -3.202256441116333
    4. 'con' → logprob: -3.327256441116333
    5. ' cons' → logprob: -3.827256441116333
    6. ' ' → logprob: -4.202256202697754
    7. '   ' → logprob: -5.077256202697754
    8. ' d' → logprob: -5.452256202697754
    9. 'd' → logprob: -5.702256202697754
    10. ' consecutive' → logprob: -5.827256202697754

Token 583: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42830970883369446
    2. ''' → logprob: -1.303309679031372
    3. ' ' → logprob: -3.303309679031372
    4. ' '' → logprob: -3.303309679031372
    5. ''un' → logprob: -6.428309917449951
    6. 'car' → logprob: -7.678309917449951
    7. ''s' → logprob: -7.803309917449951
    8. ' caractères' → logprob: -8.553309440612793
    9. 'un' → logprob: -9.303309440612793
    10. '"' → logprob: -9.428309440612793

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014683439396321774
    2. ''' → logprob: -4.264683246612549
    3. ' ' → logprob: -9.264683723449707
    4. ' '' → logprob: -9.264683723449707
    5. ''un' → logprob: -9.514683723449707
    6. '```' → logprob: -9.764683723449707
    7. ''s' → logprob: -10.014683723449707
    8. '"' → logprob: -10.264683723449707
    9. 'uns' → logprob: -10.389683723449707
    10. 'car' → logprob: -10.889683723449707

Token 585: ' cons' (ID: 1473)
  Prédit: ' cons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.10272371023893356
    2. 's' → logprob: -2.8527235984802246
    3. 'con' → logprob: -3.3527235984802246
    4. 'cons' → logprob: -5.602723598480225
    5. '_con' → logprob: -6.977723598480225
    6. ' con' → logprob: -9.227724075317383
    7. '_' → logprob: -10.102724075317383
    8. ' ' → logprob: -10.602724075317383
    9. ' s' → logprob: -10.727724075317383
    10. '_cons' → logprob: -10.727724075317383

Token 586: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.001035787514410913
    2. 'ecut' → logprob: -7.251035690307617
    3. 'éc' → logprob: -8.501035690307617
    4. 'é' → logprob: -9.376035690307617
    5. '"' → logprob: -11.126035690307617
    6. '```' → logprob: -11.626035690307617
    7. 'ec' → logprob: -12.876035690307617
    8. 'secut' → logprob: -13.001035690307617
    9. 'e' → logprob: -13.126035690307617
    10. '{' → logprob: -13.876035690307617

Token 587: 'ifs' (ID: 14119)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.0612061582505703
    2. 'uts' → logprob: -3.561206102371216
    3. 'utive' → logprob: -3.686206102371216
    4. 'u' → logprob: -5.311206340789795
    5. 's' → logprob: -8.436205863952637
    6. 'us' → logprob: -8.936205863952637
    7. '"' → logprob: -9.561205863952637
    8. 'utit' → logprob: -9.811205863952637
    9. 'uti' → logprob: -10.186205863952637
    10. ' ut' → logprob: -10.311205863952637

Token 588: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14392386376857758
    2. ' dans' → logprob: -2.768923759460449
    3. ' en' → logprob: -3.768923759460449
    4. '.' → logprob: -4.393923759460449
    5. ' et' → logprob: -4.393923759460449
    6. ' présents' → logprob: -5.268923759460449
    7. ' présentes' → logprob: -5.518923759460449
    8. ' présente' → logprob: -5.893923759460449
    9. ',' → logprob: -6.143923759460449
    10. 'dans' → logprob: -6.643923759460449

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008746705949306488
    2. ' dans' → logprob: -5.13374662399292
    3. ' en' → logprob: -7.13374662399292
    4. ' de' → logprob: -7.38374662399292
    5. ' in' → logprob: -7.88374662399292
    6. '    ' → logprob: -7.88374662399292
    7. ',' → logprob: -9.008747100830078
    8. '    
' → logprob: -9.508747100830078
    9. 'dans' → logprob: -9.633747100830078
    10. ' et' → logprob: -9.758747100830078

Token 590: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10873712599277496
    2. ' en' → logprob: -2.9837372303009033
    3. ' dans' → logprob: -3.4837372303009033
    4. ' et' → logprob: -5.358736991882324
    5. ' de' → logprob: -5.733736991882324
    6. '.' → logprob: -6.358736991882324
    7. ' in' → logprob: -6.358736991882324
    8. 'dans' → logprob: -6.358736991882324
    9. ' présents' → logprob: -6.483736991882324
    10. ',' → logprob: -6.608736991882324

Token 591: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2611445486545563
    2. '   ' → logprob: -1.8861445188522339
    3. 'print' → logprob: -2.6361446380615234
    4. ' affiche' → logprob: -5.886144638061523
    5. ' imprime' → logprob: -6.636144638061523
    6. ' les' → logprob: -7.261144638061523
    7. '    ' → logprob: -7.511144638061523
    8. ' l' → logprob: -7.886144638061523
    9. ' la' → logprob: -8.261144638061523
    10. 'aff' → logprob: -8.386144638061523

Token 592: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6044126152992249
    2. ' print' → logprob: -0.9794126152992249
    3. 'aff' → logprob: -3.60441255569458
    4. '   ' → logprob: -3.72941255569458
    5. ' affiche' → logprob: -4.35441255569458
    6. ' imprime' → logprob: -5.10441255569458
    7. ' l' → logprob: -5.72941255569458
    8. '_aff' → logprob: -6.85441255569458
    9. 'l' → logprob: -6.97941255569458
    10. '_print' → logprob: -7.47941255569458

Token 593: ' le' (ID: 505)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.6684705018997192
    2. '(' → logprob: -1.4184705018997192
    3. '()' → logprob: -1.9184705018997192
    4. '(len' → logprob: -3.0434703826904297
    5. 'la' → logprob: -3.9184703826904297
    6. ' le' → logprob: -5.29347038269043
    7. ' la' → logprob: -5.41847038269043
    8. '   ' → logprob: -5.41847038269043
    9. 'le' → logprob: -5.54347038269043
    10. '("")' → logprob: -5.91847038269043

Token 594: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.08233769237995148
    2. 'result' → logprob: -2.5823376178741455
    3. ' résultat' → logprob: -6.332337856292725
    4. 'max' → logprob: -6.957337856292725
    5. 'nombre' → logprob: -8.332337379455566
    6. 'res' → logprob: -8.582337379455566
    7. 'r' → logprob: -8.707337379455566
    8. 'ré' → logprob: -9.957337379455566
    9. ' resultat' → logprob: -10.582337379455566
    10. 'Rés' → logprob: -10.832337379455566

Token 595: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018236928153783083
    2. '.' → logprob: -6.626823902130127
    3. '    
' → logprob: -8.626823425292969
    4. '
' → logprob: -8.876823425292969
    5. ':' → logprob: -9.626823425292969
    6. ')' → logprob: -9.626823425292969
    7. '       ' → logprob: -11.501823425292969
    8. ',' → logprob: -11.751823425292969
    9. '<|end|>' → logprob: -12.126823425292969
    10. '```' → logprob: -12.251823425292969

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10257386416196823
    2. '
' → logprob: -2.352573871612549
    3. '    
' → logprob: -6.102573871612549
    4. '```' → logprob: -9.85257339477539
    5. ' 
' → logprob: -9.97757339477539
    6. '  
' → logprob: -11.97757339477539
    7. '\n' → logprob: -12.10257339477539
    8. '   
' → logprob: -12.35257339477539
    9. '' → logprob: -13.60257339477539
    10. 'n' → logprob: -13.85257339477539

Token 597: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02044062875211239
    2. '
' → logprob: -4.020440578460693
    3. '    
' → logprob: -6.895440578460693
    4. 'n' → logprob: -7.520440578460693
    5. '\n' → logprob: -8.520441055297852
    6. '"""' → logprob: -8.895441055297852
    7. '"""
' (adapté à ' """
') → logprob: -9.270441055297852
    8. '```' → logprob: -9.270441055297852
    9. '  
' → logprob: -9.895441055297852
    10. ' 
' → logprob: -10.020441055297852

Token 598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2835821807384491
    2. ' while' → logprob: -1.5335822105407715
    3. 'while' → logprob: -3.7835822105407715
    4. 'n' → logprob: -5.4085822105407715
    5. ' n' → logprob: -5.9085822105407715
    6. '
' → logprob: -7.6585822105407715
    7. '    
' → logprob: -8.158581733703613
    8. '```' → logprob: -8.408581733703613
    9. ' 
' → logprob: -9.283581733703613
    10. 'import' → logprob: -10.033581733703613

Token 599: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -4.961759259458631e-06
    2. ' while' → logprob: -13.000004768371582
    3. 'import' → logprob: -13.250004768371582
    4. '   ' → logprob: -14.250004768371582
    5. 'n' → logprob: -15.500004768371582
    6. '```' → logprob: -17.7500057220459
    7. '	while' → logprob: -20.8750057220459
    8. '
' → logprob: -21.5000057220459
    9. 'While' → logprob: -21.6250057220459
    10. '    
' → logprob: -23.5000057220459

Token 600: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0003455944824963808
    2. ' True' → logprob: -8.000345230102539
    3. '(True' → logprob: -11.500345230102539
    4. '   ' → logprob: -17.00034523010254
    5. '=True' → logprob: -17.00034523010254
    6. 'true' → logprob: -17.12534523010254
    7. '1' → logprob: -20.00034523010254
    8. ' ' → logprob: -20.62534523010254
    9. 'TRUE' → logprob: -20.62534523010254
    10. '```' → logprob: -21.12534523010254

Token 601: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03733132779598236
    2. '       ' → logprob: -3.4123313426971436
    3. ':
' → logprob: -6.0373311042785645
    4. ' :' → logprob: -7.5373311042785645
    5. '   ' → logprob: -7.5373311042785645
    6. '():' → logprob: -8.912331581115723
    7. ',' → logprob: -10.912331581115723
    8. '<|end|>' → logprob: -11.162331581115723
    9. '):' → logprob: -11.787331581115723
    10. '.' → logprob: -12.287331581115723

Token 602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02797652781009674
    2. 'n' → logprob: -3.6529765129089355
    3. 'line' → logprob: -7.0279765129089355
    4. ' n' → logprob: -8.277976989746094
    5. 'input' → logprob: -8.402976989746094
    6. ' line' → logprob: -8.527976989746094
    7. '   ' → logprob: -10.527976989746094
    8. '	' → logprob: -11.402976989746094
    9. 'ind' → logprob: -11.652976989746094
    10. 'try' → logprob: -11.777976989746094

Token 603: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.034445781260728836
    2. 'line' (adapté à ' line') → logprob: -3.5344457626342773
    3. '   ' → logprob: -5.534445762634277
    4. 'try' → logprob: -8.034445762634277
    5. ' n' → logprob: -8.784445762634277
    6. ' line' → logprob: -8.909445762634277
    7. 'size' → logprob: -9.409445762634277
    8. 'ligne' → logprob: -10.659445762634277
    9. 'input' → logprob: -12.284445762634277
    10. '       ' → logprob: -12.659445762634277

Token 604: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067154900170862675
    2. ' =' → logprob: -5.006715297698975
    3. '=
' → logprob: -17.006715774536133
    4. '=input' → logprob: -17.256715774536133
    5. '_' → logprob: -17.756715774536133
    6. '＝' → logprob: -18.256715774536133
    7. 's' → logprob: -19.131715774536133
    8. '=

' → logprob: -19.256715774536133
    9. '=line' → logprob: -19.631715774536133
    10. '_=' → logprob: -19.881715774536133

Token 605: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00033546582562848926
    2. ' input' → logprob: -8.000335693359375
    3. '(input' → logprob: -22.875335693359375
    4. '=input' → logprob: -23.750335693359375
    5. '	input' → logprob: -24.750335693359375
    6. '<input' → logprob: -25.000335693359375
    7. 'int' → logprob: -26.375335693359375
    8. ' ' → logprob: -27.750335693359375
    9. ',input' → logprob: -28.500335693359375
    10. '   ' → logprob: -28.750335693359375

Token 606: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10033983737230301
    2. '().' → logprob: -2.350339889526367
    3. '()
' → logprob: -8.975339889526367
    4. '(' → logprob: -12.475339889526367
    5. '()

' → logprob: -14.100339889526367
    6. '()>' → logprob: -14.225339889526367
    7. '.strip' → logprob: -14.850339889526367
    8. ' ()' → logprob: -15.225339889526367
    9. '()<' → logprob: -15.975339889526367
    10. '())' → logprob: -16.100339889526367

Token 607: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.512236498361744e-07
    2. 'rstrip' → logprob: -14.500000953674316
    3. ' strip' → logprob: -19.25
    4. '(strip' → logprob: -22.5
    5. '.strip' → logprob: -22.625
    6. '_strip' → logprob: -23.0
    7. 'split' → logprob: -23.25
    8. 'str' → logprob: -23.375
    9. '-strip' → logprob: -23.5
    10. 'isdigit' → logprob: -24.75

Token 608: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03806169703602791
    2. '()
' → logprob: -3.2880616188049316
    3. '       ' → logprob: -11.78806209564209
    4. '())' → logprob: -12.41306209564209
    5. '()
' → logprob: -13.03806209564209
    6. ')' → logprob: -13.53806209564209
    7. '()\' → logprob: -13.78806209564209
    8. '<|end|>' → logprob: -13.91306209564209
    9. '()

' → logprob: -14.03806209564209
    10. '())
' → logprob: -14.16306209564209

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021004180889576674
    2. '<|end|>' → logprob: -6.627100467681885
    3. 'if' → logprob: -7.877100467681885
    4. ' if' → logprob: -8.127099990844727
    5. '   ' → logprob: -10.127099990844727
    6. '        
' → logprob: -11.502099990844727
    7. '<|end|>' → logprob: -12.002099990844727
    8. ' ' → logprob: -12.252099990844727
    9. 'n' → logprob: -12.377099990844727
    10. '#' → logprob: -12.627099990844727

Token 610: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.6240566083070007e-06
    2. ' if' → logprob: -13.500001907348633
    3. '       ' → logprob: -16.000001907348633
    4. 'n' → logprob: -19.125001907348633
    5. 'If' → logprob: -20.625001907348633
    6. '        
' → logprob: -21.625001907348633
    7. '   ' → logprob: -22.125001907348633
    8. '
' → logprob: -22.750001907348633
    9. '	if' → logprob: -23.000001907348633
    10. '           ' → logprob: -23.250001907348633

Token 611: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.018150178715586662
    2. ' line' → logprob: -4.018150329589844
    3. ' not' → logprob: -15.518150329589844
    4. 'not' → logprob: -16.518150329589844
    5. ' ' → logprob: -17.893150329589844
    6. '	line' → logprob: -18.518150329589844
    7. '#line' → logprob: -19.018150329589844
    8. '(line' → logprob: -19.393150329589844
    9. '=line' → logprob: -19.393150329589844
    10. '0' → logprob: -20.893150329589844

Token 612: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006745805032551289
    2. ' ==' → logprob: -5.0067458152771
    3. '=' → logprob: -11.131745338439941
    4. '()==' → logprob: -12.006745338439941
    5. '=='' → logprob: -12.381745338439941
    6. '===' → logprob: -12.756745338439941
    7. '==
' → logprob: -13.631745338439941
    8. '=="' → logprob: -14.256745338439941
    9. ')==' → logprob: -14.381745338439941
    10. ']==' → logprob: -15.631745338439941

Token 613: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015127197839319706
    2. '"' → logprob: -6.50151252746582
    3. '0' → logprob: -11.50151252746582
    4. ' '' → logprob: -15.37651252746582
    5. '`' → logprob: -17.87651252746582
    6. '('' → logprob: -18.00151252746582
    7. ''a' → logprob: -19.12651252746582
    8. '‘' → logprob: -19.87651252746582
    9. ''A' → logprob: -20.00151252746582
    10. ''end' → logprob: -20.25151252746582

Token 614: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ''' → logprob: -19.625
    3. ' ' → logprob: -21.625
    4. '۰' → logprob: -22.25
    5. '০' → logprob: -23.625
    6. '```' → logprob: -24.125
    7. '')' → logprob: -24.375
    8. '"' → logprob: -24.5
    9. '０' → logprob: -24.875
    10. '०' → logprob: -25.625

Token 615: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7302825450897217
    2. '':' → logprob: -0.7302825450897217
    3. '':
' → logprob: -3.4802825450897217
    4. ':
' → logprob: -5.980282783508301
    5. '):' → logprob: -6.480282783508301
    6. '):
' → logprob: -7.980282783508301
    7. ''' → logprob: -8.2302827835083
    8. ''):
' → logprob: -8.2302827835083
    9. ')' → logprob: -8.3552827835083
    10. ':return' → logprob: -8.8552827835083

Token 616: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005298146512359381
    2. '       ' → logprob: -5.255298137664795
    3. '		' → logprob: -10.255298614501953
    4. '	       ' → logprob: -11.630298614501953
    5. '          ' → logprob: -12.255298614501953
    6. ':' → logprob: -12.255298614501953
    7. ' break' → logprob: -13.380298614501953
    8. '               ' → logprob: -13.380298614501953
    9. '   ' → logprob: -13.630298614501953
    10. 'break' → logprob: -13.755298614501953

Token 617: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.010461565107107162
    2. ' break' → logprob: -4.760461330413818
    3. '           ' → logprob: -6.760461330413818
    4. '       ' → logprob: -7.510461330413818
    5. 'return' → logprob: -9.010461807250977
    6. '	break' → logprob: -11.260461807250977
    7. '               ' → logprob: -12.510461807250977
    8. '_break' → logprob: -15.135461807250977
    9. ' return' → logprob: -15.760461807250977
    10. '   ' → logprob: -16.135461807250977

Token 618: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004601961001753807
    2. '
' → logprob: -6.379601955413818
    3. '<|end|>' → logprob: -6.504601955413818
    4. '        
' → logprob: -6.629601955413818
    5. 'n' → logprob: -10.129602432250977
    6. '<|end|>' → logprob: -11.879602432250977
    7. ',' → logprob: -12.504602432250977
    8. '\n' → logprob: -12.754602432250977
    9. '		
' → logprob: -12.879602432250977
    10. '```' → logprob: -13.004602432250977

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010530580766499043
    2. 'n' → logprob: -4.760530471801758
    3. '
' → logprob: -7.135530471801758
    4. '        
' → logprob: -7.385530471801758
    5. '<|end|>' → logprob: -8.010530471801758
    6. '	n' → logprob: -10.010530471801758
    7. ' n' → logprob: -10.260530471801758
    8. '	' → logprob: -10.885530471801758
    9. '   ' → logprob: -11.260530471801758
    10. '		
' → logprob: -11.760530471801758

Token 620: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0006776464288122952
    2. ' n' → logprob: -7.500677585601807
    3. '       ' → logprob: -9.000678062438965
    4. '   ' → logprob: -13.750678062438965
    5. '        
' → logprob: -15.625678062438965
    6. '	n' → logprob: -16.37567710876465
    7. 'try' → logprob: -17.00067710876465
    8. '
' → logprob: -17.25067710876465
    9. '```' → logprob: -17.50067710876465
    10. '﻿' → logprob: -19.62567710876465

Token 621: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015281468629837
    2. '=' → logprob: -1.7015281915664673
    3. '=int' → logprob: -9.076528549194336
    4. 'int' → logprob: -16.201528549194336
    5. ',' → logprob: -16.451528549194336
    6. '   ' → logprob: -16.576528549194336
    7. ' =
' → logprob: -16.826528549194336
    8. ' ' → logprob: -16.826528549194336
    9. '<|end|>' → logprob: -16.826528549194336
    10. '＝' → logprob: -17.076528549194336

Token 622: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.547789674485102e-05
    2. ' int' → logprob: -10.250035285949707
    3. '[int' → logprob: -23.500036239624023
    4. '(int' → logprob: -24.125036239624023
    5. '=int' → logprob: -24.375036239624023
    6. '	int' → logprob: -25.750036239624023
    7. '<int' → logprob: -26.500036239624023
    8. ':int' → logprob: -27.250036239624023
    9. '   ' → logprob: -27.625036239624023
    10. ']int' → logprob: -28.250036239624023

Token 623: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. 'line' → logprob: -15.37501335144043
    4. '=line' → logprob: -17.87501335144043
    5. '[line' → logprob: -18.12501335144043
    6. ' line' → logprob: -18.50001335144043
    7. '(
' → logprob: -19.37501335144043
    8. '#line' → logprob: -19.50001335144043
    9. '(Line' → logprob: -20.50001335144043
    10. ',line' → logprob: -20.62501335144043

Token 624: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.264322317088954e-05
    2. ')
' → logprob: -9.875052452087402
    3. '       ' → logprob: -14.000052452087402
    4. ' )' → logprob: -15.125052452087402
    5. '   ' → logprob: -17.12505340576172
    6. '<|end|>' → logprob: -17.25005340576172
    7. ')
' → logprob: -18.25005340576172
    8. ')#' → logprob: -18.25005340576172
    9. '),' → logprob: -18.37505340576172
    10. ')}' → logprob: -18.50005340576172

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020029418170452118
    2. 'grid' → logprob: -4.020029544830322
    3. ' grid' → logprob: -6.395029544830322
    4. '	grid' → logprob: -9.020029067993164
    5. '        
' → logprob: -10.520029067993164
    6. '	' → logprob: -10.770029067993164
    7. '   ' → logprob: -11.020029067993164
    8. '```' → logprob: -12.020029067993164
    9. '<|end|>' → logprob: -12.645029067993164
    10. '
' → logprob: -12.770029067993164

Token 626: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -7.73183855926618e-05
    2. '       ' → logprob: -10.000077247619629
    3. ' grid' → logprob: -10.375077247619629
    4. '	grid' → logprob: -15.250077247619629
    5. '        
' → logprob: -15.625077247619629
    6. '```' → logprob: -16.375078201293945
    7. '.grid' → logprob: -16.875078201293945
    8. '(grid' → logprob: -17.125078201293945
    9. 'gr' → logprob: -17.250078201293945
    10. '_grid' → logprob: -17.625078201293945

Token 627: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740775227546692
    2. '=' → logprob: -0.9740775227546692
    3. '=[]' → logprob: -14.599077224731445
    4. '[' → logprob: -17.474077224731445
    5. '   ' → logprob: -17.724077224731445
    6. ' ' → logprob: -17.724077224731445
    7. '＝' → logprob: -17.974077224731445
    8. '=[' → logprob: -18.349077224731445
    9. ' ' → logprob: -18.724077224731445
    10. ' =[' → logprob: -18.849077224731445

Token 628: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017923936247825623
    2. '[]' → logprob: -6.7517924308776855
    3. '[input' → logprob: -8.001791954040527
    4. '[n' → logprob: -9.251791954040527
    5. '[int' → logprob: -10.376791954040527
    6. '[user' → logprob: -10.876791954040527
    7. '[data' → logprob: -11.126791954040527
    8. '[str' → logprob: -11.376791954040527
    9. '[key' → logprob: -11.501791954040527
    10. '[line' → logprob: -11.751791954040527

Token 629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015115512534976006
    2. ' for' → logprob: -4.265115737915039
    3. 'for' → logprob: -7.265115737915039
    4. '	' → logprob: -8.890115737915039
    5. '	for' → logprob: -9.640115737915039
    6. '<|end|>' → logprob: -10.765115737915039
    7. '   ' → logprob: -11.265115737915039
    8. '	   ' → logprob: -11.890115737915039
    9. '	       ' → logprob: -13.265115737915039
    10. '
' → logprob: -13.640115737915039

Token 630: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023250484839081764
    2. ' for' → logprob: -3.7732505798339844
    3. '       ' → logprob: -12.273250579833984
    4. '	for' → logprob: -15.023250579833984
    5. '   ' → logprob: -18.273250579833984
    6. '
' → logprob: -20.273250579833984
    7. '​' → logprob: -20.898250579833984
    8. ' ' → logprob: -21.648250579833984
    9. '```' → logprob: -21.773250579833984
    10. '        
' → logprob: -22.273250579833984

Token 631: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007133854669518769
    2. ' _' → logprob: -7.250713348388672
    3. '_i' → logprob: -12.625713348388672
    4. '_in' → logprob: -17.250713348388672
    5. 'i' → logprob: -17.375713348388672
    6. ' ' → logprob: -17.375713348388672
    7. '_range' → logprob: -17.375713348388672
    8. ' i' → logprob: -18.000713348388672
    9. '_=' → logprob: -18.125713348388672
    10. '   ' → logprob: -19.625713348388672

Token 632: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009152670972980559
    2. 'in' → logprob: -7.000915050506592
    3. ' ' → logprob: -13.12591552734375
    4. 'range' → logprob: -13.37591552734375
    5. '	in' → logprob: -16.12591552734375
    6. '  ' → logprob: -16.25091552734375
    7. 'import' → logprob: -17.25091552734375
    8. 'i' → logprob: -17.62591552734375
    9. ' range' → logprob: -17.87591552734375
    10. '   ' → logprob: -18.12591552734375

Token 633: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '	range' → logprob: -21.750036239624023
    4. '(range' → logprob: -21.875036239624023
    5. 'rang' → logprob: -22.625036239624023
    6. '_range' → logprob: -22.625036239624023
    7. '   ' → logprob: -24.000036239624023
    8. '  ' → logprob: -24.125036239624023
    9. ' ' → logprob: -24.750036239624023
    10. 'r' → logprob: -25.000036239624023

Token 634: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48886412382125854
    2. '(n' → logprob: -0.9888641238212585
    3. ' n' → logprob: -4.238863945007324
    4. 'range' → logprob: -9.238863945007324
    5. ' range' → logprob: -9.863863945007324
    6. '(' → logprob: -9.863863945007324
    7. ' (' → logprob: -10.613863945007324
    8. '	n' → logprob: -11.363863945007324
    9. ' in' → logprob: -11.488863945007324
    10. '_n' → logprob: -13.238863945007324

Token 635: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11300374567508698
    2. '):' → logprob: -2.238003730773926
    3. ')' → logprob: -9.113003730773926
    4. '):
' → logprob: -10.113003730773926
    5. ' ):
' → logprob: -11.738003730773926
    6. '   ' → logprob: -11.988003730773926
    7. ':' → logprob: -12.113003730773926
    8. '       ' → logprob: -12.488003730773926
    9. ':
' → logprob: -13.113003730773926
    10. ' ):' → logprob: -13.238003730773926

Token 636: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00040290577453561127
    2. '	       ' → logprob: -9.125402450561523
    3. ' grid' → logprob: -9.125402450561523
    4. '		   ' → logprob: -10.250402450561523
    5. '    	   ' → logprob: -10.375402450561523
    6. '
' → logprob: -10.750402450561523
    7. '            
' → logprob: -10.875402450561523
    8. '   ' → logprob: -11.250402450561523
    9. '	   ' → logprob: -11.375402450561523
    10. 'grid' → logprob: -12.000402450561523

Token 637: ' row' (ID: 5225)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.07092801481485367
    2. ' grid' → logprob: -2.8209280967712402
    3. 'row' (adapté à ' row') → logprob: -4.94592809677124
    4. ' row' → logprob: -6.57092809677124
    5. 'line' → logprob: -8.195927619934082
    6. ' line' → logprob: -9.070927619934082
    7. 'ligne' → logprob: -12.070927619934082
    8. 's' → logprob: -12.445927619934082
    9. '   ' → logprob: -13.320927619934082
    10. 'rows' → logprob: -13.820927619934082

Token 638: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141470432281494
    2. '=' → logprob: -1.701414704322815
    3. '=input' → logprob: -13.701415061950684
    4. ' =
' → logprob: -15.826415061950684
    5. '=line' → logprob: -16.326414108276367
    6. ' ' → logprob: -16.951414108276367
    7. 's' → logprob: -17.951414108276367
    8. '＝' → logprob: -18.201414108276367
    9. 'input' → logprob: -18.201414108276367
    10. '=
' → logprob: -18.451414108276367

Token 639: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009114635176956654
    2. ' input' → logprob: -7.000911235809326
    3. '=input' → logprob: -21.500911712646484
    4. '<input' → logprob: -22.000911712646484
    5. '(input' → logprob: -22.500911712646484
    6. '	input' → logprob: -22.500911712646484
    7. ',input' → logprob: -24.125911712646484
    8. '_input' → logprob: -24.375911712646484
    9. '   ' → logprob: -24.625911712646484
    10. 'Input' → logprob: -24.750911712646484

Token 640: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.023247340694069862
    2. '()' → logprob: -3.773247241973877
    3. ' ().' → logprob: -14.273247718811035
    4. '()
' → logprob: -14.898247718811035
    5. '(' → logprob: -15.273247718811035
    6. '())' → logprob: -15.898247718811035
    7. '()>' → logprob: -16.02324676513672
    8. ' ()' → logprob: -16.02324676513672
    9. '().'' → logprob: -17.02324676513672
    10. '()

' → logprob: -17.27324676513672

Token 641: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.8624639324116288e-06
    2. 'rstrip' → logprob: -13.250001907348633
    3. ' strip' → logprob: -21.250001907348633
    4. '_strip' → logprob: -22.500001907348633
    5. '.strip' → logprob: -23.375001907348633
    6. '(strip' → logprob: -23.625001907348633
    7. 'stripe' → logprob: -24.250001907348633
    8. 'split' → logprob: -25.000001907348633
    9. 'str' → logprob: -25.125001907348633
    10. '
' → logprob: -25.375001907348633

Token 642: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008978292346000671
    2. '()
' → logprob: -5.008978366851807
    3. ')' → logprob: -6.383978366851807
    4. '           ' → logprob: -7.633978366851807
    5. '())' → logprob: -10.133977890014648
    6. ')
' → logprob: -11.008977890014648
    7. '       ' → logprob: -12.008977890014648
    8. '<|end|>' → logprob: -12.758977890014648
    9. '               ' → logprob: -12.883977890014648
    10. '		' → logprob: -12.883977890014648

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.584239938296378e-06
    2. '<|end|>' → logprob: -12.500007629394531
    3. '	       ' → logprob: -13.500007629394531
    4. '       ' → logprob: -13.875007629394531
    5. '		' → logprob: -14.750007629394531
    6. '<|end|>' → logprob: -15.750007629394531
    7. '          ' → logprob: -15.875007629394531
    8. '	   ' → logprob: -15.875007629394531
    9. '            
' → logprob: -15.875007629394531
    10. '               ' → logprob: -16.00000762939453

Token 644: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.02906477265059948
    2. '           ' → logprob: -3.779064655303955
    3. '       ' → logprob: -5.279064655303955
    4. ' grid' → logprob: -7.279064655303955
    5. '   ' → logprob: -11.654065132141113
    6. '	grid' → logprob: -12.154065132141113
    7. '               ' → logprob: -14.654065132141113
    8. '(grid' → logprob: -15.279065132141113
    9. '.grid' → logprob: -15.529065132141113
    10. '```' → logprob: -16.404064178466797

Token 645: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.052377623040229e-05
    2. '.' → logprob: -9.625070571899414
    3. 'append' → logprob: -13.000070571899414
    4. ' .' → logprob: -13.625070571899414
    5. '.extend' → logprob: -14.500070571899414
    6. ').' → logprob: -15.750070571899414
    7. '.app' → logprob: -15.750070571899414
    8. '.ap' → logprob: -17.250070571899414
    9. '.Append' → logprob: -18.125070571899414
    10. ' append' → logprob: -18.125070571899414

Token 646: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.005240394733846188
    2. 'row' → logprob: -5.255240440368652
    3. ' row' → logprob: -12.005240440368652
    4. '(' → logprob: -14.755240440368652
    5. ',row' → logprob: -17.880239486694336
    6. ' (' → logprob: -18.005239486694336
    7. '	row' → logprob: -18.255239486694336
    8. '=row' → logprob: -19.005239486694336
    9. '[row' → logprob: -19.505239486694336
    10. '(
' → logprob: -20.255239486694336

Token 647: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038598617538809776
    2. ')
' → logprob: -7.875385761260986
    3. '   ' → logprob: -13.000386238098145
    4. ' )' → logprob: -13.625386238098145
    5. '       ' → logprob: -13.875386238098145
    6. ')return' → logprob: -14.125386238098145
    7. ')
' → logprob: -15.625386238098145
    8. '')' → logprob: -15.750386238098145
    9. '<|end|>' → logprob: -15.750386238098145
    10. ')

' → logprob: -16.500385284423828

Token 648: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05938131734728813
    2. '   ' → logprob: -3.1843812465667725
    3. '
' → logprob: -5.434381484985352
    4. '        
' → logprob: -5.559381484985352
    5. '    
' → logprob: -5.809381484985352
    6. '  
' → logprob: -5.934381484985352
    7. '<|end|>' → logprob: -6.184381484985352
    8. '```' → logprob: -9.434381484985352
    9. '   
' → logprob: -10.434381484985352
    10. '<|end|>' → logprob: -10.434381484985352

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060823954641819
    2. 'print' → logprob: -3.685823917388916
    3. '   ' → logprob: -4.185823917388916
    4. 'result' → logprob: -4.310823917388916
    5. ' print' → logprob: -5.935823917388916
    6. ' result' → logprob: -5.935823917388916
    7. '```' → logprob: -11.560824394226074
    8. '        
' → logprob: -13.810824394226074
    9. '    
' → logprob: -14.060824394226074
    10. '
' → logprob: -14.185824394226074

Token 650: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.00448981998488307
    2. 'print' → logprob: -5.504489898681641
    3. ' result' → logprob: -8.00448989868164
    4. 'res' → logprob: -10.12948989868164
    5. '       ' → logprob: -10.37948989868164
    6. 'answer' → logprob: -12.87948989868164
    7. ' print' → logprob: -13.37948989868164
    8. '   ' → logprob: -13.87948989868164
    9. 'max' → logprob: -14.50448989868164
    10. 'rés' → logprob: -15.50448989868164

Token 651: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967797577381134
    2. '=' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.686967849731445
    4. ' ' → logprob: -17.186967849731445
    5. '_' → logprob: -17.311967849731445
    6. ')' → logprob: -17.561967849731445
    7. '	' → logprob: -17.561967849731445
    8. '＝' → logprob: -17.686967849731445
    9. '   ' → logprob: -18.186967849731445
    10. '=int' → logprob: -19.186967849731445

Token 652: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004078401252627373
    2. ' max' → logprob: -5.504078388214111
    3. '(max' → logprob: -22.254077911376953
    4. '	max' → logprob: -23.754077911376953
    5. '   ' → logprob: -24.754077911376953
    6. ' ' → logprob: -25.004077911376953
    7. '=max' → logprob: -25.629077911376953
    8. '_max' → logprob: -25.879077911376953
    9. ',max' → logprob: -26.129077911376953
    10. '[max' → logprob: -26.254077911376953

Token 653: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.500000953674316
    3. '_cons' → logprob: -16.625
    4. 'con' → logprob: -17.875
    5. 'Con' → logprob: -19.0
    6. '_co' → logprob: -19.625
    7. '_CON' → logprob: -19.75
    8. '_max' → logprob: -20.5
    9. '_com' → logprob: -20.875
    10. '_c' → logprob: -21.125

Token 654: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.018093515187501907
    2. '_con' → logprob: -4.768093585968018
    3. 'con' → logprob: -5.018093585968018
    4. 'se' → logprob: -6.143093585968018
    5. 'sec' → logprob: -8.14309310913086
    6. 'secut' → logprob: -8.39309310913086
    7. 's' → logprob: -9.51809310913086
    8. '_' → logprob: -9.89309310913086
    9. 'ecut' → logprob: -11.89309310913086
    10. 'c' → logprob: -12.26809310913086

Token 655: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 'ones' → logprob: -17.625
    3. '```' → logprob: -18.5
    4. '_
' → logprob: -18.625
    5. '_one' → logprob: -19.75
    6. ' _' → logprob: -20.0
    7. '1' → logprob: -20.375
    8. ')_' → logprob: -20.75
    9. '_

' → logprob: -20.875
    10. '_len' → logprob: -20.875

Token 656: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -1.0280383548888494e-06
    2. ' ones' → logprob: -13.875000953674316
    3. 'one' → logprob: -17.125001907348633
    4. '1' → logprob: -17.375001907348633
    5. '```' → logprob: -18.125001907348633
    6. '_' → logprob: -19.125001907348633
    7. '.ones' → logprob: -19.875001907348633
    8. 'ons' → logprob: -21.125001907348633
    9. 'on' → logprob: -21.125001907348633
    10. 'ONES' → logprob: -21.500001907348633

Token 657: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.375001907348633
    3. ' (' → logprob: -15.375001907348633
    4. '(gr' → logprob: -15.750001907348633
    5. '(Grid' → logprob: -17.125001907348633
    6. '(
' → logprob: -17.500001907348633
    7. '(graph' → logprob: -20.250001907348633
    8. '(g' → logprob: -20.625001907348633
    9. '```' → logprob: -20.625001907348633
    10. ' grid' → logprob: -21.125001907348633

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5716304410016164e-05
    2. ',n' → logprob: -10.500035285949707
    3. ' ,' → logprob: -11.750035285949707
    4. ',
' → logprob: -15.875035285949707
    5. '   ' → logprob: -18.000036239624023
    6. '(n' → logprob: -18.500036239624023
    7. ',

' → logprob: -20.125036239624023
    8. '       ' → logprob: -20.500036239624023
    9. ',N' → logprob: -20.750036239624023
    10. '‌,' → logprob: -21.000036239624023

Token 659: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011703446507453918
    2. ' n' → logprob: -6.7511701583862305
    3. ')n' → logprob: -16.251171112060547
    4. '	n' → logprob: -17.876171112060547
    5. ')' → logprob: -20.001171112060547
    6. '$n' → logprob: -21.001171112060547
    7. '(n' → logprob: -21.126171112060547
    8. '_n' → logprob: -21.251171112060547
    9. '   ' → logprob: -22.501171112060547
    10. ',n' → logprob: -23.376171112060547

Token 660: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12693388760089874
    2. ')
' → logprob: -2.1269338130950928
    3. ')
' → logprob: -12.751934051513672
    4. '       ' → logprob: -13.626934051513672
    5. ')

' → logprob: -14.376934051513672
    6. '   ' → logprob: -14.376934051513672
    7. ')`
' → logprob: -15.501934051513672
    8. ' )' → logprob: -15.626934051513672
    9. ' )
' → logprob: -15.751934051513672
    10. ')`' → logprob: -17.751934051513672

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005329216364771128
    2. 'print' → logprob: -5.255329132080078
    3. '   ' → logprob: -9.755329132080078
    4. ' print' → logprob: -10.630329132080078
    5. '```' → logprob: -11.880329132080078
    6. '
' → logprob: -12.755329132080078
    7. '        
' → logprob: -12.880329132080078
    8. '<|end|>' → logprob: -15.005329132080078
    9. '    
' → logprob: -15.630329132080078
    10. '	print' → logprob: -15.880329132080078

Token 662: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00197395752184093
    2. ' print' → logprob: -6.251974105834961
    3. '       ' → logprob: -10.001974105834961
    4. '	print' → logprob: -18.25197410583496
    5. '   ' → logprob: -18.50197410583496
    6. '
' → logprob: -19.00197410583496
    7. '```' → logprob: -20.00197410583496
    8. '        
' → logprob: -22.62697410583496
    9. '.print' → logprob: -22.75197410583496
    10. '#print' → logprob: -23.00197410583496

Token 663: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'result' → logprob: -17.250001907348633
    4. '(results' → logprob: -18.000001907348633
    5. '(res' → logprob: -19.750001907348633
    6. '(resultado' → logprob: -20.625001907348633
    7. '=result' → logprob: -21.500001907348633
    8. ',result' → logprob: -21.625001907348633
    9. ' (' → logprob: -21.875001907348633
    10. '()' → logprob: -22.500001907348633

Token 664: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')`' → logprob: -15.25
    3. ' )' → logprob: -17.0
    4. ')
' → logprob: -17.625
    5. '))' → logprob: -18.5
    6. ')}' → logprob: -18.875
    7. '())' → logprob: -19.5
    8. ')**' → logprob: -19.75
    9. '`)' → logprob: -19.875
    10. '),' → logprob: -20.0

Token 665: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6814357042312622
    2. '<|end|>' → logprob: -1.0564357042312622
    3. '#' → logprob: -2.6814355850219727
    4. 'main' → logprob: -3.0564355850219727
    5. '
' → logprob: -3.6814355850219727
    6. '```' → logprob: -5.556435585021973
    7. '\n' → logprob: -7.681435585021973
    8. ' if' → logprob: -8.181435585021973
    9. '(main' → logprob: -8.181435585021973
    10. '\' → logprob: -8.431435585021973

Token 666: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16117466986179352
    2. '_' → logprob: -2.286174774169922
    3. ' __' → logprob: -3.161174774169922
    4. ' ' → logprob: -5.911174774169922
    5. '_name' → logprob: -6.536174774169922
    6. '___' → logprob: -8.286174774169922
    7. ' ' → logprob: -9.536174774169922
    8. '  ' → logprob: -9.661174774169922
    9. 'name' → logprob: -10.036174774169922
    10. ' ' → logprob: -10.161174774169922

Token 667: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009678296744823456
    2. ' ==' → logprob: -5.384678363800049
    3. '==' → logprob: -5.634678363800049
    4. '__.__' → logprob: -7.634678363800049
    5. ' __' → logprob: -8.13467788696289
    6. '.__' → logprob: -8.63467788696289
    7. 'name' → logprob: -8.63467788696289
    8. '=="' → logprob: -9.50967788696289
    9. '__.' → logprob: -9.50967788696289
    10. '[' → logprob: -10.13467788696289

Token 668: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3856492842023727e-06
    2. '__.__' → logprob: -14.125000953674316
    3. '____' → logprob: -15.375000953674316
    4. '___' → logprob: -15.500000953674316
    5. '==' → logprob: -16.750001907348633
    6. '__
' → logprob: -17.125001907348633
    7. ' ==' → logprob: -17.875001907348633
    8. '_' → logprob: -18.000001907348633
    9. '__.' → logprob: -18.250001907348633
    10. '__["' → logprob: -18.250001907348633

Token 669: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0017675277777016163
    2. '==' → logprob: -6.376767635345459
    3. '=="' → logprob: -10.0017671585083
    4. ' ==' → logprob: -11.2517671585083
    5. '___' → logprob: -12.7517671585083
    6. '__.__' → logprob: -13.5017671585083
    7. '_' → logprob: -13.6267671585083
    8. '=='' → logprob: -14.3767671585083
    9. '____' → logprob: -15.2517671585083
    10. '===' → logprob: -16.001768112182617

Token 670: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011052536778151989
    2. ''' → logprob: -4.51105260848999
    3. ' "__' → logprob: -12.511052131652832
    4. '__' → logprob: -13.886052131652832
    5. '"name' → logprob: -17.01105308532715
    6. ' '__' → logprob: -17.26105308532715
    7. '"user' → logprob: -17.51105308532715
    8. ''"' → logprob: -18.01105308532715
    9. '"'' → logprob: -18.51105308532715
    10. '"_' → logprob: -18.63605308532715

Token 671: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0017361093778163195
    2. '__' → logprob: -6.376736164093018
    3. 'name' → logprob: -10.50173568725586
    4. '"' → logprob: -12.87673568725586
    5. '__":
' → logprob: -14.12673568725586
    6. '_main' → logprob: -14.50173568725586
    7. '```' → logprob: -15.00173568725586
    8. 'built' → logprob: -15.12673568725586
    9. ' main' → logprob: -15.50173568725586
    10. '主' → logprob: -15.75173568725586

Token 672: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03833189606666565
    2. '__' → logprob: -3.288331985473633
    3. '__':
' → logprob: -8.163331985473633
    4. '__:' → logprob: -12.663331985473633
    5. '__["' → logprob: -13.288331985473633
    6. '__
' → logprob: -15.788331985473633
    7. '__",' → logprob: -15.913331985473633
    8. '__.' → logprob: -16.288331985473633
    9. '_' → logprob: -16.413331985473633
    10. '__
' → logprob: -16.663331985473633

Token 673: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16494518518447876
    2. ' main' → logprob: -1.914945125579834
    3. '	main' → logprob: -5.539945125579834
    4. '   ' → logprob: -7.164945125579834
    5. '_main' → logprob: -11.664945602416992
    6. '    
' → logprob: -14.789945602416992
    7. ' ' → logprob: -15.039945602416992
    8. '(main' → logprob: -15.789945602416992
    9. ' ' → logprob: -16.039945602416992
    10. '  ' → logprob: -16.414945602416992

Token 674: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.1472419600977446e-06
    2. ' main' → logprob: -13.750000953674316
    3. '	main' → logprob: -18.250001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '_main' → logprob: -24.375001907348633
    6. '.main' → logprob: -24.875001907348633
    7. '(main' → logprob: -25.875001907348633
    8. ' ' → logprob: -26.000001907348633
    9. 'ma' → logprob: -26.750001907348633
    10. '  ' → logprob: -27.125001907348633

Token 675: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 673
Tokens correctement prédits (1ère position, stricte): 307
Tokens correctement prédits (1ère position, avec adaptation): 349
Tokens correctement prédits (top 10): 588
Précision stricte (1ère position): 45.62%
Précision adaptée (1ère position): 51.86%
Précision (top 10): 87.37%
================================================================================
