================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def can_arrange_dominoes(dominoes):
    from collections import defaultdict, deque
    
    # Build graph: nodes are numbers 0-6, edges are dominoes (can be multiple edges)
    graph = defaultdict(list)
    degree = defaultdict(int)
    
    # Count edges and degrees
    for d in dominoes:
        a, b = d
        graph[a].append(b)
        graph[b].append(a)
        degree[a] += 1
        degree[b] += 1

    # For arrangement in one line, path must be Eulerian trail or circuit:
    # Conditions:
    #   - Graph has at most two nodes with odd degree.
    #   - All nodes with edges belong to a single connected component.
    nodes_with_edges = [node for node in degree if degree[node] > 0]
    if not nodes_with_edges:
        return True  # no dominoes
    
    # Check connectivity (on nodes that have edges)
    visited = set()
    def bfs(start):
        queue = deque([start])
        visited.add(start)
        while queue:
            u = queue.popleft()
            for v in graph[u]:
                if v not in visited:
                    visited.add(v)
                    queue.append(v)
    bfs(nodes_with_edges[0])
    if any(node not in visited for node in nodes_with_edges):
        return False
    
    odd_degree_nodes = [node for node in degree if degree[node] % 2 == 1]
    if len(odd_degree_nodes) == 0 or len(odd_degree_nodes) == 2:
        return True
    return False

def parse_domino(s):
    # s is two digits string like "13" -> (1,3)
    return (int(s[0]), int(s[1]))

def main():
    import sys
    lines = sys.stdin.read().strip().split('\n')
    # Process every pair of lines
    for i in range(0, len(lines), 2):
        n = int(lines[i])
        domino_strs = lines[i+1].split()
        dominoes = [parse_domino(d) for d in domino_strs]
        print("Yes" if can_arrange_dominoes(dominoes) else "No")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' can' (ID: 665)
  → Token d'amorce (pas de prédiction)

Token 2: '_arr' (ID: 25121)
  → Token d'amorce (pas de prédiction)

Token 3: 'ange' (ID: 1052)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.11322455108165741
    2. 'a' → logprob: -3.363224506378174
    3. 'ange' → logprob: -3.613224506378174
    4. 'ive' → logprob: -4.238224506378174
    5. 'e' → logprob: -4.488224506378174
    6. 'ays' → logprob: -4.988224506378174
    7. '```' → logprob: -5.238224506378174
    8. 'y' → logprob: -5.863224506378174
    9. '_' → logprob: -6.238224506378174
    10. 'ey' → logprob: -7.488224506378174

Token 4: '_dom' (ID: 90214)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5080219507217407
    2. '(' → logprob: -1.0080219507217407
    3. '```' → logprob: -4.258021831512451
    4. '_:' → logprob: -4.508021831512451
    5. '(_' → logprob: -5.633021831512451
    6. '():' → logprob: -6.883021831512451
    7. '(_:' → logprob: -6.883021831512451
    8. ' (' → logprob: -8.00802230834961
    9. '_(' → logprob: -8.25802230834961
    10. '(:' → logprob: -8.25802230834961

Token 5: 'ino' (ID: 2081)
  Prédit: 'inos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.31383150815963745
    2. 'ino' → logprob: -1.3138315677642822
    3. 'in' → logprob: -8.063831329345703
    4. '```' → logprob: -9.313831329345703
    5. 's' → logprob: -10.063831329345703
    6. '_' → logprob: -10.563831329345703
    7. 'ино' → logprob: -11.438831329345703
    8. '#' → logprob: -11.563831329345703
    9. '_in' → logprob: -11.688831329345703
    10. '

' → logprob: -11.813831329345703

Token 6: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03588533774018288
    2. '_s' → logprob: -3.6608853340148926
    3. '```' → logprob: -5.160885334014893
    4. '_' → logprob: -6.035885334014893
    5. 'es' → logprob: -7.660885334014893
    6. '(' → logprob: -7.910885334014893
    7. '(s' → logprob: -8.78588581085205
    8. ' s' → logprob: -9.53588581085205
    9. '`s' → logprob: -9.91088581085205
    10. '`' → logprob: -10.03588581085205

Token 7: '(dom' (ID: 126371)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025527944788336754
    2. '():' → logprob: -4.2755279541015625
    3. '_' → logprob: -5.4005279541015625
    4. '(:' → logprob: -5.5255279541015625
    5. ':' → logprob: -6.9005279541015625
    6. '_:' → logprob: -7.5255279541015625
    7. '```' → logprob: -7.6505279541015625
    8. '(":' → logprob: -8.525527954101562
    9. '(_:' → logprob: -8.650527954101562
    10. '(':' → logprob: -9.775527954101562

Token 8: 'ino' (ID: 2081)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.8529952764511108
    2. 'i' → logprob: -1.2279952764511108
    3. 'a' → logprob: -1.9779952764511108
    4. '```' → logprob: -2.4779953956604004
    5. 'e' → logprob: -3.6029953956604004
    6. 'ino' → logprob: -4.1029953956604
    7. 'ain' → logprob: -5.7279953956604
    8. 'aines' → logprob: -6.3529953956604
    9. 'es' → logprob: -6.4779953956604
    10. 'oes' → logprob: -6.7279953956604

Token 9: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.16774128377437592
    2. 's' → logprob: -1.917741298675537
    3. ')' → logprob: -5.042741298675537
    4. '):' → logprob: -8.167740821838379
    5. ')s' → logprob: -8.917740821838379
    6. '```' → logprob: -9.042740821838379
    7. '_es' → logprob: -9.292740821838379
    8. 'e' → logprob: -9.542740821838379
    9. '_pairs' → logprob: -9.667740821838379
    10. '):
' → logprob: -9.917740821838379

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024859998375177383
    2. ')' → logprob: -6.252486228942871
    3. '[' → logprob: -8.627486228942871
    4. '[]):' → logprob: -9.002486228942871
    5. '):
' → logprob: -9.127486228942871
    6. '```' → logprob: -10.002486228942871
    7. ':' → logprob: -10.127486228942871
    8. ''):' → logprob: -10.752486228942871
    9. '<|end|>' → logprob: -12.252486228942871
    10. '   ' → logprob: -12.752486228942871

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5521826148033142
    2. ':' → logprob: -0.9271826148033142
    3. '```' → logprob: -3.677182674407959
    4. '    
' → logprob: -7.427182674407959
    5. ':
' → logprob: -8.1771821975708
    6. '"' → logprob: -8.3021821975708
    7. '    ' → logprob: -8.4271821975708
    8. ''' → logprob: -8.4271821975708
    9. '``' → logprob: -8.4271821975708
    10. '():' → logprob: -8.5521821975708

Token 12: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.364437073469162
    2. '```' → logprob: -1.3644371032714844
    3. ' ' → logprob: -4.239437103271484
    4. '    ' → logprob: -4.614437103271484
    5. ':' → logprob: -5.239437103271484
    6. '`' → logprob: -5.989437103271484
    7. '_' → logprob: -6.114437103271484
    8. '       ' → logprob: -6.114437103271484
    9. ''' → logprob: -6.114437103271484
    10. 'n' → logprob: -6.364437103271484

Token 13: ' collections' (ID: 22690)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.17570795118808746
    2. ' collections' → logprob: -1.9257079362869263
    3. ' random' → logprob: -5.300707817077637
    4. ' math' → logprob: -5.300707817077637
    5. ' typing' → logprob: -5.800707817077637
    6. 'collections' → logprob: -6.300707817077637
    7. ' copy' → logprob: -7.925707817077637
    8. 'random' → logprob: -9.925707817077637
    9. 'math' → logprob: -10.050707817077637
    10. ' functools' → logprob: -10.175707817077637

Token 14: ' import' (ID: 1588)
  Prédit: '.Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.042342379689216614
    2. '.' → logprob: -3.5423424243927
    3. 'Counter' → logprob: -5.417342185974121
    4. ' Counter' → logprob: -6.042342185974121
    5. ' import' → logprob: -6.042342185974121
    6. '_' → logprob: -6.917342185974121
    7. 'import' → logprob: -7.042342185974121
    8. '.de' → logprob: -7.917342185974121
    9. 'deque' → logprob: -8.542342185974121
    10. '_counter' → logprob: -8.542342185974121

Token 15: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.35513007640838623
    2. ' deque' → logprob: -1.3551300764083862
    3. ' defaultdict' → logprob: -3.480130195617676
    4. ' Counter' → logprob: -4.980130195617676
    5. 'Counter' → logprob: -5.730130195617676
    6. 'default' → logprob: -9.605130195617676
    7. 'de' → logprob: -12.355130195617676
    8. 'Deque' → logprob: -12.855130195617676
    9. 'counter' → logprob: -13.230130195617676
    10. ' counter' → logprob: -13.355130195617676

Token 16: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21084727346897125
    2. '   ' → logprob: -2.4608473777770996
    3. '    
' → logprob: -3.4608473777770996
    4. '\n' → logprob: -3.8358473777770996
    5. '```' → logprob: -3.9608473777770996
    6. '_' → logprob: -4.4608473777771
    7. '\' → logprob: -5.7108473777771
    8. '_
' → logprob: -5.9608473777771
    9. '   
' → logprob: -6.4608473777771
    10. 'counter' → logprob: -6.4608473777771

Token 17: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.20205697417259216
    2. ' deque' → logprob: -1.7020570039749146
    3. ' Counter' → logprob: -7.827056884765625
    4. 'Counter' → logprob: -8.327056884765625
    5. 'Deque' → logprob: -12.827056884765625
    6. '```' → logprob: -16.702056884765625
    7. 'counter' → logprob: -17.952056884765625
    8. ' ' → logprob: -17.952056884765625
    9. 'de' → logprob: -18.077056884765625
    10. 'Ordered' → logprob: -18.577056884765625

Token 18: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07486774772405624
    2. '    
' → logprob: -3.8248677253723145
    3. '  
' → logprob: -4.4498677253723145
    4. ':' → logprob: -4.5748677253723145
    5. '\n' → logprob: -5.3248677253723145
    6. '```' → logprob: -5.3248677253723145
    7. '   ' → logprob: -5.5748677253723145
    8. ' 
' → logprob: -6.0748677253723145
    9. '' → logprob: -6.1998677253723145
    10. '\' → logprob: -6.1998677253723145

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1269180327653885
    2. ' graph' → logprob: -2.501918077468872
    3. 'graph' → logprob: -3.501918077468872
    4. '    
' → logprob: -6.751917839050293
    5. ' count' → logprob: -6.751917839050293
    6. ' adjacency' → logprob: -6.876917839050293
    7. ' counts' → logprob: -7.001917839050293
    8. 'count' → logprob: -7.376917839050293
    9. '    ' → logprob: -8.251917839050293
    10. 'adj' → logprob: -8.501917839050293

Token 20: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.05221933871507645
    2. '   ' → logprob: -3.9272193908691406
    3. ' graph' → logprob: -3.9272193908691406
    4. 'in' → logprob: -5.302219390869141
    5. 'adj' → logprob: -6.052219390869141
    6. 'n' → logprob: -6.677219390869141
    7. 'degree' → logprob: -7.052219390869141
    8. 'ind' → logprob: -7.427219390869141
    9. ' n' → logprob: -8.05221939086914
    10. ' in' → logprob: -8.67721939086914

Token 21: ' Build' (ID: 10885)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.27120670676231384
    2. ' adj' → logprob: -2.8962066173553467
    3. 'graph' → logprob: -3.5212066173553467
    4. '   ' → logprob: -3.6462066173553467
    5. ' n' → logprob: -3.8962066173553467
    6. ' degree' → logprob: -4.146206855773926
    7. ' edges' → logprob: -4.146206855773926
    8. ' vertex' → logprob: -4.646206855773926
    9. ' adjacency' → logprob: -4.646206855773926
    10. 'adj' → logprob: -4.896206855773926

Token 22: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.16227149963378906
    2. ' adjacency' → logprob: -3.037271499633789
    3. ' a' → logprob: -3.162271499633789
    4. ' the' → logprob: -3.537271499633789
    5. ' an' → logprob: -4.037271499633789
    6. '_graph' → logprob: -5.787271499633789
    7. 'graph' → logprob: -6.037271499633789
    8. '_' → logprob: -6.162271499633789
    9. '   ' → logprob: -6.162271499633789
    10. ' adj' → logprob: -7.537271499633789

Token 23: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' nodes' (ID: 15749)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8865015506744385
    2. ' adjacency' → logprob: -1.1365015506744385
    3. ' ' → logprob: -1.8865015506744385
    4. ' defaultdict' → logprob: -2.6365015506744385
    5. ' adj' → logprob: -4.511501312255859
    6. ' d' → logprob: -5.011501312255859
    7. ' n' → logprob: -5.511501312255859
    8. '<|end|>' → logprob: -6.011501312255859
    9. '    ' → logprob: -6.136501312255859
    10. ' edges' → logprob: -6.386501312255859

Token 25: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010122229345142841
    2. '=' → logprob: -5.010122299194336
    3. ' are' → logprob: -6.010122299194336
    4. ':' → logprob: -8.260122299194336
    5. ',' → logprob: -8.760122299194336
    6. ' represent' → logprob: -9.260122299194336
    7. ' and' → logprob: -9.260122299194336
    8. ' representing' → logprob: -9.510122299194336
    9. '   ' → logprob: -9.635122299194336
    10. ' represented' → logprob: -10.135122299194336

Token 26: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.06223296746611595
    2. ' integers' → logprob: -3.0622329711914062
    3. 'numbers' → logprob: -4.937232971191406
    4. ' domino' → logprob: -6.187232971191406
    5. ' the' → logprob: -6.437232971191406
    6. ' values' → logprob: -7.437232971191406
    7. ' vertices' → logprob: -7.437232971191406
    8. 'dom' → logprob: -7.687232971191406
    9. ' points' → logprob: -8.812232971191406
    10. 'the' → logprob: -9.062232971191406

Token 27: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2660468816757202
    2. ' ,' → logprob: -1.5160468816757202
    3. ' =' → logprob: -5.64104700088501
    4. '=' → logprob: -5.89104700088501
    5. ':' → logprob: -6.39104700088501
    6. ' :' → logprob: -6.51604700088501
    7. '   ' → logprob: -6.64104700088501
    8. ' ' → logprob: -6.64104700088501
    9. ' and' → logprob: -7.64104700088501
    10. ' (' → logprob: -7.76604700088501

Token 28: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10381606966257095
    2. '=' → logprob: -3.353816032409668
    3. 'from' → logprob: -3.853816032409668
    4. ':' → logprob: -4.228816032409668
    5. 'and' → logprob: -4.603816032409668
    6. '   ' → logprob: -5.603816032409668
    7. ' and' → logprob: -5.853816032409668
    8. ')' → logprob: -5.978816032409668
    9. ' ,' → logprob: -6.853816032409668
    10. '(' → logprob: -6.978816032409668

Token 29: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01767595298588276
    2. ' to' → logprob: -4.517675876617432
    3. 'to' → logprob: -5.767675876617432
    4. ' through' → logprob: -6.017675876617432
    5. ' -' → logprob: -7.142675876617432
    6. 'through' → logprob: -8.89267635345459
    7. ' ' → logprob: -10.01767635345459
    8. '–' → logprob: -10.76767635345459
    9. '0' → logprob: -10.89267635345459
    10. '```' → logprob: -11.64267635345459

Token 30: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.001614365610294044
    2. '9' → logprob: -6.626614570617676
    3. ' ' → logprob: -8.251614570617676
    4. '```' → logprob: -11.376614570617676
    5. '1' → logprob: -11.626614570617676
    6. '   ' → logprob: -12.501614570617676
    7. '
' → logprob: -14.501614570617676
    8. '  ' → logprob: -14.501614570617676
    9. '``' → logprob: -14.626614570617676
    10. '

' → logprob: -15.376614570617676

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8788264989852905
    2. '   ' → logprob: -1.0038264989852905
    3. ' ,' → logprob: -2.25382661819458
    4. '
' → logprob: -2.62882661819458
    5. '    ' → logprob: -4.62882661819458
    6. '```' → logprob: -4.87882661819458
    7. ':' → logprob: -5.25382661819458
    8. '<|end|>' → logprob: -5.87882661819458
    9. '    
' → logprob: -6.12882661819458
    10. ' ' → logprob: -6.12882661819458

Token 32: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1884651184082031
    2. ' adjacency' → logprob: -1.3134651184082031
    3. ' edges' → logprob: -1.4384651184082031
    4. '    ' → logprob: -3.188465118408203
    5. ' ' → logprob: -3.563465118408203
    6. ' and' → logprob: -3.563465118408203
    7. ' '' → logprob: -3.688465118408203
    8. ' defaultdict' → logprob: -3.938465118408203
    9. ' spaces' → logprob: -4.688465118408203
    10. ' adj' → logprob: -5.063465118408203

Token 33: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.736005425453186
    2. '=' → logprob: -0.861005425453186
    3. ' are' → logprob: -2.3610053062438965
    4. ' represent' → logprob: -6.1110053062438965
    5. ' between' → logprob: -7.8610053062438965
    6. ':' → logprob: -7.9860053062438965
    7. ' ' → logprob: -8.361005783081055
    8. ' represented' → logprob: -8.611005783081055
    9. ' representing' → logprob: -9.486005783081055
    10. 'are' → logprob: -9.486005783081055

Token 34: ' domino' (ID: 133589)
  Prédit: ' domino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' domino' → logprob: -0.2329546958208084
    2. 'dom' → logprob: -2.607954740524292
    3. ' defaultdict' → logprob: -3.107954740524292
    4. ' the' → logprob: -3.607954740524292
    5. ' dom' → logprob: -4.232954502105713
    6. ' edges' → logprob: -4.482954502105713
    7. ' between' → logprob: -4.982954502105713
    8. 'the' → logprob: -5.607954502105713
    9. ' counts' → logprob: -5.982954502105713
    10. 'from' → logprob: -6.232954502105713

Token 35: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.33953621983528137
    2. 's' → logprob: -1.339536190032959
    3. ' s' → logprob: -3.839536190032959
    4. ' pieces' → logprob: -6.589536190032959
    5. 'e' → logprob: -6.964536190032959
    6. ' es' → logprob: -7.964536190032959
    7. ' ' → logprob: -8.089536666870117
    8. '   ' → logprob: -8.214536666870117
    9. '[' → logprob: -8.214536666870117
    10. ' edges' → logprob: -8.839536666870117

Token 36: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3670835793018341
    2. '    
' → logprob: -2.6170835494995117
    3. '```' → logprob: -2.6170835494995117
    4. '
' → logprob: -2.8670835494995117
    5. '    ' → logprob: -4.242083549499512
    6. ':' → logprob: -4.367083549499512
    7. ',' → logprob: -4.867083549499512
    8. '\' → logprob: -4.867083549499512
    9. '  
' → logprob: -5.242083549499512
    10. '\n' → logprob: -5.242083549499512

Token 37: 'can' (ID: 6929)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6623612642288208
    2. ' )' → logprob: -1.4123612642288208
    3. ' between' → logprob: -2.5373611450195312
    4. ' connected' → logprob: -3.0373611450195312
    5. ' connecting' → logprob: -3.7873611450195312
    6. ' with' → logprob: -3.9123611450195312
    7. ' edges' → logprob: -4.412361145019531
    8. '   ' → logprob: -4.537361145019531
    9. ',' → logprob: -4.787361145019531
    10. ' that' → logprob: -4.912361145019531

Token 38: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0566568598151207
    2. ' connect' → logprob: -3.306656837463379
    3. ' go' → logprob: -4.681656837463379
    4. ' have' → logprob: -5.431656837463379
    5. ' use' → logprob: -7.056656837463379
    6. ')' → logprob: -7.056656837463379
    7. ' represent' → logprob: -7.306656837463379
    8. ' )' → logprob: -7.431656837463379
    9. ' overlap' → logprob: -8.306656837463379
    10. '_connect' → logprob: -8.431656837463379

Token 39: ' multiple' (ID: 7598)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3780945539474487
    2. ' used' → logprob: -1.3780945539474487
    3. ' travers' → logprob: -1.7530945539474487
    4. ' represented' → logprob: -2.5030946731567383
    5. ' ' → logprob: -2.7530946731567383
    6. 'used' → logprob: -3.1280946731567383
    7. 'represented' → logprob: -4.003094673156738
    8. ' placed' → logprob: -4.253094673156738
    9. ' connected' → logprob: -4.253094673156738
    10. '```' → logprob: -4.378094673156738

Token 40: ' edges' (ID: 22569)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40265053510665894
    2. ' edges' → logprob: -1.5276505947113037
    3. ' )' → logprob: -2.2776505947113037
    4. 's' → logprob: -4.902650356292725
    5. ' between' → logprob: -6.152650356292725
    6. ' with' → logprob: -8.277650833129883
    7. 'edges' → logprob: -8.277650833129883
    8. '<|end|>' → logprob: -8.777650833129883
    9. '   ' → logprob: -8.902650833129883
    10. ' occurrences' → logprob: -8.902650833129883

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17893196642398834
    2. ' )' → logprob: -2.053931951522827
    3. ' between' → logprob: -3.428931951522827
    4. '<|end|>' → logprob: -6.928932189941406
    5. ',' → logprob: -7.428932189941406
    6. 's' → logprob: -7.678932189941406
    7. ' from' → logprob: -8.428932189941406
    8. ' for' → logprob: -8.553932189941406
    9. ' with' → logprob: -8.928932189941406
    10. '   ' → logprob: -9.428932189941406

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1145257949829102
    2. '    
' → logprob: -1.1145257949829102
    3. '    ' → logprob: -2.11452579498291
    4. 'n' → logprob: -2.61452579498291
    5. '     
' → logprob: -3.23952579498291
    6. ' 
' → logprob: -3.36452579498291
    7. '
' → logprob: -3.86452579498291
    8. '   
' → logprob: -4.11452579498291
    9. '  
' → logprob: -4.98952579498291
    10. '```' → logprob: -5.11452579498291

Token 43: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.8624207377433777
    2. ' graph' → logprob: -1.4874207973480225
    3. '    
' → logprob: -1.7374207973480225
    4. '   ' → logprob: -2.3624207973480225
    5. ' 
' → logprob: -3.4874207973480225
    6. 'n' → logprob: -4.362420558929443
    7. '    ' → logprob: -4.612420558929443
    8. '     
' → logprob: -4.862420558929443
    9. '   
' → logprob: -4.987420558929443
    10. '
' → logprob: -5.487420558929443

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31415849924087524
    2. '=' → logprob: -1.3141584396362305
    3. '[' → logprob: -7.0641584396362305
    4. ' ' → logprob: -11.43915843963623
    5. ']' → logprob: -11.68915843963623
    6. '   ' → logprob: -12.31415843963623
    7. '.setdefault' → logprob: -12.93915843963623
    8. ')' → logprob: -13.06415843963623
    9. '```' → logprob: -13.06415843963623
    10. '＝' → logprob: -13.81415843963623

Token 45: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.029762526974081993
    2. 'default' → logprob: -3.5297625064849854
    3. ' default' → logprob: -11.529762268066406
    4. '"default' → logprob: -14.529762268066406
    5. '.default' → logprob: -14.904762268066406
    6. '(default' → logprob: -15.029762268066406
    7. ''default' → logprob: -15.529762268066406
    8. ' [[]' → logprob: -15.529762268066406
    9. ' [' → logprob: -15.904762268066406
    10. 'Default' → logprob: -16.404762268066406

Token 46: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.002439743373543024
    2. '(lambda' → logprob: -6.377439975738525
    3. '(<' → logprob: -7.877439975738525
    4. '(' → logprob: -8.127439498901367
    5. '(int' → logprob: -9.877439498901367
    6. '(dict' → logprob: -12.752439498901367
    7. 'list' → logprob: -12.752439498901367
    8. '(set' → logprob: -12.752439498901367
    9. '(de' → logprob: -14.002439498901367
    10. '(
' → logprob: -14.877439498901367

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010866894444916397
    2. '   ' → logprob: -10.00010871887207
    3. ',' → logprob: -10.87510871887207
    4. '[' → logprob: -11.50010871887207
    5. '(' → logprob: -11.50010871887207
    6. ' )' → logprob: -11.75010871887207
    7. '()' → logprob: -12.62510871887207
    8. '       ' → logprob: -13.00010871887207
    9. ')
' → logprob: -13.12510871887207
    10. '))' → logprob: -13.37510871887207

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041410792618989944
    2. ' for' → logprob: -3.4164106845855713
    3. 'for' → logprob: -5.29141092300415
    4. '    
' → logprob: -6.41641092300415
    5. '
' → logprob: -7.29141092300415
    6. ')' → logprob: -9.541410446166992
    7. '  
' → logprob: -9.791410446166992
    8. ' ' → logprob: -10.166410446166992
    9. ' 
' → logprob: -10.166410446166992
    10. '<|end|>' → logprob: -10.416410446166992

Token 49: ' degree' (ID: 9882)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5808500051498413
    2. 'for' → logprob: -0.8308500051498413
    3. '   ' → logprob: -5.330850124359131
    4. '    
' → logprob: -10.705849647521973
    5. '```' → logprob: -10.830849647521973
    6. '
' → logprob: -11.830849647521973
    7. ' 
' → logprob: -12.580849647521973
    8. ' ' → logprob: -13.080849647521973
    9. 'n' → logprob: -14.080849647521973
    10. ' ' → logprob: -14.955849647521973

Token 50: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8440813422203064
    2. 's' → logprob: -1.0940814018249512
    3. '=' → logprob: -1.7190814018249512
    4. ' =' → logprob: -3.094081401824951
    5. '_count' → logprob: -5.844081401824951
    6. ' ' → logprob: -6.344081401824951
    7. '_counts' → logprob: -6.719081401824951
    8. '[]' → logprob: -6.719081401824951
    9. ')' → logprob: -7.094081401824951
    10. '[s' → logprob: -7.594081401824951

Token 51: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.023296024650335312
    2. 'default' → logprob: -3.7732961177825928
    3. ' [' → logprob: -10.648296356201172
    4. ' default' → logprob: -10.898296356201172
    5. '[' → logprob: -12.398296356201172
    6. ' ' → logprob: -13.398296356201172
    7. '{}' → logprob: -14.023296356201172
    8. ' {}' → logprob: -14.398296356201172
    9. '.default' → logprob: -15.273296356201172
    10. '{' → logprob: -15.398296356201172

Token 52: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00016635251813568175
    2. 'int' → logprob: -8.875165939331055
    3. ' (' → logprob: -11.000165939331055
    4. '(lambda' → logprob: -12.625165939331055
    5. '<int' → logprob: -13.500165939331055
    6. ',int' → logprob: -13.750165939331055
    7. ' int' → logprob: -14.000165939331055
    8. '[int' → logprob: -14.000165939331055
    9. ']int' → logprob: -14.250165939331055
    10. '=int' → logprob: -14.250165939331055

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004353181866463274
    2. '   ' → logprob: -8.625434875488281
    3. ' )' → logprob: -8.750434875488281
    4. '[' → logprob: -10.125434875488281
    5. ')
' → logprob: -10.250434875488281
    6. ')

' → logprob: -11.750434875488281
    7. ' ' → logprob: -12.250434875488281
    8. '(' → logprob: -13.375434875488281
    9. ')
' → logprob: -13.625434875488281
    10. '       ' → logprob: -13.875434875488281

Token 54: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.136458620429039
    2. '    
' → logprob: -2.6364586353302
    3. '
' → logprob: -3.3864586353302
    4. '<|end|>' → logprob: -4.761458396911621
    5. '  
' → logprob: -5.261458396911621
    6. ' 
' → logprob: -6.136458396911621
    7. ' for' → logprob: -6.386458396911621
    8. 'for' → logprob: -7.386458396911621
    9. '\n' → logprob: -7.386458396911621
    10. '   
' → logprob: -7.511458396911621

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08594176173210144
    2. ' for' → logprob: -2.585941791534424
    3. 'for' → logprob: -4.960941791534424
    4. '    
' → logprob: -11.085941314697266
    5. '
' → logprob: -13.585941314697266
    6. '	for' → logprob: -13.960941314697266
    7. '```' → logprob: -14.210941314697266
    8. ':' → logprob: -14.710941314697266
    9. ' ' → logprob: -14.835941314697266
    10. '       ' → logprob: -14.960941314697266

Token 56: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004408015520311892
    2. ' for' → logprob: -7.75044059753418
    3. '   ' → logprob: -11.62544059753418
    4. '```' → logprob: -13.87544059753418
    5. '	for' → logprob: -16.62544059753418
    6. '    
' → logprob: -17.37544059753418
    7. 'For' → logprob: -17.37544059753418
    8. '
' → logprob: -18.25044059753418
    9. '``' → logprob: -18.25044059753418
    10. ' ' → logprob: -19.25044059753418

Token 57: ' Count' (ID: 6789)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25214052200317383
    2. ' for' → logprob: -1.5021405220031738
    3. 'For' → logprob: -9.502140045166016
    4. '#' → logprob: -9.627140045166016
    5. '   ' → logprob: -11.002140045166016
    6. 'Build' → logprob: -11.502140045166016
    7. 'Add' → logprob: -11.627140045166016
    8. 'Let's' → logprob: -12.002140045166016
    9. ' Build' → logprob: -12.252140045166016
    10. ' For' → logprob: -12.877140045166016

Token 58: ' edges' (ID: 22569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32336029410362244
    2. ' the' → logprob: -2.1983602046966553
    3. ' edges' → logprob: -2.4483602046966553
    4. 'for' → logprob: -3.6983602046966553
    5. ' each' → logprob: -4.073360443115234
    6. 'dom' → logprob: -4.573360443115234
    7. ' how' → logprob: -5.948360443115234
    8. '   ' → logprob: -5.948360443115234
    9. ' domino' → logprob: -6.073360443115234
    10. ' frequencies' → logprob: -6.198360443115234

Token 59: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10385109484195709
    2. 'for' → logprob: -2.353851079940796
    3. ' and' → logprob: -6.853851318359375
    4. '<|end|>' → logprob: -7.103851318359375
    5. '<|end|>' → logprob: -7.228851318359375
    6. '   ' → logprob: -7.853851318359375
    7. ':' → logprob: -8.478851318359375
    8. ' ' → logprob: -9.103851318359375
    9. '=' → logprob: -9.353851318359375
    10. ' in' → logprob: -9.603851318359375

Token 60: ' degrees' (ID: 18210)
  Prédit: ' vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertices' → logprob: -0.9769487380981445
    2. ' nodes' → logprob: -1.6019487380981445
    3. ' build' → logprob: -1.7269487380981445
    4. ' add' → logprob: -2.7269487380981445
    5. ' their' → logprob: -3.2269487380981445
    6. ' degrees' → logprob: -3.3519487380981445
    7. 'vertices' → logprob: -3.8519487380981445
    8. ' populate' → logprob: -4.1019487380981445
    9. ' endpoints' → logprob: -5.2269487380981445
    10. 'build' → logprob: -5.3519487380981445

Token 61: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5087686777114868
    2. '   ' → logprob: -1.1337686777114868
    3. 'for' → logprob: -2.6337685585021973
    4. '```' → logprob: -6.633768558502197
    5. '<|end|>' → logprob: -6.758768558502197
    6. '    
' → logprob: -7.133768558502197
    7. '
' → logprob: -7.508768558502197
    8. ':' → logprob: -7.633768558502197
    9. '<|end|>' → logprob: -7.758768558502197
    10. '	for' → logprob: -9.133769035339355

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16632412374019623
    2. ' for' → logprob: -1.9163241386413574
    3. 'for' → logprob: -5.291324138641357
    4. '    
' → logprob: -7.291324138641357
    5. '
' → logprob: -8.5413236618042
    6. '```' → logprob: -9.6663236618042
    7. '<|end|>' → logprob: -9.7913236618042
    8. '<|end|>' → logprob: -11.1663236618042
    9. '  
' → logprob: -11.6663236618042
    10. '    ' → logprob: -12.1663236618042

Token 63: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07208167016506195
    2. 'for' (adapté à ' for') → logprob: -2.8220815658569336
    3. '   ' → logprob: -4.697081565856934
    4. ' ' → logprob: -8.072081565856934
    5. '<|end|>' → logprob: -8.197081565856934
    6. '<|end|>' → logprob: -9.322081565856934
    7. '    ' → logprob: -9.572081565856934
    8. '	for' → logprob: -10.072081565856934
    9. '```' → logprob: -10.197081565856934
    10. '    
' → logprob: -10.447081565856934

Token 64: ' d' (ID: 272)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.18047650158405304
    2. 'u' → logprob: -2.430476427078247
    3. ' a' → logprob: -3.930476427078247
    4. ' ' → logprob: -4.305476665496826
    5. ' d' → logprob: -4.430476665496826
    6. ' domino' → logprob: -5.055476665496826
    7. 'a' → logprob: -5.430476665496826
    8. 'dom' → logprob: -5.805476665496826
    9. 'd' → logprob: -5.930476665496826
    10. ' value' → logprob: -6.180476665496826

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04194626584649086
    2. 'om' → logprob: -3.2919461727142334
    3. 'o' → logprob: -6.4169464111328125
    4. 'in' → logprob: -6.9169464111328125
    5. 'omain' → logprob: -8.041946411132812
    6. ',' → logprob: -8.666946411132812
    7. 'ome' → logprob: -8.916946411132812
    8. 'i' → logprob: -9.291946411132812
    9. ' ' → logprob: -9.541946411132812
    10. 'e' → logprob: -9.541946411132812

Token 66: ' domino' (ID: 133589)
  Prédit: ' domino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' domino' → logprob: -0.012647024355828762
    2. 'dom' → logprob: -4.3876471519470215
    3. ' dom' → logprob: -9.762646675109863
    4. ' ' → logprob: -10.137646675109863
    5. '(dom' → logprob: -11.012646675109863
    6. '```' → logprob: -11.512646675109863
    7. '_dom' → logprob: -12.387646675109863
    8. '   ' → logprob: -13.262646675109863
    9. ' range' → logprob: -13.762646675109863
    10. 'd' → logprob: -14.387646675109863

Token 67: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -4.692145012086257e-05
    2. 's' → logprob: -10.375046730041504
    3. 'e' → logprob: -11.500046730041504
    4. '```' → logprob: -13.625046730041504
    5. ' es' → logprob: -14.250046730041504
    6. '[' → logprob: -14.250046730041504
    7. '   ' → logprob: -14.500046730041504
    8. ')' → logprob: -14.625046730041504
    9. ']' → logprob: -15.437546730041504
    10. 'les' → logprob: -15.562546730041504

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004285235481802374
    2. '):' → logprob: -8.750428199768066
    3. ' :' → logprob: -9.125428199768066
    4. '[' → logprob: -9.875428199768066
    5. ':
' → logprob: -10.000428199768066
    6. ',' → logprob: -10.250428199768066
    7. ':**' → logprob: -11.750428199768066
    8. '[:' → logprob: -12.000428199768066
    9. '[:]' → logprob: -13.000428199768066
    10. ']:' → logprob: -13.000428199768066

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010378633625805378
    2. '    ' → logprob: -5.135378837585449
    3. '[' → logprob: -6.885378837585449
    4. '   ' → logprob: -7.010378837585449
    5. '        ' → logprob: -7.510378837585449
    6. ',' → logprob: -8.26037883758545
    7. ' ' → logprob: -8.26037883758545
    8. '<|end|>' → logprob: -8.26037883758545
    9. ' graph' → logprob: -8.26037883758545
    10. '```' → logprob: -9.13537883758545

Token 70: ' a' (ID: 261)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.44259098172187805
    2. 'a' (adapté à ' a') → logprob: -1.6925909519195557
    3. 'u' → logprob: -2.5675909519195557
    4. ' a' → logprob: -2.6925909519195557
    5. ' graph' → logprob: -4.317591190338135
    6. '   ' → logprob: -4.317591190338135
    7. 'graph' → logprob: -6.192591190338135
    8. '       ' → logprob: -8.567590713500977
    9. '```' → logprob: -9.442590713500977
    10. ' ' → logprob: -9.567590713500977

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013372665271162987
    2. ' ,' → logprob: -6.876337051391602
    3. ',b' → logprob: -8.376337051391602
    4. ',d' → logprob: -10.501337051391602
    5. ',a' → logprob: -10.626337051391602
    6. ' =' → logprob: -11.626337051391602
    7. ',v' → logprob: -12.251337051391602
    8. '=' → logprob: -12.501337051391602
    9. ',s' → logprob: -14.251337051391602
    10. ',p' → logprob: -14.251337051391602

Token 72: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3869089186191559
    2. 'b' → logprob: -1.1369088888168335
    3. 'space' → logprob: -10.886908531188965
    4. ' ' → logprob: -11.261908531188965
    5. '<|end|>' → logprob: -12.886908531188965
    6. ' space' → logprob: -14.386908531188965
    7. 's' → logprob: -14.511908531188965
    8. ' б' → logprob: -14.636908531188965
    9. 'd' → logprob: -14.761908531188965
    10. ' ' → logprob: -15.261908531188965

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054899662733078
    2. '=' → logprob: -2.9298996925354004
    3. ')' → logprob: -11.179899215698242
    4. ' =
' → logprob: -13.929899215698242
    5. ' ' → logprob: -14.179899215698242
    6. ' =)' → logprob: -14.304899215698242
    7. '    ' → logprob: -15.304899215698242
    8. ',' → logprob: -15.554899215698242
    9. '.' → logprob: -15.554899215698242
    10. ')=' → logprob: -16.054899215698242

Token 74: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.01104935072362423
    2. 'd' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.511049270629883
    4. '	d' → logprob: -16.136049270629883
    5. ' ' → logprob: -17.761049270629883
    6. ' д' → logprob: -18.761049270629883
    7. '  ' → logprob: -19.011049270629883
    8. '   ' → logprob: -19.011049270629883
    9. ' a' → logprob: -19.698549270629883
    10. 'a' → logprob: -19.698549270629883

Token 75: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2034024000167847
    2. ',' → logprob: -1.4534024000167847
    3. ')' → logprob: -1.5784024000167847
    4. '=' → logprob: -2.328402519226074
    5. '.' → logprob: -2.828402519226074
    6. ']' → logprob: -3.328402519226074
    7. ' =' → logprob: -3.578402519226074
    8. '<|end|>' → logprob: -4.078402519226074
    9. '.split' → logprob: -5.453402519226074
    10. ' ' → logprob: -5.578402519226074

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011257074773311615
    2. '
' → logprob: -4.511257171630859
    3. ')' → logprob: -9.63625717163086
    4. '        
' → logprob: -10.51125717163086
    5. ')
' → logprob: -10.63625717163086
    6. '   ' → logprob: -10.63625717163086
    7. '    
' → logprob: -11.63625717163086
    8. ':' → logprob: -11.76125717163086
    9. ',' → logprob: -11.76125717163086
    10. '<|end|>' → logprob: -11.76125717163086

Token 77: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5876731872558594
    2. ' graph' → logprob: -1.2126731872558594
    3. 'graph' (adapté à ' graph') → logprob: -2.0876731872558594
    4. '
' → logprob: -3.9626731872558594
    5. '   ' → logprob: -6.462673187255859
    6. '	graph' → logprob: -6.962673187255859
    7. '```' → logprob: -8.21267318725586
    8. '        ' → logprob: -8.46267318725586
    9. ' if' → logprob: -8.58767318725586
    10. ' 
' → logprob: -8.71267318725586

Token 78: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.000006675720215
    3. 'a' → logprob: -14.875006675720215
    4. ' [' → logprob: -17.2500057220459
    5. '   ' → logprob: -17.3750057220459
    6. '[A' → logprob: -18.0000057220459
    7. '```' → logprob: -19.3750057220459
    8. ' a' → logprob: -20.5000057220459
    9. '[b' → logprob: -20.5000057220459
    10. '[d' → logprob: -20.7500057220459

Token 79: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0007345817284658551
    2. ').' → logprob: -7.625734806060791
    3. ']' → logprob: -9.250734329223633
    4. '.' → logprob: -9.500734329223633
    5. '.append' → logprob: -9.625734329223633
    6. ' ].' → logprob: -12.125734329223633
    7. '}.' → logprob: -13.000734329223633
    8. '   ' → logprob: -13.750734329223633
    9. ')' → logprob: -14.875734329223633
    10. '`.' → logprob: -15.625734329223633

Token 80: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. ' append' → logprob: -14.250000953674316
    3. '.append' → logprob: -15.625000953674316
    4. 'appen' → logprob: -17.75
    5. '_append' → logprob: -19.0
    6. 'add' → logprob: -19.625
    7. '```' → logprob: -20.375
    8. '	append' → logprob: -20.375
    9. 'app' → logprob: -20.625
    10. ' ' → logprob: -20.75

Token 81: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.024268863722682
    2. 'b' → logprob: -3.899268865585327
    3. ' b' → logprob: -6.274268627166748
    4. '(' → logprob: -6.399268627166748
    5. '((' → logprob: -8.899269104003906
    6. ' (' → logprob: -10.399269104003906
    7. '(
' → logprob: -13.149269104003906
    8. ')b' → logprob: -13.274269104003906
    9. '(a' → logprob: -14.274269104003906
    10. '	b' → logprob: -14.399269104003906

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008372656302526593
    2. ' )' → logprob: -7.375837326049805
    3. ')
' → logprob: -8.500837326049805
    4. '       ' → logprob: -13.000837326049805
    5. ')
' → logprob: -13.250837326049805
    6. '   ' → logprob: -13.250837326049805
    7. ' )
' → logprob: -14.000837326049805
    8. ' ' → logprob: -14.875837326049805
    9. ')

' → logprob: -16.250837326049805
    10. '))' → logprob: -16.750837326049805

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016873658751137555
    2. '   ' → logprob: -9.000168800354004
    3. '<|end|>' → logprob: -11.000168800354004
    4. '
' → logprob: -11.500168800354004
    5. ' ' → logprob: -12.125168800354004
    6. '        
' → logprob: -12.750168800354004
    7. '```' → logprob: -13.000168800354004
    8. '           ' → logprob: -13.250168800354004
    9. ')' → logprob: -13.750168800354004
    10. '    
' → logprob: -13.875168800354004

Token 84: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.40179237723350525
    2. 'graph' (adapté à ' graph') → logprob: -1.5267924070358276
    3. ' degree' → logprob: -2.651792287826538
    4. 'degree' → logprob: -3.151792287826538
    5. '
' → logprob: -9.526792526245117
    6. ' ' → logprob: -9.651792526245117
    7. ' 
' → logprob: -9.901792526245117
    8. '   ' → logprob: -10.026792526245117
    9. '	graph' → logprob: -10.276792526245117
    10. '    ' → logprob: -10.526792526245117

Token 85: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.007568179629743099
    2. '[a' → logprob: -5.132568359375
    3. '[' → logprob: -6.507568359375
    4. 'b' → logprob: -9.507568359375
    5. '```' → logprob: -10.882568359375
    6. 'a' → logprob: -11.757568359375
    7. '[
' → logprob: -12.007568359375
    8. '[c' → logprob: -12.007568359375
    9. ')' → logprob: -12.007568359375
    10. ')[' → logprob: -12.132568359375

Token 86: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.34407752752304077
    2. '].' → logprob: -1.8440775871276855
    3. ')' → logprob: -2.7190775871276855
    4. '.' → logprob: -2.8440775871276855
    5. '.append' → logprob: -4.8440775871276855
    6. ']' → logprob: -7.9690775871276855
    7. ' .' → logprob: -8.719077110290527
    8. '.)' → logprob: -9.094077110290527
    9. '<|end|>' → logprob: -9.219077110290527
    10. '.setdefault' → logprob: -10.219077110290527

Token 87: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. 'appen' → logprob: -14.75
    3. 'app' → logprob: -17.625
    4. '.append' → logprob: -18.25
    5. '	append' → logprob: -18.25
    6. ' append' → logprob: -18.375
    7. 'add' → logprob: -20.625
    8. '_append' → logprob: -20.875
    9. 'appe' → logprob: -21.375
    10. 'ap' → logprob: -23.25

Token 88: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.622238039970398
    2. 'a' → logprob: -0.872238039970398
    3. '(' → logprob: -3.3722381591796875
    4. ' a' → logprob: -4.7472381591796875
    5. ' (' → logprob: -6.1222381591796875
    6. '(
' → logprob: -10.247238159179688
    7. ')' → logprob: -11.122238159179688
    8. ')a' → logprob: -12.247238159179688
    9. ' (
' → logprob: -13.122238159179688
    10. ' ' → logprob: -13.247238159179688

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007573349867016077
    2. '       ' → logprob: -7.875757217407227
    3. ')
' → logprob: -8.000757217407227
    4. ' )' → logprob: -11.000757217407227
    5. '   ' → logprob: -11.375757217407227
    6. '
' → logprob: -12.375757217407227
    7. '```' → logprob: -12.750757217407227
    8. ')n' → logprob: -13.375757217407227
    9. '<|end|>' → logprob: -13.625757217407227
    10. '#' → logprob: -14.250757217407227

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024153725244104862
    2. '        
' → logprob: -6.252415180206299
    3. '    
' → logprob: -9.002415657043457
    4. '   ' → logprob: -9.002415657043457
    5. '        ' → logprob: -9.752415657043457
    6. '    ' → logprob: -10.002415657043457
    7. '
' → logprob: -10.127415657043457
    8. '     ' → logprob: -11.002415657043457
    9. '```' → logprob: -11.002415657043457
    10. '           ' → logprob: -11.127415657043457

Token 91: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' (adapté à ' degree') → logprob: -0.06271854788064957
    2. ' degree' → logprob: -2.812718629837036
    3. '   ' → logprob: -7.312718391418457
    4. '       ' → logprob: -9.437718391418457
    5. ' ' → logprob: -13.437718391418457
    6. '    ' → logprob: -13.812718391418457
    7. '           ' → logprob: -14.562718391418457
    8. '     ' → logprob: -14.562718391418457
    9. '```' → logprob: -15.437718391418457
    10. '  ' → logprob: -15.687718391418457

Token 92: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00011439072113716975
    2. '[' → logprob: -9.125114440917969
    3. '[d' → logprob: -12.750114440917969
    4. 'a' → logprob: -13.125114440917969
    5. ' [' → logprob: -16.00011444091797
    6. '```' → logprob: -16.50011444091797
    7. '[A' → logprob: -16.75011444091797
    8. '[b' → logprob: -16.75011444091797
    9. '[c' → logprob: -17.50011444091797
    10. '[i' → logprob: -17.50011444091797

Token 93: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.44973233342170715
    2. ')' → logprob: -1.6997323036193848
    3. ']+=' → logprob: -2.4497323036193848
    4. ']' → logprob: -3.0747323036193848
    5. '+' → logprob: -3.6997323036193848
    6. ' +=' → logprob: -3.8247323036193848
    7. ')+' → logprob: -9.074732780456543
    8. '   ' → logprob: -9.324732780456543
    9. '[' → logprob: -9.824732780456543
    10. ' )' → logprob: -10.324732780456543

Token 94: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5761808156967163
    2. ' +=' → logprob: -0.8261808156967163
    3. '+' → logprob: -8.451180458068848
    4. ']+=' → logprob: -11.326180458068848
    5. '[' → logprob: -11.576180458068848
    6. ' +' → logprob: -12.951180458068848
    7. '=' → logprob: -13.201180458068848
    8. ' ' → logprob: -14.326180458068848
    9. '   ' → logprob: -14.701180458068848
    10. '```' → logprob: -14.951180458068848

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. '2' → logprob: -15.500911712646484
    4. '   ' → logprob: -19.000911712646484
    5. '```' → logprob: -19.500911712646484
    6. ' ' → logprob: -19.625911712646484
    7. '１' → logprob: -20.500911712646484
    8. '۱' → logprob: -21.188411712646484
    9. '  ' → logprob: -21.375911712646484
    10. '0' → logprob: -21.563411712646484

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '2' → logprob: -18.125001907348633
    4. '```' → logprob: -19.125001907348633
    5. '１' → logprob: -19.312501907348633
    6. '۱' → logprob: -19.750001907348633
    7. '   ' → logprob: -19.937501907348633
    8. '१' → logprob: -21.562501907348633
    9. '`' → logprob: -21.687501907348633
    10. '١' → logprob: -22.250001907348633

Token 97: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016060323687270284
    2. '<|end|>' → logprob: -7.501605987548828
    3. '
' → logprob: -8.126605987548828
    4. '```' → logprob: -8.501605987548828
    5. '   ' → logprob: -8.626605987548828
    6. '        
' → logprob: -8.751605987548828
    7. '           ' → logprob: -9.626605987548828
    8. ' ' → logprob: -10.126605987548828
    9. '        ' → logprob: -10.876605987548828
    10. '     ' → logprob: -11.126605987548828

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014251544780563563
    2. '   ' → logprob: -10.375142097473145
    3. '        
' → logprob: -10.500142097473145
    4. '```' → logprob: -10.625142097473145
    5. '<|end|>' → logprob: -11.250142097473145
    6. ' ' → logprob: -11.250142097473145
    7. '           ' → logprob: -12.125142097473145
    8. '
' → logprob: -12.125142097473145
    9. '`' → logprob: -12.250142097473145
    10. '``' → logprob: -12.625142097473145

Token 99: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' (adapté à ' degree') → logprob: -0.0019299437990412116
    2. ' degree' → logprob: -6.251929759979248
    3. '   ' → logprob: -13.751930236816406
    4. '       ' → logprob: -15.251930236816406
    5. '           ' → logprob: -18.626930236816406
    6. '    ' → logprob: -18.626930236816406
    7. '     ' → logprob: -19.376930236816406
    8. ' ' → logprob: -19.626930236816406
    9. '.degree' → logprob: -19.751930236816406
    10. '1' → logprob: -20.126930236816406

Token 100: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00015133652777876705
    2. '[' → logprob: -8.875151634216309
    3. '[a' → logprob: -11.500151634216309
    4. 'b' → logprob: -14.125151634216309
    5. '```' → logprob: -15.500151634216309
    6. '[
' → logprob: -15.750151634216309
    7. ' [' → logprob: -15.875151634216309
    8. '	b' → logprob: -17.750150680541992
    9. '[d' → logprob: -17.875150680541992
    10. '[c' → logprob: -18.000150680541992

Token 101: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29569926857948303
    2. ' +=' → logprob: -2.04569935798645
    3. ']+=' → logprob: -2.92069935798645
    4. '+=' → logprob: -3.29569935798645
    5. ' ]' → logprob: -3.54569935798645
    6. '+' → logprob: -5.045699119567871
    7. ')' → logprob: -8.295699119567871
    8. '+]' → logprob: -9.545699119567871
    9. ' ' → logprob: -10.420699119567871
    10. '>' → logprob: -10.420699119567871

Token 102: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2014438360929489
    2. ' +=' → logprob: -1.7014437913894653
    3. '+' → logprob: -10.451443672180176
    4. ']+=' → logprob: -13.576443672180176
    5. '=' → logprob: -15.576443672180176
    6. ' +' → logprob: -17.201444625854492
    7. '+="' → logprob: -17.576444625854492
    8. '+='' → logprob: -17.701444625854492
    9. '[' → logprob: -17.826444625854492
    10. ' ' → logprob: -17.951444625854492

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033645812422037125
    2. ' ' → logprob: -3.4086458683013916
    3. '   ' → logprob: -16.533645629882812
    4. ' ' → logprob: -17.846145629882812
    5. '```' → logprob: -18.346145629882812
    6. '2' → logprob: -18.471145629882812
    7. '0' → logprob: -18.533645629882812
    8. '  ' → logprob: -19.033645629882812
    9. '１' → logprob: -19.346145629882812
    10. '+' → logprob: -19.408645629882812

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '2' → logprob: -17.375179290771484
    4. '   ' → logprob: -18.750179290771484
    5. '```' → logprob: -19.500179290771484
    6. '-' → logprob: -19.625179290771484
    7. '0' → logprob: -19.750179290771484
    8. '  ' → logprob: -20.500179290771484
    9. '１' → logprob: -20.562679290771484
    10. ' ' → logprob: -21.187679290771484

Token 105: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5692245960235596
    2. '    
' → logprob: -0.9442245960235596
    3. '   ' → logprob: -3.6942245960235596
    4. '  
' → logprob: -5.1942243576049805
    5. ' 
' → logprob: -5.4442243576049805
    6. '\n' → logprob: -5.6942243576049805
    7. '
    
' → logprob: -5.9442243576049805
    8. '<|end|>' → logprob: -7.1942243576049805
    9. '   
' → logprob: -7.3192243576049805
    10. '

' → logprob: -7.3192243576049805

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8622312545776367
    2. '
' → logprob: -0.9872312545776367
    3. '    
' → logprob: -1.6122312545776367
    4. '  
' → logprob: -6.112231254577637
    5. '#' → logprob: -6.862231254577637
    6. '   
' → logprob: -7.612231254577637
    7. '
    
' → logprob: -7.737231254577637
    8. ' 
' → logprob: -7.862231254577637
    9. '```' → logprob: -8.112231254577637
    10. 'n' → logprob: -8.362231254577637

Token 107: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6711198091506958
    2. '    
' → logprob: -1.2961198091506958
    3. '#' (adapté à ' #') → logprob: -1.9211198091506958
    4. '
' → logprob: -3.0461196899414062
    5. 'odd' → logprob: -5.296119689941406
    6. '  
' → logprob: -5.671119689941406
    7. ' #' → logprob: -6.046119689941406
    8. ' odd' → logprob: -6.546119689941406
    9. '   
' → logprob: -6.671119689941406
    10. 'all' → logprob: -6.921119689941406

Token 108: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5693409442901611
    2. 'visited' → logprob: -1.1943409442901611
    3. ' visited' → logprob: -3.444340944290161
    4. 'def' → logprob: -3.569340944290161
    5. ' #' → logprob: -4.069340705871582
    6. 'start' → logprob: -4.194340705871582
    7. 'nodes' → logprob: -4.819340705871582
    8. '   ' → logprob: -5.194340705871582
    9. ' nodes' → logprob: -5.819340705871582
    10. ' start' → logprob: -5.944340705871582

Token 109: ' arrangement' (ID: 21868)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.07231856137514114
    2. ' v' → logprob: -4.9473185539245605
    3. ' ' → logprob: -5.0723185539245605
    4. ' d' → logprob: -5.1973185539245605
    5. ' checking' → logprob: -5.1973185539245605
    6. ' key' → logprob: -5.1973185539245605
    7. 'node' → logprob: -5.3223185539245605
    8. ' all' → logprob: -5.4473185539245605
    9. ' vertex' → logprob: -5.9473185539245605
    10. ' k' → logprob: -6.1973185539245605

Token 110: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01736612431704998
    2. ':' → logprob: -5.2673659324646
    3. ' to' → logprob: -5.3923659324646
    4. ' ,' → logprob: -5.3923659324646
    5. 'def' → logprob: -6.8923659324646
    6. ' ' → logprob: -7.1423659324646
    7. '   ' → logprob: -8.517366409301758
    8. 's' → logprob: -8.892366409301758
    9. ' in' → logprob: -8.892366409301758
    10. 'to' → logprob: -9.017366409301758

Token 111: ' one' (ID: 1001)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15343528985977173
    2. ' a' → logprob: -2.278435230255127
    3. ' an' → logprob: -3.653435230255127
    4. 'an' → logprob: -4.403435230255127
    5. ' which' → logprob: -6.903435230255127
    6. 'circle' → logprob: -8.903435707092285
    7. 'chain' → logprob: -9.403435707092285
    8. ' chain' → logprob: -9.528435707092285
    9. ' domino' → logprob: -9.903435707092285
    10. ' circle' → logprob: -10.028435707092285

Token 112: ' line' (ID: 2543)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.6140874624252319
    2. 'continuous' → logprob: -1.614087462425232
    3. 'line' → logprob: -1.864087462425232
    4. 'stroke' → logprob: -2.9890875816345215
    5. 'loop' → logprob: -4.4890875816345215
    6. ' continuous' → logprob: -4.9890875816345215
    7. ' line' → logprob: -5.1140875816345215
    8. ' chain' → logprob: -5.3640875816345215
    9. 'cycle' → logprob: -5.4890875816345215
    10. 'piece' → logprob: -5.6140875816345215

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03004886955022812
    2. '   ' → logprob: -4.280048847198486
    3. ' to' → logprob: -5.280048847198486
    4. ':' → logprob: -5.780048847198486
    5. 'def' → logprob: -6.030048847198486
    6. ' ,' → logprob: -6.155048847198486
    7. ' we' → logprob: -6.405048847198486
    8. '#' → logprob: -8.280049324035645
    9. 'to' → logprob: -8.780049324035645
    10. 'we' → logprob: -9.155049324035645

Token 114: ' path' (ID: 3104)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.9247859120368958
    2. ' we' → logprob: -1.424785852432251
    3. '#' → logprob: -1.924785852432251
    4. 'all' → logprob: -2.674785852432251
    5. ' all' → logprob: -2.674785852432251
    6. 'def' → logprob: -3.174785852432251
    7. ' #' → logprob: -5.17478609085083
    8. 'check' → logprob: -5.67478609085083
    9. ' check' → logprob: -5.79978609085083
    10. ' the' → logprob: -6.04978609085083

Token 115: ' must' (ID: 2804)
  Prédit: '_exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exists' → logprob: -1.1034265756607056
    2. 'exists' → logprob: -1.4784265756607056
    3. ' or' → logprob: -1.7284265756607056
    4. ' exists' → logprob: -2.853426456451416
    5. ' =' → logprob: -2.978426456451416
    6. '_possible' → logprob: -2.978426456451416
    7. 'or' → logprob: -3.853426456451416
    8. ' must' → logprob: -4.478426456451416
    9. '_or' → logprob: -4.853426456451416
    10. ' should' → logprob: -4.853426456451416

Token 116: ' be' (ID: 413)
  Prédit: ' either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' either' → logprob: -1.0363856554031372
    2. ' have' → logprob: -1.1613856554031372
    3. 'have' → logprob: -1.7863856554031372
    4. 'either' → logprob: -2.5363855361938477
    5. ' be' → logprob: -2.6613855361938477
    6. 'be' → logprob: -4.286385536193848
    7. 'e' → logprob: -8.161385536193848
    8. 'Euler' → logprob: -8.536385536193848
    9. '_have' → logprob: -8.661385536193848
    10. ' all' → logprob: -9.036385536193848

Token 117: ' Euler' (ID: 167577)
  Prédit: ' either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' either' → logprob: -0.42682045698165894
    2. 'Euler' → logprob: -1.5518205165863037
    3. 'either' → logprob: -3.0518205165863037
    4. ' connected' → logprob: -3.3018205165863037
    5. ' Euler' → logprob: -3.6768205165863037
    6. 'connected' → logprob: -4.801820278167725
    7. '0' → logprob: -5.176820278167725
    8. 'e' → logprob: -5.551820278167725
    9. ' ' → logprob: -6.051820278167725
    10. '   ' → logprob: -6.176820278167725

Token 118: 'ian' (ID: 1200)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.8019002079963684
    2. '_' → logprob: -1.1769001483917236
    3. '   ' → logprob: -2.1769001483917236
    4. 'ian' → logprob: -2.8019001483917236
    5. 'path' → logprob: -4.301900386810303
    6. 'Path' → logprob: -4.676900386810303
    7. '_cycle' → logprob: -4.926900386810303
    8. '       ' → logprob: -5.176900386810303
    9. ' path' → logprob: -5.551900386810303
    10. '_paths' → logprob: -6.051900386810303

Token 119: ' trail' (ID: 12761)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6723350286483765
    2. ' if' → logprob: -2.047335147857666
    3. '#' → logprob: -2.172335147857666
    4. ',' → logprob: -3.547335147857666
    5. ' start' → logprob: -3.547335147857666
    6. ' for' → logprob: -3.672335147857666
    7. ' path' → logprob: -4.047335147857666
    8. ' #' → logprob: -4.047335147857666
    9. ':' → logprob: -4.422335147857666
    10. ' nodes' → logprob: -4.422335147857666

Token 120: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44082534313201904
    2. '    
' → logprob: -2.0658254623413086
    3. '
' → logprob: -2.3158254623413086
    4. '#' → logprob: -3.4408254623413086
    5. '   
' → logprob: -3.9408254623413086
    6. '  
' → logprob: -4.065825462341309
    7. ',' → logprob: -4.315825462341309
    8. ' 
' → logprob: -4.315825462341309
    9. '    ' → logprob: -4.940825462341309
    10. ':' → logprob: -5.315825462341309

Token 121: ' circuit' (ID: 20303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43034467101097107
    2. ' circuit' → logprob: -1.1803447008132935
    3. 'Euler' → logprob: -3.430344581604004
    4. ' Euler' → logprob: -4.805344581604004
    5. 'cycle' → logprob: -6.805344581604004
    6. ' cycle' → logprob: -8.555344581604004
    7. ' circuito' → logprob: -9.055344581604004
    8. 'e' → logprob: -9.680344581604004
    9. 'Circuit' → logprob: -9.680344581604004
    10. 'ircuit' → logprob: -9.805344581604004

Token 122: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7386989593505859
    2. '    
' → logprob: -1.113698959350586
    3. '
' → logprob: -2.488698959350586
    4. '   
' → logprob: -3.613698959350586
    5. '  
' → logprob: -4.113698959350586
    6. ' 
' → logprob: -4.113698959350586
    7. '     
' → logprob: -4.488698959350586
    8. '    ' → logprob: -4.863698959350586
    9. ',' → logprob: -4.863698959350586
    10. '    
    
' → logprob: -5.363698959350586

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0771976709365845
    2. '    
' → logprob: -1.0771976709365845
    3. ' 
' → logprob: -1.7021976709365845
    4. '
' → logprob: -2.952197551727295
    5. '     
' → logprob: -3.202197551727295
    6. '    ' → logprob: -4.077197551727295
    7. '  
' → logprob: -4.952197551727295
    8. '   
' → logprob: -5.202197551727295
    9. 'n' → logprob: -5.577197551727295
    10. '#' → logprob: -5.827197551727295

Token 124: ' #' (ID: 1069)
  Prédit: ' odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.18786510825157166
    2. ' #' → logprob: -2.9378650188446045
    3. '   ' → logprob: -3.4378650188446045
    4. 'odd' → logprob: -3.6878650188446045
    5. ' for' → logprob: -4.437865257263184
    6. '#' (adapté à ' #') → logprob: -4.937865257263184
    7. ' if' → logprob: -5.062865257263184
    8. ' def' → logprob: -5.187865257263184
    9. '    
' → logprob: -5.687865257263184
    10. ' 
' → logprob: -5.687865257263184

Token 125: ' Conditions' (ID: 39333)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.8935245871543884
    2. ' odd' → logprob: -1.1435246467590332
    3. '   ' → logprob: -2.268524646759033
    4. '#' → logprob: -2.518524646759033
    5. ' #' → logprob: -3.393524646759033
    6. ' all' → logprob: -4.018524646759033
    7. ' for' → logprob: -4.893524646759033
    8. ' def' → logprob: -5.518524646759033
    9. ' nodes' → logprob: -5.643524646759033
    10. 'all' → logprob: -5.768524646759033

Token 126: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6189140677452087
    2. ':' → logprob: -1.1189141273498535
    3. ' for' → logprob: -2.6189141273498535
    4. '    ' → logprob: -3.9939141273498535
    5. ' :' → logprob: -4.2439141273498535
    6. 'for' → logprob: -4.8689141273498535
    7. ' are' → logprob: -5.2439141273498535
    8. '   ' → logprob: -5.7439141273498535
    9. '=' → logprob: -5.7439141273498535
    10. ' ' → logprob: -6.3689141273498535

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49669134616851807
    2. '    ' → logprob: -1.871691346168518
    3. '    
' → logprob: -1.996691346168518
    4. ' 
' → logprob: -3.6216912269592285
    5. '1' → logprob: -4.1216912269592285
    6. ' ' → logprob: -4.4966912269592285
    7. '     
' → logprob: -5.1216912269592285
    8. '    
    
' → logprob: -5.1216912269592285
    9. ''' → logprob: -5.2466912269592285
    10. '```' → logprob: -5.3716912269592285

Token 128: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1197397708892822
    2. ' #' → logprob: -1.3697397708892822
    3. '1' → logprob: -1.8697397708892822
    4. '   ' → logprob: -2.3697397708892822
    5. '"' → logprob: -2.7447397708892822
    6. ' 
' → logprob: -3.1197397708892822
    7. ''' → logprob: -4.244739532470703
    8. '    
' → logprob: -4.494739532470703
    9. ' count' → logprob: -4.744739532470703
    10. ' ' → logprob: -5.244739532470703

Token 129: '  ' (ID: 256)
  Prédit: ' odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.32784613966941833
    2. 'odd' → logprob: -1.4528461694717407
    3. ' count' → logprob: -3.952846050262451
    4. ' cnt' → logprob: -4.452846050262451
    5. ' #' → logprob: -5.202846050262451
    6. '#' → logprob: -6.452846050262451
    7. 'count' → logprob: -6.577846050262451
    8. '   ' → logprob: -6.577846050262451
    9. ' at' → logprob: -6.827846050262451
    10. 'cnt' → logprob: -6.827846050262451

Token 130: ' -' (ID: 533)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.24063627421855927
    2. '#' → logprob: -2.7406363487243652
    3. ' odd' → logprob: -3.3656363487243652
    4. 'Either' → logprob: -3.9906363487243652
    5. ' at' → logprob: -4.490636348724365
    6. 'num' → logprob: -4.615636348724365
    7. ' count' → logprob: -4.865636348724365
    8. 'At' → logprob: -4.990636348724365
    9. 'count' → logprob: -4.990636348724365
    10. ' #' → logprob: -5.365636348724365

Token 131: ' Graph' (ID: 15559)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'At' → logprob: -1.0675327777862549
    2. 'All' → logprob: -1.4425327777862549
    3. 'Either' → logprob: -1.6925327777862549
    4. 'Number' → logprob: -3.067532777786255
    5. ' Either' → logprob: -3.567532777786255
    6. 'There' → logprob: -3.692532777786255
    7. 'The' → logprob: -4.067532539367676
    8. 'sum' → logprob: -4.317532539367676
    9. ' At' → logprob: -4.442532539367676
    10. ' either' → logprob: -4.442532539367676

Token 132: ' has' (ID: 853)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.15146301686763763
    2. 'is' → logprob: -3.276463031768799
    3. ' should' → logprob: -3.401463031768799
    4. ' must' → logprob: -3.651463031768799
    5. ' connected' → logprob: -4.276463031768799
    6. 'connected' → logprob: -5.151463031768799
    7. ' has' → logprob: -5.276463031768799
    8. '_connected' → logprob: -6.026463031768799
    9. ' may' → logprob: -6.151463031768799
    10. ' connectivity' → logprob: -6.651463031768799

Token 133: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.4494972825050354
    2. 'at' → logprob: -1.0744972229003906
    3. ' either' → logprob: -4.324497222900391
    4. '0' → logprob: -5.199497222900391
    5. 'either' → logprob: -7.199497222900391
    6. ' ' → logprob: -7.699497222900391
    7. ' all' → logprob: -7.699497222900391
    8. 'all' → logprob: -9.07449722290039
    9. 'a' → logprob: -11.57449722290039
    10. '   ' → logprob: -11.69949722290039

Token 134: ' most' (ID: 1645)
  Prédit: ' most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' most' → logprob: -0.47449764609336853
    2. 'most' → logprob: -0.9744976758956909
    3. 'Most' → logprob: -7.9744977951049805
    4. ' least' → logprob: -10.22449779510498
    5. 'least' → logprob: -10.47449779510498
    6. '   ' → logprob: -12.72449779510498
    7. '-most' → logprob: -13.09949779510498
    8. '    ' → logprob: -13.34949779510498
    9. ' ' → logprob: -13.72449779510498
    10. 'mos' → logprob: -14.34949779510498

Token 135: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.46697568893432617
    2. 'two' → logprob: -1.4669756889343262
    3. '2' → logprob: -1.9669756889343262
    4. ' ' → logprob: -5.966975688934326
    5. '_two' → logprob: -10.216976165771484
    6. 'Two' → logprob: -13.591976165771484
    7. '0' → logprob: -13.841976165771484
    8. 'tw' → logprob: -14.591976165771484
    9. '```' → logprob: -15.091976165771484
    10. ' zwei' → logprob: -15.216976165771484

Token 136: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.3317849934101105
    2. 'nodes' → logprob: -1.831784963607788
    3. ' vertices' → logprob: -2.956784963607788
    4. '<|end|>' → logprob: -3.206784963607788
    5. 'vertices' → logprob: -3.581784963607788
    6. ' odd' → logprob: -7.206785202026367
    7. '_nodes' → logprob: -7.581785202026367
    8. ' ' → logprob: -8.331785202026367
    9. 'odd' → logprob: -8.456785202026367
    10. '	nodes' → logprob: -9.206785202026367

Token 137: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.056811731308698654
    2. 'with' → logprob: -2.931811809539795
    3. ' of' → logprob: -6.556811809539795
    4. ' ' → logprob: -8.056811332702637
    5. '<|end|>' → logprob: -8.806811332702637
    6. 's' → logprob: -11.181811332702637
    7. '	with' → logprob: -12.306811332702637
    8. '   ' → logprob: -12.431811332702637
    9. ' having' → logprob: -12.806811332702637
    10. '    ' → logprob: -12.931811332702637

Token 138: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.12693209946155548
    2. ' odd' → logprob: -2.126932144165039
    3. ' an' → logprob: -13.126932144165039
    4. 'an' → logprob: -13.501932144165039
    5. 'od' → logprob: -15.001932144165039
    6. '```' → logprob: -15.876932144165039
    7. 'degree' → logprob: -16.75193214416504
    8. ' ' → logprob: -16.87693214416504
    9. 'Odd' → logprob: -17.50193214416504
    10. ' degree' → logprob: -18.50193214416504

Token 139: ' degree' (ID: 9882)
  Prédit: ' degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degree' → logprob: -0.13245108723640442
    2. 'degree' → logprob: -2.132451057434082
    3. ' degrees' → logprob: -5.382451057434082
    4. '_degree' → logprob: -7.257451057434082
    5. 'degrees' → logprob: -9.382451057434082
    6. '-degree' → logprob: -9.882451057434082
    7. ' ' → logprob: -9.882451057434082
    8. '<|end|>' → logprob: -11.257451057434082
    9. '  ' → logprob: -13.257451057434082
    10. 'deg' → logprob: -13.257451057434082

Token 140: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0986303091049194
    2. '<|end|>' → logprob: -1.4736303091049194
    3. '   ' → logprob: -1.5986303091049194
    4. '
' → logprob: -2.348630428314209
    5. ' and' → logprob: -3.598630428314209
    6. '    
' → logprob: -3.723630428314209
    7. ' ' → logprob: -4.098630428314209
    8. '    ' → logprob: -4.348630428314209
    9. ' or' → logprob: -4.598630428314209
    10. '  ' → logprob: -4.723630428314209

Token 141: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.7699363231658936
    2. '   ' → logprob: -1.2699363231658936
    3. ' 
' → logprob: -2.1449363231658936
    4. '
' → logprob: -2.5199363231658936
    5. '  
' → logprob: -3.7699363231658936
    6. '   
' → logprob: -4.644936561584473
    7. '    ' → logprob: -4.894936561584473
    8. '<|end|>' → logprob: -5.644936561584473
    9. '    
    
' → logprob: -5.769936561584473
    10. ' ' → logprob: -5.769936561584473

Token 142: ' #' (ID: 1069)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6852880120277405
    2. '   ' → logprob: -1.1852879524230957
    3. '
' → logprob: -2.1852879524230957
    4. ' 
' → logprob: -3.6852879524230957
    5. '    ' → logprob: -4.185287952423096
    6. '     
' → logprob: -4.310287952423096
    7. '  
' → logprob: -4.685287952423096
    8. '   
' → logprob: -5.060287952423096
    9. '    
    
' → logprob: -6.810287952423096
    10. 'def' → logprob: -6.935287952423096

Token 143: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5949267148971558
    2. '    
' → logprob: -1.3449267148971558
    3. '
' → logprob: -2.8449268341064453
    4. 'odd' → logprob: -2.8449268341064453
    5. ' odd' → logprob: -3.5949268341064453
    6. ' 
' → logprob: -4.344926834106445
    7. '#' → logprob: -4.719926834106445
    8. 'count' → logprob: -5.594926834106445
    9. '  
' → logprob: -6.219926834106445
    10. '   
' → logprob: -6.344926834106445

Token 144: ' -' (ID: 533)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.2709292769432068
    2. '#' → logprob: -1.7709293365478516
    3. 'count' → logprob: -4.145929336547852
    4. '   ' → logprob: -4.145929336547852
    5. 'all' → logprob: -5.395929336547852
    6. 'nodes' → logprob: -5.395929336547852
    7. ' odd' → logprob: -5.520929336547852
    8. 'connected' → logprob: -5.645929336547852
    9. 'visited' → logprob: -5.770929336547852
    10. ' at' → logprob: -5.895929336547852

Token 145: ' All' (ID: 2545)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6064040660858154
    2. ' #' → logprob: -1.7314040660858154
    3. 'def' → logprob: -2.6064040660858154
    4. 'All' → logprob: -2.9814040660858154
    5. ' all' → logprob: -3.4814040660858154
    6. 'Check' → logprob: -3.7314040660858154
    7. ' connected' → logprob: -4.1064043045043945
    8. 'all' → logprob: -4.3564043045043945
    9. ' All' → logprob: -4.4814043045043945
    10. ' def' → logprob: -4.7314043045043945

Token 146: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.025358613580465317
    2. 'nodes' → logprob: -4.1503586769104
    3. '_nodes' → logprob: -5.5253586769104
    4. ' non' → logprob: -6.2753586769104
    5. ' vertices' → logprob: -6.2753586769104
    6. 'non' → logprob: -7.5253586769104
    7. 'vertices' → logprob: -8.400358200073242
    8. '	nodes' → logprob: -8.775358200073242
    9. ' connected' → logprob: -8.900358200073242
    10. 'visited' → logprob: -9.150358200073242

Token 147: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.2853277623653412
    2. 'with' → logprob: -1.4103277921676636
    3. 'in' → logprob: -6.410327911376953
    4. ' in' → logprob: -7.160327911376953
    5. ' involved' → logprob: -7.160327911376953
    6. ' that' → logprob: -7.535327911376953
    7. 'connected' → logprob: -9.035327911376953
    8. ' connected' → logprob: -9.285327911376953
    9. 'that' → logprob: -10.035327911376953
    10. ' are' → logprob: -10.160327911376953

Token 148: ' edges' (ID: 22569)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.28732073307037354
    2. 'non' → logprob: -1.5373207330703735
    3. ' degree' → logprob: -3.912320613861084
    4. ' non' → logprob: -4.912320613861084
    5. ' at' → logprob: -5.287320613861084
    6. 'odd' → logprob: -7.287320613861084
    7. 'positive' → logprob: -7.412320613861084
    8. 'edges' → logprob: -7.912320613861084
    9. 'at' → logprob: -8.037321090698242
    10. 'a' → logprob: -9.162321090698242

Token 149: ' belong' (ID: 20753)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.14381662011146545
    2. ' must' → logprob: -2.5188167095184326
    3. ' have' → logprob: -3.8938167095184326
    4. ' in' → logprob: -4.3938164710998535
    5. ' should' → logprob: -5.3938164710998535
    6. ' with' → logprob: -5.5188164710998535
    7. ' present' → logprob: -5.6438164710998535
    8. ' connected' → logprob: -6.3938164710998535
    9. ' can' → logprob: -6.6438164710998535
    10. ' that' → logprob: -6.6438164710998535

Token 150: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.012719775550067425
    2. 'to' → logprob: -4.387719631195068
    3. '_to' → logprob: -8.637720108032227
    4. ' ' → logprob: -11.387720108032227
    5. '	to' → logprob: -12.012720108032227
    6. '<|end|>' → logprob: -12.387720108032227
    7. ' connected' → logprob: -13.012720108032227
    8. '_' → logprob: -13.387720108032227
    9. ' in' → logprob: -13.387720108032227
    10. ' ' → logprob: -13.637720108032227

Token 151: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4244474172592163
    2. 'the' → logprob: -1.2994474172592163
    3. ' one' → logprob: -3.174447536468506
    4. ' a' → logprob: -3.799447536468506
    5. 'a' → logprob: -5.424447536468506
    6. 'one' → logprob: -5.424447536468506
    7. ' same' → logprob: -9.924447059631348
    8. 'same' → logprob: -9.924447059631348
    9. ' at' → logprob: -10.174447059631348
    10. ' an' → logprob: -11.424447059631348

Token 152: ' single' (ID: 4590)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.1951671689748764
    2. ' connected' → logprob: -2.195167064666748
    3. 'single' → logprob: -3.695167064666748
    4. '_connected' → logprob: -3.945167064666748
    5. ' single' → logprob: -4.320167064666748
    6. 'ingle' → logprob: -5.820167064666748
    7. '-connected' → logprob: -6.445167064666748
    8. 'ct' → logprob: -6.570167064666748
    9. 'connect' → logprob: -7.070167064666748
    10. 'common' → logprob: -8.070167541503906

Token 153: ' connected' (ID: 12079)
  Prédit: ' connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.47647780179977417
    2. 'connected' → logprob: -0.9764778017997742
    3. 'component' → logprob: -6.22647762298584
    4. ' component' → logprob: -8.35147762298584
    5. '   ' → logprob: -9.47647762298584
    6. '_connected' → logprob: -9.85147762298584
    7. ' ' → logprob: -10.60147762298584
    8. 'connect' → logprob: -11.22647762298584
    9. ' connectivity' → logprob: -11.35147762298584
    10. '-connected' → logprob: -13.47647762298584

Token 154: ' component' (ID: 6392)
  Prédit: ' component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' component' → logprob: -0.20364558696746826
    2. 'component' → logprob: -1.7036455869674683
    3. '_component' → logprob: -6.203645706176758
    4. '_components' → logprob: -9.578645706176758
    5. ' components' → logprob: -9.578645706176758
    6. '	component' → logprob: -10.328645706176758
    7. 'components' → logprob: -10.578645706176758
    8. ' ' → logprob: -12.578645706176758
    9. '-component' → logprob: -13.453645706176758
    10. '   ' → logprob: -13.453645706176758

Token 155: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7101706266403198
    2. '    
' → logprob: -0.8351706266403198
    3. '   ' → logprob: -3.2101707458496094
    4. '   
' → logprob: -4.835170745849609
    5. ' 
' → logprob: -4.960170745849609
    6. '
    
' → logprob: -5.085170745849609
    7. '  
' → logprob: -5.460170745849609
    8. '     
' → logprob: -5.960170745849609
    9. '

' → logprob: -6.335170745849609
    10. '    
    
' → logprob: -6.460170745849609

Token 156: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.2598286271095276
    2. '
' → logprob: -2.259828567504883
    3. '   ' → logprob: -2.634828567504883
    4. ' 
' → logprob: -3.634828567504883
    5. '   
' → logprob: -4.884828567504883
    6. '  
' → logprob: -4.884828567504883
    7. '    
    
' → logprob: -5.759828567504883
    8. '     
' → logprob: -5.884828567504883
    9. '    ' → logprob: -6.259828567504883
    10. '
    
' → logprob: -7.259828567504883

Token 157: ' nodes' (ID: 15749)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.7467127442359924
    2. '   ' → logprob: -1.1217126846313477
    3. '
' → logprob: -1.7467126846313477
    4. ' 
' → logprob: -4.246712684631348
    5. '   
' → logprob: -5.246712684631348
    6. '  
' → logprob: -5.871712684631348
    7. '#' → logprob: -7.121712684631348
    8. '     
' → logprob: -7.246712684631348
    9. 'n' → logprob: -7.996712684631348
    10. 'def' → logprob: -8.246712684631348

Token 158: '_with' (ID: 14161)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4668998122215271
    2. '_with' → logprob: -1.2168998718261719
    3. '=' → logprob: -2.591899871826172
    4. 'with' → logprob: -6.341899871826172
    5. 'With' → logprob: -8.716899871826172
    6. ' with' → logprob: -10.216899871826172
    7. '_' → logprob: -10.716899871826172
    8. '_in' → logprob: -10.841899871826172
    9. '	with' → logprob: -12.341899871826172
    10. '=set' → logprob: -12.341899871826172

Token 159: '_edges' (ID: 68870)
  Prédit: '_degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.6738852858543396
    2. '_edges' → logprob: -0.9238852858543396
    3. 'degree' → logprob: -2.4238853454589844
    4. 'edges' → logprob: -6.173885345458984
    5. ' degree' → logprob: -6.548885345458984
    6. ' edges' → logprob: -7.298885345458984
    7. '<|end|>' → logprob: -8.298885345458984
    8. '_edge' → logprob: -9.048885345458984
    9. '_' → logprob: -9.798885345458984
    10. '```' → logprob: -10.923885345458984

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815006136894226
    2. '=' → logprob: -4.0181498527526855
    3. ' =[' → logprob: -17.143150329589844
    4. 's' → logprob: -17.643150329589844
    5. ' ' → logprob: -17.893150329589844
    6. '>' → logprob: -18.018150329589844
    7. '＝' → logprob: -18.143150329589844
    8. ')' → logprob: -18.268150329589844
    9. ' =)' → logprob: -18.768150329589844
    10. ' =
' → logprob: -18.893150329589844

Token 161: ' [' (ID: 723)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.778569221496582
    2. '{' → logprob: -1.278569221496582
    3. ' [' → logprob: -1.528569221496582
    4. '[' → logprob: -4.028569221496582
    5. ' set' → logprob: -4.028569221496582
    6. 'set' → logprob: -4.653569221496582
    7. '=set' → logprob: -9.653569221496582
    8. '{s' → logprob: -9.778569221496582
    9. '[len' → logprob: -10.028569221496582
    10. '[s' → logprob: -10.153569221496582

Token 162: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.11814248561859131
    2. ' node' → logprob: -2.368142604827881
    3. 'n' → logprob: -4.118142604827881
    4. ' n' → logprob: -7.118142604827881
    5. 'x' → logprob: -8.118142127990723
    6. 'k' → logprob: -8.743142127990723
    7. 'u' → logprob: -9.493142127990723
    8. 'v' → logprob: -9.743142127990723
    9. '   ' → logprob: -9.993142127990723
    10. ' x' → logprob: -11.118142127990723

Token 163: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06198382377624512
    2. 'for' → logprob: -2.811983823776245
    3. ' ' → logprob: -11.061984062194824
    4. '	for' → logprob: -15.436984062194824
    5. ' in' → logprob: -16.561983108520508
    6. ']' → logprob: -16.686983108520508
    7. ' 
' → logprob: -17.436983108520508
    8. '```' → logprob: -17.436983108520508
    9. '<|end|>' → logprob: -17.561983108520508
    10. ')' → logprob: -17.561983108520508

Token 164: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.11284498870372772
    2. 'node' → logprob: -2.237844944000244
    3. ' nodes' → logprob: -11.612845420837402
    4. 'nodes' → logprob: -12.237845420837402
    5. 'degree' → logprob: -12.487845420837402
    6. ',node' → logprob: -13.362845420837402
    7. ' degree' → logprob: -13.487845420837402
    8. '	node' → logprob: -13.987845420837402
    9. '(node' → logprob: -14.612845420837402
    10. ',' → logprob: -15.487845420837402

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1447320431470871
    2. ',' → logprob: -2.3947319984436035
    3. 'in' → logprob: -3.1447319984436035
    4. ' ,' → logprob: -8.144732475280762
    5. ',node' → logprob: -9.769732475280762
    6. ' ' → logprob: -10.394732475280762
    7. 'degree' → logprob: -10.394732475280762
    8. 'nodes' → logprob: -11.144732475280762
    9. ' nodes' → logprob: -11.519732475280762
    10. ',in' → logprob: -12.144732475280762

Token 166: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.6796321272850037
    2. ' degree' → logprob: -0.8046321272850037
    3. 'graph' → logprob: -3.4296321868896484
    4. ' graph' → logprob: -4.304632186889648
    5. 'range' → logprob: -11.679632186889648
    6. ' range' → logprob: -11.929632186889648
    7. 'dom' → logprob: -11.929632186889648
    8. ' ' → logprob: -12.679632186889648
    9. 'node' → logprob: -12.929632186889648
    10. '-degree' → logprob: -13.367132186889648

Token 167: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.001383570721372962
    2. 'if' → logprob: -6.7513837814331055
    3. ']' → logprob: -9.001383781433105
    4. '.keys' → logprob: -9.376383781433105
    5. ' ]' → logprob: -13.001383781433105
    6. ' ' → logprob: -13.751383781433105
    7. '	if' → logprob: -13.876383781433105
    8. 'in' → logprob: -15.126383781433105
    9. ' in' → logprob: -15.251383781433105
    10. 's' → logprob: -15.876383781433105

Token 168: ' degree' (ID: 9882)
  Prédit: ' degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degree' → logprob: -0.10020969063043594
    2. 'degree' → logprob: -2.3502097129821777
    3. ' ' → logprob: -13.47520923614502
    4. '.degree' → logprob: -14.60020923614502
    5. '   ' → logprob: -15.10020923614502
    6. '_degree' → logprob: -15.10020923614502
    7. 'Degree' → logprob: -16.100210189819336
    8. '-degree' → logprob: -16.100210189819336
    9. 'egree' → logprob: -16.225210189819336
    10. '    ' → logprob: -16.600210189819336

Token 169: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.001215356052853167
    2. '>' → logprob: -6.87621545791626
    3. ' >' → logprob: -8.876214981079102
    4. '[' → logprob: -10.751214981079102
    5. ']' → logprob: -11.126214981079102
    6. ']>' → logprob: -12.876214981079102
    7. 'node' → logprob: -14.126214981079102
    8. '```' → logprob: -14.376214981079102
    9. '   ' → logprob: -14.501214981079102
    10. '(node' → logprob: -14.501214981079102

Token 170: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10905338078737259
    2. ' >' → logprob: -2.484053373336792
    3. ']' → logprob: -3.984053373336792
    4. ']>' → logprob: -6.734053611755371
    5. '>]' → logprob: -9.859053611755371
    6. ')' → logprob: -11.109053611755371
    7. ')]' → logprob: -11.109053611755371
    8. ' ]' → logprob: -11.984053611755371
    9. '()>' → logprob: -11.984053611755371
    10. ')>' → logprob: -12.234053611755371

Token 171: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07939939945936203
    2. ' >' → logprob: -2.579399347305298
    3. ']' → logprob: -7.704399585723877
    4. ']>' → logprob: -10.329399108886719
    5. ' ' → logprob: -12.079399108886719
    6. '&gt' → logprob: -12.329399108886719
    7. '>]' → logprob: -12.329399108886719
    8. ')' → logprob: -12.454399108886719
    9. '()>' → logprob: -12.829399108886719
    10. ')>' → logprob: -13.329399108886719

Token 172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815006136894226
    2. ' ' → logprob: -4.0181498527526855
    3. '<|end|>' → logprob: -16.643150329589844
    4. '   ' → logprob: -17.643150329589844
    5. '1' → logprob: -18.393150329589844
    6. '  ' → logprob: -18.393150329589844
    7. '```' → logprob: -18.393150329589844
    8. ' ' → logprob: -18.768150329589844
    9. '۰' → logprob: -19.018150329589844
    10. '
' → logprob: -19.268150329589844

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -17.750059127807617
    4. '1' → logprob: -18.000059127807617
    5. '۰' → logprob: -18.625059127807617
    6. 'zero' → logprob: -19.000059127807617
    7. '   ' → logprob: -19.625059127807617
    8. '<|end|>' → logprob: -19.687559127807617
    9. '2' → logprob: -20.000059127807617
    10. '
' → logprob: -20.125059127807617

Token 174: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020425561524461955
    2. ' ]' → logprob: -8.500204086303711
    3. ')' → logprob: -15.250204086303711
    4. ']
' → logprob: -16.00020408630371
    5. ')]' → logprob: -16.00020408630371
    6. '   ' → logprob: -16.37520408630371
    7. ']

' → logprob: -16.87520408630371
    8. '()]' → logprob: -17.25020408630371
    9. '])' → logprob: -17.50020408630371
    10. ' or' → logprob: -17.50020408630371

Token 175: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5953078866004944
    2. '    
' → logprob: -1.3453078269958496
    3. '   ' → logprob: -1.7203078269958496
    4. ' if' → logprob: -5.72030782699585
    5. '  
' → logprob: -6.47030782699585
    6. '   
' → logprob: -6.59530782699585
    7. ' 
' → logprob: -7.09530782699585
    8. '
    
' → logprob: -7.59530782699585
    9. 'if' → logprob: -7.72030782699585
    10. '    
    
' → logprob: -8.220308303833008

Token 176: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7352568507194519
    2. ' if' → logprob: -1.4852569103240967
    3. '   ' → logprob: -1.8602569103240967
    4. '    
' → logprob: -2.2352569103240967
    5. ' 
' → logprob: -4.110256671905518
    6. 'if' (adapté à ' if') → logprob: -4.610256671905518
    7. '  
' → logprob: -6.110256671905518
    8. '   
' → logprob: -6.860256671905518
    9. 'def' → logprob: -7.235256671905518
    10. '```' → logprob: -8.485257148742676

Token 177: ' not' (ID: 625)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.03521449863910675
    2. ' not' → logprob: -4.035214424133301
    3. 'len' → logprob: -4.410214424133301
    4. ' sum' → logprob: -5.785214424133301
    5. 'sum' → logprob: -7.160214424133301
    6. '(len' → logprob: -7.285214424133301
    7. 'not' → logprob: -9.4102144241333
    8. ' (' → logprob: -9.4102144241333
    9. ' ' → logprob: -10.9102144241333
    10. ' any' → logprob: -11.0352144241333

Token 178: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.000627014203928411
    2. 'nodes' → logprob: -7.375627040863037
    3. '	nodes' → logprob: -15.750626564025879
    4. '(nodes' → logprob: -15.875626564025879
    5. ' ' → logprob: -16.500627517700195
    6. ' node' → logprob: -16.750627517700195
    7. ' ' → logprob: -16.750627517700195
    8. '_nodes' → logprob: -17.375627517700195
    9. '.nodes' → logprob: -19.500627517700195
    10. ' spaces' → logprob: -19.625627517700195

Token 179: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.747814349073451e-05
    2. '_nodes' → logprob: -11.125017166137695
    3. '_w' → logprob: -13.625017166137695
    4. 'with' → logprob: -14.625017166137695
    5. '_' → logprob: -15.750017166137695
    6. '_without' → logprob: -15.750017166137695
    7. 's' → logprob: -16.500017166137695
    8. ' _' → logprob: -16.625017166137695
    9. '_to' → logprob: -16.625017166137695
    10. '_for' → logprob: -16.625017166137695

Token 180: '_edges' (ID: 68870)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.048596348613500595
    2. '_edges' → logprob: -3.0485963821411133
    3. 'Edges' → logprob: -12.423596382141113
    4. ' edges' → logprob: -12.798596382141113
    5. 'edge' → logprob: -13.548596382141113
    6. 'nodes' → logprob: -15.423596382141113
    7. '.edges' → logprob: -15.548596382141113
    8. 'all' → logprob: -15.923596382141113
    9. 'ed' → logprob: -16.798595428466797
    10. '(edges' → logprob: -16.923595428466797

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00029232146334834397
    2. ':return' → logprob: -8.250292778015137
    3. ':
' → logprob: -10.750292778015137
    4. ' :' → logprob: -11.625292778015137
    5. '):' → logprob: -14.500292778015137
    6. ':**' → logprob: -16.37529182434082
    7. ')' → logprob: -17.37529182434082
    8. ':def' → logprob: -17.50029182434082
    9. 'return' → logprob: -18.37529182434082
    10. ':list' → logprob: -18.50029182434082

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015506688505411148
    2. ':' → logprob: -5.140506744384766
    3. '
' → logprob: -5.390506744384766
    4. ':
' → logprob: -6.015506744384766
    5. ' return' → logprob: -6.890506744384766
    6. ':return' → logprob: -7.765506744384766
    7. '   ' → logprob: -7.890506744384766
    8. '\n' → logprob: -8.390506744384766
    9. ' 
' → logprob: -8.640506744384766
    10. 'return' → logprob: -9.640506744384766

Token 183: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6428052186965942
    2. '       ' → logprob: -1.3928052186965942
    3. 'return' (adapté à ' return') → logprob: -1.7678052186965942
    4. ' True' → logprob: -3.0178050994873047
    5. 'True' → logprob: -5.267805099487305
    6. '   ' → logprob: -7.142805099487305
    7. '    ' → logprob: -9.017805099487305
    8. ' 
' → logprob: -10.517805099487305
    9. '        
' → logprob: -10.767805099487305
    10. '        ' → logprob: -10.892805099487305

Token 184: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5759895443916321
    2. ' True' → logprob: -0.8259895443916321
    3. 'False' → logprob: -10.075989723205566
    4. ' False' → logprob: -11.950989723205566
    5. '[]' → logprob: -14.200989723205566
    6. '(True' → logprob: -15.200989723205566
    7. ' ' → logprob: -15.450989723205566
    8. '"' → logprob: -16.32598876953125
    9. '0' → logprob: -16.32598876953125
    10. '1' → logprob: -16.57598876953125

Token 185: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7140786051750183
    2. '    
' → logprob: -0.8390786051750183
    3. '
' → logprob: -2.714078664779663
    4. ' 
' → logprob: -5.839078426361084
    5. '\n' → logprob: -5.964078426361084
    6. '   
' → logprob: -5.964078426361084
    7. '  
' → logprob: -6.714078426361084
    8. '    ' → logprob: -7.339078426361084
    9. '
    
' → logprob: -7.714078426361084
    10. '    
    
' → logprob: -8.214078903198242

Token 186: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1001213788986206
    2. '    
' → logprob: -1.1001213788986206
    3. '   ' → logprob: -1.7251213788986206
    4. '\n' → logprob: -2.35012149810791
    5. ' 
' → logprob: -3.97512149810791
    6. '   
' → logprob: -4.10012149810791
    7. '  
' → logprob: -4.22512149810791
    8. 'n' → logprob: -5.97512149810791
    9. '  ' → logprob: -6.47512149810791
    10. '
    
' → logprob: -6.60012149810791

Token 187: ' no' (ID: 860)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5582167506217957
    2. ' True' → logprob: -0.9332167506217957
    3. 'Empty' → logprob: -3.4332168102264404
    4. '#' → logprob: -7.308216571807861
    5. ' ' → logprob: -7.933216571807861
    6. ' Empty' → logprob: -8.18321704864502
    7. '   ' → logprob: -8.80821704864502
    8. ' empty' → logprob: -9.05821704864502
    9. 'empty' → logprob: -9.43321704864502
    10. 'return' → logprob: -9.43321704864502

Token 188: ' domino' (ID: 133589)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.38691720366477966
    2. ' domino' → logprob: -1.136917233467102
    3. ' dom' → logprob: -10.886917114257812
    4. '_dom' → logprob: -11.386917114257812
    5. 'edges' → logprob: -12.011917114257812
    6. ' edges' → logprob: -12.761917114257812
    7. '(dom' → logprob: -13.261917114257812
    8. 'domin' → logprob: -14.136917114257812
    9. '-dom' → logprob: -14.636917114257812
    10. 'Dom' → logprob: -14.636917114257812

Token 189: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.02637147717177868
    2. 's' → logprob: -3.651371479034424
    3. ' pieces' → logprob: -9.901371002197266
    4. 'e' → logprob: -11.901371002197266
    5. 'pieces' → logprob: -12.151371002197266
    6. ' s' → logprob: -12.776371002197266
    7. '   ' → logprob: -13.276371002197266
    8. 'dom' → logprob: -13.526371002197266
    9. 'ies' → logprob: -14.276371002197266
    10. '```' → logprob: -14.526371002197266

Token 190: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.5385577082633972
    2. '   ' → logprob: -0.9135577082633972
    3. '
' → logprob: -4.788557529449463
    4. '   
' → logprob: -6.163557529449463
    5. '\n' → logprob: -6.288557529449463
    6. '  
' → logprob: -7.163557529449463
    7. '    
    
' → logprob: -7.413557529449463
    8. ' 
' → logprob: -7.913557529449463
    9. '
    
' → logprob: -8.288558006286621
    10. '    ' → logprob: -8.788558006286621

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0665830373764038
    2. '
' → logprob: -1.3165830373764038
    3. '    
' → logprob: -1.3165830373764038
    4. ' start' → logprob: -3.3165831565856934
    5. ' visited' → logprob: -3.4415831565856934
    6. 'visited' → logprob: -4.316583156585693
    7. 'start' → logprob: -4.441583156585693
    8. '
    
' → logprob: -4.441583156585693
    9. ' 
' → logprob: -5.691583156585693
    10. '#' → logprob: -5.691583156585693

Token 192: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.22373923659324646
    2. 'start' → logprob: -1.8487392663955688
    3. ' visited' → logprob: -4.223739147186279
    4. 'def' → logprob: -4.223739147186279
    5. '#' (adapté à ' #') → logprob: -4.973739147186279
    6. ' start' → logprob: -5.848739147186279
    7. '   ' → logprob: -6.098739147186279
    8. '    
' → logprob: -6.848739147186279
    9. ' #' → logprob: -7.973739147186279
    10. 'seen' → logprob: -8.973739624023438

Token 193: ' Check' (ID: 6208)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6237398386001587
    2. 'start' → logprob: -0.8737398386001587
    3. '#' → logprob: -3.373739719390869
    4. 'def' → logprob: -4.498739719390869
    5. ' visited' → logprob: -7.623739719390869
    6. 'seen' → logprob: -8.248740196228027
    7. ' start' → logprob: -8.248740196228027
    8. 'Start' → logprob: -8.998740196228027
    9. ' #' → logprob: -9.498740196228027
    10. 'queue' → logprob: -10.873740196228027

Token 194: ' connectivity' (ID: 45849)
  Prédit: ' connectivity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connectivity' → logprob: -0.502801239490509
    2. ' visited' → logprob: -1.8778011798858643
    3. 'visited' → logprob: -1.8778011798858643
    4. ' connected' → logprob: -2.7528011798858643
    5. 'connected' → logprob: -4.002801418304443
    6. ' for' → logprob: -6.127801418304443
    7. ' if' → logprob: -6.627801418304443
    8. 'def' → logprob: -7.002801418304443
    9. ' def' → logprob: -7.252801418304443
    10. 'connect' → logprob: -7.252801418304443

Token 195: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02275978960096836
    2. 'visited' → logprob: -4.522759914398193
    3. ' visited' → logprob: -5.022759914398193
    4. ' start' → logprob: -6.147759914398193
    5. 'start' → logprob: -6.397759914398193
    6. '    
' → logprob: -7.022759914398193
    7. 'def' → logprob: -9.522759437561035
    8. ' nodes' → logprob: -9.647759437561035
    9. 'nodes' → logprob: -9.647759437561035
    10. ' starting' → logprob: -9.897759437561035

Token 196: 'on' (ID: 263)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2845837473869324
    2. 'visited' → logprob: -1.9095838069915771
    3. ' start' → logprob: -2.909583806991577
    4. 'def' → logprob: -3.409583806991577
    5. '   ' → logprob: -4.784583568572998
    6. ' visited' → logprob: -6.034583568572998
    7. ' def' → logprob: -7.409583568572998
    8. 'queue' → logprob: -8.159584045410156
    9. '    
' → logprob: -9.534584045410156
    10. 'q' → logprob: -9.534584045410156

Token 197: ' nodes' (ID: 15749)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9905948638916016
    2. ' visited' → logprob: -1.3655948638916016
    3. ' nodes' → logprob: -1.7405948638916016
    4. ' graph' → logprob: -2.7405948638916016
    5. ' a' → logprob: -3.6155948638916016
    6. ' the' → logprob: -3.8655948638916016
    7. 'nodes' → logprob: -3.9905948638916016
    8. 'def' → logprob: -4.615594863891602
    9. 'graph' → logprob: -4.740594863891602
    10. 'deque' → logprob: -4.865594863891602

Token 198: ' that' (ID: 484)
  Prédit: '_with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.04466484114527702
    2. ' =' → logprob: -4.0446648597717285
    3. 'with' → logprob: -4.4196648597717285
    4. '=' → logprob: -5.4196648597717285
    5. ')' → logprob: -5.5446648597717285
    6. '_to' → logprob: -6.1696648597717285
    7. ' with' → logprob: -6.1696648597717285
    8. '=set' → logprob: -7.7946648597717285
    9. '   ' → logprob: -8.04466438293457
    10. '_' → logprob: -8.66966438293457

Token 199: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.2608794569969177
    2. 'have' → logprob: -1.5108795166015625
    3. '_have' → logprob: -4.8858795166015625
    4. ' can' → logprob: -8.135879516601562
    5. ' are' → logprob: -8.260879516601562
    6. ' has' → logprob: -8.510879516601562
    7. 'matter' → logprob: -9.510879516601562
    8. ' matter' → logprob: -9.635879516601562
    9. ' nodes' → logprob: -9.885879516601562
    10. ' ' → logprob: -9.885879516601562

Token 200: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.39718058705329895
    2. 'edges' → logprob: -1.1471805572509766
    3. 'degree' → logprob: -5.022180557250977
    4. ' degree' → logprob: -5.897180557250977
    5. ' at' → logprob: -7.522180557250977
    6. '   ' → logprob: -9.147180557250977
    7. '_edges' → logprob: -9.897180557250977
    8. ' degrees' → logprob: -9.897180557250977
    9. '```' → logprob: -10.522180557250977
    10. 'at' → logprob: -10.647180557250977

Token 201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0471755675971508
    2. ')
' → logprob: -3.172175645828247
    3. '):' → logprob: -5.922175407409668
    4. '):
' → logprob: -7.422175407409668
    5. '   ' → logprob: -8.047175407409668
    6. ' )' → logprob: -8.297175407409668
    7. ')

' → logprob: -9.672175407409668
    8. 'def' → logprob: -9.797175407409668
    9. ',' → logprob: -9.922175407409668
    10. ')
' → logprob: -9.922175407409668

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06902585923671722
    2. '    
' → logprob: -2.944025754928589
    3. '
' → logprob: -4.569025993347168
    4. ' start' → logprob: -6.319025993347168
    5. ' visited' → logprob: -7.694025993347168
    6. ' 
' → logprob: -8.069025993347168
    7. 'start' → logprob: -8.319025993347168
    8. 'visited' → logprob: -8.694025993347168
    9. '   
' → logprob: -9.069025993347168
    10. 'n' → logprob: -9.319025993347168

Token 203: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.7439678311347961
    2. '   ' → logprob: -1.1189677715301514
    3. 'visited' (adapté à ' visited') → logprob: -1.9939677715301514
    4. '    
' → logprob: -3.4939677715301514
    5. ' start' → logprob: -4.1189680099487305
    6. 'def' → logprob: -5.2439680099487305
    7. ' def' → logprob: -5.4939680099487305
    8. 'start' → logprob: -6.3689680099487305
    9. ' queue' → logprob: -6.6189680099487305
    10. ' nodes' → logprob: -7.3689680099487305

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011157349683344364
    2. '=' → logprob: -4.511157512664795
    3. '=set' → logprob: -9.136157035827637
    4. ' ' → logprob: -13.636157035827637
    5. ')' → logprob: -15.136157035827637
    6. ' ' → logprob: -15.636157035827637
    7. ' )' → logprob: -17.511157989501953
    8. ',' → logprob: -17.636157989501953
    9. ' =)' → logprob: -17.761157989501953
    10. ' ={' → logprob: -17.761157989501953

Token 205: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.014175384305417538
    2. ' set' → logprob: -4.2641754150390625
    3. '{' → logprob: -11.639175415039062
    4. '=set' → logprob: -13.764175415039062
    5. 'deque' → logprob: -13.889175415039062
    6. '	set' → logprob: -13.889175415039062
    7. ' {' → logprob: -16.764175415039062
    8. '   ' → logprob: -17.014175415039062
    9. '(set' → logprob: -17.514175415039062
    10. ' ' → logprob: -17.514175415039062

Token 206: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009216093458235264
    2. '()
' → logprob: -5.50921630859375
    3. '(nodes' → logprob: -5.75921630859375
    4. '(queue' → logprob: -6.50921630859375
    5. '(node' → logprob: -9.13421630859375
    6. '(stack' → logprob: -9.25921630859375
    7. '(' → logprob: -9.38421630859375
    8. '(graph' → logprob: -10.00921630859375
    9. 'deque' → logprob: -10.25921630859375
    10. '   ' → logprob: -11.13421630859375

Token 207: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.1784042119979858
    2. ' stack' → logprob: -1.1784042119979858
    3. '   ' → logprob: -1.3034042119979858
    4. ' queue' → logprob: -2.5534043312072754
    5. 'def' → logprob: -3.6784043312072754
    6. ' to' → logprob: -5.803404331207275
    7. '
' → logprob: -6.178404331207275
    8. 'stack' → logprob: -6.553404331207275
    9. '    
' → logprob: -6.928404331207275
    10. ' nodes' → logprob: -7.553404331207275

Token 208: ' def' (ID: 1056)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6091349720954895
    2. 'queue' → logprob: -1.8591349124908447
    3. 'def' (adapté à ' def') → logprob: -1.9841349124908447
    4. ' stack' → logprob: -2.2341349124908447
    5. '   ' → logprob: -3.6091349124908447
    6. ' queue' → logprob: -3.9841349124908447
    7. 'q' → logprob: -5.359135150909424
    8. 'deque' → logprob: -6.109135150909424
    9. ' def' → logprob: -6.484135150909424
    10. 'start' → logprob: -7.359135150909424

Token 209: ' bfs' (ID: 147571)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.42750170826911926
    2. ' bfs' → logprob: -1.4275016784667969
    3. ' dfs' → logprob: -2.427501678466797
    4. 'b' → logprob: -3.927501678466797
    5. 'deque' → logprob: -14.052501678466797
    6. 'def' → logprob: -14.052501678466797
    7. '_b' → logprob: -14.177501678466797
    8. 'visit' → logprob: -14.177501678466797
    9. 'B' → logprob: -14.802501678466797
    10. 'd' → logprob: -15.177501678466797

Token 210: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.28880810737609863
    2. '(node' → logprob: -1.7888081073760986
    3. '(' → logprob: -2.6638081073760986
    4. ' (' → logprob: -5.1638078689575195
    5. '(root' → logprob: -5.9138078689575195
    6. '(queue' → logprob: -6.1638078689575195
    7. '(graph' → logprob: -7.0388078689575195
    8. '(u' → logprob: -7.1638078689575195
    9. '(s' → logprob: -7.9138078689575195
    10. '(n' → logprob: -8.28880786895752

Token 211: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20334485173225403
    2. '):
' → logprob: -1.7033448219299316
    3. ')' → logprob: -6.828344821929932
    4. '(start' → logprob: -7.578344821929932
    5. '):
' → logprob: -8.70334529876709
    6. '):

' → logprob: -9.32834529876709
    7. ' ):' → logprob: -10.95334529876709
    8. '(node' → logprob: -10.95334529876709
    9. '   ' → logprob: -11.70334529876709
    10. ',' → logprob: -11.95334529876709

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4094751477241516
    2. '   ' → logprob: -1.4094750881195068
    3. '    
' → logprob: -3.659475088119507
    4. '    ' → logprob: -4.034475326538086
    5. ' 
' → logprob: -4.284475326538086
    6. ' for' → logprob: -4.284475326538086
    7. '
' → logprob: -4.659475326538086
    8. ' return' → logprob: -5.659475326538086
    9. '        
' → logprob: -6.159475326538086
    10. '  
' → logprob: -6.784475326538086

Token 213: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.028758328408002853
    2. 'queue' (adapté à ' queue') → logprob: -4.528758525848389
    3. '   ' → logprob: -4.778758525848389
    4. '       ' → logprob: -4.778758525848389
    5. ' deque' → logprob: -8.02875804901123
    6. '
' → logprob: -9.02875804901123
    7. '	queue' → logprob: -9.65375804901123
    8. 'deque' → logprob: -9.65375804901123
    9. ' q' → logprob: -9.77875804901123
    10. '    
' → logprob: -10.27875804901123

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14377696812152863
    2. ' =' → logprob: -2.0187768936157227
    3. '.append' → logprob: -7.018776893615723
    4. '=[]' → logprob: -9.393776893615723
    5. '   ' → logprob: -9.518776893615723
    6. ')' → logprob: -11.768776893615723
    7. ' ' → logprob: -12.143776893615723
    8. '=
' → logprob: -12.393776893615723
    9. '(queue' → logprob: -12.768776893615723
    10. '.pop' → logprob: -12.893776893615723

Token 215: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.12693104147911072
    2. ' deque' → logprob: -2.1269309520721436
    3. 'Deque' → logprob: -13.001931190490723
    4. 'de' → logprob: -14.251931190490723
    5. '   ' → logprob: -17.501930236816406
    6. '(de' → logprob: -19.376930236816406
    7. 'collections' → logprob: -19.376930236816406
    8. '	de' → logprob: -19.751930236816406
    9. ' ' → logprob: -20.626930236816406
    10. 'dq' → logprob: -21.626930236816406

Token 216: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -6.24179228907451e-05
    2. '[start' → logprob: -9.875061988830566
    3. '[' → logprob: -12.125061988830566
    4. '()
' → logprob: -13.000061988830566
    5. '()' → logprob: -13.750061988830566
    6. '([(' → logprob: -14.375061988830566
    7. '(start' → logprob: -14.750061988830566
    8. '[node' → logprob: -14.875061988830566
    9. '(' → logprob: -15.000061988830566
    10. '(queue' → logprob: -15.750061988830566

Token 217: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -5.860340752406046e-05
    2. ' start' → logprob: -9.7500581741333
    3. '[start' → logprob: -15.6250581741333
    4. '(start' → logprob: -16.250059127807617
    5. ')' → logprob: -19.375059127807617
    6. '   ' → logprob: -19.375059127807617
    7. ' ' → logprob: -20.375059127807617
    8. '	start' → logprob: -20.500059127807617
    9. '])' → logprob: -20.625059127807617
    10. '
' → logprob: -20.625059127807617

Token 218: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.25196754932403564
    2. '])
' → logprob: -1.5019675493240356
    3. '       ' → logprob: -11.501967430114746
    4. ' ])' → logprob: -11.751967430114746
    5. '])
' → logprob: -12.251967430114746
    6. ' ])
' → logprob: -12.501967430114746
    7. ')
' → logprob: -12.501967430114746
    8. '   ' → logprob: -12.626967430114746
    9. ')' → logprob: -13.126967430114746
    10. '])

' → logprob: -13.626967430114746

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023718591779470444
    2. ' while' → logprob: -4.648718357086182
    3. '
' → logprob: -4.898718357086182
    4. 'while' → logprob: -6.398718357086182
    5. '   ' → logprob: -6.773718357086182
    6. ' 
' → logprob: -6.898718357086182
    7. ' visited' → logprob: -7.523718357086182
    8. '<|end|>' → logprob: -7.648718357086182
    9. 'visited' → logprob: -8.14871883392334
    10. ')' → logprob: -8.14871883392334

Token 220: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.32254570722579956
    2. ' while' → logprob: -1.8225457668304443
    3. 'visited' (adapté à ' visited') → logprob: -2.3225457668304443
    4. ' visited' → logprob: -5.197545528411865
    5. '   ' → logprob: -5.322545528411865
    6. '
' → logprob: -5.572545528411865
    7. '       ' → logprob: -6.572545528411865
    8. '	while' → logprob: -8.197546005249023
    9. '    
' → logprob: -9.697546005249023
    10. ' 
' → logprob: -9.822546005249023

Token 221: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00900215096771717
    2. '.' → logprob: -4.759002208709717
    3. '.update' → logprob: -8.134001731872559
    4. ' .' → logprob: -9.884001731872559
    5. 'add' → logprob: -10.509001731872559
    6. ' add' → logprob: -12.634001731872559
    7. '.clear' → logprob: -12.884001731872559
    8. '.remove' → logprob: -13.759001731872559
    9. ' ' → logprob: -13.884001731872559
    10. '.append' → logprob: -13.884001731872559

Token 222: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0015267637791112065
    2. 'start' → logprob: -6.501526832580566
    3. '(' → logprob: -11.126526832580566
    4. '(queue' → logprob: -12.001526832580566
    5. ' start' → logprob: -13.126526832580566
    6. ' (' → logprob: -13.626526832580566
    7. '(end' → logprob: -16.00152587890625
    8. '[start' → logprob: -16.12652587890625
    9. '((' → logprob: -17.00152587890625
    10. ',start' → logprob: -17.50152587890625

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016059240326285362
    2. ')
' → logprob: -4.141059398651123
    3. '       ' → logprob: -11.266058921813965
    4. ' )' → logprob: -11.766058921813965
    5. '   ' → logprob: -13.266058921813965
    6. ')
' → logprob: -13.891058921813965
    7. ' )
' → logprob: -14.266058921813965
    8. '))' → logprob: -14.891058921813965
    9. ')

' → logprob: -15.391058921813965
    10. ')return' → logprob: -16.26605987548828

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4511754512786865
    2. '
' → logprob: -1.4511754512786865
    3. '   ' → logprob: -2.5761754512786865
    4. ' while' → logprob: -3.2011754512786865
    5. '	while' → logprob: -5.201175689697266
    6. '    
' → logprob: -6.576175689697266
    7. '<|end|>' → logprob: -6.951175689697266
    8. 'while' → logprob: -7.076175689697266
    9. '        
' → logprob: -7.076175689697266
    10. ' ' → logprob: -7.201175689697266

Token 225: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.20282243192195892
    2. ' while' → logprob: -1.7028224468231201
    3. '   ' → logprob: -6.702822208404541
    4. '
' → logprob: -8.9528226852417
    5. '	while' → logprob: -10.3278226852417
    6. '       ' → logprob: -11.0778226852417
    7. ' 
' → logprob: -14.2028226852417
    8. '    
' → logprob: -14.2028226852417
    9. ' ' → logprob: -14.3278226852417
    10. 'While' → logprob: -14.8278226852417

Token 226: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.4740942120552063
    2. 'queue' → logprob: -0.9740942120552063
    3. '	queue' → logprob: -11.59909439086914
    4. '(queue' → logprob: -11.84909439086914
    5. ' ' → logprob: -14.97409439086914
    6. '   ' → logprob: -15.72409439086914
    7. '.queue' → logprob: -15.97409439086914
    8. '
' → logprob: -16.84909439086914
    9. '  ' → logprob: -17.09909439086914
    10. 'len' → logprob: -17.59909439086914

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5258052945137024
    2. ':
' → logprob: -0.9008052945137024
    3. '.p' → logprob: -6.150805473327637
    4. '.pop' → logprob: -8.775805473327637
    5. '):
' → logprob: -8.900805473327637
    6. '):' → logprob: -9.150805473327637
    7. '   ' → logprob: -9.525805473327637
    8. '.append' → logprob: -10.900805473327637
    9. '.' → logprob: -11.525805473327637
    10. 'p' → logprob: -11.900805473327637

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21208354830741882
    2. ' node' → logprob: -1.7120835781097412
    3. ' current' → logprob: -5.462083339691162
    4. ' v' → logprob: -6.087083339691162
    5. 'node' → logprob: -6.087083339691162
    6. ' u' → logprob: -6.462083339691162
    7. ' x' → logprob: -9.96208381652832
    8. 'u' → logprob: -10.08708381652832
    9. 'current' → logprob: -10.46208381652832
    10. '	       ' → logprob: -10.71208381652832

Token 229: ' u' (ID: 337)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6106964349746704
    2. ' node' → logprob: -1.1106964349746704
    3. 'u' (adapté à ' u') → logprob: -2.610696315765381
    4. ' u' → logprob: -3.610696315765381
    5. ' current' → logprob: -4.360696315765381
    6. 'current' → logprob: -4.360696315765381
    7. '   ' → logprob: -7.110696315765381
    8. 'curr' → logprob: -7.735696315765381
    9. 'cur' → logprob: -8.235696792602539
    10. 'v' → logprob: -9.860696792602539

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34850266575813293
    2. '=' → logprob: -1.2235026359558105
    3. ')' → logprob: -10.098503112792969
    4. '   ' → logprob: -11.473503112792969
    5. ' ' → logprob: -12.848503112792969
    6. ')=' → logprob: -14.223503112792969
    7. '	' → logprob: -14.598503112792969
    8. '    ' → logprob: -15.098503112792969
    9. 'u' → logprob: -15.348503112792969
    10. '.append' → logprob: -15.723503112792969

Token 231: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.693147599697113
    2. ' queue' → logprob: -0.693147599697113
    3. '	queue' → logprob: -15.943147659301758
    4. '(queue' → logprob: -16.318147659301758
    5. 'deque' → logprob: -16.318147659301758
    6. 'que' → logprob: -17.318147659301758
    7. ' ' → logprob: -18.068147659301758
    8. '.queue' → logprob: -19.068147659301758
    9. '   ' → logprob: -19.443147659301758
    10. ' deque' → logprob: -19.818147659301758

Token 232: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.000505730917211622
    2. '.' → logprob: -7.8755059242248535
    3. '.pop' → logprob: -9.000505447387695
    4. ' .' → logprob: -13.500505447387695
    5. '   ' → logprob: -14.375505447387695
    6. '.dequeue' → logprob: -15.875505447387695
    7. 'p' → logprob: -16.375505447387695
    8. '.append' → logprob: -17.125505447387695
    9. ').' → logprob: -17.750505447387695
    10. '].' → logprob: -18.875505447387695

Token 233: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.023256193846464157
    2. 'op' → logprob: -3.773256301879883
    3. 'ople' → logprob: -11.898256301879883
    4. 'opl' → logprob: -13.148256301879883
    5. 'opup' → logprob: -14.523256301879883
    6. 'opt' → logprob: -15.023256301879883
    7. 'opf' → logprob: -15.148256301879883
    8. 'p' → logprob: -15.898256301879883
    9. '   ' → logprob: -15.898256301879883
    10. 'opy' → logprob: -16.023256301879883

Token 234: '()
' (ID: 1234)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004714684095233679
    2. ')' → logprob: -5.754714488983154
    3. '           ' → logprob: -6.629714488983154
    4. '       ' → logprob: -8.754714965820312
    5. '               ' → logprob: -11.254714965820312
    6. ' )
' → logprob: -11.254714965820312
    7. ')
' → logprob: -11.629714965820312
    8. 'for' → logprob: -11.879714965820312
    9. '
' → logprob: -12.629714965820312
    10. '   ' → logprob: -13.129714965820312

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001810960122384131
    2. ' for' → logprob: -6.3768110275268555
    3. 'for' → logprob: -9.751811027526855
    4. '       ' → logprob: -10.251811027526855
    5. '<|end|>' → logprob: -11.876811027526855
    6. '            
' → logprob: -13.126811027526855
    7. '<|end|>' → logprob: -13.251811027526855
    8. '               ' → logprob: -14.126811027526855
    9. '	       ' → logprob: -14.376811027526855
    10. '
' → logprob: -14.376811027526855

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04871227219700813
    2. ' for' → logprob: -3.2987122535705566
    3. '           ' → logprob: -4.548712253570557
    4. '   ' → logprob: -11.298712730407715
    5. '               ' → logprob: -12.048712730407715
    6. '
' → logprob: -12.048712730407715
    7. '            
' → logprob: -12.298712730407715
    8. '	for' → logprob: -13.048712730407715
    9. '       ' → logprob: -13.298712730407715
    10. ' ' → logprob: -14.923712730407715

Token 237: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007149264682084322
    2. ' v' → logprob: -5.0071492195129395
    3. 'w' → logprob: -7.7571492195129395
    4. ' w' → logprob: -12.257149696350098
    5. 'neighbor' → logprob: -13.882149696350098
    6. '	v' → logprob: -15.132149696350098
    7. 'vw' → logprob: -16.25714874267578
    8. '   ' → logprob: -16.50714874267578
    9. ' ' → logprob: -17.50714874267578
    10. ' neighbor' → logprob: -17.75714874267578

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04300422966480255
    2. 'in' → logprob: -3.168004274368286
    3. ' ' → logprob: -13.293004035949707
    4. '	in' → logprob: -13.668004035949707
    5. '   ' → logprob: -14.918004035949707
    6. 'graph' → logprob: -15.168004035949707
    7. '    ' → logprob: -15.293004035949707
    8. 'import' → logprob: -15.668004035949707
    9. '  ' → logprob: -15.668004035949707
    10. ')' → logprob: -15.793004035949707

Token 239: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.16026780009269714
    2. ' graph' → logprob: -1.9102678298950195
    3. '	graph' → logprob: -10.16026782989502
    4. '(graph' → logprob: -12.66026782989502
    5. '   ' → logprob: -14.16026782989502
    6. ' ' → logprob: -15.28526782989502
    7. 'raph' → logprob: -15.53526782989502
    8. '_graph' → logprob: -15.53526782989502
    9. 'Graph' → logprob: -15.91026782989502
    10. 'graphql' → logprob: -16.535266876220703

Token 240: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.60414821645827e-06
    2. 'u' → logprob: -12.500004768371582
    3. '[' → logprob: -15.000004768371582
    4. ' [' → logprob: -15.500004768371582
    5. '[v' → logprob: -15.750004768371582
    6. '   ' → logprob: -16.375003814697266
    7. ' ' → logprob: -17.000003814697266
    8. ' u' → logprob: -17.375003814697266
    9. '][' → logprob: -17.500003814697266
    10. '	u' → logprob: -17.500003814697266

Token 241: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.527188777923584
    2. ']:
' → logprob: -1.152188777923584
    3. ']:' → logprob: -2.902188777923584
    4. '):' → logprob: -3.402188777923584
    5. ':' → logprob: -6.902188777923584
    6. ':
' → logprob: -6.902188777923584
    7. '       ' → logprob: -7.027188777923584
    8. ']' → logprob: -7.152188777923584
    9. '           ' → logprob: -7.152188777923584
    10. ']):
' → logprob: -7.902188777923584

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014335629530251026
    2. ' if' → logprob: -6.626433372497559
    3. 'if' → logprob: -10.001433372497559
    4. ':
' → logprob: -10.376433372497559
    5. '           ' → logprob: -12.001433372497559
    6. '                
' → logprob: -12.251433372497559
    7. '	           ' → logprob: -12.376433372497559
    8. ':' → logprob: -12.876433372497559
    9. '                ' → logprob: -13.001433372497559
    10. '):
' → logprob: -13.001433372497559

Token 243: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.039549797773361206
    2. '                   ' → logprob: -3.7895498275756836
    3. '                ' → logprob: -4.789549827575684
    4. '               ' → logprob: -5.039549827575684
    5. 'if' (adapté à ' if') → logprob: -7.164549827575684
    6. '                    ' → logprob: -8.289549827575684
    7. ' ' → logprob: -8.664549827575684
    8. ' 
' → logprob: -9.789549827575684
    9. '    ' → logprob: -10.414549827575684
    10. '                    
' → logprob: -10.539549827575684

Token 244: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.34845736622810364
    2. ' v' → logprob: -1.2234573364257812
    3. '	v' → logprob: -12.473457336425781
    4. '   ' → logprob: -12.473457336425781
    5. 'not' → logprob: -13.598457336425781
    6. ' ' → logprob: -13.723457336425781
    7. '(v' → logprob: -14.598457336425781
    8. ' ' → logprob: -14.848457336425781
    9. '    ' → logprob: -15.035957336425781
    10. ')v' → logprob: -15.285957336425781

Token 245: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1602441370487213
    2. 'not' → logprob: -1.910244107246399
    3. ')' → logprob: -11.03524398803711
    4. '	not' → logprob: -13.53524398803711
    5. '<|end|>' → logprob: -14.28524398803711
    6. '[' → logprob: -14.66024398803711
    7. ']' → logprob: -14.66024398803711
    8. '```' → logprob: -15.53524398803711
    9. ':not' → logprob: -16.16024398803711
    10. '_not' → logprob: -16.28524398803711

Token 246: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07922331988811493
    2. 'in' → logprob: -2.579223394393921
    3. 'visited' → logprob: -8.2042236328125
    4. '   ' → logprob: -10.3292236328125
    5. ' visited' → logprob: -10.9542236328125
    6. ')' → logprob: -13.0792236328125
    7. ' ' → logprob: -13.4542236328125
    8. '           ' → logprob: -13.9542236328125
    9. '<|end|>' → logprob: -13.9542236328125
    10. '  ' → logprob: -14.0792236328125

Token 247: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00017982252757064998
    2. ' visited' → logprob: -8.6251802444458
    3. '
' → logprob: -16.875179290771484
    4. '   ' → logprob: -17.750179290771484
    5. '```' → logprob: -18.750179290771484
    6. 'Visited' → logprob: -19.125179290771484
    7. 'visible' → logprob: -19.250179290771484
    8. ' ' → logprob: -19.625179290771484
    9. 'visit' → logprob: -19.750179290771484
    10. 'seen' → logprob: -19.875179290771484

Token 248: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35596200823783875
    2. '                   ' → logprob: -1.3559620380401611
    3. '):
' → logprob: -3.980962038040161
    4. ':' → logprob: -4.230961799621582
    5. '                       ' → logprob: -5.855961799621582
    6. '               ' → logprob: -5.855961799621582
    7. ' and' → logprob: -6.355961799621582
    8. '           ' → logprob: -7.855961799621582
    9. '():
' → logprob: -8.730961799621582
    10. '                           ' → logprob: -8.855961799621582

Token 249: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005633997498080134
    2. '               ' → logprob: -8.500563621520996
    3. '                       ' → logprob: -8.625563621520996
    4. ':
' → logprob: -9.875563621520996
    5. 'visited' → logprob: -10.250563621520996
    6. '           ' → logprob: -10.500563621520996
    7. '                  ' → logprob: -11.125563621520996
    8. ' visited' → logprob: -11.500563621520996
    9. '                    
' → logprob: -12.125563621520996
    10. '                ' → logprob: -12.375563621520996

Token 250: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.5914761424064636
    2. 'visited' (adapté à ' visited') → logprob: -1.3414762020111084
    3. '                   ' → logprob: -2.2164762020111084
    4. '                       ' → logprob: -2.5914762020111084
    5. '                    ' → logprob: -7.841475963592529
    6. '                           ' → logprob: -8.716476440429688
    7. '                     ' → logprob: -8.841476440429688
    8. '               ' → logprob: -9.341476440429688
    9. '           ' → logprob: -9.466476440429688
    10. '   ' → logprob: -9.716476440429688

Token 251: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.248469718324486e-05
    2. '.' → logprob: -10.750022888183594
    3. ' .' → logprob: -14.625022888183594
    4. 'add' → logprob: -15.000022888183594
    5. '.Add' → logprob: -15.750022888183594
    6. ' add' → logprob: -17.000022888183594
    7. '.append' → logprob: -17.250022888183594
    8. '                   ' → logprob: -18.625022888183594
    9. '                       ' → logprob: -19.375022888183594
    10. ')add' → logprob: -19.500022888183594

Token 252: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.431207682704553e-05
    2. '(' → logprob: -9.875054359436035
    3. ' (' → logprob: -13.625054359436035
    4. '(
' → logprob: -14.000054359436035
    5. ' v' → logprob: -14.750054359436035
    6. 'v' → logprob: -15.875054359436035
    7. ')' → logprob: -16.25005340576172
    8. '<|end|>' → logprob: -16.62505340576172
    9. '	v' → logprob: -18.00005340576172
    10. ')v' → logprob: -18.12505340576172

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003546502848621458
    2. ')
' → logprob: -8.000354766845703
    3. '                   ' → logprob: -11.625354766845703
    4. ')v' → logprob: -11.875354766845703
    5. ' )' → logprob: -13.750354766845703
    6. '<|end|>' → logprob: -14.000354766845703
    7. ')return' → logprob: -15.625354766845703
    8. 'v' → logprob: -15.875354766845703
    9. ')
' → logprob: -16.000354766845703
    10. '                       ' → logprob: -16.000354766845703

Token 254: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00022249009634833783
    2. '				' → logprob: -10.000222206115723
    3. '               ' → logprob: -10.500222206115723
    4. 'queue' → logprob: -10.625222206115723
    5. '                    ' → logprob: -10.875222206115723
    6. ' queue' → logprob: -11.250222206115723
    7. '                       ' → logprob: -11.375222206115723
    8. '           ' → logprob: -11.375222206115723
    9. '                  ' → logprob: -11.375222206115723
    10. 'v' → logprob: -11.750222206115723

Token 255: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.011047814972698689
    2. ' queue' → logprob: -4.511047840118408
    3. '	queue' → logprob: -17.38604736328125
    4. '                   ' → logprob: -18.26104736328125
    5. '(queue' → logprob: -18.38604736328125
    6. '   ' → logprob: -18.76104736328125
    7. '               ' → logprob: -19.26104736328125
    8. ' ' → logprob: -19.26104736328125
    9. '.queue' → logprob: -19.76104736328125
    10. '```' → logprob: -20.51104736328125

Token 256: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.372294698550832e-06
    2. 'append' → logprob: -12.375009536743164
    3. '.' → logprob: -12.750009536743164
    4. '.enqueue' → logprob: -13.625009536743164
    5. '.extend' → logprob: -14.500009536743164
    6. ' .' → logprob: -15.875009536743164
    7. '.push' → logprob: -16.000009536743164
    8. '.put' → logprob: -16.875009536743164
    9. '.add' → logprob: -17.250009536743164
    10. ' append' → logprob: -17.375009536743164

Token 257: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0002036595979006961
    2. '(' → logprob: -8.500204086303711
    3. '(
' → logprob: -16.37520408630371
    4. '((' → logprob: -18.00020408630371
    5. '(V' → logprob: -18.37520408630371
    6. ')' → logprob: -18.50020408630371
    7. ' (' → logprob: -18.87520408630371
    8. 'v' → logprob: -19.00020408630371
    9. '(

' → logprob: -19.87520408630371
    10. '()' → logprob: -20.50020408630371

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7848862373502925e-05
    2. ')
' → logprob: -10.625027656555176
    3. ' )' → logprob: -13.000027656555176
    4. '))' → logprob: -14.625027656555176
    5. ')v' → logprob: -15.250027656555176
    6. '<|end|>' → logprob: -16.125028610229492
    7. '               ' → logprob: -16.250028610229492
    8. '       ' → logprob: -16.375028610229492
    9. '                   ' → logprob: -16.875028610229492
    10. ')return' → logprob: -17.250028610229492

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011361154727637768
    2. ')' → logprob: -5.636361122131348
    3. 'b' → logprob: -5.761361122131348
    4. '    
' → logprob: -7.136361122131348
    5. ' return' → logprob: -7.261361122131348
    6. '
' → logprob: -7.261361122131348
    7. '<|end|>' → logprob: -7.261361122131348
    8. '       ' → logprob: -7.386361122131348
    9. 'return' → logprob: -7.886361122131348
    10. 'def' → logprob: -9.011361122131348

Token 260: ' bfs' (ID: 147571)
  Prédit: ' bfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.11508353054523468
    2. 'b' → logprob: -2.7400834560394287
    3. '
' → logprob: -4.240083694458008
    4. '   ' → logprob: -4.865083694458008
    5. ' 
' → logprob: -4.990083694458008
    6. ' nodes' → logprob: -4.990083694458008
    7. '    
' → logprob: -5.990083694458008
    8. ' start' → logprob: -6.615083694458008
    9. 'nodes' → logprob: -6.865083694458008
    10. '  
' → logprob: -7.490083694458008

Token 261: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.0005792465526610613
    2. '(dom' → logprob: -7.500579357147217
    3. '(' → logprob: -11.375578880310059
    4. ' (' → logprob: -11.750578880310059
    5. '(node' → logprob: -12.250578880310059
    6. ' nodes' → logprob: -14.250578880310059
    7. 'nodes' → logprob: -14.625578880310059
    8. '(n' → logprob: -15.000578880310059
    9. '(next' → logprob: -15.500578880310059
    10. '(numbers' → logprob: -16.625579833984375

Token 262: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.00033713103039190173
    2. 'with' → logprob: -8.000337600708008
    3. '[' → logprob: -15.250337600708008
    4. 'With' → logprob: -15.500337600708008
    5. '   ' → logprob: -15.750337600708008
    6. ' with' → logprob: -15.750337600708008
    7. '_' → logprob: -15.875337600708008
    8. '_WITH' → logprob: -15.875337600708008
    9. '_for' → logprob: -15.875337600708008
    10. '_to' → logprob: -15.875337600708008

Token 263: '_edges' (ID: 68870)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6328423023223877
    2. '_edges' → logprob: -0.7578423023223877
    3. ' edges' → logprob: -8.632842063903809
    4. 'dom' → logprob: -11.257842063903809
    5. 'graph' → logprob: -11.382842063903809
    6. 'Edges' → logprob: -11.507842063903809
    7. '```' → logprob: -12.007842063903809
    8. '   ' → logprob: -12.007842063903809
    9. '.edges' → logprob: -12.132842063903809
    10. '(edges' → logprob: -12.382842063903809

Token 264: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7835754988482222e-05
    2. '0' → logprob: -11.000018119812012
    3. ' [' → logprob: -14.625018119812012
    4. '[-' → logprob: -14.625018119812012
    5. '[
' → logprob: -16.750017166137695
    6. '   ' → logprob: -17.250017166137695
    7. '```' → logprob: -17.500017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '
' → logprob: -17.750017166137695
    10. '][' → logprob: -18.625017166137695

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.27099974633893e-05
    2. '-' → logprob: -11.875012397766113
    3. ' ' → logprob: -12.500012397766113
    4. '   ' → logprob: -13.875012397766113
    5. '
' → logprob: -15.125012397766113
    6. '[' → logprob: -15.750012397766113
    7. '```' → logprob: -16.25001335144043
    8. '1' → logprob: -16.62501335144043
    9. '])' → logprob: -16.75001335144043
    10. '  ' → logprob: -16.75001335144043

Token 266: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008422649116255343
    2. '])' → logprob: -7.125842094421387
    3. ' )' → logprob: -10.625842094421387
    4. ')
' → logprob: -12.250842094421387
    5. '))' → logprob: -12.750842094421387
    6. ')]' → logprob: -12.875842094421387
    7. ')])' → logprob: -13.375842094421387
    8. ']' → logprob: -13.625842094421387
    9. '）' → logprob: -15.875842094421387
    10. '   ' → logprob: -16.500843048095703

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14097240567207336
    2. '    
' → logprob: -2.390972375869751
    3. '
' → logprob: -3.265972375869751
    4. '<|end|>' → logprob: -6.64097261428833
    5. '  
' → logprob: -9.265972137451172
    6. ' 
' → logprob: -9.515972137451172
    7. '        
' → logprob: -9.515972137451172
    8. '   
' → logprob: -9.640972137451172
    9. ' if' → logprob: -10.390972137451172
    10. '    
    
' → logprob: -10.515972137451172

Token 268: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40831106901168823
    2. '    
' → logprob: -1.408311128616333
    3. '
' → logprob: -2.658311128616333
    4. ' odd' → logprob: -4.533310890197754
    5. 'odd' → logprob: -4.908310890197754
    6. '  
' → logprob: -7.283310890197754
    7. '   
' → logprob: -7.533310890197754
    8. ' if' → logprob: -7.533310890197754
    9. ' nodes' → logprob: -8.533310890197754
    10. '#' → logprob: -8.908310890197754

Token 269: ' any' (ID: 1062)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.954897403717041
    2. 'len' → logprob: -1.204897403717041
    3. ' not' → logprob: -1.704897403717041
    4. ' len' → logprob: -2.829897403717041
    5. 'visited' → logprob: -2.829897403717041
    6. 'any' → logprob: -5.204897403717041
    7. ' any' → logprob: -5.454897403717041
    8. ' visited' → logprob: -6.204897403717041
    9. 'set' → logprob: -6.579897403717041
    10. '   ' → logprob: -6.954897403717041

Token 270: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0020342764910310507
    2. '(n' → logprob: -6.3770341873168945
    3. 'node' → logprob: -8.877034187316895
    4. '(v' → logprob: -9.252034187316895
    5. '(' → logprob: -9.877034187316895
    6. ' node' → logprob: -10.377034187316895
    7. ' (' → logprob: -11.377034187316895
    8. '   ' → logprob: -13.877034187316895
    9. '[node' → logprob: -14.752034187316895
    10. '((' → logprob: -15.002034187316895

Token 271: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.005234121344983578
    2. 'not' → logprob: -5.255234241485596
    3. ' for' → logprob: -16.005233764648438
    4. '	not' → logprob: -16.255233764648438
    5. '   ' → logprob: -17.005233764648438
    6. ' ' → logprob: -17.630233764648438
    7. ')' → logprob: -18.255233764648438
    8. 'for' → logprob: -19.005233764648438
    9. '```' → logprob: -19.755233764648438
    10. ':not' → logprob: -19.880233764648438

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021507740020752
    2. 'in' → logprob: -2.350214958190918
    3. 'visited' → logprob: -11.975214958190918
    4. '   ' → logprob: -14.225214958190918
    5. ' visited' → logprob: -14.475214958190918
    6. 'for' → logprob: -14.975214958190918
    7. ' ' → logprob: -15.725214958190918
    8. '	in' → logprob: -16.350215911865234
    9. '    ' → logprob: -16.475215911865234
    10. 'In' → logprob: -16.850215911865234

Token 273: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.023246178403496742
    2. ' visited' → logprob: -3.7732462882995605
    3. '   ' → logprob: -15.148245811462402
    4. '
' → logprob: -15.773245811462402
    5. ' ' → logprob: -16.27324676513672
    6. 'visible' → logprob: -16.77324676513672
    7. 'Visited' → logprob: -17.27324676513672
    8. '```' → logprob: -17.27324676513672
    9. '    ' → logprob: -18.14824676513672
    10. 'seen' → logprob: -18.27324676513672

Token 274: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0018073876854032278
    2. ')' → logprob: -7.00180721282959
    3. 'for' → logprob: -7.25180721282959
    4. '    ' → logprob: -9.75180721282959
    5. '   ' → logprob: -9.87680721282959
    6. ' )' → logprob: -9.87680721282959
    7. ' ' → logprob: -11.62680721282959
    8. '        ' → logprob: -12.75180721282959
    9. '       ' → logprob: -12.87680721282959
    10. '  ' → logprob: -13.25180721282959

Token 275: ' node' (ID: 4596)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.5226507782936096
    2. ' nodes' → logprob: -1.0226507186889648
    3. 'node' → logprob: -3.397650718688965
    4. ' node' → logprob: -4.272650718688965
    5. '	nodes' → logprob: -11.647650718688965
    6. ' ' → logprob: -13.147650718688965
    7. '   ' → logprob: -13.272650718688965
    8. '(nodes' → logprob: -13.397650718688965
    9. '_nodes' → logprob: -14.272650718688965
    10. '.nodes' → logprob: -14.772650718688965

Token 276: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033043816220015287
    2. 'in' → logprob: -6.003304481506348
    3. ' nodes' → logprob: -7.878304481506348
    4. 'nodes' → logprob: -8.003304481506348
    5. ' ' → logprob: -10.378304481506348
    6. ' node' → logprob: -10.628304481506348
    7. '_nodes' → logprob: -10.628304481506348
    8. 'node' → logprob: -10.628304481506348
    9. '(nodes' → logprob: -12.378304481506348
    10. '<|end|>' → logprob: -13.378304481506348

Token 277: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.008629352785646915
    2. ' nodes' → logprob: -4.758629322052002
    3. 'degree' → logprob: -12.00862979888916
    4. '	nodes' → logprob: -12.38362979888916
    5. '(nodes' → logprob: -13.25862979888916
    6. '   ' → logprob: -14.00862979888916
    7. '.nodes' → logprob: -14.50862979888916
    8. 'node' → logprob: -14.75862979888916
    9. '
' → logprob: -15.13362979888916
    10. ' ' → logprob: -15.75862979888916

Token 278: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.4378848391061183e-05
    2. 'with' → logprob: -12.500014305114746
    3. '_nodes' → logprob: -12.625014305114746
    4. ')' → logprob: -13.000014305114746
    5. '_WITH' → logprob: -14.250014305114746
    6. 's' → logprob: -14.375014305114746
    7. '_for' → logprob: -14.375014305114746
    8. '   ' → logprob: -14.625014305114746
    9. '_of' → logprob: -14.875014305114746
    10. 'es' → logprob: -14.875014305114746

Token 279: '_edges' (ID: 68870)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.18192382156848907
    2. '_edges' → logprob: -2.0569238662719727
    3. 'degree' → logprob: -3.5569238662719727
    4. 'nodes' → logprob: -5.556923866271973
    5. 'egree' → logprob: -6.181923866271973
    6. '_nodes' → logprob: -6.681923866271973
    7. 'edge' → logprob: -7.806923866271973
    8. 'ges' → logprob: -7.806923866271973
    9. ' edges' → logprob: -8.181923866271973
    10. 'odes' → logprob: -8.306923866271973

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.204220712184906
    2. '):
' → logprob: -1.7042207717895508
    3. ')' → logprob: -5.954220771789551
    4. '   ' → logprob: -8.70422077178955
    5. ' ):' → logprob: -11.07922077178955
    6. ' ):
' → logprob: -11.70422077178955
    7. '):
' → logprob: -11.82922077178955
    8. '       ' → logprob: -12.57922077178955
    9. ':' → logprob: -12.95422077178955
    10. ')**' → logprob: -13.20422077178955

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012511172099038959
    2. ':' → logprob: -9.25012493133545
    3. ':
' → logprob: -11.00012493133545
    4. ' return' → logprob: -12.12512493133545
    5. ':return' → logprob: -13.25012493133545
    6. '
' → logprob: -13.37512493133545
    7. '   ' → logprob: -13.75012493133545
    8. 'return' → logprob: -14.75012493133545
    9. '):
' → logprob: -14.75012493133545
    10. '           ' → logprob: -14.87512493133545

Token 282: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006122775375843048
    2. ' return' → logprob: -5.256122589111328
    3. 'return' (adapté à ' return') → logprob: -7.256122589111328
    4. '   ' → logprob: -8.881122589111328
    5. '
' → logprob: -10.131122589111328
    6. '           ' → logprob: -13.256122589111328
    7. ' ' → logprob: -14.006122589111328
    8. '	return' → logprob: -14.131122589111328
    9. '```' → logprob: -15.756122589111328
    10. '    ' → logprob: -15.881122589111328

Token 283: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.676292231422849e-05
    2. ' False' → logprob: -11.000017166137695
    3. 'false' → logprob: -21.250017166137695
    4. 'True' → logprob: -23.375017166137695
    5. '(False' → logprob: -24.000017166137695
    6. '_false' → logprob: -25.875017166137695
    7. '=False' → logprob: -26.000017166137695
    8. 'None' → logprob: -27.625017166137695
    9. '```' → logprob: -27.875017166137695
    10. '   ' → logprob: -28.375017166137695

Token 284: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3435960114002228
    2. '    
' → logprob: -1.5935959815979004
    3. '
' → logprob: -2.4685959815979004
    4. 'odd' → logprob: -7.2185959815979
    5. '
    
' → logprob: -7.5935959815979
    6. '        
' → logprob: -7.7185959815979
    7. '#' → logprob: -8.093596458435059
    8. '   
' → logprob: -8.593596458435059
    9. '    
    
' → logprob: -8.718596458435059
    10. ' odd' → logprob: -8.968596458435059

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14629428088665009
    2. 'odd' → logprob: -2.146294355392456
    3. ' odd' → logprob: -4.146294116973877
    4. '    
' → logprob: -5.771294116973877
    5. '
' → logprob: -9.146294593811035
    6. 'od' → logprob: -10.146294593811035
    7. '#' → logprob: -10.771294593811035
    8. 'count' → logprob: -11.021294593811035
    9. '        
' → logprob: -11.646294593811035
    10. '```' → logprob: -11.896294593811035

Token 286: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.002859558677300811
    2. ' odd' → logprob: -6.252859592437744
    3. '   ' → logprob: -7.002859592437744
    4. 'od' → logprob: -11.002859115600586
    5. '#' → logprob: -12.752859115600586
    6. '    
' → logprob: -14.627859115600586
    7. 'if' → logprob: -14.752859115600586
    8. 'count' → logprob: -15.002859115600586
    9. 'return' → logprob: -15.502859115600586
    10. 'num' → logprob: -16.877859115600586

Token 287: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.11247678101062775
    2. '_nodes' → logprob: -2.3624768257141113
    3. '_de' → logprob: -4.612476825714111
    4. '_deg' → logprob: -6.237476825714111
    5. '_count' → logprob: -8.487476348876953
    6. '_vertices' → logprob: -10.237476348876953
    7. 'degree' → logprob: -10.737476348876953
    8. '_counts' → logprob: -10.737476348876953
    9. ' =' → logprob: -11.737476348876953
    10. 'deg' → logprob: -11.862476348876953

Token 288: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.06364908069372177
    2. '=' → logprob: -2.8136491775512695
    3. ' =' → logprob: -6.5636491775512695
    4. '_count' → logprob: -8.56364917755127
    5. 's' → logprob: -9.81364917755127
    6. 'nodes' → logprob: -11.06364917755127
    7. '_vertices' → logprob: -13.18864917755127
    8. '=_' → logprob: -13.56364917755127
    9. 'Nodes' → logprob: -13.56364917755127
    10. '_counts' → logprob: -13.68864917755127

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740934371948242
    2. '=' → logprob: -0.9740934371948242
    3. '=[' → logprob: -11.849093437194824
    4. ')' → logprob: -12.224093437194824
    5. ' =[' → logprob: -13.349093437194824
    6. '=sum' → logprob: -14.474093437194824
    7. '=len' → logprob: -14.724093437194824
    8. '=list' → logprob: -14.849093437194824
    9. '=[]' → logprob: -14.849093437194824
    10. ' ' → logprob: -15.224093437194824

Token 290: ' [' (ID: 723)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.2511177957057953
    2. '[node' → logprob: -2.251117706298828
    3. ' [' → logprob: -2.501117706298828
    4. '[' → logprob: -4.251117706298828
    5. '[n' → logprob: -4.751117706298828
    6. '[num' → logprob: -5.876117706298828
    7. '[name' → logprob: -6.001117706298828
    8. '[i' → logprob: -6.626117706298828
    9. '[k' → logprob: -6.626117706298828
    10. '[length' → logprob: -6.876117706298828

Token 291: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.6240566083070007e-06
    2. ' node' → logprob: -13.500001907348633
    3. 'n' → logprob: -16.125001907348633
    4. 'v' → logprob: -20.875001907348633
    5. 'u' → logprob: -20.875001907348633
    6. '(node' → logprob: -20.875001907348633
    7. 'k' → logprob: -21.000001907348633
    8. '[node' → logprob: -21.125001907348633
    9. '	node' → logprob: -21.250001907348633
    10. 'x' → logprob: -21.750001907348633

Token 292: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12692894041538239
    2. ' for' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.37692928314209
    4. '   ' → logprob: -15.25192928314209
    5. '
' → logprob: -16.626928329467773
    6. '```' → logprob: -18.251928329467773
    7. '	for' → logprob: -18.376928329467773
    8. ' 
' → logprob: -18.501928329467773
    9. 'd' → logprob: -18.626928329467773
    10. '[' → logprob: -19.251928329467773

Token 293: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.01693866215646267
    2. ' node' → logprob: -4.14193868637085
    3. 'degree' → logprob: -7.01693868637085
    4. ' degree' → logprob: -11.891938209533691
    5. '(node' → logprob: -15.766938209533691
    6. '	node' → logprob: -16.391939163208008
    7. ',node' → logprob: -16.516939163208008
    8. '[node' → logprob: -16.641939163208008
    9. 'nodes' → logprob: -17.391939163208008
    10. 'range' → logprob: -17.391939163208008

Token 294: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3875766098499298
    2. ' in' → logprob: -1.1375765800476074
    3. ',' → logprob: -7.262576580047607
    4. ',node' → logprob: -13.762577056884766
    5. ' ' → logprob: -14.387577056884766
    6. ',in' → logprob: -14.762577056884766
    7. ' ,' → logprob: -14.887577056884766
    8. '   ' → logprob: -15.512577056884766
    9. ',count' → logprob: -15.762577056884766
    10. 'n' → logprob: -16.012577056884766

Token 295: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.0005299181793816388
    2. ' degree' → logprob: -7.750529766082764
    3. 'nodes' → logprob: -9.250530242919922
    4. 'node' → logprob: -12.875530242919922
    5. 'odd' → logprob: -15.250530242919922
    6. ' nodes' → logprob: -15.750530242919922
    7. 'degrees' → logprob: -16.500530242919922
    8. '.degree' → logprob: -17.625530242919922
    9. '-degree' → logprob: -17.875530242919922
    10. 'range' → logprob: -18.125530242919922

Token 296: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5759401917457581
    2. 'if' → logprob: -0.8259401917457581
    3. ' ' → logprob: -14.575940132141113
    4. '   ' → logprob: -14.950940132141113
    5. '           ' → logprob: -19.57594108581543
    6. '	if' → logprob: -19.70094108581543
    7. '       ' → logprob: -20.07594108581543
    8. '  ' → logprob: -20.07594108581543
    9. 'If' → logprob: -20.07594108581543
    10. '     ' → logprob: -20.20094108581543

Token 297: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.1269380897283554
    2. ' degree' → logprob: -2.1269381046295166
    3. '   ' → logprob: -12.376937866210938
    4. ' ' → logprob: -12.626937866210938
    5. ' (' → logprob: -13.876937866210938
    6. '(' → logprob: -14.001937866210938
    7. '(de' → logprob: -15.376937866210938
    8. '    ' → logprob: -15.376937866210938
    9. '  ' → logprob: -16.501937866210938
    10. '     ' → logprob: -16.751937866210938

Token 298: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -5.512236498361744e-07
    2. 'node' → logprob: -14.750000953674316
    3. '(node' → logprob: -16.5
    4. '```' → logprob: -18.75
    5. '[' → logprob: -19.375
    6. '[
' → logprob: -20.75
    7. '%' → logprob: -20.75
    8. '
' → logprob: -21.125
    9. ' [' → logprob: -21.25
    10. '[token' → logprob: -21.25

Token 299: ']' (ID: 60)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.014195004478096962
    2. ' %' → logprob: -4.264194965362549
    3. '()' → logprob: -11.389195442199707
    4. ']' → logprob: -11.389195442199707
    5. '()%' → logprob: -12.389195442199707
    6. ')' → logprob: -12.889195442199707
    7. ']%' → logprob: -14.514195442199707
    8. '   ' → logprob: -14.514195442199707
    9. '[' → logprob: -14.764195442199707
    10. ' ' → logprob: -15.389195442199707

Token 300: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04858816787600517
    2. ' %' → logprob: -3.048588275909424
    3. ' ' → logprob: -15.048587799072266
    4. '```' → logprob: -16.048587799072266
    5. ' ' → logprob: -16.673587799072266
    6. '()' → logprob: -16.798587799072266
    7. '   ' → logprob: -17.048587799072266
    8. '{' → logprob: -17.298587799072266
    9. '()%' → logprob: -17.298587799072266
    10. ')' → logprob: -17.298587799072266

Token 301: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004082078114151955
    2. ' ' → logprob: -5.504082202911377
    3. '   ' → logprob: -13.254081726074219
    4. '```' → logprob: -13.754081726074219
    5. '  ' → logprob: -14.504081726074219
    6. '{' → logprob: -16.37908172607422
    7. '     ' → logprob: -17.06658172607422
    8. '    ' → logprob: -17.56658172607422
    9. '۲' → logprob: -18.44158172607422
    10. '[' → logprob: -18.50408172607422

Token 302: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.250005722045898
    3. '```' → logprob: -14.500005722045898
    4. '   ' → logprob: -16.6250057220459
    5. '{' → logprob: -17.1250057220459
    6. '  ' → logprob: -19.2500057220459
    7. '==' → logprob: -19.5000057220459
    8. '۲' → logprob: -19.6250057220459
    9. '1' → logprob: -20.3750057220459
    10. '[' → logprob: -20.5000057220459

Token 303: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.09040656685829163
    2. ' !=' → logprob: -2.840406656265259
    3. '==' → logprob: -3.590406656265259
    4. '1' → logprob: -8.21540641784668
    5. ' ==' → logprob: -8.84040641784668
    6. '2' → logprob: -10.84040641784668
    7. '```' → logprob: -12.34040641784668
    8. '()!=' → logprob: -12.59040641784668
    9. ']!=' → logprob: -12.96540641784668
    10. ' ' → logprob: -13.21540641784668

Token 304: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026389146223664284
    2. ' ' → logprob: -6.252638816833496
    3. '1' → logprob: -7.252638816833496
    4. '0' → logprob: -13.752638816833496
    5. '```' → logprob: -14.752638816833496
    6. '   ' → logprob: -16.252639770507812
    7. '
' → logprob: -17.002639770507812
    8. '5' → logprob: -17.127639770507812
    9. '{' → logprob: -17.252639770507812
    10. '  ' → logprob: -17.377639770507812

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029827317222952843
    2. '2' → logprob: -3.529827356338501
    3. ' ' → logprob: -10.029827117919922
    4. '0' → logprob: -10.529827117919922
    5. '```' → logprob: -13.404827117919922
    6. '11' → logprob: -14.029827117919922
    7. '21' → logprob: -14.154827117919922
    8. '3' → logprob: -14.529827117919922
    9. '10' → logprob: -14.592327117919922
    10. '5' → logprob: -14.592327117919922

Token 306: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010592726175673306
    2. ' ]' → logprob: -9.375105857849121
    3. ']
' → logprob: -10.875105857849121
    4. '   ' → logprob: -13.625105857849121
    5. ']

' → logprob: -14.750105857849121
    6. ')' → logprob: -15.625105857849121
    7. ')]' → logprob: -15.750105857849121
    8. '       ' → logprob: -16.125106811523438
    9. '()]' → logprob: -16.750106811523438
    10. ']==' → logprob: -17.500106811523438

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001544321421533823
    2. '    
' → logprob: -9.250154495239258
    3. '
' → logprob: -10.750154495239258
    4. ' return' → logprob: -11.500154495239258
    5. 'return' → logprob: -12.000154495239258
    6. ' if' → logprob: -12.375154495239258
    7. '    ' → logprob: -12.625154495239258
    8. '       ' → logprob: -12.625154495239258
    9. '<|end|>' → logprob: -13.250154495239258
    10. '	return' → logprob: -13.500154495239258

Token 308: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3728376030921936
    2. ' if' → logprob: -1.8728375434875488
    3. ' return' → logprob: -2.247837543487549
    4. 'return' → logprob: -3.247837543487549
    5. 'if' (adapté à ' if') → logprob: -4.372837543487549
    6. '    
' → logprob: -8.872838020324707
    7. '    ' → logprob: -9.497838020324707
    8. ' ' → logprob: -9.872838020324707
    9. '
' → logprob: -9.997838020324707
    10. ' 
' → logprob: -10.122838020324707

Token 309: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3132779896259308
    2. 'len' → logprob: -1.3132779598236084
    3. '(len' → logprob: -11.938278198242188
    4. ' not' → logprob: -12.063278198242188
    5. ' ' → logprob: -13.063278198242188
    6. '   ' → logprob: -13.813278198242188
    7. 'not' → logprob: -14.563278198242188
    8. '2' → logprob: -15.688278198242188
    9. '  ' → logprob: -16.313278198242188
    10. '1' → logprob: -17.063278198242188

Token 310: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7432603272027336e-06
    2. 'odd' → logprob: -13.875001907348633
    3. ' (' → logprob: -14.125001907348633
    4. ' odd' → logprob: -17.750001907348633
    5. '(
' → logprob: -17.875001907348633
    6. '([' → logprob: -19.250001907348633
    7. '()' → logprob: -19.500001907348633
    8. '(o' → logprob: -19.500001907348633
    9. '(ord' → logprob: -19.750001907348633
    10. '((' → logprob: -20.375001907348633

Token 311: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -4.310693111619912e-05
    2. ' odd' → logprob: -10.125042915344238
    3. '[' → logprob: -13.375042915344238
    4. '(' → logprob: -14.500042915344238
    5. ')' → logprob: -14.875042915344238
    6. '```' → logprob: -15.375042915344238
    7. 'od' → logprob: -15.625042915344238
    8. '   ' → logprob: -16.750043869018555
    9. ' ' → logprob: -18.375043869018555
    10. 'ood' → logprob: -18.625043869018555

Token 312: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.004797495901584625
    2. '_' → logprob: -5.379797458648682
    3. 'odd' → logprob: -9.25479793548584
    4. ')' → logprob: -9.75479793548584
    5. 'degree' → logprob: -12.00479793548584
    6. '```' → logprob: -12.12979793548584
    7. '   ' → logprob: -12.50479793548584
    8. ')_' → logprob: -13.12979793548584
    9. '_)' → logprob: -13.25479793548584
    10. ' _' → logprob: -13.62979793548584

Token 313: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.00014060820103622973
    2. ')' → logprob: -9.375140190124512
    3. 'nodes' → logprob: -10.250140190124512
    4. 's' → logprob: -12.125140190124512
    5. '_' → logprob: -12.250140190124512
    6. '_)' → logprob: -12.875140190124512
    7. '   ' → logprob: -12.875140190124512
    8. '```' → logprob: -14.000140190124512
    9. ')_' → logprob: -14.500140190124512
    10. 'odd' → logprob: -14.625140190124512

Token 314: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6737531423568726
    2. '==' → logprob: -0.7987531423568726
    3. ' ==' → logprob: -3.298753261566162
    4. '>' → logprob: -6.798753261566162
    5. '<=' → logprob: -6.798753261566162
    6. ')==' → logprob: -7.798753261566162
    7. ' <=' → logprob: -7.923753261566162
    8. ' )' → logprob: -9.048752784729004
    9. ' >' → logprob: -9.798752784729004
    10. ' not' → logprob: -9.923752784729004

Token 315: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1680532991886139
    2. ' not' → logprob: -2.543053388595581
    3. ' >' → logprob: -2.793053388595581
    4. '<=' → logprob: -5.168053150177002
    5. '==' → logprob: -5.668053150177002
    6. 'not' → logprob: -5.918053150177002
    7. ' in' → logprob: -6.668053150177002
    8. ' <=' → logprob: -6.918053150177002
    9. 'in' → logprob: -8.16805362701416
    10. ' ==' → logprob: -9.04305362701416

Token 316: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002962726866826415
    2. ' ' → logprob: -6.002962589263916
    3. '2' → logprob: -7.627962589263916
    4. '   ' → logprob: -15.377963066101074
    5. '```' → logprob: -17.127962112426758
    6. '[' → logprob: -17.377962112426758
    7. '  ' → logprob: -18.127962112426758
    8. '	' → logprob: -19.002962112426758
    9. '    ' → logprob: -19.440462112426758
    10. 'in' → logprob: -19.627962112426758

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011988013284280896
    2. '2' → logprob: -6.751198768615723
    3. ' ' → logprob: -10.501198768615723
    4. '```' → logprob: -14.626198768615723
    5. '   ' → logprob: -14.751198768615723
    6. '[' → logprob: -17.12619972229004
    7. '1' → logprob: -17.37619972229004
    8. '``' → logprob: -17.87619972229004
    9. '  ' → logprob: -17.93869972229004
    10. 'in' → logprob: -18.12619972229004

Token 318: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.003224771935492754
    2. ':' → logprob: -6.003224849700928
    3. 'or' → logprob: -7.378224849700928
    4. '   ' → logprob: -9.12822437286377
    5. ':
' → logprob: -12.12822437286377
    6. ':return' → logprob: -12.25322437286377
    7. ' ' → logprob: -12.87822437286377
    8. '	or' → logprob: -14.00322437286377
    9. '       ' → logprob: -14.25322437286377
    10. '  ' → logprob: -14.25322437286377

Token 319: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3869348466396332
    2. 'len' → logprob: -1.1369348764419556
    3. '   ' → logprob: -10.136935234069824
    4. '    ' → logprob: -11.886935234069824
    5. ' ' → logprob: -11.886935234069824
    6. '	len' → logprob: -12.011935234069824
    7. '(len' → logprob: -13.886935234069824
    8. '  ' → logprob: -14.136935234069824
    9. '          ' → logprob: -14.511935234069824
    10. '       ' → logprob: -14.761935234069824

Token 320: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. ' (' → logprob: -14.250000953674316
    3. '(
' → logprob: -15.875000953674316
    4. 'odd' → logprob: -19.0
    5. '_' → logprob: -19.125
    6. '<|end|>' → logprob: -19.625
    7. '(two' → logprob: -19.625
    8. '(

' → logprob: -20.125
    9. ' ' → logprob: -20.25
    10. '(space' → logprob: -20.75

Token 321: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.00208412017673254
    2. '(' → logprob: -6.752084255218506
    3. ' odd' → logprob: -7.002084255218506
    4. 'od' → logprob: -13.377083778381348
    5. '[' → logprob: -13.627083778381348
    6. ' (' → logprob: -15.377083778381348
    7. ' ' → logprob: -15.752083778381348
    8. '   ' → logprob: -15.752083778381348
    9. '```' → logprob: -15.877083778381348
    10. ')' → logprob: -16.752084732055664

Token 322: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.002903062617406249
    2. '_' → logprob: -6.002902984619141
    3. 'odd' → logprob: -8.25290298461914
    4. '   ' → logprob: -9.37790298461914
    5. '```' → logprob: -10.75290298461914
    6. '-' → logprob: -11.50290298461914
    7. ')' → logprob: -11.87790298461914
    8. 'degree' → logprob: -12.00290298461914
    9. 'egree' → logprob: -12.37790298461914
    10. '_of' → logprob: -12.37790298461914

Token 323: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.005887787789106369
    2. '_' → logprob: -5.505887985229492
    3. 'odd' → logprob: -6.380887985229492
    4. '_degree' → logprob: -9.630887985229492
    5. 'nodes' → logprob: -11.380887985229492
    6. '[' → logprob: -12.130887985229492
    7. ')' → logprob: -12.255887985229492
    8. '(nodes' → logprob: -12.755887985229492
    9. '```' → logprob: -12.755887985229492
    10. 's' → logprob: -12.755887985229492

Token 324: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24801021814346313
    2. '==' → logprob: -1.7480101585388184
    3. ')' → logprob: -3.2480101585388184
    4. ')==' → logprob: -5.373010158538818
    5. '()' → logprob: -6.748010158538818
    6. '()==' → logprob: -7.873010158538818
    7. ' )' → logprob: -8.123010635375977
    8. ' ' → logprob: -9.748010635375977
    9. ']==' → logprob: -10.123010635375977
    10. '=' → logprob: -10.623010635375977

Token 325: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4741259813308716
    2. ' ==' → logprob: -0.9741259813308716
    3. '<=' → logprob: -10.474125862121582
    4. ' <=' → logprob: -11.849125862121582
    5. ' ' → logprob: -12.849125862121582
    6. '2' → logprob: -13.224125862121582
    7. ')==' → logprob: -13.474125862121582
    8. '[' → logprob: -13.474125862121582
    9. '()==' → logprob: -13.724125862121582
    10. '```' → logprob: -13.724125862121582

Token 326: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018041854491457343
    2. ' ' → logprob: -8.6251802444458
    3. '```' → logprob: -15.1876802444458
    4. '=' → logprob: -15.8751802444458
    5. '   ' → logprob: -16.250181198120117
    6. '۲' → logprob: -16.875181198120117
    7. '
' → logprob: -17.750181198120117
    8. '{' → logprob: -17.875181198120117
    9. '0' → logprob: -18.375181198120117
    10. '	' → logprob: -18.437681198120117

Token 327: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -16.625
    4. '۲' → logprob: -17.25
    5. '{' → logprob: -18.1875
    6. '২' → logprob: -18.5625
    7. '=' → logprob: -18.625
    8. '   ' → logprob: -18.625
    9. '२' → logprob: -18.875
    10. '0' → logprob: -19.125

Token 328: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009156247251667082
    2. ':
' → logprob: -7.75091552734375
    3. ':return' → logprob: -7.75091552734375
    4. '):' → logprob: -10.87591552734375
    5. '   ' → logprob: -10.87591552734375
    6. '       ' → logprob: -11.75091552734375
    7. ' :' → logprob: -12.12591552734375
    8. ' and' → logprob: -14.12591552734375
    9. ',' → logprob: -14.37591552734375
    10. ')' → logprob: -14.50091552734375

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.465036105713807e-06
    2. ' return' → logprob: -12.500007629394531
    3. '   ' → logprob: -13.000007629394531
    4. 'return' → logprob: -14.625007629394531
    5. ':' → logprob: -15.000007629394531
    6. '           ' → logprob: -15.500007629394531
    7. ':
' → logprob: -16.00000762939453
    8. '        
' → logprob: -17.12500762939453
    9. '
' → logprob: -17.50000762939453
    10. '      ' → logprob: -17.50000762939453

Token 330: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07703045755624771
    2. ' return' → logprob: -3.0770304203033447
    3. 'return' (adapté à ' return') → logprob: -3.5770304203033447
    4. '   ' → logprob: -9.577030181884766
    5. '           ' → logprob: -11.327030181884766
    6. ' ' → logprob: -13.202030181884766
    7. '	return' → logprob: -15.702030181884766
    8. '    ' → logprob: -15.827030181884766
    9. '      ' → logprob: -15.952030181884766
    10. '     ' → logprob: -16.077030181884766

Token 331: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20141352713108063
    2. ' True' → logprob: -1.7014135122299194
    3. ' ' → logprob: -15.95141315460205
    4. 'False' → logprob: -16.076414108276367
    5. '(True' → logprob: -17.576414108276367
    6. '   ' → logprob: -17.826414108276367
    7. 'len' → logprob: -19.576414108276367
    8. '=True' → logprob: -19.701414108276367
    9. '  ' → logprob: -19.826414108276367
    10. '1' → logprob: -19.826414108276367

Token 332: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2563534379005432
    2. 'else' → logprob: -2.2563533782958984
    3. '
' → logprob: -3.0063533782958984
    4. ' else' → logprob: -3.2563533782958984
    5. '    
' → logprob: -4.256353378295898
    6. '\n' → logprob: -4.756353378295898
    7. 'return' → logprob: -5.006353378295898
    8. 'False' → logprob: -7.256353378295898
    9. ' ' → logprob: -7.506353378295898
    10. ' return' → logprob: -7.506353378295898

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021316472440958023
    2. 'else' → logprob: -4.1463165283203125
    3. 'return' → logprob: -6.0213165283203125
    4. ' else' → logprob: -6.8963165283203125
    5. '    
' → logprob: -6.8963165283203125
    6. '
' → logprob: -7.6463165283203125
    7. ' return' → logprob: -9.271316528320312
    8. 'False' → logprob: -9.646316528320312
    9. ' ' → logprob: -10.146316528320312
    10. '\n' → logprob: -10.771316528320312

Token 334: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018040595576167107
    2. 'else' → logprob: -4.143040657043457
    3. 'return' (adapté à ' return') → logprob: -6.518040657043457
    4. ' else' → logprob: -7.768040657043457
    5. '    
' → logprob: -9.393040657043457
    6. ' return' → logprob: -11.143040657043457
    7. '
' → logprob: -12.768040657043457
    8. 'False' → logprob: -13.518040657043457
    9. '       ' → logprob: -14.518040657043457
    10. '	return' → logprob: -14.643040657043457

Token 335: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02324547804892063
    2. ' False' → logprob: -3.7732455730438232
    3. '(False' → logprob: -22.273244857788086
    4. '_false' → logprob: -22.773244857788086
    5. 'false' → logprob: -23.398244857788086
    6. '=False' → logprob: -24.773244857788086
    7. '   ' → logprob: -25.648244857788086
    8. 'True' → logprob: -25.898244857788086
    9. ' false' → logprob: -26.148244857788086
    10. '.False' → logprob: -26.523244857788086

Token 336: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' parse' (ID: 8420)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.16706113517284393
    2. ' is' → logprob: -2.0420610904693604
    3. ' reverse' → logprob: -5.0420613288879395
    4. ' find' → logprob: -5.4170613288879395
    5. ' main' → logprob: -5.7920613288879395
    6. ' arrange' → logprob: -6.4170613288879395
    7. ' count' → logprob: -6.5420613288879395
    8. 'can' → logprob: -6.6670613288879395
    9. ' valid' → logprob: -6.9170613288879395
    10. ' max' → logprob: -7.1670613288879395

Token 339: '_dom' (ID: 90214)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16487926244735718
    2. '_input' → logprob: -2.664879322052002
    3. '_token' → logprob: -3.039879322052002
    4. '_line' → logprob: -4.414879322052002
    5. '(' → logprob: -5.039879322052002
    6. '_dom' → logprob: -5.414879322052002
    7. '_tokens' → logprob: -6.414879322052002
    8. ' _' → logprob: -6.664879322052002
    9. 'def' → logprob: -6.914879322052002
    10. '_string' → logprob: -7.414879322052002

Token 340: 'ino' (ID: 2081)
  Prédit: 'ino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -1.9385402993066236e-05
    2. 'ино' → logprob: -12.125019073486328
    3. '```' → logprob: -12.625019073486328
    4. '_' → logprob: -12.875019073486328
    5. 'inos' → logprob: -12.875019073486328
    6. '[' → logprob: -14.375019073486328
    7. '\' → logprob: -14.500019073486328
    8. '__' → logprob: -14.750019073486328
    9. '_dom' → logprob: -14.875019073486328
    10. '{' → logprob: -15.000019073486328

Token 341: '(s' (ID: 1858)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0008883526897989213
    2. 'e' → logprob: -8.50088882446289
    3. '(es' → logprob: -8.50088882446289
    4. '(dom' → logprob: -9.00088882446289
    5. '(' → logprob: -9.25088882446289
    6. '(e' → logprob: -9.62588882446289
    7. '_' → logprob: -10.12588882446289
    8. '(s' → logprob: -10.25088882446289
    9. '_line' → logprob: -11.00088882446289
    10. '_string' → logprob: -11.25088882446289

Token 342: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13044679164886475
    2. ')' → logprob: -2.2554469108581543
    3. 'u' → logprob: -4.505446910858154
    4. 's' → logprob: -6.380446910858154
    5. '):
' → logprob: -6.630446910858154
    6. '(' → logprob: -7.380446910858154
    7. 'e' → logprob: -7.755446910858154
    8. '_' → logprob: -7.880446910858154
    9. 'a' → logprob: -8.505446434020996
    10. 'ue' → logprob: -8.505446434020996

Token 343: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9311292767524719
    2. '   ' → logprob: -0.9311292767524719
    3. 's' → logprob: -2.056129217147827
    4. '(' → logprob: -2.681129217147827
    5. '(s' → logprob: -4.806129455566406
    6. ' s' → logprob: -6.181129455566406
    7. ' :' → logprob: -6.431129455566406
    8. '):' → logprob: -6.931129455566406
    9. '():' → logprob: -7.556129455566406
    10. 'return' → logprob: -7.931129455566406

Token 344: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015501752495765686
    2. ' a' → logprob: -4.765501976013184
    3. 'return' → logprob: -5.265501976013184
    4. ' return' → logprob: -6.515501976013184
    5. '   ' → logprob: -8.515501976013184
    6. '(a' → logprob: -12.765501976013184
    7. 'x' → logprob: -12.890501976013184
    8. 's' → logprob: -13.015501976013184
    9. 'l' → logprob: -13.390501976013184
    10. 'int' → logprob: -14.140501976013184

Token 345: ' s' (ID: 265)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026360562071204185
    2. ' a' → logprob: -4.526360511779785
    3. 'return' → logprob: -4.526360511779785
    4. ' return' → logprob: -5.651360511779785
    5. 'parts' → logprob: -7.901360511779785
    6. ' parts' → logprob: -8.026360511779785
    7. 's' → logprob: -9.276360511779785
    8. 'if' → logprob: -10.776360511779785
    9. 'part' → logprob: -11.651360511779785
    10. 'p' → logprob: -11.901360511779785

Token 346: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38716351985931396
    2. '=' → logprob: -1.137163519859314
    3. '.strip' → logprob: -8.762163162231445
    4. '.' → logprob: -10.012163162231445
    5. '[' → logprob: -10.387163162231445
    6. '.split' → logprob: -11.262163162231445
    7. 's' → logprob: -11.762163162231445
    8. ')' → logprob: -11.762163162231445
    9. ',' → logprob: -11.762163162231445
    10. ' ' → logprob: -12.387163162231445

Token 347: ' two' (ID: 1920)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5304072499275208
    2. ' a' → logprob: -1.155407190322876
    3. 's' → logprob: -3.030407190322876
    4. ' ' → logprob: -4.405407428741455
    5. '"' → logprob: -4.530407428741455
    6. ' str' → logprob: -4.530407428741455
    7. 'str' → logprob: -5.030407428741455
    8. 'a' → logprob: -6.280407428741455
    9. ''' → logprob: -6.905407428741455
    10. ' two' → logprob: -6.905407428741455

Token 348: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.8022521138191223
    2. 'digits' → logprob: -0.8022521138191223
    3. ' characters' → logprob: -2.8022520542144775
    4. 'characters' → logprob: -4.177252292633057
    5. 'chars' → logprob: -4.802252292633057
    6. 'digit' → logprob: -4.802252292633057
    7. '-digit' → logprob: -5.177252292633057
    8. ' chars' → logprob: -6.052252292633057
    9. ' integers' → logprob: -6.552252292633057
    10. ' digit' → logprob: -8.302251815795898

Token 349: ' string' (ID: 1621)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8133577704429626
    2. ' =' → logprob: -1.4383578300476074
    3. ',' → logprob: -1.6883578300476074
    4. '   ' → logprob: -3.0633578300476074
    5. ' :' → logprob: -3.4383578300476074
    6. '[' → logprob: -4.313357830047607
    7. 'def' → logprob: -5.188357830047607
    8. '=' → logprob: -5.313357830047607
    9. ' ' → logprob: -5.438357830047607
    10. '[]' → logprob: -5.563357830047607

Token 350: ' like' (ID: 1299)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16919507086277008
    2. 'return' → logprob: -2.7941951751708984
    3. ' return' → logprob: -3.1691951751708984
    4. ',' → logprob: -3.4191951751708984
    5. '(' → logprob: -5.419195175170898
    6. ' ' → logprob: -5.794195175170898
    7. ' =' → logprob: -6.544195175170898
    8. ':' → logprob: -6.669195175170898
    9. '    ' → logprob: -6.794195175170898
    10. 'def' → logprob: -6.794195175170898

Token 351: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07734671980142593
    2. ' "' → logprob: -3.2023468017578125
    3. ''' → logprob: -3.5773468017578125
    4. ' '' → logprob: -5.9523468017578125
    5. ' s' → logprob: -6.4523468017578125
    6. ' ' → logprob: -7.2023468017578125
    7. 's' → logprob: -7.8273468017578125
    8. '"s' → logprob: -7.8273468017578125
    9. ''s' → logprob: -10.077346801757812
    10. '12' → logprob: -10.327346801757812

Token 352: '13' (ID: 1311)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '12' → logprob: -0.3529726266860962
    2. '34' → logprob: -1.9779726266860962
    3. '23' → logprob: -2.3529725074768066
    4. '56' → logprob: -3.4779725074768066
    5. '"' → logprob: -4.102972507476807
    6. '45' → logprob: -5.352972507476807
    7. '53' → logprob: -6.477972507476807
    8. '[' → logprob: -6.602972507476807
    9. '43' → logprob: -6.852972507476807
    10. '54' → logprob: -6.977972507476807

Token 353: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07080307602882385
    2. '")' → logprob: -2.695803165435791
    3. ')"' → logprob: -8.195802688598633
    4. '23' → logprob: -9.070802688598633
    5. '13' → logprob: -9.195802688598633
    6. ')' → logprob: -9.195802688598633
    7. '1' → logprob: -9.445802688598633
    8. '2' → logprob: -9.820802688598633
    9. '3' → logprob: -10.320802688598633
    10. '34' → logprob: -10.820802688598633

Token 354: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04872816428542137
    2. ':' → logprob: -3.1737282276153564
    3. ':
' → logprob: -6.173727989196777
    4. ',' → logprob: -6.423727989196777
    5. ':return' → logprob: -6.548727989196777
    6. ' return' → logprob: -8.673727989196777
    7. 'return' → logprob: -8.798727989196777
    8. '<|end|>' → logprob: -10.423727989196777
    9. ')' → logprob: -10.673727989196777
    10. ' ' → logprob: -10.673727989196777

Token 355: ' (' (ID: 350)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.45822519063949585
    2. ' (' → logprob: -1.2082252502441406
    3. '(a' → logprob: -2.7082252502441406
    4. 'return' → logprob: -6.583225250244141
    5. '(' → logprob: -7.833225250244141
    6. ' return' → logprob: -8.20822525024414
    7. 'int' → logprob: -9.83322525024414
    8. '[int' → logprob: -10.33322525024414
    9. '(return' → logprob: -10.58322525024414
    10. ' int' → logprob: -11.20822525024414

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001422770437784493
    2. ' ' → logprob: -9.125142097473145
    3. '(' → logprob: -10.875142097473145
    4. 'int' → logprob: -11.250142097473145
    5. '(int' → logprob: -13.875142097473145
    6. ' (' → logprob: -15.500142097473145
    7. ' int' → logprob: -16.12514305114746
    8. '   ' → logprob: -17.50014305114746
    9. '  ' → logprob: -18.37514305114746
    10. '
' → logprob: -18.87514305114746

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -11.125019073486328
    3. ',
' → logprob: -13.000019073486328
    4. ',int' → logprob: -13.375019073486328
    5. ',

' → logprob: -15.625019073486328
    6. ',b' → logprob: -16.625019073486328
    7. ',)' → logprob: -16.625019073486328
    8. ',s' → logprob: -16.750019073486328
    9. ',num' → logprob: -17.250019073486328
    10. ',Integer' → logprob: -17.375019073486328

Token 358: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.026301225647330284
    2. ' ' → logprob: -3.651301145553589
    3. '   ' → logprob: -14.776301383972168
    4. ')' → logprob: -14.776301383972168
    5. ',' → logprob: -16.27630043029785
    6. '  ' → logprob: -16.96380043029785
    7. '３' → logprob: -17.46380043029785
    8. '_' → logprob: -17.58880043029785
    9. ' ' → logprob: -17.77630043029785
    10. '```' → logprob: -18.21380043029785

Token 359: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.500000953674316
    3. '),' → logprob: -16.25
    4. ' )' → logprob: -16.625
    5. '')' → logprob: -17.0
    6. '   ' → logprob: -17.625
    7. ')`' → logprob: -18.0
    8. ')#' → logprob: -18.5
    9. ')return' → logprob: -18.875
    10. ').' → logprob: -19.0

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0057301633059978485
    2. ':' → logprob: -5.255730152130127
    3. ')' → logprob: -8.880730628967285
    4. ',' → logprob: -9.505730628967285
    5. '(' → logprob: -9.755730628967285
    6. ':return' → logprob: -9.755730628967285
    7. 'return' → logprob: -10.755730628967285
    8. ' return' → logprob: -10.755730628967285
    9. ' :' → logprob: -10.755730628967285
    10. '):' → logprob: -10.880730628967285

Token 361: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3571022152900696
    2. ' return' → logprob: -1.6071021556854248
    3. 'a' → logprob: -2.357102155685425
    4. '   ' → logprob: -5.857102394104004
    5. ' a' → logprob: -6.107102394104004
    6. 'r' → logprob: -10.607102394104004
    7. ')' → logprob: -12.232102394104004
    8. ',' → logprob: -12.857102394104004
    9. 'd' → logprob: -13.357102394104004
    10. ' ' → logprob: -13.357102394104004

Token 362: ' (' (ID: 350)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06623626500368118
    2. ' (' → logprob: -2.8162362575531006
    3. 'int' → logprob: -6.06623649597168
    4. ' int' → logprob: -6.31623649597168
    5. '(' → logprob: -8.94123649597168
    6. ' ' → logprob: -13.94123649597168
    7. '[int' → logprob: -14.56623649597168
    8. '(s' → logprob: -15.06623649597168
    9. '(i' → logprob: -16.44123649597168
    10. '((' → logprob: -16.69123649597168

Token 363: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.512236498361744e-07
    2. ' int' → logprob: -14.500000953674316
    3. '(int' → logprob: -21.375
    4. '[int' → logprob: -22.5
    5. '   ' → logprob: -22.75
    6. '	int' → logprob: -24.5
    7. 'ints' → logprob: -24.75
    8. ' ' → logprob: -24.875
    9. '<int' → logprob: -25.25
    10. '  ' → logprob: -25.5

Token 364: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10025649517774582
    2. '(s' → logprob: -2.3502564430236816
    3. ' s' → logprob: -9.97525691986084
    4. '(' → logprob: -13.22525691986084
    5. ')' → logprob: -13.72525691986084
    6. ')s' → logprob: -15.22525691986084
    7. ' ' → logprob: -16.475255966186523
    8. ' (' → logprob: -17.850255966186523
    9. '_s' → logprob: -17.850255966186523
    10. '{s' → logprob: -18.100255966186523

Token 365: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0206720617134124e-05
    2. '0' → logprob: -11.50001049041748
    3. ' [' → logprob: -17.000009536743164
    4. ')' → logprob: -17.375009536743164
    5. 's' → logprob: -18.500009536743164
    6. '[
' → logprob: -19.125009536743164
    7. ' ' → logprob: -20.375009536743164
    8. 'def' → logprob: -20.500009536743164
    9. '```' → logprob: -20.875009536743164
    10. '1' → logprob: -21.125009536743164

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '[' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.500001907348633
    5. ')' → logprob: -17.875001907348633
    6. '1' → logprob: -19.125001907348633
    7. '```' → logprob: -19.625001907348633
    8. '  ' → logprob: -19.875001907348633
    9. '۰' → logprob: -20.062501907348633
    10. '    ' → logprob: -20.625001907348633

Token 367: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.003890934167429805
    2. '],' → logprob: -6.3788909912109375
    3. ')' → logprob: -6.6288909912109375
    4. ']),' → logprob: -7.2538909912109375
    5. ')],' → logprob: -9.128890991210938
    6. ' ),' → logprob: -10.503890991210938
    7. ']' → logprob: -11.378890991210938
    8. ',' → logprob: -12.753890991210938
    9. ')]' → logprob: -13.128890991210938
    10. '])' → logprob: -13.253890991210938

Token 368: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '(int' → logprob: -21.500335693359375
    4. '=int' → logprob: -21.500335693359375
    5. '[int' → logprob: -21.500335693359375
    6. '<int' → logprob: -21.875335693359375
    7. ':int' → logprob: -22.500335693359375
    8. '	int' → logprob: -22.625335693359375
    9. ',int' → logprob: -23.500335693359375
    10. ' ' → logprob: -23.500335693359375

Token 369: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005984273157082498
    2. '(s' → logprob: -7.500598430633545
    3. ' s' → logprob: -10.000597953796387
    4. '(' → logprob: -17.625598907470703
    5. '   ' → logprob: -17.750598907470703
    6. ')' → logprob: -18.125598907470703
    7. ''s' → logprob: -18.250598907470703
    8. ' (' → logprob: -18.750598907470703
    9. ' ' → logprob: -18.875598907470703
    10. '`s' → logprob: -19.000598907470703

Token 370: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005244783591479063
    2. '[' → logprob: -5.255244731903076
    3. ' ' → logprob: -11.505245208740234
    4. ')' → logprob: -14.755245208740234
    5. '   ' → logprob: -15.755245208740234
    6. '])' → logprob: -16.630245208740234
    7. '2' → logprob: -16.630245208740234
    8. ' [' → logprob: -16.755245208740234
    9. '```' → logprob: -17.005245208740234
    10. '(' → logprob: -17.380245208740234

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '])' → logprob: -17.625
    4. '   ' → logprob: -19.125
    5. '```' → logprob: -21.25
    6. '
' → logprob: -21.5
    7. ')' → logprob: -21.5
    8. '0' → logprob: -21.75
    9. '  ' → logprob: -21.75
    10. '-' → logprob: -22.25

Token 372: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.040635041892528534
    2. '])' → logprob: -3.290635108947754
    3. ')])' → logprob: -6.290635108947754
    4. ')' → logprob: -7.415635108947754
    5. '))' → logprob: -9.040635108947754
    6. ')))' → logprob: -12.165635108947754
    7. ')]' → logprob: -12.540635108947754
    8. ']' → logprob: -12.915635108947754
    9. ']))
' → logprob: -13.290635108947754
    10. '1' → logprob: -13.790635108947754

Token 373: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005987219978123903
    2. '#' → logprob: -5.130987167358398
    3. 'for' → logprob: -10.505987167358398
    4. '<|end|>' → logprob: -11.505987167358398
    5. 'dom' → logprob: -12.130987167358398
    6. '```' → logprob: -12.255987167358398
    7. '<|end|>' → logprob: -12.755987167358398
    8. 'print' → logprob: -13.005987167358398
    9. ' def' → logprob: -14.005987167358398
    10. '
' → logprob: -14.130987167358398

Token 374: ' main' (ID: 2758)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6613808274269104
    2. ' main' → logprob: -0.9113808274269104
    3. 'can' → logprob: -2.7863807678222656
    4. 'main' → logprob: -4.661380767822266
    5. ' arrange' → logprob: -5.661380767822266
    6. ' test' → logprob: -6.161380767822266
    7. ' find' → logprob: -6.536380767822266
    8. ' is' → logprob: -6.786380767822266
    9. ' check' → logprob: -7.036380767822266
    10. ' solve' → logprob: -7.411380767822266

Token 375: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.966313281329349e-05
    2. ' ():' → logprob: -10.125049591064453
    3. '():
' → logprob: -11.750049591064453
    4. '(' → logprob: -14.000049591064453
    5. '()' → logprob: -14.625049591064453
    6. '(":' → logprob: -15.625049591064453
    7. '_' → logprob: -16.125049591064453
    8. '():
' → logprob: -17.500049591064453
    9. '(:' → logprob: -17.500049591064453
    10. ':' → logprob: -18.000049591064453

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027470404282212257
    2. ' import' → logprob: -3.652470350265503
    3. ' n' → logprob: -7.777470588684082
    4. 'import' → logprob: -7.902470588684082
    5. ' input' → logprob: -8.527470588684082
    6. 'n' → logprob: -9.402470588684082
    7. ' dom' → logprob: -10.777470588684082
    8. ' domino' → logprob: -11.152470588684082
    9. ' s' → logprob: -11.402470588684082
    10. '   ' → logprob: -11.527470588684082

Token 377: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2644050121307373
    2. 'n' → logprob: -2.2644050121307373
    3. ' import' → logprob: -2.2644050121307373
    4. '   ' → logprob: -4.264405250549316
    5. 'import' (adapté à ' import') → logprob: -4.764405250549316
    6. ' lines' → logprob: -7.139405250549316
    7. ' domino' → logprob: -8.264405250549316
    8. ' t' → logprob: -8.514405250549316
    9. 't' → logprob: -8.639405250549316
    10. ' input' → logprob: -9.014405250549316

Token 378: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.47407740354537964
    2. 'sys' → logprob: -0.9740774035453796
    3. '=sys' → logprob: -14.974077224731445
    4. '	sys' → logprob: -16.474077224731445
    5. '(sys' → logprob: -18.474077224731445
    6. '_sys' → logprob: -18.974077224731445
    7. '.sys' → logprob: -19.474077224731445
    8. '```' → logprob: -19.599077224731445
    9. 's' → logprob: -20.474077224731445
    10. 'collections' → logprob: -21.849077224731445

Token 379: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005593849346041679
    2. ' for' → logprob: -5.505593776702881
    3. 'for' → logprob: -7.255593776702881
    4. '    
' → logprob: -7.630593776702881
    5. '
' → logprob: -8.505594253540039
    6. ' lines' → logprob: -9.380594253540039
    7. ' input' → logprob: -11.380594253540039
    8. 'input' → logprob: -11.755594253540039
    9. '    ' → logprob: -13.005594253540039
    10. ' readline' → logprob: -13.130594253540039

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033601101487874985
    2. ' for' → logprob: -3.7836010456085205
    3. 'for' → logprob: -5.1586012840271
    4. ' lines' → logprob: -5.5336012840271
    5. ' input' → logprob: -8.283600807189941
    6. 'input' → logprob: -8.283600807189941
    7. 'lines' → logprob: -10.658600807189941
    8. 'n' → logprob: -10.783600807189941
    9. '    
' → logprob: -11.158600807189941
    10. ' readline' → logprob: -11.533600807189941

Token 381: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0726078748703003
    2. ' for' → logprob: -1.1976078748703003
    3. '   ' → logprob: -1.6976078748703003
    4. ' lines' → logprob: -1.9476078748703003
    5. 'input' → logprob: -4.32260799407959
    6. ' input' → logprob: -4.44760799407959
    7. 'lines' (adapté à ' lines') → logprob: -5.82260799407959
    8. 'dom' → logprob: -6.57260799407959
    9. 'n' → logprob: -8.32260799407959
    10. ' line' → logprob: -8.57260799407959

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3487021327018738
    2. ' =' → logprob: -1.2237021923065186
    3. '   ' → logprob: -8.723702430725098
    4. '()' → logprob: -10.348702430725098
    5. ' =
' → logprob: -10.973702430725098
    6. ' ' → logprob: -11.223702430725098
    7. '=
' → logprob: -11.973702430725098
    8. '.' → logprob: -12.098702430725098
    9. '_' → logprob: -12.598702430725098
    10. '=line' → logprob: -13.098702430725098

Token 383: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38687241077423096
    2. ' sys' → logprob: -1.136872410774231
    3. '[' → logprob: -14.386872291564941
    4. 'list' → logprob: -15.386872291564941
    5. '=sys' → logprob: -15.386872291564941
    6. '(sys' → logprob: -15.636872291564941
    7. ' [' → logprob: -16.261873245239258
    8. ' list' → logprob: -16.386873245239258
    9. '	sys' → logprob: -16.511873245239258
    10. '   ' → logprob: -18.761873245239258

Token 384: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0009914840338751674
    2. '.' → logprob: -7.875991344451904
    3. 'stdin' → logprob: -8.500991821289062
    4. '.stdout' → logprob: -8.625991821289062
    5. '.argv' → logprob: -8.875991821289062
    6. 'lines' → logprob: -11.375991821289062
    7. '._' → logprob: -11.625991821289062
    8. 'd' → logprob: -11.625991821289062
    9. '.lines' → logprob: -11.625991821289062
    10. 's' → logprob: -11.875991821289062

Token 385: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.23199693858623505
    2. '.readlines' → logprob: -1.6069968938827515
    3. '.' → logprob: -5.856997013092041
    4. 'read' → logprob: -6.231997013092041
    5. '.read' → logprob: -6.856997013092041
    6. '_' → logprob: -9.231996536254883
    7. '_lines' → logprob: -9.231996536254883
    8. 'for' → logprob: -9.356996536254883
    9. '_read' → logprob: -9.606996536254883
    10. ' readline' → logprob: -9.731996536254883

Token 386: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003178306156769395
    2. '()' → logprob: -5.753178119659424
    3. ' ().' → logprob: -15.253178596496582
    4. '(' → logprob: -15.628178596496582
    5. 'lines' → logprob: -17.128177642822266
    6. '()
' → logprob: -17.253177642822266
    7. '()\' → logprob: -17.253177642822266
    8. '_lines' → logprob: -17.628177642822266
    9. '()`' → logprob: -18.003177642822266
    10. '()

' → logprob: -18.128177642822266

Token 387: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16022859513759613
    2. 'split' → logprob: -1.9102286100387573
    3. 'read' → logprob: -13.035228729248047
    4. 'rstrip' → logprob: -13.785228729248047
    5. '().' → logprob: -14.535228729248047
    6. '(split' → logprob: -15.410228729248047
    7. 'lines' → logprob: -15.535228729248047
    8. 'decode' → logprob: -16.035228729248047
    9. '(strip' → logprob: -16.160228729248047
    10. ' split' → logprob: -17.160228729248047

Token 388: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015029559144750237
    2. '()' → logprob: -6.501502990722656
    3. '(' → logprob: -15.626502990722656
    4. ' ().' → logprob: -16.001502990722656
    5. 'split' → logprob: -16.251502990722656
    6. '()
' → logprob: -16.376502990722656
    7. '()\' → logprob: -17.001502990722656
    8. '('\' → logprob: -17.126502990722656
    9. '().'' → logprob: -17.626502990722656
    10. '('' → logprob: -18.126502990722656

Token 389: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.0
    3. '(split' → logprob: -20.5
    4. '.split' → logprob: -22.625
    5. 'strip' → logprob: -22.625
    6. 'plit' → logprob: -23.25
    7. '_split' → logprob: -23.75
    8. 'spl' → logprob: -24.25
    9. 'lines' → logprob: -24.375
    10. 'replace' → logprob: -25.125

Token 390: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31800368428230286
    2. '('\' → logprob: -1.3180036544799805
    3. 'lines' → logprob: -5.5680036544799805
    4. '('' → logprob: -7.5680036544799805
    5. '("\' → logprob: -8.44300365447998
    6. '()\' → logprob: -9.19300365447998
    7. '(' → logprob: -10.31800365447998
    8. '()
' → logprob: -10.69300365447998
    9. '()[' → logprob: -10.94300365447998
    10. '('.')' → logprob: -13.44300365447998

Token 391: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12706586718559265
    2. '\n' → logprob: -2.127065896987915
    3. 'lines' → logprob: -9.252065658569336
    4. ''\' → logprob: -10.877065658569336
    5. 'newline' → logprob: -11.377065658569336
    6. '\' → logprob: -12.127065658569336
    7. '')' → logprob: -13.252065658569336
    8. '
' → logprob: -13.377065658569336
    9. ')' → logprob: -13.627065658569336
    10. '```' → logprob: -15.002065658569336

Token 392: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0055068302899599075
    2. '')' → logprob: -5.880506992340088
    3. '   ' → logprob: -6.505506992340088
    4. ')
' → logprob: -6.755506992340088
    5. '')
' → logprob: -10.50550651550293
    6. '")' → logprob: -12.50550651550293
    7. ' )' → logprob: -13.00550651550293
    8. ')
' → logprob: -13.25550651550293
    9. ']' → logprob: -13.88050651550293
    10. '[' → logprob: -14.50550651550293

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1547427624464035
    2. 'n' → logprob: -2.65474271774292
    3. ' n' → logprob: -2.77974271774292
    4. ' for' → logprob: -5.02974271774292
    5. 'for' → logprob: -6.52974271774292
    6. 'num' → logprob: -6.65474271774292
    7. ' i' → logprob: -7.77974271774292
    8. ' num' → logprob: -7.77974271774292
    9. 'i' → logprob: -8.279743194580078
    10. 'count' → logprob: -8.529743194580078

Token 394: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03419548273086548
    2. 'i' → logprob: -4.409195423126221
    3. 'num' → logprob: -5.159195423126221
    4. 'for' → logprob: -5.409195423126221
    5. 't' → logprob: -5.659195423126221
    6. '   ' → logprob: -6.034195423126221
    7. ' n' → logprob: -6.159195423126221
    8. 'idx' → logprob: -6.159195423126221
    9. 'T' → logprob: -8.159195899963379
    10. 'dom' → logprob: -8.409195899963379

Token 395: ' Process' (ID: 12482)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13038653135299683
    2. 'i' → logprob: -3.1303865909576416
    3. 't' → logprob: -3.2553865909576416
    4. 'num' → logprob: -4.3803863525390625
    5. 'idx' → logprob: -4.5053863525390625
    6. 'for' → logprob: -4.7553863525390625
    7. 'T' → logprob: -6.2553863525390625
    8. ' n' → logprob: -6.3803863525390625
    9. '   ' → logprob: -6.7553863525390625
    10. 'if' → logprob: -7.3803863525390625

Token 396: ' every' (ID: 1753)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.9630547165870667
    2. ' i' → logprob: -1.0880546569824219
    3. '   ' → logprob: -1.9630546569824219
    4. 'i' → logprob: -2.838054656982422
    5. 'idx' → logprob: -2.838054656982422
    6. ' for' → logprob: -4.713054656982422
    7. ' n' → logprob: -5.088054656982422
    8. 'n' → logprob: -5.963054656982422
    9. 't' → logprob: -6.588054656982422
    10. ' t' → logprob: -6.713054656982422

Token 397: ' pair' (ID: 10610)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9884352087974548
    2. '2' → logprob: -1.2384352684020996
    3. 'line' → logprob: -1.3634352684020996
    4. '1' → logprob: -2.7384352684020996
    5. ' ' → logprob: -4.4884352684021
    6. '   ' → logprob: -6.3634352684021
    7. '3' → logprob: -6.4884352684021
    8. ' test' → logprob: -7.3634352684021
    9. ' two' → logprob: -7.4884352684021
    10. ' pair' → logprob: -7.6134352684021

Token 398: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45908570289611816
    2. ' for' → logprob: -1.2090857028961182
    3. '   ' → logprob: -2.834085702896118
    4. ' of' → logprob: -5.459085464477539
    5. '(' → logprob: -5.584085464477539
    6. 's' → logprob: -6.709085464477539
    7. ' ' → logprob: -7.334085464477539
    8. 'of' → logprob: -8.709085464477539
    9. ' in' → logprob: -9.209085464477539
    10. '0' → logprob: -9.209085464477539

Token 399: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.026356495916843414
    2. ' lines' → logprob: -3.6513564586639404
    3. 'tokens' → logprob: -10.65135669708252
    4. 'line' → logprob: -11.02635669708252
    5. 'dom' → logprob: -11.90135669708252
    6. ' ' → logprob: -13.27635669708252
    7. '	lines' → logprob: -13.65135669708252
    8. ' adjacent' → logprob: -13.77635669708252
    9. '(lines' → logprob: -14.27635669708252
    10. ' domino' → logprob: -14.27635669708252

Token 400: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3794911801815033
    2. ' for' → logprob: -1.2544912099838257
    3. 'for' → logprob: -3.504491090774536
    4. ',' → logprob: -8.629490852355957
    5. ':' → logprob: -9.379490852355957
    6. ' in' → logprob: -9.754490852355957
    7. '    ' → logprob: -10.004490852355957
    8. '(' → logprob: -11.004490852355957
    9. ' i' → logprob: -11.254490852355957
    10. ' with' → logprob: -11.254490852355957

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.328878790140152
    2. ' for' → logprob: -1.3288787603378296
    3. 'for' → logprob: -4.203878879547119
    4. ',' → logprob: -8.703878402709961
    5. ' i' → logprob: -8.828878402709961
    6. ':' → logprob: -9.453878402709961
    7. '    ' → logprob: -9.953878402709961
    8. 'def' → logprob: -11.203878402709961
    9. ' in' → logprob: -11.578878402709961
    10. '```' → logprob: -11.578878402709961

Token 402: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4127451777458191
    2. 'for' (adapté à ' for') → logprob: -1.1627452373504639
    3. '   ' → logprob: -4.162744998931885
    4. ' i' → logprob: -4.662744998931885
    5. 'i' → logprob: -7.537744998931885
    6. ' ' → logprob: -13.287745475769043
    7. ' idx' → logprob: -13.787745475769043
    8. 'idx' → logprob: -14.412745475769043
    9. '```' → logprob: -15.662745475769043
    10. ' ' → logprob: -15.787745475769043

Token 403: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06201182305812836
    2. 'i' → logprob: -2.81201171875
    3. ' line' → logprob: -10.81201171875
    4. ' idx' → logprob: -11.31201171875
    5. ' _' → logprob: -12.43701171875
    6. '   ' → logprob: -12.81201171875
    7. 'line' → logprob: -12.93701171875
    8. ' ' → logprob: -13.56201171875
    9. 'idx' → logprob: -14.06201171875
    10. '_' → logprob: -15.81201171875

Token 404: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008733703754842281
    2. 'in' → logprob: -4.758733749389648
    3. ' ' → logprob: -9.258733749389648
    4. '   ' → logprob: -11.383733749389648
    5. '	in' → logprob: -12.383733749389648
    6. '0' → logprob: -13.133733749389648
    7. ' i' → logprob: -13.883733749389648
    8. ',' → logprob: -14.008733749389648
    9. '    ' → logprob: -14.008733749389648
    10. '1' → logprob: -14.508733749389648

Token 405: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416398212313652
    2. ' range' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.264163970947266
    4. '	range' → logprob: -16.139163970947266
    5. '   ' → logprob: -16.889163970947266
    6. '0' → logprob: -17.014163970947266
    7. '(range' → logprob: -17.389163970947266
    8. '  ' → logprob: -17.764163970947266
    9. '```' → logprob: -19.514163970947266
    10. ' xrange' → logprob: -20.139163970947266

Token 406: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023798657639417797
    2. '0' → logprob: -8.500238418579102
    3. '(len' → logprob: -10.875238418579102
    4. '1' → logprob: -11.625238418579102
    5. ' (' → logprob: -12.750238418579102
    6. '   ' → logprob: -13.125238418579102
    7. ' ' → logprob: -14.000238418579102
    8. '2' → logprob: -14.875238418579102
    9. 'len' → logprob: -15.125238418579102
    10. '(
' → logprob: -15.500238418579102

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004917914047837257
    2. '1' → logprob: -8.000492095947266
    3. 'len' → logprob: -8.875492095947266
    4. 'i' → logprob: -11.625492095947266
    5. ' ' → logprob: -12.500492095947266
    6. '2' → logprob: -12.875492095947266
    7. '   ' → logprob: -13.875492095947266
    8. ' len' → logprob: -15.000492095947266
    9. ' i' → logprob: -17.750492095947266
    10. '(len' → logprob: -18.375492095947266

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5436952114105225
    2. '+' → logprob: -0.9186952114105225
    3. ' +' → logprob: -4.168695449829102
    4. ',len' → logprob: -6.043695449829102
    5. ' ,' → logprob: -7.043695449829102
    6. ' ' → logprob: -7.168695449829102
    7. '1' → logprob: -8.293695449829102
    8. '   ' → logprob: -8.293695449829102
    9. '2' → logprob: -8.543695449829102
    10. '0' → logprob: -9.793695449829102

Token 409: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00020354038861114532
    2. ' len' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.25020408630371
    4. '(len' → logprob: -18.50020408630371
    5. '	len' → logprob: -18.62520408630371
    6. '2' → logprob: -19.50020408630371
    7. ',len' → logprob: -21.00020408630371
    8. '[len' → logprob: -21.37520408630371
    9. ' ' → logprob: -21.75020408630371
    10. '=len' → logprob: -21.87520408630371

Token 410: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. '	lines' → logprob: -17.625
    4. ' lines' → logprob: -18.125
    5. 'lines' → logprob: -18.125
    6. ' (' → logprob: -20.125
    7. ')' → logprob: -20.125
    8. '_lines' → logprob: -21.0
    9. '(rows' → logprob: -21.5
    10. '```' → logprob: -22.125

Token 411: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003001888981088996
    2. ' ,' → logprob: -8.125300407409668
    3. '   ' → logprob: -12.625300407409668
    4. '),' → logprob: -14.875300407409668
    5. '(),' → logprob: -15.875300407409668
    6. ' ' → logprob: -15.875300407409668
    7. '2' → logprob: -16.75029945373535
    8. '-' → logprob: -17.25029945373535
    9. '```' → logprob: -17.50029945373535
    10. ',
' → logprob: -17.75029945373535

Token 412: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '3' → logprob: -15.12515926361084
    4. '   ' → logprob: -16.000158309936523
    5. '1' → logprob: -17.500158309936523
    6. '```' → logprob: -18.125158309936523
    7. '4' → logprob: -18.625158309936523
    8. '  ' → logprob: -19.125158309936523
    9. '２' → logprob: -20.125158309936523
    10. '۲' → logprob: -20.875158309936523

Token 413: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '3' → logprob: -14.250000953674316
    3. ' ' → logprob: -16.75
    4. '4' → logprob: -18.875
    5. '   ' → logprob: -20.0
    6. '1' → logprob: -20.375
    7. '```' → logprob: -20.375
    8. '  ' → logprob: -21.5
    9. '
' → logprob: -21.875
    10. '２' → logprob: -22.375

Token 414: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1908554583787918
    2. '):
' → logprob: -1.8158555030822754
    3. ':' → logprob: -5.440855503082275
    4. '+' → logprob: -6.065855503082275
    5. ',' → logprob: -6.190855503082275
    6. '   ' → logprob: -6.315855503082275
    7. ')' → logprob: -7.815855503082275
    8. '):
' → logprob: -10.065855026245117
    9. ':
' → logprob: -10.815855026245117
    10. '2' → logprob: -11.315855026245117

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14507707953453064
    2. '   ' → logprob: -2.0200769901275635
    3. 'dom' → logprob: -6.520077228546143
    4. 'tokens' → logprob: -7.270077228546143
    5. ' dom' → logprob: -10.270076751708984
    6. 's' → logprob: -10.770076751708984
    7. '    ' → logprob: -10.895076751708984
    8. '```' → logprob: -11.020076751708984
    9. ',' → logprob: -11.145076751708984
    10. '[' → logprob: -11.395076751708984

Token 416: ' n' (ID: 297)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.5375250577926636
    2. 'n' (adapté à ' n') → logprob: -1.2875250577926636
    3. '   ' → logprob: -3.787525177001953
    4. '       ' → logprob: -3.787525177001953
    5. 'count' → logprob: -3.787525177001953
    6. 'line' → logprob: -4.287525177001953
    7. ' n' → logprob: -4.287525177001953
    8. 'num' → logprob: -4.412525177001953
    9. ' domino' → logprob: -4.662525177001953
    10. 'if' → logprob: -5.037525177001953

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026517760008573532
    2. '=' → logprob: -3.651517868041992
    3. '=int' → logprob: -8.776517868041992
    4. '    ' → logprob: -10.026517868041992
    5. '   ' → logprob: -11.276517868041992
    6. ',' → logprob: -13.651517868041992
    7. ' =
' → logprob: -13.776517868041992
    8. ' ' → logprob: -14.026517868041992
    9. ' =)' → logprob: -14.026517868041992
    10. ')' → logprob: -14.901517868041992

Token 418: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009114635176956654
    2. ' int' → logprob: -7.000911235809326
    3. '   ' → logprob: -19.000911712646484
    4. '=int' → logprob: -20.250911712646484
    5. '[int' → logprob: -21.375911712646484
    6. '(int' → logprob: -21.500911712646484
    7. '  ' → logprob: -23.250911712646484
    8. ' ' → logprob: -23.500911712646484
    9. ':int' → logprob: -23.625911712646484
    10. '	int' → logprob: -23.625911712646484

Token 419: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -9.968312951968983e-06
    2. '(' → logprob: -11.625009536743164
    3. ' lines' → logprob: -14.500009536743164
    4. 'lines' → logprob: -15.250009536743164
    5. '	lines' → logprob: -15.750009536743164
    6. ' (' → logprob: -17.625009536743164
    7. '(line' → logprob: -20.250009536743164
    8. '(
' → logprob: -20.250009536743164
    9. '_lines' → logprob: -20.625009536743164
    10. 'Lines' → logprob: -20.875009536743164

Token 420: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.00000286102295
    3. 'i' → logprob: -16.250001907348633
    4. ' [' → logprob: -16.250001907348633
    5. '[
' → logprob: -16.875001907348633
    6. ' i' → logprob: -17.000001907348633
    7. '```' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.625001907348633
    9. ' ' → logprob: -18.375001907348633
    10. '(i' → logprob: -18.625001907348633

Token 421: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002834007143974304
    2. '].' → logprob: -5.877833843231201
    3. ' ])' → logprob: -11.12783432006836
    4. ']' → logprob: -12.00283432006836
    5. '])
' → logprob: -12.12783432006836
    6. '.strip' → logprob: -14.00283432006836
    7. '])-' → logprob: -14.37783432006836
    8. ']);' → logprob: -14.62783432006836
    9. ')' → logprob: -15.25283432006836
    10. '])+' → logprob: -15.37783432006836

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024465138092637062
    2. 'tokens' → logprob: -4.149465084075928
    3. 'dom' → logprob: -5.024465084075928
    4. '   ' → logprob: -6.774465084075928
    5. ' dom' → logprob: -8.774465560913086
    6. ' domino' → logprob: -8.774465560913086
    7. '```' → logprob: -9.274465560913086
    8. ' tokens' → logprob: -9.399465560913086
    9. '(dom' → logprob: -10.774465560913086
    10. 'pieces' → logprob: -11.274465560913086

Token 423: ' domino' (ID: 133589)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.02159826271235943
    2. 'if' → logprob: -4.5215983390808105
    3. '       ' → logprob: -5.1465983390808105
    4. 'tokens' → logprob: -6.3965983390808105
    5. ' if' → logprob: -6.8965983390808105
    6. 'tiles' → logprob: -7.2715983390808105
    7. 'pieces' → logprob: -7.7715983390808105
    8. ' domino' → logprob: -7.7715983390808105
    9. ' dom' → logprob: -9.021597862243652
    10. 's' → logprob: -9.396597862243652

Token 424: '_str' (ID: 6182)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0032509120646864176
    2. 's' → logprob: -5.753251075744629
    3. '=' → logprob: -10.753251075744629
    4. 'e' → logprob: -11.003251075744629
    5. '_list' → logprob: -11.503251075744629
    6. ' =' → logprob: -12.378251075744629
    7. '_line' → logprob: -12.503251075744629
    8. '_strings' → logprob: -12.878251075744629
    9. '_pairs' → logprob: -13.003251075744629
    10. 'strings' → logprob: -13.253251075744629

Token 425: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006083175539970398
    2. 'es' → logprob: -8.125608444213867
    3. ' =' → logprob: -8.875608444213867
    4. '=' → logprob: -9.125608444213867
    5. 'ing' → logprob: -10.750608444213867
    6. 'ings' → logprob: -11.125608444213867
    7. 'anes' → logprob: -12.125608444213867
    8. 'os' → logprob: -12.375608444213867
    9. 'ains' → logprob: -12.875608444213867
    10. 'om' → logprob: -13.000608444213867

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. '=line' → logprob: -17.075939178466797
    4. 's' → logprob: -17.700939178466797
    5. '   ' → logprob: -18.075939178466797
    6. ')' → logprob: -18.575939178466797
    7. ' =
' → logprob: -18.575939178466797
    8. '=[]' → logprob: -18.575939178466797
    9. ' ' → logprob: -18.700939178466797
    10. '＝' → logprob: -18.825939178466797

Token 427: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.01815006136894226
    2. ' lines' → logprob: -4.0181498527526855
    3. '(lines' → logprob: -16.018150329589844
    4. '	lines' → logprob: -16.768150329589844
    5. '   ' → logprob: -17.768150329589844
    6. 'line' → logprob: -18.143150329589844
    7. '.lines' → logprob: -18.268150329589844
    8. '[' → logprob: -19.768150329589844
    9. 'Lines' → logprob: -20.518150329589844
    10. ' ' → logprob: -20.643150329589844

Token 428: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005283685750328004
    2. 'i' → logprob: -7.625528335571289
    3. 's' → logprob: -10.750528335571289
    4. '(i' → logprob: -11.375528335571289
    5. '{i' → logprob: -12.125528335571289
    6. '```' → logprob: -14.250528335571289
    7. '
' → logprob: -14.750528335571289
    8. '[' → logprob: -16.12552833557129
    9. '       ' → logprob: -16.37552833557129
    10. '<|end|>' → logprob: -16.75052833557129

Token 429: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00033677343162707984
    2. ' +' → logprob: -8.000336647033691
    3. '+i' → logprob: -13.750336647033691
    4. '1' → logprob: -15.125336647033691
    5. '+
' → logprob: -18.875337600708008
    6. '+j' → logprob: -20.250337600708008
    7. 'i' → logprob: -20.250337600708008
    8. '＋' → logprob: -20.250337600708008
    9. '   ' → logprob: -21.250337600708008
    10. '(i' → logprob: -21.750337600708008

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.875000953674316
    3. '2' → logprob: -15.000000953674316
    4. '0' → logprob: -16.5
    5. 'i' → logprob: -17.0
    6. '   ' → logprob: -17.375
    7. '
' → logprob: -17.5
    8. '```' → logprob: -18.75
    9. '6' → logprob: -19.3125
    10. '１' → logprob: -19.75

Token 431: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -5.6100132496794686e-05
    2. '.split' → logprob: -10.625056266784668
    3. ' ].' → logprob: -10.750056266784668
    4. '().' → logprob: -12.500056266784668
    5. ').' → logprob: -13.000056266784668
    6. ']' → logprob: -13.125056266784668
    7. '()].' → logprob: -13.625056266784668
    8. ':].' → logprob: -15.000056266784668
    9. '.' → logprob: -15.250056266784668
    10. ''].' → logprob: -15.375056266784668

Token 432: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006715370807796717
    2. 'strip' → logprob: -5.006715297698975
    3. ' split' → logprob: -16.756715774536133
    4. 'rstrip' → logprob: -16.756715774536133
    5. '.split' → logprob: -19.881715774536133
    6. '.strip' → logprob: -21.381715774536133
    7. '_split' → logprob: -22.131715774536133
    8. ' strip' → logprob: -22.381715774536133
    9. 'plit' → logprob: -23.006715774536133
    10. '(split' → logprob: -23.131715774536133

Token 433: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003565575461834669
    2. '('' → logprob: -8.000356674194336
    3. '(' → logprob: -11.375356674194336
    4. '()
' → logprob: -12.250356674194336
    5. '())' → logprob: -12.750356674194336
    6. '()]' → logprob: -13.625356674194336
    7. '("' → logprob: -14.875356674194336
    8. '()

' → logprob: -16.500356674194336
    9. '()"' → logprob: -16.750356674194336
    10. '(),' → logprob: -16.875356674194336

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024113062769174576
    2. 'dom' → logprob: -3.774113178253174
    3. '   ' → logprob: -7.274113178253174
    4. ' dom' → logprob: -10.399112701416016
    5. '        
' → logprob: -10.524112701416016
    6. '(dom' → logprob: -10.524112701416016
    7. ' domino' → logprob: -10.649112701416016
    8. 'tokens' → logprob: -11.274112701416016
    9. '```' → logprob: -12.024112701416016
    10. '<|end|>' → logprob: -12.149112701416016

Token 435: ' domino' (ID: 133589)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.04602070525288582
    2. '       ' → logprob: -3.421020746231079
    3. ' domino' → logprob: -4.4210205078125
    4. ' dom' → logprob: -8.5460205078125
    5. '   ' → logprob: -9.7960205078125
    6. '```' → logprob: -12.1710205078125
    7. '_dom' → logprob: -12.2960205078125
    8. 'domin' → logprob: -12.9210205078125
    9. '           ' → logprob: -13.1710205078125
    10. 'domain' → logprob: -13.4210205078125

Token 436: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0019376773852854967
    2. 's' → logprob: -6.2519378662109375
    3. 'e' → logprob: -13.001937866210938
    4. 'dom' → logprob: -13.251937866210938
    5. '_list' → logprob: -13.376937866210938
    6. ' =' → logprob: -13.376937866210938
    7. 'ues' → logprob: -14.751937866210938
    8. '=' → logprob: -14.751937866210938
    9. 'les' → logprob: -14.876937866210938
    10. '_pairs' → logprob: -15.626937866210938

Token 437: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889099419116974
    2. '=' → logprob: -2.5788910388946533
    3. '=[]' → logprob: -13.828890800476074
    4. '=[' → logprob: -16.07889175415039
    5. ' =[' → logprob: -16.70389175415039
    6. '[:]' → logprob: -17.07889175415039
    7. '.' → logprob: -17.32889175415039
    8. ')' → logprob: -18.07889175415039
    9. '[' → logprob: -18.45389175415039
    10. '=parse' → logprob: -18.70389175415039

Token 438: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.47458329796791077
    2. '[' → logprob: -0.9745832681655884
    3. ' [' → logprob: -7.724583148956299
    4. '[List' → logprob: -10.224583625793457
    5. '[p' → logprob: -11.099583625793457
    6. 'list' → logprob: -11.974583625793457
    7. ' list' → logprob: -13.974583625793457
    8. '[pos' → logprob: -14.099583625793457
    9. '[get' → logprob: -14.349583625793457
    10. '[int' → logprob: -14.849583625793457

Token 439: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -4.320199877838604e-07
    2. ' parse' → logprob: -15.0
    3. '(parse' → logprob: -20.5
    4. 'par' → logprob: -23.25
    5. '	parse' → logprob: -23.5
    6. '=parse' → logprob: -23.5
    7. '   ' → logprob: -24.125
    8. 'parser' → logprob: -24.25
    9. 'parsed' → logprob: -24.875
    10. '.parse' → logprob: -25.25

Token 440: '_dom' (ID: 90214)
  Prédit: '_dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dom' → logprob: -0.006872848607599735
    2. 'dom' → logprob: -5.006872653961182
    3. 'd' → logprob: -9.63187313079834
    4. '(s' → logprob: -10.38187313079834
    5. '(dom' → logprob: -10.50687313079834
    6. 's' → logprob: -11.38187313079834
    7. '_d' → logprob: -12.50687313079834
    8. '(' → logprob: -12.63187313079834
    9. '_' → logprob: -12.75687313079834
    10. 'Dom' → logprob: -13.13187313079834

Token 441: 'ino' (ID: 2081)
  Prédit: 'ino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -0.0005763856461271644
    2. '_str' → logprob: -9.25057601928711
    3. 'no' → logprob: -9.37557601928711
    4. '[' → logprob: -9.75057601928711
    5. 'o' → logprob: -10.25057601928711
    6. '```' → logprob: -10.62557601928711
    7. '(' → logprob: -10.87557601928711
    8. 'inos' → logprob: -10.87557601928711
    9. '   ' → logprob: -11.12557601928711
    10. '       ' → logprob: -11.25057601928711

Token 442: '(d' (ID: 2572)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.7722615599632263
    2. '(ds' → logprob: -0.8972615599632263
    3. '(dom' → logprob: -2.272261619567871
    4. '(d' → logprob: -3.897261619567871
    5. '(x' → logprob: -5.647261619567871
    6. 'ds' → logprob: -6.147261619567871
    7. '(token' → logprob: -7.522261619567871
    8. 'dom' → logprob: -8.022261619567871
    9. 's' → logprob: -8.272261619567871
    10. 'token' → logprob: -10.522261619567871

Token 443: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004851306148339063
    2. 's' → logprob: -8.25048542022705
    3. 'str' → logprob: -8.50048542022705
    4. 'tr' → logprob: -12.00048542022705
    5. 'r' → logprob: -12.50048542022705
    6. 'd' → logprob: -12.62548542022705
    7. ')]' → logprob: -13.12548542022705
    8. '_str' → logprob: -13.75048542022705
    9. 'dom' → logprob: -14.25048542022705
    10. '))' → logprob: -14.37548542022705

Token 444: ' for' (ID: 395)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.020502766594290733
    2. '(dom' → logprob: -4.52050256729126
    3. '(s' → logprob: -5.39550256729126
    4. ' for' → logprob: -5.89550256729126
    5. ')' → logprob: -6.64550256729126
    6. 'for' → logprob: -7.89550256729126
    7. 'dom' → logprob: -8.895503044128418
    8. '(' → logprob: -8.895503044128418
    9. ' (' → logprob: -9.895503044128418
    10. '(token' → logprob: -10.145503044128418

Token 445: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3657998740673065
    2. 'dom' → logprob: -1.615799903869629
    3. ' domino' → logprob: -2.865799903869629
    4. ' d' → logprob: -2.990799903869629
    5. ' dom' → logprob: -7.865799903869629
    6. '	d' → logprob: -9.990799903869629
    7. '_dom' → logprob: -12.490799903869629
    8. ' ' → logprob: -13.615799903869629
    9. '(dom' → logprob: -13.740799903869629
    10. ')d' → logprob: -13.865799903869629

Token 446: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1618468463420868
    2. 'in' → logprob: -2.786846876144409
    3. ' domino' → logprob: -3.161846876144409
    4. 'd' → logprob: -3.786846876144409
    5. 'dom' → logprob: -4.16184663772583
    6. ' d' → logprob: -5.03684663772583
    7. '_dom' → logprob: -8.661847114562988
    8. 's' → logprob: -9.286847114562988
    9. ' ' → logprob: -9.411847114562988
    10. ' Domino' → logprob: -9.786847114562988

Token 447: ' domino' (ID: 133589)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.0011726059019565582
    2. ' domino' → logprob: -6.7511725425720215
    3. '(dom' → logprob: -13.12617301940918
    4. ' dom' → logprob: -15.87617301940918
    5. '   ' → logprob: -16.25117301940918
    6. ' ' → logprob: -17.12617301940918
    7. 'domin' → logprob: -17.50117301940918
    8. '
' → logprob: -17.75117301940918
    9. '/dom' → logprob: -18.00117301940918
    10. '```' → logprob: -18.25117301940918

Token 448: '_str' (ID: 6182)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.24064451456069946
    2. '_str' → logprob: -1.6156444549560547
    3. 'ues' → logprob: -4.740644454956055
    4. 'str' → logprob: -5.615644454956055
    5. 'ces' → logprob: -6.365644454956055
    6. 's' → logprob: -7.240644454956055
    7. 'zes' → logprob: -8.740644454956055
    8. 'des' → logprob: -10.240644454956055
    9. 'oes' → logprob: -11.115644454956055
    10. ')' → logprob: -11.240644454956055

Token 449: 's' (ID: 82)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.6440631747245789
    2. 's' → logprob: -0.7690631747245789
    3. 'ues' → logprob: -5.2690629959106445
    4. 'dom' → logprob: -6.6440629959106445
    5. 'ings' → logprob: -7.0190629959106445
    6. 'ing' → logprob: -7.1440629959106445
    7. '   ' → logprob: -7.1440629959106445
    8. '       ' → logprob: -8.019062995910645
    9. 'i' → logprob: -8.394062995910645
    10. 'ies' → logprob: -8.519062995910645

Token 450: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017285997048020363
    2. '       ' → logprob: -4.1422858238220215
    3. '   ' → logprob: -7.3922858238220215
    4. ' ]' → logprob: -7.8922858238220215
    5. ')]' → logprob: -8.64228630065918
    6. ')' → logprob: -9.64228630065918
    7. '           ' → logprob: -12.39228630065918
    8. '])' → logprob: -12.51728630065918
    9. ']
' → logprob: -13.01728630065918
    10. '()]' → logprob: -13.14228630065918

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003694205661304295
    2. '   ' → logprob: -8.12536907196045
    3. 'if' → logprob: -10.00036907196045
    4. ' if' → logprob: -10.62536907196045
    5. '<|end|>' → logprob: -13.25036907196045
    6. 'result' → logprob: -13.62536907196045
    7. '        
' → logprob: -15.50036907196045
    8. '```' → logprob: -15.50036907196045
    9. '           ' → logprob: -15.87536907196045
    10. ' result' → logprob: -16.375370025634766

Token 452: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4764232039451599
    2. 'if' → logprob: -1.2264232635498047
    3. 'result' → logprob: -2.4764232635498047
    4. ' if' → logprob: -7.101423263549805
    5. 'can' → logprob: -8.101423263549805
    6. ' print' → logprob: -8.726423263549805
    7. 'res' → logprob: -8.976423263549805
    8. '   ' → logprob: -9.476423263549805
    9. ' result' → logprob: -9.601423263549805
    10. '       ' → logprob: -10.476423263549805

Token 453: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0645793080329895
    2. '(can' → logprob: -2.8145792484283447
    3. '(' → logprob: -6.064579486846924
    4. '('' → logprob: -8.189579010009766
    5. '(int' → logprob: -12.564579010009766
    6. '(("' → logprob: -13.939579010009766
    7. '"' → logprob: -14.189579010009766
    8. 'can' → logprob: -14.439579010009766
    9. '(bool' → logprob: -14.939579010009766
    10. '(True' → logprob: -14.939579010009766

Token 454: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.6265296339988708
    2. 'Yes' → logprob: -1.3765296936035156
    3. '"' → logprob: -1.7515296936035156
    4. 'Possible' → logprob: -3.3765296936035156
    5. 'True' → logprob: -6.001529693603516
    6. 'Valid' → logprob: -7.001529693603516
    7. 'Can' → logprob: -7.126529693603516
    8. 'true' → logprob: -8.126529693603516
    9. ''' → logprob: -8.751529693603516
    10. '""' → logprob: -9.001529693603516

Token 455: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09105466306209564
    2. '")' → logprob: -2.466054677963257
    3. ' if' → logprob: -6.216054439544678
    4. 'if' → logprob: -9.716054916381836
    5. '```' → logprob: -10.966054916381836
    6. '\n' → logprob: -11.966054916381836
    7. '"If' → logprob: -11.966054916381836
    8. ' ")' → logprob: -12.466054916381836
    9. '",' → logprob: -12.716054916381836
    10. '");' → logprob: -12.841054916381836

Token 456: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.025744881480932236
    2. 'if' → logprob: -3.775744915008545
    3. ')' → logprob: -6.025744915008545
    4. '"' → logprob: -9.525744438171387
    5. '   ' → logprob: -13.150744438171387
    6. ' ' → logprob: -13.400744438171387
    7. ',' → logprob: -13.650744438171387
    8. '")' → logprob: -14.150744438171387
    9. ' ' → logprob: -14.900744438171387
    10. ' )' → logprob: -15.025744438171387

Token 457: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.1269676834344864
    2. 'can' → logprob: -2.126967668533325
    3. '_can' → logprob: -10.501967430114746
    4. '	can' → logprob: -11.876967430114746
    5. '(can' → logprob: -12.251967430114746
    6. 'Can' → logprob: -15.126967430114746
    7. '.can' → logprob: -15.751967430114746
    8. '-can' → logprob: -18.251968383789062
    9. ' Can' → logprob: -19.126968383789062
    10. ' ' → logprob: -19.501968383789062

Token 458: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.5094070477061905e-05
    2. 'arr' → logprob: -11.125015258789062
    3. '_can' → logprob: -15.125015258789062
    4. '_' → logprob: -17.625015258789062
    5. '_are' → logprob: -17.875015258789062
    6. 'Arrange' → logprob: -18.125015258789062
    7. ')' → logprob: -18.250015258789062
    8. '_ar' → logprob: -18.500015258789062
    9. '-arr' → logprob: -19.000015258789062
    10. '_array' → logprob: -19.250015258789062

Token 459: 'ange' (ID: 1052)
  Prédit: 'ange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -2.2961512513575144e-05
    2. 'age' → logprob: -11.750022888183594
    3. 'range' → logprob: -13.250022888183594
    4. 'nge' → logprob: -13.250022888183594
    5. 'anged' → logprob: -13.500022888183594
    6. 'an' → logprob: -13.625022888183594
    7. 'angep' → logprob: -13.625022888183594
    8. 'angle' → logprob: -14.000022888183594
    9. 'ane' → logprob: -14.125022888183594
    10. ' ange' → logprob: -14.250022888183594

Token 460: '_dom' (ID: 90214)
  Prédit: '_dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dom' → logprob: -0.00025037277373485267
    2. 'dom' → logprob: -8.625250816345215
    3. '(dom' → logprob: -9.625250816345215
    4. '_' → logprob: -12.625250816345215
    5. '/dom' → logprob: -15.375250816345215
    6. ' domino' → logprob: -15.500250816345215
    7. '_domain' → logprob: -15.875250816345215
    8. '_DOM' → logprob: -16.0002498626709
    9. 'Dom' → logprob: -16.6252498626709
    10. '_arr' → logprob: -16.7502498626709

Token 461: 'ino' (ID: 2081)
  Prédit: 'ino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -0.06741542369127274
    2. 'ine' → logprob: -3.567415475845337
    3. 'ange' → logprob: -3.942415475845337
    4. 'in' → logprob: -5.067415237426758
    5. 'angle' → logprob: -5.567415237426758
    6. 'ain' → logprob: -6.317415237426758
    7. 'one' → logprob: -6.942415237426758
    8. 'dom' → logprob: -7.067415237426758
    9. 'inue' → logprob: -7.192415237426758
    10. 'on' → logprob: -7.567415237426758

Token 462: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -5.073596548754722e-05
    2. 'dom' → logprob: -10.12505054473877
    3. 'les' → logprob: -12.87505054473877
    4. 'ues' → logprob: -13.25005054473877
    5. ' domino' → logprob: -13.25005054473877
    6. 'oes' → logprob: -13.37505054473877
    7. '(dom' → logprob: -13.75005054473877
    8. '_dom' → logprob: -14.37505054473877
    9. 'e' → logprob: -15.12505054473877
    10. '```' → logprob: -15.37505054473877

Token 463: '(dom' (ID: 126371)
  Prédit: '(dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dom' → logprob: 0.0
    2. '(' → logprob: -17.125
    3. '(domain' → logprob: -18.25
    4. '/dom' → logprob: -18.5
    5. ' (' → logprob: -18.625
    6. 'dom' → logprob: -19.5
    7. ')' → logprob: -20.125
    8. '(
' → logprob: -20.5
    9. '(dim' → logprob: -20.5
    10. '(div' → logprob: -21.25

Token 464: 'ino' (ID: 2081)
  Prédit: 'ino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -2.3795937522663735e-05
    2. 'o' → logprob: -11.12502384185791
    3. 'in' → logprob: -12.62502384185791
    4. 'oes' → logprob: -13.12502384185791
    5. 'inos' → logprob: -13.37502384185791
    6. 'ines' → logprob: -14.12502384185791
    7. 'zo' → logprob: -14.62502384185791
    8. 'ино' → logprob: -15.75002384185791
    9. 'es' → logprob: -16.000022888183594
    10. 'INO' → logprob: -16.125022888183594

Token 465: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -4.842555426876061e-06
    2. ')' → logprob: -12.375004768371582
    3. 'e' → logprob: -14.875004768371582
    4. 's' → logprob: -16.1250057220459
    5. ']' → logprob: -16.7500057220459
    6. '[' → logprob: -17.0000057220459
    7. '```' → logprob: -17.3750057220459
    8. ')
' → logprob: -17.6250057220459
    9. '   ' → logprob: -18.0000057220459
    10. 'les' → logprob: -18.6250057220459

Token 466: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7765056490898132
    2. ' else' → logprob: -0.7765056490898132
    3. 'else' → logprob: -2.526505708694458
    4. ' )' → logprob: -11.151505470275879
    5. '()' → logprob: -11.401505470275879
    6. '   ' → logprob: -12.151505470275879
    7. ' ' → logprob: -13.151505470275879
    8. '==' → logprob: -13.276505470275879
    9. '))' → logprob: -13.526505470275879
    10. '```' → logprob: -13.776505470275879

Token 467: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.004421693738549948
    2. 'else' → logprob: -5.504421710968018
    3. ')' → logprob: -8.00442123413086
    4. '==' → logprob: -12.50442123413086
    5. ' )' → logprob: -13.50442123413086
    6. '	else' → logprob: -13.75442123413086
    7. '()' → logprob: -14.50442123413086
    8. '<|end|>' → logprob: -14.50442123413086
    9. '   ' → logprob: -14.75442123413086
    10. '[]' → logprob: -15.12942123413086

Token 468: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0008438145159743726
    2. ' "' → logprob: -7.1258440017700195
    3. ')' → logprob: -11.00084400177002
    4. '"No' → logprob: -11.00084400177002
    5. ' ' → logprob: -12.87584400177002
    6. '("' → logprob: -13.12584400177002
    7. ''' → logprob: -14.50084400177002
    8. '   ' → logprob: -15.50084400177002
    9. ' ' → logprob: -15.50084400177002
    10. '"I' → logprob: -16.000843048095703

Token 469: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0005966392927803099
    2. '"No' → logprob: -8.00059700012207
    3. ' No' → logprob: -8.25059700012207
    4. '"' → logprob: -16.75059700012207
    5. 'NO' → logprob: -19.25059700012207
    6. '“No' → logprob: -19.75059700012207
    7. ' ' → logprob: -19.75059700012207
    8. '>No' → logprob: -20.87559700012207
    9. '_No' → logprob: -21.00059700012207
    10. '   ' → logprob: -21.37559700012207

Token 470: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06670184433460236
    2. ')")' → logprob: -3.316701889038086
    3. ')' → logprob: -3.566701889038086
    4. '}")' → logprob: -12.566701889038086
    5. ')")
' → logprob: -15.191701889038086
    6. ')"' → logprob: -15.316701889038086
    7. '')' → logprob: -15.441701889038086
    8. '")
' → logprob: -15.566701889038086
    9. ')">' → logprob: -16.191701889038086
    10. '")}' → logprob: -16.441701889038086

Token 471: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002764710516203195
    2. ' if' → logprob: -8.500276565551758
    3. '
' → logprob: -10.500276565551758
    4. '```' → logprob: -10.750276565551758
    5. '<|end|>' → logprob: -11.000276565551758
    6. '#' → logprob: -12.375276565551758
    7. 'main' → logprob: -13.500276565551758
    8. '\n' → logprob: -13.875276565551758
    9. '\' → logprob: -15.000276565551758
    10. 'for' → logprob: -16.125276565551758

Token 472: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10021950304508209
    2. '__' → logprob: -2.350219488143921
    3. '_' → logprob: -11.9752197265625
    4. 'name' → logprob: -12.6002197265625
    5. '_name' → logprob: -13.6002197265625
    6. '___' → logprob: -14.4752197265625
    7. ' ' → logprob: -14.9752197265625
    8. ' ' → logprob: -15.7252197265625
    9. '/__' → logprob: -15.7252197265625
    10. 'Name' → logprob: -15.8502197265625

Token 473: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003770747222006321
    2. '==' → logprob: -5.75377082824707
    3. ' ==' → logprob: -8.62877082824707
    4. '[' → logprob: -9.00377082824707
    5. '__[' → logprob: -9.00377082824707
    6. '__.__' → logprob: -9.87877082824707
    7. '__*/' → logprob: -11.25377082824707
    8. '__["' → logprob: -11.25377082824707
    9. '<|end|>' → logprob: -11.25377082824707
    10. '___' → logprob: -11.37877082824707

Token 474: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00018625585653353482
    2. '__.__' → logprob: -9.0001859664917
    3. '==' → logprob: -9.7501859664917
    4. '__["' → logprob: -13.5001859664917
    5. '=="' → logprob: -13.7501859664917
    6. '__.' → logprob: -14.2501859664917
    7. ' ==' → logprob: -14.8751859664917
    8. '____' → logprob: -15.5001859664917
    9. '___' → logprob: -15.7501859664917
    10. '__*/' → logprob: -16.250186920166016

Token 475: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8416648507118225
    2. '__' → logprob: -1.2166647911071777
    3. ' ==' → logprob: -1.4666647911071777
    4. '=="' → logprob: -3.2166647911071777
    5. '=='' → logprob: -7.466664791107178
    6. '.__' → logprob: -8.091665267944336
    7. '"' → logprob: -8.091665267944336
    8. '["' → logprob: -8.216665267944336
    9. '===' → logprob: -8.841665267944336
    10. '__.__' → logprob: -9.091665267944336

Token 476: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014186544343829155
    2. ''' → logprob: -4.264186382293701
    3. ' "__' → logprob: -10.76418685913086
    4. '__' → logprob: -14.13918685913086
    5. '"user' → logprob: -14.76418685913086
    6. ' '__' → logprob: -15.63918685913086
    7. '"name' → logprob: -15.63918685913086
    8. '"default' → logprob: -16.63918685913086
    9. '("__' → logprob: -16.76418685913086
    10. ''"' → logprob: -16.88918685913086

Token 477: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0620700865983963
    2. '__' → logprob: -2.81207013130188
    3. 'name' → logprob: -9.8120698928833
    4. ''' → logprob: -10.9370698928833
    5. '"' → logprob: -11.1870698928833
    6. '__":
' → logprob: -12.4370698928833
    7. 'python' → logprob: -12.9370698928833
    8. '_main' → logprob: -13.0620698928833
    9. '```' → logprob: -13.3120698928833
    10. '___' → logprob: -13.9370698928833

Token 478: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10221156477928162
    2. '__' → logprob: -2.3522114753723145
    3. '__':
' → logprob: -6.2272114753723145
    4. '__.' → logprob: -11.977211952209473
    5. '__.__' → logprob: -11.977211952209473
    6. '__["' → logprob: -12.102211952209473
    7. '__:' → logprob: -12.227211952209473
    8. '__
' → logprob: -13.227211952209473
    9. '__
' → logprob: -13.727211952209473
    10. '__",' → logprob: -14.602211952209473

Token 479: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0008640571613796055
    2. '__' → logprob: -7.250864028930664
    3. '   ' → logprob: -9.375864028930664
    4. ' main' → logprob: -9.625864028930664
    5. '	main' → logprob: -12.875864028930664
    6. '_main' → logprob: -14.625864028930664
    7. '(main' → logprob: -16.250864028930664
    8. '___' → logprob: -17.000864028930664
    9. ' ' → logprob: -17.375864028930664
    10. '    
' → logprob: -17.375864028930664

Token 480: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.842555426876061e-06
    2. ' main' → logprob: -12.250004768371582
    3. '	main' → logprob: -17.5000057220459
    4. '   ' → logprob: -17.7500057220459
    5. 'import' → logprob: -23.1250057220459
    6. '_main' → logprob: -23.3750057220459
    7. '(main' → logprob: -24.7500057220459
    8. '.main' → logprob: -24.8750057220459
    9. 'Main' → logprob: -26.3750057220459
    10. ' ' → logprob: -26.8750057220459

Token 481: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 479
Tokens correctement prédits (1ère position, stricte): 223
Tokens correctement prédits (1ère position, avec adaptation): 234
Tokens correctement prédits (top 10): 413
Précision stricte (1ère position): 46.56%
Précision adaptée (1ère position): 48.85%
Précision (top 10): 86.22%
================================================================================
