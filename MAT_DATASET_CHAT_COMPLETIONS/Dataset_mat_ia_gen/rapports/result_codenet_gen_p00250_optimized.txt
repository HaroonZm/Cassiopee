================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def max_remainder(n, m, K):
    prefix = [0] * (n+1)
    for i in range(n):
        prefix[i+1] = prefix[i] + K[i]
    max_mod = 0
    left = 0
    for right in range(1, n+1):
        while left < right and prefix[right] - prefix[left] >= m:
            left += 1
        # check subarray [left-1,right-1] if left>0
        if left>0:
            val = (prefix[right] - prefix[left-1]) % m
            if val > max_mod:
                max_mod = val
        val = (prefix[right] - prefix[left]) % m
        if val > max_mod:
            max_mod = val
    return max_mod

input = sys.stdin.readline
while True:
    line = input()
    if not line:
        break
    n,m = map(int, line.split())
    if n == 0 and m == 0:
        break
    K = list(map(int, input().split()))
    print(max_remainder(n, m, K))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27202650904655457
    2. ' process' → logprob: -2.647026538848877
    3. ' read' → logprob: -3.022026538848877
    4. ' space' → logprob: -3.397026538848877
    5. ' main' → logprob: -3.772026538848877
    6. ' calculate' → logprob: -4.772026538848877
    7. ' my' → logprob: -5.022026538848877
    8. ' sys' → logprob: -5.272026538848877
    9. ' ' → logprob: -5.522026538848877
    10. ' def' → logprob: -5.772026538848877

Token 5: '_re' (ID: 3067)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00577046163380146
    2. '(' → logprob: -5.755770683288574
    3. '(_' → logprob: -6.755770683288574
    4. ' _' → logprob: -7.005770683288574
    5. '_length' → logprob: -9.130770683288574
    6. '_size' → logprob: -9.380770683288574
    7. '(_)' → logprob: -9.505770683288574
    8. 'imum' → logprob: -10.380770683288574
    9. '_space' → logprob: -10.505770683288574
    10. '_max' → logprob: -10.630770683288574

Token 6: 'mainder' (ID: 40886)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.10731183737516403
    2. 'ad' → logprob: -2.357311725616455
    3. 'd' → logprob: -6.107311725616455
    4. 's' → logprob: -6.982311725616455
    5. 'm' → logprob: -7.107311725616455
    6. 't' → logprob: -7.357311725616455
    7. 'ward' → logprob: -7.732311725616455
    8. 'c' → logprob: -7.857311725616455
    9. 'f' → logprob: -8.357312202453613
    10. 'ady' → logprob: -8.482312202453613

Token 7: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0793052539229393
    2. '_' → logprob: -2.5793051719665527
    3. '(a' → logprob: -8.704305648803711
    4. '_(' → logprob: -9.954305648803711
    5. '(x' → logprob: -10.079305648803711
    6. '(_' → logprob: -10.454305648803711
    7. ' (' → logprob: -10.704305648803711
    8. '_:' → logprob: -11.079305648803711
    9. '(max' → logprob: -11.954305648803711
    10. '(s' → logprob: -12.079305648803711

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005919939721934497
    2. '):' → logprob: -7.750592231750488
    3. ')' → logprob: -9.000592231750488
    4. ' ,' → logprob: -10.375592231750488
    5. ':' → logprob: -13.000592231750488
    6. ',n' → logprob: -13.625592231750488
    7. ' ' → logprob: -14.625592231750488
    8. ' ):' → logprob: -15.125592231750488
    9. ',
' → logprob: -15.375592231750488
    10. ',p' → logprob: -15.625592231750488

Token 9: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.49583378434181213
    2. ' k' → logprob: -1.7458337545394897
    3. ' d' → logprob: -2.1208338737487793
    4. 'm' → logprob: -3.1208338737487793
    5. 'k' → logprob: -3.2458338737487793
    6. 'd' → logprob: -4.745833873748779
    7. ' x' → logprob: -6.870833873748779
    8. ' divisor' → logprob: -6.870833873748779
    9. ' b' → logprob: -7.245833873748779
    10. ' a' → logprob: -7.620833873748779

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016586360288783908
    2. ')' → logprob: -6.5016584396362305
    3. ',' → logprob: -9.62665843963623
    4. ':' → logprob: -10.12665843963623
    5. ' ):' → logprob: -11.00165843963623
    6. '):
' → logprob: -11.00165843963623
    7. ''):' → logprob: -11.50165843963623
    8. '*' → logprob: -14.00165843963623
    9. '"):' → logprob: -14.25165843963623
    10. '=' → logprob: -14.25165843963623

Token 11: ' K' (ID: 658)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.051213763654232025
    2. 'k' → logprob: -3.4262137413024902
    3. ' ' → logprob: -5.05121374130249
    4. ' )' → logprob: -5.92621374130249
    5. ' ):' → logprob: -6.30121374130249
    6. ' x' → logprob: -6.67621374130249
    7. ' r' → logprob: -6.80121374130249
    8. ' i' → logprob: -7.17621374130249
    9. ' a' → logprob: -7.17621374130249
    10. ' p' → logprob: -7.17621374130249

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007675602566450834
    2. ')' → logprob: -4.882675647735596
    3. ',' → logprob: -10.382675170898438
    4. ' ):' → logprob: -11.007675170898438
    5. ''):' → logprob: -11.757675170898438
    6. '):
' → logprob: -12.007675170898438
    7. ':' → logprob: -12.507675170898438
    8. ' ' → logprob: -14.257675170898438
    9. '   ' → logprob: -14.757675170898438
    10. '"):' → logprob: -14.882675170898438

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011407007463276386
    2. '   ' → logprob: -4.761406898498535
    3. ':
' → logprob: -6.011406898498535
    4. ' :' → logprob: -8.886406898498535
    5. ' ' → logprob: -9.636406898498535
    6. '):' → logprob: -10.511406898498535
    7. '    ' → logprob: -11.261406898498535
    8. '':' → logprob: -11.511406898498535
    9. ',' → logprob: -11.636406898498535
    10. '":' → logprob: -11.761406898498535

Token 14: ' prefix' (ID: 18633)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5831503868103027
    2. 'max' → logprob: -1.3331503868103027
    3. '   ' → logprob: -2.0831503868103027
    4. ' ' → logprob: -3.5831503868103027
    5. ':' → logprob: -5.083150386810303
    6. '    ' → logprob: -5.583150386810303
    7. ' return' → logprob: -5.833150386810303
    8. 'r' → logprob: -6.333150386810303
    9. ' 
' → logprob: -6.458150386810303
    10. 'return' → logprob: -6.583150386810303

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.887270450592041
    2. '_sum' → logprob: -0.887270450592041
    3. '_s' → logprob: -1.762270450592041
    4. ' =' → logprob: -5.887270450592041
    5. 's' → logprob: -7.262270450592041
    6. ' _' → logprob: -8.137269973754883
    7. '_max' → logprob: -8.262269973754883
    8. '[' → logprob: -8.637269973754883
    9. 'sum' → logprob: -9.387269973754883
    10. '_len' → logprob: -9.762269973754883

Token 16: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.04308585450053215
    2. '[' → logprob: -3.168085813522339
    3. ' ' → logprob: -10.293086051940918
    4. '0' → logprob: -10.543086051940918
    5. ' []' → logprob: -11.543086051940918
    6. '[n' → logprob: -11.668086051940918
    7. '[]' → logprob: -12.543086051940918
    8. '[a' → logprob: -13.918086051940918
    9. '[len' → logprob: -14.418086051940918
    10. '[m' → logprob: -14.668086051940918

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '-' → logprob: -17.6250057220459
    4. ')' → logprob: -18.5000057220459
    5. ']' → logprob: -19.0000057220459
    6. '[' → logprob: -19.5000057220459
    7. '   ' → logprob: -19.6250057220459
    8. '1' → logprob: -19.9375057220459
    9. '۰' → logprob: -20.0000057220459
    10. '00' → logprob: -20.1875057220459

Token 18: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007079057977534831
    2. ']*(' → logprob: -8.000707626342773
    3. ' ]' → logprob: -8.125707626342773
    4. ']*' → logprob: -10.500707626342773
    5. ' for' → logprob: -10.750707626342773
    6. ',' → logprob: -11.000707626342773
    7. ')' → logprob: -12.625707626342773
    8. ']int' → logprob: -13.250707626342773
    9. 'for' → logprob: -13.500707626342773
    10. ')]' → logprob: -13.875707626342773

Token 19: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08747085928916931
    2. ' for' → logprob: -3.337470769882202
    3. ',' → logprob: -3.462470769882202
    4. ' ]' → logprob: -4.712471008300781
    5. 'for' → logprob: -5.962471008300781
    6. '0' → logprob: -6.962471008300781
    7. ' *' → logprob: -7.212471008300781
    8. '*' → logprob: -7.337471008300781
    9. ']*' → logprob: -7.337471008300781
    10. ']*(' → logprob: -7.462471008300781

Token 20: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018106164410710335
    2. '(m' → logprob: -4.393105983734131
    3. '(K' → logprob: -5.643105983734131
    4. '(' → logprob: -6.518105983734131
    5. ' (' → logprob: -8.143106460571289
    6. '(len' → logprob: -9.018106460571289
    7. '(N' → logprob: -9.643106460571289
    8. '(k' → logprob: -10.143106460571289
    9. 'n' → logprob: -10.893106460571289
    10. 'm' → logprob: -11.393106460571289

Token 21: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012019431218504906
    2. 'm' → logprob: -5.137019634246826
    3. ' n' → logprob: -5.512019634246826
    4. 'K' → logprob: -6.262019634246826
    5. '(n' → logprob: -9.512019157409668
    6. 'len' → logprob: -10.762019157409668
    7. ' K' → logprob: -11.262019157409668
    8. ' m' → logprob: -12.012019157409668
    9. ' ' → logprob: -12.887019157409668
    10. '(' → logprob: -12.887019157409668

Token 22: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020550761371850967
    2. ' +' → logprob: -3.8955507278442383
    3. ')' → logprob: -11.895550727844238
    4. '1' → logprob: -14.395550727844238
    5. '+)' → logprob: -14.770550727844238
    6. '+
' → logprob: -15.145550727844238
    7. ' ' → logprob: -15.145550727844238
    8. ' +
' → logprob: -15.895550727844238
    9. ' )' → logprob: -16.770551681518555
    10. '2' → logprob: -17.020551681518555

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -9.875052452087402
    3. '2' → logprob: -14.750052452087402
    4. '   ' → logprob: -16.500051498413086
    5. '  ' → logprob: -17.000051498413086
    6. ')' → logprob: -17.562551498413086
    7. '```' → logprob: -17.562551498413086
    8. 'm' → logprob: -18.187551498413086
    9. '１' → logprob: -18.250051498413086
    10. '10' → logprob: -18.312551498413086

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011450992315076292
    2. ')
' → logprob: -9.250114440917969
    3. ' )' → logprob: -11.375114440917969
    4. ')

' → logprob: -13.250114440917969
    5. '<|end|>' → logprob: -13.375114440917969
    6. ' ' → logprob: -14.125114440917969
    7. ']' → logprob: -14.500114440917969
    8. '   ' → logprob: -14.750114440917969
    9. '),' → logprob: -15.000114440917969
    10. '```' → logprob: -15.250114440917969

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7447600960731506
    2. ' for' → logprob: -0.9947600960731506
    3. 'for' → logprob: -2.744760036468506
    4. '
' → logprob: -3.244760036468506
    5. '<|end|>' → logprob: -3.494760036468506
    6. ' ' → logprob: -4.869760036468506
    7. ' 
' → logprob: -5.494760036468506
    8. '	for' → logprob: -5.994760036468506
    9. '    
' → logprob: -5.994760036468506
    10. '\n' → logprob: -6.994760036468506

Token 26: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3869808316230774
    2. ' for' → logprob: -1.1369807720184326
    3. '	for' → logprob: -10.261981010437012
    4. '   ' → logprob: -10.386981010437012
    5. '
' → logprob: -10.886981010437012
    6. '```' → logprob: -11.386981010437012
    7. ' 
' → logprob: -12.261981010437012
    8. ' ' → logprob: -12.636981010437012
    9. '    
' → logprob: -13.136981010437012
    10. '\n' → logprob: -13.636981010437012

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0010896162129938602
    2. 'i' → logprob: -6.876089572906494
    3. ' range' → logprob: -10.376090049743652
    4. ' ' → logprob: -10.751090049743652
    5. '_' → logprob: -13.251090049743652
    6. ' _' → logprob: -14.251090049743652
    7. '	i' → logprob: -14.626090049743652
    8. ' ' → logprob: -14.751090049743652
    9. '_i' → logprob: -15.501090049743652
    10. ' in' → logprob: -15.751090049743652

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004394867457449436
    2. 'in' → logprob: -5.504395008087158
    3. ' ' → logprob: -8.12939453125
    4. '	in' → logprob: -12.00439453125
    5. '  ' → logprob: -12.37939453125
    6. '+' → logprob: -12.50439453125
    7. '```' → logprob: -14.12939453125
    8. '1' → logprob: -14.12939453125
    9. '   ' → logprob: -14.25439453125
    10. ' i' → logprob: -14.37939453125

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006716436706483364
    2. 'range' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.25671672821045
    4. '	range' → logprob: -15.63171672821045
    5. '(range' → logprob: -16.006715774536133
    6. ' xrange' → logprob: -16.506715774536133
    7. '  ' → logprob: -17.506715774536133
    8. '   ' → logprob: -18.006715774536133
    9. ' ' → logprob: -19.256715774536133
    10. '```' → logprob: -19.756715774536133

Token 30: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012222514487802982
    2. '(n' → logprob: -6.751222133636475
    3. ' (' → logprob: -10.001222610473633
    4. ' ' → logprob: -12.251222610473633
    5. '(i' → logprob: -13.751222610473633
    6. '   ' → logprob: -15.001222610473633
    7. '1' → logprob: -15.126222610473633
    8. '(len' → logprob: -16.001222610473633
    9. '(
' → logprob: -16.251222610473633
    10. '()' → logprob: -18.001222610473633

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03184689208865166
    2. '):
' → logprob: -3.6568470001220703
    3. '+' → logprob: -5.28184700012207
    4. ' ):' → logprob: -9.40684700012207
    5. '1' → logprob: -9.53184700012207
    6. ')' → logprob: -9.53184700012207
    7. '-' → logprob: -9.65684700012207
    8. '   ' → logprob: -9.78184700012207
    9. ' +' → logprob: -10.53184700012207
    10. ',' → logprob: -11.03184700012207

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5703787207603455
    2. ' prefix' → logprob: -1.0703787803649902
    3. '   ' → logprob: -2.4453787803649902
    4. 'prefix' → logprob: -5.69537878036499
    5. '    ' → logprob: -8.195378303527832
    6. '(prefix' → logprob: -8.320378303527832
    7. ',' → logprob: -8.570378303527832
    8. ' ' → logprob: -8.695378303527832
    9. '_prefix' → logprob: -9.320378303527832
    10. ' ' → logprob: -9.320378303527832

Token 33: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.007978750392794609
    2. 'prefix' (adapté à ' prefix') → logprob: -5.507978916168213
    3. '       ' → logprob: -5.757978916168213
    4. '   ' → logprob: -7.257978916168213
    5. '_prefix' → logprob: -11.757978439331055
    6. '```' → logprob: -12.132978439331055
    7. '    ' → logprob: -12.882978439331055
    8. '(prefix' → logprob: -13.007978439331055
    9. ' if' → logprob: -13.507978439331055
    10. ' ' → logprob: -13.882978439331055

Token 34: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.429880827665329
    2. '[' → logprob: -1.0548808574676514
    3. ' [' → logprob: -7.804880619049072
    4. ']' → logprob: -8.67988109588623
    5. ' +=' → logprob: -9.30488109588623
    6. '[I' → logprob: -9.42988109588623
    7. '```' → logprob: -9.55488109588623
    8. '[j' → logprob: -10.17988109588623
    9. '[n' → logprob: -10.42988109588623
    10. '+' → logprob: -10.42988109588623

Token 35: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.024034500122070312
    2. ' +' → logprob: -4.02403450012207
    3. ']' → logprob: -5.14903450012207
    4. ' ]' → logprob: -10.27403450012207
    5. '+]' → logprob: -11.27403450012207
    6. ')' → logprob: -12.52403450012207
    7. '=' → logprob: -12.77403450012207
    8. ']+' → logprob: -13.27403450012207
    9. ']+=' → logprob: -13.27403450012207
    10. '1' → logprob: -13.27403450012207

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004167437553405762
    2. ' ' → logprob: -5.504167556762695
    3. ']' → logprob: -9.879167556762695
    4. ')' → logprob: -11.004167556762695
    5. '+' → logprob: -11.754167556762695
    6. '   ' → logprob: -11.879167556762695
    7. '```' → logprob: -13.254167556762695
    8. ' ]' → logprob: -13.941667556762695
    9. '  ' → logprob: -14.566667556762695
    10. ' +' → logprob: -15.191667556762695

Token 37: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49908655881881714
    2. '=' → logprob: -1.499086618423462
    3. ']' → logprob: -2.624086618423462
    4. ')' → logprob: -2.624086618423462
    5. ' +=' → logprob: -4.874086380004883
    6. ' ]' → logprob: -4.874086380004883
    7. ' )' → logprob: -5.124086380004883
    8. ' ' → logprob: -7.124086380004883
    9. ']=' → logprob: -7.124086380004883
    10. ')=' → logprob: -7.499086380004883

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.263054758310318
    2. ' =' → logprob: -1.5130547285079956
    3. ' +=' → logprob: -5.138054847717285
    4. '+=' → logprob: -5.263054847717285
    5. ' ^=' → logprob: -12.263054847717285
    6. ' |=' → logprob: -13.013054847717285
    7. ' ' → logprob: -13.263054847717285
    8. '%=' → logprob: -13.888054847717285
    9. ')' → logprob: -14.013054847717285
    10. '+' → logprob: -14.013054847717285

Token 39: ' prefix' (ID: 18633)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.11560147255659103
    2. ' (' → logprob: -2.7406015396118164
    3. 'prefix' → logprob: -3.2406015396118164
    4. ' prefix' → logprob: -5.240601539611816
    5. '(' → logprob: -10.115601539611816
    6. '   ' → logprob: -10.490601539611816
    7. '(max' → logprob: -10.740601539611816
    8. '(pref' → logprob: -10.865601539611816
    9. ' ' → logprob: -11.115601539611816
    10. '(p' → logprob: -11.865601539611816

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1517960956552997e-05
    2. 'i' → logprob: -12.125011444091797
    3. '```' → logprob: -12.750011444091797
    4. '[' → logprob: -13.000011444091797
    5. '[user' → logprob: -15.375011444091797
    6. '`' → logprob: -15.625011444091797
    7. '<|end|>' → logprob: -16.375011444091797
    8. '[I' → logprob: -16.375011444091797
    9. ' i' → logprob: -16.875011444091797
    10. '[index' → logprob: -16.875011444091797

Token 41: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5244967341423035
    2. ' +' → logprob: -0.8994967341423035
    3. ' ' → logprob: -7.649496555328369
    4. ']' → logprob: -8.024497032165527
    5. ' plus' → logprob: -8.774497032165527
    6. ']+' → logprob: -8.774497032165527
    7. ')' → logprob: -10.399497032165527
    8. '[' → logprob: -10.899497032165527
    9. '```' → logprob: -11.211997032165527
    10. '1' → logprob: -11.274497032165527

Token 42: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38692986965179443
    2. ' +' → logprob: -1.1369298696517944
    3. ' plus' → logprob: -11.011929512023926
    4. ' ' → logprob: -11.261929512023926
    5. '%' → logprob: -11.511929512023926
    6. ' ' → logprob: -12.011929512023926
    7. '*' → logprob: -13.011929512023926
    8. '+m' → logprob: -13.136929512023926
    9. '+i' → logprob: -13.886929512023926
    10. 'plus' → logprob: -14.136929512023926

Token 43: ' K' (ID: 658)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6708620190620422
    2. ' K' → logprob: -2.2958619594573975
    3. 'K' → logprob: -2.5458619594573975
    4. 'm' → logprob: -2.6708619594573975
    5. ' ' → logprob: -2.7958619594573975
    6. 'i' → logprob: -2.7958619594573975
    7. ' i' → logprob: -3.1708619594573975
    8. ' m' → logprob: -3.4208619594573975
    9. ' (' → logprob: -3.7958619594573975
    10. '(i' → logprob: -4.295862197875977

Token 44: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003617062233388424
    2. '[' → logprob: -5.628617286682129
    3. '\[' → logprob: -11.878617286682129
    4. '```' → logprob: -12.503617286682129
    5. '[m' → logprob: -13.753617286682129
    6. 'i' → logprob: -13.878617286682129
    7. '[I' → logprob: -13.878617286682129
    8. ' [' → logprob: -14.253617286682129
    9. '`' → logprob: -15.003617286682129
    10. '[
' → logprob: -15.128617286682129

Token 45: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00260467198677361
    2. ')' → logprob: -6.2526044845581055
    3. ' ]' → logprob: -8.377604484558105
    4. ')]' → logprob: -8.377604484558105
    5. '])' → logprob: -9.127604484558105
    6. '%' → logprob: -9.877604484558105
    7. '[' → logprob: -11.127604484558105
    8. ']%' → logprob: -11.127604484558105
    9. '[i' → logprob: -12.252604484558105
    10. ']
' → logprob: -12.252604484558105

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18835441768169403
    2. '   ' → logprob: -2.4383544921875
    3. '%' → logprob: -3.6883544921875
    4. ' %' → logprob: -3.9383544921875
    5. ' 
' → logprob: -4.5633544921875
    6. '
' → logprob: -4.6883544921875
    7. '    
' → logprob: -4.6883544921875
    8. ' ' → logprob: -5.8133544921875
    9. '[' → logprob: -6.1883544921875
    10. '  
' → logprob: -6.5633544921875

Token 47: ' max' (ID: 2999)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17611844837665558
    2. '   ' → logprob: -2.6761183738708496
    3. '\n' → logprob: -3.5511183738708496
    4. ' 
' → logprob: -3.8011183738708496
    5. ' ' → logprob: -4.05111837387085
    6. '
' → logprob: -5.42611837387085
    7. '```' → logprob: -5.55111837387085
    8. '  
' → logprob: -6.05111837387085
    9. '    
' → logprob: -6.30111837387085
    10. '' → logprob: -6.42611837387085

Token 48: '_mod' (ID: 15325)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014600500464439392
    2. '_re' → logprob: -4.6396002769470215
    3. '_val' → logprob: -5.8896002769470215
    4. '_rem' → logprob: -7.3896002769470215
    5. '_sum' → logprob: -8.26460075378418
    6. '_value' → logprob: -8.38960075378418
    7. '_prefix' → logprob: -8.38960075378418
    8. '_r' → logprob: -8.63960075378418
    9. '(' → logprob: -8.63960075378418
    10. '_mod' → logprob: -9.51460075378418

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20624645054340363
    2. '=' → logprob: -1.7062464952468872
    3. 'ulo' → logprob: -5.956246376037598
    4. 'ulus' → logprob: -6.581246376037598
    5. '_value' → logprob: -8.206246376037598
    6. '_val' → logprob: -8.206246376037598
    7. ' ' → logprob: -9.706246376037598
    8. 'ule' → logprob: -10.081246376037598
    9. 'ulos' → logprob: -10.206246376037598
    10. ',' → logprob: -10.206246376037598

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7523235082626343
    2. ' ' → logprob: -1.7523235082626343
    3. 'm' → logprob: -1.7523235082626343
    4. '-' → logprob: -2.502323627471924
    5. ' m' → logprob: -2.877323627471924
    6. ' -' → logprob: -3.252323627471924
    7. 'max' → logprob: -6.627323627471924
    8. ' max' → logprob: -6.752323627471924
    9. ' (' → logprob: -7.127323627471924
    10. '-m' → logprob: -7.377323627471924

Token 51: '0' (ID: 15)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6463547945022583
    2. '0' → logprob: -0.8963547945022583
    3. '-' → logprob: -3.0213546752929688
    4. ' m' → logprob: -5.396354675292969
    5. 'max' → logprob: -5.396354675292969
    6. ' ' → logprob: -5.521354675292969
    7. ' -' → logprob: -6.021354675292969
    8. '-m' → logprob: -6.771354675292969
    9. '(m' → logprob: -7.396354675292969
    10. 'prefix' → logprob: -7.646354675292969

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20695017278194427
    2. '   ' → logprob: -2.8319501876831055
    3. '    
' → logprob: -3.0819501876831055
    4. ' 
' → logprob: -3.2069501876831055
    5. '<|end|>' → logprob: -4.0819501876831055
    6. ' for' → logprob: -4.8319501876831055
    7. '  
' → logprob: -5.3319501876831055
    8. '\n' → logprob: -5.8319501876831055
    9. '
' → logprob: -6.2069501876831055
    10. ' ' → logprob: -6.7069501876831055

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12044145166873932
    2. '
' → logprob: -2.995441436767578
    3. '\n' → logprob: -4.120441436767578
    4. ' for' → logprob: -4.495441436767578
    5. '<|end|>' → logprob: -4.495441436767578
    6. ' 
' → logprob: -4.620441436767578
    7. '    
' → logprob: -4.745441436767578
    8. '  
' → logprob: -5.995441436767578
    9. ' ' → logprob: -6.495441436767578
    10. '   
' → logprob: -7.495441436767578

Token 54: ' left' (ID: 3561)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08015557378530502
    2. 'for' → logprob: -2.705155611038208
    3. '   ' → logprob: -4.705155372619629
    4. ' from' → logprob: -8.205155372619629
    5. ' j' → logprob: -8.955155372619629
    6. ' mod' → logprob: -9.080155372619629
    7. '```' → logprob: -9.205155372619629
    8. 'from' → logprob: -9.330155372619629
    9. 'mod' → logprob: -9.455155372619629
    10. ' stack' → logprob: -10.455155372619629

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06210179626941681
    2. '=' → logprob: -3.1871018409729004
    3. ',' → logprob: -4.4371018409729
    4. ' ,' → logprob: -5.1871018409729
    5. ' ' → logprob: -6.6871018409729
    6. '<|end|>' → logprob: -8.812101364135742
    7. '<|end|>' → logprob: -10.562101364135742
    8. '  ' → logprob: -10.687101364135742
    9. ')' → logprob: -11.312101364135742
    10. ' +=' → logprob: -11.437101364135742

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07002902776002884
    2. ' ' → logprob: -2.6950290203094482
    3. '1' → logprob: -9.445029258728027
    4. '<|end|>' → logprob: -12.320029258728027
    5. '```' → logprob: -13.382529258728027
    6. '   ' → logprob: -13.820029258728027
    7. ' defaultdict' → logprob: -13.882529258728027
    8. '[' → logprob: -14.320029258728027
    9. ' ' → logprob: -14.320029258728027
    10. '  ' → logprob: -15.007529258728027

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001379879075102508
    2. ' ' → logprob: -6.75137996673584
    3. '1' → logprob: -8.50137996673584
    4. '-' → logprob: -13.00137996673584
    5. ' -' → logprob: -14.18887996673584
    6. 'prefix' → logprob: -14.25137996673584
    7. '```' → logprob: -14.37637996673584
    8. '   ' → logprob: -14.87637996673584
    9. '[' → logprob: -15.31387996673584
    10. '  ' → logprob: -15.81387996673584

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39318540692329407
    2. '   ' → logprob: -2.2681853771209717
    3. '<|end|>' → logprob: -2.2681853771209717
    4. ' for' → logprob: -2.5181853771209717
    5. 'for' → logprob: -3.6431853771209717
    6. '```' → logprob: -5.268185615539551
    7. ' 
' → logprob: -6.768185615539551
    8. '<|end|>' → logprob: -6.768185615539551
    9. '    
' → logprob: -6.893185615539551
    10. ' ' → logprob: -7.143185615539551

Token 60: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15238723158836365
    2. ' for' → logprob: -2.0273871421813965
    3. '
' → logprob: -5.5273871421813965
    4. '   ' → logprob: -6.0273871421813965
    5. 'right' → logprob: -6.6523871421813965
    6. '<|end|>' → logprob: -6.6523871421813965
    7. '```' → logprob: -8.652387619018555
    8. ' ' → logprob: -8.652387619018555
    9. ' right' → logprob: -9.027387619018555
    10. '1' → logprob: -10.152387619018555

Token 61: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.020830782130360603
    2. 'right' → logprob: -4.6458306312561035
    3. ' ' → logprob: -5.0208306312561035
    4. ' in' → logprob: -5.5208306312561035
    5. ' i' → logprob: -9.395831108093262
    6. ' range' → logprob: -9.770831108093262
    7. '```' → logprob: -9.895831108093262
    8. ' j' → logprob: -10.145831108093262
    9. '	right' → logprob: -10.395831108093262
    10. 'in' → logprob: -10.395831108093262

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00532151572406292
    2. 'in' → logprob: -5.255321502685547
    3. ' ' → logprob: -9.380321502685547
    4. '	in' → logprob: -14.130321502685547
    5. '   ' → logprob: -14.880321502685547
    6. '<|end|>' → logprob: -15.005321502685547
    7. '    ' → logprob: -15.130321502685547
    8. ',' → logprob: -15.130321502685547
    9. '  ' → logprob: -15.505321502685547
    10. '```' → logprob: -15.505321502685547

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16026200354099274
    2. 'range' → logprob: -1.9102619886398315
    3. '(range' → logprob: -10.285262107849121
    4. '	range' → logprob: -13.410262107849121
    5. '   ' → logprob: -13.660262107849121
    6. ' xrange' → logprob: -14.785262107849121
    7. ' ' → logprob: -15.035262107849121
    8. '```' → logprob: -16.035261154174805
    9. ')' → logprob: -16.410261154174805
    10. ' in' → logprob: -17.160261154174805

Token 64: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4804550111293793
    2. '(n' → logprob: -0.9804550409317017
    3. '(left' → logprob: -5.105454921722412
    4. ' (' → logprob: -9.35545539855957
    5. '1' → logprob: -9.35545539855957
    6. '(right' → logprob: -10.23045539855957
    7. '(len' → logprob: -10.48045539855957
    8. ' ' → logprob: -10.98045539855957
    9. ')' → logprob: -11.23045539855957
    10. '   ' → logprob: -11.73045539855957

Token 65: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28515368700027466
    2. '1' → logprob: -1.4101536273956299
    3. ' n' → logprob: -6.035153865814209
    4. 'len' → logprob: -6.910153865814209
    5. 'left' → logprob: -8.03515338897705
    6. 'm' → logprob: -9.41015338897705
    7. ' ' → logprob: -9.53515338897705
    8. '   ' → logprob: -9.66015338897705
    9. '(n' → logprob: -11.16015338897705
    10. '0' → logprob: -11.53515338897705

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008636554703116417
    2. ' ,' → logprob: -5.008636474609375
    3. ',n' → logprob: -6.258636474609375
    4. '   ' → logprob: -12.758636474609375
    5. ',len' → logprob: -13.258636474609375
    6. ',
' → logprob: -15.508636474609375
    7. ' ' → logprob: -15.633636474609375
    8. 'n' → logprob: -16.508636474609375
    9. ',m' → logprob: -16.633636474609375
    10. '，' → logprob: -16.883636474609375

Token 67: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3871740400791168
    2. ' n' → logprob: -1.1371740102767944
    3. '   ' → logprob: -9.012173652648926
    4. 'len' → logprob: -9.137173652648926
    5. ' len' → logprob: -9.637173652648926
    6. '	n' → logprob: -12.512173652648926
    7. ' ' → logprob: -13.262173652648926
    8. '    ' → logprob: -13.762173652648926
    9. '```' → logprob: -14.887173652648926
    10. ',n' → logprob: -15.012173652648926

Token 68: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048613931983709335
    2. ' +' → logprob: -3.048614025115967
    3. '):' → logprob: -11.548613548278809
    4. '):
' → logprob: -11.673613548278809
    5. '   ' → logprob: -12.048613548278809
    6. ',' → logprob: -14.673613548278809
    7. '+n' → logprob: -14.673613548278809
    8. ' ' → logprob: -14.798613548278809
    9. '+
' → logprob: -15.173613548278809
    10. ')' → logprob: -15.298613548278809

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013095269969198853
    2. ' ' → logprob: -9.125130653381348
    3. '):
' → logprob: -11.625130653381348
    4. '+' → logprob: -12.625130653381348
    5. ')' → logprob: -12.750130653381348
    6. '```' → logprob: -12.750130653381348
    7. '   ' → logprob: -12.875130653381348
    8. '):' → logprob: -14.000130653381348
    9. '
' → logprob: -15.625130653381348
    10. '       ' → logprob: -16.000131607055664

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.070550836622715
    2. '):
' → logprob: -2.9455509185791016
    3. ':' → logprob: -4.195550918579102
    4. '):
' → logprob: -8.570550918579102
    5. ' ):' → logprob: -9.320550918579102
    6. ')' → logprob: -9.320550918579102
    7. '   ' → logprob: -9.695550918579102
    8. ':
' → logprob: -11.320550918579102
    9. ' ):
' → logprob: -11.320550918579102
    10. ',' → logprob: -11.445550918579102

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22978204488754272
    2. ':' → logprob: -1.8547821044921875
    3. '<|end|>' → logprob: -4.1047821044921875
    4. ' ' → logprob: -4.6047821044921875
    5. '   ' → logprob: -5.1047821044921875
    6. '
' → logprob: -5.4797821044921875
    7. '    ' → logprob: -5.9797821044921875
    8. ':
' → logprob: -6.1047821044921875
    9. '        
' → logprob: -6.3547821044921875
    10. ',' → logprob: -6.6047821044921875

Token 72: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.191695898771286
    2. ' ' → logprob: -2.1916959285736084
    3. '        ' → logprob: -3.3166959285736084
    4. 'while' (adapté à ' while') → logprob: -4.691695690155029
    5. '       ' → logprob: -4.816695690155029
    6. ' ' → logprob: -6.316695690155029
    7. ' if' → logprob: -6.316695690155029
    8. '<|end|>' → logprob: -6.441695690155029
    9. '    ' → logprob: -7.441695690155029
    10. ' 
' → logprob: -7.691695690155029

Token 73: ' left' (ID: 3561)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.14060580730438232
    2. 'prefix' → logprob: -2.390605926513672
    3. '(prefix' → logprob: -3.265605926513672
    4. ' (' → logprob: -6.890605926513672
    5. ' left' → logprob: -8.515605926513672
    6. 'left' → logprob: -9.640605926513672
    7. '(left' → logprob: -10.140605926513672
    8. '   ' → logprob: -10.390605926513672
    9. '(p' → logprob: -10.765605926513672
    10. '(' → logprob: -11.140605926513672

Token 74: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11292485147714615
    2. '<' → logprob: -2.237924814224243
    3. ' <=' → logprob: -9.987924575805664
    4. '<=' → logprob: -11.112924575805664
    5. ' ' → logprob: -11.487924575805664
    6. '<len' → logprob: -11.862924575805664
    7. '<n' → logprob: -12.237924575805664
    8. '<m' → logprob: -12.737924575805664
    9. '<size' → logprob: -12.862924575805664
    10. '<s' → logprob: -12.987924575805664

Token 75: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6931516528129578
    2. 'right' → logprob: -0.6931516528129578
    3. '	right' → logprob: -12.568151473999023
    4. '=' → logprob: -14.818151473999023
    5. 'r' → logprob: -15.568151473999023
    6. ' ' → logprob: -16.193151473999023
    7. '[right' → logprob: -16.693151473999023
    8. 'n' → logprob: -16.693151473999023
    9. ':right' → logprob: -16.943151473999023
    10. ',right' → logprob: -16.943151473999023

Token 76: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08908112347126007
    2. 'and' → logprob: -2.464081048965454
    3. ' ' → logprob: -8.964080810546875
    4. '        ' → logprob: -12.714080810546875
    5. '           ' → logprob: -12.964080810546875
    6. '    ' → logprob: -13.214080810546875
    7. '   ' → logprob: -13.339080810546875
    8. '          ' → logprob: -14.089080810546875
    9. '	and' → logprob: -14.089080810546875
    10. '```' → logprob: -14.089080810546875

Token 77: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.12539204955101013
    2. '(prefix' → logprob: -2.750391960144043
    3. 'prefix' → logprob: -3.125391960144043
    4. ' (' → logprob: -4.625391960144043
    5. '(p' → logprob: -9.500391960144043
    6. ' ' → logprob: -9.625391960144043
    7. '(' → logprob: -10.250391960144043
    8. '   ' → logprob: -10.875391960144043
    9. '(max' → logprob: -12.000391960144043
    10. '((' → logprob: -12.125391960144043

Token 78: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.00030721822986379266
    2. '[left' → logprob: -8.125307083129883
    3. 'right' → logprob: -11.875307083129883
    4. '[' → logprob: -12.875307083129883
    5. '```' → logprob: -14.625307083129883
    6. '	right' → logprob: -14.750307083129883
    7. ' right' → logprob: -16.250307083129883
    8. '   ' → logprob: -16.750307083129883
    9. ':right' → logprob: -16.875307083129883
    10. '

' → logprob: -17.250307083129883

Token 79: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17256802320480347
    2. '-' → logprob: -2.4225680828094482
    3. ']' → logprob: -2.9225680828094482
    4. '[' → logprob: -4.422567844390869
    5. ' ' → logprob: -6.172567844390869
    6. ']-' → logprob: -7.047567844390869
    7. '][' → logprob: -9.047568321228027
    8. '[]' → logprob: -9.172568321228027
    9. '<|end|>' → logprob: -9.172568321228027
    10. '```' → logprob: -9.297568321228027

Token 80: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0898127555847168
    2. '-' → logprob: -2.464812755584717
    3. ' ' → logprob: -7.589812755584717
    4. '[' → logprob: -9.089813232421875
    5. '```' → logprob: -9.839813232421875
    6. '>=' → logprob: -10.464813232421875
    7. '>' → logprob: -10.839813232421875
    8. '%' → logprob: -10.964813232421875
    9. ' %' → logprob: -11.214813232421875
    10. '   ' → logprob: -11.277313232421875

Token 81: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.014184900559484959
    2. ' prefix' → logprob: -4.264184951782227
    3. '(prefix' → logprob: -11.514184951782227
    4. '	p' → logprob: -12.514184951782227
    5. ' ' → logprob: -13.764184951782227
    6. '```' → logprob: -13.764184951782227
    7. '  ' → logprob: -14.014184951782227
    8. '   ' → logprob: -14.139184951782227
    9. 'refix' → logprob: -14.139184951782227
    10. 'p' → logprob: -14.139184951782227

Token 82: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -4.2987729102605954e-05
    2. '[' → logprob: -10.250042915344238
    3. '[right' → logprob: -12.750042915344238
    4. 'left' → logprob: -13.250042915344238
    5. '```' → logprob: -13.250042915344238
    6. '\[' → logprob: -14.250042915344238
    7. '[mid' → logprob: -16.125043869018555
    8. '[
' → logprob: -16.500043869018555
    9. ' [' → logprob: -16.875043869018555
    10. '[line' → logprob: -17.125043869018555

Token 83: ']' (ID: 60)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.37764444947242737
    2. '>=' → logprob: -2.0026445388793945
    3. ' >' → logprob: -2.0026445388793945
    4. '>' → logprob: -3.7526445388793945
    5. ' ' → logprob: -4.6276445388793945
    6. ')' → logprob: -4.6276445388793945
    7. ' <' → logprob: -7.6276445388793945
    8. ']' → logprob: -8.252644538879395
    9. '```' → logprob: -8.377644538879395
    10. ' )' → logprob: -8.502644538879395

Token 84: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.49777406454086304
    2. '>=' → logprob: -1.3727741241455078
    3. ' >' → logprob: -2.372774124145508
    4. '>' → logprob: -3.122774124145508
    5. ' ' → logprob: -6.872774124145508
    6. ')' → logprob: -9.247774124145508
    7. ' %' → logprob: -9.622774124145508
    8. ' <' → logprob: -9.747774124145508
    9. '```' → logprob: -9.872774124145508
    10. '%' → logprob: -9.997774124145508

Token 85: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.22544896602630615
    2. ' m' → logprob: -1.6004489660263062
    3. '	m' → logprob: -10.850448608398438
    4. ' ' → logprob: -11.975448608398438
    5. '_m' → logprob: -13.100448608398438
    6. '   ' → logprob: -13.600448608398438
    7. '    ' → logprob: -13.850448608398438
    8. '<|end|>' → logprob: -14.100448608398438
    9. '```' → logprob: -14.225448608398438
    10. 'M' → logprob: -14.225448608398438

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036116816103458405
    2. ':
' → logprob: -3.4111168384552
    3. ' :' → logprob: -6.536116600036621
    4. '       ' → logprob: -7.286116600036621
    5. ' :
' → logprob: -8.536116600036621
    6. '           ' → logprob: -10.411116600036621
    7. ':

' → logprob: -10.661116600036621
    8. '        ' → logprob: -11.036116600036621
    9. '):' → logprob: -11.161116600036621
    10. '):
' → logprob: -11.536116600036621

Token 87: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09029155224561691
    2. '       ' → logprob: -2.4652915000915527
    3. ' left' → logprob: -7.590291500091553
    4. '```' → logprob: -7.840291500091553
    5. ',' → logprob: -9.590291976928711
    6. 'left' → logprob: -9.715291976928711
    7. '[left' → logprob: -9.715291976928711
    8. ':
' → logprob: -9.965291976928711
    9. '               ' → logprob: -10.465291976928711
    10. '   ' → logprob: -10.590291976928711

Token 88: ' left' (ID: 3561)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6760213375091553
    2. ' left' → logprob: -1.5510213375091553
    3. 'left' (adapté à ' left') → logprob: -1.6760213375091553
    4. '       ' → logprob: -2.5510213375091553
    5. '               ' → logprob: -4.426021575927734
    6. '   ' → logprob: -6.926021575927734
    7. '	left' → logprob: -7.301021575927734
    8. '```' → logprob: -8.551021575927734
    9. '[left' → logprob: -9.176021575927734
    10. '
' → logprob: -9.176021575927734

Token 89: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47803354263305664
    2. ' +=' → logprob: -1.6030335426330566
    3. '+' → logprob: -1.7280335426330566
    4. ' +' → logprob: -7.228033542633057
    5. '1' → logprob: -8.978033065795898
    6. '```' → logprob: -9.228033065795898
    7. '++' → logprob: -10.228033065795898
    8. '           ' → logprob: -11.103033065795898
    9. ']+=' → logprob: -11.228033065795898
    10. ' ' → logprob: -11.478033065795898

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.500019073486328
    4. '```' → logprob: -18.500019073486328
    5. ' ' → logprob: -19.875019073486328
    6. '  ' → logprob: -20.875019073486328
    7. '<|end|>' → logprob: -21.125019073486328
    8. '
' → logprob: -21.875019073486328
    9. '１' → logprob: -22.000019073486328
    10. '       ' → logprob: -22.125019073486328

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -15.625011444091797
    4. '   ' → logprob: -16.875011444091797
    5. ' ' → logprob: -18.500011444091797
    6. '0' → logprob: -18.500011444091797
    7. '`' → logprob: -18.500011444091797
    8. '  ' → logprob: -18.812511444091797
    9. '
' → logprob: -18.937511444091797
    10. '	' → logprob: -19.062511444091797

Token 92: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5779681205749512
    2. '
' → logprob: -0.8279681205749512
    3. '
' → logprob: -6.827968120574951
    4. '   ' → logprob: -8.07796859741211
    5. '<|end|>' → logprob: -8.20296859741211
    6. '```' → logprob: -8.32796859741211
    7. '        
' → logprob: -10.07796859741211
    8. ',' → logprob: -10.95296859741211
    9. '<|end|>' → logprob: -11.70296859741211
    10. ')' → logprob: -11.95296859741211

Token 93: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.506794273853302
    2. '       ' → logprob: -1.1317942142486572
    3. '   ' → logprob: -2.6317942142486572
    4. '```' → logprob: -6.506794452667236
    5. '<|end|>' → logprob: -6.756794452667236
    6. '
' → logprob: -9.131793975830078
    7. '        
' → logprob: -9.381793975830078
    8. '    
' → logprob: -9.631793975830078
    9. ')' → logprob: -9.631793975830078
    10. '  
' → logprob: -10.506793975830078

Token 94: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2387064695358276
    2. '   ' → logprob: -1.3637064695358276
    3. '       ' → logprob: -1.7387064695358276
    4. 'mod' → logprob: -2.488706588745117
    5. ' if' → logprob: -2.738706588745117
    6. ' max' → logprob: -2.738706588745117
    7. '
' → logprob: -3.738706588745117
    8. 'if' → logprob: -3.988706588745117
    9. ' current' → logprob: -4.738706588745117
    10. 'current' → logprob: -4.988706588745117

Token 95: ' check' (ID: 2371)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2531679570674896
    2. 'max' → logprob: -1.628167986869812
    3. ' if' → logprob: -4.003168106079102
    4. '   ' → logprob: -6.003168106079102
    5. ' mod' → logprob: -6.128168106079102
    6. 'mod' → logprob: -6.503168106079102
    7. 'if' → logprob: -7.253168106079102
    8. ' for' → logprob: -7.253168106079102
    9. '       ' → logprob: -8.378168106079102
    10. ' ' → logprob: -8.503168106079102

Token 96: ' sub' (ID: 1543)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2913356125354767
    2. '       ' → logprob: -2.1663355827331543
    3. '   ' → logprob: -2.2913355827331543
    4. 'if' → logprob: -4.791335582733154
    5. ' for' → logprob: -5.041335582733154
    6. 'max' → logprob: -5.041335582733154
    7. ' max' → logprob: -5.541335582733154
    8. '```' → logprob: -5.541335582733154
    9. 'mod' → logprob: -6.666335582733154
    10. '<|end|>' → logprob: -6.916335582733154

Token 97: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.4061700403690338
    2. 'string' → logprob: -1.6561700105667114
    3. '       ' → logprob: -2.156170129776001
    4. '   ' → logprob: -4.156169891357422
    5. 'sum' → logprob: -6.156169891357422
    6. 'str' → logprob: -6.281169891357422
    7. 'arr' → logprob: -6.656169891357422
    8. 'prefix' → logprob: -7.031169891357422
    9. '           ' → logprob: -7.781169891357422
    10. 'tring' → logprob: -7.781169891357422

Token 98: ' [' (ID: 723)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6630972027778625
    2. '_sum' → logprob: -2.1630971431732178
    3. 'mod' → logprob: -2.2880971431732178
    4. 'sum' → logprob: -2.4130971431732178
    5. '_mod' → logprob: -2.5380971431732178
    6. '   ' → logprob: -3.5380971431732178
    7. 'max' → logprob: -3.9130971431732178
    8. 's' → logprob: -4.038097381591797
    9. '_max' → logprob: -4.538097381591797
    10. ' if' → logprob: -5.663097381591797

Token 99: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2559288740158081
    2. 'right' → logprob: -1.505928874015808
    3. ' left' → logprob: -6.005928993225098
    4. ' right' → logprob: -6.880928993225098
    5. '   ' → logprob: -7.880928993225098
    6. '       ' → logprob: -10.380928993225098
    7. '           ' → logprob: -10.505928993225098
    8. '[left' → logprob: -11.505928993225098
    9. ')' → logprob: -11.630928993225098
    10. '	left' → logprob: -11.880928993225098

Token 100: '-' (ID: 12)
  Prédit: ':right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':right' → logprob: -0.5431082248687744
    2. ',right' → logprob: -1.5431082248687744
    3. ',' → logprob: -1.6681082248687744
    4. ' ,' → logprob: -4.668107986450195
    5. ']' → logprob: -5.168107986450195
    6. ':' → logprob: -7.668107986450195
    7. '...' → logprob: -7.793107986450195
    8. '[right' → logprob: -8.793107986450195
    9. ' :' → logprob: -8.918107986450195
    10. ':left' → logprob: -9.043107986450195

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016783935949206352
    2. '+' → logprob: -4.641783714294434
    3. ' ' → logprob: -5.641783714294434
    4. ']' → logprob: -6.516783714294434
    5. ' +' → logprob: -6.516783714294434
    6. ']+' → logprob: -8.391783714294434
    7. '```' → logprob: -9.641783714294434
    8. ',' → logprob: -9.766783714294434
    9. 'right' → logprob: -10.516783714294434
    10. '   ' → logprob: -10.641783714294434

Token 102: ',right' (ID: 164487)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0058751096948981285
    2. ' ]' → logprob: -6.130875110626221
    3. ',' → logprob: -6.880875110626221
    4. '],' → logprob: -7.130875110626221
    5. ' if' → logprob: -7.505875110626221
    6. ']
' → logprob: -9.005874633789062
    7. ':' → logprob: -9.130874633789062
    8. '       ' → logprob: -9.130874633789062
    9. 'if' → logprob: -9.130874633789062
    10. ':right' → logprob: -9.130874633789062

Token 103: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3413791060447693
    2. '-' → logprob: -1.466379165649414
    3. ' -' → logprob: -3.341379165649414
    4. ')' → logprob: -3.966379165649414
    5. '       ' → logprob: -7.091379165649414
    6. ' ]' → logprob: -7.216379165649414
    7. '   ' → logprob: -7.591379165649414
    8. ')]' → logprob: -7.966379165649414
    9. ']
' → logprob: -8.091379165649414
    10. '])' → logprob: -8.591379165649414

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001720996224321425
    2. ' ' → logprob: -6.501720905303955
    3. ']' → logprob: -9.001721382141113
    4. ')' → logprob: -9.626721382141113
    5. '```' → logprob: -11.126721382141113
    6. '0' → logprob: -13.501721382141113
    7. '2' → logprob: -13.689221382141113
    8. '])' → logprob: -13.751721382141113
    9. '   ' → logprob: -13.814221382141113
    10. ' ]' → logprob: -14.564221382141113

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.040083058178424835
    2. ']
' → logprob: -3.415083169937134
    3. ' ]' → logprob: -6.290082931518555
    4. ')' → logprob: -6.915082931518555
    5. ']
' → logprob: -7.165082931518555
    6. '       ' → logprob: -7.415082931518555
    7. ']

' → logprob: -7.915082931518555
    8. '])' → logprob: -8.290082931518555
    9. ']%' → logprob: -8.290082931518555
    10. '   ' → logprob: -8.665082931518555

Token 106: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014841780066490173
    2. ' if' → logprob: -4.514841556549072
    3. ',' → logprob: -6.639841556549072
    4. '   ' → logprob: -7.014841556549072
    5. '
' → logprob: -7.764841556549072
    6. '<|end|>' → logprob: -7.764841556549072
    7. '```' → logprob: -8.26484203338623
    8. ')' → logprob: -9.26484203338623
    9. ' and' → logprob: -9.26484203338623
    10. 'if' → logprob: -10.13984203338623

Token 107: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.01817183382809162
    2. 'left' → logprob: -4.018171787261963
    3. ' right' → logprob: -11.268172264099121
    4. ' ' → logprob: -12.393172264099121
    5. '0' → logprob: -13.393172264099121
    6. '   ' → logprob: -13.518172264099121
    7. '(left' → logprob: -14.018172264099121
    8. '	left' → logprob: -14.143172264099121
    9. 'right' → logprob: -15.268172264099121
    10. ' ' → logprob: -15.893172264099121

Token 108: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7171030044555664
    2. '>' → logprob: -0.9671030044555664
    3. '-' → logprob: -2.3421030044555664
    4. ' -' → logprob: -3.3421030044555664
    5. '```' → logprob: -9.842103004455566
    6. '>=' → logprob: -10.967103004455566
    7. '0' → logprob: -11.217103004455566
    8. ' >=' → logprob: -11.217103004455566
    9. '>-' → logprob: -11.467103004455566
    10. '   ' → logprob: -11.592103004455566

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08901003003120422
    2. ' ' → logprob: -2.464010000228882
    3. '=' → logprob: -10.464010238647461
    4. '>' → logprob: -10.964010238647461
    5. '1' → logprob: -11.339010238647461
    6. '```' → logprob: -12.589010238647461
    7. '   ' → logprob: -12.964010238647461
    8. ' >' → logprob: -13.339010238647461
    9. '<|end|>' → logprob: -14.089010238647461
    10. ' ' → logprob: -14.276510238647461

Token 110: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018861611606553197
    2. ' if' → logprob: -6.876886367797852
    3. ',' → logprob: -8.001886367797852
    4. '<|end|>' → logprob: -8.751886367797852
    5. '   ' → logprob: -8.876886367797852
    6. '```' → logprob: -9.626886367797852
    7. '           ' → logprob: -9.876886367797852
    8. ' and' → logprob: -10.626886367797852
    9. ')' → logprob: -11.251886367797852
    10. ':' → logprob: -11.751886367797852

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001804415020160377
    2. ' if' → logprob: -6.751804351806641
    3. '```' → logprob: -8.25180435180664
    4. ',' → logprob: -8.62680435180664
    5. '   ' → logprob: -9.37680435180664
    6. '           ' → logprob: -10.12680435180664
    7. '<|end|>' → logprob: -10.37680435180664
    8. ' and' → logprob: -11.50180435180664
    9. '        
' → logprob: -12.87680435180664
    10. ':' → logprob: -12.87680435180664

Token 112: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02700127102434635
    2. ' if' → logprob: -3.65200138092041
    3. 'if' (adapté à ' if') → logprob: -7.52700138092041
    4. '   ' → logprob: -9.15200138092041
    5. '           ' → logprob: -10.52700138092041
    6. '<|end|>' → logprob: -11.02700138092041
    7. '```' → logprob: -12.65200138092041
    8. ',' → logprob: -12.90200138092041
    9. '
' → logprob: -13.15200138092041
    10. ' elif' → logprob: -14.27700138092041

Token 113: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.9862216504407115e-05
    2. 'left' → logprob: -11.375020027160645
    3. '	left' → logprob: -12.750020027160645
    4. ' lef' → logprob: -13.125020027160645
    5. ' ' → logprob: -13.375020027160645
    6. '(left' → logprob: -13.625020027160645
    7. ' ' → logprob: -15.250020027160645
    8. '    ' → logprob: -16.125019073486328
    9. ' right' → logprob: -16.125019073486328
    10. ' (' → logprob: -16.625019073486328

Token 114: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17982399463653564
    2. '>' → logprob: -1.8048239946365356
    3. '-' → logprob: -9.804823875427246
    4. ' -' → logprob: -11.554823875427246
    5. ' and' → logprob: -12.804823875427246
    6. ' ' → logprob: -12.804823875427246
    7. '0' → logprob: -13.179823875427246
    8. '()>' → logprob: -13.804823875427246
    9. ':' → logprob: -13.929823875427246
    10. '   ' → logprob: -14.054823875427246

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11282720416784286
    2. ' ' → logprob: -2.2378273010253906
    3. '=' → logprob: -12.36282730102539
    4. '1' → logprob: -14.73782730102539
    5. '>' → logprob: -16.11282730102539
    6. ' ' → logprob: -17.36282730102539
    7. '   ' → logprob: -17.48782730102539
    8. '  ' → logprob: -17.73782730102539
    9. '<|end|>' → logprob: -17.86282730102539
    10. '```' → logprob: -18.67532730102539

Token 116: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.017455043271183968
    2. ':' → logprob: -4.392455101013184
    3. ':
' → logprob: -5.517455101013184
    4. 'and' → logprob: -7.267455101013184
    5. '           ' → logprob: -9.142455101013184
    6. '       ' → logprob: -9.517455101013184
    7. '   ' → logprob: -10.767455101013184
    8. ':

' → logprob: -12.267455101013184
    9. ' :' → logprob: -12.767455101013184
    10. ' ' → logprob: -12.892455101013184

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034186739940196276
    2. '       ' → logprob: -6.628418445587158
    3. '
' → logprob: -7.253418445587158
    4. ':' → logprob: -8.003418922424316
    5. '```' → logprob: -8.003418922424316
    6. ' max' → logprob: -8.503418922424316
    7. ':
' → logprob: -9.128418922424316
    8. '<|end|>' → logprob: -9.378418922424316
    9. ',' → logprob: -9.628418922424316
    10. '	       ' → logprob: -10.253418922424316

Token 118: ' val' (ID: 1459)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0308066606521606
    2. 'mod' → logprob: -1.2808066606521606
    3. '           ' → logprob: -2.155806541442871
    4. 'max' → logprob: -2.405806541442871
    5. ' mod' → logprob: -2.780806541442871
    6. ' current' → logprob: -3.405806541442871
    7. ' remainder' → logprob: -3.655806541442871
    8. 'res' → logprob: -5.030806541442871
    9. 'current' → logprob: -5.030806541442871
    10. ' rem' → logprob: -5.280806541442871

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134133219718933
    2. '=' → logprob: -1.313413381576538
    3. '_mod' → logprob: -10.063413619995117
    4. '   ' → logprob: -10.188413619995117
    5. '=max' → logprob: -10.813413619995117
    6. '=(' → logprob: -11.313413619995117
    7. 'mod' → logprob: -11.438413619995117
    8. ' ' → logprob: -11.563413619995117
    9. '%=' → logprob: -12.563413619995117
    10. ' =(' → logprob: -13.063413619995117

Token 120: ' (' (ID: 350)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.034153085201978683
    2. ' (' → logprob: -3.4091529846191406
    3. 'prefix' → logprob: -8.15915298461914
    4. '   ' → logprob: -9.78415298461914
    5. ' prefix' → logprob: -9.90915298461914
    6. '(max' → logprob: -10.53415298461914
    7. '(p' → logprob: -11.03415298461914
    8. '((' → logprob: -11.15915298461914
    9. '(pref' → logprob: -11.28415298461914
    10. ' ' → logprob: -11.78415298461914

Token 121: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.13411538302898407
    2. '(prefix' → logprob: -2.13411545753479
    3. ' prefix' → logprob: -5.134115219116211
    4. ' (' → logprob: -6.759115219116211
    5. '   ' → logprob: -9.634115219116211
    6. '  ' → logprob: -11.384115219116211
    7. ' ' → logprob: -12.134115219116211
    8. '
' → logprob: -12.634115219116211
    9. '(p' → logprob: -12.759115219116211
    10. '    ' → logprob: -13.009115219116211

Token 122: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.0007137430948205292
    2. 'right' → logprob: -7.25071382522583
    3. '[' → logprob: -13.250713348388672
    4. '   ' → logprob: -14.875713348388672
    5. '	right' → logprob: -14.875713348388672
    6. ':right' → logprob: -15.250713348388672
    7. ' right' → logprob: -15.375713348388672
    8. '
' → logprob: -15.625713348388672
    9. ')[' → logprob: -15.625713348388672
    10. ')' → logprob: -15.750713348388672

Token 123: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013573751784861088
    2. ']-' → logprob: -6.751357555389404
    3. ' ]' → logprob: -8.751357078552246
    4. '][' → logprob: -11.876357078552246
    5. '[right' → logprob: -12.251357078552246
    6. '-' → logprob: -12.376357078552246
    7. '[' → logprob: -12.626357078552246
    8. ' -' → logprob: -13.251357078552246
    9. '"]' → logprob: -13.376357078552246
    10. ' ' → logprob: -14.126357078552246

Token 124: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1831371933221817
    2. '-' → logprob: -1.8081371784210205
    3. ' ' → logprob: -6.9331374168396
    4. '   ' → logprob: -7.3081374168396
    5. '[' → logprob: -7.8081374168396
    6. '```' → logprob: -8.433136940002441
    7. '        ' → logprob: -8.808136940002441
    8. '    ' → logprob: -8.808136940002441
    9. ')' → logprob: -8.933136940002441
    10. '           ' → logprob: -9.558136940002441

Token 125: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.006717386189848185
    2. ' prefix' → logprob: -5.006717205047607
    3. '(prefix' → logprob: -13.131717681884766
    4. '   ' → logprob: -17.381717681884766
    5. '_prefix' → logprob: -17.381717681884766
    6. 'refix' → logprob: -17.506717681884766
    7. ' ' → logprob: -17.881717681884766
    8. '
' → logprob: -18.381717681884766
    9. '           ' → logprob: -18.506717681884766
    10. 'pref' → logprob: -18.756717681884766

Token 126: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -1.1472419600977446e-06
    2. 'left' → logprob: -14.625000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[right' → logprob: -15.625000953674316
    5. ' [' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '(left' → logprob: -18.000001907348633
    8. '[val' → logprob: -19.125001907348633
    9. '
' → logprob: -19.500001907348633
    10. ' ' → logprob: -20.000001907348633

Token 127: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005598236457444727
    2. ' -' → logprob: -7.5005598068237305
    3. '])' → logprob: -12.37555980682373
    4. '1' → logprob: -13.25055980682373
    5. '```' → logprob: -14.62555980682373
    6. ']' → logprob: -15.75055980682373
    7. ' ' → logprob: -15.75055980682373
    8. '   ' → logprob: -16.000560760498047
    9. '−' → logprob: -17.750560760498047
    10. '-
' → logprob: -18.375560760498047

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '-' → logprob: -15.875001907348633
    4. '```' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.937501907348633
    6. ']' → logprob: -17.937501907348633
    7. '])' → logprob: -18.312501907348633
    8. '
' → logprob: -19.000001907348633
    9. ')' → logprob: -19.062501907348633
    10. '۱' → logprob: -19.250001907348633

Token 129: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03820328041911125
    2. ')' → logprob: -3.288203239440918
    3. '})' → logprob: -9.913203239440918
    4. ' ])' → logprob: -10.413203239440918
    5. ']' → logprob: -10.538203239440918
    6. ' )' → logprob: -11.288203239440918
    7. ''])' → logprob: -11.288203239440918
    8. '`)' → logprob: -11.413203239440918
    9. '))' → logprob: -11.913203239440918
    10. '）' → logprob: -12.663203239440918

Token 130: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03544636815786362
    2. ')' → logprob: -3.4104464054107666
    3. '%' → logprob: -6.9104461669921875
    4. ')%' → logprob: -7.7854461669921875
    5. ' )' → logprob: -8.410446166992188
    6. '%m' → logprob: -9.160446166992188
    7. ' ' → logprob: -10.535446166992188
    8. ']' → logprob: -11.535446166992188
    9. ' ' → logprob: -11.910446166992188
    10. '
' → logprob: -12.410446166992188

Token 131: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03804171830415726
    2. ' m' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.413042068481445
    4. '   ' → logprob: -17.538042068481445
    5. '	m' → logprob: -17.788042068481445
    6. '(m' → logprob: -18.288042068481445
    7. ')m' → logprob: -18.788042068481445
    8. '```' → logprob: -19.163042068481445
    9. '%m' → logprob: -19.288042068481445
    10. '  ' → logprob: -19.288042068481445

Token 132: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13458792865276337
    2. '<|end|>' → logprob: -2.8845880031585693
    3. '
' → logprob: -3.1345880031585693
    4. '       ' → logprob: -4.00958776473999
    5. ')' → logprob: -5.50958776473999
    6. '<|end|>' → logprob: -6.25958776473999
    7. '```' → logprob: -7.00958776473999
    8. '               ' → logprob: -8.384588241577148
    9. '   ' → logprob: -8.509588241577148
    10. '            
' → logprob: -8.884588241577148

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016994792968034744
    2. '       ' → logprob: -4.891994953155518
    3. '<|end|>' → logprob: -5.141994953155518
    4. '
' → logprob: -5.891994953155518
    5. '<|end|>' → logprob: -8.51699447631836
    6. ')' → logprob: -8.51699447631836
    7. '```' → logprob: -9.14199447631836
    8. '   ' → logprob: -10.26699447631836
    9. ' if' → logprob: -10.39199447631836
    10. ',' → logprob: -10.39199447631836

Token 134: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5037934184074402
    2. 'if' (adapté à ' if') → logprob: -1.003793478012085
    3. '           ' → logprob: -3.628793478012085
    4. 'max' → logprob: -6.128793239593506
    5. ' max' → logprob: -7.628793239593506
    6. '
' → logprob: -10.628793716430664
    7. '       ' → logprob: -10.753793716430664
    8. '```' → logprob: -12.003793716430664
    9. '   ' → logprob: -12.253793716430664
    10. '               ' → logprob: -12.878793716430664

Token 135: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.10021023452281952
    2. 'val' → logprob: -2.350210189819336
    3. '	val' → logprob: -13.100210189819336
    4. '(val' → logprob: -13.475210189819336
    5. '_val' → logprob: -16.850210189819336
    6. ',val' → logprob: -16.850210189819336
    7. '[val' → logprob: -16.850210189819336
    8. '   ' → logprob: -17.475210189819336
    9. '.val' → logprob: -18.225210189819336
    10. '```' → logprob: -18.225210189819336

Token 136: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.011075297370553017
    2. '>' → logprob: -4.511075496673584
    3. ' ' → logprob: -10.886075019836426
    4. '   ' → logprob: -12.761075019836426
    5. ')' → logprob: -13.011075019836426
    6. ' ' → logprob: -13.636075019836426
    7. '           ' → logprob: -14.636075019836426
    8. '    ' → logprob: -15.261075019836426
    9. '  ' → logprob: -15.386075019836426
    10. ':' → logprob: -15.511075019836426

Token 137: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889308780431747
    2. ' max' → logprob: -2.5788931846618652
    3. '           ' → logprob: -12.703892707824707
    4. '   ' → logprob: -16.453893661499023
    5. '	max' → logprob: -16.578893661499023
    6. '
' → logprob: -17.453893661499023
    7. '       ' → logprob: -17.453893661499023
    8. ' ' → logprob: -17.578893661499023
    9. '               ' → logprob: -17.828893661499023
    10. '(max' → logprob: -17.828893661499023

Token 138: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.128163257315464e-07
    2. '_max' → logprob: -16.25
    3. 'mod' → logprob: -16.25
    4. '_val' → logprob: -16.625
    5. '_' → logprob: -17.625
    6. '_re' → logprob: -18.625
    7. '_MOD' → logprob: -18.625
    8. '_rem' → logprob: -18.75
    9. '\' → logprob: -19.5
    10. '_Mod' → logprob: -19.625

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5473886132240295
    2. ':
' → logprob: -0.9223886132240295
    3. '               ' → logprob: -3.9223885536193848
    4. '           ' → logprob: -6.672388553619385
    5. '):
' → logprob: -6.797388553619385
    6. ' :
' → logprob: -6.922388553619385
    7. ' :' → logprob: -8.172389030456543
    8. '):' → logprob: -9.297389030456543
    9. 'max' → logprob: -9.672389030456543
    10. ':max' → logprob: -9.922389030456543

Token 140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004493805463425815
    2. ' max' → logprob: -8.500449180603027
    3. '```' → logprob: -9.000449180603027
    4. '           ' → logprob: -9.375449180603027
    5. 'max' → logprob: -11.125449180603027
    6. '                   ' → logprob: -12.500449180603027
    7. '                       ' → logprob: -12.750449180603027
    8. '
' → logprob: -12.875449180603027
    9. '``' → logprob: -13.250449180603027
    10. '              ' → logprob: -13.250449180603027

Token 141: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.052567314356565475
    2. 'max' (adapté à ' max') → logprob: -3.42756724357605
    3. '               ' → logprob: -4.052567481994629
    4. '                   ' → logprob: -6.677567481994629
    5. '                ' → logprob: -10.177567481994629
    6. '           ' → logprob: -10.927567481994629
    7. '```' → logprob: -11.302567481994629
    8. '
' → logprob: -11.677567481994629
    9. '                       ' → logprob: -11.927567481994629
    10. '   ' → logprob: -11.927567481994629

Token 142: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -4.320199877838604e-07
    2. 'mod' → logprob: -15.875
    3. '_max' → logprob: -16.375
    4. '_MOD' → logprob: -17.75
    5. '_mode' → logprob: -17.75
    6. '_m' → logprob: -18.625
    7. '_' → logprob: -18.875
    8. '_Mod' → logprob: -18.875
    9. '_val' → logprob: -19.0
    10. '_sub' → logprob: -19.25

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740908145904541
    2. '=' → logprob: -0.9740908145904541
    3. '=max' → logprob: -12.224090576171875
    4. '               ' → logprob: -12.599090576171875
    5. '                ' → logprob: -12.724090576171875
    6. '                   ' → logprob: -13.974090576171875
    7. ' ' → logprob: -14.599090576171875
    8. 'max' → logprob: -15.099090576171875
    9. '```' → logprob: -15.724090576171875
    10. '           ' → logprob: -16.224090576171875

Token 144: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4740773141384125
    2. 'val' → logprob: -0.9740773439407349
    3. '	val' → logprob: -15.724077224731445
    4. '[val' → logprob: -17.099077224731445
    5. '(val' → logprob: -17.224077224731445
    6. '_val' → logprob: -17.599077224731445
    7. '.val' → logprob: -17.974077224731445
    8. ',val' → logprob: -18.474077224731445
    9. 'Val' → logprob: -18.724077224731445
    10. '```' → logprob: -19.474077224731445

Token 145: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11518976837396622
    2. ' if' → logprob: -2.740189790725708
    3. '   ' → logprob: -3.990189790725708
    4. '<|end|>' → logprob: -4.990189552307129
    5. 'if' → logprob: -5.490189552307129
    6. '```' → logprob: -5.615189552307129
    7. ' else' → logprob: -5.740189552307129
    8. ')' → logprob: -6.615189552307129
    9. ' return' → logprob: -6.740189552307129
    10. '
' → logprob: -6.865189552307129

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029777569696307182
    2. '=' → logprob: -3.5297775268554688
    3. '_' → logprob: -12.154777526855469
    4. ' +=' → logprob: -12.279777526855469
    5. ' ' → logprob: -12.404777526855469
    6. '2' → logprob: -12.904777526855469
    7. '   ' → logprob: -13.404777526855469
    8. ')' → logprob: -13.529777526855469
    9. 's' → logprob: -13.779777526855469
    10. ' =(' → logprob: -14.029777526855469

Token 149: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6360642910003662
    2. '(prefix' → logprob: -0.7610642910003662
    3. '(max' → logprob: -6.511064529418945
    4. ' prefix' → logprob: -7.386064529418945
    5. '(p' → logprob: -7.636064529418945
    6. ' max' → logprob: -8.011064529418945
    7. 'max' → logprob: -8.261064529418945
    8. 'prefix' → logprob: -8.386064529418945
    9. '(pref' → logprob: -11.136064529418945
    10. ' ' → logprob: -11.136064529418945

Token 150: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.19129861891269684
    2. '(prefix' → logprob: -1.9412986040115356
    3. ' prefix' → logprob: -3.566298723220825
    4. ' (' → logprob: -6.066298484802246
    5. '(p' → logprob: -12.816298484802246
    6. '_prefix' → logprob: -13.191298484802246
    7. '   ' → logprob: -13.191298484802246
    8. ' ' → logprob: -13.566298484802246
    9. 'max' → logprob: -13.691298484802246
    10. '.prefix' → logprob: -13.816298484802246

Token 151: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -5.796184723294573e-06
    2. 'right' → logprob: -12.125005722045898
    3. '[' → logprob: -15.500005722045898
    4. '[root' → logprob: -18.2500057220459
    5. ' [' → logprob: -18.7500057220459
    6. '	right' → logprob: -18.8750057220459
    7. '[left' → logprob: -19.0000057220459
    8. ':right' → logprob: -19.0000057220459
    9. ',right' → logprob: -19.1250057220459
    10. ')' → logprob: -19.2500057220459

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00836823508143425
    2. ' -' → logprob: -4.883368015289307
    3. ' ]' → logprob: -7.508368015289307
    4. '-' → logprob: -8.758368492126465
    5. ' ' → logprob: -11.258368492126465
    6. '[right' → logprob: -11.258368492126465
    7. ')' → logprob: -11.633368492126465
    8. '[' → logprob: -11.883368492126465
    9. ']-' → logprob: -12.383368492126465
    10. '}' → logprob: -13.008368492126465

Token 153: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.705962598323822
    2. ' %' → logprob: -1.4559626579284668
    3. ')' → logprob: -1.7059626579284668
    4. '-' → logprob: -2.580962657928467
    5. '%' → logprob: -4.330962657928467
    6. ' ' → logprob: -6.830962657928467
    7. ')%' → logprob: -7.080962657928467
    8. ' )' → logprob: -7.580962657928467
    9. '[' → logprob: -8.955962181091309
    10. ']' → logprob: -10.830962181091309

Token 154: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.17983634769916534
    2. ' prefix' → logprob: -1.804836392402649
    3. 'left' → logprob: -10.05483627319336
    4. '   ' → logprob: -10.67983627319336
    5. ' left' → logprob: -11.67983627319336
    6. ' ' → logprob: -12.42983627319336
    7. 'right' → logprob: -12.42983627319336
    8. '    ' → logprob: -12.80483627319336
    9. '  ' → logprob: -13.30483627319336
    10. '(prefix' → logprob: -13.30483627319336

Token 155: '[left' (ID: 98859)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.558159589767456
    2. 'left' → logprob: -1.058159589767456
    3. 'prefix' → logprob: -2.558159589767456
    4. ' right' → logprob: -6.433159828186035
    5. ' left' → logprob: -7.308159828186035
    6. '[left' → logprob: -7.808159828186035
    7. '[right' → logprob: -8.058159828186035
    8. ' prefix' → logprob: -8.683159828186035
    9. '   ' → logprob: -11.308159828186035
    10. ' ' → logprob: -12.558159828186035

Token 156: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5761448740959167
    2. '])' → logprob: -0.8261448740959167
    3. ' )' → logprob: -9.57614517211914
    4. '`)' → logprob: -9.82614517211914
    5. ')%' → logprob: -10.45114517211914
    6. ' ])' → logprob: -10.82614517211914
    7. ']' → logprob: -11.45114517211914
    8. ''])' → logprob: -12.07614517211914
    9. '))' → logprob: -12.82614517211914
    10. '   ' → logprob: -12.95114517211914

Token 157: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.005936028435826302
    2. '%' → logprob: -5.130936145782471
    3. ')' → logprob: -12.130935668945312
    4. '%m' → logprob: -14.380935668945312
    5. '```' → logprob: -14.880935668945312
    6. ' ' → logprob: -15.005935668945312
    7. ')%' → logprob: -15.630935668945312
    8. '   ' → logprob: -16.005935668945312
    9. ' ' → logprob: -16.130935668945312
    10. '%c' → logprob: -16.255935668945312

Token 158: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.693148672580719
    2. ' m' → logprob: -0.693148672580719
    3. '```' → logprob: -13.943148612976074
    4. ' ' → logprob: -15.943148612976074
    5. '	m' → logprob: -16.19314956665039
    6. ' ' → logprob: -16.44314956665039
    7. '   ' → logprob: -16.94314956665039
    8. ')m' → logprob: -17.06814956665039
    9. '(m' → logprob: -17.56814956665039
    10. '`' → logprob: -17.56814956665039

Token 159: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0810918807983398
    2. '       ' → logprob: -1.2060918807983398
    3. '<|end|>' → logprob: -1.2060918807983398
    4. '
' → logprob: -3.58109188079834
    5. 'if' → logprob: -4.33109188079834
    6. '```' → logprob: -4.70609188079834
    7. '<|end|>' → logprob: -5.33109188079834
    8. '   ' → logprob: -5.83109188079834
    9. ')' → logprob: -6.08109188079834
    10. '           ' → logprob: -7.70609188079834

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18681006133556366
    2. '<|end|>' → logprob: -2.31181001663208
    3. ' if' → logprob: -2.81181001663208
    4. '```' → logprob: -5.56181001663208
    5. '<|end|>' → logprob: -5.93681001663208
    6. '   ' → logprob: -6.81181001663208
    7. '
' → logprob: -7.31181001663208
    8. 'if' → logprob: -7.31181001663208
    9. ')' → logprob: -7.43681001663208
    10. '        
' → logprob: -8.186810493469238

Token 161: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.49054238200187683
    2. ' if' → logprob: -0.9905424118041992
    3. '       ' → logprob: -4.115542411804199
    4. '```' → logprob: -11.8655424118042
    5. '   ' → logprob: -13.2405424118042
    6. '	if' → logprob: -13.3655424118042
    7. '           ' → logprob: -13.6155424118042
    8. '
' → logprob: -13.9905424118042
    9. '               ' → logprob: -15.1155424118042
    10. '        ' → logprob: -15.2405424118042

Token 162: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.008615754544734955
    2. 'val' → logprob: -4.758615970611572
    3. '(val' → logprob: -13.883615493774414
    4. '	val' → logprob: -15.633615493774414
    5. '```' → logprob: -17.133615493774414
    6. '[val' → logprob: -17.133615493774414
    7. 'Val' → logprob: -17.758615493774414
    8. ' ' → logprob: -17.758615493774414
    9. '_val' → logprob: -17.883615493774414
    10. ',val' → logprob: -18.758615493774414

Token 163: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02054760977625847
    2. '>' → logprob: -3.89554762840271
    3. ' ' → logprob: -12.770547866821289
    4. ' ' → logprob: -13.520547866821289
    5. ')' → logprob: -14.895547866821289
    6. '<|end|>' → logprob: -15.145547866821289
    7. '   ' → logprob: -15.270547866821289
    8. '  ' → logprob: -16.14554786682129
    9. ' >
' → logprob: -16.39554786682129
    10. '...' → logprob: -16.64554786682129

Token 164: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.25192928314208984
    2. 'max' → logprob: -1.5019292831420898
    3. '	max' → logprob: -16.751930236816406
    4. '(max' → logprob: -17.001930236816406
    5. ' ' → logprob: -17.876930236816406
    6. '=max' → logprob: -18.001930236816406
    7. '[max' → logprob: -18.251930236816406
    8. '_max' → logprob: -18.501930236816406
    9. '```' → logprob: -18.751930236816406
    10. ',max' → logprob: -18.876930236816406

Token 165: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.9361264946837764e-07
    2. ' _' → logprob: -17.0
    3. 'mod' → logprob: -17.125
    4. '_' → logprob: -17.75
    5. '_max' → logprob: -18.125
    6. '```' → logprob: -18.25
    7. '\' → logprob: -18.625
    8. '_MOD' → logprob: -18.875
    9. '_Mod' → logprob: -19.375
    10. '   ' → logprob: -19.625

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06418563425540924
    2. ':
' → logprob: -2.814185619354248
    3. '           ' → logprob: -6.189185619354248
    4. ':max' → logprob: -10.189186096191406
    5. ' max' → logprob: -10.814186096191406
    6. 'max' → logprob: -10.814186096191406
    7. ' :' → logprob: -11.189186096191406
    8. '=' → logprob: -11.189186096191406
    9. '       ' → logprob: -11.314186096191406
    10. '               ' → logprob: -11.689186096191406

Token 167: '           ' (ID: 352)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.034022312611341476
    2. '           ' → logprob: -4.034022331237793
    3. 'max' → logprob: -4.159022331237793
    4. '               ' → logprob: -10.034022331237793
    5. '```' → logprob: -10.159022331237793
    6. '       ' → logprob: -11.284022331237793
    7. '(max' → logprob: -11.409022331237793
    8. '
' → logprob: -12.534022331237793
    9. '	max' → logprob: -12.784022331237793
    10. '_max' → logprob: -13.034022331237793

Token 168: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.25193002820014954
    2. ' max' → logprob: -1.5019299983978271
    3. '           ' → logprob: -14.376930236816406
    4. '```' → logprob: -16.001930236816406
    5. '	max' → logprob: -16.751930236816406
    6. '_max' → logprob: -16.876930236816406
    7. '               ' → logprob: -17.126930236816406
    8. '(max' → logprob: -18.376930236816406
    9. '[max' → logprob: -19.001930236816406
    10. ',max' → logprob: -19.626930236816406

Token 169: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.128163257315464e-07
    2. 'mod' → logprob: -15.875
    3. '_max' → logprob: -16.875
    4. '_MOD' → logprob: -17.5
    5. '```' → logprob: -18.25
    6. '_' → logprob: -18.875
    7. '_Mod' → logprob: -19.125
    8. '_mode' → logprob: -19.25
    9. '\' → logprob: -19.375
    10. ' _' → logprob: -19.875

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759397745132446
    2. ' =' → logprob: -0.8259397745132446
    3. '=max' → logprob: -15.950940132141113
    4. ' ' → logprob: -16.950939178466797
    5. '```' → logprob: -16.950939178466797
    6. ' =
' → logprob: -17.325939178466797
    7. '+=' → logprob: -17.575939178466797
    8. ' +=' → logprob: -17.950939178466797
    9. '=
' → logprob: -17.950939178466797
    10. '＝' → logprob: -18.325939178466797

Token 171: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.2519291639328003
    2. 'val' → logprob: -1.5019291639328003
    3. '	val' → logprob: -16.626928329467773
    4. '(val' → logprob: -18.001928329467773
    5. '_val' → logprob: -18.251928329467773
    6. '[val' → logprob: -18.501928329467773
    7. '.val' → logprob: -19.001928329467773
    8. 'v' → logprob: -19.501928329467773
    9. ',val' → logprob: -19.501928329467773
    10. 'Val' → logprob: -19.876928329467773

Token 172: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.907810389995575
    2. '\n' → logprob: -1.9078104496002197
    3. ' ' → logprob: -2.1578104496002197
    4. ' return' → logprob: -2.5328104496002197
    5. '<|end|>' → logprob: -2.9078104496002197
    6. '\' → logprob: -3.0328104496002197
    7. ')' → logprob: -3.1578104496002197
    8. ' 
' → logprob: -3.4078104496002197
    9. '       ' → logprob: -3.9078104496002197
    10. '```' → logprob: -4.032810211181641

Token 174: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12391796708106995
    2. ' return' → logprob: -3.123918056488037
    3. 'return' (adapté à ' return') → logprob: -3.998918056488037
    4. '```' → logprob: -4.623918056488037
    5. ' 
' → logprob: -4.873918056488037
    6. '       ' → logprob: -4.998918056488037
    7. '\n' → logprob: -4.998918056488037
    8. '<|end|>' → logprob: -4.998918056488037
    9. ' ' → logprob: -5.623918056488037
    10. '    
' → logprob: -5.748918056488037

Token 175: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20141352713108063
    2. ' max' → logprob: -1.7014135122299194
    3. '(max' → logprob: -15.82641315460205
    4. '[max' → logprob: -17.326414108276367
    5. ',max' → logprob: -18.201414108276367
    6. '	max' → logprob: -18.201414108276367
    7. '=max' → logprob: -18.576414108276367
    8. '_max' → logprob: -19.201414108276367
    9. ' ' → logprob: -19.326414108276367
    10. '```' → logprob: -19.951414108276367

Token 176: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.750001907348633
    3. '_max' → logprob: -14.000001907348633
    4. 'mod' → logprob: -16.625001907348633
    5. '_MOD' → logprob: -17.000001907348633
    6. '```' → logprob: -17.500001907348633
    7. '_re' → logprob: -17.625001907348633
    8. '\' → logprob: -18.000001907348633
    9. '_Mod' → logprob: -18.000001907348633
    10. ' _' → logprob: -18.250001907348633

Token 177: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7168310284614563
    2. '<|end|>' → logprob: -0.7168310284614563
    3. '
' → logprob: -4.341831207275391
    4. '```' → logprob: -5.966831207275391
    5. '#' → logprob: -6.591831207275391
    6. ':' → logprob: -6.716831207275391
    7. '<|end|>' → logprob: -6.716831207275391
    8. ',' → logprob: -7.091831207275391
    9. '[' → logprob: -7.466831207275391
    10. '\n' → logprob: -7.716831207275391

Token 178: 'input' (ID: 2586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01592421531677246
    2. '<|end|>' → logprob: -5.015924453735352
    3. '#' → logprob: -5.390924453735352
    4. '
' → logprob: -6.765924453735352
    5. ':' → logprob: -7.140924453735352
    6. '```' → logprob: -7.265924453735352
    7. '[' → logprob: -7.515924453735352
    8. '(' → logprob: -7.765924453735352
    9. ',' → logprob: -8.390924453735352
    10. '%' → logprob: -9.015924453735352

Token 179: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0623253770172596
    2. '_data' → logprob: -3.3123254776000977
    3. '(' → logprob: -4.187325477600098
    4. '_' → logprob: -5.812325477600098
    5. '().' → logprob: -6.812325477600098
    6. 's' → logprob: -6.937325477600098
    7. '_lines' → logprob: -7.312325477600098
    8. '_str' → logprob: -7.812325477600098
    9. '_line' → logprob: -7.812325477600098
    10. '()[' → logprob: -7.937325477600098

Token 180: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4775119125843048
    2. ' sys' → logprob: -0.9775118827819824
    3. 'input' → logprob: -5.852511882781982
    4. ' input' → logprob: -7.602511882781982
    5. 'lambda' → logprob: -10.72751235961914
    6. ' lambda' → logprob: -11.60251235961914
    7. '=sys' → logprob: -11.72751235961914
    8. '(sys' → logprob: -11.97751235961914
    9. '	sys' → logprob: -12.72751235961914
    10. '[]' → logprob: -12.97751235961914

Token 181: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.024114340543746948
    2. '.stdin' → logprob: -3.7741143703460693
    3. '.readline' → logprob: -7.64911413192749
    4. '.stdout' → logprob: -9.149114608764648
    5. '.argv' → logprob: -9.399114608764648
    6. ' .' → logprob: -9.524114608764648
    7. '.next' → logprob: -10.399114608764648
    8. '.​' → logprob: -10.899114608764648
    9. '```' → logprob: -11.274114608764648
    10. 'import' → logprob: -11.774114608764648

Token 182: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001839633216150105
    2. '.' → logprob: -6.376839637756348
    3. '.read' → logprob: -9.126839637756348
    4. '.readlines' → logprob: -10.751839637756348
    5. '.stdin' → logprob: -12.376839637756348
    6. '```' → logprob: -14.001839637756348
    7. '.Read' → logprob: -14.251839637756348
    8. '.buffer' → logprob: -14.626839637756348
    9. 'read' → logprob: -15.001839637756348
    10. ' readline' → logprob: -15.251839637756348

Token 183: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.77337646484375
    2. '(' → logprob: -1.27337646484375
    3. '()' → logprob: -2.64837646484375
    4. '(n' → logprob: -2.64837646484375
    5. 'data' → logprob: -3.39837646484375
    6. '(
' → logprob: -4.14837646484375
    7. 'for' → logprob: -4.64837646484375
    8. 's' → logprob: -4.77337646484375
    9. 'def' → logprob: -4.77337646484375
    10. 'a' → logprob: -5.27337646484375

Token 185: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.002494683489203453
    2. 'True' → logprob: -6.002494812011719
    3. '(True' → logprob: -11.127494812011719
    4. ' ' → logprob: -12.502494812011719
    5. '1' → logprob: -15.127494812011719
    6. ' line' → logprob: -15.752494812011719
    7. ' input' → logprob: -16.62749481201172
    8. ' true' → logprob: -17.00249481201172
    9. '=True' → logprob: -17.00249481201172
    10. ' not' → logprob: -18.00249481201172

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1424325406551361
    2. '():' → logprob: -2.392432451248169
    3. '():
' → logprob: -4.392432689666748
    4. ' :' → logprob: -4.392432689666748
    5. ':
' → logprob: -4.642432689666748
    6. '   ' → logprob: -5.642432689666748
    7. '(' → logprob: -6.142432689666748
    8. ' (' → logprob: -8.14243221282959
    9. ' :
' → logprob: -8.64243221282959
    10. '(True' → logprob: -8.89243221282959

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034706149250268936
    2. ':' → logprob: -3.9097061157226562
    3. ' line' → logprob: -4.409706115722656
    4. ':
' → logprob: -6.534706115722656
    5. '(line' → logprob: -9.409706115722656
    6. '    
' → logprob: -9.784706115722656
    7. ' :' → logprob: -9.909706115722656
    8. ' try' → logprob: -9.909706115722656
    9. '():' → logprob: -10.159706115722656
    10. '	line' → logprob: -10.409706115722656

Token 188: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.049378082156181335
    2. 'line' (adapté à ' line') → logprob: -3.0493781566619873
    3. '   ' → logprob: -7.924377918243408
    4. 'try' → logprob: -8.424378395080566
    5. ' try' → logprob: -8.549378395080566
    6. ' s' → logprob: -12.049378395080566
    7. 's' → logprob: -12.299378395080566
    8. 'n' → logprob: -13.174378395080566
    9. '	line' → logprob: -13.799378395080566
    10. ' n' → logprob: -14.049378395080566

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694595754146576
    2. '=' → logprob: -2.126945972442627
    3. '=line' → logprob: -11.126945495605469
    4. '.strip' → logprob: -13.751945495605469
    5. ':' → logprob: -14.251945495605469
    6. '()' → logprob: -14.751945495605469
    7. '.' → logprob: -15.751945495605469
    8. ' ' → logprob: -16.00194549560547
    9. '=input' → logprob: -16.25194549560547
    10. '   ' → logprob: -16.25194549560547

Token 190: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.28657999634742737
    2. ' input' → logprob: -1.786579966545105
    3. 'sys' → logprob: -2.7865800857543945
    4. ' sys' → logprob: -3.9115800857543945
    5. 'import' → logprob: -16.286579132080078
    6. '(sys' → logprob: -16.786579132080078
    7. '=sys' → logprob: -17.161579132080078
    8. '=input' → logprob: -17.536579132080078
    9. '<input' → logprob: -17.536579132080078
    10. '(input' → logprob: -17.786579132080078

Token 191: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007889693602919579
    2. '().' → logprob: -5.007889747619629
    3. '()
' → logprob: -6.757889747619629
    4. '.strip' → logprob: -12.632889747619629
    5. '()
' → logprob: -12.757889747619629
    6. '(' → logprob: -13.007889747619629
    7. '()

' → logprob: -13.632889747619629
    8. '=' → logprob: -14.507889747619629
    9. 'strip' → logprob: -15.007889747619629
    10. '();' → logprob: -15.257889747619629

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03473920002579689
    2. ' if' → logprob: -3.4097392559051514
    3. 'if' → logprob: -7.409739017486572
    4. '
' → logprob: -8.90973949432373
    5. '<|end|>' → logprob: -8.90973949432373
    6. '.strip' → logprob: -10.03473949432373
    7. ',' → logprob: -10.15973949432373
    8. ' ' → logprob: -10.65973949432373
    9. ' =' → logprob: -10.65973949432373
    10. '    
' → logprob: -10.90973949432373

Token 193: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.040744002908468246
    2. 'if' (adapté à ' if') → logprob: -3.2907440662384033
    3. '   ' → logprob: -5.915743827819824
    4. '	if' → logprob: -14.040743827819824
    5. '
' → logprob: -14.415743827819824
    6. ' ' → logprob: -15.415743827819824
    7. 'If' → logprob: -16.16574478149414
    8. '    ' → logprob: -16.16574478149414
    9. '    
' → logprob: -16.16574478149414
    10. '<|end|>' → logprob: -16.41574478149414

Token 194: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07889319956302643
    2. 'not' → logprob: -2.5788931846618652
    3. 'line' → logprob: -13.078893661499023
    4. ' line' → logprob: -13.578893661499023
    5. '	not' → logprob: -17.328893661499023
    6. '!' → logprob: -17.703893661499023
    7. 'Not' → logprob: -18.703893661499023
    8. '#line' → logprob: -18.828893661499023
    9. ' ' → logprob: -19.328893661499023
    10. '```' → logprob: -19.328893661499023

Token 195: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04858759790658951
    2. ' line' → logprob: -3.0485875606536865
    3. '	line' → logprob: -15.798587799072266
    4. '(line' → logprob: -16.548587799072266
    5. '#line' → logprob: -17.048587799072266
    6. '[line' → logprob: -18.548587799072266
    7. '=line' → logprob: -18.798587799072266
    8. '```' → logprob: -18.923587799072266
    9. '   ' → logprob: -19.298587799072266
    10. '
' → logprob: -19.298587799072266

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26662677526474
    2. '.strip' → logprob: -1.7666268348693848
    3. ':
' → logprob: -2.8916268348693848
    4. '.' → logprob: -5.016626834869385
    5. '.rstrip' → logprob: -7.641626834869385
    6. '.startswith' → logprob: -8.891626358032227
    7. ':return' → logprob: -8.891626358032227
    8. '.readline' → logprob: -9.641626358032227
    9. ' or' → logprob: -9.766626358032227
    10. ' :' → logprob: -10.766626358032227

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060629406943917274
    2. '   ' → logprob: -5.131062984466553
    3. ':' → logprob: -9.131062507629395
    4. ':
' → logprob: -11.006062507629395
    5. ',' → logprob: -13.381062507629395
    6. '      ' → logprob: -13.506062507629395
    7. ' break' → logprob: -13.881062507629395
    8. '   ' → logprob: -13.881062507629395
    9. '     ' → logprob: -14.006062507629395
    10. ' ' → logprob: -14.131062507629395

Token 198: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.14962676167488098
    2. 'break' (adapté à ' break') → logprob: -2.1496267318725586
    3. '   ' → logprob: -4.149626731872559
    4. '       ' → logprob: -5.024626731872559
    5. '	break' → logprob: -9.399626731872559
    6. ' ' → logprob: -11.774626731872559
    7. '           ' → logprob: -12.274626731872559
    8. '_break' → logprob: -13.774626731872559
    9. '
' → logprob: -14.274626731872559
    10. '    ' → logprob: -14.524626731872559

Token 199: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005104990559630096
    2. '    
' → logprob: -7.6255106925964355
    3. '
' → logprob: -11.875510215759277
    4. 'n' → logprob: -12.125510215759277
    5. ',' → logprob: -13.250510215759277
    6. '<|end|>' → logprob: -13.625510215759277
    7. '```' → logprob: -13.750510215759277
    8. '  
' → logprob: -13.750510215759277
    9. 'tokens' → logprob: -13.875510215759277
    10. 'data' → logprob: -14.000510215759277

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01574235036969185
    2. 'n' → logprob: -4.765742301940918
    3. ' n' → logprob: -5.390742301940918
    4. '    
' → logprob: -6.890742301940918
    5. ' parts' → logprob: -7.265742301940918
    6. '
' → logprob: -8.765742301940918
    7. '```' → logprob: -9.140742301940918
    8. '[n' → logprob: -9.265742301940918
    9. ',' → logprob: -9.390742301940918
    10. 'data' → logprob: -9.640742301940918

Token 201: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3143112361431122
    2. 'n' (adapté à ' n') → logprob: -1.3143112659454346
    3. '   ' → logprob: -7.0643110275268555
    4. ' parts' → logprob: -8.689311027526855
    5. '```' → logprob: -11.564311027526855
    6. '	n' → logprob: -12.064311027526855
    7. 'parts' → logprob: -13.439311027526855
    8. 'a' → logprob: -13.439311027526855
    9. ' tokens' → logprob: -14.189311027526855
    10. ' data' → logprob: -14.314311027526855

Token 202: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001959082670509815
    2. ',m' → logprob: -6.251958847045898
    3. ' ,' → logprob: -11.126958847045898
    4. '=' → logprob: -12.501958847045898
    5. ',M' → logprob: -12.876958847045898
    6. ',K' → logprob: -13.251958847045898
    7. 'm' → logprob: -13.501958847045898
    8. ',n' → logprob: -13.501958847045898
    9. ',int' → logprob: -13.876958847045898
    10. ',k' → logprob: -14.251958847045898

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0643514096736908
    2. ',' → logprob: -3.4393513202667236
    3. ' =' → logprob: -3.5643513202667236
    4. ',K' → logprob: -6.814351558685303
    5. '=line' → logprob: -7.439351558685303
    6. ',k' → logprob: -8.939351081848145
    7. ',line' → logprob: -9.564351081848145
    8. ',l' → logprob: -11.939351081848145
    9. ',n' → logprob: -12.314351081848145
    10. ',val' → logprob: -12.439351081848145

Token 204: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3868730664253235
    2. 'map' → logprob: -1.1368730068206787
    3. ' line' → logprob: -13.511873245239258
    4. 'line' → logprob: -14.886873245239258
    5. '	map' → logprob: -15.761873245239258
    6. '(map' → logprob: -16.636873245239258
    7. 'list' → logprob: -16.886873245239258
    8. ' ' → logprob: -17.011873245239258
    9. ' list' → logprob: -17.261873245239258
    10. '.map' → logprob: -18.511873245239258

Token 205: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001093427068553865
    2. '(lambda' → logprob: -7.25109338760376
    3. '(' → logprob: -8.376093864440918
    4. '(str' → logprob: -9.001093864440918
    5. 'int' → logprob: -11.126093864440918
    6. '[int' → logprob: -11.251093864440918
    7. '<int' → logprob: -13.876093864440918
    8. '=int' → logprob: -15.251093864440918
    9. 'lambda' → logprob: -15.376093864440918
    10. '(line' → logprob: -15.751093864440918

Token 206: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.010070777498185635
    2. ',line' → logprob: -5.38507080078125
    3. 'line' → logprob: -5.88507080078125
    4. ')' → logprob: -6.13507080078125
    5. ',' → logprob: -8.38507080078125
    6. ' line' → logprob: -8.88507080078125
    7. '[line' → logprob: -10.26007080078125
    8. '=line' → logprob: -10.38507080078125
    9. '#line' → logprob: -10.51007080078125
    10. '(' → logprob: -11.13507080078125

Token 207: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004078401252627373
    2. ' line' → logprob: -5.504078388214111
    3. '(line' → logprob: -18.129077911376953
    4. '   ' → logprob: -19.129077911376953
    5. '	line' → logprob: -19.129077911376953
    6. '[line' → logprob: -20.629077911376953
    7. '#line' → logprob: -21.129077911376953
    8. '=line' → logprob: -21.629077911376953
    9. ' ' → logprob: -22.254077911376953
    10. 'list' → logprob: -22.379077911376953

Token 208: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.051352955400943756
    2. '.strip' → logprob: -3.0513529777526855
    3. '.split' → logprob: -5.9263529777526855
    4. '.' → logprob: -9.926352500915527
    5. '.readline' → logprob: -11.051352500915527
    6. 'strip' → logprob: -11.051352500915527
    7. '.rstrip' → logprob: -12.051352500915527
    8. 'split' → logprob: -12.926352500915527
    9. ' .' → logprob: -13.176352500915527
    10. '()' → logprob: -13.801352500915527

Token 209: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4810747504234314
    2. '())' → logprob: -0.9810747504234314
    3. '()' → logprob: -4.981074810028076
    4. '(' → logprob: -9.856074333190918
    5. '())
' → logprob: -10.481074333190918
    6. ')
' → logprob: -11.856074333190918
    7. '('' → logprob: -12.231074333190918
    8. '')' → logprob: -12.731074333190918
    9. ' )' → logprob: -12.856074333190918
    10. '))' → logprob: -13.106074333190918

Token 210: '   ' (ID: 271)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.048857249319553375
    2. '   ' → logprob: -3.1738572120666504
    3. 'arr' → logprob: -5.67385721206665
    4. ' K' → logprob: -6.79885721206665
    5. '<|end|>' → logprob: -7.92385721206665
    6. 'data' → logprob: -8.673857688903809
    7. 'k' → logprob: -8.798857688903809
    8. 'array' → logprob: -9.048857688903809
    9. 'line' → logprob: -9.298857688903809
    10. '	K' → logprob: -9.423857688903809

Token 211: ' if' (ID: 538)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.009590333327651024
    2. ' K' → logprob: -4.759590148925781
    3. '   ' → logprob: -7.384590148925781
    4. 'k' → logprob: -8.509590148925781
    5. 'arr' → logprob: -9.134590148925781
    6. 'data' → logprob: -11.384590148925781
    7. '	K' → logprob: -11.759590148925781
    8. 'array' → logprob: -12.009590148925781
    9. '  ' → logprob: -12.884590148925781
    10. 'A' → logprob: -13.009590148925781

Token 212: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22548997402191162
    2. 'n' → logprob: -1.6004899740219116
    3. '(n' → logprob: -9.975489616394043
    4. ' not' → logprob: -11.475489616394043
    5. ' (' → logprob: -11.850489616394043
    6. '	n' → logprob: -12.975489616394043
    7. 'm' → logprob: -13.100489616394043
    8. 'not' → logprob: -13.350489616394043
    9. '_n' → logprob: -13.725489616394043
    10. '[n' → logprob: -13.850489616394043

Token 213: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2014281451702118
    2. '==' → logprob: -1.7014281749725342
    3. ' ' → logprob: -12.451428413391113
    4. ')==' → logprob: -13.201428413391113
    5. ' <=' → logprob: -13.701428413391113
    6. '<=' → logprob: -13.951428413391113
    7. '=' → logprob: -13.951428413391113
    8. ']==' → logprob: -14.076428413391113
    9. '<|end|>' → logprob: -14.076428413391113
    10. ' <' → logprob: -14.201428413391113

Token 214: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005556552205234766
    2. ' ' → logprob: -7.500555515289307
    3. 'm' → logprob: -13.000555992126465
    4. '```' → logprob: -16.50055503845215
    5. ' m' → logprob: -16.81305503845215
    6. '۰' → logprob: -17.31305503845215
    7. ' ' → logprob: -17.37555503845215
    8. '   ' → logprob: -17.62555503845215
    9. 'and' → logprob: -17.62555503845215
    10. '
' → logprob: -17.81305503845215

Token 215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.750008583068848
    3. 'm' → logprob: -14.500008583068848
    4. '```' → logprob: -16.000009536743164
    5. '-' → logprob: -16.250009536743164
    6. '۰' → logprob: -17.000009536743164
    7. 'and' → logprob: -17.187509536743164
    8. '０' → logprob: -17.875009536743164
    9. 's' → logprob: -18.125009536743164
    10. 'o' → logprob: -18.375009536743164

Token 216: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04888653755187988
    2. 'and' → logprob: -3.04888653755188
    3. '   ' → logprob: -8.1738862991333
    4. '	and' → logprob: -11.4238862991333
    5. ' ' → logprob: -12.5488862991333
    6. '  ' → logprob: -14.0488862991333
    7. '0' → logprob: -14.1738862991333
    8. ' or' → logprob: -14.9238862991333
    9. '    ' → logprob: -15.0488862991333
    10. ' ' → logprob: -15.5488862991333

Token 217: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03804149478673935
    2. ' m' → logprob: -3.288041591644287
    3. '   ' → logprob: -18.163042068481445
    4. '	m' → logprob: -18.663042068481445
    5. '  ' → logprob: -19.288042068481445
    6. ' ' → logprob: -19.663042068481445
    7. ' ' → logprob: -20.663042068481445
    8. '    ' → logprob: -22.038042068481445
    9. 'M' → logprob: -23.788042068481445
    10. '_m' → logprob: -24.663042068481445

Token 218: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4740878641605377
    2. '==' → logprob: -0.9740878343582153
    3. '0' → logprob: -11.724087715148926
    4. '=' → logprob: -13.849087715148926
    5. ')==' → logprob: -14.349087715148926
    6. ' ' → logprob: -14.849087715148926
    7. ']==' → logprob: -15.599087715148926
    8. '===' → logprob: -15.724087715148926
    9. ' ' → logprob: -16.099088668823242
    10. '()==' → logprob: -16.224088668823242

Token 219: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -19.125011444091797
    4. '০' → logprob: -20.687511444091797
    5. '０' → logprob: -21.250011444091797
    6. '<|end|>' → logprob: -21.250011444091797
    7. '०' → logprob: -21.750011444091797
    8. '```' → logprob: -21.750011444091797
    9. '   ' → logprob: -21.875011444091797
    10. '  ' → logprob: -22.125011444091797

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -19.375001907348633
    4. '০' → logprob: -20.500001907348633
    5. '<|end|>' → logprob: -20.750001907348633
    6. '   ' → logprob: -21.500001907348633
    7. '<|end|>' → logprob: -21.562501907348633
    8. '०' → logprob: -21.625001907348633
    9. '  ' → logprob: -21.687501907348633
    10. '０' → logprob: -22.062501907348633

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7104403972625732
    2. ':
' → logprob: -0.9604403972625732
    3. '       ' → logprob: -2.0854403972625732
    4. '   ' → logprob: -6.460440635681152
    5. '):
' → logprob: -11.835440635681152
    6. ',' → logprob: -12.210440635681152
    7. ' :
' → logprob: -12.710440635681152
    8. '():
' → logprob: -12.960440635681152
    9. ':

' → logprob: -13.210440635681152
    10. ':
' → logprob: -13.335440635681152

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.674858301877975e-05
    2. '   ' → logprob: -10.000096321105957
    3. ':' → logprob: -10.125096321105957
    4. ':
' → logprob: -11.500096321105957
    5. '      ' → logprob: -14.750096321105957
    6. '           ' → logprob: -15.000096321105957
    7. '     ' → logprob: -15.375096321105957
    8. ',' → logprob: -16.750097274780273
    9. ' break' → logprob: -16.750097274780273
    10. '	' → logprob: -17.125097274780273

Token 223: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.23294705152511597
    2. '       ' → logprob: -1.7329471111297607
    3. 'break' (adapté à ' break') → logprob: -3.4829471111297607
    4. '   ' → logprob: -8.48294734954834
    5. '	break' → logprob: -9.10794734954834
    6. '           ' → logprob: -12.10794734954834
    7. ' ' → logprob: -14.23294734954834
    8. '_break' → logprob: -15.23294734954834
    9. '      ' → logprob: -15.73294734954834
    10. '     ' → logprob: -15.85794734954834

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025012090802192688
    2. 'K' → logprob: -3.9000120162963867
    3. ' K' → logprob: -5.775012016296387
    4. '    
' → logprob: -7.775012016296387
    5. '<|end|>' → logprob: -8.025012016296387
    6. '
' → logprob: -8.400012016296387
    7. '```' → logprob: -8.900012016296387
    8. '  ' → logprob: -9.650012016296387
    9. '	K' → logprob: -9.900012016296387
    10. ',K' → logprob: -10.900012016296387

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5780982375144958
    2. 'K' → logprob: -0.8280982375144958
    3. ' K' → logprob: -6.453098297119141
    4. 'arr' → logprob: -8.57809829711914
    5. '    
' → logprob: -9.32809829711914
    6. '```' → logprob: -9.32809829711914
    7. '<|end|>' → logprob: -9.95309829711914
    8. '  ' → logprob: -10.20309829711914
    9. '	K' → logprob: -10.32809829711914
    10. '
' → logprob: -11.07809829711914

Token 226: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' (adapté à ' K') → logprob: -0.0011791547294706106
    2. '   ' → logprob: -7.126179218292236
    3. ' K' → logprob: -8.126178741455078
    4. 'k' → logprob: -10.251178741455078
    5. 'arr' → logprob: -10.376178741455078
    6. 'data' → logprob: -12.251178741455078
    7. 'A' → logprob: -13.501178741455078
    8. '	K' → logprob: -13.501178741455078
    9. '  ' → logprob: -13.751178741455078
    10. 'array' → logprob: -14.126178741455078

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740789234638214
    2. '=' → logprob: -0.974078893661499
    3. '=list' → logprob: -14.349079132080078
    4. '   ' → logprob: -14.849079132080078
    5. '=[]' → logprob: -15.099079132080078
    6. '=line' → logprob: -15.849079132080078
    7. ' ' → logprob: -16.099079132080078
    8. '＝' → logprob: -16.724079132080078
    9. '=[]
' → logprob: -16.849079132080078
    10. ' =[' → logprob: -16.849079132080078

Token 228: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002476016292348504
    2. ' list' → logprob: -6.002476215362549
    3. '[list' → logprob: -14.87747573852539
    4. '[' → logprob: -17.12747573852539
    5. '[]' → logprob: -19.37747573852539
    6. '	list' → logprob: -19.50247573852539
    7. '=list' → logprob: -19.50247573852539
    8. '   ' → logprob: -19.50247573852539
    9. ' [' → logprob: -20.12747573852539
    10. '(list' → logprob: -20.37747573852539

Token 229: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.375
    3. 'map' → logprob: -16.625
    4. '(range' → logprob: -19.0
    5. '()' → logprob: -19.75
    6. '(m' → logprob: -20.375
    7. '(int' → logprob: -21.0
    8. '(list' → logprob: -21.0
    9. '	map' → logprob: -21.5
    10. ' (' → logprob: -21.625

Token 230: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10036830604076385
    2. 'int' → logprob: -2.3503682613372803
    3. ',int' → logprob: -9.85036849975586
    4. '[int' → logprob: -10.10036849975586
    5. '=int' → logprob: -10.60036849975586
    6. ' int' → logprob: -11.10036849975586
    7. '<int' → logprob: -11.60036849975586
    8. ')' → logprob: -12.10036849975586
    9. ']int' → logprob: -12.22536849975586
    10. '(' → logprob: -12.85036849975586

Token 231: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3357681334018707
    2. ',' → logprob: -1.3357681035995483
    3. '(input' → logprob: -3.835768222808838
    4. 'input' → logprob: -7.335768222808838
    5. '(' → logprob: -12.21076774597168
    6. ' input' → logprob: -12.58576774597168
    7. '   ' → logprob: -12.71076774597168
    8. ' ,' → logprob: -13.08576774597168
    9. 'sys' → logprob: -13.21076774597168
    10. '=input' → logprob: -13.96076774597168

Token 232: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002476135268807411
    2. ' input' → logprob: -6.002476215362549
    3. 'sys' → logprob: -14.62747573852539
    4. '(input' → logprob: -18.00247573852539
    5. ' sys' → logprob: -18.62747573852539
    6. '   ' → logprob: -19.37747573852539
    7. '	input' → logprob: -19.75247573852539
    8. '<input' → logprob: -20.62747573852539
    9. ',input' → logprob: -20.62747573852539
    10. '=input' → logprob: -20.87747573852539

Token 233: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.456358823925257e-05
    2. '()' → logprob: -10.125064849853516
    3. '()))' → logprob: -10.625064849853516
    4. '(' → logprob: -16.625064849853516
    5. ' ().' → logprob: -17.000064849853516
    6. '())' → logprob: -17.625064849853516
    7. '()));' → logprob: -18.000064849853516
    8. '))' → logprob: -18.500064849853516
    9. '()
' → logprob: -18.750064849853516
    10. '()[' → logprob: -19.250064849853516

Token 234: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002540943678468466
    2. 'strip' → logprob: -6.0025410652160645
    3. 'rstrip' → logprob: -9.752540588378906
    4. 'read' → logprob: -12.127540588378906
    5. ' split' → logprob: -13.377540588378906
    6. '(split' → logprob: -15.377540588378906
    7. ')' → logprob: -17.877540588378906
    8. ' strip' → logprob: -18.002540588378906
    9. ' readline' → logprob: -18.877540588378906
    10. 'decode' → logprob: -19.252540588378906

Token 235: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4745500683784485
    2. '))' → logprob: -0.9745500683784485
    3. '()' → logprob: -8.474550247192383
    4. '()))
' → logprob: -8.599550247192383
    5. '())' → logprob: -9.974550247192383
    6. '(' → logprob: -11.099550247192383
    7. '))
' → logprob: -11.474550247192383
    8. '()));' → logprob: -12.724550247192383
    9. ')' → logprob: -13.224550247192383
    10. ' ))' → logprob: -13.849550247192383

Token 236: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5784891843795776
    2. '   ' → logprob: -0.8284891843795776
    3. '```' → logprob: -6.078489303588867
    4. '<|end|>' → logprob: -9.078489303588867
    5. ' print' → logprob: -9.703489303588867
    6. '
' → logprob: -10.203489303588867
    7. '``' → logprob: -10.578489303588867
    8. 'result' → logprob: -12.328489303588867
    9. '    
' → logprob: -12.328489303588867
    10. '#print' → logprob: -13.078489303588867

Token 237: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5332478142227046e-05
    2. 'result' → logprob: -11.500015258789062
    3. ' print' → logprob: -12.500015258789062
    4. '   ' → logprob: -14.125015258789062
    5. '```' → logprob: -14.500015258789062
    6. 'res' → logprob: -16.125015258789062
    7. '
' → logprob: -17.250015258789062
    8. '    
' → logprob: -17.500015258789062
    9. '``' → logprob: -19.875015258789062
    10. 'answer' → logprob: -20.000015258789062

Token 238: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -2.47495681833243e-05
    2. '(' → logprob: -11.000024795532227
    3. 'max' → logprob: -11.750024795532227
    4. ' max' → logprob: -16.625024795532227
    5. '=max' → logprob: -18.125024795532227
    6. ',max' → logprob: -19.500024795532227
    7. '[max' → logprob: -20.250024795532227
    8. '	max' → logprob: -20.500024795532227
    9. '(Max' → logprob: -20.875024795532227
    10. ':max' → logprob: -21.000024795532227

Token 239: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -3.7697225252486533e-06
    2. 're' → logprob: -12.750003814697266
    3. '_mod' → logprob: -14.625003814697266
    4. '_rem' → logprob: -16.000003814697266
    5. 'max' → logprob: -17.125003814697266
    6. '_' → logprob: -17.625003814697266
    7. '_remaining' → logprob: -18.000003814697266
    8. '_max' → logprob: -18.500003814697266
    9. '_r' → logprob: -18.750003814697266
    10. ')' → logprob: -19.000003814697266

Token 240: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0009839815320447087
    2. 'ma' → logprob: -7.250984191894531
    3. 'm' → logprob: -8.250984191894531
    4. 'main' → logprob: -11.875984191894531
    5. 're' → logprob: -12.500984191894531
    6. '_ma' → logprob: -13.875984191894531
    7. '(' → logprob: -15.250984191894531
    8. '_' → logprob: -15.750984191894531
    9. '```' → logprob: -15.750984191894531
    10. 'mand' → logprob: -15.750984191894531

Token 241: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5570885807392187e-05
    2. '(' → logprob: -12.125015258789062
    3. ')' → logprob: -12.375015258789062
    4. ' (' → logprob: -12.625015258789062
    5. ')(' → logprob: -13.000015258789062
    6. ')n' → logprob: -16.250015258789062
    7. ',n' → logprob: -17.000015258789062
    8. '(len' → logprob: -17.375015258789062
    9. '```' → logprob: -17.750015258789062
    10. '(
' → logprob: -18.000015258789062

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3133086860179901
    2. ',m' → logprob: -1.3133087158203125
    3. ' ,' → logprob: -10.688308715820312
    4. '(m' → logprob: -11.438308715820312
    5. ',k' → logprob: -12.563308715820312
    6. 'm' → logprob: -12.563308715820312
    7. ',n' → logprob: -13.188308715820312
    8. '(' → logprob: -13.313308715820312
    9. ',K' → logprob: -13.813308715820312
    10. '   ' → logprob: -14.438308715820312

Token 243: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.36574100604048e-06
    2. ' m' → logprob: -12.375004768371582
    3. '   ' → logprob: -17.125003814697266
    4. 'K' → logprob: -20.625003814697266
    5. ' ' → logprob: -21.625003814697266
    6. '       ' → logprob: -21.750003814697266
    7. '```' → logprob: -21.750003814697266
    8. ')' → logprob: -22.000003814697266
    9. '  ' → logprob: -22.125003814697266
    10. '    ' → logprob: -22.125003814697266

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004084335640072823
    2. ',K' → logprob: -5.50408411026001
    3. ' ,' → logprob: -12.504084587097168
    4. 'K' → logprob: -13.129084587097168
    5. ',
' → logprob: -17.12908363342285
    6. '   ' → logprob: -17.37908363342285
    7. '(K' → logprob: -17.50408363342285
    8. ',k' → logprob: -17.62908363342285
    9. '`,' → logprob: -17.62908363342285
    10. '，' → logprob: -18.12908363342285

Token 245: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -3.547789674485102e-05
    2. ' K' → logprob: -10.250035285949707
    3. '	K' → logprob: -19.875036239624023
    4. '   ' → logprob: -20.125036239624023
    5. '(K' → logprob: -20.375036239624023
    6. ',K' → logprob: -21.000036239624023
    7. '[K' → logprob: -22.000036239624023
    8. '>K' → logprob: -22.500036239624023
    9. ')' → logprob: -22.875036239624023
    10. '<K' → logprob: -23.500036239624023

Token 246: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011724866926670074
    2. ')' → logprob: -6.7511725425720215
    3. '))
' → logprob: -13.251172065734863
    4. ')))' → logprob: -14.876172065734863
    5. '()))' → logprob: -16.87617301940918
    6. ' ))' → logprob: -17.25117301940918
    7. ')
' → logprob: -17.75117301940918
    8. '),' → logprob: -17.87617301940918
    9. '   ' → logprob: -19.37617301940918
    10. '))

' → logprob: -19.62617301940918


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 244
Tokens correctement prédits (1ère position, stricte): 125
Tokens correctement prédits (1ère position, avec adaptation): 131
Tokens correctement prédits (top 10): 216
Précision stricte (1ère position): 51.23%
Précision adaptée (1ère position): 53.69%
Précision (top 10): 88.52%
================================================================================
