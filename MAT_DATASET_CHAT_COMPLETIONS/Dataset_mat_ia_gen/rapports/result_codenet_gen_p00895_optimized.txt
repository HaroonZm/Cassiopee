================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

directions = [(-1,0),(1,0),(0,-1),(0,1),(-1,-1),(-1,1),(1,-1),(1,1)]

def get_seq(grid, h, w, r, c, dr, dc, length):
    seq = []
    for k in range(length):
        rr = (r + dr*k) % h
        cc = (c + dc*k) % w
        seq.append(grid[rr][cc])
    return ''.join(seq)

def has_self_overlap(seq, length):
    # Check if it can be split into repeats of substring of length d<length
    # Because of wrapping, the square sequence must not overlap itself,
    # so length must be <= half of the length to avoid overlap
    # But exact definition: no overlapping squares in the sequence itself
    # We consider no repeated positions in the sequence
    # Since the donut wraps, max length of non-self-overlapping seq is minimal period length
    # But the prompt says the sequences cannot overlap themselves;
    # length > half the dimension * 2? To keep simple,
    # self-overlap means that the repetition is shorter than length
    # So we exclude sequences that are formed by repeating smaller sequences multiple times
    # Actually, we must confirm that sequence doesn't repeat itself within length:
    # so check for periodicity:
    for sublen in range(1,length//2+1):
        if length % sublen != 0:
            continue
        if seq == seq[:sublen]*(length//sublen):
            return True
    return False

def solve_grid(h,w,grid):
    max_len = min(h,w)*max(2,max(h,w)) + 20  # upper bound sufficiently large
    # Because sequences wrap, length can be more than h or w
    # but the sequence can't overlap itself:
    # So max length is at most h*w (but checking that is expensive)
    # Use max length = lcm of h and w *2 or so is overkill.
    # According to problem constraints, 10*20=200 max cells,
    # and sequences can't overlap themselves, so max length <= h*w
    
    # We'll check lengths from longest possible down to 2
    max_search_len = h*w
    found = []
    # Precompute sequences for all starting points, directions and lengths
    # To do this efficiently, we store sequences in a dict length-> dict seq -> list of (r,c,d)
    # But memory can be large; so just do checking length from max_search_len down to 2,
    # and for each length we find sequences with count>1, respecting non-self-overlapping,
    # and pick lex smallest and return.
    
    # To speed up counting sequences, we can store sequences in dictionary and count.
    for length in range(max_search_len,1,-1):
        counter = {}
        for r in range(h):
            for c in range(w):
                for dr,dc in directions:
                    seq = get_seq(grid,h,w,r,c,dr,dc,length)
                    # Check self-overlap:
                    # If sequence doesn't have repeated positions, no overlap
                    # From problem's examples and constraints:
                    # The sequences are not allowed if they overlap themselves, e.g. periodic sequences
                    if has_self_overlap(seq,length):
                        continue
                    counter[seq] = counter.get(seq,0)+1
        candidates = [s for s,count in counter.items() if count>1]
        if candidates:
            return min(candidates)
    return "0"

def main():
    input = sys.stdin.readline
    while True:
        line = ''
        while line.strip()=='':
            line = input()
            if not line:
                return
        h,w = map(int,line.strip().split())
        if h==0 and w==0:
            break
        grid = [input().strip() for _ in range(h)]
        print(solve_grid(h,w,grid))

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.579630434513092
    2. '.' → logprob: -0.954630434513092
    3. 'import' → logprob: -3.9546303749084473
    4. '\' → logprob: -4.829630374908447
    5. 'newline' → logprob: -4.954630374908447
    6. '
' → logprob: -5.079630374908447
    7. '<|end|>' → logprob: -5.329630374908447
    8. '```' → logprob: -5.579630374908447
    9. '' → logprob: -6.704630374908447
    10. '<|end|>' → logprob: -6.954630374908447

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7622331976890564
    2. 's' → logprob: -1.1372332572937012
    3. 't' → logprob: -2.887233257293701
    4. 'sys' → logprob: -3.262233257293701
    5. 'set' → logprob: -3.637233257293701
    6. 'soft' → logprob: -4.012233257293701
    7. 'default' → logprob: -4.262233257293701
    8. '_' → logprob: -5.012233257293701
    9. 'ex' → logprob: -5.012233257293701
    10. 'suffix' → logprob: -5.137233257293701

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037507908418774605
    2. 'ursive' → logprob: -6.378750801086426
    3. 'limit' → logprob: -7.003750801086426
    4. 'ur' → logprob: -7.503750801086426
    5. 'urse' → logprob: -9.253750801086426
    6. 'urs' → logprob: -9.503750801086426
    7. '_limit' → logprob: -9.628750801086426
    8. 'ut' → logprob: -9.753750801086426
    9. 'u' → logprob: -10.003750801086426
    10. 't' → logprob: -10.128750801086426

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.48665714263916016
    2. 'limit' → logprob: -0.9866571426391602
    3. '_depth' → logprob: -4.48665714263916
    4. 'depth' → logprob: -7.48665714263916
    5. '_' → logprob: -8.36165714263916
    6. '_rate' → logprob: -9.98665714263916
    7. 'lim' → logprob: -10.23665714263916
    8. '(' → logprob: -10.36165714263916
    9. '_factor' → logprob: -10.48665714263916
    10. '_stack' → logprob: -10.61165714263916

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.37501335144043

Token 13: 'dire' (ID: 57765)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046520017087459564
    2. '
' → logprob: -3.5465199947357178
    3. '

' → logprob: -4.921520233154297
    4. '```' → logprob: -5.296520233154297
    5. '\' → logprob: -6.421520233154297
    6. '
' → logprob: -7.046520233154297
    7. 'class' → logprob: -7.546520233154297
    8. '\n' → logprob: -7.671520233154297
    9. 'import' → logprob: -8.046520233154297
    10. ')' → logprob: -8.921520233154297

Token 14: 'ctions' (ID: 2620)
  Prédit: 'ctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctions' → logprob: -0.017207138240337372
    2. 'ction' → logprob: -4.142207145690918
    3. 'c' → logprob: -7.267207145690918
    4. 'ct' → logprob: -7.892207145690918
    5. 'CTIONS' → logprob: -9.517207145690918
    6. 'cts' → logprob: -11.267207145690918
    7. 'ctors' → logprob: -11.642207145690918
    8. 'ections' → logprob: -13.142207145690918
    9. 'ctor' → logprob: -14.267207145690918
    10. 'cciones' → logprob: -14.392207145690918

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16504311561584473
    2. '=' → logprob: -2.1650431156158447
    3. '.' → logprob: -3.5400431156158447
    4. '[' → logprob: -4.915042877197266
    5. '[:]' → logprob: -7.415042877197266
    6. '['' → logprob: -9.290042877197266
    7. '_' → logprob: -9.540042877197266
    8. ')' → logprob: -10.165042877197266
    9. '[]' → logprob: -10.290042877197266
    10. '=[' → logprob: -10.665042877197266

Token 16: ' [' (ID: 723)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.09374848008155823
    2. '[(' → logprob: -3.3437485694885254
    3. ' ['' → logprob: -3.7187485694885254
    4. ' [' → logprob: -4.093748569488525
    5. '['' → logprob: -5.218748569488525
    6. '[' → logprob: -5.843748569488525
    7. ' {'' → logprob: -6.343748569488525
    8. ' [
' → logprob: -6.843748569488525
    9. ' {(' → logprob: -7.843748569488525
    10. '[['' → logprob: -7.968748569488525

Token 17: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002685990883037448
    2. '(-' → logprob: -6.252686023712158
    3. '[' → logprob: -7.377686023712158
    4. ' (' → logprob: -9.502685546875
    5. '   ' → logprob: -9.877685546875
    6. '[-' → logprob: -12.877685546875
    7. '(+' → logprob: -13.127685546875
    8. '(up' → logprob: -14.627685546875
    9. ' [' → logprob: -15.252685546875
    10. '0' → logprob: -15.627685546875

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.5
    3. ' ' → logprob: -15.625
    4. '3' → logprob: -18.125
    5. ')' → logprob: -18.625
    6. '```' → logprob: -18.8125
    7. '0' → logprob: -19.25
    8. '4' → logprob: -19.5625
    9. '10' → logprob: -19.6875
    10. '   ' → logprob: -19.9375

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1424973713001236e-05
    2. ' ,' → logprob: -10.500031471252441
    3. '0' → logprob: -12.750031471252441
    4. '),' → logprob: -14.875031471252441
    5. '<|end|>' → logprob: -14.875031471252441
    6. '1' → logprob: -16.375030517578125
    7. ')' → logprob: -16.625030517578125
    8. '```' → logprob: -17.500030517578125
    9. '‌,' → logprob: -17.750030517578125
    10. ' ' → logprob: -17.875030517578125

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868713080883026
    2. ' ' → logprob: -1.136871337890625
    3. ')' → logprob: -15.511871337890625
    4. ' ' → logprob: -16.761871337890625
    5. ' )' → logprob: -18.011871337890625
    6. '<|end|>' → logprob: -18.261871337890625
    7. '-' → logprob: -18.511871337890625
    8. '  ' → logprob: -18.636871337890625
    9. '۰' → logprob: -18.886871337890625
    10. '

' → logprob: -19.136871337890625

Token 21: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.009382973425090313
    2. ')' → logprob: -5.259383201599121
    3. '),(' → logprob: -5.509383201599121
    4. ' ),' → logprob: -10.384383201599121
    5. ')]' → logprob: -10.634383201599121
    6. '),
' → logprob: -10.759383201599121
    7. '),

' → logprob: -11.634383201599121
    8. ',' → logprob: -12.884383201599121
    9. '<|end|>' → logprob: -14.009383201599121
    10. ')],' → logprob: -14.384383201599121

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004362718027550727
    2. ' ' → logprob: -8.125435829162598
    3. '0' → logprob: -8.875435829162598
    4. '-' → logprob: -15.875435829162598
    5. '

' → logprob: -16.500436782836914
    6. '+' → logprob: -16.500436782836914
    7. '2' → logprob: -17.250436782836914
    8. '```' → logprob: -17.250436782836914
    9. '   ' → logprob: -17.375436782836914
    10. '01' → logprob: -18.062936782836914

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.755678961984813e-05
    2. '0' → logprob: -9.500077247619629
    3. ' ,' → logprob: -13.000077247619629
    4. '```' → logprob: -15.500077247619629
    5. ',(' → logprob: -15.625077247619629
    6. ' ' → logprob: -17.250078201293945
    7. ',-' → logprob: -17.500078201293945
    8. '‌,' → logprob: -18.000078201293945
    9. '<|end|>' → logprob: -18.125078201293945
    10. '),(' → logprob: -18.500078201293945

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -17.625011444091797
    4. '۰' → logprob: -18.000011444091797
    5. ',' → logprob: -18.812511444091797
    6. '  ' → logprob: -19.812511444091797
    7. '-' → logprob: -19.812511444091797
    8. ')' → logprob: -19.812511444091797
    9. '   ' → logprob: -19.937511444091797
    10. '<|end|>' → logprob: -20.187511444091797

Token 25: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.012804275378584862
    2. '),' → logprob: -4.3878045082092285
    3. ')' → logprob: -8.13780403137207
    4. ',' → logprob: -14.63780403137207
    5. ' ),' → logprob: -14.76280403137207
    6. '),
' → logprob: -14.88780403137207
    7. ')]' → logprob: -15.63780403137207
    8. '),'' → logprob: -15.88780403137207
    9. '```' → logprob: -16.26280403137207
    10. ')','' → logprob: -16.26280403137207

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033034008811227977
    2. '-' → logprob: -8.125329971313477
    3. ' ' → logprob: -10.375329971313477
    4. '```' → logprob: -13.750329971313477
    5. '1' → logprob: -14.625329971313477
    6. ',' → logprob: -14.812829971313477
    7. ' -' → logprob: -15.562829971313477
    8. ')' → logprob: -15.875329971313477
    9. '``' → logprob: -16.312829971313477
    10. '

' → logprob: -16.312829971313477

Token 27: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.011063974350690842
    2. ',' → logprob: -4.511064052581787
    3. ',-

' → logprob: -12.011063575744629
    4. '-' → logprob: -12.386063575744629
    5. ',--' → logprob: -13.261063575744629
    6. '1' → logprob: -13.761063575744629
    7. ',-
' → logprob: -13.886063575744629
    8. ' ,-' → logprob: -14.261063575744629
    9. ',+' → logprob: -15.261063575744629
    10. ',

' → logprob: -15.386063575744629

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -16.750001907348633
    4. ',' → logprob: -17.687501907348633
    5. '-' → logprob: -17.875001907348633
    6. ')' → logprob: -17.937501907348633
    7. '۱' → logprob: -18.312501907348633
    8. '１' → logprob: -18.312501907348633
    9. '১' → logprob: -18.500001907348633
    10. '<|end|>' → logprob: -18.562501907348633

Token 29: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00027456742827780545
    2. '),' → logprob: -8.750274658203125
    3. ')' → logprob: -9.625274658203125
    4. ')]' → logprob: -10.000274658203125
    5. ',' → logprob: -13.500274658203125
    6. ',(' → logprob: -13.750274658203125
    7. ')(' → logprob: -14.500274658203125
    8. '(' → logprob: -14.500274658203125
    9. ')])' → logprob: -14.875274658203125
    10. '))' → logprob: -15.875274658203125

Token 30: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011845153057947755
    2. '0' → logprob: -6.751184463500977
    3. ' ' → logprob: -11.251184463500977
    4. ')' → logprob: -14.376184463500977
    5. '+' → logprob: -15.001184463500977
    6. '```' → logprob: -15.001184463500977
    7. '01' → logprob: -17.126184463500977
    8. '2' → logprob: -17.188684463500977
    9. ',' → logprob: -17.688684463500977
    10. '>' → logprob: -18.126184463500977

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.91732100979425e-05
    2. '1' → logprob: -10.250039100646973
    3. ',(' → logprob: -13.375039100646973
    4. ' ,' → logprob: -13.750039100646973
    5. ',+' → logprob: -13.750039100646973
    6. ',-' → logprob: -17.12504005432129
    7. ' ' → logprob: -17.50004005432129
    8. '```' → logprob: -18.25004005432129
    9. ',)' → logprob: -18.62504005432129
    10. ')' → logprob: -18.62504005432129

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '+' → logprob: -15.50001335144043
    4. '0' → logprob: -15.62501335144043
    5. ')' → logprob: -16.37501335144043
    6. '```' → logprob: -16.62501335144043
    7. ',' → logprob: -19.25001335144043
    8. '>' → logprob: -19.37501335144043
    9. '4' → logprob: -19.62501335144043
    10. '   ' → logprob: -19.62501335144043

Token 33: '),' (ID: 936)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00674793915823102
    2. ')' → logprob: -5.006747722625732
    3. ']' → logprob: -10.75674819946289
    4. '),' → logprob: -12.38174819946289
    5. ')])' → logprob: -12.88174819946289
    6. ' )' → logprob: -13.63174819946289
    7. '))' → logprob: -13.88174819946289
    8. '])]' → logprob: -14.38174819946289
    9. '')]' → logprob: -14.50674819946289
    10. ')}' → logprob: -14.63174819946289

Token 34: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.28949856758117676
    2. '(' → logprob: -1.9144985675811768
    3. ' (-' → logprob: -2.9144985675811768
    4. ' (' → logprob: -3.0394985675811768
    5. ')' → logprob: -6.539498329162598
    6. ']' → logprob: -8.539498329162598
    7. '0' → logprob: -9.664498329162598
    8. ')]' → logprob: -10.164498329162598
    9. '(None' → logprob: -10.789498329162598
    10. ' )' → logprob: -11.039498329162598

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '2' → logprob: -12.750003814697266
    3. ' ' → logprob: -15.375003814697266
    4. '```' → logprob: -15.812503814697266
    5. '-' → logprob: -16.250003814697266
    6. '১' → logprob: -16.687503814697266
    7. '

' → logprob: -16.937503814697266
    8. '१' → logprob: -17.125003814697266
    9. '+' → logprob: -17.250003814697266
    10. '۱' → logprob: -17.250003814697266

Token 36: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.20145544409751892
    2. ',' → logprob: -1.7014554738998413
    3. '1' → logprob: -10.451455116271973
    4. '-' → logprob: -11.826455116271973
    5. ' ,-' → logprob: -13.201455116271973
    6. ' ,' → logprob: -13.701455116271973
    7. ',+' → logprob: -14.451455116271973
    8. ',-

' → logprob: -14.576455116271973
    9. '",-' → logprob: -15.076455116271973
    10. ')' → logprob: -15.201455116271973

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -18.3125
    4. '۱' → logprob: -18.875
    5. '１' → logprob: -19.3125
    6. '-' → logprob: -19.3125
    7. '১' → logprob: -19.3125
    8. '१' → logprob: -19.4375
    9. '0' → logprob: -19.5
    10. '<|end|>' → logprob: -19.75

Token 38: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.40734168887138367
    2. '),(' → logprob: -1.157341718673706
    3. ')' → logprob: -3.907341718673706
    4. ')]' → logprob: -8.782341957092285
    5. ',' → logprob: -12.282341957092285
    6. ' ),' → logprob: -12.782341957092285
    7. '),
' → logprob: -13.282341957092285
    8. '),

' → logprob: -13.782341957092285
    9. ')...' → logprob: -13.907341957092285
    10. ')],' → logprob: -14.157341957092285

Token 39: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3870982825756073
    2. '(' → logprob: -1.1370983123779297
    3. ' (-' → logprob: -9.51209831237793
    4. ' (' → logprob: -9.51209831237793
    5. '1' → logprob: -9.88709831237793
    6. '-' → logprob: -10.63709831237793
    7. '0' → logprob: -13.01209831237793
    8. '```' → logprob: -14.26209831237793
    9. '(+' → logprob: -15.01209831237793
    10. ' ' → logprob: -15.01209831237793

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -16.4375
    3. '2' → logprob: -16.625
    4. '१' → logprob: -16.75
    5. ' ' → logprob: -16.8125
    6. '১' → logprob: -16.9375
    7. '۱' → logprob: -17.0625
    8. '11' → logprob: -17.125
    9. '0' → logprob: -17.5625
    10. '-' → logprob: -17.8125

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000900023675058037
    2. '1' → logprob: -7.375899791717529
    3. '0' → logprob: -8.250900268554688
    4. ' ,' → logprob: -11.500900268554688
    5. ',-' → logprob: -14.250900268554688
    6. ')' → logprob: -14.875900268554688
    7. ' ' → logprob: -14.875900268554688
    8. ',+' → logprob: -15.000900268554688
    9. ',)' → logprob: -15.750900268554688
    10. '```' → logprob: -16.000900268554688

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005177667480893433
    2. '-' → logprob: -8.000517845153809
    3. '0' → logprob: -8.750517845153809
    4. ' ' → logprob: -10.750517845153809
    5. '+' → logprob: -13.125517845153809
    6. ' -' → logprob: -15.375517845153809
    7. ')' → logprob: -15.750517845153809
    8. '```' → logprob: -16.875516891479492
    9. '<|end|>' → logprob: -18.188016891479492
    10. '１' → logprob: -18.938016891479492

Token 43: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7059184908866882
    2. ')' → logprob: -0.9559184908866882
    3. '),(' → logprob: -2.330918550491333
    4. ')]' → logprob: -3.705918550491333
    5. ')])' → logprob: -9.955918312072754
    6. ')],' → logprob: -11.080918312072754
    7. ')(' → logprob: -11.955918312072754
    8. ')...' → logprob: -12.080918312072754
    9. ' )' → logprob: -12.205918312072754
    10. '))' → logprob: -12.205918312072754

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011748670367524028
    2. '0' → logprob: -6.7511749267578125
    3. ' ' → logprob: -12.876174926757812
    4. '```' → logprob: -13.876174926757812
    5. '-' → logprob: -14.501174926757812
    6. '(' → logprob: -14.876174926757812
    7. '``' → logprob: -16.313674926757812
    8. '+' → logprob: -16.813674926757812
    9. '01' → logprob: -17.251174926757812
    10. '   ' → logprob: -17.876174926757812

Token 45: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.11312202364206314
    2. ',' → logprob: -2.23812198638916
    3. '-' → logprob: -8.23812198638916
    4. '0' → logprob: -10.86312198638916
    5. '1' → logprob: -11.23812198638916
    6. ' ,-' → logprob: -14.11312198638916
    7. '",-' → logprob: -15.11312198638916
    8. '(-' → logprob: -15.11312198638916
    9. ' -' → logprob: -15.23812198638916
    10. ' ,' → logprob: -15.36312198638916

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002478508511558175
    2. '-' → logprob: -6.00247859954834
    3. '0' → logprob: -13.00247859954834
    4. ' -' → logprob: -15.12747859954834
    5. '```' → logprob: -15.37747859954834
    6. ' ' → logprob: -16.002477645874023
    7. '<|end|>' → logprob: -16.752477645874023
    8. '-)' → logprob: -16.752477645874023
    9. ',-' → logprob: -16.877477645874023
    10. ')' → logprob: -17.002477645874023

Token 47: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.14426860213279724
    2. '),' → logprob: -2.39426851272583
    3. ')' → logprob: -3.14426851272583
    4. ')(' → logprob: -13.519268989562988
    5. ')...' → logprob: -13.894268989562988
    6. ')]' → logprob: -14.019268989562988
    7. ' ),' → logprob: -14.144268989562988
    8. ',' → logprob: -14.269268989562988
    9. '),
' → logprob: -14.519268989562988
    10. '))' → logprob: -15.144268989562988

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. ')' → logprob: -14.250001907348633
    4. '0' → logprob: -17.125001907348633
    5. '```' → logprob: -18.500001907348633
    6. '+' → logprob: -19.125001907348633
    7. '   ' → logprob: -20.875001907348633
    8. '۱' → logprob: -20.875001907348633
    9. '１' → logprob: -21.000001907348633
    10. '১' → logprob: -21.250001907348633

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.470901229884475e-05
    2. '1' → logprob: -9.62508487701416
    3. '0' → logprob: -11.00008487701416
    4. ')' → logprob: -14.00008487701416
    5. ' ,' → logprob: -14.00008487701416
    6. ' ' → logprob: -16.250083923339844
    7. '<|end|>' → logprob: -16.250083923339844
    8. '```' → logprob: -16.750083923339844
    9. ',)' → logprob: -17.875083923339844
    10. '<|end|>' → logprob: -18.750083923339844

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '0' → logprob: -11.750011444091797
    3. ')' → logprob: -13.250011444091797
    4. ' ' → logprob: -13.500011444091797
    5. '```' → logprob: -16.500011444091797
    6. '-' → logprob: -18.500011444091797
    7. '<|end|>' → logprob: -18.625011444091797
    8. '+' → logprob: -19.625011444091797
    9. '``' → logprob: -20.625011444091797
    10. '<|end|>' → logprob: -20.625011444091797

Token 51: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07896139472723007
    2. ')' → logprob: -2.5789613723754883
    3. ']' → logprob: -10.328961372375488
    4. '),' → logprob: -10.953961372375488
    5. ')])' → logprob: -11.328961372375488
    6. '))' → logprob: -12.078961372375488
    7. ')}' → logprob: -13.328961372375488
    8. '])]' → logprob: -14.453961372375488
    9. ')],' → logprob: -14.703961372375488
    10. '')]' → logprob: -15.078961372375488

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9266199160483666e-05
    2. 'for' → logprob: -12.375019073486328
    3. 'class' → logprob: -12.375019073486328
    4. 'n' → logprob: -12.625019073486328
    5. 'visited' → logprob: -13.000019073486328
    6. 'dp' → logprob: -13.250019073486328
    7. 'dfs' → logprob: -13.875019073486328
    8. '```' → logprob: -14.250019073486328
    9. 'd' → logprob: -14.375019073486328
    10. 'from' → logprob: -15.000019073486328

Token 53: ' get' (ID: 717)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.0003573919821064919
    2. 'dfs' → logprob: -8.750357627868652
    3. ' DFS' → logprob: -9.375357627868652
    4. ' solve' → logprob: -9.625357627868652
    5. ' flood' → logprob: -10.625357627868652
    6. ' bfs' → logprob: -11.625357627868652
    7. ' search' → logprob: -12.750357627868652
    8. ' is' → logprob: -12.875357627868652
    9. ' ' → logprob: -13.000357627868652
    10. ' depth' → logprob: -13.625357627868652

Token 54: '_seq' (ID: 34260)
  Prédit: '_neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.008087663911283016
    2. '_next' → logprob: -6.758087635040283
    3. '_area' → logprob: -7.133087635040283
    4. '_input' → logprob: -7.133087635040283
    5. '_neighbor' → logprob: -7.133087635040283
    6. '_positions' → logprob: -7.383087635040283
    7. '_valid' → logprob: -7.508087635040283
    8. '_possible' → logprob: -7.508087635040283
    9. '_ne' → logprob: -8.258088111877441
    10. '_moves' → logprob: -8.258088111877441

Token 55: '(grid' (ID: 51818)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01186417881399393
    2. '(' → logprob: -5.636864185333252
    3. 'ence' → logprob: -5.761864185333252
    4. '_len' → logprob: -6.511864185333252
    5. '_length' → logprob: -7.136864185333252
    6. 'uel' → logprob: -7.386864185333252
    7. '(u' → logprob: -7.886864185333252
    8. 'ue' → logprob: -8.136863708496094
    9. 'ual' → logprob: -8.136863708496094
    10. 'uen' → logprob: -8.386863708496094

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016528354957699776
    2. ',row' → logprob: -4.141528129577637
    3. ' ,' → logprob: -8.766528129577637
    4. ',x' → logprob: -9.266528129577637
    5. ',size' → logprob: -9.891528129577637
    6. ',n' → logprob: -10.266528129577637
    7. '):' → logprob: -10.641528129577637
    8. ')' → logprob: -10.766528129577637
    9. ',i' → logprob: -10.891528129577637
    10. ',column' → logprob: -11.266528129577637

Token 57: ' h' (ID: 312)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7599228620529175
    2. ' x' → logprob: -1.7599228620529175
    3. ' i' → logprob: -1.8849228620529175
    4. 'i' → logprob: -1.8849228620529175
    5. 'r' → logprob: -2.259922981262207
    6. ' r' → logprob: -2.384922981262207
    7. ' row' → logprob: -2.759922981262207
    8. 'row' → logprob: -3.134922981262207
    9. ' start' → logprob: -4.384922981262207
    10. ' y' → logprob: -4.384922981262207

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005149058997631073
    2. ',w' → logprob: -8.50051498413086
    3. ')' → logprob: -9.25051498413086
    4. ',n' → logprob: -10.12551498413086
    5. ',i' → logprob: -10.25051498413086
    6. ',x' → logprob: -10.62551498413086
    7. ',y' → logprob: -11.00051498413086
    8. ',width' → logprob: -11.62551498413086
    9. ',row' → logprob: -11.75051498413086
    10. ',h' → logprob: -11.87551498413086

Token 59: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.018529511988162994
    2. ' w' → logprob: -4.018529415130615
    3. 'r' → logprob: -9.143529891967773
    4. ' ' → logprob: -9.768529891967773
    5. '   ' → logprob: -9.768529891967773
    6. 'y' → logprob: -10.643529891967773
    7. 'i' → logprob: -10.768529891967773
    8. '```' → logprob: -10.893529891967773
    9. 'start' → logprob: -11.143529891967773
    10. '	w' → logprob: -11.143529891967773

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006052516400814056
    2. '):' → logprob: -5.131052494049072
    3. ')' → logprob: -9.38105297088623
    4. ' ,' → logprob: -10.50605297088623
    5. ',
' → logprob: -13.13105297088623
    6. ',index' → logprob: -13.75605297088623
    7. ' ):' → logprob: -13.88105297088623
    8. '),' → logprob: -14.38105297088623
    9. ',row' → logprob: -14.38105297088623
    10. ',n' → logprob: -14.50605297088623

Token 61: ' r' (ID: 428)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.3368877172470093
    2. ' x' → logprob: -1.3368877172470093
    3. 'i' → logprob: -2.336887836456299
    4. ' y' → logprob: -2.336887836456299
    5. ' r' → logprob: -2.586887836456299
    6. 'x' → logprob: -2.711887836456299
    7. 'y' → logprob: -3.711887836456299
    8. 'r' → logprob: -3.711887836456299
    9. ' visited' → logprob: -3.711887836456299
    10. ' start' → logprob: -3.961887836456299

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024144348572008312
    2. ' ,' → logprob: -8.75024127960205
    3. ',c' → logprob: -9.87524127960205
    4. ')' → logprob: -11.12524127960205
    5. ',w' → logprob: -12.75024127960205
    6. ',r' → logprob: -13.00024127960205
    7. ',int' → logprob: -13.12524127960205
    8. ',s' → logprob: -13.50024127960205
    9. ',row' → logprob: -13.75024127960205
    10. ',column' → logprob: -14.12524127960205

Token 63: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.11284786462783813
    2. 'c' → logprob: -2.2378478050231934
    3. ' ' → logprob: -10.987848281860352
    4. '	c' → logprob: -12.862848281860352
    5. ' ' → logprob: -13.112848281860352
    6. ')c' → logprob: -13.362848281860352
    7. '   ' → logprob: -13.612848281860352
    8. '  ' → logprob: -14.862848281860352
    9. '```' → logprob: -15.925348281860352
    10. ' s' → logprob: -16.23784828186035

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4311707615852356
    2. '):' → logprob: -1.0561707019805908
    3. ')' → logprob: -6.05617094039917
    4. ' ,' → logprob: -10.181170463562012
    5. '):
' → logprob: -10.556170463562012
    6. ' ):' → logprob: -11.806170463562012
    7. '),' → logprob: -12.306170463562012
    8. ',n' → logprob: -12.556170463562012
    9. ':' → logprob: -12.556170463562012
    10. '   ' → logprob: -12.681170463562012

Token 65: ' dr' (ID: 1498)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.3570318818092346
    2. ' seq' → logprob: -2.48203182220459
    3. 'visited' → logprob: -3.23203182220459
    4. ' length' → logprob: -3.85703182220459
    5. ' depth' → logprob: -3.85703182220459
    6. ' word' → logprob: -3.98203182220459
    7. ' idx' → logprob: -4.23203182220459
    8. ' path' → logprob: -4.60703182220459
    9. ' d' → logprob: -4.60703182220459
    10. ' direction' → logprob: -4.73203182220459

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009482761844992638
    2. '):' → logprob: -5.2594828605651855
    3. ')' → logprob: -5.5094828605651855
    4. '):
' → logprob: -9.384482383728027
    5. ' ,' → logprob: -9.634482383728027
    6. '),' → logprob: -10.884482383728027
    7. ',d' → logprob: -12.634482383728027
    8. '):

' → logprob: -12.759482383728027
    9. ')=' → logprob: -13.384482383728027
    10. '):
' → logprob: -13.884482383728027

Token 67: ' dc' (ID: 37843)
  Prédit: ' dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dc' → logprob: -0.38794681429862976
    2. 'dc' → logprob: -1.1379468441009521
    3. ' ' → logprob: -7.512946605682373
    4. '   ' → logprob: -8.387947082519531
    5. ' visited' → logprob: -9.262947082519531
    6. 'visited' → logprob: -10.137947082519531
    7. '  ' → logprob: -10.762947082519531
    8. ' dw' → logprob: -10.762947082519531
    9. ' length' → logprob: -11.262947082519531
    10. 'dw' → logprob: -11.387947082519531

Token 68: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002884521847590804
    2. ')' → logprob: -6.502884387969971
    3. ',' → logprob: -6.627884387969971
    4. ' ):' → logprob: -10.752884864807129
    5. ':' → logprob: -10.877884864807129
    6. '):
' → logprob: -11.127884864807129
    7. '   ' → logprob: -13.627884864807129
    8. '),' → logprob: -14.877884864807129
    9. ' ,' → logprob: -15.127884864807129
    10. ' ' → logprob: -15.127884864807129

Token 69: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.9542366862297058
    2. ' visited' → logprob: -0.9542366862297058
    3. ' seq' → logprob: -2.7042367458343506
    4. 'visited' → logprob: -3.3292367458343506
    5. 'length' → logprob: -3.9542367458343506
    6. ' idx' → logprob: -4.0792365074157715
    7. ' n' → logprob: -4.3292365074157715
    8. 'seq' → logprob: -4.4542365074157715
    9. ' memo' → logprob: -4.7042365074157715
    10. ' depth' → logprob: -4.8292365074157715

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009369632229208946
    2. ')' → logprob: -4.759369850158691
    3. ',' → logprob: -7.384369850158691
    4. ' ):' → logprob: -9.384369850158691
    5. '=' → logprob: -10.259369850158691
    6. ':' → logprob: -12.509369850158691
    7. '):
' → logprob: -12.634369850158691
    8. '+' → logprob: -13.509369850158691
    9. '),' → logprob: -13.634369850158691
    10. ' ' → logprob: -14.009369850158691

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7277976274490356
    2. ':' → logprob: -0.9777976274490356
    3. ' :' → logprob: -2.602797508239746
    4. '    ' → logprob: -3.602797508239746
    5. ' ' → logprob: -3.977797508239746
    6. '):' → logprob: -4.852797508239746
    7. ',' → logprob: -5.102797508239746
    8. ')' → logprob: -5.977797508239746
    9. ' ,' → logprob: -7.352797508239746
    10. ' ):' → logprob: -7.602797508239746

Token 72: ' seq' (ID: 26775)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04333028569817543
    2. ' 
' → logprob: -4.043330192565918
    3. '    ' → logprob: -4.918330192565918
    4. '     
' → logprob: -5.168330192565918
    5. ' if' → logprob: -6.043330192565918
    6. '   ' → logprob: -6.043330192565918
    7. ' \' → logprob: -6.418330192565918
    8. '\' → logprob: -7.168330192565918
    9. ' ,' → logprob: -7.293330192565918
    10. 'if' → logprob: -7.293330192565918

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04925008863210678
    2. '=' → logprob: -3.0492501258850098
    3. '=[]' → logprob: -7.42425012588501
    4. ' ' → logprob: -10.799249649047852
    5. ' []' → logprob: -11.799249649047852
    6. '[' → logprob: -12.049249649047852
    7. ',' → logprob: -12.299249649047852
    8. '=[]
' → logprob: -12.424249649047852
    9. ' =[' → logprob: -12.674249649047852
    10. '[:]' → logprob: -12.674249649047852

Token 74: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3342185914516449
    2. '[]' → logprob: -1.3342186212539673
    3. ' ""' → logprob: -4.834218502044678
    4. '""' → logprob: -5.084218502044678
    5. ' ''' → logprob: -5.584218502044678
    6. ' [' → logprob: -6.834218502044678
    7. '''' → logprob: -7.084218502044678
    8. '[' → logprob: -7.334218502044678
    9. ' ' → logprob: -9.959218978881836
    10. ' '' → logprob: -9.959218978881836

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8134576678276062
    2. '<|end|>' → logprob: -1.188457727432251
    3. 'for' → logprob: -2.313457727432251
    4. ' for' → logprob: -2.438457727432251
    5. ' ' → logprob: -3.563457727432251
    6. '    ' → logprob: -3.813457727432251
    7. '<|end|>' → logprob: -5.813457489013672
    8. '	for' → logprob: -5.813457489013672
    9. '    
' → logprob: -6.563457489013672
    10. ',' → logprob: -6.688457489013672

Token 76: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2567616403102875
    2. ' for' → logprob: -1.5067616701126099
    3. '   ' → logprob: -5.63176155090332
    4. 'r' → logprob: -6.75676155090332
    5. 'row' → logprob: -10.63176155090332
    6. 'x' → logprob: -10.63176155090332
    7. '```' → logprob: -11.88176155090332
    8. 'i' → logprob: -12.13176155090332
    9. ' r' → logprob: -12.38176155090332
    10. ' x' → logprob: -13.25676155090332

Token 77: ' k' (ID: 372)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8027781844139099
    2. ' i' → logprob: -0.9277781844139099
    3. ' ' → logprob: -2.0527782440185547
    4. ' _' → logprob: -3.8027782440185547
    5. 'range' → logprob: -5.677778244018555
    6. '_' → logprob: -6.802778244018555
    7. ' xrange' → logprob: -8.052778244018555
    8. '_range' → logprob: -8.177778244018555
    9. ' in' → logprob: -8.677778244018555
    10. ' r' → logprob: -8.677778244018555

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0042359353974461555
    2. 'in' → logprob: -5.504235744476318
    3. ' ' → logprob: -8.879236221313477
    4. 'range' → logprob: -12.379236221313477
    5. '	in' → logprob: -12.754236221313477
    6. 'k' → logprob: -13.254236221313477
    7. '  ' → logprob: -13.504236221313477
    8. ',' → logprob: -13.504236221313477
    9. '0' → logprob: -13.629236221313477
    10. 's' → logprob: -14.254236221313477

Token 79: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01105159055441618
    2. 'range' → logprob: -4.511051654815674
    3. ' ' → logprob: -13.511051177978516
    4. '	range' → logprob: -13.511051177978516
    5. '(range' → logprob: -14.261051177978516
    6. ' xrange' → logprob: -14.761051177978516
    7. '_range' → logprob: -17.886051177978516
    8. ' rango' → logprob: -18.011051177978516
    9. '.range' → logprob: -18.136051177978516
    10. '  ' → logprob: -18.636051177978516

Token 80: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -5.300083648762666e-05
    2. '(' → logprob: -10.250053405761719
    3. 'length' → logprob: -11.000053405761719
    4. ' length' → logprob: -15.000053405761719
    5. '[length' → logprob: -15.000053405761719
    6. '(len' → logprob: -15.625053405761719
    7. ',length' → logprob: -16.87505340576172
    8. '	length' → logprob: -17.00005340576172
    9. ':length' → logprob: -17.50005340576172
    10. '(l' → logprob: -17.75005340576172

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017490806058049202
    2. '):
' → logprob: -7.001749038696289
    3. ' ):' → logprob: -7.501749038696289
    4. '   ' → logprob: -8.376749038696289
    5. ')' → logprob: -10.126749038696289
    6. ':' → logprob: -11.501749038696289
    7. ' ):
' → logprob: -13.626749038696289
    8. ' ' → logprob: -13.751749038696289
    9. '+' → logprob: -14.251749038696289
    10. '       ' → logprob: -14.626749038696289

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004005742259323597
    2. ',' → logprob: -6.5040059089660645
    3. '<|end|>' → logprob: -7.2540059089660645
    4. ' ' → logprob: -7.5040059089660645
    5. '    ' → logprob: -8.004005432128906
    6. '   ' → logprob: -8.254005432128906
    7. '        
' → logprob: -9.004005432128906
    8. '      ' → logprob: -9.504005432128906
    9. '        ' → logprob: -9.629005432128906
    10. '<|end|>' → logprob: -9.879005432128906

Token 83: ' rr' (ID: 54129)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5047292709350586
    2. ' ' → logprob: -1.8797292709350586
    3. ' 
' → logprob: -2.1297292709350586
    4. '        
' → logprob: -3.5047292709350586
    5. '        ' → logprob: -3.7547292709350586
    6. '           ' → logprob: -4.879729270935059
    7. '```' → logprob: -4.879729270935059
    8. '\n' → logprob: -5.004729270935059
    9. 'r' → logprob: -5.254729270935059
    10. 'n' → logprob: -5.629729270935059

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04044099897146225
    2. '=' → logprob: -3.2904410362243652
    3. ',' → logprob: -6.040441036224365
    4. '=r' → logprob: -11.915440559387207
    5. ' =
' → logprob: -13.040440559387207
    6. ' ,' → logprob: -13.290440559387207
    7. ' ' → logprob: -13.790440559387207
    8. '=int' → logprob: -14.165440559387207
    9. '=k' → logprob: -14.290440559387207
    10. '=row' → logprob: -14.290440559387207

Token 85: ' (' (ID: 350)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.08894066512584686
    2. 'r' → logprob: -2.4639406204223633
    3. ' ' → logprob: -13.963940620422363
    4. '	r' → logprob: -15.713940620422363
    5. '_r' → logprob: -16.46394157409668
    6. ' ' → logprob: -16.96394157409668
    7. '   ' → logprob: -17.08894157409668
    8. '  ' → logprob: -17.21394157409668
    9. '```' → logprob: -17.83894157409668
    10. '<|end|>' → logprob: -17.96394157409668

Token 86: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.012521425262093544
    2. ' r' → logprob: -4.387521266937256
    3. '(r' → logprob: -11.762521743774414
    4. ' (' → logprob: -12.637521743774414
    5. '   ' → logprob: -15.387521743774414
    6. '(' → logprob: -15.637521743774414
    7. ' ' → logprob: -15.637521743774414
    8. '	r' → logprob: -16.137521743774414
    9. ')' → logprob: -16.762521743774414
    10. '_r' → logprob: -16.887521743774414

Token 87: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5233712792396545
    2. ' +' → logprob: -0.8983712792396545
    3. '+k' → logprob: -8.773371696472168
    4. '+r' → logprob: -10.023371696472168
    5. ')' → logprob: -11.148371696472168
    6. ')+' → logprob: -11.523371696472168
    7. '<|end|>' → logprob: -11.648371696472168
    8. ' plus' → logprob: -12.648371696472168
    9. ' ' → logprob: -12.898371696472168
    10. ')+(' → logprob: -13.398371696472168

Token 88: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.004389290697872639
    2. 'k' → logprob: -6.12938928604126
    3. ' dr' → logprob: -6.12938928604126
    4. ' k' → logprob: -11.129389762878418
    5. '   ' → logprob: -12.004389762878418
    6. '	dr' → logprob: -14.004389762878418
    7. '  ' → logprob: -14.504389762878418
    8. ' ' → logprob: -14.629389762878418
    9. '(dr' → logprob: -15.004389762878418
    10. '    ' → logprob: -15.004389762878418

Token 89: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.4782772660255432
    2. ' *' → logprob: -0.9782772660255432
    3. '*' → logprob: -5.478277206420898
    4. ')' → logprob: -12.228277206420898
    5. '*q' → logprob: -13.353277206420898
    6. 'k' → logprob: -13.353277206420898
    7. '*n' → logprob: -14.228277206420898
    8. '*num' → logprob: -14.228277206420898
    9. '
' → logprob: -14.478277206420898
    10. ' k' → logprob: -14.603277206420898

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009813627693802118
    2. ')%' → logprob: -7.000981330871582
    3. ' )' → logprob: -9.875981330871582
    4. ')
' → logprob: -11.250981330871582
    5. '<|end|>' → logprob: -12.625981330871582
    6. '%' → logprob: -14.250981330871582
    7. '       ' → logprob: -15.375981330871582
    8. ')

' → logprob: -15.750981330871582
    9. '`)' → logprob: -15.875981330871582
    10. ',' → logprob: -15.875981330871582

Token 91: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3358943462371826
    2. '<|end|>' → logprob: -1.9608943462371826
    3. ' %' → logprob: -2.2108943462371826
    4. ' ' → logprob: -4.460894584655762
    5. '%' → logprob: -4.585894584655762
    6. ' )' → logprob: -4.835894584655762
    7. ')%' → logprob: -5.960894584655762
    8. ' ,' → logprob: -7.210894584655762
    9. ',' → logprob: -7.210894584655762
    10. '<|end|>' → logprob: -7.710894584655762

Token 92: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0036006635054945946
    2. ' h' → logprob: -5.628600597381592
    3. '	h' → logprob: -15.37860107421875
    4. ' ' → logprob: -15.50360107421875
    5. '<|end|>' → logprob: -16.37860107421875
    6. '
' → logprob: -17.62860107421875
    7. '"h' → logprob: -17.87860107421875
    8. '?h' → logprob: -18.00360107421875
    9. '<h' → logprob: -18.25360107421875
    10. '   ' → logprob: -18.87860107421875

Token 93: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -0.014167623594403267
    2. ' cc' → logprob: -4.764167785644531
    3. '       ' → logprob: -5.764167785644531
    4. '(cc' → logprob: -6.139167785644531
    5. '	cc' → logprob: -8.639167785644531
    6. 'rc' → logprob: -10.514167785644531
    7. '_cc' → logprob: -11.764167785644531
    8. 'ccc' → logprob: -11.889167785644531
    9. '<|end|>' → logprob: -12.264167785644531
    10. ' (' → logprob: -12.764167785644531

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31343555450439453
    2. '=' → logprob: -1.3134355545043945
    3. '<|end|>' → logprob: -8.688435554504395
    4. ' ' → logprob: -14.063435554504395
    5. '<|end|>' → logprob: -14.063435554504395
    6. ' =(' → logprob: -14.188435554504395
    7. '=(' → logprob: -14.188435554504395
    8. ')' → logprob: -14.313435554504395
    9. '=
' → logprob: -14.563435554504395
    10. ' =
' → logprob: -14.813435554504395

Token 97: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01558262761682272
    2. '(c' → logprob: -4.26558256149292
    3. '(w' → logprob: -6.76558256149292
    4. '(cc' → logprob: -8.265583038330078
    5. '(' → logprob: -11.890583038330078
    6. ' c' → logprob: -15.265583038330078
    7. ' ' → logprob: -15.265583038330078
    8. 'w' → logprob: -15.765583038330078
    9. '((' → logprob: -16.515583038330078
    10. '   ' → logprob: -16.765583038330078

Token 98: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006464655976742506
    2. '(c' → logprob: -5.25646448135376
    3. ' c' → logprob: -6.75646448135376
    4. '   ' → logprob: -10.006464958190918
    5. ' (' → logprob: -11.631464958190918
    6. ')c' → logprob: -12.256464958190918
    7. 'w' → logprob: -12.631464958190918
    8. '       ' → logprob: -14.131464958190918
    9. '	c' → logprob: -14.256464958190918
    10. '(' → logprob: -14.631464958190918

Token 99: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029756737872958183
    2. '+' → logprob: -3.529756784439087
    3. '+k' → logprob: -13.279756546020508
    4. '<|end|>' → logprob: -13.404756546020508
    5. '+c' → logprob: -13.904756546020508
    6. ' ' → logprob: -14.029756546020508
    7. '+w' → logprob: -14.654756546020508
    8. ' +
' → logprob: -15.279756546020508
    9. ' ' → logprob: -15.654756546020508
    10. ')' → logprob: -16.279756546020508

Token 100: ' dc' (ID: 37843)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -1.193343162536621
    2. '(dc' → logprob: -1.193343162536621
    3. ' dc' → logprob: -1.318343162536621
    4. 'w' → logprob: -2.193343162536621
    5. ' (' → logprob: -4.443343162536621
    6. ' w' → logprob: -6.693343162536621
    7. 'wc' → logprob: -7.193343162536621
    8. '(w' → logprob: -8.318343162536621
    9. 'c' → logprob: -9.443343162536621
    10. ' ' → logprob: -9.693343162536621

Token 101: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -2.176947600673884e-05
    2. '*' → logprob: -11.500021934509277
    3. 'k' → logprob: -11.625021934509277
    4. ' *' → logprob: -12.875021934509277
    5. '_k' → logprob: -18.00002098083496
    6. '*u' → logprob: -18.12502098083496
    7. '*n' → logprob: -18.25002098083496
    8. '*x' → logprob: -18.37502098083496
    9. '*w' → logprob: -18.37502098083496
    10. '*q' → logprob: -18.50002098083496

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008273754501715302
    2. ' )' → logprob: -7.750827312469482
    3. ')%' → logprob: -7.875827312469482
    4. '%' → logprob: -11.50082778930664
    5. ' %' → logprob: -12.12582778930664
    6. ')
' → logprob: -14.62582778930664
    7. '<|end|>' → logprob: -16.00082778930664
    8. '%)' → logprob: -16.12582778930664
    9. '   ' → logprob: -16.50082778930664
    10. ' ' → logprob: -16.50082778930664

Token 103: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5759506821632385
    2. '%' → logprob: -0.8259506821632385
    3. ')' → logprob: -11.950950622558594
    4. ')%' → logprob: -13.325950622558594
    5. ' ' → logprob: -13.700950622558594
    6. '<|end|>' → logprob: -14.200950622558594
    7. '
' → logprob: -15.575950622558594
    8. '%s' → logprob: -16.075950622558594
    9. 'w' → logprob: -16.075950622558594
    10. ' ' → logprob: -16.200950622558594

Token 104: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005234002135694027
    2. ' w' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.380233764648438
    4. '   ' → logprob: -17.255233764648438
    5. '```' → logprob: -19.005233764648438
    6. '	w' → logprob: -19.255233764648438
    7. '<w' → logprob: -19.630233764648438
    8. '  ' → logprob: -19.755233764648438
    9. '>w' → logprob: -20.255233764648438
    10. '_w' → logprob: -20.255233764648438

Token 105: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013439236208796501
    2. '<|end|>' → logprob: -6.751343727111816
    3. '
' → logprob: -10.126343727111816
    4. '        
' → logprob: -10.251343727111816
    5. ',' → logprob: -10.626343727111816
    6. ' if' → logprob: -11.126343727111816
    7. '<|end|>' → logprob: -11.376343727111816
    8. 'seq' → logprob: -11.501343727111816
    9. ')' → logprob: -11.751343727111816
    10. '   ' → logprob: -12.501343727111816

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010548417922109365
    2. '<|end|>' → logprob: -7.126054763793945
    3. '
' → logprob: -8.751054763793945
    4. 'seq' → logprob: -10.251054763793945
    5. '        
' → logprob: -11.126054763793945
    6. ',' → logprob: -11.251054763793945
    7. '<|end|>' → logprob: -12.001054763793945
    8. ' seq' → logprob: -12.001054763793945
    9. '```' → logprob: -12.376054763793945
    10. ' if' → logprob: -13.501054763793945

Token 107: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' (adapté à ' seq') → logprob: -0.16300643980503082
    2. ' seq' → logprob: -2.538006544113159
    3. '       ' → logprob: -2.663006544113159
    4. 'if' → logprob: -6.78800630569458
    5. ' if' → logprob: -7.66300630569458
    6. '   ' → logprob: -11.163006782531738
    7. '           ' → logprob: -11.788006782531738
    8. 'sequence' → logprob: -12.038006782531738
    9. '```' → logprob: -12.163006782531738
    10. '.seq' → logprob: -12.538006782531738

Token 108: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004081367049366236
    2. '.' → logprob: -5.5040812492370605
    3. 'append' → logprob: -13.504081726074219
    4. '.ap' → logprob: -14.504081726074219
    5. '.app' → logprob: -14.629081726074219
    6. ' .' → logprob: -15.254081726074219
    7. '.Append' → logprob: -15.754081726074219
    8. '.extend' → logprob: -16.50408172607422
    9. ').' → logprob: -17.50408172607422
    10. '.=' → logprob: -17.75408172607422

Token 109: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.0004419935867190361
    2. 'grid' → logprob: -7.750442028045654
    3. '(' → logprob: -11.625441551208496
    4. ' grid' → logprob: -13.000441551208496
    5. ' (' → logprob: -16.750442504882812
    6. ':grid' → logprob: -17.625442504882812
    7. '(
' → logprob: -17.875442504882812
    8. '(gr' → logprob: -19.000442504882812
    9. '	grid' → logprob: -19.375442504882812
    10. '.grid' → logprob: -19.500442504882812

Token 110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.264322317088954e-05
    2. ')[' → logprob: -10.500052452087402
    3. 'rr' → logprob: -11.875052452087402
    4. '(rr' → logprob: -12.000052452087402
    5. '[r' → logprob: -12.375052452087402
    6. ')' → logprob: -12.625052452087402
    7. ' rr' → logprob: -13.250052452087402
    8. '][' → logprob: -14.000052452087402
    9. '_rr' → logprob: -14.875052452087402
    10. '[row' → logprob: -15.000052452087402

Token 111: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -2.9160102712921798e-05
    2. ' rr' → logprob: -10.500029563903809
    3. '(rr' → logprob: -14.125029563903809
    4. 'r' → logprob: -14.500029563903809
    5. '_rr' → logprob: -15.500029563903809
    6. ' ' → logprob: -18.250028610229492
    7. '   ' → logprob: -18.375028610229492
    8. '
' → logprob: -18.875028610229492
    9. 'rrrr' → logprob: -18.875028610229492
    10. 'rs' → logprob: -19.375028610229492

Token 112: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.85235276655294e-05
    2. ']' → logprob: -10.000088691711426
    3. '[' → logprob: -10.500088691711426
    4. ' ][' → logprob: -11.125088691711426
    5. '"][' → logprob: -15.750088691711426
    6. '])' → logprob: -15.875088691711426
    7. ')][' → logprob: -16.25008773803711
    8. '   ' → logprob: -16.25008773803711
    9. ''][' → logprob: -16.25008773803711
    10. ']][' → logprob: -17.00008773803711

Token 113: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -2.935296834039036e-06
    2. ' cc' → logprob: -12.75000286102295
    3. '	cc' → logprob: -18.875003814697266
    4. '(cc' → logprob: -20.375003814697266
    5. 'c' → logprob: -20.625003814697266
    6. '   ' → logprob: -20.750003814697266
    7. ' ' → logprob: -20.750003814697266
    8. '_cc' → logprob: -21.375003814697266
    9. '
' → logprob: -22.125003814697266
    10. 'ccc' → logprob: -23.500003814697266

Token 114: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005507678724825382
    2. ']' → logprob: -7.875550746917725
    3. ')' → logprob: -9.125551223754883
    4. '[' → logprob: -11.000551223754883
    5. ')])' → logprob: -11.375551223754883
    6. '][' → logprob: -11.625551223754883
    7. ' ])' → logprob: -11.625551223754883
    8. '])
' → logprob: -12.125551223754883
    9. ''])' → logprob: -12.625551223754883
    10. ']])' → logprob: -13.000551223754883

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000523246475495398
    2. ' return' → logprob: -9.000523567199707
    3. 'return' → logprob: -9.125523567199707
    4. '	return' → logprob: -9.375523567199707
    5. '    
' → logprob: -9.625523567199707
    6. ')' → logprob: -9.750523567199707
    7. '
' → logprob: -10.375523567199707
    8. ' ' → logprob: -11.750523567199707
    9. '       ' → logprob: -11.750523567199707
    10. '	' → logprob: -11.875523567199707

Token 116: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08754000067710876
    2. ' return' → logprob: -2.7125399112701416
    3. '   ' → logprob: -4.212540149688721
    4. '
' → logprob: -6.087540149688721
    5. ' ' → logprob: -8.212539672851562
    6. '	return' → logprob: -10.337539672851562
    7. '    
' → logprob: -10.837539672851562
    8. ':return' → logprob: -11.587539672851562
    9. '  
' → logprob: -11.712539672851562
    10. 'eturn' → logprob: -11.712539672851562

Token 117: ' ''.' (ID: 105941)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.018138710409402847
    2. ' seq' → logprob: -4.143138885498047
    3. '''.' → logprob: -6.268138885498047
    4. ' ''.' → logprob: -9.268138885498047
    5. '"' → logprob: -9.768138885498047
    6. ' "".' → logprob: -11.018138885498047
    7. '(seq' → logprob: -11.393138885498047
    8. 'tuple' → logprob: -12.018138885498047
    9. ' ' → logprob: -12.143138885498047
    10. 'se' → logprob: -12.643138885498047

Token 118: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. ' join' → logprob: -15.125000953674316
    3. 'jo' → logprob: -15.250000953674316
    4. '.join' → logprob: -15.750000953674316
    5. '(join' → logprob: -15.875000953674316
    6. '```' → logprob: -16.625001907348633
    7. '/j' → logprob: -16.875001907348633
    8. 'j' → logprob: -17.750001907348633
    9. '``' → logprob: -19.250001907348633
    10. '''.' → logprob: -19.500001907348633

Token 119: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0001394161517964676
    2. '(' → logprob: -9.250139236450195
    3. 'seq' → logprob: -10.500139236450195
    4. '(se' → logprob: -11.375139236450195
    5. '(sequence' → logprob: -12.500139236450195
    6. '(ss' → logprob: -15.000139236450195
    7. '('' → logprob: -17.625139236450195
    8. '(
' → logprob: -17.875139236450195
    9. '(tuple' → logprob: -17.875139236450195
    10. '<|end|>' → logprob: -18.000139236450195

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.375001907348633
    4. '<|end|>' → logprob: -16.000001907348633
    5. '),' → logprob: -18.125001907348633
    6. ')

' → logprob: -18.250001907348633
    7. '))' → logprob: -18.500001907348633
    8. ')return' → logprob: -18.500001907348633
    9. '}' → logprob: -18.500001907348633
    10. '')' → logprob: -19.000001907348633

Token 121: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013266648165881634
    2. '#' → logprob: -7.001326560974121
    3. 'for' → logprob: -9.251326560974121
    4. '
' → logprob: -9.501326560974121
    5. '<|end|>' → logprob: -10.001326560974121
    6. '```' → logprob: -10.126326560974121
    7. ')' → logprob: -10.501326560974121
    8. '\' → logprob: -11.126326560974121
    9. 'dire' → logprob: -11.376326560974121
    10. '.' → logprob: -11.501326560974121

Token 122: ' has' (ID: 853)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9207084774971008
    2. ' count' → logprob: -1.045708417892456
    3. ' find' → logprob: -1.795708417892456
    4. ' check' → logprob: -4.045708656311035
    5. ' search' → logprob: -4.170708656311035
    6. ' dfs' → logprob: -4.170708656311035
    7. ' is' → logprob: -4.795708656311035
    8. ' solve' → logprob: -4.795708656311035
    9. 'count' → logprob: -5.045708656311035
    10. ' get' → logprob: -5.670708656311035

Token 123: '_self' (ID: 64773)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.23343442380428314
    2. '_seq' → logprob: -2.2334344387054443
    3. '_word' → logprob: -3.2334344387054443
    4. '_cycle' → logprob: -3.3584344387054443
    5. '_' → logprob: -4.733434200286865
    6. '_pal' → logprob: -5.108434200286865
    7. '_pattern' → logprob: -5.608434200286865
    8. '_sub' → logprob: -5.858434200286865
    9. '_w' → logprob: -7.608434200286865
    10. '_duplicate' → logprob: -7.733434200286865

Token 124: '_overlap' (ID: 179163)
  Prédit: '_cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cross' → logprob: -0.5073983669281006
    2. '_inter' → logprob: -2.0073983669281006
    3. 'cross' → logprob: -2.1323983669281006
    4. '_overlap' → logprob: -2.6323983669281006
    5. '_' → logprob: -3.7573983669281006
    6. 'intersection' → logprob: -4.75739860534668
    7. 'inter' → logprob: -4.88239860534668
    8. 'avo' → logprob: -5.25739860534668
    9. 'avoid' → logprob: -5.63239860534668
    10. 'sequence' → logprob: -5.88239860534668

Token 125: '(seq' (ID: 78669)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.005801401566714048
    2. '(' → logprob: -5.755801200866699
    3. '(seq' → logprob: -6.130801200866699
    4. '(sequence' → logprob: -8.5058012008667
    5. '(s' → logprob: -8.8808012008667
    6. '(d' → logprob: -10.3808012008667
    7. '(word' → logprob: -11.5058012008667
    8. '(g' → logprob: -11.5058012008667
    9. '(r' → logprob: -11.8808012008667
    10. '(path' → logprob: -12.0058012008667

Token 126: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004542388487607241
    2. '):
' → logprob: -5.504542350769043
    3. ')' → logprob: -8.254542350769043
    4. '(seq' → logprob: -9.004542350769043
    5. '(' → logprob: -10.629542350769043
    6. '():' → logprob: -11.629542350769043
    7. ',' → logprob: -11.629542350769043
    8. ' ):' → logprob: -11.629542350769043
    9. 's' → logprob: -11.629542350769043
    10. '(s' → logprob: -12.504542350769043

Token 127: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.6029139161109924
    2. 'length' → logprob: -1.1029138565063477
    3. ' seq' → logprob: -4.227913856506348
    4. 'seq' → logprob: -4.602913856506348
    5. 'l' → logprob: -4.727913856506348
    6. 'max' → logprob: -4.852913856506348
    7. ' max' → logprob: -4.852913856506348
    8. 'pattern' → logprob: -5.352913856506348
    9. 'visited' → logprob: -5.602913856506348
    10. 'sub' → logprob: -5.727913856506348

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003415705170482397
    2. '):
' → logprob: -6.128415584564209
    3. ',' → logprob: -7.003415584564209
    4. ')' → logprob: -8.503416061401367
    5. ' ):' → logprob: -10.253416061401367
    6. '=' → logprob: -10.753416061401367
    7. '-' → logprob: -11.003416061401367
    8. '   ' → logprob: -11.378416061401367
    9. ':' → logprob: -11.503416061401367
    10. '//' → logprob: -12.378416061401367

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04061340168118477
    2. ':' → logprob: -3.5406134128570557
    3. ' 
' → logprob: -5.915613174438477
    4. '    ' → logprob: -6.415613174438477
    5. ' ' → logprob: -6.665613174438477
    6. '<|end|>' → logprob: -6.665613174438477
    7. '    
' → logprob: -6.790613174438477
    8. ' for' → logprob: -7.415613174438477
    9. '  
' → logprob: -7.665613174438477
    10. '  ' → logprob: -8.165613174438477

Token 130: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07064114511013031
    2. 'for' → logprob: -3.445641040802002
    3. '   ' → logprob: -3.945641040802002
    4. ' n' → logprob: -4.945641040802002
    5. ' l' → logprob: -5.445641040802002
    6. 'n' → logprob: -6.195641040802002
    7. ' seen' → logprob: -6.195641040802002
    8. ' visited' → logprob: -7.945641040802002
    9. 'l' → logprob: -8.57064151763916
    10. ' L' → logprob: -8.94564151763916

Token 131: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2349604070186615
    2. ' for' → logprob: -1.6099604368209839
    3. 'n' → logprob: -6.109960556030273
    4. 'l' → logprob: -6.109960556030273
    5. 'def' → logprob: -6.984960556030273
    6. ' l' → logprob: -7.234960556030273
    7. 'seen' → logprob: -7.234960556030273
    8. ' seen' → logprob: -7.734960556030273
    9. 'return' → logprob: -7.859960556030273
    10. ' L' → logprob: -7.859960556030273

Token 132: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03499915078282356
    2. 'for' → logprob: -4.659999370574951
    3. ' i' → logprob: -4.784999370574951
    4. '   ' → logprob: -4.909999370574951
    5. ' if' → logprob: -5.409999370574951
    6. ' ' → logprob: -6.534999370574951
    7. ' subse' → logprob: -7.159999370574951
    8. '(' → logprob: -7.534999370574951
    9. ' n' → logprob: -7.909999370574951
    10. ' substr' → logprob: -8.284998893737793

Token 133: ' it' (ID: 480)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.7163326144218445
    2. 'seq' → logprob: -1.5913326740264893
    3. ' any' → logprob: -2.0913326740264893
    4. ' length' → logprob: -2.2163326740264893
    5. 'length' → logprob: -2.7163326740264893
    6. 'any' → logprob: -5.21633243560791
    7. 'len' → logprob: -6.46633243560791
    8. ' len' → logprob: -7.21633243560791
    9. ' sequence' → logprob: -7.71633243560791
    10. '(seq' → logprob: -7.84133243560791

Token 134: ' can' (ID: 665)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.4238917827606201
    2. ' contains' → logprob: -2.04889178276062
    3. ' is' → logprob: -2.29889178276062
    4. 'has' → logprob: -3.04889178276062
    5. 'contains' → logprob: -4.048892021179199
    6. 's' → logprob: -4.173892021179199
    7. 'def' → logprob: -4.173892021179199
    8. 'is' → logprob: -5.798892021179199
    9. ' in' → logprob: -6.048892021179199
    10. 'startswith' → logprob: -6.173892021179199

Token 135: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.207235187292099
    2. 'be' → logprob: -1.7072352170944214
    3. ' overlap' → logprob: -6.457235336303711
    4. ' form' → logprob: -6.832235336303711
    5. ' have' → logprob: -7.082235336303711
    6. 'have' → logprob: -8.707235336303711
    7. ''ve' → logprob: -8.957235336303711
    8. 'length' → logprob: -8.957235336303711
    9. 'appear' → logprob: -9.207235336303711
    10. 'split' → logprob: -9.207235336303711

Token 136: ' split' (ID: 12648)
  Prédit: 'formed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formed' → logprob: -0.9961764812469482
    2. 'constructed' → logprob: -1.4961764812469482
    3. 'split' → logprob: -1.8711764812469482
    4. 'made' → logprob: -2.9961764812469482
    5. 'div' → logprob: -3.4961764812469482
    6. 'built' → logprob: -3.8711764812469482
    7. 'represented' → logprob: -3.9961764812469482
    8. ' split' → logprob: -4.371176719665527
    9. 'obt' → logprob: -4.371176719665527
    10. 'com' → logprob: -4.371176719665527

Token 137: ' into' (ID: 1511)
  Prédit: 'into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'into' → logprob: -0.5262270569801331
    2. ' into' → logprob: -0.9012270569801331
    3. 'at' → logprob: -6.901226997375488
    4. '```' → logprob: -7.401226997375488
    5. 'in' → logprob: -8.276226997375488
    6. ' ' → logprob: -8.401226997375488
    7. ' in' → logprob: -8.526226997375488
    8. ' at' → logprob: -8.776226997375488
    9. 'def' → logprob: -8.776226997375488
    10. 'int' → logprob: -9.401226997375488

Token 138: ' repeats' (ID: 95681)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.3097247779369354
    2. '2' → logprob: -1.8097248077392578
    3. ' two' → logprob: -2.559724807739258
    4. 'a' → logprob: -5.059724807739258
    5. 'seq' → logprob: -5.434724807739258
    6. 'at' → logprob: -5.809724807739258
    7. 'any' → logprob: -6.059724807739258
    8. ' ' → logprob: -6.309724807739258
    9. 'some' → logprob: -6.434724807739258
    10. ' at' → logprob: -6.684724807739258

Token 139: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7518076300621033
    2. '   ' → logprob: -1.501807689666748
    3. ' of' → logprob: -2.001807689666748
    4. 'def' → logprob: -2.251807689666748
    5. ' for' → logprob: -3.001807689666748
    6. 'of' → logprob: -4.376807689666748
    7. 'import' → logprob: -7.626807689666748
    8. 'length' → logprob: -8.00180721282959
    9. ' ' → logprob: -8.12680721282959
    10. ',' → logprob: -8.25180721282959

Token 140: ' substring' (ID: 89494)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.3217111825942993
    2. 'a' → logprob: -1.6967111825942993
    3. ' a' → logprob: -3.6967110633850098
    4. '(seq' → logprob: -3.8217110633850098
    5. ' seq' → logprob: -3.9467110633850098
    6. 'sequence' → logprob: -5.07171106338501
    7. 'some' → logprob: -5.44671106338501
    8. 'length' → logprob: -5.57171106338501
    9. 'the' → logprob: -5.57171106338501
    10. 'substring' → logprob: -6.82171106338501

Token 141: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3870532512664795
    2. '(seq' → logprob: -1.6370532512664795
    3. ' of' → logprob: -1.8870532512664795
    4. '(' → logprob: -1.8870532512664795
    5. 's' → logprob: -2.2620532512664795
    6. 'seq' → logprob: -3.0120532512664795
    7. ' that' → logprob: -4.262053489685059
    8. 'pattern' → logprob: -4.387053489685059
    9. '(s' → logprob: -4.637053489685059
    10. '   ' → logprob: -4.762053489685059

Token 142: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.09042029082775116
    2. ' length' → logprob: -2.4654202461242676
    3. 'size' → logprob: -7.215420246124268
    4. 'len' → logprob: -8.340420722961426
    5. 'some' → logprob: -9.840420722961426
    6. 'a' → logprob: -9.965420722961426
    7. ' size' → logprob: -9.965420722961426
    8. 'seq' → logprob: -10.090420722961426
    9. '(length' → logprob: -10.090420722961426
    10. 'i' → logprob: -10.340420722961426

Token 143: ' d' (ID: 272)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3929753005504608
    2. 'l' → logprob: -2.017975330352783
    3. ' length' → logprob: -3.017975330352783
    4. '(length' → logprob: -3.767975330352783
    5. ' ' → logprob: -4.017975330352783
    6. ' l' → logprob: -4.267975330352783
    7. 'd' → logprob: -4.392975330352783
    8. 'i' → logprob: -4.517975330352783
    9. 'def' → logprob: -4.517975330352783
    10. 'div' → logprob: -4.642975330352783

Token 144: '<' (ID: 27)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5346613526344299
    2. ':' → logprob: -2.034661293029785
    3. 'for' → logprob: -2.784661293029785
    4. '=' → logprob: -3.159661293029785
    5. ' in' → logprob: -3.409661293029785
    6. '>' → logprob: -3.659661293029785
    7. ',' → logprob: -3.784661293029785
    8. '   ' → logprob: -3.909661293029785
    9. ' ' → logprob: -4.159661293029785
    10. 'def' → logprob: -4.409661293029785

Token 145: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.18020415306091309
    2. ' length' → logprob: -1.805204153060913
    3. '(length' → logprob: -8.680204391479492
    4. 'len' → logprob: -8.680204391479492
    5. ' ' → logprob: -10.430204391479492
    6. 'ength' → logprob: -10.430204391479492
    7. ' len' → logprob: -10.805204391479492
    8. '[length' → logprob: -11.180204391479492
    9. ' (' → logprob: -12.430204391479492
    10. ',length' → logprob: -12.680204391479492

Token 146: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7098994851112366
    2. ':' → logprob: -1.4598994255065918
    3. ' for' → logprob: -1.8348994255065918
    4. 'for' → logprob: -2.584899425506592
    5. 'def' → logprob: -4.084899425506592
    6. ',' → logprob: -4.834899425506592
    7. ':
' → logprob: -5.084899425506592
    8. '
' → logprob: -5.709899425506592
    9. '.' → logprob: -6.084899425506592
    10. ' ' → logprob: -6.209899425506592

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05325961485505104
    2. ' for' → logprob: -3.5532596111297607
    3. ':' → logprob: -3.9282596111297607
    4. 'def' → logprob: -6.42825984954834
    5. 'for' → logprob: -6.92825984954834
    6. ' ' → logprob: -8.05325984954834
    7. ':
' → logprob: -8.80325984954834
    8. ',' → logprob: -8.92825984954834
    9. ' def' → logprob: -9.30325984954834
    10. '
' → logprob: -9.42825984954834

Token 148: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23688559234142303
    2. 'for' → logprob: -1.7368855476379395
    3. '   ' → logprob: -3.3618855476379395
    4. 'def' → logprob: -8.736886024475098
    5. ' def' → logprob: -11.861886024475098
    6. 'n' → logprob: -12.236886024475098
    7. '	for' → logprob: -12.986886024475098
    8. ' n' → logprob: -13.236886024475098
    9. ' ' → logprob: -13.736886024475098
    10. '
' → logprob: -14.486886024475098

Token 149: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11990773677825928
    2. ' for' → logprob: -2.244907855987549
    3. '   ' → logprob: -5.244907855987549
    4. 'n' → logprob: -6.869907855987549
    5. 'def' → logprob: -7.369907855987549
    6. ' n' → logprob: -9.36990737915039
    7. ' def' → logprob: -11.49490737915039
    8. '
' → logprob: -11.61990737915039
    9. ' ' → logprob: -12.61990737915039
    10. 'l' → logprob: -13.11990737915039

Token 150: ' of' (ID: 328)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5975287556648254
    2. ' length' → logprob: -1.2225286960601807
    3. 'd' → logprob: -2.4725286960601807
    4. ' d' → logprob: -3.4725286960601807
    5. 'len' → logprob: -4.84752893447876
    6. '(length' → logprob: -4.97252893447876
    7. ' any' → logprob: -5.22252893447876
    8. 'for' → logprob: -5.47252893447876
    9. ' for' → logprob: -5.97252893447876
    10. 'seq' → logprob: -6.47252893447876

Token 151: ' wrapping' (ID: 69235)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6932880878448486
    2. ' the' → logprob: -1.3182880878448486
    3. ' length' → logprob: -2.4432880878448486
    4. 'length' → logprob: -3.1932880878448486
    5. ' len' → logprob: -3.1932880878448486
    6. 'len' → logprob: -4.9432878494262695
    7. ' seq' → logprob: -5.0682878494262695
    8. 'seq' → logprob: -5.1932878494262695
    9. 'string' → logprob: -5.4432878494262695
    10. 'period' → logprob: -5.8182878494262695

Token 152: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23739013075828552
    2. ' for' → logprob: -1.612390160560608
    3. 'for' → logprob: -5.112390041351318
    4. 'def' → logprob: -6.237390041351318
    5. '
' → logprob: -6.362390041351318
    6. ',' → logprob: -7.362390041351318
    7. ' ' → logprob: -7.987390041351318
    8. ')' → logprob: -8.362390518188477
    9. '  ' → logprob: -8.862390518188477
    10. '    ' → logprob: -8.862390518188477

Token 153: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10005049407482147
    2. ' n' → logprob: -3.225050449371338
    3. 'for' → logprob: -3.225050449371338
    4. ' length' → logprob: -5.225050449371338
    5. 'n' → logprob: -5.725050449371338
    6. ' def' → logprob: -6.350050449371338
    7. '   ' → logprob: -6.350050449371338
    8. ' return' → logprob: -6.725050449371338
    9. 'length' → logprob: -7.225050449371338
    10. 'def' → logprob: -7.975050449371338

Token 154: ' square' (ID: 13749)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -1.0987122058868408
    2. 'def' → logprob: -2.098712205886841
    3. 'sequence' → logprob: -2.348712205886841
    4. ' seq' → logprob: -2.723712205886841
    5. ' length' → logprob: -3.098712205886841
    6. ' string' → logprob: -3.098712205886841
    7. 'seq' → logprob: -3.348712205886841
    8. 'string' → logprob: -3.348712205886841
    9. ' substring' → logprob: -3.473712205886841
    10. 'for' → logprob: -3.723712205886841

Token 155: ' sequence' (ID: 16281)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.5250619649887085
    2. ' can' → logprob: -1.9000619649887085
    3. 'def' → logprob: -2.025062084197998
    4. 's' → logprob: -2.275062084197998
    5. ' root' → logprob: -3.025062084197998
    6. 'length' → logprob: -3.400062084197998
    7. ' sequence' → logprob: -3.900062084197998
    8. 'len' → logprob: -3.900062084197998
    9. '   ' → logprob: -4.025062084197998
    10. ' def' → logprob: -4.150062084197998

Token 156: ' must' (ID: 2804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4395715296268463
    2. ' can' → logprob: -1.439571499824524
    3. 's' → logprob: -3.8145716190338135
    4. 'def' → logprob: -3.8145716190338135
    5. ' may' → logprob: -4.189571380615234
    6. ' s' → logprob: -5.189571380615234
    7. 'is' → logprob: -5.189571380615234
    8. ',' → logprob: -5.314571380615234
    9. ' cannot' → logprob: -5.314571380615234
    10. ' def' → logprob: -5.439571380615234

Token 157: ' not' (ID: 625)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.691596508026123
    2. ' be' → logprob: -1.441596508026123
    3. 'have' → logprob: -2.191596508026123
    4. ' have' → logprob: -2.441596508026123
    5. ' also' → logprob: -3.941596508026123
    6. 'also' → logprob: -4.316596508026123
    7. ' not' → logprob: -5.066596508026123
    8. 'repeat' → logprob: -5.191596508026123
    9. 'not' → logprob: -5.316596508026123
    10. ' repeat' → logprob: -6.066596508026123

Token 158: ' overlap' (ID: 56631)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -1.2107361555099487
    2. ' have' → logprob: -1.3357361555099487
    3. 'be' → logprob: -1.4607361555099487
    4. ' be' → logprob: -1.8357361555099487
    5. 'contain' → logprob: -4.335736274719238
    6. ' contain' → logprob: -4.960736274719238
    7. ' overlap' → logprob: -5.210736274719238
    8. 'repeat' → logprob: -5.460736274719238
    9. ' consist' → logprob: -5.585736274719238
    10. 'start' → logprob: -6.335736274719238

Token 159: ' itself' (ID: 8807)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8755733966827393
    2. 'def' → logprob: -1.2505733966827393
    3. ':' → logprob: -2.0005733966827393
    4. '(' → logprob: -2.7505733966827393
    5. '
' → logprob: -4.50057315826416
    6. 's' → logprob: -4.50057315826416
    7. ' def' → logprob: -4.87557315826416
    8. 'd' → logprob: -4.87557315826416
    9. ' at' → logprob: -5.12557315826416
    10. '   ' → logprob: -5.25057315826416

Token 160: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035128410905599594
    2. ':
' → logprob: -3.410128355026245
    3. 'def' → logprob: -6.910128593444824
    4. ' for' → logprob: -9.410128593444824
    5. ',' → logprob: -9.785128593444824
    6. '   ' → logprob: -9.785128593444824
    7. '(' → logprob: -9.910128593444824
    8. ':def' → logprob: -9.910128593444824
    9. '):' → logprob: -10.035128593444824
    10. '.' → logprob: -10.410128593444824

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5211151242256165
    2. ' so' → logprob: -1.0211150646209717
    3. '#' → logprob: -3.7711150646209717
    4. '    ' → logprob: -5.146115303039551
    5. ' ' → logprob: -5.271115303039551
    6. ' but' → logprob: -6.021115303039551
    7. ' i' → logprob: -6.521115303039551
    8. 'def' → logprob: -6.896115303039551
    9. ' def' → logprob: -7.146115303039551
    10. ' which' → logprob: -7.271115303039551

Token 162: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9222608208656311
    2. '#' (adapté à ' #') → logprob: -1.1722607612609863
    3. ' so' → logprob: -1.2972607612609863
    4. 'def' → logprob: -5.172260761260986
    5. ' #' → logprob: -5.797260761260986
    6. ' ' → logprob: -5.797260761260986
    7. '    ' → logprob: -6.172260761260986
    8. 'so' → logprob: -7.047260761260986
    9. '       ' → logprob: -7.422260761260986
    10. ' but' → logprob: -7.422260761260986

Token 163: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24337981641292572
    2. 'for' → logprob: -2.743379831314087
    3. ' for' → logprob: -2.868379831314087
    4. '   ' → logprob: -2.868379831314087
    5. ' so' → logprob: -3.618379831314087
    6. ' #' → logprob: -5.243379592895508
    7. ' if' → logprob: -6.618379592895508
    8. 'if' → logprob: -6.868379592895508
    9. ' return' → logprob: -7.118379592895508
    10. 'return' → logprob: -7.118379592895508

Token 164: ' length' (ID: 5517)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3552711308002472
    2. 'for' → logprob: -1.2302711009979248
    3. ' d' → logprob: -5.855271339416504
    4. 'd' → logprob: -5.855271339416504
    5. 'def' → logprob: -8.355271339416504
    6. ' length' → logprob: -8.605271339416504
    7. 'length' → logprob: -8.730271339416504
    8. '   ' → logprob: -8.855271339416504
    9. ' return' → logprob: -8.980271339416504
    10. 'return' → logprob: -9.105271339416504

Token 165: ' must' (ID: 2804)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5593669414520264
    2. '%' → logprob: -1.0593669414520264
    3. '>' → logprob: -3.0593669414520264
    4. ' >' → logprob: -4.5593671798706055
    5. ' must' → logprob: -4.8093671798706055
    6. ' ' → logprob: -5.5593671798706055
    7. '=' → logprob: -5.6843671798706055
    8. ')' → logprob: -5.6843671798706055
    9. ' is' → logprob: -7.4343671798706055
    10. '   ' → logprob: -7.6843671798706055

Token 166: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5809239149093628
    2. ' not' → logprob: -0.9559239149093628
    3. 'not' → logprob: -2.9559240341186523
    4. 'be' → logprob: -6.330924034118652
    5. '%' → logprob: -7.455924034118652
    6. 'def' → logprob: -7.830924034118652
    7. '>' → logprob: -7.955924034118652
    8. 'n't' → logprob: -8.330924034118652
    9. 'div' → logprob: -8.705924034118652
    10. ')' → logprob: -8.705924034118652

Token 167: ' <=' (ID: 5017)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4244837164878845
    2. 'length' → logprob: -1.7994837760925293
    3. 'div' → logprob: -2.6744837760925293
    4. 'greater' → logprob: -3.5494837760925293
    5. '2' → logprob: -4.174483776092529
    6. ' length' → logprob: -4.674483776092529
    7. 'not' → logprob: -4.799483776092529
    8. 'len' → logprob: -4.799483776092529
    9. ' ' → logprob: -4.924483776092529
    10. 'at' → logprob: -5.174483776092529

Token 168: ' half' (ID: 6375)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.03387078642845154
    2. ' length' → logprob: -3.6588706970214844
    3. 'len' → logprob: -5.408870697021484
    4. '1' → logprob: -6.533870697021484
    5. '(length' → logprob: -6.783870697021484
    6. 'k' → logprob: -8.533870697021484
    7. ' (' → logprob: -9.283870697021484
    8. '(' → logprob: -9.783870697021484
    9. ' ' → logprob: -10.033870697021484
    10. ' len' → logprob: -10.283870697021484

Token 169: ' of' (ID: 328)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.0307035446166992
    2. '   ' → logprob: -1.2807035446166992
    3. 'length' → logprob: -2.155703544616699
    4. '_' → logprob: -2.405703544616699
    5. ')' → logprob: -2.780703544616699
    6. 'def' → logprob: -3.655703544616699
    7. ' length' → logprob: -4.280703544616699
    8. ' ' → logprob: -4.405703544616699
    9. '+' → logprob: -5.155703544616699
    10. ':' → logprob: -5.280703544616699

Token 170: ' the' (ID: 290)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2538781762123108
    2. 'len' → logprob: -1.878878116607666
    3. ' length' → logprob: -2.753878116607666
    4. ' len' → logprob: -4.878878116607666
    5. 'the' → logprob: -9.753878593444824
    6. ' the' → logprob: -9.878878593444824
    7. ' ' → logprob: -10.628878593444824
    8. '   ' → logprob: -11.003878593444824
    9. '```' → logprob: -12.628878593444824
    10. '(length' → logprob: -12.753878593444824

Token 171: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10573182255029678
    2. 'len' → logprob: -2.480731725692749
    3. ' length' → logprob: -4.105731964111328
    4. ' len' → logprob: -8.855731964111328
    5. '   ' → logprob: -11.355731964111328
    6. ' ' → logprob: -11.605731964111328
    7. 'sequence' → logprob: -12.480731964111328
    8. '```' → logprob: -12.605731964111328
    9. 'size' → logprob: -14.355731964111328
    10. ' sequence' → logprob: -14.730731964111328

Token 172: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1999313086271286
    2. 'def' → logprob: -2.4499313831329346
    3. ':
' → logprob: -4.0749311447143555
    4. '   ' → logprob: -4.1999311447143555
    5. ')' → logprob: -4.3249311447143555
    6. ' ' → logprob: -4.6999311447143555
    7. '
' → logprob: -4.8249311447143555
    8. ' and' → logprob: -4.9499311447143555
    9. '.' → logprob: -5.4499311447143555
    10. ',' → logprob: -5.6999311447143555

Token 173: ' avoid' (ID: 8397)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1651365756988525
    2. ' return' → logprob: -1.6651365756988525
    3. ' check' → logprob: -2.2901365756988525
    4. 'check' → logprob: -2.4151365756988525
    5. ' avoid' → logprob: -2.7901365756988525
    6. 'pass' → logprob: -2.9151365756988525
    7. ' pass' → logprob: -3.1651365756988525
    8. 'avoid' → logprob: -3.4151365756988525
    9. ' be' → logprob: -4.165136337280273
    10. '   ' → logprob: -4.165136337280273

Token 174: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.6229572892189026
    2. ' overlap' → logprob: -1.2479572296142578
    3. ' overlaps' → logprob: -2.872957229614258
    4. ' overlapping' → logprob: -2.997957229614258
    5. ' any' → logprob: -4.122957229614258
    6. 'any' → logprob: -4.872957229614258
    7. ' the' → logprob: -5.497957229614258
    8. ' over' → logprob: -5.872957229614258
    9. ' False' → logprob: -5.997957229614258
    10. 'a' → logprob: -5.997957229614258

Token 175: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3384747803211212
    2. 'def' → logprob: -1.9634747505187988
    3. ':
' → logprob: -2.213474750518799
    4. '   ' → logprob: -3.838474750518799
    5. ')' → logprob: -5.088474750518799
    6. '):' → logprob: -6.338474750518799
    7. ' def' → logprob: -6.463474750518799
    8. '
' → logprob: -6.963474750518799
    9. ' ' → logprob: -7.213474750518799
    10. ':def' → logprob: -7.338474750518799

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07693707197904587
    2. ' for' → logprob: -3.326936960220337
    3. 'def' → logprob: -4.076937198638916
    4. '
' → logprob: -4.701937198638916
    5. ' 
' → logprob: -5.576937198638916
    6. '    
' → logprob: -6.576937198638916
    7. ' if' → logprob: -6.576937198638916
    8. ' ' → logprob: -6.826937198638916
    9. ' def' → logprob: -6.826937198638916
    10. 'for' → logprob: -7.201937198638916

Token 177: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36568981409072876
    2. 'for' → logprob: -1.490689754486084
    3. '   ' → logprob: -2.615689754486084
    4. 'def' → logprob: -5.365689754486084
    5. ' if' → logprob: -6.115689754486084
    6. 'if' → logprob: -7.990689754486084
    7. ' def' → logprob: -8.115690231323242
    8. ' return' → logprob: -8.865690231323242
    9. 'return' → logprob: -9.115690231323242
    10. '
' → logprob: -9.865690231323242

Token 178: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07738268375396729
    2. ' for' → logprob: -2.7023825645446777
    3. '   ' → logprob: -5.077382564544678
    4. 'return' → logprob: -7.702382564544678
    5. 'if' → logprob: -7.952382564544678
    6. 'def' → logprob: -8.327383041381836
    7. ' if' → logprob: -10.327383041381836
    8. 'd' → logprob: -10.327383041381836
    9. ' return' → logprob: -10.577383041381836
    10. '
' → logprob: -11.702383041381836

Token 179: ' exact' (ID: 6354)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.5911691188812256
    2. ' for' → logprob: -1.3411691188812256
    3. 'length' → logprob: -2.3411691188812256
    4. 'for' → logprob: -2.7161691188812256
    5. ' return' → logprob: -5.591169357299805
    6. ' if' → logprob: -5.841169357299805
    7. ' the' → logprob: -5.966169357299805
    8. ' True' → logprob: -6.091169357299805
    9. 'return' → logprob: -6.216169357299805
    10. 'if' → logprob: -6.591169357299805

Token 180: ' definition' (ID: 16083)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ly' → logprob: -1.2506259679794312
    2. ' length' → logprob: -1.6256259679794312
    3. 'length' → logprob: -2.5006260871887207
    4. 'if' → logprob: -3.1256260871887207
    5. 'def' → logprob: -3.1256260871887207
    6. ' logic' → logprob: -3.1256260871887207
    7. ' check' → logprob: -3.2506260871887207
    8. ' condition' → logprob: -3.5006260871887207
    9. ' code' → logprob: -3.5006260871887207
    10. ' if' → logprob: -4.000626087188721

Token 181: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016108151525259018
    2. 'def' → logprob: -5.64110803604126
    3. '   ' → logprob: -6.01610803604126
    4. '):' → logprob: -6.51610803604126
    5. ':return' → logprob: -6.64110803604126
    6. ' :' → logprob: -6.76610803604126
    7. '(' → logprob: -7.14110803604126
    8. '(length' → logprob: -7.26610803604126
    9. ':
' → logprob: -7.51610803604126
    10. ' ' → logprob: -7.76610803604126

Token 182: ' no' (ID: 860)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12637701630592346
    2. ' def' → logprob: -3.5013771057128906
    3. '   ' → logprob: -3.8763771057128906
    4. 'def' → logprob: -4.001377105712891
    5. ' if' → logprob: -4.251377105712891
    6. ' return' → logprob: -4.751377105712891
    7. 'for' → logprob: -4.751377105712891
    8. ' 
' → logprob: -4.751377105712891
    9. '
' → logprob: -5.251377105712891
    10. '    
' → logprob: -7.251377105712891

Token 183: ' overlapping' (ID: 90457)
  Prédit: ' proper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' proper' → logprob: -0.9348546862602234
    2. ' substring' → logprob: -1.1848547458648682
    3. ' overlap' → logprob: -2.184854745864868
    4. 'substring' → logprob: -3.684854745864868
    5. ' repeats' → logprob: -3.684854745864868
    6. ' repeated' → logprob: -3.809854745864868
    7. ' overlapping' → logprob: -4.184854507446289
    8. ' d' → logprob: -4.184854507446289
    9. 'd' → logprob: -5.059854507446289
    10. ' repeating' → logprob: -5.184854507446289

Token 184: ' squares' (ID: 57269)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8597515821456909
    2. '_' → logprob: -1.359751582145691
    3. ':' → logprob: -2.1097517013549805
    4. '   ' → logprob: -2.6097517013549805
    5. ' def' → logprob: -3.8597517013549805
    6. ')' → logprob: -4.1097517013549805
    7. '
' → logprob: -4.6097517013549805
    8. ' ' → logprob: -4.6097517013549805
    9. ' _' → logprob: -4.6097517013549805
    10. ' of' → logprob: -4.9847517013549805

Token 185: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12681753933429718
    2. ':' → logprob: -2.751817464828491
    3. '   ' → logprob: -3.876817464828491
    4. ')' → logprob: -4.50181770324707
    5. '(' → logprob: -5.12681770324707
    6. ' def' → logprob: -5.37681770324707
    7. '):' → logprob: -5.87681770324707
    8. ':
' → logprob: -6.50181770324707
    9. '
' → logprob: -6.62681770324707
    10. '<|end|>' → logprob: -7.12681770324707

Token 186: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0981947183609009
    2. ' the' → logprob: -1.4731947183609009
    3. 'seq' → logprob: -2.5981945991516113
    4. 'sequence' → logprob: -2.8481945991516113
    5. ' sequence' → logprob: -3.0981945991516113
    6. ' seq' → logprob: -3.0981945991516113
    7. ' sequences' → logprob: -3.2231945991516113
    8. ' a' → logprob: -3.5981945991516113
    9. ' substr' → logprob: -3.8481945991516113
    10. 'a' → logprob: -4.223194599151611

Token 187: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.3733007609844208
    2. ' sequence' → logprob: -1.6233007907867432
    3. 'string' → logprob: -3.248300790786743
    4. ' code' → logprob: -4.373300552368164
    5. ' string' → logprob: -4.748300552368164
    6. 'seq' → logprob: -4.748300552368164
    7. 'same' → logprob: -5.123300552368164
    8. 'substring' → logprob: -5.248300552368164
    9. ' same' → logprob: -5.498300552368164
    10. 'code' → logprob: -5.623300552368164

Token 188: ' itself' (ID: 8807)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2555145025253296
    2. '   ' → logprob: -2.130514621734619
    3. 'def' → logprob: -2.505514621734619
    4. ':
' → logprob: -4.880514621734619
    5. ' for' → logprob: -5.505514621734619
    6. ')' → logprob: -6.005514621734619
    7. '):' → logprob: -6.255514621734619
    8. ' ' → logprob: -6.380514621734619
    9. ':def' → logprob: -6.505514621734619
    10. ' def' → logprob: -6.755514621734619

Token 189: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1226343885064125
    2. 'def' → logprob: -2.4976344108581543
    3. '   ' → logprob: -3.9976344108581543
    4. ')' → logprob: -5.622634410858154
    5. '):' → logprob: -6.372634410858154
    6. '(' → logprob: -6.497634410858154
    7. ':
' → logprob: -6.622634410858154
    8. ' def' → logprob: -6.872634410858154
    9. ':def' → logprob: -6.872634410858154
    10. ' ' → logprob: -7.122634410858154

Token 190: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5154148936271667
    2. 'def' → logprob: -1.0154149532318115
    3. ':
' → logprob: -4.640414714813232
    4. '   ' → logprob: -4.765414714813232
    5. ' def' → logprob: -5.015414714813232
    6. '
' → logprob: -5.390414714813232
    7. ':def' → logprob: -5.390414714813232
    8. '<|end|>' → logprob: -6.265414714813232
    9. ')' → logprob: -6.890414714813232
    10. ' for' → logprob: -7.265414714813232

Token 191: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24128183722496033
    2. '   ' → logprob: -2.241281747817993
    3. ' 
' → logprob: -3.241281747817993
    4. 'for' → logprob: -3.491281747817993
    5. '
' → logprob: -3.866281747817993
    6. 'def' → logprob: -4.491281986236572
    7. '    
' → logprob: -6.741281986236572
    8. ' ' → logprob: -6.866281986236572
    9. '\n' → logprob: -6.866281986236572
    10. ' def' → logprob: -7.491281986236572

Token 192: ' We' (ID: 1416)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6386497616767883
    2. 'for' → logprob: -0.7636497616767883
    3. '   ' → logprob: -5.263649940490723
    4. 'def' → logprob: -7.888649940490723
    5. 'n' → logprob: -8.138649940490723
    6. 'return' → logprob: -9.513649940490723
    7. ' return' → logprob: -10.013649940490723
    8. ' n' → logprob: -10.388649940490723
    9. ' def' → logprob: -11.888649940490723
    10. ')' → logprob: -12.138649940490723

Token 193: ' consider' (ID: 3331)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.924560010433197
    2. '   ' → logprob: -1.5495600700378418
    3. 'def' → logprob: -1.7995600700378418
    4. ' can' → logprob: -2.299560070037842
    5. ' def' → logprob: -3.549560070037842
    6. ''ll' → logprob: -3.799560070037842
    7. ' continue' → logprob: -4.174560070037842
    8. 'need' → logprob: -4.299560070037842
    9. ' check' → logprob: -4.424560070037842
    10. ' want' → logprob: -4.924560070037842

Token 194: ' no' (ID: 860)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4700829088687897
    2. ' d' → logprob: -1.0950828790664673
    3. ' for' → logprob: -4.220082759857178
    4. 'for' → logprob: -4.345082759857178
    5. 'def' → logprob: -5.595082759857178
    6. ' any' → logprob: -5.970082759857178
    7. ' i' → logprob: -6.970082759857178
    8. ' possible' → logprob: -7.220082759857178
    9. ' substr' → logprob: -7.220082759857178
    10. ' all' → logprob: -7.345082759857178

Token 195: ' repeated' (ID: 24161)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.7367736101150513
    2. ' substring' → logprob: -1.8617736101150513
    3. ' overlapping' → logprob: -2.1117734909057617
    4. ' repeats' → logprob: -3.1117734909057617
    5. ' overlaps' → logprob: -3.4867734909057617
    6. ' repeating' → logprob: -3.9867734909057617
    7. 'def' → logprob: -4.111773490905762
    8. ' proper' → logprob: -4.111773490905762
    9. ' substr' → logprob: -4.236773490905762
    10. ' ' → logprob: -4.486773490905762

Token 196: ' positions' (ID: 15897)
  Prédit: ' substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' substring' → logprob: -1.0029795169830322
    2. ' substr' → logprob: -1.5029795169830322
    3. 'substring' → logprob: -2.1279795169830322
    4. ' sequences' → logprob: -2.8779795169830322
    5. 'sub' → logprob: -3.2529795169830322
    6. 'pattern' → logprob: -3.7529795169830322
    7. ' segments' → logprob: -3.8779795169830322
    8. ' pattern' → logprob: -3.8779795169830322
    9. 'substr' → logprob: -4.127979278564453
    10. 's' → logprob: -4.252979278564453

Token 197: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21041643619537354
    2. ':' → logprob: -2.335416316986084
    3. '):' → logprob: -3.710416316986084
    4. ')' → logprob: -3.710416316986084
    5. '<|end|>' → logprob: -3.710416316986084
    6. '   ' → logprob: -5.085416316986084
    7. ' def' → logprob: -5.460416316986084
    8. ':def' → logprob: -6.460416316986084
    9. '
' → logprob: -6.710416316986084
    10. '(' → logprob: -6.960416316986084

Token 198: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.27831581234931946
    2. 'the' → logprob: -1.653315782546997
    3. ' a' → logprob: -4.153316020965576
    4. ' seq' → logprob: -4.528316020965576
    5. ' sequence' → logprob: -5.153316020965576
    6. ' sequences' → logprob: -5.903316020965576
    7. ' any' → logprob: -6.028316020965576
    8. 'seq' → logprob: -6.153316020965576
    9. 'a' → logprob: -6.403316020965576
    10. ' subse' → logprob: -6.778316020965576

Token 199: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6701272130012512
    2. ' sequence' → logprob: -0.7951272130012512
    3. 'seq' → logprob: -3.9201271533966064
    4. ' seq' → logprob: -5.4201273918151855
    5. 'substring' → logprob: -6.0451273918151855
    6. 'string' → logprob: -6.4201273918151855
    7. ' code' → logprob: -6.5451273918151855
    8. 'code' → logprob: -7.0451273918151855
    9. ' string' → logprob: -7.2951273918151855
    10. 'def' → logprob: -7.2951273918151855

Token 200: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5710949301719666
    2. 'def' → logprob: -1.5710949897766113
    3. '<|end|>' → logprob: -1.6960949897766113
    4. '   ' → logprob: -4.446094989776611
    5. ':return' → logprob: -5.071094989776611
    6. '):' → logprob: -5.196094989776611
    7. ')' → logprob: -5.446094989776611
    8. ':def' → logprob: -5.696094989776611
    9. '<|end|>' → logprob: -5.946094989776611
    10. ' def' → logprob: -6.071094989776611

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9772951006889343
    2. ':' → logprob: -1.352295160293579
    3. '<|end|>' → logprob: -1.727295160293579
    4. 'def' → logprob: -2.352295160293579
    5. ' ' → logprob: -3.977295160293579
    6. '
' → logprob: -3.977295160293579
    7. ':
' → logprob: -4.727294921875
    8. ' def' → logprob: -4.852294921875
    9. '<|end|>' → logprob: -5.102294921875
    10. ' for' → logprob: -5.352294921875

Token 202: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11215543746948242
    2. ' for' → logprob: -2.6121554374694824
    3. '<|end|>' → logprob: -4.737155437469482
    4. ' ' → logprob: -5.237155437469482
    5. ' if' → logprob: -5.362155437469482
    6. ' 
' → logprob: -5.487155437469482
    7. '
' → logprob: -5.987155437469482
    8. 'def' → logprob: -6.237155437469482
    9. 'for' → logprob: -6.362155437469482
    10. ' return' → logprob: -7.362155437469482

Token 203: ' Since' (ID: 12265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6790443658828735
    2. 'for' → logprob: -1.5540443658828735
    3. '   ' → logprob: -2.054044246673584
    4. ' return' → logprob: -2.554044246673584
    5. 'return' → logprob: -3.179044246673584
    6. 'n' → logprob: -4.304044246673584
    7. ' n' → logprob: -4.804044246673584
    8. 'def' → logprob: -5.304044246673584
    9. ' seen' → logprob: -6.554044246673584
    10. ' visited' → logprob: -7.054044246673584

Token 204: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0313615798950195
    2. ' the' → logprob: -1.5313615798950195
    3. ' length' → logprob: -2.1563615798950195
    4. 'length' → logprob: -2.2813615798950195
    5. 'len' → logprob: -2.7813615798950195
    6. 'seq' → logprob: -3.4063615798950195
    7. ' seq' → logprob: -3.6563615798950195
    8. ' len' → logprob: -4.2813615798950195
    9. ' sequence' → logprob: -4.5313615798950195
    10. 'sequence' → logprob: -4.5313615798950195

Token 205: ' donut' (ID: 170604)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.8317976593971252
    2. 'sequence' → logprob: -1.3317975997924805
    3. ' positions' → logprob: -2.7067975997924805
    4. 'length' → logprob: -3.0817975997924805
    5. 'positions' → logprob: -3.3317975997924805
    6. ' length' → logprob: -3.4567975997924805
    7. 'def' → logprob: -3.7067975997924805
    8. ' grid' → logprob: -4.2067975997924805
    9. 'len' → logprob: -4.3317975997924805
    10. 'seq' → logprob: -4.7067975997924805

Token 206: ' wraps' (ID: 69031)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8233667612075806
    2. ' topology' → logprob: -2.073366641998291
    3. ' grid' → logprob: -2.198366641998291
    4. ' has' → logprob: -2.698366641998291
    5. ' shape' → logprob: -2.823366641998291
    6. ' wrapping' → logprob: -3.323366641998291
    7. ' positions' → logprob: -3.948366641998291
    8. 'shape' → logprob: -4.073366641998291
    9. 'grid' → logprob: -4.073366641998291
    10. ' sequence' → logprob: -4.323366641998291

Token 207: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44755318760871887
    2. ',' → logprob: -1.3225531578063965
    3. '<|end|>' → logprob: -3.1975531578063965
    4. ' ,' → logprob: -3.9475531578063965
    5. 'def' → logprob: -4.1975531578063965
    6. '   ' → logprob: -4.9475531578063965
    7. '<|end|>' → logprob: -5.8225531578063965
    8. ' )' → logprob: -6.1975531578063965
    9. '),' → logprob: -6.6975531578063965
    10. ' ' → logprob: -7.6975531578063965

Token 208: ' max' (ID: 2999)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.37597447633743286
    2. 'return' → logprob: -2.000974416732788
    3. ' the' → logprob: -3.250974416732788
    4. ' for' → logprob: -3.375974416732788
    5. ' length' → logprob: -3.875974416732788
    6. '   ' → logprob: -4.125974655151367
    7. ' we' → logprob: -4.250974655151367
    8. 'the' → logprob: -4.625974655151367
    9. ' def' → logprob: -4.750974655151367
    10. ' positions' → logprob: -5.500974655151367

Token 209: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.24327148497104645
    2. 'length' → logprob: -1.6182714700698853
    3. 'distance' → logprob: -5.243271350860596
    4. ' sequence' → logprob: -5.993271350860596
    5. ' distance' → logprob: -6.493271350860596
    6. ' half' → logprob: -6.618271350860596
    7. ' overlap' → logprob: -6.743271350860596
    8. 'repeat' → logprob: -6.993271350860596
    9. 'substring' → logprob: -7.243271350860596
    10. 'sequence' → logprob: -7.493271350860596

Token 210: ' of' (ID: 328)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6180456280708313
    2. ' //' → logprob: -1.4930455684661865
    3. ' is' → logprob: -2.4930455684661865
    4. '   ' → logprob: -2.9930455684661865
    5. ' <=' → logprob: -3.6180455684661865
    6. '=' → logprob: -3.9930455684661865
    7. ' =' → logprob: -4.368045806884766
    8. '<=' → logprob: -4.868045806884766
    9. 'def' → logprob: -4.993045806884766
    10. '```' → logprob: -5.118045806884766

Token 211: ' non' (ID: 2893)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.21575705707073212
    2. ' length' → logprob: -1.9657570123672485
    3. 'seq' → logprob: -3.840757131576538
    4. 'sequence' → logprob: -3.965757131576538
    5. ' sequence' → logprob: -4.715756893157959
    6. ' seq' → logprob: -6.340756893157959
    7. 'the' → logprob: -6.715756893157959
    8. ' the' → logprob: -7.840756893157959
    9. '(length' → logprob: -8.340757369995117
    10. 'half' → logprob: -8.965757369995117

Token 212: '-self' (ID: 89352)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.007432104088366032
    2. ' overlapping' → logprob: -5.007431983947754
    3. '-over' → logprob: -8.132431983947754
    4. ' overlap' → logprob: -8.257431983947754
    5. 're' → logprob: -9.507431983947754
    6. ' over' → logprob: -10.757431983947754
    7. 'repeat' → logprob: -11.132431983947754
    8. 'self' → logprob: -11.382431983947754
    9. ' self' → logprob: -11.757431983947754
    10. '   ' → logprob: -12.257431983947754

Token 213: '-over' (ID: 37193)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.021634066477417946
    2. '-over' → logprob: -4.021634101867676
    3. ' overlapping' → logprob: -5.896634101867676
    4. ' overlap' → logprob: -7.271634101867676
    5. 'intersection' → logprob: -11.271634101867676
    6. '_overlap' → logprob: -12.146634101867676
    7. ' over' → logprob: -12.396634101867676
    8. '_over' → logprob: -12.771634101867676
    9. 'inter' → logprob: -13.146634101867676
    10. '   ' → logprob: -13.396634101867676

Token 214: 'lapping' (ID: 152588)
  Prédit: 'lap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lap' → logprob: -0.20693543553352356
    2. 'lapping' → logprob: -1.7069354057312012
    3. 'apping' → logprob: -6.081935405731201
    4. 'ap' → logprob: -6.331935405731201
    5. 'l' → logprob: -7.331935405731201
    6. ' lap' → logprob: -8.58193588256836
    7. 'laps' → logprob: -8.70693588256836
    8. 'wrap' → logprob: -9.08193588256836
    9. 'rap' → logprob: -9.58193588256836
    10. 'aping' → logprob: -9.70693588256836

Token 215: ' seq' (ID: 26775)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.613647997379303
    2. 'sequence' → logprob: -1.3636479377746582
    3. ' is' → logprob: -3.113647937774658
    4. 'substring' → logprob: -3.363647937774658
    5. 'seq' → logprob: -4.113647937774658
    6. ' substring' → logprob: -4.113647937774658
    7. 'segment' → logprob: -4.488647937774658
    8. 'sub' → logprob: -4.738647937774658
    9. ' seq' → logprob: -4.863647937774658
    10. ' subse' → logprob: -4.863647937774658

Token 216: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1460629552602768
    2. ' =' → logprob: -2.1460628509521484
    3. ' <=' → logprob: -5.271062850952148
    4. 'is' → logprob: -5.521062850952148
    5. '=' → logprob: -5.771062850952148
    6. ')' → logprob: -6.146062850952148
    7. ' can' → logprob: -6.396062850952148
    8. 'def' → logprob: -7.521062850952148
    9. ' should' → logprob: -7.771062850952148
    10. ' ' → logprob: -7.771062850952148

Token 217: ' minimal' (ID: 19957)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.20885032415390015
    2. '(length' → logprob: -1.958850383758545
    3. '(h' → logprob: -4.083850383758545
    4. 'len' → logprob: -4.208850383758545
    5. ' length' → logprob: -5.708850383758545
    6. '(min' → logprob: -5.958850383758545
    7. ' (' → logprob: -5.958850383758545
    8. '(len' → logprob: -6.083850383758545
    9. 'min' → logprob: -6.583850383758545
    10. 'h' → logprob: -6.708850383758545

Token 218: ' period' (ID: 5265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: ' length' (ID: 5517)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8184503316879272
    2. ':' → logprob: -1.5684503316879272
    3. '   ' → logprob: -1.9434503316879272
    4. '(' → logprob: -3.193450450897217
    5. '_' → logprob: -3.193450450897217
    6. ')' → logprob: -3.193450450897217
    7. ' ' → logprob: -4.068450450897217
    8. '<|end|>' → logprob: -4.443450450897217
    9. '):' → logprob: -4.568450450897217
    10. '
' → logprob: -4.693450450897217

Token 220: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22825103998184204
    2. '   ' → logprob: -1.9782509803771973
    3. ':' → logprob: -3.2282509803771973
    4. ')' → logprob: -4.603250980377197
    5. '<|end|>' → logprob: -5.603250980377197
    6. '):' → logprob: -5.853250980377197
    7. '
' → logprob: -6.103250980377197
    8. ' def' → logprob: -6.353250980377197
    9. ' for' → logprob: -6.478250980377197
    10. '):
' → logprob: -7.228250980377197

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41924384236335754
    2. ':' → logprob: -1.4192438125610352
    3. '<|end|>' → logprob: -3.419243812561035
    4. ')' → logprob: -3.919243812561035
    5. '):' → logprob: -4.544243812561035
    6. 'def' → logprob: -4.669243812561035
    7. ' ' → logprob: -4.794243812561035
    8. '
' → logprob: -4.794243812561035
    9. ' def' → logprob: -6.419243812561035
    10. ' :' → logprob: -6.794243812561035

Token 222: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6096617579460144
    2. ' for' → logprob: -0.9846617579460144
    3. ' return' → logprob: -3.234661817550659
    4. 'for' → logprob: -4.60966157913208
    5. ' if' → logprob: -4.85966157913208
    6. 'def' → logprob: -5.23466157913208
    7. 'return' → logprob: -5.23466157913208
    8. '
' → logprob: -5.85966157913208
    9. ' ' → logprob: -5.98466157913208
    10. 'n' → logprob: -6.60966157913208

Token 223: ' But' (ID: 3072)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48505938053131104
    2. 'for' → logprob: -1.110059380531311
    3. '   ' → logprob: -4.2350592613220215
    4. ' return' → logprob: -4.3600592613220215
    5. 'return' → logprob: -4.6100592613220215
    6. 'def' → logprob: -4.7350592613220215
    7. 'n' → logprob: -5.6100592613220215
    8. 'period' → logprob: -6.4850592613220215
    9. ' if' → logprob: -7.1100592613220215
    10. 'if' → logprob: -7.3600592613220215

Token 224: ' the' (ID: 290)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.19647549092769623
    2. ' def' → logprob: -2.8214755058288574
    3. 'return' → logprob: -3.0714755058288574
    4. ' for' → logprob: -3.3214755058288574
    5. 'def' → logprob: -4.071475505828857
    6. ' length' → logprob: -4.571475505828857
    7. '   ' → logprob: -5.821475505828857
    8. ' if' → logprob: -6.321475505828857
    9. '#' → logprob: -6.821475505828857
    10. 'for' → logprob: -7.446475505828857

Token 225: ' prompt' (ID: 15226)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6364375352859497
    2. ' minimal' → logprob: -1.5114375352859497
    3. ' code' → logprob: -3.01143741607666
    4. ' def' → logprob: -3.13643741607666
    5. ' return' → logprob: -4.01143741607666
    6. '   ' → logprob: -4.01143741607666
    7. ' problem' → logprob: -4.38643741607666
    8. ' best' → logprob: -4.63643741607666
    9. '#' → logprob: -4.76143741607666
    10. 'return' → logprob: -4.88643741607666

Token 226: ' says' (ID: 5003)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.042921543121338
    2. ':' → logprob: -1.542921543121338
    3. '<|end|>' → logprob: -1.542921543121338
    4. ' is' → logprob: -2.542921543121338
    5. '<|end|>' → logprob: -3.542921543121338
    6. ')' → logprob: -3.667921543121338
    7. ' def' → logprob: -3.667921543121338
    8. '   ' → logprob: -4.292921543121338
    9. 'def' → logprob: -4.542921543121338
    10. ' continues' → logprob: -5.042921543121338

Token 227: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0520129203796387
    2. ' ' → logprob: -1.3020129203796387
    3. ' return' → logprob: -2.1770129203796387
    4. ' pass' → logprob: -2.1770129203796387
    5. '<|end|>' → logprob: -2.9270129203796387
    6. ' 
' → logprob: -3.9270129203796387
    7. '
' → logprob: -3.9270129203796387
    8. '    ' → logprob: -4.427012920379639
    9. ' def' → logprob: -4.802012920379639
    10. 'def' → logprob: -5.052012920379639

Token 228: ' sequences' (ID: 45665)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.3144683837890625
    2. 'length' → logprob: -2.3144683837890625
    3. 'code' → logprob: -2.5644683837890625
    4. ' code' → logprob: -2.6894683837890625
    5. 'function' → logprob: -2.9394683837890625
    6. 'next' → logprob: -3.0644683837890625
    7. 'square' → logprob: -3.1894683837890625
    8. 'def' → logprob: -3.4394683837890625
    9. 'rest' → logprob: -3.5644683837890625
    10. 'max' → logprob: -3.6894683837890625

Token 229: ' cannot' (ID: 6284)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: ' overlap' (ID: 56631)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -1.3844929933547974
    2. ' overlap' → logprob: -1.3844929933547974
    3. 'have' → logprob: -1.6344929933547974
    4. ' be' → logprob: -2.509492874145508
    5. 'over' → logprob: -3.009492874145508
    6. 'be' → logprob: -3.009492874145508
    7. 'contain' → logprob: -3.009492874145508
    8. ' contain' → logprob: -3.134492874145508
    9. 'repeat' → logprob: -4.634492874145508
    10. ' exceed' → logprob: -4.759492874145508

Token 231: ' themselves' (ID: 9247)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21349790692329407
    2. '   ' → logprob: -2.4634978771209717
    3. '<|end|>' → logprob: -3.5884978771209717
    4. 'def' → logprob: -3.7134978771209717
    5. '):' → logprob: -3.9634978771209717
    6. '
' → logprob: -4.338498115539551
    7. ')' → logprob: -4.838498115539551
    8. ':
' → logprob: -5.713498115539551
    9. ':return' → logprob: -5.838498115539551
    10. ':def' → logprob: -6.463498115539551

Token 232: ';
' (ID: 307)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30795741081237793
    2. '   ' → logprob: -2.057957410812378
    3. '<|end|>' → logprob: -2.932957410812378
    4. '):' → logprob: -3.557957410812378
    5. ')' → logprob: -4.182957649230957
    6. 'def' → logprob: -4.432957649230957
    7. '
' → logprob: -4.807957649230957
    8. ':
' → logprob: -4.932957649230957
    9. ':return' → logprob: -5.932957649230957
    10. '<|end|>' → logprob: -6.057957649230957

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1394832730293274
    2. ' return' → logprob: -2.7644832134246826
    3. '#' → logprob: -3.2644832134246826
    4. ' #' → logprob: -4.764483451843262
    5. ')' → logprob: -5.014483451843262
    6. 'def' → logprob: -5.389483451843262
    7. 'return' → logprob: -6.264483451843262
    8. ' ' → logprob: -6.264483451843262
    9. ' for' → logprob: -7.014483451843262
    10. ' if' → logprob: -7.014483451843262

Token 234: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.34678375720977783
    2. '   ' → logprob: -1.3467837572097778
    3. 'return' → logprob: -3.7217836380004883
    4. ' for' → logprob: -5.221783638000488
    5. ' if' → logprob: -6.221783638000488
    6. '#' (adapté à ' #') → logprob: -7.346783638000488
    7. '    ' → logprob: -8.846783638000488
    8. ' #' → logprob: -8.846783638000488
    9. 'for' → logprob: -8.971783638000488
    10. 'def' → logprob: -9.721783638000488

Token 235: ' length' (ID: 5517)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6475986242294312
    2. ' for' → logprob: -0.8975986242294312
    3. 'return' → logprob: -3.2725987434387207
    4. 'for' → logprob: -4.147598743438721
    5. '   ' → logprob: -4.272598743438721
    6. '#' → logprob: -8.272598266601562
    7. ' if' → logprob: -8.522598266601562
    8. ' #' → logprob: -8.522598266601562
    9. 'def' → logprob: -8.522598266601562
    10. ')' → logprob: -8.647598266601562

Token 236: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.093121886253357
    2. ' >' → logprob: -1.218121886253357
    3. '>' → logprob: -2.5931220054626465
    4. ' ' → logprob: -2.8431220054626465
    5. ' //' → logprob: -2.8431220054626465
    6. '//' → logprob: -3.2181220054626465
    7. ')' → logprob: -3.8431220054626465
    8. '   ' → logprob: -3.9681220054626465
    9. '<=' → logprob: -3.9681220054626465
    10. ' <' → logprob: -4.3431220054626465

Token 237: ' half' (ID: 6375)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.5130860209465027
    2. 'length' → logprob: -1.3880860805511475
    3. ' (' → logprob: -3.1380860805511475
    4. ' len' → logprob: -3.1380860805511475
    5. 'len' → logprob: -3.5130860805511475
    6. ' ' → logprob: -4.263085842132568
    7. '2' → logprob: -4.888085842132568
    8. '(length' → logprob: -5.263085842132568
    9. '1' → logprob: -5.388085842132568
    10. '0' → logprob: -6.263085842132568

Token 238: ' the' (ID: 290)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9161714315414429
    2. ' >' → logprob: -1.0411714315414429
    3. '   ' → logprob: -2.0411715507507324
    4. ' and' → logprob: -3.6661715507507324
    5. ' >=' → logprob: -3.6661715507507324
    6. '>' → logprob: -4.291171550750732
    7. ' or' → logprob: -4.666171550750732
    8. ':
' → logprob: -5.041171550750732
    9. 'def' → logprob: -5.416171550750732
    10. ' ' → logprob: -5.416171550750732

Token 239: ' dimension' (ID: 21959)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.04878277704119682
    2. ' length' → logprob: -3.1737828254699707
    3. 'len' → logprob: -5.173782825469971
    4. '_length' → logprob: -10.173782348632812
    5. '   ' → logprob: -10.923782348632812
    6. 'sequence' → logprob: -10.923782348632812
    7. ' len' → logprob: -11.423782348632812
    8. ' sequence' → logprob: -12.298782348632812
    9. 'seq' → logprob: -12.673782348632812
    10. 'size' → logprob: -12.673782348632812

Token 240: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05132906511425972
    2. '<|end|>' → logprob: -4.176329135894775
    3. '   ' → logprob: -4.426329135894775
    4. ':return' → logprob: -5.176329135894775
    5. ':
' → logprob: -5.676329135894775
    6. ' and' → logprob: -6.051329135894775
    7. ' ' → logprob: -6.176329135894775
    8. '):' → logprob: -6.176329135894775
    9. '
' → logprob: -6.301329135894775
    10. ')' → logprob: -7.051329135894775

Token 241: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35155636072158813
    2. ' ' → logprob: -1.4765563011169434
    3. '#' → logprob: -3.8515563011169434
    4. '*' → logprob: -4.351556301116943
    5. ' is' → logprob: -4.976556301116943
    6. 's' → logprob: -5.476556301116943
    7. '0' → logprob: -5.976556301116943
    8. 'def' → logprob: -5.976556301116943
    9. ')' → logprob: -6.101556301116943
    10. ' def' → logprob: -6.351556301116943

Token 242: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03164491429924965
    2. ' ' → logprob: -4.031644821166992
    3. 'length' → logprob: -4.656644821166992
    4. '#' → logprob: -6.531644821166992
    5. ' length' → logprob: -6.656644821166992
    6. '0' → logprob: -7.906644821166992
    7. '1' → logprob: -8.531644821166992
    8. '*' → logprob: -8.531644821166992
    9. '...' → logprob: -10.406644821166992
    10. 'def' → logprob: -10.781644821166992

Token 243: '?' (ID: 30)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024996507912874222
    2. '):' → logprob: -4.899996280670166
    3. '   ' → logprob: -5.899996280670166
    4. '<|end|>' → logprob: -5.899996280670166
    5. ')' → logprob: -6.024996280670166
    6. ':return' → logprob: -6.149996280670166
    7. ' :' → logprob: -6.524996280670166
    8. '():' → logprob: -6.774996280670166
    9. 'def' → logprob: -6.774996280670166
    10. ' ' → logprob: -7.524996280670166

Token 244: ' To' (ID: 2514)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22330912947654724
    2. ' ' → logprob: -2.59830904006958
    3. ' :' → logprob: -3.34830904006958
    4. ':return' → logprob: -3.59830904006958
    5. '<|end|>' → logprob: -3.72330904006958
    6. '   ' → logprob: -4.72330904006958
    7. ' 
' → logprob: -4.97330904006958
    8. 'def' → logprob: -5.47330904006958
    9. ':
' → logprob: -5.59830904006958
    10. '
' → logprob: -6.22330904006958

Token 245: ' keep' (ID: 3357)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8909690380096436
    2. 'o' → logprob: -1.5159690380096436
    3. 'do' → logprob: -2.5159690380096436
    4. ' return' → logprob: -2.7659690380096436
    5. ' be' → logprob: -3.0159690380096436
    6. 'continue' → logprob: -3.0159690380096436
    7. 'be' → logprob: -3.5159690380096436
    8. ' continue' → logprob: -4.015969276428223
    9. 'check' → logprob: -4.390969276428223
    10. 'pass' → logprob: -4.640969276428223

Token 246: ' simple' (ID: 4705)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.9115795493125916
    2. ' length' → logprob: -1.5365796089172363
    3. 'False' → logprob: -1.7865796089172363
    4. 'length' → logprob: -2.4115796089172363
    5. ' True' → logprob: -3.0365796089172363
    6. ' the' → logprob: -3.1615796089172363
    7. 'True' → logprob: -4.786579608917236
    8. 'the' → logprob: -5.161579608917236
    9. 'len' → logprob: -5.411579608917236
    10. ' checking' → logprob: -5.536579608917236

Token 247: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6726072430610657
    2. ':' → logprob: -0.7976072430610657
    3. '<|end|>' → logprob: -4.547607421875
    4. ' if' → logprob: -5.422607421875
    5. ' :' → logprob: -5.547607421875
    6. '):' → logprob: -5.672607421875
    7. ':
' → logprob: -6.172607421875
    8. ':return' → logprob: -6.172607421875
    9. ' ' → logprob: -6.297607421875
    10. ')' → logprob: -6.422607421875

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010617628693580627
    2. ' False' → logprob: -5.260617733001709
    3. ' return' → logprob: -5.760617733001709
    4. '    ' → logprob: -7.260617733001709
    5. 'False' → logprob: -7.385617733001709
    6. ' True' → logprob: -8.26061725616455
    7. ' None' → logprob: -8.51061725616455
    8. ' length' → logprob: -8.63561725616455
    9. ' if' → logprob: -9.76061725616455
    10. ')' → logprob: -10.26061725616455

Token 249: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6350179314613342
    2. '   ' → logprob: -0.8850179314613342
    3. 'return' → logprob: -2.8850178718566895
    4. ' if' → logprob: -7.5100178718566895
    5. ' for' → logprob: -7.6350178718566895
    6. 'for' → logprob: -9.260018348693848
    7. 'if' → logprob: -9.510018348693848
    8. ' ' → logprob: -9.885018348693848
    9. ' pass' → logprob: -10.010018348693848
    10. '    ' → logprob: -10.010018348693848

Token 250: ' self' (ID: 1051)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7798060178756714
    2. '   ' → logprob: -1.2798060178756714
    3. 'return' → logprob: -1.5298060178756714
    4. ' for' → logprob: -3.779806137084961
    5. ' if' → logprob: -4.404806137084961
    6. 'for' → logprob: -4.779806137084961
    7. 'if' → logprob: -5.779806137084961
    8. '#' → logprob: -9.029806137084961
    9. 'def' → logprob: -9.279806137084961
    10. ' #' → logprob: -10.154806137084961

Token 251: '-over' (ID: 37193)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.008512445725500584
    2. '_over' → logprob: -5.008512496948242
    3. '   ' → logprob: -7.383512496948242
    4. ' overlap' → logprob: -7.508512496948242
    5. 'over' → logprob: -8.383512496948242
    6. '-over' → logprob: -9.133512496948242
    7. 'def' → logprob: -9.508512496948242
    8. ' ' → logprob: -10.008512496948242
    9. ')' → logprob: -11.133512496948242
    10. ' overlapping' → logprob: -11.258512496948242

Token 252: 'lap' (ID: 23092)
  Prédit: 'lap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lap' → logprob: -0.0027416350785642862
    2. 'ap' → logprob: -6.502741813659668
    3. 'lapping' → logprob: -7.127741813659668
    4. 'laps' → logprob: -8.377741813659668
    5. 'flow' → logprob: -9.752741813659668
    6. ' lap' → logprob: -10.252741813659668
    7. 'length' → logprob: -10.502741813659668
    8. 'apping' → logprob: -10.627741813659668
    9. 'l' → logprob: -11.752741813659668
    10. 'head' → logprob: -12.002741813659668

Token 253: ' means' (ID: 4748)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4851350784301758
    2. ' =' → logprob: -1.6101350784301758
    3. '   ' → logprob: -1.8601350784301758
    4. '=' → logprob: -2.235135078430176
    5. 'def' → logprob: -2.610135078430176
    6. ')' → logprob: -2.860135078430176
    7. ' and' → logprob: -3.360135078430176
    8. ' ' → logprob: -3.610135078430176
    9. '>' → logprob: -3.735135078430176
    10. ' >' → logprob: -3.860135078430176

Token 254: ' that' (ID: 484)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.364898681640625
    2. ' length' → logprob: -1.864898681640625
    3. 'length' → logprob: -2.364898681640625
    4. 'any' → logprob: -3.364898681640625
    5. 'len' → logprob: -5.239898681640625
    6. ' False' → logprob: -5.489898681640625
    7. ' seq' → logprob: -5.739898681640625
    8. 'False' → logprob: -5.989898681640625
    9. 'seq' → logprob: -5.989898681640625
    10. ' True' → logprob: -6.114898681640625

Token 255: ' the' (ID: 290)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.6653974056243896
    2. 'seq' → logprob: -1.9153974056243896
    3. ' seq' → logprob: -2.1653974056243896
    4. 'length' → logprob: -2.5403974056243896
    5. ' length' → logprob: -2.6653974056243896
    6. 'any' → logprob: -3.2903974056243896
    7. 'len' → logprob: -3.4153974056243896
    8. ' len' → logprob: -5.415397644042969
    9. ' sequence' → logprob: -8.290397644042969
    10. ' ' → logprob: -9.165397644042969

Token 256: ' repetition' (ID: 100556)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -1.0008007287979126
    2. 'sequence' → logprob: -1.2508007287979126
    3. ' sequence' → logprob: -1.5008007287979126
    4. ' seq' → logprob: -3.500800609588623
    5. 'length' → logprob: -3.625800609588623
    6. 'substring' → logprob: -4.125800609588623
    7. ' length' → logprob: -4.500800609588623
    8. 'def' → logprob: -4.625800609588623
    9. ' substring' → logprob: -5.000800609588623
    10. 'len' → logprob: -5.875800609588623

Token 257: ' is' (ID: 382)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9334385395050049
    2. ' pattern' → logprob: -1.8084385395050049
    3. 'pattern' → logprob: -2.308438539505005
    4. ' ' → logprob: -2.683438539505005
    5. 'def' → logprob: -3.183438539505005
    6. ' is' → logprob: -3.183438539505005
    7. '   ' → logprob: -3.308438539505005
    8. 'length' → logprob: -3.558438539505005
    9. ' occurs' → logprob: -3.558438539505005
    10. ' length' → logprob: -4.308438301086426

Token 258: ' shorter' (ID: 37168)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5593565106391907
    2. 'True' → logprob: -1.934356451034546
    3. ' detected' → logprob: -2.059356451034546
    4. ' found' → logprob: -2.309356451034546
    5. ' not' → logprob: -4.059356689453125
    6. ' length' → logprob: -5.059356689453125
    7. ' present' → logprob: -5.434356689453125
    8. ' ' → logprob: -5.684356689453125
    9. ' seq' → logprob: -5.809356689453125
    10. 'length' → logprob: -5.934356689453125

Token 259: ' than' (ID: 1572)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6838513612747192
    2. '   ' → logprob: -1.1838513612747192
    3. ' and' → logprob: -2.0588512420654297
    4. '):' → logprob: -4.18385124206543
    5. ' or' → logprob: -4.93385124206543
    6. ')' → logprob: -4.93385124206543
    7. '<|end|>' → logprob: -5.18385124206543
    8. 'def' → logprob: -5.18385124206543
    9. ',' → logprob: -5.55885124206543
    10. ' ' → logprob: -5.68385124206543

Token 260: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.31326448917388916
    2. ' length' → logprob: -1.3132644891738892
    3. 'len' → logprob: -12.938264846801758
    4. ' len' → logprob: -15.688264846801758
    5. '(length' → logprob: -16.313264846801758
    6. 'sequence' → logprob: -17.313264846801758
    7. ' sequence' → logprob: -17.313264846801758
    8. ' the' → logprob: -18.438264846801758
    9. 'the' → logprob: -18.438264846801758
    10. '[length' → logprob: -18.438264846801758

Token 261: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1882116198539734
    2. '   ' → logprob: -1.9382116794586182
    3. ':
' → logprob: -4.563211441040039
    4. ' ' → logprob: -6.063211441040039
    5. 'def' → logprob: -6.063211441040039
    6. ' :' → logprob: -6.313211441040039
    7. ' if' → logprob: -6.438211441040039
    8. '.' → logprob: -6.438211441040039
    9. ',' → logprob: -6.688211441040039
    10. ' for' → logprob: -6.813211441040039

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30357661843299866
    2. ':' → logprob: -1.5535765886306763
    3. '<|end|>' → logprob: -3.928576707839966
    4. 'def' → logprob: -4.803576469421387
    5. ' if' → logprob: -5.178576469421387
    6. ' ' → logprob: -5.803576469421387
    7. ' and' → logprob: -6.178576469421387
    8. '.' → logprob: -6.428576469421387
    9. ' or' → logprob: -6.428576469421387
    10. ':
' → logprob: -6.553576469421387

Token 263: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04560818523168564
    2. ':' → logprob: -4.045608043670654
    3. ' 
' → logprob: -4.920608043670654
    4. ' for' → logprob: -5.170608043670654
    5. '
' → logprob: -5.920608043670654
    6. ' :' → logprob: -6.045608043670654
    7. 'def' → logprob: -6.045608043670654
    8. ' ' → logprob: -6.670608043670654
    9. 'for' → logprob: -7.170608043670654
    10. '    ' → logprob: -7.295608043670654

Token 264: ' So' (ID: 2632)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30162689089775085
    2. '   ' → logprob: -1.9266269207000732
    3. 'for' → logprob: -2.1766269207000732
    4. 'def' → logprob: -7.426626682281494
    5. ' if' → logprob: -8.801627159118652
    6. 'n' → logprob: -8.926627159118652
    7. 'd' → logprob: -9.426627159118652
    8. ' ' → logprob: -9.426627159118652
    9. ' return' → logprob: -9.676627159118652
    10. 'if' → logprob: -10.301627159118652

Token 265: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03941904380917549
    2. 'for' → logprob: -3.664418935775757
    3. ' length' → logprob: -4.914419174194336
    4. ' any' → logprob: -5.664419174194336
    5. ' d' → logprob: -7.164419174194336
    6. '   ' → logprob: -7.539419174194336
    7. 'length' → logprob: -7.914419174194336
    8. ' return' → logprob: -8.414419174194336
    9. ' i' → logprob: -8.789419174194336
    10. 'd' → logprob: -9.789419174194336

Token 266: ' exclude' (ID: 39566)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0377577543258667
    2. 'return' → logprob: -1.0377577543258667
    3. '   ' → logprob: -1.2877577543258667
    4. ' check' → logprob: -4.912757873535156
    5. ' can' → logprob: -5.787757873535156
    6. 'def' → logprob: -6.037757873535156
    7. 'check' → logprob: -6.787757873535156
    8. ' for' → logprob: -7.662757873535156
    9. 'can' → logprob: -7.662757873535156
    10. 'for' → logprob: -8.912757873535156

Token 267: ' sequences' (ID: 45665)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0480815172195435
    2. 'length' → logprob: -1.5480815172195435
    3. ' length' → logprob: -1.9230815172195435
    4. ' d' → logprob: -1.9230815172195435
    5. ' any' → logprob: -2.423081398010254
    6. '   ' → logprob: -3.923081398010254
    7. ' all' → logprob: -4.798081398010254
    8. '1' → logprob: -4.798081398010254
    9. ' ' → logprob: -5.423081398010254
    10. ' lengths' → logprob: -5.923081398010254

Token 268: ' that' (ID: 484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38314470648765564
    2. ':' → logprob: -2.3831446170806885
    3. ' >' → logprob: -3.0081446170806885
    4. '   ' → logprob: -3.5081446170806885
    5. ' not' → logprob: -3.6331446170806885
    6. '<|end|>' → logprob: -4.133144855499268
    7. ' for' → logprob: -4.508144855499268
    8. ' that' → logprob: -4.758144855499268
    9. ' ==' → logprob: -4.758144855499268
    10. ' <' → logprob: -4.883144855499268

Token 269: ' are' (ID: 553)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.3800384998321533
    2. ' length' → logprob: -1.6300384998321533
    3. 'have' → logprob: -2.7550384998321533
    4. ' are' → logprob: -3.6300384998321533
    5. 'length' → logprob: -3.8800384998321533
    6. ' can' → logprob: -5.505038261413574
    7. 'len' → logprob: -6.255038261413574
    8. ' len' → logprob: -6.755038261413574
    9. 'are' → logprob: -7.630038261413574
    10. ' d' → logprob: -8.380038261413574

Token 270: ' formed' (ID: 20680)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.21491305530071259
    2. 'not' → logprob: -2.8399131298065186
    3. ' length' → logprob: -3.4649131298065186
    4. ' repeated' → logprob: -3.7149131298065186
    5. ' self' → logprob: -3.8399131298065186
    6. ' composed' → logprob: -4.3399128913879395
    7. 'length' → logprob: -4.9649128913879395
    8. 'self' → logprob: -5.2149128913879395
    9. 'len' → logprob: -5.4649128913879395
    10. ' has' → logprob: -5.8399128913879395

Token 271: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.4119519293308258
    2. 'by' → logprob: -1.2869518995285034
    3. 'from' → logprob: -2.911952018737793
    4. ' from' → logprob: -5.411952018737793
    5. '   ' → logprob: -6.286952018737793
    6. ' of' → logprob: -7.286952018737793
    7. 'of' → logprob: -9.661952018737793
    8. ' ' → logprob: -11.036952018737793
    9. '*' → logprob: -11.286952018737793
    10. ' as' → logprob: -11.536952018737793

Token 272: ' repeating' (ID: 74481)
  Prédit: ' repeating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeating' → logprob: -0.10978127270936966
    2. 're' → logprob: -2.359781265258789
    3. ' concaten' → logprob: -5.609781265258789
    4. ' a' → logprob: -6.859781265258789
    5. ' repetition' → logprob: -7.109781265258789
    6. ' seq' → logprob: -7.484781265258789
    7. 'seq' → logprob: -7.484781265258789
    8. ' repeated' → logprob: -7.609781265258789
    9. ' repeats' → logprob: -7.609781265258789
    10. '(seq' → logprob: -8.234781265258789

Token 273: ' smaller' (ID: 13679)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.3359091579914093
    2. 'seq' → logprob: -2.585909128189087
    3. ' a' → logprob: -2.960909128189087
    4. ' any' → logprob: -3.460909128189087
    5. ' ' → logprob: -3.710909128189087
    6. '_' → logprob: -3.960909128189087
    7. ' '' → logprob: -3.960909128189087
    8. '(seq' → logprob: -4.710909366607666
    9. ' _' → logprob: -4.835909366607666
    10. ' (' → logprob: -5.085909366607666

Token 274: ' sequences' (ID: 45665)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.7897478342056274
    2. ' substr' → logprob: -1.7897478342056274
    3. 'substr' → logprob: -2.039747714996338
    4. 'length' → logprob: -2.539747714996338
    5. 'd' → logprob: -2.789747714996338
    6. ' sequences' → logprob: -3.789747714996338
    7. 'sub' → logprob: -4.289747714996338
    8. ' substring' → logprob: -4.539747714996338
    9. 'strings' → logprob: -4.789747714996338
    10. 'patterns' → logprob: -4.914747714996338

Token 275: ' multiple' (ID: 7598)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019257230684161186
    2. ' for' → logprob: -4.644257068634033
    3. 'for' → logprob: -5.644257068634033
    4. ':' → logprob: -5.894257068634033
    5. 'def' → logprob: -6.269257068634033
    6. '
' → logprob: -7.394257068634033
    7. 'import' → logprob: -9.019257545471191
    8. ',' → logprob: -9.269257545471191
    9. '    
' → logprob: -9.394257545471191
    10. ':
' → logprob: -9.644257545471191

Token 276: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.1077360063791275
    2. 'times' → logprob: -2.357736110687256
    3. ' of' → logprob: -5.107736110687256
    4. 'of' → logprob: -6.982736110687256
    5. '<|end|>' → logprob: -8.982735633850098
    6. 'tokens' → logprob: -9.232735633850098
    7. '_times' → logprob: -9.357735633850098
    8. 's' → logprob: -10.107735633850098
    9. ')' → logprob: -10.607735633850098
    10. '   ' → logprob: -10.857735633850098

Token 277: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026630595326423645
    2. ' for' → logprob: -4.276630401611328
    3. 'for' → logprob: -5.651630401611328
    4. 'def' → logprob: -5.776630401611328
    5. ':' → logprob: -5.901630401611328
    6. '
' → logprob: -6.276630401611328
    7. 'import' → logprob: -8.526630401611328
    8. 'n' → logprob: -8.776630401611328
    9. 'd' → logprob: -8.776630401611328
    10. ',' → logprob: -9.151630401611328

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44018810987472534
    2. ':' → logprob: -1.0651881694793701
    3. ':
' → logprob: -6.065187931060791
    4. 'def' → logprob: -6.440187931060791
    5. '<|end|>' → logprob: -6.565187931060791
    6. ' for' → logprob: -6.690187931060791
    7. ',' → logprob: -6.815187931060791
    8. '):' → logprob: -7.190187931060791
    9. '.' → logprob: -7.565187931060791
    10. ' :' → logprob: -8.31518840789795

Token 279: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012802749872207642
    2. ' for' → logprob: -5.137802600860596
    3. ':' → logprob: -5.512802600860596
    4. '
' → logprob: -7.387802600860596
    5. 'for' → logprob: -7.387802600860596
    6. 'def' → logprob: -7.637802600860596
    7. '    
' → logprob: -8.262803077697754
    8. ' 
' → logprob: -8.762803077697754
    9. ',' → logprob: -9.387803077697754
    10. '    ' → logprob: -9.512803077697754

Token 280: ' Actually' (ID: 50557)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5522722601890564
    2. '   ' → logprob: -1.5522723197937012
    3. 'for' → logprob: -1.5522723197937012
    4. ' if' → logprob: -7.927272319793701
    5. 'if' → logprob: -8.802271842956543
    6. 'def' → logprob: -9.052271842956543
    7. 'n' → logprob: -9.802271842956543
    8. 'd' → logprob: -9.927271842956543
    9. 'import' → logprob: -10.927271842956543
    10. '
' → logprob: -10.927271842956543

Token 281: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0956016406416893
    2. 'for' → logprob: -3.0956015586853027
    3. '   ' → logprob: -3.3456015586853027
    4. ' n' → logprob: -6.345601558685303
    5. ' return' → logprob: -6.345601558685303
    6. ' ' → logprob: -6.720601558685303
    7. '
' → logprob: -6.970601558685303
    8. ' from' → logprob: -7.345601558685303
    9. 'period' → logprob: -7.345601558685303
    10. 'n' → logprob: -7.595601558685303

Token 282: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23165258765220642
    2. ' return' → logprob: -2.7316524982452393
    3. 'for' → logprob: -2.9816524982452393
    4. '   ' → logprob: -3.6066524982452393
    5. ' n' → logprob: -3.9816524982452393
    6. ' l' → logprob: -4.981652736663818
    7. 'def' → logprob: -4.981652736663818
    8. 'n' → logprob: -4.981652736663818
    9. 'return' → logprob: -5.231652736663818
    10. ' def' → logprob: -5.481652736663818

Token 283: ' must' (ID: 2804)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.951774537563324
    2. 'return' → logprob: -1.7017745971679688
    3. '   ' → logprob: -2.3267745971679688
    4. 'can' → logprob: -2.3267745971679688
    5. ' return' → logprob: -2.4517745971679688
    6. 'def' → logprob: -2.9517745971679688
    7. ' need' → logprob: -3.8267745971679688
    8. ' check' → logprob: -3.9517745971679688
    9. ' cannot' → logprob: -4.826774597167969
    10. ' should' → logprob: -4.826774597167969

Token 284: ' confirm' (ID: 7620)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.3641800284385681
    2. ' check' → logprob: -1.739180088043213
    3. 'return' → logprob: -2.114180088043213
    4. 'detect' → logprob: -5.614180088043213
    5. ' return' → logprob: -5.739180088043213
    6. '   ' → logprob: -6.989180088043213
    7. 'reject' → logprob: -8.364179611206055
    8. 'def' → logprob: -8.739179611206055
    9. 'find' → logprob: -8.864179611206055
    10. 'continue' → logprob: -9.114179611206055

Token 285: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.140950545668602
    2. ' if' → logprob: -3.1409504413604736
    3. ' return' → logprob: -4.015950679779053
    4. ':' → logprob: -4.515950679779053
    5. ' 
' → logprob: -4.640950679779053
    6. 'def' → logprob: -4.640950679779053
    7. ' ' → logprob: -5.140950679779053
    8. ' True' → logprob: -5.265950679779053
    9. '    ' → logprob: -5.390950679779053
    10. ' for' → logprob: -5.515950679779053

Token 286: ' sequence' (ID: 16281)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3281995952129364
    2. ':' → logprob: -2.203199625015259
    3. '<|end|>' → logprob: -2.703199625015259
    4. ' ' → logprob: -2.953199625015259
    5. ' 
' → logprob: -4.57819938659668
    6. ' pass' → logprob: -4.82819938659668
    7. '
' → logprob: -5.07819938659668
    8. 'def' → logprob: -5.82819938659668
    9. ' return' → logprob: -5.95319938659668
    10. '<|end|>' → logprob: -6.07819938659668

Token 287: ' doesn't' (ID: 8740)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.5244439840316772
    2. '[:]' → logprob: -2.024444103240967
    3. '.find' → logprob: -2.524444103240967
    4. '.startswith' → logprob: -2.649444103240967
    5. ' is' → logprob: -2.774444103240967
    6. '.endswith' → logprob: -4.274444103240967
    7. '[:-' → logprob: -4.524444103240967
    8. '.count' → logprob: -5.024444103240967
    9. '[' → logprob: -5.024444103240967
    10. ')' → logprob: -6.024444103240967

Token 288: ' repeat' (ID: 22962)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.32790860533714294
    2. ' have' → logprob: -1.5779086351394653
    3. 'equal' → logprob: -3.827908515930176
    4. 'contain' → logprob: -4.077908515930176
    5. ' consist' → logprob: -4.327908515930176
    6. ' equal' → logprob: -4.952908515930176
    7. ' contain' → logprob: -5.327908515930176
    8. 'repeat' → logprob: -5.702908515930176
    9. 'cons' → logprob: -6.327908515930176
    10. 'appear' → logprob: -6.827908515930176

Token 289: ' itself' (ID: 8807)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9772543907165527
    2. 'def' → logprob: -1.1022543907165527
    3. ':' → logprob: -1.9772543907165527
    4. ' ' → logprob: -3.4772543907165527
    5. ' if' → logprob: -3.7272543907165527
    6. '_' → logprob: -4.227254390716553
    7. ' =' → logprob: -4.727254390716553
    8. ' for' → logprob: -4.852254390716553
    9. ':
' → logprob: -4.852254390716553
    10. ',' → logprob: -4.977254390716553

Token 290: ' within' (ID: 3518)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6984549760818481
    2. ':' → logprob: -0.8234549760818481
    3. ':
' → logprob: -3.5734548568725586
    4. 'def' → logprob: -3.5734548568725586
    5. '_' → logprob: -7.198454856872559
    6. ',' → logprob: -7.198454856872559
    7. '
' → logprob: -7.323454856872559
    8. '):' → logprob: -7.573454856872559
    9. '.' → logprob: -7.698454856872559
    10. ':def' → logprob: -7.698454856872559

Token 291: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4245084226131439
    2. ' length' → logprob: -1.5495084524154663
    3. 'seq' → logprob: -2.2995083332061768
    4. ' seq' → logprob: -3.9245083332061768
    5. 'sequence' → logprob: -5.299508571624756
    6. ' sequence' → logprob: -5.799508571624756
    7. 'range' → logprob: -5.799508571624756
    8. ' the' → logprob: -7.049508571624756
    9. ' range' → logprob: -7.424508571624756
    10. 'the' → logprob: -7.549508571624756

Token 292: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15359477698802948
    2. '   ' → logprob: -2.153594732284546
    3. ':
' → logprob: -4.028594970703125
    4. 'def' → logprob: -6.403594970703125
    5. '):' → logprob: -6.528594970703125
    6. '
' → logprob: -6.653594970703125
    7. ':return' → logprob: -7.028594970703125
    8. ' :' → logprob: -7.778594970703125
    9. '.' → logprob: -8.028594970703125
    10. ',' → logprob: -8.028594970703125

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07017627358436584
    2. ' for' → logprob: -2.820176362991333
    3. ' length' → logprob: -5.570176124572754
    4. 'for' → logprob: -6.695176124572754
    5. 'def' → logprob: -7.195176124572754
    6. ' n' → logprob: -7.445176124572754
    7. 'n' → logprob: -8.070176124572754
    8. ' return' → logprob: -8.320176124572754
    9. ')' → logprob: -8.445176124572754
    10. 'length' → logprob: -8.570176124572754

Token 294: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6611695289611816
    2. ' for' → logprob: -0.7861695289611816
    3. ' length' → logprob: -4.411169528961182
    4. 'for' → logprob: -4.661169528961182
    5. ' n' → logprob: -6.161169528961182
    6. ')' → logprob: -7.036169528961182
    7. ' return' → logprob: -7.661169528961182
    8. '
' → logprob: -7.786169528961182
    9. 'n' → logprob: -7.911169528961182
    10. '    ' → logprob: -7.911169528961182

Token 295: ' so' (ID: 813)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28551727533340454
    2. 'for' → logprob: -1.6605172157287598
    3. '   ' → logprob: -2.9105172157287598
    4. ' n' → logprob: -6.03551721572876
    5. 'n' → logprob: -6.91051721572876
    6. 'def' → logprob: -8.285517692565918
    7. ' length' → logprob: -9.410517692565918
    8. ' ' → logprob: -10.035517692565918
    9. ' def' → logprob: -10.160517692565918
    10. 'length' → logprob: -11.035517692565918

Token 296: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03406460955739021
    2. 'for' → logprob: -3.534064531326294
    3. '   ' → logprob: -5.784064769744873
    4. ' length' → logprob: -6.909064769744873
    5. 'def' → logprob: -10.034064292907715
    6. ' any' → logprob: -10.284064292907715
    7. 'length' → logprob: -10.409064292907715
    8. ' l' → logprob: -10.534064292907715
    9. ' def' → logprob: -10.534064292907715
    10. ' n' → logprob: -11.034064292907715

Token 297: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20880435407161713
    2. ' any' → logprob: -2.0838043689727783
    3. 'for' → logprob: -2.8338043689727783
    4. 'any' → logprob: -5.958804130554199
    5. ' length' → logprob: -6.833804130554199
    6. ' if' → logprob: -7.583804130554199
    7. ' i' → logprob: -8.0838041305542
    8. ' all' → logprob: -8.4588041305542
    9. 'length' → logprob: -8.4588041305542
    10. ' d' → logprob: -9.4588041305542

Token 298: ' periodic' (ID: 60546)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.19188964366912842
    2. ' d' → logprob: -1.9418896436691284
    3. 'i' → logprob: -3.941889762878418
    4. ' i' → logprob: -4.691889762878418
    5. 'l' → logprob: -6.816889762878418
    6. ' l' → logprob: -7.191889762878418
    7. ' length' → logprob: -8.441889762878418
    8. 'length' → logprob: -8.441889762878418
    9. ' any' → logprob: -8.691889762878418
    10. 'any' → logprob: -9.066889762878418

Token 299: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.02120642177760601
    2. '_' → logprob: -4.521206378936768
    3. 'for' → logprob: -6.646206378936768
    4. 'i' → logprob: -6.771206378936768
    5. ' ' → logprob: -6.771206378936768
    6. 'def' → logprob: -7.021206378936768
    7. 'import' → logprob: -7.396206378936768
    8. 's' → logprob: -7.396206378936768
    9. 'ities' → logprob: -7.521206378936768
    10. '```' → logprob: -7.521206378936768

Token 300: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6141178607940674
    2. ':' → logprob: -0.8641178607940674
    3. ':
' → logprob: -4.364117622375488
    4. ' for' → logprob: -5.114117622375488
    5. 'def' → logprob: -5.364117622375488
    6. 'for' → logprob: -5.614117622375488
    7. '
' → logprob: -6.239117622375488
    8. '.' → logprob: -6.364117622375488
    9. ' ' → logprob: -6.364117622375488
    10. ',' → logprob: -6.989117622375488

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15372809767723083
    2. ' for' → logprob: -2.0287280082702637
    3. 'for' → logprob: -4.528728008270264
    4. 'def' → logprob: -9.153728485107422
    5. 'n' → logprob: -10.153728485107422
    6. 'import' → logprob: -11.028728485107422
    7. ' def' → logprob: -11.403728485107422
    8. ' n' → logprob: -11.653728485107422
    9. '
' → logprob: -12.778728485107422
    10. ' length' → logprob: -12.903728485107422

Token 302: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6042528748512268
    2. 'for' (adapté à ' for') → logprob: -1.104252815246582
    3. '   ' → logprob: -2.104252815246582
    4. 'def' → logprob: -9.354252815246582
    5. 'n' → logprob: -11.729252815246582
    6. ' ' → logprob: -11.729252815246582
    7. ' n' → logprob: -12.479252815246582
    8. 'import' → logprob: -12.729252815246582
    9. ' def' → logprob: -12.854252815246582
    10. 'from' → logprob: -12.979252815246582

Token 303: ' sub' (ID: 1543)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10112462192773819
    2. ' d' → logprob: -2.3511245250701904
    3. 'i' → logprob: -7.4761247634887695
    4. ' i' → logprob: -7.9761247634887695
    5. 'l' → logprob: -12.72612476348877
    6. ' ' → logprob: -13.35112476348877
    7. 'length' → logprob: -14.35112476348877
    8. '	d' → logprob: -14.60112476348877
    9. ' l' → logprob: -14.85112476348877
    10. '   ' → logprob: -14.85112476348877

Token 304: 'len' (ID: 3303)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7754594683647156
    2. '_len' → logprob: -0.9004594683647156
    3. '_length' → logprob: -2.6504595279693604
    4. 'len' → logprob: -3.5254595279693604
    5. ' in' → logprob: -3.6504595279693604
    6. '_l' → logprob: -5.525459289550781
    7. 'string' → logprob: -6.900459289550781
    8. ' length' → logprob: -7.150459289550781
    9. 'd' → logprob: -7.525459289550781
    10. 'str' → logprob: -7.650459289550781

Token 305: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023289615288376808
    2. 'in' → logprob: -3.773289680480957
    3. ' ' → logprob: -10.523289680480957
    4. '1' → logprob: -13.023289680480957
    5. '   ' → logprob: -13.023289680480957
    6. 'range' → logprob: -13.023289680480957
    7. 'n' → logprob: -13.148289680480957
    8. 's' → logprob: -13.398289680480957
    9. '	in' → logprob: -13.398289680480957
    10. 'd' → logprob: -13.398289680480957

Token 306: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150178715586662
    2. ' range' → logprob: -4.018150329589844
    3. '(range' → logprob: -15.643150329589844
    4. ' ' → logprob: -16.643150329589844
    5. '	range' → logprob: -16.768150329589844
    6. '   ' → logprob: -16.893150329589844
    7. '[' → logprob: -19.393150329589844
    8. '  ' → logprob: -19.643150329589844
    9. '
' → logprob: -21.643150329589844
    10. '    ' → logprob: -21.768150329589844

Token 307: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013572083844337612
    2. ' ' → logprob: -9.37513542175293
    3. '   ' → logprob: -10.00013542175293
    4. '(' → logprob: -12.25013542175293
    5. '
' → logprob: -14.75013542175293
    6. '  ' → logprob: -16.75013542175293
    7. '    ' → logprob: -16.87513542175293
    8. '```' → logprob: -17.37513542175293
    9. ',' → logprob: -17.50013542175293
    10. '[' → logprob: -17.87513542175293

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.375012397766113
    4. '
' → logprob: -16.125011444091797
    5. 'length' → logprob: -16.875011444091797
    6. '１' → logprob: -18.000011444091797
    7. '2' → logprob: -18.125011444091797
    8. '(' → logprob: -18.375011444091797
    9. '    ' → logprob: -18.875011444091797
    10. '

' → logprob: -19.125011444091797

Token 309: ',length' (ID: 133718)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031661197543144226
    2. ',length' → logprob: -3.53166127204895
    3. ' ,' → logprob: -6.281661033630371
    4. ',len' → logprob: -10.906661033630371
    5. 'length' → logprob: -11.031661033630371
    6. '[length' → logprob: -13.656661033630371
    7. '   ' → logprob: -14.281661033630371
    8. ' length' → logprob: -14.281661033630371
    9. ',int' → logprob: -14.406661033630371
    10. '(length' → logprob: -14.781661033630371

Token 310: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.22244924306869507
    2. '):' → logprob: -2.34744930267334
    3. ' //' → logprob: -2.34744930267334
    4. '):
' → logprob: -5.22244930267334
    5. ' ):' → logprob: -6.59744930267334
    6. '   ' → logprob: -6.97244930267334
    7. ' ' → logprob: -8.34744930267334
    8. ',' → logprob: -8.47244930267334
    9. ' ):
' → logprob: -10.72244930267334
    10. '  ' → logprob: -11.22244930267334

Token 311: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -18.250001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '۲' → logprob: -20.500001907348633
    6. '```' → logprob: -20.750001907348633
    7. '1' → logprob: -21.000001907348633
    8. '२' → logprob: -21.625001907348633
    9. '２' → logprob: -21.625001907348633
    10. '22' → logprob: -21.750001907348633

Token 312: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2897597551345825
    2. '):' → logprob: -2.164759635925293
    3. ' +' → logprob: -2.664759635925293
    4. '):
' → logprob: -2.789759635925293
    5. ',' → logprob: -5.914759635925293
    6. '   ' → logprob: -6.164759635925293
    7. ' ):' → logprob: -7.539759635925293
    8. ' ):
' → logprob: -9.039759635925293
    9. ' ,' → logprob: -9.539759635925293
    10. '):
' → logprob: -10.414759635925293

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005991425714455545
    2. '2' → logprob: -7.500598907470703
    3. ' ' → logprob: -10.125598907470703
    4. 's' → logprob: -12.875598907470703
    5. '):
' → logprob: -13.750598907470703
    6. '   ' → logprob: -14.250598907470703
    7. ')' → logprob: -14.375598907470703
    8. '+' → logprob: -15.125598907470703
    9. '0' → logprob: -15.250598907470703
    10. '
' → logprob: -15.750598907470703

Token 314: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14350146055221558
    2. '):
' → logprob: -2.0185015201568604
    3. ':' → logprob: -7.268501281738281
    4. '):
' → logprob: -10.143501281738281
    5. '   ' → logprob: -10.393501281738281
    6. ' ):' → logprob: -10.643501281738281
    7. ',' → logprob: -11.143501281738281
    8. ':
' → logprob: -11.893501281738281
    9. ' ):
' → logprob: -11.893501281738281
    10. '):

' → logprob: -12.893501281738281

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029899475630372763
    2. ' if' → logprob: -6.377989768981934
    3. '<|end|>' → logprob: -7.252989768981934
    4. '   ' → logprob: -7.877989768981934
    5. '<|end|>' → logprob: -9.752989768981934
    6. 'if' → logprob: -10.377989768981934
    7. ',' → logprob: -10.502989768981934
    8. ' ' → logprob: -10.502989768981934
    9. ':' → logprob: -11.252989768981934
    10. '	' → logprob: -11.752989768981934

Token 316: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5484967231750488
    2. '       ' → logprob: -1.0484967231750488
    3. ' if' → logprob: -2.673496723175049
    4. '   ' → logprob: -5.923496723175049
    5. '	if' → logprob: -11.29849624633789
    6. '<|end|>' → logprob: -11.79849624633789
    7. '           ' → logprob: -12.29849624633789
    8. '    ' → logprob: -13.54849624633789
    9. ' ' → logprob: -13.54849624633789
    10. '	   ' → logprob: -14.67349624633789

Token 317: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.1624230146408081
    2. ' length' → logprob: -1.912423014640808
    3. 'len' → logprob: -6.287423133850098
    4. 'seq' → logprob: -8.912423133850098
    5. ' ' → logprob: -9.537423133850098
    6. '   ' → logprob: -10.162423133850098
    7. '(length' → logprob: -10.412423133850098
    8. ' len' → logprob: -10.912423133850098
    9. ' seq' → logprob: -11.037423133850098
    10. 'sequence' → logprob: -11.287423133850098

Token 318: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38702768087387085
    2. '%' → logprob: -1.1370277404785156
    3. ' ' → logprob: -9.137027740478516
    4. '%s' → logprob: -10.137027740478516
    5. '%i' → logprob: -12.012027740478516
    6. '%d' → logprob: -13.887027740478516
    7. '%c' → logprob: -14.012027740478516
    8. '%e' → logprob: -14.637027740478516
    9. '%b' → logprob: -15.137027740478516
    10. ' ' → logprob: -15.512027740478516

Token 319: ' sub' (ID: 1543)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0032057580538094044
    2. ' sub' → logprob: -5.8782057762146
    3. 'sub' → logprob: -7.8782057762146
    4. ' ' → logprob: -11.378205299377441
    5. '(s' → logprob: -12.503205299377441
    6. '   ' → logprob: -13.378205299377441
    7. ' Subl' → logprob: -13.503205299377441
    8. '(sub' → logprob: -14.628205299377441
    9. ' s' → logprob: -14.878205299377441
    10. '```' → logprob: -15.065705299377441

Token 320: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.000397422380046919
    2. 's' → logprob: -7.875397205352783
    3. 'l' → logprob: -11.500397682189941
    4. '(len' → logprob: -12.500397682189941
    5. ' len' → logprob: -13.375397682189941
    6. 'en' → logprob: -14.250397682189941
    7. '[len' → logprob: -14.750397682189941
    8. 'n' → logprob: -15.500397682189941
    9. '_len' → logprob: -16.125396728515625
    10. 'nen' → logprob: -16.750396728515625

Token 321: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.061983708292245865
    2. ' ==' → logprob: -2.811983823776245
    3. '=' → logprob: -11.436984062194824
    4. '===' → logprob: -12.811984062194824
    5. ')==' → logprob: -13.186984062194824
    6. ']==' → logprob: -15.311984062194824
    7. '()==' → logprob: -15.436984062194824
    8. '==
' → logprob: -16.561983108520508
    9. ' =' → logprob: -16.686983108520508
    10. ')' → logprob: -16.936983108520508

Token 322: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '۰' → logprob: -20.000051498413086
    4. '   ' → logprob: -20.250051498413086
    5. '
' → logprob: -20.875051498413086
    6. '```' → logprob: -21.000051498413086
    7. '  ' → logprob: -21.125051498413086
    8. '=' → logprob: -21.562551498413086
    9. '  ' → logprob: -21.562551498413086
    10. ' ' → logprob: -21.562551498413086

Token 323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -19.750001907348633
    4. '```' → logprob: -20.750001907348633
    5. '
' → logprob: -21.000001907348633
    6. '=' → logprob: -21.437501907348633
    7. '  ' → logprob: -21.500001907348633
    8. '   ' → logprob: -21.625001907348633
    9. '٠' → logprob: -21.937501907348633
    10. 's' → logprob: -22.000001907348633

Token 324: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.35635384917259216
    2. ':' → logprob: -1.3563538789749146
    3. 'and' → logprob: -3.856353759765625
    4. '           ' → logprob: -4.731353759765625
    5. ':
' → logprob: -5.231353759765625
    6. '       ' → logprob: -5.481353759765625
    7. ' or' → logprob: -6.481353759765625
    8. '<|end|>' → logprob: -7.981353759765625
    9. ':return' → logprob: -8.481353759765625
    10. ')' → logprob: -8.606353759765625

Token 325: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2297821342945099
    2. '           ' → logprob: -1.6047821044921875
    3. '<|end|>' → logprob: -6.3547821044921875
    4. ' continue' → logprob: -6.9797821044921875
    5. ':' → logprob: -7.9797821044921875
    6. '               ' → logprob: -8.354782104492188
    7. '   ' → logprob: -8.854782104492188
    8. ' and' → logprob: -8.979782104492188
    9. ' or' → logprob: -8.979782104492188
    10. ' if' → logprob: -9.229782104492188

Token 326: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.38995361328125
    2. 'continue' (adapté à ' continue') → logprob: -1.13995361328125
    3. '           ' → logprob: -5.88995361328125
    4. '               ' → logprob: -8.38995361328125
    5. '       ' → logprob: -9.76495361328125
    6. '	continue' → logprob: -11.26495361328125
    7. '   ' → logprob: -12.01495361328125
    8. ' continues' → logprob: -12.88995361328125
    9. 'contin' → logprob: -13.13995361328125
    10. '_continue' → logprob: -14.51495361328125

Token 327: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013601169921457767
    2. '<|end|>' → logprob: -7.126359939575195
    3. ' and' → logprob: -8.876359939575195
    4. ':' → logprob: -9.376359939575195
    5. '
' → logprob: -9.751359939575195
    6. ',' → logprob: -9.876359939575195
    7. '   ' → logprob: -10.001359939575195
    8. ' if' → logprob: -10.251359939575195
    9. '<|end|>' → logprob: -10.376359939575195
    10. '        
' → logprob: -10.501359939575195

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023095356300473213
    2. '   ' → logprob: -9.12523078918457
    3. ' if' → logprob: -9.62523078918457
    4. '<|end|>' → logprob: -10.62523078918457
    5. '        
' → logprob: -11.75023078918457
    6. 'if' → logprob: -11.87523078918457
    7. ',' → logprob: -12.50023078918457
    8. '           ' → logprob: -12.75023078918457
    9. ' for' → logprob: -13.75023078918457
    10. '	' → logprob: -13.75023078918457

Token 329: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11575926095247269
    2. 'if' (adapté à ' if') → logprob: -2.3657593727111816
    3. ' if' → logprob: -4.615759372711182
    4. '   ' → logprob: -5.365759372711182
    5. 'token' → logprob: -7.240759372711182
    6. '        
' → logprob: -10.490758895874023
    7. '           ' → logprob: -10.615758895874023
    8. 'for' → logprob: -11.115758895874023
    9. '	if' → logprob: -11.490758895874023
    10. ' token' → logprob: -11.490758895874023

Token 330: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.16337838768959045
    2. ' seq' → logprob: -1.913378357887268
    3. ' all' → logprob: -6.1633782386779785
    4. 'all' → logprob: -6.9133782386779785
    5. '   ' → logprob: -10.788378715515137
    6. '(seq' → logprob: -11.163378715515137
    7. ' ' → logprob: -12.038378715515137
    8. ' sequence' → logprob: -13.163378715515137
    9. 'sequence' → logprob: -13.413378715515137
    10. '
' → logprob: -14.038378715515137

Token 331: ' ==' (ID: 951)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.28137558698654175
    2. ' ==' → logprob: -1.9063756465911865
    3. '==' → logprob: -2.6563756465911865
    4. '.startswith' → logprob: -3.6563756465911865
    5. '[' → logprob: -8.031375885009766
    6. '[:]' → logprob: -9.781375885009766
    7. ' [:' → logprob: -9.906375885009766
    8. '.count' → logprob: -10.031375885009766
    9. '.' → logprob: -10.656375885009766
    10. ' ' → logprob: -10.906375885009766

Token 332: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.020865222439169884
    2. ' seq' → logprob: -3.8958652019500732
    3. 's' → logprob: -8.895865440368652
    4. ' ' → logprob: -9.770865440368652
    5. '(seq' → logprob: -10.270865440368652
    6. '
' → logprob: -10.395865440368652
    7. '```' → logprob: -10.770865440368652
    8. 'sub' → logprob: -11.145865440368652
    9. '   ' → logprob: -11.520865440368652
    10. 'sequence' → logprob: -12.520865440368652

Token 333: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.010657497681677341
    2. '[' → logprob: -4.76065731048584
    3. 's' → logprob: -6.26065731048584
    4. '*' → logprob: -9.88565731048584
    5. '[s' → logprob: -11.13565731048584
    6. ' *' → logprob: -11.38565731048584
    7. '*s' → logprob: -11.51065731048584
    8. '[:]' → logprob: -12.26065731048584
    9. '.replace' → logprob: -12.38565731048584
    10. '[:-' → logprob: -12.38565731048584

Token 334: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3856492842023727e-06
    2. 'sub' → logprob: -14.250000953674316
    3. '
' → logprob: -15.625000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '(s' → logprob: -17.375001907348633
    6. 'len' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. '    
' → logprob: -17.875001907348633
    9. '        
' → logprob: -18.125001907348633
    10. '(' → logprob: -18.250001907348633

Token 335: 'ubl' (ID: 2949)
  Prédit: 'ubl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubl' → logprob: -0.021118544042110443
    2. 'ub' → logprob: -3.896118640899658
    3. 's' → logprob: -8.1461181640625
    4. 'ublin' → logprob: -8.6461181640625
    5. 'uble' → logprob: -9.8961181640625
    6. 'u' → logprob: -10.7711181640625
    7. 'ulen' → logprob: -11.0211181640625
    8. 'len' → logprob: -12.0211181640625
    9. 'ubs' → logprob: -12.6461181640625
    10. 'ublic' → logprob: -13.0211181640625

Token 336: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.003277768148109317
    2. 'len' → logprob: -5.753277778625488
    3. 'ength' → logprob: -10.753277778625488
    4. '_len' → logprob: -11.378277778625488
    5. 'eng' → logprob: -11.503277778625488
    6. ']' → logprob: -11.878277778625488
    7. '[len' → logprob: -12.003277778625488
    8. '```' → logprob: -12.128277778625488
    9. '   ' → logprob: -12.253277778625488
    10. '=len' → logprob: -12.253277778625488

Token 337: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004031383898109198
    2. ']*' → logprob: -5.629031181335449
    3. ']*(' → logprob: -7.754031181335449
    4. ' ]' → logprob: -13.62903118133545
    5. '].' → logprob: -15.12903118133545
    6. '][' → logprob: -16.004032135009766
    7. '```' → logprob: -16.004032135009766
    8. '*' → logprob: -16.004032135009766
    9. '   ' → logprob: -16.629032135009766
    10. ']\' → logprob: -16.754032135009766

Token 338: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -5.943783253314905e-05
    2. '(length' → logprob: -9.750059127807617
    3. ' length' → logprob: -13.750059127807617
    4. '(' → logprob: -19.000059127807617
    5. '[length' → logprob: -19.875059127807617
    6. ' (' → logprob: -21.875059127807617
    7. '   ' → logprob: -22.000059127807617
    8. ' ' → logprob: -22.625059127807617
    9. '	length' → logprob: -22.750059127807617
    10. 'leng' → logprob: -22.875059127807617

Token 339: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -6.623244553338736e-05
    2. ' //' → logprob: -9.625065803527832
    3. 's' → logprob: -16.75006675720215
    4. '#' → logprob: -17.00006675720215
    5. '/s' → logprob: -17.75006675720215
    6. ')//' → logprob: -18.62506675720215
    7. '```' → logprob: -19.12506675720215
    8. 'length' → logprob: -19.50006675720215
    9. '   ' → logprob: -20.00006675720215
    10. '
' → logprob: -20.37506675720215

Token 340: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.319370302458992e-06
    2. '(s' → logprob: -12.250005722045898
    3. '(' → logprob: -15.750005722045898
    4. '   ' → logprob: -16.1250057220459
    5. 'sub' → logprob: -16.2500057220459
    6. ' s' → logprob: -17.3750057220459
    7. '{s' → logprob: -17.3750057220459
    8. ' ' → logprob: -17.5000057220459
    9. '	s' → logprob: -17.8750057220459
    10. '
' → logprob: -18.0000057220459

Token 341: 'ubl' (ID: 2949)
  Prédit: 'ubl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubl' → logprob: -0.000253591249929741
    2. 'ub' → logprob: -8.500253677368164
    3. 'len' → logprob: -10.000253677368164
    4. 'ulen' → logprob: -13.250253677368164
    5. 'ublin' → logprob: -13.750253677368164
    6. '(len' → logprob: -14.000253677368164
    7. '[len' → logprob: -15.750253677368164
    8. ')' → logprob: -15.875253677368164
    9. '   ' → logprob: -16.125253677368164
    10. 'uble' → logprob: -16.250253677368164

Token 342: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0003265255654696375
    2. 'len' → logprob: -8.125326156616211
    3. 'sub' → logprob: -12.250326156616211
    4. 's' → logprob: -12.250326156616211
    5. '[len' → logprob: -12.625326156616211
    6. '   ' → logprob: -13.125326156616211
    7. ')' → logprob: -13.500326156616211
    8. 'elen' → logprob: -13.625326156616211
    9. 'den' → logprob: -14.125326156616211
    10. '(len' → logprob: -14.125326156616211

Token 343: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017631208756938577
    2. '):
' → logprob: -6.626763343811035
    3. ')' → logprob: -7.751763343811035
    4. '):

' → logprob: -12.751763343811035
    5. ':' → logprob: -13.376763343811035
    6. ' ):' → logprob: -13.751763343811035
    7. '):
' → logprob: -14.376763343811035
    8. '   ' → logprob: -15.501763343811035
    9. ''):' → logprob: -15.626763343811035
    10. '<|end|>' → logprob: -15.626763343811035

Token 344: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009060043841600418
    2. ':' → logprob: -4.884059906005859
    3. ':return' → logprob: -7.759059906005859
    4. '       ' → logprob: -8.00905990600586
    5. '               ' → logprob: -8.13405990600586
    6. ':
' → logprob: -9.00905990600586
    7. ' return' → logprob: -9.38405990600586
    8. '):' → logprob: -9.50905990600586
    9. ' :' → logprob: -10.00905990600586
    10. 'return' → logprob: -11.25905990600586

Token 345: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.042656440287828445
    2. ' return' → logprob: -3.292656421661377
    3. '               ' → logprob: -5.792656421661377
    4. '           ' → logprob: -6.542656421661377
    5. '       ' → logprob: -9.917656898498535
    6. '	return' → logprob: -10.042656898498535
    7. '   ' → logprob: -11.292656898498535
    8. '
' → logprob: -12.042656898498535
    9. ':return' → logprob: -13.917656898498535
    10. '{return' → logprob: -14.292656898498535

Token 346: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019288709154352546
    2. ' True' → logprob: -6.251928806304932
    3. 'False' → logprob: -15.00192928314209
    4. '(True' → logprob: -19.251928329467773
    5. ' ' → logprob: -21.251928329467773
    6. '   ' → logprob: -21.626928329467773
    7. 'true' → logprob: -22.251928329467773
    8. '=True' → logprob: -23.251928329467773
    9. '1' → logprob: -23.626928329467773
    10. '
' → logprob: -23.751928329467773

Token 347: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005364707321859896
    2. '
' → logprob: -8.250536918640137
    3. '    
' → logprob: -9.375536918640137
    4. ' return' → logprob: -9.750536918640137
    5. '<|end|>' → logprob: -9.875536918640137
    6. '	return' → logprob: -10.250536918640137
    7. 'return' → logprob: -11.000536918640137
    8. '  
' → logprob: -11.500536918640137
    9. '       ' → logprob: -11.750536918640137
    10. ')' → logprob: -13.625536918640137

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014744647778570652
    2. 'False' → logprob: -5.139744758605957
    3. '       ' → logprob: -6.139744758605957
    4. '    
' → logprob: -6.514744758605957
    5. ' return' → logprob: -6.764744758605957
    6. '
' → logprob: -7.264744758605957
    7. 'return' → logprob: -7.264744758605957
    8. '[' → logprob: -7.514744758605957
    9. 'None' → logprob: -7.764744758605957
    10. '  
' → logprob: -8.389744758605957

Token 349: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5080034136772156
    2. 'return' (adapté à ' return') → logprob: -1.0080034732818604
    3. 'False' → logprob: -3.5080034732818604
    4. ' return' → logprob: -6.133003234863281
    5. '
' → logprob: -7.508003234863281
    6. 'None' → logprob: -8.133003234863281
    7. '	return' → logprob: -9.383003234863281
    8. ' False' → logprob: -9.633003234863281
    9. ' ' → logprob: -9.758003234863281
    10. '    
' → logprob: -9.758003234863281

Token 350: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0015023599844425917
    2. ' False' → logprob: -6.501502513885498
    3. '(False' → logprob: -18.751502990722656
    4. '_false' → logprob: -22.751502990722656
    5. 'false' → logprob: -22.876502990722656
    6. '   ' → logprob: -23.626502990722656
    7. '=False' → logprob: -23.626502990722656
    8. 'True' → logprob: -23.626502990722656
    9. 'FALSE' → logprob: -24.501502990722656
    10. '.False' → logprob: -24.626502990722656

Token 351: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020904215052723885
    2. '<|end|>' → logprob: -4.520904064178467
    3. '
' → logprob: -4.770904064178467
    4. ':' → logprob: -8.020904541015625
    5. ':def' → logprob: -8.770904541015625
    6. ' def' → logprob: -9.020904541015625
    7. '\' → logprob: -9.145904541015625
    8. ')' → logprob: -9.270904541015625
    9. '(' → logprob: -9.395904541015625
    10. '<|end|>' → logprob: -9.520904541015625

Token 353: ' solve' (ID: 17722)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.916580080986023
    2. ' main' → logprob: -1.541580080986023
    3. ' check' → logprob: -1.791580080986023
    4. ' count' → logprob: -2.4165802001953125
    5. ' is' → logprob: -2.5415802001953125
    6. ' can' → logprob: -4.5415802001953125
    7. ' has' → logprob: -4.5415802001953125
    8. ' search' → logprob: -4.7915802001953125
    9. ' max' → logprob: -5.5415802001953125
    10. ' solve' → logprob: -5.7915802001953125

Token 354: '_grid' (ID: 34614)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.006002979353070259
    2. '(' → logprob: -5.131002902984619
    3. '(h' → logprob: -10.631003379821777
    4. ' (' → logprob: -11.256003379821777
    5. '(gr' → logprob: -11.256003379821777
    6. '(Grid' → logprob: -11.381003379821777
    7. '():' → logprob: -12.506003379821777
    8. '(graph' → logprob: -13.006003379821777
    9. '(d' → logprob: -13.256003379821777
    10. '(g' → logprob: -14.256003379821777

Token 355: '(h' (ID: 8120)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.0011957057286053896
    2. '(' → logprob: -6.751195907592773
    3. '(gr' → logprob: -11.001195907592773
    4. '(h' → logprob: -12.626195907592773
    5. ' (' → logprob: -12.751195907592773
    6. '(Grid' → logprob: -13.376195907592773
    7. '(g' → logprob: -14.751195907592773
    8. '(
' → logprob: -16.501195907592773
    9. '(size' → logprob: -16.501195907592773
    10. '(graph' → logprob: -16.626195907592773

Token 356: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006382156861945987
    2. ',w' → logprob: -7.375638008117676
    3. ' ,' → logprob: -11.500638008117676
    4. ',
' → logprob: -13.625638008117676
    5. 'w' → logprob: -16.250638961791992
    6. ',W' → logprob: -16.375638961791992
    7. ',int' → logprob: -17.125638961791992
    8. ',width' → logprob: -17.750638961791992
    9. ',h' → logprob: -18.625638961791992
    10. ' w' → logprob: -18.875638961791992

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.289473822107539e-05
    2. ',
' → logprob: -11.125062942504883
    3. ',g' → logprob: -11.250062942504883
    4. ' ,' → logprob: -11.375062942504883
    5. ',input' → logprob: -12.500062942504883
    6. ',s' → logprob: -13.000062942504883
    7. '):' → logprob: -13.125062942504883
    8. ',d' → logprob: -13.375062942504883
    9. ',row' → logprob: -13.625062942504883
    10. ',int' → logprob: -13.750062942504883

Token 358: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -6.909333023941144e-05
    2. ' grid' → logprob: -9.625068664550781
    3. '   ' → logprob: -14.250068664550781
    4. '
' → logprob: -14.625068664550781
    5. 'n' → logprob: -14.750068664550781
    6. 'import' → logprob: -15.250068664550781
    7. 'g' → logprob: -15.625068664550781
    8. ')' → logprob: -16.00006866455078
    9. ' ' → logprob: -16.25006866455078
    10. '```' → logprob: -16.62506866455078

Token 359: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02141297422349453
    2. ',' → logprob: -4.3964128494262695
    3. '):
' → logprob: -4.7714128494262695
    4. ',r' → logprob: -8.39641284942627
    5. ',h' → logprob: -9.39641284942627
    6. '   ' → logprob: -10.02141284942627
    7. ',c' → logprob: -11.77141284942627
    8. ')' → logprob: -12.27141284942627
    9. '):
' → logprob: -12.39641284942627
    10. ',n' → logprob: -12.64641284942627

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021929176524281502
    2. ' res' → logprob: -4.7719292640686035
    3. ' result' → logprob: -5.5219292640686035
    4. ' max' → logprob: -6.0219292640686035
    5. ' results' → logprob: -6.3969292640686035
    6. ' for' → logprob: -6.3969292640686035
    7. ' answer' → logprob: -7.1469292640686035
    8. ' ans' → logprob: -7.6469292640686035
    9. 'max' → logprob: -7.7719292640686035
    10. 'result' → logprob: -8.146928787231445

Token 361: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.87599116563797
    2. ' max' → logprob: -1.2509911060333252
    3. 'res' → logprob: -2.875991106033325
    4. ' res' → logprob: -2.875991106033325
    5. '   ' → logprob: -3.250991106033325
    6. 'result' → logprob: -3.500991106033325
    7. 'ans' → logprob: -3.750991106033325
    8. ' result' → logprob: -4.000991344451904
    9. 'results' → logprob: -4.250991344451904
    10. ' ans' → logprob: -4.250991344451904

Token 362: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.20451244711875916
    2. '_length' → logprob: -1.7045124769210815
    3. 'len' → logprob: -5.954512596130371
    4. '_seq' → logprob: -8.329512596130371
    5. '_' → logprob: -9.079512596130371
    6. 'length' → logprob: -9.954512596130371
    7. '_size' → logprob: -10.579512596130371
    8. '_side' → logprob: -10.704512596130371
    9. '_square' → logprob: -10.954512596130371
    10. '_l' → logprob: -11.579512596130371

Token 363: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519323229789734
    2. ' =' → logprob: -1.5019323825836182
    3. '   ' → logprob: -13.626932144165039
    4. ',' → logprob: -13.876932144165039
    5. '=max' → logprob: -14.876932144165039
    6. ' ' → logprob: -15.626932144165039
    7. 'th' → logprob: -15.876932144165039
    8. '=
' → logprob: -16.12693214416504
    9. 'x' → logprob: -16.87693214416504
    10. 'h' → logprob: -17.25193214416504

Token 364: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06186997517943382
    2. '0' → logprob: -3.8118698596954346
    3. ' min' → logprob: -3.8118698596954346
    4. 'max' → logprob: -4.436870098114014
    5. 'h' → logprob: -5.686870098114014
    6. ' ' → logprob: -8.561869621276855
    7. ' max' → logprob: -8.936869621276855
    8. ' h' → logprob: -9.061869621276855
    9. '-' → logprob: -10.311869621276855
    10. '(min' → logprob: -10.311869621276855

Token 365: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.25
    3. 'h' → logprob: -16.5
    4. '(len' → logprob: -17.625
    5. '((' → logprob: -19.125
    6. '(w' → logprob: -19.25
    7. ' (' → logprob: -19.375
    8. '(height' → logprob: -20.0
    9. '(
' → logprob: -20.25
    10. '(H' → logprob: -20.5

Token 366: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.010465577244758606
    2. ',' → logprob: -4.635465621948242
    3. ' ,' → logprob: -7.260465621948242
    4. ',h' → logprob: -13.135465621948242
    5. 'w' → logprob: -13.635465621948242
    6. ',
' → logprob: -14.510465621948242
    7. ',width' → logprob: -14.885465621948242
    8. ',min' → logprob: -15.260465621948242
    9. ',y' → logprob: -15.385465621948242
    10. ',W' → logprob: -15.510465621948242

Token 367: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005001319805160165
    2. ')
' → logprob: -7.875500202178955
    3. ')*' → logprob: -9.500499725341797
    4. ')+' → logprob: -11.250499725341797
    5. '*' → logprob: -11.625499725341797
    6. ' )' → logprob: -11.750499725341797
    7. ')//' → logprob: -12.375499725341797
    8. '))' → logprob: -13.500499725341797
    9. '   ' → logprob: -13.500499725341797
    10. ')#' → logprob: -13.625499725341797

Token 368: 'max' (ID: 3228)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00040064091444946826
    2. ' ' → logprob: -8.62540054321289
    3. 'min' → logprob: -9.37540054321289
    4. '3' → logprob: -10.37540054321289
    5. '4' → logprob: -10.37540054321289
    6. '1' → logprob: -11.62540054321289
    7. '8' → logprob: -11.62540054321289
    8. '0' → logprob: -11.62540054321289
    9. 'h' → logprob: -12.12540054321289
    10. '5' → logprob: -12.25040054321289

Token 369: '(' (ID: 7)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0388353131711483
    2. '(' → logprob: -3.413835287094116
    3. '(len' → logprob: -6.538835525512695
    4. '(d' → logprob: -7.038835525512695
    5. 'dire' → logprob: -7.163835525512695
    6. 'h' → logprob: -7.663835525512695
    7. '2' → logprob: -7.788835525512695
    8. 'len' → logprob: -8.288835525512695
    9. '((' → logprob: -9.163835525512695
    10. '(max' → logprob: -9.288835525512695

Token 370: '2' (ID: 17)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.5481851696968079
    2. 'h' → logprob: -1.298185110092163
    3. 'dire' → logprob: -2.798185110092163
    4. '(' → logprob: -3.173185110092163
    5. 'len' → logprob: -4.298185348510742
    6. '(len' → logprob: -5.173185348510742
    7. '10' → logprob: -5.298185348510742
    8. 'range' → logprob: -5.548185348510742
    9. '1' → logprob: -5.548185348510742
    10. '[h' → logprob: -6.173185348510742

Token 371: ',max' (ID: 81466)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10227441787719727
    2. ')' → logprob: -2.8522744178771973
    3. ',h' → logprob: -4.102274417877197
    4. ',len' → logprob: -4.852274417877197
    5. ' ,' → logprob: -5.227274417877197
    6. ',)' → logprob: -5.852274417877197
    7. ',(' → logprob: -6.602274417877197
    8. ' )' → logprob: -6.602274417877197
    9. ',w' → logprob: -6.977274417877197
    10. '(' → logprob: -8.227273941040039

Token 372: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.09801754355430603
    2. '_len' → logprob: -3.348017454147339
    3. '(len' → logprob: -3.598017454147339
    4. 'len' → logprob: -3.723017454147339
    5. '(' → logprob: -5.223017692565918
    6. 'length' → logprob: -7.973017692565918
    7. '_length' → logprob: -8.598017692565918
    8. '((' → logprob: -9.098017692565918
    9. 'Len' → logprob: -9.098017692565918
    10. '(max' → logprob: -9.723017692565918

Token 373: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.007305122446268797
    2. 'w' → logprob: -5.882305145263672
    3. ',' → logprob: -6.882305145263672
    4. '(w' → logprob: -7.132305145263672
    5. '//' → logprob: -7.257305145263672
    6. '_len' → logprob: -7.757305145263672
    7. '   ' → logprob: -8.132305145263672
    8. ' ,' → logprob: -8.132305145263672
    9. 'len' → logprob: -8.632305145263672
    10. '(' → logprob: -8.757305145263672

Token 374: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02115822210907936
    2. ')' → logprob: -4.396158218383789
    3. ',' → logprob: -5.521158218383789
    4. '),' → logprob: -6.146158218383789
    5. ')))' → logprob: -6.396158218383789
    6. '//' → logprob: -8.521158218383789
    7. '))
' → logprob: -8.521158218383789
    8. ' ))' → logprob: -8.646158218383789
    9. ')),' → logprob: -9.771158218383789
    10. '   ' → logprob: -10.646158218383789

Token 375: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2853907346725464
    2. '   ' → logprob: -1.5353907346725464
    3. '<|end|>' → logprob: -3.910390853881836
    4. ')' → logprob: -5.785390853881836
    5. '+' → logprob: -5.910390853881836
    6. ' for' → logprob: -6.535390853881836
    7. 'def' → logprob: -6.785390853881836
    8. '    
' → logprob: -7.035390853881836
    9. ' +' → logprob: -7.285390853881836
    10. 'for' → logprob: -7.535390853881836

Token 376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05053658410906792
    2. ' ' → logprob: -3.800536632537842
    3. '10' → logprob: -3.925536632537842
    4. '100' → logprob: -5.300536632537842
    5. '0' → logprob: -6.675536632537842
    6. 'max' → logprob: -8.175536155700684
    7. 'h' → logprob: -8.675536155700684
    8. ' max' → logprob: -9.175536155700684
    9. '
' → logprob: -9.800536155700684
    10. ' h' → logprob: -9.925536155700684

Token 377: '20' (ID: 455)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06445536017417908
    2. '10' → logprob: -3.064455270767212
    3. '100' → logprob: -4.314455509185791
    4. ' ' → logprob: -7.314455509185791
    5. 'max' → logprob: -7.314455509185791
    6. 'h' → logprob: -8.689455032348633
    7. 'min' → logprob: -8.814455032348633
    8. '2' → logprob: -9.064455032348633
    9. '0' → logprob: -9.064455032348633
    10. 'w' → logprob: -9.189455032348633

Token 378: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23063990473747253
    2. '   ' → logprob: -1.605639934539795
    3. ' for' → logprob: -6.355639934539795
    4. '    
' → logprob: -6.605639934539795
    5. 'for' → logprob: -6.730639934539795
    6. 'def' → logprob: -8.230639457702637
    7. 'max' → logprob: -8.730639457702637
    8. '  
' → logprob: -9.105639457702637
    9. 'result' → logprob: -9.730639457702637
    10. ' max' → logprob: -9.980639457702637

Token 379: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04787478595972061
    2. '   ' → logprob: -3.172874689102173
    3. ':' → logprob: -6.797874927520752
    4. ')' → logprob: -6.922874927520752
    5. '    
' → logprob: -7.047874927520752
    6. ')
' → logprob: -7.672874927520752
    7. 'def' → logprob: -7.797874927520752
    8. ':
' → logprob: -8.172874450683594
    9. 'for' → logprob: -8.547874450683594
    10. '  
' → logprob: -8.922874450683594

Token 380: ' upper' (ID: 13057)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.431541383266449
    2. ' ' → logprob: -2.1815414428710938
    3. ' max' → logprob: -2.3065414428710938
    4. '   ' → logprob: -3.3065414428710938
    5. ' for' → logprob: -3.6815414428710938
    6. '
' → logprob: -3.6815414428710938
    7. 'max' → logprob: -3.6815414428710938
    8. 'for' → logprob: -4.931541442871094
    9. ' h' → logprob: -4.931541442871094
    10. '0' → logprob: -5.306541442871094

Token 381: ' bound' (ID: 11608)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8040778040885925
    2. '_bound' → logprob: -1.0540778636932373
    3. '_' → logprob: -2.5540778636932373
    4. '   ' → logprob: -3.4290778636932373
    5. '_limit' → logprob: -3.8040778636932373
    6. 'bound' → logprob: -4.679077625274658
    7. ' bound' → logprob: -4.679077625274658
    8. '_len' → logprob: -4.929077625274658
    9. ' _' → logprob: -5.304077625274658
    10. '_token' → logprob: -5.429077625274658

Token 382: ' sufficiently' (ID: 77799)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5285830497741699
    2. '   ' → logprob: -0.9035830497741699
    3. '    
' → logprob: -5.90358304977417
    4. ' for' → logprob: -7.02858304977417
    5. 'def' → logprob: -7.52858304977417
    6. ',' → logprob: -8.403583526611328
    7. ')' → logprob: -8.528583526611328
    8. '  
' → logprob: -8.778583526611328
    9. 'for' → logprob: -9.028583526611328
    10. '<|end|>' → logprob: -9.028583526611328

Token 383: ' large' (ID: 4410)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48760807514190674
    2. '=' → logprob: -1.3626080751419067
    3. '   ' → logprob: -2.362607955932617
    4. ':' → logprob: -4.862607955932617
    5. ' +' → logprob: -4.987607955932617
    6. 'def' → logprob: -5.362607955932617
    7. ' =' → logprob: -5.737607955932617
    8. '
' → logprob: -5.987607955932617
    9. '+=' → logprob: -6.362607955932617
    10. 'for' → logprob: -6.487607955932617

Token 384: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11679893732070923
    2. '   ' → logprob: -2.2417988777160645
    3. '    
' → logprob: -6.7417988777160645
    4. 'def' → logprob: -6.9917988777160645
    5. ' for' → logprob: -7.2417988777160645
    6. ':' → logprob: -8.866799354553223
    7. '  
' → logprob: -8.866799354553223
    8. ',' → logprob: -8.991799354553223
    9. 'for' → logprob: -9.116799354553223
    10. ')' → logprob: -9.116799354553223

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5546246767044067
    2. '
' → logprob: -1.1796246767044067
    3. ':' → logprob: -2.429624557495117
    4. ':
' → logprob: -4.054624557495117
    5. ' for' → logprob: -5.304624557495117
    6. '```' → logprob: -5.929624557495117
    7. '    
' → logprob: -6.179624557495117
    8. 'for' → logprob: -7.179624557495117
    9. ',' → logprob: -7.679624557495117
    10. 'def' → logprob: -7.804624557495117

Token 386: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7782677412033081
    2. 'res' → logprob: -1.528267741203308
    3. 'answer' → logprob: -2.7782678604125977
    4. ' result' → logprob: -3.0282678604125977
    5. 'for' → logprob: -3.4032678604125977
    6. '   ' → logprob: -3.6532678604125977
    7. 'dp' → logprob: -3.6532678604125977
    8. ' res' → logprob: -3.7782678604125977
    9. 'max' → logprob: -4.028267860412598
    10. 'results' → logprob: -4.153267860412598

Token 387: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0325249433517456
    2. 'res' → logprob: -1.7825249433517456
    3. 'result' → logprob: -1.9075249433517456
    4. 'results' → logprob: -2.532525062561035
    5. 'dp' → logprob: -2.657525062561035
    6. 'visited' → logprob: -2.657525062561035
    7. 'ans' → logprob: -3.157525062561035
    8. 'answer' → logprob: -3.782525062561035
    9. 'max' → logprob: -4.782525062561035
    10. ' for' → logprob: -5.032525062561035

Token 388: ' sequences' (ID: 45665)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.8425493836402893
    2. ' max' → logprob: -1.5925493240356445
    3. ' for' → logprob: -2.0925493240356445
    4. ' not' → logprob: -2.3425493240356445
    5. 'max' → logprob: -3.4675493240356445
    6. 'h' → logprob: -3.8425493240356445
    7. ' the' → logprob: -3.9675493240356445
    8. ' w' → logprob: -4.0925493240356445
    9. 'for' → logprob: -4.3425493240356445
    10. ' len' → logprob: -4.7175493240356445

Token 389: ' wrap' (ID: 20404)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6057682633399963
    2. ' are' → logprob: -2.3557682037353516
    3. '   ' → logprob: -2.4807682037353516
    4. ' must' → logprob: -2.7307682037353516
    5. 'can' → logprob: -3.1057682037353516
    6. ' =' → logprob: -3.2307682037353516
    7. ' may' → logprob: -3.9807682037353516
    8. 'must' → logprob: -4.355768203735352
    9. 'def' → logprob: -4.480768203735352
    10. 'are' → logprob: -4.730768203735352

Token 390: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9767720103263855
    2. '
' → logprob: -1.1017720699310303
    3. ',' → logprob: -1.6017720699310303
    4. ' for' → logprob: -3.1017720699310303
    5. ',
' → logprob: -3.4767720699310303
    6. '    
' → logprob: -5.726771831512451
    7. 'for' → logprob: -6.101771831512451
    8. 'def' → logprob: -6.351771831512451
    9. ':' → logprob: -6.726771831512451
    10. ')' → logprob: -7.476771831512451

Token 391: ' length' (ID: 5517)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08893957734107971
    2. 'for' → logprob: -2.713939666748047
    3. '#' → logprob: -5.088939666748047
    4. '   ' → logprob: -5.338939666748047
    5. ' max' → logprob: -6.463939666748047
    6. ' visited' → logprob: -6.463939666748047
    7. ' #' → logprob: -6.588939666748047
    8. ' result' → logprob: -7.463939666748047
    9. 'max' → logprob: -7.588939666748047
    10. ' we' → logprob: -7.963939666748047

Token 392: ' can' (ID: 665)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4178224802017212
    2. ' =' → logprob: -1.4178224802017212
    3. '=' → logprob: -1.5428224802017212
    4. ' ranges' → logprob: -2.4178223609924316
    5. 'range' → logprob: -3.0428223609924316
    6. '_range' → logprob: -3.4178223609924316
    7. 'for' → logprob: -3.6678223609924316
    8. ' can' → logprob: -3.9178223609924316
    9. 'max' → logprob: -4.042822360992432
    10. 'ranges' → logprob: -4.292822360992432

Token 393: ' be' (ID: 413)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.30665794014930725
    2. 'range' → logprob: -1.8066579103469849
    3. ' be' → logprob: -3.0566580295562744
    4. ' go' → logprob: -3.5566580295562744
    5. ' vary' → logprob: -5.681657791137695
    6. ' for' → logprob: -5.806657791137695
    7. '   ' → logprob: -5.931657791137695
    8. 'be' → logprob: -6.056657791137695
    9. 'for' → logprob: -6.181657791137695
    10. ',' → logprob: -6.306657791137695

Token 394: ' more' (ID: 945)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42154932022094727
    2. 'max' → logprob: -2.1715493202209473
    3. 'min' → logprob: -2.4215493202209473
    4. 'h' → logprob: -2.4215493202209473
    5. 'up' → logprob: -3.9215493202209473
    6. '2' → logprob: -4.921549320220947
    7. 'range' → logprob: -5.171549320220947
    8. 'at' → logprob: -5.296549320220947
    9. 'from' → logprob: -5.421549320220947
    10. ' h' → logprob: -6.171549320220947

Token 395: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.5654933452606201
    2. ' than' → logprob: -0.9404933452606201
    3. '   ' → logprob: -3.44049334526062
    4. '=' → logprob: -5.690493583679199
    5. 'def' → logprob: -5.690493583679199
    6. '_than' → logprob: -7.565493583679199
    7. ')' → logprob: -7.940493583679199
    8. '1' → logprob: -8.0654935836792
    9. 'for' → logprob: -8.4404935836792
    10. '+' → logprob: -8.8154935836792

Token 396: ' h' (ID: 312)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5564985871315002
    2. 'min' → logprob: -1.8064985275268555
    3. '1' → logprob: -1.9314985275268555
    4. 'h' → logprob: -2.6814985275268555
    5. ' max' → logprob: -3.3064985275268555
    6. ' min' → logprob: -5.0564985275268555
    7. ' ' → logprob: -6.0564985275268555
    8. ' h' → logprob: -6.3064985275268555
    9. '0' → logprob: -7.0564985275268555
    10. '2' → logprob: -7.6814985275268555

Token 397: ' or' (ID: 503)
  Prédit: '*w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*w' → logprob: -1.199379324913025
    2. ',' → logprob: -1.824379324913025
    3. 'w' → logprob: -2.0743794441223145
    4. '*' → logprob: -2.1993794441223145
    5. ',w' → logprob: -2.1993794441223145
    6. ' or' → logprob: -2.6993794441223145
    7. ' and' → logprob: -2.9493794441223145
    8. '   ' → logprob: -3.5743794441223145
    9. 'and' → logprob: -4.1993794441223145
    10. 'or' → logprob: -4.4493794441223145

Token 398: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.002188449027016759
    2. ' w' → logprob: -6.127188682556152
    3. '   ' → logprob: -13.627188682556152
    4. ' ' → logprob: -13.627188682556152
    5. 'max' → logprob: -15.127188682556152
    6. '```' → logprob: -15.127188682556152
    7. '1' → logprob: -16.252187728881836
    8. '	w' → logprob: -16.502187728881836
    9. ' ' → logprob: -17.377187728881836
    10. '
' → logprob: -17.502187728881836

Token 399: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11247710138559341
    2. '   ' → logprob: -2.3624770641326904
    3. ',' → logprob: -5.8624773025512695
    4. '    
' → logprob: -5.8624773025512695
    5. '<|end|>' → logprob: -6.2374773025512695
    6. ' for' → logprob: -6.9874773025512695
    7. '  
' → logprob: -7.2374773025512695
    8. 'def' → logprob: -7.4874773025512695
    9. ',
' → logprob: -7.9874773025512695
    10. ':' → logprob: -8.36247730255127

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5986626744270325
    2. ' for' → logprob: -1.3486626148223877
    3. '
' → logprob: -3.0986626148223877
    4. 'res' → logprob: -3.5986626148223877
    5. 'for' → logprob: -3.5986626148223877
    6. 'result' → logprob: -3.8486626148223877
    7. ' res' → logprob: -4.348662853240967
    8. ' result' → logprob: -4.473662853240967
    9. 'max' → logprob: -4.723662853240967
    10. 'answer' → logprob: -4.973662853240967

Token 401: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3553271293640137
    2. ' result' → logprob: -1.6053271293640137
    3. ' for' → logprob: -1.9803271293640137
    4. ' res' → logprob: -2.7303271293640137
    5. 'max' → logprob: -2.8553271293640137
    6. 'res' → logprob: -2.8553271293640137
    7. 'for' → logprob: -2.9803271293640137
    8. '   ' → logprob: -3.1053271293640137
    9. ' max' → logprob: -3.1053271293640137
    10. 'answer' → logprob: -3.9803271293640137

Token 402: ' but' (ID: 889)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1810669898986816
    2. 'res' → logprob: -1.5560669898986816
    3. 'max' → logprob: -1.8060669898986816
    4. 'answer' → logprob: -2.3060669898986816
    5. 'for' → logprob: -3.0560669898986816
    6. 'ans' → logprob: -3.3060669898986816
    7. 'best' → logprob: -3.8060669898986816
    8. ' res' → logprob: -4.056066989898682
    9. ' result' → logprob: -4.056066989898682
    10. '   ' → logprob: -4.181066989898682

Token 403: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9168740510940552
    2. ' max' → logprob: -1.4168740510940552
    3. ' for' → logprob: -1.6668740510940552
    4. 'for' → logprob: -1.9168740510940552
    5. ' length' → logprob: -5.416873931884766
    6. ' not' → logprob: -5.541873931884766
    7. 'length' → logprob: -5.541873931884766
    8. ' result' → logprob: -6.916873931884766
    9. 'import' → logprob: -7.041873931884766
    10. 'def' → logprob: -7.166873931884766

Token 404: ' sequence' (ID: 16281)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6793613433837891
    2. ' for' → logprob: -1.054361343383789
    3. 'max' → logprob: -2.804361343383789
    4. 'def' → logprob: -3.554361343383789
    5. ' code' → logprob: -4.179361343383789
    6. ' max' → logprob: -4.679361343383789
    7. '   ' → logprob: -4.929361343383789
    8. ' next' → logprob: -5.554361343383789
    9. ' length' → logprob: -6.304361343383789
    10. 'length' → logprob: -6.304361343383789

Token 405: ' can't' (ID: 8535)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8086745738983154
    2. ' =' → logprob: -1.4336745738983154
    3. ' must' → logprob: -2.9336745738983154
    4. '=' → logprob: -3.0586745738983154
    5. ' lengths' → logprob: -3.3086745738983154
    6. 'length' → logprob: -3.5586745738983154
    7. 'def' → logprob: -3.5586745738983154
    8. ' length' → logprob: -3.5586745738983154
    9. '   ' → logprob: -3.8086745738983154
    10. 'can' → logprob: -4.4336748123168945

Token 406: ' overlap' (ID: 56631)
  Prédit: ' overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.14903473854064941
    2. ' be' → logprob: -2.7740347385406494
    3. ' have' → logprob: -3.6490347385406494
    4. 'over' → logprob: -3.7740347385406494
    5. ' exceed' → logprob: -4.14903450012207
    6. 'be' → logprob: -6.27403450012207
    7. 'have' → logprob: -6.39903450012207
    8. ' self' → logprob: -6.52403450012207
    9. '   ' → logprob: -6.64903450012207
    10. ' contain' → logprob: -6.89903450012207

Token 407: ' itself' (ID: 8807)
  Prédit: ' itself'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itself' → logprob: -0.1288003772497177
    2. '   ' → logprob: -2.503800392150879
    3. 'it' → logprob: -4.753800392150879
    4. ' with' → logprob: -5.003800392150879
    5. ',' → logprob: -5.378800392150879
    6. 'with' → logprob: -5.753800392150879
    7. ' in' → logprob: -6.003800392150879
    8. 'def' → logprob: -6.378800392150879
    9. ' positions' → logprob: -6.503800392150879
    10. 'positions' → logprob: -7.003800392150879

Token 408: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1767851710319519
    2. '
' → logprob: -1.9267852306365967
    3. ' for' → logprob: -5.301784992218018
    4. '    
' → logprob: -5.551784992218018
    5. ',' → logprob: -5.926784992218018
    6. 'def' → logprob: -6.301784992218018
    7. '  
' → logprob: -7.426784992218018
    8. ',
' → logprob: -7.551784992218018
    9. '<|end|>' → logprob: -8.051785469055176
    10. ')' → logprob: -8.176785469055176

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.186985582113266
    2. ' for' → logprob: -1.8119856119155884
    3. ' max' → logprob: -6.061985492706299
    4. '```' → logprob: -6.436985492706299
    5. 'for' → logprob: -6.811985492706299
    6. '
' → logprob: -7.186985492706299
    7. '    ' → logprob: -7.936985492706299
    8. '    
' → logprob: -8.311985969543457
    9. ' length' → logprob: -8.561985969543457
    10. ' result' → logprob: -9.061985969543457

Token 410: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3340718746185303
    2. 'res' → logprob: -2.2090718746185303
    3. 'result' → logprob: -2.9590718746185303
    4. 'max' → logprob: -3.0840718746185303
    5. ' for' → logprob: -4.084072113037109
    6. 'ans' → logprob: -4.209072113037109
    7. 'answer' → logprob: -4.334072113037109
    8. 'visited' → logprob: -4.334072113037109
    9. 'best' → logprob: -5.209072113037109
    10. ' res' → logprob: -5.959072113037109

Token 411: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5021440386772156
    2. ' for' → logprob: -2.0021440982818604
    3. 'result' → logprob: -2.6271440982818604
    4. 'res' → logprob: -2.7521440982818604
    5. 'max' → logprob: -3.6271440982818604
    6. ' res' → logprob: -4.252143859863281
    7. 'ans' → logprob: -4.377143859863281
    8. 'visited' → logprob: -4.377143859863281
    9. 'answer' → logprob: -4.502143859863281
    10. ' result' → logprob: -4.502143859863281

Token 412: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3527592718601227
    2. ' for' → logprob: -1.2277592420578003
    3. 'max' → logprob: -5.97775936126709
    4. '   ' → logprob: -6.97775936126709
    5. ' max' → logprob: -7.60275936126709
    6. 'res' → logprob: -9.72775936126709
    7. 'result' → logprob: -10.10275936126709
    8. 'def' → logprob: -10.10275936126709
    9. 'length' → logprob: -10.10275936126709
    10. ' res' → logprob: -10.35275936126709

Token 413: ' length' (ID: 5517)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.1304268091917038
    2. '_length' → logprob: -2.1304268836975098
    3. 'len' → logprob: -6.00542688369751
    4. 'length' → logprob: -7.38042688369751
    5. '_seq' → logprob: -8.005426406860352
    6. '_' → logprob: -11.130426406860352
    7. '_l' → logprob: -11.505426406860352
    8. '_possible' → logprob: -11.505426406860352
    9. '```' → logprob: -11.880426406860352
    10. '   ' → logprob: -12.005426406860352

Token 414: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01609795168042183
    2. ' =' → logprob: -4.1410980224609375
    3. ' is' → logprob: -10.641098022460938
    4. '<=' → logprob: -11.641098022460938
    5. '=max' → logprob: -12.016098022460938
    6. '=
' → logprob: -12.266098022460938
    7. '   ' → logprob: -12.391098022460938
    8. ')' → logprob: -12.516098022460938
    9. 'for' → logprob: -12.891098022460938
    10. 'is' → logprob: -13.266098022460938

Token 415: ' at' (ID: 540)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5722981095314026
    2. '(h' → logprob: -1.3222980499267578
    3. '(min' → logprob: -2.447298049926758
    4. 'max' → logprob: -2.697298049926758
    5. '(max' → logprob: -4.822298049926758
    6. 'h' → logprob: -5.947298049926758
    7. ' (' → logprob: -6.072298049926758
    8. ' min' → logprob: -6.322298049926758
    9. ' max' → logprob: -8.197298049926758
    10. 'length' → logprob: -9.572298049926758

Token 416: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.06467083096504211
    2. ' most' → logprob: -2.8146708011627197
    3. 'least' → logprob: -6.564671039581299
    4. 'max' → logprob: -6.939671039581299
    5. ' least' → logprob: -8.68967056274414
    6. '
' → logprob: -10.43967056274414
    7. '```' → logprob: -10.43967056274414
    8. 'min' → logprob: -10.56467056274414
    9. ' max' → logprob: -10.68967056274414
    10. 'Most' → logprob: -10.81467056274414

Token 417: ' h' (ID: 312)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.19574250280857086
    2. '(min' → logprob: -2.070742607116699
    3. '(h' → logprob: -3.695742607116699
    4. 'max' → logprob: -3.820742607116699
    5. '(max' → logprob: -5.945742607116699
    6. ' min' → logprob: -6.320742607116699
    7. ' (' → logprob: -8.4457426071167
    8. 'h' → logprob: -9.0707426071167
    9. 'length' → logprob: -9.4457426071167
    10. ' max' → logprob: -9.8207426071167

Token 418: '*w' (ID: 147727)
  Prédit: '*w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*w' → logprob: -0.854536235332489
    2. '*' → logprob: -1.2295362949371338
    3. '*h' → logprob: -2.354536294937134
    4. ')' → logprob: -2.604536294937134
    5. ' *' → logprob: -2.854536294937134
    6. 'w' → logprob: -3.854536294937134
    7. '//' → logprob: -4.854536056518555
    8. '   ' → logprob: -5.354536056518555
    9. ',' → logprob: -5.479536056518555
    10. '+' → logprob: -5.854536056518555

Token 419: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5310975909233093
    2. '   ' → logprob: -0.9060975909233093
    3. ')' → logprob: -5.781097412109375
    4. '    
' → logprob: -6.656097412109375
    5. 'def' → logprob: -7.406097412109375
    6. ',' → logprob: -7.406097412109375
    7. '<|end|>' → logprob: -7.656097412109375
    8. 'max' → logprob: -8.031097412109375
    9. ' for' → logprob: -8.156097412109375
    10. ',
' → logprob: -8.656097412109375

Token 420: 'but' (ID: 8293)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002195337088778615
    2. ')
' → logprob: -7.127195358276367
    3. ' )' → logprob: -7.377195358276367
    4. '   ' → logprob: -7.627195358276367
    5. '):' → logprob: -9.752195358276367
    6. '//' → logprob: -10.252195358276367
    7. ')

' → logprob: -10.752195358276367
    8. '):
' → logprob: -10.752195358276367
    9. '),' → logprob: -10.877195358276367
    10. '**' → logprob: -11.002195358276367

Token 421: ' checking' (ID: 19141)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.000746011734009
    2. 'h' → logprob: -2.125746011734009
    3. 'w' → logprob: -2.250746011734009
    4. ' we' → logprob: -2.500746011734009
    5. 'we' → logprob: -2.750746011734009
    6. ' not' → logprob: -2.750746011734009
    7. ' that' → logprob: -2.875746011734009
    8. 'too' → logprob: -3.250746011734009
    9. ' too' → logprob: -3.250746011734009
    10. 'that' → logprob: -3.500746011734009

Token 422: ' that' (ID: 484)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6328070759773254
    2. ' sequences' → logprob: -1.5078070163726807
    3. ' for' → logprob: -2.7578070163726807
    4. 'all' → logprob: -2.8828070163726807
    5. ' longer' → logprob: -3.0078070163726807
    6. 'for' → logprob: -3.5078070163726807
    7. ' up' → logprob: -4.75780725479126
    8. ')' → logprob: -4.88280725479126
    9. '   ' → logprob: -5.00780725479126
    10. ' beyond' → logprob: -5.75780725479126

Token 423: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5087234377861023
    2. ' is' → logprob: -1.883723497390747
    3. ' for' → logprob: -2.508723497390747
    4. '   ' → logprob: -2.633723497390747
    5. '#' → logprob: -4.008723258972168
    6. ' would' → logprob: -4.258723258972168
    7. 'for' → logprob: -4.633723258972168
    8. ' )' → logprob: -4.633723258972168
    9. '),' → logprob: -5.008723258972168
    10. ' may' → logprob: -5.508723258972168

Token 424: ' expensive' (ID: 14818)
  Prédit: ' too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' too' → logprob: -0.9358186721801758
    2. 'too' → logprob: -1.1858186721801758
    3. ' costly' → logprob: -1.8108186721801758
    4. ' expensive' → logprob: -2.435818672180176
    5. 'cost' → logprob: -4.310818672180176
    6. 'exp' → logprob: -4.935818672180176
    7. ' computational' → logprob: -5.185818672180176
    8. 'very' → logprob: -5.310818672180176
    9. ' very' → logprob: -6.060818672180176
    10. '   ' → logprob: -6.185818672180176

Token 425: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045229777693748474
    2. ')
' → logprob: -3.17022967338562
    3. '   ' → logprob: -6.170229911804199
    4. ')

' → logprob: -10.7952299118042
    5. '
' → logprob: -10.9202299118042
    6. ' for' → logprob: -11.0452299118042
    7. ' )' → logprob: -11.2952299118042
    8. 'for' → logprob: -11.4202299118042
    9. '),' → logprob: -11.5452299118042
    10. ',' → logprob: -11.5452299118042

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06194404512643814
    2. '
' → logprob: -2.936944007873535
    3. '    
' → logprob: -5.561944007873535
    4. '```' → logprob: -6.186944007873535
    5. ')' → logprob: -8.311944007873535
    6. ' for' → logprob: -8.686944007873535
    7. 'def' → logprob: -8.811944007873535
    8. 'max' → logprob: -8.811944007873535
    9. 'for' → logprob: -8.936944007873535
    10. '  
' → logprob: -9.561944007873535

Token 427: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8594584465026855
    2. 'max' → logprob: -2.4844584465026855
    3. ' res' → logprob: -2.7344584465026855
    4. 'result' → logprob: -2.8594584465026855
    5. ' max' → logprob: -2.8594584465026855
    6. 'res' → logprob: -2.9844584465026855
    7. 'dp' → logprob: -2.9844584465026855
    8. 'answer' → logprob: -3.4844584465026855
    9. ' result' → logprob: -3.4844584465026855
    10. '
' → logprob: -3.7344584465026855

Token 428: ' Use' (ID: 7649)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.337790846824646
    2. 'result' → logprob: -1.337790846824646
    3. 'for' → logprob: -1.712790846824646
    4. 'max' → logprob: -2.7127909660339355
    5. 'dp' → logprob: -3.2127909660339355
    6. 'answer' → logprob: -3.5877909660339355
    7. 'visited' → logprob: -3.5877909660339355
    8. ' res' → logprob: -3.8377909660339355
    9. 'results' → logprob: -3.8377909660339355
    10. ' for' → logprob: -3.8377909660339355

Token 429: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0381698608398438
    2. 'for' → logprob: -1.1631698608398438
    3. ' max' → logprob: -2.1631698608398438
    4. ' for' → logprob: -2.2881698608398438
    5. 'min' → logprob: -3.1631698608398438
    6. 'range' → logprob: -3.9131698608398438
    7. ' min' → logprob: -4.413169860839844
    8. 'import' → logprob: -4.913169860839844
    9. 'h' → logprob: -5.288169860839844
    10. ' h' → logprob: -5.413169860839844

Token 430: ' length' (ID: 5517)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.356289803981781
    2. '_length' → logprob: -1.2312898635864258
    3. 'len' → logprob: -4.981289863586426
    4. '_seq' → logprob: -7.356289863586426
    5. 'length' → logprob: -8.856289863586426
    6. '_possible' → logprob: -9.856289863586426
    7. '_lengths' → logprob: -10.356289863586426
    8. '_sequence' → logprob: -11.356289863586426
    9. '(' → logprob: -11.356289863586426
    10. '_l' → logprob: -11.981289863586426

Token 431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12820176780223846
    2. ' =' → logprob: -2.128201723098755
    3. '   ' → logprob: -8.003201484680176
    4. 'def' → logprob: -8.128201484680176
    5. 'for' → logprob: -8.503201484680176
    6. '=max' → logprob: -8.878201484680176
    7. ',' → logprob: -9.128201484680176
    8. '_range' → logprob: -10.503201484680176
    9. '_possible' → logprob: -10.628201484680176
    10. 'max' → logprob: -11.128201484680176

Token 432: ' l' (ID: 305)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10546205937862396
    2. 'max' → logprob: -2.355462074279785
    3. '100' → logprob: -6.230462074279785
    4. 'min' → logprob: -6.480462074279785
    5. ' h' → logprob: -7.480462074279785
    6. ' max' → logprob: -7.855462074279785
    7. '10' → logprob: -8.105462074279785
    8. '(h' → logprob: -8.355462074279785
    9. '200' → logprob: -10.230462074279785
    10. '20' → logprob: -10.230462074279785

Token 433: 'cm' (ID: 7871)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.43137893080711365
    2. 'en' → logprob: -1.806378960609436
    3. 'max' → logprob: -2.3063788414001465
    4. 'ength' → logprob: -3.6813788414001465
    5. '(min' → logprob: -4.1813788414001465
    6. 'im' → logprob: -4.4313788414001465
    7. ' min' → logprob: -4.8063788414001465
    8. '(max' → logprob: -5.5563788414001465
    9. '=min' → logprob: -5.5563788414001465
    10. 'imit' → logprob: -5.6813788414001465

Token 434: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5247732996940613
    2. '_' → logprob: -1.524773359298706
    3. '   ' → logprob: -2.649773359298706
    4. '(h' → logprob: -2.899773359298706
    5. ' =' → logprob: -4.524773120880127
    6. ' (' → logprob: -4.649773120880127
    7. '=' → logprob: -4.649773120880127
    8. '_h' → logprob: -4.649773120880127
    9. 'def' → logprob: -5.274773120880127
    10. 'import' → logprob: -5.274773120880127

Token 435: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00041732576210051775
    2. ' h' → logprob: -7.875417232513428
    3. '(h' → logprob: -10.375417709350586
    4. '[h' → logprob: -12.125417709350586
    5. ' (' → logprob: -15.250417709350586
    6. '[' → logprob: -16.125417709350586
    7. '   ' → logprob: -16.250417709350586
    8. '	h' → logprob: -16.750417709350586
    9. ' [' → logprob: -16.875417709350586
    10. '
' → logprob: -16.875417709350586

Token 436: ' and' (ID: 326)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.1772402971982956
    2. ',' → logprob: -2.0522403717041016
    3. ' and' → logprob: -3.8022403717041016
    4. '*w' → logprob: -5.177240371704102
    5. 'and' → logprob: -6.177240371704102
    6. 'w' → logprob: -6.927240371704102
    7. ' ,' → logprob: -7.052240371704102
    8. ',
' → logprob: -7.052240371704102
    9. '   ' → logprob: -7.302240371704102
    10. '*' → logprob: -8.927240371704102

Token 437: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005235190503299236
    2. ' w' → logprob: -5.255235195159912
    3. '   ' → logprob: -13.755234718322754
    4. ' ' → logprob: -16.00523567199707
    5. 'max' → logprob: -16.25523567199707
    6. '  ' → logprob: -17.50523567199707
    7. '
' → logprob: -18.25523567199707
    8. '	w' → logprob: -18.25523567199707
    9. '    ' → logprob: -18.75523567199707
    10. '(w' → logprob: -19.25523567199707

Token 438: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07779469341039658
    2. 'import' → logprob: -3.5777947902679443
    3. '
' → logprob: -3.7027947902679443
    4. 'def' → logprob: -4.452794551849365
    5. ' =' → logprob: -5.577794551849365
    6. '    
' → logprob: -6.577794551849365
    7. ' if' → logprob: -7.202794551849365
    8. ' (' → logprob: -7.577794551849365
    9. ',' → logprob: -7.827794551849365
    10. 'from' → logprob: -8.077795028686523

Token 439: '2' (ID: 17)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7754415273666382
    2. '2' → logprob: -1.0254415273666382
    3. ' max' → logprob: -1.7754415273666382
    4. ' ' → logprob: -4.775441646575928
    5. 'min' → logprob: -7.275441646575928
    6. '(max' → logprob: -7.650441646575928
    7. '   ' → logprob: -7.775441646575928
    8. '10' → logprob: -7.775441646575928
    9. 'l' → logprob: -8.02544116973877
    10. ' l' → logprob: -9.15044116973877

Token 440: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11809556186199188
    2. '
' → logprob: -2.368095636367798
    3. 'import' → logprob: -4.743095397949219
    4. 'def' → logprob: -5.618095397949219
    5. '    
' → logprob: -6.243095397949219
    6. ' =' → logprob: -6.993095397949219
    7. ',' → logprob: -7.868095397949219
    8. '=' → logprob: -8.243095397949219
    9. 'max' → logprob: -8.368095397949219
    10. 'from' → logprob: -8.493095397949219

Token 441: ' so' (ID: 813)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4762524962425232
    2. '10' → logprob: -1.976252555847168
    3. '1' → logprob: -2.976252555847168
    4. 'min' → logprob: -3.101252555847168
    5. '(max' → logprob: -3.226252555847168
    6. '20' → logprob: -3.351252555847168
    7. '2' → logprob: -3.851252555847168
    8. '(' → logprob: -4.601252555847168
    9. '(h' → logprob: -4.976252555847168
    10. '100' → logprob: -5.101252555847168

Token 442: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26308178901672363
    2. '
' → logprob: -1.5130817890167236
    3. '    
' → logprob: -5.5130815505981445
    4. '<|end|>' → logprob: -6.5130815505981445
    5. ' for' → logprob: -6.6380815505981445
    6. 'def' → logprob: -6.8880815505981445
    7. ')' → logprob: -7.5130815505981445
    8. 'max' → logprob: -7.7630815505981445
    9. ' max' → logprob: -8.138081550598145
    10. 'import' → logprob: -8.138081550598145

Token 443: ' over' (ID: 1072)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.30260157585144043
    2. 'max' → logprob: -1.8026015758514404
    3. ' h' → logprob: -3.0526015758514404
    4. 'h' → logprob: -4.0526018142700195
    5. ' min' → logprob: -4.6776018142700195
    6. '(h' → logprob: -5.0526018142700195
    7. ' (' → logprob: -5.4276018142700195
    8. '   ' → logprob: -5.4276018142700195
    9. 'min' → logprob: -5.6776018142700195
    10. '(max' → logprob: -6.4276018142700195

Token 444: 'kill' (ID: 25752)
  Prédit: 'kill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.17742158472537994
    2. 'estimated' → logprob: -2.9274215698242188
    3. 'k' → logprob: -3.4274215698242188
    4. '   ' → logprob: -3.4274215698242188
    5. '100' → logprob: -5.052421569824219
    6. 'estimate' → logprob: -5.552421569824219
    7. 'engine' → logprob: -5.552421569824219
    8. 'approx' → logprob: -5.802421569824219
    9. '```' → logprob: -6.177421569824219
    10. 'import' → logprob: -6.302421569824219

Token 445: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6448368430137634
    2. '
' → logprob: -0.7698368430137634
    3. '    
' → logprob: -4.894836902618408
    4. ')' → logprob: -7.019836902618408
    5. 'def' → logprob: -7.019836902618408
    6. ',' → logprob: -7.144836902618408
    7. '<|end|>' → logprob: -7.144836902618408
    8. '  
' → logprob: -8.51983642578125
    9. '

' → logprob: -8.89483642578125
    10. ' for' → logprob: -9.01983642578125

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18341755867004395
    2. '
' → logprob: -2.058417558670044
    3. ' for' → logprob: -4.058417320251465
    4. '    
' → logprob: -4.683417320251465
    5. '```' → logprob: -5.308417320251465
    6. ' res' → logprob: -6.558417320251465
    7. ' max' → logprob: -6.808417320251465
    8. 'for' → logprob: -6.808417320251465
    9. 'max' → logprob: -6.933417320251465
    10. ' result' → logprob: -7.058417320251465

Token 447: ' #' (ID: 1069)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.4184253215789795
    2. 'max' → logprob: -1.6684253215789795
    3. ' for' → logprob: -1.7934253215789795
    4. '   ' → logprob: -2.0434253215789795
    5. ' result' → logprob: -2.4184253215789795
    6. 'result' → logprob: -2.9184253215789795
    7. ' res' → logprob: -3.0434253215789795
    8. 'for' → logprob: -3.4184253215789795
    9. 'res' → logprob: -4.043425559997559
    10. ' answer' → logprob: -4.918425559997559

Token 448: ' According' (ID: 16344)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8771997094154358
    2. 'result' → logprob: -1.502199649810791
    3. 'for' → logprob: -2.502199649810791
    4. ' res' → logprob: -2.877199649810791
    5. 'max' → logprob: -2.877199649810791
    6. 'results' → logprob: -2.877199649810791
    7. ' for' → logprob: -3.752199649810791
    8. ' result' → logprob: -3.877199649810791
    9. 'ans' → logprob: -3.877199649810791
    10. 'answer' → logprob: -4.502199649810791

Token 449: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6990950107574463
    2. 'to' → logprob: -0.6990950107574463
    3. '_to' → logprob: -5.199094772338867
    4. '=' → logprob: -8.574094772338867
    5. '_' → logprob: -9.449094772338867
    6. ' =' → logprob: -10.449094772338867
    7. 'def' → logprob: -10.824094772338867
    8. 'import' → logprob: -10.949094772338867
    9. ' ' → logprob: -10.949094772338867
    10. '   ' → logprob: -11.324094772338867

Token 450: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.0989348366856575
    2. 'len' → logprob: -3.3489348888397217
    3. 'math' → logprob: -3.9739348888397217
    4. '#' → logprob: -5.348934650421143
    5. 'comments' → logprob: -5.348934650421143
    6. 'problem' → logprob: -5.598934650421143
    7. 'code' → logprob: -5.723934650421143
    8. ' math' → logprob: -5.848934650421143
    9. ' the' → logprob: -5.973934650421143
    10. 'your' → logprob: -6.223934650421143

Token 451: ' constraints' (ID: 31060)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23345091938972473
    2. ':' → logprob: -2.1084508895874023
    3. 'def' → logprob: -3.1084508895874023
    4. '   ' → logprob: -3.9834508895874023
    5. '<|end|>' → logprob: -5.608450889587402
    6. '
' → logprob: -5.858450889587402
    7. '<|end|>' → logprob: -6.108450889587402
    8. ' ,' → logprob: -6.233450889587402
    9. ' ' → logprob: -6.608450889587402
    10. ')' → logprob: -6.608450889587402

Token 452: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3896220028400421
    2. ':' → logprob: -1.6396219730377197
    3. ',' → logprob: -2.3896219730377197
    4. '
' → logprob: -4.014622211456299
    5. ':
' → logprob: -4.514622211456299
    6. '<|end|>' → logprob: -6.389622211456299
    7. '    
' → logprob: -6.764622211456299
    8. '):' → logprob: -7.139622211456299
    9. '<|end|>' → logprob: -7.264622211456299
    10. ',
' → logprob: -7.514622211456299

Token 453: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6009362936019897
    2. 'return' → logprob: -1.4759362936019897
    3. '   ' → logprob: -1.8509362936019897
    4. ' return' → logprob: -3.9759364128112793
    5. 'for' → logprob: -4.225936412811279
    6. 'pass' → logprob: -4.600936412811279
    7. ' max' → logprob: -5.100936412811279
    8. '#' → logprob: -5.100936412811279
    9. ' for' → logprob: -5.600936412811279
    10. 'length' → logprob: -6.475936412811279

Token 454: '10' (ID: 702)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5025815367698669
    2. 'return' → logprob: -1.1275815963745117
    3. 'for' → logprob: -3.1275815963745117
    4. 'pass' → logprob: -4.377581596374512
    5. '#' → logprob: -5.002581596374512
    6. '...' → logprob: -5.752581596374512
    7. ' return' → logprob: -6.627581596374512
    8. 'import' → logprob: -6.877581596374512
    9. 'length' → logprob: -7.377581596374512
    10. ' max' → logprob: -7.752581596374512

Token 455: '*' (ID: 9)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03058071993291378
    2. '000' → logprob: -4.780580520629883
    3. '00' → logprob: -4.905580520629883
    4. '   ' → logprob: -5.530580520629883
    5. ' **' → logprob: -5.530580520629883
    6. '0' → logprob: -5.780580520629883
    7. '
' → logprob: -7.405580520629883
    8. '*' → logprob: -7.405580520629883
    9. '6' → logprob: -7.905580520629883
    10. ' ' → logprob: -7.905580520629883

Token 456: '20' (ID: 455)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.7820140719413757
    2. '10' → logprob: -0.7820140719413757
    3. 'max' → logprob: -3.2820141315460205
    4. '4' → logprob: -4.032013893127441
    5. '   ' → logprob: -5.282013893127441
    6. ' ' → logprob: -5.407013893127441
    7. 'h' → logprob: -5.657013893127441
    8. '6' → logprob: -5.782013893127441
    9. 'w' → logprob: -5.782013893127441
    10. '5' → logprob: -5.782013893127441

Token 457: '=' (ID: 28)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2851665019989014
    2. ':' → logprob: -1.6601665019989014
    3. '
' → logprob: -2.1601665019989014
    4. ')' → logprob: -2.2851665019989014
    5. '):
' → logprob: -2.9101665019989014
    6. '**' → logprob: -2.9101665019989014
    7. '):' → logprob: -2.9101665019989014
    8. '+' → logprob: -3.0351665019989014
    9. ':
' → logprob: -3.2851665019989014
    10. '0' → logprob: -4.5351667404174805

Token 458: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.06732169538736343
    2. ' ' → logprob: -3.69232177734375
    3. '400' → logprob: -3.94232177734375
    4. '100' → logprob: -5.31732177734375
    5. '40' → logprob: -5.69232177734375
    6. '20' → logprob: -5.69232177734375
    7. '10' → logprob: -6.44232177734375
    8. 'max' → logprob: -6.44232177734375
    9. '0' → logprob: -7.06732177734375
    10. '210' → logprob: -7.31732177734375

Token 459: ' max' (ID: 2999)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.260591596364975
    2. '   ' → logprob: -1.6355916261672974
    3. 'def' → logprob: -3.885591506958008
    4. ')' → logprob: -5.510591506958008
    5. ')
' → logprob: -6.385591506958008
    6. '    
' → logprob: -6.510591506958008
    7. ',' → logprob: -6.635591506958008
    8. '<|end|>' → logprob: -6.635591506958008
    9. '

' → logprob: -7.260591506958008
    10. ' for' → logprob: -7.385591506958008

Token 460: ' cells' (ID: 11242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7282054424285889
    2. '
' → logprob: -0.8532054424285889
    3. 'def' → logprob: -2.728205442428589
    4. '    
' → logprob: -5.228205680847168
    5. '<|end|>' → logprob: -5.603205680847168
    6. ',' → logprob: -5.853205680847168
    7. ':' → logprob: -5.978205680847168
    8. ')' → logprob: -6.353205680847168
    9. ',
' → logprob: -6.478205680847168
    10. ' for' → logprob: -6.728205680847168

Token 461: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11200667172670364
    2. '
' → logprob: -3.112006664276123
    3. 'max' → logprob: -3.862006664276123
    4. 'def' → logprob: -4.612006664276123
    5. 'for' → logprob: -4.862006664276123
    6. 'result' → logprob: -5.612006664276123
    7. '    
' → logprob: -5.612006664276123
    8. ' for' → logprob: -5.987006664276123
    9. '```' → logprob: -5.987006664276123
    10. 'res' → logprob: -5.987006664276123

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020346248522400856
    2. '#' → logprob: -4.520346164703369
    3. ')' → logprob: -5.520346164703369
    4. '```' → logprob: -6.645346164703369
    5. ' ' → logprob: -7.020346164703369
    6. '
' → logprob: -7.645346164703369
    7. '<|end|>' → logprob: -7.645346164703369
    8. '    
' → logprob: -7.770346164703369
    9. '...' → logprob: -7.895346164703369
    10. ' and' → logprob: -8.145346641540527

Token 463: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6296270489692688
    2. '#' (adapté à ' #') → logprob: -1.129626989364624
    3. ' so' → logprob: -2.754626989364624
    4. ')' → logprob: -3.129626989364624
    5. ' #' → logprob: -4.879627227783203
    6. ' and' → logprob: -5.504627227783203
    7. ' return' → logprob: -5.754627227783203
    8. ' max' → logprob: -5.879627227783203
    9. 'max' → logprob: -6.004627227783203
    10. '
' → logprob: -6.004627227783203

Token 464: ' and' (ID: 326)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6254358291625977
    2. '#' → logprob: -1.1254358291625977
    3. ' max' → logprob: -2.8754358291625977
    4. '   ' → logprob: -3.5004358291625977
    5. 'for' → logprob: -4.375435829162598
    6. 'return' → logprob: -4.625435829162598
    7. ' for' → logprob: -4.625435829162598
    8. ' #' → logprob: -5.500435829162598
    9. ' return' → logprob: -5.875435829162598
    10. 'result' → logprob: -6.125435829162598

Token 465: ' sequences' (ID: 45665)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7054699659347534
    2. ' max' → logprob: -1.8304699659347534
    3. ' for' → logprob: -2.455470085144043
    4. 'h' → logprob: -3.330470085144043
    5. 'import' → logprob: -3.580470085144043
    6. 'for' → logprob: -3.830470085144043
    7. '200' → logprob: -3.830470085144043
    8. ' ' → logprob: -3.955470085144043
    9. '#' → logprob: -3.955470085144043
    10. '   ' → logprob: -4.205470085144043

Token 466: ' can't' (ID: 8535)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.331149697303772
    2. ' =' → logprob: -1.581149697303772
    3. '   ' → logprob: -3.8311495780944824
    4. '=' → logprob: -4.331149578094482
    5. 'can' → logprob: -4.456149578094482
    6. ' may' → logprob: -5.331149578094482
    7. ' are' → logprob: -5.831149578094482
    8. '#' → logprob: -5.831149578094482
    9. '_length' → logprob: -5.831149578094482
    10. 'length' → logprob: -6.456149578094482

Token 467: ' overlap' (ID: 56631)
  Prédit: ' overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.8841059803962708
    2. 'over' → logprob: -1.384105920791626
    3. ' exceed' → logprob: -2.009105920791626
    4. ' be' → logprob: -2.759105920791626
    5. 'ex' → logprob: -2.759105920791626
    6. 'be' → logprob: -2.884105920791626
    7. 'have' → logprob: -5.259106159210205
    8. ' have' → logprob: -5.634106159210205
    9. 'repeat' → logprob: -5.634106159210205
    10. 'length' → logprob: -7.134106159210205

Token 468: ' themselves' (ID: 9247)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35659560561180115
    2. ',' → logprob: -1.4815956354141235
    3. '.' → logprob: -3.731595516204834
    4. ')' → logprob: -4.106595516204834
    5. ' themselves' → logprob: -4.856595516204834
    6. ' beyond' → logprob: -5.231595516204834
    7. 'length' → logprob: -5.856595516204834
    8. ' too' → logprob: -6.356595516204834
    9. ' ' → logprob: -6.606595516204834
    10. '_length' → logprob: -6.856595516204834

Token 469: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1952391415834427
    2. '
' → logprob: -2.0702390670776367
    3. ',' → logprob: -3.9452390670776367
    4. ')' → logprob: -4.820239067077637
    5. '<|end|>' → logprob: -4.820239067077637
    6. ' for' → logprob: -5.820239067077637
    7. '    
' → logprob: -5.945239067077637
    8. '.' → logprob: -6.070239067077637
    9. ',
' → logprob: -6.070239067077637
    10. '<|end|>' → logprob: -6.320239067077637

Token 470: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38400575518608093
    2. '#' → logprob: -2.5090057849884033
    3. ' max' → logprob: -2.6340057849884033
    4. 'max' → logprob: -3.0090057849884033
    5. ' return' → logprob: -3.1340057849884033
    6. 'return' → logprob: -4.259005546569824
    7. ' so' → logprob: -4.259005546569824
    8. ' for' → logprob: -4.509005546569824
    9. '
' → logprob: -4.884005546569824
    10. 'result' → logprob: -5.759005546569824

Token 471: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.24332813918590546
    2. 'for' → logprob: -2.618328094482422
    3. 'return' → logprob: -2.993328094482422
    4. ' max' → logprob: -3.368328094482422
    5. ' for' → logprob: -3.618328094482422
    6. '   ' → logprob: -4.243328094482422
    7. ' return' → logprob: -4.993328094482422
    8. 'best' → logprob: -5.868328094482422
    9. 'result' → logprob: -6.368328094482422
    10. '#' → logprob: -6.618328094482422

Token 472: ' length' (ID: 5517)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.455933541059494
    2. '_length' → logprob: -1.2059335708618164
    3. 'length' → logprob: -3.2059335708618164
    4. 'len' → logprob: -3.7059335708618164
    5. '```' → logprob: -7.080933570861816
    6. '_seq' → logprob: -8.205933570861816
    7. ' length' → logprob: -8.705933570861816
    8. '   ' → logprob: -9.205933570861816
    9. '_' → logprob: -10.205933570861816
    10. '_possible' → logprob: -10.330933570861816

Token 473: ' <=' (ID: 5017)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07131216675043106
    2. '=' → logprob: -2.696312189102173
    3. '   ' → logprob: -7.696311950683594
    4. '=w' → logprob: -8.196311950683594
    5. ')' → logprob: -8.821311950683594
    6. ' is' → logprob: -8.946311950683594
    7. ' <=' → logprob: -9.321311950683594
    8. 'w' → logprob: -10.071311950683594
    9. '=h' → logprob: -10.071311950683594
    10. '=max' → logprob: -10.196311950683594

Token 474: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.11786513775587082
    2. 'min' → logprob: -2.7428650856018066
    3. 'max' → logprob: -3.1178650856018066
    4. '200' → logprob: -6.617865085601807
    5. '(h' → logprob: -7.742865085601807
    6. ' h' → logprob: -8.367865562438965
    7. '20' → logprob: -9.117865562438965
    8. '100' → logprob: -9.242865562438965
    9. ' min' → logprob: -9.242865562438965
    10. ' max' → logprob: -9.867865562438965

Token 475: '*w' (ID: 147727)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1512659788131714
    2. '   ' → logprob: -1.1512659788131714
    3. '+' → logprob: -2.026266098022461
    4. '*' → logprob: -2.651266098022461
    5. 'w' → logprob: -3.026266098022461
    6. 'def' → logprob: -3.401266098022461
    7. ' +' → logprob: -3.651266098022461
    8. ':' → logprob: -4.526266098022461
    9. ',' → logprob: -4.901266098022461
    10. '**' → logprob: -5.151266098022461

Token 476: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48891758918762207
    2. '   ' → logprob: -1.113917589187622
    3. ')' → logprob: -3.238917589187622
    4. '+' → logprob: -5.488917350769043
    5. '<|end|>' → logprob: -5.863917350769043
    6. '    
' → logprob: -6.113917350769043
    7. ')
' → logprob: -6.738917350769043
    8. ',' → logprob: -6.738917350769043
    9. 'def' → logprob: -6.863917350769043
    10. ' for' → logprob: -6.863917350769043

Token 477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016250547021627426
    2. 'max' → logprob: -4.7662506103515625
    3. '
' → logprob: -5.5162506103515625
    4. 'for' → logprob: -6.3912506103515625
    5. ' for' → logprob: -7.6412506103515625
    6. '    
' → logprob: -7.6412506103515625
    7. ' max' → logprob: -7.8912506103515625
    8. 'result' → logprob: -8.516250610351562
    9. '```' → logprob: -9.266250610351562
    10. 'answer' → logprob: -10.016250610351562

Token 478: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7428398132324219
    2. 'for' → logprob: -1.3678398132324219
    3. 'res' → logprob: -2.617839813232422
    4. 'result' → logprob: -2.992839813232422
    5. '   ' → logprob: -3.367839813232422
    6. 'ans' → logprob: -3.867839813232422
    7. 'results' → logprob: -3.992839813232422
    8. ' for' → logprob: -3.992839813232422
    9. ' max' → logprob: -4.242839813232422
    10. 'visited' → logprob: -4.242839813232422

Token 479: ' We'll' (ID: 46830)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5099067687988281
    2. 'for' → logprob: -2.384906768798828
    3. 'results' → logprob: -2.384906768798828
    4. 'res' → logprob: -2.509906768798828
    5. 'result' → logprob: -3.134906768798828
    6. ' max' → logprob: -3.634906768798828
    7. 'visited' → logprob: -3.884906768798828
    8. 'ans' → logprob: -4.384906768798828
    9. ' for' → logprob: -5.134906768798828
    10. ' res' → logprob: -5.509906768798828

Token 480: ' check' (ID: 2371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.178210735321045
    2. ' for' → logprob: -1.678210735321045
    3. 'for' → logprob: -1.803210735321045
    4. 'def' → logprob: -2.803210735321045
    5. 'result' → logprob: -2.803210735321045
    6. 'res' → logprob: -2.928210735321045
    7. ' result' → logprob: -3.678210735321045
    8. ' res' → logprob: -3.803210735321045
    9. 'answer' → logprob: -3.803210735321045
    10. 'max' → logprob: -3.928210735321045

Token 481: ' lengths' (ID: 51957)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3062325716018677
    2. ' for' → logprob: -1.5562325716018677
    3. 'length' → logprob: -3.681232452392578
    4. 'max' → logprob: -4.306232452392578
    5. ' lengths' → logprob: -4.931232452392578
    6. ' length' → logprob: -6.056232452392578
    7. ' max' → logprob: -6.556232452392578
    8. 'all' → logprob: -7.181232452392578
    9. '   ' → logprob: -7.181232452392578
    10. 'from' → logprob: -7.681232452392578

Token 482: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6001043319702148
    2. '=' → logprob: -1.3501043319702148
    3. 'for' → logprob: -1.9751043319702148
    4. 'from' → logprob: -3.225104331970215
    5. ' for' → logprob: -4.975104331970215
    6. '   ' → logprob: -6.225104331970215
    7. 'range' → logprob: -6.475104331970215
    8. ' in' → logprob: -7.225104331970215
    9. '_range' → logprob: -7.350104331970215
    10. ' from' → logprob: -7.725104331970215

Token 483: ' longest' (ID: 37511)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11479406803846359
    2. 'max' → logprob: -3.3647940158843994
    3. 'min' → logprob: -3.4897940158843994
    4. 'h' → logprob: -3.7397940158843994
    5. '2' → logprob: -4.6147942543029785
    6. ' ' → logprob: -5.4897942543029785
    7. ' min' → logprob: -6.2397942543029785
    8. ' max' → logprob: -6.3647942543029785
    9. ' h' → logprob: -6.4897942543029785
    10. 'length' → logprob: -9.11479377746582

Token 484: ' possible' (ID: 4149)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.3531690835952759
    2. ',' → logprob: -1.8531690835952759
    3. ' h' → logprob: -3.7281689643859863
    4. ' ' → logprob: -3.9781689643859863
    5. ' ,' → logprob: -4.228168964385986
    6. 'down' → logprob: -4.353168964385986
    7. 'from' → logprob: -4.478168964385986
    8. ' down' → logprob: -4.478168964385986
    9. '(length' → logprob: -4.853168964385986
    10. '(max' → logprob: -5.228168964385986

Token 485: ' down' (ID: 1917)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6257300972938538
    2. ' for' → logprob: -1.250730037689209
    3. '_len' → logprob: -2.750730037689209
    4. '_length' → logprob: -3.375730037689209
    5. '   ' → logprob: -4.375730037689209
    6. ' in' → logprob: -4.500730037689209
    7. '_' → logprob: -4.625730037689209
    8. '_for' → logprob: -4.625730037689209
    9. '_range' → logprob: -4.750730037689209
    10. ' =' → logprob: -5.000730037689209

Token 486: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4991222620010376
    2. ' to' → logprob: -1.4991222620010376
    3. 'from' → logprob: -2.249122142791748
    4. 'to' → logprob: -2.999122142791748
    5. 'wards' → logprob: -4.749122142791748
    6. ' from' → logprob: -6.374122142791748
    7. '=' → logprob: -7.124122142791748
    8. 'def' → logprob: -7.249122142791748
    9. ',' → logprob: -7.499122142791748
    10. 'ward' → logprob: -7.499122142791748

Token 487: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043880805373191833
    2. 'min' → logprob: -3.5438807010650635
    3. 'max' → logprob: -4.418880939483643
    4. '2' → logprob: -7.668880939483643
    5. ' min' → logprob: -7.918880939483643
    6. ' ' → logprob: -8.043880462646484
    7. 'h' → logprob: -8.543880462646484
    8. '   ' → logprob: -8.668880462646484
    9. ' max' → logprob: -8.793880462646484
    10. 'length' → logprob: -8.918880462646484

Token 488: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007362506585195661
    2. 'max' → logprob: -7.875736236572266
    3. 'min' → logprob: -8.875736236572266
    4. '2' → logprob: -9.250736236572266
    5. 'length' → logprob: -9.750736236572266
    6. 'short' → logprob: -10.500736236572266
    7. ' ' → logprob: -11.000736236572266
    8. '```' → logprob: -11.750736236572266
    9. 'h' → logprob: -12.875736236572266
    10. '   ' → logprob: -12.875736236572266

Token 489: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6036303639411926
    2. ' for' → logprob: -1.2286303043365479
    3. 'for' → logprob: -2.228630304336548
    4. ':' → logprob: -3.728630304336548
    5. '
' → logprob: -3.853630304336548
    6. ',' → logprob: -5.353630542755127
    7. ' ' → logprob: -6.978630542755127
    8. '    
' → logprob: -7.853630542755127
    9. '	for' → logprob: -7.978630542755127
    10. 'def' → logprob: -8.103630065917969

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045542359352111816
    2. ' for' → logprob: -3.1705422401428223
    3. 'for' → logprob: -6.545542240142822
    4. '
' → logprob: -7.045542240142822
    5. '    
' → logprob: -9.29554271697998
    6. ':' → logprob: -10.04554271697998
    7. ',' → logprob: -10.42054271697998
    8. 'def' → logprob: -10.42054271697998
    9. '	for' → logprob: -11.67054271697998
    10. '```' → logprob: -11.92054271697998

Token 491: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.581917405128479
    2. 'for' → logprob: -0.956917405128479
    3. '   ' → logprob: -2.9569172859191895
    4. '
' → logprob: -5.3319172859191895
    5. 'length' → logprob: -9.081917762756348
    6. ' length' → logprob: -9.956917762756348
    7. ' lengths' → logprob: -10.331917762756348
    8. 'max' (adapté à ' max') → logprob: -10.831917762756348
    9. '```' → logprob: -11.456917762756348
    10. '    
' → logprob: -11.456917762756348

Token 492: '_search' (ID: 23642)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.008837451227009296
    2. '_length' → logprob: -4.7588372230529785
    3. '_' → logprob: -8.758837699890137
    4. 'len' → logprob: -10.133837699890137
    5. '_l' → logprob: -10.883837699890137
    6. '_seq' → logprob: -13.383837699890137
    7. ' _' → logprob: -14.008837699890137
    8. '_possible' → logprob: -14.133837699890137
    9. 'length' → logprob: -14.383837699890137
    10. '_max' → logprob: -14.508837699890137

Token 493: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.06362032890319824
    2. '_length' → logprob: -2.8136203289031982
    3. '_' → logprob: -6.688620567321777
    4. '=' → logprob: -8.063620567321777
    5. ' =' → logprob: -9.688620567321777
    6. '_l' → logprob: -11.438620567321777
    7. 'len' → logprob: -12.313620567321777
    8. '=_' → logprob: -12.438620567321777
    9. '   ' → logprob: -13.438620567321777
    10. ' _' → logprob: -13.688620567321777

Token 494: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519373297691345
    2. '=' → logprob: -1.5019373893737793
    3. ' ' → logprob: -12.501936912536621
    4. ',' → logprob: -13.251936912536621
    5. '=int' → logprob: -13.376936912536621
    6. '=len' → logprob: -14.876936912536621
    7. '=max' → logprob: -15.626936912536621
    8. ':' → logprob: -15.751936912536621
    9. '   ' → logprob: -15.751936912536621
    10. ' =
' → logprob: -16.251937866210938

Token 495: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00024512779782526195
    2. ' h' → logprob: -8.625245094299316
    3. 'min' → logprob: -9.750245094299316
    4. '   ' → logprob: -12.625245094299316
    5. ' min' → logprob: -13.500245094299316
    6. '	h' → logprob: -13.875245094299316
    7. 'max' → logprob: -14.000245094299316
    8. ' ' → logprob: -14.875245094299316
    9. '(h' → logprob: -16.125246047973633
    10. '
' → logprob: -16.375246047973633

Token 496: '*w' (ID: 147727)
  Prédit: '*w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*w' → logprob: -0.08537856489419937
    2. '*' → logprob: -3.085378646850586
    3. ' *' → logprob: -3.960378646850586
    4. 'w' → logprob: -4.585378646850586
    5. '<|end|>' → logprob: -5.085378646850586
    6. ')' → logprob: -8.960378646850586
    7. '
' → logprob: -9.085378646850586
    8. '   ' → logprob: -9.210378646850586
    9. ' ' → logprob: -9.460378646850586
    10. ' w' → logprob: -10.335378646850586

Token 497: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02176005207002163
    2. '+' → logprob: -4.521759986877441
    3. '   ' → logprob: -5.521759986877441
    4. ' +' → logprob: -6.146759986877441
    5. 'for' → logprob: -6.771759986877441
    6. '    
' → logprob: -7.021759986877441
    7. '<|end|>' → logprob: -7.021759986877441
    8. ' for' → logprob: -7.146759986877441
    9. '  
' → logprob: -8.896759986877441
    10. '<|end|>' → logprob: -9.021759986877441

Token 498: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2553735077381134
    2. '   ' → logprob: -1.755373477935791
    3. ' for' → logprob: -3.255373477935791
    4. '    
' → logprob: -5.005373477935791
    5. 'for' → logprob: -6.005373477935791
    6. ',' → logprob: -6.880373477935791
    7. '<|end|>' → logprob: -6.880373477935791
    8. '  
' → logprob: -7.130373477935791
    9. ')' → logprob: -7.880373477935791
    10. ':' → logprob: -8.00537395477295

Token 499: ' found' (ID: 2491)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01697850413620472
    2. ' for' → logprob: -4.266978740692139
    3. 'result' → logprob: -6.266978740692139
    4. 'res' → logprob: -8.01697826385498
    5. 'answer' → logprob: -8.26697826385498
    6. '   ' → logprob: -9.39197826385498
    7. '
' → logprob: -10.01697826385498
    8. 'found' (adapté à ' found') → logprob: -10.01697826385498
    9. 'max' → logprob: -10.14197826385498
    10. 'results' → logprob: -10.39197826385498

Token 500: ' =' (ID: 314)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.1170626878738403
    2. '_' → logprob: -1.2420626878738403
    3. '_length' → logprob: -1.8670626878738403
    4. ' =' → logprob: -1.9920626878738403
    5. '=' → logprob: -2.492062568664551
    6. '_seq' → logprob: -5.117062568664551
    7. '_max' → logprob: -6.617062568664551
    8. '_sequence' → logprob: -7.117062568664551
    9. '_token' → logprob: -7.492062568664551
    10. '_=' → logprob: -8.11706256866455

Token 501: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2339189201593399
    2. 'False' → logprob: -2.1089189052581787
    3. ' ' → logprob: -3.2339189052581787
    4. '-' → logprob: -3.6089189052581787
    5. 'None' → logprob: -4.358919143676758
    6. ' False' → logprob: -5.608919143676758
    7. ' None' → logprob: -6.608919143676758
    8. ' -' → logprob: -6.858919143676758
    9. '''' → logprob: -6.983919143676758
    10. '""' → logprob: -7.108919143676758

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16500400006771088
    2. ' for' → logprob: -2.040004014968872
    3. 'for' → logprob: -4.290003776550293
    4. ':' → logprob: -5.665003776550293
    5. '    
' → logprob: -6.665003776550293
    6. 'def' → logprob: -6.790003776550293
    7. '
' → logprob: -7.040003776550293
    8. '<|end|>' → logprob: -8.040003776550293
    9. ',' → logprob: -8.415003776550293
    10. '  
' → logprob: -8.540003776550293

Token 503: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7054853439331055
    2. 'for' → logprob: -0.7054853439331055
    3. '   ' → logprob: -4.4554853439331055
    4. '
' → logprob: -7.5804853439331055
    5. '    
' → logprob: -10.205485343933105
    6. '```' → logprob: -10.205485343933105
    7. ' 
' → logprob: -10.580485343933105
    8. 'def' → logprob: -11.580485343933105
    9. 'length' → logprob: -12.205485343933105
    10. '	for' → logprob: -12.330485343933105

Token 504: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004701395519077778
    2. ' for' → logprob: -5.379701614379883
    3. '   ' → logprob: -9.629701614379883
    4. 'length' → logprob: -11.254701614379883
    5. '```' → logprob: -13.879701614379883
    6. '
' → logprob: -14.379701614379883
    7. 'def' → logprob: -14.629701614379883
    8. 'from' → logprob: -15.504701614379883
    9. 'visited' → logprob: -16.504701614379883
    10. '    
' → logprob: -17.004701614379883

Token 505: 'compute' (ID: 54521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020132703706622124
    2. 'v' → logprob: -4.270132541656494
    3. '   ' → logprob: -5.770132541656494
    4. ' for' → logprob: -6.770132541656494
    5. 'dict' → logprob: -8.520133018493652
    6. 'f' → logprob: -8.520133018493652
    7. 'compute' → logprob: -8.520133018493652
    8. 'sum' → logprob: -8.645133018493652
    9. 'pare' → logprob: -9.020133018493652
    10. 'pend' → logprob: -9.395133018493652

Token 506: ' sequences' (ID: 45665)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.0187269449234009
    2. 'for' → logprob: -1.5187269449234009
    3. 'dp' → logprob: -2.3937268257141113
    4. 'positions' → logprob: -2.3937268257141113
    5. 'pos' → logprob: -2.8937268257141113
    6. ' for' → logprob: -3.2687268257141113
    7. ' prefix' → logprob: -3.3937268257141113
    8. 'rows' → logprob: -3.7687268257141113
    9. 'row' → logprob: -3.8937268257141113
    10. 'counts' → logprob: -4.393726825714111

Token 507: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3314169943332672
    2. 'for' → logprob: -1.8314169645309448
    3. '=' → logprob: -2.4564170837402344
    4. ' for' → logprob: -3.5814170837402344
    5. '=[]' → logprob: -6.206417083740234
    6. '   ' → logprob: -6.331417083740234
    7. ' sequences' → logprob: -7.206417083740234
    8. ':' → logprob: -7.331417083740234
    9. ',' → logprob: -7.581417083740234
    10. '=[]
' → logprob: -7.956417083740234

Token 508: ' all' (ID: 722)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4355102777481079
    2. 'r' → logprob: -1.560510277748108
    3. 'dir' → logprob: -3.0605101585388184
    4. 'l' → logprob: -3.6855101585388184
    5. 'd' → logprob: -4.060510158538818
    6. 'direction' → logprob: -4.310510158538818
    7. ' length' → logprob: -4.435510158538818
    8. '_' → logprob: -4.560510158538818
    9. 'dire' → logprob: -5.435510158538818
    10. ' r' → logprob: -6.435510158538818

Token 509: ' starting' (ID: 8601)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.7330359816551208
    2. 'dire' → logprob: -1.2330360412597656
    3. 'r' → logprob: -1.7330360412597656
    4. ' lengths' → logprob: -4.233036041259766
    5. 'length' → logprob: -4.233036041259766
    6. ' r' → logprob: -4.358036041259766
    7. 'positions' → logprob: -5.733036041259766
    8. ' positions' → logprob: -6.108036041259766
    9. ' length' → logprob: -7.233036041259766
    10. 'direction' → logprob: -7.483036041259766

Token 510: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.9354919791221619
    2. 'positions' → logprob: -0.9354919791221619
    3. ' points' → logprob: -2.1854920387268066
    4. ' positions' → logprob: -2.8104920387268066
    5. 'r' → logprob: -3.1854920387268066
    6. ' r' → logprob: -6.810492038726807
    7. 'rows' → logprob: -10.435491561889648
    8. 'cells' → logprob: -10.435491561889648
    9. 'pos' → logprob: -10.935491561889648
    10. ' ' → logprob: -11.560491561889648

Token 511: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7654410600662231
    2. 'for' → logprob: -1.0154410600662231
    3. ' and' → logprob: -2.7654409408569336
    4. ',' → logprob: -2.8904409408569336
    5. '   ' → logprob: -3.1404409408569336
    6. 'and' → logprob: -5.265440940856934
    7. '
' → logprob: -5.515440940856934
    8. ',
' → logprob: -8.015440940856934
    9. '<|end|>' → logprob: -8.140440940856934
    10. 'def' → logprob: -9.015440940856934

Token 512: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.019338982179760933
    2. ' directions' → logprob: -4.394339084625244
    3. '#' → logprob: -5.144339084625244
    4. '   ' → logprob: -7.769339084625244
    5. 'for' → logprob: -8.394338607788086
    6. 'length' → logprob: -9.144338607788086
    7. 'direction' → logprob: -9.644338607788086
    8. 'd' → logprob: -10.269338607788086
    9. 'all' → logprob: -10.519338607788086
    10. ' #' → logprob: -10.519338607788086

Token 513: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8710016012191772
    2. '   ' → logprob: -1.4960016012191772
    3. ' for' → logprob: -2.121001720428467
    4. ' and' → logprob: -2.371001720428467
    5. 'for' → logprob: -2.746001720428467
    6. '
' → logprob: -2.871001720428467
    7. ' =' → logprob: -4.996001720428467
    8. ',
' → logprob: -5.246001720428467
    9. '=' → logprob: -5.746001720428467
    10. 'and' → logprob: -5.996001720428467

Token 514: ' lengths' (ID: 51957)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0017710927641019225
    2. ' lengths' → logprob: -6.501770973205566
    3. 'all' → logprob: -8.751770973205566
    4. '#' → logprob: -10.626770973205566
    5. ' length' → logprob: -11.001770973205566
    6. 'possible' → logprob: -11.126770973205566
    7. 'max' → logprob: -11.251770973205566
    8. 'for' → logprob: -11.501770973205566
    9. '   ' → logprob: -11.751770973205566
    10. 'sequence' → logprob: -12.251770973205566

Token 515: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39136579632759094
    2. ' for' → logprob: -1.3913657665252686
    3. 'for' → logprob: -3.1413657665252686
    4. '
' → logprob: -3.6413657665252686
    5. '    
' → logprob: -5.266366004943848
    6. 'def' → logprob: -9.141366004943848
    7. '<|end|>' → logprob: -9.391366004943848
    8. ',' → logprob: -9.766366004943848
    9. '	for' → logprob: -9.891366004943848
    10. ':' → logprob: -10.016366004943848

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12782524526119232
    2. ' for' → logprob: -2.2528252601623535
    3. 'for' → logprob: -4.2528252601623535
    4. '
' → logprob: -7.5028252601623535
    5. '    
' → logprob: -9.627824783325195
    6. 'def' → logprob: -10.502824783325195
    7. '```' → logprob: -12.127824783325195
    8. 'import' → logprob: -12.752824783325195
    9. ',' → logprob: -12.877824783325195
    10. ' 
' → logprob: -13.377824783325195

Token 517: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10267714411020279
    2. 'for' → logprob: -2.8526771068573
    3. '   ' → logprob: -3.2276771068573
    4. '
' → logprob: -8.852677345275879
    5. '    
' → logprob: -10.227677345275879
    6. ' 
' → logprob: -10.477677345275879
    7. ' length' → logprob: -11.352677345275879
    8. '	for' → logprob: -11.977677345275879
    9. '```' → logprob: -11.977677345275879
    10. 'length' → logprob: -12.977677345275879

Token 518: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2035502791404724
    2. ' for' → logprob: -1.7035503387451172
    3. '   ' → logprob: -6.578550338745117
    4. 'from' → logprob: -8.078550338745117
    5. ' sequences' → logprob: -8.953550338745117
    6. 'visited' → logprob: -9.453550338745117
    7. 'se' → logprob: -10.453550338745117
    8. 'dp' → logprob: -10.453550338745117
    9. ' from' → logprob: -10.578550338745117
    10. 'import' → logprob: -10.953550338745117

Token 519: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39834436774253845
    2. ' for' → logprob: -1.1483443975448608
    3. '
' → logprob: -5.52334451675415
    4. ' avoid' → logprob: -6.77334451675415
    5. 'range' → logprob: -6.77334451675415
    6. 'def' → logprob: -6.89834451675415
    7. 'avoid' → logprob: -7.52334451675415
    8. ' range' → logprob: -7.77334451675415
    9. ' ' → logprob: -7.89834451675415
    10. 'find' → logprob: -8.148344039916992

Token 520: ' this' (ID: 495)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3376253545284271
    2. ' for' → logprob: -1.3376253843307495
    3. '   ' → logprob: -3.96262526512146
    4. ' ' → logprob: -6.712625503540039
    5. ' range' → logprob: -6.712625503540039
    6. ' i' → logprob: -6.837625503540039
    7. 'i' → logprob: -8.337625503540039
    8. ':' → logprob: -8.712625503540039
    9. '    ' → logprob: -8.837625503540039
    10. ' lengths' → logprob: -8.837625503540039

Token 521: ' efficiently' (ID: 34229)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9984521865844727
    2. ':' → logprob: -1.4984521865844727
    3. ' for' → logprob: -1.7484521865844727
    4. ',' → logprob: -1.7484521865844727
    5. ':
' → logprob: -3.3734521865844727
    6. '   ' → logprob: -3.7484521865844727
    7. ',
' → logprob: -7.248452186584473
    8. '
' → logprob: -7.623452186584473
    9. 'import' → logprob: -7.623452186584473
    10. '#' → logprob: -9.373452186584473

Token 522: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3242086172103882
    2. ' for' → logprob: -1.6992086172103882
    3. ',' → logprob: -2.8242087364196777
    4. '
' → logprob: -4.074208736419678
    5. 'for' → logprob: -4.699208736419678
    6. ':' → logprob: -5.824208736419678
    7. 'import' → logprob: -6.199208736419678
    8. ',
' → logprob: -6.324208736419678
    9. '    
' → logprob: -7.324208736419678
    10. ':
' → logprob: -8.07420825958252

Token 523: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5028814673423767
    2. ' for' → logprob: -1.0028815269470215
    3. '   ' → logprob: -3.8778815269470215
    4. '#' → logprob: -5.8778815269470215
    5. ' sequences' → logprob: -7.1278815269470215
    6. 'return' → logprob: -7.2528815269470215
    7. '
' → logprob: -7.2528815269470215
    8. ' #' → logprob: -7.5028815269470215
    9. ' return' → logprob: -7.5028815269470215
    10. 'import' → logprob: -8.377881050109863

Token 524: ' store' (ID: 4897)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4642270803451538
    2. ' for' → logprob: -1.2142270803451538
    3. '   ' → logprob: -3.2142271995544434
    4. 'import' → logprob: -4.339227199554443
    5. 'continue' → logprob: -5.089227199554443
    6. ' continue' → logprob: -5.214227199554443
    7. ' can' → logprob: -6.589227199554443
    8. ' will' → logprob: -6.714227199554443
    9. ' need' → logprob: -6.714227199554443
    10. 'def' → logprob: -6.714227199554443

Token 525: ' sequences' (ID: 45665)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8419851064682007
    2. 'se' → logprob: -1.8419851064682007
    3. ' all' → logprob: -2.4669852256774902
    4. 'for' → logprob: -2.4669852256774902
    5. ' sequences' → logprob: -2.5919852256774902
    6. 'prefix' → logprob: -3.5919852256774902
    7. 'seq' → logprob: -3.7169852256774902
    8. 'grid' → logprob: -3.9669852256774902
    9. 'dp' → logprob: -3.9669852256774902
    10. 'the' → logprob: -4.21698522567749

Token 526: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061603810638189316
    2. '=' → logprob: -3.3116037845611572
    3. 'for' → logprob: -4.936604022979736
    4. 's' → logprob: -5.561604022979736
    5. '=[]' → logprob: -6.186604022979736
    6. '_lengths' → logprob: -6.186604022979736
    7. ' for' → logprob: -7.061604022979736
    8. '_' → logprob: -7.311604022979736
    9. '_length' → logprob: -7.561604022979736
    10. '=[]
' → logprob: -7.561604022979736

Token 527: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027946732938289642
    2. ' a' → logprob: -4.777946949005127
    3. 'dict' → logprob: -4.777946949005127
    4. '{}' → logprob: -6.027946949005127
    5. '[]' → logprob: -6.402946949005127
    6. 'dictionary' → logprob: -6.777946949005127
    7. 'arrays' → logprob: -6.902946949005127
    8. ' dictionaries' → logprob: -7.152946949005127
    9. '[][]' → logprob: -7.277946949005127
    10. 'd' → logprob: -7.652946949005127

Token 528: ' dict' (ID: 11878)
  Prédit: 'dictionary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dictionary' → logprob: -0.7075129151344299
    2. 'dict' → logprob: -0.8325129151344299
    3. 'list' → logprob: -3.082512855529785
    4. 'default' → logprob: -4.082512855529785
    5. ' dictionary' → logprob: -5.082512855529785
    6. '[]' → logprob: -7.332512855529785
    7. ' dict' → logprob: -7.707512855529785
    8. 'set' → logprob: -7.707512855529785
    9. 'for' → logprob: -7.707512855529785
    10. '[][]' → logprob: -8.582512855529785

Token 529: ' length' (ID: 5517)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.3869047164916992
    2. 'se' → logprob: -2.136904716491699
    3. '_sequences' → logprob: -3.011904716491699
    4. ' =' → logprob: -3.136904716491699
    5. 'from' → logprob: -3.511904716491699
    6. '=' → logprob: -3.886904716491699
    7. 'seq' → logprob: -4.511904716491699
    8. ' from' → logprob: -5.261904716491699
    9. ':' → logprob: -5.386904716491699
    10. ',' → logprob: -5.386904716491699

Token 530: '->' (ID: 609)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1109031438827515
    2. '_to' → logprob: -1.3609031438827515
    3. '_' → logprob: -1.6109031438827515
    4. 's' → logprob: -2.860903263092041
    5. '=' → logprob: -3.235903263092041
    6. '_lengths' → logprob: -3.735903263092041
    7. '_keys' → logprob: -3.860903263092041
    8. ' =' → logprob: -4.110903263092041
    9. '_sequences' → logprob: -4.235903263092041
    10. '_counts' → logprob: -5.235903263092041

Token 531: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.7259230613708496
    2. '{' → logprob: -1.4759230613708496
    3. 'dict' → logprob: -1.4759230613708496
    4. 'default' → logprob: -3.7259230613708496
    5. 'list' → logprob: -3.8509230613708496
    6. 'set' → logprob: -4.60092306137085
    7. '[]' → logprob: -7.22592306137085
    8. 'positions' → logprob: -7.22592306137085
    9. ' dict' → logprob: -7.85092306137085
    10. '{
' → logprob: -8.225923538208008

Token 532: ' seq' (ID: 26775)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.7827796936035156
    2. '=' → logprob: -2.0327796936035156
    3. '[int' → logprob: -2.1577796936035156
    4. ' of' → logprob: -2.4077796936035156
    5. '[str' → logprob: -2.6577796936035156
    6. 'of' → logprob: -2.6577796936035156
    7. ',' → logprob: -3.1577796936035156
    8. '<int' → logprob: -3.2827796936035156
    9. '<|end|>' → logprob: -3.2827796936035156
    10. '_of' → logprob: -3.4077796936035156

Token 533: ' ->' (ID: 2747)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6196836233139038
    2. ' =' → logprob: -1.3696836233139038
    3. '={}' → logprob: -2.2446837425231934
    4. ',' → logprob: -3.6196837425231934
    5. ']' → logprob: -3.8696837425231934
    6. '={' → logprob: -4.494683742523193
    7. '{' → logprob: -5.369683742523193
    8. ')' → logprob: -5.369683742523193
    9. '=[]' → logprob: -5.869683742523193
    10. '   ' → logprob: -6.119683742523193

Token 534: ' list' (ID: 1562)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.7737246751785278
    2. 'list' → logprob: -1.2737246751785278
    3. 'set' → logprob: -1.5237246751785278
    4. 'positions' → logprob: -3.6487245559692383
    5. 'count' → logprob: -5.398724555969238
    6. '[' → logprob: -5.898724555969238
    7. '[]' → logprob: -6.648724555969238
    8. '{' → logprob: -6.648724555969238
    9. 'True' → logprob: -6.898724555969238
    10. '(' → logprob: -7.273724555969238

Token 535: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5690122246742249
    2. 'of' → logprob: -2.56901216506958
    3. ')' → logprob: -2.81901216506958
    4. '<|end|>' → logprob: -2.94401216506958
    5. '[' → logprob: -3.31901216506958
    6. '_of' → logprob: -3.44401216506958
    7. '   ' → logprob: -3.44401216506958
    8. '[]' → logprob: -3.94401216506958
    9. '_positions' → logprob: -4.06901216506958
    10. '<|end|>' → logprob: -4.19401216506958

Token 536: ' (' (ID: 350)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.11148428916931152
    2. '(r' → logprob: -2.4864842891693115
    3. '(' → logprob: -3.9864842891693115
    4. ' positions' → logprob: -6.736484527587891
    5. '(start' → logprob: -6.736484527587891
    6. '(pos' → logprob: -7.486484527587891
    7. '(rc' → logprob: -8.48648452758789
    8. ' (' → logprob: -8.98648452758789
    9. 'pos' → logprob: -9.23648452758789
    10. '[(' → logprob: -9.36148452758789

Token 537: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.30074575543403625
    2. '(r' → logprob: -1.8007457256317139
    3. ' (' → logprob: -2.550745725631714
    4. ' r' → logprob: -4.800745964050293
    5. '(' → logprob: -5.425745964050293
    6. ')' → logprob: -6.550745964050293
    7. ' ' → logprob: -6.675745964050293
    8. 'positions' → logprob: -7.800745964050293
    9. ' positions' → logprob: -8.050745964050293
    10. '   ' → logprob: -9.300745964050293

Token 538: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.04355639964342117
    2. ',' → logprob: -3.1685564517974854
    3. ' ,' → logprob: -8.293556213378906
    4. ',w' → logprob: -8.418556213378906
    5. 'c' → logprob: -10.418556213378906
    6. ',s' → logprob: -10.543556213378906
    7. ',
' → logprob: -11.418556213378906
    8. 's' → logprob: -12.668556213378906
    9. ')' → logprob: -13.043556213378906
    10. '),(' → logprob: -13.293556213378906

Token 539: ',d' (ID: 26159)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03438716009259224
    2. ',' → logprob: -4.034387111663818
    3. '),' → logprob: -5.034387111663818
    4. ')s' → logprob: -5.534387111663818
    5. 's' → logprob: -5.659387111663818
    6. ',s' → logprob: -6.784387111663818
    7. ')}' → logprob: -8.534387588500977
    8. ',d' → logprob: -8.534387588500977
    9. ')}}' → logprob: -8.659387588500977
    10. ')
' → logprob: -9.034387588500977

Token 540: ')
' (ID: 446)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31769251823425293
    2. 'ir' → logprob: -1.317692518234253
    3. 'irection' → logprob: -6.692692756652832
    4. 'irections' → logprob: -6.692692756652832
    5. ',' → logprob: -7.317692756652832
    6. 'R' → logprob: -8.192692756652832
    7. ')' → logprob: -8.317692756652832
    8. '),' → logprob: -8.692692756652832
    9. 'dr' → logprob: -8.942692756652832
    10. 'irs' → logprob: -8.942692756652832

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27840226888656616
    2. '
' → logprob: -2.528402328491211
    3. 'for' → logprob: -3.278402328491211
    4. 'def' → logprob: -3.903402328491211
    5. '{' → logprob: -4.153402328491211
    6. ' =' → logprob: -4.278402328491211
    7. ' for' → logprob: -4.528402328491211
    8. '=' → logprob: -4.653402328491211
    9. ',' → logprob: -4.903402328491211
    10. '```' → logprob: -5.028402328491211

Token 542: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7435417175292969
    2. 'length' → logprob: -1.7435417175292969
    3. 'se' → logprob: -1.8685417175292969
    4. ' sequences' → logprob: -1.9935417175292969
    5. 'seq' → logprob: -2.618541717529297
    6. 'sequence' → logprob: -2.868541717529297
    7. '
' → logprob: -3.118541717529297
    8. 'for' → logprob: -3.118541717529297
    9. 'from' → logprob: -3.743541717529297
    10. ' for' → logprob: -4.118541717529297

Token 543: ' But' (ID: 3072)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.7281053066253662
    2. 'seq' → logprob: -0.7281053066253662
    3. 'from' → logprob: -4.603105545043945
    4. 'length' → logprob: -4.978105545043945
    5. 'sequence' → logprob: -5.103105545043945
    6. 'for' → logprob: -5.853105545043945
    7. 'seen' → logprob: -6.228105545043945
    8. 'dp' → logprob: -6.353105545043945
    9. 'all' → logprob: -7.228105545043945
    10. ' sequences' → logprob: -7.603105545043945

Token 544: ' memory' (ID: 8197)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1714807748794556
    2. 'for' → logprob: -1.7964807748794556
    3. ')' → logprob: -1.9214807748794556
    4. 'max' → logprob: -2.546480655670166
    5. '#' → logprob: -2.671480655670166
    6. ' max' → logprob: -3.171480655670166
    7. ' we' → logprob: -3.796480655670166
    8. ' the' → logprob: -4.046480655670166
    9. '    ' → logprob: -4.046480655670166
    10. ' ' → logprob: -4.171480655670166

Token 545: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19890014827251434
    2. ' =' → logprob: -2.3239002227783203
    3. '_' → logprob: -3.5739002227783203
    4. ',' → logprob: -4.07390022277832
    5. '.' → logprob: -5.19890022277832
    6. 'constraints' → logprob: -5.32390022277832
    7. ')' → logprob: -5.44890022277832
    8. '=[]' → logprob: -6.19890022277832
    9. '<|end|>' → logprob: -6.19890022277832
    10. '<|end|>' → logprob: -6.57390022277832

Token 546: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4323693811893463
    2. 'be' → logprob: -1.557369351387024
    3. ' become' → logprob: -2.3073694705963135
    4. ' overflow' → logprob: -3.6823694705963135
    5. 'overflow' → logprob: -4.932369232177734
    6. 'limit' → logprob: -6.182369232177734
    7. ' explode' → logprob: -7.307369232177734
    8. ' limit' → logprob: -7.432369232177734
    9. 'explode' → logprob: -7.432369232177734
    10. ' get' → logprob: -7.807369232177734

Token 547: ' large' (ID: 4410)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.37820690870285034
    2. 'too' → logprob: -1.8782069683074951
    3. 'hu' → logprob: -2.628206968307495
    4. 'big' → logprob: -3.253206968307495
    5. 'high' → logprob: -3.628206968307495
    6. 'very' → logprob: -4.378206729888916
    7. ' large' → logprob: -5.253206729888916
    8. 'problem' → logprob: -6.503206729888916
    9. 'a' → logprob: -7.128206729888916
    10. '```' → logprob: -7.128206729888916

Token 548: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.400847852230072
    2. 'from' → logprob: -2.650847911834717
    3. '
' → logprob: -2.775847911834717
    4. 'length' → logprob: -3.150847911834717
    5. 'for' → logprob: -3.400847911834717
    6. 'import' → logprob: -3.900847911834717
    7. ' sequences' → logprob: -4.025847911834717
    8. ',' → logprob: -4.150847911834717
    9. '#' → logprob: -4.400847911834717
    10. ' for' → logprob: -4.650847911834717

Token 549: ' so' (ID: 813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7571524977684021
    2. 'length' → logprob: -1.8821525573730469
    3. '   ' → logprob: -2.007152557373047
    4. '#' → logprob: -2.382152557373047
    5. 'seq' → logprob: -3.007152557373047
    6. ' for' → logprob: -3.507152557373047
    7. 'from' → logprob: -3.757152557373047
    8. '
' → logprob: -3.882152557373047
    9. 'return' → logprob: -4.757152557373047
    10. 'import' → logprob: -5.382152557373047

Token 550: ' just' (ID: 1327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048497650772333145
    2. ' for' → logprob: -3.2984976768493652
    3. 'length' → logprob: -5.423497676849365
    4. '#' → logprob: -6.298497676849365
    5. '   ' → logprob: -6.548497676849365
    6. '
' → logprob: -7.173497676849365
    7. 'import' → logprob: -7.173497676849365
    8. 'from' → logprob: -7.298497676849365
    9. 'return' → logprob: -8.548497200012207
    10. '    
' → logprob: -9.423497200012207

Token 551: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11577051877975464
    2. ' for' → logprob: -2.4907705783843994
    3. '   ' → logprob: -3.8657705783843994
    4. 'check' → logprob: -6.61577033996582
    5. 'continue' → logprob: -6.74077033996582
    6. '```' → logprob: -6.99077033996582
    7. 'def' → logprob: -7.86577033996582
    8. 'iterate' → logprob: -8.49077033996582
    9. ' continue' → logprob: -8.61577033996582
    10. 'code' → logprob: -8.61577033996582

Token 552: ' checking' (ID: 19141)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20334894955158234
    2. 'length' → logprob: -2.8283488750457764
    3. ' for' → logprob: -3.2033488750457764
    4. 'nested' → logprob: -3.4533488750457764
    5. ' nested' → logprob: -4.7033491134643555
    6. '   ' → logprob: -4.7033491134643555
    7. '
' → logprob: -4.8283491134643555
    8. 'br' → logprob: -5.3283491134643555
    9. 'a' → logprob: -5.4533491134643555
    10. '```' → logprob: -5.7033491134643555

Token 553: ' length' (ID: 5517)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.003132939338684
    2. 'for' → logprob: -1.128132939338684
    3. '   ' → logprob: -1.253132939338684
    4. '
' → logprob: -4.2531328201293945
    5. '    
' → logprob: -5.0031328201293945
    6. 'def' → logprob: -6.8781328201293945
    7. ',' → logprob: -7.5031328201293945
    8. 'length' → logprob: -8.128132820129395
    9. '```' → logprob: -8.628132820129395
    10. 'max' → logprob: -8.878132820129395

Token 554: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3316711485385895
    2. ' for' → logprob: -1.581671118736267
    3. '   ' → logprob: -3.3316712379455566
    4. '=' → logprob: -4.206671237945557
    5. ',' → logprob: -4.581671237945557
    6. ':' → logprob: -5.456671237945557
    7. ' =' → logprob: -5.956671237945557
    8. ' ' → logprob: -6.706671237945557
    9. 'def' → logprob: -6.831671237945557
    10. '
' → logprob: -6.831671237945557

Token 555: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015255718026310205
    2. ' max' → logprob: -6.501525402069092
    3. 'h' → logprob: -11.12652587890625
    4. '
' → logprob: -12.62652587890625
    5. 'range' → logprob: -13.37652587890625
    6. '```' → logprob: -14.50152587890625
    7. '   ' → logprob: -14.75152587890625
    8. '	max' → logprob: -14.87652587890625
    9. '=max' → logprob: -15.25152587890625
    10. '(max' → logprob: -15.25152587890625

Token 556: '_search' (ID: 23642)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.02268334850668907
    2. 'for' → logprob: -4.397683143615723
    3. 'max' → logprob: -5.147683143615723
    4. ' for' → logprob: -6.897683143615723
    5. '_length' → logprob: -6.897683143615723
    6. 'len' → logprob: -7.522683143615723
    7. '_max' → logprob: -7.772683143615723
    8. '_' → logprob: -8.272683143615723
    9. '(max' → logprob: -8.397683143615723
    10. ' max' → logprob: -9.147683143615723

Token 557: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0002738522016443312
    2. 'len' → logprob: -8.375273704528809
    3. '_length' → logprob: -11.500273704528809
    4. '_' → logprob: -11.625273704528809
    5. '   ' → logprob: -12.250273704528809
    6. '```' → logprob: -12.500273704528809
    7. '_l' → logprob: -12.750273704528809
    8. 'length' → logprob: -12.875273704528809
    9. ' _' → logprob: -13.000273704528809
    10. '
' → logprob: -13.250273704528809

Token 558: ' down' (ID: 1917)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5707638263702393
    2. 'for' → logprob: -0.9457638263702393
    3. '   ' → logprob: -3.8207638263702393
    4. ',' → logprob: -4.44576358795166
    5. '
' → logprob: -4.69576358795166
    6. 'def' → logprob: -6.94576358795166
    7. ':' → logprob: -7.07076358795166
    8. ' ' → logprob: -7.19576358795166
    9. ',
' → logprob: -7.94576358795166
    10. '.' → logprob: -9.07076358795166

Token 559: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.8948527574539185
    2. ' to' → logprob: -1.0198527574539185
    3. 'for' → logprob: -2.144852638244629
    4. '   ' → logprob: -2.769852638244629
    5. ',' → logprob: -4.144852638244629
    6. ' for' → logprob: -4.269852638244629
    7. ' down' → logprob: -4.769852638244629
    8. 'down' → logprob: -5.019852638244629
    9. 'from' → logprob: -6.144852638244629
    10. '
' → logprob: -7.269852638244629

Token 560: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.875066757202148
    3. '```' → logprob: -11.875066757202148
    4. '1' → logprob: -12.125066757202148
    5. '   ' → logprob: -13.750066757202148
    6. '3' → logprob: -14.125066757202148
    7. '
' → logprob: -15.375066757202148
    8. 'length' → logprob: -15.625066757202148
    9. '                   ' → logprob: -17.62506675720215
    10. '    ' → logprob: -17.68756675720215

Token 561: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.862962229410186e-05
    2. '1' → logprob: -9.625078201293945
    3. '```' → logprob: -11.500078201293945
    4. '3' → logprob: -13.500078201293945
    5. '
' → logprob: -14.500078201293945
    6. ' ' → logprob: -15.125078201293945
    7. '``' → logprob: -16.875078201293945
    8. 'length' → logprob: -17.000078201293945
    9. '

' → logprob: -17.125078201293945
    10. '   ' → logprob: -17.250078201293945

Token 562: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3495873808860779
    2. ' for' → logprob: -1.7245874404907227
    3. '
' → logprob: -2.5995874404907227
    4. 'for' → logprob: -3.4745874404907227
    5. ':' → logprob: -4.724587440490723
    6. '    
' → logprob: -6.724587440490723
    7. ',' → logprob: -8.224587440490723
    8. '  
' → logprob: -8.224587440490723
    9. 'def' → logprob: -8.349587440490723
    10. ':
' → logprob: -8.474587440490723

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01236296072602272
    2. ' for' → logprob: -4.512362957000732
    3. 'for' → logprob: -7.262362957000732
    4. ' and' → logprob: -8.51236343383789
    5. '    ' → logprob: -9.01236343383789
    6. '	for' → logprob: -10.01236343383789
    7. ' ' → logprob: -10.26236343383789
    8. ' while' → logprob: -10.51236343383789
    9. '    
' → logprob: -10.51236343383789
    10. '
' → logprob: -10.63736343383789

Token 564: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07828490436077118
    2. ' for' → logprob: -3.078284978866577
    3. 'for' → logprob: -3.578284978866577
    4. ' ' → logprob: -7.953284740447998
    5. '    ' → logprob: -8.078285217285156
    6. '       ' → logprob: -8.828285217285156
    7. ' and' → logprob: -8.953285217285156
    8. '    
' → logprob: -9.703285217285156
    9. ' while' → logprob: -9.828285217285156
    10. '  ' → logprob: -9.953285217285156

Token 565: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6042543053627014
    2. 'for' → logprob: -1.1042542457580566
    3. '   ' → logprob: -2.1042542457580566
    4. '
' → logprob: -10.479254722595215
    5. '```' → logprob: -10.479254722595215
    6. '    
' → logprob: -10.604254722595215
    7. '	for' → logprob: -11.729254722595215
    8. ' ' → logprob: -12.104254722595215
    9. 'while' → logprob: -12.354254722595215
    10. ' while' → logprob: -12.354254722595215

Token 566: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6539751887321472
    2. 'for' → logprob: -0.9039751887321472
    3. '   ' → logprob: -2.653975248336792
    4. '
' → logprob: -6.903975009918213
    5. 'def' → logprob: -7.028975009918213
    6. 'import' → logprob: -8.028975486755371
    7. '    ' → logprob: -8.153975486755371
    8. ' continue' → logprob: -8.278975486755371
    9. 'break' → logprob: -8.278975486755371
    10. ' ' → logprob: -8.403975486755371

Token 567: ' each' (ID: 2454)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3021913766860962
    2. ' length' → logprob: -1.8021913766860962
    3. 'each' → logprob: -3.3021912574768066
    4. 'l' → logprob: -3.3021912574768066
    5. ' each' → logprob: -4.677191257476807
    6. ' l' → logprob: -5.427191257476807
    7. 'seq' → logprob: -6.427191257476807
    8. 'r' → logprob: -6.677191257476807
    9. ' seq' → logprob: -6.677191257476807
    10. 'len' → logprob: -6.927191257476807

Token 568: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.3542197048664093
    2. 'length' → logprob: -1.229219675064087
    3. ' r' → logprob: -6.229219913482666
    4. 'l' → logprob: -6.729219913482666
    5. ' l' → logprob: -6.979219913482666
    6. 'r' → logprob: -7.104219913482666
    7. ' direction' → logprob: -8.354219436645508
    8. '_length' → logprob: -9.479219436645508
    9. 'len' → logprob: -9.729219436645508
    10. ' _' → logprob: -9.729219436645508

Token 569: ' we' (ID: 581)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18688441812992096
    2. ',' → logprob: -2.0618844032287598
    3. '   ' → logprob: -3.8118844032287598
    4. ' in' → logprob: -4.31188440322876
    5. ':
' → logprob: -5.68688440322876
    6. ' for' → logprob: -6.06188440322876
    7. 'import' → logprob: -7.56188440322876
    8. 'in' → logprob: -7.68688440322876
    9. 'for' → logprob: -8.186884880065918
    10. ' ,' → logprob: -9.061884880065918

Token 570: ' find' (ID: 1646)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.96232670545578
    2. '   ' → logprob: -1.3373267650604248
    3. ':' → logprob: -1.8373267650604248
    4. 'for' → logprob: -2.212326765060425
    5. ' in' → logprob: -3.712326765060425
    6. ' =' → logprob: -3.837326765060425
    7. 'import' → logprob: -4.462326526641846
    8. '=' → logprob: -4.712326526641846
    9. ' continue' → logprob: -5.212326526641846
    10. ' will' → logprob: -5.837326526641846

Token 571: ' sequences' (ID: 45665)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.871427595615387
    2. '   ' → logprob: -1.8714275360107422
    3. ' for' → logprob: -1.9964275360107422
    4. 'for' → logprob: -1.9964275360107422
    5. ',' → logprob: -2.621427536010742
    6. ' sequences' → logprob: -3.996427536010742
    7. ':
' → logprob: -4.496427536010742
    8. 'def' → logprob: -4.746427536010742
    9. '
' → logprob: -4.996427536010742
    10. '):' → logprob: -5.246427536010742

Token 572: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2988002300262451
    2. ' for' → logprob: -1.2988002300262451
    3. '   ' → logprob: -1.6738002300262451
    4. 'for' → logprob: -2.173800230026245
    5. ' in' → logprob: -2.798800230026245
    6. '=' → logprob: -3.673800230026245
    7. ',' → logprob: -3.798800230026245
    8. ':
' → logprob: -4.548800468444824
    9. ' =' → logprob: -4.673800468444824
    10. 'in' → logprob: -4.673800468444824

Token 573: ' count' (ID: 3605)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -1.592920184135437
    2. 'positions' → logprob: -1.967920184135437
    3. 'count' → logprob: -2.3429203033447266
    4. 'their' → logprob: -2.4679203033447266
    5. 'found' → logprob: -2.5929203033447266
    6. 'counts' → logprob: -2.7179203033447266
    7. 'duplicates' → logprob: -3.2179203033447266
    8. 'dict' → logprob: -3.3429203033447266
    9. 'direction' → logprob: -3.4679203033447266
    10. 'length' → logprob: -3.8429203033447266

Token 574: '>' (ID: 29)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5656815767288208
    2. '>' → logprob: -2.1906814575195312
    3. ' =' → logprob: -2.1906814575195312
    4. '>=' → logprob: -2.9406814575195312
    5. ' >=' → logprob: -3.3156814575195312
    6. 'for' → logprob: -3.5656814575195312
    7. 's' → logprob: -4.315681457519531
    8. '_' → logprob: -4.440681457519531
    9. ' >' → logprob: -4.440681457519531
    10. ',' → logprob: -4.440681457519531

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014873011037707329
    2. '=' → logprob: -4.264873027801514
    3. ' ' → logprob: -7.264873027801514
    4. '2' → logprob: -12.389872550964355
    5. '```' → logprob: -12.764872550964355
    6. ' =' → logprob: -13.764872550964355
    7. '=
' → logprob: -14.639872550964355
    8. '
' → logprob: -15.014872550964355
    9. '>' → logprob: -15.389872550964355
    10. 's' → logprob: -15.889872550964355

Token 576: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7981727123260498
    2. ':' → logprob: -1.5481727123260498
    3. ' for' → logprob: -1.5481727123260498
    4. 'for' → logprob: -2.29817271232605
    5. ':
' → logprob: -4.173172950744629
    6. '
' → logprob: -5.048172950744629
    7. 'def' → logprob: -7.048172950744629
    8. ',' → logprob: -7.673172950744629
    9. '    
' → logprob: -8.423172950744629
    10. ' ' → logprob: -8.548172950744629

Token 577: ' respecting' (ID: 136775)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23814469575881958
    2. '   ' → logprob: -2.238144636154175
    3. 'for' → logprob: -2.488144636154175
    4. '           ' → logprob: -5.238144874572754
    5. '       ' → logprob: -5.988144874572754
    6. ' continue' → logprob: -5.988144874572754
    7. ' and' → logprob: -6.238144874572754
    8. '
' → logprob: -6.488144874572754
    9. 'def' → logprob: -6.738144874572754
    10. ' ' → logprob: -7.113144874572754

Token 578: ' non' (ID: 2893)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9300639629364014
    2. ' self' → logprob: -1.9300639629364014
    3. ' the' → logprob: -2.3050639629364014
    4. ' no' → logprob: -2.3050639629364014
    5. 'no' → logprob: -2.6800639629364014
    6. ' overlap' → logprob: -2.6800639629364014
    7. 'the' → logprob: -3.0550639629364014
    8. 'over' → logprob: -4.1800642013549805
    9. ' non' → logprob: -4.3050642013549805
    10. ' constraints' → logprob: -4.4300642013549805

Token 579: '-self' (ID: 89352)
  Prédit: '_self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_self' → logprob: -0.7694827318191528
    2. '-over' → logprob: -1.3944827318191528
    3. 'self' → logprob: -2.2694826126098633
    4. '-self' → logprob: -2.5194826126098633
    5. '_overlap' → logprob: -3.1444826126098633
    6. '-' → logprob: -3.5194826126098633
    7. '_' → logprob: -4.769482612609863
    8. '   ' → logprob: -5.144482612609863
    9. '_over' → logprob: -5.269482612609863
    10. 'over' → logprob: -5.644482612609863

Token 580: '-over' (ID: 37193)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.00459851510822773
    2. '-over' → logprob: -6.379598617553711
    3. '_over' → logprob: -6.629598617553711
    4. 'over' → logprob: -7.379598617553711
    5. '_' → logprob: -7.754598617553711
    6. '   ' → logprob: -8.254598617553711
    7. ' overlap' → logprob: -8.629598617553711
    8. '-' → logprob: -11.129598617553711
    9. '
' → logprob: -12.129598617553711
    10. 'Overlap' → logprob: -12.379598617553711

Token 581: 'lapping' (ID: 152588)
  Prédit: 'lap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lap' → logprob: -0.0028023868799209595
    2. 'ap' → logprob: -7.00280237197876
    3. 'lapping' → logprob: -7.00280237197876
    4. 'flow' → logprob: -8.377802848815918
    5. 'laps' → logprob: -8.627802848815918
    6. 'rl' → logprob: -8.752802848815918
    7. 'r' → logprob: -9.252802848815918
    8. 'w' → logprob: -9.377802848815918
    9. 'l' → logprob: -9.752802848815918
    10. 'rap' → logprob: -10.502802848815918

Token 582: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.640328586101532
    2. '   ' → logprob: -1.7653286457061768
    3. 'for' → logprob: -1.7653286457061768
    4. ' for' → logprob: -2.6403286457061768
    5. ':
' → logprob: -3.0153286457061768
    6. 'def' → logprob: -5.515328407287598
    7. '
' → logprob: -6.640328407287598
    8. ',' → logprob: -7.140328407287598
    9. ' ' → logprob: -7.140328407287598
    10. '):' → logprob: -7.765328407287598

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32178550958633423
    2. ' for' → logprob: -2.4467854499816895
    3. '       ' → logprob: -2.5717854499816895
    4. ' and' → logprob: -3.0717854499816895
    5. ')' → logprob: -4.3217854499816895
    6. '           ' → logprob: -4.4467854499816895
    7. 'for' → logprob: -4.5717854499816895
    8. ',' → logprob: -5.1967854499816895
    9. ' ' → logprob: -5.4467854499816895
    10. '    ' → logprob: -5.6967854499816895

Token 584: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3834955394268036
    2. ' for' → logprob: -2.133495569229126
    3. '       ' → logprob: -2.633495569229126
    4. ' and' → logprob: -3.008495569229126
    5. '           ' → logprob: -3.508495569229126
    6. 'for' → logprob: -3.758495569229126
    7. 'and' → logprob: -4.633495330810547
    8. '                   ' → logprob: -6.008495330810547
    9. ' then' → logprob: -6.133495330810547
    10. ' ' → logprob: -6.133495330810547

Token 585: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39806899428367615
    2. 'for' → logprob: -1.7730690240859985
    3. '   ' → logprob: -1.8980690240859985
    4. ':' → logprob: -6.023068904876709
    5. '
' → logprob: -6.398068904876709
    6. ')' → logprob: -6.648068904876709
    7. ' ' → logprob: -7.273068904876709
    8. '    
' → logprob: -7.273068904876709
    9. ' and' → logprob: -7.523068904876709
    10. ' 
' → logprob: -8.023069381713867

Token 586: ' pick' (ID: 5230)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5865134596824646
    2. 'for' → logprob: -1.8365135192871094
    3. 'continue' → logprob: -2.0865135192871094
    4. 'return' → logprob: -2.3365135192871094
    5. ' for' → logprob: -4.086513519287109
    6. ' break' → logprob: -4.461513519287109
    7. '
' → logprob: -4.961513519287109
    8. '   ' → logprob: -5.086513519287109
    9. '#' → logprob: -5.336513519287109
    10. 'if' → logprob: -5.461513519287109

Token 587: ' lex' (ID: 37772)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6065281629562378
    2. ' the' → logprob: -0.8565281629562378
    3. ' sequences' → logprob: -4.731528282165527
    4. '   ' → logprob: -5.481528282165527
    5. ' those' → logprob: -5.981528282165527
    6. '           ' → logprob: -5.981528282165527
    7. 'max' → logprob: -6.106528282165527
    8. ' only' → logprob: -6.356528282165527
    9. 'those' → logprob: -7.106528282165527
    10. 'tokens' → logprob: -7.356528282165527

Token 588: ' smallest' (ID: 42173)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.10643041133880615
    2. ' smallest' → logprob: -2.6064305305480957
    3. ' =' → logprob: -4.606430530548096
    4. '=' → logprob: -5.481430530548096
    5. ' ' → logprob: -5.856430530548096
    6. ')' → logprob: -6.606430530548096
    7. 'ico' → logprob: -6.981430530548096
    8. 'i' → logprob: -7.356430530548096
    9. 'ical' → logprob: -7.606430530548096
    10. 'largest' → logprob: -7.606430530548096

Token 589: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7298904657363892
    2. '   ' → logprob: -0.8548904657363892
    3. '
' → logprob: -3.1048903465270996
    4. 'for' → logprob: -3.2298903465270996
    5. ':' → logprob: -5.4798903465271
    6. '    
' → logprob: -6.3548903465271
    7. ' ' → logprob: -7.1048903465271
    8. '  
' → logprob: -7.6048903465271
    9. ':
' → logprob: -8.104890823364258
    10. ' 
' → logprob: -8.479890823364258

Token 590: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.37884432077407837
    2. ' return' → logprob: -1.5038442611694336
    3. 'break' → logprob: -3.0038442611694336
    4. ' break' → logprob: -4.003844261169434
    5. 'print' → logprob: -4.128844261169434
    6. ' print' → logprob: -5.378844261169434
    7. ' output' → logprob: -6.128844261169434
    8. 'output' → logprob: -6.878844261169434
    9. 'continue' → logprob: -8.753844261169434
    10. 'length' → logprob: -8.753844261169434

Token 591: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7770507335662842
    2. ' for' → logprob: -0.7770507335662842
    3. 'for' → logprob: -3.402050733566284
    4. '
' → logprob: -3.527050733566284
    5. ':' → logprob: -4.527050971984863
    6. '    
' → logprob: -6.152050971984863
    7. 'def' → logprob: -6.402050971984863
    8. ':
' → logprob: -6.652050971984863
    9. ' ' → logprob: -7.652050971984863
    10. ',' → logprob: -8.152050971984863

Token 592: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06520204246044159
    2. ' for' → logprob: -2.815201997756958
    3. 'for' → logprob: -6.690202236175537
    4. '
' → logprob: -7.065202236175537
    5. '    
' → logprob: -7.940202236175537
    6. '```' → logprob: -8.190201759338379
    7. ':' → logprob: -8.940201759338379
    8. '  
' → logprob: -9.190201759338379
    9. ' ' → logprob: -9.440201759338379
    10. ' 
' → logprob: -9.815201759338379

Token 593: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5520070195198059
    2. '   ' → logprob: -1.5520069599151611
    3. ' for' → logprob: -1.5520069599151611
    4. '
' → logprob: -8.052006721496582
    5. '```' → logprob: -8.802006721496582
    6. '    
' → logprob: -9.552006721496582
    7. 'length' → logprob: -11.927006721496582
    8. 'def' → logprob: -12.302006721496582
    9. ' 
' → logprob: -12.552006721496582
    10. 'from' → logprob: -13.302006721496582

Token 594: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02840406633913517
    2. ' for' → logprob: -3.7784039974212646
    3. '   ' → logprob: -5.278404235839844
    4. '```' → logprob: -11.153404235839844
    5. 'from' → logprob: -11.278404235839844
    6. '
' → logprob: -11.403404235839844
    7. 'length' → logprob: -12.403404235839844
    8. 'import' → logprob: -13.778404235839844
    9. 'def' → logprob: -14.653404235839844
    10. '    
' → logprob: -15.028404235839844

Token 595: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07994253933429718
    2. ' for' → logprob: -2.579942464828491
    3. '   ' → logprob: -6.95494270324707
    4. 'length' → logprob: -9.70494270324707
    5. 'from' → logprob: -10.82994270324707
    6. '
' → logprob: -12.20494270324707
    7. 'import' → logprob: -12.20494270324707
    8. '```' → logprob: -12.82994270324707
    9. ' length' → logprob: -13.07994270324707
    10. 'def' → logprob: -13.82994270324707

Token 596: ' speed' (ID: 7733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1542025804519653
    2. 'range' → logprob: -1.7792025804519653
    3. 'continue' → logprob: -2.279202461242676
    4. 'find' → logprob: -2.529202461242676
    5. ' for' → logprob: -3.154202461242676
    6. 'r' → logprob: -3.279202461242676
    7. 'def' → logprob: -3.404202461242676
    8. ' find' → logprob: -3.779202461242676
    9. ' continue' → logprob: -3.779202461242676
    10. '   ' → logprob: -3.779202461242676

Token 597: ' up' (ID: 869)
  Prédit: ' up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.05760688707232475
    2. '   ' → logprob: -2.9326069355010986
    3. ' ' → logprob: -6.5576066970825195
    4. 'up' → logprob: -7.0576066970825195
    5. '    ' → logprob: -8.30760669708252
    6. '	up' → logprob: -9.93260669708252
    7. '  ' → logprob: -10.05760669708252
    8. '=' → logprob: -10.05760669708252
    9. '_up' → logprob: -10.68260669708252
    10. '       ' → logprob: -11.80760669708252

Token 598: ' counting' (ID: 43276)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6654136776924133
    2. ' for' → logprob: -1.5404136180877686
    3. 'length' → logprob: -2.2904136180877686
    4. 'import' → logprob: -2.4154136180877686
    5. 'from' → logprob: -3.6654136180877686
    6. ' length' → logprob: -4.415413856506348
    7. ' import' → logprob: -4.915413856506348
    8. 'visited' → logprob: -5.165413856506348
    9. 'pass' → logprob: -5.540413856506348
    10. ' lengths' → logprob: -5.915413856506348

Token 599: ' sequences' (ID: 45665)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.643681526184082
    2. 'length' → logprob: -1.768681526184082
    3. 'seq' → logprob: -2.268681526184082
    4. 'se' → logprob: -2.393681526184082
    5. 'for' → logprob: -2.518681526184082
    6. '   ' → logprob: -2.518681526184082
    7. 'import' → logprob: -2.643681526184082
    8. 'counts' → logprob: -3.143681526184082
    9. ' sequences' → logprob: -3.518681526184082
    10. ',' → logprob: -3.768681526184082

Token 600: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5652689933776855
    2. 'for' → logprob: -1.9402689933776855
    3. 'from' → logprob: -2.4402689933776855
    4. ',' → logprob: -2.5652689933776855
    5. ' for' → logprob: -2.8152689933776855
    6. 'length' → logprob: -3.8152689933776855
    7. 'import' → logprob: -3.9402689933776855
    8. ' from' → logprob: -5.5652689933776855
    9. 'counts' → logprob: -5.8152689933776855
    10. '=' → logprob: -6.0652689933776855

Token 601: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7950604557991028
    2. 'from' → logprob: -1.670060396194458
    3. ' for' → logprob: -2.045060396194458
    4. '   ' → logprob: -2.420060396194458
    5. 'import' → logprob: -2.795060396194458
    6. 'seq' → logprob: -4.295060634613037
    7. 'seen' → logprob: -4.420060634613037
    8. ' from' → logprob: -4.545060634613037
    9. 'visited' → logprob: -4.545060634613037
    10. ' seen' → logprob: -5.170060634613037

Token 602: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.30376502871513367
    2. 'import' → logprob: -2.303765058517456
    3. 'can' → logprob: -2.928765058517456
    4. ' will' → logprob: -3.178765058517456
    5. ''ll' → logprob: -4.178764820098877
    6. ' for' → logprob: -4.803764820098877
    7. ' import' → logprob: -4.928764820098877
    8. ' use' → logprob: -5.053764820098877
    9. 'for' → logprob: -5.178764820098877
    10. '   ' → logprob: -5.303764820098877

Token 603: ' store' (ID: 4897)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.11815254390239716
    2. ' use' → logprob: -2.993152618408203
    3. 'import' → logprob: -3.118152618408203
    4. 'from' → logprob: -5.243152618408203
    5. 'store' → logprob: -5.243152618408203
    6. '   ' → logprob: -6.743152618408203
    7. 'continue' → logprob: -6.743152618408203
    8. 'hash' → logprob: -6.743152618408203
    9. 'for' → logprob: -7.743152618408203
    10. 'implement' → logprob: -7.993152618408203

Token 604: ' sequences' (ID: 45665)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.5916391611099243
    2. 'counts' → logprob: -1.7166391611099243
    3. 'se' → logprob: -2.5916390419006348
    4. ' seq' → logprob: -2.7166390419006348
    5. 'freq' → logprob: -3.3416390419006348
    6. ' sequences' → logprob: -3.9666390419006348
    7. ' counts' → logprob: -4.091639041900635
    8. 'from' → logprob: -4.216639041900635
    9. 'count' → logprob: -4.591639041900635
    10. ' freq' → logprob: -5.091639041900635

Token 605: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5482721328735352
    2. ' =' → logprob: -1.0482721328735352
    3. '_counts' → logprob: -4.298272132873535
    4. '={}' → logprob: -4.298272132873535
    5. '_count' → logprob: -4.673272132873535
    6. '_' → logprob: -4.798272132873535
    7. 'for' → logprob: -5.048272132873535
    8. '_freq' → logprob: -5.548272132873535
    9. '_by' → logprob: -5.673272132873535
    10. '=[]' → logprob: -6.798272132873535

Token 606: ' dictionary' (ID: 22131)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20173762738704681
    2. 'default' → logprob: -1.826737642288208
    3. '{}' → logprob: -4.576737403869629
    4. ' a' → logprob: -5.201737403869629
    5. 'dict' → logprob: -5.576737403869629
    6. ' defaultdict' → logprob: -6.576737403869629
    7. 'dictionary' → logprob: -8.326737403869629
    8. ' dictionaries' → logprob: -8.576737403869629
    9. 'collections' → logprob: -8.826737403869629
    10. 'd' → logprob: -10.076737403869629

Token 607: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.783569872379303
    2. '=' → logprob: -1.4085698127746582
    3. 'for' → logprob: -2.408569812774658
    4. ' =' → logprob: -2.533569812774658
    5. ' for' → logprob: -3.158569812774658
    6. ',' → logprob: -4.158569812774658
    7. 's' → logprob: -4.158569812774658
    8. 'from' → logprob: -4.658569812774658
    9. 'length' → logprob: -4.658569812774658
    10. ':' → logprob: -4.908569812774658

Token 608: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5929722189903259
    2. 'check' → logprob: -1.0929722785949707
    3. 'for' → logprob: -2.7179722785949707
    4. ' check' → logprob: -4.467972278594971
    5. 'increment' → logprob: -5.217972278594971
    6. ' count' → logprob: -5.467972278594971
    7. 'set' → logprob: -5.467972278594971
    8. 'their' → logprob: -6.092972278594971
    9. 'def' → logprob: -6.217972278594971
    10. 'length' → logprob: -6.342972278594971

Token 609: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4210873246192932
    2. ' =' → logprob: -1.5460872650146484
    3. '   ' → logprob: -2.5460872650146484
    4. 's' → logprob: -3.9210872650146484
    5. 'for' → logprob: -4.171087265014648
    6. ' for' → logprob: -4.796087265014648
    7. '.' → logprob: -6.671087265014648
    8. ',' → logprob: -6.921087265014648
    9. 'counts' → logprob: -7.296087265014648
    10. ':' → logprob: -7.546087265014648

Token 610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09178009629249573
    2. ' for' → logprob: -2.841780185699463
    3. 'for' → logprob: -3.591780185699463
    4. '    
' → logprob: -7.216780185699463
    5. ':' → logprob: -8.341779708862305
    6. ' ' → logprob: -8.466779708862305
    7. '  
' → logprob: -8.841779708862305
    8. 'def' → logprob: -9.341779708862305
    9. '
' → logprob: -9.466779708862305
    10. ',' → logprob: -9.466779708862305

Token 611: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9028016328811646
    2. 'for' (adapté à ' for') → logprob: -1.1528016328811646
    3. '   ' → logprob: -1.2778016328811646
    4. '
' → logprob: -9.527801513671875
    5. '    
' → logprob: -10.027801513671875
    6. ' 
' → logprob: -11.402801513671875
    7. ' ' → logprob: -11.402801513671875
    8. 'def' → logprob: -11.777801513671875
    9. '	for' → logprob: -12.152801513671875
    10. '```' → logprob: -12.777801513671875

Token 612: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.16034263372421265
    2. ' length' → logprob: -1.9103426933288574
    3. 'l' → logprob: -9.4103422164917
    4. '   ' → logprob: -10.6603422164917
    5. 'leng' → logprob: -12.4103422164917
    6. '	length' → logprob: -13.2853422164917
    7. 'L' → logprob: -13.5353422164917
    8. '_length' → logprob: -13.5353422164917
    9. ' l' → logprob: -14.0353422164917
    10. 'len' → logprob: -14.2853422164917

Token 613: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043023280799388885
    2. 'in' → logprob: -3.1680233478546143
    3. '	in' → logprob: -11.043023109436035
    4. ' ' → logprob: -12.668023109436035
    5. '   ' → logprob: -12.793023109436035
    6. 'import' → logprob: -15.043023109436035
    7. 'from' → logprob: -15.168023109436035
    8. 'In' → logprob: -15.668023109436035
    9. ',' → logprob: -15.668023109436035
    10. '    ' → logprob: -15.793023109436035

Token 614: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043710620957426727
    2. ' range' → logprob: -7.750437259674072
    3. '   ' → logprob: -12.125436782836914
    4. 're' → logprob: -14.125436782836914
    5. ' ' → logprob: -16.000436782836914
    6. '(range' → logprob: -16.875436782836914
    7. 'reverse' → logprob: -16.875436782836914
    8. '
' → logprob: -17.625436782836914
    9. '  ' → logprob: -18.000436782836914
    10. '	range' → logprob: -18.500436782836914

Token 615: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0067301723174750805
    2. '(max' → logprob: -5.006730079650879
    3. ' max' → logprob: -11.256730079650879
    4. '(h' → logprob: -13.631730079650879
    5. 'h' → logprob: -14.631730079650879
    6. ',max' → logprob: -16.131731033325195
    7. ' (' → logprob: -17.506731033325195
    8. '(' → logprob: -17.506731033325195
    9. '=max' → logprob: -17.756731033325195
    10. '	max' → logprob: -18.381731033325195

Token 616: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.0013689270708709955
    2. '_len' → logprob: -7.126368999481201
    3. '_w' → logprob: -7.876368999481201
    4. '_' → logprob: -9.876368522644043
    5. ' _' → logprob: -10.001368522644043
    6. ')' → logprob: -10.626368522644043
    7. '_length' → logprob: -11.501368522644043
    8. 'search' → logprob: -11.876368522644043
    9. '\' → logprob: -11.876368522644043
    10. '   ' → logprob: -12.251368522644043

Token 617: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.0445127372804563e-05
    2. '_l' → logprob: -12.50001049041748
    3. ',' → logprob: -12.62501049041748
    4. '_w' → logprob: -14.25001049041748
    5. 'len' → logprob: -14.37501049041748
    6. '_,' → logprob: -14.50001049041748
    7. ',len' → logprob: -14.62501049041748
    8. ',_' → logprob: -15.00001049041748
    9. ' _' → logprob: -15.37501049041748
    10. '_' → logprob: -15.87501049041748

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3915141355246305e-05
    2. ',
' → logprob: -11.50002384185791
    3. ' ,' → logprob: -11.50002384185791
    4. ',len' → logprob: -13.50002384185791
    5. ',-' → logprob: -14.12502384185791
    6. ',length' → logprob: -14.75002384185791
    7. '   ' → logprob: -14.87502384185791
    8. ',",' → logprob: -16.125024795532227
    9. '‌,' → logprob: -16.375024795532227
    10. ',max' → logprob: -16.500024795532227

Token 619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '
' → logprob: -16.625
    4. '0' → logprob: -17.375
    5. '   ' → logprob: -17.75
    6. '```' → logprob: -18.5
    7. '

' → logprob: -19.625
    8. '' → logprob: -19.625
    9. '１' → logprob: -20.125
    10. '2' → logprob: -20.625

Token 620: ',-' (ID: 8202)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3819199800491333
    2. ',' → logprob: -1.6319199800491333
    3. ',-' → logprob: -2.1319198608398438
    4. ' -' → logprob: -6.006919860839844
    5. '   ' → logprob: -8.256919860839844
    6. '-,' → logprob: -8.631919860839844
    7. ' ,' → logprob: -8.756919860839844
    8. ' ,-' → logprob: -9.006919860839844
    9. ',
' → logprob: -9.881919860839844
    10. ',-
' → logprob: -11.381919860839844

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -19.0
    4. '
' → logprob: -19.375
    5. ')' → logprob: -19.5
    6. '-' → logprob: -19.625
    7. '```' → logprob: -20.125
    8. '):
' → logprob: -20.875
    9. ',' → logprob: -21.375
    10. ' -' → logprob: -22.25

Token 622: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13951043784618378
    2. ':' → logprob: -2.1395103931427
    3. '):
' → logprob: -4.389510631561279
    4. '   ' → logprob: -10.264510154724121
    5. ':
' → logprob: -10.514510154724121
    6. ')' → logprob: -11.264510154724121
    7. ' :' → logprob: -11.639510154724121
    8. '):
' → logprob: -12.264510154724121
    9. ',' → logprob: -12.389510154724121
    10. ' ):' → logprob: -13.514510154724121

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.900034299585968e-05
    2. '   ' → logprob: -10.875088691711426
    3. ' for' → logprob: -11.000088691711426
    4. '```' → logprob: -11.000088691711426
    5. ',' → logprob: -11.375088691711426
    6. '#' → logprob: -11.750088691711426
    7. ':' → logprob: -12.375088691711426
    8. '<|end|>' → logprob: -13.125088691711426
    9. '	   ' → logprob: -13.625088691711426
    10. ')' → logprob: -13.875088691711426

Token 624: ' counter' (ID: 9446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5928465723991394
    2. 'seq' → logprob: -1.0928466320037842
    3. 'counts' → logprob: -2.467846632003784
    4. 'count' → logprob: -4.217846393585205
    5. 'counter' (adapté à ' counter') → logprob: -5.092846393585205
    6. 'se' → logprob: -6.092846393585205
    7. 'freq' → logprob: -6.342846393585205
    8. 'seen' → logprob: -6.842846393585205
    9. 'from' → logprob: -7.717846393585205
    10. 'cnt' → logprob: -7.967846393585205

Token 625: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31343790888786316
    2. '=' → logprob: -1.3134379386901855
    3. '={}' → logprob: -8.688437461853027
    4. '={' → logprob: -12.438437461853027
    5. '={}
' → logprob: -13.938437461853027
    6. ' ' → logprob: -14.563437461853027
    7. 's' → logprob: -14.688437461853027
    8. ':' → logprob: -15.438437461853027
    9. ' ={' → logprob: -15.438437461853027
    10. '=dict' → logprob: -15.563437461853027

Token 626: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0002036595979006961
    2. 'dict' → logprob: -8.500204086303711
    3. '{}
' → logprob: -16.50020408630371
    4. '{})' → logprob: -17.37520408630371
    5. 'default' → logprob: -17.62520408630371
    6. '{' → logprob: -18.00020408630371
    7. '{}

' → logprob: -18.37520408630371
    8. ' {}' → logprob: -18.87520408630371
    9. '{},' → logprob: -19.37520408630371
    10. '{}_' → logprob: -19.75020408630371

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045599499717354774
    2. ' for' → logprob: -6.1295599937438965
    3. 'for' → logprob: -7.1295599937438965
    4. '<|end|>' → logprob: -7.3795599937438965
    5. '        
' → logprob: -7.8795599937438965
    6. '
' → logprob: -8.254559516906738
    7. 'import' → logprob: -9.004559516906738
    8. '           ' → logprob: -10.629559516906738
    9. '<|end|>' → logprob: -10.754559516906738
    10. ',' → logprob: -10.879559516906738

Token 628: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00024048985505942255
    2. '       ' → logprob: -8.375240325927734
    3. ' for' → logprob: -11.750240325927734
    4. 'found' → logprob: -13.875240325927734
    5. 'positions' → logprob: -14.250240325927734
    6. '   ' → logprob: -16.000240325927734
    7. '        
' → logprob: -16.125240325927734
    8. '           ' → logprob: -16.375240325927734
    9. '	for' → logprob: -17.250240325927734
    10. '
' → logprob: -17.375240325927734

Token 629: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014164566993713379
    2. ' r' → logprob: -4.264164447784424
    3. '	r' → logprob: -15.264164924621582
    4. '_r' → logprob: -15.389164924621582
    5. 'rr' → logprob: -15.514164924621582
    6. '   ' → logprob: -15.764164924621582
    7. '```' → logprob: -16.639163970947266
    8. ' ' → logprob: -17.014163970947266
    9. 'h' → logprob: -17.139163970947266
    10. 'dr' → logprob: -17.389163970947266

Token 630: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0030624382197856903
    2. 'in' → logprob: -6.1280622482299805
    3. ',' → logprob: -7.8780622482299805
    4. ' ' → logprob: -8.12806224822998
    5. ' ,' → logprob: -8.62806224822998
    6. '<|end|>' → logprob: -11.62806224822998
    7. ')' → logprob: -12.75306224822998
    8. '	in' → logprob: -13.00306224822998
    9. ' ' → logprob: -13.62806224822998
    10. ',r' → logprob: -13.87806224822998

Token 631: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020806640386581
    2. ' range' → logprob: -2.350208044052124
    3. '0' → logprob: -14.225208282470703
    4. ' ' → logprob: -14.850208282470703
    5. ')' → logprob: -16.100208282470703
    6. ' in' → logprob: -16.850208282470703
    7. '(range' → logprob: -16.850208282470703
    8. 'ange' → logprob: -17.725208282470703
    9. '	range' → logprob: -17.725208282470703
    10. 'in' → logprob: -18.100208282470703

Token 632: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.48550355434417725
    2. '(h' → logprob: -0.9855035543441772
    3. ' h' → logprob: -4.735503673553467
    4. '0' → logprob: -7.360503673553467
    5. '(' → logprob: -7.360503673553467
    6. ' (' → logprob: -7.485503673553467
    7. ')' → logprob: -7.610503673553467
    8. ',' → logprob: -9.110503196716309
    9. ',h' → logprob: -9.360503196716309
    10. '(
' → logprob: -10.610503196716309

Token 633: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34905606508255005
    2. '):
' → logprob: -1.2240560054779053
    3. ')' → logprob: -7.849056243896484
    4. ':' → logprob: -8.724056243896484
    5. '       ' → logprob: -10.974056243896484
    6. '   ' → logprob: -11.099056243896484
    7. '):

' → logprob: -11.849056243896484
    8. '):
' → logprob: -12.224056243896484
    9. ':
' → logprob: -12.474056243896484
    10. ',' → logprob: -12.724056243896484

Token 634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00519569031894207
    2. ' for' → logprob: -5.380195617675781
    3. '       ' → logprob: -8.130195617675781
    4. '	       ' → logprob: -9.505195617675781
    5. '   ' → logprob: -9.755195617675781
    6. ' w' → logprob: -10.130195617675781
    7. '<|end|>' → logprob: -10.630195617675781
    8. '         ' → logprob: -11.130195617675781
    9. 'for' → logprob: -11.380195617675781
    10. ',' → logprob: -11.630195617675781

Token 635: ' for' (ID: 395)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04343473166227341
    2. ' w' → logprob: -3.2934346199035645
    3. 'for' (adapté à ' for') → logprob: -5.5434346199035645
    4. ' for' → logprob: -6.5434346199035645
    5. '   ' → logprob: -11.418435096740723
    6. '       ' → logprob: -12.418435096740723
    7. 'range' → logprob: -12.543435096740723
    8. ' range' → logprob: -12.918435096740723
    9. '	w' → logprob: -13.543435096740723
    10. 'c' → logprob: -13.668435096740723

Token 636: ' c' (ID: 274)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3197496235370636
    2. ' w' → logprob: -1.8197495937347412
    3. 'c' → logprob: -2.319749593734741
    4. ' c' → logprob: -4.31974983215332
    5. '   ' → logprob: -13.69474983215332
    6. '	w' → logprob: -16.81974983215332
    7. ' ' → logprob: -16.94474983215332
    8. '```' → logprob: -17.31974983215332
    9. '`' → logprob: -18.06974983215332
    10. 'W' → logprob: -18.06974983215332

Token 637: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019414882408455014
    2. 'in' → logprob: -6.251941680908203
    3. ' ' → logprob: -11.626941680908203
    4. ')' → logprob: -13.251941680908203
    5. 'w' → logprob: -14.376941680908203
    6. '	in' → logprob: -15.001941680908203
    7. ',' → logprob: -15.501941680908203
    8. ' в' → logprob: -15.876941680908203
    9. 'In' → logprob: -16.001941680908203
    10. '0' → logprob: -16.001941680908203

Token 638: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815767213702202
    2. ' range' → logprob: -4.018157482147217
    3. 'w' → logprob: -11.768157958984375
    4. '(range' → logprob: -17.643157958984375
    5. ' w' → logprob: -18.518157958984375
    6. '	range' → logprob: -21.143157958984375
    7. ' ' → logprob: -21.268157958984375
    8. '   ' → logprob: -21.893157958984375
    9. '
' → logprob: -22.143157958984375
    10. '(w' → logprob: -22.393157958984375

Token 639: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.38704848289489746
    2. '(w' → logprob: -1.1370484828948975
    3. ' w' → logprob: -8.762048721313477
    4. ' (' → logprob: -12.012048721313477
    5. '<w' → logprob: -12.887048721313477
    6. '(' → logprob: -13.137048721313477
    7. '	w' → logprob: -13.262048721313477
    8. ')' → logprob: -13.387048721313477
    9. ',w' → logprob: -13.637048721313477
    10. '           ' → logprob: -13.762048721313477

Token 640: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029901597648859024
    2. '):' → logprob: -3.5299015045166016
    3. '           ' → logprob: -9.279901504516602
    4. '       ' → logprob: -10.529901504516602
    5. '               ' → logprob: -11.404901504516602
    6. '):
' → logprob: -11.529901504516602
    7. ':' → logprob: -12.529901504516602
    8. ':
' → logprob: -12.904901504516602
    9. '):

' → logprob: -13.779901504516602
    10. ')' → logprob: -13.904901504516602

Token 641: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00047356789582408965
    2. ' for' → logprob: -8.875473976135254
    3. '                   ' → logprob: -9.500473976135254
    4. '		       ' → logprob: -9.875473976135254
    5. '                       ' → logprob: -10.125473976135254
    6. '	           ' → logprob: -10.250473976135254
    7. ',' → logprob: -10.250473976135254
    8. '<|end|>' → logprob: -10.625473976135254
    9. '           ' → logprob: -11.375473976135254
    10. '              ' → logprob: -11.875473976135254

Token 642: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2952231168746948
    2. 'for' (adapté à ' for') → logprob: -1.5452231168746948
    3. '                   ' → logprob: -3.1702232360839844
    4. '   ' → logprob: -8.670223236083984
    5. '               ' → logprob: -9.920223236083984
    6. '	for' → logprob: -10.420223236083984
    7. ' d' → logprob: -10.670223236083984
    8. '                       ' → logprob: -10.920223236083984
    9. ' ' → logprob: -11.045223236083984
    10. 'd' → logprob: -11.045223236083984

Token 643: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.0251260157674551
    2. '(dr' → logprob: -4.025125980377197
    3. ' dr' → logprob: -5.025125980377197
    4. '(' → logprob: -8.400126457214355
    5. ' (' → logprob: -9.400126457214355
    6. '(d' → logprob: -9.650126457214355
    7. 'd' → logprob: -12.400126457214355
    8. '	dr' → logprob: -13.150126457214355
    9. '(-' → logprob: -14.275126457214355
    10. 'dx' → logprob: -14.400126457214355

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025913503486663103
    2. ' ,' → logprob: -6.377591133117676
    3. ',d' → logprob: -7.502591133117676
    4. ',c' → logprob: -8.377591133117676
    5. ',w' → logprob: -10.002591133117676
    6. ',_' → logprob: -11.127591133117676
    7. ',
' → logprob: -11.252591133117676
    8. ',const' → logprob: -11.627591133117676
    9. ',(' → logprob: -12.002591133117676
    10. ',de' → logprob: -12.377591133117676

Token 645: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.0004306692280806601
    2. ' dc' → logprob: -7.750430583953857
    3. '_dc' → logprob: -18.625431060791016
    4. '.dc' → logprob: -18.625431060791016
    5. '(dc' → logprob: -18.625431060791016
    6. 'dcc' → logprob: -19.750431060791016
    7. '   ' → logprob: -20.125431060791016
    8. ' ' → logprob: -21.375431060791016
    9. '
' → logprob: -21.500431060791016
    10. 'dd' → logprob: -21.875431060791016

Token 646: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023248042911291122
    2. 'in' → logprob: -3.7732479572296143
    3. 'd' → logprob: -13.523247718811035
    4. ' ' → logprob: -14.898247718811035
    5. ')' → logprob: -15.148247718811035
    6. 'dire' → logprob: -15.273247718811035
    7. 's' → logprob: -16.27324867248535
    8. '	in' → logprob: -16.64824867248535
    9. 'Directions' → logprob: -16.89824867248535
    10. '   ' → logprob: -17.02324867248535

Token 647: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.02324652671813965
    2. ' directions' → logprob: -3.7732465267181396
    3. 'irections' → logprob: -14.648246765136719
    4. '[' → logprob: -15.148246765136719
    5. 'd' → logprob: -15.648246765136719
    6. 'direction' → logprob: -15.898246765136719
    7. '```' → logprob: -17.02324676513672
    8. '   ' → logprob: -17.14824676513672
    9. 'Directions' → logprob: -17.27324676513672
    10. 'direct' → logprob: -17.27324676513672

Token 648: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5373390913009644
    2. ':' → logprob: -0.9123390913009644
    3. '                   ' → logprob: -4.287339210510254
    4. '):
' → logprob: -8.412339210510254
    5. ':
' → logprob: -10.662339210510254
    6. ',' → logprob: -10.662339210510254
    7. '                       ' → logprob: -10.787339210510254
    8. '               ' → logprob: -11.412339210510254
    9. ':

' → logprob: -11.412339210510254
    10. '		           ' → logprob: -11.412339210510254

Token 649: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00044663884909823537
    2. '                    
' → logprob: -8.500446319580078
    3. '                       ' → logprob: -9.500446319580078
    4. '
' → logprob: -10.250446319580078
    5. ' token' → logprob: -10.750446319580078
    6. '                    ' → logprob: -10.750446319580078
    7. '                  ' → logprob: -11.125446319580078
    8. ',' → logprob: -11.875446319580078
    9. '                 ' → logprob: -11.875446319580078
    10. '               ' → logprob: -12.000446319580078

Token 650: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' (adapté à ' seq') → logprob: -0.0755179151892662
    2. '                       ' → logprob: -3.0755178928375244
    3. ' seq' → logprob: -3.7005178928375244
    4. '                   ' → logprob: -6.4505181312561035
    5. 'sequence' → logprob: -9.450517654418945
    6. 'if' → logprob: -9.950517654418945
    7. '   ' → logprob: -10.325517654418945
    8. ' sequence' → logprob: -10.700517654418945
    9. 'token' → logprob: -10.825517654418945
    10. ' ' → logprob: -10.825517654418945

Token 651: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20149199664592743
    2. '=' → logprob: -1.7014919519424438
    3. '=get' → logprob: -9.451492309570312
    4. ')' → logprob: -16.576492309570312
    5. '    ' → logprob: -17.076492309570312
    6. '   ' → logprob: -17.326492309570312
    7. ' ' → logprob: -17.576492309570312
    8. '        ' → logprob: -19.076492309570312
    9. '=create' → logprob: -19.201492309570312
    10. ',' → logprob: -19.451492309570312

Token 652: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.10020699352025986
    2. ' get' → logprob: -2.3502070903778076
    3. '(get' → logprob: -15.975207328796387
    4. '	get' → logprob: -16.35020637512207
    5. '   ' → logprob: -16.60020637512207
    6. '.get' → logprob: -17.22520637512207
    7. '=get' → logprob: -17.72520637512207
    8. '[get' → logprob: -17.85020637512207
    9. '_get' → logprob: -18.22520637512207
    10. ')get' → logprob: -18.97520637512207

Token 653: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -1.259079363080673e-05
    2. 'seq' → logprob: -11.375012397766113
    3. '(seq' → logprob: -14.750012397766113
    4. '(grid' → logprob: -15.625012397766113
    5. '```' → logprob: -15.625012397766113
    6. '_' → logprob: -16.50001335144043
    7. 'grid' → logprob: -17.25001335144043
    8. '_sec' → logprob: -17.37501335144043
    9. '_grid' → logprob: -17.62501335144043
    10. 'Seq' → logprob: -17.75001335144043

Token 654: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.250001907348633
    3. ' (' → logprob: -16.500001907348633
    4. 'grid' → logprob: -16.750001907348633
    5. '(Grid' → logprob: -16.875001907348633
    6. '(
' → logprob: -17.000001907348633
    7. '(gr' → logprob: -17.500001907348633
    8. '```' → logprob: -17.625001907348633
    9. ':grid' → logprob: -17.750001907348633
    10. ' grid' → logprob: -18.500001907348633

Token 655: ',h' (ID: 42751)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019240042194724083
    2. ',r' → logprob: -4.144239902496338
    3. ',h' → logprob: -5.769239902496338
    4. ' ,' → logprob: -10.144240379333496
    5. ',(' → logprob: -11.644240379333496
    6. '(r' → logprob: -12.019240379333496
    7. ',
' → logprob: -12.269240379333496
    8. '(' → logprob: -12.394240379333496
    9. ',w' → logprob: -12.894240379333496
    10. ',j' → logprob: -13.269240379333496

Token 656: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.0046487110666930676
    2. ',' → logprob: -5.379648685455322
    3. 'w' → logprob: -10.87964916229248
    4. ' ,' → logprob: -11.75464916229248
    5. ',
' → logprob: -13.75464916229248
    6. '```' → logprob: -15.50464916229248
    7. ' w' → logprob: -15.62964916229248
    8. ',width' → logprob: -15.87964916229248
    9. '<w' → logprob: -16.504648208618164
    10. '   ' → logprob: -16.754648208618164

Token 657: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.016042346134781837
    2. ',' → logprob: -4.141042232513428
    3. ' ,' → logprob: -12.391042709350586
    4. 'r' → logprob: -12.641042709350586
    5. ',
' → logprob: -15.891042709350586
    6. '   ' → logprob: -16.141042709350586
    7. ',re' → logprob: -16.641042709350586
    8. '```' → logprob: -16.766042709350586
    9. ',res' → logprob: -16.891042709350586
    10. ',row' → logprob: -17.391042709350586

Token 658: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5760114192962646
    2. ',c' → logprob: -0.8260114192962646
    3. ' ,' → logprob: -10.326011657714844
    4. ',w' → logprob: -11.076011657714844
    5. 'c' → logprob: -11.326011657714844
    6. ',d' → logprob: -12.701011657714844
    7. ',
' → logprob: -12.826011657714844
    8. ',s' → logprob: -13.701011657714844
    9. '```' → logprob: -13.701011657714844
    10. '   ' → logprob: -13.951011657714844

Token 659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.372294698550832e-06
    2. ' ,' → logprob: -12.125009536743164
    3. ',d' → logprob: -13.500009536743164
    4. ',
' → logprob: -13.875009536743164
    5. 'dr' → logprob: -14.625009536743164
    6. '```' → logprob: -14.875009536743164
    7. '                   ' → logprob: -15.250009536743164
    8. '   ' → logprob: -16.375009536743164
    9. '	dr' → logprob: -17.000009536743164
    10. '(dr' → logprob: -17.125009536743164

Token 660: 'dr' (ID: 4541)
  Prédit: 'dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -8.697387966094539e-05
    2. ' dr' → logprob: -9.375086784362793
    3. 'd' → logprob: -13.625086784362793
    4. '	dr' → logprob: -15.250086784362793
    5. '(dr' → logprob: -16.12508773803711
    6. '   ' → logprob: -16.12508773803711
    7. ' ' → logprob: -16.37508773803711
    8. '_dr' → logprob: -16.50008773803711
    9. '
' → logprob: -16.87508773803711
    10. '```' → logprob: -17.25008773803711

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003778840182349086
    2. ' ,' → logprob: -8.250377655029297
    3. ',d' → logprob: -9.750377655029297
    4. 'dc' → logprob: -11.125377655029297
    5. ',
' → logprob: -11.375377655029297
    6. ')' → logprob: -11.875377655029297
    7. ' dc' → logprob: -12.000377655029297
    8. ',length' → logprob: -12.000377655029297
    9. ',c' → logprob: -12.750377655029297
    10. '(dc' → logprob: -12.875377655029297

Token 662: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -7.493430894101039e-05
    2. ' dc' → logprob: -9.500075340270996
    3. '(dc' → logprob: -17.87507438659668
    4. 'c' → logprob: -18.00007438659668
    5. 'd' → logprob: -18.12507438659668
    6. '_dc' → logprob: -19.12507438659668
    7. ' ' → logprob: -19.50007438659668
    8. '0' → logprob: -19.62507438659668
    9. '.dc' → logprob: -19.87507438659668
    10. 'dcc' → logprob: -20.75007438659668

Token 663: ',length' (ID: 133718)
  Prédit: ',length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',length' → logprob: -0.000204851632588543
    2. ',' → logprob: -8.500205039978027
    3. ',len' → logprob: -13.750205039978027
    4. ' ,' → logprob: -15.750205039978027
    5. 'length' → logprob: -15.875205039978027
    6. '[length' → logprob: -17.50020408630371
    7. ',l' → logprob: -17.75020408630371
    8. ',width' → logprob: -18.87520408630371
    9. ' length' → logprob: -19.25020408630371
    10. ',size' → logprob: -19.37520408630371

Token 664: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017472924664616585
    2. ')
' → logprob: -6.376747131347656
    3. '                   ' → logprob: -10.376747131347656
    4. ',' → logprob: -11.876747131347656
    5. ' )' → logprob: -13.626747131347656
    6. ')
' → logprob: -14.001747131347656
    7. '):
' → logprob: -14.376747131347656
    8. ')`' → logprob: -14.376747131347656
    9. ')\
' → logprob: -14.626747131347656
    10. '               ' → logprob: -14.751747131347656

Token 665: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00041863700607791543
    2. '                    
' → logprob: -8.375418663024902
    3. '                       ' → logprob: -10.125418663024902
    4. '               ' → logprob: -10.500418663024902
    5. '<|end|>' → logprob: -10.625418663024902
    6. '                    ' → logprob: -10.875418663024902
    7. ' if' → logprob: -11.125418663024902
    8. '                   
' → logprob: -11.625418663024902
    9. '```' → logprob: -11.750418663024902
    10. '                  ' → logprob: -11.750418663024902

Token 666: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04971320554614067
    2. '                   ' → logprob: -3.049713134765625
    3. ' if' → logprob: -6.799713134765625
    4. '               ' → logprob: -12.674713134765625
    5. '                    
' → logprob: -13.299713134765625
    6. '#' (adapté à ' #') → logprob: -13.549713134765625
    7. '
' → logprob: -13.674713134765625
    8. '                       ' → logprob: -13.674713134765625
    9. '           ' → logprob: -14.049713134765625
    10. '   ' → logprob: -14.299713134765625

Token 667: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.1782583391759545e-05
    2. ' if' → logprob: -11.000031471252441
    3. '                   ' → logprob: -11.125031471252441
    4. '
' → logprob: -16.000032424926758
    5. '#' → logprob: -16.250032424926758
    6. 'If' → logprob: -16.750032424926758
    7. '                    
' → logprob: -17.500032424926758
    8. '   ' → logprob: -18.375032424926758
    9. '               ' → logprob: -18.500032424926758
    10. '```' → logprob: -18.750032424926758

Token 668: ' self' (ID: 1051)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5318437814712524
    2. ' if' → logprob: -2.156843662261963
    3. 'if' → logprob: -2.281843662261963
    4. 'not' → logprob: -2.406843662261963
    5. ' has' → logprob: -2.656843662261963
    6. 'has' → logprob: -3.406843662261963
    7. '                   ' → logprob: -7.281843662261963
    8. '   ' → logprob: -7.781843662261963
    9. ' for' → logprob: -10.031844139099121
    10. 'for' → logprob: -10.156844139099121

Token 669: '-over' (ID: 37193)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.00041065402911044657
    2. '_over' → logprob: -8.250411033630371
    3. 'over' → logprob: -9.625411033630371
    4. '_has' → logprob: -9.875411033630371
    5. 'if' → logprob: -11.875411033630371
    6. '_' → logprob: -11.875411033630371
    7. '   ' → logprob: -13.125411033630371
    8. '-over' → logprob: -13.125411033630371
    9. '_length' → logprob: -13.250411033630371
    10. ' overlap' → logprob: -13.250411033630371

Token 670: 'lap' (ID: 23092)
  Prédit: 'lap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lap' → logprob: -0.00021641071361955255
    2. 'ap' → logprob: -9.625216484069824
    3. 'seq' → logprob: -9.875216484069824
    4. 'lapping' → logprob: -9.875216484069824
    5. 'laps' → logprob: -10.750216484069824
    6. '_overlap' → logprob: -11.500216484069824
    7. 'rap' → logprob: -12.625216484069824
    8. 'l' → logprob: -13.250216484069824
    9. 'Lap' → logprob: -13.750216484069824
    10. 'wrap' → logprob: -13.750216484069824

Token 671: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005019801668822765
    2. ' if' → logprob: -5.755019664764404
    3. 'if' → logprob: -6.630019664764404
    4. '
' → logprob: -9.005020141601562
    5. '   ' → logprob: -9.255020141601562
    6. ',' → logprob: -9.755020141601562
    7. '               ' → logprob: -9.880020141601562
    8. '       ' → logprob: -9.880020141601562
    9. '                    
' → logprob: -10.255020141601562
    10. '           ' → logprob: -10.755020141601562

Token 672: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001236656797118485
    2. ' if' → logprob: -7.126236438751221
    3. 'if' → logprob: -7.876236438751221
    4. '               ' → logprob: -11.251236915588379
    5. '           ' → logprob: -11.376236915588379
    6. '       ' → logprob: -11.501236915588379
    7. '   ' → logprob: -12.001236915588379
    8. '                    
' → logprob: -12.001236915588379
    9. '
' → logprob: -13.626236915588379
    10. '				' → logprob: -13.751236915588379

Token 673: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02990449033677578
    2. ' if' → logprob: -3.52990460395813
    3. '                   ' → logprob: -8.77990436553955
    4. '   ' → logprob: -15.65490436553955
    5. 'continue' → logprob: -17.279905319213867
    6. '
' → logprob: -17.279905319213867
    7. '       ' → logprob: -17.529905319213867
    8. '                    
' → logprob: -17.529905319213867
    9. 'not' → logprob: -17.779905319213867
    10. ' ' → logprob: -18.154905319213867

Token 674: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02979503758251667
    2. ' if' → logprob: -3.529794931411743
    3. '                   ' → logprob: -10.029794692993164
    4. '```' → logprob: -15.654794692993164
    5. '   ' → logprob: -16.029794692993164
    6. '
' → logprob: -16.654794692993164
    7. 'continue' → logprob: -16.904794692993164
    8. '                    
' → logprob: -16.904794692993164
    9. 'If' → logprob: -17.029794692993164
    10. 'not' → logprob: -17.904794692993164

Token 675: ' sequence' (ID: 16281)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.24408526718616486
    2. ' has' → logprob: -1.6190853118896484
    3. ' not' → logprob: -4.244085311889648
    4. 'not' → logprob: -5.619085311889648
    5. 'length' → logprob: -8.244085311889648
    6. ' length' → logprob: -8.744085311889648
    7. 'len' → logprob: -9.994085311889648
    8. '(has' → logprob: -11.369085311889648
    9. ' len' → logprob: -11.494085311889648
    10. '   ' → logprob: -11.619085311889648

Token 676: ' doesn't' (ID: 8740)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7903079390525818
    2. ' not' → logprob: -1.6653079986572266
    3. 'in' → logprob: -2.0403079986572266
    4. 'has' → logprob: -2.2903079986572266
    5. ' has' → logprob: -2.5403079986572266
    6. 'not' → logprob: -4.165307998657227
    7. '.startswith' → logprob: -5.040307998657227
    8. ')' → logprob: -5.665307998657227
    9. '==' → logprob: -5.790307998657227
    10. '                   ' → logprob: -5.790307998657227

Token 677: ' have' (ID: 679)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.023362180218100548
    2. ' has' → logprob: -4.023362159729004
    3. '
' → logprob: -6.023362159729004
    4. ' not' → logprob: -6.898362159729004
    5. 'have' → logprob: -7.523362159729004
    6. 'not' → logprob: -7.648362159729004
    7. ' in' → logprob: -8.648362159729004
    8. ' have' → logprob: -9.023362159729004
    9. 'pass' → logprob: -9.398362159729004
    10. '   ' → logprob: -9.648362159729004

Token 678: ' repeated' (ID: 24161)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.589914858341217
    2. '_self' → logprob: -0.964914858341217
    3. 'self' → logprob: -2.8399147987365723
    4. ' has' → logprob: -5.339914798736572
    5. 'any' → logprob: -7.964914798736572
    6. 'length' → logprob: -8.08991527557373
    7. '
' → logprob: -8.83991527557373
    8. '_has' → logprob: -9.21491527557373
    9. '(has' → logprob: -9.83991527557373
    10. ' self' → logprob: -9.83991527557373

Token 679: ' positions' (ID: 15897)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.7395710349082947
    2. 'positions' → logprob: -1.1145710945129395
    3. 'parts' → logprob: -3.3645710945129395
    4. ' parts' → logprob: -3.4895710945129395
    5. ' positions' → logprob: -3.8645710945129395
    6. '
' → logprob: -4.2395710945129395
    7. 'sub' → logprob: -4.3645710945129395
    8. 's' → logprob: -4.4895710945129395
    9. '(seq' → logprob: -4.4895710945129395
    10. ' seq' → logprob: -4.4895710945129395

Token 680: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4859461188316345
    2. ' and' → logprob: -1.9859461784362793
    3. ':' → logprob: -2.3609461784362793
    4. ':
' → logprob: -2.8609461784362793
    5. 'and' → logprob: -2.9859461784362793
    6. 'or' → logprob: -3.6109461784362793
    7. '                   ' → logprob: -4.485946178436279
    8. '   ' → logprob: -5.860946178436279
    9. '                       ' → logprob: -6.610946178436279
    10. ',' → logprob: -6.860946178436279

Token 681: ' no' (ID: 860)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7186846137046814
    2. ' if' → logprob: -0.9686846137046814
    3. ' continue' → logprob: -2.343684673309326
    4. 'continue' → logprob: -3.593684673309326
    5. '                       ' → logprob: -4.843684673309326
    6. '                   ' → logprob: -7.343684673309326
    7. ' and' → logprob: -7.843684673309326
    8. ' length' → logprob: -8.343684196472168
    9. '   ' → logprob: -9.218684196472168
    10. 'length' → logprob: -9.343684196472168

Token 682: ' overlap' (ID: 56631)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.7307379245758057
    2. 'has' → logprob: -0.7307379245758057
    3. 'self' → logprob: -4.480737686157227
    4. 'if' → logprob: -4.605737686157227
    5. ' if' → logprob: -5.230737686157227
    6. ' self' → logprob: -5.730737686157227
    7. '_self' → logprob: -6.355737686157227
    8. 'continue' → logprob: -6.980737686157227
    9. '_has' → logprob: -7.355737686157227
    10. ' continue' → logprob: -7.605737686157227

Token 683: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04289058595895767
    2. ' and' → logprob: -4.167890548706055
    3. ':
' → logprob: -4.792890548706055
    4. ':' → logprob: -4.792890548706055
    5. '                       ' → logprob: -5.917890548706055
    6. ',' → logprob: -6.542890548706055
    7. '   ' → logprob: -6.917890548706055
    8. '):
' → logprob: -7.167890548706055
    9. '               ' → logprob: -7.292890548706055
    10. ' if' → logprob: -7.292890548706055

Token 684: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01632596366107464
    2. ' if' → logprob: -5.016325950622559
    3. ')' → logprob: -5.891325950622559
    4. '   ' → logprob: -6.516325950622559
    5. ',' → logprob: -7.391325950622559
    6. '                    
' → logprob: -7.391325950622559
    7. '
' → logprob: -7.516325950622559
    8. '               ' → logprob: -7.516325950622559
    9. 'if' → logprob: -7.641325950622559
    10. ' and' → logprob: -7.766325950622559

Token 685: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11085943132638931
    2. 'if' → logprob: -2.6108593940734863
    3. ' if' → logprob: -3.4858593940734863
    4. '
' → logprob: -7.360859394073486
    5. '                    
' → logprob: -8.985859870910645
    6. '   ' → logprob: -11.110859870910645
    7. '               ' → logprob: -11.235859870910645
    8. '           ' → logprob: -11.360859870910645
    9. '       ' → logprob: -11.985859870910645
    10. '				' → logprob: -12.110859870910645

Token 686: ' From' (ID: 7217)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4647085964679718
    2. '                   ' → logprob: -1.4647085666656494
    3. ' if' → logprob: -1.9647085666656494
    4. '
' → logprob: -8.21470832824707
    5. '                    
' → logprob: -10.58970832824707
    6. '   ' → logprob: -10.83970832824707
    7. '               ' → logprob: -12.33970832824707
    8. '       ' → logprob: -12.46470832824707
    9. '           ' → logprob: -12.46470832824707
    10. '                  ' → logprob: -13.21470832824707

Token 687: ' problem' (ID: 4792)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.22400158643722534
    2. 'len' → logprob: -2.22400164604187
    3. 'r' → logprob: -4.349001407623291
    4. 'seq' → logprob: -4.474001407623291
    5. 'length' → logprob: -4.474001407623291
    6. 'def' → logprob: -4.724001407623291
    7. ' has' → logprob: -4.974001407623291
    8. 'not' → logprob: -5.099001407623291
    9. 'dire' → logprob: -5.349001407623291
    10. 'the' → logprob: -5.599001407623291

Token 688: ''s' (ID: 885)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3046005666255951
    2. ',' → logprob: -2.179600477218628
    3. ' if' → logprob: -2.804600477218628
    4. 'if' → logprob: -3.679600477218628
    5. ')' → logprob: -4.679600715637207
    6. ':' → logprob: -4.804600715637207
    7. '   ' → logprob: -4.929600715637207
    8. '                       ' → logprob: -5.304600715637207
    9. '):
' → logprob: -5.679600715637207
    10. ' ,' → logprob: -5.679600715637207

Token 689: ' examples' (ID: 15652)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8972512483596802
    2. 'comment' → logprob: -1.8972512483596802
    3. 'description' → logprob: -1.8972512483596802
    4. ' perspective' → logprob: -2.0222511291503906
    5. 'comments' → logprob: -2.1472511291503906
    6. 'point' → logprob: -2.2722511291503906
    7. 'pers' → logprob: -3.2722511291503906
    8. 'context' → logprob: -4.147251129150391
    9. ' comments' → logprob: -4.522251129150391
    10. ' point' → logprob: -4.647251129150391

Token 690: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012365900911390781
    2. ',' → logprob: -5.512365818023682
    3. ' if' → logprob: -6.012365818023682
    4. ')' → logprob: -6.012365818023682
    5. '                    
' → logprob: -7.012365818023682
    6. '
' → logprob: -7.137365818023682
    7. 'if' → logprob: -8.13736629486084
    8. '<|end|>' → logprob: -8.26236629486084
    9. '               ' → logprob: -8.63736629486084
    10. '       ' → logprob: -9.13736629486084

Token 691: ' constraints' (ID: 31060)
  Prédit: 'comments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comments' → logprob: -0.3626055419445038
    2. '#' → logprob: -2.362605571746826
    3. 'code' → logprob: -2.737605571746826
    4. 'has' → logprob: -3.237605571746826
    5. ' comments' → logprob: -3.237605571746826
    6. 'comment' → logprob: -3.612605571746826
    7. ' code' → logprob: -4.362605571746826
    8. 'the' → logprob: -4.862605571746826
    9. 'description' → logprob: -5.487605571746826
    10. 'doc' → logprob: -6.487605571746826

Token 692: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0196941290050745
    2. ',' → logprob: -4.6446943283081055
    3. ')' → logprob: -5.7696943283081055
    4. ' if' → logprob: -6.5196943283081055
    5. '                    
' → logprob: -7.1446943283081055
    6. '
' → logprob: -7.2696943283081055
    7. '<|end|>' → logprob: -7.2696943283081055
    8. '):
' → logprob: -7.2696943283081055
    9. ':' → logprob: -7.7696943283081055
    10. ',
' → logprob: -8.144694328308105

Token 693: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008189473301172256
    2. ' if' → logprob: -4.883189678192139
    3. 'if' → logprob: -8.13318920135498
    4. '                    
' → logprob: -9.50818920135498
    5. '               ' → logprob: -9.88318920135498
    6. '   ' → logprob: -10.50818920135498
    7. '           ' → logprob: -10.63318920135498
    8. '       ' → logprob: -10.75818920135498
    9. '```' → logprob: -11.00818920135498
    10. '                    ' → logprob: -11.00818920135498

Token 694: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6410449743270874
    2. ' if' → logprob: -0.8910449743270874
    3. '                   ' → logprob: -2.766045093536377
    4. '                    
' → logprob: -10.391044616699219
    5. 'continue' → logprob: -10.641044616699219
    6. ' continue' → logprob: -11.641044616699219
    7. '   ' → logprob: -11.891044616699219
    8. '               ' → logprob: -12.016044616699219
    9. '
' → logprob: -12.266044616699219
    10. '           ' → logprob: -12.516044616699219

Token 695: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09322744607925415
    2. ' if' → logprob: -2.4682273864746094
    3. '                   ' → logprob: -5.468227386474609
    4. '```' → logprob: -11.21822738647461
    5. '
' → logprob: -11.34322738647461
    6. 'If' → logprob: -11.46822738647461
    7. '                    
' → logprob: -11.71822738647461
    8. '#' → logprob: -13.09322738647461
    9. 'length' → logprob: -13.21822738647461
    10. '   ' → logprob: -13.84322738647461

Token 696: ' sequences' (ID: 45665)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34710970520973206
    2. ' if' → logprob: -1.8471096754074097
    3. '#' → logprob: -3.097109794616699
    4. '                   ' → logprob: -3.222109794616699
    5. ' code' → logprob: -4.472109794616699
    6. ' next' → logprob: -5.222109794616699
    7. ' positions' → logprob: -5.347109794616699
    8. 'len' → logprob: -5.722109794616699
    9. ' #' → logprob: -5.722109794616699
    10. '
' → logprob: -6.097109794616699

Token 697: ' are' (ID: 553)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -1.1478643417358398
    2. 'must' → logprob: -1.2728643417358398
    3. ' that' → logprob: -2.77286434173584
    4. '                   ' → logprob: -2.89786434173584
    5. 'cannot' → logprob: -3.39786434173584
    6. ' can' → logprob: -3.52286434173584
    7. ' cannot' → logprob: -3.77286434173584
    8. ' may' → logprob: -3.89786434173584
    9. ' have' → logprob: -3.89786434173584
    10. ' are' → logprob: -3.89786434173584

Token 698: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7639453411102295
    2. ' not' → logprob: -1.2639453411102295
    3. ' only' → logprob: -2.8889453411102295
    4. 'only' → logprob: -3.2639453411102295
    5. ' valid' → logprob: -3.6389453411102295
    6. 'if' → logprob: -3.6389453411102295
    7. 'valid' → logprob: -4.513945579528809
    8. ' if' → logprob: -4.638945579528809
    9. 'excluded' → logprob: -4.763945579528809
    10. ' rejected' → logprob: -5.388945579528809

Token 699: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.6043017506599426
    2. ' allowed' → logprob: -1.9793016910552979
    3. 'formed' → logprob: -2.354301691055298
    4. 'self' → logprob: -2.479301691055298
    5. 'has' → logprob: -3.229301691055298
    6. ' formed' → logprob: -3.479301691055298
    7. ' has' → logprob: -5.229301929473877
    8. 're' → logprob: -5.354301929473877
    9. ' self' → logprob: -5.354301929473877
    10. 'period' → logprob: -5.479301929473877

Token 700: ' if' (ID: 538)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10204322636127472
    2. 'to' → logprob: -2.4770431518554688
    3. '                   ' → logprob: -4.352043151855469
    4. '               ' → logprob: -9.602043151855469
    5. '   ' → logprob: -11.602043151855469
    6. '                       ' → logprob: -11.727043151855469
    7. '                    ' → logprob: -12.102043151855469
    8. '
' → logprob: -12.227043151855469
    9. '                  ' → logprob: -12.352043151855469
    10. ' overlapping' → logprob: -12.477043151855469

Token 701: ' they' (ID: 1023)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.6344082951545715
    2. 'has' → logprob: -0.7594082951545715
    3. ' length' → logprob: -7.259408473968506
    4. 'length' → logprob: -7.509408473968506
    5. 'len' → logprob: -8.009407997131348
    6. ' len' → logprob: -9.384407997131348
    7. '(has' → logprob: -10.634407997131348
    8. '   ' → logprob: -10.634407997131348
    9. ' ' → logprob: -11.009407997131348
    10. '	has' → logprob: -11.759407997131348

Token 702: ' overlap' (ID: 56631)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.5023897886276245
    2. 'have' → logprob: -1.6273897886276245
    3. ' in' → logprob: -2.377389907836914
    4. ' are' → logprob: -2.877389907836914
    5. ' overlap' → logprob: -4.002389907836914
    6. 'in' → logprob: -4.877389907836914
    7. 'are' → logprob: -5.627389907836914
    8. ' can' → logprob: -5.752389907836914
    9. ' contain' → logprob: -6.252389907836914
    10. ' appear' → logprob: -6.377389907836914

Token 703: ' themselves' (ID: 9247)
  Prédit: ' themselves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' themselves' → logprob: -0.6876161694526672
    2. '                   ' → logprob: -1.8126161098480225
    3. 'self' → logprob: -1.9376161098480225
    4. ' itself' → logprob: -2.6876161098480225
    5. '_self' → logprob: -3.9376161098480225
    6. 'selves' → logprob: -4.187616348266602
    7. '               ' → logprob: -4.312616348266602
    8. '_positions' → logprob: -4.687616348266602
    9. ' or' → logprob: -4.937616348266602
    10. 'with' → logprob: -4.937616348266602

Token 704: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004937716294080019
    2. '
' → logprob: -6.504937648773193
    3. '                    
' → logprob: -6.754937648773193
    4. ')' → logprob: -7.629937648773193
    5. ',' → logprob: -7.879937648773193
    6. ' if' → logprob: -7.879937648773193
    7. '               ' → logprob: -8.879938125610352
    8. '       ' → logprob: -8.879938125610352
    9. ' and' → logprob: -9.129938125610352
    10. '<|end|>' → logprob: -9.129938125610352

Token 705: ' e' (ID: 319)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017083751736208797
    2. ' continue' → logprob: -7.251708507537842
    3. ' if' → logprob: -7.626708507537842
    4. 'continue' → logprob: -8.751708030700684
    5. '                    ' → logprob: -9.876708030700684
    6. 'if' → logprob: -9.876708030700684
    7. '                    
' → logprob: -10.001708030700684
    8. '               ' → logprob: -10.126708030700684
    9. '                  ' → logprob: -10.126708030700684
    10. '
' → logprob: -10.251708030700684

Token 706: '.g' (ID: 1940)
  Prédit: 'lse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lse' → logprob: -0.007560606114566326
    2. '#' → logprob: -6.382560729980469
    3. 'ls' → logprob: -6.757560729980469
    4. 'lif' → logprob: -7.007560729980469
    5. '==' → logprob: -7.132560729980469
    6. 'elif' → logprob: -7.382560729980469
    7. '       ' → logprob: -7.507560729980469
    8. 'l' → logprob: -8.007560729980469
    9. 'else' → logprob: -8.132560729980469
    10. 'qual' → logprob: -8.882560729980469

Token 707: '.' (ID: 13)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07257290929555893
    2. ' not' → logprob: -3.822572946548462
    3. '                       ' → logprob: -4.322572708129883
    4. '#' → logprob: -5.322572708129883
    5. '                    ' → logprob: -5.322572708129883
    6. ':' → logprob: -6.072572708129883
    7. '                  ' → logprob: -6.197572708129883
    8. ',' → logprob: -6.322572708129883
    9. '                        
' → logprob: -6.322572708129883
    10. '               ' → logprob: -6.572572708129883

Token 708: ' periodic' (ID: 60546)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.2706108093261719
    2. 'length' → logprob: -1.6456108093261719
    3. ' (' → logprob: -4.145610809326172
    4. '(length' → logprob: -4.395610809326172
    5. ' dr' → logprob: -4.895610809326172
    6. 'dr' → logprob: -5.895610809326172
    7. 'len' → logprob: -7.020610809326172
    8. '                   ' → logprob: -7.395610809326172
    9. ' len' → logprob: -7.395610809326172
    10. ' k' → logprob: -7.520610809326172

Token 709: ' sequences' (ID: 45665)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1028090715408325
    2. ' and' → logprob: -1.3528090715408325
    3. 'and' → logprob: -1.9778090715408325
    4. ')' → logprob: -2.852808952331543
    5. '                   ' → logprob: -2.852808952331543
    6. ':
' → logprob: -3.602808952331543
    7. '):' → logprob: -3.602808952331543
    8. ' or' → logprob: -3.727808952331543
    9. ',' → logprob: -4.477808952331543
    10. '   ' → logprob: -4.727808952331543

Token 710: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02082774229347706
    2. ',' → logprob: -4.770827770233154
    3. ')' → logprob: -5.520827770233154
    4. ':' → logprob: -6.270827770233154
    5. ' and' → logprob: -6.770827770233154
    6. ' if' → logprob: -7.145827770233154
    7. '<|end|>' → logprob: -7.145827770233154
    8. '):
' → logprob: -7.770827770233154
    9. ':
' → logprob: -8.020827293395996
    10. '               ' → logprob: -8.145827293395996

Token 711: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00015681622608099133
    2. '```' → logprob: -9.62515640258789
    3. '                    
' → logprob: -10.12515640258789
    4. '               ' → logprob: -11.25015640258789
    5. '                    ' → logprob: -11.37515640258789
    6. '				' → logprob: -12.12515640258789
    7. '<|end|>' → logprob: -12.62515640258789
    8. '           ' → logprob: -12.62515640258789
    9. '                  ' → logprob: -12.75015640258789
    10. '       ' → logprob: -13.37515640258789

Token 712: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03828383982181549
    2. 'if' (adapté à ' if') → logprob: -3.5382838249206543
    3. ' if' → logprob: -4.788283824920654
    4. '
' → logprob: -9.663284301757812
    5. '   ' → logprob: -10.038284301757812
    6. '       ' → logprob: -10.538284301757812
    7. '               ' → logprob: -11.288284301757812
    8. '           ' → logprob: -11.288284301757812
    9. '                    
' → logprob: -12.038284301757812
    10. '                  ' → logprob: -13.538284301757812

Token 713: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.12298695743083954
    2. 'not' → logprob: -2.4979870319366455
    3. ' has' → logprob: -3.7479870319366455
    4. ' not' → logprob: -4.622986793518066
    5. '   ' → logprob: -10.247986793518066
    6. 'len' → logprob: -11.247986793518066
    7. '(has' → logprob: -11.622986793518066
    8. 'length' → logprob: -11.997986793518066
    9. '	has' → logprob: -12.247986793518066
    10. ' ' → logprob: -12.247986793518066

Token 714: '_self' (ID: 64773)
  Prédit: '_self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_self' → logprob: -1.9361264946837764e-07
    2. 'self' → logprob: -16.125
    3. '_' → logprob: -20.25
    4. '_SELF' → logprob: -21.0
    5. 'Self' → logprob: -21.25
    6. '```' → logprob: -22.125
    7. '_s' → logprob: -22.25
    8. ')_' → logprob: -22.375
    9. ''_' → logprob: -22.625
    10. '<Self' → logprob: -22.875

Token 715: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -3.8219583075260743e-05
    2. '_self' → logprob: -10.500038146972656
    3. '_over' → logprob: -11.750038146972656
    4. '_' → logprob: -14.250038146972656
    5. '```' → logprob: -14.250038146972656
    6. 'over' → logprob: -14.625038146972656
    7. 'self' → logprob: -15.000038146972656
    8. '
' → logprob: -15.875038146972656
    9. '_override' → logprob: -16.125038146972656
    10. '_continue' → logprob: -17.000038146972656

Token 716: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.25000286102295
    3. ' (' → logprob: -14.50000286102295
    4. '(
' → logprob: -15.25000286102295
    5. '(sequence' → logprob: -15.62500286102295
    6. ')' → logprob: -16.000003814697266
    7. '(se' → logprob: -16.500003814697266
    8. 'seq' → logprob: -17.375003814697266
    9. ')(' → logprob: -18.250003814697266
    10. '```' → logprob: -18.250003814697266

Token 717: ',length' (ID: 133718)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5759598612785339
    2. ',length' → logprob: -0.8259598612785339
    3. '[length' → logprob: -11.700960159301758
    4. 'length' → logprob: -12.575960159301758
    5. ',len' → logprob: -12.825960159301758
    6. ' ,' → logprob: -13.200960159301758
    7. '(length' → logprob: -13.450960159301758
    8. ',
' → logprob: -13.950960159301758
    9. ',l' → logprob: -15.825960159301758
    10. ',value' → logprob: -16.075960159301758

Token 718: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1619223803281784
    2. '):
' → logprob: -2.1619224548339844
    3. ')==' → logprob: -3.9119224548339844
    4. ')' → logprob: -4.661922454833984
    5. '==' → logprob: -5.661922454833984
    6. '                       ' → logprob: -7.661922454833984
    7. ' or' → logprob: -8.036922454833984
    8. ':' → logprob: -8.286922454833984
    9. '                   ' → logprob: -8.911922454833984
    10. '       ' → logprob: -9.286922454833984

Token 719: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001785490894690156
    2. ' continue' → logprob: -6.6267852783203125
    3. '                   ' → logprob: -8.251785278320312
    4. 'continue' → logprob: -9.251785278320312
    5. '                           ' → logprob: -10.501785278320312
    6. '       ' → logprob: -10.876785278320312
    7. '	continue' → logprob: -11.251785278320312
    8. '                               ' → logprob: -11.376785278320312
    9. ' continues' → logprob: -12.001785278320312
    10. '   ' → logprob: -12.501785278320312

Token 720: ' continue' (ID: 4901)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7487778663635254
    2. '                       ' → logprob: -0.9987778663635254
    3. ' continue' → logprob: -2.3737778663635254
    4. 'continue' (adapté à ' continue') → logprob: -2.7487778663635254
    5. '                   ' → logprob: -7.373777866363525
    6. '                               ' → logprob: -7.873777866363525
    7. '	continue' → logprob: -8.248777389526367
    8. '           ' → logprob: -8.873777389526367
    9. '   ' → logprob: -9.498777389526367
    10. '						' → logprob: -9.998777389526367

Token 721: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021006133407354355
    2. '                    
' → logprob: -4.271006107330322
    3. '
' → logprob: -5.396006107330322
    4. '<|end|>' → logprob: -7.021006107330322
    5. '```' → logprob: -7.771006107330322
    6. '                        
' → logprob: -8.02100658416748
    7. '                   
' → logprob: -8.52100658416748
    8. '  
' → logprob: -9.64600658416748
    9. '               ' → logprob: -9.89600658416748
    10. '<|end|>' → logprob: -10.14600658416748

Token 722: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009027653140947223
    2. '                    
' → logprob: -7.5009026527404785
    3. '
' → logprob: -8.875903129577637
    4. '               ' → logprob: -9.000903129577637
    5. '```' → logprob: -10.750903129577637
    6. '                  ' → logprob: -11.375903129577637
    7. '                       ' → logprob: -11.500903129577637
    8. '           ' → logprob: -11.750903129577637
    9. '                   
' → logprob: -11.875903129577637
    10. '                        
' → logprob: -12.125903129577637

Token 723: ' counter' (ID: 9446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009960101451724768
    2. 'token' → logprob: -7.750996112823486
    3. '                    
' → logprob: -8.500995635986328
    4. 'key' → logprob: -8.625995635986328
    5. ' key' → logprob: -9.375995635986328
    6. 'seq' → logprob: -10.750995635986328
    7. 'counter' (adapté à ' counter') → logprob: -10.875995635986328
    8. '               ' → logprob: -11.500995635986328
    9. '                       ' → logprob: -11.500995635986328
    10. 'if' → logprob: -11.875995635986328

Token 724: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.0722858102526516e-05
    2. '.setdefault' → logprob: -10.125041007995605
    3. 'seq' → logprob: -14.500041007995605
    4. ' [' → logprob: -17.25004005432129
    5. '(seq' → logprob: -17.62504005432129
    6. '```' → logprob: -18.00004005432129
    7. '[(' → logprob: -18.12504005432129
    8. '_seq' → logprob: -18.12504005432129
    9. '[token' → logprob: -18.75004005432129
    10. '[key' → logprob: -18.75004005432129

Token 725: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -4.961759259458631e-06
    2. '(seq' → logprob: -12.250004768371582
    3. ' seq' → logprob: -16.1250057220459
    4. '[' → logprob: -17.5000057220459
    5. '   ' → logprob: -18.8750057220459
    6. 'sys' → logprob: -20.3750057220459
    7. '```' → logprob: -20.7500057220459
    8. 'Seq' → logprob: -20.7500057220459
    9. '.seq' → logprob: -20.8750057220459
    10. '
' → logprob: -21.1250057220459

Token 726: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013307173736393452
    2. ']=' → logprob: -4.888307094573975
    3. ' =' → logprob: -5.513307094573975
    4. ']' → logprob: -6.513307094573975
    5. ']+=' → logprob: -9.138307571411133
    6. '+=' → logprob: -10.138307571411133
    7. '=None' → logprob: -12.263307571411133
    8. '=count' → logprob: -13.013307571411133
    9. ')=' → logprob: -13.138307571411133
    10. '=[' → logprob: -13.263307571411133

Token 727: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003365350130479783
    2. ' =' → logprob: -8.000336647033691
    3. '+=' → logprob: -14.000336647033691
    4. '=count' → logprob: -16.000335693359375
    5. '=
' → logprob: -17.500335693359375
    6. '=

' → logprob: -17.750335693359375
    7. '=[' → logprob: -17.875335693359375
    8. '=None' → logprob: -18.125335693359375
    9. '=c' → logprob: -19.125335693359375
    10. '[' → logprob: -19.125335693359375

Token 728: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.0009115827269852161
    2. ' counter' → logprob: -7.000911712646484
    3. '	counter' → logprob: -16.375911712646484
    4. '[counter' → logprob: -18.250911712646484
    5. '(counter' → logprob: -18.875911712646484
    6. '   ' → logprob: -19.500911712646484
    7. 'count' → logprob: -19.500911712646484
    8. '_counter' → logprob: -20.625911712646484
    9. 'Counter' → logprob: -21.250911712646484
    10. 'c' → logprob: -21.375911712646484

Token 729: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.027237839996814728
    2. '[' → logprob: -3.652237892150879
    3. 'get' → logprob: -7.027237892150879
    4. '.' → logprob: -11.027237892150879
    5. '.setdefault' → logprob: -11.277237892150879
    6. 'counter' → logprob: -11.527237892150879
    7. 'seq' → logprob: -12.652237892150879
    8. '```' → logprob: -12.777237892150879
    9. '[counter' → logprob: -13.027237892150879
    10. ' .' → logprob: -14.777237892150879

Token 730: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -1.3856492842023727e-06
    2. 'seq' → logprob: -13.625000953674316
    3. '(' → logprob: -16.375001907348633
    4. '(se' → logprob: -17.000001907348633
    5. '(sequence' → logprob: -17.875001907348633
    6. '(counter' → logprob: -19.750001907348633
    7. '(token' → logprob: -20.875001907348633
    8. '(freq' → logprob: -21.000001907348633
    9. '(sys' → logprob: -21.125001907348633
    10. '(seg' → logprob: -21.125001907348633

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.35837464465294e-05
    2. '(seq' → logprob: -10.500043869018555
    3. ')' → logprob: -11.625043869018555
    4. '```' → logprob: -13.375043869018555
    5. '1' → logprob: -13.625043869018555
    6. 'seq' → logprob: -13.625043869018555
    7. ' ,' → logprob: -14.000043869018555
    8. ')+' → logprob: -14.375043869018555
    9. '+' → logprob: -14.750043869018555
    10. ']+' → logprob: -14.875043869018555

Token 732: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -19.000001907348633
    4. ')' → logprob: -19.625001907348633
    5. '   ' → logprob: -20.375001907348633
    6. '```' → logprob: -21.125001907348633
    7. '1' → logprob: -21.500001907348633
    8. '
' → logprob: -21.875001907348633
    9. '０' → logprob: -22.250001907348633
    10. '  ' → logprob: -22.625001907348633

Token 733: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13587446510791779
    2. ' +' → logprob: -2.1358745098114014
    3. ')' → logprob: -4.885874271392822
    4. ')+' → logprob: -6.635874271392822
    5. ']+' → logprob: -11.13587474822998
    6. ']' → logprob: -12.26087474822998
    7. '```' → logprob: -12.26087474822998
    8. '()+' → logprob: -12.51087474822998
    9. ' )' → logprob: -13.26087474822998
    10. '+)' → logprob: -13.38587474822998

Token 734: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.750003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '+' → logprob: -21.875003814697266
    6. '`' → logprob: -22.750003814697266
    7. '  ' → logprob: -23.000003814697266
    8. '                   ' → logprob: -23.750003814697266
    9. '
' → logprob: -23.750003814697266
    10. '       ' → logprob: -24.125003814697266

Token 735: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014666400849819183
    2. '<|end|>' → logprob: -4.639666557312012
    3. '               ' → logprob: -6.639666557312012
    4. '<|end|>' → logprob: -7.139666557312012
    5. '
' → logprob: -7.389666557312012
    6. '				' → logprob: -8.139666557312012
    7. '                    ' → logprob: -8.514666557312012
    8. '                  ' → logprob: -8.514666557312012
    9. '                       ' → logprob: -8.764666557312012
    10. '                    
' → logprob: -8.764666557312012

Token 736: '       ' (ID: 309)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021154601126909256
    2. '<|end|>' → logprob: -4.146154403686523
    3. '               ' → logprob: -6.771154403686523
    4. '				' → logprob: -6.896154403686523
    5. '<|end|>' → logprob: -7.896154403686523
    6. ' ' → logprob: -8.146154403686523
    7. '                    ' → logprob: -8.271154403686523
    8. '       ' → logprob: -8.271154403686523
    9. '
' → logprob: -8.396154403686523
    10. '           ' → logprob: -8.521154403686523

Token 737: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008392940275371075
    2. 'for' → logprob: -5.133392810821533
    3. ' for' → logprob: -6.258392810821533
    4. '                   ' → logprob: -8.758393287658691
    5. '
' → logprob: -8.883393287658691
    6. '```' → logprob: -9.758393287658691
    7. '   ' → logprob: -9.883393287658691
    8. '               ' → logprob: -10.383393287658691
    9. '           ' → logprob: -10.883393287658691
    10. '	' → logprob: -10.883393287658691

Token 738: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16032251715660095
    2. '=' → logprob: -1.9103225469589233
    3. '[' → logprob: -10.660322189331055
    4. '=[]' → logprob: -10.910322189331055
    5. '=[' → logprob: -11.410322189331055
    6. ' =[' → logprob: -11.910322189331055
    7. '<|end|>' → logprob: -12.160322189331055
    8. ')' → logprob: -12.160322189331055
    9. '```' → logprob: -12.535322189331055
    10. ',' → logprob: -12.785322189331055

Token 739: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.07859527319669724
    2. '[' → logprob: -3.0785951614379883
    3. '[(' → logprob: -4.078595161437988
    4. '{k' → logprob: -5.078595161437988
    5. '[k' → logprob: -5.578595161437988
    6. '[key' → logprob: -7.203595161437988
    7. ' [' → logprob: -7.828595161437988
    8. '[s' → logprob: -8.203595161437988
    9. '{x' → logprob: -8.328595161437988
    10. '[x' → logprob: -8.828595161437988

Token 740: 's' (ID: 82)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.5252994894981384
    2. 'seq' → logprob: -1.0252995491027832
    3. '(k' → logprob: -3.900299549102783
    4. '(' → logprob: -4.025299549102783
    5. 'k' → logprob: -5.025299549102783
    6. '(s' → logprob: -6.525299549102783
    7. '(key' → logprob: -6.775299549102783
    8. ' (' → logprob: -6.775299549102783
    9. 'key' → logprob: -7.025299549102783
    10. ' seq' → logprob: -7.900299549102783

Token 741: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.313264936208725
    2. 'for' → logprob: -1.3132649660110474
    3. '	for' → logprob: -13.688264846801758
    4. 'or' → logprob: -14.438264846801758
    5. '
' → logprob: -14.563264846801758
    6. ' ' → logprob: -14.688264846801758
    7. '   ' → logprob: -15.438264846801758
    8. '           ' → logprob: -16.313264846801758
    9. '```' → logprob: -16.688264846801758
    10. ']' → logprob: -16.813264846801758

Token 742: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02324908785521984
    2. ' s' → logprob: -3.7732491493225098
    3. ',' → logprob: -12.648248672485352
    4. ',s' → logprob: -16.27324867248535
    5. 'length' → logprob: -16.64824867248535
    6. '	s' → logprob: -16.77324867248535
    7. '_s' → logprob: -17.02324867248535
    8. ' in' → logprob: -17.39824867248535
    9. 'k' → logprob: -17.89824867248535
    10. '(s' → logprob: -18.02324867248535

Token 743: ',count' (ID: 139747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5623295307159424
    2. 'in' → logprob: -1.1873295307159424
    3. ' in' → logprob: -2.4373295307159424
    4. ',s' → logprob: -3.6873295307159424
    5. ',count' → logprob: -4.687329292297363
    6. 's' → logprob: -6.062329292297363
    7. ' ,' → logprob: -7.437329292297363
    8. ',c' → logprob: -8.437329292297363
    9. ',in' → logprob: -8.562329292297363
    10. 'count' → logprob: -10.687329292297363

Token 744: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0576908215880394
    2. 'in' → logprob: -3.3076908588409424
    3. ',' → logprob: -4.182690620422363
    4. ',count' → logprob: -6.182690620422363
    5. ',s' → logprob: -6.432690620422363
    6. 's' → logprob: -7.682690620422363
    7. ' ' → logprob: -11.057690620422363
    8. ' ,' → logprob: -11.057690620422363
    9. 'count' → logprob: -11.557690620422363
    10. '
' → logprob: -11.932690620422363

Token 745: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -5.240481914370321e-05
    2. ' counter' → logprob: -9.875052452087402
    3. '(counter' → logprob: -14.625052452087402
    4. '[counter' → logprob: -16.000051498413086
    5. 'count' → logprob: -16.500051498413086
    6. '   ' → logprob: -16.625051498413086
    7. 'c' → logprob: -17.125051498413086
    8. '{' → logprob: -17.500051498413086
    9. '	counter' → logprob: -18.125051498413086
    10. '
' → logprob: -18.500051498413086

Token 746: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.00023393364972434938
    2. 'items' → logprob: -8.50023365020752
    3. '.iteritems' → logprob: -10.62523365020752
    4. '.' → logprob: -13.62523365020752
    5. 'if' → logprob: -13.87523365020752
    6. '_items' → logprob: -13.87523365020752
    7. ' if' → logprob: -13.87523365020752
    8. '.values' → logprob: -14.50023365020752
    9. '.Items' → logprob: -14.75023365020752
    10. ' items' → logprob: -15.00023365020752

Token 747: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05654624477028847
    2. ' if' → logprob: -3.431546211242676
    3. 'if' → logprob: -3.806546211242676
    4. '       ' → logprob: -8.431546211242676
    5. '           ' → logprob: -9.431546211242676
    6. '        ' → logprob: -10.306546211242676
    7. '   ' → logprob: -11.306546211242676
    8. ',' → logprob: -11.306546211242676
    9. '          ' → logprob: -11.931546211242676
    10. '()>' → logprob: -11.931546211242676

Token 748: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16046945750713348
    2. 'if' → logprob: -1.91046941280365
    3. '           ' → logprob: -8.660469055175781
    4. '       ' → logprob: -9.785469055175781
    5. '          ' → logprob: -12.410469055175781
    6. '	if' → logprob: -12.660469055175781
    7. '               ' → logprob: -12.910469055175781
    8. '        ' → logprob: -13.410469055175781
    9. ',' → logprob: -13.660469055175781
    10. '         ' → logprob: -14.160469055175781

Token 749: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01416350994259119
    2. ' count' → logprob: -4.264163494110107
    3. '   ' → logprob: -17.264163970947266
    4. '	count' → logprob: -17.764163970947266
    5. ' ' → logprob: -17.889163970947266
    6. '(count' → logprob: -18.014163970947266
    7. '[count' → logprob: -18.764163970947266
    8. '
' → logprob: -19.889163970947266
    9. '    ' → logprob: -20.139163970947266
    10. '```' → logprob: -20.139163970947266

Token 750: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00391964940354228
    2. ' >' → logprob: -5.75391960144043
    3. '>=' → logprob: -7.25391960144043
    4. ' >=' → logprob: -10.62891960144043
    5. '[' → logprob: -12.87891960144043
    6. '```' → logprob: -13.00391960144043
    7. '>
' → logprob: -13.62891960144043
    8. '   ' → logprob: -14.00391960144043
    9. '≥' → logprob: -14.25391960144043
    10. '&gt' → logprob: -14.37891960144043

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '=' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.625003814697266
    4. '
' → logprob: -16.500003814697266
    5. '>' → logprob: -17.750003814697266
    6. '   ' → logprob: -19.250003814697266
    7. '```' → logprob: -19.500003814697266
    8. '۱' → logprob: -20.000003814697266
    9. '१' → logprob: -20.125003814697266
    10. '[' → logprob: -20.625003814697266

Token 752: ']
' (ID: 1592)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5419043898582458
    2. ']' → logprob: -1.6669044494628906
    3. ']
' → logprob: -1.7919044494628906
    4. 'and' → logprob: -2.7919044494628906
    5. ' if' → logprob: -6.791904449462891
    6. '       ' → logprob: -8.16690444946289
    7. '   ' → logprob: -9.54190444946289
    8. 'if' → logprob: -10.29190444946289
    9. ']

' → logprob: -10.91690444946289
    10. ' ]
' → logprob: -11.29190444946289

Token 753: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011486716102808714
    2. '.sort' → logprob: -7.126148700714111
    3. '           ' → logprob: -8.751148223876953
    4. '   ' → logprob: -10.126148223876953
    5. '<|end|>' → logprob: -10.876148223876953
    6. '               ' → logprob: -11.001148223876953
    7. ' if' → logprob: -11.251148223876953
    8. 'sort' → logprob: -11.251148223876953
    9. '
' → logprob: -11.376148223876953
    10. '                   ' → logprob: -11.501148223876953

Token 754: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2107553631067276
    2. '       ' → logprob: -1.7107553482055664
    3. 'c' → logprob: -4.960755348205566
    4. ' if' → logprob: -6.085755348205566
    5. ' candidates' → logprob: -11.835755348205566
    6. '   ' → logprob: -12.585755348205566
    7. '```' → logprob: -13.085755348205566
    8. '           ' → logprob: -13.460755348205566
    9. '
' → logprob: -14.210755348205566
    10. '_candidates' → logprob: -15.335755348205566

Token 755: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029753616079688072
    2. ' candidates' → logprob: -3.5297536849975586
    3. 'len' → logprob: -12.904753684997559
    4. ' c' → logprob: -14.654753684997559
    5. ' len' → logprob: -15.904753684997559
    6. '	c' → logprob: -16.654752731323242
    7. 'cand' → logprob: -17.404752731323242
    8. '_candidates' → logprob: -17.529752731323242
    9. '   ' → logprob: -18.154752731323242
    10. ' candidats' → logprob: -18.404752731323242

Token 756: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029916061088442802
    2. ':
' → logprob: -3.5299160480499268
    3. '.sort' → logprob: -9.279915809631348
    4. '):' → logprob: -10.529915809631348
    5. '=' → logprob: -11.029915809631348
    6. '):
' → logprob: -11.529915809631348
    7. '>:' → logprob: -12.529915809631348
    8. ' =' → logprob: -12.779915809631348
    9. ']:' → logprob: -12.904915809631348
    10. '=[]' → logprob: -13.529915809631348

Token 757: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07910998165607452
    2. '           ' → logprob: -2.5791099071502686
    3. 'return' → logprob: -9.329110145568848
    4. ' return' → logprob: -10.204110145568848
    5. ' candidates' → logprob: -10.454110145568848
    6. '   ' → logprob: -10.579110145568848
    7. 'sorted' → logprob: -11.329110145568848
    8. '```' → logprob: -12.079110145568848
    9. '
' → logprob: -12.204110145568848
    10. ' sorted' → logprob: -12.329110145568848

Token 758: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.48096945881843567
    2. ' return' → logprob: -1.8559694290161133
    3. ' candidates' → logprob: -2.3559694290161133
    4. 'c' → logprob: -2.4809694290161133
    5. '           ' → logprob: -3.7309694290161133
    6. '       ' → logprob: -4.855969429016113
    7. 'cand' → logprob: -5.605969429016113
    8. 'result' → logprob: -5.980969429016113
    9. 'answer' → logprob: -6.105969429016113
    10. '   ' → logprob: -6.480969429016113

Token 759: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0002249933750135824
    2. ' min' → logprob: -8.500225067138672
    3. 'sorted' → logprob: -10.750225067138672
    4. 'max' → logprob: -17.500225067138672
    5. '(min' → logprob: -18.125225067138672
    6. '   ' → logprob: -18.375225067138672
    7. ' sorted' → logprob: -19.375225067138672
    8. ' ' → logprob: -20.000225067138672
    9. '[min' → logprob: -20.750225067138672
    10. '	min' → logprob: -21.000225067138672

Token 760: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0004309076175559312
    2. 'c' → logprob: -7.750431060791016
    3. ')c' → logprob: -16.250431060791016
    4. '[c' → logprob: -16.875431060791016
    5. '(candidate' → logprob: -17.125431060791016
    6. '(' → logprob: -17.875431060791016
    7. '`' → logprob: -18.375431060791016
    8. '	c' → logprob: -18.625431060791016
    9. ' candidates' → logprob: -18.625431060791016
    10. '_candidates' → logprob: -18.875431060791016

Token 761: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.00016027313540689647
    2. 'and' → logprob: -8.875160217285156
    3. 'c' → logprob: -11.000160217285156
    4. 'andidate' → logprob: -13.500160217285156
    5. 'andid' → logprob: -14.250160217285156
    6. 'ands' → logprob: -15.000160217285156
    7. 'andi' → logprob: -15.000160217285156
    8. '_candidates' → logprob: -15.000160217285156
    9. '{' → logprob: -15.500160217285156
    10. '[' → logprob: -15.625160217285156

Token 762: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045724798110313714
    2. '       ' → logprob: -8.875456809997559
    3. ')
' → logprob: -8.875456809997559
    4. '<|end|>' → logprob: -9.250456809997559
    5. ' )' → logprob: -10.375456809997559
    6. '())' → logprob: -10.875456809997559
    7. ')return' → logprob: -11.875456809997559
    8. '   ' → logprob: -12.000456809997559
    9. '()' → logprob: -12.125456809997559
    10. '')' → logprob: -13.250456809997559

Token 763: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 764: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03550630807876587
    2. '```' → logprob: -4.535506248474121
    3. '
' → logprob: -4.785506248474121
    4. '   ' → logprob: -4.910506248474121
    5. '<|end|>' → logprob: -5.910506248474121
    6. '\' → logprob: -6.910506248474121
    7. '\n' → logprob: -6.910506248474121
    8. ' return' → logprob: -7.160506248474121
    9. '    
' → logprob: -7.410506248474121
    10. 'None' → logprob: -7.535506248474121

Token 765: ' "' (ID: 392)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.6068090796470642
    2. '''' → logprob: -0.8568090796470642
    3. 'None' → logprob: -3.606809139251709
    4. '"' → logprob: -5.856809139251709
    5. ' None' → logprob: -8.60680866241455
    6. ''' → logprob: -8.73180866241455
    7. ' ""' → logprob: -10.23180866241455
    8. ' ''' → logprob: -11.73180866241455
    9. '''
' → logprob: -13.23180866241455
    10. '"-' → logprob: -13.35680866241455

Token 766: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07115030288696289
    2. '"' → logprob: -3.321150302886963
    3. '""' → logprob: -4.196150302886963
    4. '"-' → logprob: -4.821150302886963
    5. 'None' → logprob: -5.446150302886963
    6. 'NONE' → logprob: -6.071150302886963
    7. '"No' → logprob: -6.696150302886963
    8. 'No' → logprob: -7.696150302886963
    9. 'IMP' → logprob: -8.196149826049805
    10. 'NO' → logprob: -8.446149826049805

Token 767: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -3.666993507067673e-05
    2. '"
' → logprob: -11.125036239624023
    3. '")' → logprob: -11.500036239624023
    4. '"""' → logprob: -11.875036239624023
    5. '```' → logprob: -13.000036239624023
    6. ')"' → logprob: -14.375036239624023
    7. ''"' → logprob: -14.625036239624023
    8. '"#' → logprob: -15.250036239624023
    9. '"\' → logprob: -15.375036239624023
    10. '\n' → logprob: -15.500036239624023

Token 768: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 769: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.31496062874794006
    2. ' main' → logprob: -1.3149605989456177
    3. '__' → logprob: -7.189960479736328
    4. 'input' → logprob: -7.564960479736328
    5. '_main' → logprob: -8.689960479736328
    6. ' __' → logprob: -9.564960479736328
    7. 'solve' → logprob: -9.689960479736328
    8. ' input' → logprob: -10.814960479736328
    9. '_input' → logprob: -11.064960479736328
    10. ' solve' → logprob: -11.314960479736328

Token 770: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007620468270033598
    2. '():
' → logprob: -4.882620334625244
    3. ' ():' → logprob: -11.632620811462402
    4. '()' → logprob: -12.757620811462402
    5. '():
' → logprob: -13.882620811462402
    6. '_' → logprob: -14.257620811462402
    7. '():

' → logprob: -14.257620811462402
    8. '(' → logprob: -16.007619857788086
    9. '()>' → logprob: -16.632619857788086
    10. '().' → logprob: -17.132619857788086

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08810349553823471
    2. '```' → logprob: -2.7131035327911377
    3. 'import' → logprob: -4.588103294372559
    4. '(h' → logprob: -6.088103294372559
    5. '():' → logprob: -6.088103294372559
    6. '()' → logprob: -7.463103294372559
    7. '(' → logprob: -8.088103294372559
    8. ':' → logprob: -8.213103294372559
    9. 'input' → logprob: -8.338103294372559
    10. '():
' → logprob: -8.338103294372559

Token 772: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.671125054359436
    2. 'import' → logprob: -1.296125054359436
    3. ' n' → logprob: -1.921125054359436
    4. '   ' → logprob: -3.4211249351501465
    5. ' import' → logprob: -3.4211249351501465
    6. 'input' (adapté à ' input') → logprob: -6.9211249351501465
    7. 'h' → logprob: -6.9211249351501465
    8. 't' → logprob: -7.1711249351501465
    9. ' input' → logprob: -7.9211249351501465
    10. 'N' → logprob: -9.046125411987305

Token 773: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.15102051198482513
    2. '()' → logprob: -2.4010205268859863
    3. '_data' → logprob: -3.2760205268859863
    4. '_lines' → logprob: -5.526020526885986
    5. '=' → logprob: -5.651020526885986
    6. '_' → logprob: -6.276020526885986
    7. 'line' → logprob: -7.151020526885986
    8. ' =' → logprob: -7.276020526885986
    9. '_str' → logprob: -8.651020050048828
    10. '_=' → logprob: -8.651020050048828

Token 774: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.8118693828582764
    2. ' sys' → logprob: -1.0618693828582764
    3. 'input' → logprob: -1.8118693828582764
    4. ' input' → logprob: -3.0618693828582764
    5. 'lambda' → logprob: -12.061869621276855
    6. '=sys' → logprob: -12.561869621276855
    7. ' lambda' → logprob: -13.561869621276855
    8. '=input' → logprob: -13.561869621276855
    9. 'stdin' → logprob: -13.561869621276855
    10. '	sys' → logprob: -14.061869621276855

Token 775: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04192625731229782
    2. '.' → logprob: -3.291926145553589
    3. '.readline' → logprob: -5.666926383972168
    4. '.stdout' → logprob: -8.416926383972168
    5. '.argv' → logprob: -9.416926383972168
    6. '.std' → logprob: -10.041926383972168
    7. ' .' → logprob: -10.666926383972168
    8. 'stdin' → logprob: -11.416926383972168
    9. '.read' → logprob: -11.541926383972168
    10. '.input' → logprob: -12.291926383972168

Token 776: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4310692846775055
    2. 'read' → logprob: -1.056069254875183
    3. ' readline' → logprob: -6.556069374084473
    4. '_read' → logprob: -8.181069374084473
    5. 'stdin' → logprob: -8.431069374084473
    6. 'input' → logprob: -8.681069374084473
    7. 'readonly' → logprob: -9.306069374084473
    8. 'rea' → logprob: -9.431069374084473
    9. 'buffer' → logprob: -10.306069374084473
    10. '
' → logprob: -11.181069374084473

Token 777: '
' (ID: 198)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.17726823687553406
    2. '()' → logprob: -2.0522682666778564
    3. '
' → logprob: -3.4272682666778564
    4. '()

' → logprob: -6.927268028259277
    5. '().' → logprob: -8.677268028259277
    6. '()\' → logprob: -8.802268028259277
    7. 'def' → logprob: -10.052268028259277
    8. '

' → logprob: -10.677268028259277
    9. '    
' → logprob: -11.177268028259277
    10. '()
' → logprob: -11.302268028259277

Token 778: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06634202599525452
    2. '```' → logprob: -3.5663421154022217
    3. 'def' → logprob: -4.316341876983643
    4. '()' → logprob: -4.941341876983643
    5. '
' → logprob: -5.191341876983643
    6. '():' → logprob: -6.066341876983643
    7. '(h' → logprob: -6.191341876983643
    8. '(n' → logprob: -6.691341876983643
    9. 'for' → logprob: -6.816341876983643
    10. ':' → logprob: -7.441341876983643

Token 779: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8826531171798706
    2. 'n' → logprob: -1.2576531171798706
    3. 'h' → logprob: -1.5076531171798706
    4. 'H' → logprob: -3.25765323638916
    5. 'T' → logprob: -3.25765323638916
    6. 'N' → logprob: -6.00765323638916
    7. '   ' → logprob: -7.38265323638916
    8. '```' → logprob: -8.63265323638916
    9. '
' → logprob: -9.25765323638916
    10. 'num' → logprob: -9.63265323638916

Token 780: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6956242322921753
    2. ' True' → logprob: -0.6956242322921753
    3. '(True' → logprob: -6.695624351501465
    4. ' line' → logprob: -7.070624351501465
    5. 'line' → logprob: -8.195624351501465
    6. '   ' → logprob: -9.820624351501465
    7. '1' → logprob: -10.445624351501465
    8. '
' → logprob: -11.070624351501465
    9. '(' → logprob: -12.445624351501465
    10. '(line' → logprob: -12.820624351501465

Token 781: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6505948305130005
    2. ':' → logprob: -1.2755948305130005
    3. '():
' → logprob: -2.275594711303711
    4. '   ' → logprob: -2.650594711303711
    5. ':
' → logprob: -3.900594711303711
    6. '       ' → logprob: -5.525594711303711
    7. '(line' → logprob: -8.150594711303711
    8. ' line' → logprob: -8.275594711303711
    9. ',' → logprob: -8.900594711303711
    10. '()' → logprob: -9.400594711303711

Token 782: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02239171788096428
    2. ' line' → logprob: -3.8973917961120605
    3. 'line' → logprob: -6.3973917961120605
    4. '```' → logprob: -9.772391319274902
    5. '       ' → logprob: -9.897391319274902
    6. '	line' → logprob: -10.022391319274902
    7. 'try' → logprob: -11.772391319274902
    8. '(line' → logprob: -12.272391319274902
    9. ' try' → logprob: -12.272391319274902
    10. '    
' → logprob: -12.272391319274902

Token 783: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.000520981615409255
    2. ' line' → logprob: -8.500520706176758
    3. 'H' → logprob: -9.250520706176758
    4. '   ' → logprob: -9.625520706176758
    5. 'l' → logprob: -9.625520706176758
    6. 'hw' → logprob: -10.000520706176758
    7. 'h' → logprob: -10.250520706176758
    8. '	line' → logprob: -12.750520706176758
    9. 'L' → logprob: -13.250520706176758
    10. 'n' → logprob: -13.500520706176758

Token 784: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870113492012024
    2. '=' → logprob: -1.1370112895965576
    3. '=line' → logprob: -8.887011528015137
    4. '   ' → logprob: -13.887011528015137
    5. '=input' → logprob: -14.887011528015137
    6. ' =
' → logprob: -15.637011528015137
    7. 'line' → logprob: -15.887011528015137
    8. '=
' → logprob: -16.01201057434082
    9. '(line' → logprob: -16.26201057434082
    10. ' ' → logprob: -16.38701057434082

Token 785: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11667176336050034
    2. ' input' → logprob: -2.3666718006134033
    3. 'sys' → logprob: -4.366671562194824
    4. ' sys' → logprob: -5.616671562194824
    5. '   ' → logprob: -15.741671562194824
    6. '=input' → logprob: -16.74167251586914
    7. '=sys' → logprob: -17.49167251586914
    8. 'import' → logprob: -17.49167251586914
    9. '(sys' → logprob: -17.86667251586914
    10. '(input' → logprob: -17.99167251586914

Token 786: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24685578048229218
    2. '=line' → logprob: -2.2468557357788086
    3. ' =' → logprob: -2.3718557357788086
    4. '       ' → logprob: -4.371855735778809
    5. 'line' → logprob: -5.371855735778809
    6. ' line' → logprob: -6.371855735778809
    7. '(line' → logprob: -7.746855735778809
    8. '   ' → logprob: -9.621855735778809
    9. '[line' → logprob: -9.746855735778809
    10. '	line' → logprob: -9.996855735778809

Token 787: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.000488811288960278
    2. ' line' → logprob: -8.000489234924316
    3. '   ' → logprob: -9.500489234924316
    4. '       ' → logprob: -9.500489234924316
    5. '=line' → logprob: -13.500489234924316
    6. 'if' → logprob: -14.250489234924316
    7. 'while' (adapté à ' while') → logprob: -14.875489234924316
    8. '	line' → logprob: -14.875489234924316
    9. 'try' → logprob: -15.000489234924316
    10. '           ' → logprob: -15.375489234924316

Token 788: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004256477113813162
    2. 'not' → logprob: -6.254256248474121
    3. ' line' → logprob: -6.254256248474121
    4. '(line' → logprob: -8.504256248474121
    5. ' not' → logprob: -9.129256248474121
    6. 'len' → logprob: -9.879256248474121
    7. 'True' → logprob: -10.379256248474121
    8. ' True' → logprob: -12.129256248474121
    9. '(not' → logprob: -12.754256248474121
    10. '#line' → logprob: -14.504256248474121

Token 789: '.strip' (ID: 40613)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07976863533258438
    2. ' =' → logprob: -3.579768657684326
    3. '==' → logprob: -3.704768657684326
    4. '.strip' → logprob: -3.829768657684326
    5. ':=' → logprob: -6.329768657684326
    6. ' ==' → logprob: -7.579768657684326
    7. '=line' → logprob: -9.079768180847168
    8. ' :=' → logprob: -10.204768180847168
    9. 'strip' → logprob: -11.829768180847168
    10. '.rstrip' → logprob: -12.079768180847168

Token 790: '()==' (ID: 39177)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4323347210884094
    2. '()==' → logprob: -1.4323346614837646
    3. '()' → logprob: -2.3073346614837646
    4. '=' → logprob: -4.432334899902344
    5. ' ==' → logprob: -7.307334899902344
    6. '()!=' → logprob: -9.682334899902344
    7. '():
' → logprob: -10.057334899902344
    8. ' =' → logprob: -10.932334899902344
    9. '():' → logprob: -11.057334899902344
    10. '===' → logprob: -11.182334899902344

Token 791: '''' (ID: 5830)
  Prédit: ''''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.008627106435596943
    2. ''' → logprob: -4.758626937866211
    3. '''
' → logprob: -11.633626937866211
    4. '""' → logprob: -13.008626937866211
    5. ''''' → logprob: -14.383626937866211
    6. '"":' → logprob: -15.008626937866211
    7. ' '':
' → logprob: -15.008626937866211
    8. ''',' → logprob: -15.633626937866211
    9. '''.' → logprob: -17.00862693786621
    10. '"' → logprob: -17.63362693786621

Token 792: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04980280622839928
    2. '=line' → logprob: -3.424802780151367
    3. ' =' → logprob: -5.549802780151367
    4. '(line' → logprob: -5.924802780151367
    5. ':' → logprob: -6.049802780151367
    6. ':
' → logprob: -6.299802780151367
    7. '():
' → logprob: -6.549802780151367
    8. 'line' → logprob: -6.549802780151367
    9. ' line' → logprob: -7.049802780151367
    10. ':=' → logprob: -7.674802780151367

Token 793: '           ' (ID: 352)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5854727625846863
    2. 'line' → logprob: -0.8354727625846863
    3. '       ' → logprob: -5.835472583770752
    4. '   ' → logprob: -5.835472583770752
    5. '           ' → logprob: -6.585472583770752
    6. '=line' → logprob: -6.585472583770752
    7. '	line' → logprob: -7.460472583770752
    8. '(line' → logprob: -8.83547306060791
    9. '```' → logprob: -9.58547306060791
    10. '#line' → logprob: -10.58547306060791

Token 794: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -2.4153549020411447e-05
    2. ' line' → logprob: -11.50002384185791
    3. 'try' → logprob: -11.75002384185791
    4. '           ' → logprob: -12.62502384185791
    5. 'l' → logprob: -13.50002384185791
    6. '       ' → logprob: -14.25002384185791
    7. '	line' → logprob: -15.00002384185791
    8. '   ' → logprob: -15.25002384185791
    9. '#line' → logprob: -16.625024795532227
    10. '(line' → logprob: -16.875024795532227

Token 795: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10044712573289871
    2. ' =' → logprob: -2.350447177886963
    3. '=line' → logprob: -8.350446701049805
    4. '=sys' → logprob: -12.725446701049805
    5. 'line' → logprob: -14.350446701049805
    6. '＝' → logprob: -15.350446701049805
    7. '=input' → logprob: -15.850446701049805
    8. '.readline' → logprob: -16.350446701049805
    9. '=
' → logprob: -16.725446701049805
    10. '=subprocess' → logprob: -17.350446701049805

Token 796: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0812317281961441
    2. 'input' → logprob: -2.5812318325042725
    3. ' sys' → logprob: -6.081231594085693
    4. ' input' → logprob: -9.831232070922852
    5. 'stdin' → logprob: -16.83123207092285
    6. '(sys' → logprob: -18.08123207092285
    7. '=sys' → logprob: -18.70623207092285
    8. 'import' → logprob: -20.20623207092285
    9. '	sys' → logprob: -20.70623207092285
    10. 'Sys' → logprob: -21.33123207092285

Token 797: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003113899379968643
    2. '().' → logprob: -5.878113746643066
    3. '()
' → logprob: -8.378113746643066
    4. '())' → logprob: -10.253113746643066
    5. '(' → logprob: -11.378113746643066
    6. '()\' → logprob: -11.503113746643066
    7. '();' → logprob: -12.378113746643066
    8. '()>' → logprob: -12.753113746643066
    9. '()<' → logprob: -12.878113746643066
    10. '()

' → logprob: -13.128113746643066

Token 798: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03806937485933304
    2. '           ' → logprob: -3.288069486618042
    3. ' if' → logprob: -11.413069725036621
    4. '   ' → logprob: -11.788069725036621
    5. 'if' → logprob: -12.913069725036621
    6. '<|end|>' → logprob: -13.788069725036621
    7. '	' → logprob: -13.913069725036621
    8. '	       ' → logprob: -14.038069725036621
    9. '	   ' → logprob: -14.163069725036621
    10. '		' → logprob: -14.288069725036621

Token 799: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2106153517961502
    2. '           ' → logprob: -2.210615396499634
    3. ' if' → logprob: -2.835615396499634
    4. '       ' → logprob: -3.835615396499634
    5. '   ' → logprob: -12.335615158081055
    6. '	if' → logprob: -13.085615158081055
    7. 'If' → logprob: -13.835615158081055
    8. '		' → logprob: -14.460615158081055
    9. '	       ' → logprob: -15.085615158081055
    10. '               ' → logprob: -15.210615158081055

Token 800: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5766093730926514
    2. 'line' → logprob: -0.8266093730926514
    3. ' not' → logprob: -7.3266096115112305
    4. ' line' → logprob: -11.57660961151123
    5. '#line' → logprob: -13.20160961151123
    6. '(line' → logprob: -14.70160961151123
    7. '[line' → logprob: -16.576608657836914
    8. '(not' → logprob: -16.826608657836914
    9. '=line' → logprob: -17.201608657836914
    10. '	line' → logprob: -17.326608657836914

Token 801: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.0206720617134124e-05
    2. ' line' → logprob: -11.50001049041748
    3. '#line' → logprob: -19.875009536743164
    4. '(line' → logprob: -21.500009536743164
    5. '	line' → logprob: -22.000009536743164
    6. '[line' → logprob: -22.125009536743164
    7. '=line' → logprob: -22.750009536743164
    8. '_line' → logprob: -24.625009536743164
    9. '-line' → logprob: -25.500009536743164
    10. '
' → logprob: -26.125009536743164

Token 802: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11923808604478836
    2. ':
' → logprob: -2.2442381381988525
    3. '):
' → logprob: -5.744237899780273
    4. '):' → logprob: -6.369237899780273
    5. ')' → logprob: -7.369237899780273
    6. ':return' → logprob: -7.619237899780273
    7. '.strip' → logprob: -8.994237899780273
    8. '.startswith' → logprob: -9.619237899780273
    9. '   ' → logprob: -10.619237899780273
    10. '=' → logprob: -10.619237899780273

Token 803: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022439889144152403
    2. '           ' → logprob: -6.127243995666504
    3. '                   ' → logprob: -11.002243995666504
    4. '       ' → logprob: -11.502243995666504
    5. '                       ' → logprob: -11.627243995666504
    6. '<|end|>' → logprob: -12.752243995666504
    7. '		       ' → logprob: -12.752243995666504
    8. ',' → logprob: -13.127243995666504
    9. '	           ' → logprob: -13.252243995666504
    10. '```' → logprob: -13.252243995666504

Token 804: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0031988697592169046
    2. '               ' → logprob: -6.253199100494385
    3. ' return' → logprob: -6.753199100494385
    4. 'break' → logprob: -9.253198623657227
    5. '                   ' → logprob: -12.378198623657227
    6. '
' → logprob: -14.378198623657227
    7. '           ' → logprob: -14.628198623657227
    8. '	return' → logprob: -14.753198623657227
    9. '                       ' → logprob: -15.253198623657227
    10. 'import' → logprob: -15.753198623657227

Token 805: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01536006573587656
    2. '<|end|>' → logprob: -4.265359878540039
    3. '        
' → logprob: -7.015359878540039
    4. '
' → logprob: -8.765359878540039
    5. '   ' → logprob: -9.640359878540039
    6. '<|end|>' → logprob: -10.515359878540039
    7. '	' → logprob: -12.140359878540039
    8. '  
' → logprob: -12.265359878540039
    9. '            
' → logprob: -12.515359878540039
    10. ')' → logprob: -12.640359878540039

Token 806: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003111519617959857
    2. '<|end|>' → logprob: -8.875310897827148
    3. '```' → logprob: -9.375310897827148
    4. '        
' → logprob: -10.375310897827148
    5. '
' → logprob: -10.625310897827148
    6. '   ' → logprob: -11.250310897827148
    7. '           ' → logprob: -11.375310897827148
    8. '	' → logprob: -13.875310897827148
    9. ',' → logprob: -14.250310897827148
    10. ')' → logprob: -14.500310897827148

Token 807: ' h' (ID: 312)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24495714902877808
    2. 'h' (adapté à ' h') → logprob: -1.9949572086334229
    3. '       ' → logprob: -3.119957208633423
    4. ' n' → logprob: -3.994957208633423
    5. ' h' → logprob: -4.494956970214844
    6. 'hw' → logprob: -5.869956970214844
    7. '   ' → logprob: -6.244956970214844
    8. 'H' → logprob: -7.244956970214844
    9. 't' → logprob: -7.369956970214844
    10. ' H' → logprob: -8.619956970214844

Token 808: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17991700768470764
    2. ',w' → logprob: -1.8049169778823853
    3. '=' → logprob: -9.429917335510254
    4. ' =' → logprob: -10.054917335510254
    5. ' ,' → logprob: -10.929917335510254
    6. ',int' → logprob: -11.679917335510254
    7. ',h' → logprob: -11.929917335510254
    8. ',c' → logprob: -12.804917335510254
    9. '=w' → logprob: -12.804917335510254
    10. ',W' → logprob: -12.929917335510254

Token 809: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002813313389196992
    2. ' =' → logprob: -5.877813339233398
    3. '=int' → logprob: -12.127813339233398
    4. ',' → logprob: -13.502813339233398
    5. '=line' → logprob: -13.627813339233398
    6. '=input' → logprob: -16.0028133392334
    7. '＝' → logprob: -16.2528133392334
    8. '=
' → logprob: -16.6278133392334
    9. '=

' → logprob: -16.7528133392334
    10. '   ' → logprob: -17.2528133392334

Token 810: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03804149478673935
    2. ' map' → logprob: -3.288041591644287
    3. '	map' → logprob: -18.038042068481445
    4. '(map' → logprob: -18.288042068481445
    5. '_map' → logprob: -18.913042068481445
    6. '[' → logprob: -19.663042068481445
    7. 'list' → logprob: -19.913042068481445
    8. '.map' → logprob: -20.663042068481445
    9. '   ' → logprob: -22.538042068481445
    10. 'line' → logprob: -22.663042068481445

Token 811: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0025905270595103502
    2. 'int' → logprob: -6.002590656280518
    3. '(lambda' → logprob: -9.75259017944336
    4. '(str' → logprob: -10.25259017944336
    5. '(' → logprob: -11.62759017944336
    6. '[int' → logprob: -11.87759017944336
    7. 'lambda' → logprob: -13.50259017944336
    8. '<int' → logprob: -13.50259017944336
    9. 'str' → logprob: -13.87759017944336
    10. '=int' → logprob: -14.00259017944336

Token 812: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0012913089012727141
    2. ',line' → logprob: -6.876291275024414
    3. ',' → logprob: -8.751291275024414
    4. '(' → logprob: -9.876291275024414
    5. 'line' → logprob: -10.501291275024414
    6. '=line' → logprob: -11.751291275024414
    7. '(input' → logprob: -12.001291275024414
    8. '[line' → logprob: -12.626291275024414
    9. '#line' → logprob: -13.376291275024414
    10. ')' → logprob: -13.501291275024414

Token 813: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8013222217559814
    2. '.split' → logprob: -0.9263222217559814
    3. '.strip' → logprob: -2.0513222217559814
    4. '.' → logprob: -3.6763222217559814
    5. '.readline' → logprob: -6.801321983337402
    6. ' .' → logprob: -8.676321983337402
    7. '.rstrip' → logprob: -9.676321983337402
    8. ').' → logprob: -12.676321983337402
    9. '.chomp' → logprob: -12.676321983337402
    10. 'split' → logprob: -12.676321983337402

Token 814: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.008129963040119e-06
    2. '.split' → logprob: -13.000003814697266
    3. '())' → logprob: -13.375003814697266
    4. '()' → logprob: -16.125003814697266
    5. 'split' → logprob: -17.875003814697266
    6. '()[' → logprob: -18.500003814697266
    7. '(' → logprob: -18.500003814697266
    8. '()
' → logprob: -18.625003814697266
    9. '())
' → logprob: -18.875003814697266
    10. '().'' → logprob: -19.625003814697266

Token 815: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.125
    3. '(split' → logprob: -17.875
    4. '.split' → logprob: -18.5
    5. 'spl' → logprob: -20.625
    6. '_split' → logprob: -21.5
    7. 'plit' → logprob: -21.75
    8. '```' → logprob: -23.125
    9. 'strip' → logprob: -23.625
    10. ')' → logprob: -23.625

Token 816: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0020907807629555464
    2. ')' → logprob: -6.252090930938721
    3. '())
' → logprob: -10.002090454101562
    4. '()' → logprob: -10.127090454101562
    5. '()))' → logprob: -10.127090454101562
    6. '(','' → logprob: -10.627090454101562
    7. '(' → logprob: -12.002090454101562
    8. '('' → logprob: -12.877090454101562
    9. '))' → logprob: -13.127090454101562
    10. '(',' → logprob: -14.377090454101562

Token 817: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023651184514164925
    2. 'grid' → logprob: -4.023651123046875
    3. 'if' → logprob: -5.398651123046875
    4. '```' → logprob: -7.648651123046875
    5. '   ' → logprob: -8.148651123046875
    6. ' if' → logprob: -8.773651123046875
    7. ' grid' → logprob: -11.148651123046875
    8. '	grid' → logprob: -11.648651123046875
    9. '	' → logprob: -12.023651123046875
    10. '``' → logprob: -12.898651123046875

Token 818: ' if' (ID: 538)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.00044949972652830184
    2. 'if' (adapté à ' if') → logprob: -7.7504496574401855
    3. '       ' → logprob: -11.000449180603027
    4. '```' → logprob: -13.375449180603027
    5. ' grid' → logprob: -14.875449180603027
    6. '	grid' → logprob: -16.250450134277344
    7. '   ' → logprob: -16.875450134277344
    8. '``' → logprob: -17.750450134277344
    9. ' if' → logprob: -17.875450134277344
    10. 'graph' → logprob: -18.250450134277344

Token 819: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0206720617134124e-05
    2. ' h' → logprob: -11.50001049041748
    3. '(h' → logprob: -17.125009536743164
    4. '   ' → logprob: -20.375009536743164
    5. '[h' → logprob: -21.000009536743164
    6. '	h' → logprob: -21.125009536743164
    7. '<h' → logprob: -22.250009536743164
    8. ' ' → logprob: -23.500009536743164
    9. '
' → logprob: -23.625009536743164
    10. '_h' → logprob: -23.875009536743164

Token 820: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5760075449943542
    2. ' ==' → logprob: -0.8260075449943542
    3. ' ' → logprob: -10.451007843017578
    4. '=' → logprob: -11.326007843017578
    5. '```' → logprob: -11.826007843017578
    6. '===' → logprob: -12.451007843017578
    7. '()==' → logprob: -12.451007843017578
    8. ')==' → logprob: -12.826007843017578
    9. '0' → logprob: -13.076007843017578
    10. ']==' → logprob: -13.576007843017578

Token 821: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'w' → logprob: -18.500003814697266
    4. '۰' → logprob: -20.625003814697266
    5. '０' → logprob: -21.250003814697266
    6. '=' → logprob: -21.375003814697266
    7. 's' → logprob: -21.375003814697266
    8. 'o' → logprob: -23.125003814697266
    9. '_' → logprob: -23.500003814697266
    10. '```' → logprob: -23.625003814697266

Token 822: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740835428237915
    2. 'and' → logprob: -0.9740835428237915
    3. '	and' → logprob: -12.09908390045166
    4. ' or' → logprob: -15.34908390045166
    5. '   ' → logprob: -15.59908390045166
    6. ' ' → logprob: -15.59908390045166
    7. ' и' → logprob: -15.72408390045166
    8. '           ' → logprob: -16.349082946777344
    9. '0' → logprob: -16.474082946777344
    10. '&&' → logprob: -16.599082946777344

Token 823: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.5491004129871726e-05
    2. ' w' → logprob: -10.000045776367188
    3. '	w' → logprob: -20.125045776367188
    4. '   ' → logprob: -21.250045776367188
    5. '  ' → logprob: -23.375045776367188
    6. '
' → logprob: -23.500045776367188
    7. '<w' → logprob: -24.125045776367188
    8. '       ' → logprob: -24.125045776367188
    9. 'W' → logprob: -24.250045776367188
    10. '_w' → logprob: -24.625045776367188

Token 824: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00021045419271104038
    2. ' ==' → logprob: -8.500210762023926
    3. '0' → logprob: -12.000210762023926
    4. '=' → logprob: -14.375210762023926
    5. ')==' → logprob: -16.00020980834961
    6. '()==' → logprob: -16.62520980834961
    7. ']==' → logprob: -17.00020980834961
    8. '===' → logprob: -17.12520980834961
    9. '==
' → logprob: -17.37520980834961
    10. '```' → logprob: -18.62520980834961

Token 825: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -17.500003814697266
    4. '=' → logprob: -19.375003814697266
    5. '   ' → logprob: -19.875003814697266
    6. '<|end|>' → logprob: -20.125003814697266
    7. '۰' → logprob: -20.500003814697266
    8. '  ' → logprob: -21.375003814697266
    9. 'import' → logprob: -21.500003814697266
    10. '```' → logprob: -22.187503814697266

Token 826: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07804335653781891
    2. ':
' → logprob: -3.0780434608459473
    3. '           ' → logprob: -3.5780434608459473
    4. ':return' → logprob: -7.203043460845947
    5. '   ' → logprob: -8.828042984008789
    6. '       ' → logprob: -8.828042984008789
    7. '<|end|>' → logprob: -11.453042984008789
    8. '		' → logprob: -11.828042984008789
    9. '          ' → logprob: -12.203042984008789
    10. '	break' → logprob: -12.328042984008789

Token 827: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007765158079564571
    2. '       ' → logprob: -7.250776290893555
    3. '   ' → logprob: -10.625776290893555
    4. '	       ' → logprob: -11.125776290893555
    5. '		' → logprob: -11.875776290893555
    6. '          ' → logprob: -12.000776290893555
    7. '<|end|>' → logprob: -12.250776290893555
    8. '               ' → logprob: -12.875776290893555
    9. '         ' → logprob: -12.875776290893555
    10. ',' → logprob: -13.875776290893555

Token 828: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20512612164020538
    2. 'return' → logprob: -1.705126166343689
    3. '           ' → logprob: -5.9551262855529785
    4. ' break' → logprob: -6.9551262855529785
    5. ' return' → logprob: -9.58012580871582
    6. '	break' → logprob: -10.08012580871582
    7. '       ' → logprob: -10.70512580871582
    8. '               ' → logprob: -10.83012580871582
    9. '		' → logprob: -13.33012580871582
    10. '	return' → logprob: -13.58012580871582

Token 829: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005535095697268844
    2. '   ' → logprob: -8.250553131103516
    3. 'grid' → logprob: -8.375553131103516
    4. '<|end|>' → logprob: -10.500553131103516
    5. '```' → logprob: -10.750553131103516
    6. '	' → logprob: -12.750553131103516
    7. '
' → logprob: -13.125553131103516
    8. '	grid' → logprob: -13.250553131103516
    9. '        
' → logprob: -13.625553131103516
    10. ' grid' → logprob: -13.750553131103516

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02267332747578621
    2. 'grid' → logprob: -3.8976733684539795
    3. '```' → logprob: -6.5226731300354
    4. '<|end|>' → logprob: -7.8976731300354
    5. '   ' → logprob: -9.272673606872559
    6. '	grid' → logprob: -9.397673606872559
    7. ' grid' → logprob: -10.022673606872559
    8. '        
' → logprob: -11.147673606872559
    9. '``' → logprob: -11.772673606872559
    10. 'rows' → logprob: -11.772673606872559

Token 831: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.000356199947418645
    2. ' grid' → logprob: -8.375356674194336
    3. '       ' → logprob: -9.000356674194336
    4. '	grid' → logprob: -13.250356674194336
    5. '.grid' → logprob: -16.375356674194336
    6. '_grid' → logprob: -16.375356674194336
    7. '   ' → logprob: -16.375356674194336
    8. '(grid' → logprob: -16.750356674194336
    9. '```' → logprob: -17.000356674194336
    10. 'Grid' → logprob: -18.250356674194336

Token 832: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06234229728579521
    2. ' =' → logprob: -2.812342405319214
    3. '   ' → logprob: -8.812342643737793
    4. '=[]
' → logprob: -9.062342643737793
    5. '=[]' → logprob: -9.312342643737793
    6. '=[' → logprob: -11.312342643737793
    7. ' =[' → logprob: -13.312342643737793
    8. '=
' → logprob: -13.812342643737793
    9. '=[
' → logprob: -13.937342643737793
    10. '[:]' → logprob: -13.937342643737793

Token 833: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020925651770085096
    2. '[input' → logprob: -6.502092361450195
    3. '[line' → logprob: -8.502092361450195
    4. '[str' → logprob: -9.752092361450195
    5. '[int' → logprob: -9.877092361450195
    6. '[row' → logprob: -10.877092361450195
    7. '[h' → logprob: -11.002092361450195
    8. '[data' → logprob: -11.002092361450195
    9. '[item' → logprob: -11.002092361450195
    10. '[next' → logprob: -11.252092361450195

Token 834: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0067310030572116375
    2. 'list' → logprob: -5.006731033325195
    3. ' input' → logprob: -11.256731033325195
    4. 'sys' → logprob: -13.381731033325195
    5. '[input' → logprob: -13.756731033325195
    6. ' list' → logprob: -16.756731033325195
    7. '<input' → logprob: -17.631731033325195
    8. '(input' → logprob: -18.256731033325195
    9. '=input' → logprob: -18.631731033325195
    10. '   ' → logprob: -18.756731033325195

Token 835: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018065694894175977
    2. '()' → logprob: -8.6251802444458
    3. '.strip' → logprob: -14.7501802444458
    4. '()
' → logprob: -15.7501802444458
    5. '.rstrip' → logprob: -15.7501802444458
    6. 'rstrip' → logprob: -16.500181198120117
    7. '()).' → logprob: -16.625181198120117
    8. '.readline' → logprob: -16.750181198120117
    9. '()].' → logprob: -17.000181198120117
    10. '()]' → logprob: -17.250181198120117

Token 836: 'strip' (ID: 23905)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.5759400725364685
    2. 'strip' → logprob: -0.8259400725364685
    3. 'r' → logprob: -15.325940132141113
    4. '.rstrip' → logprob: -15.825940132141113
    5. ' strip' → logprob: -15.950940132141113
    6. '_strip' → logprob: -17.200939178466797
    7. '(strip' → logprob: -17.200939178466797
    8. 'read' → logprob: -17.450939178466797
    9. '.strip' → logprob: -18.450939178466797
    10. '-strip' → logprob: -19.575939178466797

Token 837: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0035210796631872654
    2. 'for' → logprob: -5.753520965576172
    3. ' for' → logprob: -8.128520965576172
    4. ')' → logprob: -10.878520965576172
    5. '()]' → logprob: -11.003520965576172
    6. '())' → logprob: -12.628520965576172
    7. '().' → logprob: -12.878520965576172
    8. '()\' → logprob: -13.128520965576172
    9. '()
' → logprob: -13.753520965576172
    10. ']' → logprob: -13.878520965576172

Token 838: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5772863030433655
    2. 'for' → logprob: -0.9522863030433655
    3. '()' → logprob: -2.9522862434387207
    4. ')' → logprob: -8.702286720275879
    5. '	for' → logprob: -8.952286720275879
    6. '       ' → logprob: -9.452286720275879
    7. '           ' → logprob: -9.702286720275879
    8. '().' → logprob: -11.577286720275879
    9. '   ' → logprob: -11.827286720275879
    10. ']' → logprob: -11.827286720275879

Token 839: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.172891830326989e-05
    2. '_i' → logprob: -9.750082015991211
    3. ' _' → logprob: -10.875082015991211
    4. 'i' → logprob: -13.125082015991211
    5. '_=' → logprob: -14.250082015991211
    6. '_range' → logprob: -14.500082015991211
    7. '_j' → logprob: -15.250082015991211
    8. '_r' → logprob: -15.625082015991211
    9. ' i' → logprob: -15.875082015991211
    10. '_
' → logprob: -16.50008201599121

Token 840: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38391056656837463
    2. 'range' → logprob: -1.3839105367660522
    3. ' range' → logprob: -3.383910655975342
    4. 'in' → logprob: -3.383910655975342
    5. '_' → logprob: -8.133910179138184
    6. ' ' → logprob: -10.633910179138184
    7. '	range' → logprob: -10.758910179138184
    8. '_range' → logprob: -10.883910179138184
    9. 'i' → logprob: -12.133910179138184
    10. ' _' → logprob: -12.258910179138184

Token 841: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. '(range' → logprob: -18.750009536743164
    4. '	range' → logprob: -21.125009536743164
    5. '   ' → logprob: -21.875009536743164
    6. '
' → logprob: -22.000009536743164
    7. '_range' → logprob: -23.125009536743164
    8. '.range' → logprob: -24.250009536743164
    9. 'repeat' → logprob: -24.750009536743164
    10. '  ' → logprob: -24.875009536743164

Token 842: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0007201764383353293
    2. '(h' → logprob: -7.250720024108887
    3. ' h' → logprob: -11.500720024108887
    4. '	h' → logprob: -16.500720977783203
    5. '[h' → logprob: -18.875720977783203
    6. '<h' → logprob: -19.125720977783203
    7. ',h' → logprob: -19.250720977783203
    8. '_h' → logprob: -19.875720977783203
    9. ' (' → logprob: -20.375720977783203
    10. ':h' → logprob: -20.875720977783203

Token 843: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.542423165636137e-05
    2. ']' → logprob: -9.750085830688477
    3. ')' → logprob: -10.750085830688477
    4. '       ' → logprob: -12.500085830688477
    5. ')]
' → logprob: -14.125085830688477
    6. '   ' → logprob: -14.500085830688477
    7. '')]' → logprob: -15.750085830688477
    8. '}]' → logprob: -16.375085830688477
    9. '])]' → logprob: -16.625085830688477
    10. ')])' → logprob: -16.875085830688477

Token 844: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4870598316192627
    2. '       ' → logprob: -1.4870598316192627
    3. 'result' → logprob: -2.4870598316192627
    4. 'print' → logprob: -3.1120598316192627
    5. ' result' → logprob: -4.487059593200684
    6. 's' → logprob: -5.362059593200684
    7. '<|end|>' → logprob: -5.737059593200684
    8. 'solution' → logprob: -6.237059593200684
    9. '
' → logprob: -6.487059593200684
    10. ' print' → logprob: -6.612059593200684

Token 845: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.051494043320417404
    2. 'result' → logprob: -3.3014941215515137
    3. ' print' → logprob: -5.426494121551514
    4. '       ' → logprob: -5.551494121551514
    5. 'res' → logprob: -5.801494121551514
    6. '   ' → logprob: -6.926494121551514
    7. ' result' → logprob: -7.051494121551514
    8. ' res' → logprob: -9.426493644714355
    9. 'answer' → logprob: -9.426493644714355
    10. 'ans' → logprob: -10.176493644714355

Token 846: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.375006675720215
    3. 'solve' → logprob: -13.000006675720215
    4. '(sol' → logprob: -16.6250057220459
    5. '(solution' → logprob: -17.6250057220459
    6. '(resolve' → logprob: -18.1250057220459
    7. '(
' → logprob: -18.3750057220459
    8. ' solve' → logprob: -18.3750057220459
    9. '()' → logprob: -18.8750057220459
    10. '((' → logprob: -19.1250057220459

Token 847: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.9361264946837764e-07
    2. 'solve' → logprob: -16.375
    3. 'OLVE' → logprob: -17.25
    4. 'ove' → logprob: -17.5
    5. 'ol' → logprob: -18.0
    6. 'olv' → logprob: -18.75
    7. 'olved' → logprob: -19.0
    8. 'olver' → logprob: -19.125
    9. '```' → logprob: -20.375
    10. '(' → logprob: -20.875

Token 848: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -4.320199877838604e-07
    2. 'grid' → logprob: -15.5
    3. '(grid' → logprob: -16.0
    4. '\' → logprob: -19.5
    5. '_gr' → logprob: -19.625
    6. '_' → logprob: -19.875
    7. '<Grid' → logprob: -20.375
    8. ')_' → logprob: -20.75
    9. '_GRID' → logprob: -21.0
    10. '(_' → logprob: -21.375

Token 849: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.127333340875339e-06
    2. 'h' → logprob: -12.875003814697266
    3. ')' → logprob: -14.125003814697266
    4. ')(' → logprob: -15.000003814697266
    5. '(' → logprob: -15.375003814697266
    6. ' (' → logprob: -15.625003814697266
    7. '(grid' → logprob: -18.250003814697266
    8. ',h' → logprob: -18.500003814697266
    9. '```' → logprob: -18.875003814697266
    10. '((' → logprob: -19.250003814697266

Token 850: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.002528575947508216
    2. ',' → logprob: -6.002528667449951
    3. ',h' → logprob: -9.877528190612793
    4. ' ,' → logprob: -13.877528190612793
    5. ',
' → logprob: -15.877528190612793
    6. ',v' → logprob: -16.00252914428711
    7. ',W' → logprob: -16.00252914428711
    8. '   ' → logprob: -16.25252914428711
    9. '       ' → logprob: -17.12752914428711
    10. 'w' → logprob: -17.12752914428711

Token 851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38745948672294617
    2. '(grid' → logprob: -1.1374595165252686
    3. 'grid' → logprob: -8.137459754943848
    4. ',h' → logprob: -8.887459754943848
    5. '))' → logprob: -9.512459754943848
    6. ')' → logprob: -10.012459754943848
    7. ',g' → logprob: -11.012459754943848
    8. ':grid' → logprob: -12.137459754943848
    9. ' ,' → logprob: -12.262459754943848
    10. ',w' → logprob: -13.012459754943848

Token 852: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.0280383548888494e-06
    2. ' grid' → logprob: -13.875000953674316
    3. ')' → logprob: -17.375001907348633
    4. '(grid' → logprob: -18.250001907348633
    5. '
' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.375001907348633
    7. '	grid' → logprob: -20.125001907348633
    8. '```' → logprob: -20.375001907348633
    9. '.grid' → logprob: -20.750001907348633
    10. '))' → logprob: -20.750001907348633

Token 853: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011960301548242569
    2. '())' → logprob: -4.511960506439209
    3. '))' → logprob: -7.011960506439209
    4. '()' → logprob: -12.01196002960205
    5. ' )' → logprob: -13.13696002960205
    6. ')))' → logprob: -13.76196002960205
    7. ')`' → logprob: -14.13696002960205
    8. ' ())' → logprob: -15.01196002960205
    9. '(' → logprob: -15.63696002960205
    10. ')")' → logprob: -15.63696002960205

Token 854: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011345356702804565
    2. '```' → logprob: -5.136345386505127
    3. '<|end|>' → logprob: -5.886345386505127
    4. '
' → logprob: -6.011345386505127
    5. ' if' → logprob: -9.886344909667969
    6. '#' → logprob: -10.011344909667969
    7. '\n' → logprob: -11.386344909667969
    8. '<|end|>' → logprob: -11.386344909667969
    9. '    
' → logprob: -11.636344909667969
    10. '  
' → logprob: -11.761344909667969

Token 855: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38781365752220154
    2. ' __' → logprob: -1.137813687324524
    3. '_name' → logprob: -7.637813568115234
    4. 'name' → logprob: -8.012813568115234
    5. ' name' → logprob: -10.137813568115234
    6. '___' → logprob: -10.512813568115234
    7. ' ' → logprob: -11.387813568115234
    8. '_' → logprob: -11.512813568115234
    9. '```' → logprob: -11.512813568115234
    10. '/__' → logprob: -12.512813568115234

Token 856: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.038576699793338776
    2. ' ==' → logprob: -3.913576602935791
    3. '==' → logprob: -4.163576602935791
    4. 'name' → logprob: -7.163576602935791
    5. '__.__' → logprob: -7.788576602935791
    6. ' __' → logprob: -8.03857707977295
    7. '.__' → logprob: -8.16357707977295
    8. '=="' → logprob: -8.66357707977295
    9. '=='' → logprob: -10.16357707977295
    10. '```' → logprob: -10.16357707977295

Token 857: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007063561934046447
    2. '==' → logprob: -7.875706195831299
    3. '__.__' → logprob: -8.500706672668457
    4. '=='' → logprob: -10.125706672668457
    5. '=="' → logprob: -10.500706672668457
    6. '___' → logprob: -11.625706672668457
    7. '__[' → logprob: -11.750706672668457
    8. ' ==' → logprob: -11.875706672668457
    9. '__('' → logprob: -12.125706672668457
    10. '```' → logprob: -12.375706672668457

Token 858: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4409942626953125
    2. '__' → logprob: -1.4409942626953125
    3. '=="' → logprob: -2.4409942626953125
    4. '=='' → logprob: -3.9409942626953125
    5. ' ==' → logprob: -4.3159942626953125
    6. '==
' → logprob: -10.565994262695312
    7. '=' → logprob: -11.440994262695312
    8. '===' → logprob: -12.315994262695312
    9. '==='' → logprob: -13.190994262695312
    10. '==="' → logprob: -13.315994262695312

Token 859: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.673547563375905e-05
    2. ''' → logprob: -9.750086784362793
    3. '"' → logprob: -10.500086784362793
    4. 'main' → logprob: -14.000086784362793
    5. '___' → logprob: -17.750085830688477
    6. '_main' → logprob: -18.750085830688477
    7. '```' → logprob: -19.125085830688477
    8. ' __' → logprob: -19.750085830688477
    9. '__":
' → logprob: -20.000085830688477
    10. '____' → logprob: -20.375085830688477

Token 860: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.061054359131958e-06
    2. 'name' → logprob: -11.750007629394531
    3. '__' → logprob: -16.50000762939453
    4. ' main' → logprob: -18.12500762939453
    5. 'built' → logprob: -18.50000762939453
    6. '_main' → logprob: -18.87500762939453
    7. ' "__' → logprob: -20.62500762939453
    8. '(main' → logprob: -21.12500762939453
    9. '-main' → logprob: -21.37500762939453
    10. 'm' → logprob: -21.75000762939453

Token 861: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07983490079641342
    2. '__' → logprob: -2.5798349380493164
    3. '__':
' → logprob: -7.204834938049316
    4. '```' → logprob: -9.329834938049316
    5. ':' → logprob: -10.954834938049316
    6. '__["' → logprob: -11.454834938049316
    7. '==' → logprob: -11.454834938049316
    8. '__:' → logprob: -11.704834938049316
    9. '__
' → logprob: -11.829834938049316
    10. '<|end|>' → logprob: -11.829834938049316

Token 862: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0026036028284579515
    2. '	main' → logprob: -6.002603530883789
    3. ' main' → logprob: -9.127603530883789
    4. '   ' → logprob: -11.752603530883789
    5. '_main' → logprob: -11.877603530883789
    6. '```' → logprob: -13.877603530883789
    7. '<|end|>' → logprob: -14.252603530883789
    8. '    
' → logprob: -14.252603530883789
    9. '
' → logprob: -14.752603530883789
    10. '(main' → logprob: -15.127603530883789

Token 863: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -19.75
    4. '   ' → logprob: -24.125
    5. '_main' → logprob: -24.5
    6. '.main' → logprob: -25.625
    7. '(main' → logprob: -26.0
    8. 'Main' → logprob: -27.75
    9. '主' → logprob: -28.125
    10. '
' → logprob: -28.125

Token 864: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 862
Tokens correctement prédits (1ère position, stricte): 270
Tokens correctement prédits (1ère position, avec adaptation): 290
Tokens correctement prédits (top 10): 571
Précision stricte (1ère position): 31.32%
Précision adaptée (1ère position): 33.64%
Précision (top 10): 66.24%
================================================================================
