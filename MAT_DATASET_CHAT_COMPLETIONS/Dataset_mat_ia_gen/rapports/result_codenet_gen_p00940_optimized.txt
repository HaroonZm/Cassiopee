================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
p, r, t = map(int, input().split())
available = list(map(int, input().split()))
need = [list(map(int, input().split())) for _ in range(p)]

# Tracking allocated resources per process
allocated = [[0]*r for _ in range(p)]

# Track number of acquired instances per process per resource during the log processing
# For performance, track remaining need per process per resource
remaining_need = [need[i][:] for i in range(p)]

# Count of finished processes
finished = [False]*p

def can_finish(process):
    for j in range(r):
        if remaining_need[process][j] > available[j]:
            return False
    return True

finished_count = 0
deadlock_unavoidable_time = -1

for time in range(1, t+1):
    proc, res = map(int, input().split())
    proc -= 1
    res -= 1

    # Process proc acquires one instance of resource res
    allocated[proc][res] += 1
    remaining_need[proc][res] -= 1
    available[res] -= 1

    # Check if any processes can finish now (repeat until fixpoint)
    progress = True
    while progress:
        progress = False
        for i in range(p):
            if not finished[i] and can_finish(i):
                # Process i can finish: release all allocated resources
                finished[i] = True
                finished_count += 1
                for j in range(r):
                    available[j] += allocated[i][j]
                    allocated[i][j] = 0
                progress = True

    # If not all processes done, check if no further progress possible (deadlock unavoidable)
    if finished_count < p:
        # For all un-finished processes, if none can finish under current available => deadlock unavoidable
        deadlock = True
        for i in range(p):
            if not finished[i] and can_finish(i):
                deadlock = False
                break
        if deadlock:
            deadlock_unavoidable_time = time
            break

print(deadlock_unavoidable_time)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'p' (ID: 79)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' r' (ID: 428)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2387046366930008
    2. ',' → logprob: -1.8637046813964844
    3. ' =' → logprob: -3.1137046813964844
    4. ':' → logprob: -5.863704681396484
    5. ')' → logprob: -6.113704681396484
    6. '(' → logprob: -6.238704681396484
    7. '.' → logprob: -6.613704681396484
    8. '+' → logprob: -6.613704681396484
    9. '>' → logprob: -7.488704681396484
    10. ';' → logprob: -7.488704681396484

Token 4: ' t' (ID: 260)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0652555301785469
    2. ',' → logprob: -3.690255641937256
    3. ' =' → logprob: -4.565255641937256
    4. '.' → logprob: -5.065255641937256
    5. ':' → logprob: -5.315255641937256
    6. ')' → logprob: -5.315255641937256
    7. 'y' → logprob: -5.940255641937256
    8. 'e' → logprob: -6.190255641937256
    9. '_' → logprob: -6.440255641937256
    10. 'i' → logprob: -6.815255641937256

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.045066725462675095
    2. ',' → logprob: -3.5450668334960938
    3. ' =' → logprob: -4.920066833496094
    4. ';' → logprob: -6.045066833496094
    5. '(' → logprob: -6.545066833496094
    6. '.' → logprob: -6.795066833496094
    7. ')' → logprob: -7.295066833496094
    8. ':' → logprob: -7.420066833496094
    9. '+' → logprob: -7.670066833496094
    10. 'r' → logprob: -8.420066833496094

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31372731924057007
    2. ' ' → logprob: -1.8137273788452148
    3. ' p' → logprob: -3.563727378845215
    4. ' map' → logprob: -4.313727378845215
    5. 'p' → logprob: -4.438727378845215
    6. '1' → logprob: -4.438727378845215
    7. 'map' → logprob: -4.563727378845215
    8. ' [' → logprob: -5.313727378845215
    9. 'input' → logprob: -5.438727378845215
    10. ' input' → logprob: -5.563727378845215

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042759593576192856
    2. '<|end|>' → logprob: -3.292759656906128
    3. '```' → logprob: -6.042759418487549
    4. ')' → logprob: -7.292759418487549
    5. '<|end|>' → logprob: -7.667759418487549
    6. '(lambda' → logprob: -7.792759418487549
    7. '(token' → logprob: -9.292759895324707
    8. '(user' → logprob: -9.542759895324707
    9. '(p' → logprob: -9.917759895324707
    10. 'user' → logprob: -10.042759895324707

Token 8: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23633705079555511
    2. '(' → logprob: -2.1113369464874268
    3. '(input' → logprob: -2.9863369464874268
    4. '(p' → logprob: -4.361337184906006
    5. '<|end|>' → logprob: -4.486337184906006
    6. '(user' → logprob: -4.986337184906006
    7. '```' → logprob: -6.486337184906006
    8. ')(' → logprob: -6.986337184906006
    9. '(token' → logprob: -7.486337184906006
    10. '<|end|>' → logprob: -7.611337184906006

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5762457847595215
    2. ' input' → logprob: -0.8262457847595215
    3. '(input' → logprob: -8.45124626159668
    4. ')' → logprob: -9.45124626159668
    5. ',input' → logprob: -12.32624626159668
    6. ' ' → logprob: -12.57624626159668
    7. ' )' → logprob: -12.95124626159668
    8. '=input' → logprob: -13.95124626159668
    9. '(' → logprob: -15.20124626159668
    10. '	input' → logprob: -15.20124626159668

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7810436487197876
    2. '())' → logprob: -1.0310436487197876
    3. '(' → logprob: -1.9060436487197876
    4. ')' → logprob: -4.031043529510498
    5. '());' → logprob: -5.156043529510498
    6. '(()' → logprob: -5.656043529510498
    7. '('' → logprob: -6.281043529510498
    8. '(""))' → logprob: -6.656043529510498
    9. '(),' → logprob: -6.906043529510498
    10. '();)' → logprob: -7.031043529510498

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0008280907059088349
    2. 'strip' → logprob: -7.125828266143799
    3. 'rstrip' → logprob: -10.87582778930664
    4. ' split' → logprob: -13.12582778930664
    5. ')' → logprob: -13.75082778930664
    6. '(split' → logprob: -13.87582778930664
    7. '```' → logprob: -15.37582778930664
    8. 'read' → logprob: -15.75082778930664
    9. 'replace' → logprob: -16.12582778930664
    10. 'spl' → logprob: -16.12582778930664

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04739830642938614
    2. '())' → logprob: -3.297398328781128
    3. '))' → logprob: -4.797398090362549
    4. '`)' → logprob: -7.547398090362549
    5. '()' → logprob: -8.297398567199707
    6. '(' → logprob: -9.422398567199707
    7. '()))' → logprob: -9.672398567199707
    8. '```' → logprob: -10.172398567199707
    9. ')`' → logprob: -10.797398567199707
    10. '')' → logprob: -11.547398567199707

Token 13: 'available' (ID: 17006)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7694368362426758
    2. 'if' → logprob: -1.5194368362426758
    3. 's' → logprob: -1.7694368362426758
    4. 'd' → logprob: -3.269436836242676
    5. 'x' → logprob: -3.394436836242676
    6. 'i' → logprob: -3.644436836242676
    7. 'a' → logprob: -4.144436836242676
    8. 'for' → logprob: -5.019436836242676
    9. 'u' → logprob: -5.394436836242676
    10. 'c' → logprob: -5.394436836242676

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09454246610403061
    2. '_spaces' → logprob: -3.8445425033569336
    3. '_tokens' → logprob: -4.094542503356934
    4. '_items' → logprob: -4.844542503356934
    5. ')' → logprob: -4.969542503356934
    6. '_books' → logprob: -5.094542503356934
    7. '_space' → logprob: -5.969542503356934
    8. '_resources' → logprob: -5.969542503356934
    9. '_s' → logprob: -5.969542503356934
    10. '=' → logprob: -6.344542503356934

Token 15: ' list' (ID: 1562)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.1068534851074219
    2. '[' → logprob: -1.3568534851074219
    3. '[int' → logprob: -1.7318534851074219
    4. ' [' → logprob: -1.7318534851074219
    5. '[]' → logprob: -4.356853485107422
    6. '["' → logprob: -5.231853485107422
    7. 'list' → logprob: -5.231853485107422
    8. '['' → logprob: -5.356853485107422
    9. ' []' → logprob: -5.356853485107422
    10. ' p' → logprob: -5.356853485107422

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20571236312389374
    2. '(range' → logprob: -1.7057123184204102
    3. '(int' → logprob: -6.20571231842041
    4. '(map' → logprob: -6.83071231842041
    5. '()' → logprob: -7.33071231842041
    6. '<|end|>' → logprob: -9.58071231842041
    7. '(

' → logprob: -9.83071231842041
    8. '((' → logprob: -10.33071231842041
    9. '[int' → logprob: -10.58071231842041
    10. '(set' → logprob: -10.58071231842041

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007058793562464416
    2. '(' → logprob: -8.25070571899414
    3. 'int' → logprob: -8.37570571899414
    4. '<int' → logprob: -9.00070571899414
    5. '[int' → logprob: -9.87570571899414
    6. '=int' → logprob: -10.50070571899414
    7. ',int' → logprob: -12.62570571899414
    8. '<|end|>' → logprob: -13.50070571899414
    9. ']int' → logprob: -13.87570571899414
    10. ')' → logprob: -14.00070571899414

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023572595790028572
    2. ',input' → logprob: -4.2735724449157715
    3. ',' → logprob: -4.7735724449157715
    4. '(' → logprob: -7.1485724449157715
    5. 'input' → logprob: -10.02357292175293
    6. ')' → logprob: -10.64857292175293
    7. '),' → logprob: -10.64857292175293
    8. '=input' → logprob: -10.77357292175293
    9. '(),' → logprob: -13.02357292175293
    10. ' ,' → logprob: -13.39857292175293

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17974700033664703
    2. ' input' → logprob: -1.8047469854354858
    3. '(input' → logprob: -14.304746627807617
    4. ' ' → logprob: -14.804746627807617
    5. '	input' → logprob: -14.929746627807617
    6. ',input' → logprob: -14.929746627807617
    7. '=input' → logprob: -15.554746627807617
    8. '[input' → logprob: -15.679746627807617
    9. '<input' → logprob: -15.804746627807617
    10. ')' → logprob: -16.304746627807617

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002366753324167803
    2. '()' → logprob: -8.375236511230469
    3. ' ().' → logprob: -12.500236511230469
    4. '.' → logprob: -13.875236511230469
    5. ')' → logprob: -14.750236511230469
    6. '(' → logprob: -15.375236511230469
    7. '()))' → logprob: -15.750236511230469
    8. ' .' → logprob: -16.12523651123047
    9. '())' → logprob: -16.12523651123047
    10. '()
' → logprob: -17.00023651123047

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. 'strip' → logprob: -13.750001907348633
    3. ' split' → logprob: -15.250001907348633
    4. '(split' → logprob: -16.000001907348633
    5. 'spl' → logprob: -17.500001907348633
    6. 'rstrip' → logprob: -18.000001907348633
    7. 'plit' → logprob: -19.000001907348633
    8. 's' → logprob: -20.500001907348633
    9. 'read' → logprob: -20.500001907348633
    10. 'sp' → logprob: -21.125001907348633

Token 22: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1523130238056183
    2. '())' → logprob: -2.027312994003296
    3. '))' → logprob: -5.527313232421875
    4. '()' → logprob: -5.527313232421875
    5. ')' → logprob: -6.652313232421875
    6. '(' → logprob: -8.402313232421875
    7. '()));' → logprob: -10.402313232421875
    8. '())))' → logprob: -10.777313232421875
    9. '()),' → logprob: -11.277313232421875
    10. '()>' → logprob: -11.777313232421875

Token 23: 'need' (ID: 24630)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.056234121322632
    2. 'max' → logprob: -2.806234121322632
    3. 'a' → logprob: -2.931234121322632
    4. 'remaining' → logprob: -2.931234121322632
    5. 'used' → logprob: -3.056234121322632
    6. 'valid' → logprob: -3.056234121322632
    7. 'for' → logprob: -3.181234121322632
    8. 'count' → logprob: -3.181234121322632
    9. 'needed' → logprob: -3.181234121322632
    10. 'result' → logprob: -3.181234121322632

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35999324917793274
    2. ' =' → logprob: -1.2349932193756104
    3. '[' → logprob: -5.2349934577941895
    4. 's' → logprob: -5.9849934577941895
    5. '_' → logprob: -6.2349934577941895
    6. 'ed' → logprob: -7.7349934577941895
    7. '(' → logprob: -8.359992980957031
    8. '[]' → logprob: -8.359992980957031
    9. '.' → logprob: -8.484992980957031
    10. ')' → logprob: -8.609992980957031

Token 25: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.13327524065971375
    2. ' list' → logprob: -2.133275270462036
    3. '(list' → logprob: -5.133275032043457
    4. '(' → logprob: -8.133275032043457
    5. '[' → logprob: -9.258275032043457
    6. '[]' → logprob: -10.758275032043457
    7. 'List' → logprob: -12.133275032043457
    8. '[list' → logprob: -12.383275032043457
    9. '=list' → logprob: -12.508275032043457
    10. '_list' → logprob: -13.633275032043457

Token 26: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5089752078056335
    2. '0' → logprob: -1.0089752674102783
    3. 'p' → logprob: -4.633975028991699
    4. 'map' → logprob: -5.008975028991699
    5. 'list' → logprob: -5.008975028991699
    6. '(int' → logprob: -5.133975028991699
    7. ']' → logprob: -6.633975028991699
    8. ' int' → logprob: -6.633975028991699
    9. '(' → logprob: -7.258975028991699
    10. '1' → logprob: -7.383975028991699

Token 27: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.4259644558478612e-05
    2. '(' → logprob: -11.375014305114746
    3. '(int' → logprob: -13.125014305114746
    4. 'map' → logprob: -14.750014305114746
    5. '(
' → logprob: -16.62501335144043
    6. '(range' → logprob: -16.87501335144043
    7. '	map' → logprob: -17.37501335144043
    8. ' map' → logprob: -18.25001335144043
    9. '()' → logprob: -19.00001335144043
    10. ',map' → logprob: -20.00001335144043

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00026455431361682713
    2. '(' → logprob: -8.625264167785645
    3. 'int' → logprob: -10.375264167785645
    4. '<int' → logprob: -10.375264167785645
    5. '(lambda' → logprob: -12.125264167785645
    6. '[int' → logprob: -12.250264167785645
    7. ']int' → logprob: -12.375264167785645
    8. '=int' → logprob: -12.625264167785645
    9. ',int' → logprob: -13.250264167785645
    10. ' (' → logprob: -14.125264167785645

Token 29: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012688929215073586
    2. '(input' → logprob: -5.137689113616943
    3. '(' → logprob: -5.512689113616943
    4. '(lambda' → logprob: -6.512689113616943
    5. ',' → logprob: -7.637689113616943
    6. ',int' → logprob: -8.887688636779785
    7. ')' → logprob: -8.887688636779785
    8. '```' → logprob: -8.887688636779785
    9. 'int' → logprob: -9.137688636779785
    10. ' (' → logprob: -9.262688636779785

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1717674732208252
    2. 'int' → logprob: -1.9217674732208252
    3. ' input' → logprob: -4.546767234802246
    4. 'lambda' → logprob: -7.296767234802246
    5. '(int' → logprob: -9.296767234802246
    6. '(input' → logprob: -9.921767234802246
    7. ' int' → logprob: -10.046767234802246
    8. ' lambda' → logprob: -12.046767234802246
    9. ' ' → logprob: -13.421767234802246
    10. '(lambda' → logprob: -13.671767234802246

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.981667537620524e-06
    2. '()' → logprob: -13.500001907348633
    3. ' ().' → logprob: -14.750001907348633
    4. '.' → logprob: -16.750001907348633
    5. '().__' → logprob: -18.250001907348633
    6. ')' → logprob: -18.750001907348633
    7. '()))' → logprob: -18.750001907348633
    8. '(' → logprob: -18.750001907348633
    9. ' .' → logprob: -19.250001907348633
    10. '.readline' → logprob: -19.500001907348633

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. '(split' → logprob: -14.375000953674316
    3. 'strip' → logprob: -15.875000953674316
    4. ' split' → logprob: -16.25
    5. 'spl' → logprob: -18.125
    6. ')' → logprob: -18.875
    7. 'rstrip' → logprob: -19.125
    8. '```' → logprob: -20.25
    9. '_split' → logprob: -20.75
    10. 'plit' → logprob: -20.75

Token 33: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0119911665096879
    2. '())' → logprob: -5.011991024017334
    3. '()' → logprob: -5.636991024017334
    4. '))' → logprob: -6.636991024017334
    5. '().' → logprob: -8.886991500854492
    6. '())))' → logprob: -9.136991500854492
    7. '())).' → logprob: -10.261991500854492
    8. '(' → logprob: -10.386991500854492
    9. '()))
' → logprob: -10.511991500854492
    10. '()));' → logprob: -10.886991500854492

Token 34: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12146762758493423
    2. '(input' → logprob: -2.8714675903320312
    3. '(line' → logprob: -3.9964675903320312
    4. '(row' → logprob: -4.371467590332031
    5. '()' → logprob: -4.496467590332031
    6. '(i' → logprob: -4.996467590332031
    7. '(range' → logprob: -6.621467590332031
    8. ')' → logprob: -6.621467590332031
    9. '(p' → logprob: -6.746467590332031
    10. 'for' → logprob: -7.371467590332031

Token 35: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6093513369560242
    2. ' range' → logprob: -0.9843513369560242
    3. ' _' → logprob: -2.734351396560669
    4. '(' → logprob: -4.35935115814209
    5. '(range' → logprob: -6.35935115814209
    6. 'range' → logprob: -6.73435115814209
    7. ' i' → logprob: -6.98435115814209
    8. ' ' → logprob: -7.23435115814209
    9. '()' → logprob: -8.98435115814209
    10. '_range' → logprob: -9.23435115814209

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00130094971973449
    2. 'in' → logprob: -6.751300811767578
    3. 'range' → logprob: -9.501300811767578
    4. ' range' → logprob: -10.251300811767578
    5. '(' → logprob: -11.001300811767578
    6. '_' → logprob: -13.376300811767578
    7. 's' → logprob: -14.001300811767578
    8. '(range' → logprob: -14.626300811767578
    9. ' ' → logprob: -14.876300811767578
    10. ')' → logprob: -15.501300811767578

Token 37: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234475247561932
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -14.755234718322754
    4. '	range' → logprob: -15.630234718322754
    5. 'ange' → logprob: -16.255233764648438
    6. 'r' → logprob: -17.505233764648438
    7. 'rang' → logprob: -17.630233764648438
    8. '[' → logprob: -18.380233764648438
    9. '_range' → logprob: -18.380233764648438
    10. '.range' → logprob: -18.630233764648438

Token 38: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6227787733078003
    2. '(r' → logprob: -1.3727787733078003
    3. '(t' → logprob: -1.6227787733078003
    4. '(' → logprob: -4.37277889251709
    5. '(n' → logprob: -9.24777889251709
    6. '(k' → logprob: -9.74777889251709
    7. '(q' → logprob: -12.24777889251709
    8. '(s' → logprob: -12.49777889251709
    9. '(m' → logprob: -12.74777889251709
    10. '(
' → logprob: -13.62277889251709

Token 39: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001899511698866263
    2. ')' → logprob: -8.625189781188965
    3. ')])' → logprob: -12.375189781188965
    4. ']' → logprob: -12.375189781188965
    5. ')],' → logprob: -14.500189781188965
    6. '))' → logprob: -14.875189781188965
    7. '])]' → logprob: -14.875189781188965
    8. ' )' → logprob: -15.500189781188965
    9. '])' → logprob: -15.875189781188965
    10. '')]' → logprob: -16.12519073486328

Token 40: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7965762615203857
    2. 'work' → logprob: -1.1715762615203857
    3. 'alloc' → logprob: -3.1715762615203857
    4. 'safe' → logprob: -3.2965762615203857
    5. 'finish' → logprob: -3.5465762615203857
    6. 'allocated' → logprob: -3.6715762615203857
    7. 'for' → logprob: -3.6715762615203857
    8. 'allocation' → logprob: -3.6715762615203857
    9. 'completion' → logprob: -5.046576499938965
    10. 'res' → logprob: -5.546576499938965

Token 41: ' Tracking' (ID: 66885)
  Prédit: ' safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' safe' → logprob: -0.8915963172912598
    2. ' for' → logprob: -1.7665963172912598
    3. ' max' → logprob: -2.5165963172912598
    4. ' work' → logprob: -3.1415963172912598
    5. ' allocation' → logprob: -3.3915963172912598
    6. 'def' → logprob: -3.5165963172912598
    7. 'max' → logprob: -3.7665963172912598
    8. 'allocation' → logprob: -3.7665963172912598
    9. 'safe' → logprob: -3.7665963172912598
    10. 'work' → logprob: -4.01659631729126

Token 42: ' allocated' (ID: 42041)
  Prédit: 'allocation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allocation' → logprob: -0.6444177627563477
    2. 'allocated' → logprob: -1.8944177627563477
    3. 'work' → logprob: -2.1444177627563477
    4. 'available' → logprob: -2.2694177627563477
    5. ' allocation' → logprob: -4.144417762756348
    6. 'alloc' → logprob: -4.269417762756348
    7. 'safe' → logprob: -4.644417762756348
    8. 'completion' → logprob: -4.644417762756348
    9. ' work' → logprob: -5.019417762756348
    10. 'finish' → logprob: -5.019417762756348

Token 43: ' resources' (ID: 7416)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6368272304534912
    2. ' =' → logprob: -0.7618272304534912
    3. 'resources' → logprob: -6.13682746887207
    4. '_resources' → logprob: -6.51182746887207
    5. '=[]' → logprob: -8.38682746887207
    6. '[' → logprob: -9.51182746887207
    7. '=[' → logprob: -10.01182746887207
    8. ',' → logprob: -10.38682746887207
    9. 'and' → logprob: -10.88682746887207
    10. '=list' → logprob: -11.26182746887207

Token 44: ' per' (ID: 777)
  Prédit: 'allocated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allocated' → logprob: -0.5843880772590637
    2. 'allocation' → logprob: -1.209388017654419
    3. 'alloc' → logprob: -1.959388017654419
    4. ' allocated' → logprob: -6.709388256072998
    5. ' allocation' → logprob: -6.959388256072998
    6. 'allocate' → logprob: -8.08438777923584
    7. ' =' → logprob: -8.33438777923584
    8. '_alloc' → logprob: -9.08438777923584
    9. ' allocations' → logprob: -9.33438777923584
    10. '=' → logprob: -9.58438777923584

Token 45: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.42900994420051575
    2. ' process' → logprob: -1.0540099143981934
    3. ' processes' → logprob: -9.179010391235352
    4. 'p' → logprob: -9.804010391235352
    5. 'program' → logprob: -10.179010391235352
    6. '	process' → logprob: -10.804010391235352
    7. '_process' → logprob: -10.929010391235352
    8. ' ' → logprob: -11.554010391235352
    9. '   ' → logprob: -11.929010391235352
    10. 'product' → logprob: -12.304010391235352

Token 46: '
' (ID: 198)
  Prédit: 'allocated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allocated' → logprob: -0.355074018239975
    2. 'alloc' → logprob: -1.3550740480422974
    3. 'allocation' → logprob: -3.230073928833008
    4. 'allocate' → logprob: -7.105073928833008
    5. 'allo' → logprob: -7.855073928833008
    6. 'all' → logprob: -9.855073928833008
    7. ' allocated' → logprob: -9.980073928833008
    8. '_alloc' → logprob: -10.605073928833008
    9. '```' → logprob: -11.480073928833008
    10. 'used' → logprob: -11.855073928833008

Token 47: 'allocated' (ID: 108557)
  Prédit: 'allocated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allocated' → logprob: -0.42146357893943787
    2. 'allocation' → logprob: -1.5464636087417603
    3. 'alloc' → logprob: -2.0464634895324707
    4. 'allocate' → logprob: -6.921463489532471
    5. ' allocated' → logprob: -7.796463489532471
    6. ' allocation' → logprob: -8.296463966369629
    7. 'allo' → logprob: -10.921463966369629
    8. 'assigned' → logprob: -11.296463966369629
    9. 'all' → logprob: -11.671463966369629
    10. 'Allocation' → logprob: -11.921463966369629

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365803137421608
    2. '=' → logprob: -3.408658027648926
    3. '=[]' → logprob: -12.158658027648926
    4. 's' → logprob: -13.158658027648926
    5. '[' → logprob: -13.283658027648926
    6. ' =[' → logprob: -14.033658027648926
    7. '[]' → logprob: -14.533658027648926
    8. ',' → logprob: -14.908658027648926
    9. '[:]' → logprob: -14.908658027648926
    10. '_' → logprob: -15.158658027648926

Token 49: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.01538307685405016
    2. '[' → logprob: -4.515383243560791
    3. ' [[' → logprob: -5.515383243560791
    4. ' [' → logprob: -8.515382766723633
    5. '[list' → logprob: -9.390382766723633
    6. '[len' → logprob: -11.890382766723633
    7. '[]' → logprob: -12.390382766723633
    8. '[p' → logprob: -13.015382766723633
    9. '[List' → logprob: -14.515382766723633
    10. '[array' → logprob: -15.140382766723633

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020616286201402545
    2. ' ' → logprob: -8.500205993652344
    3. ']' → logprob: -13.500205993652344
    4. ')' → logprob: -14.500205993652344
    5. '   ' → logprob: -15.125205993652344
    6. ' ]' → logprob: -16.812705993652344
    7. '  ' → logprob: -17.125205993652344
    8. '#' → logprob: -17.312705993652344
    9. '	' → logprob: -17.437705993652344
    10. '```' → logprob: -17.437705993652344

Token 51: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23103822767734528
    2. ']*' → logprob: -2.2310383319854736
    3. ']' → logprob: -2.4810383319854736
    4. 'for' → logprob: -4.2310380935668945
    5. ' ]' → logprob: -7.7310380935668945
    6. ' ' → logprob: -9.606038093566895
    7. '	for' → logprob: -9.731038093566895
    8. ']*(' → logprob: -9.981038093566895
    9. ')' → logprob: -10.106038093566895
    10. '   ' → logprob: -11.356038093566895

Token 52: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003634713648352772
    2. 't' → logprob: -8.12536334991455
    3. ' r' → logprob: -9.75036334991455
    4. 'p' → logprob: -11.87536334991455
    5. '(r' → logprob: -14.25036334991455
    6. '	r' → logprob: -14.87536334991455
    7. ' ' → logprob: -15.25036334991455
    8. ' t' → logprob: -15.75036334991455
    9. '   ' → logprob: -15.75036334991455
    10. '
' → logprob: -16.250364303588867

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.033655960112810135
    2. 'for' → logprob: -3.408655881881714
    3. ' ' → logprob: -12.033656120300293
    4. ')' → logprob: -13.158656120300293
    5. ']' → logprob: -13.783656120300293
    6. '	for' → logprob: -13.908656120300293
    7. ' ]' → logprob: -15.408656120300293
    8. '   ' → logprob: -16.783655166625977
    9. '```' → logprob: -16.783655166625977
    10. ' )' → logprob: -17.033655166625977

Token 54: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01191200315952301
    2. 'range' → logprob: -4.636911869049072
    3. ' _' → logprob: -6.761911869049072
    4. '_range' → logprob: -7.511911869049072
    5. '_' → logprob: -8.13691234588623
    6. ' p' → logprob: -9.13691234588623
    7. ' in' → logprob: -11.01191234588623
    8. '(range' → logprob: -11.76191234588623
    9. '_p' → logprob: -12.01191234588623
    10. ' ' → logprob: -12.26191234588623

Token 55: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01420957688242197
    2. ' range' → logprob: -4.264209747314453
    3. 'in' → logprob: -10.514209747314453
    4. ' in' → logprob: -11.264209747314453
    5. '(range' → logprob: -12.264209747314453
    6. '	range' → logprob: -14.889209747314453
    7. '_range' → logprob: -15.389209747314453
    8. 'p' → logprob: -15.389209747314453
    9. ' ' → logprob: -15.889209747314453
    10. '<|end|>' → logprob: -16.139209747314453

Token 56: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164566993713379
    2. ' range' → logprob: -4.264164447784424
    3. 'p' → logprob: -14.014164924621582
    4. '(range' → logprob: -16.264163970947266
    5. '	range' → logprob: -17.014163970947266
    6. ' p' → logprob: -17.264163970947266
    7. ' ' → logprob: -17.639163970947266
    8. 'available' → logprob: -18.889163970947266
    9. '_range' → logprob: -18.889163970947266
    10. 'ran' → logprob: -19.514163970947266

Token 57: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00028993739397265017
    2. 'range' → logprob: -8.750289916992188
    3. 'p' → logprob: -9.500289916992188
    4. '(' → logprob: -10.625289916992188
    5. '(range' → logprob: -11.125289916992188
    6. ' range' → logprob: -11.625289916992188
    7. ' (' → logprob: -11.875289916992188
    8. ' p' → logprob: -14.625289916992188
    9. '((' → logprob: -15.500289916992188
    10. '	p' → logprob: -16.250289916992188

Token 58: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.065608562901616e-05
    2. ')' → logprob: -9.625081062316895
    3. ']' → logprob: -11.375081062316895
    4. ' )' → logprob: -13.500081062316895
    5. ')],' → logprob: -14.500081062316895
    6. ')]
' → logprob: -14.625081062316895
    7. ')])' → logprob: -15.875081062316895
    8. '')]' → logprob: -16.250080108642578
    9. '),' → logprob: -16.500080108642578
    10. '])]' → logprob: -16.500080108642578

Token 59: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.029229760169983
    2. 'work' → logprob: -1.404229760169983
    3. 'def' → logprob: -1.529229760169983
    4. 'for' → logprob: -2.2792296409606934
    5. ' while' → logprob: -4.279229640960693
    6. '#' → logprob: -4.529229640960693
    7. 'max' → logprob: -4.654229640960693
    8. 'available' → logprob: -4.904229640960693
    9. 'i' → logprob: -5.279229640960693
    10. 'need' → logprob: -5.404229640960693

Token 60: ' Track' (ID: 30844)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1129547357559204
    2. 'work' → logprob: -1.3629547357559204
    3. 'def' → logprob: -1.4879547357559204
    4. 'Work' → logprob: -3.237954616546631
    5. '#' → logprob: -3.362954616546631
    6. 'while' → logprob: -3.487954616546631
    7. 'max' → logprob: -3.612954616546631
    8. 'request' → logprob: -3.987954616546631
    9. ' for' → logprob: -5.362954616546631
    10. 'available' → logprob: -5.487954616546631

Token 61: ' number' (ID: 2086)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.06399377435445786
    2. 'ed' → logprob: -3.3139936923980713
    3. '_available' → logprob: -5.31399393081665
    4. 'safe' → logprob: -5.56399393081665
    5. 'available' → logprob: -5.56399393081665
    6. 's' → logprob: -5.81399393081665
    7. 'def' → logprob: -5.93899393081665
    8. '#' → logprob: -6.93899393081665
    9. '_resources' → logprob: -6.93899393081665
    10. 'er' → logprob: -7.31399393081665

Token 62: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.23162026703357697
    2. 'ed' → logprob: -2.2316203117370605
    3. 'of' → logprob: -2.6066203117370605
    4. ' of' → logprob: -4.9816203117370605
    5. 'ing' → logprob: -5.1066203117370605
    6. 's' → logprob: -5.3566203117370605
    7. '_requests' → logprob: -6.8566203117370605
    8. '_alloc' → logprob: -7.2316203117370605
    9. '_available' → logprob: -7.3566203117370605
    10. 'allocated' → logprob: -7.7316203117370605

Token 63: ' acquired' (ID: 27937)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -1.2152098417282104
    2. 'resources' → logprob: -2.3402099609375
    3. 'available' → logprob: -2.4652099609375
    4. 'instances' → logprob: -2.5902099609375
    5. ' processes' → logprob: -2.8402099609375
    6. ' times' → logprob: -2.8402099609375
    7. 'allocated' → logprob: -3.0902099609375
    8. ' available' → logprob: -3.0902099609375
    9. ' resources' → logprob: -3.3402099609375
    10. ' allocated' → logprob: -3.8402099609375

Token 64: ' instances' (ID: 23490)
  Prédit: 'resources'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resources' → logprob: -0.33764705061912537
    2. ' resources' → logprob: -1.3376470804214478
    3. '_resources' → logprob: -4.837646961212158
    4. 'process' → logprob: -5.337646961212158
    5. 'instances' → logprob: -5.712646961212158
    6. ' processes' → logprob: -5.962646961212158
    7. 'locks' → logprob: -6.962646961212158
    8. '[' → logprob: -7.087646961212158
    9. 'tokens' → logprob: -7.837646961212158
    10. ' instances' → logprob: -8.087647438049316

Token 65: ' per' (ID: 777)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2964191138744354
    2. '=' → logprob: -1.4214191436767578
    3. 'per' → logprob: -4.796419143676758
    4. 's' → logprob: -5.421419143676758
    5. 'of' → logprob: -7.421419143676758
    6. '_per' → logprob: -7.546419143676758
    7. 'for' → logprob: -7.796419143676758
    8. ' of' → logprob: -8.171419143676758
    9. ' per' → logprob: -8.296419143676758
    10. '[' → logprob: -8.671419143676758

Token 66: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.5000712871551514
    2. 'resource' → logprob: -1.1250712871551514
    3. ' resource' → logprob: -3.1250712871551514
    4. ' process' → logprob: -3.7500712871551514
    5. 't' → logprob: -7.7500715255737305
    6. 'resources' → logprob: -7.7500715255737305
    7. 'available' → logprob: -9.75007152557373
    8. ' t' → logprob: -10.00007152557373
    9. 'p' → logprob: -10.00007152557373
    10. 'r' → logprob: -10.12507152557373

Token 67: ' per' (ID: 777)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.08672796934843063
    2. 'need' → logprob: -3.2117278575897217
    3. ' acquired' → logprob: -4.711728096008301
    4. ' =' → logprob: -4.836728096008301
    5. 'count' → logprob: -5.086728096008301
    6. 'available' → logprob: -5.711728096008301
    7. 'process' → logprob: -6.461728096008301
    8. '=' → logprob: -6.586728096008301
    9. 'current' → logprob: -6.586728096008301
    10. ' need' → logprob: -7.211728096008301

Token 68: ' resource' (ID: 8305)
  Prédit: 'resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resource' → logprob: -0.3487422466278076
    2. ' resource' → logprob: -1.2237422466278076
    3. 't' → logprob: -9.723742485046387
    4. 'request' → logprob: -10.473742485046387
    5. 'type' → logprob: -10.723742485046387
    6. ' t' → logprob: -10.973742485046387
    7. 'need' → logprob: -11.098742485046387
    8. ' ' → logprob: -11.223742485046387
    9. 'time' → logprob: -11.223742485046387
    10. 'available' → logprob: -11.223742485046387

Token 69: ' during' (ID: 3354)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.1048758402466774
    2. 'count' → logprob: -2.7298758029937744
    3. ' =' → logprob: -4.7298760414123535
    4. 'for' → logprob: -5.4798760414123535
    5. ' acquired' → logprob: -5.6048760414123535
    6. '=' → logprob: -5.8548760414123535
    7. 'need' → logprob: -5.9798760414123535
    8. 's' → logprob: -6.2298760414123535
    9. ' for' → logprob: -6.9798760414123535
    10. 'owned' → logprob: -7.3548760414123535

Token 70: ' the' (ID: 290)
  Prédit: 'execution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'execution' → logprob: -0.5843327045440674
    2. ' execution' → logprob: -1.7093327045440674
    3. 't' → logprob: -2.8343327045440674
    4. 'allocation' → logprob: -3.0843327045440674
    5. 'the' → logprob: -3.5843327045440674
    6. ' t' → logprob: -3.8343327045440674
    7. ' the' → logprob: -3.9593327045440674
    8. 'request' → logprob: -4.084332466125488
    9. 'each' → logprob: -4.459332466125488
    10. ' request' → logprob: -4.959332466125488

Token 71: ' log' (ID: 2142)
  Prédit: 'execution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'execution' → logprob: -0.6799576878547668
    2. 'simulation' → logprob: -2.054957628250122
    3. 't' → logprob: -2.304957628250122
    4. 'allocation' → logprob: -2.429957628250122
    5. 'current' → logprob: -3.054957628250122
    6. 'request' → logprob: -4.429957866668701
    7. 's' → logprob: -4.429957866668701
    8. 'while' → logprob: -4.804957866668701
    9. 'algorithm' → logprob: -5.179957866668701
    10. 'process' → logprob: -5.179957866668701

Token 72: ' processing' (ID: 12323)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3858191967010498
    2. 'ic' → logprob: -1.8858191967010498
    3. 's' → logprob: -2.26081919670105
    4. 'for' → logprob: -2.38581919670105
    5. ' for' → logprob: -2.51081919670105
    6. 'ical' → logprob: -2.51081919670105
    7. '[]' → logprob: -3.01081919670105
    8. 'ac' → logprob: -4.135819435119629
    9. ' acquired' → logprob: -4.510819435119629
    10. ' =' → logprob: -4.635819435119629

Token 73: '
' (ID: 198)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.8515525460243225
    2. 'count' → logprob: -0.9765525460243225
    3. 'log' → logprob: -2.7265524864196777
    4. ' acquired' → logprob: -3.6015524864196777
    5. 'counts' → logprob: -3.6015524864196777
    6. ' count' → logprob: -4.226552486419678
    7. 'for' → logprob: -4.601552486419678
    8. ' for' → logprob: -4.976552486419678
    9. 'current' → logprob: -5.101552486419678
    10. 'process' → logprob: -5.476552486419678

Token 74: '#' (ID: 2)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.7102568745613098
    2. 'for' → logprob: -1.085256814956665
    3. 'ac' → logprob: -2.710256814956665
    4. 'count' → logprob: -3.960256814956665
    5. 'current' → logprob: -3.960256814956665
    6. ' for' → logprob: -4.710257053375244
    7. 'logs' → logprob: -5.085257053375244
    8. 'requests' → logprob: -5.335257053375244
    9. 'counts' → logprob: -5.335257053375244
    10. 'process' → logprob: -5.710257053375244

Token 75: ' For' (ID: 2214)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -1.094004511833191
    2. 'for' → logprob: -1.344004511833191
    3. 'ac' → logprob: -2.4690046310424805
    4. ' for' → logprob: -2.5940046310424805
    5. 'count' → logprob: -2.9690046310424805
    6. 'current' → logprob: -3.4690046310424805
    7. ' acquired' → logprob: -3.5940046310424805
    8. ' log' → logprob: -3.9690046310424805
    9. ' current' → logprob: -4.8440046310424805
    10. 'requests' → logprob: -4.8440046310424805

Token 76: ' performance' (ID: 6198)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6450920701026917
    2. ' i' → logprob: -1.1450920104980469
    3. '_' → logprob: -2.895092010498047
    4. ' line' → logprob: -4.145092010498047
    5. ' each' → logprob: -4.145092010498047
    6. ' log' → logprob: -4.145092010498047
    7. ' resource' → logprob: -4.645092010498047
    8. ' process' → logprob: -4.770092010498047
    9. ' p' → logprob: -5.270092010498047
    10. 'i' → logprob: -5.270092010498047

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08445534110069275
    2. ' ,' → logprob: -2.8344552516937256
    3. '_' → logprob: -4.709455490112305
    4. ' purposes' → logprob: -6.209455490112305
    5. ':' → logprob: -6.834455490112305
    6. ' reasons' → logprob: -6.959455490112305
    7. 's' → logprob: -7.084455490112305
    8. ' and' → logprob: -7.084455490112305
    9. ' ' → logprob: -7.209455490112305
    10. '_,' → logprob: -7.521955490112305

Token 78: ' track' (ID: 5290)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.412254810333252
    2. 'we' → logprob: -1.787254810333252
    3. ' we' → logprob: -2.787254810333252
    4. 'process' → logprob: -3.037254810333252
    5. ' use' → logprob: -3.287254810333252
    6. 'allocated' → logprob: -3.287254810333252
    7. 'using' → logprob: -3.537254810333252
    8. 'use' → logprob: -3.787254810333252
    9. 'count' → logprob: -4.037254810333252
    10. '#' → logprob: -4.037254810333252

Token 79: ' remaining' (ID: 15448)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9116564989089966
    2. ' current' → logprob: -1.7866564989089966
    3. ' acquired' → logprob: -2.786656379699707
    4. 'ac' → logprob: -3.036656379699707
    5. 'the' → logprob: -3.411656379699707
    6. ' only' → logprob: -3.661656379699707
    7. ' counts' → logprob: -3.786656379699707
    8. 'current' → logprob: -3.786656379699707
    9. ' currently' → logprob: -3.911656379699707
    10. ' total' → logprob: -4.161656379699707

Token 80: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.2049766778945923
    2. '_need' → logprob: -1.2049766778945923
    3. '_requests' → logprob: -2.2049765586853027
    4. '_needed' → logprob: -2.3299765586853027
    5. ' =' → logprob: -3.5799765586853027
    6. 'needed' → logprob: -3.8299765586853027
    7. '_d' → logprob: -4.079976558685303
    8. '_ne' → logprob: -4.454976558685303
    9. '_' → logprob: -4.454976558685303
    10. ' need' → logprob: -4.579976558685303

Token 81: ' per' (ID: 777)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6978301405906677
    2. 'remaining' → logprob: -1.5728302001953125
    3. '=' → logprob: -2.5728302001953125
    4. ',' → logprob: -3.1978302001953125
    5. '_remaining' → logprob: -3.4478302001953125
    6. 'need' → logprob: -3.5728302001953125
    7. '_' → logprob: -4.0728302001953125
    8. 'for' → logprob: -4.1978302001953125
    9. 'available' → logprob: -4.6978302001953125
    10. '[' → logprob: -4.6978302001953125

Token 82: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.6340609192848206
    2. 'process' → logprob: -0.7590609192848206
    3. ' resource' → logprob: -7.259060859680176
    4. 'resource' → logprob: -8.009060859680176
    5. '	process' → logprob: -8.384060859680176
    6. 'p' → logprob: -10.509060859680176
    7. ' p' → logprob: -10.509060859680176
    8. 'rocess' → logprob: -10.634060859680176
    9. '_process' → logprob: -11.134060859680176
    10. ' processes' → logprob: -11.384060859680176

Token 83: ' per' (ID: 777)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.2543434500694275
    2. ' =' → logprob: -2.2543435096740723
    3. 'need' → logprob: -3.0043435096740723
    4. ' remaining' → logprob: -4.254343509674072
    5. 'current' → logprob: -4.504343509674072
    6. '=' → logprob: -4.504343509674072
    7. 'remain' → logprob: -4.754343509674072
    8. ',' → logprob: -5.129343509674072
    9. 's' → logprob: -5.629343509674072
    10. 'available' → logprob: -5.879343509674072

Token 84: ' resource' (ID: 8305)
  Prédit: 'resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resource' → logprob: -0.43407729268074036
    2. ' resource' → logprob: -1.059077262878418
    3. 'process' → logprob: -5.684077262878418
    4. ' process' → logprob: -6.559077262878418
    5. 'need' → logprob: -9.309077262878418
    6. ' need' → logprob: -9.434077262878418
    7. 'r' → logprob: -9.684077262878418
    8. 't' → logprob: -10.059077262878418
    9. ' ' → logprob: -10.559077262878418
    10. '_resource' → logprob: -10.559077262878418

Token 85: '
' (ID: 198)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.11975947767496109
    2. 'current' → logprob: -3.1197595596313477
    3. 'need' → logprob: -3.3697595596313477
    4. 'remain' → logprob: -4.619759559631348
    5. 'available' → logprob: -4.994759559631348
    6. ' remaining' → logprob: -5.119759559631348
    7. '#' → logprob: -5.869759559631348
    8. 'rem' → logprob: -6.869759559631348
    9. 'used' → logprob: -6.994759559631348
    10. 'needed' → logprob: -7.244759559631348

Token 86: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.5390675663948059
    2. 'current' → logprob: -1.6640675067901611
    3. 'available' → logprob: -2.664067506790161
    4. 'need' → logprob: -2.914067506790161
    5. 'log' → logprob: -3.289067506790161
    6. 'remain' → logprob: -4.53906774520874
    7. 'max' → logprob: -4.66406774520874
    8. 'ac' → logprob: -4.66406774520874
    9. 'allocated' → logprob: -5.66406774520874
    10. 'for' → logprob: -5.78906774520874

Token 87: '_need' (ID: 188284)
  Prédit: '_need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_need' → logprob: -0.32346829771995544
    2. '_' → logprob: -1.9484683275222778
    3. ' =' → logprob: -2.1984682083129883
    4. '_ne' → logprob: -3.9484682083129883
    5. '=' → logprob: -6.198468208312988
    6. ' _' → logprob: -6.948468208312988
    7. '_space' → logprob: -8.948468208312988
    8. '_needed' → logprob: -9.073468208312988
    9. 'need' → logprob: -9.198468208312988
    10. 'Need' → logprob: -10.073468208312988

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589982092380524
    2. '=' → logprob: -3.0485899448394775
    3. '[' → logprob: -13.923589706420898
    4. ' ' → logprob: -14.173589706420898
    5. ' =[' → logprob: -14.298589706420898
    6. '=[' → logprob: -15.548589706420898
    7. '＝' → logprob: -16.7985897064209
    8. '=[]' → logprob: -16.9235897064209
    9. ' =
' → logprob: -17.0485897064209
    10. '[:]' → logprob: -17.1735897064209

Token 89: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2528725862503052
    2. ' [' → logprob: -1.5028725862503052
    3. '[list' → logprob: -8.002872467041016
    4. 'need' → logprob: -9.252872467041016
    5. '[[' → logprob: -9.502872467041016
    6. '[i' → logprob: -9.627872467041016
    7. '[p' → logprob: -9.752872467041016
    8. '[n' → logprob: -10.127872467041016
    9. '[t' → logprob: -10.127872467041016
    10. '[item' → logprob: -11.127872467041016

Token 90: 'need' (ID: 24630)
  Prédit: 'need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.03826376050710678
    2. ' need' → logprob: -4.03826379776001
    3. '[' → logprob: -4.16326379776001
    4. ' [' → logprob: -6.03826379776001
    5. 'list' → logprob: -7.41326379776001
    6. '[n' → logprob: -8.163263320922852
    7. 'n' → logprob: -8.413263320922852
    8. 'needed' → logprob: -8.538263320922852
    9. ' list' → logprob: -8.663263320922852
    10. 'ne' → logprob: -8.788263320922852

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.25222399830818176
    2. '[p' → logprob: -1.5022239685058594
    3. '[row' → logprob: -9.25222396850586
    4. '[' → logprob: -9.25222396850586
    5. '[:]' → logprob: -10.50222396850586
    6. '.copy' → logprob: -11.00222396850586
    7. '[ip' → logprob: -11.62722396850586
    8. '[idx' → logprob: -11.75222396850586
    9. '][' → logprob: -12.37722396850586
    10. '[x' → logprob: -12.37722396850586

Token 92: '][:' (ID: 63357)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.17228178679943085
    2. '[:' → logprob: -2.4222817420959473
    3. '][:' → logprob: -2.7972817420959473
    4. '.copy' → logprob: -4.797281742095947
    5. ' [:' → logprob: -9.797282218933105
    6. '].' → logprob: -10.047282218933105
    7. '][' → logprob: -10.047282218933105
    8. ']' → logprob: -10.172282218933105
    9. '[i' → logprob: -10.172282218933105
    10. '[' → logprob: -10.297282218933105

Token 93: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009109867387451231
    2. ' ]' → logprob: -7.500910758972168
    3. ')' → logprob: -8.125910758972168
    4. ')]' → logprob: -9.875910758972168
    5. '])' → logprob: -12.000910758972168
    6. ']
' → logprob: -13.875910758972168
    7. ' for' → logprob: -14.000910758972168
    8. ' ' → logprob: -14.250910758972168
    9. '[:]' → logprob: -14.250910758972168
    10. ' )' → logprob: -15.375910758972168

Token 94: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03137485682964325
    2. 'for' → logprob: -3.531374931335449
    3. '[:]' → logprob: -6.531374931335449
    4. '	for' → logprob: -9.15637493133545
    5. ')' → logprob: -10.40637493133545
    6. ' ' → logprob: -11.15637493133545
    7. ']' → logprob: -11.78137493133545
    8. '.copy' → logprob: -12.78137493133545
    9. '   ' → logprob: -13.03137493133545
    10. '<|end|>' → logprob: -13.15637493133545

Token 95: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38691872358322144
    2. 'range' → logprob: -1.1369187831878662
    3. 'i' → logprob: -10.761919021606445
    4. ' i' → logprob: -10.761919021606445
    5. ' ' → logprob: -13.011919021606445
    6. 'available' → logprob: -13.886919021606445
    7. ' available' → logprob: -14.386919021606445
    8. '(range' → logprob: -14.636919021606445
    9. '	range' → logprob: -15.386919021606445
    10. ' in' → logprob: -15.386919021606445

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026318296790122986
    2. 'in' → logprob: -3.651318311691284
    3. 'range' → logprob: -11.401318550109863
    4. ' range' → logprob: -12.526318550109863
    5. ' ' → logprob: -14.026318550109863
    6. 's' → logprob: -14.151318550109863
    7. 'i' → logprob: -14.526318550109863
    8. ' i' → logprob: -15.651318550109863
    9. ')' → logprob: -15.651318550109863
    10. ',' → logprob: -15.776318550109863

Token 97: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '(range' → logprob: -17.750123977661133
    4. '	range' → logprob: -19.375123977661133
    5. 'available' → logprob: -19.750123977661133
    6. ' ' → logprob: -20.750123977661133
    7. '   ' → logprob: -21.750123977661133
    8. '  ' → logprob: -22.125123977661133
    9. ')' → logprob: -22.750123977661133
    10. '```' → logprob: -22.875123977661133

Token 98: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.893480243277736e-05
    2. 'p' → logprob: -10.250039100646973
    3. '(' → logprob: -13.250039100646973
    4. '(len' → logprob: -13.500039100646973
    5. ' p' → logprob: -16.625038146972656
    6. '	p' → logprob: -16.625038146972656
    7. ')p' → logprob: -17.125038146972656
    8. ' (' → logprob: -17.625038146972656
    9. '(
' → logprob: -17.625038146972656
    10. 'len' → logprob: -17.875038146972656

Token 99: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008708410896360874
    2. ')' → logprob: -4.758708477020264
    3. ']' → logprob: -9.383708000183105
    4. '])' → logprob: -12.133708000183105
    5. ' )' → logprob: -13.508708000183105
    6. ')])' → logprob: -13.508708000183105
    7. '])]' → logprob: -14.133708000183105
    8. ')],' → logprob: -15.133708000183105
    9. '))' → logprob: -15.633708000183105
    10. ')]
' → logprob: -15.758708000183105

Token 100: '#' (ID: 2)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.13068971037864685
    2. 'n' → logprob: -3.2556896209716797
    3. 'while' → logprob: -3.7556896209716797
    4. 'm' → logprob: -4.13068962097168
    5. 'logs' → logprob: -4.63068962097168
    6. 'q' → logprob: -5.13068962097168
    7. 'l' → logprob: -5.13068962097168
    8. 'for' → logprob: -5.25568962097168
    9. 'request' → logprob: -5.25568962097168
    10. 'requests' → logprob: -6.13068962097168

Token 101: ' Count' (ID: 6789)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.5203476548194885
    2. 'for' → logprob: -1.3953475952148438
    3. 'n' → logprob: -3.6453475952148438
    4. 'def' → logprob: -3.6453475952148438
    5. 'while' → logprob: -3.7703475952148438
    6. '#' → logprob: -3.8953475952148438
    7. 'requests' → logprob: -4.020347595214844
    8. 'request' → logprob: -4.520347595214844
    9. 'logs' → logprob: -5.270347595214844
    10. ' for' → logprob: -5.770347595214844

Token 102: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4476277828216553
    2. 's' → logprob: -1.3226277828216553
    3. '=' → logprob: -2.6976277828216553
    4. '_ac' → logprob: -4.822628021240234
    5. '_' → logprob: -5.822628021240234
    6. '_requests' → logprob: -5.822628021240234
    7. '_instances' → logprob: -6.322628021240234
    8. '_resources' → logprob: -6.447628021240234
    9. '_available' → logprob: -6.447628021240234
    10. '_alloc' → logprob: -6.697628021240234

Token 103: ' finished' (ID: 11684)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -2.378166437149048
    2. 'available' → logprob: -2.628166437149048
    3. ' resources' → logprob: -2.878166437149048
    4. ' safe' → logprob: -3.003166437149048
    5. ' processes' → logprob: -3.003166437149048
    6. 'log' → logprob: -3.253166437149048
    7. ' occurrences' → logprob: -3.253166437149048
    8. ' lines' → logprob: -3.378166437149048
    9. 'instances' → logprob: -3.378166437149048
    10. 'completed' → logprob: -3.503166437149048

Token 104: ' processes' (ID: 14340)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06586723029613495
    2. '_process' → logprob: -3.3158671855926514
    3. 'process' → logprob: -4.3158674240112305
    4. '=' → logprob: -4.3158674240112305
    5. ' processes' → logprob: -8.06586742401123
    6. ' ' → logprob: -8.56586742401123
    7. 'Processes' → logprob: -9.31586742401123
    8. '=[]' → logprob: -10.06586742401123
    9. '_pro' → logprob: -11.06586742401123
    10. 's' → logprob: -11.44086742401123

Token 105: '
' (ID: 198)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.005579621996730566
    2. 'finish' → logprob: -5.255579471588135
    3. ' finished' → logprob: -8.755579948425293
    4. 'fin' → logprob: -9.505579948425293
    5. 'completed' → logprob: -10.380579948425293
    6. 'count' → logprob: -10.380579948425293
    7. '0' → logprob: -10.505579948425293
    8. 'f' → logprob: -10.880579948425293
    9. 'done' → logprob: -12.755579948425293
    10. 'Finished' → logprob: -13.755579948425293

Token 106: 'finished' (ID: 24477)
  Prédit: 'finished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.008849145844578743
    2. ' finished' → logprob: -5.383849143981934
    3. 'finish' → logprob: -5.508849143981934
    4. 'fin' → logprob: -9.383849143981934
    5. 'completed' → logprob: -10.008849143981934
    6. 'count' → logprob: -10.758849143981934
    7. '0' → logprob: -11.883849143981934
    8. ' finish' → logprob: -12.133849143981934
    9. 'done' → logprob: -12.758849143981934
    10. 'f' → logprob: -13.258849143981934

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003178071230649948
    2. '=' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.878177642822266
    4. 's' → logprob: -16.003177642822266
    5. ' =[' → logprob: -17.378177642822266
    6. ')' → logprob: -18.003177642822266
    7. ',' → logprob: -18.128177642822266
    8. '  ' → logprob: -18.753177642822266
    9. ' =)' → logprob: -18.878177642822266
    10. ' =
' → logprob: -19.378177642822266

Token 108: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011124689131975174
    2. ' ' → logprob: -4.511124610900879
    3. '[' → logprob: -10.011124610900879
    4. ' [' → logprob: -10.386124610900879
    5. '[p' → logprob: -14.136124610900879
    6. ' p' → logprob: -15.761124610900879
    7. '   ' → logprob: -16.261125564575195
    8. '[]' → logprob: -16.636125564575195
    9. 'p' → logprob: -16.761125564575195
    10. '  ' → logprob: -17.261125564575195

Token 109: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.493430894101039e-05
    2. ' False' → logprob: -9.500075340270996
    3. '0' → logprob: -17.00007438659668
    4. '(False' → logprob: -20.50007438659668
    5. 'True' → logprob: -20.87507438659668
    6. '=False' → logprob: -22.00007438659668
    7. '   ' → logprob: -22.37507438659668
    8. '.False' → logprob: -22.37507438659668
    9. 'F' → logprob: -23.62507438659668
    10. 'false' → logprob: -24.00007438659668

Token 110: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08706030249595642
    2. ']*' → logprob: -2.8370602130889893
    3. ' for' → logprob: -3.7120602130889893
    4. ' ]' → logprob: -8.33705997467041
    5. 'for' → logprob: -9.21205997467041
    6. ')' → logprob: -11.83705997467041
    7. ']*(' → logprob: -13.08705997467041
    8. ' ' → logprob: -13.58705997467041
    9. '	for' → logprob: -13.96205997467041
    10. ']+' → logprob: -14.58705997467041

Token 111: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.610702363715973e-06
    2. ' p' → logprob: -11.875009536743164
    3. '(p' → logprob: -12.875009536743164
    4. '   ' → logprob: -18.000009536743164
    5. '(' → logprob: -18.125009536743164
    6. '	p' → logprob: -19.250009536743164
    7. ' (' → logprob: -20.375009536743164
    8. ' ' → logprob: -20.500009536743164
    9. '<p' → logprob: -20.500009536743164
    10. '
' → logprob: -21.125009536743164

Token 112: '

' (ID: 279)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.37550994753837585
    2. 'for' → logprob: -2.3755099773406982
    3. 'work' → logprob: -2.8755099773406982
    4. 'request' → logprob: -3.1255099773406982
    5. 'while' → logprob: -3.2505099773406982
    6. 'logs' → logprob: -4.500509738922119
    7. 'n' → logprob: -4.875509738922119
    8. 'requests' → logprob: -4.875509738922119
    9. 'safe' → logprob: -5.375509738922119
    10. 'sequence' → logprob: -5.625509738922119

Token 113: 'def' (ID: 1314)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.4405617117881775
    2. 'for' → logprob: -1.5655617713928223
    3. 'logs' → logprob: -3.0655617713928223
    4. 'n' → logprob: -4.690561771392822
    5. 'q' → logprob: -4.690561771392822
    6. 'while' → logprob: -4.815561771392822
    7. 'l' → logprob: -4.940561771392822
    8. 'request' → logprob: -5.065561771392822
    9. 'requests' → logprob: -5.065561771392822
    10. 'm' → logprob: -5.190561771392822

Token 114: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4319201111793518
    2. ' can' → logprob: -2.181920051574707
    3. ' safe' → logprob: -2.181920051574707
    4. 'is' → logprob: -3.431920051574707
    5. 'safe' → logprob: -3.431920051574707
    6. ' safety' → logprob: -3.806920051574707
    7. 'can' → logprob: -4.056920051574707
    8. 's' → logprob: -4.556920051574707
    9. ' request' → logprob: -5.806920051574707
    10. ' check' → logprob: -6.681920051574707

Token 115: '_finish' (ID: 109520)
  Prédit: '_allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_allocate' → logprob: -1.048366904258728
    2. '_execute' → logprob: -1.673366904258728
    3. '_gr' → logprob: -1.798366904258728
    4. '_finish' → logprob: -2.0483670234680176
    5. '_pro' → logprob: -2.2983670234680176
    6. '_run' → logprob: -3.6733670234680176
    7. '_request' → logprob: -3.9233670234680176
    8. '_continue' → logprob: -4.673367023468018
    9. '_ac' → logprob: -5.923367023468018
    10. '_' → logprob: -6.673367023468018

Token 116: '(process' (ID: 39808)
  Prédit: '(process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(process' → logprob: -0.012707414105534554
    2. '(i' → logprob: -5.012707233428955
    3. '(proc' → logprob: -5.762707233428955
    4. '(pid' → logprob: -6.012707233428955
    5. '(p' → logprob: -8.387707710266113
    6. ' (' → logprob: -9.262707710266113
    7. '(' → logprob: -10.512707710266113
    8. '(pro' → logprob: -10.762707710266113
    9. '(idx' → logprob: -12.012707710266113
    10. 'process' → logprob: -12.512707710266113

Token 117: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00501564797013998
    2. ' ,' → logprob: -6.380015850067139
    3. '(process' → logprob: -6.755015850067139
    4. '(i' → logprob: -7.505015850067139
    5. '):' → logprob: -7.880015850067139
    6. 'process' → logprob: -8.38001537322998
    7. '_,' → logprob: -8.75501537322998
    8. '_idx' → logprob: -8.88001537322998
    9. ')' → logprob: -9.00501537322998
    10. '(p' → logprob: -9.13001537322998

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004210532642900944
    2. ' for' → logprob: -6.254210472106934
    3. ':' → logprob: -6.504210472106934
    4. '(' → logprob: -8.879210472106934
    5. '       ' → logprob: -9.379210472106934
    6. '<|end|>' → logprob: -9.379210472106934
    7. ' return' → logprob: -9.629210472106934
    8. '):' → logprob: -9.879210472106934
    9. '    ' → logprob: -9.879210472106934
    10. 'for' → logprob: -10.129210472106934

Token 119: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25450584292411804
    2. ' for' → logprob: -1.8795058727264404
    3. 'for' (adapté à ' for') → logprob: -2.8795058727264404
    4. ' global' → logprob: -4.629505634307861
    5. 'global' → logprob: -5.254505634307861
    6. ' return' → logprob: -8.00450611114502
    7. '    
' → logprob: -9.12950611114502
    8. 'return' → logprob: -9.37950611114502
    9. '  ' → logprob: -9.75450611114502
    10. '    ' → logprob: -10.00450611114502

Token 120: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6239015460014343
    2. 'i' → logprob: -0.8739015460014343
    3. ' j' → logprob: -3.623901605606079
    4. ' i' → logprob: -4.1239013671875
    5. 'resource' → logprob: -5.9989013671875
    6. 'r' → logprob: -7.2489013671875
    7. ' resource' → logprob: -7.8739013671875
    8. 'res' → logprob: -8.7489013671875
    9. 'k' → logprob: -9.2489013671875
    10. ' res' → logprob: -9.8739013671875

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026321083307266235
    2. 'in' → logprob: -3.6513211727142334
    3. ' ' → logprob: -11.776321411132812
    4. '   ' → logprob: -12.026321411132812
    5. '	in' → logprob: -12.776321411132812
    6. '    ' → logprob: -13.401321411132812
    7. '  ' → logprob: -13.776321411132812
    8. ',' → logprob: -14.151321411132812
    9. ')' → logprob: -15.526321411132812
    10. 'range' → logprob: -15.651321411132812

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163628220558167
    2. ' range' → logprob: -4.264163494110107
    3. '	range' → logprob: -16.389163970947266
    4. ' ' → logprob: -16.764163970947266
    5. '(range' → logprob: -17.014163970947266
    6. '   ' → logprob: -17.014163970947266
    7. 'r' → logprob: -17.514163970947266
    8. '  ' → logprob: -18.889163970947266
    9. 'ange' → logprob: -18.889163970947266
    10. '
' → logprob: -18.889163970947266

Token 123: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.06284360587596893
    2. 'r' → logprob: -2.8128435611724854
    3. ' r' → logprob: -7.1878437995910645
    4. ' (' → logprob: -9.437843322753906
    5. '	r' → logprob: -11.062843322753906
    6. '(' → logprob: -11.562843322753906
    7. ')' → logprob: -12.062843322753906
    8. '   ' → logprob: -12.312843322753906
    9. ' ' → logprob: -13.312843322753906
    10. ',r' → logprob: -13.687843322753906

Token 124: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3871704041957855
    2. '):' → logprob: -1.137170433998108
    3. '):
' → logprob: -8.387170791625977
    4. ' ):
' → logprob: -10.137170791625977
    5. ' ):' → logprob: -10.887170791625977
    6. '   ' → logprob: -12.012170791625977
    7. '):

' → logprob: -12.762170791625977
    8. ')' → logprob: -13.262170791625977
    9. ':' → logprob: -13.637170791625977
    10. ':
' → logprob: -14.637170791625977

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01300645712763071
    2. ' if' → logprob: -4.388006687164307
    3. '   ' → logprob: -8.513006210327148
    4. 'if' → logprob: -8.638006210327148
    5. ',' → logprob: -10.263006210327148
    6. ':' → logprob: -11.013006210327148
    7. '<|end|>' → logprob: -11.763006210327148
    8. '      ' → logprob: -12.013006210327148
    9. '     ' → logprob: -12.138006210327148
    10. '           ' → logprob: -12.138006210327148

Token 126: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06588230282068253
    2. ' if' → logprob: -2.8158822059631348
    3. '       ' → logprob: -5.565882205963135
    4. '   ' → logprob: -10.315882682800293
    5. '           ' → logprob: -10.815882682800293
    6. 'available' → logprob: -10.815882682800293
    7. 'remaining' → logprob: -12.315882682800293
    8. ' available' → logprob: -13.315882682800293
    9. '	if' → logprob: -14.565882682800293
    10. ' remaining' → logprob: -15.190882682800293

Token 127: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -1.1374534368515015
    2. 'available' → logprob: -1.2624534368515015
    3. ' remaining' → logprob: -1.6374534368515015
    4. ' available' → logprob: -1.7624534368515015
    5. 'allocated' → logprob: -4.012453556060791
    6. ' allocated' → logprob: -5.137453556060791
    7. 'need' → logprob: -5.637453556060791
    8. ' need' → logprob: -6.262453556060791
    9. 'needed' → logprob: -8.887453079223633
    10. ' t' → logprob: -9.012453079223633

Token 128: '_need' (ID: 188284)
  Prédit: '_need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_need' → logprob: -4.966313281329349e-05
    2. 'need' → logprob: -10.125049591064453
    3. '_needed' → logprob: -11.875049591064453
    4. '_' → logprob: -13.875049591064453
    5. '[' → logprob: -14.625049591064453
    6. '```' → logprob: -15.000049591064453
    7. ' need' → logprob: -15.375049591064453
    8. 'Need' → logprob: -15.750049591064453
    9. '_have' → logprob: -16.500049591064453
    10. '[j' → logprob: -16.625049591064453

Token 129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.815280696377158e-05
    2. 'process' → logprob: -9.625078201293945
    3. '(process' → logprob: -12.375078201293945
    4. ' [' → logprob: -12.500078201293945
    5. '[j' → logprob: -13.000078201293945
    6. '[current' → logprob: -15.000078201293945
    7. '[i' → logprob: -15.125078201293945
    8. '[p' → logprob: -15.875078201293945
    9. '[
' → logprob: -16.375078201293945
    10. '```' → logprob: -16.375078201293945

Token 130: 'process' (ID: 9139)
  Prédit: 'process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.0005995001993142068
    2. '[' → logprob: -7.625599384307861
    3. ' process' → logprob: -9.25059986114502
    4. '][' → logprob: -11.87559986114502
    5. '(process' → logprob: -12.50059986114502
    6. ']' → logprob: -13.50059986114502
    7. ' [' → logprob: -13.75059986114502
    8. '	process' → logprob: -13.87559986114502
    9. '
' → logprob: -15.00059986114502
    10. ')' → logprob: -15.00059986114502

Token 131: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001791916904039681
    2. '[j' → logprob: -6.376791954040527
    3. ' ][' → logprob: -9.501791954040527
    4. ']' → logprob: -11.751791954040527
    5. '[' → logprob: -12.751791954040527
    6. '   ' → logprob: -13.501791954040527
    7. 'j' → logprob: -13.876791954040527
    8. '"][' → logprob: -14.876791954040527
    9. '```' → logprob: -15.126791954040527
    10. '
' → logprob: -15.751791954040527

Token 132: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001126026691053994
    2. ' j' → logprob: -9.125112533569336
    3. ']' → logprob: -12.875112533569336
    4. '[j' → logprob: -14.500112533569336
    5. '	j' → logprob: -15.750112533569336
    6. '
' → logprob: -16.375112533569336
    7. '_j' → logprob: -16.875112533569336
    8. '   ' → logprob: -16.875112533569336
    9. ' ' → logprob: -17.375112533569336
    10. '```' → logprob: -17.500112533569336

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05565936490893364
    2. '>' → logprob: -3.555659294128418
    3. ']>' → logprob: -4.055659294128418
    4. ' >' → logprob: -5.430659294128418
    5. ' ]' → logprob: -5.555659294128418
    6. ']>=' → logprob: -13.180659294128418
    7. '>]' → logprob: -13.180659294128418
    8. '   ' → logprob: -14.555659294128418
    9. '']' → logprob: -14.680659294128418
    10. ' ' → logprob: -15.055659294128418

Token 134: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07889319956302643
    2. ' >' → logprob: -2.5788931846618652
    3. '">' → logprob: -14.078893661499023
    4. ')' → logprob: -14.453893661499023
    5. ')>' → logprob: -14.578893661499023
    6. '>`' → logprob: -14.953893661499023
    7. ']' → logprob: -15.203893661499023
    8. ' ' → logprob: -15.453893661499023
    9. ']>' → logprob: -15.578893661499023
    10. ' ' → logprob: -15.953893661499023

Token 135: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.06200386956334114
    2. ' available' → logprob: -2.8120038509368896
    3. '0' → logprob: -10.687004089355469
    4. ' ' → logprob: -11.937004089355469
    5. '   ' → logprob: -12.562004089355469
    6. '
' → logprob: -14.187004089355469
    7. '  ' → logprob: -14.562004089355469
    8. 'allocated' → logprob: -14.687004089355469
    9. 'avail' → logprob: -14.812004089355469
    10. '	' → logprob: -15.062004089355469

Token 136: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.248469718324486e-05
    2. '[' → logprob: -10.750022888183594
    3. ' [' → logprob: -14.000022888183594
    4. '[r' → logprob: -16.625022888183594
    5. '[
' → logprob: -16.750022888183594
    6. ')' → logprob: -17.625022888183594
    7. '[i' → logprob: -18.000022888183594
    8. ']' → logprob: -18.375022888183594
    9. '

' → logprob: -18.875022888183594
    10. '```' → logprob: -18.875022888183594

Token 137: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07265029102563858
    2. ']:' → logprob: -3.572650194168091
    3. ' ):' → logprob: -3.822650194168091
    4. '):
' → logprob: -4.07265043258667
    5. ':' → logprob: -6.57265043258667
    6. ')' → logprob: -7.32265043258667
    7. ' ):
' → logprob: -7.82265043258667
    8. ']):' → logprob: -8.322649955749512
    9. ']:
' → logprob: -9.072649955749512
    10. ' ]' → logprob: -9.947649955749512

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4568975865840912
    2. ':' → logprob: -1.2068976163864136
    3. '       ' → logprob: -3.706897497177124
    4. ':
' → logprob: -3.956897497177124
    5. ':return' → logprob: -4.081897735595703
    6. ' return' → logprob: -5.581897735595703
    7. 'return' → logprob: -6.206897735595703
    8. '               ' → logprob: -8.206897735595703
    9. ' :' → logprob: -8.456897735595703
    10. '          ' → logprob: -8.831897735595703

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26794058084487915
    2. ' return' → logprob: -1.5179405212402344
    3. '               ' → logprob: -4.767940521240234
    4. '           ' → logprob: -5.267940521240234
    5. '
' → logprob: -6.142940521240234
    6. '	return' → logprob: -10.267940521240234
    7. '       ' → logprob: -10.892940521240234
    8. ' 
' → logprob: -11.517940521240234
    9. ':return' → logprob: -11.892940521240234
    10. '   ' → logprob: -12.267940521240234

Token 140: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4740770161151886
    2. ' False' → logprob: -0.9740769863128662
    3. '(False' → logprob: -19.849077224731445
    4. ' ' → logprob: -21.474077224731445
    5. ' false' → logprob: -21.724077224731445
    6. 'True' → logprob: -22.099077224731445
    7. 'false' → logprob: -22.224077224731445
    8. ' True' → logprob: -22.349077224731445
    9. '=False' → logprob: -22.599077224731445
    10. ' ' → logprob: -23.349077224731445

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5975677371025085
    2. '   ' → logprob: -0.8475677371025085
    3. ' return' → logprob: -4.472567558288574
    4. 'return' → logprob: -4.972567558288574
    5. '    
' → logprob: -7.347567558288574
    6. '  
' → logprob: -7.347567558288574
    7. '<|end|>' → logprob: -7.347567558288574
    8. '	return' → logprob: -7.722567558288574
    9. ',' → logprob: -9.097567558288574
    10. '\n' → logprob: -9.222567558288574

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3263285458087921
    2. '
' → logprob: -1.7013285160064697
    3. ' return' → logprob: -2.5763285160064697
    4. 'return' → logprob: -4.826328754425049
    5. '  
' → logprob: -6.201328754425049
    6. '\n' → logprob: -6.326328754425049
    7. '	return' → logprob: -6.451328754425049
    8. '    
' → logprob: -6.451328754425049
    9. ' ' → logprob: -6.576328754425049
    10. ' 
' → logprob: -6.576328754425049

Token 143: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.595145583152771
    2. ' return' → logprob: -0.845145583152771
    3. '   ' → logprob: -4.3451457023620605
    4. '
' → logprob: -5.3451457023620605
    5. ' ' → logprob: -7.3451457023620605
    6. '	return' → logprob: -7.5951457023620605
    7. '  ' → logprob: -10.720145225524902
    8. '    
' → logprob: -10.845145225524902
    9. ' 
' → logprob: -11.095145225524902
    10. 'eturn' → logprob: -11.345145225524902

Token 144: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.31326204538345337
    2. ' True' → logprob: -1.3132619857788086
    3. '   ' → logprob: -15.188261985778809
    4. '(True' → logprob: -17.813262939453125
    5. ' ' → logprob: -18.063262939453125
    6. '=True' → logprob: -19.938262939453125
    7. 'False' → logprob: -20.938262939453125
    8. 'true' → logprob: -21.063262939453125
    9. '    ' → logprob: -21.063262939453125
    10. ' ' → logprob: -21.063262939453125

Token 145: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43135952949523926
    2. '<|end|>' → logprob: -1.3063595294952393
    3. 'def' → logprob: -2.6813595294952393
    4. '  
' → logprob: -5.80635929107666
    5. '

' → logprob: -6.30635929107666
    6. '<|end|>' → logprob: -6.68135929107666
    7. '\n' → logprob: -6.80635929107666
    8. ' 
' → logprob: -6.93135929107666
    9. '#' → logprob: -7.43135929107666
    10. '    
' → logprob: -7.68135929107666

Token 146: 'finished' (ID: 24477)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46418800950050354
    2. 'while' → logprob: -1.0891879796981812
    3. 'for' → logprob: -4.089188098907471
    4. ' while' → logprob: -4.589188098907471
    5. 'queue' → logprob: -5.839188098907471
    6. 'work' → logprob: -5.964188098907471
    7. ' for' → logprob: -7.339188098907471
    8. 'available' → logprob: -8.214187622070312
    9. ' 
' → logprob: -8.464187622070312
    10. '  
' → logprob: -8.839187622070312

Token 147: '_count' (ID: 7536)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6087833046913147
    2. '[:]' → logprob: -2.23378324508667
    3. '<|end|>' → logprob: -2.35878324508667
    4. ')' → logprob: -2.35878324508667
    5. ',' → logprob: -2.98378324508667
    6. ' =' → logprob: -3.60878324508667
    7. '.count' → logprob: -3.73378324508667
    8. '(process' → logprob: -4.48378324508667
    9. '.' → logprob: -4.73378324508667
    10. '=' → logprob: -4.85878324508667

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5074595808982849
    2. ' +=' → logprob: -1.0074596405029297
    3. '=' → logprob: -4.13245964050293
    4. ' ' → logprob: -5.38245964050293
    5. '+=' → logprob: -5.38245964050293
    6. ' +' → logprob: -6.13245964050293
    7. '<|end|>' → logprob: -6.25745964050293
    8. '+' → logprob: -6.38245964050293
    9. ')' → logprob: -7.00745964050293
    10. '  ' → logprob: -8.00745964050293

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.876171112060547
    4. 'p' → logprob: -18.313671112060547
    5. ' ' → logprob: -19.063671112060547
    6. '000' → logprob: -19.376171112060547
    7. '=' → logprob: -19.376171112060547
    8. 'sum' → logprob: -19.376171112060547
    9. '  ' → logprob: -19.751171112060547
    10. '۰' → logprob: -19.876171112060547

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'p' → logprob: -17.500019073486328
    4. 'sum' → logprob: -18.375019073486328
    5. '000' → logprob: -18.750019073486328
    6. '   ' → logprob: -19.062519073486328
    7. '۰' → logprob: -19.500019073486328
    8. 'int' → logprob: -19.812519073486328
    9. '```' → logprob: -20.000019073486328
    10. '=' → logprob: -20.062519073486328

Token 151: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08558082580566406
    2. 'for' → logprob: -3.710580825805664
    3. 'log' → logprob: -3.710580825805664
    4. '
' → logprob: -4.085580825805664
    5. ' while' → logprob: -4.460580825805664
    6. 'queue' → logprob: -6.335580825805664
    7. 'available' → logprob: -7.210580825805664
    8. 'current' → logprob: -7.835580825805664
    9. ' for' → logprob: -8.335580825805664
    10. 'def' → logprob: -8.460580825805664

Token 152: 'dead' (ID: 69891)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.014224034734070301
    2. 'for' → logprob: -4.514224052429199
    3. ' while' → logprob: -6.389224052429199
    4. '
' → logprob: -6.764224052429199
    5. 'available' → logprob: -9.2642240524292
    6. 'log' → logprob: -9.6392240524292
    7. '\n' → logprob: -9.7642240524292
    8. 'queue' → logprob: -10.1392240524292
    9. ' for' → logprob: -11.0142240524292
    10. 'i' → logprob: -11.8892240524292

Token 153: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.013235993683338165
    2. 'locked' → logprob: -4.513236045837402
    3. 'locks' → logprob: -6.513236045837402
    4. ' =' → logprob: -8.888236045837402
    5. '=' → logprob: -9.138236045837402
    6. '_' → logprob: -9.138236045837402
    7. '_lock' → logprob: -9.138236045837402
    8. '   ' → logprob: -9.263236045837402
    9. ' ' → logprob: -10.138236045837402
    10. 'l' → logprob: -10.888236045837402

Token 154: '_un' (ID: 11119)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10037261992692947
    2. '_detect' → logprob: -3.350372552871704
    3. '_' → logprob: -3.600372552871704
    4. '=' → logprob: -4.225372791290283
    5. '_count' → logprob: -4.850372791290283
    6. '_free' → logprob: -5.850372791290283
    7. '_oc' → logprob: -5.850372791290283
    8. '_found' → logprob: -6.725372791290283
    9. 's' → logprob: -6.850372791290283
    10. ' ' → logprob: -7.350372791290283

Token 155: 'avoidable' (ID: 154916)
  Prédit: 'resolved'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'resolved' → logprob: -0.12039484828710556
    2. 'safe' → logprob: -3.4953949451446533
    3. 'finished' → logprob: -3.6203949451446533
    4. 'det' → logprob: -4.245394706726074
    5. 'free' → logprob: -4.370394706726074
    6. 'der' → logprob: -4.870394706726074
    7. 'found' → logprob: -5.495394706726074
    8. 't' → logprob: -5.620394706726074
    9. 'locked' → logprob: -5.995394706726074
    10. 're' → logprob: -6.120394706726074

Token 156: '_time' (ID: 6425)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08902997523546219
    2. '=' → logprob: -2.4640300273895264
    3. '_' → logprob: -9.714030265808105
    4. ' ' → logprob: -10.714030265808105
    5. ',' → logprob: -12.589030265808105
    6. '=True' → logprob: -14.089030265808105
    7. ':' → logprob: -14.464030265808105
    8. '=False' → logprob: -14.464030265808105
    9. '_space' → logprob: -14.589030265808105
    10. '  ' → logprob: -15.089030265808105

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134925961494446
    2. '=' → logprob: -1.3134925365447998
    3. 'out' → logprob: -10.063492774963379
    4. 's' → logprob: -10.063492774963379
    5. '_' → logprob: -10.188492774963379
    6. ' ' → logprob: -10.438492774963379
    7. ',' → logprob: -10.563492774963379
    8. '_out' → logprob: -12.188492774963379
    9. '=None' → logprob: -12.188492774963379
    10. ':' → logprob: -12.438492774963379

Token 158: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15034858882427216
    2. 't' → logprob: -2.900348663330078
    3. 'None' → logprob: -2.900348663330078
    4. ' -' → logprob: -4.150348663330078
    5. 'float' → logprob: -5.150348663330078
    6. '-t' → logprob: -6.025348663330078
    7. '0' → logprob: -6.150348663330078
    8. ' None' → logprob: -6.275348663330078
    9. ' t' → logprob: -7.025348663330078
    10. ' float' → logprob: -8.150348663330078

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.85104202805087e-05
    2. ' ' → logprob: -9.625078201293945
    3. 't' → logprob: -12.000078201293945
    4. '-' → logprob: -13.125078201293945
    5. '2' → logprob: -13.625078201293945
    6. ' t' → logprob: -13.750078201293945
    7. ' -' → logprob: -14.500078201293945
    8. '   ' → logprob: -14.687578201293945
    9. '  ' → logprob: -15.625078201293945
    10. '100' → logprob: -16.000078201293945

Token 160: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05788075178861618
    2. 'log' → logprob: -4.057880878448486
    3. '
' → logprob: -4.182880878448486
    4. 'while' → logprob: -4.557880878448486
    5. ' for' → logprob: -4.807880878448486
    6. 'current' → logprob: -5.932880878448486
    7. 'time' → logprob: -6.307880878448486
    8. 'i' → logprob: -9.557880401611328
    9. ' while' → logprob: -9.682880401611328
    10. 'logs' → logprob: -9.807880401611328

Token 161: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012920241570100188
    2. 'log' → logprob: -7.2512922286987305
    3. 'while' → logprob: -7.8762922286987305
    4. 'import' → logprob: -9.00129222869873
    5. ' for' → logprob: -10.62629222869873
    6. 'logs' → logprob: -10.62629222869873
    7. '
' → logprob: -11.50129222869873
    8. 'current' → logprob: -11.62629222869873
    9. 'time' → logprob: -12.75129222869873
    10. 'from' → logprob: -12.87629222869873

Token 162: ' time' (ID: 1058)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.8076042532920837
    2. 't' → logprob: -1.8076043128967285
    3. ' _' → logprob: -1.9326043128967285
    4. '_' → logprob: -2.0576043128967285
    5. ' i' → logprob: -2.6826043128967285
    6. 'i' → logprob: -3.3076043128967285
    7. ' time' → logprob: -5.8076043128967285
    8. 'time' → logprob: -5.9326043128967285
    9. '_i' → logprob: -6.1826043128967285
    10. '_t' → logprob: -6.9326043128967285

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017185453325510025
    2. 'in' → logprob: -4.767185688018799
    3. ',' → logprob: -5.267185688018799
    4. ' ' → logprob: -5.892185688018799
    5. ' ,' → logprob: -7.767185688018799
    6. '_' → logprob: -9.01718521118164
    7. ' _' → logprob: -10.14218521118164
    8. '_in' → logprob: -12.64218521118164
    9. ' i' → logprob: -12.76718521118164
    10. '  ' → logprob: -12.89218521118164

Token 164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004622611217200756
    2. ' range' → logprob: -5.379622459411621
    3. 't' → logprob: -13.504622459411621
    4. '(range' → logprob: -15.129622459411621
    5. 'time' → logprob: -15.629622459411621
    6. 'r' → logprob: -16.254623413085938
    7. 'p' → logprob: -16.379623413085938
    8. '	range' → logprob: -16.504623413085938
    9. '[' → logprob: -16.754623413085938
    10. ' ' → logprob: -17.004623413085938

Token 165: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07897483557462692
    2. '(t' → logprob: -2.578974723815918
    3. '(p' → logprob: -10.328974723815918
    4. '1' → logprob: -10.453974723815918
    5. ' (' → logprob: -11.078974723815918
    6. 't' → logprob: -13.203974723815918
    7. '(T' → logprob: -13.578974723815918
    8. '(
' → logprob: -13.703974723815918
    9. '(r' → logprob: -13.828974723815918
    10. '((' → logprob: -14.703974723815918

Token 166: '1' (ID: 16)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006995019502937794
    2. '1' → logprob: -5.00699520111084
    3. ' t' → logprob: -8.25699520111084
    4. 'p' → logprob: -11.75699520111084
    5. '	t' → logprob: -12.75699520111084
    6. '(t' → logprob: -13.00699520111084
    7. '0' → logprob: -13.38199520111084
    8. ')t' → logprob: -13.63199520111084
    9. ' ' → logprob: -13.75699520111084
    10. '
' → logprob: -13.88199520111084

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006191372871398926
    2. ',p' → logprob: -5.881191253662109
    3. ' ,' → logprob: -5.881191253662109
    4. ',t' → logprob: -7.506191253662109
    5. ',len' → logprob: -10.88119125366211
    6. ',n' → logprob: -12.00619125366211
    7. ',m' → logprob: -13.13119125366211
    8. ',T' → logprob: -13.25619125366211
    9. ',q' → logprob: -13.75619125366211
    10. ',time' → logprob: -13.88119125366211

Token 168: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.007665540557354689
    2. ' t' → logprob: -4.882665634155273
    3. 'len' → logprob: -10.757665634155273
    4. 'p' → logprob: -10.882665634155273
    5. '100' → logprob: -12.007665634155273
    6. ' ' → logprob: -12.632665634155273
    7. '	t' → logprob: -13.007665634155273
    8. '101' → logprob: -13.507665634155273
    9. ' len' → logprob: -13.632665634155273
    10. ')t' → logprob: -14.382665634155273

Token 169: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01647265814244747
    2. ' +' → logprob: -4.141472816467285
    3. '):
' → logprob: -8.016472816467285
    4. '):' → logprob: -9.141472816467285
    5. '+
' → logprob: -15.266472816467285
    6. ' ):
' → logprob: -15.766472816467285
    7. ' ):' → logprob: -15.891472816467285
    8. '1' → logprob: -16.14147186279297
    9. '):
' → logprob: -16.26647186279297
    10. '   ' → logprob: -16.39147186279297

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.500027656555176
    4. '
' → logprob: -16.000028610229492
    5. '):
' → logprob: -17.125028610229492
    6. '```' → logprob: -18.000028610229492
    7. '

' → logprob: -18.125028610229492
    8. ')' → logprob: -18.375028610229492
    9. '  ' → logprob: -19.250028610229492
    10. ',' → logprob: -19.562528610229492

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10072223097085953
    2. '):
' → logprob: -2.350722312927246
    3. ':' → logprob: -7.725722312927246
    4. ' ):' → logprob: -10.100722312927246
    5. ')' → logprob: -11.225722312927246
    6. ' ):
' → logprob: -11.350722312927246
    7. '):
' → logprob: -12.600722312927246
    8. ':
' → logprob: -12.850722312927246
    9. ' :' → logprob: -14.600722312927246
    10. '   ' → logprob: -14.600722312927246

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023391760885715485
    2. ' request' → logprob: -4.6483917236328125
    3. 'request' → logprob: -5.1483917236328125
    4. ' inputs' → logprob: -6.0233917236328125
    5. 'inputs' → logprob: -6.5233917236328125
    6. ' line' → logprob: -6.8983917236328125
    7. ' requests' → logprob: -7.2733917236328125
    8. 'tokens' → logprob: -8.023391723632812
    9. ' input' → logprob: -8.148391723632812
    10. 'requests' → logprob: -8.273391723632812

Token 173: ' proc' (ID: 14550)
  Prédit: 'request'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'request' → logprob: -0.23198245465755463
    2. 'line' → logprob: -3.231982469558716
    3. 'req' → logprob: -3.231982469558716
    4. 'inputs' → logprob: -3.606982469558716
    5. 'requested' → logprob: -3.731982469558716
    6. 'action' → logprob: -3.731982469558716
    7. 'process' → logprob: -4.481982231140137
    8. 'proc' (adapté à ' proc') → logprob: -5.106982231140137
    9. 'operation' → logprob: -5.231982231140137
    10. 'requests' → logprob: -5.606982231140137

Token 174: ',' (ID: 11)
  Prédit: 'ess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ess' → logprob: -0.045187853276729584
    2. ',' → logprob: -3.1701879501342773
    3. '_id' → logprob: -7.045187950134277
    4. ' =' → logprob: -7.170187950134277
    5. 'id' → logprob: -9.295187950134277
    6. '=' → logprob: -9.670187950134277
    7. '_,' → logprob: -9.670187950134277
    8. 's' → logprob: -9.795187950134277
    9. 'cess' → logprob: -9.920187950134277
    10. 'essor' → logprob: -9.920187950134277

Token 175: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2943216860294342
    2. ' res' → logprob: -1.5443216562271118
    3. 'req' → logprob: -4.294321537017822
    4. ' resource' → logprob: -4.419321537017822
    5. ' req' → logprob: -5.044321537017822
    6. 'resource' → logprob: -5.169321537017822
    7. ' op' → logprob: -7.669321537017822
    8. 'resources' → logprob: -7.919321537017822
    9. 'action' → logprob: -8.04432201385498
    10. 'op' → logprob: -8.04432201385498

Token 176: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021113590337336063
    2. ' ,' → logprob: -6.877111434936523
    3. '_idx' → logprob: -8.127111434936523
    4. '_id' → logprob: -8.877111434936523
    5. 'ource' → logprob: -8.877111434936523
    6. '=' → logprob: -9.752111434936523
    7. '_type' → logprob: -9.752111434936523
    8. '_index' → logprob: -9.752111434936523
    9. '_,' → logprob: -9.877111434936523
    10. 'ources' → logprob: -9.877111434936523

Token 177: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25194281339645386
    2. 'map' → logprob: -1.5019428730010986
    3. '	map' → logprob: -12.12694263458252
    4. ' ' → logprob: -12.50194263458252
    5. '   ' → logprob: -12.62694263458252
    6. '  ' → logprob: -14.25194263458252
    7. 'list' → logprob: -15.87694263458252
    8. ' list' → logprob: -16.126943588256836
    9. '(map' → logprob: -16.126943588256836
    10. '[' → logprob: -16.126943588256836

Token 178: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002669384120963514
    2. '(' → logprob: -8.375267028808594
    3. 'int' → logprob: -10.375267028808594
    4. '=int' → logprob: -13.125267028808594
    5. '[int' → logprob: -13.750267028808594
    6. '<int' → logprob: -14.375267028808594
    7. '(lambda' → logprob: -14.625267028808594
    8. ',int' → logprob: -15.125267028808594
    9. ' (' → logprob: -15.125267028808594
    10. '(
' → logprob: -15.500267028808594

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1723194122314453
    2. '(),' → logprob: -2.0473194122314453
    3. '().' → logprob: -4.547319412231445
    4. '()' → logprob: -4.547319412231445
    5. ',input' → logprob: -5.172319412231445
    6. ')' → logprob: -6.922319412231445
    7. ' ,' → logprob: -7.672319412231445
    8. '   ' → logprob: -8.172319412231445
    9. '(' → logprob: -8.172319412231445
    10. '(input' → logprob: -9.547319412231445

Token 180: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01814994215965271
    2. ' input' → logprob: -4.0181498527526855
    3. '(input' → logprob: -17.393150329589844
    4. ' ' → logprob: -18.268150329589844
    5. '	input' → logprob: -19.143150329589844
    6. '_input' → logprob: -19.518150329589844
    7. '[input' → logprob: -19.518150329589844
    8. ',input' → logprob: -19.518150329589844
    9. '   ' → logprob: -19.768150329589844
    10. '=input' → logprob: -20.018150329589844

Token 181: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.45848218582978e-06
    2. '()' → logprob: -13.00000286102295
    3. ' ().' → logprob: -17.125001907348633
    4. '()
' → logprob: -18.000001907348633
    5. '(' → logprob: -18.750001907348633
    6. '.' → logprob: -20.250001907348633
    7. ')' → logprob: -20.375001907348633
    8. '()[' → logprob: -20.500001907348633
    9. '())' → logprob: -20.750001907348633
    10. '().
' → logprob: -20.875001907348633

Token 182: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.127333340875339e-06
    2. ' split' → logprob: -12.750003814697266
    3. 'strip' → logprob: -14.000003814697266
    4. '().' → logprob: -15.875003814697266
    5. '(split' → logprob: -16.750003814697266
    6. '.split' → logprob: -17.125003814697266
    7. ')' → logprob: -17.500003814697266
    8. '   ' → logprob: -18.125003814697266
    9. ' ' → logprob: -18.250003814697266
    10. '
' → logprob: -18.750003814697266

Token 183: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2084483653306961
    2. ')' → logprob: -1.9584484100341797
    3. '()' → logprob: -3.0834484100341797
    4. '())
' → logprob: -6.83344841003418
    5. '(' → logprob: -9.33344841003418
    6. ')
' → logprob: -9.70844841003418
    7. '()
' → logprob: -10.33344841003418
    8. '())
' → logprob: -12.08344841003418
    9. ' )' → logprob: -12.45844841003418
    10. ' ())' → logprob: -13.95844841003418

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06715986132621765
    2. '    
' → logprob: -3.19215989112854
    3. ' if' → logprob: -4.692159652709961
    4. ' 
' → logprob: -5.692159652709961
    5. '<|end|>' → logprob: -5.942159652709961
    6. '    ' → logprob: -6.192159652709961
    7. '   
' → logprob: -6.442159652709961
    8. '
' → logprob: -6.692159652709961
    9. '  
' → logprob: -6.942159652709961
    10. '     
' → logprob: -6.942159652709961

Token 185: ' proc' (ID: 14550)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6740614175796509
    2. ' if' → logprob: -0.7990614175796509
    3. 'if' → logprob: -3.2990612983703613
    4. '    ' → logprob: -6.799061298370361
    5. '	if' → logprob: -6.799061298370361
    6. ' available' → logprob: -7.924061298370361
    7. '    
' → logprob: -8.42406177520752
    8. 'available' → logprob: -8.54906177520752
    9. '
' → logprob: -9.29906177520752
    10. 'allocated' → logprob: -9.54906177520752

Token 186: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.07964976131916046
    2. '-' → logprob: -2.7046496868133545
    3. '-=' → logprob: -4.829649925231934
    4. ' -' → logprob: -6.704649925231934
    5. ']' → logprob: -9.204649925231934
    6. '   ' → logprob: -9.579649925231934
    7. ' ' → logprob: -9.829649925231934
    8. ',' → logprob: -10.329649925231934
    9. ']-' → logprob: -10.454649925231934
    10. '0' → logprob: -10.454649925231934

Token 187: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.000036239624023
    4. '```' → logprob: -18.625036239624023
    5. '<|end|>' → logprob: -18.750036239624023
    6. '
' → logprob: -19.375036239624023
    7. '=' → logprob: -19.500036239624023
    8. ')' → logprob: -19.625036239624023
    9. '0' → logprob: -20.250036239624023
    10. '[' → logprob: -20.312536239624023

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -19.5625
    5. '0' → logprob: -20.75
    6. '-' → logprob: -20.9375
    7. '<|end|>' → logprob: -21.0625
    8. '
' → logprob: -21.0625
    9. '۱' → logprob: -21.125
    10. '१' → logprob: -21.1875

Token 189: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5041137337684631
    2. '
' → logprob: -1.0041136741638184
    3. '    
' → logprob: -4.004113674163818
    4. '  
' → logprob: -5.504113674163818
    5. ' 
' → logprob: -6.254113674163818
    6. 'available' → logprob: -6.504113674163818
    7. '   
' → logprob: -6.629113674163818
    8. ' available' → logprob: -6.754113674163818
    9. 'res' → logprob: -7.629113674163818
    10. ' res' → logprob: -7.754113674163818

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014342136681079865
    2. 'available' → logprob: -5.264342308044434
    3. '
' → logprob: -5.764342308044434
    4. ' if' → logprob: -5.889342308044434
    5. '    
' → logprob: -6.889342308044434
    6. 'if' → logprob: -6.889342308044434
    7. ' available' → logprob: -7.639342308044434
    8. 'allocated' → logprob: -8.639342308044434
    9. 'res' → logprob: -9.389342308044434
    10. '  
' → logprob: -9.514342308044434

Token 191: ' res' (ID: 694)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.20767074823379517
    2. 'if' → logprob: -1.9576706886291504
    3. 'allocated' → logprob: -3.4576706886291504
    4. 'res' (adapté à ' res') → logprob: -4.45767068862915
    5. ' available' → logprob: -6.58267068862915
    6. ' if' → logprob: -7.20767068862915
    7. '#' → logprob: -8.082671165466309
    8. ' res' → logprob: -9.082671165466309
    9. 'avail' → logprob: -9.207671165466309
    10. '   ' → logprob: -9.207671165466309

Token 192: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.024148428812623024
    2. '-=' → logprob: -3.899148464202881
    3. '-' → logprob: -5.649148464202881
    4. ' -' → logprob: -10.649147987365723
    5. ' ' → logprob: -11.274147987365723
    6. '   ' → logprob: -11.649147987365723
    7. ' =' → logprob: -12.274147987365723
    8. '=' → logprob: -12.274147987365723
    9. '_' → logprob: -12.524147987365723
    10. ')' → logprob: -12.524147987365723

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016063073417171836
    2. ' ' → logprob: -8.750160217285156
    3. '0' → logprob: -13.375160217285156
    4. '   ' → logprob: -15.750160217285156
    5. '```' → logprob: -15.750160217285156
    6. '<|end|>' → logprob: -16.000160217285156
    7. '=' → logprob: -17.687660217285156
    8. '<|end|>' → logprob: -18.312660217285156
    9. '-' → logprob: -18.500160217285156
    10. ',' → logprob: -18.625160217285156

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '0' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.500004768371582
    4. '   ' → logprob: -18.875003814697266
    5. '```' → logprob: -19.500003814697266
    6. '<|end|>' → logprob: -20.000003814697266
    7. '
' → logprob: -20.625003814697266
    8. 'int' → logprob: -20.625003814697266
    9. ')' → logprob: -21.812503814697266
    10. '=' → logprob: -22.000003814697266

Token 195: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029653405770659447
    2. '
' → logprob: -4.029653549194336
    3. 'if' → logprob: -5.279653549194336
    4. 'available' → logprob: -5.904653549194336
    5. ' if' → logprob: -6.279653549194336
    6. '    
' → logprob: -6.529653549194336
    7. ' available' → logprob: -9.029653549194336
    8. '  
' → logprob: -10.029653549194336
    9. ' 
' → logprob: -10.529653549194336
    10. 'allocated' → logprob: -10.654653549194336

Token 196: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3249240815639496
    2. '   ' → logprob: -1.449924111366272
    3. 'available' → logprob: -3.6999239921569824
    4. 'allocated' → logprob: -4.074923992156982
    5. ' if' → logprob: -7.199923992156982
    6. 'remaining' → logprob: -8.94992446899414
    7. '```' → logprob: -9.07492446899414
    8. '
' → logprob: -10.57492446899414
    9. ' allocated' → logprob: -10.69992446899414
    10. '	if' → logprob: -11.44992446899414

Token 197: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40114861726760864
    2. 'allocated' → logprob: -1.2761485576629639
    3. 'available' → logprob: -3.026148557662964
    4. '#' (adapté à ' #') → logprob: -6.276148796081543
    5. 'remaining' → logprob: -7.901148796081543
    6. '   ' → logprob: -8.151148796081543
    7. ' if' → logprob: -8.901148796081543
    8. ' allocated' → logprob: -9.651148796081543
    9. 'alloc' → logprob: -11.026148796081543
    10. 'assigned' → logprob: -11.276148796081543

Token 198: ' Process' (ID: 12482)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.140996515750885
    2. 'allocated' → logprob: -2.5159964561462402
    3. 'available' → logprob: -3.3909964561462402
    4. ' if' → logprob: -4.76599645614624
    5. '#' → logprob: -5.39099645614624
    6. ' allocated' → logprob: -6.39099645614624
    7. '   ' → logprob: -6.51599645614624
    8. ' available' → logprob: -8.515996932983398
    9. 'remaining' → logprob: -8.890996932983398
    10. ' #' → logprob: -9.140996932983398

Token 199: ' proc' (ID: 14550)
  Prédit: 'allocated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allocated' → logprob: -0.2561938166618347
    2. 'ed' → logprob: -2.6311938762664795
    3. 'ing' → logprob: -3.2561938762664795
    4. '   ' → logprob: -3.3811938762664795
    5. 'available' → logprob: -3.8811938762664795
    6. 'es' → logprob: -4.1311936378479
    7. ' allocated' → logprob: -4.2561936378479
    8. '#' → logprob: -5.0061936378479
    9. 'if' → logprob: -5.2561936378479
    10. 'remaining' → logprob: -6.2561936378479

Token 200: ' acqu' (ID: 22161)
  Prédit: 'allocated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allocated' → logprob: -0.164016991853714
    2. 'ac' → logprob: -2.7890169620513916
    3. 'alloc' → logprob: -3.9140169620513916
    4. ' allocated' → logprob: -3.9140169620513916
    5. ' acqu' → logprob: -4.539017200469971
    6. '#' → logprob: -5.039017200469971
    7. '   ' → logprob: -5.664017200469971
    8. ' acquired' → logprob: -5.914017200469971
    9. 'has' → logprob: -6.039017200469971
    10. 'for' → logprob: -6.289017200469971

Token 201: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.0018484358442947268
    2. 'ired' → logprob: -6.376848220825195
    3. 'ire' → logprob: -9.001848220825195
    4. 'res' → logprob: -11.751848220825195
    5. '[' → logprob: -13.251848220825195
    6. '   ' → logprob: -13.251848220825195
    7. '```' → logprob: -13.376848220825195
    8. '#' → logprob: -13.501848220825195
    9. 'quired' → logprob: -13.501848220825195
    10. '
' → logprob: -13.626848220825195

Token 202: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -1.0197210311889648
    2. 'res' → logprob: -1.7697210311889648
    3. 'a' → logprob: -2.269721031188965
    4. ' a' → logprob: -2.269721031188965
    5. 'available' → logprob: -2.644721031188965
    6. ' res' → logprob: -2.894721031188965
    7. '1' → logprob: -3.394721031188965
    8. 'one' → logprob: -3.769721031188965
    9. ' ' → logprob: -3.769721031188965
    10. ' available' → logprob: -4.019721031188965

Token 203: ' instance' (ID: 4934)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.6089187860488892
    2. ' unit' → logprob: -1.1089187860488892
    3. 'instance' → logprob: -2.2339186668395996
    4. ' instance' → logprob: -4.6089186668396
    5. 'resource' → logprob: -5.3589186668396
    6. ' of' → logprob: -6.6089186668396
    7. ' resource' → logprob: -6.7339186668396
    8. '   ' → logprob: -7.1089186668396
    9. 'available' → logprob: -7.8589186668396
    10. 'of' → logprob: -8.358919143676758

Token 204: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03774983435869217
    2. ' of' → logprob: -3.787749767303467
    3. 'available' → logprob: -4.912749767303467
    4. 'of' → logprob: -5.287749767303467
    5. 'allocated' → logprob: -6.912749767303467
    6. '[' → logprob: -7.537749767303467
    7. ' available' → logprob: -8.287750244140625
    8. ' allocated' → logprob: -9.662750244140625
    9. '       ' → logprob: -10.162750244140625
    10. '
' → logprob: -10.412750244140625

Token 205: ' resource' (ID: 8305)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.40243077278137207
    2. 'res' → logprob: -1.152430772781372
    3. ' resource' → logprob: -4.527430534362793
    4. 'resource' → logprob: -5.402430534362793
    5. ' available' → logprob: -10.527430534362793
    6. 'available' → logprob: -10.652430534362793
    7. ' the' → logprob: -10.652430534362793
    8. 'resources' → logprob: -11.027430534362793
    9. ' resources' → logprob: -11.152430534362793
    10. 'the' → logprob: -11.652430534362793

Token 206: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.36228105425834656
    2. ' res' → logprob: -1.362281084060669
    3. '[' → logprob: -3.237281084060669
    4. 'available' → logprob: -5.48728084564209
    5. '   ' → logprob: -6.11228084564209
    6. ' available' → logprob: -6.73728084564209
    7. ' [' → logprob: -8.11228084564209
    8. '
' → logprob: -8.23728084564209
    9. 'allocated' → logprob: -8.98728084564209
    10. '	res' → logprob: -9.86228084564209

Token 207: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035516046918928623
    2. '
' → logprob: -6.503551483154297
    3. '    
' → logprob: -6.878551483154297
    4. 'allocated' → logprob: -7.878551483154297
    5. 'available' → logprob: -8.128551483154297
    6. ' if' → logprob: -8.878551483154297
    7. 'if' → logprob: -9.378551483154297
    8. ' allocated' → logprob: -9.753551483154297
    9. ' available' → logprob: -11.128551483154297
    10. '  
' → logprob: -11.503551483154297

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002441646996885538
    2. 'available' → logprob: -6.877441883087158
    3. ' if' → logprob: -7.752441883087158
    4. 'allocated' → logprob: -7.877441883087158
    5. 'if' → logprob: -8.00244140625
    6. '
' → logprob: -9.25244140625
    7. '    
' → logprob: -9.75244140625
    8. ' allocated' → logprob: -9.87744140625
    9. ' available' → logprob: -10.00244140625
    10. '    ' → logprob: -13.00244140625

Token 209: ' allocated' (ID: 42041)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.35755786299705505
    2. 'allocated' (adapté à ' allocated') → logprob: -1.3575578927993774
    3. 'if' → logprob: -3.357557773590088
    4. '   ' → logprob: -4.857557773590088
    5. ' allocated' → logprob: -8.232558250427246
    6. ' available' → logprob: -8.357558250427246
    7. ' if' → logprob: -9.107558250427246
    8. 'remaining' → logprob: -10.357558250427246
    9. '```' → logprob: -10.732558250427246
    10. '       ' → logprob: -10.982558250427246

Token 210: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.200166469876422e-06
    2. '][' → logprob: -12.375004768371582
    3. ' [' → logprob: -14.500004768371582
    4. '   ' → logprob: -15.750004768371582
    5. 'proc' → logprob: -16.2500057220459
    6. '}[' → logprob: -17.2500057220459
    7. '```' → logprob: -17.2500057220459
    8. '[prop' → logprob: -18.1250057220459
    9. ')[' → logprob: -18.1250057220459
    10. '(proc' → logprob: -18.3750057220459

Token 211: 'proc' (ID: 35874)
  Prédit: 'proc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' → logprob: -1.5570885807392187e-05
    2. '[' → logprob: -11.125015258789062
    3. ' proc' → logprob: -14.375015258789062
    4. '(proc' → logprob: -15.750015258789062
    5. 'process' → logprob: -16.000015258789062
    6. '```' → logprob: -18.125015258789062
    7. '   ' → logprob: -19.125015258789062
    8. '.proc' → logprob: -19.250015258789062
    9. '][' → logprob: -19.500015258789062
    10. 'prod' → logprob: -19.625015258789062

Token 212: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012332071783021092
    2. '[' → logprob: -6.751233100891113
    3. ' ][' → logprob: -9.876233100891113
    4. ']' → logprob: -11.501233100891113
    5. '   ' → logprob: -14.251233100891113
    6. ''][' → logprob: -15.626233100891113
    7. '"][' → logprob: -15.751233100891113
    8. 'res' → logprob: -16.62623405456543
    9. '```' → logprob: -16.62623405456543
    10. ' ' → logprob: -17.00123405456543

Token 213: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.836499985889532e-05
    2. ' res' → logprob: -9.7500581741333
    3. '
' → logprob: -17.125059127807617
    4. '	res' → logprob: -18.750059127807617
    5. 'ress' → logprob: -19.250059127807617
    6. '   ' → logprob: -19.500059127807617
    7. 'r' → logprob: -19.500059127807617
    8. '(res' → logprob: -19.875059127807617
    9. '```' → logprob: -20.625059127807617
    10. ']' → logprob: -21.125059127807617

Token 214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026336227892898023
    2. ']+=' → logprob: -8.250263214111328
    3. ' ]' → logprob: -13.250263214111328
    4. ']+' → logprob: -16.125263214111328
    5. '`]' → logprob: -16.500263214111328
    6. '']' → logprob: -16.625263214111328
    7. '   ' → logprob: -17.625263214111328
    8. '"]' → logprob: -17.875263214111328
    9. ']
' → logprob: -18.125263214111328
    10. '[' → logprob: -18.125263214111328

Token 215: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012319267727434635
    2. ']+=' → logprob: -5.012319087982178
    3. ' +=' → logprob: -5.262319087982178
    4. ']' → logprob: -7.887319087982178
    5. '[' → logprob: -10.887319564819336
    6. '+' → logprob: -11.512319564819336
    7. '+]' → logprob: -15.887319564819336
    8. ']+' → logprob: -16.012319564819336
    9. '```' → logprob: -16.262319564819336
    10. '=' → logprob: -16.262319564819336

Token 216: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -17.50170135498047
    4. '```' → logprob: -19.00170135498047
    5. ' ' → logprob: -19.50170135498047
    6. '  ' → logprob: -20.37670135498047
    7. '
' → logprob: -20.62670135498047
    8. '0' → logprob: -21.06420135498047
    9. '`' → logprob: -21.12670135498047
    10. '１' → logprob: -21.62670135498047

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -19.875001907348633
    4. '   ' → logprob: -20.125001907348633
    5. '
' → logprob: -20.250001907348633
    6. '`' → logprob: -23.000001907348633
    7. '１' → logprob: -23.250001907348633
    8. '

' → logprob: -23.312501907348633
    9. '  ' → logprob: -23.437501907348633
    10. '0' → logprob: -23.625001907348633

Token 218: '
' (ID: 198)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.566914439201355
    2. '   ' → logprob: -1.191914439201355
    3. ' available' → logprob: -2.0669145584106445
    4. '
' → logprob: -6.1919145584106445
    5. ',' → logprob: -9.316914558410645
    6. ' if' → logprob: -9.441914558410645
    7. '    
' → logprob: -9.691914558410645
    8. '    ' → logprob: -10.066914558410645
    9. '.available' → logprob: -10.191914558410645
    10. '  ' → logprob: -10.691914558410645

Token 219: '   ' (ID: 271)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.04601069167256355
    2. '   ' → logprob: -3.796010732650757
    3. ' available' → logprob: -3.796010732650757
    4. '
' → logprob: -11.546010971069336
    5. 'if' → logprob: -11.921010971069336
    6. '```' → logprob: -11.921010971069336
    7. ' ' → logprob: -12.421010971069336
    8. '       ' → logprob: -12.796010971069336
    9. '.available' → logprob: -12.796010971069336
    10. '  ' → logprob: -12.921010971069336

Token 220: ' remaining' (ID: 15448)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.000182921823579818
    2. '   ' → logprob: -9.00018310546875
    3. ' available' → logprob: -9.75018310546875
    4. 'if' → logprob: -14.75018310546875
    5. 'remaining' (adapté à ' remaining') → logprob: -14.87518310546875
    6. 'avail' → logprob: -16.12518310546875
    7. '
' → logprob: -16.62518310546875
    8. '```' → logprob: -16.75018310546875
    9. 'availability' → logprob: -16.87518310546875
    10. ' ' → logprob: -17.12518310546875

Token 221: '_need' (ID: 188284)
  Prédit: '_need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_need' → logprob: -7.107425062713446e-06
    2. 'need' → logprob: -12.625006675720215
    3. '_needed' → logprob: -13.375006675720215
    4. '_' → logprob: -13.500006675720215
    5. '[' → logprob: -14.250006675720215
    6. '```' → logprob: -16.75000762939453
    7. '_have' → logprob: -17.00000762939453
    8. '_use' → logprob: -17.37500762939453
    9. '_ne' → logprob: -17.37500762939453
    10. 'Need' → logprob: -17.87500762939453

Token 222: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.5
    3. '   ' → logprob: -16.0
    4. '][' → logprob: -17.25
    5. 'proc' → logprob: -17.375
    6. '```' → logprob: -17.375
    7. ')[' → logprob: -19.125
    8. 'def' → logprob: -19.25
    9. '[assembly' → logprob: -19.625
    10. '[prop' → logprob: -19.875

Token 223: 'proc' (ID: 35874)
  Prédit: 'proc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' → logprob: -0.10021950304508209
    2. '[' → logprob: -2.350219488143921
    3. '(proc' → logprob: -11.6002197265625
    4. ' proc' → logprob: -13.2252197265625
    5. '][' → logprob: -14.8502197265625
    6. 'process' → logprob: -15.1002197265625
    7. '.proc' → logprob: -15.3502197265625
    8. '```' → logprob: -15.3502197265625
    9. '   ' → logprob: -15.8502197265625
    10. ' [' → logprob: -15.9752197265625

Token 224: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00033939589047804475
    2. '[' → logprob: -8.00033950805664
    3. ' ][' → logprob: -13.00033950805664
    4. ']' → logprob: -13.87533950805664
    5. '"][' → logprob: -15.75033950805664
    6. '   ' → logprob: -15.87533950805664
    7. ')[' → logprob: -16.00033950805664
    8. ''][' → logprob: -16.12533950805664
    9. '```' → logprob: -16.75033950805664
    10. ']][' → logprob: -17.12533950805664

Token 225: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -8.895480277715251e-06
    2. '[' → logprob: -12.250008583068848
    3. '][' → logprob: -13.250008583068848
    4. ' res' → logprob: -13.250008583068848
    5. 'r' → logprob: -15.250008583068848
    6. ']' → logprob: -15.875008583068848
    7. 'j' → logprob: -16.625009536743164
    8. '	res' → logprob: -17.625009536743164
    9. '
' → logprob: -18.000009536743164
    10. '(res' → logprob: -18.500009536743164

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018833613023161888
    2. '-=' → logprob: -5.018833637237549
    3. ']-' → logprob: -5.018833637237549
    4. '-' → logprob: -5.268833637237549
    5. ' -=' → logprob: -8.26883316040039
    6. '[' → logprob: -11.14383316040039
    7. ' ]' → logprob: -12.89383316040039
    8. '>' → logprob: -13.14383316040039
    9. ']+=' → logprob: -13.14383316040039
    10. ')' → logprob: -13.26883316040039

Token 227: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.009323925711214542
    2. '-' → logprob: -5.259324073791504
    3. ' -=' → logprob: -5.509324073791504
    4. '=' → logprob: -10.384324073791504
    5. '[' → logprob: -14.259324073791504
    6. '   ' → logprob: -14.384324073791504
    7. '+=' → logprob: -15.384324073791504
    8. '>' → logprob: -15.884324073791504
    9. ' -' → logprob: -16.259323120117188
    10. '```' → logprob: -16.259323120117188

Token 228: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.37509536743164
    4. '```' → logprob: -18.50009536743164
    5. '0' → logprob: -18.75009536743164
    6. '
' → logprob: -19.56259536743164
    7. ' ' → logprob: -20.25009536743164
    8. '  ' → logprob: -20.68759536743164
    9. '１' → logprob: -21.43759536743164
    10. '`' → logprob: -21.50009536743164

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.500009536743164
    4. '```' → logprob: -18.375009536743164
    5. '
' → logprob: -19.375009536743164
    6. '0' → logprob: -19.625009536743164
    7. '<|end|>' → logprob: -20.750009536743164
    8. '  ' → logprob: -21.375009536743164
    9. '۱' → logprob: -21.625009536743164
    10. '１' → logprob: -21.750009536743164

Token 230: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3566608130931854
    2. 'available' → logprob: -1.2316608428955078
    3. ' available' → logprob: -4.981660842895508
    4. 'if' → logprob: -6.981660842895508
    5. '
' → logprob: -8.481660842895508
    6. ' if' → logprob: -9.356660842895508
    7. '       ' → logprob: -10.606660842895508
    8. '```' → logprob: -11.106660842895508
    9. '  ' → logprob: -11.356660842895508
    10. '    
' → logprob: -11.731660842895508

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6431734561920166
    2. 'available' → logprob: -0.7681734561920166
    3. ' available' → logprob: -4.6431732177734375
    4. '
' → logprob: -7.3931732177734375
    5. 'if' → logprob: -9.393173217773438
    6. '       ' → logprob: -9.893173217773438
    7. '  ' → logprob: -10.518173217773438
    8. '    
' → logprob: -10.643173217773438
    9. '```' → logprob: -10.643173217773438
    10. '    ' → logprob: -11.393173217773438

Token 232: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' (adapté à ' available') → logprob: -0.005548797082155943
    2. '   ' → logprob: -5.38054895401001
    3. ' available' → logprob: -7.00554895401001
    4. 'if' → logprob: -11.380548477172852
    5. '
' → logprob: -12.380548477172852
    6. '       ' → logprob: -13.630548477172852
    7. ' ' → logprob: -14.130548477172852
    8. '  ' → logprob: -14.130548477172852
    9. '```' → logprob: -14.255548477172852
    10. '    
' → logprob: -14.505548477172852

Token 233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. ' [' → logprob: -13.12500286102295
    3. 'res' → logprob: -14.12500286102295
    4. '```' → logprob: -15.25000286102295
    5. '=res' → logprob: -18.500003814697266
    6. '[
' → logprob: -18.500003814697266
    7. '   ' → logprob: -18.625003814697266
    8. ' res' → logprob: -18.750003814697266
    9. ')[' → logprob: -19.375003814697266
    10. ' ' → logprob: -19.625003814697266

Token 234: 'res' (ID: 430)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07891876250505447
    2. 'res' → logprob: -2.578918695449829
    3. ' res' → logprob: -11.07891845703125
    4. ' [' → logprob: -12.57891845703125
    5. '	res' → logprob: -12.70391845703125
    6. '
' → logprob: -13.07891845703125
    7. '(res' → logprob: -13.95391845703125
    8. ')' → logprob: -14.32891845703125
    9. '[
' → logprob: -14.32891845703125
    10. '```' → logprob: -14.57891845703125

Token 235: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.10642826557159424
    2. ' -=' → logprob: -2.6064281463623047
    3. '-' → logprob: -3.6064281463623047
    4. '+=' → logprob: -12.106428146362305
    5. ' -' → logprob: -12.606428146362305
    6. '[' → logprob: -13.231428146362305
    7. '=' → logprob: -13.356428146362305
    8. ')' → logprob: -14.731428146362305
    9. '   ' → logprob: -15.106428146362305
    10. '[-' → logprob: -15.106428146362305

Token 236: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0029055625200271606
    2. ' -=' → logprob: -6.002905368804932
    3. '-' → logprob: -7.752905368804932
    4. '=' → logprob: -15.25290584564209
    5. '+=' → logprob: -16.627904891967773
    6. '   ' → logprob: -17.752904891967773
    7. ' -' → logprob: -17.877904891967773
    8. '```' → logprob: -19.252904891967773
    9. '>' → logprob: -19.752904891967773
    10. '	' → logprob: -20.002904891967773

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -19.37510871887207
    4. '
' → logprob: -20.50010871887207
    5. '```' → logprob: -21.00010871887207
    6. '0' → logprob: -21.87510871887207
    7. ' ' → logprob: -22.00010871887207
    8. '  ' → logprob: -23.12510871887207
    9. '１' → logprob: -23.87510871887207
    10. '-' → logprob: -24.12510871887207

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -18.625001907348633
    4. '```' → logprob: -19.625001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '0' → logprob: -21.812501907348633
    7. '１' → logprob: -22.312501907348633
    8. '۱' → logprob: -22.562501907348633
    9. '

' → logprob: -22.687501907348633
    10. '  ' → logprob: -22.875001907348633

Token 239: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0904320478439331
    2. '   ' → logprob: -2.4654321670532227
    3. ' if' → logprob: -7.590432167053223
    4. 'if' → logprob: -8.090432167053223
    5. '    
' → logprob: -8.215432167053223
    6. '<|end|>' → logprob: -9.215432167053223
    7. '
' → logprob: -9.590432167053223
    8. ' 
' → logprob: -9.590432167053223
    9. '  
' → logprob: -9.965432167053223
    10. '```' → logprob: -10.215432167053223

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22596928477287292
    2. '
' → logprob: -1.7259693145751953
    3. ' if' → logprob: -4.725969314575195
    4. 'if' → logprob: -4.850969314575195
    5. 'while' → logprob: -5.725969314575195
    6. ' while' → logprob: -5.850969314575195
    7. '    
' → logprob: -7.100969314575195
    8. '```' → logprob: -8.100969314575195
    9. ' 
' → logprob: -9.100969314575195
    10. 'for' → logprob: -10.100969314575195

Token 241: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.020955000072717667
    2. 'changed' → logprob: -4.6459550857543945
    3. 'for' → logprob: -4.7709550857543945
    4. 'progress' → logprob: -6.5209550857543945
    5. '#' (adapté à ' #') → logprob: -7.7709550857543945
    6. 'if' → logprob: -8.395955085754395
    7. '   ' → logprob: -8.395955085754395
    8. 'made' → logprob: -9.270955085754395
    9. 'change' → logprob: -9.520955085754395
    10. 'finished' → logprob: -9.645955085754395

Token 242: ' Check' (ID: 6208)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.052850376814603806
    2. 'for' → logprob: -3.8028504848480225
    3. ' while' → logprob: -4.177850246429443
    4. 'changed' → logprob: -4.927850246429443
    5. '#' → logprob: -6.052850246429443
    6. 'if' → logprob: -6.427850246429443
    7. ' changed' → logprob: -7.052850246429443
    8. '   ' → logprob: -7.552850246429443
    9. ' for' → logprob: -7.677850246429443
    10. 'from' → logprob: -8.927850723266602

Token 243: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07528277486562729
    2. ' for' → logprob: -2.9502828121185303
    3. ' while' → logprob: -4.200282573699951
    4. 'if' → logprob: -6.325282573699951
    5. '   ' → logprob: -6.575282573699951
    6. 'for' → logprob: -6.825282573699951
    7. 'while' → logprob: -8.07528305053711
    8. ' whether' → logprob: -8.45028305053711
    9. ' all' → logprob: -8.82528305053711
    10. ' ' → logprob: -9.32528305053711

Token 244: ' any' (ID: 1062)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.33365508913993835
    2. ' can' → logprob: -1.3336551189422607
    3. 'remaining' → logprob: -4.208654880523682
    4. ' remaining' → logprob: -5.333654880523682
    5. 'all' → logprob: -8.83365535736084
    6. ' not' → logprob: -9.20865535736084
    7. ' all' → logprob: -9.45865535736084
    8. 'not' → logprob: -9.83365535736084
    9. 'finished' → logprob: -10.45865535736084
    10. ' finished' → logprob: -11.08365535736084

Token 245: ' processes' (ID: 14340)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8544344902038574
    2. ' not' → logprob: -1.3544344902038574
    3. 'finished' → logprob: -1.6044344902038574
    4. ' finished' → logprob: -3.2294344902038574
    5. 'process' → logprob: -3.4794344902038574
    6. ' process' → logprob: -3.7294344902038574
    7. 'proc' → logprob: -4.854434490203857
    8. '(not' → logprob: -5.229434490203857
    9. ' proc' → logprob: -5.979434490203857
    10. '_finished' → logprob: -6.854434490203857

Token 246: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.06175881251692772
    2. 'can' → logprob: -3.5617587566375732
    3. 'finished' → logprob: -4.436758995056152
    4. ' not' → logprob: -4.561758995056152
    5. 'not' → logprob: -5.936758995056152
    6. ' finished' → logprob: -6.186758995056152
    7. ' that' → logprob: -6.561758995056152
    8. '_finished' → logprob: -6.811758995056152
    9. ' could' → logprob: -8.186758995056152
    10. ' are' → logprob: -8.436758995056152

Token 247: ' finish' (ID: 9115)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4310946762561798
    2. '_finish' → logprob: -1.5560946464538574
    3. ' finish' → logprob: -2.3060946464538574
    4. 'finish' → logprob: -3.4310946464538574
    5. 'be' → logprob: -5.181094646453857
    6. '_be' → logprob: -6.806094646453857
    7. '_finished' → logprob: -8.556095123291016
    8. '_finalize' → logprob: -9.556095123291016
    9. ' now' → logprob: -9.806095123291016
    10. '   ' → logprob: -10.681095123291016

Token 248: ' now' (ID: 1954)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7379241585731506
    2. ' while' → logprob: -1.1129240989685059
    3. 'while' → logprob: -1.7379240989685059
    4. '
' → logprob: -4.112924098968506
    5. ' for' → logprob: -7.487924098968506
    6. '    
' → logprob: -8.737924575805664
    7. 'for' → logprob: -9.237924575805664
    8. '	while' → logprob: -9.237924575805664
    9. '```' → logprob: -10.112924575805664
    10. '       ' → logprob: -10.737924575805664

Token 249: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2668032646179199
    2. '
' → logprob: -1.76680326461792
    3. ' while' → logprob: -3.26680326461792
    4. 'while' → logprob: -3.76680326461792
    5. ' for' → logprob: -7.14180326461792
    6. '    
' → logprob: -7.26680326461792
    7. 'for' → logprob: -8.016803741455078
    8. '```' → logprob: -9.266803741455078
    9. ',' → logprob: -10.266803741455078
    10. '
' → logprob: -10.516803741455078

Token 250: 'repeat' (ID: 63242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7460060119628906
    2. 'while' → logprob: -0.9960060119628906
    3. '
' → logprob: -2.8710060119628906
    4. '):
' → logprob: -3.7460060119628906
    5. 'changed' → logprob: -3.9960060119628906
    6. ' while' → logprob: -4.121006011962891
    7. 'True' → logprob: -4.246006011962891
    8. ')
' → logprob: -4.746006011962891
    9. ' True' → logprob: -5.121006011962891
    10. ' changed' → logprob: -5.121006011962891

Token 251: ' until' (ID: 4609)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6804161071777344
    2. ' while' → logprob: -0.8054161071777344
    3. '   ' → logprob: -3.4304161071777344
    4. ':' → logprob: -5.055416107177734
    5. '
' → logprob: -5.805416107177734
    6. '):
' → logprob: -6.055416107177734
    7. ':
' → logprob: -7.180416107177734
    8. '=True' → logprob: -7.805416107177734
    9. '):' → logprob: -8.305416107177734
    10. ' for' → logprob: -8.305416107177734

Token 252: ' fix' (ID: 9295)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0827205553650856
    2. ' True' → logprob: -2.5827205181121826
    3. 'finished' → logprob: -6.332720756530762
    4. ' no' → logprob: -7.332720756530762
    5. ' not' → logprob: -8.082720756530762
    6. ' finished' → logprob: -8.207720756530762
    7. 'not' → logprob: -8.207720756530762
    8. 'False' → logprob: -8.207720756530762
    9. 'no' → logprob: -8.332720756530762
    10. 'true' → logprob: -11.457720756530762

Token 253: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.06879207491874695
    2. 'ed' → logprob: -2.9437921047210693
    3. '_point' → logprob: -4.44379186630249
    4. 'e' → logprob: -6.31879186630249
    5. '-point' → logprob: -9.068792343139648
    6. ' point' → logprob: -9.818792343139648
    7. 'points' → logprob: -10.318792343139648
    8. 'd' → logprob: -11.443792343139648
    9. '```' → logprob: -11.568792343139648
    10. 'Point' → logprob: -11.943792343139648

Token 254: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5732718706130981
    2. ':' → logprob: -1.3232718706130981
    3. '):' → logprob: -2.3232717514038086
    4. ')' → logprob: -3.0732717514038086
    5. ' while' → logprob: -4.323271751403809
    6. '):
' → logprob: -5.198271751403809
    7. 'while' → logprob: -5.573271751403809
    8. ':
' → logprob: -6.198271751403809
    9. ')
' → logprob: -7.448271751403809
    10. '       ' → logprob: -8.698271751403809

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060022179037332535
    2. ' while' → logprob: -2.9350221157073975
    3. 'while' → logprob: -5.435022354125977
    4. '```' → logprob: -7.810022354125977
    5. '
' → logprob: -8.310022354125977
    6. '    
' → logprob: -9.435022354125977
    7. '	while' → logprob: -10.935022354125977
    8. '       ' → logprob: -12.060022354125977
    9. '``' → logprob: -12.685022354125977
    10. ' 
' → logprob: -13.685022354125977

Token 256: ' progress' (ID: 7408)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.330955445766449
    2. ' while' → logprob: -1.3309555053710938
    3. 'changed' → logprob: -4.580955505371094
    4. '   ' → logprob: -5.205955505371094
    5. ' changed' → logprob: -6.330955505371094
    6. 'found' → logprob: -12.080955505371094
    7. 'updated' → logprob: -12.330955505371094
    8. 'change' → logprob: -12.705955505371094
    9. ' made' → logprob: -12.830955505371094
    10. 'changes' → logprob: -13.205955505371094

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742445647716522
    2. '=' → logprob: -0.9742445945739746
    3. '=True' → logprob: -9.599244117736816
    4. '_found' → logprob: -10.349244117736816
    5. 'ed' → logprob: -11.349244117736816
    6. ':' → logprob: -11.349244117736816
    7. 'made' → logprob: -11.349244117736816
    8. '_' → logprob: -11.849244117736816
    9. ' ' → logprob: -11.849244117736816
    10. '   ' → logprob: -11.974244117736816

Token 258: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007110013975761831
    2. ' True' → logprob: -7.250710964202881
    3. 'False' → logprob: -13.750711441040039
    4. '   ' → logprob: -21.37571144104004
    5. 'true' → logprob: -22.12571144104004
    6. ' False' → logprob: -22.50071144104004
    7. '(True' → logprob: -23.37571144104004
    8. ' ' → logprob: -24.00071144104004
    9. '=True' → logprob: -24.87571144104004
    10. 'Tr' → logprob: -25.12571144104004

Token 259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07649026811122894
    2. '
' → logprob: -3.5764901638031006
    3. ' while' → logprob: -3.7014901638031006
    4. 'while' → logprob: -4.20149040222168
    5. '	while' → logprob: -6.07649040222168
    6. '    
' → logprob: -6.57649040222168
    7. '<|end|>' → logprob: -6.57649040222168
    8. '       ' → logprob: -8.45149040222168
    9. ',' → logprob: -8.82649040222168
    10. '  
' → logprob: -9.32649040222168

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26053300499916077
    2. '
' → logprob: -1.5105329751968384
    3. 'while' → logprob: -5.885532855987549
    4. ' while' → logprob: -6.010532855987549
    5. '    
' → logprob: -6.135532855987549
    6. '	while' → logprob: -7.635532855987549
    7. '  
' → logprob: -7.885532855987549
    8. '```' → logprob: -9.385533332824707
    9. '<|end|>' → logprob: -9.510533332824707
    10. '   
' → logprob: -10.260533332824707

Token 261: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.12872228026390076
    2. ' while' → logprob: -2.1287221908569336
    3. '   ' → logprob: -6.628722190856934
    4. '	while' → logprob: -7.753722190856934
    5. '
' → logprob: -11.003722190856934
    6. '    
' → logprob: -11.503722190856934
    7. ' 
' → logprob: -11.628722190856934
    8. '```' → logprob: -12.878722190856934
    9. '\n' → logprob: -13.128722190856934
    10. '    ' → logprob: -15.003722190856934

Token 262: ' progress' (ID: 7408)
  Prédit: 'progress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'progress' → logprob: -0.5759453177452087
    2. ' progress' → logprob: -0.8259453177452087
    3. '(progress' → logprob: -12.575944900512695
    4. '	progress' → logprob: -13.200944900512695
    5. ' ' → logprob: -14.825944900512695
    6. '
' → logprob: -15.950944900512695
    7. '  ' → logprob: -16.825944900512695
    8. '_progress' → logprob: -17.325944900512695
    9. '.progress' → logprob: -17.950944900512695
    10. '   ' → logprob: -18.075944900512695

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016599490481894463
    2. ':
' → logprob: -8.750165939331055
    3. ' :' → logprob: -12.125165939331055
    4. '=' → logprob: -13.875165939331055
    5. '):' → logprob: -14.625165939331055
    6. ':

' → logprob: -14.875165939331055
    7. ' =' → logprob: -16.125165939331055
    8. ' and' → logprob: -17.375165939331055
    9. ':
' → logprob: -17.625165939331055
    10. ':**' → logprob: -17.625165939331055

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000116655595775228
    2. '   ' → logprob: -9.375116348266602
    3. ' progress' → logprob: -11.375116348266602
    4. '	progress' → logprob: -11.875116348266602
    5. 'progress' → logprob: -12.000116348266602
    6. '        
' → logprob: -12.625116348266602
    7. '<|end|>' → logprob: -13.750116348266602
    8. '	   ' → logprob: -13.875116348266602
    9. '    
' → logprob: -14.625116348266602
    10. '    ' → logprob: -15.375116348266602

Token 265: ' progress' (ID: 7408)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24055659770965576
    2. '   ' → logprob: -2.2405567169189453
    3. ' progress' → logprob: -2.6155567169189453
    4. 'progress' (adapté à ' progress') → logprob: -3.4905567169189453
    5. '
' → logprob: -5.990556716918945
    6. '	progress' → logprob: -7.740556716918945
    7. '    
' → logprob: -7.990556716918945
    8. '        
' → logprob: -8.115556716918945
    9. ' 
' → logprob: -9.490556716918945
    10. '    ' → logprob: -10.240556716918945

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519329786300659
    2. ' =' → logprob: -1.501932978630066
    3. ' ' → logprob: -13.126933097839355
    4. '   ' → logprob: -14.376933097839355
    5. '=False' → logprob: -14.501933097839355
    6. '=True' → logprob: -14.751933097839355
    7. ')' → logprob: -15.626933097839355
    8. ',' → logprob: -16.75193214416504
    9. ' =
' → logprob: -17.25193214416504
    10. ' =)' → logprob: -17.37693214416504

Token 267: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01814994215965271
    2. ' False' → logprob: -4.0181498527526855
    3. 'false' → logprob: -19.518150329589844
    4. '(False' → logprob: -20.143150329589844
    5. 'True' → logprob: -20.893150329589844
    6. '   ' → logprob: -21.018150329589844
    7. '=False' → logprob: -21.268150329589844
    8. ' ' → logprob: -21.518150329589844
    9. '_false' → logprob: -21.768150329589844
    10. '
' → logprob: -22.393150329589844

Token 268: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7179368734359741
    2. '   ' → logprob: -0.9679368734359741
    3. 'for' → logprob: -2.0929369926452637
    4. '       ' → logprob: -4.717936992645264
    5. '	for' → logprob: -9.592936515808105
    6. '    
' → logprob: -11.217936515808105
    7. '<|end|>' → logprob: -11.342936515808105
    8. '
' → logprob: -11.592936515808105
    9. ' ' → logprob: -12.592936515808105
    10. ',' → logprob: -12.842936515808105

Token 269: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3521682322025299
    2. 'for' → logprob: -1.6021682024002075
    3. '   ' → logprob: -2.352168321609497
    4. '       ' → logprob: -8.602168083190918
    5. '	for' → logprob: -10.727168083190918
    6. '  ' → logprob: -12.727168083190918
    7. '
' → logprob: -12.977168083190918
    8. '    
' → logprob: -13.477168083190918
    9. ',' → logprob: -14.102168083190918
    10. '<|end|>' → logprob: -14.102168083190918

Token 270: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03557879105210304
    2. ' for' → logprob: -3.535578727722168
    3. '       ' → logprob: -5.535578727722168
    4. '   ' → logprob: -6.285578727722168
    5. '	for' → logprob: -13.160578727722168
    6. '
' → logprob: -13.285578727722168
    7. ' ' → logprob: -14.910578727722168
    8. '  ' → logprob: -15.785578727722168
    9. '     ' → logprob: -16.660579681396484
    10. '    ' → logprob: -16.785579681396484

Token 271: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10145846009254456
    2. ' i' → logprob: -2.3514585494995117
    3. 'p' → logprob: -6.726458549499512
    4. ' p' → logprob: -10.351458549499512
    5. 'proc' → logprob: -11.226458549499512
    6. 'pid' → logprob: -12.351458549499512
    7. 'process' → logprob: -14.101458549499512
    8. 'pi' → logprob: -14.601458549499512
    9. 'x' → logprob: -15.101458549499512
    10. ' pid' → logprob: -15.101458549499512

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009757505729794502
    2. 'in' → logprob: -4.6347575187683105
    3. 'range' → logprob: -14.009757041931152
    4. ' ' → logprob: -15.884757041931152
    5. '
' → logprob: -16.13475799560547
    6. '	in' → logprob: -16.38475799560547
    7. '```' → logprob: -16.38475799560547
    8. 'p' → logprob: -16.63475799560547
    9. '   ' → logprob: -16.88475799560547
    10. '<|end|>' → logprob: -17.00975799560547

Token 273: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -20.378177642822266
    4. '   ' → logprob: -21.128177642822266
    5. ' ' → logprob: -22.003177642822266
    6. '	range' → logprob: -22.003177642822266
    7. '```' → logprob: -22.503177642822266
    8. '
' → logprob: -22.503177642822266
    9. 'ran' → logprob: -23.503177642822266
    10. 'r' → logprob: -23.628177642822266

Token 274: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009469495271332562
    2. '(p' → logprob: -7.000946998596191
    3. ' p' → logprob: -10.250946998596191
    4. '(' → logprob: -16.875946044921875
    5. '<p' → logprob: -17.250946044921875
    6. '
' → logprob: -17.250946044921875
    7. '	p' → logprob: -18.750946044921875
    8. '[p' → logprob: -19.250946044921875
    9. '   ' → logprob: -19.375946044921875
    10. '(
' → logprob: -19.750946044921875

Token 275: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14295749366283417
    2. '):' → logprob: -2.0179574489593506
    3. '):
' → logprob: -8.89295768737793
    4. ':' → logprob: -9.39295768737793
    5. ':
' → logprob: -10.64295768737793
    6. '():
' → logprob: -10.76795768737793
    7. ' ):
' → logprob: -11.76795768737793
    8. '):

' → logprob: -12.64295768737793
    9. ' ):' → logprob: -13.76795768737793
    10. '       ' → logprob: -14.51795768737793

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.194975808262825
    2. ' if' → logprob: -1.8199758529663086
    3. '       ' → logprob: -5.069975852966309
    4. 'if' → logprob: -5.069975852966309
    5. '   ' → logprob: -7.069975852966309
    6. '<|end|>' → logprob: -7.194975852966309
    7. '
' → logprob: -7.944975852966309
    8. '	       ' → logprob: -8.319975852966309
    9. '	   ' → logprob: -9.694975852966309
    10. '	if' → logprob: -9.819975852966309

Token 277: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16138437390327454
    2. ' if' → logprob: -1.9113843441009521
    3. '               ' → logprob: -6.911384582519531
    4. '       ' → logprob: -9.286384582519531
    5. '           ' → logprob: -9.911384582519531
    6. '
' → logprob: -11.661384582519531
    7. '	if' → logprob: -12.036384582519531
    8. '	       ' → logprob: -13.411384582519531
    9. '<|end|>' → logprob: -13.411384582519531
    10. '   ' → logprob: -13.786384582519531

Token 278: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.34882330894470215
    2. ' not' → logprob: -1.2238233089447021
    3. '(not' → logprob: -8.098823547363281
    4. 'finished' → logprob: -10.598823547363281
    5. ' (' → logprob: -11.098823547363281
    6. '   ' → logprob: -11.223823547363281
    7. ' finished' → logprob: -11.973823547363281
    8. '           ' → logprob: -12.098823547363281
    9. 'n' → logprob: -13.098823547363281
    10. '!' → logprob: -13.348823547363281

Token 279: ' finished' (ID: 11684)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.20141743123531342
    2. ' finished' → logprob: -1.7014174461364746
    3. '_finished' → logprob: -13.826416969299316
    4. 'finish' → logprob: -13.951416969299316
    5. 'Finished' → logprob: -14.201416969299316
    6. 'fin' → logprob: -14.451416969299316
    7. '.finished' → logprob: -14.451416969299316
    8. 'f' → logprob: -15.951416969299316
    9. '
' → logprob: -16.076417922973633
    10. '   ' → logprob: -16.451417922973633

Token 280: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.25
    3. 'and' → logprob: -16.875
    4. 'i' → logprob: -19.0
    5. ' [' → logprob: -19.5
    6. ' and' → logprob: -19.5
    7. '```' → logprob: -19.875
    8. '[
' → logprob: -20.0
    9. '
' → logprob: -20.875
    10. '(i' → logprob: -21.0

Token 281: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.060537103563547134
    2. 'and' → logprob: -3.060537099838257
    3. ']' → logprob: -4.435537338256836
    4. ']:
' → logprob: -11.685537338256836
    5. ']:' → logprob: -11.935537338256836
    6. ' ]' → logprob: -12.310537338256836
    7. ')' → logprob: -12.560537338256836
    8. ':' → logprob: -13.060537338256836
    9. ':
' → logprob: -13.060537338256836
    10. ' ' → logprob: -13.560537338256836

Token 282: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12695321440696716
    2. 'and' → logprob: -2.126953125
    3. ':
' → logprob: -11.001953125
    4. ':' → logprob: -11.876953125
    5. ' ' → logprob: -13.876953125
    6. ')' → logprob: -16.001953125
    7. '	and' → logprob: -16.251953125
    8. '   ' → logprob: -16.501953125
    9. '
' → logprob: -16.626953125
    10. ',' → logprob: -16.876953125

Token 283: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.018150877207517624
    2. ' can' → logprob: -4.018150806427002
    3. '	can' → logprob: -14.14315128326416
    4. '(can' → logprob: -16.268150329589844
    5. '
' → logprob: -16.768150329589844
    6. '.can' → logprob: -17.143150329589844
    7. ' ' → logprob: -17.268150329589844
    8. '_can' → logprob: -17.643150329589844
    9. '   ' → logprob: -17.768150329589844
    10. '  ' → logprob: -18.393150329589844

Token 284: '_finish' (ID: 109520)
  Prédit: '_finish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finish' → logprob: -0.0006329743773676455
    2. 'finish' → logprob: -7.3756327629089355
    3. '_fin' → logprob: -13.375633239746094
    4. '_' → logprob: -13.750633239746094
    5. '_continue' → logprob: -13.750633239746094
    6. '_finished' → logprob: -14.250633239746094
    7. ' _' → logprob: -14.250633239746094
    8. ' finish' → logprob: -14.375633239746094
    9. '(i' → logprob: -16.250633239746094
    10. 'Finish' → logprob: -16.375633239746094

Token 285: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.8802491215174086e-05
    2. ' (' → logprob: -11.000028610229492
    3. '(' → logprob: -11.375028610229492
    4. '(
' → logprob: -14.750028610229492
    5. '[i' → logprob: -16.750028610229492
    6. ')' → logprob: -17.625028610229492
    7. ' ' → logprob: -18.375028610229492
    8. '(ii' → logprob: -19.250028610229492
    9. '
' → logprob: -19.375028610229492
    10. '(

' → logprob: -19.500028610229492

Token 286: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08913924545049667
    2. '):
' → logprob: -2.464139223098755
    3. ')' → logprob: -9.339138984680176
    4. ':' → logprob: -9.964138984680176
    5. ' ):' → logprob: -10.214138984680176
    6. '):

' → logprob: -11.589138984680176
    7. '):
' → logprob: -11.964138984680176
    8. ' ):
' → logprob: -12.214138984680176
    9. '   ' → logprob: -13.464138984680176
    10. ':
' → logprob: -13.839138984680176

Token 287: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2511884272098541
    2. ' available' → logprob: -2.6261885166168213
    3. '       ' → logprob: -3.1261885166168213
    4. 'available' → logprob: -3.6261885166168213
    5. ' finished' → logprob: -3.7511885166168213
    6. '
' → logprob: -4.126188278198242
    7. '           ' → logprob: -4.376188278198242
    8. 'finished' → logprob: -4.751188278198242
    9. ':' → logprob: -5.626188278198242
    10. '```' → logprob: -5.876188278198242

Token 288: ' #' (ID: 1069)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.18833883106708527
    2. ' finished' → logprob: -1.9383388757705688
    3. 'available' → logprob: -4.313338756561279
    4. '   ' → logprob: -5.688338756561279
    5. '           ' → logprob: -5.688338756561279
    6. ' available' → logprob: -5.813338756561279
    7. '       ' → logprob: -5.938338756561279
    8. 'for' → logprob: -7.188338756561279
    9. ' for' → logprob: -7.563338756561279
    10. '               ' → logprob: -8.438339233398438

Token 289: ' Process' (ID: 12482)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.025351641699671745
    2. ' finished' → logprob: -3.9003515243530273
    3. 'for' → logprob: -5.525351524353027
    4. 'available' → logprob: -7.650351524353027
    5. ' for' → logprob: -8.900351524353027
    6. '   ' → logprob: -9.775351524353027
    7. '           ' → logprob: -10.025351524353027
    8. '       ' → logprob: -10.400351524353027
    9. 'finish' → logprob: -10.400351524353027
    10. ' available' → logprob: -10.900351524353027

Token 290: ' i' (ID: 575)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.3566834032535553
    2. ' finished' → logprob: -1.231683373451233
    3. '[i' → logprob: -5.606683254241943
    4. '_finished' → logprob: -6.356683254241943
    5. ' can' → logprob: -7.856683254241943
    6. ' finishes' → logprob: -7.981683254241943
    7. '[' → logprob: -8.356683731079102
    8. '           ' → logprob: -8.481683731079102
    9. '   ' → logprob: -8.606683731079102
    10. ' =' → logprob: -8.731683731079102

Token 291: ' can' (ID: 665)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.1352376937866211
    2. ' finished' → logprob: -2.885237693786621
    3. ' finishes' → logprob: -3.135237693786621
    4. '_finished' → logprob: -4.510237693786621
    5. ' can' → logprob: -5.635237693786621
    6. 'finish' → logprob: -6.510237693786621
    7. 'inished' → logprob: -6.760237693786621
    8. ' has' → logprob: -6.885237693786621
    9. ':' → logprob: -7.010237693786621
    10. '#' → logprob: -7.260237693786621

Token 292: ' finish' (ID: 9115)
  Prédit: 'finish'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finish' → logprob: -0.14229780435562134
    2. ' finish' → logprob: -2.1422977447509766
    3. '_finish' → logprob: -4.642297744750977
    4. 'finished' → logprob: -5.392297744750977
    5. ' finished' → logprob: -8.017297744750977
    6. '   ' → logprob: -8.392297744750977
    7. ' be' → logprob: -9.267297744750977
    8. '           ' → logprob: -9.517297744750977
    9. '.finish' → logprob: -9.892297744750977
    10. '_finished' → logprob: -10.017297744750977

Token 293: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024391375482082367
    2. '
' → logprob: -4.899391174316406
    3. 'finished' → logprob: -5.024391174316406
    4. '                
' → logprob: -5.649391174316406
    5. ' finished' → logprob: -5.774391174316406
    6. '                   ' → logprob: -7.024391174316406
    7. '           ' → logprob: -7.149391174316406
    8. '   ' → logprob: -7.899391174316406
    9. '```' → logprob: -8.524391174316406
    10. '       ' → logprob: -8.524391174316406

Token 294: ' release' (ID: 8232)
  Prédit: ' finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' finished' → logprob: -0.23560984432697296
    2. 'finished' → logprob: -2.110609769821167
    3. ' for' → logprob: -2.860609769821167
    4. ' available' → logprob: -4.610610008239746
    5. 'for' → logprob: -5.110610008239746
    6. '       ' → logprob: -5.610610008239746
    7. '           ' → logprob: -5.610610008239746
    8. '               ' → logprob: -5.735610008239746
    9. '   ' → logprob: -6.360610008239746
    10. 'available' → logprob: -6.360610008239746

Token 295: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.559768795967102
    2. 'for' → logprob: -0.934768795967102
    3. ' resources' → logprob: -5.1847686767578125
    4. 'allocated' → logprob: -5.1847686767578125
    5. ' allocated' → logprob: -5.1847686767578125
    6. 'available' → logprob: -5.5597686767578125
    7. 'resources' → logprob: -5.5597686767578125
    8. '   ' → logprob: -5.9347686767578125
    9. ' available' → logprob: -5.9347686767578125
    10. '
' → logprob: -6.3097686767578125

Token 296: ' allocated' (ID: 42041)
  Prédit: 'allocated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allocated' → logprob: -0.8507245779037476
    2. ' allocated' → logprob: -1.2257245779037476
    3. '   ' → logprob: -1.8507245779037476
    4. ' resources' → logprob: -2.725724697113037
    5. 'resources' → logprob: -3.350724697113037
    6. '           ' → logprob: -4.350724697113037
    7. '               ' → logprob: -4.975724697113037
    8. '       ' → logprob: -7.725724697113037
    9. ' for' → logprob: -7.975724697113037
    10. '                   ' → logprob: -8.475724220275879

Token 297: ' resources' (ID: 7416)
  Prédit: 'resources'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resources' → logprob: -0.1348889172077179
    2. ' resources' → logprob: -2.5098888874053955
    3. '[i' → logprob: -4.134889125823975
    4. '   ' → logprob: -4.384889125823975
    5. '[' → logprob: -4.884889125823975
    6. '           ' → logprob: -5.509889125823975
    7. '               ' → logprob: -5.759889125823975
    8. '[j' → logprob: -7.509889125823975
    9. '       ' → logprob: -8.259888648986816
    10. 'for' → logprob: -8.384888648986816

Token 298: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3060067296028137
    2. ' for' → logprob: -1.806006669998169
    3. 'for' → logprob: -2.431006669998169
    4. '                   ' → logprob: -4.806006908416748
    5. '           ' → logprob: -6.431006908416748
    6. '```' → logprob: -7.181006908416748
    7. '
' → logprob: -7.431006908416748
    8. ',' → logprob: -9.93100643157959
    9. '       ' → logprob: -10.05600643157959
    10. '                       ' → logprob: -10.55600643157959

Token 299: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006572072859853506
    2. '
' → logprob: -5.506572246551514
    3. ' for' → logprob: -6.881572246551514
    4. 'for' → logprob: -7.631572246551514
    5. '                
' → logprob: -7.881572246551514
    6. '```' → logprob: -8.381571769714355
    7. '           ' → logprob: -8.756571769714355
    8. '<|end|>' → logprob: -9.881571769714355
    9. ',' → logprob: -10.256571769714355
    10. '       ' → logprob: -10.381571769714355

Token 300: ' finished' (ID: 11684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04138493910431862
    2. ' for' → logprob: -3.2913849353790283
    3. 'finished' (adapté à ' finished') → logprob: -5.916385173797607
    4. '               ' → logprob: -8.16638469696045
    5. 'available' → logprob: -9.04138469696045
    6. '   ' → logprob: -9.29138469696045
    7. '           ' → logprob: -9.91638469696045
    8. ' finished' → logprob: -10.04138469696045
    9. '                   ' → logprob: -10.41638469696045
    10. '       ' → logprob: -11.29138469696045

Token 301: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.822646693966817e-06
    2. '[' → logprob: -11.875007629394531
    3. ' [' → logprob: -14.875007629394531
    4. ')[' → logprob: -15.875007629394531
    5. '][' → logprob: -16.12500762939453
    6. '```' → logprob: -16.75000762939453
    7. '[I' → logprob: -16.75000762939453
    8. '[in' → logprob: -17.75000762939453
    9. '[id' → logprob: -18.00000762939453
    10. '[j' → logprob: -18.00000762939453

Token 302: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0041974750347435474
    2. ']=' → logprob: -5.504197597503662
    3. '][' → logprob: -9.129197120666504
    4. '[i' → logprob: -12.129197120666504
    5. ' ]' → logprob: -13.754197120666504
    6. '=' → logprob: -13.754197120666504
    7. ']
' → logprob: -14.129197120666504
    8. ']==' → logprob: -14.754197120666504
    9. '][:' → logprob: -15.129197120666504
    10. '[j' → logprob: -15.254197120666504

Token 303: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014167623594403267
    2. ' =' → logprob: -4.264167785644531
    3. '=True' → logprob: -12.889167785644531
    4. ']' → logprob: -13.639167785644531
    5. ']=' → logprob: -14.889167785644531
    6. '[' → logprob: -17.88916778564453
    7. ',' → logprob: -17.88916778564453
    8. 'True' → logprob: -18.01416778564453
    9. ')' → logprob: -18.76416778564453
    10. '＝' → logprob: -19.51416778564453

Token 304: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.615255839889869e-05
    2. ' True' → logprob: -9.250096321105957
    3. '(True' → logprob: -21.75009536743164
    4. '=True' → logprob: -21.87509536743164
    5. '   ' → logprob: -22.00009536743164
    6. 'true' → logprob: -22.12509536743164
    7. ' ' → logprob: -22.37509536743164
    8. '  ' → logprob: -23.25009536743164
    9. '1' → logprob: -23.87509536743164
    10. '
' → logprob: -24.87509536743164

Token 305: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03683944791555405
    2. ' for' → logprob: -3.536839485168457
    3. 'for' → logprob: -5.036839485168457
    4. '
' → logprob: -8.411839485168457
    5. '       ' → logprob: -8.411839485168457
    6. '           ' → logprob: -9.661839485168457
    7. '```' → logprob: -10.661839485168457
    8. '                   ' → logprob: -11.411839485168457
    9. '   ' → logprob: -12.161839485168457
    10. ',' → logprob: -12.286839485168457

Token 306: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11519540846347809
    2. ' for' → logprob: -2.4901955127716064
    3. 'for' → logprob: -3.9901955127716064
    4. '       ' → logprob: -4.990195274353027
    5. '           ' → logprob: -7.865195274353027
    6. '   ' → logprob: -9.240195274353027
    7. '```' → logprob: -9.740195274353027
    8. '
' → logprob: -10.115195274353027
    9. '	for' → logprob: -11.240195274353027
    10. '                   ' → logprob: -11.740195274353027

Token 307: ' finished' (ID: 11684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06865207105875015
    2. 'finished' (adapté à ' finished') → logprob: -3.1936521530151367
    3. 'progress' → logprob: -3.6936521530151367
    4. '   ' → logprob: -8.318652153015137
    5. ' for' → logprob: -9.443652153015137
    6. 'dead' → logprob: -10.068652153015137
    7. '           ' → logprob: -10.443652153015137
    8. '               ' → logprob: -10.818652153015137
    9. '       ' → logprob: -11.568652153015137
    10. ' finished' → logprob: -12.068652153015137

Token 308: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.027567826211452484
    2. '[i' → logprob: -3.6525678634643555
    3. 'count' → logprob: -6.7775678634643555
    4. '[' → logprob: -10.402567863464355
    5. '_counts' → logprob: -10.402567863464355
    6. ']' → logprob: -11.527567863464355
    7. 'i' → logprob: -11.527567863464355
    8. '[j' → logprob: -12.027567863464355
    9. '```' → logprob: -12.027567863464355
    10. '][' → logprob: -12.402567863464355

Token 309: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12693734467029572
    2. '+=' → logprob: -2.1269373893737793
    3. ']+=' → logprob: -12.126936912536621
    4. '+' → logprob: -12.876936912536621
    5. '=' → logprob: -15.626936912536621
    6. '```' → logprob: -15.751936912536621
    7. ' ' → logprob: -15.876936912536621
    8. ']' → logprob: -16.001937866210938
    9. '+=(' → logprob: -16.001937866210938
    10. ')' → logprob: -16.001937866210938

Token 310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. 'sum' → logprob: -17.625085830688477
    4. 'allocated' → logprob: -17.875085830688477
    5. '   ' → logprob: -18.500085830688477
    6. '
' → logprob: -19.125085830688477
    7. 'p' → logprob: -21.125085830688477
    8. ' sum' → logprob: -21.125085830688477
    9. ',' → logprob: -21.125085830688477
    10. ' p' → logprob: -21.250085830688477

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 'allocated' → logprob: -18.250001907348633
    4. '
' → logprob: -19.875001907348633
    5. '   ' → logprob: -20.375001907348633
    6. 'p' → logprob: -21.125001907348633
    7. 'all' → logprob: -21.250001907348633
    8. '```' → logprob: -21.625001907348633
    9. 'sum' → logprob: -21.875001907348633
    10. ')' → logprob: -22.375001907348633

Token 312: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14613330364227295
    2. 'for' → logprob: -2.5211334228515625
    3. ' for' → logprob: -2.8961334228515625
    4. '```' → logprob: -8.771133422851562
    5. '       ' → logprob: -9.146133422851562
    6. '   ' → logprob: -10.021133422851562
    7. '           ' → logprob: -10.896133422851562
    8. '
' → logprob: -11.771133422851562
    9. '	for' → logprob: -11.896133422851562
    10. ',' → logprob: -12.146133422851562

Token 313: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2673672139644623
    2. '   ' → logprob: -1.7673672437667847
    3. ' for' → logprob: -2.767367124557495
    4. '       ' → logprob: -7.017367362976074
    5. '               ' → logprob: -10.142367362976074
    6. '	for' → logprob: -10.267367362976074
    7. '           ' → logprob: -11.017367362976074
    8. '```' → logprob: -12.267367362976074
    9. '
' → logprob: -12.642367362976074
    10. ' ' → logprob: -13.017367362976074

Token 314: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002619318547658622
    2. ' for' → logprob: -8.500262260437012
    3. '   ' → logprob: -9.750262260437012
    4. '	for' → logprob: -15.875262260437012
    5. '```' → logprob: -16.875261306762695
    6. '       ' → logprob: -19.000261306762695
    7. '           ' → logprob: -19.500261306762695
    8. '
' → logprob: -19.750261306762695
    9. 'available' → logprob: -19.750261306762695
    10. '               ' → logprob: -20.250261306762695

Token 315: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0014460684033110738
    2. 'k' → logprob: -7.00144624710083
    3. ' j' → logprob: -8.001445770263672
    4. 'res' → logprob: -8.626445770263672
    5. 'r' → logprob: -11.001445770263672
    6. 'resource' → logprob: -13.376445770263672
    7. ' res' → logprob: -13.501445770263672
    8. ' k' → logprob: -15.501445770263672
    9. 'x' → logprob: -15.626445770263672
    10. '```' → logprob: -16.876445770263672

Token 316: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016042815521359444
    2. 'in' → logprob: -4.141042709350586
    3. 'range' → logprob: -12.891042709350586
    4. ' ' → logprob: -13.641042709350586
    5. '```' → logprob: -13.766042709350586
    6. 's' → logprob: -13.891042709350586
    7. 'In' → logprob: -14.766042709350586
    8. '   ' → logprob: -14.891042709350586
    9. ',' → logprob: -15.391042709350586
    10. '[' → logprob: -15.391042709350586

Token 317: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078997299075127
    2. ' range' → logprob: -5.5040788650512695
    3. '(range' → logprob: -14.25407886505127
    4. 'r' → logprob: -19.629079818725586
    5. 'in' → logprob: -20.379079818725586
    6. '	range' → logprob: -21.004079818725586
    7. 'ange' → logprob: -21.879079818725586
    8. '
' → logprob: -22.004079818725586
    9. 'rang' → logprob: -22.879079818725586
    10. '   ' → logprob: -22.879079818725586

Token 318: '(r' (ID: 4729)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011972079053521156
    2. ' range' → logprob: -4.761971950531006
    3. '(range' → logprob: -5.761971950531006
    4. 'in' → logprob: -8.886972427368164
    5. ' in' → logprob: -10.011972427368164
    6. '(r' → logprob: -10.886972427368164
    7. 'r' → logprob: -12.386972427368164
    8. ')' → logprob: -14.761972427368164
    9. '(' → logprob: -15.261972427368164
    10. ' ' → logprob: -16.136972427368164

Token 319: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2849620580673218
    2. '):
' → logprob: -1.7849620580673218
    3. ' in' → logprob: -2.7849621772766113
    4. 'in' → logprob: -4.284962177276611
    5. ')' → logprob: -5.909962177276611
    6. 'range' → logprob: -7.034962177276611
    7. ':' → logprob: -8.034961700439453
    8. ' range' → logprob: -9.284961700439453
    9. ',' → logprob: -9.409961700439453
    10. ']:' → logprob: -9.534961700439453

Token 320: '                   ' (ID: 699)
  Prédit: ' available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' available' → logprob: -0.48781901597976685
    2. '                   ' → logprob: -1.237818956375122
    3. 'available' → logprob: -2.362818956375122
    4. '               ' → logprob: -7.237819194793701
    5. '   ' → logprob: -7.862819194793701
    6. '           ' → logprob: -7.987819194793701
    7. '                       ' → logprob: -8.237818717956543
    8. '       ' → logprob: -8.987818717956543
    9. '                  ' → logprob: -11.737818717956543
    10. '                 ' → logprob: -12.362818717956543

Token 321: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' (adapté à ' available') → logprob: -0.03844214603304863
    2. ' available' → logprob: -3.2884421348571777
    3. '   ' → logprob: -8.413442611694336
    4. '                   ' → logprob: -8.788442611694336
    5. '       ' → logprob: -11.663442611694336
    6. '           ' → logprob: -11.913442611694336
    7. '               ' → logprob: -12.163442611694336
    8. '                       ' → logprob: -12.663442611694336
    9. ' ' → logprob: -14.288442611694336
    10. '  ' → logprob: -15.163442611694336

Token 322: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.25
    3. '```' → logprob: -16.375
    4. ' [' → logprob: -16.875
    5. '[i' → logprob: -19.125
    6. '][' → logprob: -19.25
    7. '[js' → logprob: -19.375
    8. '
' → logprob: -19.5
    9. '   ' → logprob: -20.25
    10. 'j' → logprob: -20.25

Token 323: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9640829563140869
    2. ']' → logprob: -1.214082956314087
    3. ']+=' → logprob: -1.214082956314087
    4. ' +=' → logprob: -3.714082956314087
    5. '+' → logprob: -8.589082717895508
    6. ']+' → logprob: -9.964082717895508
    7. ')' → logprob: -9.964082717895508
    8. ' ]' → logprob: -10.714082717895508
    9. '+]' → logprob: -12.089082717895508
    10. '+=(' → logprob: -12.589082717895508

Token 324: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005616117268800735
    2. ' +=' → logprob: -7.500561714172363
    3. ']+=' → logprob: -11.750561714172363
    4. '+' → logprob: -14.625561714172363
    5. '+=(' → logprob: -15.250561714172363
    6. '=' → logprob: -17.625560760498047
    7. '   ' → logprob: -18.000560760498047
    8. '+="' → logprob: -18.125560760498047
    9. '```' → logprob: -18.250560760498047
    10. '+='' → logprob: -18.625560760498047

Token 325: ' allocated' (ID: 42041)
  Prédit: 'allocated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allocated' → logprob: -0.0005530327325686812
    2. ' allocated' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.250553131103516
    4. 'alloc' → logprob: -18.250553131103516
    5. 'allocation' → logprob: -19.875553131103516
    6. 'assigned' → logprob: -20.250553131103516
    7. 'Allocated' → logprob: -20.250553131103516
    8. '           ' → logprob: -22.750553131103516
    9. '               ' → logprob: -23.000553131103516
    10. ' ' → logprob: -23.250553131103516

Token 326: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1160349458805285e-05
    2. 'i' → logprob: -11.750011444091797
    3. '[j' → logprob: -13.125011444091797
    4. '[' → logprob: -13.750011444091797
    5. ' [' → logprob: -16.125011444091797
    6. ' i' → logprob: -17.750011444091797
    7. '[][' → logprob: -18.500011444091797
    8. '```' → logprob: -18.625011444091797
    9. '][' → logprob: -19.125011444091797
    10. '(i' → logprob: -19.375011444091797

Token 327: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008457217481918633
    2. '[i' → logprob: -7.375845909118652
    3. '[j' → logprob: -8.875845909118652
    4. ']' → logprob: -9.875845909118652
    5. ' ][' → logprob: -10.750845909118652
    6. '[' → logprob: -12.500845909118652
    7. ''][' → logprob: -14.125845909118652
    8. '"][' → logprob: -14.250845909118652
    9. 'j' → logprob: -15.250845909118652
    10. 'i' → logprob: -15.375845909118652

Token 328: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.27099974633893e-05
    2. ' j' → logprob: -11.375012397766113
    3. '[j' → logprob: -13.750012397766113
    4. '   ' → logprob: -16.87501335144043
    5. '	j' → logprob: -17.00001335144043
    6. '][' → logprob: -17.25001335144043
    7. '```' → logprob: -17.37501335144043
    8. 'i' → logprob: -17.50001335144043
    9. '
' → logprob: -18.12501335144043
    10. ',j' → logprob: -18.75001335144043

Token 329: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00043972869752906263
    2. ']
' → logprob: -8.625439643859863
    3. '<|end|>' → logprob: -8.875439643859863
    4. ' ]' → logprob: -9.125439643859863
    5. ')' → logprob: -13.125439643859863
    6. ']

' → logprob: -13.750439643859863
    7. '```' → logprob: -13.875439643859863
    8. ')]' → logprob: -14.125439643859863
    9. '<|end|>' → logprob: -14.125439643859863
    10. '}' → logprob: -14.250439643859863

Token 330: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20271635055541992
    2. '               ' → logprob: -1.95271635055542
    3. '           ' → logprob: -4.07771635055542
    4. '       ' → logprob: -4.57771635055542
    5. '<|end|>' → logprob: -5.45271635055542
    6. '                       ' → logprob: -5.57771635055542
    7. '
' → logprob: -5.82771635055542
    8. '   ' → logprob: -6.70271635055542
    9. '                ' → logprob: -7.57771635055542
    10. '                           ' → logprob: -7.95271635055542

Token 331: ' allocated' (ID: 42041)
  Prédit: 'allocated'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allocated' (adapté à ' allocated') → logprob: -0.004091935232281685
    2. ' allocated' → logprob: -5.504091739654541
    3. '                   ' → logprob: -11.3790922164917
    4. '   ' → logprob: -13.8790922164917
    5. '           ' → logprob: -14.3790922164917
    6. '               ' → logprob: -15.1290922164917
    7. ' ' → logprob: -16.879091262817383
    8. '                           ' → logprob: -16.879091262817383
    9. '                       ' → logprob: -16.879091262817383
    10. 'allocation' → logprob: -17.504091262817383

Token 332: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.625000953674316
    3. '][' → logprob: -14.625000953674316
    4. '[j' → logprob: -15.625000953674316
    5. 'i' → logprob: -16.125001907348633
    6. '```' → logprob: -17.750001907348633
    7. '[][' → logprob: -18.250001907348633
    8. ' [' → logprob: -18.625001907348633
    9. '[I' → logprob: -18.625001907348633
    10. ')[' → logprob: -18.750001907348633

Token 333: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0036415266804397106
    2. '[i' → logprob: -5.628641605377197
    3. ']' → logprob: -10.628641128540039
    4. ' ][' → logprob: -12.753641128540039
    5. ''][' → logprob: -12.878641128540039
    6. '"][' → logprob: -12.878641128540039
    7. '[j' → logprob: -13.003641128540039
    8. '[' → logprob: -13.003641128540039
    9. ']][' → logprob: -13.128641128540039
    10. '[][' → logprob: -14.628641128540039

Token 334: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1041145626222715e-05
    2. '[j' → logprob: -11.750011444091797
    3. '][' → logprob: -13.000011444091797
    4. ' j' → logprob: -14.500011444091797
    5. ']' → logprob: -16.000011444091797
    6. 'i' → logprob: -16.125011444091797
    7. '```' → logprob: -17.125011444091797
    8. '0' → logprob: -17.375011444091797
    9. '	j' → logprob: -17.750011444091797
    10. '   ' → logprob: -18.000011444091797

Token 335: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06046057865023613
    2. ']=' → logprob: -3.3104605674743652
    3. '=' → logprob: -3.8104605674743652
    4. ' =' → logprob: -10.685461044311523
    5. ' ]' → logprob: -11.685461044311523
    6. ']==' → logprob: -15.935461044311523
    7. ']+=' → logprob: -16.185461044311523
    8. '0' → logprob: -17.060461044311523
    9. '']=' → logprob: -17.560461044311523
    10. ']]' → logprob: -17.560461044311523

Token 336: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001234428636962548
    2. ' =' → logprob: -9.000123023986816
    3. '*=' → logprob: -18.500123977661133
    4. '0' → logprob: -19.875123977661133
    5. '＝' → logprob: -19.875123977661133
    6. '.=' → logprob: -20.125123977661133
    7. ']=' → logprob: -20.500123977661133
    8. '=
' → logprob: -20.875123977661133
    9. '=

' → logprob: -21.125123977661133
    10. '=int' → logprob: -21.625123977661133

Token 337: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.875017166137695
    4. '۰' → logprob: -20.375017166137695
    5. '```' → logprob: -21.000017166137695
    6. ' ' → logprob: -21.125017166137695
    7. '00' → logprob: -21.125017166137695
    8. '000' → logprob: -21.875017166137695
    9. '０' → logprob: -22.312517166137695
    10. '	' → logprob: -22.312517166137695

Token 338: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -19.625001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '000' → logprob: -20.375001907348633
    6. '00' → logprob: -20.750001907348633
    7. '```' → logprob: -21.000001907348633
    8. '０' → logprob: -21.125001907348633
    9. 's' → logprob: -21.750001907348633
    10. '  ' → logprob: -22.125001907348633

Token 339: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16069148480892181
    2. '<|end|>' → logprob: -2.535691499710083
    3. '
' → logprob: -3.160691499710083
    4. '                   ' → logprob: -3.785691499710083
    5. '           ' → logprob: -6.535691261291504
    6. '       ' → logprob: -6.785691261291504
    7. '<|end|>' → logprob: -7.410691261291504
    8. '                       ' → logprob: -8.535691261291504
    9. '                ' → logprob: -8.535691261291504
    10. '   ' → logprob: -8.910691261291504

Token 340: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5095078349113464
    2. '               ' → logprob: -1.2595078945159912
    3. '       ' → logprob: -3.009507894515991
    4. '           ' → logprob: -3.134507894515991
    5. '<|end|>' → logprob: -4.634507656097412
    6. '                       ' → logprob: -4.884507656097412
    7. '   ' → logprob: -6.009507656097412
    8. '
' → logprob: -6.759507656097412
    9. '```' → logprob: -8.00950813293457
    10. '                ' → logprob: -8.13450813293457

Token 341: ' progress' (ID: 7408)
  Prédit: 'progress'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'progress' (adapté à ' progress') → logprob: -0.24657130241394043
    2. '                   ' → logprob: -2.2465713024139404
    3. '               ' → logprob: -2.7465713024139404
    4. ' progress' → logprob: -3.4965713024139404
    5. '                       ' → logprob: -4.3715715408325195
    6. '           ' → logprob: -5.6215715408325195
    7. '       ' → logprob: -6.8715715408325195
    8. '   ' → logprob: -7.2465715408325195
    9. '
' → logprob: -9.24657154083252
    10. '	progress' → logprob: -9.24657154083252

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246178403496742
    2. ' =' → logprob: -3.7732462882995605
    3. '=True' → logprob: -14.523245811462402
    4. '   ' → logprob: -15.648245811462402
    5. ' ' → logprob: -18.02324676513672
    6. '    ' → logprob: -18.27324676513672
    7. '.=' → logprob: -20.27324676513672
    8. '  ' → logprob: -20.52324676513672
    9. 'True' → logprob: -20.52324676513672
    10. ' True' → logprob: -20.89824676513672

Token 343: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '   ' → logprob: -20.751502990722656
    4. '(True' → logprob: -20.751502990722656
    5. 'true' → logprob: -22.001502990722656
    6. '=True' → logprob: -22.751502990722656
    7. 'False' → logprob: -23.251502990722656
    8. '    ' → logprob: -24.376502990722656
    9. '.True' → logprob: -24.876502990722656
    10. 'Tr' → logprob: -25.251502990722656

Token 344: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4986780881881714
    2. '
' → logprob: -1.3736780881881714
    3. '   ' → logprob: -2.123678207397461
    4. ' if' → logprob: -4.123678207397461
    5. '<|end|>' → logprob: -6.123678207397461
    6. '    
' → logprob: -6.873678207397461
    7. '#' → logprob: -8.748678207397461
    8. '

' → logprob: -9.748678207397461
    9. '
' → logprob: -9.998678207397461
    10. 'print' → logprob: -10.123678207397461

Token 345: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018793739145621657
    2. '
' → logprob: -6.8768792152404785
    3. '   ' → logprob: -8.126879692077637
    4. ' if' → logprob: -8.126879692077637
    5. '```' → logprob: -8.376879692077637
    6. '

' → logprob: -11.376879692077637
    7. '    
' → logprob: -12.126879692077637
    8. 'print' → logprob: -13.001879692077637
    9. '#' → logprob: -13.126879692077637
    10. '``' → logprob: -13.751879692077637

Token 346: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004289234522730112
    2. '   ' → logprob: -5.504289150238037
    3. ' if' → logprob: -9.379289627075195
    4. 'print' → logprob: -9.629289627075195
    5. '```' → logprob: -10.004289627075195
    6. '
' → logprob: -11.879289627075195
    7. '#' (adapté à ' #') → logprob: -12.254289627075195
    8. '    
' → logprob: -12.879289627075195
    9. 'else' → logprob: -15.129289627075195
    10. '``' → logprob: -15.254289627075195

Token 347: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020389800192788243
    2. '   ' → logprob: -8.750204086303711
    3. ' if' → logprob: -10.000204086303711
    4. ' ' → logprob: -18.12520408630371
    5. '#' → logprob: -18.75020408630371
    6. 'print' → logprob: -19.00020408630371
    7. '
' → logprob: -19.50020408630371
    8. 'If' → logprob: -19.62520408630371
    9. '  ' → logprob: -20.00020408630371
    10. '	if' → logprob: -20.25020408630371

Token 348: ' not' (ID: 625)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.2519338130950928
    2. ' finished' → logprob: -1.5019338130950928
    3. 'dead' → logprob: -13.751934051513672
    4. '_finished' → logprob: -13.876934051513672
    5. ' dead' → logprob: -14.626934051513672
    6. '.finished' → logprob: -14.751934051513672
    7. 'fin' → logprob: -14.751934051513672
    8. 'finish' → logprob: -15.001934051513672
    9. 'not' → logprob: -15.126934051513672
    10. ' not' → logprob: -15.251934051513672

Token 349: ' all' (ID: 722)
  Prédit: ' finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' finished' → logprob: -0.044665757566690445
    2. 'finished' → logprob: -3.169665813446045
    3. ' all' → logprob: -6.419665813446045
    4. 'all' → logprob: -11.544665336608887
    5. '_finished' → logprob: -11.669665336608887
    6. '(f' → logprob: -11.794665336608887
    7. 'Finished' → logprob: -12.419665336608887
    8. '(' → logprob: -13.544665336608887
    9. ' done' → logprob: -14.044665336608887
    10. ' finish' → logprob: -14.544665336608887

Token 350: ' processes' (ID: 14340)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.3133932948112488
    2. ' finished' → logprob: -1.3133933544158936
    3. ' processes' → logprob: -9.188393592834473
    4. '_finished' → logprob: -10.688393592834473
    5. 'finish' → logprob: -12.688393592834473
    6. '.finished' → logprob: -13.688393592834473
    7. 'process' → logprob: -14.563393592834473
    8. 'Finished' → logprob: -14.688393592834473
    9. ' finish' → logprob: -14.813393592834473
    10. 'fin' → logprob: -14.938393592834473

Token 351: ' done' (ID: 4167)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.052140701562166214
    2. ' finished' → logprob: -3.052140712738037
    3. '_finished' → logprob: -6.052140712738037
    4. 'done' → logprob: -7.927140712738037
    5. ' are' → logprob: -8.802140235900879
    6. 'if' → logprob: -9.052140235900879
    7. 'completed' → logprob: -9.052140235900879
    8. 'finish' → logprob: -9.302140235900879
    9. ' done' → logprob: -9.677140235900879
    10. ' and' → logprob: -9.802140235900879

Token 352: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07569000124931335
    2. '   ' → logprob: -2.7006900310516357
    3. 'and' → logprob: -5.575689792633057
    4. ',' → logprob: -6.450689792633057
    5. ':' → logprob: -8.075690269470215
    6. ':
' → logprob: -10.700690269470215
    7. ' if' → logprob: -11.450690269470215
    8. ' at' → logprob: -12.200690269470215
    9. ' yet' → logprob: -12.450690269470215
    10. ' ' → logprob: -12.700690269470215

Token 353: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5247906446456909
    2. ' if' → logprob: -1.149790644645691
    3. '   ' → logprob: -2.3997907638549805
    4. '       ' → logprob: -8.64979076385498
    5. '
' → logprob: -8.89979076385498
    6. ' and' → logprob: -8.89979076385498
    7. '#' → logprob: -9.02479076385498
    8. 'and' → logprob: -9.77479076385498
    9. 'print' → logprob: -9.89979076385498
    10. ' ' → logprob: -9.89979076385498

Token 354: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2108604907989502
    2. 'if' → logprob: -1.7108604907989502
    3. '   ' → logprob: -4.710860252380371
    4. ' for' → logprob: -8.710860252380371
    5. ' dead' → logprob: -8.960860252380371
    6. ' whether' → logprob: -9.710860252380371
    7. 'for' → logprob: -10.960860252380371
    8. 'dead' → logprob: -11.460860252380371
    9. ' at' → logprob: -12.335860252380371
    10. ' after' → logprob: -12.585860252380371

Token 355: ' no' (ID: 860)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.050190627574920654
    2. ' finished' → logprob: -3.0501906871795654
    3. 'dead' → logprob: -6.550190448760986
    4. ' dead' → logprob: -9.175190925598145
    5. 'progress' → logprob: -10.550190925598145
    6. 'time' → logprob: -11.675190925598145
    7. 'failed' → logprob: -11.800190925598145
    8. 'all' → logprob: -11.925190925598145
    9. 'not' → logprob: -12.300190925598145
    10. 'len' → logprob: -12.800190925598145

Token 356: ' further' (ID: 6544)
  Prédit: ' progress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' progress' → logprob: -0.08770959079265594
    2. ' available' → logprob: -3.462709665298462
    3. 'progress' → logprob: -4.337709426879883
    4. ' finished' → logprob: -4.587709426879883
    5. 'available' → logprob: -4.712709426879883
    6. 'finished' → logprob: -4.962709426879883
    7. ' more' → logprob: -5.212709426879883
    8. ' dead' → logprob: -5.837709426879883
    9. 'dead' → logprob: -7.212709426879883
    10. '(progress' → logprob: -7.462709426879883

Token 357: ' progress' (ID: 7408)
  Prédit: 'progress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'progress' → logprob: -0.27797776460647583
    2. ' progress' → logprob: -1.652977705001831
    3. 'ac' → logprob: -3.277977705001831
    4. 'input' → logprob: -5.40297794342041
    5. 'alloc' → logprob: -6.02797794342041
    6. 'allocation' → logprob: -6.15297794342041
    7. 'process' → logprob: -6.90297794342041
    8. 'log' → logprob: -7.90297794342041
    9. ' acquisitions' → logprob: -7.90297794342041
    10. '_progress' → logprob: -8.40297794342041

Token 358: ' possible' (ID: 4149)
  Prédit: ' was'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' was' → logprob: -0.8124672174453735
    2. ' and' → logprob: -1.3124672174453735
    3. ' can' → logprob: -1.5624672174453735
    4. 'can' → logprob: -3.687467098236084
    5. ' possible' → logprob: -4.437467098236084
    6. 'and' → logprob: -4.687467098236084
    7. '   ' → logprob: -4.812467098236084
    8. ' is' → logprob: -4.812467098236084
    9. 'was' → logprob: -5.062467098236084
    10. ':' → logprob: -6.312467098236084

Token 359: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002043317537754774
    2. ' and' → logprob: -6.2520432472229
    3. ' if' → logprob: -9.627043724060059
    4. 'and' → logprob: -10.877043724060059
    5. ',' → logprob: -11.127043724060059
    6. '
' → logprob: -11.627043724060059
    7. '       ' → logprob: -13.252043724060059
    8. 'if' → logprob: -14.002043724060059
    9. '    
' → logprob: -14.002043724060059
    10. '```' → logprob: -14.502043724060059

Token 360: 'dead' (ID: 69891)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8132215142250061
    2. 'if' → logprob: -1.3132214546203613
    3. ' and' → logprob: -1.6882214546203613
    4. 'finished' → logprob: -3.5632214546203613
    5. ' if' → logprob: -3.6882214546203613
    6. 'dead' → logprob: -4.313221454620361
    7. 'available' → logprob: -4.563221454620361
    8. ')' → logprob: -4.688221454620361
    9. ' finished' → logprob: -5.438221454620361
    10. ' available' → logprob: -5.688221454620361

Token 361: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.0006628761766478419
    2. 'locked' → logprob: -7.375662803649902
    3. 'locks' → logprob: -11.000662803649902
    4. '   ' → logprob: -11.500662803649902
    5. '_lock' → logprob: -12.000662803649902
    6. '       ' → logprob: -13.375662803649902
    7. ' lock' → logprob: -14.000662803649902
    8. 'lack' → logprob: -15.750662803649902
    9. '      ' → logprob: -16.12566375732422
    10. 'l' → logprob: -16.50066375732422

Token 362: ' unavoidable' (ID: 160714)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40456604957580566
    2. ')' → logprob: -1.5295660495758057
    3. '   ' → logprob: -3.2795660495758057
    4. '_detect' → logprob: -4.029565811157227
    5. ' ):' → logprob: -4.279565811157227
    6. '):
' → logprob: -4.404565811157227
    7. ' and' → logprob: -5.154565811157227
    8. ' )' → logprob: -5.154565811157227
    9. ' detected' → logprob: -5.404565811157227
    10. '_un' → logprob: -5.529565811157227

Token 363: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9788159132003784
    2. '   ' → logprob: -1.2288159132003784
    3. '):
' → logprob: -1.3538159132003784
    4. ')' → logprob: -2.978816032409668
    5. ' and' → logprob: -4.353816032409668
    6. ')
' → logprob: -5.228816032409668
    7. '):

' → logprob: -7.228816032409668
    8. ' if' → logprob: -7.353816032409668
    9. ':' → logprob: -7.478816032409668
    10. ',' → logprob: -7.853816032409668

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.522638169466518e-05
    2. ' if' → logprob: -11.000024795532227
    3. 'if' → logprob: -12.250024795532227
    4. '```' → logprob: -13.250024795532227
    5. '
' → logprob: -13.375024795532227
    6. ',' → logprob: -15.250024795532227
    7. '       ' → logprob: -16.875024795532227
    8. '    
' → logprob: -17.000024795532227
    9. '  ' → logprob: -17.875024795532227
    10. '<|end|>' → logprob: -18.375024795532227

Token 365: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3689824044704437
    2. '   ' → logprob: -1.8689824342727661
    3. ' if' → logprob: -1.8689824342727661
    4. '```' → logprob: -14.868982315063477
    5. 'elif' → logprob: -15.618982315063477
    6. '	if' → logprob: -15.618982315063477
    7. ' ' → logprob: -15.993982315063477
    8. '
' → logprob: -16.118982315063477
    9. 'If' → logprob: -16.743982315063477
    10. '  ' → logprob: -16.868982315063477

Token 366: ' finished' (ID: 11684)
  Prédit: ' finished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' finished' → logprob: -0.16028515994548798
    2. 'finished' → logprob: -1.9102851152420044
    3. ' not' → logprob: -9.910284996032715
    4. 'not' → logprob: -11.785284996032715
    5. 'Finished' → logprob: -13.285284996032715
    6. '_finished' → logprob: -14.160284996032715
    7. '.finished' → logprob: -14.910284996032715
    8. 'fin' → logprob: -15.535284996032715
    9. 'f' → logprob: -16.03528594970703
    10. '(f' → logprob: -16.16028594970703

Token 367: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.438573680294212e-06
    2. 'count' → logprob: -12.250005722045898
    3. '.count' → logprob: -14.625005722045898
    4. '_' → logprob: -16.8750057220459
    5. '!=' → logprob: -16.8750057220459
    6. '_COUNT' → logprob: -17.8750057220459
    7. '==' → logprob: -18.1250057220459
    8. '   ' → logprob: -18.2500057220459
    9. '
' → logprob: -19.0000057220459
    10. '_counts' → logprob: -19.0000057220459

Token 368: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.032648295164108276
    2. ' <' → logprob: -3.6576483249664307
    3. '<p' → logprob: -5.657648086547852
    4. '!=' → logprob: -6.407648086547852
    5. ' !=' → logprob: -6.782648086547852
    6. 'p' → logprob: -11.407648086547852
    7. '==' → logprob: -11.657648086547852
    8. '<len' → logprob: -11.657648086547852
    9. ' ' → logprob: -11.782648086547852
    10. ' ' → logprob: -12.532648086547852

Token 369: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.836499985889532e-05
    2. ' p' → logprob: -9.7500581741333
    3. '<p' → logprob: -19.000059127807617
    4. '   ' → logprob: -21.000059127807617
    5. '
' → logprob: -21.750059127807617
    6. ' ' → logprob: -21.875059127807617
    7. '	p' → logprob: -22.250059127807617
    8. ' ' → logprob: -23.250059127807617
    9. 'len' → logprob: -23.500059127807617
    10. ',' → logprob: -23.625059127807617

Token 370: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10029508918523788
    2. 'and' → logprob: -2.350295066833496
    3. '   ' → logprob: -9.975295066833496
    4. ':
' → logprob: -10.475295066833496
    5. ':' → logprob: -11.350295066833496
    6. '	and' → logprob: -14.225295066833496
    7. '```' → logprob: -14.975295066833496
    8. '       ' → logprob: -15.225295066833496
    9. ' ' → logprob: -15.225295066833496
    10. '<|end|>' → logprob: -16.600296020507812

Token 371: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7367269396781921
    2. '       ' → logprob: -1.486726999282837
    3. '   ' → logprob: -1.611726999282837
    4. 'and' → logprob: -2.736726999282837
    5. 'dead' → logprob: -3.861726999282837
    6. ' dead' → logprob: -4.736726760864258
    7. '_dead' → logprob: -8.236726760864258
    8. '```' → logprob: -8.361726760864258
    9. ' if' → logprob: -8.486726760864258
    10. '(dead' → logprob: -8.736726760864258

Token 372: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.036075543612241745
    2. 'all' → logprob: -3.9110755920410156
    3. 'available' → logprob: -5.536075592041016
    4. 'can' → logprob: -6.036075592041016
    5. 'possible' → logprob: -6.161075592041016
    6. 'no' → logprob: -6.411075592041016
    7. '#' (adapté à ' #') → logprob: -6.661075592041016
    8. 'dead' → logprob: -6.786075592041016
    9. '   ' → logprob: -6.911075592041016
    10. 'for' → logprob: -7.786075592041016

Token 373: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0868203267455101
    2. 'can' → logprob: -3.586820363998413
    3. 'all' → logprob: -3.961820363998413
    4. 'possible' → logprob: -4.836820125579834
    5. 'dead' → logprob: -4.961820125579834
    6. '#' → logprob: -5.086820125579834
    7. 'print' → logprob: -5.836820125579834
    8. 'available' → logprob: -6.211820125579834
    9. 'no' → logprob: -6.336820125579834
    10. 'waiting' → logprob: -6.586820125579834

Token 374: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8828286528587341
    2. 'i' → logprob: -1.632828712463379
    3. 'j' → logprob: -2.007828712463379
    4. '_' → logprob: -2.257828712463379
    5. 'proc' → logprob: -3.132828712463379
    6. 'res' → logprob: -4.007828712463379
    7. '_all' → logprob: -4.132828712463379
    8. 'dead' → logprob: -4.507828712463379
    9. 'available' → logprob: -4.632828712463379
    10. ' all' → logprob: -4.632828712463379

Token 375: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009337624534964561
    2. ' i' → logprob: -5.634337425231934
    3. 'not' → logprob: -6.134337425231934
    4. 'process' → logprob: -6.509337425231934
    5. ' processes' → logprob: -7.259337425231934
    6. ' not' → logprob: -7.384337425231934
    7. '   ' → logprob: -7.759337425231934
    8. 'j' → logprob: -9.759337425231934
    9. 'unfinished' → logprob: -9.759337425231934
    10. 'finished' → logprob: -10.009337425231934

Token 376: '-f' (ID: 3002)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.00505586015060544
    2. ' finished' → logprob: -5.505055904388428
    3. 'inished' → logprob: -7.130055904388428
    4. '   ' → logprob: -9.75505542755127
    5. '       ' → logprob: -9.88005542755127
    6. '_finished' → logprob: -10.88005542755127
    7. '           ' → logprob: -11.25505542755127
    8. '```' → logprob: -11.88005542755127
    9. 'fin' → logprob: -12.00505542755127
    10. '               ' → logprob: -12.13005542755127

Token 377: 'inished' (ID: 67941)
  Prédit: 'inished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inished' → logprob: -0.0037372526712715626
    2. 'finished' → logprob: -5.628737449645996
    3. 'ished' → logprob: -9.128737449645996
    4. 'in' → logprob: -11.253737449645996
    5. ' finished' → logprob: -12.128737449645996
    6. 'inish' → logprob: -13.003737449645996
    7. 'i' → logprob: -13.253737449645996
    8. '   ' → logprob: -13.503737449645996
    9. '_finished' → logprob: -13.753737449645996
    10. 'insi' → logprob: -13.878737449645996

Token 378: ' processes' (ID: 14340)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.647687554359436
    2. 'process' → logprob: -1.272687554359436
    3. ' processes' → logprob: -1.897687554359436
    4. ' i' → logprob: -3.6476874351501465
    5. '[i' → logprob: -4.2726874351501465
    6. '   ' → logprob: -5.3976874351501465
    7. ' process' → logprob: -7.0226874351501465
    8. '       ' → logprob: -7.7726874351501465
    9. '
' → logprob: -8.022687911987305
    10. 'proc' → logprob: -9.397687911987305

Token 379: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31002286076545715
    2. '           ' → logprob: -2.4350228309631348
    3. ',' → logprob: -2.8100228309631348
    4. ' and' → logprob: -2.9350228309631348
    5. 'and' → logprob: -3.3100228309631348
    6. ':' → logprob: -3.9350228309631348
    7. ':
' → logprob: -5.685022830963135
    8. '   ' → logprob: -5.935022830963135
    9. ' if' → logprob: -6.685022830963135
    10. 'if' → logprob: -7.310022830963135

Token 380: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10127167403697968
    2. 'can' → logprob: -2.601271629333496
    3. ' if' → logprob: -4.226271629333496
    4. ' can' → logprob: -6.101271629333496
    5. '       ' → logprob: -6.226271629333496
    6. 'possible' → logprob: -6.601271629333496
    7. 'all' → logprob: -7.726271629333496
    8. 'no' → logprob: -8.101271629333496
    9. 'dead' → logprob: -8.601271629333496
    10. '           ' → logprob: -8.851271629333496

Token 381: ' none' (ID: 12698)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.17865701019763947
    2. 'all' → logprob: -2.053657054901123
    3. ' not' → logprob: -4.053657054901123
    4. 'can' → logprob: -4.178657054901123
    5. ' all' → logprob: -6.553657054901123
    6. 'any' → logprob: -7.928657054901123
    7. 'remaining' → logprob: -8.053656578063965
    8. 'cannot' → logprob: -8.303656578063965
    9. ' can' → logprob: -9.303656578063965
    10. '(not' → logprob: -10.053656578063965

Token 382: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.17482423782348633
    2. ' can' → logprob: -1.9248242378234863
    3. '(can' → logprob: -4.299824237823486
    4. '[' → logprob: -8.924823760986328
    5. ' in' → logprob: -9.049823760986328
    6. '   ' → logprob: -9.174823760986328
    7. '           ' → logprob: -9.424823760986328
    8. ' of' → logprob: -9.674823760986328
    9. '       ' → logprob: -9.799823760986328
    10. '(' → logprob: -9.799823760986328

Token 383: ' finish' (ID: 9115)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.2197479009628296
    2. 'finish' → logprob: -1.7197479009628296
    3. ' can' → logprob: -4.594748020172119
    4. ' finish' → logprob: -5.219748020172119
    5. '_finish' → logprob: -6.094748020172119
    6. '(can' → logprob: -9.219747543334961
    7. 'fin' → logprob: -9.594747543334961
    8. '   ' → logprob: -10.469747543334961
    9. '
' → logprob: -10.719747543334961
    10. ' ' → logprob: -10.969747543334961

Token 384: ' under' (ID: 1641)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7746964693069458
    2. ' and' → logprob: -1.2746964693069458
    3. '       ' → logprob: -2.3996963500976562
    4. 'and' → logprob: -2.6496963500976562
    5. '           ' → logprob: -3.2746963500976562
    6. ':' → logprob: -3.3996963500976562
    7. ':
' → logprob: -4.149696350097656
    8. ' or' → logprob: -6.149696350097656
    9. '():
' → logprob: -6.399696350097656
    10. '   ' → logprob: -6.774696350097656

Token 385: ' current' (ID: 2208)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.30952322483062744
    2. 'True' → logprob: -1.5595232248306274
    3. 'can' → logprob: -4.184523105621338
    4. ' True' → logprob: -4.434523105621338
    5. ' available' → logprob: -4.934523105621338
    6. 'all' → logprob: -5.434523105621338
    7. 'any' → logprob: -5.434523105621338
    8. 'False' → logprob: -5.684523105621338
    9. 'finished' → logprob: -5.809523105621338
    10. 'remaining' → logprob: -6.684523105621338

Token 386: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.006950510665774345
    2. ' available' → logprob: -5.006950378417969
    3. 'conditions' → logprob: -9.256950378417969
    4. '   ' → logprob: -10.131950378417969
    5. ' conditions' → logprob: -10.381950378417969
    6. 'availability' → logprob: -11.256950378417969
    7. '
' → logprob: -11.631950378417969
    8. '    
' → logprob: -11.631950378417969
    9. '_available' → logprob: -11.756950378417969
    10. 'remaining' → logprob: -11.881950378417969

Token 387: ' =>' (ID: 871)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3658388555049896
    2. ':' → logprob: -1.865838885307312
    3. 'resources' → logprob: -2.8658387660980225
    4. ' conditions' → logprob: -4.115839004516602
    5. ' resources' → logprob: -4.115839004516602
    6. ' and' → logprob: -4.615839004516602
    7. 'conditions' → logprob: -4.740839004516602
    8. 'and' → logprob: -4.740839004516602
    9. '[j' → logprob: -4.990839004516602
    10. '   ' → logprob: -5.365839004516602

Token 388: ' dead' (ID: 9224)
  Prédit: 'dead'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dead' → logprob: -0.45319968461990356
    2. ' dead' → logprob: -1.7031996250152588
    3. 'if' → logprob: -2.953199625015259
    4. '       ' → logprob: -3.328199625015259
    5. '           ' → logprob: -4.203199863433838
    6. 'break' → logprob: -4.328199863433838
    7. ' if' → logprob: -4.328199863433838
    8. 'progress' → logprob: -4.453199863433838
    9. '
' → logprob: -4.578199863433838
    10. 'continue' → logprob: -5.078199863433838

Token 389: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.00795651599764824
    2. 'ad' → logprob: -5.757956504821777
    3. '   ' → logprob: -6.132956504821777
    4. '       ' → logprob: -6.507956504821777
    5. 'locked' → logprob: -7.257956504821777
    6. '           ' → logprob: -9.257956504821777
    7. '
' → logprob: -9.882956504821777
    8. '_lock' → logprob: -9.882956504821777
    9. '```' → logprob: -10.007956504821777
    10. '               ' → logprob: -10.757956504821777

Token 390: ' unavoidable' (ID: 160714)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003113899379968643
    2. '           ' → logprob: -6.503113746643066
    3. '   ' → logprob: -7.878113746643066
    4. '_possible' → logprob: -8.128113746643066
    5. '_un' → logprob: -8.253113746643066
    6. ' =' → logprob: -8.878113746643066
    7. 'possible' → logprob: -9.503113746643066
    8. ',' → logprob: -9.878113746643066
    9. '        
' → logprob: -10.128113746643066
    10. ' is' → logprob: -10.628113746643066

Token 391: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019978696946054697
    2. '           ' → logprob: -7.001997947692871
    3. ':' → logprob: -8.001997947692871
    4. ' and' → logprob: -8.251997947692871
    5. '   ' → logprob: -8.251997947692871
    6. ',' → logprob: -9.251997947692871
    7. ' if' → logprob: -10.376997947692871
    8. 'and' → logprob: -10.376997947692871
    9. 'if' → logprob: -10.626997947692871
    10. ':
' → logprob: -11.876997947692871

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02626233547925949
    2. ' if' → logprob: -4.026262283325195
    3. '   ' → logprob: -5.151262283325195
    4. 'if' → logprob: -6.151262283325195
    5. '           ' → logprob: -9.401262283325195
    6. ' dead' → logprob: -10.526262283325195
    7. ' all' → logprob: -11.651262283325195
    8. 'all' → logprob: -11.776262283325195
    9. '```' → logprob: -12.651262283325195
    10. ' ' → logprob: -12.901262283325195

Token 393: ' dead' (ID: 9224)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0026661460287868977
    2. '       ' → logprob: -6.502665996551514
    3. ' if' → logprob: -7.252665996551514
    4. 'all' → logprob: -8.502666473388672
    5. '   ' → logprob: -9.627666473388672
    6. 'dead' (adapté à ' dead') → logprob: -9.627666473388672
    7. 'can' → logprob: -9.752666473388672
    8. '           ' → logprob: -10.752666473388672
    9. 'no' → logprob: -10.752666473388672
    10. 'possible' → logprob: -12.002666473388672

Token 394: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.00021760274830739945
    2. 'locked' → logprob: -9.50021743774414
    3. 'locks' → logprob: -10.12521743774414
    4. '   ' → logprob: -10.50021743774414
    5. '_lock' → logprob: -10.87521743774414
    6. '       ' → logprob: -11.00021743774414
    7. 'lack' → logprob: -11.62521743774414
    8. 'l' → logprob: -11.62521743774414
    9. 'ock' → logprob: -12.37521743774414
    10. 'loop' → logprob: -13.12521743774414

Token 395: ' =' (ID: 314)
  Prédit: '_un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -0.00043400691356509924
    2. '_possible' → logprob: -8.875433921813965
    3. '_detect' → logprob: -9.375433921813965
    4. '_' → logprob: -10.125433921813965
    5. '=' → logprob: -10.125433921813965
    6. ' =' → logprob: -10.250433921813965
    7. '_occ' → logprob: -10.625433921813965
    8. '_oc' → logprob: -10.875433921813965
    9. 'un' → logprob: -11.625433921813965
    10. '_im' → logprob: -11.750433921813965

Token 396: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001749351795297116
    2. ' True' → logprob: -9.000174522399902
    3. 'all' → logprob: -10.000174522399902
    4. '   ' → logprob: -12.750174522399902
    5. 'not' → logprob: -13.125174522399902
    6. 'False' → logprob: -13.875174522399902
    7. 'true' → logprob: -16.50017547607422
    8. '       ' → logprob: -17.37517547607422
    9. '(True' → logprob: -17.75017547607422
    10. ' all' → logprob: -17.87517547607422

Token 397: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015855696983635426
    2. ' for' → logprob: -7.126585483551025
    3. 'for' → logprob: -7.376585483551025
    4. '   ' → logprob: -9.126585960388184
    5. '           ' → logprob: -10.751585960388184
    6. '
' → logprob: -12.001585960388184
    7. ',' → logprob: -12.501585960388184
    8. '        
' → logprob: -12.626585960388184
    9. '               ' → logprob: -12.751585960388184
    10. '     ' → logprob: -13.751585960388184

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012906312011182308
    2. 'for' → logprob: -4.762906074523926
    3. ' for' → logprob: -5.637906074523926
    4. '   ' → logprob: -7.262906074523926
    5. '           ' → logprob: -11.512906074523926
    6. '	for' → logprob: -12.387906074523926
    7. '
' → logprob: -13.137906074523926
    8. '               ' → logprob: -13.512906074523926
    9. '	' → logprob: -13.887906074523926
    10. ' ' → logprob: -14.137906074523926

Token 399: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014565435703843832
    2. '       ' → logprob: -6.6264567375183105
    3. '   ' → logprob: -9.376456260681152
    4. ' for' → logprob: -10.001456260681152
    5. '           ' → logprob: -16.00145721435547
    6. '
' → logprob: -16.12645721435547
    7. ' ' → logprob: -16.12645721435547
    8. '	for' → logprob: -16.12645721435547
    9. '               ' → logprob: -17.50145721435547
    10. '     ' → logprob: -17.62645721435547

Token 400: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007616560440510511
    2. ' i' → logprob: -4.8826165199279785
    3. 'k' → logprob: -12.257616996765137
    4. 'proc' → logprob: -12.257616996765137
    5. 'j' → logprob: -15.257616996765137
    6. '   ' → logprob: -15.882616996765137
    7. 'x' → logprob: -15.882616996765137
    8. '
' → logprob: -16.00761604309082
    9. '	i' → logprob: -16.00761604309082
    10. '```' → logprob: -16.13261604309082

Token 401: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002476604888215661
    2. 'in' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.377476692199707
    4. '   ' → logprob: -15.627476692199707
    5. '	in' → logprob: -16.50247573852539
    6. '```' → logprob: -16.50247573852539
    7. '    ' → logprob: -17.37747573852539
    8. 'not' → logprob: -17.50247573852539
    9. '
' → logprob: -17.62747573852539
    10. 'range' → logprob: -17.75247573852539

Token 402: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023021936416626
    2. ' range' → logprob: -1.9102301597595215
    3. ' ' → logprob: -13.16023063659668
    4. '(range' → logprob: -13.53523063659668
    5. '[' → logprob: -13.91023063659668
    6. '   ' → logprob: -14.16023063659668
    7. ' [' → logprob: -15.03523063659668
    8. '    ' → logprob: -15.53523063659668
    9. ' in' → logprob: -15.91023063659668
    10. 'p' → logprob: -16.03523063659668

Token 403: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0002671768015716225
    2. 'range' → logprob: -8.375267028808594
    3. '(range' → logprob: -10.375267028808594
    4. 'p' → logprob: -12.750267028808594
    5. '(' → logprob: -13.750267028808594
    6. ' range' → logprob: -13.875267028808594
    7. ' (' → logprob: -16.250267028808594
    8. '   ' → logprob: -16.500267028808594
    9. '[p' → logprob: -16.500267028808594
    10. '(
' → logprob: -17.625267028808594

Token 404: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.015777427703142166
    2. '):' → logprob: -4.265777587890625
    3. '           ' → logprob: -7.390777587890625
    4. '       ' → logprob: -7.515777587890625
    5. ',' → logprob: -9.140777587890625
    6. '):
' → logprob: -9.265777587890625
    7. ':
' → logprob: -10.015777587890625
    8. '():
' → logprob: -10.640777587890625
    9. ':' → logprob: -10.765777587890625
    10. '   ' → logprob: -11.015777587890625

Token 405: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008377424674108624
    2. '	       ' → logprob: -7.875837802886963
    3. ' if' → logprob: -8.625837326049805
    4. '<|end|>' → logprob: -8.875837326049805
    5. '<|end|>' → logprob: -10.250837326049805
    6. '
' → logprob: -11.125837326049805
    7. ',' → logprob: -11.250837326049805
    8. '		   ' → logprob: -11.500837326049805
    9. '	           ' → logprob: -11.625837326049805
    10. '		' → logprob: -11.625837326049805

Token 406: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1320160627365112
    2. '	       ' → logprob: -1.3820160627365112
    3. '               ' → logprob: -1.5070160627365112
    4. ' if' → logprob: -2.007016181945801
    5. '	           ' → logprob: -3.507016181945801
    6. 'if' (adapté à ' if') → logprob: -4.257016181945801
    7. '		       ' → logprob: -4.757016181945801
    8. '		   ' → logprob: -5.632016181945801
    9. '		' → logprob: -6.132016181945801
    10. '       ' → logprob: -6.382016181945801

Token 407: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11289770156145096
    2. 'not' → logprob: -2.2378976345062256
    3. '(not' → logprob: -10.237897872924805
    4. '           ' → logprob: -11.112897872924805
    5. ' finished' → logprob: -11.362897872924805
    6. 'finished' → logprob: -11.987897872924805
    7. ' (' → logprob: -12.612897872924805
    8. '   ' → logprob: -14.237897872924805
    9. '               ' → logprob: -14.987897872924805
    10. ' unfinished' → logprob: -15.237897872924805

Token 408: ' finished' (ID: 11684)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.011047935113310814
    2. ' finished' → logprob: -4.511047840118408
    3. '_finished' → logprob: -16.63604736328125
    4. 'Finished' → logprob: -17.13604736328125
    5. '.finished' → logprob: -17.51104736328125
    6. 'finish' → logprob: -17.63604736328125
    7. 'fin' → logprob: -18.26104736328125
    8. '   ' → logprob: -18.51104736328125
    9. 'f' → logprob: -18.76104736328125
    10. 'dead' → logprob: -19.26104736328125

Token 409: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005289645632728934
    2. 'and' → logprob: -7.625528812408447
    3. ' and' → logprob: -10.375529289245605
    4. '[' → logprob: -12.125529289245605
    5. 'i' → logprob: -13.125529289245605
    6. ']' → logprob: -14.375529289245605
    7. ')' → logprob: -14.875529289245605
    8. '[
' → logprob: -15.000529289245605
    9. '           ' → logprob: -15.125529289245605
    10. '       ' → logprob: -15.375529289245605

Token 410: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04572036489844322
    2. ' and' → logprob: -3.545720338821411
    3. 'and' → logprob: -4.17072057723999
    4. ')' → logprob: -8.045720100402832
    5. ' ]' → logprob: -9.670720100402832
    6. ']:
' → logprob: -11.295720100402832
    7. '])' → logprob: -13.545720100402832
    8. ')]' → logprob: -13.920720100402832
    9. ']:' → logprob: -14.045720100402832
    10. '):
' → logprob: -14.545720100402832

Token 411: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25193992257118225
    2. 'and' → logprob: -1.5019398927688599
    3. ':
' → logprob: -11.75193977355957
    4. '           ' → logprob: -13.87693977355957
    5. ':' → logprob: -14.25193977355957
    6. '	and' → logprob: -14.50193977355957
    7. ' ' → logprob: -15.75193977355957
    8. '):
' → logprob: -15.75193977355957
    9. '       ' → logprob: -16.00193977355957
    10. '   ' → logprob: -16.00193977355957

Token 412: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0011829655850306153
    2. ' can' → logprob: -6.751183032989502
    3. 'not' → logprob: -12.376182556152344
    4. '   ' → logprob: -13.251182556152344
    5. '
' → logprob: -13.626182556152344
    6. '	can' → logprob: -13.626182556152344
    7. '           ' → logprob: -13.876182556152344
    8. 'remaining' → logprob: -14.126182556152344
    9. '(can' → logprob: -15.001182556152344
    10. '       ' → logprob: -15.251182556152344

Token 413: '_finish' (ID: 109520)
  Prédit: '_finish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finish' → logprob: -0.0008226146455854177
    2. 'finish' → logprob: -7.1258225440979
    3. '(i' → logprob: -11.125823020935059
    4. ' finish' → logprob: -14.250823020935059
    5. '[i' → logprob: -14.250823020935059
    6. '_continue' → logprob: -14.875823020935059
    7. 'Finish' → logprob: -15.500823020935059
    8. 'can' → logprob: -15.500823020935059
    9. 'i' → logprob: -15.750823020935059
    10. '
' → logprob: -15.750823020935059

Token 414: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.3663626305060461e-05
    2. ' (' → logprob: -11.50001335144043
    3. '(' → logprob: -12.62501335144043
    4. '(
' → logprob: -16.00001335144043
    5. '
' → logprob: -17.62501335144043
    6. '[i' → logprob: -17.62501335144043
    7. ')' → logprob: -18.87501335144043
    8. '(ii' → logprob: -19.25001335144043
    9. ' ' → logprob: -19.50001335144043
    10. '   ' → logprob: -19.75001335144043

Token 415: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2521539330482483
    2. '):' → logprob: -1.5021538734436035
    3. '():
' → logprob: -9.127154350280762
    4. ')' → logprob: -9.877154350280762
    5. '()):
' → logprob: -10.502154350280762
    6. '(i' → logprob: -11.252154350280762
    7. '):

' → logprob: -12.252154350280762
    8. '):
' → logprob: -12.252154350280762
    9. '[i' → logprob: -12.502154350280762
    10. '           ' → logprob: -13.252154350280762

Token 416: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.036082442849874496
    2. ' dead' → logprob: -4.0360822677612305
    3. 'dead' → logprob: -4.5360822677612305
    4. '           ' → logprob: -5.0360822677612305
    5. '                   ' → logprob: -8.28608226776123
    6. '
' → logprob: -9.28608226776123
    7. '              ' → logprob: -9.66108226776123
    8. '                
' → logprob: -10.78608226776123
    9. '             ' → logprob: -10.91108226776123
    10. ':
' → logprob: -11.03608226776123

Token 417: ' dead' (ID: 9224)
  Prédit: 'dead'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dead' (adapté à ' dead') → logprob: -0.4744955897331238
    2. ' dead' → logprob: -0.9744955897331238
    3. '               ' → logprob: -7.9744954109191895
    4. '                   ' → logprob: -9.974495887756348
    5. '           ' → logprob: -10.849495887756348
    6. '_dead' → logprob: -13.099495887756348
    7. '   ' → logprob: -13.349495887756348
    8. '
' → logprob: -13.349495887756348
    9. '.dead' → logprob: -13.349495887756348
    10. '(dead' → logprob: -14.349495887756348

Token 418: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.00745589192956686
    2. '               ' → logprob: -5.007455825805664
    3. 'ock' → logprob: -7.632455825805664
    4. '           ' → logprob: -9.132455825805664
    5. '                   ' → logprob: -10.882455825805664
    6. 'l' → logprob: -11.007455825805664
    7. '              ' → logprob: -11.132455825805664
    8. 'locked' → logprob: -11.132455825805664
    9. '       ' → logprob: -11.382455825805664
    10. '=False' → logprob: -11.507455825805664

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38691946864128113
    2. ' =' → logprob: -1.1369194984436035
    3. '=False' → logprob: -10.011919021606445
    4. '           ' → logprob: -13.886919021606445
    5. '=
' → logprob: -14.011919021606445
    6. '=True' → logprob: -14.386919021606445
    7. '               ' → logprob: -14.386919021606445
    8. '=false' → logprob: -15.511919021606445
    9. '                   ' → logprob: -15.761919021606445
    10. '       ' → logprob: -15.886919021606445

Token 420: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.5491004129871726e-05
    2. ' False' → logprob: -10.000045776367188
    3. '=False' → logprob: -17.250045776367188
    4. '(False' → logprob: -19.375045776367188
    5. '   ' → logprob: -19.750045776367188
    6. 'false' → logprob: -20.375045776367188
    7. 'True' → logprob: -21.875045776367188
    8. '.False' → logprob: -22.500045776367188
    9. '_false' → logprob: -23.125045776367188
    10. '       ' → logprob: -23.375045776367188

Token 421: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00028946425300091505
    2. '       ' → logprob: -8.250289916992188
    3. '           ' → logprob: -11.125289916992188
    4. '                   ' → logprob: -12.375289916992188
    5. 'break' → logprob: -12.875289916992188
    6. '   ' → logprob: -13.250289916992188
    7. ' break' → logprob: -13.500289916992188
    8. '              ' → logprob: -13.750289916992188
    9. '
' → logprob: -14.375289916992188
    10. '		       ' → logprob: -14.500289916992188

Token 422: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004723583813756704
    2. '       ' → logprob: -5.37972354888916
    3. '           ' → logprob: -10.75472354888916
    4. '		       ' → logprob: -11.00472354888916
    5. '   ' → logprob: -11.12972354888916
    6. '			' → logprob: -11.25472354888916
    7. 'break' → logprob: -11.62972354888916
    8. '	' → logprob: -11.75472354888916
    9. '	break' → logprob: -12.50472354888916
    10. '                   ' → logprob: -12.75472354888916

Token 423: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23277637362480164
    2. 'break' (adapté à ' break') → logprob: -1.732776403427124
    3. ' break' → logprob: -3.482776403427124
    4. '	break' → logprob: -9.732776641845703
    5. '			' → logprob: -10.107776641845703
    6. '                   ' → logprob: -10.982776641845703
    7. '           ' → logprob: -10.982776641845703
    8. '       ' → logprob: -11.482776641845703
    9. '	           ' → logprob: -13.482776641845703
    10. '		       ' → logprob: -13.482776641845703

Token 424: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19696703553199768
    2. '       ' → logprob: -1.8219670057296753
    3. '
' → logprob: -4.196967124938965
    4. 'if' → logprob: -6.446967124938965
    5. ' if' → logprob: -8.571967124938965
    6. '    
' → logprob: -9.446967124938965
    7. '<|end|>' → logprob: -9.821967124938965
    8. ',' → logprob: -10.071967124938965
    9. '```' → logprob: -10.821967124938965
    10. '        
' → logprob: -10.821967124938965

Token 425: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1267235428094864
    2. 'if' → logprob: -2.501723527908325
    3. '       ' → logprob: -3.626723527908325
    4. ' if' → logprob: -4.626723766326904
    5. '
' → logprob: -7.376723766326904
    6. '```' → logprob: -10.376723289489746
    7. '    
' → logprob: -12.251723289489746
    8. 'else' → logprob: -12.501723289489746
    9. '<|end|>' → logprob: -12.501723289489746
    10. ')' → logprob: -12.626723289489746

Token 426: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16101616621017456
    2. 'if' (adapté à ' if') → logprob: -1.9110162258148193
    3. ' if' → logprob: -7.28601598739624
    4. '       ' → logprob: -9.286016464233398
    5. '
' → logprob: -11.911016464233398
    6. '```' → logprob: -13.036016464233398
    7. '	if' → logprob: -13.286016464233398
    8. '    
' → logprob: -13.911016464233398
    9. ' ' → logprob: -14.036016464233398
    10. ')' → logprob: -14.536016464233398

Token 427: ' dead' (ID: 9224)
  Prédit: ' dead'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dead' → logprob: -0.1429193615913391
    2. 'dead' → logprob: -2.0179193019866943
    3. ' not' → logprob: -8.517919540405273
    4. '       ' → logprob: -11.142919540405273
    5. '   ' → logprob: -11.267919540405273
    6. 'not' → logprob: -11.392919540405273
    7. '    ' → logprob: -13.767919540405273
    8. '           ' → logprob: -14.267919540405273
    9. '(dead' → logprob: -14.392919540405273
    10. ' ' → logprob: -14.392919540405273

Token 428: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -1.7954958821064793e-05
    2. 'locked' → logprob: -11.750018119812012
    3. 'lack' → logprob: -12.750018119812012
    4. '_lock' → logprob: -13.250018119812012
    5. 'ock' → logprob: -13.625018119812012
    6. 'lo' → logprob: -13.625018119812012
    7. 'l' → logprob: -14.125018119812012
    8. ' lock' → logprob: -15.000018119812012
    9. 'locks' → logprob: -15.000018119812012
    10. '   ' → logprob: -15.250018119812012

Token 429: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3958144187927246
    2. ':
' → logprob: -1.1458144187927246
    3. ' ==' → logprob: -5.395814418792725
    4. '           ' → logprob: -6.145814418792725
    5. ' and' → logprob: -7.020814418792725
    6. '==' → logprob: -7.270814418792725
    7. '   ' → logprob: -8.020814895629883
    8. '       ' → logprob: -8.395814895629883
    9. ' =' → logprob: -10.895814895629883
    10. '=' → logprob: -11.395814895629883

Token 430: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04118121415376663
    2. '       ' → logprob: -4.0411810874938965
    3. ' dead' → logprob: -4.4161810874938965
    4. 'dead' → logprob: -4.5411810874938965
    5. '           ' → logprob: -11.291181564331055
    6. '_dead' → logprob: -12.291181564331055
    7. '(dead' → logprob: -12.416181564331055
    8. '.dead' → logprob: -13.291181564331055
    9. '```' → logprob: -13.666181564331055
    10. '
' → logprob: -14.166181564331055

Token 431: ' dead' (ID: 9224)
  Prédit: 'dead'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dead' (adapté à ' dead') → logprob: -0.005403557792305946
    2. ' dead' → logprob: -5.255403518676758
    3. '   ' → logprob: -8.755403518676758
    4. 'print' → logprob: -12.255403518676758
    5. '           ' → logprob: -12.755403518676758
    6. '       ' → logprob: -13.005403518676758
    7. '(dead' → logprob: -13.630403518676758
    8. '
' → logprob: -14.255403518676758
    9. '_dead' → logprob: -15.630403518676758
    10. '               ' → logprob: -16.380403518676758

Token 432: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -6.704273118884885e-07
    2. 'locked' → logprob: -14.750000953674316
    3. '_lock' → logprob: -16.5
    4. 'l' → logprob: -17.25
    5. 'lo' → logprob: -17.5
    6. 'ock' → logprob: -18.0
    7. 'locks' → logprob: -18.625
    8. 'clock' → logprob: -18.75
    9. '.lock' → logprob: -19.25
    10. '   ' → logprob: -19.375

Token 433: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -1.6240566083070007e-06
    2. '_time' → logprob: -13.625001907348633
    3. 'un' → logprob: -15.500001907348633
    4. '_dead' → logprob: -17.250001907348633
    5. '_' → logprob: -17.625001907348633
    6. '_unref' → logprob: -17.875001907348633
    7. '_uns' → logprob: -18.375001907348633
    8. '_Un' → logprob: -18.875001907348633
    9. '_unc' → logprob: -19.125001907348633
    10. '_possible' → logprob: -19.250001907348633

Token 434: 'avoidable' (ID: 154916)
  Prédit: 'avoidable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoidable' → logprob: -0.0007435183506458998
    2. 'avoid' → logprob: -7.875743389129639
    3. 'available' → logprob: -8.625743865966797
    4. 'avo' → logprob: -9.250743865966797
    5. 'ava' → logprob: -10.375743865966797
    6. 'void' → logprob: -11.500743865966797
    7. 'av' → logprob: -11.500743865966797
    8. 'reachable' → logprob: -11.750743865966797
    9. 'avai' → logprob: -11.875743865966797
    10. 'o' → logprob: -12.375743865966797

Token 435: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.184812031686306e-05
    2. '=' → logprob: -10.250082015991211
    3. ' =' → logprob: -10.375082015991211
    4. '=_' → logprob: -11.250082015991211
    5. '_t' → logprob: -13.500082015991211
    6. '_' → logprob: -14.875082015991211
    7. '_times' → logprob: -16.00008201599121
    8. 'time' → logprob: -16.25008201599121
    9. '   ' → logprob: -16.87508201599121
    10. '=True' → logprob: -17.12508201599121

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. '=time' → logprob: -16.063261032104492
    4. '＝' → logprob: -18.938261032104492
    5. '=end' → logprob: -19.063261032104492
    6. ' ' → logprob: -19.313261032104492
    7. '=cut' → logprob: -19.438261032104492
    8. '=data' → logprob: -19.938261032104492
    9. '=t' → logprob: -20.438261032104492
    10. '+=' → logprob: -20.688261032104492

Token 437: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0002613358374219388
    2. ' time' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.875261306762695
    4. '	time' → logprob: -20.125261306762695
    5. 't' → logprob: -21.125261306762695
    6. '=time' → logprob: -21.625261306762695
    7. '"time' → logprob: -22.000261306762695
    8. '(time' → logprob: -22.250261306762695
    9. '*time' → logprob: -22.625261306762695
    10. 'Time' → logprob: -23.375261306762695

Token 438: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009737196378409863
    2. '   ' → logprob: -5.009737014770508
    3. '       ' → logprob: -6.259737014770508
    4. '		' → logprob: -8.009737014770508
    5. '<|end|>' → logprob: -8.384737014770508
    6. '
' → logprob: -9.009737014770508
    7. '               ' → logprob: -9.384737014770508
    8. ',' → logprob: -9.634737014770508
    9. 'print' → logprob: -10.134737014770508
    10. '          ' → logprob: -10.509737014770508

Token 439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022687431424856186
    2. '   ' → logprob: -4.0226874351501465
    3. '       ' → logprob: -5.5226874351501465
    4. '```' → logprob: -8.272686958312988
    5. 'break' → logprob: -9.022686958312988
    6. 'print' → logprob: -9.647686958312988
    7. '               ' → logprob: -10.647686958312988
    8. ' break' → logprob: -11.147686958312988
    9. '<|end|>' → logprob: -11.897686958312988
    10. ' ' → logprob: -12.022686958312988

Token 440: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.02105504274368286
    2. '           ' → logprob: -4.271055221557617
    3. ' break' → logprob: -5.021055221557617
    4. '   ' → logprob: -8.646055221557617
    5. 'print' → logprob: -9.646055221557617
    6. '       ' → logprob: -10.521055221557617
    7. '	break' → logprob: -13.021055221557617
    8. '
' → logprob: -15.146055221557617
    9. '               ' → logprob: -15.646055221557617
    10. ' print' → logprob: -16.396055221557617

Token 441: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009725751355290413
    2. 'if' → logprob: -5.134725570678711
    3. '
' → logprob: -5.759725570678711
    4. '#' → logprob: -8.384725570678711
    5. 'else' → logprob: -9.009725570678711
    6. '```' → logprob: -9.259725570678711
    7. ')' → logprob: -9.509725570678711
    8. ' print' → logprob: -9.884725570678711
    9. '<|end|>' → logprob: -10.759725570678711
    10. ' if' → logprob: -11.384725570678711

Token 442: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: '(dead' (ID: 178557)
  Prédit: '(dead'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dead' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -11.75001335144043
    3. 'dead' → logprob: -12.62501335144043
    4. '(-' → logprob: -14.12501335144043
    5. '('' → logprob: -14.75001335144043
    6. '(f' → logprob: -15.25001335144043
    7. '(d' → logprob: -16.25001335144043
    8. '("' → logprob: -16.62501335144043
    9. '(abs' → logprob: -16.75001335144043
    10. '((' → logprob: -16.75001335144043

Token 444: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -2.2200749754119897e-06
    2. '_lock' → logprob: -13.875001907348633
    3. 'locked' → logprob: -14.625001907348633
    4. 'lo' → logprob: -15.250001907348633
    5. 'lack' → logprob: -15.625001907348633
    6. 'print' → logprob: -16.875001907348633
    7. 'locker' → logprob: -16.875001907348633
    8. '(lock' → logprob: -17.000001907348633
    9. 'locks' → logprob: -17.125001907348633
    10. 'l' → logprob: -17.750001907348633

Token 445: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: 0.0
    2. 'un' → logprob: -17.125
    3. '_uns' → logprob: -18.125
    4. ')' → logprob: -18.5
    5. '_' → logprob: -18.625
    6. '_UN' → logprob: -18.875
    7. '_unc' → logprob: -19.375
    8. '_)' → logprob: -19.625
    9. '_time' → logprob: -19.875
    10. ')_' → logprob: -20.0

Token 446: 'avoidable' (ID: 154916)
  Prédit: 'avoidable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoidable' → logprob: -7.874882430769503e-05
    2. 'av' → logprob: -10.375079154968262
    3. 'avo' → logprob: -10.625079154968262
    4. 'avoid' → logprob: -11.125079154968262
    5. 'avorable' → logprob: -13.125079154968262
    6. 'ava' → logprob: -13.625079154968262
    7. 'available' → logprob: -14.000079154968262
    8. 'void' → logprob: -14.500079154968262
    9. 'o' → logprob: -14.750079154968262
    10. 'processable' → logprob: -15.125079154968262

Token 447: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0005093070212751627
    2. 'time' → logprob: -7.750509262084961
    3. '_' → logprob: -10.875509262084961
    4. 'ness' → logprob: -10.875509262084961
    5. 't' → logprob: -11.750509262084961
    6. 's' → logprob: -11.875509262084961
    7. '_t' → logprob: -12.125509262084961
    8. 'ess' → logprob: -12.250509262084961
    9. '_status' → logprob: -12.500509262084961
    10. '_times' → logprob: -12.875509262084961

Token 448: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')`' → logprob: -16.5
    3. ' )' → logprob: -16.625
    4. ')
' → logprob: -17.5
    5. ' if' → logprob: -18.625
    6. '))' → logprob: -18.75
    7. '),' → logprob: -19.875
    8. '`)' → logprob: -20.0
    9. ')#' → logprob: -20.125
    10. '())' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 446
Tokens correctement prédits (1ère position, stricte): 162
Tokens correctement prédits (1ère position, avec adaptation): 178
Tokens correctement prédits (top 10): 355
Précision stricte (1ère position): 36.32%
Précision adaptée (1ère position): 39.91%
Précision (top 10): 79.60%
================================================================================
