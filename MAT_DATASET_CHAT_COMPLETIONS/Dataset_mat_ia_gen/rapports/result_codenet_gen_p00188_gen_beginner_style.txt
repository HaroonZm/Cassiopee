================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    arr = []
    for _ in range(n):
        arr.append(int(input()))
    k = int(input())
    left = 0
    right = n - 1
    count = 0
    while left <= right:
        mid = (left + right) // 2
        count += 1
        if arr[mid] == k:
            break
        elif k < arr[mid]:
            right = mid - 1
        else:
            left = mid + 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37804487347602844
    2. '\n' → logprob: -2.503044843673706
    3. '    ' → logprob: -2.753044843673706
    4. '\' → logprob: -3.253044843673706
    5. ' 
' → logprob: -3.628044843673706
    6. ' ' → logprob: -3.628044843673706
    7. '    
' → logprob: -3.753044843673706
    8. '```' → logprob: -4.503045082092285
    9. '<|end|>' → logprob: -4.628045082092285
    10. '     
' → logprob: -5.128045082092285

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13922753930091858
    2. '    ' → logprob: -2.2642276287078857
    3. ' ' → logprob: -4.639227390289307
    4. '```' → logprob: -5.014227390289307
    5. '       ' → logprob: -5.639227390289307
    6. '    
' → logprob: -6.389227390289307
    7. '  ' → logprob: -6.764227390289307
    8. 'pass' → logprob: -7.764227390289307
    9. ' 
' → logprob: -8.139227867126465
    10. 'i' → logprob: -8.389227867126465

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8705378770828247
    2. '=' → logprob: -1.4955378770828247
    3. 'u' → logprob: -1.9955378770828247
    4. '   ' → logprob: -2.745537757873535
    5. 'o' → logprob: -3.245537757873535
    6. '+' → logprob: -3.745537757873535
    7. '_' → logprob: -4.245537757873535
    8. '>' → logprob: -4.245537757873535
    9. ' =' → logprob: -4.370537757873535
    10. '  ' → logprob: -4.620537757873535

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2919977307319641
    2. ' input' → logprob: -1.5419976711273193
    3. 'input' → logprob: -3.6669976711273193
    4. 'int' → logprob: -4.416997909545898
    5. ' n' → logprob: -7.041997909545898
    6. ' ' → logprob: -7.666997909545898
    7. ' randint' → logprob: -9.666997909545898
    8. 'n' → logprob: -10.291997909545898
    9. ' i' → logprob: -10.541997909545898
    10. '1' → logprob: -11.041997909545898

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789412334561348
    2. '(input' → logprob: -2.5789413452148438
    3. '(n' → logprob: -10.703941345214844
    4. '()' → logprob: -11.953941345214844
    5. '(
' → logprob: -12.203941345214844
    6. '('' → logprob: -12.328941345214844
    7. '(user' → logprob: -13.203941345214844
    8. 'input' → logprob: -13.453941345214844
    9. '(range' → logprob: -13.703941345214844
    10. ' (' → logprob: -13.953941345214844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12421323359012604
    2. ')' → logprob: -2.499213218688965
    3. '()' → logprob: -3.624213218688965
    4. '())' → logprob: -5.124213218688965
    5. '))' → logprob: -6.999213218688965
    6. '(
' → logprob: -8.249213218688965
    7. '()))' → logprob: -8.749213218688965
    8. '('' → logprob: -8.749213218688965
    9. ' ' → logprob: -9.249213218688965
    10. '```' → logprob: -9.749213218688965

Token 9: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7105682492256165
    2. '   ' → logprob: -1.0855681896209717
    3. ' ' → logprob: -2.7105681896209717
    4. '    ' → logprob: -3.4605681896209717
    5. 'if' (adapté à ' if') → logprob: -3.4605681896209717
    6. ')' → logprob: -4.460568428039551
    7. '  ' → logprob: -4.835568428039551
    8. ':' → logprob: -5.835568428039551
    9. '\n' → logprob: -6.210568428039551
    10. ' )' → logprob: -6.335568428039551

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0003045994380954653
    2. 'n' → logprob: -8.875304222106934
    3. ' not' → logprob: -9.250304222106934
    4. ' ' → logprob: -9.625304222106934
    5. ' ' → logprob: -13.000304222106934
    6. 'not' → logprob: -16.62530517578125
    7. ' (' → logprob: -17.00030517578125
    8. '	n' → logprob: -17.25030517578125
    9. '<|end|>' → logprob: -17.37530517578125
    10. '(n' → logprob: -17.75030517578125

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3223670423030853
    2. ' >' → logprob: -2.072366952896118
    3. ' <=' → logprob: -2.447366952896118
    4. ' <' → logprob: -3.572366952896118
    5. '==' → logprob: -3.822366952896118
    6. '>' → logprob: -5.197367191314697
    7. ' ' → logprob: -5.447367191314697
    8. ' >=' → logprob: -7.197367191314697
    9. '<=' → logprob: -7.197367191314697
    10. '<' → logprob: -7.447367191314697

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.126935675740242
    2. '0' → logprob: -2.1269357204437256
    3. ' ' → logprob: -13.001935958862305
    4. '1' → logprob: -13.626935958862305
    5. ' -' → logprob: -14.314435958862305
    6. '100' → logprob: -15.126935958862305
    7. '10' → logprob: -15.126935958862305
    8. '  ' → logprob: -15.189435958862305
    9. ')' → logprob: -15.501935958862305
    10. '=' → logprob: -15.626935958862305

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022028323728591204
    2. ' ' → logprob: -6.127202987670898
    3. '-' → logprob: -11.252202987670898
    4. '1' → logprob: -13.502202987670898
    5. ' -' → logprob: -13.627202987670898
    6. '42' → logprob: -14.252202987670898
    7. '   ' → logprob: -14.377202987670898
    8. '  ' → logprob: -15.502202987670898
    9. '```' → logprob: -15.877202987670898
    10. '    ' → logprob: -16.0022029876709

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.023293538717553e-05
    2. ':
' → logprob: -11.250030517578125
    3. '   ' → logprob: -12.125030517578125
    4. ' :' → logprob: -12.250030517578125
    5. '       ' → logprob: -13.250030517578125
    6. ':return' → logprob: -13.250030517578125
    7. '):' → logprob: -13.625030517578125
    8. ':\' → logprob: -14.000030517578125
    9. '    ' → logprob: -15.000030517578125
    10. '():' → logprob: -15.500030517578125

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006626377580687404
    2. ' break' → logprob: -8.125662803649902
    3. '   ' → logprob: -8.750662803649902
    4. '\n' → logprob: -9.500662803649902
    5. ':' → logprob: -10.250662803649902
    6. '    ' → logprob: -10.875662803649902
    7. '\' → logprob: -11.125662803649902
    8. '	break' → logprob: -11.125662803649902
    9. '      ' → logprob: -11.750662803649902
    10. '        ' → logprob: -12.125662803649902

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014878070913255215
    2. '       ' → logprob: -4.514878273010254
    3. 'break' (adapté à ' break') → logprob: -5.889878273010254
    4. '   ' → logprob: -7.264878273010254
    5. '\n' → logprob: -8.889878273010254
    6. '	break' → logprob: -9.014878273010254
    7. '    ' → logprob: -10.764878273010254
    8. '```' → logprob: -10.764878273010254
    9. '_break' → logprob: -11.514878273010254
    10. ' ' → logprob: -11.514878273010254

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4790402054786682
    2. '\n' → logprob: -1.6040401458740234
    3. ':' → logprob: -2.2290401458740234
    4. '    
' → logprob: -4.229040145874023
    5. '\' → logprob: -4.479040145874023
    6. '<|end|>' → logprob: -4.604040145874023
    7. '#' → logprob: -5.229040145874023
    8. ' ' → logprob: -5.479040145874023
    9. '\r' → logprob: -5.479040145874023
    10. ' 
' → logprob: -5.479040145874023

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7498542666435242
    2. '\n' → logprob: -1.624854326248169
    3. '<|end|>' → logprob: -1.624854326248169
    4. '    
' → logprob: -3.249854326248169
    5. '\' → logprob: -3.874854326248169
    6. '```' → logprob: -3.999854326248169
    7. '
' → logprob: -4.12485408782959
    8. '#' → logprob: -4.24985408782959
    9. ':' → logprob: -5.12485408782959
    10. ')' → logprob: -5.87485408782959

Token 20: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3405855596065521
    2. ' ' → logprob: -2.590585470199585
    3. '<|end|>' → logprob: -2.590585470199585
    4. '\n' → logprob: -3.590585470199585
    5. ')' → logprob: -3.840585470199585
    6. 'n' → logprob: -4.215585708618164
    7. '    ' → logprob: -4.340585708618164
    8. '\' → logprob: -4.590585708618164
    9. 'print' → logprob: -4.715585708618164
    10. ':' → logprob: -5.090585708618164

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16173945367336273
    2. ' =' → logprob: -2.6617393493652344
    3. '.' → logprob: -3.2867393493652344
    4. '.append' → logprob: -3.9117393493652344
    5. '=' → logprob: -4.411739349365234
    6. '[:]' → logprob: -5.286739349365234
    7. '[]' → logprob: -6.161739349365234
    8. '=[]' → logprob: -7.661739349365234
    9. '.setdefault' → logprob: -7.661739349365234
    10. '[i' → logprob: -8.286739349365234

Token 22: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1297939121723175
    2. ' [' → logprob: -2.879793882369995
    3. '[]' → logprob: -3.004793882369995
    4. ' list' → logprob: -4.629794120788574
    5. '[' → logprob: -5.254794120788574
    6. 'list' → logprob: -7.004794120788574
    7. '[list' → logprob: -10.254794120788574
    8. '[input' → logprob: -10.754794120788574
    9. ' ' → logprob: -10.879794120788574
    10. ' [[]' → logprob: -11.629794120788574

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4552924633026123
    2. '<|end|>' → logprob: -1.3302924633026123
    3. '[' → logprob: -2.9552924633026123
    4. '    ' → logprob: -4.580292701721191
    5. '\' → logprob: -4.580292701721191
    6. ' ' → logprob: -4.705292701721191
    7. 'for' → logprob: -5.580292701721191
    8. '    
' → logprob: -5.830292701721191
    9. '<|end|>' → logprob: -5.955292701721191
    10. ' for' → logprob: -5.955292701721191

Token 24: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.406086266040802
    2. ' for' → logprob: -1.4060862064361572
    3. '   ' → logprob: -2.7810862064361572
    4. ' ' → logprob: -4.406086444854736
    5. '	for' → logprob: -5.281086444854736
    6. '[' → logprob: -5.656086444854736
    7. '    ' → logprob: -6.031086444854736
    8. '\t' → logprob: -6.531086444854736
    9. 'n' → logprob: -8.156085968017578
    10. '<|end|>' → logprob: -8.156085968017578

Token 25: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15420854091644287
    2. ' _' → logprob: -2.6542086601257324
    3. ' ' → logprob: -2.7792086601257324
    4. '_' → logprob: -4.654208660125732
    5. 'i' → logprob: -7.404208660125732
    6. ' ‌' → logprob: -8.654208183288574
    7. ' range' → logprob: -9.654208183288574
    8. '  ' → logprob: -10.404208183288574
    9. ' ​' → logprob: -10.529208183288574
    10. ' ▁' → logprob: -11.279208183288574

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004591638222336769
    2. 'in' → logprob: -5.504591464996338
    3. ' ' → logprob: -7.629591464996338
    4. '_' → logprob: -11.879591941833496
    5. ' i' → logprob: -11.879591941833496
    6. '  ' → logprob: -12.004591941833496
    7. ' _' → logprob: -13.379591941833496
    8. 'range' → logprob: -13.379591941833496
    9. 'space' → logprob: -14.254591941833496
    10. ' ,' → logprob: -14.379591941833496

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759443640708923
    2. ' range' → logprob: -0.8259443640708923
    3. '	range' → logprob: -13.450943946838379
    4. 'rang' → logprob: -13.825943946838379
    5. 'ran' → logprob: -14.575943946838379
    6. '(range' → logprob: -14.825943946838379
    7. 'n' → logprob: -14.950943946838379
    8. ' ' → logprob: -14.950943946838379
    9. 'arr' → logprob: -15.450943946838379
    10. '_range' → logprob: -15.450943946838379

Token 28: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0638401135802269
    2. '(' → logprob: -2.81384015083313
    3. ' n' → logprob: -6.813839912414551
    4. ' (' → logprob: -7.188839912414551
    5. 'n' → logprob: -11.18883991241455
    6. '()' → logprob: -13.68883991241455
    7. '	n' → logprob: -14.81383991241455
    8. '(int' → logprob: -14.93883991241455
    9. ' ' → logprob: -15.31383991241455
    10. ')n' → logprob: -15.31383991241455

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019682208076119423
    2. ')' → logprob: -4.01968240737915
    3. ':' → logprob: -7.26968240737915
    4. ' ):' → logprob: -7.39468240737915
    5. '   ' → logprob: -9.019681930541992
    6. '):
' → logprob: -9.894681930541992
    7. ' )' → logprob: -10.894681930541992
    8. '():' → logprob: -12.644681930541992
    9. '+' → logprob: -12.769681930541992
    10. ' :' → logprob: -12.894681930541992

Token 30: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3206770122051239
    2. '    ' → logprob: -1.4456770420074463
    3. '       ' → logprob: -3.8206770420074463
    4. '   ' → logprob: -4.695676803588867
    5. ' 
' → logprob: -5.570676803588867
    6. '<|end|>' → logprob: -7.070676803588867
    7. '     
' → logprob: -7.445676803588867
    8. ' input' → logprob: -8.195676803588867
    9. ' a' → logprob: -8.320676803588867
    10. '  ' → logprob: -8.445676803588867

Token 31: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.027218233793973923
    2. 'arr' (adapté à ' arr') → logprob: -4.152218341827393
    3. '   ' → logprob: -5.902218341827393
    4. ' input' → logprob: -6.152218341827393
    5. '    ' → logprob: -6.402218341827393
    6. ' ```' → logprob: -6.777218341827393
    7. ' a' → logprob: -7.027218341827393
    8. ' ' → logprob: -7.527218341827393
    9. ' `' → logprob: -7.902218341827393
    10. ' line' → logprob: -8.152217864990234

Token 32: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4741319417953491
    2. '.' → logprob: -0.9741319417953491
    3. '.extend' → logprob: -10.09913158416748
    4. ' =' → logprob: -12.22413158416748
    5. ' .' → logprob: -12.72413158416748
    6. '.ap' → logprob: -13.59913158416748
    7. '=' → logprob: -13.72413158416748
    8. '.app' → logprob: -13.97413158416748
    9. '.=' → logprob: -14.09913158416748
    10. 'append' → logprob: -14.34913158416748

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1610870063304901
    2. '(' → logprob: -2.1610870361328125
    3. '(list' → logprob: -3.4110870361328125
    4. ' (' → logprob: -8.286087036132812
    5. '(tuple' → logprob: -8.661087036132812
    6. 'int' → logprob: -10.286087036132812
    7. 'list' → logprob: -10.536087036132812
    8. '   ' → logprob: -10.661087036132812
    9. '(float' → logprob: -11.036087036132812
    10. ' int' → logprob: -11.161087036132812

Token 34: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018165862187743187
    2. '(' → logprob: -4.0181660652160645
    3. '()' → logprob: -12.143165588378906
    4. 'input' → logprob: -12.768165588378906
    5. '(
' → logprob: -12.768165588378906
    6. ')' → logprob: -13.143165588378906
    7. '(

' → logprob: -13.518165588378906
    8. ' (' → logprob: -14.643165588378906
    9. '(in' → logprob: -14.893165588378906
    10. ' input' → logprob: -15.268165588378906

Token 35: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.315997838973999
    2. '()))' → logprob: -1.315997838973999
    3. '()' → logprob: -5.940998077392578
    4. '(' → logprob: -9.815998077392578
    5. '()))
' → logprob: -11.565998077392578
    6. ')' → logprob: -11.565998077392578
    7. '())
' → logprob: -12.065998077392578
    8. '())))' → logprob: -12.190998077392578
    9. ' ())' → logprob: -12.315998077392578
    10. '()));' → logprob: -12.440998077392578

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02684265561401844
    2. '    
' → logprob: -4.7768425941467285
    3. '<|end|>' → logprob: -4.7768425941467285
    4. '[' → logprob: -6.0268425941467285
    5. ' ' → logprob: -6.4018425941467285
    6. '
' → logprob: -6.5268425941467285
    7. '    ' → logprob: -6.5268425941467285
    8. ' 
' → logprob: -7.6518425941467285
    9. ')' → logprob: -8.151843070983887
    10. '' → logprob: -8.276843070983887

Token 37: ' k' (ID: 372)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.8565312623977661
    2. ' max' → logprob: -1.9815312623977661
    3. 'arr' → logprob: -1.9815312623977661
    4. '   ' → logprob: -2.8565311431884766
    5. 'max' → logprob: -2.9815311431884766
    6. ' ' → logprob: -2.9815311431884766
    7. 'sum' → logprob: -3.1065311431884766
    8. ' sum' → logprob: -3.7315311431884766
    9. ' 
' → logprob: -3.9815311431884766
    10. '    
' → logprob: -4.481531143188477

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08286847919225693
    2. '=' → logprob: -2.7078685760498047
    3. '_' → logprob: -5.082868576049805
    4. ' ' → logprob: -5.332868576049805
    5. 'e' → logprob: -7.082868576049805
    6. 'ey' → logprob: -7.332868576049805
    7. '-' → logprob: -9.582868576049805
    8. 'ernels' → logprob: -10.207868576049805
    9. 'eys' → logprob: -10.332868576049805
    10. '    ' → logprob: -11.082868576049805

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.097797691822052
    2. 'int' → logprob: -3.3477976322174072
    3. ' arr' → logprob: -3.9727976322174072
    4. ' max' → logprob: -4.222797870635986
    5. 'arr' → logprob: -5.347797870635986
    6. ' n' → logprob: -5.597797870635986
    7. ' len' → logprob: -5.597797870635986
    8. '0' → logprob: -5.722797870635986
    9. ' min' → logprob: -5.972797870635986
    10. ' ' → logprob: -6.097797870635986

Token 40: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03433900699019432
    2. '(' → logprob: -3.40933895111084
    3. '()' → logprob: -7.78433895111084
    4. ' (' → logprob: -8.53433895111084
    5. 'input' → logprob: -9.78433895111084
    6. '('' → logprob: -11.90933895111084
    7. ' ()' → logprob: -12.78433895111084
    8. ' input' → logprob: -12.78433895111084
    9. '=input' → logprob: -12.90933895111084
    10. ')' → logprob: -13.15933895111084

Token 41: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13800624012947083
    2. '()' → logprob: -2.1380062103271484
    3. ')' → logprob: -4.513006210327148
    4. '(' → logprob: -10.638006210327148
    5. ' ())' → logprob: -11.388006210327148
    6. '()))' → logprob: -11.763006210327148
    7. '())
' → logprob: -12.513006210327148
    8. '))' → logprob: -13.763006210327148
    9. '()
' → logprob: -13.888006210327148
    10. '();)' → logprob: -14.013006210327148

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08953399956226349
    2. '<|end|>' → logprob: -3.964534044265747
    3. '
' → logprob: -4.339533805847168
    4. '    
' → logprob: -4.464533805847168
    5. ' 
' → logprob: -4.839533805847168
    6. 'arr' → logprob: -5.089533805847168
    7. ' ' → logprob: -5.214533805847168
    8. '    ' → logprob: -5.464533805847168
    9. '[' → logprob: -5.839533805847168
    10. ' arr' → logprob: -6.464533805847168

Token 43: ' left' (ID: 3561)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.22128629684448242
    2. '   ' → logprob: -3.0962862968444824
    3. ' arr' → logprob: -3.3462862968444824
    4. 'count' → logprob: -3.4712862968444824
    5. 'result' → logprob: -3.8462862968444824
    6. 'sum' → logprob: -4.596286296844482
    7. 'for' → logprob: -4.971286296844482
    8. 'i' → logprob: -5.346286296844482
    9. 's' → logprob: -5.721286296844482
    10. 'c' → logprob: -5.846286296844482

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4686942994594574
    2. '=' → logprob: -1.4686943292617798
    3. ',' → logprob: -1.9686943292617798
    4. ' ,' → logprob: -6.46869421005249
    5. '_' → logprob: -6.84369421005249
    6. '_bound' → logprob: -7.71869421005249
    7. '_idx' → logprob: -7.84369421005249
    8. '_index' → logprob: -8.218694686889648
    9. '_pointer' → logprob: -8.968694686889648
    10. ' ' → logprob: -9.593694686889648

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02984836883842945
    2. ' ' → logprob: -3.529848337173462
    3. 'k' → logprob: -10.404848098754883
    4. ' -' → logprob: -11.217348098754883
    5. '-' → logprob: -11.279848098754883
    6. '1' → logprob: -11.529848098754883
    7. ' k' → logprob: -11.592348098754883
    8. '[' → logprob: -11.967348098754883
    9. 'len' → logprob: -13.092348098754883
    10. '(' → logprob: -13.529848098754883

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005552975926548243
    2. ' ' → logprob: -8.000555038452148
    3. '-' → logprob: -8.875555038452148
    4. '1' → logprob: -10.625555038452148
    5. 'k' → logprob: -10.625555038452148
    6. ' -' → logprob: -11.625555038452148
    7. 'len' → logprob: -12.000555038452148
    8. '-k' → logprob: -12.188055038452148
    9. '[' → logprob: -13.375555038452148
    10. '(' → logprob: -13.563055038452148

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2669900357723236
    2. 'while' → logprob: -2.6419899463653564
    3. '<|end|>' → logprob: -3.0169899463653564
    4. ' 
' → logprob: -3.8919899463653564
    5. ' while' → logprob: -4.1419901847839355
    6. ' ' → logprob: -4.1419901847839355
    7. ' right' → logprob: -4.3919901847839355
    8. '   ' → logprob: -4.5169901847839355
    9. '    
' → logprob: -4.5169901847839355
    10. '
' → logprob: -5.5169901847839355

Token 49: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0041571068577468395
    2. ' right' → logprob: -5.504157066345215
    3. ',right' → logprob: -10.254157066345215
    4. 'n' → logprob: -11.379157066345215
    5. 'len' → logprob: -11.754157066345215
    6. ' ' → logprob: -11.879157066345215
    7. '	right' → logprob: -12.629157066345215
    8. '   ' → logprob: -13.004157066345215
    9. 'while' → logprob: -13.129157066345215
    10. ',' → logprob: -13.504157066345215

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015357711352407932
    2. '=' → logprob: -4.265357494354248
    3. '=len' → logprob: -6.890357494354248
    4. '=n' → logprob: -9.765357971191406
    5. '    ' → logprob: -10.515357971191406
    6. '   ' → logprob: -10.890357971191406
    7. ' ' → logprob: -11.390357971191406
    8. ' n' → logprob: -11.890357971191406
    9. '```' → logprob: -11.890357971191406
    10. 'n' → logprob: -11.890357971191406

Token 51: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2606980800628662
    2. ' len' → logprob: -1.7606980800628662
    3. 'n' → logprob: -3.385698080062866
    4. 'len' → logprob: -3.760698080062866
    5. '   ' → logprob: -8.760698318481445
    6. ' k' → logprob: -9.010698318481445
    7. 'k' → logprob: -9.260698318481445
    8. ' ' → logprob: -10.260698318481445
    9. '    ' → logprob: -11.260698318481445
    10. '	len' → logprob: -12.510698318481445

Token 52: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23109149932861328
    2. '<|end|>' → logprob: -2.1060914993286133
    3. ' -' → logprob: -2.4810914993286133
    4. '<|end|>' → logprob: -7.231091499328613
    5. '1' → logprob: -9.356091499328613
    6. '```' → logprob: -9.856091499328613
    7. '
' → logprob: -10.356091499328613
    8. '   ' → logprob: -11.356091499328613
    9. ')' → logprob: -11.356091499328613
    10. ' ' → logprob: -11.356091499328613

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889066636562347
    2. ' ' → logprob: -2.578890562057495
    3. '  ' → logprob: -14.328890800476074
    4. '<|end|>' → logprob: -15.828890800476074
    5. '```' → logprob: -16.328889846801758
    6. '   ' → logprob: -16.453889846801758
    7. ' ' → logprob: -17.516389846801758
    8. '    ' → logprob: -17.516389846801758
    9. '۱' → logprob: -18.266389846801758
    10. '１' → logprob: -18.641389846801758

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '2' → logprob: -18.500009536743164
    4. '   ' → logprob: -18.875009536743164
    5. '```' → logprob: -19.125009536743164
    6. '  ' → logprob: -19.437509536743164
    7. '１' → logprob: -20.250009536743164
    8. '    ' → logprob: -20.812509536743164
    9. '۱' → logprob: -21.000009536743164
    10. '0' → logprob: -21.000009536743164

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3308711051940918
    2. '<|end|>' → logprob: -1.8308711051940918
    3. ' ' → logprob: -2.955871105194092
    4. '
' → logprob: -3.205871105194092
    5. '    
' → logprob: -4.455871105194092
    6. '\n' → logprob: -5.580871105194092
    7. '  ' → logprob: -5.830871105194092
    8. ' 
' → logprob: -6.080871105194092
    9. '  
' → logprob: -6.580871105194092
    10. '    ' → logprob: -6.830871105194092

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25651735067367554
    2. '
' → logprob: -2.7565174102783203
    3. ' ' → logprob: -3.1315174102783203
    4. ' while' → logprob: -3.7565174102783203
    5. '<|end|>' → logprob: -3.8815174102783203
    6. 'while' → logprob: -4.00651741027832
    7. '    
' → logprob: -4.13151741027832
    8. ' 
' → logprob: -4.38151741027832
    9. '```' → logprob: -4.50651741027832
    10. '  
' → logprob: -5.38151741027832

Token 57: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8309083580970764
    2. ' ' → logprob: -1.2059082984924316
    3. ' 
' → logprob: -2.4559082984924316
    4. 'while' → logprob: -3.2059082984924316
    5. ' while' → logprob: -4.080908298492432
    6. '    
' → logprob: -4.330908298492432
    7. '
' → logprob: -4.455908298492432
    8. '\n' → logprob: -4.705908298492432
    9. ':' → logprob: -4.830908298492432
    10. 's' → logprob: -4.830908298492432

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01719600521028042
    2. '=' → logprob: -4.267196178436279
    3. ' ' → logprob: -6.392196178436279
    4. ' +=' → logprob: -7.142196178436279
    5. '  ' → logprob: -9.142195701599121
    6. '_' → logprob: -9.517195701599121
    7. '<|end|>' → logprob: -9.517195701599121
    8. ' >' → logprob: -9.892195701599121
    9. '[' → logprob: -10.017195701599121
    10. 's' → logprob: -10.517195701599121

Token 59: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3869049549102783
    2. '0' → logprob: -1.1369049549102783
    3. '1' → logprob: -11.0119047164917
    4. ' k' → logprob: -12.0119047164917
    5. '<|end|>' → logprob: -12.2619047164917
    6. 'k' → logprob: -13.9494047164917
    7. 'arr' → logprob: -14.5744047164917
    8. ' ' → logprob: -14.8244047164917
    9. ')' → logprob: -14.8869047164917
    10. '    ' → logprob: -15.0119047164917

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003609680861700326
    2. ' ' → logprob: -8.125361442565918
    3. '1' → logprob: -10.125361442565918
    4. 'k' → logprob: -12.000361442565918
    5. 'abs' → logprob: -12.250361442565918
    6. '{}' → logprob: -12.500361442565918
    7. 'arr' → logprob: -12.750361442565918
    8. '-' → logprob: -13.750361442565918
    9. '{' → logprob: -14.000361442565918
    10. 'sum' → logprob: -14.250361442565918

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23927967250347137
    2. '<|end|>' → logprob: -2.7392797470092773
    3. '   ' → logprob: -2.9892797470092773
    4. ' 
' → logprob: -3.4892797470092773
    5. '```' → logprob: -4.114279747009277
    6. '\n' → logprob: -4.614279747009277
    7. '  ' → logprob: -4.739279747009277
    8. 'while' (adapté à ' while') → logprob: -4.739279747009277
    9. ' while' → logprob: -5.114279747009277
    10. '  
' → logprob: -5.989279747009277

Token 64: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.0024774393532425165
    2. 'left' → logprob: -6.127477645874023
    3. ' count' → logprob: -9.002477645874023
    4. ' ' → logprob: -9.127477645874023
    5. ' lef' → logprob: -10.877477645874023
    6. ' right' → logprob: -11.127477645874023
    7. ' True' → logprob: -11.502477645874023
    8. 'count' → logprob: -12.502477645874023
    9. '	left' → logprob: -12.752477645874023
    10. ' not' → logprob: -13.252477645874023

Token 65: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10069011896848679
    2. ' <=' → logprob: -2.3506901264190674
    3. '<' → logprob: -7.850689888000488
    4. ' ' → logprob: -9.850689888000488
    5. '<=' → logprob: -10.475689888000488
    6. ' !=' → logprob: -12.350689888000488
    7. '<|end|>' → logprob: -12.975689888000488
    8. ' <
' → logprob: -13.350689888000488
    9. ' ≤' → logprob: -13.850689888000488
    10. ' <",' → logprob: -14.100689888000488

Token 66: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10021162778139114
    2. ' right' → logprob: -2.3502116203308105
    3. ' ' → logprob: -12.475212097167969
    4. '	right' → logprob: -14.100212097167969
    5. 'r' → logprob: -15.850212097167969
    6. 'rig' → logprob: -16.72521209716797
    7. 'k' → logprob: -17.35021209716797
    8. ' k' → logprob: -17.60021209716797
    9. '```' → logprob: -17.72521209716797
    10. '[right' → logprob: -17.85021209716797

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001654229243285954
    2. ':
' → logprob: -6.751654148101807
    3. ' and' → logprob: -8.251654624938965
    4. '<|end|>' → logprob: -9.501654624938965
    5. '   ' → logprob: -9.626654624938965
    6. '):' → logprob: -10.501654624938965
    7. ' :' → logprob: -10.876654624938965
    8. '       ' → logprob: -11.376654624938965
    9. '<|end|>' → logprob: -12.126654624938965
    10. ')' → logprob: -12.501654624938965

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11339805275201797
    2. '   ' → logprob: -3.1133980751037598
    3. ' ' → logprob: -4.11339807510376
    4. '<|end|>' → logprob: -4.23839807510376
    5. ':' → logprob: -4.36339807510376
    6. '    ' → logprob: -4.73839807510376
    7. '        
' → logprob: -6.61339807510376
    8. ' 
' → logprob: -6.73839807510376
    9. ' :' → logprob: -6.73839807510376
    10. ':
' → logprob: -6.86339807510376

Token 69: ' mid' (ID: 6959)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47859495878219604
    2. '       ' → logprob: -1.6035950183868408
    3. '   ' → logprob: -2.853595018386841
    4. 'if' → logprob: -2.978595018386841
    5. ' ' → logprob: -3.478595018386841
    6. '```' → logprob: -4.353594779968262
    7. '    ' → logprob: -4.853594779968262
    8. '<|end|>' → logprob: -5.228594779968262
    9. ' 
' → logprob: -5.478594779968262
    10. '           ' → logprob: -6.478594779968262

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0073125921189785
    2. ' ' → logprob: -5.507312774658203
    3. '=' → logprob: -5.757312774658203
    4. ')' → logprob: -10.757312774658203
    5. '    ' → logprob: -11.257312774658203
    6. '   ' → logprob: -11.382312774658203
    7. '<|end|>' → logprob: -12.132312774658203
    8. '```' → logprob: -12.507312774658203
    9. '  ' → logprob: -12.632312774658203
    10. '     ' → logprob: -13.632312774658203

Token 71: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31657397747039795
    2. '(left' → logprob: -1.316573977470398
    3. ' left' → logprob: -6.1915740966796875
    4. 'left' → logprob: -6.6915740966796875
    5. '[left' → logprob: -11.316574096679688
    6. ',left' → logprob: -13.066574096679688
    7. '   ' → logprob: -13.316574096679688
    8. '	left' → logprob: -14.566574096679688
    9. '(' → logprob: -14.566574096679688
    10. ' ' → logprob: -14.566574096679688

Token 72: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.005243479739874601
    2. ' left' → logprob: -5.255243301391602
    3. 'right' → logprob: -11.630243301391602
    4. ' lef' → logprob: -14.755243301391602
    5. ' ' → logprob: -15.130243301391602
    6. 'lef' → logprob: -16.2552433013916
    7. '	left' → logprob: -16.5052433013916
    8. ' right' → logprob: -17.5052433013916
    9. '[left' → logprob: -18.1302433013916
    10. '(left' → logprob: -18.1302433013916

Token 73: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889143377542496
    2. '+' → logprob: -2.5788915157318115
    3. '<|end|>' → logprob: -14.57889175415039
    4. ' ' → logprob: -14.70389175415039
    5. ')' → logprob: -15.07889175415039
    6. ' ' → logprob: -15.95389175415039
    7. ' +
' → logprob: -16.07889175415039
    8. ' plus' → logprob: -16.20389175415039
    9. '```' → logprob: -17.20389175415039
    10. '+k' → logprob: -17.82889175415039

Token 74: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3132724165916443
    2. ' right' → logprob: -1.313272476196289
    3. '	right' → logprob: -12.313272476196289
    4. ' ' → logprob: -12.438272476196289
    5. '   ' → logprob: -14.313272476196289
    6. ')' → logprob: -14.563272476196289
    7. '[right' → logprob: -14.688272476196289
    8. ' ' → logprob: -16.31327247619629
    9. '    ' → logprob: -16.43827247619629
    10. '
' → logprob: -16.43827247619629

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017529279284644872
    2. ')//' → logprob: -8.750175476074219
    3. ' )' → logprob: -11.000175476074219
    4. ')>>' → logprob: -16.75017547607422
    5. ')
' → logprob: -19.00017547607422
    6. '）' → logprob: -19.37517547607422
    7. ']' → logprob: -20.12517547607422
    8. ' //' → logprob: -20.12517547607422
    9. '```' → logprob: -20.37517547607422
    10. '   ' → logprob: -20.62517547607422

Token 76: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.021206539124250412
    2. ')' → logprob: -3.8962066173553467
    3. ' )' → logprob: -8.646206855773926
    4. '//' → logprob: -8.646206855773926
    5. '```' → logprob: -8.896206855773926
    6. ' ' → logprob: -9.521206855773926
    7. ')//' → logprob: -10.146206855773926
    8. '   ' → logprob: -10.646206855773926
    9. '1' → logprob: -11.396206855773926
    10. '2' → logprob: -11.896206855773926

Token 77: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0067154900170862675
    2. ' ' → logprob: -5.006715297698975
    3. '  ' → logprob: -16.756715774536133
    4. '   ' → logprob: -17.381715774536133
    5. '```' → logprob: -17.631715774536133
    6. '۲' → logprob: -17.881715774536133
    7. '２' → logprob: -18.944215774536133
    8. '२' → logprob: -19.194215774536133
    9. '1' → logprob: -19.756715774536133
    10. '=' → logprob: -19.819215774536133

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -20.375
    4. '۲' → logprob: -20.5
    5. '२' → logprob: -21.75
    6. '   ' → logprob: -21.875
    7. '２' → logprob: -22.125
    8. '  ' → logprob: -22.375
    9. '٢' → logprob: -22.375
    10. '২' → logprob: -23.375

Token 79: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6898260712623596
    2. '<|end|>' → logprob: -0.8148260712623596
    3. '
' → logprob: -3.689826011657715
    4. '   ' → logprob: -3.939826011657715
    5. '<|end|>' → logprob: -5.439826011657715
    6. ' if' → logprob: -6.439826011657715
    7. ')' → logprob: -6.939826011657715
    8. '```' → logprob: -6.939826011657715
    9. '        
' → logprob: -7.189826011657715
    10. '  
' → logprob: -7.314826011657715

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2152654081583023
    2. '   ' → logprob: -1.8402653932571411
    3. '<|end|>' → logprob: -4.215265274047852
    4. ' if' → logprob: -4.465265274047852
    5. ' ' → logprob: -5.965265274047852
    6. 'if' → logprob: -6.715265274047852
    7. '<|end|>' → logprob: -6.715265274047852
    8. '        
' → logprob: -7.090265274047852
    9. '  ' → logprob: -7.340265274047852
    10. '    
' → logprob: -7.715265274047852

Token 81: ' count' (ID: 3605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7482919096946716
    2. '       ' → logprob: -0.8732919096946716
    3. 'if' → logprob: -2.3732919692993164
    4. ' ' → logprob: -4.873291969299316
    5. '   ' → logprob: -4.998291969299316
    6. '    ' → logprob: -7.998291969299316
    7. '        ' → logprob: -8.373291969299316
    8. '<|end|>' → logprob: -8.373291969299316
    9. '  ' → logprob: -8.748291969299316
    10. '	if' → logprob: -9.123291969299316

Token 82: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.13466045260429382
    2. '+=' → logprob: -2.259660482406616
    3. '+' → logprob: -4.509660243988037
    4. '<|end|>' → logprob: -5.634660243988037
    5. ' ==' → logprob: -5.759660243988037
    6. '==' → logprob: -6.634660243988037
    7. '=' → logprob: -7.134660243988037
    8. ' ' → logprob: -7.259660243988037
    9. ' +' → logprob: -7.884660243988037
    10. ' =' → logprob: -8.009660720825195

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0070488909259438515
    2. ' ' → logprob: -5.007049083709717
    3. 'arr' → logprob: -8.757048606872559
    4. 'abs' → logprob: -8.882048606872559
    5. ' abs' → logprob: -10.757048606872559
    6. '(arr' → logprob: -12.382048606872559
    7. ' arr' → logprob: -12.632048606872559
    8. '   ' → logprob: -13.757048606872559
    9. '2' → logprob: -14.007048606872559
    10. '[arr' → logprob: -14.007048606872559

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003707442432641983
    2. 'abs' → logprob: -6.253707408905029
    3. 'arr' → logprob: -6.378707408905029
    4. ' ' → logprob: -10.003707885742188
    5. '(arr' → logprob: -10.753707885742188
    6. '(abs' → logprob: -12.628707885742188
    7. '[arr' → logprob: -13.253707885742188
    8. '(' → logprob: -13.253707885742188
    9. ' abs' → logprob: -13.378707885742188
    10. 'mid' → logprob: -13.753707885742188

Token 85: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23829320073127747
    2. '       ' → logprob: -2.238293170928955
    3. ' if' → logprob: -2.988293170928955
    4. '
' → logprob: -3.363293170928955
    5. '<|end|>' → logprob: -4.488293170928955
    6. ' ' → logprob: -5.488293170928955
    7. 'if' → logprob: -6.488293170928955
    8. '  ' → logprob: -6.988293170928955
    9. ' 
' → logprob: -7.113293170928955
    10. '    
' → logprob: -7.988293170928955

Token 86: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08653000742197037
    2. '       ' → logprob: -3.2115299701690674
    3. ' if' → logprob: -3.4615299701690674
    4. 'if' → logprob: -5.7115302085876465
    5. ' ' → logprob: -5.8365302085876465
    6. '<|end|>' → logprob: -5.9615302085876465
    7. '
' → logprob: -6.9615302085876465
    8. '  ' → logprob: -7.7115302085876465
    9. '    
' → logprob: -8.336529731750488
    10. '<|end|>' → logprob: -8.711529731750488

Token 87: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005865143029950559
    2. ' if' → logprob: -7.87558650970459
    3. '       ' → logprob: -8.75058650970459
    4. '   ' → logprob: -10.00058650970459
    5. '	if' → logprob: -14.25058650970459
    6. '```' → logprob: -14.50058650970459
    7. 'value' → logprob: -15.00058650970459
    8. ' ' → logprob: -15.12558650970459
    9. 'If' → logprob: -15.75058650970459
    10. 'print' → logprob: -15.75058650970459

Token 88: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.14478318393230438
    2. 'arr' → logprob: -2.0197832584381104
    3. ' k' → logprob: -6.644783020019531
    4. 'k' → logprob: -7.144783020019531
    5. '	arr' → logprob: -11.769783020019531
    6. '(arr' → logprob: -12.644783020019531
    7. ' ' → logprob: -13.394783020019531
    8. '[arr' → logprob: -13.769783020019531
    9. '<arr' → logprob: -14.019783020019531
    10. '$arr' → logprob: -14.644783020019531

Token 89: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -2.570319702499546e-05
    2. '[' → logprob: -10.750025749206543
    3. '[m' → logprob: -12.375025749206543
    4. '[mem' → logprob: -17.000024795532227
    5. '[left' → logprob: -17.750024795532227
    6. '[int' → logprob: -17.750024795532227
    7. '[
' → logprob: -18.500024795532227
    8. '[min' → logprob: -18.625024795532227
    9. '[max' → logprob: -18.750024795532227
    10. ' [' → logprob: -18.875024795532227

Token 90: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.051982611417770386
    2. '==' → logprob: -3.3019826412200928
    3. ' <' → logprob: -4.301982402801514
    4. '<' → logprob: -8.926982879638672
    5. ' ' → logprob: -9.301982879638672
    6. ' >' → logprob: -10.426982879638672
    7. ')' → logprob: -10.926982879638672
    8. '>' → logprob: -11.551982879638672
    9. ' >=' → logprob: -12.176982879638672
    10. ')==' → logprob: -12.426982879638672

Token 91: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17734640836715698
    2. '==' → logprob: -1.9273464679718018
    3. ' <' → logprob: -4.177346229553223
    4. '<' → logprob: -7.177346229553223
    5. ' >=' → logprob: -7.427346229553223
    6. '>=' → logprob: -9.052346229553223
    7. ' >' → logprob: -10.302346229553223
    8. '<|end|>' → logprob: -10.427346229553223
    9. '=' → logprob: -10.552346229553223
    10. '>' → logprob: -10.927346229553223

Token 92: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0380459688603878
    2. 'k' → logprob: -3.288045883178711
    3. ' ' → logprob: -13.163045883178711
    4. '	k' → logprob: -13.163045883178711
    5. ' ' → logprob: -15.788045883178711
    6. '    ' → logprob: -16.03804588317871
    7. '<|end|>' → logprob: -16.03804588317871
    8. '   ' → logprob: -16.28804588317871
    9. ' к' → logprob: -16.53804588317871
    10. '+k' → logprob: -17.16304588317871

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00410499656572938
    2. ':
' → logprob: -5.504105091094971
    3. ':return' → logprob: -11.254104614257812
    4. ' :' → logprob: -13.004104614257812
    5. '<|end|>' → logprob: -13.004104614257812
    6. '       ' → logprob: -13.129104614257812
    7. '   ' → logprob: -13.629104614257812
    8. '):' → logprob: -13.629104614257812
    9. ':
' → logprob: -14.004104614257812
    10. ' or' → logprob: -14.004104614257812

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012774500995874405
    2. ' break' → logprob: -4.762774467468262
    3. 'break' → logprob: -5.762774467468262
    4. '       ' → logprob: -7.387774467468262
    5. '               ' → logprob: -9.262774467468262
    6. ':' → logprob: -9.762774467468262
    7. ':
' → logprob: -10.012774467468262
    8. '   ' → logprob: -10.012774467468262
    9. '            ' → logprob: -10.512774467468262
    10. '            
' → logprob: -10.887774467468262

Token 95: ' break' (ID: 2338)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.159994974732399
    2. 'print' → logprob: -2.2849950790405273
    3. ' break' → logprob: -3.1599950790405273
    4. 'break' (adapté à ' break') → logprob: -5.909995079040527
    5. '    ' → logprob: -8.034995079040527
    6. '   ' → logprob: -8.159995079040527
    7. '           ' → logprob: -8.534995079040527
    8. '       ' → logprob: -9.909995079040527
    9. '        ' → logprob: -9.909995079040527
    10. '            ' → logprob: -11.909995079040527

Token 96: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04215153679251671
    2. '<|end|>' → logprob: -4.29215145111084
    3. ' elif' → logprob: -4.54215145111084
    4. '   ' → logprob: -4.79215145111084
    5. 'elif' → logprob: -4.91715145111084
    6. '    ' → logprob: -7.91715145111084
    7. ' ' → logprob: -8.29215145111084
    8. ' else' → logprob: -8.54215145111084
    9. '  ' → logprob: -9.29215145111084
    10. '        ' → logprob: -9.66715145111084

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2941285967826843
    2. 'elif' → logprob: -2.169128656387329
    3. '   ' → logprob: -2.419128656387329
    4. ' elif' → logprob: -3.044128656387329
    5. '<|end|>' → logprob: -6.04412841796875
    6. '    ' → logprob: -7.79412841796875
    7. ' ' → logprob: -8.04412841796875
    8. '  ' → logprob: -8.41912841796875
    9. ' else' → logprob: -9.04412841796875
    10. 'else' → logprob: -9.16912841796875

Token 98: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.16197144985198975
    2. 'elif' (adapté à ' elif') → logprob: -2.1619715690612793
    3. '       ' → logprob: -3.4119715690612793
    4. ' ' → logprob: -7.661971569061279
    5. '   ' → logprob: -8.161971092224121
    6. '<|end|>' → logprob: -8.786971092224121
    7. '    ' → logprob: -8.911971092224121
    8. '	elif' → logprob: -9.036971092224121
    9. ' if' → logprob: -9.536971092224121
    10. '        ' → logprob: -9.786971092224121

Token 99: ' k' (ID: 372)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.09099196642637253
    2. 'arr' → logprob: -2.465991973876953
    3. ' k' → logprob: -6.715991973876953
    4. 'k' → logprob: -7.090991973876953
    5. ' ' → logprob: -12.840991973876953
    6. '	arr' → logprob: -13.840991973876953
    7. ' ' → logprob: -14.090991973876953
    8. '[arr' → logprob: -14.965991973876953
    9. '<arr' → logprob: -15.215991973876953
    10. '    ' → logprob: -15.340991973876953

Token 100: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.44728654623031616
    2. '<' → logprob: -1.072286605834961
    3. '>' → logprob: -4.572286605834961
    4. ' >' → logprob: -4.822286605834961
    5. ' ' → logprob: -10.822286605834961
    6. '<arr' → logprob: -11.947286605834961
    7. '<int' → logprob: -14.322286605834961
    8. '<m' → logprob: -14.322286605834961
    9. '<|end|>' → logprob: -14.322286605834961
    10. ' ' → logprob: -14.572286605834961

Token 101: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6931613087654114
    2. ' arr' → logprob: -0.6931613087654114
    3. '	arr' → logprob: -11.568161010742188
    4. ' ' → logprob: -13.443161010742188
    5. 'mid' → logprob: -14.443161010742188
    6. '(arr' → logprob: -14.568161010742188
    7. '<arr' → logprob: -14.568161010742188
    8. ' ' → logprob: -14.818161010742188
    9. '[arr' → logprob: -14.943161010742188
    10. '$arr' → logprob: -15.318161010742188

Token 102: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -3.128163257315464e-07
    2. '[m' → logprob: -15.625
    3. '[' → logprob: -16.375
    4. 'mid' → logprob: -19.5
    5. '[
' → logprob: -19.75
    6. ' [' → logprob: -19.875
    7. '   ' → logprob: -20.5
    8. '[left' → logprob: -20.625
    9. '[mem' → logprob: -21.25
    10. ' ' → logprob: -21.75

Token 103: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5610215067863464
    2. '):
' → logprob: -1.1860215663909912
    3. ':' → logprob: -2.186021566390991
    4. ':
' → logprob: -4.811021327972412
    5. '       ' → logprob: -5.811021327972412
    6. ')' → logprob: -8.18602180480957
    7. '):
' → logprob: -10.06102180480957
    8. '           ' → logprob: -10.31102180480957
    9. ']:' → logprob: -10.43602180480957
    10. ']:
' → logprob: -11.06102180480957

Token 104: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9453827142715454
    2. 'right' → logprob: -1.1953827142715454
    3. ' right' → logprob: -1.9453827142715454
    4. '           ' → logprob: -2.070382595062256
    5. '
' → logprob: -3.320382595062256
    6. ':
' → logprob: -7.070382595062256
    7. '[right' → logprob: -7.445382595062256
    8. '	right' → logprob: -7.820382595062256
    9. ',right' → logprob: -7.945382595062256
    10. '   ' → logprob: -8.320383071899414

Token 105: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.3901503384113312
    2. 'right' (adapté à ' right') → logprob: -1.1401503086090088
    3. '
' → logprob: -6.140150547027588
    4. '           ' → logprob: -7.140150547027588
    5. '       ' → logprob: -9.26515007019043
    6. '	right' → logprob: -9.51515007019043
    7. ' 
' → logprob: -10.39015007019043
    8. '[right' → logprob: -10.51515007019043
    9. '_right' → logprob: -11.01515007019043
    10. '.right' → logprob: -11.01515007019043

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008060562540777028
    2. '=' → logprob: -7.125805854797363
    3. ' -=' → logprob: -13.500805854797363
    4. ' ' → logprob: -15.500805854797363
    5. '    ' → logprob: -18.75080680847168
    6. '<|end|>' → logprob: -19.37580680847168
    7. ')' → logprob: -20.37580680847168
    8. '-=' → logprob: -20.50080680847168
    9. ' +=' → logprob: -20.62580680847168
    10. ' =
' → logprob: -20.75080680847168

Token 107: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.018150413408875465
    2. 'mid' → logprob: -4.018150329589844
    3. '[mid' → logprob: -15.018150329589844
    4. '(mid' → logprob: -16.268150329589844
    5. ' ' → logprob: -17.018150329589844
    6. '_mid' → logprob: -17.643150329589844
    7. 'Mid' → logprob: -19.143150329589844
    8. ' midpoint' → logprob: -19.143150329589844
    9. 'm' → logprob: -19.268150329589844
    10. '   ' → logprob: -19.393150329589844

Token 108: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04859009385108948
    2. '-' → logprob: -3.0485901832580566
    3. ' ' → logprob: -12.923589706420898
    4. '<|end|>' → logprob: -15.423589706420898
    5. '–' → logprob: -18.4235897064209
    6. '1' → logprob: -18.5485897064209
    7. ' ' → logprob: -18.7985897064209
    8. '  ' → logprob: -19.1735897064209
    9. 'token' → logprob: -19.1735897064209
    10. '<|end|>' → logprob: -19.1735897064209

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046210684813559055
    2. ' ' → logprob: -5.3796210289001465
    3. '<|end|>' → logprob: -14.129621505737305
    4. '```' → logprob: -16.879621505737305
    5. '   ' → logprob: -17.504621505737305
    6. '<|end|>' → logprob: -18.129621505737305
    7. '۱' → logprob: -18.504621505737305
    8. '       ' → logprob: -18.754621505737305
    9. ' ' → logprob: -18.879621505737305
    10. '    ' → logprob: -19.129621505737305

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -17.5000057220459
    4. '```' → logprob: -18.2500057220459
    5. '   ' → logprob: -19.3750057220459
    6. '
' → logprob: -21.0000057220459
    7. '       ' → logprob: -21.6250057220459
    8. '۱' → logprob: -22.5000057220459
    9. '0' → logprob: -22.7500057220459
    10. '           ' → logprob: -22.8750057220459

Token 111: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003527136752381921
    2. ' else' → logprob: -6.1285271644592285
    3. 'else' → logprob: -6.6285271644592285
    4. '<|end|>' → logprob: -11.75352668762207
    5. '	else' → logprob: -12.62852668762207
    6. '   ' → logprob: -12.75352668762207
    7. 'elif' → logprob: -13.37852668762207
    8. '
' → logprob: -13.75352668762207
    9. '	' → logprob: -14.62852668762207
    10. ' elif' → logprob: -14.87852668762207

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005780545994639397
    2. 'else' → logprob: -5.5057806968688965
    3. ' else' → logprob: -6.3807806968688965
    4. '   ' → logprob: -12.380780220031738
    5. '	else' → logprob: -13.505780220031738
    6. 'elif' → logprob: -14.630780220031738
    7. '	' → logprob: -15.005780220031738
    8. '```' → logprob: -16.005781173706055
    9. '      ' → logprob: -16.130781173706055
    10. ' elif' → logprob: -16.755781173706055

Token 113: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.49847254157066345
    2. '       ' → logprob: -1.2484725713729858
    3. ' else' → logprob: -2.2484724521636963
    4. '   ' → logprob: -10.498472213745117
    5. '	else' → logprob: -11.498472213745117
    6. 'elif' → logprob: -14.373472213745117
    7. '```' → logprob: -15.248472213745117
    8. '	' → logprob: -15.373472213745117
    9. '    ' → logprob: -15.873472213745117
    10. '      ' → logprob: -16.623472213745117

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.017626404762268
    2. '           ' → logprob: -1.142626404762268
    3. ':
' → logprob: -1.142626404762268
    4. ':left' → logprob: -8.892626762390137
    5. 'left' → logprob: -9.017626762390137
    6. ':
' → logprob: -9.517626762390137
    7. '       ' → logprob: -10.267626762390137
    8. ' :
' → logprob: -10.267626762390137
    9. '```' → logprob: -10.517626762390137
    10. '   ' → logprob: -10.642626762390137

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023144069127738476
    2. ' left' → logprob: -6.502314567565918
    3. 'left' → logprob: -7.502314567565918
    4. '   ' → logprob: -8.502314567565918
    5. '	left' → logprob: -10.627314567565918
    6. '		' → logprob: -11.002314567565918
    7. '               ' → logprob: -12.377314567565918
    8. '       ' → logprob: -12.502314567565918
    9. '[left' → logprob: -12.752314567565918
    10. '	       ' → logprob: -13.752314567565918

Token 116: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.011096392758190632
    2. ' left' → logprob: -4.511096477508545
    3. '           ' → logprob: -10.511096000671387
    4. '	left' → logprob: -11.386096000671387
    5. '   ' → logprob: -11.886096000671387
    6. '               ' → logprob: -13.636096000671387
    7. '[left' → logprob: -13.761096000671387
    8. '.left' → logprob: -15.511096000671387
    9. '       ' → logprob: -15.511096000671387
    10. ':left' → logprob: -16.511096954345703

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245595395565033
    2. '=' → logprob: -3.7732455730438232
    3. ' +=' → logprob: -16.648244857788086
    4. ' ' → logprob: -18.648244857788086
    5. ')' → logprob: -20.273244857788086
    6. '＝' → logprob: -20.898244857788086
    7. '+=' → logprob: -21.148244857788086
    8. '	' → logprob: -22.273244857788086
    9. '    ' → logprob: -22.273244857788086
    10. '1' → logprob: -22.835744857788086

Token 118: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.038065481930971146
    2. 'mid' → logprob: -3.2880654335021973
    3. '(mid' → logprob: -11.163065910339355
    4. '[mid' → logprob: -12.038065910339355
    5. ' midpoint' → logprob: -13.163065910339355
    6. '.mid' → logprob: -14.163065910339355
    7. '_mid' → logprob: -14.538065910339355
    8. ' ' → logprob: -15.413065910339355
    9. ' middle' → logprob: -15.413065910339355
    10. ' mids' → logprob: -16.28806495666504

Token 119: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022585332393646
    2. '+' → logprob: -1.9102258682250977
    3. ' ' → logprob: -14.160225868225098
    4. ' plus' → logprob: -14.535225868225098
    5. '1' → logprob: -16.41022491455078
    6. 'plus' → logprob: -16.66022491455078
    7. 'mid' → logprob: -16.66022491455078
    8. '＋' → logprob: -17.03522491455078
    9. '   ' → logprob: -17.16022491455078
    10. '++' → logprob: -17.28522491455078

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11282410472631454
    2. ' ' → logprob: -2.2378242015838623
    3. '0' → logprob: -14.237824440002441
    4. '```' → logprob: -14.737824440002441
    5. '<|end|>' → logprob: -14.862824440002441
    6. '   ' → logprob: -15.987824440002441
    7. '=' → logprob: -17.362823486328125
    8. '<|end|>' → logprob: -17.362823486328125
    9. '2' → logprob: -17.925323486328125
    10. '  ' → logprob: -17.925323486328125

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -16.625001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '0' → logprob: -18.875001907348633
    6. '       ' → logprob: -19.875001907348633
    7. '``' → logprob: -20.375001907348633
    8. '           ' → logprob: -20.750001907348633
    9. '`' → logprob: -20.875001907348633
    10. '
' → logprob: -21.250001907348633

Token 122: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3909898102283478
    2. '   ' → logprob: -1.1409897804260254
    3. '<|end|>' → logprob: -6.390989780426025
    4. ' print' → logprob: -7.265989780426025
    5. ')' → logprob: -7.515989780426025
    6. '    
' → logprob: -7.765989780426025
    7. '
' → logprob: -8.890990257263184
    8. 'else' → logprob: -9.140990257263184
    9. '#print' → logprob: -9.265990257263184
    10. '(print' → logprob: -9.390990257263184

Token 124: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0017050558235496283
    2. '   ' → logprob: -6.876705169677734
    3. 'if' → logprob: -7.501705169677734
    4. 'else' → logprob: -9.501705169677734
    5. ' print' → logprob: -10.376705169677734
    6. '```' → logprob: -11.376705169677734
    7. ' if' → logprob: -13.501705169677734
    8. 'for' → logprob: -15.501705169677734
    9. '(print' → logprob: -15.626705169677734
    10. '    
' → logprob: -15.626705169677734

Token 125: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.03072083741426468
    2. '(' → logprob: -3.5307209491729736
    3. '("' → logprob: -8.155720710754395
    4. '(f' → logprob: -8.280720710754395
    5. '(arr' → logprob: -9.030720710754395
    6. '('' → logprob: -9.030720710754395
    7. '()' → logprob: -9.780720710754395
    8. ' (' → logprob: -9.780720710754395
    9. '(len' → logprob: -10.530720710754395
    10. '((' → logprob: -10.655720710754395

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -15.000000953674316
    3. ')`' → logprob: -15.125000953674316
    4. ')
' → logprob: -15.500000953674316
    5. '))' → logprob: -16.250001907348633
    6. '`)' → logprob: -16.375001907348633
    7. ',' → logprob: -16.875001907348633
    8. '*' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.250001907348633
    10. ')}' → logprob: -17.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 124
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 71
Tokens correctement prédits (top 10): 107
Précision stricte (1ère position): 52.42%
Précision adaptée (1ère position): 57.26%
Précision (top 10): 86.29%
================================================================================
