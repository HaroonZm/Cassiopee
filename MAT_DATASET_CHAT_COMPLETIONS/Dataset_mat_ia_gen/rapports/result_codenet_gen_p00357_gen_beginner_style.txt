================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
d = []
for _ in range(N):
    d.append(int(input()))

positions = [i * 10 for i in range(N)]

# Fonction pour vérifier si on peut aller de left à right en sautant uniquement vers l'avant
def can_go_forward():
    current = 0
    while current < N - 1:
        jumped = False
        # On cherche un trampoline à sauter vers la droite
        for next_tramp in range(current + 1, N):
            dist = positions[next_tramp] - positions[current]
            if dist <= d[current]:
                current = next_tramp
                jumped = True
                break
        if not jumped:
            return False
    return True

# Fonction pour vérifier si on peut revenir de right à left en sautant uniquement vers l'arrière
def can_go_back():
    current = N - 1
    while current > 0:
        jumped = False
        # On cherche un trampoline à sauter vers la gauche
        for prev_tramp in range(current - 1, -1, -1):
            dist = positions[current] - positions[prev_tramp]
            if dist <= d[current]:
                current = prev_tramp
                jumped = True
                break
        if not jumped:
            return False
    return True

if can_go_forward() and can_go_back():
    print("yes")
else:
    print("no")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003874166286550462
    2. '('' → logprob: -8.750387191772461
    3. ''' → logprob: -9.125387191772461
    4. '(N' → logprob: -9.875387191772461
    5. '```' → logprob: -10.625387191772461
    6. '`' → logprob: -11.625387191772461
    7. '()' → logprob: -11.625387191772461
    8. '("("' → logprob: -11.875387191772461
    9. '[' → logprob: -12.000387191772461
    10. '(
' → logprob: -12.750387191772461

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '`)' → logprob: -9.79057502746582
    10. '(

' → logprob: -9.79057502746582

Token 5: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39131131768226624
    2. '=' → logprob: -1.8913112878799438
    3. '[' → logprob: -2.8913114070892334
    4. 'e' → logprob: -3.0163114070892334
    5. '[i' → logprob: -3.8913114070892334
    6. 'i' → logprob: -4.266311168670654
    7. '.' → logprob: -4.516311168670654
    8. 'a' → logprob: -5.766311168670654
    9. '[:]' → logprob: -6.141311168670654
    10. 'p' → logprob: -6.266311168670654

Token 7: ' []
' (ID: 8911)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.04754587262868881
    2. ' {}' → logprob: -3.172545909881592
    3. 'dict' → logprob: -5.547545909881592
    4. '{' → logprob: -8.297545433044434
    5. ' dict' → logprob: -9.297545433044434
    6. '[]' → logprob: -9.547545433044434
    7. 'input' → logprob: -9.922545433044434
    8. 'list' → logprob: -10.172545433044434
    9. '0' → logprob: -10.672545433044434
    10. ' ' → logprob: -10.672545433044434

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015320050297304988
    2. ' for' → logprob: -6.501532077789307
    3. '[' → logprob: -12.126531600952148
    4. '```' → logprob: -12.126531600952148
    5. '_' → logprob: -12.376531600952148
    6. 'd' → logprob: -12.626531600952148
    7. '`' → logprob: -12.751531600952148
    8. 'i' → logprob: -13.501531600952148
    9. 'f' → logprob: -13.751531600952148
    10. ' ' → logprob: -13.876531600952148

Token 9: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006396549753844738
    2. ' i' → logprob: -5.131396770477295
    3. '  ' → logprob: -7.881396770477295
    4. ' _' → logprob: -10.256396293640137
    5. 'i' → logprob: -10.881396293640137
    6. '_' → logprob: -11.381396293640137
    7. ' d' → logprob: -11.381396293640137
    8. ' ‌' → logprob: -12.131396293640137
    9. ' N' → logprob: -13.131396293640137
    10. ' ' → logprob: -13.756396293640137

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.127680242061615
    2. 'in' → logprob: -2.3776803016662598
    3. ' ' → logprob: -4.00268030166626
    4. ' i' → logprob: -5.25268030166626
    5. 'i' → logprob: -6.12768030166626
    6. 'n' → logprob: -6.75268030166626
    7. '  ' → logprob: -9.252679824829102
    8. ' n' → logprob: -9.502679824829102
    9. 'd' → logprob: -10.377679824829102
    10. '_' → logprob: -11.377679824829102

Token 11: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007608635816723108
    2. ' range' → logprob: -4.882608413696289
    3. 'ran' → logprob: -14.257608413696289
    4. '(range' → logprob: -14.382608413696289
    5. '	range' → logprob: -15.132608413696289
    6. 'd' → logprob: -15.257608413696289
    7. 'rang' → logprob: -15.257608413696289
    8. 'ange' → logprob: -16.25760841369629
    9. ' ' → logprob: -16.63260841369629
    10. ')' → logprob: -16.63260841369629

Token 12: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01449077669531107
    2. ' (' → logprob: -4.264490604400635
    3. '(N' → logprob: -8.389491081237793
    4. '(n' → logprob: -10.389491081237793
    5. '(range' → logprob: -10.389491081237793
    6. '(
' → logprob: -10.889491081237793
    7. ' N' → logprob: -12.764491081237793
    8. ' range' → logprob: -12.889491081237793
    9. '(int' → logprob: -13.014491081237793
    10. ')' → logprob: -13.014491081237793

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6330285668373108
    2. ')' → logprob: -0.7580285668373108
    3. ':' → logprob: -8.758028984069824
    4. '):
' → logprob: -8.883028984069824
    5. ' )' → logprob: -9.383028984069824
    6. ' ):' → logprob: -10.383028984069824
    7. ')
' → logprob: -12.508028984069824
    8. ')d' → logprob: -13.383028984069824
    9. ' ' → logprob: -13.508028984069824
    10. '+' → logprob: -13.633028984069824

Token 14: '   ' (ID: 271)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.14717799425125122
    2. '   ' → logprob: -2.5221779346466064
    3. 'd' → logprob: -3.0221779346466064
    4. '    ' → logprob: -5.3971781730651855
    5. '```' → logprob: -6.8971781730651855
    6. ' `' → logprob: -7.5221781730651855
    7. ' input' → logprob: -7.5221781730651855
    8. ' ' → logprob: -8.397177696228027
    9. ' ```' → logprob: -8.647177696228027
    10. ' data' → logprob: -9.022177696228027

Token 15: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -1.0201665163040161
    2. 'data' → logprob: -1.2701665163040161
    3. ' data' → logprob: -2.2701663970947266
    4. ' d' → logprob: -2.2701663970947266
    5. '   ' → logprob: -2.5201663970947266
    6. 'x' → logprob: -4.145166397094727
    7. 's' → logprob: -4.520166397094727
    8. 'n' → logprob: -4.770166397094727
    9. 'a' → logprob: -5.395166397094727
    10. ' line' → logprob: -5.395166397094727

Token 16: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.31333786249160767
    2. '.' → logprob: -1.313337802886963
    3. '.a' → logprob: -10.938338279724121
    4. 'append' → logprob: -11.063338279724121
    5. '.ap' → logprob: -11.438338279724121
    6. ' .' → logprob: -11.938338279724121
    7. '.app' → logprob: -11.938338279724121
    8. '.=' → logprob: -12.563338279724121
    9. '.e' → logprob: -12.688338279724121
    10. '.i' → logprob: -12.813338279724121

Token 17: '(int' (ID: 2742)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.7997406125068665
    2. '(int' → logprob: -1.1747405529022217
    3. '(' → logprob: -1.5497405529022217
    4. '(input' → logprob: -4.049740791320801
    5. '([]' → logprob: -5.049740791320801
    6. 'list' → logprob: -5.799740791320801
    7. '(tuple' → logprob: -7.174740791320801
    8. '([' → logprob: -7.924740791320801
    9. '({' → logprob: -8.1747407913208
    10. 'int' → logprob: -8.2997407913208

Token 18: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3132948875427246
    2. '(' → logprob: -1.3132948875427246
    3. ')' → logprob: -10.938295364379883
    4. '(
' → logprob: -12.438295364379883
    5. 'input' → logprob: -12.938295364379883
    6. ' (' → logprob: -13.188295364379883
    7. '(in' → logprob: -13.313295364379883
    8. '(

' → logprob: -13.563295364379883
    9. '()' → logprob: -13.688295364379883
    10. '(s' → logprob: -14.813295364379883

Token 19: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5852916836738586
    2. '())' → logprob: -0.8352916836738586
    3. '()' → logprob: -4.710291862487793
    4. ')' → logprob: -9.460291862487793
    5. '(' → logprob: -9.835291862487793
    6. '))' → logprob: -9.835291862487793
    7. '())))' → logprob: -10.085291862487793
    8. '()))
' → logprob: -10.710291862487793
    9. '())
' → logprob: -10.835291862487793
    10. '()));' → logprob: -11.460291862487793

Token 20: 'positions' (ID: 32297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.013957449235022068
    2. 'm' → logprob: -5.388957500457764
    3. 's' → logprob: -5.763957500457764
    4. 'max' → logprob: -6.138957500457764
    5. 'print' → logprob: -6.388957500457764
    6. 'for' → logprob: -7.513957500457764
    7. 'sum' → logprob: -7.638957500457764
    8. 'sorted' → logprob: -7.763957500457764
    9. 'mean' → logprob: -8.763957023620605
    10. 'total' → logprob: -9.138957023620605

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6448549032211304
    2. '=' → logprob: -1.7698549032211304
    3. ' =' → logprob: -1.8948549032211304
    4. '.' → logprob: -2.01985502243042
    5. '_' → logprob: -2.51985502243042
    6. '()' → logprob: -2.64485502243042
    7. '(' → logprob: -2.64485502243042
    8. ')' → logprob: -2.76985502243042
    9. '[:]' → logprob: -3.64485502243042
    10. '_positions' → logprob: -3.89485502243042

Token 22: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09198713302612305
    2. '[' → logprob: -2.591987133026123
    3. '{}' → logprob: -4.591987133026123
    4. '[d' → logprob: -7.091987133026123
    5. '[len' → logprob: -7.216987133026123
    6. '{' → logprob: -7.466987133026123
    7. '[]
' → logprob: -8.841987609863281
    8. ' []' → logprob: -9.091987609863281
    9. '[:]' → logprob: -9.216987609863281
    10. 'd' → logprob: -9.591987609863281

Token 23: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042102161794900894
    2. 'i' → logprob: -3.417102098464966
    3. 'd' → logprob: -5.917102336883545
    4. ']' → logprob: -6.042102336883545
    5. '-' → logprob: -6.292102336883545
    6. '_]' → logprob: -7.417102336883545
    7. '(i' → logprob: -8.792101860046387
    8. 'x' → logprob: -8.917101860046387
    9. '(' → logprob: -9.042101860046387
    10. ' ' → logprob: -9.542101860046387

Token 24: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05175115168094635
    2. 'for' → logprob: -3.051751136779785
    3. '+' → logprob: -5.926751136779785
    4. ' ' → logprob: -7.926751136779785
    5. ')' → logprob: -9.926751136779785
    6. ' +' → logprob: -10.301751136779785
    7. ']' → logprob: -11.426751136779785
    8. '	for' → logprob: -11.551751136779785
    9. ',' → logprob: -11.676751136779785
    10. '-' → logprob: -12.301751136779785

Token 25: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.36951011419296265
    2. ' ' → logprob: -1.6195101737976074
    3. '0' → logprob: -3.2445101737976074
    4. '100' → logprob: -4.619510173797607
    5. '1' → logprob: -4.744510173797607
    6. '10' → logprob: -4.869510173797607
    7. '4' → logprob: -4.869510173797607
    8. '3' → logprob: -5.244510173797607
    9. '(' → logprob: -5.494510173797607
    10. '20' → logprob: -5.744510173797607

Token 26: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3777461349964142
    2. '0' → logprob: -2.127746105194092
    3. '100' → logprob: -2.752746105194092
    4. '1' → logprob: -3.502746105194092
    5. '10' → logprob: -3.752746105194092
    6. ' ' → logprob: -4.502746105194092
    7. '3' → logprob: -4.627746105194092
    8. '(' → logprob: -5.127746105194092
    9. '200' → logprob: -5.377746105194092
    10. '5' → logprob: -5.377746105194092

Token 27: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1351962685585022
    2. ')' → logprob: -2.6351962089538574
    3. 'for' → logprob: -3.1351962089538574
    4. ',' → logprob: -5.010196208953857
    5. ' ' → logprob: -6.260196208953857
    6. ' )' → logprob: -6.635196208953857
    7. ']' → logprob: -7.635196208953857
    8. '+' → logprob: -7.760196208953857
    9. ' ,' → logprob: -8.885196685791016
    10. ' ]' → logprob: -9.385196685791016

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3657623827457428
    2. ' range' → logprob: -1.2407623529434204
    3. 'range' → logprob: -4.865762233734131
    4. 'i' → logprob: -5.115762233734131
    5. ' d' → logprob: -6.115762233734131
    6. '_' → logprob: -7.490762233734131
    7. ' _' → logprob: -8.115762710571289
    8. 'd' → logprob: -8.615762710571289
    9. ' ' → logprob: -8.865762710571289
    10. '_i' → logprob: -11.490762710571289

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002287760376930237
    2. 'in' → logprob: -6.752287864685059
    3. ' range' → logprob: -7.127287864685059
    4. 'range' → logprob: -8.127287864685059
    5. '(range' → logprob: -11.252287864685059
    6. 'd' → logprob: -13.377287864685059
    7. ' ' → logprob: -13.627287864685059
    8. ')' → logprob: -14.377287864685059
    9. '<|end|>' → logprob: -14.377287864685059
    10. ' xrange' → logprob: -14.877287864685059

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.35490140318870544
    2. ' range' → logprob: -1.2299014329910278
    3. 'd' → logprob: -5.229901313781738
    4. ' d' → logprob: -6.854901313781738
    5. '	range' → logprob: -11.979901313781738
    6. ' ' → logprob: -12.354901313781738
    7. 'r' → logprob: -12.604901313781738
    8. 'rang' → logprob: -12.854901313781738
    9. ' xrange' → logprob: -12.854901313781738
    10. '(range' → logprob: -13.479901313781738

Token 31: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06420844793319702
    2. '(' → logprob: -2.939208507537842
    3. '(len' → logprob: -4.689208507537842
    4. '(n' → logprob: -9.939208030700684
    5. '((' → logprob: -10.814208030700684
    6. '(-' → logprob: -12.689208030700684
    7. '(
' → logprob: -12.939208030700684
    8. 'N' → logprob: -13.314208030700684
    9. 'len' → logprob: -13.439208030700684
    10. ' (' → logprob: -13.814208030700684

Token 32: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.5213274309644476e-05
    2. ')' → logprob: -12.375015258789062
    3. '+' → logprob: -12.500015258789062
    4. ')])' → logprob: -13.000015258789062
    5. ']' → logprob: -13.375015258789062
    6. ' )' → logprob: -13.750015258789062
    7. '])]' → logprob: -14.375015258789062
    8. '')]' → logprob: -14.875015258789062
    9. ')]
' → logprob: -15.000015258789062
    10. '))' → logprob: -15.250015258789062

Token 33: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31708455085754395
    2. 'print' → logprob: -2.692084550857544
    3. 'he' → logprob: -2.942084550857544
    4. 'mean' → logprob: -3.817084550857544
    5. 'median' → logprob: -4.192084312438965
    6. 'for' → logprob: -4.317084312438965
    7. 's' → logprob: -4.317084312438965
    8. 'sum' → logprob: -4.442084312438965
    9. 'diff' → logprob: -4.692084312438965
    10. 'total' → logprob: -5.067084312438965

Token 34: ' Fonction' (ID: 189149)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.5142884254455566
    2. ' total' → logprob: -2.0142884254455566
    3. ' import' → logprob: -2.7642884254455566
    4. ' plt' → logprob: -2.7642884254455566
    5. 'max' → logprob: -2.8892884254455566
    6. ' for' → logprob: -3.0142884254455566
    7. ' mean' → logprob: -3.1392884254455566
    8. ' positions' → logprob: -3.1392884254455566
    9. ' result' → logprob: -3.2642884254455566
    10. 'total' → logprob: -3.5142884254455566

Token 35: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027071540243923664
    2. ' def' → logprob: -6.502707004547119
    3. 's' → logprob: -8.002707481384277
    4. 'de' → logprob: -8.002707481384277
    5. ' de' → logprob: -9.377707481384277
    6. ' ' → logprob: -9.377707481384277
    7. 'calculate' → logprob: -9.377707481384277
    8. ')' → logprob: -10.252707481384277
    9. 'd' → logprob: -10.502707481384277
    10. ' to' → logprob: -10.627707481384277

Token 36: ' vérifier' (ID: 93671)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.14877650141716003
    2. 'calcul' → logprob: -2.2737765312194824
    3. 'tr' → logprob: -3.7737765312194824
    4. 'cal' → logprob: -5.273776531219482
    5. ' trouver' → logprob: -6.273776531219482
    6. ' tr' → logprob: -6.273776531219482
    7. ' calc' → logprob: -7.648776531219482
    8. 'calculate' → logprob: -7.773776531219482
    9. ' afficher' → logprob: -8.148776054382324
    10. ' calculate' → logprob: -8.148776054382324

Token 37: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48657482862472534
    2. ' si' → logprob: -1.2365748882293701
    3. ' la' → logprob: -2.61157488822937
    4. '<|end|>' → logprob: -5.236574649810791
    5. ' l' → logprob: -5.486574649810791
    6. 'si' → logprob: -5.486574649810791
    7. 'if' → logprob: -6.611574649810791
    8. 'la' → logprob: -6.736574649810791
    9. 'def' → logprob: -7.111574649810791
    10. ' ' → logprob: -7.236574649810791

Token 38: ' on' (ID: 402)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.2264893054962158
    2. ' la' → logprob: -1.4764893054962158
    3. 'une' → logprob: -2.101489305496216
    4. ' le' → logprob: -2.726489305496216
    5. ' les' → logprob: -2.851489305496216
    6. 'les' → logprob: -3.101489305496216
    7. ' un' → logprob: -3.226489305496216
    8. 'le' → logprob: -3.726489305496216
    9. 'la' → logprob: -3.726489305496216
    10. ' l' → logprob: -3.976489305496216

Token 39: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.22082288563251495
    2. ' peux' → logprob: -2.095822811126709
    3. 'pe' → logprob: -3.220822811126709
    4. 'a' → logprob: -4.970822811126709
    5. ' a' → logprob: -5.095822811126709
    6. ' can' → logprob: -5.720822811126709
    7. 's' → logprob: -5.970822811126709
    8. ' peu' → logprob: -6.595822811126709
    9. ' pourra' → logprob: -6.720822811126709
    10. 'r' → logprob: -6.970822811126709

Token 40: ' aller' (ID: 18383)
  Prédit: ' placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' placer' → logprob: -0.8179299235343933
    2. 'placer' → logprob: -1.067929983139038
    3. 'tr' → logprob: -3.817929983139038
    4. ' position' → logprob: -3.817929983139038
    5. ' align' → logprob: -4.317929744720459
    6. ' couvrir' → logprob: -4.505429744720459
    7. ' place' → logprob: -4.755429744720459
    8. ' tracer' → logprob: -4.755429744720459
    9. ' sé' → logprob: -4.880429744720459
    10. ' form' → logprob: -4.880429744720459

Token 41: ' de' (ID: 334)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6203685402870178
    2. 'jus' → logprob: -1.995368480682373
    3. ' au' → logprob: -2.120368480682373
    4. ' jusqu' → logprob: -2.495368480682373
    5. ' d' → logprob: -3.495368480682373
    6. ' plus' → logprob: -3.745368480682373
    7. 'à' → logprob: -4.120368480682373
    8. ' de' → logprob: -4.370368480682373
    9. 'd' → logprob: -4.745368480682373
    10. ' jusque' → logprob: -5.120368480682373

Token 42: ' left' (ID: 3561)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.3760899305343628
    2. ' i' → logprob: -1.6260899305343628
    3. 'position' → logprob: -1.6260899305343628
    4. 'i' → logprob: -1.7510899305343628
    5. ' la' → logprob: -2.8760900497436523
    6. 'la' → logprob: -3.6260900497436523
    7. ' position' → logprob: -3.7510900497436523
    8. ' positions' → logprob: -3.8760900497436523
    9. 'une' → logprob: -4.501090049743652
    10. ' une' → logprob: -4.626090049743652

Token 43: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5940427780151367
    2. ' à' → logprob: -0.8440427780151367
    3. 'to' → logprob: -4.969042778015137
    4. ' au' → logprob: -5.969042778015137
    5. 'à' → logprob: -6.094042778015137
    6. '<|end|>' → logprob: -6.594042778015137
    7. '```' → logprob: -7.219042778015137
    8. 'index' → logprob: -7.344042778015137
    9. ' ' → logprob: -7.469042778015137
    10. ' jusqu' → logprob: -7.719042778015137

Token 44: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6328095197677612
    2. 'right' → logprob: -0.7578095197677612
    3. ' droite' → logprob: -10.00780963897705
    4. 'rig' → logprob: -10.13280963897705
    5. ' rig' → logprob: -10.38280963897705
    6. ' ' → logprob: -10.88280963897705
    7. 'left' → logprob: -11.13280963897705
    8. '```' → logprob: -11.50780963897705
    9. '	right' → logprob: -11.63280963897705
    10. 'r' → logprob: -12.00780963897705

Token 45: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16458991169929504
    2. ':' → logprob: -2.2895898818969727
    3. ' :' → logprob: -3.5395898818969727
    4. ' def' → logprob: -4.164589881896973
    5. '```' → logprob: -6.414589881896973
    6. ' (' → logprob: -7.289589881896973
    7. ':def' → logprob: -7.414589881896973
    8. '_' → logprob: -7.414589881896973
    9. ' ' → logprob: -7.539589881896973
    10. ',' → logprob: -7.664589881896973

Token 46: ' saut' (ID: 111480)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7622342109680176
    2. ' une' → logprob: -1.5122342109680176
    3. '1' → logprob: -2.1372342109680176
    4. ' ' → logprob: -2.7622342109680176
    5. 'un' → logprob: -3.6372342109680176
    6. '10' → logprob: -3.7622342109680176
    7. 'd' → logprob: -4.512234210968018
    8. 'ligne' → logprob: -4.512234210968018
    9. '```' → logprob: -4.637234210968018
    10. 'one' → logprob: -4.762234210968018

Token 47: 'ant' (ID: 493)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46527647972106934
    2. 's' → logprob: -1.3402764797210693
    3. ' ' → logprob: -2.5902764797210693
    4. ')' → logprob: -3.9652764797210693
    5. ' _' → logprob: -5.840276718139648
    6. ',' → logprob: -6.215276718139648
    7. ' =' → logprob: -6.840276718139648
    8. '_\' → logprob: -6.965276718139648
    9. ' )' → logprob: -7.215276718139648
    10. '_p' → logprob: -7.215276718139648

Token 48: ' uniquement' (ID: 65527)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.045012135058641434
    2. '_' → logprob: -4.1700119972229
    3. 's' → logprob: -5.5450119972229
    4. '  ' → logprob: -5.5450119972229
    5. '1' → logprob: -5.7950119972229
    6. '```' → logprob: -6.0450119972229
    7. '<|end|>' → logprob: -6.5450119972229
    8. ',' → logprob: -6.7950119972229
    9. ' ' → logprob: -6.7950119972229
    10. ' de' → logprob: -6.9200119972229

Token 49: ' vers' (ID: 3640)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.892269492149353
    2. 'd' → logprob: -2.0172696113586426
    3. 'par' → logprob: -2.1422696113586426
    4. 'sur' → logprob: -2.1422696113586426
    5. ' ' → logprob: -2.5172696113586426
    6. 'over' → logprob: -2.7672696113586426
    7. 'positions' → logprob: -2.7672696113586426
    8. '1' → logprob: -3.1422696113586426
    9. '10' → logprob: -3.3922696113586426
    10. ' d' → logprob: -3.5172696113586426

Token 50: ' l' (ID: 305)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.021601524204015732
    2. ' right' → logprob: -4.521601676940918
    3. 'positions' → logprob: -5.021601676940918
    4. 'le' → logprob: -7.646601676940918
    5. ' droite' → logprob: -7.646601676940918
    6. 'des' → logprob: -7.771601676940918
    7. 'dro' → logprob: -7.896601676940918
    8. ' positions' → logprob: -8.021601676940918
    9. 'left' → logprob: -8.271601676940918
    10. '```' → logprob: -8.646601676940918

Token 51: ''avant' (ID: 161711)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.1030561923980713
    2. 'a' → logprob: -1.8530561923980713
    3. 'la' → logprob: -1.9780561923980713
    4. 'dro' → logprob: -2.9780561923980713
    5. ' droite' → logprob: -2.9780561923980713
    6. 'une' → logprob: -3.6030561923980713
    7. 'g' → logprob: -3.8530561923980713
    8. 'e' → logprob: -3.9780561923980713
    9. 'u' → logprob: -4.103055953979492
    10. 'l' → logprob: -4.228055953979492

Token 52: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01592116244137287
    2. ':' → logprob: -4.515921115875244
    3. ',' → logprob: -6.265921115875244
    4. ' def' → logprob: -6.765921115875244
    5. '
' → logprob: -7.140921115875244
    6. 'de' → logprob: -7.890921115875244
    7. '\' → logprob: -9.515921592712402
    8. ' :' → logprob: -9.515921592712402
    9. ')' → logprob: -9.765921592712402
    10. ':def' → logprob: -9.765921592712402

Token 53: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009470365941524506
    2. 'd' → logprob: -5.134470462799072
    3. ':' → logprob: -6.009470462799072
    4. 'de' → logprob: -7.884470462799072
    5. ' def' → logprob: -8.634469985961914
    6. '
' → logprob: -8.884469985961914
    7. ':def' → logprob: -9.384469985961914
    8. ',' → logprob: -9.509469985961914
    9. '\' → logprob: -9.509469985961914
    10. '```' → logprob: -10.259469985961914

Token 54: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.10692188888788223
    2. 'can' → logprob: -2.356921911239624
    3. ' is' → logprob: -5.106921672821045
    4. ' peut' → logprob: -8.731922149658203
    5. 'is' → logprob: -9.356922149658203
    6. ' jump' → logprob: -9.856922149658203
    7. ' est' → logprob: -9.856922149658203
    8. ' peux' → logprob: -9.981922149658203
    9. '	can' → logprob: -10.106922149658203
    10. '_can' → logprob: -10.606922149658203

Token 55: '_go' (ID: 90361)
  Prédit: '_jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_jump' → logprob: -0.0024575800634920597
    2. '_re' → logprob: -7.002457618713379
    3. '_move' → logprob: -7.127457618713379
    4. '_go' → logprob: -7.627457618713379
    5. '_continue' → logprob: -9.627457618713379
    6. '_make' → logprob: -10.127457618713379
    7. '_tr' → logprob: -10.377457618713379
    8. 'jump' → logprob: -10.502457618713379
    9. '_j' → logprob: -10.627457618713379
    10. '_walk' → logprob: -11.377457618713379

Token 56: '_forward' (ID: 75888)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.20894375443458557
    2. '(left' → logprob: -2.3339438438415527
    3. '(' → logprob: -2.9589438438415527
    4. '(from' → logprob: -4.208943843841553
    5. '_forward' → logprob: -4.833943843841553
    6. '_left' → logprob: -5.083943843841553
    7. '_' → logprob: -5.583943843841553
    8. 'from' → logprob: -5.958943843841553
    9. ' (' → logprob: -6.208943843841553
    10. '_to' → logprob: -7.083943843841553

Token 57: '():
' (ID: 8595)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.47689640522003174
    2. '(' → logprob: -0.9768964052200317
    3. '(from' → logprob: -6.976896286010742
    4. '(start' → logprob: -7.851896286010742
    5. ' (' → logprob: -7.976896286010742
    6. '(line' → logprob: -8.601896286010742
    7. '(next' → logprob: -8.976896286010742
    8. '(_' → logprob: -9.226896286010742
    9. '_left' → logprob: -9.226896286010742
    10. '(right' → logprob: -9.226896286010742

Token 58: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6757957339286804
    2. '(' → logprob: -1.5507957935333252
    3. '   ' → logprob: -1.6757957935333252
    4. ':' → logprob: -2.550795793533325
    5. '(True' → logprob: -6.175795555114746
    6. '):' → logprob: -6.550795555114746
    7. '(left' → logprob: -6.675795555114746
    8. '<|end|>' → logprob: -6.925795555114746
    9. ':return' → logprob: -7.050795555114746
    10. '(n' → logprob: -7.175795555114746

Token 59: ' current' (ID: 2208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07757310569286346
    2. '       ' → logprob: -4.202573299407959
    3. ' pass' → logprob: -4.202573299407959
    4. 'pass' → logprob: -4.452573299407959
    5. ':' → logprob: -4.702573299407959
    6. ' for' → logprob: -4.827573299407959
    7. '    ' → logprob: -5.827573299407959
    8. 'return' → logprob: -6.077573299407959
    9. 'for' → logprob: -6.202573299407959
    10. ' return' → logprob: -6.327573299407959

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42080843448638916
    2. '=' → logprob: -1.7958084344863892
    3. '_pos' → logprob: -2.6708083152770996
    4. '_index' → logprob: -2.7958083152770996
    5. '_position' → logprob: -3.1708083152770996
    6. '_idx' → logprob: -6.9208083152771
    7. 'pos' → logprob: -6.9208083152771
    8. '_positions' → logprob: -7.4208083152771
    9. ',' → logprob: -7.5458083152771
    10. '_' → logprob: -7.6708083152771

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1525142639875412
    2. ' ' → logprob: -2.0275142192840576
    3. ' positions' → logprob: -5.152514457702637
    4. 'positions' → logprob: -5.652514457702637
    5. ' left' → logprob: -8.527514457702637
    6. 'left' → logprob: -9.027514457702637
    7. ' d' → logprob: -9.652514457702637
    8. 'd' → logprob: -10.527514457702637
    9. '   ' → logprob: -11.027514457702637
    10. '1' → logprob: -11.277514457702637

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007708839140832424
    2. 'positions' → logprob: -5.13270902633667
    3. ' ' → logprob: -6.88270902633667
    4. 'left' → logprob: -7.63270902633667
    5. ' positions' → logprob: -8.757708549499512
    6. 'd' → logprob: -11.070208549499512
    7. '1' → logprob: -11.070208549499512
    8. 'current' → logprob: -11.320208549499512
    9. ' left' → logprob: -11.445208549499512
    10. 'right' → logprob: -11.507708549499512

Token 63: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.38098740577697754
    2. ' for' → logprob: -1.5059874057769775
    3. 'while' (adapté à ' while') → logprob: -3.0059874057769775
    4. 'for' → logprob: -3.6309874057769775
    5. '
' → logprob: -4.505987167358398
    6. '   ' → logprob: -5.380987167358398
    7. ' current' → logprob: -7.130987167358398
    8. 'current' → logprob: -7.505987167358398
    9. '	while' → logprob: -7.755987167358398
    10. '<|end|>' → logprob: -7.755987167358398

Token 66: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3872128129005432
    2. ' current' → logprob: -1.1372127532958984
    3. ' True' → logprob: -9.137212753295898
    4. 'positions' → logprob: -9.387212753295898
    5. 'True' → logprob: -9.637212753295898
    6. ' positions' → logprob: -10.387212753295898
    7. '(current' → logprob: -10.637212753295898
    8. 'urrent' → logprob: -11.762212753295898
    9. '	current' → logprob: -12.137212753295898
    10. 'can' → logprob: -12.637212753295898

Token 67: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.034343618899583817
    2. '<' → logprob: -3.409343719482422
    3. ' !=' → logprob: -7.784343719482422
    4. '<n' → logprob: -9.284343719482422
    5. '<len' → logprob: -9.909343719482422
    6. ' <=' → logprob: -10.284343719482422
    7. ' ' → logprob: -10.784343719482422
    8. '!=' → logprob: -11.034343719482422
    9. '+' → logprob: -11.409343719482422
    10. '<|end|>' → logprob: -11.409343719482422

Token 68: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6069324016571045
    2. 'N' → logprob: -0.8569324016571045
    3. 'len' → logprob: -3.8569324016571045
    4. ' len' → logprob: -4.856932640075684
    5. ' right' → logprob: -7.106932640075684
    6. 'right' → logprob: -7.981932640075684
    7. 'n' → logprob: -8.356932640075684
    8. ' n' → logprob: -9.356932640075684
    9. ' ' → logprob: -10.481932640075684
    10. '>N' → logprob: -11.981932640075684

Token 69: ' -' (ID: 533)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02308124676346779
    2. '-' → logprob: -4.398081302642822
    3. 'and' → logprob: -5.148081302642822
    4. ' -' → logprob: -5.898081302642822
    5. ':' → logprob: -6.398081302642822
    6. ':
' → logprob: -9.023080825805664
    7. '   ' → logprob: -9.523080825805664
    8. ' ' → logprob: -9.773080825805664
    9. '    ' → logprob: -11.398080825805664
    10. ' :' → logprob: -11.523080825805664

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013269031187519431
    2. ' ' → logprob: -6.626327037811279
    3. '2' → logprob: -14.626326560974121
    4. '-' → logprob: -15.751326560974121
    5. '```' → logprob: -16.126327514648438
    6. '  ' → logprob: -16.251327514648438
    7. '   ' → logprob: -16.251327514648438
    8. '<|end|>' → logprob: -16.813827514648438
    9. '...' → logprob: -18.001327514648438
    10. ' ' → logprob: -18.063827514648438

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '2' → logprob: -16.625001907348633
    4. '-' → logprob: -17.750001907348633
    5. '```' → logprob: -17.875001907348633
    6. '<|end|>' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '...' → logprob: -19.437501907348633
    9. '１' → logprob: -19.562501907348633
    10. '۱' → logprob: -20.312501907348633

Token 72: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.37060868740081787
    2. ':' → logprob: -1.2456086874008179
    3. ':
' → logprob: -3.9956088066101074
    4. 'and' → logprob: -6.120608806610107
    5. '   ' → logprob: -7.620608806610107
    6. '       ' → logprob: -7.745608806610107
    7. '<|end|>' → logprob: -8.87060832977295
    8. ' :' → logprob: -9.62060832977295
    9. '<|end|>' → logprob: -10.24560832977295
    10. '):
' → logprob: -10.49560832977295

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014755921438336372
    2. '<|end|>' → logprob: -4.889755725860596
    3. ' if' → logprob: -5.889755725860596
    4. ':' → logprob: -6.889755725860596
    5. '        
' → logprob: -7.014755725860596
    6. '   ' → logprob: -7.639755725860596
    7. '<|end|>' → logprob: -7.764755725860596
    8. '    ' → logprob: -8.139756202697754
    9. 'if' → logprob: -8.514756202697754
    10. '
' → logprob: -8.889756202697754

Token 74: ' jumped' (ID: 48704)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9807243943214417
    2. '       ' → logprob: -1.3557243347167969
    3. ' if' → logprob: -1.4807243347167969
    4. 'next' → logprob: -2.480724334716797
    5. 'found' → logprob: -3.855724334716797
    6. ' next' → logprob: -4.105724334716797
    7. ' found' → logprob: -4.730724334716797
    8. '   ' → logprob: -5.730724334716797
    9. 'jump' → logprob: -5.980724334716797
    10. 'step' → logprob: -7.605724334716797

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16113194823265076
    2. '=' → logprob: -1.9111319780349731
    3. 'to' → logprob: -7.411131858825684
    4. '_to' → logprob: -9.286131858825684
    5. ' +=' → logprob: -9.536131858825684
    6. '+=' → logprob: -10.411131858825684
    7. ' ' → logprob: -11.036131858825684
    8. ',' → logprob: -11.036131858825684
    9. '_next' → logprob: -11.786131858825684
    10. '=True' → logprob: -12.036131858825684

Token 76: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019348275382071733
    2. ' False' → logprob: -6.251935005187988
    3. 'True' → logprob: -12.376935005187988
    4. '0' → logprob: -14.001935005187988
    5. 'F' → logprob: -14.876935005187988
    6. '   ' → logprob: -15.001935005187988
    7. '=False' → logprob: -15.626935005187988
    8. '(False' → logprob: -15.626935005187988
    9. 'current' → logprob: -16.626934051513672
    10. ' ' → logprob: -17.376934051513672

Token 77: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5623422861099243
    2. '       ' → logprob: -1.4373422861099243
    3. '<|end|>' → logprob: -1.9373422861099243
    4. ' for' → logprob: -3.8123421669006348
    5. '        
' → logprob: -4.687342166900635
    6. '<|end|>' → logprob: -5.187342166900635
    7. ' 
' → logprob: -6.187342166900635
    8. 'for' → logprob: -6.562342166900635
    9. '  
' → logprob: -6.812342166900635
    10. '```' → logprob: -7.062342166900635

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15847580134868622
    2. '
' → logprob: -2.783475875854492
    3. ' for' → logprob: -3.158475875854492
    4. '<|end|>' → logprob: -3.533475875854492
    5. '        
' → logprob: -5.533475875854492
    6. 'for' → logprob: -6.033475875854492
    7. '<|end|>' → logprob: -6.783475875854492
    8. '   ' → logprob: -7.158475875854492
    9. '```' → logprob: -7.158475875854492
    10. ',' → logprob: -7.283475875854492

Token 79: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.525871217250824
    2. ' for' → logprob: -0.900871217250824
    3. '       ' → logprob: -6.150871276855469
    4. '
' → logprob: -8.525871276855469
    5. '	for' → logprob: -8.775871276855469
    6. '   ' → logprob: -9.400871276855469
    7. 'next' → logprob: -9.400871276855469
    8. '```' → logprob: -9.775871276855469
    9. ' next' → logprob: -11.150871276855469
    10. '        
' → logprob: -12.650871276855469

Token 80: ' On' (ID: 2160)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3187980651855469
    2. 'for' → logprob: -1.3187980651855469
    3. '       ' → logprob: -6.068798065185547
    4. ' if' → logprob: -6.943798065185547
    5. '<|end|>' → logprob: -7.568798065185547
    6. 'if' → logprob: -7.693798065185547
    7. '   ' → logprob: -8.193798065185547
    8. '<|end|>' → logprob: -8.193798065185547
    9. 'next' → logprob: -8.693798065185547
    10. ' next' → logprob: -8.818798065185547

Token 81: ' cherche' (ID: 52345)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6404682397842407
    2. 'for' → logprob: -0.7654682397842407
    3. 'range' → logprob: -5.390468120574951
    4. ' range' → logprob: -6.640468120574951
    5. '       ' → logprob: -8.01546859741211
    6. '=' → logprob: -9.01546859741211
    7. '   ' → logprob: -9.14046859741211
    8. 'n' → logprob: -9.26546859741211
    9. 't' → logprob: -9.39046859741211
    10. 's' → logprob: -9.51546859741211

Token 82: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5812782049179077
    2. ' for' → logprob: -1.4562782049179077
    3. ' un' → logprob: -2.3312783241271973
    4. 'j' → logprob: -3.4562783241271973
    5. 'un' → logprob: -3.7062783241271973
    6. 'next' → logprob: -3.9562783241271973
    7. ' next' → logprob: -4.581278324127197
    8. 'le' → logprob: -5.456278324127197
    9. 'the' → logprob: -5.456278324127197
    10. '       ' → logprob: -5.581278324127197

Token 83: ' trampoline' (ID: 162506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9346900582313538
    2. 'e' → logprob: -2.309689998626709
    3. ' i' → logprob: -2.309689998626709
    4. ' prochain' → logprob: -2.309689998626709
    5. ' saut' → logprob: -3.184689998626709
    6. 'j' → logprob: -3.309689998626709
    7. ' next' → logprob: -3.434689998626709
    8. 's' → logprob: -3.559689998626709
    9. ' index' → logprob: -3.559689998626709
    10. 'index' → logprob: -3.684689998626709

Token 84: ' à' (ID: 1221)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2796788215637207
    2. '       ' → logprob: -2.5296788215637207
    3. '+' → logprob: -3.6546788215637207
    4. 'plus' → logprob: -3.6546788215637207
    5. ' j' → logprob: -4.154678821563721
    6. 'i' → logprob: -4.404678821563721
    7. 'for' → logprob: -4.529678821563721
    8. 'next' → logprob: -4.779678821563721
    9. 'in' → logprob: -5.279678821563721
    10. ' for' → logprob: -5.404678821563721

Token 85: ' sa' (ID: 880)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4382181763648987
    2. 'position' → logprob: -1.938218116760254
    3. 'right' → logprob: -3.063218116760254
    4. ' droite' → logprob: -3.188218116760254
    5. 'distance' → logprob: -3.563218116760254
    6. 'positions' → logprob: -3.688218116760254
    7. ' current' → logprob: -4.438218116760254
    8. 'd' → logprob: -4.563218116760254
    9. 'une' → logprob: -4.813218116760254
    10. 'dro' → logprob: -5.188218116760254

Token 86: 'uter' (ID: 23469)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.1025666669011116
    2. 'n' → logprob: -3.102566719055176
    3. 'ut' → logprob: -4.102566719055176
    4. 't' → logprob: -4.727566719055176
    5. 'tis' → logprob: -5.352566719055176
    6. ' droite' → logprob: -6.352566719055176
    7. 'u' → logprob: -6.477566719055176
    8. 'tu' → logprob: -6.727566719055176
    9. '```' → logprob: -6.727566719055176
    10. 'ts' → logprob: -6.852566719055176

Token 87: ' vers' (ID: 3640)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8534513115882874
    2. 'en' → logprob: -2.3534512519836426
    3. '   ' → logprob: -2.4784512519836426
    4. 'from' → logprob: -2.7284512519836426
    5. ' plus' → logprob: -2.7284512519836426
    6. '+' → logprob: -2.8534512519836426
    7. ',' → logprob: -2.8534512519836426
    8. 'dans' → logprob: -4.228451251983643
    9. ' vers' → logprob: -4.353451251983643
    10. 'vers' → logprob: -4.603451251983643

Token 88: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20333832502365112
    2. 'la' → logprob: -3.203338384628296
    3. '<|end|>' → logprob: -3.703338384628296
    4. 'current' → logprob: -4.078338146209717
    5. 'right' → logprob: -4.078338146209717
    6. ' l' → logprob: -4.078338146209717
    7. '```' → logprob: -4.578338146209717
    8. '+' → logprob: -4.703338146209717
    9. 'une' → logprob: -4.953338146209717
    10. '>' → logprob: -5.078338146209717

Token 89: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.10741313546895981
    2. ' droite' → logprob: -2.8574130535125732
    3. 'right' → logprob: -3.2324130535125732
    4. 'g' → logprob: -5.982413291931152
    5. 'd' → logprob: -6.357413291931152
    6. 'position' → logprob: -8.232413291931152
    7. '```' → logprob: -9.357413291931152
    8. ' right' → logprob: -9.732413291931152
    9. '-dro' → logprob: -10.357413291931152
    10. 'next' → logprob: -10.482413291931152

Token 90: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9229660630226135
    2. ' for' → logprob: -1.5479660034179688
    3. '<|end|>' → logprob: -1.7979660034179688
    4. ',' → logprob: -2.7979660034179688
    5. ':' → logprob: -3.4229660034179688
    6. ' ' → logprob: -3.5479660034179688
    7. '   ' → logprob: -4.297966003417969
    8. '<|end|>' → logprob: -4.297966003417969
    9. '.' → logprob: -5.047966003417969
    10. ' (' → logprob: -5.047966003417969

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6518809199333191
    2. ' for' → logprob: -0.7768809199333191
    3. 'for' → logprob: -4.901880741119385
    4. '<|end|>' → logprob: -5.151880741119385
    5. '<|end|>' → logprob: -6.776880741119385
    6. '   ' → logprob: -7.026880741119385
    7. ',' → logprob: -7.276880741119385
    8. '```' → logprob: -7.651880741119385
    9. ':' → logprob: -7.776880741119385
    10. ' if' → logprob: -8.401881217956543

Token 92: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.021445300430059433
    2. 'for' (adapté à ' for') → logprob: -4.396445274353027
    3. '       ' → logprob: -5.271445274353027
    4. ' if' → logprob: -6.396445274353027
    5. '<|end|>' → logprob: -7.771445274353027
    6. ' next' → logprob: -8.271445274353027
    7. '   ' → logprob: -8.521445274353027
    8. ' current' → logprob: -8.521445274353027
    9. '```' → logprob: -8.521445274353027
    10. '<|end|>' → logprob: -8.896445274353027

Token 93: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.03823748603463173
    2. ' i' → logprob: -3.5382375717163086
    3. ' nxt' → logprob: -5.788237571716309
    4. ' j' → logprob: -6.038237571716309
    5. 'next' → logprob: -6.913237571716309
    6. ' target' → logprob: -7.663237571716309
    7. ' step' → logprob: -7.663237571716309
    8. ' range' → logprob: -7.913237571716309
    9. '[next' → logprob: -8.538237571716309
    10. 'i' → logprob: -9.288237571716309

Token 94: '_tr' (ID: 7410)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010101689025759697
    2. 'in' → logprob: -4.635101795196533
    3. '_in' → logprob: -9.010101318359375
    4. '_pos' → logprob: -10.135101318359375
    5. '_index' → logprob: -10.135101318359375
    6. '_' → logprob: -10.385101318359375
    7. '_idx' → logprob: -10.635101318359375
    8. ' ' → logprob: -11.010101318359375
    9. '	in' → logprob: -11.135101318359375
    10. 'pos' → logprob: -11.510101318359375

Token 95: 'amp' (ID: 1515)
  Prédit: 'ampoline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ampoline' → logprob: -0.03021577186882496
    2. 'amp' → logprob: -3.5302157402038574
    3. '```' → logprob: -9.405216217041016
    4. '   ' → logprob: -9.530216217041016
    5. 'a' → logprob: -10.155216217041016
    6. 'mp' → logprob: -10.655216217041016
    7. 'p' → logprob: -10.780216217041016
    8. '    ' → logprob: -10.780216217041016
    9. 'ampo' → logprob: -10.780216217041016
    10. 'ampil' → logprob: -10.905216217041016

Token 96: ' in' (ID: 306)
  Prédit: 'oline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oline' → logprob: -0.009255536831915379
    2. 'ol' → logprob: -4.884255409240723
    3. 'olin' → logprob: -6.759255409240723
    4. 'olone' → logprob: -8.884255409240723
    5. 'oine' → logprob: -9.384255409240723
    6. 'line' → logprob: -9.384255409240723
    7. 'olini' → logprob: -10.009255409240723
    8. ' in' → logprob: -10.134255409240723
    9. '   ' → logprob: -10.634255409240723
    10. 'oli' → logprob: -11.634255409240723

Token 97: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03368189558386803
    2. 'range' → logprob: -3.408681869506836
    3. '	range' → logprob: -11.158681869506836
    4. ' positions' → logprob: -11.533681869506836
    5. ' ' → logprob: -11.908681869506836
    6. '(range' → logprob: -13.533681869506836
    7. '   ' → logprob: -14.408681869506836
    8. 'positions' → logprob: -14.533681869506836
    9. '[' → logprob: -14.658681869506836
    10. ')' → logprob: -14.783681869506836

Token 98: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0008243953343480825
    2. 'current' → logprob: -7.250824451446533
    3. '(' → logprob: -9.375823974609375
    4. ' current' → logprob: -10.625823974609375
    5. '	current' → logprob: -13.375823974609375
    6. ' (' → logprob: -13.750823974609375
    7. '(
' → logprob: -13.750823974609375
    8. '[current' → logprob: -14.625823974609375
    9. ',current' → logprob: -15.000823974609375
    10. '   ' → logprob: -15.500823974609375

Token 99: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759626030921936
    2. '+' → logprob: -0.8259626030921936
    3. ' ' → logprob: -11.450963020324707
    4. 'current' → logprob: -12.075963020324707
    5. ',' → logprob: -12.950963020324707
    6. '   ' → logprob: -13.200963020324707
    7. '1' → logprob: -14.450963020324707
    8. ' current' → logprob: -14.825963020324707
    9. '-' → logprob: -15.263463020324707
    10. ')' → logprob: -15.325963020324707

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '2' → logprob: -15.875031471252441
    4. '<|end|>' → logprob: -16.500032424926758
    5. '   ' → logprob: -16.625032424926758
    6. '
' → logprob: -16.875032424926758
    7. 'd' → logprob: -17.000032424926758
    8. '```' → logprob: -17.000032424926758
    9. '[' → logprob: -17.375032424926758
    10. ')' → logprob: -17.750032424926758

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. ')' → logprob: -16.625051498413086
    4. '
' → logprob: -17.250051498413086
    5. '<|end|>' → logprob: -17.250051498413086
    6. '2' → logprob: -17.625051498413086
    7. 'N' → logprob: -17.625051498413086
    8. 'd' → logprob: -17.625051498413086
    9. '[' → logprob: -17.750051498413086
    10. '(' → logprob: -17.750051498413086

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009478271938860416
    2. ' ,' → logprob: -5.0094780921936035
    3. ',current' → logprob: -6.3844780921936035
    4. ',N' → logprob: -6.8844780921936035
    5. '):' → logprob: -11.009478569030762
    6. ',n' → logprob: -11.259478569030762
    7. 'current' → logprob: -11.884478569030762
    8. 'N' → logprob: -12.259478569030762
    9. ' N' → logprob: -13.634478569030762
    10. ')' → logprob: -13.759478569030762

Token 103: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009326597792096436
    2. ' N' → logprob: -7.000932693481445
    3. 'current' → logprob: -11.125932693481445
    4. 'min' → logprob: -12.750932693481445
    5. '   ' → logprob: -13.125932693481445
    6. ' min' → logprob: -14.375932693481445
    7. ' current' → logprob: -14.375932693481445
    8. 'n' → logprob: -15.625932693481445
    9. '	N' → logprob: -16.000932693481445
    10. ' ' → logprob: -17.875932693481445

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20149199664592743
    2. '):
' → logprob: -1.7014919519424438
    3. '):
' → logprob: -9.826492309570312
    4. '       ' → logprob: -11.826492309570312
    5. '()):
' → logprob: -12.576492309570312
    6. '   ' → logprob: -12.951492309570312
    7. ' ):' → logprob: -13.201492309570312
    8. '):

' → logprob: -13.201492309570312
    9. ')' → logprob: -13.201492309570312
    10. '           ' → logprob: -13.326492309570312

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01089053601026535
    2. ':' → logprob: -5.010890483856201
    3. '<|end|>' → logprob: -6.010890483856201
    4. ' if' → logprob: -7.260890483856201
    5. '<|end|>' → logprob: -7.885890483856201
    6. ':
' → logprob: -8.76089096069336
    7. '       ' → logprob: -9.38589096069336
    8. ',' → logprob: -9.38589096069336
    9. ' :' → logprob: -9.88589096069336
    10. '):' → logprob: -10.01089096069336

Token 106: ' dist' (ID: 3601)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.29504022002220154
    2. '           ' → logprob: -2.2950401306152344
    3. 'if' → logprob: -2.2950401306152344
    4. '               ' → logprob: -2.9200401306152344
    5. '```' → logprob: -10.795040130615234
    6. '       ' → logprob: -11.545040130615234
    7. '	       ' → logprob: -12.420040130615234
    8. '   ' → logprob: -12.920040130615234
    9. '            
' → logprob: -12.920040130615234
    10. '	if' → logprob: -13.170040130615234

Token 107: ' =' (ID: 314)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.7033933997154236
    2. ' =' → logprob: -0.8283933997154236
    3. '=' → logprob: -2.7033934593200684
    4. '   ' → logprob: -7.578393459320068
    5. '_' → logprob: -8.70339298248291
    6. 'a' → logprob: -9.20339298248291
    7. 'rance' → logprob: -9.20339298248291
    8. 's' → logprob: -9.32839298248291
    9. 'ances' → logprob: -9.70339298248291
    10. '       ' → logprob: -10.07839298248291

Token 108: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.31897518038749695
    2. 'positions' → logprob: -1.3189752101898193
    3. 'abs' → logprob: -5.56897497177124
    4. ' abs' → logprob: -6.31897497177124
    5. '   ' → logprob: -10.943975448608398
    6. '.positions' → logprob: -11.131475448608398
    7. 'position' → logprob: -11.881475448608398
    8. '           ' → logprob: -12.256475448608398
    9. 'd' → logprob: -12.443975448608398
    10. '_positions' → logprob: -12.506475448608398

Token 109: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -2.3557529857498594e-05
    2. '[' → logprob: -11.25002384185791
    3. '[current' → logprob: -11.62502384185791
    4. 'next' → logprob: -13.87502384185791
    5. '[right' → logprob: -15.87502384185791
    6. '[left' → logprob: -16.250022888183594
    7. ' [' → logprob: -16.250022888183594
    8. '[j' → logprob: -16.750022888183594
    9. '   ' → logprob: -17.500022888183594
    10. '```' → logprob: -17.500022888183594

Token 110: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -2.2127087504486553e-05
    2. ']' → logprob: -11.375021934509277
    3. '_' → logprob: -12.250021934509277
    4. 'tr' → logprob: -13.250021934509277
    5. '_]' → logprob: -13.875021934509277
    6. ']_' → logprob: -15.250021934509277
    7. ']+' → logprob: -15.500021934509277
    8. 'current' → logprob: -15.625021934509277
    9. '+' → logprob: -15.625021934509277
    10. '])' → logprob: -16.000022888183594

Token 111: 'amp' (ID: 1515)
  Prédit: 'amp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amp' → logprob: -0.002626669593155384
    2. 'ap' → logprob: -6.877626895904541
    3. 'mp' → logprob: -7.252626895904541
    4. 'p' → logprob: -8.127626419067383
    5. 'imp' → logprob: -9.127626419067383
    6. 'ump' → logprob: -9.252626419067383
    7. 'ampoline' → logprob: -10.002626419067383
    8. ']' → logprob: -10.377626419067383
    9. 'амп' → logprob: -10.815126419067383
    10. 'ext' → logprob: -10.940126419067383

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0048418655060231686
    2. ' -' → logprob: -6.0048418045043945
    3. '-' → logprob: -6.5048418045043945
    4. '[' → logprob: -7.7548418045043945
    5. ' ]' → logprob: -8.254841804504395
    6. ')' → logprob: -9.629841804504395
    7. ']-' → logprob: -10.379841804504395
    8. '[]' → logprob: -10.379841804504395
    9. '   ' → logprob: -11.129841804504395
    10. ' ' → logprob: -12.129841804504395

Token 113: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18022675812244415
    2. '-' → logprob: -1.8052268028259277
    3. 'positions' → logprob: -8.55522632598877
    4. '[' → logprob: -8.80522632598877
    5. '-position' → logprob: -10.43022632598877
    6. ' ' → logprob: -10.68022632598877
    7. '   ' → logprob: -11.30522632598877
    8. '           ' → logprob: -11.30522632598877
    9. '[]' → logprob: -11.43022632598877
    10. ' positions' → logprob: -11.68022632598877

Token 114: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.014187720604240894
    2. ' positions' → logprob: -4.264187812805176
    3. 'position' → logprob: -11.764187812805176
    4. '.positions' → logprob: -11.889187812805176
    5. '_positions' → logprob: -13.264187812805176
    6. '           ' → logprob: -13.389187812805176
    7. '   ' → logprob: -14.201687812805176
    8. 'current' → logprob: -14.326687812805176
    9. '<|end|>' → logprob: -14.389187812805176
    10. ' posiciones' → logprob: -14.951687812805176

Token 115: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -2.8325677703833207e-05
    2. 'current' → logprob: -10.500028610229492
    3. '[' → logprob: -14.625028610229492
    4. ' current' → logprob: -16.250028610229492
    5. '[cur' → logprob: -16.625028610229492
    6. ' [' → logprob: -17.875028610229492
    7. '[curr' → logprob: -18.375028610229492
    8. '   ' → logprob: -18.750028610229492
    9. '```' → logprob: -18.875028610229492
    10. '	current' → logprob: -19.000028610229492

Token 116: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14907746016979218
    2. ']
' → logprob: -2.1490774154663086
    3. '       ' → logprob: -5.024077415466309
    4. ')' → logprob: -5.274077415466309
    5. '           ' → logprob: -5.524077415466309
    6. '
' → logprob: -6.399077415466309
    7. 'if' → logprob: -7.274077415466309
    8. '<|end|>' → logprob: -7.274077415466309
    9. ' if' → logprob: -7.399077415466309
    10. ']
' → logprob: -8.024077415466309

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00949020218104124
    2. ' if' → logprob: -4.759490013122559
    3. 'if' → logprob: -7.134490013122559
    4. '       ' → logprob: -10.759490013122559
    5. ',' → logprob: -11.259490013122559
    6. '            
' → logprob: -11.509490013122559
    7. '<|end|>' → logprob: -12.009490013122559
    8. '```' → logprob: -12.509490013122559
    9. '   ' → logprob: -12.634490013122559
    10. '=' → logprob: -12.759490013122559

Token 118: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5264938473701477
    2. '           ' → logprob: -1.526493787765503
    3. 'if' (adapté à ' if') → logprob: -1.651493787765503
    4. '```' → logprob: -9.776494026184082
    5. '       ' → logprob: -10.276494026184082
    6. ' ' → logprob: -10.776494026184082
    7. '   ' → logprob: -11.151494026184082
    8. 'd' → logprob: -11.276494026184082
    9. 'max' → logprob: -11.526494026184082
    10. '1' → logprob: -11.651494026184082

Token 119: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5141483545303345
    2. 'd' → logprob: -1.5141483545303345
    3. ' dist' → logprob: -1.8891483545303345
    4. ' d' → logprob: -3.514148235321045
    5. '           ' → logprob: -7.514148235321045
    6. '   ' → logprob: -9.764148712158203
    7. '	dist' → logprob: -9.764148712158203
    8. ' ' → logprob: -10.139148712158203
    9. '               ' → logprob: -10.576648712158203
    10. '	d' → logprob: -10.701648712158203

Token 120: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.435563862323761
    2. '<=' → logprob: -1.0605638027191162
    3. '>' → logprob: -5.560564041137695
    4. ' >' → logprob: -6.560564041137695
    5. '>=' → logprob: -7.685564041137695
    6. '==' → logprob: -7.935564041137695
    7. ' >=' → logprob: -8.310564041137695
    8. ' ' → logprob: -9.185564041137695
    9. ' ==' → logprob: -9.310564041137695
    10. 's' → logprob: -10.310564041137695

Token 121: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04879673942923546
    2. ' d' → logprob: -3.0487966537475586
    3. ' ' → logprob: -9.173796653747559
    4. '	d' → logprob: -10.548796653747559
    5. '10' → logprob: -11.048796653747559
    6. '   ' → logprob: -11.423796653747559
    7. ' ' → logprob: -11.548796653747559
    8. ')d' → logprob: -12.173796653747559
    9. '100' → logprob: -12.548796653747559
    10. '2' → logprob: -12.986296653747559

Token 122: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.00016766376211307943
    2. 'current' → logprob: -8.875167846679688
    3. '[' → logprob: -10.875167846679688
    4. '[cur' → logprob: -12.375167846679688
    5. '[curr' → logprob: -13.375167846679688
    6. '[j' → logprob: -13.875167846679688
    7. ' ' → logprob: -14.875167846679688
    8. '[next' → logprob: -15.750167846679688
    9. '[
' → logprob: -15.875167846679688
    10. ' [' → logprob: -15.875167846679688

Token 123: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.587872326374054
    2. ']:
' → logprob: -0.837872326374054
    3. ':' → logprob: -5.462872505187988
    4. ']' → logprob: -5.837872505187988
    5. '):
' → logprob: -6.962872505187988
    6. ':
' → logprob: -7.087872505187988
    7. ']:
' → logprob: -7.462872505187988
    8. '):' → logprob: -7.587872505187988
    9. ' and' → logprob: -7.712872505187988
    10. ']:

' → logprob: -8.337872505187988

Token 124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0035480433143675327
    2. '           ' → logprob: -5.7535481452941895
    3. ' and' → logprob: -8.253547668457031
    4. ':' → logprob: -10.378547668457031
    5. ' ' → logprob: -11.253547668457031
    6. ' jumped' → logprob: -11.503547668457031
    7. '                   ' → logprob: -11.753547668457031
    8. 'jump' → logprob: -12.253547668457031
    9. 'and' → logprob: -12.378547668457031
    10. ',' → logprob: -12.503547668457031

Token 125: ' current' (ID: 2208)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7550903558731079
    2. ' jumped' → logprob: -0.8800903558731079
    3. '           ' → logprob: -3.1300902366638184
    4. 'current' (adapté à ' current') → logprob: -3.5050902366638184
    5. ' current' → logprob: -3.7550902366638184
    6. 'jump' → logprob: -4.505090236663818
    7. '                   ' → logprob: -5.630090236663818
    8. ' if' → logprob: -6.880090236663818
    9. 'if' → logprob: -7.505090236663818
    10. ' positions' → logprob: -7.630090236663818

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804229199886322
    2. '=' → logprob: -3.2880423069000244
    3. ' ' → logprob: -15.038042068481445
    4. ' +=' → logprob: -15.413042068481445
    5. ',' → logprob: -16.413042068481445
    6. '<|end|>' → logprob: -16.788042068481445
    7. '＝' → logprob: -17.038042068481445
    8. '.=' → logprob: -17.663042068481445
    9. '.' → logprob: -17.850542068481445
    10. ' ==' → logprob: -18.100542068481445

Token 127: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.20141440629959106
    2. ' next' → logprob: -1.7014143466949463
    3. '[next' → logprob: -14.201414108276367
    4. '	next' → logprob: -15.201414108276367
    5. '(next' → logprob: -15.576414108276367
    6. '_next' → logprob: -17.326414108276367
    7. '.next' → logprob: -17.451414108276367
    8. 'Next' → logprob: -17.826414108276367
    9. ' ' → logprob: -18.576414108276367
    10. '   ' → logprob: -19.451414108276367

Token 128: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -3.173704271830502e-06
    2. 'tr' → logprob: -13.12500286102295
    3. '_' → logprob: -14.25000286102295
    4. '_token' → logprob: -15.12500286102295
    5. '<tr' → logprob: -17.125003814697266
    6. 'Tr' → logprob: -17.875003814697266
    7. '_tokens' → logprob: -18.000003814697266
    8. '_trip' → logprob: -18.000003814697266
    9. '_t' → logprob: -18.250003814697266
    10. '	tr' → logprob: -18.500003814697266

Token 129: 'amp' (ID: 1515)
  Prédit: 'amp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amp' → logprob: -0.000740538293030113
    2. 'ap' → logprob: -7.7507405281066895
    3. 'mp' → logprob: -9.250741004943848
    4. 'ampoline' → logprob: -9.500741004943848
    5. 'амп' → logprob: -10.125741004943848
    6. 'p' → logprob: -10.875741004943848
    7. 'next' → logprob: -11.250741004943848
    8. 'ump' → logprob: -11.625741004943848
    9. 'amps' → logprob: -11.750741004943848
    10. 'map' → logprob: -12.500741004943848

Token 130: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.4894986785948277e-05
    2. '<|end|>' → logprob: -10.875044822692871
    3. '
' → logprob: -12.250044822692871
    4. '                   ' → logprob: -12.500044822692871
    5. '                
' → logprob: -12.625044822692871
    6. 'jump' → logprob: -12.625044822692871
    7. '           ' → logprob: -12.750044822692871
    8. '<|end|>' → logprob: -13.875044822692871
    9. '		       ' → logprob: -14.000044822692871
    10. '```' → logprob: -14.000044822692871

Token 131: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.286852345103398e-05
    2. '           ' → logprob: -11.750042915344238
    3. '<|end|>' → logprob: -11.875042915344238
    4. '                   ' → logprob: -12.000042915344238
    5. '                
' → logprob: -12.000042915344238
    6. '              ' → logprob: -13.250042915344238
    7. '                       ' → logprob: -13.375042915344238
    8. ' ' → logprob: -13.500042915344238
    9. 'jump' → logprob: -13.750042915344238
    10. '                               ' → logprob: -13.750042915344238

Token 132: ' jumped' (ID: 48704)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.010326715186238289
    2. ' jumped' → logprob: -4.885326862335205
    3. '               ' → logprob: -6.260326862335205
    4. 'j' → logprob: -7.260326862335205
    5. '           ' → logprob: -9.385326385498047
    6. 'jum' → logprob: -12.385326385498047
    7. '       ' → logprob: -12.510326385498047
    8. '
' → logprob: -13.010326385498047
    9. '```' → logprob: -13.135326385498047
    10. '   ' → logprob: -13.260326385498047

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025570034980774
    2. '=' → logprob: -1.9102556705474854
    3. '=True' → logprob: -10.410255432128906
    4. 'ed' → logprob: -14.285255432128906
    5. ' ' → logprob: -15.160255432128906
    6. 'True' → logprob: -15.660255432128906
    7. '[' → logprob: -16.660255432128906
    8. '＝' → logprob: -16.660255432128906
    9. 's' → logprob: -16.910255432128906
    10. '
' → logprob: -17.285255432128906

Token 134: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005233763717114925
    2. ' True' → logprob: -5.2552337646484375
    3. '(True' → logprob: -19.505233764648438
    4. '=True' → logprob: -21.380233764648438
    5. 'true' → logprob: -23.005233764648438
    6. 'False' → logprob: -23.130233764648438
    7. ' ' → logprob: -23.630233764648438
    8. '_true' → logprob: -23.755233764648438
    9. '.True' → logprob: -23.880233764648438
    10. '   ' → logprob: -24.380233764648438

Token 135: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013500562636181712
    2. '           ' → logprob: -9.62513542175293
    3. '       ' → logprob: -10.62513542175293
    4. '                   ' → logprob: -11.50013542175293
    5. ' if' → logprob: -11.87513542175293
    6. ' else' → logprob: -12.37513542175293
    7. '<|end|>' → logprob: -12.50013542175293
    8. 'else' → logprob: -12.75013542175293
    9. '                
' → logprob: -12.87513542175293
    10. ' ' → logprob: -13.00013542175293

Token 136: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005520791164599359
    2. '           ' → logprob: -8.3755521774292
    3. '       ' → logprob: -9.6255521774292
    4. ' if' → logprob: -9.6255521774292
    5. '                   ' → logprob: -9.6255521774292
    6. 'if' → logprob: -10.5005521774292
    7. ' else' → logprob: -10.6255521774292
    8. 'else' → logprob: -10.6255521774292
    9. 'break' → logprob: -10.8755521774292
    10. ' ' → logprob: -11.8755521774292

Token 137: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023797640576958656
    2. 'break' (adapté à ' break') → logprob: -3.7737977504730225
    3. ' break' → logprob: -7.523797512054443
    4. '           ' → logprob: -12.398797988891602
    5. '                   ' → logprob: -13.148797988891602
    6. '	break' → logprob: -13.148797988891602
    7. ' ' → logprob: -13.398797988891602
    8. '```' → logprob: -14.023797988891602
    9. '			' → logprob: -14.648797988891602
    10. '       ' → logprob: -15.148797988891602

Token 138: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000194361709873192
    2. '   ' → logprob: -9.625194549560547
    3. 'if' → logprob: -9.625194549560547
    4. ' if' → logprob: -9.875194549560547
    5. '           ' → logprob: -13.000194549560547
    6. '    ' → logprob: -13.500194549560547
    7. '
' → logprob: -13.625194549560547
    8. '      ' → logprob: -13.875194549560547
    9. '        
' → logprob: -13.875194549560547
    10. '        ' → logprob: -14.250194549560547

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023059594968799502
    2. '   ' → logprob: -8.87523078918457
    3. ' if' → logprob: -9.87523078918457
    4. 'if' → logprob: -10.37523078918457
    5. '    ' → logprob: -13.37523078918457
    6. '           ' → logprob: -13.37523078918457
    7. '      ' → logprob: -14.12523078918457
    8. '<|end|>' → logprob: -14.25023078918457
    9. ' ' → logprob: -14.50023078918457
    10. '        ' → logprob: -14.75023078918457

Token 140: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46040022373199463
    2. '   ' → logprob: -1.2104002237319946
    3. 'if' (adapté à ' if') → logprob: -2.960400104522705
    4. ' if' → logprob: -3.960400104522705
    5. ' ' → logprob: -10.960400581359863
    6. '    ' → logprob: -12.210400581359863
    7. '  ' → logprob: -12.835400581359863
    8. 'else' → logprob: -12.960400581359863
    9. 'If' → logprob: -13.085400581359863
    10. '```' → logprob: -13.335400581359863

Token 141: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12700821459293365
    2. ' not' → logprob: -2.1270081996917725
    3. '   ' → logprob: -10.002008438110352
    4. ' ' → logprob: -11.627008438110352
    5. '	not' → logprob: -11.627008438110352
    6. 'jump' → logprob: -12.877008438110352
    7. 'j' → logprob: -13.002008438110352
    8. '!' → logprob: -13.127008438110352
    9. '```' → logprob: -13.127008438110352
    10. '
' → logprob: -13.252008438110352

Token 142: ' jumped' (ID: 48704)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.5760102272033691
    2. ' jumped' → logprob: -0.8260102272033691
    3. 'j' → logprob: -9.826009750366211
    4. 'jum' → logprob: -11.576009750366211
    5. ' ' → logprob: -12.951009750366211
    6. ' jump' → logprob: -13.451009750366211
    7. ' ' → logprob: -14.076009750366211
    8. 'Jump' → logprob: -14.451009750366211
    9. '_jump' → logprob: -14.576009750366211
    10. 'jmp' → logprob: -14.576009750366211

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16801129281520844
    2. '           ' → logprob: -1.9180113077163696
    3. ':
' → logprob: -4.91801118850708
    4. ':return' → logprob: -7.91801118850708
    5. '       ' → logprob: -10.043011665344238
    6. '   ' → logprob: -11.668011665344238
    7. '               ' → logprob: -12.418011665344238
    8. 'return' → logprob: -12.543011665344238
    9. ':

' → logprob: -12.793011665344238
    10. ' :' → logprob: -12.793011665344238

Token 144: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5531688332557678
    2. 'return' → logprob: -1.053168773651123
    3. ' return' → logprob: -3.053168773651123
    4. '           ' → logprob: -3.803168773651123
    5. '   ' → logprob: -5.053168773651123
    6. '	return' → logprob: -9.803169250488281
    7. '```' → logprob: -10.303169250488281
    8. 'break' → logprob: -10.803169250488281
    9. '
' → logprob: -11.053169250488281
    10. ' break' → logprob: -11.803169250488281

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017615636810660362
    2. ' return' → logprob: -4.142615795135498
    3. '       ' → logprob: -7.017615795135498
    4. 'break' → logprob: -7.642615795135498
    5. '   ' → logprob: -9.26761531829834
    6. '           ' → logprob: -9.64261531829834
    7. ' break' → logprob: -10.14261531829834
    8. '	return' → logprob: -12.89261531829834
    9. '
' → logprob: -13.26761531829834
    10. ' ' → logprob: -14.51761531829834

Token 146: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.7697225252486533e-06
    2. ' False' → logprob: -12.500003814697266
    3. 'True' → logprob: -18.750003814697266
    4. '(False' → logprob: -22.000003814697266
    5. '0' → logprob: -22.750003814697266
    6. 'F' → logprob: -23.375003814697266
    7. 'false' → logprob: -23.875003814697266
    8. 'None' → logprob: -23.875003814697266
    9. '[]' → logprob: -24.375003814697266
    10. '=False' → logprob: -24.875003814697266

Token 147: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007275633979588747
    2. 'return' → logprob: -7.250727653503418
    3. ' return' → logprob: -11.375727653503418
    4. '
' → logprob: -12.500727653503418
    5. '       ' → logprob: -13.625727653503418
    6. '	return' → logprob: -14.000727653503418
    7. '    
' → logprob: -16.0007266998291
    8. '  ' → logprob: -16.6257266998291
    9. '1' → logprob: -17.1257266998291
    10. '<|end|>' → logprob: -17.7507266998291

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001526525360532105
    2. 'return' → logprob: -6.501526355743408
    3. ' return' → logprob: -10.751526832580566
    4. '       ' → logprob: -13.376526832580566
    5. '	return' → logprob: -14.251526832580566
    6. '
' → logprob: -15.001526832580566
    7. '  ' → logprob: -16.87652587890625
    8. '   ' → logprob: -17.75152587890625
    9. '{return' → logprob: -18.00152587890625
    10. '    
' → logprob: -18.12652587890625

Token 149: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20444755256175995
    2. '   ' → logprob: -1.7044475078582764
    3. ' return' → logprob: -5.8294477462768555
    4. '	return' → logprob: -9.454447746276855
    5. '  ' → logprob: -12.829447746276855
    6. ' ' → logprob: -13.079447746276855
    7. 'True' → logprob: -13.204447746276855
    8. '<|end|>' → logprob: -13.954447746276855
    9. '    
' → logprob: -14.079447746276855
    10. 'true' → logprob: -14.079447746276855

Token 150: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0031777136027812958
    2. ' True' → logprob: -5.753177642822266
    3. 'true' → logprob: -19.503177642822266
    4. 'False' → logprob: -19.628177642822266
    5. ' ' → logprob: -19.753177642822266
    6. 'Tr' → logprob: -20.378177642822266
    7. '(True' → logprob: -20.753177642822266
    8. ' ' → logprob: -21.503177642822266
    9. '1' → logprob: -22.128177642822266
    10. '   ' → logprob: -22.878177642822266

Token 151: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7442414164543152
    2. 'def' → logprob: -0.8692414164543152
    3. 'if' → logprob: -2.61924147605896
    4. '#' → logprob: -3.99424147605896
    5. 'result' → logprob: -4.869241237640381
    6. 'can' → logprob: -5.244241237640381
    7. 'answer' → logprob: -7.744241237640381
    8. 'for' → logprob: -8.369241714477539
    9. 'res' → logprob: -8.619241714477539
    10. 'True' → logprob: -8.869241714477539

Token 153: ' Fonction' (ID: 189149)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49069705605506897
    2. 'def' → logprob: -1.1156970262527466
    3. 'print' → logprob: -3.240697145462036
    4. '#' → logprob: -4.240696907043457
    5. 'result' → logprob: -5.615696907043457
    6. 'can' → logprob: -6.490696907043457
    7. ' if' → logprob: -7.865696907043457
    8. 'forward' → logprob: -8.365696907043457
    9. 'positions' → logprob: -8.490696907043457
    10. 'for' → logprob: -8.990696907043457

Token 154: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1707889586687088
    2. ' def' → logprob: -2.6707890033721924
    3. ' can' → logprob: -3.0457890033721924
    4. ' for' → logprob: -4.295788764953613
    5. 'can' → logprob: -4.295788764953613
    6. ' to' → logprob: -5.045788764953613
    7. ' pour' → logprob: -5.670788764953613
    8. 'to' → logprob: -6.795788764953613
    9. 'for' → logprob: -6.795788764953613
    10. '#' → logprob: -7.545788764953613

Token 155: ' vérifier' (ID: 93671)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0024487809278070927
    2. 'v' → logprob: -7.002448558807373
    3. 'check' → logprob: -7.502448558807373
    4. ' vérifier' → logprob: -7.877448558807373
    5. '#' → logprob: -8.627449035644531
    6. ' can' → logprob: -9.502449035644531
    7. 'def' → logprob: -9.502449035644531
    8. 'ver' → logprob: -9.877449035644531
    9. 'pe' → logprob: -10.127449035644531
    10. 'checker' → logprob: -10.627449035644531

Token 156: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21593238413333893
    2. 'if' → logprob: -2.0909323692321777
    3. ' si' → logprob: -2.9659323692321777
    4. 'si' → logprob: -3.9659323692321777
    5. '#' → logprob: -9.215932846069336
    6. 'can' → logprob: -10.215932846069336
    7. ' #' → logprob: -11.340932846069336
    8. 'def' → logprob: -11.965932846069336
    9. '_' → logprob: -12.840932846069336
    10. ' can' → logprob: -12.840932846069336

Token 157: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.060377597808838
    2. ' on' → logprob: -1.185377597808838
    3. 'can' → logprob: -1.185377597808838
    4. ' can' → logprob: -3.185377597808838
    5. '#' → logprob: -7.935377597808838
    6. ' we' → logprob: -8.81037712097168
    7. 'we' → logprob: -9.31037712097168
    8. '(can' → logprob: -9.31037712097168
    9. '_can' → logprob: -9.43537712097168
    10. 'def' → logprob: -9.68537712097168

Token 158: ' peut' (ID: 9216)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.12829247117042542
    2. ' can' → logprob: -2.3782925605773926
    3. 'pe' → logprob: -3.7532925605773926
    4. '_can' → logprob: -6.378292560577393
    5. ' peut' → logprob: -6.753292560577393
    6. '_pe' → logprob: -6.878292560577393
    7. ' peux' → logprob: -8.628292083740234
    8. '	can' → logprob: -9.878292083740234
    9. ' pe' → logprob: -10.878292083740234
    10. '_p' → logprob: -11.003292083740234

Token 159: ' revenir' (ID: 88322)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.8124406933784485
    2. 'aller' → logprob: -0.9374406933784485
    3. ' aller' → logprob: -2.6874406337738037
    4. 'can' → logprob: -2.9374406337738037
    5. '_go' → logprob: -3.4374406337738037
    6. 'going' → logprob: -6.062440872192383
    7. 'all' → logprob: -6.187440872192383
    8. '_can' → logprob: -6.437440872192383
    9. '_' → logprob: -6.687440872192383
    10. ' go' → logprob: -7.062440872192383

Token 160: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.700305163860321
    2. ' de' → logprob: -1.3253052234649658
    3. 'en' → logprob: -2.575305223464966
    4. 'from' → logprob: -2.700305223464966
    5. ' en' → logprob: -3.200305223464966
    6. 'back' → logprob: -4.075304985046387
    7. '_backward' → logprob: -4.700304985046387
    8. 'def' → logprob: -5.200304985046387
    9. ' backward' → logprob: -5.575304985046387
    10. 'à' → logprob: -6.075304985046387

Token 161: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.09359726309776306
    2. ' right' → logprob: -2.593597173690796
    3. 'left' → logprob: -5.343597412109375
    4. 'N' → logprob: -5.468597412109375
    5. 'l' → logprob: -6.593597412109375
    6. ' droite' → logprob: -6.593597412109375
    7. ' N' → logprob: -7.093597412109375
    8. 'la' → logprob: -7.218597412109375
    9. 'dro' → logprob: -7.968597412109375
    10. ' la' → logprob: -8.468597412109375

Token 162: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2542456388473511
    2. 'à' → logprob: -1.879245638847351
    3. ' vers' → logprob: -3.5042457580566406
    4. ' to' → logprob: -4.254245758056641
    5. 'to' → logprob: -4.504245758056641
    6. 'def' → logprob: -5.504245758056641
    7. 'a' → logprob: -6.379245758056641
    8. 'vers' → logprob: -6.504245758056641
    9. ' ' → logprob: -7.004245758056641
    10. '_' → logprob: -7.129245758056641

Token 163: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.43708285689353943
    2. '0' → logprob: -1.4370828866958618
    3. ' left' → logprob: -2.3120827674865723
    4. ' ' → logprob: -4.062082767486572
    5. ' gauche' → logprob: -9.18708324432373
    6. 'current' → logprob: -10.56208324432373
    7. ' current' → logprob: -10.68708324432373
    8. '	left' → logprob: -11.56208324432373
    9. 'g' → logprob: -12.43708324432373
    10. 'right' → logprob: -12.62458324432373

Token 164: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006540587637573481
    2. ' def' → logprob: -7.875654220581055
    3. '(' → logprob: -8.875654220581055
    4. '():
' → logprob: -10.000654220581055
    5. '():' → logprob: -10.500654220581055
    6. '()' → logprob: -10.875654220581055
    7. '(
' → logprob: -11.125654220581055
    8. '(def' → logprob: -11.875654220581055
    9. '
' → logprob: -12.000654220581055
    10. '()
' → logprob: -12.125654220581055

Token 165: ' saut' (ID: 111480)
  Prédit: ' saut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saut' → logprob: -0.28995245695114136
    2. 's' → logprob: -1.4149525165557861
    3. 'jump' → logprob: -4.789952278137207
    4. 're' → logprob: -9.539952278137207
    5. ' jump' → logprob: -9.539952278137207
    6. '```' → logprob: -9.914952278137207
    7. 'f' → logprob: -10.789952278137207
    8. ' ' → logprob: -10.789952278137207
    9. 'b' → logprob: -10.914952278137207
    10. 'all' → logprob: -11.164952278137207

Token 166: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.012996213510632515
    2. 'ing' → logprob: -4.512996196746826
    3. 'pping' → logprob: -7.262996196746826
    4. 'ping' → logprob: -7.512996196746826
    5. 'er' → logprob: -9.012996673583984
    6. 'ving' → logprob: -9.387996673583984
    7. 'uant' → logprob: -9.762996673583984
    8. 'quant' → logprob: -10.137996673583984
    9. 'out' → logprob: -10.262996673583984
    10. 'tant' → logprob: -10.512996673583984

Token 167: ' uniquement' (ID: 65527)
  Prédit: ' uniquement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uniquement' → logprob: -0.48759889602661133
    2. 'uni' → logprob: -1.1125988960266113
    3. 'vers' → logprob: -4.237598896026611
    4. 'only' → logprob: -4.487598896026611
    5. 'def' → logprob: -4.987598896026611
    6. ' vers' → logprob: -5.362598896026611
    7. 'en' → logprob: -5.487598896026611
    8. 'se' → logprob: -5.737598896026611
    9. '   ' → logprob: -5.987598896026611
    10. ' seulement' → logprob: -6.487598896026611

Token 168: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.349895179271698
    2. 'vers' → logprob: -1.2248952388763428
    3. 'à' → logprob: -7.474895000457764
    4. ' à' → logprob: -8.099895477294922
    5. 'en' → logprob: -8.599895477294922
    6. '#' → logprob: -9.224895477294922
    7. 'def' → logprob: -9.224895477294922
    8. '```' → logprob: -10.099895477294922
    9. ' en' → logprob: -10.224895477294922
    10. ' ' → logprob: -10.474895477294922

Token 169: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.76759916334413e-05
    2. 'la' → logprob: -10.125077247619629
    3. '	l' → logprob: -11.250077247619629
    4. ' l' → logprob: -12.375077247619629
    5. '```' → logprob: -12.500077247619629
    6. '_l' → logprob: -13.000077247619629
    7. 'lav' → logprob: -13.250077247619629
    8. 'len' → logprob: -13.375077247619629
    9. 'ar' → logprob: -13.500077247619629
    10. 'avant' → logprob: -13.625077247619629

Token 170: ''ar' (ID: 54307)
  Prédit: 'avant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avant' → logprob: -0.040754757821559906
    2. 'ar' → logprob: -3.915754795074463
    3. ''avant' → logprob: -4.915754795074463
    4. '_' → logprob: -5.665754795074463
    5. '_d' → logprob: -6.290754795074463
    6. '_ar' → logprob: -6.415754795074463
    7. 'l' → logprob: -6.540754795074463
    8. '_av' → logprob: -6.540754795074463
    9. 'd' → logprob: -7.415754795074463
    10. '#' → logprob: -7.915754795074463

Token 171: 'rière' (ID: 34908)
  Prédit: 'rière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rière' → logprob: -0.06433296948671341
    2. 'ière' → logprob: -2.814332962036133
    3. 'ri' → logprob: -6.689332962036133
    4. 'i' → logprob: -8.189332962036133
    5. 'ère' → logprob: -8.439332962036133
    6. 'riere' → logprob: -8.439332962036133
    7. '```' → logprob: -9.439332962036133
    8. 'g' → logprob: -9.814332962036133
    9. 'r' → logprob: -10.689332962036133
    10. 'd' → logprob: -10.814332962036133

Token 172: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.173704271830502e-06
    2. '
' → logprob: -13.00000286102295
    3. ' def' → logprob: -14.37500286102295
    4. ':def' → logprob: -15.62500286102295
    5. 'de' → logprob: -17.000003814697266
    6. '(def' → logprob: -17.250003814697266
    7. '```' → logprob: -17.500003814697266
    8. '\' → logprob: -17.875003814697266
    9. '(
' → logprob: -18.000003814697266
    10. '(' → logprob: -18.500003814697266

Token 173: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -20.0
    3. '
' → logprob: -24.0
    4. '	def' → logprob: -24.25
    5. 'de' → logprob: -24.375
    6. ':def' → logprob: -24.75
    7. '```' → logprob: -24.875
    8. '#' → logprob: -25.0
    9. 'ndef' → logprob: -25.25
    10. '  
' → logprob: -25.5

Token 174: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.007619052659720182
    2. ' can' → logprob: -4.8826189041137695
    3. 'def' → logprob: -11.50761890411377
    4. '	can' → logprob: -13.50761890411377
    5. 'go' → logprob: -15.00761890411377
    6. '_can' → logprob: -15.13261890411377
    7. ' ' → logprob: -15.25761890411377
    8. 'c' → logprob: -16.257619857788086
    9. ' ' → logprob: -16.382619857788086
    10. ' def' → logprob: -16.507619857788086

Token 175: '_go' (ID: 90361)
  Prédit: '_go'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_go' → logprob: -0.00010270876373397186
    2. '_can' → logprob: -9.625102996826172
    3. '_return' → logprob: -10.750102996826172
    4. '_get' → logprob: -12.750102996826172
    5. '_' → logprob: -13.000102996826172
    6. '_back' → logprob: -13.250102996826172
    7. 'go' → logprob: -13.375102996826172
    8. '_reverse' → logprob: -13.500102996826172
    9. '_be' → logprob: -13.750102996826172
    10. '_backward' → logprob: -14.375102996826172

Token 176: '_back' (ID: 8715)
  Prédit: '_backward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -0.008658897131681442
    2. '_back' → logprob: -4.7586588859558105
    3. '_forward' → logprob: -10.258659362792969
    4. '_reverse' → logprob: -12.008659362792969
    5. '_' → logprob: -12.883659362792969
    6. '_left' → logprob: -15.383659362792969
    7. 'back' → logprob: -16.38365936279297
    8. '_b' → logprob: -16.50865936279297
    9. ' backward' → logprob: -16.63365936279297
    10. '_re' → logprob: -16.88365936279297

Token 177: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7911934852600098
    2. 'ward' → logprob: -0.9161934852600098
    3. '():
' → logprob: -2.1661934852600098
    4. '()' → logprob: -4.54119348526001
    5. '_' → logprob: -4.66619348526001
    6. 'wards' → logprob: -5.29119348526001
    7. '_backward' → logprob: -6.04119348526001
    8. '_forward' → logprob: -7.16619348526001
    9. 'word' → logprob: -7.41619348526001
    10. 'w' → logprob: -7.54119348526001

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04384315386414528
    2. 'current' → logprob: -3.2938432693481445
    3. ' current' → logprob: -5.1688432693481445
    4. 'def' → logprob: -9.668843269348145
    5. '	current' → logprob: -11.543843269348145
    6. '```' → logprob: -11.793843269348145
    7. '
' → logprob: -12.918843269348145
    8. ' ' → logprob: -12.918843269348145
    9. '   ' → logprob: -12.918843269348145
    10. '  ' → logprob: -13.293843269348145

Token 179: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.012269576080143452
    2. '   ' → logprob: -4.512269496917725
    3. ' current' → logprob: -6.887269496917725
    4. 'def' → logprob: -8.637269973754883
    5. 'right' → logprob: -11.887269973754883
    6. 'for' → logprob: -12.387269973754883
    7. ' ' → logprob: -12.512269973754883
    8. '
' → logprob: -13.262269973754883
    9. '```' → logprob: -13.387269973754883
    10. 'position' → logprob: -13.637269973754883

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407862544059753
    2. '=' → logprob: -0.9740786552429199
    3. '=N' → logprob: -13.599078178405762
    4. ' ' → logprob: -15.724078178405762
    5. '   ' → logprob: -16.724079132080078
    6. '=
' → logprob: -16.974079132080078
    7. ' =
' → logprob: -17.099079132080078
    8. 'd' → logprob: -17.849079132080078
    9. '=n' → logprob: -17.974079132080078
    10. '＝' → logprob: -18.099079132080078

Token 181: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001801801408873871
    2. ' N' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.3751802444458
    4. 'len' → logprob: -15.5001802444458
    5. 'n' → logprob: -16.500179290771484
    6. '0' → logprob: -17.250179290771484
    7. ' ' → logprob: -17.875179290771484
    8. '(N' → logprob: -19.000179290771484
    9. '	N' → logprob: -19.000179290771484
    10. '  ' → logprob: -19.625179290771484

Token 182: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10021260380744934
    2. ' -' → logprob: -2.350212574005127
    3. ' ' → logprob: -12.475213050842285
    4. '1' → logprob: -13.975213050842285
    5. '   ' → logprob: -14.725213050842285
    6. '–' → logprob: -15.850213050842285
    7. '−' → logprob: -15.975213050842285
    8. '<|end|>' → logprob: -15.975213050842285
    9. ' ' → logprob: -16.22521209716797
    10. '[' → logprob: -16.47521209716797

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.250014305114746
    3. '2' → logprob: -13.750014305114746
    4. '   ' → logprob: -18.62501335144043
    5. '```' → logprob: -18.62501335144043
    6. '<|end|>' → logprob: -18.81251335144043
    7. '۱' → logprob: -19.06251335144043
    8. '0' → logprob: -19.56251335144043
    9. '１' → logprob: -19.62501335144043
    10. '  ' → logprob: -20.43751335144043

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -18.5
    4. '2' → logprob: -18.875
    5. '   ' → logprob: -19.25
    6. '
' → logprob: -20.0
    7. '۱' → logprob: -20.625
    8. '１' → logprob: -21.0
    9. '-' → logprob: -21.5
    10. '0' → logprob: -21.5

Token 185: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05993305519223213
    2. '
' → logprob: -3.0599329471588135
    3. 'while' → logprob: -4.559933185577393
    4. ' while' → logprob: -7.309933185577393
    5. '    
' → logprob: -9.059932708740234
    6. '	while' → logprob: -11.184932708740234
    7. '
' → logprob: -12.309932708740234
    8. ' 
' → logprob: -12.309932708740234
    9. '```' → logprob: -13.184932708740234
    10. '  
' → logprob: -13.309932708740234

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11515673995018005
    2. 'while' → logprob: -2.240156650543213
    3. ' while' → logprob: -6.365156650543213
    4. '
' → logprob: -7.490156650543213
    5. '	while' → logprob: -10.865157127380371
    6. '    
' → logprob: -11.365157127380371
    7. '   ' → logprob: -11.740157127380371
    8. '  ' → logprob: -12.615157127380371
    9. '```' → logprob: -13.240157127380371
    10. ',' → logprob: -13.365157127380371

Token 187: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.3902033970225602e-05
    2. ' while' → logprob: -11.375014305114746
    3. '   ' → logprob: -13.000014305114746
    4. 'jump' → logprob: -16.50001335144043
    5. 'While' → logprob: -16.87501335144043
    6. '	while' → logprob: -17.00001335144043
    7. 'j' → logprob: -18.25001335144043
    8. '```' → logprob: -18.50001335144043
    9. '
' → logprob: -18.62501335144043
    10. 'visited' → logprob: -20.37501335144043

Token 188: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.474433034658432
    2. 'current' → logprob: -0.9744330644607544
    3. '0' → logprob: -7.974432945251465
    4. '   ' → logprob: -12.349432945251465
    5. ' ' → logprob: -12.599432945251465
    6. '(current' → logprob: -13.224432945251465
    7. 'urrent' → logprob: -14.099432945251465
    8. '	current' → logprob: -14.849432945251465
    9. 'Current' → logprob: -15.099432945251465
    10. '$current' → logprob: -15.474432945251465

Token 189: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06196824833750725
    2. ' >' → logprob: -2.8119683265686035
    3. '0' → logprob: -14.686967849731445
    4. '>=' → logprob: -16.311967849731445
    5. ' ' → logprob: -17.186967849731445
    6. ' ' → logprob: -17.561967849731445
    7. '>

' → logprob: -18.186967849731445
    8. '<' → logprob: -18.561967849731445
    9. '   ' → logprob: -18.811967849731445
    10. '>
' → logprob: -18.811967849731445

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170460251159966
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.87617015838623
    4. '<|end|>' → logprob: -17.126171112060547
    5. '=' → logprob: -18.251171112060547
    6. '  ' → logprob: -18.251171112060547
    7. '۰' → logprob: -18.751171112060547
    8. '
' → logprob: -18.876171112060547
    9. '00' → logprob: -19.126171112060547
    10. '```' → logprob: -19.126171112060547

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.875059127807617
    4. '
' → logprob: -16.875059127807617
    5. '=' → logprob: -17.937559127807617
    6. '۰' → logprob: -18.125059127807617
    7. '```' → logprob: -18.500059127807617
    8. '  ' → logprob: -18.500059127807617
    9. 'current' → logprob: -18.625059127807617
    10. '1' → logprob: -18.875059127807617

Token 192: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38745105266571045
    2. ':' → logprob: -1.1374510526657104
    3. '   ' → logprob: -8.137451171875
    4. '):
' → logprob: -8.762451171875
    5. '       ' → logprob: -9.137451171875
    6. ':

' → logprob: -11.512451171875
    7. ':
' → logprob: -12.762451171875
    8. ' :
' → logprob: -12.762451171875
    9. ',' → logprob: -13.387451171875
    10. '():
' → logprob: -13.512451171875

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038391444832086563
    2. '   ' → logprob: -5.628839015960693
    3. ' jumped' → logprob: -9.128839492797852
    4. 'jump' → logprob: -9.503839492797852
    5. '
' → logprob: -11.003839492797852
    6. '```' → logprob: -11.503839492797852
    7. 'j' → logprob: -11.628839492797852
    8. '           ' → logprob: -12.378839492797852
    9. '     ' → logprob: -13.003839492797852
    10. '	   ' → logprob: -13.003839492797852

Token 194: ' jumped' (ID: 48704)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4489148259162903
    2. 'jump' → logprob: -1.0739147663116455
    3. '   ' → logprob: -4.073915004730225
    4. ' jumped' → logprob: -6.198915004730225
    5. 'j' → logprob: -7.573915004730225
    6. '           ' → logprob: -8.448914527893066
    7. 'back' → logprob: -9.323914527893066
    8. '```' → logprob: -9.823914527893066
    9. '
' → logprob: -11.448914527893066
    10. 'jum' → logprob: -11.448914527893066

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05496589466929436
    2. '=' → logprob: -2.9299659729003906
    3. '=False' → logprob: -9.80496597290039
    4. ' ' → logprob: -11.30496597290039
    5. '   ' → logprob: -12.30496597290039
    6. 'd' → logprob: -12.55496597290039
    7. '  ' → logprob: -13.30496597290039
    8. 'ed' → logprob: -13.30496597290039
    9. '=True' → logprob: -13.67996597290039
    10. 'False' → logprob: -13.80496597290039

Token 196: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007099286303855479
    2. ' False' → logprob: -7.2507100105285645
    3. 'True' → logprob: -18.750709533691406
    4. '(False' → logprob: -18.750709533691406
    5. 'F' → logprob: -19.875709533691406
    6. '=False' → logprob: -20.250709533691406
    7. '   ' → logprob: -21.375709533691406
    8. '.False' → logprob: -21.625709533691406
    9. 'false' → logprob: -22.500709533691406
    10. '_false' → logprob: -22.500709533691406

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018830681219697
    2. 'for' → logprob: -4.1438307762146
    3. '#' → logprob: -6.3938307762146
    4. ' for' → logprob: -6.8938307762146
    5. '   ' → logprob: -10.518830299377441
    6. '```' → logprob: -10.518830299377441
    7. '
' → logprob: -10.768830299377441
    8. '<|end|>' → logprob: -11.018830299377441
    9. '	' → logprob: -12.393830299377441
    10. '	for' → logprob: -12.893830299377441

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10812371224164963
    2. '#' → logprob: -2.858123779296875
    3. 'for' → logprob: -3.108123779296875
    4. ' for' → logprob: -8.233123779296875
    5. '   ' → logprob: -9.108123779296875
    6. ' #' → logprob: -10.233123779296875
    7. '```' → logprob: -12.108123779296875
    8. '	' → logprob: -13.483123779296875
    9. '<|end|>' → logprob: -14.108123779296875
    10. '           ' → logprob: -14.358123779296875

Token 199: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8168384432792664
    2. '#' (adapté à ' #') → logprob: -0.9418384432792664
    3. '       ' → logprob: -1.8168385028839111
    4. ' for' → logprob: -5.691838264465332
    5. '   ' → logprob: -6.691838264465332
    6. ' #' → logprob: -6.941838264465332
    7. '
' → logprob: -9.816838264465332
    8. '```' → logprob: -10.316838264465332
    9. '	for' → logprob: -11.316838264465332
    10. ' ' → logprob: -11.441838264465332

Token 200: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03373444825410843
    2. ' for' → logprob: -3.4087345600128174
    3. '       ' → logprob: -9.533734321594238
    4. '   ' → logprob: -12.408734321594238
    5. '
' → logprob: -12.533734321594238
    6. '#' → logprob: -12.908734321594238
    7. 'For' → logprob: -13.408734321594238
    8. '	for' → logprob: -13.533734321594238
    9. 'pour' → logprob: -14.033734321594238
    10. ' ' → logprob: -14.283734321594238

Token 201: ' cherche' (ID: 52345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01930880919098854
    2. ' for' → logprob: -4.019309043884277
    3. 'cherche' → logprob: -7.019309043884277
    4. ' cherche' → logprob: -9.019309043884277
    5. 'range' → logprob: -9.144309043884277
    6. 'chercher' → logprob: -11.394309043884277
    7. ' range' → logprob: -11.894309043884277
    8. 'pour' → logprob: -12.269309043884277
    9. 're' → logprob: -12.519309043884277
    10. ' recherche' → logprob: -13.019309043884277

Token 202: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6406169533729553
    2. 'un' → logprob: -1.2656168937683105
    3. ' un' → logprob: -1.8906168937683105
    4. ' for' → logprob: -3.2656168937683105
    5. 'current' → logprob: -7.5156168937683105
    6. 'a' → logprob: -8.140617370605469
    7. 'pour' → logprob: -8.140617370605469
    8. 'une' → logprob: -8.765617370605469
    9. 'next' → logprob: -9.015617370605469
    10. ' current' → logprob: -9.140617370605469

Token 203: ' trampoline' (ID: 162506)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.42127126455307007
    2. 'for' → logprob: -1.1712713241577148
    3. 'range' → logprob: -4.296271324157715
    4. 'prev' → logprob: -4.671271324157715
    5. 'previous' → logprob: -5.546271324157715
    6. 'tr' → logprob: -5.671271324157715
    7. ' next' → logprob: -7.171271324157715
    8. ' for' → logprob: -7.546271324157715
    9. 'rev' → logprob: -7.921271324157715
    10. 're' → logprob: -8.296271324157715

Token 204: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.18979299068450928
    2. 'à' → logprob: -2.189793109893799
    3. ' in' → logprob: -3.939793109893799
    4. 'for' → logprob: -4.689793109893799
    5. 'in' → logprob: -5.064793109893799
    6. ' at' → logprob: -5.314793109893799
    7. 'at' → logprob: -5.314793109893799
    8. 'en' → logprob: -5.939793109893799
    9. ' for' → logprob: -5.939793109893799
    10. 'to' → logprob: -6.189793109893799

Token 205: ' sa' (ID: 880)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004865126684308052
    2. ' range' → logprob: -5.3798651695251465
    3. 'current' → logprob: -8.629864692687988
    4. 're' → logprob: -10.004864692687988
    5. 'for' → logprob: -11.129864692687988
    6. ' current' → logprob: -12.629864692687988
    7. 'reverse' → logprob: -14.004864692687988
    8. 'rang' → logprob: -14.629864692687988
    9. ' for' → logprob: -15.129864692687988
    10. ' reversed' → logprob: -15.504864692687988

Token 206: 'uter' (ID: 23469)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.45517727732658386
    2. 'uter' → logprob: -1.3301773071289062
    3. 'urt' → logprob: -3.9551773071289062
    4. 'unt' → logprob: -4.080177307128906
    5. 'ute' → logprob: -4.205177307128906
    6. 'utter' → logprob: -5.580177307128906
    7. 'range' → logprob: -5.580177307128906
    8. 'ur' → logprob: -5.705177307128906
    9. 'nger' → logprob: -5.705177307128906
    10. 'uted' → logprob: -5.830177307128906

Token 207: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.11363674700260162
    2. 'vers' → logprob: -2.2386367321014404
    3. ' à' → logprob: -8.36363697052002
    4. '   ' → logprob: -9.11363697052002
    5. 'à' → logprob: -9.61363697052002
    6. '```' → logprob: -9.61363697052002
    7. 'en' → logprob: -9.86363697052002
    8. ' en' → logprob: -10.23863697052002
    9. 'dans' → logprob: -10.23863697052002
    10. ' dans' → logprob: -10.73863697052002

Token 208: ' la' (ID: 557)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4592750668525696
    2. 'la' → logprob: -1.3342750072479248
    3. ' current' → logprob: -2.959275007247925
    4. ' la' → logprob: -3.959275007247925
    5. 'range' → logprob: -4.084275245666504
    6. 'left' → logprob: -5.084275245666504
    7. 'l' → logprob: -5.584275245666504
    8. 'le' → logprob: -6.084275245666504
    9. ' range' → logprob: -6.084275245666504
    10. '(current' → logprob: -7.334275245666504

Token 209: ' gauche' (ID: 58367)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07615406066179276
    2. 'left' → logprob: -2.7011539936065674
    3. 'right' → logprob: -5.7011542320251465
    4. 'g' → logprob: -6.4511542320251465
    5. ' current' → logprob: -7.4511542320251465
    6. ' gauche' → logprob: -8.701153755187988
    7. 'dro' → logprob: -8.826153755187988
    8. 'cour' → logprob: -9.576153755187988
    9. ' droite' → logprob: -10.201153755187988
    10. 'curr' → logprob: -10.326153755187988

Token 210: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4644013047218323
    2. '       ' → logprob: -1.3394012451171875
    3. 'for' → logprob: -2.2144012451171875
    4. '
' → logprob: -9.589401245117188
    5. '	for' → logprob: -9.964401245117188
    6. '   ' → logprob: -10.214401245117188
    7. '           ' → logprob: -10.964401245117188
    8. ' in' → logprob: -11.089401245117188
    9. ',' → logprob: -11.214401245117188
    10. '```' → logprob: -11.714401245117188

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10093282163143158
    2. ' for' → logprob: -2.6009328365325928
    3. 'for' → logprob: -3.8509328365325928
    4. '
' → logprob: -7.975932598114014
    5. '   ' → logprob: -9.475933074951172
    6. '           ' → logprob: -9.850933074951172
    7. '	for' → logprob: -10.600933074951172
    8. '```' → logprob: -11.100933074951172
    9. ' ' → logprob: -11.975933074951172
    10. '	' → logprob: -12.600933074951172

Token 212: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006357124075293541
    2. ' for' → logprob: -7.375635623931885
    3. '```' → logprob: -12.125636100769043
    4. '
' → logprob: -13.250636100769043
    5. '   ' → logprob: -14.125636100769043
    6. '       ' → logprob: -14.125636100769043
    7. 'range' → logprob: -15.000636100769043
    8. '	for' → logprob: -16.875635147094727
    9. '﻿' → logprob: -16.875635147094727
    10. '`' → logprob: -17.000635147094727

Token 213: ' prev' (ID: 10258)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2898898422718048
    2. 'prev' → logprob: -1.4148898124694824
    3. ' next' → logprob: -5.039889812469482
    4. ' prev' → logprob: -6.664889812469482
    5. 'previous' → logprob: -7.039889812469482
    6. ' previous' → logprob: -11.16489028930664
    7. 'left' → logprob: -11.78989028930664
    8. 'new' → logprob: -11.91489028930664
    9. 'current' → logprob: -11.91489028930664
    10. 'target' → logprob: -12.28989028930664

Token 214: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.18075552582740784
    2. ' in' → logprob: -1.8057554960250854
    3. '_' → logprob: -7.680755615234375
    4. 'in' → logprob: -8.430755615234375
    5. 'tr' → logprob: -8.430755615234375
    6. '_in' → logprob: -10.430755615234375
    7. ' ' → logprob: -11.555755615234375
    8. 'Tr' → logprob: -11.930755615234375
    9. '_current' → logprob: -11.930755615234375
    10. 's' → logprob: -12.055755615234375

Token 215: 'amp' (ID: 1515)
  Prédit: 'amp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amp' → logprob: -0.0015605698572471738
    2. 'v' → logprob: -7.251560688018799
    3. 'amps' → logprob: -8.37656021118164
    4. 'mp' → logprob: -8.75156021118164
    5. 'ampoline' → logprob: -9.62656021118164
    6. 'ap' → logprob: -10.25156021118164
    7. 'current' → logprob: -10.37656021118164
    8. 'prev' → logprob: -10.50156021118164
    9. 'imp' → logprob: -10.62656021118164
    10. 'ev' → logprob: -10.75156021118164

Token 216: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024856459349393845
    2. 'in' → logprob: -6.002485752105713
    3. '    ' → logprob: -12.877485275268555
    4. '   ' → logprob: -13.002485275268555
    5. ' ' → logprob: -13.502485275268555
    6. '       ' → logprob: -13.502485275268555
    7. '        ' → logprob: -14.127485275268555
    8. 'n' → logprob: -14.377485275268555
    9. 'range' → logprob: -15.002485275268555
    10. 's' → logprob: -15.752485275268555

Token 217: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3869079351425171
    2. 'range' → logprob: -1.136907935142517
    3. '(range' → logprob: -10.761907577514648
    4. ' reversed' → logprob: -11.761907577514648
    5. 're' → logprob: -12.511907577514648
    6. '	range' → logprob: -13.386907577514648
    7. '   ' → logprob: -13.511907577514648
    8. ' ' → logprob: -14.636907577514648
    9. 'reverse' → logprob: -15.011907577514648
    10. '```' → logprob: -16.38690757751465

Token 218: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.030820993706583977
    2. 'current' → logprob: -3.5308210849761963
    3. ' current' → logprob: -6.905820846557617
    4. '(' → logprob: -10.155820846557617
    5. ' (' → logprob: -10.780820846557617
    6. ',current' → logprob: -13.155820846557617
    7. '	current' → logprob: -13.280820846557617
    8. '[current' → logprob: -13.405820846557617
    9. '=current' → logprob: -13.780820846557617
    10. '   ' → logprob: -14.655820846557617

Token 219: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6327342987060547
    2. '-' → logprob: -0.7577342987060547
    3. ' ' → logprob: -9.507734298706055
    4. '   ' → logprob: -10.257734298706055
    5. 'current' → logprob: -11.257734298706055
    6. '1' → logprob: -12.757734298706055
    7. '
' → logprob: -13.132734298706055
    8. '```' → logprob: -13.257734298706055
    9. ',' → logprob: -13.632734298706055
    10. '  ' → logprob: -13.632734298706055

Token 220: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.250059127807617
    4. '```' → logprob: -16.375059127807617
    5. '
' → logprob: -16.500059127807617
    6. '  ' → logprob: -17.625059127807617
    7. ',' → logprob: -17.750059127807617
    8. '...' → logprob: -17.875059127807617
    9. '    ' → logprob: -18.625059127807617
    10. '       ' → logprob: -19.875059127807617

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -16.250009536743164
    4. '   ' → logprob: -16.750009536743164
    5. '```' → logprob: -17.500009536743164
    6. ',' → logprob: -17.687509536743164
    7. '  ' → logprob: -18.000009536743164
    8. '2' → logprob: -18.500009536743164
    9. '-' → logprob: -18.875009536743164
    10. '...' → logprob: -19.062509536743164

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009566014050506055
    2. ' ,' → logprob: -7.0009565353393555
    3. ',-' → logprob: -10.750956535339355
    4. ',current' → logprob: -10.875956535339355
    5. '-' → logprob: -13.750956535339355
    6. '   ' → logprob: -13.875956535339355
    7. '0' → logprob: -14.125956535339355
    8. ',
' → logprob: -14.500956535339355
    9. ' -' → logprob: -14.750956535339355
    10. ' ' → logprob: -15.750956535339355

Token 223: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00022034443099983037
    2. ' -' → logprob: -8.50022029876709
    3. '-current' → logprob: -11.00022029876709
    4. '   ' → logprob: -17.125221252441406
    5. ' ' → logprob: -17.375221252441406
    6. '-range' → logprob: -18.875221252441406
    7. '
' → logprob: -19.250221252441406
    8. '-n' → logprob: -19.375221252441406
    9. 'current' → logprob: -19.375221252441406
    10. '-python' → logprob: -19.750221252441406

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -18.125
    4. '
' → logprob: -19.5
    5. '   ' → logprob: -19.625
    6. '１' → logprob: -20.75
    7. '۱' → logprob: -20.75
    8. '

' → logprob: -20.875
    9. '```' → logprob: -20.875
    10. '  ' → logprob: -21.3125

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004803624760825187
    2. '-' → logprob: -8.375480651855469
    3. ',-' → logprob: -8.375480651855469
    4. ' ,' → logprob: -11.500480651855469
    5. ' -' → logprob: -12.625480651855469
    6. '   ' → logprob: -12.875480651855469
    7. '       ' → logprob: -13.625480651855469
    8. '```' → logprob: -13.875480651855469
    9. ' ,-' → logprob: -15.250480651855469
    10. '           ' → logprob: -15.250480651855469

Token 226: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005533903022296727
    2. ' -' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.750553131103516
    4. ' ' → logprob: -16.000553131103516
    5. '-step' → logprob: -17.000553131103516
    6. '  ' → logprob: -17.625553131103516
    7. '```' → logprob: -17.625553131103516
    8. '):
' → logprob: -18.000553131103516
    9. ')' → logprob: -18.125553131103516
    10. '           ' → logprob: -18.250553131103516

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. ')' → logprob: -15.875001907348633
    4. '):
' → logprob: -16.000001907348633
    5. '
' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '```' → logprob: -17.625001907348633
    8. ',' → logprob: -18.125001907348633
    9. ')
' → logprob: -18.687501907348633
    10. '),' → logprob: -19.000001907348633

Token 228: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008374028839170933
    2. '):' → logprob: -4.883374214172363
    3. '-' → logprob: -7.383374214172363
    4. '       ' → logprob: -10.008374214172363
    5. '):
' → logprob: -10.133374214172363
    6. '):

' → logprob: -11.508374214172363
    7. ' ):
' → logprob: -11.508374214172363
    8. '   ' → logprob: -11.633374214172363
    9. '           ' → logprob: -11.633374214172363
    10. ' -' → logprob: -11.883374214172363

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000284696085145697
    2. '
' → logprob: -9.250285148620605
    3. '```' → logprob: -9.375285148620605
    4. 'dist' → logprob: -9.500285148620605
    5. '       ' → logprob: -11.125285148620605
    6. '          ' → logprob: -12.375285148620605
    7. ' dist' → logprob: -12.750285148620605
    8. '   ' → logprob: -13.000285148620605
    9. '               ' → logprob: -13.625285148620605
    10. '         ' → logprob: -13.875285148620605

Token 230: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0009701796225272119
    2. ' dist' → logprob: -7.250970363616943
    3. '           ' → logprob: -8.375969886779785
    4. '
' → logprob: -11.625969886779785
    5. 'distance' → logprob: -11.875969886779785
    6. '	dist' → logprob: -12.250969886779785
    7. '               ' → logprob: -12.375969886779785
    8. '```' → logprob: -12.750969886779785
    9. '   ' → logprob: -14.625969886779785
    10. '       ' → logprob: -14.625969886779785

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00975774321705103
    2. '=' → logprob: -4.6347575187683105
    3. '   ' → logprob: -14.634757995605469
    4. ' ' → logprob: -14.884757995605469
    5. '    ' → logprob: -15.384757995605469
    6. '           ' → logprob: -15.759757995605469
    7. '<|end|>' → logprob: -15.759757995605469
    8. 's' → logprob: -16.38475799560547
    9. '       ' → logprob: -16.88475799560547
    10. '        ' → logprob: -17.00975799560547

Token 232: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.31338563561439514
    2. ' positions' → logprob: -1.3133856058120728
    3. '           ' → logprob: -9.563385963439941
    4. '   ' → logprob: -10.688385963439941
    5. '.positions' → logprob: -11.063385963439941
    6. 'abs' → logprob: -12.188385963439941
    7. '       ' → logprob: -13.688385963439941
    8. 'position' → logprob: -13.813385963439941
    9. '               ' → logprob: -13.813385963439941
    10. '```' → logprob: -14.188385963439941

Token 233: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0003476209531072527
    2. '[' → logprob: -8.500348091125488
    3. 'current' → logprob: -8.875348091125488
    4. ' [' → logprob: -13.750348091125488
    5. '[curr' → logprob: -14.000348091125488
    6. ' current' → logprob: -14.000348091125488
    7. 'prev' → logprob: -15.250348091125488
    8. '(current' → logprob: -15.625348091125488
    9. ',current' → logprob: -15.875348091125488
    10. '[cur' → logprob: -16.125347137451172

Token 234: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011343709047650918
    2. ' ]' → logprob: -9.375113487243652
    3. ']-' → logprob: -11.500113487243652
    4. '-' → logprob: -12.250113487243652
    5. ' -' → logprob: -12.250113487243652
    6. '[' → logprob: -12.750113487243652
    7. '   ' → logprob: -13.125113487243652
    8. '           ' → logprob: -13.875113487243652
    9. '       ' → logprob: -14.250113487243652
    10. '"]' → logprob: -14.750113487243652

Token 235: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759769678115845
    2. ' -' → logprob: -0.8259769678115845
    3. ' ' → logprob: -10.450977325439453
    4. '   ' → logprob: -12.450977325439453
    5. ']' → logprob: -14.200977325439453
    6. ' ' → logprob: -14.200977325439453
    7. '```' → logprob: -14.325977325439453
    8. ')' → logprob: -14.825977325439453
    9. '[' → logprob: -14.825977325439453
    10. '           ' → logprob: -14.825977325439453

Token 236: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.029766689985990524
    2. ' positions' → logprob: -3.529766798019409
    3. 'position' → logprob: -11.904767036437988
    4. '.positions' → logprob: -12.529767036437988
    5. '<|end|>' → logprob: -13.529767036437988
    6. '_positions' → logprob: -13.654767036437988
    7. '           ' → logprob: -14.529767036437988
    8. '   ' → logprob: -14.654767036437988
    9. 'Positions' → logprob: -14.779767036437988
    10. ' ' → logprob: -14.904767036437988

Token 237: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012154294381616637
    2. 'prev' → logprob: -9.375121116638184
    3. 'positions' → logprob: -10.250121116638184
    4. ' positions' → logprob: -14.750121116638184
    5. ' [' → logprob: -14.875121116638184
    6. '[pos' → logprob: -15.750121116638184
    7. '[
' → logprob: -16.1251220703125
    8. ' prev' → logprob: -16.5001220703125
    9. '[current' → logprob: -16.6251220703125
    10. '   ' → logprob: -16.8751220703125

Token 238: 'prev' (ID: 15969)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.004240685608237982
    2. 'prev' → logprob: -5.5042405128479
    3. ' positions' → logprob: -8.754240989685059
    4. ' prev' → logprob: -13.254240989685059
    5. 'previous' → logprob: -14.129240989685059
    6. 'current' → logprob: -14.629240989685059
    7. '[' → logprob: -15.004240989685059
    8. '   ' → logprob: -15.379240989685059
    9. 'pos' → logprob: -15.879240989685059
    10. '
' → logprob: -16.004240036010742

Token 239: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -5.080963092041202e-06
    2. 'tr' → logprob: -12.375004768371582
    3. '_' → logprob: -15.750004768371582
    4. '_t' → logprob: -15.750004768371582
    5. ']' → logprob: -15.875004768371582
    6. '_prev' → logprob: -16.1250057220459
    7. '<tr' → logprob: -16.6250057220459
    8. '	tr' → logprob: -16.6250057220459
    9. 'Tr' → logprob: -17.3750057220459
    10. '_trans' → logprob: -17.3750057220459

Token 240: 'amp' (ID: 1515)
  Prédit: 'amp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amp' → logprob: -0.0006234417669475079
    2. 'v' → logprob: -8.25062370300293
    3. 'amps' → logprob: -9.25062370300293
    4. 'prev' → logprob: -9.87562370300293
    5. '_tr' → logprob: -10.25062370300293
    6. ']' → logprob: -10.37562370300293
    7. 'am' → logprob: -10.87562370300293
    8. '_' → logprob: -11.25062370300293
    9. 'ampoline' → logprob: -11.50062370300293
    10. '_prev' → logprob: -11.62562370300293

Token 241: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16059048473834991
    2. ']
' → logprob: -1.9105905294418335
    3. '           ' → logprob: -9.160590171813965
    4. ' ]' → logprob: -9.410590171813965
    5. ']
' → logprob: -9.910590171813965
    6. ']<=' → logprob: -10.035590171813965
    7. 'if' → logprob: -10.410590171813965
    8. ' ]
' → logprob: -11.535590171813965
    9. ']

' → logprob: -11.785590171813965
    10. '```' → logprob: -11.910590171813965

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020903039257973433
    2. 'if' → logprob: -6.2520904541015625
    3. ' if' → logprob: -8.752090454101562
    4. '   ' → logprob: -13.252090454101562
    5. '          ' → logprob: -14.127090454101562
    6. '       ' → logprob: -15.002090454101562
    7. '```' → logprob: -15.252090454101562
    8. '               ' → logprob: -16.002090454101562
    9. ' ' → logprob: -17.002090454101562
    10. '         ' → logprob: -17.127090454101562

Token 243: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03931990638375282
    2. ' if' → logprob: -3.2893199920654297
    3. '           ' → logprob: -6.66431999206543
    4. '```' → logprob: -14.41431999206543
    5. '   ' → logprob: -14.78931999206543
    6. '               ' → logprob: -15.03931999206543
    7. '            ' → logprob: -15.41431999206543
    8. '       ' → logprob: -15.53931999206543
    9. 'd' → logprob: -16.53931999206543
    10. '          ' → logprob: -16.66431999206543

Token 244: ' dist' (ID: 3601)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6343159079551697
    2. 'd' → logprob: -0.8843159079551697
    3. ' dist' → logprob: -3.2593159675598145
    4. 'dist' → logprob: -4.0093159675598145
    5. '           ' → logprob: -10.259315490722656
    6. '               ' → logprob: -11.134315490722656
    7. '	d' → logprob: -11.134315490722656
    8. '   ' → logprob: -11.384315490722656
    9. ' distances' → logprob: -11.634315490722656
    10. '    ' → logprob: -11.696815490722656

Token 245: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07889672368764877
    2. '<=' → logprob: -2.5788967609405518
    3. ' >=' → logprob: -13.203896522521973
    4. ' ' → logprob: -13.453896522521973
    5. '>=' → logprob: -14.328896522521973
    6. ')<=' → logprob: -14.578896522521973
    7. '```' → logprob: -14.828896522521973
    8. '=' → logprob: -15.078896522521973
    9. ')' → logprob: -15.203896522521973
    10. '>' → logprob: -15.328896522521973

Token 246: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1002599447965622
    2. ' d' → logprob: -2.350260019302368
    3. '   ' → logprob: -10.475259780883789
    4. '           ' → logprob: -11.725259780883789
    5. ' ' → logprob: -12.850259780883789
    6. '       ' → logprob: -12.850259780883789
    7. '	d' → logprob: -13.100259780883789
    8. ' ' → logprob: -13.350259780883789
    9. '    ' → logprob: -13.725259780883789
    10. '```' → logprob: -13.725259780883789

Token 247: '[current' (ID: 49470)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005302758072502911
    2. 'prev' → logprob: -8.125530242919922
    3. '[current' → logprob: -8.375530242919922
    4. '[curr' → logprob: -13.750530242919922
    5. 'current' → logprob: -14.000530242919922
    6. ' [' → logprob: -14.500530242919922
    7. '[cur' → logprob: -15.250530242919922
    8. '	prev' → logprob: -15.375530242919922
    9. '```' → logprob: -15.500530242919922
    10. ' ' → logprob: -16.125530242919922

Token 248: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0626009851694107
    2. ']:' → logprob: -2.937601089477539
    3. '[current' → logprob: -5.437601089477539
    4. '       ' → logprob: -6.562601089477539
    5. ']' → logprob: -7.937601089477539
    6. '):
' → logprob: -8.062601089477539
    7. '[' → logprob: -8.062601089477539
    8. ':
' → logprob: -8.312601089477539
    9. ':' → logprob: -8.812601089477539
    10. 'current' → logprob: -9.187601089477539

Token 249: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043648719787597656
    2. 'current' → logprob: -3.2936487197875977
    3. ' current' → logprob: -5.918648719787598
    4. '           ' → logprob: -6.543648719787598
    5. 'prev' → logprob: -7.793648719787598
    6. '
' → logprob: -8.293648719787598
    7. '       ' → logprob: -8.543648719787598
    8. '```' → logprob: -8.543648719787598
    9. 'd' → logprob: -8.918648719787598
    10. '[current' → logprob: -9.543648719787598

Token 250: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.00491268141195178
    2. ' current' → logprob: -5.379912853240967
    3. '               ' → logprob: -8.629912376403809
    4. '   ' → logprob: -9.504912376403809
    5. '           ' → logprob: -10.379912376403809
    6. '       ' → logprob: -13.129912376403809
    7. '	current' → logprob: -13.379912376403809
    8. 'return' → logprob: -13.754912376403809
    9. '```' → logprob: -14.129912376403809
    10. ' ' → logprob: -14.379912376403809

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889033854007721
    2. ' =' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.578890800476074
    4. '=
' → logprob: -17.703889846801758
    5. ' ' → logprob: -18.078889846801758
    6. '           ' → logprob: -18.578889846801758
    7. '    ' → logprob: -18.953889846801758
    8. '=

' → logprob: -19.203889846801758
    9. '       ' → logprob: -19.453889846801758
    10. '=}' → logprob: -19.703889846801758

Token 252: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.4974866644479334e-05
    2. ' prev' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.750015258789062
    4. '	prev' → logprob: -17.000015258789062
    5. '(prev' → logprob: -18.125015258789062
    6. 'pre' → logprob: -19.125015258789062
    7. '           ' → logprob: -20.000015258789062
    8. 'previous' → logprob: -20.125015258789062
    9. '.prev' → logprob: -20.250015258789062
    10. '_prev' → logprob: -20.875015258789062

Token 253: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -1.6240566083070007e-06
    2. 'tr' → logprob: -13.625001907348633
    3. '_' → logprob: -16.125001907348633
    4. 'v' → logprob: -16.375001907348633
    5. '_t' → logprob: -17.375001907348633
    6. 'Tr' → logprob: -17.500001907348633
    7. ' tramp' → logprob: -17.625001907348633
    8. 'prev' → logprob: -17.750001907348633
    9. '_prev' → logprob: -17.750001907348633
    10. 'tram' → logprob: -18.250001907348633

Token 254: 'amp' (ID: 1515)
  Prédit: 'amp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amp' → logprob: -0.01133793219923973
    2. 'v' → logprob: -4.511337757110596
    3. '_tr' → logprob: -8.761338233947754
    4. '_amp' → logprob: -10.511338233947754
    5. 'prev' → logprob: -10.636338233947754
    6. '_' → logprob: -11.136338233947754
    7. '_v' → logprob: -11.386338233947754
    8. 'mp' → logprob: -11.886338233947754
    9. 'av' → logprob: -12.261338233947754
    10. '_prev' → logprob: -12.511338233947754

Token 255: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014525714504998177
    2. '           ' → logprob: -9.875144958496094
    3. 'jump' → logprob: -10.125144958496094
    4. ' jumped' → logprob: -10.625144958496094
    5. 'j' → logprob: -11.250144958496094
    6. '                   ' → logprob: -11.500144958496094
    7. '
' → logprob: -13.250144958496094
    8. '                
' → logprob: -13.625144958496094
    9. '              ' → logprob: -14.500144958496094
    10. '<|end|>' → logprob: -14.750144958496094

Token 256: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000892759533599019
    2. 'jump' → logprob: -7.625892639160156
    3. ' jumped' → logprob: -8.375892639160156
    4. '           ' → logprob: -8.750892639160156
    5. 'j' → logprob: -11.375892639160156
    6. '                   ' → logprob: -13.000892639160156
    7. '   ' → logprob: -14.500892639160156
    8. '              ' → logprob: -14.500892639160156
    9. '```' → logprob: -15.500892639160156
    10. '	           ' → logprob: -15.750892639160156

Token 257: ' jumped' (ID: 48704)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.012864998541772366
    2. '           ' → logprob: -4.63786506652832
    3. ' jumped' → logprob: -5.88786506652832
    4. '       ' → logprob: -8.63786506652832
    5. 'j' → logprob: -9.63786506652832
    6. '   ' → logprob: -9.76286506652832
    7. '               ' → logprob: -11.38786506652832
    8. 'jum' → logprob: -11.63786506652832
    9. '          ' → logprob: -13.01286506652832
    10. '
' → logprob: -13.38786506652832

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20153993368148804
    2. ' =' → logprob: -1.7015399932861328
    3. '           ' → logprob: -9.451539993286133
    4. '=True' → logprob: -10.576539993286133
    5. '               ' → logprob: -11.326539993286133
    6. '       ' → logprob: -12.576539993286133
    7. '   ' → logprob: -13.576539993286133
    8. 'ed' → logprob: -13.576539993286133
    9. '=False' → logprob: -13.576539993286133
    10. ' ' → logprob: -14.201539993286133

Token 259: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. '(True' → logprob: -18.131715774536133
    4. '=True' → logprob: -18.256715774536133
    5. '_true' → logprob: -21.381715774536133
    6. 'true' → logprob: -21.631715774536133
    7. ' ' → logprob: -21.631715774536133
    8. '.True' → logprob: -22.006715774536133
    9. 'Tr' → logprob: -23.131715774536133
    10. 'Yes' → logprob: -24.256715774536133

Token 260: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.176947600673884e-05
    2. '           ' → logprob: -12.125021934509277
    3. '<|end|>' → logprob: -12.125021934509277
    4. '```' → logprob: -12.875021934509277
    5. 'break' → logprob: -13.250021934509277
    6. '                   ' → logprob: -13.500021934509277
    7. '              ' → logprob: -13.625021934509277
    8. '                
' → logprob: -13.875021934509277
    9. '                ' → logprob: -14.000021934509277
    10. '			' → logprob: -14.375021934509277

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.7697225252486533e-06
    2. 'break' → logprob: -13.250003814697266
    3. '           ' → logprob: -13.625003814697266
    4. ' break' → logprob: -15.500003814697266
    5. '```' → logprob: -15.625003814697266
    6. '       ' → logprob: -16.250003814697266
    7. '              ' → logprob: -16.500003814697266
    8. '                   ' → logprob: -16.625003814697266
    9. '			' → logprob: -16.750003814697266
    10. '                ' → logprob: -18.125003814697266

Token 262: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.63822340965271
    2. ' break' → logprob: -1.13822340965271
    3. '               ' → logprob: -1.88822340965271
    4. '           ' → logprob: -10.513223648071289
    5. '	break' → logprob: -12.388223648071289
    6. '                   ' → logprob: -12.888223648071289
    7. '			' → logprob: -13.013223648071289
    8. '              ' → logprob: -13.013223648071289
    9. '```' → logprob: -14.388223648071289
    10. ' ' → logprob: -14.513223648071289

Token 263: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2246291337069124e-05
    2. '   ' → logprob: -10.875021934509277
    3. '
' → logprob: -13.500021934509277
    4. '           ' → logprob: -14.375021934509277
    5. 'if' → logprob: -14.750021934509277
    6. '<|end|>' → logprob: -14.875021934509277
    7. '```' → logprob: -15.375021934509277
    8. '	' → logprob: -16.125022888183594
    9. '      ' → logprob: -16.375022888183594
    10. ' if' → logprob: -16.875022888183594

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.816093228830141e-06
    2. '   ' → logprob: -13.00000286102295
    3. 'if' → logprob: -15.25000286102295
    4. '           ' → logprob: -15.87500286102295
    5. ' if' → logprob: -17.375001907348633
    6. '      ' → logprob: -17.500001907348633
    7. '```' → logprob: -18.250001907348633
    8. '     ' → logprob: -18.500001907348633
    9. '
' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.625001907348633

Token 265: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05281057208776474
    2. '   ' → logprob: -3.0528106689453125
    3. ' if' → logprob: -5.6778106689453125
    4. 'if' (adapté à ' if') → logprob: -7.1778106689453125
    5. ' ' → logprob: -11.177810668945312
    6. '```' → logprob: -12.802810668945312
    7. '     ' → logprob: -12.927810668945312
    8. '           ' → logprob: -13.052810668945312
    9. '      ' → logprob: -13.052810668945312
    10. '  ' → logprob: -13.052810668945312

Token 266: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31326788663864136
    2. 'not' → logprob: -1.3132679462432861
    3. '   ' → logprob: -13.313267707824707
    4. ' ' → logprob: -13.688267707824707
    5. '	not' → logprob: -13.688267707824707
    6. '       ' → logprob: -14.563267707824707
    7. '
' → logprob: -14.938267707824707
    8. '_not' → logprob: -15.188267707824707
    9. '(not' → logprob: -15.313267707824707
    10. '!' → logprob: -15.438267707824707

Token 267: ' jumped' (ID: 48704)
  Prédit: ' jumped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jumped' → logprob: -0.693275511264801
    2. 'jump' → logprob: -0.693275511264801
    3. 'jum' → logprob: -9.443275451660156
    4. 'j' → logprob: -10.193275451660156
    5. ' ' → logprob: -12.818275451660156
    6. ' jump' → logprob: -13.068275451660156
    7. ' ' → logprob: -13.443275451660156
    8. 'jmp' → logprob: -13.818275451660156
    9. 'Jump' → logprob: -13.943275451660156
    10. '_jump' → logprob: -14.568275451660156

Token 268: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8694973587989807
    2. '           ' → logprob: -1.119497299194336
    3. ':' → logprob: -1.369497299194336
    4. ':return' → logprob: -9.869497299194336
    5. '       ' → logprob: -10.244497299194336
    6. '):
' → logprob: -10.994497299194336
    7. '               ' → logprob: -11.619497299194336
    8. '():
' → logprob: -11.619497299194336
    9. ':

' → logprob: -11.744497299194336
    10. '=' → logprob: -12.244497299194336

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012998921796679497
    2. 'return' → logprob: -4.512999057769775
    3. '       ' → logprob: -6.887999057769775
    4. ' return' → logprob: -7.012999057769775
    5. '   ' → logprob: -10.637998580932617
    6. '               ' → logprob: -12.387998580932617
    7. '```' → logprob: -15.512998580932617
    8. '
' → logprob: -15.637998580932617
    9. '	return' → logprob: -16.137998580932617
    10. '          ' → logprob: -16.387998580932617

Token 270: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014204171486198902
    2. ' return' → logprob: -4.264204025268555
    3. '           ' → logprob: -10.264204025268555
    4. '   ' → logprob: -12.514204025268555
    5. '               ' → logprob: -13.889204025268555
    6. '       ' → logprob: -14.014204025268555
    7. '	return' → logprob: -15.639204025268555
    8. '
' → logprob: -17.014204025268555
    9. 'False' → logprob: -17.014204025268555
    10. '```' → logprob: -17.514204025268555

Token 271: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.392202976712724e-06
    2. ' False' → logprob: -12.000006675720215
    3. 'True' → logprob: -15.625006675720215
    4. 'F' → logprob: -21.0000057220459
    5. '(False' → logprob: -21.6250057220459
    6. '=False' → logprob: -22.6250057220459
    7. 'false' → logprob: -22.7500057220459
    8. '_false' → logprob: -23.2500057220459
    9. 'Fal' → logprob: -23.6250057220459
    10. 'None' → logprob: -24.8750057220459

Token 272: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010366239439463243
    2. 'return' → logprob: -9.750103950500488
    3. '
' → logprob: -10.500103950500488
    4. '	return' → logprob: -11.500103950500488
    5. ' return' → logprob: -11.875103950500488
    6. '    
' → logprob: -14.500103950500488
    7. '   ' → logprob: -15.750103950500488
    8. '       ' → logprob: -17.000102996826172
    9. '<|end|>' → logprob: -17.750102996826172
    10. ':return' → logprob: -18.125102996826172

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030281138606369495
    2. 'return' → logprob: -8.125303268432617
    3. ' return' → logprob: -12.000303268432617
    4. '
' → logprob: -14.750303268432617
    5. '       ' → logprob: -16.250303268432617
    6. '	return' → logprob: -16.500303268432617
    7. '   ' → logprob: -17.875303268432617
    8. '  ' → logprob: -18.375303268432617
    9. '```' → logprob: -18.375303268432617
    10. '    
' → logprob: -18.375303268432617

Token 274: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4743487238883972
    2. 'return' (adapté à ' return') → logprob: -0.9743487238883972
    3. ' return' → logprob: -8.224349021911621
    4. '
' → logprob: -13.224349021911621
    5. '	return' → logprob: -14.349349021911621
    6. '       ' → logprob: -15.099349021911621
    7. 'eturn' → logprob: -15.349349021911621
    8. '  ' → logprob: -15.599349021911621
    9. ' ' → logprob: -15.599349021911621
    10. '```' → logprob: -15.724349021911621

Token 275: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0011703446507453918
    2. ' True' → logprob: -6.7511701583862305
    3. 'Tr' → logprob: -16.876171112060547
    4. 'False' → logprob: -17.626171112060547
    5. '(True' → logprob: -19.001171112060547
    6. 'true' → logprob: -20.251171112060547
    7. 'T' → logprob: -20.876171112060547
    8. ' ' → logprob: -21.501171112060547
    9. '=True' → logprob: -21.501171112060547
    10. ' Tru' → logprob: -22.001171112060547

Token 276: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6636912226676941
    2. 'if' → logprob: -1.5386912822723389
    3. 'positions' → logprob: -2.788691282272339
    4. '
' → logprob: -2.913691282272339
    5. '#' → logprob: -3.288691282272339
    6. 'for' → logprob: -3.413691282272339
    7. 'result' → logprob: -3.538691282272339
    8. 'def' → logprob: -5.03869104385376
    9. 'position' → logprob: -5.03869104385376
    10. '(' → logprob: -5.66369104385376

Token 277: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9156891703605652
    2. 'print' → logprob: -1.04068922996521
    3. 'for' → logprob: -1.91568922996521
    4. 'start' → logprob: -3.04068922996521
    5. 'result' → logprob: -3.54068922996521
    6. 'answer' → logprob: -5.165688991546631
    7. 'can' → logprob: -5.665688991546631
    8. '#' → logprob: -5.790688991546631
    9. 'possible' → logprob: -6.040688991546631
    10. 'max' → logprob: -7.040688991546631

Token 278: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.004635064862668514
    2. 'can' → logprob: -5.379634857177734
    3. ' not' → logprob: -12.379634857177734
    4. ' N' → logprob: -12.629634857177734
    5. ' len' → logprob: -13.254634857177734
    6. '(can' → logprob: -13.504634857177734
    7. ' is' → logprob: -13.629634857177734
    8. ' ' → logprob: -13.879634857177734
    9. '	can' → logprob: -13.879634857177734
    10. 'N' → logprob: -15.254634857177734

Token 279: '_go' (ID: 90361)
  Prédit: '_go'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_go' → logprob: -1.1472419600977446e-06
    2. '_can' → logprob: -13.750000953674316
    3. '_' → logprob: -17.750001907348633
    4. 'go' → logprob: -19.625001907348633
    5. ' _' → logprob: -20.625001907348633
    6. '_to' → logprob: -20.875001907348633
    7. '_get' → logprob: -21.000001907348633
    8. '_do' → logprob: -21.000001907348633
    9. '_g' → logprob: -21.625001907348633
    10. '__' → logprob: -21.750001907348633

Token 280: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -1.9361264946837764e-07
    2. '_backward' → logprob: -16.25
    3. '_for' → logprob: -17.5
    4. '_' → logprob: -18.75
    5. '_front' → logprob: -18.875
    6. 'forward' → logprob: -19.125
    7. '_back' → logprob: -20.5
    8. '_fore' → logprob: -20.625
    9. '_f' → logprob: -20.75
    10. '_go' → logprob: -21.0

Token 281: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006554892170242965
    2. '()' → logprob: -7.375655651092529
    3. ' ():' → logprob: -10.500655174255371
    4. ' ()' → logprob: -14.500655174255371
    5. '():
' → logprob: -14.750655174255371
    6. '()==' → logprob: -15.250655174255371
    7. '()>' → logprob: -15.750655174255371
    8. ':' → logprob: -16.500656127929688
    9. '(' → logprob: -17.625656127929688
    10. '():
' → logprob: -18.000656127929688

Token 282: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.032196011394262314
    2. ':' → logprob: -4.282196044921875
    3. 'and' → logprob: -4.532196044921875
    4. '():' → logprob: -5.282196044921875
    5. '()' → logprob: -6.782196044921875
    6. ' or' → logprob: -7.032196044921875
    7. ' :' → logprob: -11.407196044921875
    8. 'or' → logprob: -13.407196044921875
    9. '():
' → logprob: -13.782196044921875
    10. ' ():' → logprob: -14.032196044921875

Token 283: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.00671584764495492
    2. 'can' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.131715774536133
    4. '	can' → logprob: -16.006715774536133
    5. '(can' → logprob: -16.381715774536133
    6. ' ' → logprob: -17.506715774536133
    7. ' not' → logprob: -17.631715774536133
    8. '_can' → logprob: -18.131715774536133
    9. '.can' → logprob: -19.881715774536133
    10. ' could' → logprob: -20.506715774536133

Token 284: '_go' (ID: 90361)
  Prédit: '_go'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_go' → logprob: -3.5716304410016164e-05
    2. '_can' → logprob: -10.250035285949707
    3. '_' → logprob: -15.750035285949707
    4. 'go' → logprob: -16.000036239624023
    5. ' _' → logprob: -16.750036239624023
    6. '_get' → logprob: -17.750036239624023
    7. '_back' → logprob: -18.375036239624023
    8. '\' → logprob: -18.875036239624023
    9. '__' → logprob: -18.875036239624023
    10. '_are' → logprob: -19.000036239624023

Token 285: '_back' (ID: 8715)
  Prédit: '_back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_back' → logprob: -3.4121114822482923e-06
    2. '_backward' → logprob: -12.875003814697266
    3. 'back' → logprob: -14.250003814697266
    4. '_b' → logprob: -17.625003814697266
    5. '_forward' → logprob: -18.125003814697266
    6. '_Back' → logprob: -18.875003814697266
    7. '_BACK' → logprob: -19.000003814697266
    8. 'Back' → logprob: -19.125003814697266
    9. ' back' → logprob: -19.125003814697266
    10. '_' → logprob: -19.250003814697266

Token 286: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.371605948312208e-05
    2. '()' → logprob: -10.000053405761719
    3. '():
' → logprob: -12.250053405761719
    4. ' ():' → logprob: -12.625053405761719
    5. ':' → logprob: -15.875053405761719
    6. '()==' → logprob: -17.12505340576172
    7. '():
' → logprob: -17.37505340576172
    8. '(' → logprob: -17.50005340576172
    9. ' ()' → logprob: -18.00005340576172
    10. '():

' → logprob: -18.25005340576172

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03404675051569939
    2. 'print' → logprob: -3.4090466499328613
    3. ' print' → logprob: -8.15904712677002
    4. '	print' → logprob: -9.40904712677002
    5. '
' → logprob: -11.28404712677002
    6. '    
' → logprob: -11.53404712677002
    7. '```' → logprob: -12.28404712677002
    8. '   ' → logprob: -12.40904712677002
    9. ':
' → logprob: -14.90904712677002
    10. '       ' → logprob: -15.28404712677002

Token 288: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01338738203048706
    2. '   ' → logprob: -5.013387203216553
    3. ' print' → logprob: -5.013387203216553
    4. '
' → logprob: -14.388387680053711
    5. '	print' → logprob: -14.513387680053711
    6. '```' → logprob: -15.388387680053711
    7. 'for' → logprob: -16.76338768005371
    8. ' ' → logprob: -16.76338768005371
    9. 'pass' → logprob: -17.88838768005371
    10. 'Print' → logprob: -18.01338768005371

Token 289: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0022194879129529
    2. '(' → logprob: -6.3772196769714355
    3. '('' → logprob: -7.6272196769714355
    4. '(True' → logprob: -11.252219200134277
    5. '(-' → logprob: -11.752219200134277
    6. '(":' → logprob: -12.502219200134277
    7. '(N' → logprob: -12.877219200134277
    8. '()' → logprob: -14.752219200134277
    9. '"' → logprob: -14.752219200134277
    10. '("'' → logprob: -14.752219200134277

Token 290: 'yes' (ID: 6763)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.16990473866462708
    2. 'B' → logprob: -2.6699047088623047
    3. 'Yes' → logprob: -3.0449047088623047
    4. 'Possible' → logprob: -4.544904708862305
    5. 'possible' → logprob: -4.794904708862305
    6. 'Oui' → logprob: -5.169904708862305
    7. 'oui' → logprob: -5.544904708862305
    8. 'P' → logprob: -5.669904708862305
    9. 'yes' → logprob: -6.419904708862305
    10. 'S' → logprob: -6.544904708862305

Token 291: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3868967890739441
    2. '")
' → logprob: -1.1368968486785889
    3. '")
' → logprob: -10.761897087097168
    4. '"' → logprob: -13.511897087097168
    5. 'e' → logprob: -13.886897087097168
    6. 's' → logprob: -14.511897087097168
    7. '")

' → logprob: -14.886897087097168
    8. '!")' → logprob: -15.136897087097168
    9. 'else' → logprob: -15.511897087097168
    10. ' ")' → logprob: -15.511897087097168

Token 292: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -5.848420551046729e-05
    2. ' else' → logprob: -9.7500581741333
    3. 'elif' → logprob: -16.625059127807617
    4. '```' → logprob: -19.125059127807617
    5. 'e' → logprob: -20.875059127807617
    6. 'elser' → logprob: -20.875059127807617
    7. '	else' → logprob: -21.375059127807617
    8. '#else' → logprob: -21.500059127807617
    9. '_else' → logprob: -21.500059127807617
    10. 'elses' → logprob: -21.500059127807617

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00886994693428278
    2. ':
' → logprob: -4.7588701248168945
    3. ' :' → logprob: -9.008870124816895
    4. '   ' → logprob: -9.133870124816895
    5. ' :
' → logprob: -10.758870124816895
    6. '():
' → logprob: -14.633870124816895
    7. '():' → logprob: -14.633870124816895
    8. '(' → logprob: -14.633870124816895
    9. '):' → logprob: -15.008870124816895
    10. ':

' → logprob: -15.133870124816895

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010282711125910282
    2. ' print' → logprob: -5.385282516479492
    3. '"' → logprob: -5.510282516479492
    4. 'print' → logprob: -6.510282516479492
    5. '("' → logprob: -9.885282516479492
    6. '    ' → logprob: -11.135282516479492
    7. '       ' → logprob: -11.385282516479492
    8. '	print' → logprob: -11.760282516479492
    9. ' "' → logprob: -11.885282516479492
    10. '  ' → logprob: -12.260282516479492

Token 295: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5759432911872864
    2. 'print' (adapté à ' print') → logprob: -0.8259432911872864
    3. '   ' → logprob: -12.575942993164062
    4. '	print' → logprob: -15.450942993164062
    5. '"' → logprob: -16.700942993164062
    6. '.print' → logprob: -17.075942993164062
    7. '(print' → logprob: -17.325942993164062
    8. ' ' → logprob: -17.450942993164062
    9. 'pr' → logprob: -18.700942993164062
    10. '    ' → logprob: -18.825942993164062

Token 296: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.011052774265408516
    2. '(' → logprob: -4.51105260848999
    3. '(
' → logprob: -12.386053085327148
    4. '('' → logprob: -15.136053085327148
    5. '("")' → logprob: -15.511053085327148
    6. '("("' → logprob: -15.761053085327148
    7. '(""' → logprob: -17.13605308532715
    8. '("""' → logprob: -17.38605308532715
    9. '(

' → logprob: -17.76105308532715
    10. '()' → logprob: -18.01105308532715

Token 297: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: 0.0
    2. '"' → logprob: -18.625
    3. ' no' → logprob: -18.875
    4. 'yes' → logprob: -21.375
    5. 'non' → logprob: -21.75
    6. 'No' → logprob: -21.875
    7. 'not' → logprob: -22.375
    8. 'NO' → logprob: -22.5
    9. '")' → logprob: -23.125
    10. '	no' → logprob: -23.625

Token 298: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.000766148732509464
    2. ')")' → logprob: -7.750766277313232
    3. ')' → logprob: -8.000765800476074
    4. '")
' → logprob: -16.12576675415039
    5. '}")' → logprob: -17.00076675415039
    6. ')"' → logprob: -17.50076675415039
    7. ')")
' → logprob: -18.25076675415039
    8. '"' → logprob: -18.62576675415039
    9. '')' → logprob: -18.75076675415039
    10. '!")' → logprob: -19.50076675415039


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 296
Tokens correctement prédits (1ère position, stricte): 122
Tokens correctement prédits (1ère position, avec adaptation): 134
Tokens correctement prédits (top 10): 246
Précision stricte (1ère position): 41.22%
Précision adaptée (1ère position): 45.27%
Précision (top 10): 83.11%
================================================================================
