================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def chain_reaction(chars):
    # chars: list of colors
    n = len(chars)
    stack = []
    for c in chars:
        if not stack or stack[-1][0] != c:
            stack.append([c, 1])
        else:
            stack[-1][1] += 1
            if stack[-1][1] >= 4:
                stack.pop()
    # reconstruct after removals
    result = []
    for color, count in stack:
        result.extend([color]*count)
    # If chain reactions still possible:
    if len(result) == n:
        return result
    else:
        return chain_reaction(result)

def solve():
    input = sys.stdin.readline
    while True:
        N = int(input())
        if N == 0:
            break
        chars = [int(input()) for _ in range(N)]
        min_remaining = N
        for i in range(N):
            original = chars[i]
            for c in (1,2,3):
                if c == original:
                    continue
                new_chars = chars[:]
                new_chars[i] = c
                final = chain_reaction(new_chars)
                if len(final) < min_remaining:
                    min_remaining = len(final)
        print(min_remaining)

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3205606937408447
    2. '.' → logprob: -1.4455606937408447
    3. 'import' → logprob: -4.570560455322266
    4. '\' → logprob: -4.570560455322266
    5. 'newline' → logprob: -5.195560455322266
    6. '<|end|>' → logprob: -5.320560455322266
    7. '
' → logprob: -6.570560455322266
    8. '```' → logprob: -7.070560455322266
    9. '<|end|>' → logprob: -7.195560455322266
    10. '\r' → logprob: -7.195560455322266

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.6335625648498535
    2. 't' → logprob: -2.3835625648498535
    3. '_' → logprob: -2.5085625648498535
    4. 'default' → logprob: -2.8835625648498535
    5. '_trace' → logprob: -2.8835625648498535
    6. 's' → logprob: -3.1335625648498535
    7. 'sys' → logprob: -3.6335625648498535
    8. '_sys' → logprob: -3.7585625648498535
    9. 'set' → logprob: -4.5085625648498535
    10. 'encoding' → logprob: -4.7585625648498535

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '```' → logprob: -14.75002384185791
    7. '("("' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16023612022399902
    2. '100' → logprob: -1.910236120223999
    3. ' ' → logprob: -12.660236358642578
    4. '500' → logprob: -12.785236358642578
    5. '300' → logprob: -13.285236358642578
    6. '999' → logprob: -13.660236358642578
    7. '1' → logprob: -13.910236358642578
    8. '150' → logprob: -14.285236358642578
    9. '200' → logprob: -14.785236358642578
    10. '(' → logprob: -15.160236358642578

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007129970006644726
    2. '00' → logprob: -5.757130146026611
    3. '000' → logprob: -5.757130146026611
    4. '4' → logprob: -7.382130146026611
    5. '6' → logprob: -9.007129669189453
    6. '5' → logprob: -11.507129669189453
    7. '```' → logprob: -12.007129669189453
    8. ')' → logprob: -12.257129669189453
    9. '3' → logprob: -12.382129669189453
    10. '**' → logprob: -12.382129669189453

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004092408809810877
    2. '9' → logprob: -6.004092216491699
    3. '6' → logprob: -7.004092216491699
    4. '8' → logprob: -7.254092216491699
    5. '```' → logprob: -17.254093170166016
    6. ' ' → logprob: -17.379093170166016
    7. '``' → logprob: -20.504093170166016
    8. ')' → logprob: -20.629093170166016
    9. '(' → logprob: -21.129093170166016
    10. '**' → logprob: -21.629093170166016

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005465574562549591
    2. '\' → logprob: -6.380465507507324
    3. ')' → logprob: -6.505465507507324
    4. '```' → logprob: -7.130465507507324
    5. 'n' → logprob: -8.255465507507324
    6. '\n' → logprob: -8.880465507507324
    7. 'import' → logprob: -8.880465507507324
    8. '`' → logprob: -9.005465507507324
    9. ',' → logprob: -9.130465507507324
    10. 'a' → logprob: -9.130465507507324

Token 14: ' chain' (ID: 13464)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.8242061138153076
    2. ' dfs' → logprob: -1.0742061138153076
    3. ' ' → logprob: -1.6992061138153076
    4. ' factor' → logprob: -4.699206352233887
    5. ' f' → logprob: -4.949206352233887
    6. ' fibonacci' → logprob: -5.199206352233887
    7. ' space' → logprob: -6.449206352233887
    8. ' foo' → logprob: -6.449206352233887
    9. ' process' → logprob: -6.574206352233887
    10. ' main' → logprob: -6.699206352233887

Token 15: '_re' (ID: 3067)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6678575873374939
    2. '(' → logprob: -0.7928575873374939
    3. '_chain' → logprob: -4.667857646942139
    4. '_map' → logprob: -5.292857646942139
    5. '_of' → logprob: -5.542857646942139
    6. '_function' → logprob: -6.542857646942139
    7. '_length' → logprob: -6.667857646942139
    8. '(_' → logprob: -6.917857646942139
    9. '_re' → logprob: -6.917857646942139
    10. 's' → logprob: -6.917857646942139

Token 16: 'action' (ID: 1976)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03242674469947815
    2. 'curse' → logprob: -4.407426834106445
    3. 'place' → logprob: -4.907426834106445
    4. 'cur' → logprob: -5.907426834106445
    5. 'f' → logprob: -6.157426834106445
    6. 'solve' → logprob: -6.282426834106445
    7. 'peat' → logprob: -6.532426834106445
    8. 'move' → logprob: -6.657426834106445
    9. 'curr' → logprob: -7.532426834106445
    10. 'v' → logprob: -7.782426834106445

Token 17: '(chars' (ID: 168140)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002085070125758648
    2. '():' → logprob: -6.752085208892822
    3. '(n' → logprob: -8.752084732055664
    4. '(a' → logprob: -8.877084732055664
    5. '_' → logprob: -9.002084732055664
    6. '(x' → logprob: -9.127084732055664
    7. '(:' → logprob: -9.627084732055664
    8. '(chain' → logprob: -9.752084732055664
    9. ' (' → logprob: -10.627084732055664
    10. '(node' → logprob: -10.877084732055664

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07177482545375824
    2. ',' → logprob: -2.69677472114563
    3. ':' → logprob: -7.071774959564209
    4. ')' → logprob: -7.071774959564209
    5. '   ' → logprob: -9.82177448272705
    6. ' ):' → logprob: -11.07177448272705
    7. ' ,' → logprob: -11.19677448272705
    8. '):
' → logprob: -11.32177448272705
    9. '[' → logprob: -11.82177448272705
    10. ' ' → logprob: -11.82177448272705

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2823145091533661
    2. ':' → logprob: -1.4073145389556885
    3. '    
' → logprob: -8.53231430053711
    4. ':
' → logprob: -8.65731430053711
    5. '    ' → logprob: -8.90731430053711
    6. '```' → logprob: -8.90731430053711
    7. '\' → logprob: -9.28231430053711
    8. ' :' → logprob: -9.53231430053711
    9. ' ' → logprob: -9.90731430053711
    10. '):' → logprob: -10.28231430053711

Token 20: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30990070104599
    2. ' if' → logprob: -1.6849007606506348
    3. ' n' → logprob: -3.5599007606506348
    4. '    ' → logprob: -4.309900760650635
    5. '    
' → logprob: -4.434900760650635
    6. 'n' → logprob: -5.059900760650635
    7. ' indentation' → logprob: -5.559900760650635
    8. ' 
' → logprob: -5.934900760650635
    9. ' result' → logprob: -6.309900760650635
    10. 'if' → logprob: -6.434900760650635

Token 21: ' chars' (ID: 47991)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32111939787864685
    2. ' n' → logprob: -2.1961193084716797
    3. '   ' → logprob: -3.1961193084716797
    4. ' stack' → logprob: -3.6961193084716797
    5. ' pass' → logprob: -3.9461193084716797
    6. 'if' → logprob: -3.9461193084716797
    7. ' result' → logprob: -4.44611930847168
    8. ' for' → logprob: -4.94611930847168
    9. ' def' → logprob: -5.57111930847168
    10. ' count' → logprob: -5.82111930847168

Token 22: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28376197814941406
    2. '=' → logprob: -2.033761978149414
    3. '   ' → logprob: -2.908761978149414
    4. '[' → logprob: -4.408761978149414
    5. ':' → logprob: -4.533761978149414
    6. '.append' → logprob: -4.658761978149414
    7. '=[]' → logprob: -4.658761978149414
    8. '.pop' → logprob: -5.033761978149414
    9. ')' → logprob: -6.033761978149414
    10. '[:]' → logprob: -6.283761978149414

Token 23: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.24087537825107574
    2. ' List' → logprob: -2.115875482559204
    3. ' str' → logprob: -2.865875482559204
    4. 'List' → logprob: -3.740875482559204
    5. 'list' → logprob: -4.615875244140625
    6. '   ' → logprob: -6.740875244140625
    7. ' ' → logprob: -7.490875244140625
    8. 'str' → logprob: -8.115875244140625
    9. '    ' → logprob: -8.115875244140625
    10. ' a' → logprob: -8.615875244140625

Token 24: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.5594074130058289
    2. '<|end|>' → logprob: -1.5594074726104736
    3. ')' → logprob: -2.3094074726104736
    4. '[' → logprob: -2.8094074726104736
    5. ' of' → logprob: -3.6844074726104736
    6. '<|end|>' → logprob: -4.4344072341918945
    7. '[str' → logprob: -4.8094072341918945
    8. '   ' → logprob: -5.3094072341918945
    9. ',' → logprob: -5.4344072341918945
    10. ' ' → logprob: -6.8094072341918945

Token 25: ' colors' (ID: 10803)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.22364585101604462
    2. 'str' → logprob: -1.723645806312561
    3. ' characters' → logprob: -4.0986456871032715
    4. ' strings' → logprob: -6.0986456871032715
    5. ' chars' → logprob: -6.4736456871032715
    6. 'characters' → logprob: -7.7236456871032715
    7. ' tuples' → logprob: -8.34864616394043
    8. 'chars' → logprob: -8.47364616394043
    9. 'strings' → logprob: -8.72364616394043
    10. ' tokens' → logprob: -9.34864616394043

Token 26: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03781618922948837
    2. '
' → logprob: -4.287816047668457
    3. '    
' → logprob: -4.912816047668457
    4. '<|end|>' → logprob: -5.037816047668457
    5. '```' → logprob: -6.162816047668457
    6. '\n' → logprob: -6.412816047668457
    7. '<|end|>' → logprob: -7.162816047668457
    8. ' ' → logprob: -7.287816047668457
    9. ')' → logprob: -7.287816047668457
    10. '    ' → logprob: -7.537816047668457

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009845688939094543
    2. ':' → logprob: -5.009845733642578
    3. '    
' → logprob: -7.009845733642578
    4. '    ' → logprob: -7.134845733642578
    5. ')' → logprob: -8.009845733642578
    6. ' ' → logprob: -8.384845733642578
    7. '```' → logprob: -9.134845733642578
    8. ',' → logprob: -9.384845733642578
    9. ' 
' → logprob: -9.509845733642578
    10. '
' → logprob: -9.509845733642578

Token 28: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07274627685546875
    2. ' if' → logprob: -2.9477462768554688
    3. 'n' (adapté à ' n') → logprob: -5.072746276855469
    4. ' n' → logprob: -5.322746276855469
    5. 'if' → logprob: -6.822746276855469
    6. '    
' → logprob: -6.822746276855469
    7. '    ' → logprob: -7.072746276855469
    8. '```' → logprob: -7.947746276855469
    9. 'def' → logprob: -8.197746276855469
    10. ' result' → logprob: -8.197746276855469

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025207267608493567
    2. '=' → logprob: -6.002520561218262
    3. ' ' → logprob: -10.252520561218262
    4. '   ' → logprob: -12.377520561218262
    5. '=int' → logprob: -12.752520561218262
    6. '  ' → logprob: -14.002520561218262
    7. '=len' → logprob: -14.502520561218262
    8. ',' → logprob: -14.752520561218262
    9. ')' → logprob: -15.252520561218262
    10. '    ' → logprob: -15.502520561218262

Token 30: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.001930301426909864
    2. 'len' → logprob: -6.251930236816406
    3. '(len' → logprob: -14.251930236816406
    4. '=len' → logprob: -14.251930236816406
    5. '[len' → logprob: -15.876930236816406
    6. ' ' → logprob: -16.001930236816406
    7. '	len' → logprob: -16.126930236816406
    8. ',len' → logprob: -17.626930236816406
    9. '<len' → logprob: -18.626930236816406
    10. ' ' → logprob: -19.126930236816406

Token 31: '(chars' (ID: 168140)
  Prédit: '(chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chars' → logprob: -5.204720582696609e-05
    2. '(' → logprob: -9.875052452087402
    3. ' (' → logprob: -15.500052452087402
    4. 'chars' → logprob: -15.750052452087402
    5. '(char' → logprob: -16.875051498413086
    6. '(nums' → logprob: -17.250051498413086
    7. '(cols' → logprob: -17.375051498413086
    8. '(colors' → logprob: -18.250051498413086
    9. ' chars' → logprob: -18.375051498413086
    10. '(parts' → logprob: -18.625051498413086

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.273621405242011e-05
    2. ')
' → logprob: -10.750032424926758
    3. ' )' → logprob: -11.875032424926758
    4. '   ' → logprob: -13.125032424926758
    5. ')n' → logprob: -14.625032424926758
    6. ' ' → logprob: -14.750032424926758
    7. '`)' → logprob: -14.875032424926758
    8. ')return' → logprob: -15.625032424926758
    9. '')' → logprob: -15.875032424926758
    10. '))' → logprob: -15.875032424926758

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04040379822254181
    2. '    
' → logprob: -4.165403842926025
    3. 'result' → logprob: -4.915403842926025
    4. 'dp' → logprob: -4.915403842926025
    5. '
' → logprob: -6.665403842926025
    6. '```' → logprob: -6.790403842926025
    7. 'def' → logprob: -7.040403842926025
    8. ' dp' → logprob: -7.165403842926025
    9. 'res' → logprob: -7.290403842926025
    10. ' result' → logprob: -7.665403842926025

Token 34: ' stack' (ID: 10825)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7989487648010254
    2. ' dp' → logprob: -1.0489487648010254
    3. 'result' → logprob: -2.6739487648010254
    4. ' result' → logprob: -3.0489487648010254
    5. 'count' → logprob: -4.173948764801025
    6. 'res' → logprob: -4.423948764801025
    7. 'def' → logprob: -5.173948764801025
    8. 'colors' → logprob: -5.298948764801025
    9. ' res' → logprob: -5.423948764801025
    10. '   ' → logprob: -5.673948764801025

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009783834218978882
    2. '=' → logprob: -4.634783744812012
    3. '=[]' → logprob: -11.009783744812012
    4. ' ' → logprob: -11.884783744812012
    5. '[]' → logprob: -13.509783744812012
    6. ' []' → logprob: -13.634783744812012
    7. ')' → logprob: -14.759783744812012
    8. '[' → logprob: -15.009783744812012
    9. '[:]' → logprob: -15.384783744812012
    10. ',' → logprob: -15.634783744812012

Token 36: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.048602476716041565
    2. '[]' → logprob: -3.04860258102417
    3. '[' → logprob: -11.673602104187012
    4. ' [' → logprob: -12.423602104187012
    5. '[]}' → logprob: -13.798602104187012
    6. ' ' → logprob: -14.048602104187012
    7. '[]>' → logprob: -15.548602104187012
    8. ' []
' → logprob: -15.923602104187012
    9. ' [],' → logprob: -16.173603057861328
    10. ' [])' → logprob: -16.548603057861328

Token 37: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27209052443504333
    2. ' 
' → logprob: -1.8970905542373657
    3. '   ' → logprob: -3.522090435028076
    4. '    
' → logprob: -3.772090435028076
    5. 'for' → logprob: -4.147090435028076
    6. '
' → logprob: -5.022090435028076
    7. '  
' → logprob: -5.147090435028076
    8. '   
' → logprob: -6.147090435028076
    9. '     
' → logprob: -6.272090435028076
    10. ' ' → logprob: -6.522090435028076

Token 38: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20155689120292664
    2. 'for' (adapté à ' for') → logprob: -1.701556921005249
    3. '   ' → logprob: -9.326557159423828
    4. ' 
' → logprob: -10.826557159423828
    5. 'result' → logprob: -11.701557159423828
    6. '    
' → logprob: -11.826557159423828
    7. '
' → logprob: -12.326557159423828
    8. ' ' → logprob: -12.576557159423828
    9. '	for' → logprob: -12.576557159423828
    10. ' result' → logprob: -13.076557159423828

Token 39: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.19017717242240906
    2. 'c' → logprob: -2.8151772022247314
    3. ' i' → logprob: -3.0651772022247314
    4. ' char' → logprob: -3.4401772022247314
    5. ' color' → logprob: -4.190176963806152
    6. 'i' → logprob: -4.690176963806152
    7. 'char' → logprob: -4.815176963806152
    8. 'color' → logprob: -7.315176963806152
    9. ' ' → logprob: -7.565176963806152
    10. ' ch' → logprob: -7.565176963806152

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004440443590283394
    2. 'in' → logprob: -5.5044403076171875
    3. ' ' → logprob: -8.129440307617188
    4. 'n' → logprob: -10.754440307617188
    5. 's' → logprob: -10.754440307617188
    6. '  ' → logprob: -11.504440307617188
    7. 'i' → logprob: -12.504440307617188
    8. '   ' → logprob: -12.754440307617188
    9. ' i' → logprob: -12.879440307617188
    10. ',' → logprob: -14.129440307617188

Token 41: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.12699058651924133
    2. ' chars' → logprob: -2.126990556716919
    3. '(chars' → logprob: -9.87699031829834
    4. '_chars' → logprob: -11.62699031829834
    5. 'c' → logprob: -14.25199031829834
    6. 's' → logprob: -14.50199031829834
    7. ' ' → logprob: -14.87699031829834
    8. 'Chars' → logprob: -14.87699031829834
    9. 'char' → logprob: -15.37699031829834
    10. ')' → logprob: -16.876991271972656

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032259183353744447
    2. ':
' → logprob: -8.875322341918945
    3. ' :' → logprob: -8.875322341918945
    4. '):' → logprob: -10.500322341918945
    5. ',' → logprob: -12.125322341918945
    6. '   ' → logprob: -12.375322341918945
    7. '<|end|>' → logprob: -13.625322341918945
    8. '):
' → logprob: -13.875322341918945
    9. ':**' → logprob: -14.250322341918945
    10. '<|end|>' → logprob: -14.500322341918945

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025248313322663307
    2. ' if' → logprob: -3.7752482891082764
    3. '    ' → logprob: -6.7752485275268555
    4. 'if' → logprob: -7.6502485275268555
    5. '   ' → logprob: -8.900248527526855
    6. '<|end|>' → logprob: -9.025248527526855
    7. '        ' → logprob: -10.025248527526855
    8. ' ' → logprob: -10.900248527526855
    9. '      ' → logprob: -11.650248527526855
    10. '        
' → logprob: -11.775248527526855

Token 44: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.020320899784564972
    2. 'if' (adapté à ' if') → logprob: -4.145320892333984
    3. '       ' → logprob: -6.020320892333984
    4. '           ' → logprob: -7.145320892333984
    5. '        ' → logprob: -7.770320892333984
    6. ' stack' → logprob: -7.895320892333984
    7. 'stack' → logprob: -9.270320892333984
    8. '    ' → logprob: -9.520320892333984
    9. '   ' → logprob: -10.395320892333984
    10. ' ' → logprob: -10.770320892333984

Token 45: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16309039294719696
    2. ' stack' → logprob: -2.163090467453003
    3. 'not' → logprob: -3.663090467453003
    4. 'stack' → logprob: -5.288090229034424
    5. ' len' → logprob: -5.413090229034424
    6. 'len' → logprob: -8.163090705871582
    7. ' ' → logprob: -10.413090705871582
    8. '(stack' → logprob: -11.538090705871582
    9. '	not' → logprob: -12.163090705871582
    10. '	stack' → logprob: -12.600590705871582

Token 46: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.008625566959381104
    2. 'stack' → logprob: -4.758625507354736
    3. '	stack' → logprob: -12.383625984191895
    4. ' ' → logprob: -12.508625984191895
    5. '(stack' → logprob: -13.258625984191895
    6. '_stack' → logprob: -14.758625984191895
    7. '   ' → logprob: -14.883625984191895
    8. 'Stack' → logprob: -15.133625984191895
    9. '  ' → logprob: -16.008625030517578
    10. '.stack' → logprob: -16.133625030517578

Token 47: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.026363354176282883
    2. 'or' → logprob: -3.6513633728027344
    3. ':' → logprob: -10.401363372802734
    4. '	or' → logprob: -11.026363372802734
    5. ' ' → logprob: -11.901363372802734
    6. '<|end|>' → logprob: -12.401363372802734
    7. '<|end|>' → logprob: -13.776363372802734
    8. ')' → logprob: -14.026363372802734
    9. '  ' → logprob: -14.526363372802734
    10. ':
' → logprob: -14.651363372802734

Token 48: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.10845084488391876
    2. ' c' → logprob: -2.4834508895874023
    3. 'stack' → logprob: -4.108450889587402
    4. 'c' → logprob: -5.858450889587402
    5. '(stack' → logprob: -11.233450889587402
    6. '	stack' → logprob: -11.608450889587402
    7. ' ' → logprob: -12.358450889587402
    8. ' ' → logprob: -13.358450889587402
    9. '  ' → logprob: -13.983450889587402
    10. '   ' → logprob: -14.108450889587402

Token 49: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '[' → logprob: -18.5
    3. '.append' → logprob: -19.75
    4. '```' → logprob: -19.75
    5. ' [-' → logprob: -20.125
    6. '[
' → logprob: -21.375
    7. ' ' → logprob: -22.375
    8. '.' → logprob: -23.125
    9. '[len' → logprob: -23.125
    10. '   ' → logprob: -23.25

Token 50: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12616246938705444
    2. ']' → logprob: -3.251162528991699
    3. ' ' → logprob: -3.376162528991699
    4. '1' → logprob: -3.876162528991699
    5. '!=' → logprob: -5.501162528991699
    6. ']!=' → logprob: -5.501162528991699
    7. ' !=' → logprob: -6.001162528991699
    8. ' [' → logprob: -6.001162528991699
    9. '()!=' → logprob: -6.126162528991699
    10. '()[' → logprob: -6.251162528991699

Token 51: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6410408616065979
    2. '!=' → logprob: -1.3910408020019531
    3. ']' → logprob: -2.141040802001953
    4. ']!=' → logprob: -2.891040802001953
    5. ' !=' → logprob: -3.016040802001953
    6. '][' → logprob: -7.266040802001953
    7. ' ' → logprob: -7.516040802001953
    8. ')!=' → logprob: -8.266040802001953
    9. ' ]' → logprob: -8.516040802001953
    10. ']==' → logprob: -8.641040802001953

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.170270353322849e-05
    2. '1' → logprob: -9.875061988830566
    3. ' ' → logprob: -11.875061988830566
    4. 'color' → logprob: -13.562561988830566
    5. '
' → logprob: -14.500061988830566
    6. '[' → logprob: -14.812561988830566
    7. '```' → logprob: -15.687561988830566
    8. '   ' → logprob: -15.937561988830566
    9. ':' → logprob: -16.43756103515625
    10. '

' → logprob: -16.81256103515625

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2275821715593338
    2. ']!=' → logprob: -1.6025822162628174
    3. ' ]' → logprob: -6.852581977844238
    4. '!=' → logprob: -7.102581977844238
    5. ' !=' → logprob: -9.352581977844238
    6. ']==' → logprob: -9.352581977844238
    7. ')!=' → logprob: -9.727581977844238
    8. '[' → logprob: -10.977581977844238
    9. '][' → logprob: -11.102581977844238
    10. ')' → logprob: -12.102581977844238

Token 54: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.20169378817081451
    2. '!=' → logprob: -1.7016937732696533
    3. ' ' → logprob: -8.576693534851074
    4. ']!=' → logprob: -10.576693534851074
    5. ')!=' → logprob: -11.201693534851074
    6. '<|end|>' → logprob: -11.201693534851074
    7. ' ==' → logprob: -11.826693534851074
    8. '==' → logprob: -11.951693534851074
    9. '()!=' → logprob: -12.326693534851074
    10. '[' → logprob: -12.576693534851074

Token 55: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5231599807739258
    2. 'c' → logprob: -0.8981599807739258
    3. ' ' → logprob: -10.898159980773926
    4. ''' → logprob: -11.898159980773926
    5. ')c' → logprob: -12.523159980773926
    6. ' '' → logprob: -12.898159980773926
    7. '	c' → logprob: -13.523159980773926
    8. 'space' → logprob: -14.773159980773926
    9. '```' → logprob: -14.898159980773926
    10. '(c' → logprob: -14.960659980773926

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03576444834470749
    2. ' or' → logprob: -3.535764455795288
    3. ':
' → logprob: -5.660764217376709
    4. '):' → logprob: -6.660764217376709
    5. ')' → logprob: -7.660764217376709
    6. '):
' → logprob: -8.910764694213867
    7. 'or' → logprob: -9.035764694213867
    8. '   ' → logprob: -9.035764694213867
    9. '       ' → logprob: -9.160764694213867
    10. '[' → logprob: -9.285764694213867

Token 57: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5155818462371826
    2. '           ' → logprob: -1.2655818462371826
    3. ':' → logprob: -2.6405818462371826
    4. '       ' → logprob: -3.2655818462371826
    5. ':
' → logprob: -4.765582084655762
    6. ' stack' → logprob: -6.765582084655762
    7. 'stack' → logprob: -8.140582084655762
    8. ' and' → logprob: -8.890582084655762
    9. '        ' → logprob: -9.015582084655762
    10. '```' → logprob: -9.140582084655762

Token 58: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.09586433321237564
    2. 'stack' (adapté à ' stack') → logprob: -2.9708642959594727
    3. '           ' → logprob: -3.2208642959594727
    4. '	stack' → logprob: -9.345864295959473
    5. '(stack' → logprob: -9.970864295959473
    6. '.stack' → logprob: -10.470864295959473
    7. '_stack' → logprob: -10.845864295959473
    8. '       ' → logprob: -11.595864295959473
    9. ' ' → logprob: -11.595864295959473
    10. '               ' → logprob: -11.970864295959473

Token 59: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001294030516874045
    2. '.' → logprob: -9.000129699707031
    3. '].' → logprob: -13.375129699707031
    4. '.app' → logprob: -13.375129699707031
    5. ').' → logprob: -13.750129699707031
    6. ' .' → logprob: -14.125129699707031
    7. 'append' → logprob: -14.125129699707031
    8. '}.' → logprob: -15.750129699707031
    9. '.ap' → logprob: -15.875129699707031
    10. '.extend' → logprob: -17.50012969970703

Token 60: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.012765320017933846
    2. '((' → logprob: -4.762765407562256
    3. '(' → logprob: -6.012765407562256
    4. '(c' → logprob: -6.387765407562256
    5. ' (' → logprob: -12.012764930725098
    6. ' ' → logprob: -12.887764930725098
    7. '[' → logprob: -13.637764930725098
    8. '(([' → logprob: -14.137764930725098
    9. ' ([' → logprob: -14.512764930725098
    10. '[(' → logprob: -14.637764930725098

Token 61: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2664456789934775e-06
    2. ' c' → logprob: -13.625000953674316
    3. ')c' → logprob: -19.000001907348633
    4. '   ' → logprob: -19.125001907348633
    5. '	c' → logprob: -20.375001907348633
    6. '%c' → logprob: -20.625001907348633
    7. ' ' → logprob: -20.750001907348633
    8. 'с' → logprob: -21.000001907348633
    9. '
' → logprob: -21.125001907348633
    10. 'cation' → logprob: -21.250001907348633

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002142650482710451
    2. '1' → logprob: -8.500214576721191
    3. ' ,' → logprob: -11.500214576721191
    4. ' ' → logprob: -14.750214576721191
    5. ',
' → logprob: -16.125213623046875
    6. '2' → logprob: -16.500213623046875
    7. 'and' → logprob: -18.875213623046875
    8. '
' → logprob: -19.500213623046875
    9. '3' → logprob: -19.625213623046875
    10. '‌,' → logprob: -19.875213623046875

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -16.3767032623291
    4. '  ' → logprob: -16.7517032623291
    5. '0' → logprob: -17.1267032623291
    6. ' ' → logprob: -18.5017032623291
    7. '' → logprob: -20.3767032623291
    8. '۱' → logprob: -20.6267032623291
    9. '    ' → logprob: -20.7517032623291
    10. '```' → logprob: -21.1892032623291

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '0' → logprob: -16.75002098083496
    4. '   ' → logprob: -17.87502098083496
    5. '  ' → logprob: -19.00002098083496
    6. ' ' → logprob: -19.62502098083496
    7. '' → logprob: -19.81252098083496
    8. '۱' → logprob: -19.81252098083496
    9. '```' → logprob: -20.56252098083496
    10. '

' → logprob: -20.62502098083496

Token 65: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.25418227910995483
    2. '])
' → logprob: -1.5041823387145996
    3. '       ' → logprob: -6.2541823387146
    4. '])
' → logprob: -8.129181861877441
    5. '   ' → logprob: -11.629181861877441
    6. ')' → logprob: -11.879181861877441
    7. '           ' → logprob: -12.129181861877441
    8. ' ])' → logprob: -12.629181861877441
    9. '])

' → logprob: -12.754181861877441
    10. ' ])
' → logprob: -13.254181861877441

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015205175441224128
    2. 'else' → logprob: -9.375151634216309
    3. '           ' → logprob: -10.375151634216309
    4. ' else' → logprob: -11.250151634216309
    5. '   ' → logprob: -12.125151634216309
    6. '	' → logprob: -12.250151634216309
    7. ',' → logprob: -12.625151634216309
    8. 'elif' → logprob: -12.625151634216309
    9. '<|end|>' → logprob: -14.000151634216309
    10. '      ' → logprob: -14.375151634216309

Token 67: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7451785206794739
    2. '       ' → logprob: -0.8701785206794739
    3. ' else' → logprob: -2.245178461074829
    4. 'elif' → logprob: -8.37017822265625
    5. '   ' → logprob: -9.24517822265625
    6. '	else' → logprob: -9.37017822265625
    7. ' elif' → logprob: -9.74517822265625
    8. '	' → logprob: -10.24517822265625
    9. ' ' → logprob: -11.24517822265625
    10. '           ' → logprob: -11.99517822265625

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5624624490737915
    2. ':
' → logprob: -0.9374624490737915
    3. '           ' → logprob: -3.312462329864502
    4. '          ' → logprob: -6.937462329864502
    5. '        ' → logprob: -8.31246280670166
    6. ' :' → logprob: -8.68746280670166
    7. ' :
' → logprob: -8.93746280670166
    8. '         ' → logprob: -8.93746280670166
    9. '            ' → logprob: -8.93746280670166
    10. '[' → logprob: -9.56246280670166

Token 69: '           ' (ID: 352)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.26976948976516724
    2. ' stack' → logprob: -1.6447694301605225
    3. '           ' → logprob: -3.1447694301605225
    4. '	stack' → logprob: -9.019769668579102
    5. '.stack' → logprob: -9.519769668579102
    6. '(stack' → logprob: -10.019769668579102
    7. '_stack' → logprob: -10.519769668579102
    8. '               ' → logprob: -11.019769668579102
    9. '
' → logprob: -11.894769668579102
    10. '          ' → logprob: -12.394769668579102

Token 70: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.07897626608610153
    2. ' stack' → logprob: -2.5789761543273926
    3. '           ' → logprob: -9.82897663116455
    4. '               ' → logprob: -11.32897663116455
    5. '	stack' → logprob: -11.32897663116455
    6. '_stack' → logprob: -12.70397663116455
    7. '.stack' → logprob: -13.45397663116455
    8. '(stack' → logprob: -13.82897663116455
    9. 'Stack' → logprob: -14.20397663116455
    10. ' ' → logprob: -14.45397663116455

Token 71: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.5941604690160602e-05
    2. '][-' → logprob: -10.625025749206543
    3. '-' → logprob: -15.000025749206543
    4. '   ' → logprob: -15.125025749206543
    5. '```' → logprob: -15.375025749206543
    6. '[' → logprob: -15.625025749206543
    7. '`' → logprob: -15.750025749206543
    8. '       ' → logprob: -16.12502670288086
    9. '           ' → logprob: -16.50002670288086
    10. '``' → logprob: -16.62502670288086

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005212200339883566
    2. ' ' → logprob: -7.750521183013916
    3. '-' → logprob: -9.375521659851074
    4. '][' → logprob: -13.375521659851074
    5. ' -' → logprob: -13.688021659851074
    6. '[' → logprob: -14.125521659851074
    7. '   ' → logprob: -14.250521659851074
    8. ' ][' → logprob: -14.938021659851074
    9. ' [' → logprob: -15.625521659851074
    10. '  ' → logprob: -15.750521659851074

Token 73: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.027003128081560135
    2. '[' → logprob: -3.652003049850464
    3. ' ][' → logprob: -7.402003288269043
    4. ')[' → logprob: -10.027003288269043
    5. ']' → logprob: -10.777003288269043
    6. ' [' → logprob: -12.027003288269043
    7. '][-' → logprob: -12.277003288269043
    8. ' ' → logprob: -13.027003288269043
    9. '```' → logprob: -13.277003288269043
    10. ' )[' → logprob: -13.277003288269043

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -16.5
    3. '[' → logprob: -16.625
    4. ' ' → logprob: -17.5
    5. '```' → logprob: -17.875
    6. '+' → logprob: -18.375
    7. '0' → logprob: -18.375
    8. '' → logprob: -19.0
    9. '][' → logprob: -19.125
    10. '
' → logprob: -19.125

Token 75: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.37738192081451416
    2. ' +=' → logprob: -1.7523819208145142
    3. ']+=' → logprob: -2.2523818016052246
    4. ']' → logprob: -3.3773818016052246
    5. '+' → logprob: -6.752381801605225
    6. ' ]' → logprob: -7.627381801605225
    7. '+]' → logprob: -10.502382278442383
    8. ')' → logprob: -12.127382278442383
    9. ']+' → logprob: -12.502382278442383
    10. '[' → logprob: -13.002382278442383

Token 76: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006744269747287035
    2. ' +=' → logprob: -5.006744384765625
    3. ']+=' → logprob: -10.631744384765625
    4. '=' → logprob: -12.506744384765625
    5. '+' → logprob: -13.881744384765625
    6. '+='' → logprob: -16.006744384765625
    7. '+=(' → logprob: -17.131744384765625
    8. '+="' → logprob: -17.256744384765625
    9. '```' → logprob: -18.006744384765625
    10. '[' → logprob: -19.256744384765625

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.375335693359375
    4. '```' → logprob: -19.375335693359375
    5. ' ' → logprob: -19.500335693359375
    6. '  ' → logprob: -20.187835693359375
    7. '１' → logprob: -20.687835693359375
    8. '۱' → logprob: -21.062835693359375
    9. '+' → logprob: -21.437835693359375
    10. '<|end|>' → logprob: -21.562835693359375

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -20.625
    5. '１' → logprob: -21.5
    6. '-' → logprob: -21.625
    7. '  ' → logprob: -22.1875
    8. '۱' → logprob: -22.25
    9. '१' → logprob: -22.5625
    10. '[' → logprob: -22.625

Token 79: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04474613070487976
    2. '       ' → logprob: -3.544746160507202
    3. '<|end|>' → logprob: -4.419745922088623
    4. '               ' → logprob: -7.669745922088623
    5. '   ' → logprob: -7.669745922088623
    6. '<|end|>' → logprob: -7.794745922088623
    7. ' ' → logprob: -7.919745922088623
    8. '```' → logprob: -8.044746398925781
    9. ',' → logprob: -9.044746398925781
    10. '
' → logprob: -9.419746398925781

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5890316963195801
    2. '       ' → logprob: -0.8390316963195801
    3. '   ' → logprob: -4.83903169631958
    4. '```' → logprob: -6.58903169631958
    5. ' ' → logprob: -6.96403169631958
    6. '<|end|>' → logprob: -7.33903169631958
    7. '               ' → logprob: -7.71403169631958
    8. ' ' → logprob: -8.214031219482422
    9. ' if' → logprob: -8.964031219482422
    10. '	' → logprob: -9.089031219482422

Token 81: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5256875157356262
    2. ' if' → logprob: -1.0256874561309814
    3. '           ' → logprob: -3.0256874561309814
    4. '```' → logprob: -6.9006876945495605
    5. '   ' → logprob: -8.525687217712402
    6. 'while' → logprob: -8.775687217712402
    7. '       ' → logprob: -8.900687217712402
    8. ' ' → logprob: -8.900687217712402
    9. ' while' → logprob: -9.775687217712402
    10. '               ' → logprob: -10.400687217712402

Token 82: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.3868783116340637
    2. 'stack' → logprob: -1.136878252029419
    3. '(stack' → logprob: -12.63687801361084
    4. '	stack' → logprob: -12.63687801361084
    5. '   ' → logprob: -14.88687801361084
    6. ' ' → logprob: -15.01187801361084
    7. '```' → logprob: -16.761878967285156
    8. '_stack' → logprob: -17.011878967285156
    9. '.stack' → logprob: -17.136878967285156
    10. '           ' → logprob: -17.261878967285156

Token 83: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.320199877838604e-07
    2. '][-' → logprob: -15.25
    3. '[' → logprob: -15.75
    4. '   ' → logprob: -18.125
    5. '-' → logprob: -18.125
    6. '```' → logprob: -18.375
    7. '
' → logprob: -19.0
    8. '>' → logprob: -19.375
    9. ' ' → logprob: -19.5
    10. '...' → logprob: -19.625

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043913270928896964
    2. '-' → logprob: -7.750439167022705
    3. '[-' → logprob: -12.250438690185547
    4. '][-' → logprob: -13.375438690185547
    5. '```' → logprob: -14.250438690185547
    6. ' ' → logprob: -15.000438690185547
    7. '   ' → logprob: -15.000438690185547
    8. '[' → logprob: -15.250438690185547
    9. '][' → logprob: -15.625438690185547
    10. '2' → logprob: -16.375438690185547

Token 85: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03835278004407883
    2. '[' → logprob: -3.2883527278900146
    3. ')[' → logprob: -8.538352966308594
    4. ' ][' → logprob: -10.538352966308594
    5. ']' → logprob: -10.663352966308594
    6. '][-' → logprob: -10.663352966308594
    7. '>[' → logprob: -11.413352966308594
    8. '}[' → logprob: -11.538352966308594
    9. ''][' → logprob: -12.413352966308594
    10. '"][' → logprob: -12.538352966308594

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.875031471252441
    3. '[' → logprob: -12.375031471252441
    4. '][' → logprob: -12.875031471252441
    5. ']' → logprob: -13.375031471252441
    6. '```' → logprob: -13.437531471252441
    7. '   ' → logprob: -14.187531471252441
    8. '-' → logprob: -15.062531471252441
    9. '>' → logprob: -15.375031471252441
    10. '>[' → logprob: -15.937531471252441

Token 87: ']' (ID: 60)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5616804361343384
    2. ' ==' → logprob: -1.0616804361343384
    3. '>=' → logprob: -3.061680316925049
    4. '==' → logprob: -3.311680316925049
    5. ' ' → logprob: -8.061680793762207
    6. ']>=' → logprob: -8.686680793762207
    7. ')>=' → logprob: -10.311680793762207
    8. ')' → logprob: -10.686680793762207
    9. ']==' → logprob: -11.186680793762207
    10. '<|end|>' → logprob: -11.186680793762207

Token 88: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.0858131647109985
    2. ' >=' → logprob: -1.2108131647109985
    3. '==' → logprob: -1.5858131647109985
    4. ' ==' → logprob: -1.8358131647109985
    5. ' ' → logprob: -9.210813522338867
    6. '=' → logprob: -10.835813522338867
    7. ']>=' → logprob: -11.960813522338867
    8. '>' → logprob: -12.585813522338867
    9. ')>=' → logprob: -12.585813522338867
    10. '3' → logprob: -12.835813522338867

Token 89: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00027825910365208983
    2. '4' → logprob: -8.50027847290039
    3. ' ' → logprob: -10.00027847290039
    4. 'k' → logprob: -10.75027847290039
    5. '```' → logprob: -13.00027847290039
    6. '   ' → logprob: -13.50027847290039
    7. '5' → logprob: -14.00027847290039
    8. '  ' → logprob: -14.00027847290039
    9. '

' → logprob: -14.37527847290039
    10. '`' → logprob: -14.62527847290039

Token 90: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00012511172099038959
    2. '4' → logprob: -9.50012493133545
    3. ' ' → logprob: -10.62512493133545
    4. 'k' → logprob: -10.87512493133545
    5. '  ' → logprob: -13.62512493133545
    6. '   ' → logprob: -13.75012493133545
    7. '

' → logprob: -14.12512493133545
    8. '`' → logprob: -14.12512493133545
    9. '2' → logprob: -14.37512493133545
    10. '5' → logprob: -14.50012493133545

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20461514592170715
    2. ':
' → logprob: -1.7046151161193848
    3. '               ' → logprob: -5.829615116119385
    4. '           ' → logprob: -8.829615592956543
    5. ':

' → logprob: -10.204615592956543
    6. '):
' → logprob: -10.579615592956543
    7. ',' → logprob: -10.704615592956543
    8. '.pop' → logprob: -12.829615592956543
    9. '       ' → logprob: -13.079615592956543
    10. '.' → logprob: -13.079615592956543

Token 92: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010922349756583571
    2. ' stack' → logprob: -7.501092433929443
    3. '<|end|>' → logprob: -8.376091957092285
    4. '(stack' → logprob: -9.626091957092285
    5. '<|end|>' → logprob: -9.751091957092285
    6. 'stack' → logprob: -10.251091957092285
    7. '_stack' → logprob: -10.751091957092285
    8. '.stack' → logprob: -11.001091957092285
    9. '	stack' → logprob: -11.126091957092285
    10. '```' → logprob: -11.126091957092285

Token 93: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.1277768760919571
    2. 'stack' (adapté à ' stack') → logprob: -2.127776861190796
    3. '                   ' → logprob: -7.127777099609375
    4. '	stack' → logprob: -10.627777099609375
    5. '.stack' → logprob: -12.252777099609375
    6. '_stack' → logprob: -12.502777099609375
    7. '```' → logprob: -12.502777099609375
    8. '               ' → logprob: -12.502777099609375
    9. '(stack' → logprob: -13.002777099609375
    10. '``' → logprob: -13.752777099609375

Token 94: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00014036978245712817
    2. '.' → logprob: -9.000140190124512
    3. 'pop' → logprob: -11.000140190124512
    4. '_pop' → logprob: -16.750141143798828
    5. ' .' → logprob: -17.000141143798828
    6. '.po' → logprob: -17.250141143798828
    7. '].' → logprob: -17.500141143798828
    8. '[-' → logprob: -17.625141143798828
    9. '.Pop' → logprob: -17.750141143798828
    10. ' pop' → logprob: -18.125141143798828

Token 95: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.676981345459353e-06
    2. '()
' → logprob: -12.250005722045898
    3. '()

' → logprob: -14.625005722045898
    4. '()`' → logprob: -16.0000057220459
    5. '()\' → logprob: -16.3750057220459
    6. '()]' → logprob: -17.0000057220459
    7. '(' → logprob: -17.5000057220459
    8. '()
' → logprob: -17.7500057220459
    9. '()<' → logprob: -18.3750057220459
    10. '();' → logprob: -18.5000057220459

Token 96: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8104320168495178
    2. ' 
' → logprob: -1.060431957244873
    3. '<|end|>' → logprob: -2.685431957244873
    4. '   ' → logprob: -3.185431957244873
    5. '    
' → logprob: -3.435431957244873
    6. '  
' → logprob: -3.685431957244873
    7. ' ' → logprob: -4.560431957244873
    8. '
' → logprob: -4.560431957244873
    9. '        
' → logprob: -4.810431957244873
    10. '   
' → logprob: -5.435431957244873

Token 97: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.36702558398246765
    2. ' return' → logprob: -1.49202561378479
    3. '   ' → logprob: -3.11702561378479
    4. '    
' → logprob: -3.86702561378479
    5. ' 
' → logprob: -4.992025375366211
    6. '  
' → logprob: -5.617025375366211
    7. ' ' → logprob: -6.117025375366211
    8. '
' → logprob: -6.867025375366211
    9. ' for' → logprob: -6.992025375366211
    10. '   
' → logprob: -7.242025375366211

Token 98: ' reconstruct' (ID: 78298)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1888823509216309
    2. ' return' → logprob: -1.3138823509216309
    3. 'return' → logprob: -1.4388823509216309
    4. ' result' → logprob: -1.8138823509216309
    5. '   ' → logprob: -4.188882350921631
    6. 'res' → logprob: -5.063882350921631
    7. ' res' → logprob: -5.688882350921631
    8. ' ans' → logprob: -8.313882827758789
    9. ' if' → logprob: -8.813882827758789
    10. 'ans' → logprob: -8.938882827758789

Token 99: ' after' (ID: 1934)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01393854059278965
    2. ' result' → logprob: -4.5139384269714355
    3. 'return' → logprob: -6.3889384269714355
    4. 'res' → logprob: -6.8889384269714355
    5. ' return' → logprob: -9.638938903808594
    6. ' res' → logprob: -10.013938903808594
    7. '[]' → logprob: -11.138938903808594
    8. 'chars' → logprob: -11.138938903808594
    9. '   ' → logprob: -11.388938903808594
    10. 'output' → logprob: -12.013938903808594

Token 100: ' remov' (ID: 12074)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4632216989994049
    2. ' result' → logprob: -1.2132216691970825
    3. 'return' → logprob: -3.588221788406372
    4. ' return' → logprob: -4.213221549987793
    5. '   ' → logprob: -4.338221549987793
    6. 'res' → logprob: -4.463221549987793
    7. 'chars' → logprob: -6.088221549987793
    8. ' chars' → logprob: -6.213221549987793
    9. ' res' → logprob: -6.713221549987793
    10. ' for' → logprob: -7.713221549987793

Token 101: 'als' (ID: 1288)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.5089373588562012
    2. 'ction' → logprob: -1.1339373588562012
    3. 'struction' → logprob: -3.133937358856201
    4. 'ct' → logprob: -4.758937358856201
    5. 'tion' → logprob: -4.758937358856201
    6. 'st' → logprob: -5.008937358856201
    7. 'str' → logprob: -5.383937358856201
    8. 't' → logprob: -6.008937358856201
    9. 'struct' → logprob: -7.258937358856201
    10. 'ding' → logprob: -7.383937358856201

Token 102: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07094789296388626
    2. '   ' → logprob: -3.4459478855133057
    3. ' result' → logprob: -3.4459478855133057
    4. 'res' → logprob: -5.820948123931885
    5. 'return' → logprob: -6.695948123931885
    6. ' return' → logprob: -8.570947647094727
    7. ' res' → logprob: -8.695947647094727
    8. 'chars' → logprob: -9.445947647094727
    9. '    
' → logprob: -10.445947647094727
    10. '```' → logprob: -10.695947647094727

Token 103: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0945715382695198
    2. '   ' → logprob: -2.594571590423584
    3. ' result' → logprob: -4.594571590423584
    4. 'return' → logprob: -5.469571590423584
    5. 'res' → logprob: -7.219571590423584
    6. ' return' → logprob: -8.344571113586426
    7. '
' → logprob: -8.844571113586426
    8. '    
' → logprob: -10.094571113586426
    9. ' res' → logprob: -10.469571113586426
    10. 'chars' → logprob: -10.594571113586426

Token 104: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.09700129181146622
    2. 'res' → logprob: -2.847001314163208
    3. ' result' → logprob: -3.597001314163208
    4. 'return' → logprob: -5.847001075744629
    5. ' res' → logprob: -5.847001075744629
    6. '   ' → logprob: -6.972001075744629
    7. ' return' → logprob: -8.222001075744629
    8. '```' → logprob: -11.222001075744629
    9. 'ans' → logprob: -11.597001075744629
    10. 'chars' → logprob: -12.472001075744629

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687777519226074
    2. '=' → logprob: -1.1368777751922607
    3. '=[]' → logprob: -12.76187801361084
    4. '_' → logprob: -12.76187801361084
    5. 's' → logprob: -15.26187801361084
    6. ' ' → logprob: -15.76187801361084
    7. '[]' → logprob: -16.261877059936523
    8. '＝' → logprob: -16.636877059936523
    9. ' =[' → logprob: -16.636877059936523
    10. ')' → logprob: -16.761877059936523

Token 106: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.7157689332962036
    2. '[]' → logprob: -1.7157689332962036
    3. '""' → logprob: -1.9657689332962036
    4. '"' → logprob: -2.215768814086914
    5. '''.' → logprob: -3.090768814086914
    6. ' []' → logprob: -4.590768814086914
    7. '''' → logprob: -5.215768814086914
    8. ' "".' → logprob: -5.340768814086914
    9. ' []
' → logprob: -5.340768814086914
    10. '[' → logprob: -5.715768814086914

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07049673050642014
    2. 'for' → logprob: -3.3204967975616455
    3. ' for' → logprob: -3.4454967975616455
    4. '	for' → logprob: -10.445496559143066
    5. ' ' → logprob: -11.820496559143066
    6. '<|end|>' → logprob: -12.445496559143066
    7. '    ' → logprob: -13.320496559143066
    8. '  ' → logprob: -13.695496559143066
    9. '    
' → logprob: -13.945496559143066
    10. '       ' → logprob: -14.695496559143066

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.170270353322849e-05
    2. ' for' → logprob: -9.750061988830566
    3. '   ' → logprob: -12.625061988830566
    4. '	for' → logprob: -16.75006103515625
    5. '       ' → logprob: -19.75006103515625
    6. ' ' → logprob: -19.87506103515625
    7. '
' → logprob: -20.00006103515625
    8. '```' → logprob: -22.12506103515625
    9. '  ' → logprob: -23.00006103515625
    10. 'For' → logprob: -23.50006103515625

Token 109: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.2949737310409546
    2. 'c' → logprob: -1.5449737310409546
    3. ' color' → logprob: -4.169973850250244
    4. 'char' → logprob: -4.294973850250244
    5. 'col' → logprob: -5.544973850250244
    6. 'ch' → logprob: -5.669973850250244
    7. 'item' → logprob: -6.044973850250244
    8. ' c' → logprob: -6.044973850250244
    9. 'elem' → logprob: -8.544973373413086
    10. ' ch' → logprob: -8.669973373413086

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017306297086179256
    2. ',count' → logprob: -6.376730442047119
    3. ',length' → logprob: -11.251730918884277
    4. ' ,' → logprob: -12.126730918884277
    5. ',num' → logprob: -12.376730918884277
    6. ',size' → logprob: -13.501730918884277
    7. ' in' → logprob: -13.876730918884277
    8. 'count' → logprob: -13.876730918884277
    9. ',
' → logprob: -14.626730918884277
    10. ',[' → logprob: -14.876730918884277

Token 111: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.018250498920679092
    2. ' count' → logprob: -4.018250465393066
    3. 'cnt' → logprob: -9.268250465393066
    4. ' cnt' → logprob: -12.268250465393066
    5. 'length' → logprob: -13.893250465393066
    6. '	count' → logprob: -15.268250465393066
    7. '   ' → logprob: -16.268251419067383
    8. ' ' → logprob: -16.518251419067383
    9. 'freq' → logprob: -16.893251419067383
    10. ' length' → logprob: -17.268251419067383

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028065370861440897
    2. 'in' → logprob: -5.877806663513184
    3. '	in' → logprob: -14.002806663513184
    4. ' ' → logprob: -14.502806663513184
    5. ',' → logprob: -16.002805709838867
    6. 's' → logprob: -16.127805709838867
    7. '   ' → logprob: -16.252805709838867
    8. '_in' → logprob: -18.127805709838867
    9. 'inthe' → logprob: -18.252805709838867
    10. '  ' → logprob: -18.502805709838867

Token 113: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3868715465068817
    2. ' stack' → logprob: -1.136871576309204
    3. '(stack' → logprob: -14.886871337890625
    4. '	stack' → logprob: -15.761871337890625
    5. '.stack' → logprob: -17.511871337890625
    6. ' ' → logprob: -18.511871337890625
    7. 'Stack' → logprob: -18.511871337890625
    8. '_stack' → logprob: -19.136871337890625
    9. 'stackoverflow' → logprob: -19.261871337890625
    10. 'st' → logprob: -21.136871337890625

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008680520579218864
    2. ':
' → logprob: -4.75868034362793
    3. '   ' → logprob: -9.88368034362793
    4. '[' → logprob: -12.25868034362793
    5. ':
' → logprob: -13.25868034362793
    6. ':return' → logprob: -13.25868034362793
    7. '       ' → logprob: -13.88368034362793
    8. ':

' → logprob: -14.25868034362793
    9. '[:]' → logprob: -14.50868034362793
    10. ',' → logprob: -14.50868034362793

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005293054040521383
    2. 'result' → logprob: -5.880292892456055
    3. ' result' → logprob: -6.005292892456055
    4. '   ' → logprob: -11.755292892456055
    5. '```' → logprob: -12.130292892456055
    6. ' for' → logprob: -13.130292892456055
    7. '           ' → logprob: -14.005292892456055
    8. '	result' → logprob: -14.130292892456055
    9. '[result' → logprob: -14.130292892456055
    10. ',result' → logprob: -14.255292892456055

Token 116: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.02325339801609516
    2. ' result' → logprob: -3.7732534408569336
    3. '   ' → logprob: -11.773253440856934
    4. '       ' → logprob: -16.023252487182617
    5. '	result' → logprob: -16.273252487182617
    6. ' ' → logprob: -18.398252487182617
    7. 'for' → logprob: -19.648252487182617
    8. '  ' → logprob: -19.898252487182617
    9. '_result' → logprob: -19.898252487182617
    10. ' for' → logprob: -20.023252487182617

Token 117: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0003594184236135334
    2. '.' → logprob: -8.125359535217285
    3. '.append' → logprob: -10.750359535217285
    4. ' .' → logprob: -10.750359535217285
    5. ' +=' → logprob: -11.250359535217285
    6. '.ext' → logprob: -12.250359535217285
    7. '+=' → logprob: -13.625359535217285
    8. ' extends' → logprob: -14.500359535217285
    9. 'extend' → logprob: -14.500359535217285
    10. '+.' → logprob: -15.000359535217285

Token 118: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.000497032655403018
    2. '(color' → logprob: -7.750496864318848
    3. '[color' → logprob: -9.875496864318848
    4. '(' → logprob: -11.375496864318848
    5. '[' → logprob: -12.875496864318848
    6. 'color' → logprob: -15.500496864318848
    7. ' [' → logprob: -15.750496864318848
    8. '((' → logprob: -15.875496864318848
    9. ' ([' → logprob: -16.000497817993164
    10. '(([' → logprob: -16.500497817993164

Token 119: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.00015860427811276168
    2. ' color' → logprob: -8.750158309936523
    3. 'c' → logprob: -17.875158309936523
    4. ' ' → logprob: -17.875158309936523
    5. '   ' → logprob: -18.125158309936523
    6. '(color' → logprob: -19.000158309936523
    7. '	color' → logprob: -19.750158309936523
    8. '.color' → logprob: -20.500158309936523
    9. '  ' → logprob: -20.875158309936523
    10. 'Color' → logprob: -21.250158309936523

Token 120: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011207088828086853
    2. ']*' → logprob: -4.511207103729248
    3. ' ]' → logprob: -8.76120662689209
    4. ' *' → logprob: -13.51120662689209
    5. ',' → logprob: -14.51120662689209
    6. '*' → logprob: -15.26120662689209
    7. '']' → logprob: -16.261207580566406
    8. ' for' → logprob: -16.511207580566406
    9. '()]' → logprob: -16.761207580566406
    10. '```' → logprob: -16.761207580566406

Token 121: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -6.2729995988775045e-06
    2. ' count' → logprob: -12.000006675720215
    3. '(count' → logprob: -21.6250057220459
    4. ' ' → logprob: -23.3750057220459
    5. '	count' → logprob: -23.3750057220459
    6. '   ' → logprob: -23.8750057220459
    7. '
' → logprob: -24.0000057220459
    8. '[count' → logprob: -25.0000057220459
    9. '$count' → logprob: -25.0000057220459
    10. '<count' → logprob: -25.2500057220459

Token 122: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.39035531878471375
    2. ')' → logprob: -1.5153553485870361
    3. '   ' → logprob: -2.765355348587036
    4. '
' → logprob: -3.640355348587036
    5. 'return' → logprob: -4.640355110168457
    6. ')return' → logprob: -6.015355110168457
    7. ' return' → logprob: -6.265355110168457
    8. '	return' → logprob: -9.265355110168457
    9. ' ' → logprob: -10.015355110168457
    10. '    
' → logprob: -10.765355110168457

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13480068743228912
    2. 'return' → logprob: -2.384800672531128
    3. ' return' → logprob: -3.384800672531128
    4. '
' → logprob: -9.634800910949707
    5. '	return' → logprob: -10.259800910949707
    6. '```' → logprob: -11.509800910949707
    7. '    
' → logprob: -12.509800910949707
    8. ':return' → logprob: -13.259800910949707
    9. '<|end|>' → logprob: -14.634800910949707
    10. ' ' → logprob: -15.009800910949707

Token 124: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20333445072174072
    2. ' return' → logprob: -1.7033344507217407
    3. '   ' → logprob: -7.203334331512451
    4. '
' → logprob: -7.328334331512451
    5. '	return' → logprob: -7.703334331512451
    6. ' 
' → logprob: -9.95333480834961
    7. '    
' → logprob: -11.82833480834961
    8. ' ' → logprob: -12.32833480834961
    9. '\n' → logprob: -13.45333480834961
    10. ':return' → logprob: -13.45333480834961

Token 125: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01423872634768486
    2. ' return' → logprob: -4.2642388343811035
    3. '   ' → logprob: -9.514238357543945
    4. ' ' → logprob: -14.389238357543945
    5. 'if' → logprob: -15.639238357543945
    6. 'def' → logprob: -15.889238357543945
    7. '	return' → logprob: -16.264238357543945
    8. '```' → logprob: -16.389238357543945
    9. '
' → logprob: -16.514238357543945
    10. ' if' → logprob: -16.639238357543945

Token 126: ' chain' (ID: 13464)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.49359413981437683
    2. ' result' → logprob: -1.1185941696166992
    3. ' not' → logprob: -2.868594169616699
    4. 'len' → logprob: -5.618594169616699
    5. 'result' → logprob: -6.118594169616699
    6. ' stack' → logprob: -9.6185941696167
    7. 'not' → logprob: -9.7435941696167
    8. ' ' → logprob: -9.7435941696167
    9. ' ' → logprob: -10.7435941696167
    10. ' chars' → logprob: -11.4935941696167

Token 127: ' reactions' (ID: 38133)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9288575053215027
    2. '   ' → logprob: -1.6788575649261475
    3. '_re' → logprob: -2.1788575649261475
    4. ' ' → logprob: -2.5538575649261475
    5. ' reaction' → logprob: -2.9288575649261475
    6. ' if' → logprob: -3.0538575649261475
    7. '    ' → logprob: -3.3038575649261475
    8. ' =' → logprob: -4.178857326507568
    9. 'result' → logprob: -4.303857326507568
    10. '_result' → logprob: -4.678857326507568

Token 128: ' still' (ID: 2928)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3639407157897949
    2. ':' → logprob: -1.238940715789795
    3. '   ' → logprob: -5.238940715789795
    4. 'and' → logprob: -5.363940715789795
    5. ' occur' → logprob: -5.988940715789795
    6. '():' → logprob: -7.363940715789795
    7. 'occur' → logprob: -8.238941192626953
    8. 'len' → logprob: -8.363941192626953
    9. ' ' → logprob: -8.363941192626953
    10. ':
' → logprob: -8.488941192626953

Token 129: ' possible' (ID: 4149)
  Prédit: 'occur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occur' → logprob: -0.1449161320924759
    2. 'result' → logprob: -2.26991605758667
    3. ' occur' → logprob: -4.39491605758667
    4. 'possible' → logprob: -5.14491605758667
    5. ' result' → logprob: -5.64491605758667
    6. 'h' → logprob: -5.89491605758667
    7. 'len' → logprob: -6.64491605758667
    8. ' possible' → logprob: -6.76991605758667
    9. 'stack' → logprob: -6.76991605758667
    10. 'continue' → logprob: -6.89491605758667

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29505863785743713
    2. ' and' → logprob: -2.2950587272644043
    3. '   ' → logprob: -2.6700587272644043
    4. ',' → logprob: -3.0450587272644043
    5. ' if' → logprob: -3.4200587272644043
    6. ':
' → logprob: -6.420058727264404
    7. ' :' → logprob: -7.170058727264404
    8. 'and' → logprob: -7.795058727264404
    9. '       ' → logprob: -7.920058727264404
    10. '    ' → logprob: -8.045058250427246

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6482897996902466
    2. ' if' → logprob: -0.7732897996902466
    3. ' return' → logprob: -5.023289680480957
    4. '    
' → logprob: -5.898289680480957
    5. 'if' → logprob: -6.273289680480957
    6. ' while' → logprob: -6.273289680480957
    7. ' 
' → logprob: -6.398289680480957
    8. '
' → logprob: -8.398289680480957
    9. 'return' → logprob: -8.898289680480957
    10. '    ' → logprob: -9.523289680480957

Token 132: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012023793533444405
    2. 'if' (adapté à ' if') → logprob: -5.01202392578125
    3. '   ' → logprob: -5.88702392578125
    4. ' return' → logprob: -6.26202392578125
    5. ' while' → logprob: -7.88702392578125
    6. 'return' → logprob: -9.26202392578125
    7. ' 
' → logprob: -10.38702392578125
    8. '    
' → logprob: -10.51202392578125
    9. ' ' → logprob: -10.76202392578125
    10. ' new' → logprob: -11.63702392578125

Token 133: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2312517613172531
    2. ' len' → logprob: -1.9812517166137695
    3. 'stack' → logprob: -3.1062517166137695
    4. ' stack' → logprob: -4.7312517166137695
    5. 'result' → logprob: -5.2312517166137695
    6. ' any' → logprob: -5.4812517166137695
    7. 'any' → logprob: -5.4812517166137695
    8. ' result' → logprob: -7.1062517166137695
    9. 'not' → logprob: -8.48125171661377
    10. ' not' → logprob: -8.73125171661377

Token 134: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.006827262695878744
    2. '(stack' → logprob: -5.006827354431152
    3. 'result' → logprob: -9.256827354431152
    4. '(' → logprob: -11.381827354431152
    5. '(chars' → logprob: -12.881827354431152
    6. 'stack' → logprob: -14.256827354431152
    7. '(set' → logprob: -14.381827354431152
    8. ' (' → logprob: -15.131827354431152
    9. '(res' → logprob: -15.631827354431152
    10. '(results' → logprob: -15.756827354431152

Token 135: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045302003622055054
    2. ' )' → logprob: -4.045301914215088
    3. ' <' → logprob: -4.170301914215088
    4. '<|end|>' → logprob: -5.295301914215088
    5. ' ' → logprob: -5.795301914215088
    6. ' and' → logprob: -6.795301914215088
    7. ')>' → logprob: -7.670301914215088
    8. ')<' → logprob: -7.795301914215088
    9. ' >' → logprob: -7.920301914215088
    10. ' !=' → logprob: -8.295302391052246

Token 136: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31130170822143555
    2. '<' → logprob: -1.5613017082214355
    3. '<|end|>' → logprob: -3.5613017082214355
    4. ' !=' → logprob: -4.0613017082214355
    5. '!=' → logprob: -5.1863017082214355
    6. ')' → logprob: -5.8113017082214355
    7. ' ' → logprob: -6.3113017082214355
    8. '<>' → logprob: -8.811302185058594
    9. '0' → logprob: -8.936302185058594
    10. '<len' → logprob: -8.936302185058594

Token 137: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10368179529905319
    2. 'len' → logprob: -2.353681802749634
    3. ' n' → logprob: -5.853681564331055
    4. ' len' → logprob: -8.228681564331055
    5. '0' → logprob: -8.353681564331055
    6. 'chars' → logprob: -10.228681564331055
    7. '   ' → logprob: -10.603681564331055
    8. 'length' → logprob: -11.603681564331055
    9. '```' → logprob: -11.853681564331055
    10. ' ' → logprob: -12.228681564331055

Token 138: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6074289083480835
    2. ':' → logprob: -1.2324289083480835
    3. ':return' → logprob: -2.107429027557373
    4. ' or' → logprob: -3.982429027557373
    5. '   ' → logprob: -3.982429027557373
    6. ' and' → logprob: -6.232429027557373
    7. ' return' → logprob: -6.482429027557373
    8. 'return' → logprob: -7.732429027557373
    9. '       ' → logprob: -8.107428550720215
    10. ' :
' → logprob: -8.357428550720215

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007817182689905167
    2. 'return' → logprob: -5.757817268371582
    3. '
' → logprob: -6.007817268371582
    4. ' return' → logprob: -6.257817268371582
    5. '   ' → logprob: -8.382817268371582
    6. '        
' → logprob: -12.007817268371582
    7. '	   ' → logprob: -12.132817268371582
    8. '
' → logprob: -12.882817268371582
    9. ':return' → logprob: -13.382817268371582
    10. '    
' → logprob: -13.382817268371582

Token 140: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06973166018724442
    2. ' return' → logprob: -3.3197317123413086
    3. '       ' → logprob: -3.5697317123413086
    4. '   ' → logprob: -5.819731712341309
    5. '	return' → logprob: -10.444731712341309
    6. '
' → logprob: -10.569731712341309
    7. ' ' → logprob: -12.319731712341309
    8. '{return' → logprob: -14.694731712341309
    9. ':return' → logprob: -15.069731712341309
    10. '```' → logprob: -15.319731712341309

Token 141: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20148341357707977
    2. ' result' → logprob: -1.7014833688735962
    3. '[result' → logprob: -10.076483726501465
    4. '''.' → logprob: -11.576483726501465
    5. ' ''.' → logprob: -11.701483726501465
    6. '[' → logprob: -13.201483726501465
    7. '(result' → logprob: -13.576483726501465
    8. '	result' → logprob: -13.701483726501465
    9. ' ' → logprob: -14.076483726501465
    10. '"' → logprob: -14.201483726501465

Token 142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006056066602468491
    2. '    
' → logprob: -5.88105583190918
    3. 'else' → logprob: -6.13105583190918
    4. '
' → logprob: -7.50605583190918
    5. ' else' → logprob: -8.13105583190918
    6. 'return' → logprob: -9.25605583190918
    7. ' 
' → logprob: -10.38105583190918
    8. '  
' → logprob: -10.38105583190918
    9. '        
' → logprob: -10.88105583190918
    10. '   
' → logprob: -10.88105583190918

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1536567360162735
    2. 'else' → logprob: -2.6536567211151123
    3. 'return' → logprob: -3.1536567211151123
    4. ' else' → logprob: -3.7786567211151123
    5. ' return' → logprob: -5.653656959533691
    6. '    
' → logprob: -6.653656959533691
    7. '
' → logprob: -7.528656959533691
    8. ' ' → logprob: -8.278656959533691
    9. ' 
' → logprob: -8.278656959533691
    10. '  
' → logprob: -8.278656959533691

Token 144: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1247226744890213
    2. 'return' → logprob: -2.749722719192505
    3. ' return' → logprob: -3.749722719192505
    4. 'else' (adapté à ' else') → logprob: -4.249722480773926
    5. ' else' → logprob: -4.374722480773926
    6. '
' → logprob: -6.624722480773926
    7. '    
' → logprob: -6.749722480773926
    8. ' ' → logprob: -8.749722480773926
    9. ' 
' → logprob: -9.249722480773926
    10. '  
' → logprob: -9.749722480773926

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037516430020332336
    2. ':
' → logprob: -3.7875163555145264
    3. ':return' → logprob: -5.4125165939331055
    4. '       ' → logprob: -5.5375165939331055
    5. ',' → logprob: -6.0375165939331055
    6. ' return' → logprob: -6.2875165939331055
    7. '[' → logprob: -7.5375165939331055
    8. 'return' → logprob: -8.162516593933105
    9. ' :' → logprob: -8.287516593933105
    10. '   ' → logprob: -8.912516593933105

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05938400700688362
    2. 'return' → logprob: -3.4343841075897217
    3. 'chain' → logprob: -4.059383869171143
    4. ' return' → logprob: -5.434383869171143
    5. ' chain' → logprob: -6.059383869171143
    6. '   ' → logprob: -6.559383869171143
    7. '(chain' → logprob: -11.4343843460083
    8. '.chain' → logprob: -12.0593843460083
    9. '           ' → logprob: -12.6843843460083
    10. '     ' → logprob: -12.6843843460083

Token 147: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13041645288467407
    2. 'chain' → logprob: -2.1304163932800293
    3. ' return' → logprob: -5.880416393280029
    4. '   ' → logprob: -7.630416393280029
    5. ' chain' → logprob: -8.505416870117188
    6. '       ' → logprob: -15.005416870117188
    7. ' ' → logprob: -16.005416870117188
    8. '.chain' → logprob: -16.255416870117188
    9. '(chain' → logprob: -16.380416870117188
    10. '	return' → logprob: -16.505416870117188

Token 148: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.38687291741371155
    2. ' chain' → logprob: -1.1368728876113892
    3. '(chain' → logprob: -13.636873245239258
    4. '.chain' → logprob: -14.511873245239258
    5. '   ' → logprob: -16.386873245239258
    6. '_chain' → logprob: -17.011873245239258
    7. ' ' → logprob: -17.761873245239258
    8. 'ch' → logprob: -18.136873245239258
    9. '```' → logprob: -18.261873245239258
    10. 'Chain' → logprob: -18.511873245239258

Token 149: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0002546641044318676
    2. '_result' → logprob: -8.50025463104248
    3. 'reaction' → logprob: -10.12525463104248
    4. 'result' → logprob: -11.62525463104248
    5. 're' → logprob: -13.37525463104248
    6. 'chain' → logprob: -15.25025463104248
    7. '_chain' → logprob: -16.375255584716797
    8. '\' → logprob: -16.750255584716797
    9. '_response' → logprob: -16.875255584716797
    10. '_' → logprob: -17.250255584716797

Token 150: 'action' (ID: 1976)
  Prédit: 'action'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'action' → logprob: -0.00012118533049942926
    2. 'act' → logprob: -9.125121116638184
    3. 's' → logprob: -12.000121116638184
    4. 'ation' → logprob: -13.375121116638184
    5. '_action' → logprob: -13.875121116638184
    6. 'acti' → logprob: -13.875121116638184
    7. 'ction' → logprob: -14.500121116638184
    8. 'agent' → logprob: -14.500121116638184
    9. 'a' → logprob: -15.250121116638184
    10. 'actor' → logprob: -15.500121116638184

Token 151: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -9.65101717156358e-05
    2. '(' → logprob: -9.250096321105957
    3. '(results' → logprob: -15.750096321105957
    4. ' (' → logprob: -15.875096321105957
    5. '(res' → logprob: -17.250097274780273
    6. 'result' → logprob: -17.500097274780273
    7. '(
' → logprob: -17.750097274780273
    8. '(return' → logprob: -17.750097274780273
    9. '((' → logprob: -18.500097274780273
    10. '(resultado' → logprob: -18.625097274780273

Token 152: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.375
    3. ' )' → logprob: -15.875
    4. '))' → logprob: -17.625
    5. '[' → logprob: -18.25
    6. ')#' → logprob: -18.875
    7. '<|end|>' → logprob: -19.0
    8. ')

' → logprob: -19.125
    9. '`)' → logprob: -19.125
    10. '）' → logprob: -19.125

Token 153: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3153279721736908
    2. ' main' → logprob: -1.3153280019760132
    3. 'simulate' → logprob: -7.690328121185303
    4. 'solve' → logprob: -7.940328121185303
    5. 'process' → logprob: -8.065327644348145
    6. 'remove' → logprob: -8.065327644348145
    7. 'play' → logprob: -9.315327644348145
    8. ' solve' → logprob: -9.815327644348145
    9. ' play' → logprob: -9.815327644348145
    10. 'find' → logprob: -10.065327644348145

Token 155: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3256690204143524
    2. '(chars' → logprob: -1.4506690502166748
    3. '(' → logprob: -3.450669050216675
    4. '(nums' → logprob: -5.450668811798096
    5. '(lines' → logprob: -6.325668811798096
    6. '(s' → logprob: -7.075668811798096
    7. '(input' → logprob: -7.575668811798096
    8. '()' → logprob: -7.575668811798096
    9. '(lst' → logprob: -7.825668811798096
    10. '(line' → logprob: -8.075669288635254

Token 156: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0392460972070694
    2. 'n' → logprob: -3.539246082305908
    3. '   ' → logprob: -5.164246082305908
    4. ' import' → logprob: -6.539246082305908
    5. ' input' → logprob: -6.664246082305908
    6. ' chars' → logprob: -7.289246082305908
    7. 'import' → logprob: -9.414246559143066
    8. '```' → logprob: -10.039246559143066
    9. ' colors' → logprob: -10.164246559143066
    10. 'chars' → logprob: -10.289246559143066

Token 157: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6470097899436951
    2. ' n' → logprob: -0.7720097899436951
    3. '   ' → logprob: -4.89700984954834
    4. 'N' → logprob: -6.89700984954834
    5. ' input' → logprob: -7.02200984954834
    6. 'import' → logprob: -7.02200984954834
    7. 't' → logprob: -7.14700984954834
    8. ' t' → logprob: -7.77200984954834
    9. ' N' → logprob: -7.89700984954834
    10. 's' → logprob: -8.02200984954834

Token 158: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20494365692138672
    2. '_data' → logprob: -2.3299436569213867
    3. '_line' → logprob: -2.7049436569213867
    4. '_' → logprob: -5.204943656921387
    5. '_str' → logprob: -5.329943656921387
    6. '_chars' → logprob: -5.454943656921387
    7. '_lines' → logprob: -6.079943656921387
    8. '_text' → logprob: -6.079943656921387
    9. '_list' → logprob: -7.829943656921387
    10. '_string' → logprob: -7.829943656921387

Token 159: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6595898866653442
    2. ' sys' → logprob: -0.9095898866653442
    3. 'input' → logprob: -2.9095897674560547
    4. ' input' → logprob: -3.6595897674560547
    5. 'lambda' → logprob: -13.784589767456055
    6. '=sys' → logprob: -13.784589767456055
    7. '	sys' → logprob: -13.784589767456055
    8. '```' → logprob: -13.909589767456055
    9. 'open' → logprob: -14.659589767456055
    10. '(sys' → logprob: -14.659589767456055

Token 160: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.021166164427995682
    2. '.' → logprob: -3.8961660861968994
    3. '.readline' → logprob: -7.5211663246154785
    4. '.stdout' → logprob: -10.39616584777832
    5. 'stdin' → logprob: -10.77116584777832
    6. '.std' → logprob: -11.52116584777832
    7. '().' → logprob: -11.52116584777832
    8. '.setdefault' → logprob: -12.39616584777832
    9. '.argv' → logprob: -13.14616584777832
    10. '(stdin' → logprob: -13.64616584777832

Token 161: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00016277639952022582
    2. '.read' → logprob: -9.000163078308105
    3. '.' → logprob: -10.750163078308105
    4. '.readlines' → logprob: -11.625163078308105
    5. '.stdin' → logprob: -11.875163078308105
    6. '.buffer' → logprob: -13.500163078308105
    7. 'read' → logprob: -15.125163078308105
    8. '.Read' → logprob: -16.62516212463379
    9. '_read' → logprob: -16.75016212463379
    10. '.re' → logprob: -16.87516212463379

Token 162: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35560286045074463
    2. '().' → logprob: -1.7306028604507446
    3. '()
' → logprob: -2.105602741241455
    4. '
' → logprob: -8.730603218078613
    5. '()\' → logprob: -9.355603218078613
    6. '()

' → logprob: -10.605603218078613
    7. '()
' → logprob: -11.605603218078613
    8. '()<' → logprob: -13.230603218078613
    9. '(' → logprob: -13.355603218078613
    10. ' ()' → logprob: -13.480603218078613

Token 163: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1224798858165741
    2. '   ' → logprob: -2.6224799156188965
    3. '()
' → logprob: -3.4974799156188965
    4. '().' → logprob: -4.4974799156188965
    5. '()\' → logprob: -7.2474799156188965
    6. ' ()' → logprob: -9.247479438781738
    7. '
' → logprob: -9.372479438781738
    8. 'n' → logprob: -9.497479438781738
    9. '())' → logprob: -10.497479438781738
    10. '(),' → logprob: -10.747479438781738

Token 164: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.796980619430542
    2. ' n' → logprob: -0.796980619430542
    3. ' t' → logprob: -3.171980619430542
    4. 't' → logprob: -3.671980619430542
    5. '   ' → logprob: -4.546980857849121
    6. 'k' → logprob: -4.921980857849121
    7. ' T' → logprob: -5.921980857849121
    8. ' k' → logprob: -6.046980857849121
    9. 'q' → logprob: -6.296980857849121
    10. ' Q' → logprob: -6.421980857849121

Token 165: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.18062467873096466
    2. 'True' → logprob: -1.8056247234344482
    3. '(True' → logprob: -7.055624485015869
    4. '1' → logprob: -11.680624961853027
    5. ' Tru' → logprob: -12.930624961853027
    6. '=True' → logprob: -13.555624961853027
    7. ' ' → logprob: -13.680624961853027
    8. 'r' → logprob: -14.055624961853027
    9. ' line' → logprob: -14.180624961853027
    10. '(' → logprob: -14.680624961853027

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010706674307584763
    2. '():' → logprob: -5.135706901550293
    3. ':
' → logprob: -5.885706901550293
    4. ',' → logprob: -6.510706901550293
    5. '():
' → logprob: -8.635706901550293
    6. '(' → logprob: -9.135706901550293
    7. '   ' → logprob: -9.385706901550293
    8. '):' → logprob: -10.260706901550293
    9. '       ' → logprob: -10.385706901550293
    10. ' :' → logprob: -10.760706901550293

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4779626131057739
    2. '   ' → logprob: -0.9779626131057739
    3. ' line' → logprob: -5.852962493896484
    4. '    ' → logprob: -8.102962493896484
    5. '<|end|>' → logprob: -9.102962493896484
    6. ' try' → logprob: -9.227962493896484
    7. ' ' → logprob: -9.602962493896484
    8. 'line' → logprob: -9.852962493896484
    9. ' readline' → logprob: -10.227962493896484
    10. '           ' → logprob: -10.352962493896484

Token 168: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.20421721041202545
    2. 'line' → logprob: -2.0792171955108643
    3. 's' → logprob: -3.2042171955108643
    4. ' s' → logprob: -4.329217433929443
    5. ' chars' → logprob: -6.079217433929443
    6. 'chars' → logprob: -6.329217433929443
    7. 'colors' → logprob: -7.454217433929443
    8. ' colors' → logprob: -7.579217433929443
    9. '       ' → logprob: -8.204216957092285
    10. '   ' → logprob: -8.954216957092285

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3158966600894928
    2. '=' → logprob: -1.3158966302871704
    3. ',' → logprob: -6.065896511077881
    4. '=int' → logprob: -8.940896987915039
    5. '=line' → logprob: -9.815896987915039
    6. ' ' → logprob: -10.440896987915039
    7. '=input' → logprob: -10.565896987915039
    8. ' ,' → logprob: -11.065896987915039
    9. ' ==' → logprob: -11.190896987915039
    10. '   ' → logprob: -11.565896987915039

Token 170: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007770824711769819
    2. ' int' → logprob: -5.507771015167236
    3. 'input' → logprob: -5.632771015167236
    4. ' input' → logprob: -9.632770538330078
    5. 'sys' → logprob: -10.257770538330078
    6. ' sys' → logprob: -12.507770538330078
    7. 'len' → logprob: -13.757770538330078
    8. '(int' → logprob: -14.007770538330078
    9. ' ' → logprob: -15.382770538330078
    10. '=int' → logprob: -15.632770538330078

Token 171: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0020602114964276552
    2. '(' → logprob: -6.252060413360596
    3. 'input' → logprob: -9.002059936523438
    4. '(sys' → logprob: -12.002059936523438
    5. '()' → logprob: -13.502059936523438
    6. '(
' → logprob: -14.627059936523438
    7. '=input' → logprob: -16.127059936523438
    8. ' input' → logprob: -16.377059936523438
    9. ' (' → logprob: -16.377059936523438
    10. ',input' → logprob: -16.752059936523438

Token 172: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04314294457435608
    2. '().' → logprob: -3.2931430339813232
    3. '()' → logprob: -5.293142795562744
    4. '())
' → logprob: -9.918143272399902
    5. '()
' → logprob: -12.668143272399902
    6. '(' → logprob: -12.918143272399902
    7. ' ())' → logprob: -12.918143272399902
    8. '()))' → logprob: -13.168143272399902
    9. '())

' → logprob: -13.668143272399902
    10. ')' → logprob: -14.168143272399902

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013190940022468567
    2. ' if' → logprob: -4.888190746307373
    3. '<|end|>' → logprob: -6.138190746307373
    4. '   ' → logprob: -6.513190746307373
    5. ' ' → logprob: -7.263190746307373
    6. '	' → logprob: -8.263191223144531
    7. 'if' → logprob: -8.388191223144531
    8. ' line' → logprob: -9.138191223144531
    9. '        ' → logprob: -9.138191223144531
    10. '<|end|>' → logprob: -9.638191223144531

Token 174: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03816117346286774
    2. ' if' → logprob: -3.288161277770996
    3. 'chars' → logprob: -9.288161277770996
    4. '       ' → logprob: -11.163161277770996
    5. 'c' → logprob: -12.163161277770996
    6. ' chars' → logprob: -13.538161277770996
    7. '<|end|>' → logprob: -13.788161277770996
    8. 'colors' → logprob: -14.038161277770996
    9. 's' → logprob: -14.038161277770996
    10. 'n' → logprob: -14.163161277770996

Token 175: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.2519959807395935
    2. 'N' → logprob: -1.5019960403442383
    3. ' not' → logprob: -9.626996040344238
    4. 'not' → logprob: -14.876996040344238
    5. ' ' → logprob: -15.626996040344238
    6. ' ' → logprob: -15.751996040344238
    7. '	N' → logprob: -15.876996040344238
    8. '>N' → logprob: -16.876995086669922
    9. '=N' → logprob: -18.126995086669922
    10. '_N' → logprob: -18.626995086669922

Token 176: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10025304555892944
    2. ' ==' → logprob: -2.350253105163574
    3. '=' → logprob: -10.225253105163574
    4. '===' → logprob: -12.975253105163574
    5. '()==' → logprob: -13.100253105163574
    6. ')==' → logprob: -13.475253105163574
    7. ')' → logprob: -13.475253105163574
    8. '[' → logprob: -14.350253105163574
    9. '<=' → logprob: -14.350253105163574
    10. ']==' → logprob: -14.350253105163574

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '-' → logprob: -17.000261306762695
    4. '```' → logprob: -18.125261306762695
    5. '۰' → logprob: -20.000261306762695
    6. '０' → logprob: -20.500261306762695
    7. ' -' → logprob: -20.750261306762695
    8. '_' → logprob: -20.875261306762695
    9. '`' → logprob: -21.250261306762695
    10. '000' → logprob: -21.500261306762695

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '-' → logprob: -15.625000953674316
    4. '```' → logprob: -20.375
    5. '０' → logprob: -20.875
    6. '۰' → logprob: -21.0
    7. ' -' → logprob: -21.5
    8. '`' → logprob: -22.75
    9. ')' → logprob: -23.25
    10. '``' → logprob: -23.375

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06999257206916809
    2. ':
' → logprob: -2.6949925422668457
    3. ':return' → logprob: -10.319993019104004
    4. '       ' → logprob: -11.194993019104004
    5. '           ' → logprob: -12.319993019104004
    6. '   ' → logprob: -13.444993019104004
    7. ',' → logprob: -13.944993019104004
    8. ':
' → logprob: -14.194993019104004
    9. '):
' → logprob: -14.319993019104004
    10. '.' → logprob: -15.069993019104004

Token 180: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41782310605049133
    2. '           ' → logprob: -1.167823076248169
    3. '   ' → logprob: -3.542823076248169
    4. ' break' → logprob: -6.917823314666748
    5. 'break' → logprob: -7.917823314666748
    6. '	break' → logprob: -9.66782283782959
    7. '   ' → logprob: -10.79282283782959
    8. '	   ' → logprob: -11.04282283782959
    9. '		' → logprob: -11.16782283782959
    10. '	       ' → logprob: -11.41782283782959

Token 181: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.046469613909721375
    2. ' break' → logprob: -3.2964696884155273
    3. 'return' → logprob: -4.796469688415527
    4. ' return' → logprob: -9.546469688415527
    5. '       ' → logprob: -10.421469688415527
    6. '	break' → logprob: -10.546469688415527
    7. '           ' → logprob: -12.171469688415527
    8. '               ' → logprob: -14.671469688415527
    9. '   ' → logprob: -15.046469688415527
    10. '_break' → logprob: -15.296469688415527

Token 182: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008833571337163448
    2. '        
' → logprob: -8.000883102416992
    3. '<|end|>' → logprob: -8.250883102416992
    4. '   ' → logprob: -9.750883102416992
    5. ',' → logprob: -10.125883102416992
    6. ' chars' → logprob: -10.500883102416992
    7. '
' → logprob: -10.500883102416992
    8. 'chars' → logprob: -10.500883102416992
    9. '	' → logprob: -11.000883102416992
    10. '(chars' → logprob: -11.250883102416992

Token 183: '       ' (ID: 309)
  Prédit: ' chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chars' → logprob: -0.5161052346229553
    2. 'chars' → logprob: -1.6411051750183105
    3. '       ' → logprob: -1.8911051750183105
    4. 'colors' → logprob: -4.1411051750183105
    5. ' colors' → logprob: -4.2661051750183105
    6. '   ' → logprob: -4.3911051750183105
    7. '(chars' → logprob: -5.1411051750183105
    8. ' line' → logprob: -5.5161051750183105
    9. 's' → logprob: -6.5161051750183105
    10. 'line' → logprob: -7.1411051750183105

Token 184: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' (adapté à ' chars') → logprob: -0.13414321839809418
    2. 'colors' → logprob: -2.509143114089966
    3. ' chars' → logprob: -3.884143114089966
    4. 'S' → logprob: -5.259143352508545
    5. '   ' → logprob: -5.259143352508545
    6. ' colors' → logprob: -5.759143352508545
    7. 's' → logprob: -5.884143352508545
    8. '       ' → logprob: -6.384143352508545
    9. 'cols' → logprob: -6.634143352508545
    10. ' S' → logprob: -7.134143352508545

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300034046173096
    2. '=' → logprob: -3.1680002212524414
    3. '=[]' → logprob: -15.168000221252441
    4. '=line' → logprob: -15.168000221252441
    5. ' =[' → logprob: -15.918000221252441
    6. ' ' → logprob: -16.418001174926758
    7. '＝' → logprob: -16.543001174926758
    8. '=input' → logprob: -16.793001174926758
    9. '[:]' → logprob: -16.793001174926758
    10. '=list' → logprob: -17.043001174926758

Token 186: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06101877987384796
    2. 'input' → logprob: -2.936018705368042
    3. ' list' → logprob: -5.436018943786621
    4. '[input' → logprob: -6.561018943786621
    5. '[list' → logprob: -8.561018943786621
    6. ' input' → logprob: -8.936018943786621
    7. '[]' → logprob: -11.561018943786621
    8. '(list' → logprob: -12.686018943786621
    9. '[' → logprob: -12.936018943786621
    10. '   ' → logprob: -13.686018943786621

Token 187: 'int' (ID: 491)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08587164431810379
    2. 'c' → logprob: -2.585871696472168
    3. 'ch' → logprob: -5.585871696472168
    4. 'x' → logprob: -5.835871696472168
    5. 'char' → logprob: -8.835871696472168
    6. 'chr' → logprob: -9.835871696472168
    7. 'str' → logprob: -11.085871696472168
    8. '*' → logprob: -11.085871696472168
    9. '_' → logprob: -11.210871696472168
    10. ' input' → logprob: -11.710871696472168

Token 188: '(input' (ID: 10054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6122951507568359
    2. '(input' → logprob: -0.9872951507568359
    3. '(i' → logprob: -2.862295150756836
    4. '(' → logprob: -3.612295150756836
    5. 'input' → logprob: -8.112295150756836
    6. ']' → logprob: -8.737295150756836
    7. '(char' → logprob: -8.987295150756836
    8. '(c' → logprob: -8.987295150756836
    9. '(a' → logprob: -9.112295150756836
    10. '(s' → logprob: -9.737295150756836

Token 189: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5780015587806702
    2. '().' → logprob: -0.8280015587806702
    3. '()' → logprob: -6.328001499176025
    4. '()]' → logprob: -8.328001976013184
    5. '()
' → logprob: -11.203001976013184
    6. ')' → logprob: -11.828001976013184
    7. '())
' → logprob: -12.328001976013184
    8. ')]' → logprob: -13.078001976013184
    9. ' ())' → logprob: -13.703001976013184
    10. '()),' → logprob: -13.953001976013184

Token 190: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7627227902412415
    2. '()' → logprob: -1.2627227306365967
    3. 'for' → logprob: -1.5127227306365967
    4. ')' → logprob: -3.5127227306365967
    5. ' ' → logprob: -8.512722969055176
    6. '	for' → logprob: -8.762722969055176
    7. ']' → logprob: -9.387722969055176
    8. '().' → logprob: -10.012722969055176
    9. ' ()' → logprob: -10.762722969055176
    10. '.readline' → logprob: -11.262722969055176

Token 191: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00011856284982059151
    2. '_range' → logprob: -9.250118255615234
    3. ' _' → logprob: -11.125118255615234
    4. ' in' → logprob: -12.500118255615234
    5. ' range' → logprob: -13.125118255615234
    6. '_in' → logprob: -13.625118255615234
    7. '_i' → logprob: -15.250118255615234
    8. 'range' → logprob: -16.000118255615234
    9. ' ' → logprob: -17.125118255615234
    10. 'i' → logprob: -17.500118255615234

Token 192: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04356050863862038
    2. ' in' → logprob: -3.79356050491333
    3. 'in' → logprob: -4.29356050491333
    4. ' range' → logprob: -5.04356050491333
    5. '	range' → logprob: -13.418560981750488
    6. ' ' → logprob: -14.293560981750488
    7. '(range' → logprob: -14.543560981750488
    8. '  ' → logprob: -15.418560981750488
    9. '   ' → logprob: -17.043560028076172
    10. ' xrange' → logprob: -17.168560028076172

Token 193: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -19.250059127807617
    4. '	range' → logprob: -19.500059127807617
    5. 'rang' → logprob: -21.250059127807617
    6. '   ' → logprob: -21.375059127807617
    7. '  ' → logprob: -21.625059127807617
    8. ' ' → logprob: -22.375059127807617
    9. '```' → logprob: -23.125059127807617
    10. 'ran' → logprob: -23.250059127807617

Token 194: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06198146939277649
    2. '(N' → logprob: -2.811981439590454
    3. ' N' → logprob: -11.311981201171875
    4. '	N' → logprob: -13.811981201171875
    5. '(' → logprob: -14.686981201171875
    6. '   ' → logprob: -17.061981201171875
    7. ' (' → logprob: -17.061981201171875
    8. 'n' → logprob: -17.436981201171875
    9. ',N' → logprob: -18.311981201171875
    10. ' ' → logprob: -18.311981201171875

Token 195: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010425841173855588
    2. ')' → logprob: -9.500103950500488
    3. ']' → logprob: -10.500103950500488
    4. ')]
' → logprob: -14.250103950500488
    5. ' )' → logprob: -15.000103950500488
    6. ')}' → logprob: -16.000104904174805
    7. '   ' → logprob: -16.250104904174805
    8. '))' → logprob: -16.375104904174805
    9. '       ' → logprob: -16.375104904174805
    10. ')
' → logprob: -16.500104904174805

Token 196: '       ' (ID: 309)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7644696235656738
    2. 'result' → logprob: -0.8894696235656738
    3. '       ' → logprob: -2.514469623565674
    4. '   ' → logprob: -3.389469623565674
    5. '        
' → logprob: -6.764469623565674
    6. 'rest' → logprob: -7.139469623565674
    7. ' next' → logprob: -7.264469623565674
    8. ' results' → logprob: -7.389469623565674
    9. '    
' → logprob: -7.639469623565674
    10. '<|end|>' → logprob: -7.764469623565674

Token 197: ' min' (ID: 1349)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13187400996685028
    2. 'res' → logprob: -2.3818740844726562
    3. ' result' → logprob: -4.506874084472656
    4. 'chars' → logprob: -5.006874084472656
    5. 're' → logprob: -5.756874084472656
    6. 'remaining' → logprob: -6.256874084472656
    7. 'final' → logprob: -6.631874084472656
    8. '   ' → logprob: -7.006874084472656
    9. 'colors' → logprob: -7.381874084472656
    10. 'ans' → logprob: -7.506874084472656

Token 198: '_remaining' (ID: 102167)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.6951442956924438
    2. '_rem' → logprob: -2.0701441764831543
    3. '_color' → logprob: -2.1951441764831543
    4. '_count' → logprob: -2.3201441764831543
    5. '_chain' → logprob: -2.4451441764831543
    6. '_removed' → logprob: -2.5701441764831543
    7. '_' → logprob: -2.6951441764831543
    8. '_colors' → logprob: -2.6951441764831543
    9. '_len' → logprob: -3.4451441764831543
    10. '_moves' → logprob: -3.5701441764831543

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31361737847328186
    2. '=' → logprob: -1.3136173486709595
    3. '_chars' → logprob: -8.688617706298828
    4. 's' → logprob: -10.313617706298828
    5. '_colors' → logprob: -10.313617706298828
    6. ',' → logprob: -10.313617706298828
    7. '_' → logprob: -10.813617706298828
    8. '_count' → logprob: -11.063617706298828
    9. '=len' → logprob: -12.188617706298828
    10. '_color' → logprob: -12.313617706298828

Token 200: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07097609341144562
    2. 'float' → logprob: -2.8209760189056396
    3. 'n' → logprob: -5.945976257324219
    4. 'min' → logprob: -6.070976257324219
    5. 'len' → logprob: -6.320976257324219
    6. ' N' → logprob: -6.695976257324219
    7. ' float' → logprob: -7.945976257324219
    8. 'None' → logprob: -8.070976257324219
    9. '10' → logprob: -9.320976257324219
    10. 'sys' → logprob: -9.320976257324219

Token 201: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10366953164339066
    2. ' +' → logprob: -2.7286696434020996
    3. '
' → logprob: -3.6036696434020996
    4. '-' → logprob: -5.6036696434021
    5. ' -' → logprob: -7.1036696434021
    6. '*' → logprob: -8.103669166564941
    7. '    
' → logprob: -8.228669166564941
    8. '<|end|>' → logprob: -8.353669166564941
    9. '   ' → logprob: -8.478669166564941
    10. '+
' → logprob: -9.603669166564941

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13422702252864838
    2. ' for' → logprob: -2.6342270374298096
    3. 'for' → logprob: -3.2592270374298096
    4. '
' → logprob: -4.2592267990112305
    5. '   ' → logprob: -7.8842267990112305
    6. '        
' → logprob: -8.00922679901123
    7. 'chars' → logprob: -9.38422679901123
    8. '<|end|>' → logprob: -9.38422679901123
    9. '	for' → logprob: -9.88422679901123
    10. ' chars' → logprob: -10.13422679901123

Token 203: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026837889105081558
    2. 'colors' → logprob: -4.0268378257751465
    3. ' for' → logprob: -5.6518378257751465
    4. 'color' → logprob: -6.6518378257751465
    5. 'min' → logprob: -7.1518378257751465
    6. 'from' → logprob: -7.1518378257751465
    7. 'unique' → logprob: -7.5268378257751465
    8. 'import' → logprob: -8.151838302612305
    9. '   ' → logprob: -8.651838302612305
    10. 'possible' → logprob: -8.776838302612305

Token 204: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3896544575691223
    2. ' i' → logprob: -1.2646543979644775
    3. 'k' → logprob: -4.639654636383057
    4. 'start' → logprob: -5.639654636383057
    5. 'remove' → logprob: -5.764654636383057
    6. ' start' → logprob: -5.764654636383057
    7. ' k' → logprob: -6.014654636383057
    8. ' remove' → logprob: -6.014654636383057
    9. 'color' → logprob: -6.139654636383057
    10. 'c' → logprob: -6.389654636383057

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018244294449687004
    2. 'in' → logprob: -4.01824426651001
    3. ' ' → logprob: -9.393244743347168
    4. ',' → logprob: -12.018244743347168
    5. '  ' → logprob: -13.393244743347168
    6. 'n' → logprob: -14.018244743347168
    7. '   ' → logprob: -14.518244743347168
    8. '	in' → logprob: -15.143244743347168
    9. 'range' → logprob: -15.268244743347168
    10. '_' → logprob: -15.268244743347168

Token 206: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -17.251502990722656
    4. '	range' → logprob: -17.251502990722656
    5. ' ' → logprob: -18.251502990722656
    6. '   ' → logprob: -18.376502990722656
    7. '  ' → logprob: -18.751502990722656
    8. 'rang' → logprob: -19.751502990722656
    9. 'ran' → logprob: -20.501502990722656
    10. '```' → logprob: -20.751502990722656

Token 207: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003958363085985184
    2. '(len' → logprob: -6.253958225250244
    3. '(' → logprob: -6.503958225250244
    4. '(n' → logprob: -7.753958225250244
    5. '(min' → logprob: -9.628958702087402
    6. 'N' → logprob: -10.503958702087402
    7. 'len' → logprob: -12.253958702087402
    8. '1' → logprob: -14.253958702087402
    9. '(M' → logprob: -14.503958702087402
    10. 'min' → logprob: -15.003958702087402

Token 208: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10021205991506577
    2. ' +' → logprob: -2.3502120971679688
    3. '):' → logprob: -12.475212097167969
    4. '):
' → logprob: -14.350212097167969
    5. '+
' → logprob: -15.225212097167969
    6. '   ' → logprob: -15.850212097167969
    7. ')' → logprob: -15.975212097167969
    8. '
' → logprob: -16.22521209716797
    9. ':' → logprob: -16.85021209716797
    10. ' +
' → logprob: -16.85021209716797

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12321113795042038
    2. ' for' → logprob: -2.623211145401001
    3. '       ' → logprob: -4.123210906982422
    4. ' chars' → logprob: -4.623210906982422
    5. ',' → logprob: -5.123210906982422
    6. '   ' → logprob: -5.998210906982422
    7. '<|end|>' → logprob: -6.373210906982422
    8. ' ' → logprob: -6.623210906982422
    9. ' if' → logprob: -6.998210906982422
    10. '        ' → logprob: -7.373210906982422

Token 210: ' original' (ID: 4756)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.9797891974449158
    2. 'for' → logprob: -1.6047892570495605
    3. ' for' → logprob: -2.1047892570495605
    4. ' inserted' → logprob: -2.1047892570495605
    5. ' new' → logprob: -2.9797892570495605
    6. ' insert' → logprob: -3.4797892570495605
    7. 'new' → logprob: -3.7297892570495605
    8. 'in' → logprob: -3.9797892570495605
    9. '       ' → logprob: -4.8547892570495605
    10. 'temp' → logprob: -4.9797892570495605

Token 211: ' =' (ID: 314)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.010722601786255836
    2. ' =' → logprob: -5.260722637176514
    3. '_char' → logprob: -6.135722637176514
    4. 'chars' → logprob: -6.385722637176514
    5. '=' → logprob: -7.010722637176514
    6. '_colors' → logprob: -9.385722160339355
    7. '[' → logprob: -9.510722160339355
    8. '[:]' → logprob: -9.885722160339355
    9. '(chars' → logprob: -10.010722160339355
    10. ' chars' → logprob: -10.010722160339355

Token 212: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.00043376852408982813
    2. ' chars' → logprob: -7.750433921813965
    3. '[' → logprob: -13.375433921813965
    4. '(chars' → logprob: -14.750433921813965
    5. '   ' → logprob: -14.875433921813965
    6. 'char' → logprob: -15.500433921813965
    7. 'list' → logprob: -15.750433921813965
    8. 'chain' → logprob: -16.75043296813965
    9. 'ints' → logprob: -17.00043296813965
    10. 'Chars' → logprob: -17.25043296813965

Token 213: '[i' (ID: 1768)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.30466368794441223
    2. '[:]' → logprob: -1.4296636581420898
    3. '.copy' → logprob: -3.80466365814209
    4. 'copy' → logprob: -7.05466365814209
    5. '[i' → logprob: -9.67966365814209
    6. '_copy' → logprob: -10.67966365814209
    7. '[' → logprob: -11.80466365814209
    8. 'Copy' → logprob: -11.92966365814209
    9. '[:-' → logprob: -13.42966365814209
    10. ' =' → logprob: -13.42966365814209

Token 214: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07472118735313416
    2. ']
' → logprob: -2.699721097946167
    3. ':]' → logprob: -6.324721336364746
    4. ')' → logprob: -6.949721336364746
    5. ':]
' → logprob: -7.199721336364746
    6. ':' → logprob: -7.949721336364746
    7. ':i' → logprob: -8.449721336364746
    8. ' ]' → logprob: -8.699721336364746
    9. ')
' → logprob: -8.699721336364746
    10. '
' → logprob: -8.949721336364746

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13954351842403412
    2. ' ' → logprob: -3.6395435333251953
    3. '<|end|>' → logprob: -3.7645435333251953
    4. '       ' → logprob: -4.139543533325195
    5. '            
' → logprob: -4.264543533325195
    6. ' 
' → logprob: -4.389543533325195
    7. ' for' → logprob: -4.889543533325195
    8. '
' → logprob: -5.014543533325195
    9. '        
' → logprob: -5.514543533325195
    10. ',' → logprob: -5.639543533325195

Token 216: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20743457973003387
    2. ' for' → logprob: -2.20743465423584
    3. 'insert' → logprob: -3.33243465423584
    4. 'chars' → logprob: -3.70743465423584
    5. 'temp' → logprob: -5.83243465423584
    6. ' chars' → logprob: -5.95743465423584
    7. 'new' → logprob: -6.08243465423584
    8. ' inserted' → logprob: -6.33243465423584
    9. ' insert' → logprob: -6.45743465423584
    10. '   ' → logprob: -6.95743465423584

Token 217: ' c' (ID: 274)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.6207727789878845
    2. 'color' → logprob: -1.1207728385925293
    3. ' c' → logprob: -2.8707728385925293
    4. 'c' → logprob: -3.4957728385925293
    5. ' new' → logprob: -3.8707728385925293
    6. 'new' → logprob: -4.870772838592529
    7. 'x' → logprob: -5.620772838592529
    8. 'insert' → logprob: -5.995772838592529
    9. 'col' → logprob: -6.245772838592529
    10. ' x' → logprob: -6.245772838592529

Token 218: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014186308719217777
    2. 'in' → logprob: -4.264186382293701
    3. 's' → logprob: -12.264185905456543
    4. ' ' → logprob: -13.014185905456543
    5. '1' → logprob: -13.139185905456543
    6. 'import' → logprob: -13.139185905456543
    7. 'range' → logprob: -13.139185905456543
    8. 'int' → logprob: -13.389185905456543
    9. 'd' → logprob: -13.389185905456543
    10. 'from' → logprob: -13.889185905456543

Token 219: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02125369757413864
    2. ' range' → logprob: -4.02125358581543
    3. '[' → logprob: -6.02125358581543
    4. 'set' → logprob: -7.89625358581543
    5. '(' → logprob: -8.77125358581543
    6. '(range' → logprob: -9.02125358581543
    7. '{' → logprob: -11.64625358581543
    8. ' set' → logprob: -11.77125358581543
    9. ' [' → logprob: -12.77125358581543
    10. '[-' → logprob: -13.64625358581543

Token 220: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17721132934093475
    2. 'range' → logprob: -2.677211284637451
    3. '1' → logprob: -3.427211284637451
    4. '0' → logprob: -3.677211284637451
    5. 'original' → logprob: -4.302211284637451
    6. '(' → logprob: -5.427211284637451
    7. '(original' → logprob: -5.802211284637451
    8. 'chars' → logprob: -5.927211284637451
    9. ' range' → logprob: -6.052211284637451
    10. ' [' → logprob: -6.677211284637451

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005954514257609844
    2. ' ,' → logprob: -5.130954742431641
    3. ',
' → logprob: -11.00595474243164
    4. '2' → logprob: -12.63095474243164
    5. '1' → logprob: -13.75595474243164
    6. ',)' → logprob: -14.00595474243164
    7. '3' → logprob: -14.50595474243164
    8. ' ' → logprob: -14.50595474243164
    9. ',),' → logprob: -14.63095474243164
    10. ',

' → logprob: -15.13095474243164

Token 222: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02055228315293789
    2. ' ' → logprob: -3.895552396774292
    3. ')' → logprob: -12.645552635192871
    4. '
' → logprob: -13.270552635192871
    5. '  ' → logprob: -13.520552635192871
    6. '0' → logprob: -14.270552635192871
    7. '   ' → logprob: -14.520552635192871
    8. '-' → logprob: -14.645552635192871
    9. '3' → logprob: -14.770552635192871
    10. ',' → logprob: -15.145552635192871

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04047740623354912
    2. '):' → logprob: -3.4154775142669678
    3. '3' → logprob: -5.290477275848389
    4. '):
' → logprob: -6.415477275848389
    5. ' ,' → logprob: -9.415477752685547
    6. ' ' → logprob: -10.790477752685547
    7. ' ):' → logprob: -11.165477752685547
    8. ')' → logprob: -12.290477752685547
    9. ',
' → logprob: -12.665477752685547
    10. '):

' → logprob: -13.290477752685547

Token 224: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005550591740757227
    2. ' ' → logprob: -7.500555038452148
    3. ')' → logprob: -13.500555038452148
    4. '4' → logprob: -15.875555038452148
    5. '
' → logprob: -16.25055503845215
    6. '

' → logprob: -16.31305503845215
    7. '  ' → logprob: -16.31305503845215
    8. '   ' → logprob: -16.62555503845215
    9. '1' → logprob: -16.75055503845215
    10. ',' → logprob: -16.81305503845215

Token 225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4346436858177185
    2. '):' → logprob: -1.4346437454223633
    3. ',' → logprob: -2.1846437454223633
    4. '4' → logprob: -6.559643745422363
    5. ' ):
' → logprob: -9.434643745422363
    6. ' ):' → logprob: -9.559643745422363
    7. '):
' → logprob: -9.684643745422363
    8. '):

' → logprob: -9.809643745422363
    9. ' ,' → logprob: -10.309643745422363
    10. ')' → logprob: -10.434643745422363

Token 226: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20995214581489563
    2. '<|end|>' → logprob: -2.4599521160125732
    3. ':' → logprob: -2.7099521160125732
    4. '           ' → logprob: -4.584952354431152
    5. ' ' → logprob: -4.709952354431152
    6. ':
' → logprob: -6.084952354431152
    7. '<|end|>' → logprob: -6.334952354431152
    8. ',' → logprob: -6.459952354431152
    9. '                               ' → logprob: -6.459952354431152
    10. '       ' → logprob: -6.584952354431152

Token 227: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23105129599571228
    2. ' if' → logprob: -1.7310513257980347
    3. ' chars' → logprob: -3.856051206588745
    4. '               ' → logprob: -6.106051445007324
    5. 'chars' → logprob: -6.981051445007324
    6. 'if' (adapté à ' if') → logprob: -6.981051445007324
    7. '		           ' → logprob: -6.981051445007324
    8. '                ' → logprob: -7.731051445007324
    9. '                    ' → logprob: -7.856051445007324
    10. '                       ' → logprob: -7.981051445007324

Token 228: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.14269591867923737
    2. 'c' → logprob: -2.017695903778076
    3. 'chars' → logprob: -11.517696380615234
    4. ' chars' → logprob: -12.767696380615234
    5. '	c' → logprob: -13.267696380615234
    6. '                   ' → logprob: -13.517696380615234
    7. ' original' → logprob: -14.267696380615234
    8. '               ' → logprob: -14.392696380615234
    9. ' ' → logprob: -14.642696380615234
    10. 'original' → logprob: -14.892696380615234

Token 229: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.26808875799179077
    2. ' ==' → logprob: -1.5180888175964355
    3. '!=' → logprob: -4.7680888175964355
    4. '==' → logprob: -4.8930888175964355
    5. ' ' → logprob: -11.393088340759277
    6. ')' → logprob: -12.018088340759277
    7. '<|end|>' → logprob: -12.268088340759277
    8. ')!=' → logprob: -12.393088340759277
    9. ')==' → logprob: -12.893088340759277
    10. '=' → logprob: -13.268088340759277

Token 230: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.03804493322968483
    2. ' original' → logprob: -3.2880449295043945
    3. 'chars' → logprob: -13.038044929504395
    4. '(original' → logprob: -14.663044929504395
    5. '
' → logprob: -15.663044929504395
    6. ' ' → logprob: -15.788044929504395
    7. ' chars' → logprob: -15.913044929504395
    8. 'Original' → logprob: -16.03804588317871
    9. '   ' → logprob: -16.28804588317871
    10. '_original' → logprob: -16.66304588317871

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2819445729255676
    2. ':
' → logprob: -1.4069445133209229
    3. '                   ' → logprob: -7.781944751739502
    4. 'continue' → logprob: -8.656944274902344
    5. ' or' → logprob: -9.781944274902344
    6. ' continue' → logprob: -10.031944274902344
    7. ':return' → logprob: -10.656944274902344
    8. '           ' → logprob: -10.906944274902344
    9. '               ' → logprob: -11.031944274902344
    10. '   ' → logprob: -11.156944274902344

Token 232: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.053338512778282166
    2. ':
' → logprob: -3.3033385276794434
    3. ':' → logprob: -4.553338527679443
    4. ' continue' → logprob: -6.178338527679443
    5. 'continue' → logprob: -6.428338527679443
    6. '		           ' → logprob: -8.053338050842285
    7. ',' → logprob: -9.303338050842285
    8. '				' → logprob: -9.303338050842285
    9. '	continue' → logprob: -9.803338050842285
    10. ' or' → logprob: -9.803338050842285

Token 233: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.41440239548683167
    2. 'continue' (adapté à ' continue') → logprob: -1.2894023656845093
    3. '                   ' → logprob: -2.789402484893799
    4. '	continue' → logprob: -6.914402484893799
    5. '               ' → logprob: -7.164402484893799
    6. '                       ' → logprob: -8.03940200805664
    7. '_continue' → logprob: -9.28940200805664
    8. '	               ' → logprob: -10.03940200805664
    9. '   ' → logprob: -10.16440200805664
    10. '		           ' → logprob: -11.03940200805664

Token 234: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028865009546279907
    2. '                
' → logprob: -4.153864860534668
    3. '
' → logprob: -4.653864860534668
    4. '                    
' → logprob: -7.403864860534668
    5. '<|end|>' → logprob: -7.653864860534668
    6. '                ' → logprob: -7.778864860534668
    7. '  
' → logprob: -8.028864860534668
    8. '           ' → logprob: -8.153864860534668
    9. '                   ' → logprob: -8.403864860534668
    10. '            
' → logprob: -8.653864860534668

Token 235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008321061730384827
    2. '                
' → logprob: -5.008321285247803
    3. '<|end|>' → logprob: -7.758321285247803
    4. ')' → logprob: -8.633320808410645
    5. '           ' → logprob: -8.633320808410645
    6. '                    
' → logprob: -9.133320808410645
    7. ' 
' → logprob: -9.633320808410645
    8. '            
' → logprob: -9.633320808410645
    9. '  
' → logprob: -9.758320808410645
    10. ' chars' → logprob: -9.758320808410645

Token 236: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5880167484283447
    2. ' chars' → logprob: -1.7130167484283447
    3. '               ' → logprob: -2.3380167484283447
    4. ' inserted' → logprob: -2.9630167484283447
    5. ' temp' → logprob: -3.2130167484283447
    6. 'new' (adapté à ' new') → logprob: -3.7130167484283447
    7. 'chars' → logprob: -3.7130167484283447
    8. 'temp' → logprob: -4.838016510009766
    9. '                   ' → logprob: -5.088016510009766
    10. '           ' → logprob: -5.713016510009766

Token 237: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0036077939439564943
    2. 'chars' → logprob: -6.253607749938965
    3. ' =' → logprob: -7.003607749938965
    4. '=' → logprob: -7.253607749938965
    5. '_char' → logprob: -10.503607749938965
    6. '(chars' → logprob: -11.253607749938965
    7. '_line' → logprob: -12.628607749938965
    8. '_list' → logprob: -12.878607749938965
    9. ' chars' → logprob: -13.003607749938965
    10. 'Chars' → logprob: -13.003607749938965

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17974582314491272
    2. '=' → logprob: -1.8047457933425903
    3. ')' → logprob: -14.9297456741333
    4. '<|end|>' → logprob: -15.0547456741333
    5. 's' → logprob: -16.179746627807617
    6. ']' → logprob: -16.554746627807617
    7. ',' → logprob: -16.679746627807617
    8. '[' → logprob: -16.929746627807617
    9. '＝' → logprob: -17.429746627807617
    10. ' ' → logprob: -17.679746627807617

Token 239: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.2254386842250824
    2. ' chars' → logprob: -1.6004387140274048
    3. '(chars' → logprob: -10.975439071655273
    4. '   ' → logprob: -12.600439071655273
    5. ' ' → logprob: -13.600439071655273
    6. '[' → logprob: -13.600439071655273
    7. '_chars' → logprob: -13.975439071655273
    8. 'Chars' → logprob: -14.600439071655273
    9. 'char' → logprob: -14.725439071655273
    10. ' [' → logprob: -14.975439071655273

Token 240: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00016039233014453202
    2. '[:]' → logprob: -8.750160217285156
    3. '.copy' → logprob: -13.875160217285156
    4. '[' → logprob: -13.875160217285156
    5. ' [:' → logprob: -17.750160217285156
    6. '[
' → logprob: -18.000160217285156
    7. 'copy' → logprob: -19.500160217285156
    8. '][:' → logprob: -19.875160217285156
    9. '=' → logprob: -20.625160217285156
    10. '[:-' → logprob: -21.000160217285156

Token 241: ']
' (ID: 1592)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.7159857786027715e-05
    2. ']' → logprob: -10.250046730041504
    3. ':i' → logprob: -12.125046730041504
    4. ':' → logprob: -12.875046730041504
    5. ' i' → logprob: -12.875046730041504
    6. '(i' → logprob: -15.500046730041504
    7. '0' → logprob: -15.750046730041504
    8. '(' → logprob: -15.875046730041504
    9. ',i' → logprob: -16.00004768371582
    10. '```' → logprob: -16.12504768371582

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09425079077482224
    2. ' new' → logprob: -3.2192506790161133
    3. 'new' → logprob: -3.2192506790161133
    4. '[new' → logprob: -6.094250679016113
    5. '	           ' → logprob: -6.219250679016113
    6. '			' → logprob: -7.094250679016113
    7. '	new' → logprob: -7.219250679016113
    8. '
' → logprob: -7.469250679016113
    9. '		       ' → logprob: -7.469250679016113
    10. '<|end|>' → logprob: -7.594250679016113

Token 243: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.13158948719501495
    2. 'new' (adapté à ' new') → logprob: -2.131589412689209
    3. '               ' → logprob: -5.381589412689209
    4. '           ' → logprob: -10.881589889526367
    5. '[new' → logprob: -11.006589889526367
    6. '                   ' → logprob: -12.131589889526367
    7. '```' → logprob: -13.631589889526367
    8. '   ' → logprob: -13.881589889526367
    9. '                ' → logprob: -14.006589889526367
    10. '	new' → logprob: -14.131589889526367

Token 244: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -9.610702363715973e-06
    2. 'chars' → logprob: -11.750009536743164
    3. '[i' → logprob: -14.125009536743164
    4. '_tokens' → logprob: -14.625009536743164
    5. '(chars' → logprob: -15.625009536743164
    6. '```' → logprob: -15.625009536743164
    7. 'Chars' → logprob: -16.250009536743164
    8. ' chars' → logprob: -16.250009536743164
    9. '_char' → logprob: -17.375009536743164
    10. '[' → logprob: -18.000009536743164

Token 245: '[i' (ID: 1768)
  Prédit: '.insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.0434185266494751
    2. '[i' → logprob: -3.1684184074401855
    3. '.' → logprob: -8.043418884277344
    4. 'insert' → logprob: -9.918418884277344
    5. '```' → logprob: -10.793418884277344
    6. ' .' → logprob: -11.293418884277344
    7. '.splice' → logprob: -12.918418884277344
    8. '[:' → logprob: -13.043418884277344
    9. '[I' → logprob: -13.418418884277344
    10. ').' → logprob: -13.418418884277344

Token 246: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014214261900633574
    2. ']=' → logprob: -6.6264214515686035
    3. '=' → logprob: -9.501420974731445
    4. ' ]' → logprob: -11.876420974731445
    5. '].' → logprob: -12.001420974731445
    6. ' =' → logprob: -12.626420974731445
    7. ')' → logprob: -13.376420974731445
    8. ']+=' → logprob: -14.126420974731445
    9. '][' → logprob: -14.626420974731445
    10. ']
' → logprob: -15.126420974731445

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170460251159966
    2. ' =' → logprob: -6.751170635223389
    3. ']=' → logprob: -16.626171112060547
    4. ')=' → logprob: -16.626171112060547
    5. '=

' → logprob: -16.751171112060547
    6. ')' → logprob: -17.376171112060547
    7. '.append' → logprob: -17.626171112060547
    8. '=c' → logprob: -17.751171112060547
    9. '.=' → logprob: -17.751171112060547
    10. ']' → logprob: -18.376171112060547

Token 248: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.615255839889869e-05
    2. ' c' → logprob: -9.250096321105957
    3. '	c' → logprob: -21.12509536743164
    4. '   ' → logprob: -21.50009536743164
    5. '    ' → logprob: -23.12509536743164
    6. ' ' → logprob: -23.12509536743164
    7. ')c' → logprob: -23.25009536743164
    8. '%c' → logprob: -24.12509536743164
    9. '  ' → logprob: -24.25009536743164
    10. '
' → logprob: -24.37509536743164

Token 249: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4482439160346985
    2. '               ' → logprob: -1.0732438564300537
    3. '<|end|>' → logprob: -4.948244094848633
    4. '                
' → logprob: -5.323244094848633
    5. '  
' → logprob: -5.698244094848633
    6. '
' → logprob: -6.948244094848633
    7. ' 
' → logprob: -7.198244094848633
    8. 'new' → logprob: -7.948244094848633
    9. '<|end|>' → logprob: -7.948244094848633
    10. '        
' → logprob: -8.448244094848633

Token 250: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7916060090065002
    2. '<|end|>' → logprob: -1.0416059494018555
    3. '               ' → logprob: -1.9166059494018555
    4. '<|end|>' → logprob: -3.9166059494018555
    5. '
' → logprob: -5.0416059494018555
    6. '  
' → logprob: -5.1666059494018555
    7. '                
' → logprob: -5.9166059494018555
    8. 'new' → logprob: -5.9166059494018555
    9. ' new' → logprob: -6.0416059494018555
    10. ' 
' → logprob: -6.2916059494018555

Token 251: ' final' (ID: 1721)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.0459222793579102
    2. 'result' → logprob: -1.0459222793579102
    3. ' new' → logprob: -1.6709222793579102
    4. 'new' → logprob: -3.04592227935791
    5. 'remaining' → logprob: -4.04592227935791
    6. ' remaining' → logprob: -4.54592227935791
    7. 'processed' → logprob: -4.67092227935791
    8. 'res' → logprob: -5.42092227935791
    9. ' processed' → logprob: -5.42092227935791
    10. '               ' → logprob: -5.79592227935791

Token 252: ' =' (ID: 314)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.4152722954750061
    2. '_result' → logprob: -1.7902722358703613
    3. ' =' → logprob: -2.1652722358703613
    4. '=' → logprob: -2.9152722358703613
    5. 'result' → logprob: -5.790272235870361
    6. 'chars' → logprob: -7.540272235870361
    7. '_chain' → logprob: -9.04027271270752
    8. '=result' → logprob: -9.04027271270752
    9. '   ' → logprob: -10.54027271270752
    10. '_list' → logprob: -10.54027271270752

Token 253: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.04858771339058876
    2. ' chain' → logprob: -3.0485877990722656
    3. '(chain' → logprob: -15.548587799072266
    4. '   ' → logprob: -16.923587799072266
    5. '.chain' → logprob: -17.298587799072266
    6. 'ch' → logprob: -20.048587799072266
    7. 'CHAIN' → logprob: -20.173587799072266
    8. 'Chain' → logprob: -20.423587799072266
    9. ' ' → logprob: -20.548587799072266
    10. '_chain' → logprob: -20.673587799072266

Token 254: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -9.088346359931165e-07
    2. 'reaction' → logprob: -14.250000953674316
    3. 're' → logprob: -16.5
    4. '_result' → logprob: -17.25
    5. '_chain' → logprob: -17.875
    6. '_response' → logprob: -18.5
    7. '   ' → logprob: -19.125
    8. ' _' → logprob: -19.5
    9. ' reaction' → logprob: -19.875
    10. '\' → logprob: -20.0

Token 255: 'action' (ID: 1976)
  Prédit: 'action'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'action' → logprob: -3.857719275401905e-05
    2. 'act' → logprob: -11.375038146972656
    3. 'reaction' → logprob: -11.875038146972656
    4. 'ation' → logprob: -12.000038146972656
    5. 'ction' → logprob: -12.375038146972656
    6. '_action' → logprob: -12.500038146972656
    7. 'acti' → logprob: -13.750038146972656
    8. '```' → logprob: -14.500038146972656
    9. 'acion' → logprob: -14.625038146972656
    10. 'actor' → logprob: -14.750038146972656

Token 256: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -4.320199877838604e-07
    2. '(final' → logprob: -15.625
    3. '(' → logprob: -16.125
    4. 'new' → logprob: -16.75
    5. ')new' → logprob: -18.5
    6. '[new' → logprob: -18.75
    7. ' (' → logprob: -19.0
    8. ',new' → logprob: -20.125
    9. '(New' → logprob: -20.375
    10. ' new' → logprob: -20.75

Token 257: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0016144849359989166
    2. 'chars' → logprob: -6.876614570617676
    3. '(chars' → logprob: -7.626614570617676
    4. ')' → logprob: -10.501614570617676
    5. 'Chars' → logprob: -11.501614570617676
    6. 'reaction' → logprob: -11.501614570617676
    7. 'result' → logprob: -11.501614570617676
    8. '```' → logprob: -12.001614570617676
    9. 's' → logprob: -12.376614570617676
    10. '(new' → logprob: -12.376614570617676

Token 258: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.018380893394351006
    2. ')' → logprob: -4.018381118774414
    3. '()
' → logprob: -9.018381118774414
    4. ')
' → logprob: -9.893381118774414
    5. '())
' → logprob: -10.643381118774414
    6. '               ' → logprob: -11.393381118774414
    7. '()' → logprob: -11.518381118774414
    8. '       ' → logprob: -11.768381118774414
    9. ')

' → logprob: -12.768381118774414
    10. ' )
' → logprob: -13.393381118774414

Token 259: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006342656910419464
    2. '
' → logprob: -5.131342887878418
    3. ' min' → logprob: -9.256342887878418
    4. '<|end|>' → logprob: -9.381342887878418
    5. '```' → logprob: -9.756342887878418
    6. '
' → logprob: -10.006342887878418
    7. '                
' → logprob: -10.631342887878418
    8. ',' → logprob: -10.881342887878418
    9. '       ' → logprob: -11.006342887878418
    10. 'min' → logprob: -11.006342887878418

Token 260: ' if' (ID: 538)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11203597486019135
    2. ' min' → logprob: -2.3620359897613525
    3. 'if' (adapté à ' if') → logprob: -4.987035751342773
    4. ' if' → logprob: -5.362035751342773
    5. '
' → logprob: -8.737035751342773
    6. '               ' → logprob: -9.612035751342773
    7. '           ' → logprob: -11.862035751342773
    8. '	min' → logprob: -13.362035751342773
    9. '                   ' → logprob: -13.487035751342773
    10. '```' → logprob: -13.862035751342773

Token 261: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.07889077812433243
    2. 'len' → logprob: -2.578890800476074
    3. '(len' → logprob: -14.328890800476074
    4. ' min' → logprob: -14.828890800476074
    5. 'min' → logprob: -16.078889846801758
    6. '   ' → logprob: -18.203889846801758
    7. '	len' → logprob: -18.578889846801758
    8. ' ' → logprob: -19.328889846801758
    9. '           ' → logprob: -20.203889846801758
    10. '=len' → logprob: -20.953889846801758

Token 262: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.37500286102295
    3. 'final' → logprob: -13.37500286102295
    4. ' (' → logprob: -16.375003814697266
    5. '(result' → logprob: -18.625003814697266
    6. '(
' → logprob: -18.750003814697266
    7. ' final' → logprob: -19.500003814697266
    8. '(min' → logprob: -20.000003814697266
    9. '(f' → logprob: -20.250003814697266
    10. '	final' → logprob: -20.875003814697266

Token 263: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04606214165687561
    2. ')' → logprob: -3.7960622310638428
    3. '<' → logprob: -3.7960622310638428
    4. ')<' → logprob: -10.296062469482422
    5. ' )' → logprob: -10.671062469482422
    6. '<|end|>' → logprob: -11.171062469482422
    7. '[' → logprob: -11.671062469482422
    8. ' ' → logprob: -11.921062469482422
    9. '```' → logprob: -13.046062469482422
    10. '<size' → logprob: -13.421062469482422

Token 264: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20146402716636658
    2. ' <' → logprob: -1.701464056968689
    3. '[' → logprob: -10.95146369934082
    4. ' ' → logprob: -11.45146369934082
    5. ')' → logprob: -12.20146369934082
    6. '<len' → logprob: -12.57646369934082
    7. '```' → logprob: -13.32646369934082
    8. '<size' → logprob: -13.32646369934082
    9. ',' → logprob: -13.45146369934082
    10. '<|end|>' → logprob: -13.45146369934082

Token 265: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014166918583214283
    2. ' min' → logprob: -4.264166831970215
    3. '	min' → logprob: -13.514166831970215
    4. '           ' → logprob: -13.639166831970215
    5. '   ' → logprob: -14.764166831970215
    6. '               ' → logprob: -16.51416778564453
    7. '=min' → logprob: -16.63916778564453
    8. ' ' → logprob: -17.01416778564453
    9. '(min' → logprob: -17.13916778564453
    10. '
' → logprob: -17.26416778564453

Token 266: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -7.3458322731312364e-06
    2. '   ' → logprob: -13.875007629394531
    3. 'min' → logprob: -14.000007629394531
    4. '_min' → logprob: -14.000007629394531
    5. '_rem' → logprob: -14.125007629394531
    6. '```' → logprob: -14.625007629394531
    7. '_removed' → logprob: -14.750007629394531
    8. '           ' → logprob: -14.875007629394531
    9. '(min' → logprob: -15.000007629394531
    10. '(' → logprob: -15.125007629394531

Token 267: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14282222092151642
    2. ':
' → logprob: -2.017822265625
    3. '           ' → logprob: -9.767822265625
    4. '               ' → logprob: -10.392822265625
    5. ':
' → logprob: -11.267822265625
    6. '                   ' → logprob: -11.392822265625
    7. '):
' → logprob: -11.767822265625
    8. ' :
' → logprob: -12.267822265625
    9. ' :' → logprob: -12.642822265625
    10. '                       ' → logprob: -12.767822265625

Token 268: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011504583060741425
    2. ' min' → logprob: -5.386504650115967
    3. '           ' → logprob: -5.886504650115967
    4. '                       ' → logprob: -6.261504650115967
    5. '               ' → logprob: -6.511504650115967
    6. '
' → logprob: -8.386504173278809
    7. 'min' → logprob: -9.261504173278809
    8. '                           ' → logprob: -9.511504173278809
    9. '                    
' → logprob: -9.511504173278809
    10. '       ' → logprob: -10.386504173278809

Token 269: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.24216768145561218
    2. 'min' (adapté à ' min') → logprob: -1.7421677112579346
    3. '                   ' → logprob: -3.2421677112579346
    4. '                       ' → logprob: -7.2421674728393555
    5. '               ' → logprob: -9.492167472839355
    6. '           ' → logprob: -10.492167472839355
    7. '	min' → logprob: -11.742167472839355
    8. '
' → logprob: -11.992167472839355
    9. '       ' → logprob: -12.117167472839355
    10. '_min' → logprob: -12.367167472839355

Token 270: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -4.320199877838604e-07
    2. '_rem' → logprob: -16.375
    3. 'Remaining' → logprob: -16.625
    4. 'remaining' → logprob: -16.625
    5. '_removed' → logprob: -17.125
    6. '_' → logprob: -17.5
    7. '_required' → logprob: -17.875
    8. '=' → logprob: -18.25
    9. '_re' → logprob: -18.625
    10. '_result' → logprob: -18.75

Token 271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395360946655
    2. ' =' → logprob: -0.8259395360946655
    3. '＝' → logprob: -16.325939178466797
    4. '.=' → logprob: -18.450939178466797
    5. '=len' → logprob: -18.950939178466797
    6. '=

' → logprob: -19.575939178466797
    7. ' ' → logprob: -20.075939178466797
    8. '   ' → logprob: -20.450939178466797
    9. '=min' → logprob: -20.450939178466797
    10. '=int' → logprob: -20.700939178466797

Token 272: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018150178715586662
    2. ' len' → logprob: -4.018150329589844
    3. '(len' → logprob: -15.643150329589844
    4. '[len' → logprob: -16.268150329589844
    5. '	len' → logprob: -16.518150329589844
    6. '=len' → logprob: -18.143150329589844
    7. '           ' → logprob: -19.018150329589844
    8. '   ' → logprob: -19.143150329589844
    9. ',len' → logprob: -19.393150329589844
    10. '          ' → logprob: -19.518150329589844

Token 273: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -4.596781946020201e-05
    2. 'final' → logprob: -10.000045776367188
    3. '(' → logprob: -14.500045776367188
    4. ' final' → logprob: -19.375045776367188
    5. ' (' → logprob: -20.000045776367188
    6. '(fin' → logprob: -20.250045776367188
    7. '```' → logprob: -21.000045776367188
    8. '(full' → logprob: -21.750045776367188
    9. '(
' → logprob: -21.750045776367188
    10. '	final' → logprob: -22.250045776367188

Token 274: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1806093454360962
    2. '<|end|>' → logprob: -1.8056093454360962
    3. '<|end|>' → logprob: -7.305609226226807
    4. '
' → logprob: -9.680609703063965
    5. '               ' → logprob: -10.180609703063965
    6. ')
' → logprob: -10.555609703063965
    7. ')return' → logprob: -11.055609703063965
    8. ']' → logprob: -11.180609703063965
    9. ' )' → logprob: -12.180609703063965
    10. '       ' → logprob: -12.680609703063965

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0068437191657722
    2. 'print' → logprob: -5.256843566894531
    3. '
' → logprob: -6.756843566894531
    4. '   ' → logprob: -8.006843566894531
    5. ' print' → logprob: -10.381843566894531
    6. '```' → logprob: -10.381843566894531
    7. 'return' → logprob: -10.881843566894531
    8. '<|end|>' → logprob: -11.506843566894531
    9. '           ' → logprob: -12.131843566894531
    10. '        
' → logprob: -12.381843566894531

Token 276: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4945232570171356
    2. 'print' (adapté à ' print') → logprob: -0.994523286819458
    3. ' print' → logprob: -4.244523048400879
    4. '       ' → logprob: -5.244523048400879
    5. '
' → logprob: -7.869523048400879
    6. '```' → logprob: -8.369523048400879
    7. '    
' → logprob: -13.244523048400879
    8. '	print' → logprob: -13.619523048400879
    9. '        
' → logprob: -14.119523048400879
    10. '<|end|>' → logprob: -14.494523048400879

Token 277: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00015955790877342224
    2. '(' → logprob: -8.75015926361084
    3. 'min' → logprob: -14.37515926361084
    4. ' (' → logprob: -15.50015926361084
    5. '(max' → logprob: -16.375160217285156
    6. ' min' → logprob: -16.750160217285156
    7. ',min' → logprob: -16.875160217285156
    8. '()' → logprob: -17.500160217285156
    9. '(f' → logprob: -17.625160217285156
    10. '=min' → logprob: -18.250160217285156

Token 278: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -4.246537173457909e-06
    2. ')' → logprob: -13.750003814697266
    3. 'Remaining' → logprob: -14.125003814697266
    4. '_removed' → logprob: -14.250003814697266
    5. '   ' → logprob: -14.375003814697266
    6. 'remaining' → logprob: -15.125003814697266
    7. '_rem' → logprob: -15.125003814697266
    8. '_' → logprob: -15.625003814697266
    9. '(' → logprob: -16.500003814697266
    10. '_possible' → logprob: -17.125003814697266

Token 279: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.000001907348633
    3. ')
' → logprob: -14.875001907348633
    4. '<|end|>' → logprob: -16.000001907348633
    5. '))' → logprob: -17.125001907348633
    6. '`)' → logprob: -17.500001907348633
    7. '```' → logprob: -17.625001907348633
    8. '')' → logprob: -17.625001907348633
    9. ')}' → logprob: -17.750001907348633
    10. ')`' → logprob: -17.875001907348633

Token 280: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023248855024576187
    2. '__' → logprob: -3.7732489109039307
    3. ' ' → logprob: -13.648248672485352
    4. 'name' → logprob: -13.898248672485352
    5. '_name' → logprob: -14.523248672485352
    6. ' ' → logprob: -14.648248672485352
    7. 'Name' → logprob: -16.14824867248535
    8. ' name' → logprob: -16.64824867248535
    9. '/__' → logprob: -17.02324867248535
    10. '_' → logprob: -17.14824867248535

Token 282: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22187437117099762
    2. '__' → logprob: -2.221874475479126
    3. '==' → logprob: -2.471874475479126
    4. '=="' → logprob: -5.221874237060547
    5. '=='' → logprob: -7.971874237060547
    6. ' __' → logprob: -8.596874237060547
    7. ' =="' → logprob: -9.221874237060547
    8. 'name' → logprob: -9.721874237060547
    9. ' =='' → logprob: -11.596874237060547
    10. 'main' → logprob: -12.346874237060547

Token 283: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000635235570371151
    2. '__.__' → logprob: -8.000635147094727
    3. '==' → logprob: -8.375635147094727
    4. '=="' → logprob: -10.375635147094727
    5. ' ==' → logprob: -11.000635147094727
    6. '__.' → logprob: -12.500635147094727
    7. '=='' → logprob: -12.500635147094727
    8. '__["' → logprob: -12.750635147094727
    9. '"' → logprob: -13.375635147094727
    10. '__":
' → logprob: -13.500635147094727

Token 284: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2743868827819824
    2. '==' → logprob: -1.8993868827819824
    3. '__' → logprob: -2.6493868827819824
    4. '=="' → logprob: -4.024386882781982
    5. '=='' → logprob: -6.399386882781982
    6. '.__' → logprob: -11.27438735961914
    7. ' =="' → logprob: -11.27438735961914
    8. '_' → logprob: -11.77438735961914
    9. '__.__' → logprob: -11.89938735961914
    10. '=' → logprob: -12.14938735961914

Token 285: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.251943439245224
    2. ''' → logprob: -1.5019434690475464
    3. '__' → logprob: -11.626943588256836
    4. ' "__' → logprob: -12.751943588256836
    5. ''"' → logprob: -14.001943588256836
    6. '"user' → logprob: -14.626943588256836
    7. ' '__' → logprob: -15.501943588256836
    8. '"'' → logprob: -15.876943588256836
    9. ''user' → logprob: -16.001943588256836
    10. ''app' → logprob: -16.126943588256836

Token 286: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.4498052223643754e-05
    2. 'name' → logprob: -11.875014305114746
    3. '"' → logprob: -12.125014305114746
    4. '__' → logprob: -13.750014305114746
    5. ''' → logprob: -14.250014305114746
    6. ' main' → logprob: -15.500014305114746
    7. '_main' → logprob: -17.375015258789062
    8. 'built' → logprob: -17.750015258789062
    9. '	main' → logprob: -17.875015258789062
    10. '-main' → logprob: -18.250015258789062

Token 287: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.031762365251779556
    2. '__' → logprob: -3.7817623615264893
    3. '__':
' → logprob: -4.781762599945068
    4. '():
' → logprob: -10.40676212310791
    5. '__:' → logprob: -10.53176212310791
    6. ':' → logprob: -11.78176212310791
    7. '__["' → logprob: -11.90676212310791
    8. ':
' → logprob: -12.28176212310791
    9. '__
' → logprob: -12.40676212310791
    10. '__.' → logprob: -12.78176212310791

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13735046982765198
    2. 'solve' → logprob: -2.137350559234619
    3. ' solve' → logprob: -4.762350559234619
    4. '	s' → logprob: -6.637350559234619
    5. '.solve' → logprob: -9.137350082397461
    6. '<|end|>' → logprob: -9.512350082397461
    7. '   ' → logprob: -9.637350082397461
    8. 'main' → logprob: -9.762350082397461
    9. '	main' → logprob: -10.137350082397461
    10. '```' → logprob: -10.137350082397461

Token 289: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -5.512236498361744e-07
    2. ' solve' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.875
    4. '.solve' → logprob: -19.25
    5. 'resolve' → logprob: -21.375
    6. 'import' → logprob: -21.625
    7. 'save' → logprob: -22.0
    8. 'simulate' → logprob: -22.625
    9. 'sol' → logprob: -23.0
    10. 'main' → logprob: -23.0

Token 290: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 288
Tokens correctement prédits (1ère position, stricte): 130
Tokens correctement prédits (1ère position, avec adaptation): 144
Tokens correctement prédits (top 10): 248
Précision stricte (1ère position): 45.14%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 86.11%
================================================================================
