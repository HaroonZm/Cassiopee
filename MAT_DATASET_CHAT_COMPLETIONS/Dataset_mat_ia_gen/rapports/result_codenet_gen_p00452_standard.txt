================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:23:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

while True:
    N, M = map(int, input().split())
    if N == 0 and M == 0:
        break
    P = [int(input()) for _ in range(N)]
    dp = {0}
    for _ in range(4):
        ndp = set(dp)
        for s in dp:
            for p in P:
                if s + p <= M:
                    ndp.add(s + p)
        dp = ndp
    print(max(dp))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4366624355316162
    2. '.' → logprob: -1.1866624355316162
    3. 'import' → logprob: -4.061662673950195
    4. '\' → logprob: -4.436662673950195
    5. 'newline' → logprob: -5.061662673950195
    6. '<|end|>' → logprob: -5.561662673950195
    7. '
' → logprob: -5.936662673950195
    8. '```' → logprob: -6.561662673950195
    9. '' → logprob: -7.061662673950195
    10. '<|end|>' → logprob: -7.186662673950195

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048905275762081146
    2. '.' → logprob: -3.048905372619629
    3. ' (' → logprob: -9.298905372619629
    4. '(
' → logprob: -9.423905372619629
    5. ')' → logprob: -10.173905372619629
    6. '()' → logprob: -11.173905372619629
    7. '[' → logprob: -11.298905372619629
    8. ' ' → logprob: -11.423905372619629
    9. ''s' → logprob: -11.548905372619629
    10. '```' → logprob: -11.923905372619629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00015169414109550416
    2. '[' → logprob: -10.375151634216309
    3. ' .' → logprob: -10.375151634216309
    4. '.readline' → logprob: -10.625151634216309
    5. '.`' → logprob: -11.375151634216309
    6. '.import' → logprob: -11.500151634216309
    7. '.stdin' → logprob: -12.250151634216309
    8. '.)' → logprob: -12.500151634216309
    9. '```' → logprob: -13.000151634216309
    10. '."""' → logprob: -13.000151634216309

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.40092733502388
    2. '.' → logprob: -1.1509273052215576
    3. '.read' → logprob: -4.275927543640137
    4. '.readlines' → logprob: -10.650927543640137
    5. '.Read' → logprob: -11.400927543640137
    6. '```' → logprob: -12.025927543640137
    7. 'read' → logprob: -12.775927543640137
    8. '.​' → logprob: -13.150927543640137
    9. '.write' → logprob: -13.275927543640137
    10. '.

' → logprob: -13.525927543640137

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02467985637485981
    2. '(' → logprob: -4.149679660797119
    3. '()
' → logprob: -5.524679660797119
    4. '
' → logprob: -6.399679660797119
    5. '(
' → logprob: -6.774679660797119
    6. '\n' → logprob: -7.524679660797119
    7. '()\' → logprob: -7.649679660797119
    8. '\' → logprob: -8.274680137634277
    9. '().' → logprob: -8.274680137634277
    10. '()

' → logprob: -9.024680137634277

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22641481459140778
    2. '(' → logprob: -1.6014147996902466
    3. '().' → logprob: -7.476414680480957
    4. '()
' → logprob: -8.851414680480957
    5. '(
' → logprob: -9.601414680480957
    6. ')' → logprob: -10.351414680480957
    7. '()

' → logprob: -10.476414680480957
    8. '#' → logprob: -10.601414680480957
    9. 'def' → logprob: -10.601414680480957
    10. 'a' → logprob: -10.976414680480957

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0101946871727705
    2. ' True' → logprob: -4.635194778442383
    3. '  ' → logprob: -7.885194778442383
    4. ' (' → logprob: -11.135194778442383
    5. 'True' → logprob: -11.510194778442383
    6. ' i' → logprob: -11.885194778442383
    7. '    ' → logprob: -12.385194778442383
    8. ' not' → logprob: -12.385194778442383
    9. '   ' → logprob: -12.885194778442383
    10. ' "' → logprob: -13.010194778442383

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006746663711965084
    2. '():' → logprob: -7.625674724578857
    3. ' :' → logprob: -8.8756742477417
    4. ':**' → logprob: -10.6256742477417
    5. '):' → logprob: -12.2506742477417
    6. ':
' → logprob: -12.7506742477417
    7. '(:' → logprob: -13.0006742477417
    8. ':return' → logprob: -13.0006742477417
    9. '':'' → logprob: -13.6256742477417
    10. ' ():' → logprob: -13.7506742477417

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01415340043604374
    2. '    
' → logprob: -4.639153480529785
    3. '    ' → logprob: -6.389153480529785
    4. ' ' → logprob: -6.764153480529785
    5. ' 
' → logprob: -7.639153480529785
    6. '  
' → logprob: -8.139153480529785
    7. '  ' → logprob: -9.014153480529785
    8. '    
    
' → logprob: -9.139153480529785
    9. 'input' → logprob: -9.389153480529785
    10. '   
' → logprob: -9.389153480529785

Token 13: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.08977298438549042
    2. 'line' → logprob: -3.089772939682007
    3. '   ' → logprob: -3.964772939682007
    4. 'data' → logprob: -4.839773178100586
    5. 'user' → logprob: -5.464773178100586
    6. ' user' → logprob: -5.464773178100586
    7. ' data' → logprob: -5.589773178100586
    8. ' inp' → logprob: -7.964773178100586
    9. 'text' → logprob: -8.464773178100586
    10. '    ' → logprob: -8.839773178100586

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28014642000198364
    2. ' ==' → logprob: -2.280146360397339
    3. ' ' → logprob: -2.405146360397339
    4. '=' → logprob: -3.280146360397339
    5. ' >' → logprob: -5.530146598815918
    6. '  ' → logprob: -6.030146598815918
    7. '==' → logprob: -6.655146598815918
    8. '   ' → logprob: -6.780146598815918
    9. '>' → logprob: -7.405146598815918
    10. ' <=' → logprob: -7.405146598815918

Token 15: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2261284738779068
    2. ' M' → logprob: -1.7261284589767456
    3. 'M' → logprob: -4.476128578186035
    4. 'space' → logprob: -5.226128578186035
    5. '  ' → logprob: -6.226128578186035
    6. 'm' → logprob: -6.976128578186035
    7. ' space' → logprob: -6.976128578186035
    8. '_' → logprob: -7.101128578186035
    9. 'input' → logprob: -7.351128578186035
    10. ' =' → logprob: -7.476128578186035

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806169703602791
    2. '=' → logprob: -3.2880616188049316
    3. ' ' → logprob: -11.16306209564209
    4. ',' → logprob: -12.41306209564209
    5. '=input' → logprob: -14.16306209564209
    6. ')' → logprob: -14.28806209564209
    7. ' =",' → logprob: -16.038061141967773
    8. '=line' → logprob: -16.288061141967773
    9. ' ,' → logprob: -16.538061141967773
    10. ' =
' → logprob: -16.538061141967773

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.020735036581754684
    2. 'map' → logprob: -4.020735263824463
    3. ' input' → logprob: -6.020735263824463
    4. 'input' → logprob: -8.895734786987305
    5. ' ' → logprob: -11.770734786987305
    6. ' list' → logprob: -12.270734786987305
    7. ' sys' → logprob: -14.020734786987305
    8. '	map' → logprob: -14.145734786987305
    9. ' tuple' → logprob: -14.645734786987305
    10. ' [' → logprob: -14.770734786987305

Token 18: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5136721730232239
    2. '(int' → logprob: -1.013672113418579
    3. '(str' → logprob: -3.513672113418579
    4. '(input' → logprob: -5.263672351837158
    5. '(lambda' → logprob: -5.638672351837158
    6. '()' → logprob: -9.013671875
    7. '(
' → logprob: -10.263671875
    8. '(list' → logprob: -10.638671875
    9. '(eval' → logprob: -10.888671875
    10. '(tuple' → logprob: -11.013671875

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027321942150592804
    2. ',input' → logprob: -3.7773220539093018
    3. '(input' → logprob: -6.402321815490723
    4. ')' → logprob: -6.402321815490723
    5. '(' → logprob: -7.777321815490723
    6. 'input' → logprob: -8.527321815490723
    7. ' ,' → logprob: -9.527321815490723
    8. ' (' → logprob: -11.777321815490723
    9. ' input' → logprob: -11.902321815490723
    10. '),' → logprob: -12.027321815490723

Token 20: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20141616463661194
    2. 'input' → logprob: -1.7014161348342896
    3. ')' → logprob: -13.451416015625
    4. '(input' → logprob: -14.576416015625
    5. ' ' → logprob: -15.201416015625
    6. '=input' → logprob: -15.326416015625
    7. ',input' → logprob: -15.576416015625
    8. '	input' → logprob: -15.951416015625
    9. ' )' → logprob: -16.076416015625
    10. '<input' → logprob: -16.451416015625

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001801438513211906
    2. '()' → logprob: -6.376801490783691
    3. '())' → logprob: -9.251801490783691
    4. '()))' → logprob: -14.001801490783691
    5. ' ().' → logprob: -14.126801490783691
    6. '()
' → logprob: -14.376801490783691
    7. '(' → logprob: -14.751801490783691
    8. ')' → logprob: -15.751801490783691
    9. '('' → logprob: -16.001800537109375
    10. ' ()' → logprob: -17.001800537109375

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.41288691759109497
    2. 'strip' → logprob: -1.1628868579864502
    3. 'rstrip' → logprob: -3.66288685798645
    4. ')' → logprob: -10.912886619567871
    5. ' split' → logprob: -13.787886619567871
    6. '())' → logprob: -14.287886619567871
    7. '(split' → logprob: -14.662886619567871
    8. ' strip' → logprob: -14.787886619567871
    9. '().' → logprob: -15.287886619567871
    10. 'read' → logprob: -15.662886619567871

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.712641179561615
    2. '())' → logprob: -0.712641179561615
    3. '()' → logprob: -3.9626412391662598
    4. '))' → logprob: -8.462640762329102
    5. '())
' → logprob: -10.337640762329102
    6. '()))' → logprob: -10.962640762329102
    7. '(' → logprob: -10.962640762329102
    8. ')
' → logprob: -12.837640762329102
    9. '`)' → logprob: -12.962640762329102
    10. ')`' → logprob: -13.587640762329102

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8064367771148682
    2. '<|end|>' → logprob: -1.5564367771148682
    3. ' ' → logprob: -1.9314367771148682
    4. ':' → logprob: -2.306436777114868
    5. ' if' → logprob: -3.806436777114868
    6. ')' → logprob: -4.056436538696289
    7. '  ' → logprob: -4.181436538696289
    8. 'if' → logprob: -4.431436538696289
    9. ':
' → logprob: -4.931436538696289
    10. '    ' → logprob: -5.306436538696289

Token 25: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.324214905500412
    2. ' ' → logprob: -1.9492149353027344
    3. '<|end|>' → logprob: -2.8242149353027344
    4. ' if' → logprob: -4.199214935302734
    5. '  ' → logprob: -4.574214935302734
    6. '\n' → logprob: -4.699214935302734
    7. '    ' → logprob: -4.699214935302734
    8. ')' → logprob: -5.074214935302734
    9. '
' → logprob: -5.074214935302734
    10. '    
' → logprob: -5.324214935302734

Token 26: ' N' (ID: 478)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.535986602306366
    2. ' N' → logprob: -0.910986602306366
    3. 'not' → logprob: -5.035986423492432
    4. 'N' → logprob: -5.160986423492432
    5. ' ' → logprob: -7.535986423492432
    6. ' ' → logprob: -12.03598690032959
    7. ' (' → logprob: -14.41098690032959
    8. '	N' → logprob: -14.41098690032959
    9. '```' → logprob: -14.53598690032959
    10. '(not' → logprob: -14.66098690032959

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08917587995529175
    2. '==' → logprob: -2.4641759395599365
    3. '=' → logprob: -9.464176177978516
    4. ' <=' → logprob: -9.464176177978516
    5. ' <' → logprob: -10.464176177978516
    6. '<' → logprob: -11.089176177978516
    7. '<=' → logprob: -11.589176177978516
    8. ')' → logprob: -11.714176177978516
    9. ' =' → logprob: -11.714176177978516
    10. ' ' → logprob: -12.589176177978516

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008617527782917023
    2. ' ' → logprob: -4.758617401123047
    3. 'M' → logprob: -13.946117401123047
    4. ' M' → logprob: -14.446117401123047
    5. '```' → logprob: -14.758617401123047
    6. '  ' → logprob: -15.258617401123047
    7. '   ' → logprob: -15.821117401123047
    8. ' ' → logprob: -15.883617401123047
    9. '۰' → logprob: -16.258617401123047
    10. '=' → logprob: -16.508617401123047

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004929834394715726
    2. ' ' → logprob: -7.625493049621582
    3. 'M' → logprob: -13.125493049621582
    4. '```' → logprob: -13.812993049621582
    5. '1' → logprob: -15.250493049621582
    6. '  ' → logprob: -15.312993049621582
    7. '-' → logprob: -15.437993049621582
    8. '   ' → logprob: -15.625493049621582
    9. ' M' → logprob: -16.000492095947266
    10. '    ' → logprob: -16.187992095947266

Token 30: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014196067117154598
    2. ':' → logprob: -4.764195919036865
    3. 'and' → logprob: -5.264195919036865
    4. ' or' → logprob: -8.764196395874023
    5. '   ' → logprob: -9.264196395874023
    6. ' ' → logprob: -9.264196395874023
    7. '    ' → logprob: -11.389196395874023
    8. ' a' → logprob: -11.764196395874023
    9. ' :' → logprob: -11.764196395874023
    10. '	and' → logprob: -12.389196395874023

Token 31: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.575950562953949
    2. 'M' → logprob: -0.825950562953949
    3. ' ' → logprob: -11.700950622558594
    4. '   ' → logprob: -13.575950622558594
    5. '  ' → logprob: -14.450950622558594
    6. '    ' → logprob: -14.700950622558594
    7. ' ' → logprob: -14.825950622558594
    8. '	M' → logprob: -15.700950622558594
    9. '<|end|>' → logprob: -17.575950622558594
    10. '<M' → logprob: -18.200950622558594

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008999789133667946
    2. '==' → logprob: -4.758999824523926
    3. ' ' → logprob: -9.133999824523926
    4. '<|end|>' → logprob: -9.383999824523926
    5. ' ' → logprob: -9.883999824523926
    6. '0' → logprob: -10.008999824523926
    7. '=' → logprob: -10.633999824523926
    8. ')' → logprob: -10.758999824523926
    9. ' =' → logprob: -11.258999824523926
    10. '<|end|>' → logprob: -11.508999824523926

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026300758123397827
    2. ' ' → logprob: -3.6513006687164307
    3. ' ' → logprob: -14.776300430297852
    4. '  ' → logprob: -17.15130043029785
    5. '۰' → logprob: -17.15130043029785
    6. '‌' → logprob: -18.40130043029785
    7. '​' → logprob: -18.52630043029785
    8. '```' → logprob: -18.65130043029785
    9. '<|end|>' → logprob: -18.77630043029785
    10. '   ' → logprob: -18.90130043029785

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '  ' → logprob: -17.500625610351562
    4. '۰' → logprob: -18.000625610351562
    5. '   ' → logprob: -18.125625610351562
    6. '```' → logprob: -18.563125610351562
    7. ' ' → logprob: -19.563125610351562
    8. '０' → logprob: -19.625625610351562
    9. '०' → logprob: -20.125625610351562
    10. '<|end|>' → logprob: -20.188125610351562

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004766671918332577
    2. ':
' → logprob: -8.125476837158203
    3. '   ' → logprob: -9.000476837158203
    4. '       ' → logprob: -10.000476837158203
    5. ' :' → logprob: -12.000476837158203
    6. ':return' → logprob: -13.250476837158203
    7. '):' → logprob: -13.750476837158203
    8. '	break' → logprob: -14.250476837158203
    9. '    ' → logprob: -14.875476837158203
    10. '.' → logprob: -15.000476837158203

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002227452350780368
    2. '   ' → logprob: -6.127227306365967
    3. ':' → logprob: -10.877227783203125
    4. '\n' → logprob: -12.252227783203125
    5. '	break' → logprob: -12.377227783203125
    6. ' break' → logprob: -12.502227783203125
    7. '<|end|>' → logprob: -13.002227783203125
    8. '    ' → logprob: -13.752227783203125
    9. '```' → logprob: -14.002227783203125
    10. '	' → logprob: -14.127227783203125

Token 37: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.29039785265922546
    2. '       ' → logprob: -1.5403978824615479
    3. 'break' (adapté à ' break') → logprob: -3.665397882461548
    4. '   ' → logprob: -4.540397644042969
    5. '	break' → logprob: -6.540397644042969
    6. '_break' → logprob: -11.540397644042969
    7. '```' → logprob: -11.790397644042969
    8. '           ' → logprob: -12.540397644042969
    9. '-break' → logprob: -13.165397644042969
    10. 'Break' → logprob: -13.790397644042969

Token 38: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1900537610054016
    2. '    
' → logprob: -2.190053701400757
    3. '\n' → logprob: -3.190053701400757
    4. '  
' → logprob: -5.815053939819336
    5. '<|end|>' → logprob: -5.815053939819336
    6. '   
' → logprob: -6.065053939819336
    7. '\r' → logprob: -6.190053939819336
    8. '
' → logprob: -6.315053939819336
    9. '  ' → logprob: -6.440053939819336
    10. ')' → logprob: -6.565053939819336

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019799906760454178
    2. '    
' → logprob: -4.019799709320068
    3. '    ' → logprob: -7.519799709320068
    4. '  ' → logprob: -8.769800186157227
    5. '[' → logprob: -8.894800186157227
    6. '```' → logprob: -8.894800186157227
    7. '   
' → logprob: -9.019800186157227
    8. ')' → logprob: -9.019800186157227
    9. '\' → logprob: -10.144800186157227
    10. '\n' → logprob: -10.269800186157227

Token 40: ' P' (ID: 398)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026122048497200012
    2. '    
' → logprob: -4.901122093200684
    3. '[' → logprob: -5.151122093200684
    4. '    ' → logprob: -5.151122093200684
    5. ')' → logprob: -6.651122093200684
    6. '\n' → logprob: -7.026122093200684
    7. ' 
' → logprob: -7.276122093200684
    8. '\' → logprob: -7.651122093200684
    9. ' ' → logprob: -7.651122093200684
    10. '     
' → logprob: -8.151122093200684

Token 41: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5497750639915466
    2. ' =' → logprob: -1.6747751235961914
    3. '=' → logprob: -1.7997751235961914
    4. 'layers' → logprob: -3.9247751235961914
    5. '_' → logprob: -4.674775123596191
    6. 'rice' → logprob: -5.299775123596191
    7. 'rices' → logprob: -5.549775123596191
    8. 'laces' → logprob: -5.674775123596191
    9. '_r' → logprob: -5.924775123596191
    10. ' ' → logprob: -5.924775123596191

Token 42: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.284268856048584
    2. ' []' → logprob: -1.409268856048584
    3. '[]' → logprob: -1.534268856048584
    4. ' list' → logprob: -1.909268856048584
    5. 'list' → logprob: -2.909268856048584
    6. '[' → logprob: -3.409268856048584
    7. '[list' → logprob: -4.409268856048584
    8. '[int' → logprob: -5.159268856048584
    9. '[N' → logprob: -6.034268856048584
    10. '[input' → logprob: -7.034268856048584

Token 43: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4447946846485138
    2. '0' → logprob: -1.0697946548461914
    3. 'list' → logprob: -4.569794654846191
    4. ' int' → logprob: -5.694794654846191
    5. ']' → logprob: -7.069794654846191
    6. ']int' → logprob: -7.819794654846191
    7. ' list' → logprob: -8.444794654846191
    8. 'False' → logprob: -8.944794654846191
    9. 'map' → logprob: -9.069794654846191
    10. '*' → logprob: -9.194794654846191

Token 44: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4186418056488037
    2. '(input' → logprob: -1.1686418056488037
    3. '()' → logprob: -4.043642044067383
    4. '(x' → logprob: -5.043642044067383
    5. ']' → logprob: -5.793642044067383
    6. '()]' → logprob: -5.918642044067383
    7. '(i' → logprob: -6.793642044067383
    8. ')' → logprob: -9.043642044067383
    9. 'input' → logprob: -9.293642044067383
    10. '(
' → logprob: -9.793642044067383

Token 45: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006756199873052537
    2. '()' → logprob: -7.625675678253174
    3. ')' → logprob: -9.375675201416016
    4. '()]' → logprob: -9.875675201416016
    5. '().' → logprob: -10.250675201416016
    6. '())
' → logprob: -11.750675201416016
    7. ')]' → logprob: -13.000675201416016
    8. ' ())' → logprob: -13.000675201416016
    9. '()))' → logprob: -14.000675201416016
    10. '()),' → logprob: -14.625675201416016

Token 46: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9248809218406677
    2. '()' → logprob: -1.0498809814453125
    3. 'for' → logprob: -1.4248809814453125
    4. ')' → logprob: -5.5498809814453125
    5. '   ' → logprob: -6.0498809814453125
    6. ']' → logprob: -6.2998809814453125
    7. '()]' → logprob: -6.4248809814453125
    8. '(' → logprob: -6.6748809814453125
    9. '	for' → logprob: -7.2998809814453125
    10. ' ()' → logprob: -8.424880981445312

Token 47: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2444354146718979
    2. ' range' → logprob: -2.3694353103637695
    3. ' ' → logprob: -2.6194353103637695
    4. '_' → logprob: -2.9944353103637695
    5. ' i' → logprob: -8.36943531036377
    6. ' ▁' → logprob: -10.24443531036377
    7. 'range' → logprob: -10.49443531036377
    8. ' ' → logprob: -10.86943531036377
    9. '_range' → logprob: -11.11943531036377
    10. ' I' → logprob: -11.49443531036377

Token 48: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012048733187839389
    2. ' range' → logprob: -6.751204967498779
    3. 'in' → logprob: -11.001204490661621
    4. 'ange' → logprob: -12.376204490661621
    5. '	range' → logprob: -12.376204490661621
    6. '(range' → logprob: -12.876204490661621
    7. '_' → logprob: -12.876204490661621
    8. ' in' → logprob: -13.251204490661621
    9. '  ' → logprob: -13.751204490661621
    10. '   ' → logprob: -14.376204490661621

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028796528931707144
    2. ' range' → logprob: -5.877879619598389
    3. ' ' → logprob: -10.877880096435547
    4. '   ' → logprob: -11.002880096435547
    5. '(range' → logprob: -11.752880096435547
    6. '  ' → logprob: -12.002880096435547
    7. '	range' → logprob: -12.127880096435547
    8. '[' → logprob: -12.252880096435547
    9. 'rang' → logprob: -12.627880096435547
    10. ')' → logprob: -12.877880096435547

Token 50: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0002814775798469782
    2. '(' → logprob: -8.37528133392334
    3. '(N' → logprob: -10.00028133392334
    4. ' (' → logprob: -12.50028133392334
    5. 'M' → logprob: -14.12528133392334
    6. '(m' → logprob: -14.87528133392334
    7. ' M' → logprob: -15.25028133392334
    8. ')' → logprob: -16.250282287597656
    9. '(
' → logprob: -16.500282287597656
    10. '   ' → logprob: -17.125282287597656

Token 51: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005304435268044472
    2. ']' → logprob: -5.880304336547852
    3. ')' → logprob: -6.005304336547852
    4. ' )' → logprob: -11.505304336547852
    5. ')]
' → logprob: -12.130304336547852
    6. ')
' → logprob: -13.005304336547852
    7. ' ]' → logprob: -13.130304336547852
    8. '   ' → logprob: -13.255304336547852
    9. '])]' → logprob: -13.505304336547852
    10. ']
' → logprob: -13.755304336547852

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4213801324367523
    2. '<|end|>' → logprob: -1.9213801622390747
    3. ' ' → logprob: -2.671380043029785
    4. 'P' → logprob: -3.671380043029785
    5. '
' → logprob: -3.796380043029785
    6. '    
' → logprob: -4.296380043029785
    7. '    ' → logprob: -4.421380043029785
    8. '  ' → logprob: -4.921380043029785
    9. 'M' → logprob: -5.671380043029785
    10. '[' → logprob: -5.796380043029785

Token 53: ' dp' (ID: 21546)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.4688482284545898
    2. 'dp' (adapté à ' dp') → logprob: -1.8438482284545898
    3. 'answer' → logprob: -2.34384822845459
    4. 'count' → logprob: -2.96884822845459
    5. 'DP' → logprob: -3.09384822845459
    6. 'result' → logprob: -3.46884822845459
    7. 'Q' → logprob: -3.46884822845459
    8. 'D' → logprob: -3.46884822845459
    9. 'sum' → logprob: -3.59384822845459
    10. 'C' → logprob: -3.59384822845459

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004056910052895546
    2. '=' → logprob: -5.754056930541992
    3. '[' → logprob: -7.129056930541992
    4. ' ' → logprob: -9.879056930541992
    5. ' =[' → logprob: -11.254056930541992
    6. '_' → logprob: -12.754056930541992
    7. '0' → logprob: -13.629056930541992
    8. '=[' → logprob: -13.754056930541992
    9. ']' → logprob: -13.879056930541992
    10. '.' → logprob: -14.129056930541992

Token 55: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2261510193347931
    2. ' [' → logprob: -1.6011509895324707
    3. '[-' → logprob: -8.101151466369629
    4. '[[' → logprob: -8.101151466369629
    5. ' [[' → logprob: -9.476151466369629
    6. ' [-' → logprob: -10.976151466369629
    7. '[len' → logprob: -11.601151466369629
    8. '[N' → logprob: -11.976151466369629
    9. '[M' → logprob: -12.351151466369629
    10. '[int' → logprob: -12.726151466369629

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.633853652398102e-05
    2. '(' → logprob: -10.375056266784668
    3. ' ' → logprob: -11.000056266784668
    4. '-' → logprob: -12.250056266784668
    5. '}' → logprob: -13.875056266784668
    6. 'fro' → logprob: -14.000056266784668
    7. 'tuple' → logprob: -14.750056266784668
    8. '{' → logprob: -15.125056266784668
    9. '   ' → logprob: -15.250056266784668
    10. '()' → logprob: -15.750056266784668

Token 57: '}
' (ID: 739)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0043496559374034405
    2. '}' → logprob: -5.504349708557129
    3. ' :' → logprob: -9.254349708557129
    4. '0' → logprob: -9.504349708557129
    5. ':true' → logprob: -10.629349708557129
    6. ' }' → logprob: -11.129349708557129
    7. '1' → logprob: -11.254349708557129
    8. '}:' → logprob: -11.379349708557129
    9. ',' → logprob: -12.129349708557129
    10. ' ' → logprob: -13.004349708557129

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1076345443725586
    2. '
' → logprob: -1.3576345443725586
    3. '<|end|>' → logprob: -1.6076345443725586
    4. '    
' → logprob: -2.7326345443725586
    5. ' ' → logprob: -3.1076345443725586
    6. ' 
' → logprob: -3.3576345443725586
    7. ' for' → logprob: -4.107634544372559
    8. '	
' → logprob: -4.857634544372559
    9. '\n' → logprob: -4.857634544372559
    10. '    ' → logprob: -5.107634544372559

Token 59: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6834326982498169
    2. ' for' → logprob: -0.8084326982498169
    3. ' ' → logprob: -3.5584325790405273
    4. '   ' → logprob: -4.933432579040527
    5. '	for' → logprob: -5.808432579040527
    6. '<|end|>' → logprob: -5.933432579040527
    7. ' 
' → logprob: -6.058432579040527
    8. '    ' → logprob: -6.183432579040527
    9. '    
' → logprob: -6.433432579040527
    10. '
' → logprob: -7.183432579040527

Token 60: ' _' (ID: 1175)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.28217223286628723
    2. 'p' → logprob: -1.4071722030639648
    3. ' price' → logprob: -7.782172203063965
    4. 'price' → logprob: -8.532172203063965
    5. ' coin' → logprob: -9.657172203063965
    6. ' ' → logprob: -9.782172203063965
    7. ' cost' → logprob: -10.032172203063965
    8. 'cost' → logprob: -10.344672203063965
    9. 'c' → logprob: -10.407172203063965
    10. ' c' → logprob: -10.719672203063965

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010715280659496784
    2. 'in' → logprob: -5.135715484619141
    3. 'p' → logprob: -6.260715484619141
    4. 'P' → logprob: -7.385715484619141
    5. 'x' → logprob: -7.635715484619141
    6. ' p' → logprob: -7.885715484619141
    7. ' ' → logprob: -8.01071548461914
    8. ' P' → logprob: -8.26071548461914
    9. ',' → logprob: -8.38571548461914
    10. 'i' → logprob: -9.38571548461914

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18201066553592682
    2. 'P' → logprob: -2.1820106506347656
    3. ' range' → logprob: -2.9320106506347656
    4. ' P' → logprob: -8.682010650634766
    5. '(range' → logprob: -10.307010650634766
    6. 'p' → logprob: -10.807010650634766
    7. 'M' → logprob: -11.369510650634766
    8. 'Range' → logprob: -11.557010650634766
    9. '	range' → logprob: -11.619510650634766
    10. '[P' → logprob: -12.057010650634766

Token 63: '(' (ID: 7)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.006954300217330456
    2. ' M' → logprob: -5.631954193115234
    3. '(' → logprob: -6.006954193115234
    4. 'M' → logprob: -7.506954193115234
    5. ' (' → logprob: -8.506954193115234
    6. '   ' → logprob: -9.381954193115234
    7. '(N' → logprob: -11.256954193115234
    8. ' ' → logprob: -11.506954193115234
    9. ')' → logprob: -12.131954193115234
    10. '  ' → logprob: -12.256954193115234

Token 64: '4' (ID: 19)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005107218865305185
    2. 'N' → logprob: -5.380107402801514
    3. ' M' → logprob: -7.755107402801514
    4. '   ' → logprob: -10.630106925964355
    5. 'len' → logprob: -11.255106925964355
    6. 'P' → logprob: -11.755106925964355
    7. ' ' → logprob: -12.755106925964355
    8. ' N' → logprob: -13.005106925964355
    9. '  ' → logprob: -13.380106925964355
    10. '	M' → logprob: -13.380106925964355

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05325927585363388
    2. ' ):' → logprob: -3.0532593727111816
    3. '):
' → logprob: -6.428259372711182
    4. ')' → logprob: -6.553259372711182
    5. ' M' → logprob: -7.803259372711182
    6. ' )' → logprob: -8.303258895874023
    7. ':' → logprob: -8.428258895874023
    8. '*M' → logprob: -8.678258895874023
    9. '   ' → logprob: -8.928258895874023
    10. 'M' → logprob: -9.053258895874023

Token 66: '       ' (ID: 309)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5507758259773254
    2. '    ' → logprob: -1.4257757663726807
    3. '   ' → logprob: -2.0507757663726807
    4. 'new' → logprob: -3.9257757663726807
    5. '       ' → logprob: -4.55077600479126
    6. ' next' → logprob: -4.67577600479126
    7. ' dp' → logprob: -5.42577600479126
    8. ' {' → logprob: -5.92577600479126
    9. '{' → logprob: -6.42577600479126
    10. ' ' → logprob: -6.67577600479126

Token 67: ' nd' (ID: 5914)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6417332887649536
    2. 'next' → logprob: -1.1417332887649536
    3. 'temp' → logprob: -2.891733169555664
    4. 'nd' (adapté à ' nd') → logprob: -3.016733169555664
    5. ' new' → logprob: -4.016733169555664
    6. ' next' → logprob: -4.141733169555664
    7. 'tmp' → logprob: -4.766733169555664
    8. 'dp' → logprob: -5.891733169555664
    9. ' nd' → logprob: -6.141733169555664
    10. 'n' → logprob: -7.266733169555664

Token 68: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0062656584195792675
    2. '=' → logprob: -5.131265640258789
    3. ' =' → logprob: -8.006265640258789
    4. 'P' → logprob: -13.756265640258789
    5. '=p' → logprob: -14.131265640258789
    6. 'o' → logprob: -14.256265640258789
    7. ' p' → logprob: -15.256265640258789
    8. ' ' → logprob: -15.506265640258789
    9. '	p' → logprob: -16.63126564025879
    10. '=set' → logprob: -16.88126564025879

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269380897283554
    2. '=' → logprob: -2.1269381046295166
    3. '=set' → logprob: -11.751937866210938
    4. ' ' → logprob: -13.501937866210938
    5. ' ={' → logprob: -15.126937866210938
    6. ',' → logprob: -16.126937866210938
    7. '={}' → logprob: -16.251937866210938
    8. '＝' → logprob: -16.501937866210938
    9. '=[]' → logprob: -16.876937866210938
    10. 's' → logprob: -17.001937866210938

Token 70: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0028186701238155365
    2. ' set' → logprob: -5.877818584442139
    3. '{}' → logprob: -11.877819061279297
    4. '{' → logprob: -12.127819061279297
    5. ' ' → logprob: -14.627819061279297
    6. '=set' → logprob: -15.002819061279297
    7. 'se' → logprob: -15.252819061279297
    8. '	set' → logprob: -16.252819061279297
    9. ' {' → logprob: -16.377819061279297
    10. '[]' → logprob: -16.627819061279297

Token 71: '(dp' (ID: 68843)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00863336119800806
    2. '()
' → logprob: -4.758633136749268
    3. '()

' → logprob: -11.258633613586426
    4. '()
' → logprob: -13.133633613586426
    5. '(dp' → logprob: -14.008633613586426
    6. '()\' → logprob: -14.133633613586426
    7. '(' → logprob: -14.758633613586426
    8. '()`' → logprob: -14.758633613586426
    9. ' ()' → logprob: -14.883633613586426
    10. '()]' → logprob: -15.258633613586426

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6949267983436584
    2. ')
' → logprob: -0.6949267983436584
    3. ' )
' → logprob: -7.569926738739014
    4. ' )' → logprob: -7.694926738739014
    5. '   ' → logprob: -7.944926738739014
    6. '|' → logprob: -8.819927215576172
    7. ')
' → logprob: -9.069927215576172
    8. '.union' → logprob: -9.819927215576172
    9. ' |' → logprob: -10.444927215576172
    10. '       ' → logprob: -10.569927215576172

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.151810884475708
    2. '   ' → logprob: -2.151810884475708
    3. ' for' → logprob: -3.901810884475708
    4. 'for' → logprob: -5.526810646057129
    5. ' ' → logprob: -9.026810646057129
    6. '  ' → logprob: -10.026810646057129
    7. '    ' → logprob: -10.151810646057129
    8. '	for' → logprob: -10.151810646057129
    9. '<|end|>' → logprob: -10.276810646057129
    10. '           ' → logprob: -10.901810646057129

Token 74: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5334532260894775
    2. ' for' → logprob: -1.5334532260894775
    3. '   ' → logprob: -1.7834532260894775
    4. '       ' → logprob: -3.5334532260894775
    5. ' ' → logprob: -8.533452987670898
    6. '	for' → logprob: -9.283452987670898
    7. '  ' → logprob: -10.033452987670898
    8. '    ' → logprob: -11.033452987670898
    9. 'dp' → logprob: -12.158452987670898
    10. '     ' → logprob: -12.533452987670898

Token 75: ' s' (ID: 265)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5016574263572693
    2. ' p' → logprob: -1.126657485961914
    3. 'x' → logprob: -3.501657485961914
    4. ' x' → logprob: -4.876657485961914
    5. 'v' → logprob: -5.126657485961914
    6. 'm' → logprob: -5.626657485961914
    7. 's' → logprob: -5.751657485961914
    8. 'd' → logprob: -6.251657485961914
    9. ' v' → logprob: -6.751657485961914
    10. 't' → logprob: -6.751657485961914

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033845894038677216
    2. 'in' → logprob: -3.408845901489258
    3. ' ' → logprob: -9.283845901489258
    4. 's' → logprob: -9.783845901489258
    5. '   ' → logprob: -12.158845901489258
    6. '	in' → logprob: -12.283845901489258
    7. '_in' → logprob: -12.283845901489258
    8. ',' → logprob: -12.408845901489258
    9. '  ' → logprob: -12.533845901489258
    10. '+' → logprob: -12.658845901489258

Token 77: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6959155797958374
    2. ' dp' → logprob: -0.6959155797958374
    3. 'P' → logprob: -6.320915699005127
    4. ' P' → logprob: -7.070915699005127
    5. ' ' → logprob: -10.195915222167969
    6. 'p' → logprob: -10.945915222167969
    7. '	dp' → logprob: -11.195915222167969
    8. '(dp' → logprob: -11.445915222167969
    9. ' p' → logprob: -11.695915222167969
    10. '   ' → logprob: -12.195915222167969

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02985392138361931
    2. ':
' → logprob: -3.9048538208007812
    3. '           ' → logprob: -5.279853820800781
    4. '+' → logprob: -6.529853820800781
    5. '       ' → logprob: -6.529853820800781
    6. '   ' → logprob: -7.779853820800781
    7. '.union' → logprob: -8.779853820800781
    8. ',' → logprob: -9.029853820800781
    9. ':
' → logprob: -9.404853820800781
    10. ' :' → logprob: -9.404853820800781

Token 79: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02574336528778076
    2. ' for' → logprob: -4.15074348449707
    3. ',' → logprob: -5.77574348449707
    4. '       ' → logprob: -5.90074348449707
    5. ':' → logprob: -7.27574348449707
    6. '<|end|>' → logprob: -7.40074348449707
    7. '+' → logprob: -7.90074348449707
    8. ':
' → logprob: -7.90074348449707
    9. '	       ' → logprob: -8.52574348449707
    10. '   ' → logprob: -8.52574348449707

Token 80: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13814009726047516
    2. 'for' (adapté à ' for') → logprob: -2.1381402015686035
    3. '           ' → logprob: -5.2631402015686035
    4. '               ' → logprob: -5.5131402015686035
    5. ' nd' → logprob: -6.6381402015686035
    6. '   ' → logprob: -8.388139724731445
    7. 'nd' → logprob: -9.138139724731445
    8. ' if' → logprob: -9.263139724731445
    9. ' ' → logprob: -9.888139724731445
    10. '            ' → logprob: -10.138139724731445

Token 81: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1609666496515274
    2. ' p' → logprob: -1.9109666347503662
    3. 'v' → logprob: -8.410966873168945
    4. 'c' → logprob: -8.785966873168945
    5. 'x' → logprob: -9.285966873168945
    6. '   ' → logprob: -10.160966873168945
    7. 'coin' → logprob: -10.785966873168945
    8. 'price' → logprob: -10.910966873168945
    9. ' ' → logprob: -11.035966873168945
    10. 'num' → logprob: -11.160966873168945

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04974439740180969
    2. 'in' → logprob: -3.0497443675994873
    3. ' ' → logprob: -7.049744606018066
    4. '   ' → logprob: -9.299744606018066
    5. 'i' → logprob: -9.924744606018066
    6. '  ' → logprob: -10.424744606018066
    7. 'p' → logprob: -10.799744606018066
    8. ' p' → logprob: -10.924744606018066
    9. 'o' → logprob: -11.674744606018066
    10. 's' → logprob: -11.799744606018066

Token 83: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.07890311628580093
    2. ' P' → logprob: -2.5789031982421875
    3. ' ' → logprob: -12.203903198242188
    4. '[P' → logprob: -12.328903198242188
    5. '(P' → logprob: -13.328903198242188
    6. 'p' → logprob: -14.328903198242188
    7. '\P' → logprob: -15.453903198242188
    8. '   ' → logprob: -15.578903198242188
    9. '<P' → logprob: -15.703903198242188
    10. '	P' → logprob: -15.828903198242188

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14773398637771606
    2. ':
' → logprob: -2.0227339267730713
    3. '               ' → logprob: -5.39773416519165
    4. ':
' → logprob: -7.77273416519165
    5. '           ' → logprob: -9.647733688354492
    6. ':

' → logprob: -11.147733688354492
    7. ' :' → logprob: -12.772733688354492
    8. '              ' → logprob: -13.022733688354492
    9. ' :
' → logprob: -13.272733688354492
    10. '                   ' → logprob: -13.397733688354492

Token 85: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016622049733996391
    2. ':' → logprob: -7.251662254333496
    3. ':
' → logprob: -7.376662254333496
    4. '           ' → logprob: -8.251662254333496
    5. '              ' → logprob: -11.126662254333496
    6. '                   ' → logprob: -11.126662254333496
    7. '                
' → logprob: -11.876662254333496
    8. ',' → logprob: -12.126662254333496
    9. '             ' → logprob: -12.876662254333496
    10. ' :' → logprob: -12.876662254333496

Token 86: ' if' (ID: 538)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.1125602051615715
    2. '                   ' → logprob: -2.487560272216797
    3. ' if' → logprob: -3.862560272216797
    4. 'nd' → logprob: -6.362560272216797
    5. 'if' (adapté à ' if') → logprob: -8.112560272216797
    6. '                       ' → logprob: -9.112560272216797
    7. '               ' → logprob: -9.987560272216797
    8. '   ' → logprob: -10.112560272216797
    9. '(nd' → logprob: -10.987560272216797
    10. '                    ' → logprob: -11.112560272216797

Token 87: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6329038739204407
    2. ' s' → logprob: -0.7579038739204407
    3. ' ' → logprob: -9.382904052734375
    4. '0' → logprob: -9.382904052734375
    5. '(s' → logprob: -10.507904052734375
    6. ' p' → logprob: -10.882904052734375
    7. 'p' → logprob: -11.132904052734375
    8. '	s' → logprob: -11.132904052734375
    9. '_s' → logprob: -11.632904052734375
    10. '   ' → logprob: -12.007904052734375

Token 88: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3577476441860199
    2. '+' → logprob: -1.4827476739883423
    3. '+p' → logprob: -2.6077475547790527
    4. '+s' → logprob: -11.482748031616211
    5. ' ' → logprob: -12.482748031616211
    6. '＋' → logprob: -12.607748031616211
    7. '   ' → logprob: -12.732748031616211
    8. ' |' → logprob: -13.232748031616211
    9. '<p' → logprob: -13.232748031616211
    10. ' ' → logprob: -13.607748031616211

Token 89: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03804229199886322
    2. ' p' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.663042068481445
    4. '<p' → logprob: -16.538042068481445
    5. '	p' → logprob: -16.663042068481445
    6. '   ' → logprob: -16.788042068481445
    7. '*p' → logprob: -17.038042068481445
    8. '```' → logprob: -17.038042068481445
    9. '(p' → logprob: -17.163042068481445
    10. '[' → logprob: -17.788042068481445

Token 90: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16025316715240479
    2. '<=' → logprob: -1.9102531671524048
    3. ' ' → logprob: -11.660253524780273
    4. ' not' → logprob: -12.160253524780273
    5. ')' → logprob: -12.660253524780273
    6. ')<=' → logprob: -13.035253524780273
    7. ' <' → logprob: -13.285253524780273
    8. '<' → logprob: -13.660253524780273
    9. ' ==' → logprob: -13.660253524780273
    10. '[' → logprob: -13.785253524780273

Token 91: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.006280821282416582
    2. ' M' → logprob: -5.131280899047852
    3. '   ' → logprob: -8.381280899047852
    4. ' ' → logprob: -10.381280899047852
    5. '    ' → logprob: -11.256280899047852
    6. '100' → logprob: -11.381280899047852
    7. '200' → logprob: -11.631280899047852
    8. '  ' → logprob: -12.256280899047852
    9. '400' → logprob: -12.256280899047852
    10. '23' → logprob: -12.256280899047852

Token 92: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5762742757797241
    2. ':' → logprob: -0.8262742757797241
    3. '           ' → logprob: -9.326273918151855
    4. ' :
' → logprob: -9.451273918151855
    5. ':
' → logprob: -9.826273918151855
    6. '               ' → logprob: -10.451273918151855
    7. ' and' → logprob: -10.701273918151855
    8. '                   ' → logprob: -10.826273918151855
    9. ':

' → logprob: -11.076273918151855
    10. ' :' → logprob: -11.701273918151855

Token 93: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018392755882814527
    2. '           ' → logprob: -7.1268391609191895
    3. '               ' → logprob: -7.2518391609191895
    4. '                       ' → logprob: -9.001839637756348
    5. ':' → logprob: -9.376839637756348
    6. '                  ' → logprob: -10.751839637756348
    7. ':
' → logprob: -10.751839637756348
    8. '                    
' → logprob: -10.751839637756348
    9. ',' → logprob: -11.251839637756348
    10. '                    ' → logprob: -12.001839637756348

Token 94: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.011948520317673683
    2. '                       ' → logprob: -4.511948585510254
    3. 'nd' (adapté à ' nd') → logprob: -7.636948585510254
    4. '                   ' → logprob: -8.261948585510254
    5. '
' → logprob: -9.886948585510254
    6. '(nd' → logprob: -11.136948585510254
    7. '               ' → logprob: -11.261948585510254
    8. ' dp' → logprob: -11.386948585510254
    9. '                    ' → logprob: -11.511948585510254
    10. '                        
' → logprob: -11.761948585510254

Token 95: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002900565741583705
    2. 'P' → logprob: -8.250289916992188
    3. '.' → logprob: -11.250289916992188
    4. 'dp' → logprob: -11.750289916992188
    5. '.p' → logprob: -12.375289916992188
    6. '           ' → logprob: -14.375289916992188
    7. '   ' → logprob: -14.500289916992188
    8. '                   ' → logprob: -14.875289916992188
    9. '_p' → logprob: -15.000289916992188
    10. '.add' → logprob: -15.000289916992188

Token 96: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0015359314857050776
    2. '.' → logprob: -6.501535892486572
    3. ' .' → logprob: -10.37653636932373
    4. '.update' → logprob: -13.00153636932373
    5. '.ad' → logprob: -17.001535415649414
    6. '.Add' → logprob: -17.376535415649414
    7. 'add' → logprob: -17.751535415649414
    8. '.a' → logprob: -18.251535415649414
    9. '   ' → logprob: -18.501535415649414
    10. '.=' → logprob: -19.001535415649414

Token 97: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00020187153131701052
    2. '(' → logprob: -8.625202178955078
    3. ' (' → logprob: -10.750202178955078
    4. 's' → logprob: -14.375202178955078
    5. ' s' → logprob: -16.250202178955078
    6. '((' → logprob: -16.500202178955078
    7. '(p' → logprob: -17.625202178955078
    8. '(
' → logprob: -17.625202178955078
    9. '(n' → logprob: -19.125202178955078
    10. '(S' → logprob: -19.250202178955078

Token 98: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.24622488021850586
    2. '+' → logprob: -1.9962248802185059
    3. '+p' → logprob: -2.496224880218506
    4. ' ' → logprob: -12.621225357055664
    5. '+s' → logprob: -13.371225357055664
    6. '+
' → logprob: -13.746225357055664
    7. '+n' → logprob: -13.996225357055664
    8. ' +
' → logprob: -14.121225357055664
    9. ' ' → logprob: -14.121225357055664
    10. '   ' → logprob: -14.371225357055664

Token 99: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009759863838553429
    2. ' p' → logprob: -4.634759902954102
    3. ' ' → logprob: -13.884759902954102
    4. '                   ' → logprob: -13.884759902954102
    5. '	p' → logprob: -14.884759902954102
    6. '   ' → logprob: -15.009759902954102
    7. '<p' → logprob: -15.822259902954102
    8. ')p' → logprob: -15.822259902954102
    9. '               ' → logprob: -15.947259902954102
    10. ')' → logprob: -16.0722599029541

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4014545977115631
    2. ')
' → logprob: -1.1514545679092407
    3. '       ' → logprob: -4.276454448699951
    4. ')
' → logprob: -7.901454448699951
    5. '   ' → logprob: -8.90145492553711
    6. '               ' → logprob: -10.27645492553711
    7. ')

' → logprob: -10.90145492553711
    8. ' )
' → logprob: -12.02645492553711
    9. ' )' → logprob: -12.52645492553711
    10. ')return' → logprob: -12.65145492553711

Token 101: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6981551051139832
    2. '       ' → logprob: -0.6981551051139832
    3. '
' → logprob: -5.823154926300049
    4. 'dp' → logprob: -6.323154926300049
    5. ' dp' → logprob: -8.948155403137207
    6. '```' → logprob: -10.073155403137207
    7. '    
' → logprob: -10.698155403137207
    8. '           ' → logprob: -11.573155403137207
    9. '	dp' → logprob: -11.573155403137207
    10. '        
' → logprob: -11.698155403137207

Token 102: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7149607539176941
    2. 'dp' (adapté à ' dp') → logprob: -0.7149607539176941
    3. ' dp' → logprob: -3.839960813522339
    4. '	dp' → logprob: -9.839961051940918
    5. '
' → logprob: -10.839961051940918
    6. '       ' → logprob: -12.589961051940918
    7. '(dp' → logprob: -12.964961051940918
    8. '```' → logprob: -13.839961051940918
    9. '  ' → logprob: -13.964961051940918
    10. ' ' → logprob: -14.089961051940918

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975071594119072
    2. ' =' → logprob: -3.5297508239746094
    3. '=

' → logprob: -16.15475082397461
    4. '＝' → logprob: -16.27975082397461
    5. '=
' → logprob: -17.65475082397461
    6. ' ' → logprob: -18.15475082397461
    7. ',' → logprob: -18.27975082397461
    8. '=}' → logprob: -19.27975082397461
    9. ' =
' → logprob: -19.65475082397461
    10. '.=' → logprob: -20.02975082397461

Token 104: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.42878055572509766
    2. ' nd' → logprob: -1.0537805557250977
    3. 'n' → logprob: -10.803780555725098
    4. '(nd' → logprob: -11.428780555725098
    5. '```' → logprob: -12.303780555725098
    6. ' ' → logprob: -12.366280555725098
    7. '_nd' → logprob: -12.366280555725098
    8. ' n' → logprob: -12.616280555725098
    9. '   ' → logprob: -12.741280555725098
    10. 'ndi' → logprob: -12.803780555725098

Token 105: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. '{' → logprob: -15.875
    3. ' p' → logprob: -17.25
    4. '[' → logprob: -17.75
    5. '[p' → logprob: -17.75
    6. '
' → logprob: -17.875
    7. 'dp' → logprob: -18.0
    8. '	p' → logprob: -18.0
    9. '```' → logprob: -18.0
    10. 'п' → logprob: -18.25

Token 106: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16360026597976685
    2. '   ' → logprob: -2.413600206375122
    3. '
' → logprob: -2.913600206375122
    4. '    
' → logprob: -5.163600444793701
    5. '<|end|>' → logprob: -7.288600444793701
    6. ' print' → logprob: -8.413599967956543
    7. '```' → logprob: -8.413599967956543
    8. '  
' → logprob: -9.288599967956543
    9. '        
' → logprob: -9.663599967956543
    10. ' 
' → logprob: -10.663599967956543

Token 107: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3640320301055908
    2. '   ' → logprob: -1.2390320301055908
    3. '
' → logprob: -4.489031791687012
    4. '    
' → logprob: -5.614031791687012
    5. '```' → logprob: -7.989031791687012
    6. ' print' → logprob: -9.739031791687012
    7. '<|end|>' → logprob: -10.114031791687012
    8. '  
' → logprob: -10.114031791687012
    9. '#print' → logprob: -10.364031791687012
    10. '        
' → logprob: -10.614031791687012

Token 108: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001365116098895669
    2. '   ' → logprob: -6.6263651847839355
    3. '    
' → logprob: -11.126364707946777
    4. ' print' → logprob: -11.251364707946777
    5. '```' → logprob: -12.751364707946777
    6. '
' → logprob: -13.126364707946777
    7. '#print' → logprob: -13.251364707946777
    8. 'max' → logprob: -13.626364707946777
    9. 'if' → logprob: -14.251364707946777
    10. 'answer' → logprob: -14.376364707946777

Token 109: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.006981056649237871
    2. '(' → logprob: -5.006980895996094
    3. '(min' → logprob: -8.506980895996094
    4. '(len' → logprob: -10.131980895996094
    5. 'max' → logprob: -11.256980895996094
    6. '()' → logprob: -12.006980895996094
    7. ' (' → logprob: -12.881980895996094
    8. '(sorted' → logprob: -14.006980895996094
    9. '(sum' → logprob: -14.756980895996094
    10. ' max' → logprob: -15.131980895996094

Token 110: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.081584716506768e-05
    2. '(' → logprob: -10.875020980834961
    3. 'dp' → logprob: -14.000020980834961
    4. ')' → logprob: -14.250020980834961
    5. ' (' → logprob: -16.00002098083496
    6. ' dp' → logprob: -16.87502098083496
    7. '(s' → logprob: -16.87502098083496
    8. '(d' → logprob: -16.87502098083496
    9. '	dp' → logprob: -16.87502098083496
    10. '(df' → logprob: -18.00002098083496

Token 111: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006738462019711733
    2. ')' → logprob: -5.006738662719727
    3. ' ))' → logprob: -11.506738662719727
    4. '))
' → logprob: -11.756738662719727
    5. ')))' → logprob: -12.506738662719727
    6. '()))' → logprob: -14.256738662719727
    7. ' )' → logprob: -15.131738662719727
    8. ')}' → logprob: -15.381738662719727
    9. '})' → logprob: -16.381738662719727
    10. ')
' → logprob: -16.756738662719727


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 45.87%
Précision adaptée (1ère position): 48.62%
Précision (top 10): 88.99%
================================================================================
