================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    line = line.strip()
    if line == '':
        continue
    N = int(line)
    if N == 0:
        print(0)
        continue
    times_line = sys.stdin.readline().strip()
    times = list(map(int, times_line.split()))
    times.sort()
    total = 0
    current = 0
    for t in times:
        current += t
        total += current
    print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0035423364024609327
    2. '  ' → logprob: -6.003542423248291
    3. ' i' → logprob: -6.878542423248291
    4. ' )' → logprob: -12.253541946411133
    5. '```' → logprob: -12.503541946411133
    6. ' space' → logprob: -12.628541946411133
    7. 'i' → logprob: -13.128541946411133
    8. ' ▁' → logprob: -13.378541946411133
    9. ' n' → logprob: -13.378541946411133
    10. ' ```' → logprob: -13.503541946411133

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14993883669376373
    2. 'in' → logprob: -2.1499388217926025
    3. ':' → logprob: -4.399939060211182
    4. '[' → logprob: -5.149939060211182
    5. '[]' → logprob: -7.524939060211182
    6. '[:]' → logprob: -7.649939060211182
    7. ' ' → logprob: -7.899939060211182
    8. '[line' → logprob: -7.899939060211182
    9. 'import' → logprob: -8.024938583374023
    10. '```' → logprob: -8.274938583374023

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.006182845216244459
    2. 'sys' → logprob: -5.131182670593262
    3. '=sys' → logprob: -9.256182670593262
    4. ' ' → logprob: -9.756182670593262
    5. '(sys' → logprob: -10.131182670593262
    6. '	sys' → logprob: -10.506182670593262
    7. ' iter' → logprob: -11.506182670593262
    8. ' ' → logprob: -11.631182670593262
    9. ' open' → logprob: -12.506182670593262
    10. '```' → logprob: -12.756182670593262

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.032781992107629776
    2. '.stdin' → logprob: -3.9077820777893066
    3. '.readline' → logprob: -4.782782077789307
    4. ' .' → logprob: -6.532782077789307
    5. '.argv' → logprob: -6.907782077789307
    6. '.stdout' → logprob: -7.282782077789307
    7. '.readlines' → logprob: -8.282781600952148
    8. '.stderr' → logprob: -9.657781600952148
    9. '.`' → logprob: -10.157781600952148
    10. '```' → logprob: -10.157781600952148

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.958325295476243e-05
    2. ':
' → logprob: -10.750079154968262
    3. ' :' → logprob: -11.375079154968262
    4. '):' → logprob: -11.500079154968262
    5. ':**' → logprob: -11.500079154968262
    6. '[:]' → logprob: -11.875079154968262
    7. '>:' → logprob: -12.000079154968262
    8. '':' → logprob: -12.625079154968262
    9. '():' → logprob: -13.625079154968262
    10. '':'' → logprob: -13.625079154968262

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003718723077327013
    2. ' print' → logprob: -6.128718852996826
    3. '    
' → logprob: -6.753718852996826
    4. 'print' → logprob: -8.628718376159668
    5. '    ' → logprob: -9.628718376159668
    6. ' if' → logprob: -10.128718376159668
    7. ' readline' → logprob: -11.003718376159668
    8. '```' → logprob: -11.628718376159668
    9. ' ' → logprob: -11.878718376159668
    10. ' line' → logprob: -12.128718376159668

Token 10: ' line' (ID: 2543)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4089060425758362
    2. '   ' → logprob: -1.1589059829711914
    3. ' print' → logprob: -4.033905982971191
    4. ' line' → logprob: -6.658905982971191
    5. '    ' → logprob: -6.783905982971191
    6. 'pass' → logprob: -7.158905982971191
    7. 'line' (adapté à ' line') → logprob: -7.783905982971191
    8. ' pass' → logprob: -8.658905982971191
    9. ' if' → logprob: -9.033905982971191
    10. 'if' → logprob: -10.158905982971191

Token 11: ' =' (ID: 314)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.15982908010482788
    2. '.' → logprob: -2.0348291397094727
    3. '.rstrip' → logprob: -4.409829139709473
    4. '.split' → logprob: -5.659829139709473
    5. '.readline' → logprob: -7.659829139709473
    6. '<|end|>' → logprob: -8.159829139709473
    7. '.startswith' → logprob: -8.534829139709473
    8. ')' → logprob: -9.659829139709473
    9. '=' → logprob: -9.909829139709473
    10. '.write' → logprob: -10.034829139709473

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.020581362769007683
    2. 'line' → logprob: -3.8955812454223633
    3. '	line' → logprob: -10.770581245422363
    4. '=line' → logprob: -11.895581245422363
    5. '#line' → logprob: -12.645581245422363
    6. '   ' → logprob: -13.020581245422363
    7. '(line' → logprob: -13.145581245422363
    8. ' ' → logprob: -13.645581245422363
    9. ' readline' → logprob: -14.395581245422363
    10. '[line' → logprob: -14.645581245422363

Token 13: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.10690999776124954
    2. '.rstrip' → logprob: -2.606909990310669
    3. '.' → logprob: -3.606909990310669
    4. '.replace' → logprob: -8.73190975189209
    5. '.lower' → logprob: -8.98190975189209
    6. '.upper' → logprob: -9.23190975189209
    7. '.split' → logprob: -9.73190975189209
    8. 'rstrip' → logprob: -10.60690975189209
    9. ' .' → logprob: -11.98190975189209
    10. 'strip' → logprob: -12.10690975189209

Token 14: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005348789971321821
    2. '(' → logprob: -5.2553486824035645
    3. '()`' → logprob: -10.255349159240723
    4. '`()' → logprob: -10.755349159240723
    5. '().' → logprob: -11.255349159240723
    6. ' ()' → logprob: -11.630349159240723
    7. ' parentheses' → logprob: -12.130349159240723
    8. '()
' → logprob: -12.380349159240723
    9. '()(' → logprob: -12.505349159240723
    10. '(parent' → logprob: -13.130349159240723

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2253338247537613
    2. 'if' → logprob: -1.8503338098526
    3. ' if' → logprob: -3.2253339290618896
    4. ':' → logprob: -6.4753336906433105
    5. '```' → logprob: -6.7253336906433105
    6. '<|end|>' → logprob: -6.7253336906433105
    7. '    ' → logprob: -8.725334167480469
    8. ',' → logprob: -9.100334167480469
    9. ' ' → logprob: -9.225334167480469
    10. ')' → logprob: -9.350334167480469

Token 16: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.016449451446533203
    2. ' if' → logprob: -4.266449451446533
    3. '   ' → logprob: -6.266449451446533
    4. 'print' → logprob: -7.891449451446533
    5. '```' → logprob: -12.516448974609375
    6. 'for' → logprob: -12.891448974609375
    7. 'i' → logprob: -13.516448974609375
    8. 'If' → logprob: -14.641448974609375
    9. ' ' → logprob: -14.891448974609375
    10. '#' → logprob: -14.891448974609375

Token 17: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.48432987928390503
    2. ' line' → logprob: -0.984329879283905
    3. ' len' → logprob: -5.609329700469971
    4. 'line' → logprob: -5.734329700469971
    5. 'not' → logprob: -5.859329700469971
    6. ' ' → logprob: -8.609330177307129
    7. 'len' → logprob: -9.109330177307129
    8. ''' → logprob: -9.734330177307129
    9. ' '' → logprob: -10.609330177307129
    10. '   ' → logprob: -10.734330177307129

Token 18: ' ==' (ID: 951)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.31681957840919495
    2. ' ==' → logprob: -1.4418195486068726
    3. '==' → logprob: -3.566819667816162
    4. ':' → logprob: -5.941819667816162
    5. '.endswith' → logprob: -6.566819667816162
    6. '.' → logprob: -6.691819667816162
    7. '<|end|>' → logprob: -7.566819667816162
    8. '<|end|>' → logprob: -8.191819190979004
    9. ' .' → logprob: -8.816819190979004
    10. '.split' → logprob: -9.066819190979004

Token 19: ' '':
' (ID: 125614)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.534980297088623
    2. '''' → logprob: -1.409980297088623
    3. '"":' → logprob: -2.534980297088623
    4. ''' → logprob: -2.909980297088623
    5. '"' → logprob: -3.409980297088623
    6. ' ""' → logprob: -6.284980297088623
    7. ' '' → logprob: -7.659980297088623
    8. ' "' → logprob: -8.034980773925781
    9. ' ''' → logprob: -8.034980773925781
    10. ''ex' → logprob: -9.159980773925781

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004541486850939691
    2. ' continue' → logprob: -8.25045394897461
    3. 'continue' → logprob: -9.37545394897461
    4. ' break' → logprob: -9.50045394897461
    5. '   ' → logprob: -10.62545394897461
    6. 'break' → logprob: -12.12545394897461
    7. '      ' → logprob: -14.62545394897461
    8. '	break' → logprob: -14.62545394897461
    9. '```' → logprob: -14.62545394897461
    10. ' continues' → logprob: -14.87545394897461

Token 21: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.21830250322818756
    2. '       ' → logprob: -2.3433024883270264
    3. ' break' → logprob: -2.3433024883270264
    4. '   ' → logprob: -5.5933027267456055
    5. 'continue' (adapté à ' continue') → logprob: -8.718302726745605
    6. '	break' → logprob: -8.843302726745605
    7. '```' → logprob: -10.218302726745605
    8. ' continue' → logprob: -11.593302726745605
    9. '_break' → logprob: -11.843302726745605
    10. '           ' → logprob: -11.968302726745605

Token 22: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002230905694887042
    2. '    
' → logprob: -6.252231121063232
    3. 'print' → logprob: -8.752230644226074
    4. '
' → logprob: -9.377230644226074
    5. '<|end|>' → logprob: -11.252230644226074
    6. '        
' → logprob: -11.752230644226074
    7. '```' → logprob: -11.877230644226074
    8. '#' → logprob: -12.502230644226074
    9. '    ' → logprob: -12.752230644226074
    10. '       ' → logprob: -12.752230644226074

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010099459905177355
    2. '    
' → logprob: -7.251009941101074
    3. 'print' → logprob: -8.251009941101074
    4. '```' → logprob: -11.876009941101074
    5. '#' → logprob: -12.126009941101074
    6. 'for' → logprob: -12.501009941101074
    7. 'a' → logprob: -12.501009941101074
    8. ' print' → logprob: -13.126009941101074
    9. '        
' → logprob: -13.376009941101074
    10. '       ' → logprob: -13.376009941101074

Token 24: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11542463302612305
    2. 'print' → logprob: -2.490424633026123
    3. '#' → logprob: -4.740424633026123
    4. ':' → logprob: -5.240424633026123
    5. 'if' → logprob: -5.365424633026123
    6. 'try' → logprob: -5.615424633026123
    7. 'for' → logprob: -7.365424633026123
    8. '    
' → logprob: -7.490424633026123
    9. '    ' → logprob: -7.615424633026123
    10. 'i' → logprob: -7.865424633026123

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17413167655467987
    2. '=' → logprob: -2.1741316318511963
    3. ' ' → logprob: -3.2991316318511963
    4. ',' → logprob: -4.799131870269775
    5. ' ==' → logprob: -8.799131393432617
    6. '   ' → logprob: -8.924131393432617
    7. ' ,' → logprob: -8.924131393432617
    8. '.' → logprob: -9.424131393432617
    9. '=int' → logprob: -9.424131393432617
    10. '  ' → logprob: -9.674131393432617

Token 26: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.048607006669044495
    2. 'int' → logprob: -3.048607110977173
    3. ' len' → logprob: -10.923606872558594
    4. 'len' → logprob: -14.298606872558594
    5. '=int' → logprob: -14.548606872558594
    6. '<int' → logprob: -16.048606872558594
    7. '[int' → logprob: -16.423606872558594
    8. '   ' → logprob: -16.423606872558594
    9. ' ' → logprob: -16.673606872558594
    10. ' in' → logprob: -16.798606872558594

Token 27: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.06196948140859604
    2. '(' → logprob: -2.811969518661499
    3. ' (' → logprob: -14.561969757080078
    4. '(
' → logprob: -14.811969757080078
    5. 'line' → logprob: -15.186969757080078
    6. ' line' → logprob: -15.436969757080078
    7. '(lines' → logprob: -16.061969757080078
    8. '(Line' → logprob: -16.061969757080078
    9. '(li' → logprob: -16.186969757080078
    10. '('' → logprob: -16.311969757080078

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -13.125004768371582
    3. ' )' → logprob: -14.000004768371582
    4. '')' → logprob: -15.000004768371582
    5. '))' → logprob: -15.125004768371582
    6. '   ' → logprob: -15.125004768371582
    7. '`)' → logprob: -15.375004768371582
    8. ':)' → logprob: -15.625004768371582
    9. '#' → logprob: -16.1250057220459
    10. '):' → logprob: -16.7500057220459

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21500027179718018
    2. ' ' → logprob: -2.7150001525878906
    3. '<|end|>' → logprob: -3.8400001525878906
    4. '#' → logprob: -4.090000152587891
    5. '\n' → logprob: -4.090000152587891
    6. '
' → logprob: -4.465000152587891
    7. ')' → logprob: -4.590000152587891
    8. '```' → logprob: -4.590000152587891
    9. '    ' → logprob: -4.840000152587891
    10. '\' → logprob: -4.965000152587891

Token 30: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33192992210388184
    2. ' ' → logprob: -1.9569299221038818
    3. 'for' → logprob: -3.206929922103882
    4. ' if' → logprob: -3.706929922103882
    5. '    ' → logprob: -3.831929922103882
    6. ' for' → logprob: -3.956929922103882
    7. 'if' (adapté à ' if') → logprob: -4.706930160522461
    8. '[' → logprob: -5.206930160522461
    9. 's' → logprob: -5.706930160522461
    10. '    
' → logprob: -5.831930160522461

Token 31: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.0019843061454594135
    2. 'N' → logprob: -6.876984119415283
    3. ' ' → logprob: -7.001984119415283
    4. ' ' → logprob: -10.626984596252441
    5. ' not' → logprob: -11.126984596252441
    6. ' n' → logprob: -14.001984596252441
    7. ' len' → logprob: -15.876984596252441
    8. ' \(' → logprob: -16.126983642578125
    9. '<|end|>' → logprob: -16.376983642578125
    10. ' isinstance' → logprob: -16.564483642578125

Token 32: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07310125231742859
    2. ' <=' → logprob: -4.073101043701172
    3. ' ==' → logprob: -4.073101043701172
    4. '>' → logprob: -4.198101043701172
    5. ' <' → logprob: -4.323101043701172
    6. ' %' → logprob: -5.698101043701172
    7. ' >=' → logprob: -6.323101043701172
    8. '%' → logprob: -6.323101043701172
    9. ' ' → logprob: -7.448101043701172
    10. '==' → logprob: -8.323101043701172

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12693734467029572
    2. ' ' → logprob: -2.1269373893737793
    3. '1' → logprob: -11.876936912536621
    4. '  ' → logprob: -14.876936912536621
    5. '   ' → logprob: -15.001936912536621
    6. '-' → logprob: -15.314436912536621
    7. '=' → logprob: -15.501936912536621
    8. '42' → logprob: -15.626936912536621
    9. ' -' → logprob: -15.689436912536621
    10. '10' → logprob: -16.189437866210938

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013786651834379882
    2. ' ' → logprob: -9.000138282775879
    3. '-' → logprob: -11.625138282775879
    4. '1' → logprob: -12.500138282775879
    5. '```' → logprob: -15.125138282775879
    6. ' -' → logprob: -15.375138282775879
    7. '42' → logprob: -15.375138282775879
    8. '   ' → logprob: -15.500138282775879
    9. '7' → logprob: -16.000137329101562
    10. '  ' → logprob: -16.000137329101562

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.900034299585968e-05
    2. ':
' → logprob: -9.375088691711426
    3. ' :' → logprob: -12.500088691711426
    4. ':return' → logprob: -15.375088691711426
    5. '   ' → logprob: -17.000089645385742
    6. ':**' → logprob: -17.375089645385742
    7. ' break' → logprob: -18.375089645385742
    8. ':

' → logprob: -18.375089645385742
    9. '):' → logprob: -18.375089645385742
    10. ' :
' → logprob: -18.500089645385742

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009704180411063135
    2. '   ' → logprob: -7.125970363616943
    3. ' break' → logprob: -9.250970840454102
    4. '	break' → logprob: -11.125970840454102
    5. '    ' → logprob: -11.250970840454102
    6. '      ' → logprob: -11.375970840454102
    7. '     ' → logprob: -11.500970840454102
    8. ':' → logprob: -12.125970840454102
    9. 'break' → logprob: -12.750970840454102
    10. '\t' → logprob: -13.250970840454102

Token 37: ' print' (ID: 2123)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.062314070761203766
    2. '       ' → logprob: -3.062314033508301
    3. 'break' → logprob: -4.437314033508301
    4. '   ' → logprob: -6.562314033508301
    5. '	break' → logprob: -8.1873140335083
    6. '    ' → logprob: -10.0623140335083
    7. '\n' → logprob: -10.8123140335083
    8. '        
' → logprob: -11.5623140335083
    9. '```' → logprob: -11.6873140335083
    10. '    
' → logprob: -11.8123140335083

Token 38: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.033800262957811356
    2. '(' → logprob: -3.5338003635406494
    3. '("")' → logprob: -5.78380012512207
    4. '0' → logprob: -7.40880012512207
    5. '('' → logprob: -8.53380012512207
    6. '("' → logprob: -9.78380012512207
    7. '(N' → logprob: -10.53380012512207
    8. '()
' → logprob: -10.78380012512207
    9. 'break' → logprob: -11.03380012512207
    10. '"' → logprob: -12.03380012512207

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7767488956451416
    2. '"' → logprob: -1.4017488956451416
    3. ')' → logprob: -1.4017488956451416
    4. 'break' → logprob: -3.7767488956451416
    5. ''' → logprob: -4.2767486572265625
    6. 'end' → logprob: -5.7767486572265625
    7. '")' → logprob: -6.2767486572265625
    8. 'Break' → logprob: -6.9017486572265625
    9. '"N' → logprob: -7.1517486572265625
    10. ' ' → logprob: -7.5267486572265625

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021843716967850924
    2. ')
' → logprob: -8.625218391418457
    3. '   ' → logprob: -10.375218391418457
    4. ' )' → logprob: -12.000218391418457
    5. '       ' → logprob: -14.625218391418457
    6. '')' → logprob: -15.000218391418457
    7. '`)' → logprob: -15.875218391418457
    8. '")' → logprob: -15.875218391418457
    9. ')return' → logprob: -16.125219345092773
    10. '    ' → logprob: -16.250219345092773

Token 41: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5237540006637573
    2. '       ' → logprob: -0.8987540006637573
    3. '    
' → logprob: -8.523754119873047
    4. '```' → logprob: -8.648754119873047
    5. '        
' → logprob: -10.023754119873047
    6. '\n' → logprob: -10.398754119873047
    7. '    ' → logprob: -10.398754119873047
    8. ' else' → logprob: -10.648754119873047
    9. '
' → logprob: -10.773754119873047
    10. '           ' → logprob: -11.273754119873047

Token 42: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060444191098213196
    2. 'break' → logprob: -3.0604441165924072
    3. ' break' → logprob: -4.560444355010986
    4. '	break' → logprob: -7.060444355010986
    5. '   ' → logprob: -7.810444355010986
    6. '```' → logprob: -10.310443878173828
    7. '        
' → logprob: -11.685443878173828
    8. '\n' → logprob: -11.935443878173828
    9. '           ' → logprob: -12.935443878173828
    10. 'br' → logprob: -13.060443878173828

Token 43: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009889011271297932
    2. '    
' → logprob: -5.384889125823975
    3. '<|end|>' → logprob: -5.384889125823975
    4. '#' → logprob: -9.009888648986816
    5. '```' → logprob: -9.009888648986816
    6. '<|end|>' → logprob: -9.134888648986816
    7. '\n' → logprob: -9.634888648986816
    8. '
' → logprob: -9.884888648986816
    9. '    ' → logprob: -10.009888648986816
    10. '\' → logprob: -10.759888648986816

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00920817255973816
    2. '    
' → logprob: -4.7592082023620605
    3. '    ' → logprob: -9.009207725524902
    4. '<|end|>' → logprob: -9.134207725524902
    5. '```' → logprob: -9.634207725524902
    6. '
' → logprob: -9.634207725524902
    7. 'n' → logprob: -10.259207725524902
    8. '   
' → logprob: -10.634207725524902
    9. 'for' → logprob: -10.759207725524902
    10. ')' → logprob: -11.009207725524902

Token 45: ' times' (ID: 4238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09482420235872269
    2. ' ' → logprob: -3.9698243141174316
    3. '    ' → logprob: -4.344824314117432
    4. 's' → logprob: -4.344824314117432
    5. 'n' → logprob: -4.844824314117432
    6. 'result' → logprob: -4.969824314117432
    7. '    
' → logprob: -5.344824314117432
    8. 'c' → logprob: -5.594824314117432
    9. 'a' → logprob: -6.344824314117432
    10. 'dp' → logprob: -6.344824314117432

Token 46: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4332975447177887
    2. '=' → logprob: -1.5582975149154663
    3. '_' → logprob: -2.183297634124756
    4. '_count' → logprob: -5.058297634124756
    5. '[' → logprob: -5.183297634124756
    6. '_needed' → logprob: -5.558297634124756
    7. '   ' → logprob: -6.183297634124756
    8. '_to' → logprob: -6.683297634124756
    9. ' ' → logprob: -6.683297634124756
    10. '_taken' → logprob: -6.933297634124756

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5252765417098999
    2. '=' → logprob: -0.9002765417098999
    3. 's' → logprob: -6.1502766609191895
    4. '   ' → logprob: -12.150276184082031
    5. '_' → logprob: -12.275276184082031
    6. ' ' → logprob: -13.650276184082031
    7. '=s' → logprob: -13.900276184082031
    8. '_times' → logprob: -13.900276184082031
    9. ',' → logprob: -14.025276184082031
    10. ' s' → logprob: -14.275276184082031

Token 48: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.36570799350738525
    2. ' input' → logprob: -1.6157079935073853
    3. 'input' → logprob: -2.8657078742980957
    4. 'sys' → logprob: -2.9907078742980957
    5. ' ' → logprob: -8.740708351135254
    6. '=sys' → logprob: -9.615708351135254
    7. '   ' → logprob: -10.490708351135254
    8. '	sys' → logprob: -10.865708351135254
    9. ' next' → logprob: -11.240708351135254
    10. '(sys' → logprob: -11.990708351135254

Token 49: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004535526386462152
    2. '.' → logprob: -7.750453472137451
    3. '.stdout' → logprob: -11.62545394897461
    4. '.argv' → logprob: -11.75045394897461
    5. '.std' → logprob: -12.75045394897461
    6. '.readline' → logprob: -13.25045394897461
    7. '.st' → logprob: -14.37545394897461
    8. '.stderr' → logprob: -15.00045394897461
    9. 'stdin' → logprob: -15.75045394897461
    10. '.in' → logprob: -16.25045394897461

Token 50: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00038872790173627436
    2. '.' → logprob: -7.8753886222839355
    3. '.readlines' → logprob: -11.875389099121094
    4. '.read' → logprob: -13.500389099121094
    5. ' readline' → logprob: -15.500389099121094
    6. ' .' → logprob: -17.625389099121094
    7. 'read' → logprob: -18.000389099121094
    8. '.next' → logprob: -18.125389099121094
    9. '.write' → logprob: -18.375389099121094
    10. '.tell' → logprob: -19.500389099121094

Token 51: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21051304042339325
    2. '().' → logprob: -1.7105129957199097
    3. '.strip' → logprob: -5.210513114929199
    4. '.' → logprob: -6.210513114929199
    5. '(' → logprob: -7.335513114929199
    6. '=' → logprob: -7.960513114929199
    7. ')' → logprob: -8.8355131149292
    8. '.rstrip' → logprob: -9.4605131149292
    9. '.split' → logprob: -9.5855131149292
    10. '()
' → logprob: -9.7105131149292

Token 52: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00012368128227535635
    2. 'rstrip' → logprob: -9.000123977661133
    3. ' strip' → logprob: -15.875123977661133
    4. 'split' → logprob: -17.500123977661133
    5. '_strip' → logprob: -17.625123977661133
    6. '.strip' → logprob: -17.625123977661133
    7. 'str' → logprob: -18.750123977661133
    8. 'stripe' → logprob: -18.875123977661133
    9. '-strip' → logprob: -19.125123977661133
    10. '(strip' → logprob: -19.250123977661133

Token 53: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01833360269665718
    2. '(' → logprob: -4.018333435058594
    3. '('' → logprob: -8.768333435058594
    4. '().' → logprob: -11.768333435058594
    5. '()
' → logprob: -12.518333435058594
    6. '()`' → logprob: -13.143333435058594
    7. '(),' → logprob: -13.143333435058594
    8. '(
' → logprob: -13.268333435058594
    9. '()"' → logprob: -13.268333435058594
    10. '())' → logprob: -13.393333435058594

Token 54: '   ' (ID: 271)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.11394835263490677
    2. '   ' → logprob: -2.363948345184326
    3. ' times' → logprob: -4.363948345184326
    4. 't' → logprob: -8.488948822021484
    5. '_times' → logprob: -8.738948822021484
    6. 'tokens' → logprob: -9.113948822021484
    7. '<|end|>' → logprob: -9.113948822021484
    8. '(times' → logprob: -9.613948822021484
    9. ')' → logprob: -9.988948822021484
    10. '    
' → logprob: -10.238948822021484

Token 55: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.09631805866956711
    2. ' times' → logprob: -2.471318006515503
    3. '   ' → logprob: -4.971318244934082
    4. 'time' → logprob: -9.471318244934082
    5. 't' → logprob: -9.596318244934082
    6. '_times' → logprob: -10.221318244934082
    7. 'timestamps' → logprob: -10.221318244934082
    8. 'numbers' → logprob: -10.471318244934082
    9. ' if' → logprob: -10.721318244934082
    10. '    ' → logprob: -11.096318244934082

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07378455251455307
    2. '=' → logprob: -3.573784589767456
    3. '_' → logprob: -3.948784589767456
    4. 's' → logprob: -4.073784351348877
    5. '_tokens' → logprob: -5.823784351348877
    6. '_split' → logprob: -6.573784351348877
    7. '_s' → logprob: -7.698784351348877
    8. '.' → logprob: -7.823784351348877
    9. '_parts' → logprob: -8.198784828186035
    10. '.split' → logprob: -8.323784828186035

Token 57: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1281946301460266
    2. 'list' → logprob: -2.503194570541382
    3. ' times' → logprob: -3.753194570541382
    4. 'times' → logprob: -5.128194808959961
    5. ' [' → logprob: -5.378194808959961
    6. '[' → logprob: -5.628194808959961
    7. '[list' → logprob: -7.128194808959961
    8. '[t' → logprob: -9.628194808959961
    9. ' map' → logprob: -11.878194808959961
    10. 'map' → logprob: -12.378194808959961

Token 58: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007310202927328646
    2. '(times' → logprob: -7.750730991363525
    3. '(map' → logprob: -8.625731468200684
    4. '(range' → logprob: -10.125731468200684
    5. '(int' → logprob: -10.250731468200684
    6. '(
' → logprob: -11.625731468200684
    7. '(

' → logprob: -11.875731468200684
    8. '(eval' → logprob: -12.125731468200684
    9. '(split' → logprob: -12.250731468200684
    10. '("("' → logprob: -12.500731468200684

Token 59: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.11786524206399918
    2. '(' → logprob: -2.4928653240203857
    3. '(lambda' → logprob: -3.7428653240203857
    4. '(str' → logprob: -5.367865085601807
    5. '<|end|>' → logprob: -9.992865562438965
    6. 'int' → logprob: -10.617865562438965
    7. ' (' → logprob: -10.867865562438965
    8. '(float' → logprob: -10.992865562438965
    9. '(
' → logprob: -11.492865562438965
    10. 'lambda' → logprob: -11.867865562438965

Token 60: ',' (ID: 11)
  Prédit: '(times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(times' → logprob: -0.045061368495225906
    2. '(' → logprob: -3.7950613498687744
    3. ',' → logprob: -3.9200613498687744
    4. '(t' → logprob: -7.2950615882873535
    5. ',t' → logprob: -8.295061111450195
    6. '(tokens' → logprob: -8.545061111450195
    7. ')' → logprob: -8.670061111450195
    8. 'times' → logprob: -9.170061111450195
    9. ' ,' → logprob: -9.545061111450195
    10. '(line' → logprob: -10.295061111450195

Token 61: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.5761899948120117
    2. ' times' → logprob: -0.8261899948120117
    3. '(times' → logprob: -8.326189994812012
    4. ')' → logprob: -12.076189994812012
    5. '   ' → logprob: -13.451189994812012
    6. '.times' → logprob: -14.826189994812012
    7. ' ' → logprob: -15.701189994812012
    8. '_times' → logprob: -15.701189994812012
    9. '))' → logprob: -16.326190948486328
    10. ' )' → logprob: -16.576190948486328

Token 62: '_line' (ID: 14418)
  Prédit: '(times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(times' → logprob: -0.12542349100112915
    2. '.split' → logprob: -3.1254234313964844
    3. '.times' → logprob: -3.3754234313964844
    4. '.readline' → logprob: -3.8754234313964844
    5. 'times' → logprob: -4.875423431396484
    6. '.readlines' → logprob: -6.125423431396484
    7. '.strptime' → logprob: -6.250423431396484
    8. '_times' → logprob: -6.250423431396484
    9. ' .' → logprob: -7.000423431396484
    10. ' times' → logprob: -7.500423431396484

Token 63: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.014313815161585808
    2. '().' → logprob: -4.889313697814941
    3. '.' → logprob: -5.264313697814941
    4. '.strip' → logprob: -6.639313697814941
    5. ' .' → logprob: -9.389313697814941
    6. ')' → logprob: -10.639313697814941
    7. '.rstrip' → logprob: -10.639313697814941
    8. '.readline' → logprob: -10.764313697814941
    9. '.s' → logprob: -11.014313697814941
    10. '   ' → logprob: -11.639313697814941

Token 64: '()))
' (ID: 24521)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.15792137384414673
    2. '()))' → logprob: -2.407921314239502
    3. '())' → logprob: -3.532921314239502
    4. '(' → logprob: -4.282921314239502
    5. '()' → logprob: -4.407921314239502
    6. '(','' → logprob: -7.907921314239502
    7. '("("' → logprob: -8.78292179107666
    8. '())))' → logprob: -9.15792179107666
    9. '()))
' → logprob: -9.65792179107666
    10. '("' → logprob: -10.03292179107666

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49679797887802124
    2. 'times' → logprob: -1.246798038482666
    3. 'dp' → logprob: -3.621798038482666
    4. '    
' → logprob: -3.621798038482666
    5. ' times' → logprob: -4.496798038482666
    6. '
' → logprob: -4.746798038482666
    7. 'if' → logprob: -5.121798038482666
    8. '\' → logprob: -5.496798038482666
    9. 'total' → logprob: -6.246798038482666
    10. '```' → logprob: -6.371798038482666

Token 66: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.02882262133061886
    2. 'dp' → logprob: -4.278822422027588
    3. '   ' → logprob: -5.403822422027588
    4. 'if' → logprob: -6.278822422027588
    5. 'total' → logprob: -6.528822422027588
    6. 'sum' → logprob: -7.028822422027588
    7. 'sorted' → logprob: -7.278822422027588
    8. '    
' → logprob: -7.403822422027588
    9. ' times' → logprob: -7.778822422027588
    10. 'max' → logprob: -7.903822422027588

Token 67: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5785871148109436
    2. '.' → logprob: -0.8285871148109436
    3. '[' → logprob: -6.453587055206299
    4. '<|end|>' → logprob: -7.203587055206299
    5. '_sorted' → logprob: -9.828587532043457
    6. 'sort' → logprob: -10.203587532043457
    7. '.
' → logprob: -10.328587532043457
    8. ')' → logprob: -10.578587532043457
    9. '[:]' → logprob: -10.703587532043457
    10. '.sorted' → logprob: -10.828587532043457

Token 68: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10025164484977722
    2. '(' → logprob: -2.3502516746520996
    3. '()
' → logprob: -11.975251197814941
    4. '()`' → logprob: -12.350251197814941
    5. '();' → logprob: -12.350251197814941
    6. '(()' → logprob: -12.475251197814941
    7. '()>' → logprob: -13.100251197814941
    8. '(reverse' → logprob: -13.225251197814941
    9. '(`' → logprob: -13.225251197814941
    10. '((' → logprob: -13.475251197814941

Token 69: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9069512486457825
    2. '   ' → logprob: -1.4069511890411377
    3. '    
' → logprob: -3.0319511890411377
    4. 'result' → logprob: -3.2819511890411377
    5. 'max' → logprob: -3.4069511890411377
    6. 'sum' → logprob: -3.5319511890411377
    7. 'times' → logprob: -3.9069511890411377
    8. '
' → logprob: -3.9069511890411377
    9. 't' → logprob: -4.156951427459717
    10. 'for' → logprob: -4.281951427459717

Token 70: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.4806109666824341
    2. 'dp' → logprob: -1.230610966682434
    3. 'result' → logprob: -3.4806108474731445
    4. 'max' → logprob: -4.6056108474731445
    5. 'sum' → logprob: -4.6056108474731445
    6. 'wait' → logprob: -4.8556108474731445
    7. 'time' → logprob: -5.6056108474731445
    8. 'min' → logprob: -5.6056108474731445
    9. 'waiting' → logprob: -5.7306108474731445
    10. 'c' → logprob: -5.9806108474731445

Token 71: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.11377856880426407
    2. '_' → logprob: -2.238778591156006
    3. '_times' → logprob: -7.363778591156006
    4. ' =' → logprob: -9.488778114318848
    5. '_sum' → logprob: -9.613778114318848
    6. '=' → logprob: -9.988778114318848
    7. 'Time' → logprob: -10.363778114318848
    8. '_cost' → logprob: -10.488778114318848
    9. '_tim' → logprob: -11.363778114318848
    10. '<|end|>' → logprob: -11.363778114318848

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39628562331199646
    2. '0' → logprob: -1.1462856531143188
    3. ' times' → logprob: -5.146285533905029
    4. 'times' → logprob: -6.021285533905029
    5. 'sum' → logprob: -7.521285533905029
    6. ' sum' → logprob: -7.521285533905029
    7. '   ' → logprob: -12.083786010742188
    8. '  ' → logprob: -12.396286010742188
    9. ' ' → logprob: -12.396286010742188
    10. '(times' → logprob: -12.771286010742188

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016643844544887543
    2. 'sum' → logprob: -4.76664400100708
    3. 'times' → logprob: -4.89164400100708
    4. ' ' → logprob: -7.89164400100708
    5. ' times' → logprob: -10.016643524169922
    6. ' sum' → logprob: -10.891643524169922
    7. '   ' → logprob: -12.141643524169922
    8. '-' → logprob: -12.204143524169922
    9. '1' → logprob: -12.266643524169922
    10. 'time' → logprob: -12.766643524169922

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29295459389686584
    2. 'for' → logprob: -1.6679545640945435
    3. '
' → logprob: -3.667954683303833
    4. ' for' → logprob: -3.792954683303833
    5. '    
' → logprob: -5.667954444885254
    6. 'i' → logprob: -6.292954444885254
    7. '<|end|>' → logprob: -6.417954444885254
    8. ',' → logprob: -6.542954444885254
    9. '\' → logprob: -6.667954444885254
    10. 't' → logprob: -6.792954444885254

Token 76: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40482041239738464
    2. 'while' → logprob: -2.154820442199707
    3. 'i' → logprob: -2.779820442199707
    4. '   ' → logprob: -3.529820442199707
    5. 'left' → logprob: -3.654820442199707
    6. 'current' (adapté à ' current') → logprob: -3.654820442199707
    7. 'count' → logprob: -4.154820442199707
    8. ' for' → logprob: -4.279820442199707
    9. 'stack' → logprob: -4.779820442199707
    10. 'start' → logprob: -4.904820442199707

Token 77: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.44329190254211426
    2. '_' → logprob: -1.3182919025421143
    3. ' =' → logprob: -3.0682919025421143
    4. '_sum' → logprob: -3.5682919025421143
    5. '=' → logprob: -5.068291664123535
    6. ' _' → logprob: -5.193291664123535
    7. '_times' → logprob: -6.443291664123535
    8. '_length' → logprob: -8.068291664123535
    9. '_total' → logprob: -8.568291664123535
    10. '_value' → logprob: -8.818291664123535

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.158408522605896
    2. ' ' → logprob: -1.283408522605896
    3. ' times' → logprob: -1.283408522605896
    4. 'times' → logprob: -2.0334086418151855
    5. '  ' → logprob: -8.658408164978027
    6. '1' → logprob: -8.783408164978027
    7. '   ' → logprob: -8.908408164978027
    8. ' None' → logprob: -9.283408164978027
    9. '<|end|>' → logprob: -9.720908164978027
    10. '(times' → logprob: -10.033408164978027

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16348731517791748
    2. 'times' → logprob: -1.9134873151779175
    3. ' times' → logprob: -6.663487434387207
    4. ' ' → logprob: -6.663487434387207
    5. '1' → logprob: -7.913487434387207
    6. '-' → logprob: -9.163487434387207
    7. '100' → logprob: -10.288487434387207
    8. '   ' → logprob: -10.538487434387207
    9. '(times' → logprob: -10.538487434387207
    10. 'time' → logprob: -10.538487434387207

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01196537259966135
    2. 'for' → logprob: -5.261965274810791
    3. ' for' → logprob: -5.261965274810791
    4. '    
' → logprob: -7.261965274810791
    5. '
' → logprob: -7.636965274810791
    6. '<|end|>' → logprob: -8.51196575164795
    7. '\n' → logprob: -10.63696575164795
    8. '	for' → logprob: -10.76196575164795
    9. '    ' → logprob: -11.13696575164795
    10. '+' → logprob: -11.51196575164795

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4140516221523285
    2. ' for' → logprob: -1.7890516519546509
    3. 'for' → logprob: -1.9140516519546509
    4. '
' → logprob: -4.664051532745361
    5. '<|end|>' → logprob: -4.789051532745361
    6. '+' → logprob: -5.789051532745361
    7. '    
' → logprob: -6.789051532745361
    8. '\n' → logprob: -7.414051532745361
    9. ' ' → logprob: -7.914051532745361
    10. '  ' → logprob: -8.28905200958252

Token 82: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06366574019193649
    2. ' for' → logprob: -2.9386656284332275
    3. '   ' → logprob: -4.813665866851807
    4. '+' → logprob: -8.188665390014648
    5. '
' → logprob: -9.063665390014648
    6. '<|end|>' → logprob: -9.188665390014648
    7. '\n' → logprob: -10.438665390014648
    8. '	for' → logprob: -10.563665390014648
    9. '    
' → logprob: -10.813665390014648
    10. ' ' → logprob: -11.188665390014648

Token 83: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3603079915046692
    2. ' time' → logprob: -1.2353079319000244
    3. ' i' → logprob: -4.9853081703186035
    4. 't' → logprob: -6.2353081703186035
    5. ' ' → logprob: -6.4853081703186035
    6. 'time' → logprob: -6.7353081703186035
    7. ' _' → logprob: -9.985307693481445
    8. '   ' → logprob: -9.985307693481445
    9. '  ' → logprob: -10.610307693481445
    10. ' ' → logprob: -10.610307693481445

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03497900441288948
    2. 'in' → logprob: -3.4099791049957275
    3. ' ' → logprob: -6.909978866577148
    4. 'i' → logprob: -8.534978866577148
    5. ' i' → logprob: -10.159978866577148
    6. '   ' → logprob: -10.659978866577148
    7. '  ' → logprob: -10.659978866577148
    8. 'ime' → logprob: -11.659978866577148
    9. '	in' → logprob: -11.909978866577148
    10. 'n' → logprob: -11.909978866577148

Token 85: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.004133372567594051
    2. 'times' → logprob: -5.504133224487305
    3. 'imes' → logprob: -10.254133224487305
    4. ' ' → logprob: -11.379133224487305
    5. '(times' → logprob: -12.504133224487305
    6. '_times' → logprob: -13.004133224487305
    7. '  ' → logprob: -13.879133224487305
    8. 's' → logprob: -14.629133224487305
    9. '<|end|>' → logprob: -14.879133224487305
    10. '   ' → logprob: -15.629133224487305

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01952287182211876
    2. '+' → logprob: -4.519522666931152
    3. '+:' → logprob: -5.019522666931152
    4. ' +' → logprob: -7.769522666931152
    5. ':
' → logprob: -7.769522666931152
    6. '   ' → logprob: -8.019522666931152
    7. '):' → logprob: -8.269522666931152
    8. ' +=' → logprob: -8.769522666931152
    9. ' :' → logprob: -9.019522666931152
    10. '+=' → logprob: -10.019522666931152

Token 87: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11012644320726395
    2. '       ' → logprob: -2.360126495361328
    3. ' +' → logprob: -5.110126495361328
    4. '   ' → logprob: -6.610126495361328
    5. '<|end|>' → logprob: -7.110126495361328
    6. '+
' → logprob: -7.985126495361328
    7. ' ' → logprob: -8.360126495361328
    8. ':' → logprob: -8.360126495361328
    9. '    ' → logprob: -8.610126495361328
    10. ',' → logprob: -9.110126495361328

Token 88: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.19513490796089172
    2. '       ' → logprob: -2.1951348781585693
    3. 'current' (adapté à ' current') → logprob: -2.9451348781585693
    4. '   ' → logprob: -4.945135116577148
    5. '+' → logprob: -5.445135116577148
    6. ' ' → logprob: -7.570135116577148
    7. ' +' → logprob: -8.070135116577148
    8. '	current' → logprob: -8.320135116577148
    9. '<|end|>' → logprob: -8.695135116577148
    10. '    ' → logprob: -9.070135116577148

Token 89: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5762463808059692
    2. ' +=' → logprob: -0.8262463808059692
    3. '+' → logprob: -8.82624626159668
    4. '=' → logprob: -9.32624626159668
    5. '+=(' → logprob: -10.57624626159668
    6. ' =' → logprob: -11.32624626159668
    7. ']+=' → logprob: -11.57624626159668
    8. '   ' → logprob: -11.70124626159668
    9. ' ' → logprob: -12.57624626159668
    10. '+='' → logprob: -12.57624626159668

Token 90: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029751762747764587
    2. ' t' → logprob: -3.529751777648926
    3. ' ' → logprob: -13.654751777648926
    4. '   ' → logprob: -17.02975082397461
    5. '<|end|>' → logprob: -18.02975082397461
    6. '	t' → logprob: -18.15475082397461
    7. '  ' → logprob: -18.52975082397461
    8. '`t' → logprob: -18.52975082397461
    9. '1' → logprob: -18.90475082397461
    10. 'int' → logprob: -19.15475082397461

Token 91: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039994869381189346
    2. '    
' → logprob: -4.414994716644287
    3. '   ' → logprob: -4.789994716644287
    4. ' 
' → logprob: -5.414994716644287
    5. ' ' → logprob: -5.664994716644287
    6. '
' → logprob: -5.789994716644287
    7. '+' → logprob: -5.914994716644287
    8. '<|end|>' → logprob: -6.789994716644287
    9. '    ' → logprob: -7.414994716644287
    10. '   
' → logprob: -7.539994716644287

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14005745947360992
    2. '
' → logprob: -2.6400575637817383
    3. '   ' → logprob: -3.2650575637817383
    4. ' ' → logprob: -5.265057563781738
    5. '    
' → logprob: -5.390057563781738
    6. '<|end|>' → logprob: -5.515057563781738
    7. ' 
' → logprob: -5.640057563781738
    8. '        
' → logprob: -7.390057563781738
    9. '   
' → logprob: -7.640057563781738
    10. '+' → logprob: -7.765057563781738

Token 93: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.006799441296607256
    2. ' total' → logprob: -5.006799221038818
    3. '   ' → logprob: -9.506799697875977
    4. '       ' → logprob: -11.631799697875977
    5. '
' → logprob: -15.256799697875977
    6. '	total' → logprob: -15.631799697875977
    7. ' ' → logprob: -15.881799697875977
    8. '  ' → logprob: -16.131799697875977
    9. '(total' → logprob: -16.506799697875977
    10. '    ' → logprob: -16.756799697875977

Token 94: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3148825764656067
    2. ' +=' → logprob: -1.314882516860962
    3. '+' → logprob: -6.439882755279541
    4. '<|end|>' → logprob: -11.439882278442383
    5. ']+=' → logprob: -12.314882278442383
    6. '+="' → logprob: -12.939882278442383
    7. '+='' → logprob: -13.439882278442383
    8. ' +' → logprob: -13.689882278442383
    9. '+=(' → logprob: -14.064882278442383
    10. '=' → logprob: -14.189882278442383

Token 95: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4740792512893677
    2. ' current' → logprob: -0.9740792512893677
    3. ' ' → logprob: -13.724079132080078
    4. 'urrent' → logprob: -15.099079132080078
    5. '(current' → logprob: -15.474079132080078
    6. '   ' → logprob: -15.474079132080078
    7. '	current' → logprob: -15.974079132080078
    8. '$current' → logprob: -16.099079132080078
    9. '[current' → logprob: -16.474079132080078
    10. 'Current' → logprob: -16.974079132080078

Token 96: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7162604331970215
    2. '   ' → logprob: -0.7162604331970215
    3. 'print' → logprob: -3.9662604331970215
    4. '    
' → logprob: -5.8412604331970215
    5. ' print' → logprob: -7.9662604331970215
    6. '  
' → logprob: -8.09126091003418
    7. '<|end|>' → logprob: -8.96626091003418
    8. '
' → logprob: -9.34126091003418
    9. '   
' → logprob: -10.59126091003418
    10. ' 
' → logprob: -10.71626091003418

Token 97: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26698675751686096
    2. '   ' → logprob: -1.5169867277145386
    3. '
' → logprob: -4.266986846923828
    4. '    
' → logprob: -7.266986846923828
    5. ' print' → logprob: -8.891986846923828
    6. '<|end|>' → logprob: -10.266986846923828
    7. '  
' → logprob: -10.641986846923828
    8. '```' → logprob: -11.766986846923828
    9. '\n' → logprob: -12.391986846923828
    10. '
' → logprob: -12.516986846923828

Token 98: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03125724568963051
    2. '   ' → logprob: -3.531257152557373
    3. '
' → logprob: -6.656257152557373
    4. ' print' → logprob: -8.656257629394531
    5. '    
' → logprob: -10.156257629394531
    6. '```' → logprob: -12.906257629394531
    7. '<|end|>' → logprob: -13.781257629394531
    8. '  
' → logprob: -13.906257629394531
    9. '	print' → logprob: -14.531257629394531
    10. '\n' → logprob: -14.781257629394531

Token 99: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.5759493708610535
    2. '(' → logprob: -0.8259493708610535
    3. '(t' → logprob: -12.825949668884277
    4. ' (' → logprob: -12.825949668884277
    5. '()' → logprob: -13.325949668884277
    6. '(
' → logprob: -14.075949668884277
    7. '(

' → logprob: -14.450949668884277
    8. 'total' → logprob: -14.700949668884277
    9. '('' → logprob: -14.825949668884277
    10. '(current' → logprob: -14.950949668884277

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')`' → logprob: -17.875001907348633
    5. '))' → logprob: -18.625001907348633
    6. '(' → logprob: -19.000001907348633
    7. '`)' → logprob: -19.625001907348633
    8. '')' → logprob: -20.000001907348633
    9. '()' → logprob: -20.000001907348633
    10. ' ' → logprob: -20.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 98
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 87
Précision stricte (1ère position): 42.86%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 88.78%
================================================================================
