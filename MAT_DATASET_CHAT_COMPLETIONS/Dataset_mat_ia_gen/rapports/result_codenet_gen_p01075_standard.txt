================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq
input=sys.stdin.readline
N,M=map(int,input().split())
G=[[] for _ in range(N+1)]
for _ in range(M):
 a,b,c=map(int,input().split())
 G[a].append((b,c))
INF=10**15
dist=[INF]*(N+1)
dist[1]=0
hq=[(0,1)]
while hq:
 t,u=heapq.heappop(hq)
 if dist[u]<t:continue
 for v,c in G[u]:
  nt=max(t,c)
  if dist[v]>nt:
   dist[v]=nt
   heapq.heappush(hq,(nt,v))
if dist[N]==INF:
 print(-1)
else:
 print(dist[N])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20064200460910797
    2. '.' → logprob: -2.4506421089172363
    3. '<|end|>' → logprob: -2.8256421089172363
    4. '\' → logprob: -4.700642108917236
    5. 'newline' → logprob: -5.075642108917236
    6. 'import' → logprob: -5.075642108917236
    7. '
' → logprob: -5.700642108917236
    8. '' → logprob: -5.825642108917236
    9. '<|end|>' → logprob: -5.825642108917236
    10. '\r' → logprob: -6.200642108917236

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.666993507067673e-05
    2. '.' → logprob: -10.375036239624023
    3. '#' → logprob: -13.625036239624023
    4. '_' → logprob: -14.375036239624023
    5. 'ify' → logprob: -14.750036239624023
    6. ')' → logprob: -15.250036239624023
    7. 's' → logprob: -15.250036239624023
    8. ',' → logprob: -15.250036239624023
    9. 'u' → logprob: -15.375036239624023
    10. '

' → logprob: -15.375036239624023

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21790528297424316
    2. '
' → logprob: -2.467905282974243
    3. '\n' → logprob: -3.217905282974243
    4. '\' → logprob: -3.592905282974243
    5. '<|end|>' → logprob: -4.592905044555664
    6. '.
' → logprob: -4.967905044555664
    7. '

' → logprob: -4.967905044555664
    8. 'import' → logprob: -5.342905044555664
    9. '' → logprob: -5.467905044555664
    10. '```' → logprob: -5.717905044555664

Token 7: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9059579372406006
    2. '\n' → logprob: -1.4059579372406006
    3. '
' → logprob: -1.7809579372406006
    4. '.' → logprob: -2.4059579372406006
    5. '

' → logprob: -2.9059579372406006
    6. '<|end|>' → logprob: -4.78095817565918
    7. '```' → logprob: -4.90595817565918
    8. '' → logprob: -5.28095817565918
    9. 'def' → logprob: -5.53095817565918
    10. 'import' → logprob: -5.90595817565918

Token 8: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007994010113179684
    2. '.' → logprob: -4.882994174957275
    3. '()' → logprob: -9.507993698120117
    4. '=' → logprob: -9.632993698120117
    5. ')' → logprob: -9.757993698120117
    6. ' (' → logprob: -10.132993698120117
    7. '(
' → logprob: -10.507993698120117
    8. '```' → logprob: -10.507993698120117
    9. '(.)' → logprob: -10.882993698120117
    10. '[' → logprob: -11.382993698120117

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00015002528380136937
    2. '.
' → logprob: -9.375149726867676
    3. '.readline' → logprob: -10.875149726867676
    4. ' .' → logprob: -11.125149726867676
    5. '[' → logprob: -11.375149726867676
    6. '.stdin' → logprob: -12.750149726867676
    7. '.

' → logprob: -12.875149726867676
    8. '.

' → logprob: -13.625149726867676
    9. '.setdefault' → logprob: -13.750149726867676
    10. '.get' → logprob: -13.750149726867676

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5780274271965027
    2. '.' → logprob: -0.8280274271965027
    3. '.read' → logprob: -6.203027248382568
    4. '```' → logprob: -11.703027725219727
    5. '.readlines' → logprob: -11.828027725219727
    6. '.\' → logprob: -11.953027725219727
    7. 'read' → logprob: -12.328027725219727
    8. '.Read' → logprob: -12.453027725219727
    9. '.
' → logprob: -12.703027725219727
    10. ''.' → logprob: -12.828027725219727

Token 11: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44769972562789917
    2. '(' → logprob: -1.072699785232544
    3. '()
' → logprob: -4.697699546813965
    4. '(
' → logprob: -4.947699546813965
    5. '()

' → logprob: -6.822699546813965
    6. '
' → logprob: -7.572699546813965
    7. '()\' → logprob: -8.322699546813965
    8. '\n' → logprob: -8.947699546813965
    9. '(

' → logprob: -8.947699546813965
    10. '

' → logprob: -9.447699546813965

Token 12: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.485946923494339
    2. '()' → logprob: -1.3609468936920166
    3. 'def' → logprob: -2.2359468936920166
    4. '(
' → logprob: -5.110947132110596
    5. 'n' → logprob: -5.360947132110596
    6. '(n' → logprob: -5.485947132110596
    7. 'for' → logprob: -6.110947132110596
    8. '()
' → logprob: -7.110947132110596
    9. '()\' → logprob: -7.110947132110596
    10. '```' → logprob: -7.360947132110596

Token 13: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6757182478904724
    2. '=' → logprob: -1.0507183074951172
    3. ' ' → logprob: -2.050718307495117
    4. ')' → logprob: -5.300718307495117
    5. ',' → logprob: -5.925718307495117
    6. '<|end|>' → logprob: -6.050718307495117
    7. ' )' → logprob: -7.425718307495117
    8. '>' → logprob: -7.425718307495117
    9. '  ' → logprob: -7.800718307495117
    10. '.' → logprob: -8.300718307495117

Token 14: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3521536588668823
    2. '=' → logprob: -1.2271536588668823
    3. ',' → logprob: -5.727153778076172
    4. ' ' → logprob: -8.602153778076172
    5. ' =
' → logprob: -8.977153778076172
    6. ' ,' → logprob: -9.852153778076172
    7. '=int' → logprob: -10.477153778076172
    8. ')' → logprob: -11.602153778076172
    9. '=input' → logprob: -11.727153778076172
    10. '=

' → logprob: -11.977153778076172

Token 15: 'map' (ID: 3726)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20142026245594025
    2. 'map' → logprob: -1.7014203071594238
    3. 'int' → logprob: -12.201419830322266
    4. ' int' → logprob: -13.701419830322266
    5. ' ' → logprob: -14.951419830322266
    6. 'list' → logprob: -15.576419830322266
    7. ' list' → logprob: -16.326419830322266
    8. '	map' → logprob: -16.451419830322266
    9. ',map' → logprob: -16.826419830322266
    10. '(map' → logprob: -17.326419830322266

Token 16: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23092186450958252
    2. '(int' → logprob: -1.6059218645095825
    3. '(lambda' → logprob: -5.355921745300293
    4. '(str' → logprob: -7.730921745300293
    5. 'int' → logprob: -9.230921745300293
    6. '(
' → logprob: -10.105921745300293
    7. '(input' → logprob: -10.230921745300293
    8. '(tuple' → logprob: -10.480921745300293
    9. '(list' → logprob: -10.605921745300293
    10. '[int' → logprob: -10.730921745300293

Token 17: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35825464129447937
    2. ',input' → logprob: -1.2332546710968018
    3. ',int' → logprob: -4.858254432678223
    4. '(' → logprob: -6.733254432678223
    5. '(input' → logprob: -7.983254432678223
    6. '(sys' → logprob: -8.858254432678223
    7. 'input' → logprob: -9.858254432678223
    8. ' ,' → logprob: -10.108254432678223
    9. ',(' → logprob: -10.358254432678223
    10. ')' → logprob: -10.358254432678223

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005319446790963411
    2. '()' → logprob: -8.125532150268555
    3. '())' → logprob: -8.500532150268555
    4. '('' → logprob: -10.875532150268555
    5. '(' → logprob: -12.375532150268555
    6. '()))' → logprob: -12.500532150268555
    7. ' ().' → logprob: -12.875532150268555
    8. '('').' → logprob: -14.375532150268555
    9. ')' → logprob: -14.625532150268555
    10. '()[' → logprob: -15.000532150268555

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006774079520255327
    2. 'strip' → logprob: -7.500677585601807
    3. 'rstrip' → logprob: -9.000677108764648
    4. ' split' → logprob: -14.250677108764648
    5. '(split' → logprob: -16.00067710876465
    6. 'read' → logprob: -16.25067710876465
    7. 'spl' → logprob: -17.12567710876465
    8. ')' → logprob: -18.12567710876465
    9. '_split' → logprob: -18.50067710876465
    10. 'rs' → logprob: -19.00067710876465

Token 20: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007663409225642681
    2. '))' → logprob: -4.882663249969482
    3. '())' → logprob: -10.50766372680664
    4. '()' → logprob: -11.38266372680664
    5. ')
' → logprob: -12.13266372680664
    6. '),' → logprob: -12.50766372680664
    7. ')))' → logprob: -13.25766372680664
    8. '`)' → logprob: -13.25766372680664
    9. ')`' → logprob: -13.75766372680664
    10. ' )' → logprob: -13.75766372680664

Token 21: 'G' (ID: 38)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.07845564186573029
    2. '
' → logprob: -3.203455686569214
    3. ' graph' → logprob: -4.078455448150635
    4. '\n' → logprob: -5.328455448150635
    5. ' 
' → logprob: -5.828455448150635
    6. '```' → logprob: -6.578455448150635
    7. '
' → logprob: -6.828455448150635
    8. 'edges' → logprob: -6.828455448150635
    9. '_graph' → logprob: -7.078455448150635
    10. 'data' → logprob: -7.078455448150635

Token 22: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03740665316581726
    2. ' =' → logprob: -3.5374066829681396
    3. '[' → logprob: -5.1624064445495605
    4. '=[' → logprob: -6.7874064445495605
    5. '=[]' → logprob: -7.2874064445495605
    6. ' =[' → logprob: -10.037406921386719
    7. '={}' → logprob: -11.537406921386719
    8. ',' → logprob: -12.162406921386719
    9. '=[
' → logprob: -12.287406921386719
    10. '=[[' → logprob: -12.287406921386719

Token 23: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.8670179997570813e-05
    2. ' []' → logprob: -11.000019073486328
    3. '[]
' → logprob: -13.375019073486328
    4. '[' → logprob: -15.250019073486328
    5. '[]

' → logprob: -16.000019073486328
    6. 'list' → logprob: -17.375019073486328
    7. '[][]' → logprob: -17.875019073486328
    8. '[]}' → logprob: -19.000019073486328
    9. '[],' → logprob: -19.500019073486328
    10. '][]' → logprob: -20.000019073486328

Token 24: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.33663854002952576
    2. '(' → logprob: -1.3366385698318481
    3. ' for' → logprob: -4.336638450622559
    4. 'for' → logprob: -4.961638450622559
    5. ']' → logprob: -6.711638450622559
    6. '()]' → logprob: -6.711638450622559
    7. ')' → logprob: -8.836638450622559
    8. ' ()' → logprob: -9.211638450622559
    9. '(N' → logprob: -9.586638450622559
    10. '(
' → logprob: -10.211638450622559

Token 25: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.039226267486810684
    2. ' _' → logprob: -4.164226055145264
    3. ' range' → logprob: -4.539226055145264
    4. 'range' → logprob: -5.289226055145264
    5. '(' → logprob: -5.664226055145264
    6. ' in' → logprob: -6.289226055145264
    7. '(range' → logprob: -8.039226531982422
    8. ' ' → logprob: -8.164226531982422
    9. ' i' → logprob: -8.289226531982422
    10. '_range' → logprob: -8.414226531982422

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07063303887844086
    2. 'in' → logprob: -2.6956329345703125
    3. 'range' → logprob: -7.3206329345703125
    4. 'i' → logprob: -11.695632934570312
    5. ' range' → logprob: -11.945632934570312
    6. '_' → logprob: -11.945632934570312
    7. ' ' → logprob: -12.070632934570312
    8. '0' → logprob: -13.445632934570312
    9. 's' → logprob: -13.570632934570312
    10. 'I' → logprob: -14.320632934570312

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011703446507453918
    2. ' range' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.001171112060547
    4. '(range' → logprob: -17.626171112060547
    5. 'r' → logprob: -19.126171112060547
    6. '	range' → logprob: -19.251171112060547
    7. 'ran' → logprob: -19.501171112060547
    8. '  ' → logprob: -19.626171112060547
    9. 'rang' → logprob: -19.626171112060547
    10. '0' → logprob: -20.126171112060547

Token 28: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -3.774276774493046e-05
    2. '(' → logprob: -10.500038146972656
    3. 'N' → logprob: -11.625038146972656
    4. '(M' → logprob: -13.875038146972656
    5. '(n' → logprob: -15.625038146972656
    6. ' (' → logprob: -16.500038146972656
    7. '	N' → logprob: -18.250038146972656
    8. ')' → logprob: -18.875038146972656
    9. ' N' → logprob: -19.000038146972656
    10. '((' → logprob: -19.125038146972656

Token 29: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.9146995327901095e-05
    2. ')' → logprob: -11.125019073486328
    3. ']' → logprob: -13.125019073486328
    4. ' )' → logprob: -14.125019073486328
    5. ')]
' → logprob: -14.250019073486328
    6. ')])' → logprob: -14.625019073486328
    7. ')]
' → logprob: -15.625019073486328
    8. ')],' → logprob: -16.000019073486328
    9. ')]

' → logprob: -16.125019073486328
    10. '])' → logprob: -16.125019073486328

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012475410767365247
    2. '2' → logprob: -9.62512493133545
    3. ' ' → logprob: -9.75012493133545
    4. '```' → logprob: -15.62512493133545
    5. '3' → logprob: -17.000123977661133
    6. '   ' → logprob: -17.500123977661133
    7. 'M' → logprob: -17.625123977661133
    8. '7' → logprob: -17.750123977661133
    9. ')' → logprob: -17.750123977661133
    10. '(' → logprob: -17.750123977661133

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003979496657848358
    2. ']' → logprob: -6.003979682922363
    3. ')' → logprob: -6.503979682922363
    4. '])' → logprob: -13.003979682922363
    5. ')]
' → logprob: -14.003979682922363
    6. '])]' → logprob: -15.003979682922363
    7. ')])' → logprob: -15.003979682922363
    8. ']
' → logprob: -15.128979682922363
    9. ' )' → logprob: -15.378979682922363
    10. ')]
' → logprob: -15.628979682922363

Token 32: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03599297255277634
    2. '
' → logprob: -3.5359928607940674
    3. ' for' → logprob: -5.4109930992126465
    4. '<|end|>' → logprob: -7.1609930992126465
    5. '
' → logprob: -7.7859930992126465
    6. '```' → logprob: -8.410992622375488
    7. '' → logprob: -9.160992622375488
    8. '\n' → logprob: -9.535992622375488
    9. '  
' → logprob: -10.035992622375488
    10. ' 
' → logprob: -10.410992622375488

Token 33: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12727327644824982
    2. '_' → logprob: -2.1272733211517334
    3. ' i' → logprob: -8.127273559570312
    4. '_i' → logprob: -10.627273559570312
    5. ' ' → logprob: -10.752273559570312
    6. 'i' → logprob: -12.752273559570312
    7. ' ▁' → logprob: -14.877273559570312
    8. ' ‌' → logprob: -15.377273559570312
    9. '  ' → logprob: -15.752273559570312
    10. ' ' → logprob: -16.002273559570312

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20143409073352814
    2. 'in' → logprob: -1.7014341354370117
    3. ' ' → logprob: -11.076434135437012
    4. '```' → logprob: -13.451434135437012
    5. 'i' → logprob: -14.326434135437012
    6. ' i' → logprob: -14.451434135437012
    7. '	in' → logprob: -14.451434135437012
    8. 'import' → logprob: -14.576434135437012
    9. '<|end|>' → logprob: -14.826434135437012
    10. 'int' → logprob: -15.326434135437012

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132631182670593
    2. ' range' → logprob: -1.313263177871704
    3. '(range' → logprob: -14.688262939453125
    4. ' ' → logprob: -15.063262939453125
    5. 'r' → logprob: -15.813262939453125
    6. '	range' → logprob: -16.188262939453125
    7. 'rang' → logprob: -16.563262939453125
    8. '_range' → logprob: -16.938262939453125
    9. 'ran' → logprob: -17.063262939453125
    10. '```' → logprob: -17.188262939453125

Token 36: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.07900865375995636
    2. '(' → logprob: -2.5790085792541504
    3. ' (' → logprob: -9.579009056091309
    4. '(N' → logprob: -10.204009056091309
    5. ' M' → logprob: -12.704009056091309
    6. '(int' → logprob: -12.829009056091309
    7. '(
' → logprob: -12.954009056091309
    8. 'M' → logprob: -13.079009056091309
    9. '()' → logprob: -14.079009056091309
    10. '(range' → logprob: -14.579009056091309

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009968562982976437
    2. ')' → logprob: -4.6349687576293945
    3. ' ):' → logprob: -9.009968757629395
    4. '):
' → logprob: -10.009968757629395
    5. ':' → logprob: -10.259968757629395
    6. ' )' → logprob: -12.884968757629395
    7. ',' → logprob: -13.009968757629395
    8. '```' → logprob: -13.884968757629395
    9. '):
' → logprob: -14.134968757629395
    10. '():' → logprob: -14.384968757629395

Token 38: ' a' (ID: 261)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.2873649299144745
    2. 'u' → logprob: -1.4123649597167969
    3. 'a' → logprob: -5.537364959716797
    4. ' a' → logprob: -6.537364959716797
    5. '<|end|>' → logprob: -8.037364959716797
    6. ' 
' → logprob: -8.662364959716797
    7. ' s' → logprob: -9.662364959716797
    8. 's' → logprob: -9.787364959716797
    9. '```' → logprob: -10.287364959716797
    10. '   ' → logprob: -10.537364959716797

Token 39: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.005615769885480404
    2. ',' → logprob: -5.630615711212158
    3. 'b' → logprob: -7.505615711212158
    4. ' ,' → logprob: -7.755615711212158
    5. ',u' → logprob: -8.130616188049316
    6. ' b' → logprob: -8.380616188049316
    7. ',v' → logprob: -9.130616188049316
    8. ',s' → logprob: -9.505616188049316
    9. ',B' → logprob: -9.630616188049316
    10. ',a' → logprob: -9.880616188049316

Token 40: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026794712990522385
    2. ' =' → logprob: -4.151794910430908
    3. ',' → logprob: -4.651794910430908
    4. ',b' → logprob: -7.901794910430908
    5. ',a' → logprob: -7.901794910430908
    6. '=input' → logprob: -8.65179443359375
    7. ' ,' → logprob: -9.15179443359375
    8. ' ' → logprob: -10.40179443359375
    9. ',input' → logprob: -10.65179443359375
    10. '=int' → logprob: -10.77679443359375

Token 41: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013574945041909814
    2. ' =' → logprob: -7.001357555389404
    3. '=input' → logprob: -7.751357555389404
    4. '=sys' → logprob: -12.251357078552246
    5. '=line' → logprob: -12.751357078552246
    6. '=a' → logprob: -13.001357078552246
    7. '=int' → logprob: -13.251357078552246
    8. '=list' → logprob: -13.876357078552246
    9. '=

' → logprob: -14.251357078552246
    10. '=_' → logprob: -15.251357078552246

Token 42: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.2519310414791107
    2. ' map' → logprob: -1.501931071281433
    3. '	map' → logprob: -13.376931190490723
    4. 'm' → logprob: -15.876931190490723
    5. ' ' → logprob: -16.251930236816406
    6. '(map' → logprob: -17.376930236816406
    7. '```' → logprob: -17.501930236816406
    8. '.map' → logprob: -17.751930236816406
    9. 'list' → logprob: -17.751930236816406
    10. ',map' → logprob: -18.001930236816406

Token 43: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -12.375011444091797
    3. '<int' → logprob: -12.625011444091797
    4. '(input' → logprob: -13.875011444091797
    5. 'int' → logprob: -14.000011444091797
    6. '(str' → logprob: -14.125011444091797
    7. '[int' → logprob: -14.375011444091797
    8. ',int' → logprob: -15.125011444091797
    9. '(lambda' → logprob: -15.250011444091797
    10. '=int' → logprob: -15.375011444091797

Token 44: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0007544778054580092
    2. ',' → logprob: -7.625754356384277
    3. '(input' → logprob: -8.625754356384277
    4. ',int' → logprob: -9.875754356384277
    5. 'input' → logprob: -10.625754356384277
    6. '(' → logprob: -11.875754356384277
    7. ' input' → logprob: -13.625754356384277
    8. ' ,' → logprob: -13.750754356384277
    9. '=input' → logprob: -14.375754356384277
    10. ',line' → logprob: -14.875754356384277

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.875000953674316
    3. ' ().' → logprob: -16.000001907348633
    4. '.' → logprob: -17.000001907348633
    5. '(' → logprob: -17.625001907348633
    6. '.split' → logprob: -17.750001907348633
    7. '.readline' → logprob: -18.000001907348633
    8. ')' → logprob: -18.375001907348633
    9. '())' → logprob: -19.500001907348633
    10. '()
' → logprob: -20.000001907348633

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.500000953674316
    3. 'strip' → logprob: -15.750000953674316
    4. '(split' → logprob: -16.125
    5. 'spl' → logprob: -17.375
    6. '```' → logprob: -18.0
    7. 'rstrip' → logprob: -18.0
    8. '.split' → logprob: -18.875
    9. 'plit' → logprob: -19.375
    10. 's' → logprob: -20.125

Token 47: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007856834563426673
    2. '())' → logprob: -7.500785827636719
    3. '()' → logprob: -9.000785827636719
    4. '))' → logprob: -9.750785827636719
    5. ')
' → logprob: -10.125785827636719
    6. ' )' → logprob: -12.000785827636719
    7. '(' → logprob: -13.750785827636719
    8. ')a' → logprob: -14.500785827636719
    9. '())
' → logprob: -15.000785827636719
    10. ')`' → logprob: -15.000785827636719

Token 48: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.05753406509757042
    2. ' G' → logprob: -2.9325339794158936
    3. '
' → logprob: -6.807534217834473
    4. '<|end|>' → logprob: -6.932534217834473
    5. ' 
' → logprob: -9.182534217834473
    6. '	G' → logprob: -9.182534217834473
    7. '   ' → logprob: -9.307534217834473
    8. '```' → logprob: -9.807534217834473
    9. '\' → logprob: -10.432534217834473
    10. 'a' → logprob: -10.557534217834473

Token 49: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0011737978784367442
    2. '[b' → logprob: -6.751173973083496
    3. '[' → logprob: -12.626173973083496
    4. ' [' → logprob: -16.00117301940918
    5. 'a' → logprob: -16.12617301940918
    6. '[c' → logprob: -17.50117301940918
    7. '```' → logprob: -17.87617301940918
    8. ' ' → logprob: -19.25117301940918
    9. ' a' → logprob: -19.37617301940918
    10. '[g' → logprob: -19.50117301940918

Token 50: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.014953586272895336
    2. ').' → logprob: -4.26495361328125
    3. '.append' → logprob: -7.88995361328125
    4. '.' → logprob: -8.01495361328125
    5. ']' → logprob: -10.01495361328125
    6. ' ].' → logprob: -10.88995361328125
    7. ')' → logprob: -12.13995361328125
    8. '}.' → logprob: -12.51495361328125
    9. '[' → logprob: -12.63995361328125
    10. '   ' → logprob: -13.38995361328125

Token 51: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3663626305060461e-05
    2. 'push' → logprob: -11.75001335144043
    3. 'app' → logprob: -12.37501335144043
    4. '.append' → logprob: -13.87501335144043
    5. ' append' → logprob: -15.37501335144043
    6. 'heap' → logprob: -15.50001335144043
    7. ' ' → logprob: -15.87501335144043
    8. 'appen' → logprob: -16.12501335144043
    9. '_append' → logprob: -17.50001335144043
    10. 'he' → logprob: -19.12501335144043

Token 52: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.08924860507249832
    2. '(b' → logprob: -2.5892486572265625
    3. '(' → logprob: -4.5892486572265625
    4. ' (' → logprob: -9.339248657226562
    5. '(c' → logprob: -10.214248657226562
    6. '(B' → logprob: -11.464248657226562
    7. '([' → logprob: -12.339248657226562
    8. '(a' → logprob: -12.964248657226562
    9. ' ((' → logprob: -13.464248657226562
    10. '(
' → logprob: -14.964248657226562

Token 53: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016147449612617493
    2. ' b' → logprob: -4.141147613525391
    3. 'c' → logprob: -9.14114761352539
    4. ' c' → logprob: -12.26614761352539
    5. ' ' → logprob: -13.89114761352539
    6. ')b' → logprob: -15.76614761352539
    7. ',b' → logprob: -15.89114761352539
    8. '   ' → logprob: -17.51614761352539
    9. '  ' → logprob: -17.64114761352539
    10. '	b' → logprob: -18.14114761352539

Token 54: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.5802289247512817
    2. ',' → logprob: -0.8302289247512817
    3. ' ,' → logprob: -5.455228805541992
    4. 'c' → logprob: -13.330228805541992
    5. ',
' → logprob: -14.080228805541992
    6. '‌,' → logprob: -14.330228805541992
    7. ' c' → logprob: -14.455228805541992
    8. ' ' → logprob: -14.705228805541992
    9. '`,' → logprob: -15.455228805541992
    10. ',b' → logprob: -15.455228805541992

Token 55: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001307263970375061
    2. ')' → logprob: -7.126307487487793
    3. ' ))' → logprob: -7.876307487487793
    4. '))
' → logprob: -9.126307487487793
    5. ',' → logprob: -12.376307487487793
    6. ')))' → logprob: -12.626307487487793
    7. ' )' → logprob: -13.251307487487793
    8. ' ' → logprob: -13.501307487487793
    9. '))

' → logprob: -13.626307487487793
    10. '),' → logprob: -13.751307487487793

Token 56: 'INF' (ID: 64358)
  Prédit: ' G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.030674025416374207
    2. 'G' → logprob: -4.030673980712891
    3. '<|end|>' → logprob: -5.030673980712891
    4. ' ' → logprob: -5.405673980712891
    5. 'a' → logprob: -7.655673980712891
    6. ' a' → logprob: -8.28067398071289
    7. '```' → logprob: -8.40567398071289
    8. '
' → logprob: -9.53067398071289
    9. ' 
' → logprob: -9.53067398071289
    10. '	G' → logprob: -10.40567398071289

Token 57: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.475358247756958
    2. '=' → logprob: -0.975358247756958
    3. '=int' → logprob: -6.850358009338379
    4. '=float' → logprob: -8.475358009338379
    5. '=sys' → logprob: -12.975358009338379
    6. '＝' → logprob: -13.100358009338379
    7. ')' → logprob: -13.100358009338379
    8. ' ' → logprob: -13.475358009338379
    9. ')=' → logprob: -13.725358009338379
    10. ' ' → logprob: -14.225358009338379

Token 58: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3493669331073761
    2. 'int' → logprob: -1.3493669033050537
    3. 'float' → logprob: -3.5993669033050537
    4. '1' → logprob: -5.474367141723633
    5. ' int' → logprob: -6.474367141723633
    6. ' ' → logprob: -6.474367141723633
    7. ' float' → logprob: -7.974367141723633
    8. '100' → logprob: -7.974367141723633
    9. '987' → logprob: -8.974367141723633
    10. 'sys' → logprob: -11.099367141723633

Token 59: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002348530339077115
    2. '18' → logprob: -6.50234842300415
    3. '10' → logprob: -7.50234842300415
    4. '**' → logprob: -9.377348899841309
    5. '15' → logprob: -9.377348899841309
    6. '12' → logprob: -9.502348899841309
    7. '7' → logprob: -11.002348899841309
    8. '8' → logprob: -11.502348899841309
    9. '19' → logprob: -12.127348899841309
    10. '14' → logprob: -12.252348899841309

Token 60: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.010356800630688667
    2. '15' → logprob: -4.760356903076172
    3. '10' → logprob: -6.760356903076172
    4. '18' → logprob: -7.760356903076172
    5. '12' → logprob: -9.010356903076172
    6. '14' → logprob: -11.135356903076172
    7. '11' → logprob: -11.760356903076172
    8. '16' → logprob: -12.010356903076172
    9. '13' → logprob: -12.635356903076172
    10. '7' → logprob: -14.385356903076172

Token 61: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09627995640039444
    2. 'distance' → logprob: -2.5962798595428467
    3. '
' → logprob: -4.221280097961426
    4. ' dist' → logprob: -6.971280097961426
    5. 'd' → logprob: -7.971280097961426
    6. ' 
' → logprob: -8.346280097961426
    7. '
' → logprob: -8.471280097961426
    8. ' distances' → logprob: -8.846280097961426
    9. ' distance' → logprob: -9.346280097961426
    10. '```' → logprob: -9.346280097961426

Token 62: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01192884799093008
    2. 'distance' → logprob: -4.511929035186768
    3. ' dist' → logprob: -7.636929035186768
    4. 'd' → logprob: -8.88692855834961
    5. 'dp' → logprob: -9.26192855834961
    6. 'D' → logprob: -10.13692855834961
    7. 'dis' → logprob: -10.13692855834961
    8. 'cost' → logprob: -10.51192855834961
    9. 'Dist' → logprob: -11.76192855834961
    10. 'def' → logprob: -12.01192855834961

Token 63: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.6426913142204285
    2. '=' → logprob: -1.3926913738250732
    3. ' =' → logprob: -1.5176913738250732
    4. ' =[' → logprob: -5.642691135406494
    5. '[' → logprob: -6.017691135406494
    6. '=[]' → logprob: -7.767691135406494
    7. '=[[' → logprob: -10.642691612243652
    8. ',' → logprob: -11.267691612243652
    9. '={}' → logprob: -11.392691612243652
    10. '[:]' → logprob: -11.392691612243652

Token 64: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0009218233171850443
    2. ' INF' → logprob: -7.000921726226807
    3. '-INF' → logprob: -12.625922203063965
    4. '0' → logprob: -12.875922203063965
    5. '_INF' → logprob: -13.000922203063965
    6. 'inf' → logprob: -14.375922203063965
    7. '[' → logprob: -14.750922203063965
    8. 'IN' → logprob: -14.875922203063965
    9. ']' → logprob: -15.000922203063965
    10. ')' → logprob: -16.25092124938965

Token 65: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.0721316933631897
    2. ']' → logprob: -2.947131633758545
    3. ']*' → logprob: -4.197131633758545
    4. ' for' → logprob: -6.572131633758545
    5. ' ]' → logprob: -7.572131633758545
    6. 'for' → logprob: -9.447132110595703
    7. ']+' → logprob: -9.947132110595703
    8. ',' → logprob: -10.822132110595703
    9. '*(' → logprob: -14.072132110595703
    10. ')]' → logprob: -15.072132110595703

Token 66: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002502535644453019
    2. ' N' → logprob: -8.375249862670898
    3. '(N' → logprob: -10.875249862670898
    4. '(' → logprob: -15.500249862670898
    5. '	N' → logprob: -15.750249862670898
    6. ' (' → logprob: -15.750249862670898
    7. ' ' → logprob: -16.0002498626709
    8. '   ' → logprob: -16.5002498626709
    9. ')' → logprob: -16.8752498626709
    10. '  ' → logprob: -17.5002498626709

Token 67: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9623810658231378e-05
    2. ' +' → logprob: -10.875020027160645
    3. '+
' → logprob: -14.750020027160645
    4. '+

' → logprob: -16.750019073486328
    5. '1' → logprob: -16.875019073486328
    6. '+)' → logprob: -17.000019073486328
    7. '＋' → logprob: -17.125019073486328
    8. ')' → logprob: -17.750019073486328
    9. '```' → logprob: -18.625019073486328
    10. ')+' → logprob: -19.500019073486328

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -15.625017166137695
    4. ')' → logprob: -17.062517166137695
    5. '   ' → logprob: -17.937517166137695
    6. '１' → logprob: -18.000017166137695
    7. '۱' → logprob: -18.562517166137695
    8. '```' → logprob: -18.562517166137695
    9. '  ' → logprob: -18.625017166137695
    10. '+' → logprob: -18.687517166137695

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.2576454335358e-05
    2. ')
' → logprob: -9.625092506408691
    3. ' )' → logprob: -10.625092506408691
    4. '<|end|>' → logprob: -14.000092506408691
    5. ')

' → logprob: -14.875092506408691
    6. ')
' → logprob: -15.125092506408691
    7. '```' → logprob: -15.750092506408691
    8. '),' → logprob: -16.000093460083008
    9. ']' → logprob: -16.500093460083008
    10. '
' → logprob: -16.750093460083008

Token 70: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008782263845205307
    2. '
' → logprob: -4.758782386779785
    3. ' dist' → logprob: -9.883782386779785
    4. '
' → logprob: -10.008782386779785
    5. 'import' → logprob: -10.383782386779785
    6. 'def' → logprob: -10.758782386779785
    7. '```' → logprob: -12.258782386779785
    8. ' 
' → logprob: -12.383782386779785
    9. '

' → logprob: -12.508782386779785
    10. 'd' → logprob: -13.133782386779785

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.107425062713446e-06
    2. '```' → logprob: -12.875006675720215
    3. '<|end|>' → logprob: -13.125006675720215
    4. '\[' → logprob: -13.625006675720215
    5. '[
' → logprob: -14.500006675720215
    6. ' [' → logprob: -15.125006675720215
    7. '0' → logprob: -16.75000762939453
    8. '[N' → logprob: -17.00000762939453
    9. ',' → logprob: -17.37500762939453
    10. '[source' → logprob: -17.37500762939453

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.792751032160595e-05
    2. ' ' → logprob: -9.37508773803711
    3. '0' → logprob: -13.00008773803711
    4. ')' → logprob: -15.50008773803711
    5. 'start' → logprob: -16.00008773803711
    6. ']' → logprob: -16.25008773803711
    7. '```' → logprob: -16.50008773803711
    8. 's' → logprob: -16.87508773803711
    9. '2' → logprob: -17.00008773803711
    10. '-' → logprob: -17.25008773803711

Token 73: ']=' (ID: 9539)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47764748334884644
    2. ')=' → logprob: -1.3526475429534912
    3. ']=' → logprob: -2.727647542953491
    4. ']' → logprob: -3.227647542953491
    5. ' )' → logprob: -4.352647304534912
    6. ' ]' → logprob: -6.977647304534912
    7. '=' → logprob: -6.977647304534912
    8. '])' → logprob: -7.102647304534912
    9. ')]' → logprob: -7.477647304534912
    10. ' ])' → logprob: -10.47764778137207

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -18.125001907348633
    4. '０' → logprob: -18.875001907348633
    5. '000' → logprob: -19.000001907348633
    6. '০' → logprob: -19.687501907348633
    7. '   ' → logprob: -20.000001907348633
    8. '00' → logprob: -20.000001907348633
    9. '०' → logprob: -20.000001907348633
    10. '٠' → logprob: -20.062501907348633

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5756753087043762
    2. 'heap' → logprob: -1.7006752490997314
    3. 'pq' → logprob: -2.0756752490997314
    4. 'q' → logprob: -2.8256752490997314
    5. 'hq' → logprob: -3.4506752490997314
    6. 'h' → logprob: -3.8256752490997314
    7. 'import' → logprob: -4.4506754875183105
    8. 'queue' → logprob: -6.2006754875183105
    9. '```' → logprob: -6.9506754875183105
    10. '
' → logprob: -7.5756754875183105

Token 76: 'hq' (ID: 156668)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.16096830368042
    2. 'hq' → logprob: -1.41096830368042
    3. 'pq' → logprob: -1.41096830368042
    4. 'heap' → logprob: -1.91096830368042
    5. 'h' → logprob: -3.41096830368042
    6. 'import' → logprob: -4.41096830368042
    7. 'queue' → logprob: -5.28596830368042
    8. '
' → logprob: -8.035968780517578
    9. '```' → logprob: -8.535968780517578
    10. 'que' → logprob: -8.660968780517578

Token 77: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8012677431106567
    2. ' =' → logprob: -1.1762677431106567
    3. '=[]' → logprob: -1.8012677431106567
    4. '.' → logprob: -3.551267623901367
    5. '.append' → logprob: -3.676267623901367
    6. '.push' → logprob: -5.051267623901367
    7. '.heap' → logprob: -5.426267623901367
    8. '<|end|>' → logprob: -5.426267623901367
    9. '.he' → logprob: -5.551267623901367
    10. '=[]
' → logprob: -7.051267623901367

Token 78: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.816093228830141e-06
    2. ' (' → logprob: -12.87500286102295
    3. '0' → logprob: -15.75000286102295
    4. '[' → logprob: -17.625001907348633
    5. '```' → logprob: -18.500001907348633
    6. '[(' → logprob: -18.625001907348633
    7. '((' → logprob: -19.625001907348633
    8. ' ' → logprob: -20.125001907348633
    9. '(
' → logprob: -20.375001907348633
    10. '   ' → logprob: -21.375001907348633

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '(' → logprob: -15.375001907348633
    4. ')' → logprob: -20.875001907348633
    5. '   ' → logprob: -21.000001907348633
    6. '۰' → logprob: -21.500001907348633
    7. '00' → logprob: -21.625001907348633
    8. '０' → logprob: -21.750001907348633
    9. '```' → logprob: -22.000001907348633
    10. 'dist' → logprob: -22.250001907348633

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5822400857578032e-05
    2. ' ,' → logprob: -10.750025749206543
    3. '1' → logprob: -12.500025749206543
    4. ' ' → logprob: -15.375025749206543
    5. ',
' → logprob: -15.375025749206543
    6. '，' → logprob: -16.62502670288086
    7. ',

' → logprob: -17.62502670288086
    8. ',int' → logprob: -17.87502670288086
    9. '```' → logprob: -18.00002670288086
    10. '

' → logprob: -18.25002670288086

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -18.312551498413086
    4. '１' → logprob: -18.687551498413086
    5. '   ' → logprob: -19.000051498413086
    6. '۱' → logprob: -19.687551498413086
    7. '0' → logprob: -19.750051498413086
    8. '  ' → logprob: -20.000051498413086
    9. ')' → logprob: -20.187551498413086
    10. '`' → logprob: -20.250051498413086

Token 82: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03808876872062683
    2. ')' → logprob: -3.288088798522949
    3. ')])' → logprob: -10.91308879852295
    4. ']' → logprob: -11.66308879852295
    5. ' )' → logprob: -12.03808879852295
    6. '))' → logprob: -12.03808879852295
    7. ')]
' → logprob: -12.28808879852295
    8. ')
' → logprob: -13.16308879852295
    9. ')]

' → logprob: -14.66308879852295
    10. ')]
' → logprob: -14.78808879852295

Token 83: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0023943213745951653
    2. '
' → logprob: -6.752394199371338
    3. ' while' → logprob: -6.752394199371338
    4. '```' → logprob: -10.252394676208496
    5. ')' → logprob: -11.627394676208496
    6. 'While' → logprob: -12.002394676208496
    7. '<|end|>' → logprob: -13.127394676208496
    8. '	while' → logprob: -14.127394676208496
    9. '``' → logprob: -14.252394676208496
    10. '' → logprob: -15.127394676208496

Token 84: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.38695815205574036
    2. ' h' → logprob: -1.136958122253418
    3. 'h' → logprob: -9.636958122253418
    4. '	h' → logprob: -11.386958122253418
    5. '(h' → logprob: -12.011958122253418
    6. ' ' → logprob: -13.261958122253418
    7. '```' → logprob: -14.386958122253418
    8. ' len' → logprob: -14.636958122253418
    9. 'len' → logprob: -15.386958122253418
    10. '[h' → logprob: -15.511958122253418

Token 85: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. '
' → logprob: -17.125
    4. '_q' → logprob: -17.375
    5. '

' → logprob: -17.5
    6. '[q' → logprob: -17.625
    7. 'hq' → logprob: -17.625
    8. '	q' → logprob: -18.125
    9. 'qh' → logprob: -18.125
    10. '?q' → logprob: -18.25

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003574172966182232
    2. '):' → logprob: -6.253574371337891
    3. ':
' → logprob: -6.628574371337891
    4. '>:' → logprob: -9.00357437133789
    5. '>' → logprob: -10.00357437133789
    6. '):
' → logprob: -10.25357437133789
    7. ':not' → logprob: -10.37857437133789
    8. ')' → logprob: -10.75357437133789
    9. ':**' → logprob: -11.25357437133789
    10. ' and' → logprob: -11.50357437133789

Token 87: ' t' (ID: 260)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8617429137229919
    2. 'cost' → logprob: -1.6117429733276367
    3. ',' → logprob: -1.7367429733276367
    4. ' d' → logprob: -2.1117429733276367
    5. ' ,' → logprob: -3.7367429733276367
    6. 'c' → logprob: -4.361742973327637
    7. ' cost' → logprob: -4.611742973327637
    8. ' c' → logprob: -4.736742973327637
    9. ',c' → logprob: -5.111742973327637
    10. 'dist' → logprob: -5.236742973327637

Token 88: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3782248795032501
    2. 'dist' → logprob: -1.8782248497009277
    3. 'ime' → logprob: -2.5032248497009277
    4. ',d' → logprob: -4.003224849700928
    5. 'cost' → logprob: -4.128224849700928
    6. ',c' → logprob: -4.628224849700928
    7. 'd' → logprob: -4.628224849700928
    8. '_dist' → logprob: -4.753224849700928
    9. ' ,' → logprob: -5.628224849700928
    10. 'c' → logprob: -5.753224849700928

Token 89: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005374244065023959
    2. ' =' → logprob: -7.625537395477295
    3. '=h' → logprob: -10.250537872314453
    4. '=q' → logprob: -12.000537872314453
    5. '=u' → logprob: -12.375537872314453
    6. ')=' → logprob: -14.625537872314453
    7. '=
' → logprob: -14.625537872314453
    8. '=t' → logprob: -14.750537872314453
    9. '=

' → logprob: -15.000537872314453
    10. '=head' → logprob: -15.250537872314453

Token 90: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.04913240298628807
    2. ' heap' → logprob: -3.0491323471069336
    3. 'he' → logprob: -7.674132347106934
    4. ' he' → logprob: -9.549132347106934
    5. '(heap' → logprob: -12.424132347106934
    6. '.heap' → logprob: -13.549132347106934
    7. 'hep' → logprob: -14.299132347106934
    8. 'hq' → logprob: -14.549132347106934
    9. 'h' → logprob: -14.674132347106934
    10. '_heap' → logprob: -14.674132347106934

Token 91: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.320199877838604e-07
    2. 'p' → logprob: -15.75
    3. '```' → logprob: -16.25
    4. '	q' → logprob: -16.375
    5. ' ' → logprob: -17.75
    6. '

' → logprob: -17.875
    7. '.q' → logprob: -18.25
    8. 'h' → logprob: -18.625
    9. ' q' → logprob: -18.625
    10. '[' → logprob: -18.75

Token 92: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00032628714689053595
    2. '.' → logprob: -8.125326156616211
    3. '.heap' → logprob: -11.000326156616211
    4. '.pop' → logprob: -11.875326156616211
    5. ' .' → logprob: -12.875326156616211
    6. '.h' → logprob: -13.375326156616211
    7. '.p' → logprob: -14.125326156616211
    8. '.q' → logprob: -14.375326156616211
    9. '>.' → logprob: -15.875326156616211
    10. '```' → logprob: -16.00032615661621

Token 93: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.200166469876422e-06
    2. 'pp' → logprob: -12.375004768371582
    3. 'ap' → logprob: -14.125004768371582
    4. 'pop' → logprob: -16.8750057220459
    5. 'q' → logprob: -17.0000057220459
    6. '```' → logprob: -17.8750057220459
    7. 'a' → logprob: -18.1250057220459
    8. '[' → logprob: -18.2500057220459
    9. 'appe' → logprob: -18.6250057220459
    10. 'appen' → logprob: -18.6250057220459

Token 94: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.022648964077234268
    2. 'p' → logprob: -4.272648811340332
    3. 'ush' → logprob: -4.897648811340332
    4. 'pp' → logprob: -7.522648811340332
    5. 'push' → logprob: -8.772648811340332
    6. '```' → logprob: -8.772648811340332
    7. 'app' → logprob: -10.272648811340332
    8. 'ap' → logprob: -11.022648811340332
    9. 'pop' → logprob: -11.272648811340332
    10. 'q' → logprob: -11.397648811340332

Token 95: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.2519785761833191
    2. '(' → logprob: -1.5019786357879639
    3. '(q' → logprob: -10.376978874206543
    4. '(t' → logprob: -12.501978874206543
    5. '(u' → logprob: -12.876978874206543
    6. '(heap' → logprob: -12.876978874206543
    7. ' (' → logprob: -13.126978874206543
    8. '(
' → logprob: -13.251978874206543
    9. '(

' → logprob: -13.501978874206543
    10. '(s' → logprob: -14.001978874206543

Token 96: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.4121114822482923e-06
    2. ')' → logprob: -12.875003814697266
    3. '_q' → logprob: -15.750003814697266
    4. '[' → logprob: -15.875003814697266
    5. '_' → logprob: -16.000003814697266
    6. 'p' → logprob: -16.500003814697266
    7. '```' → logprob: -16.750003814697266
    8. '	q' → logprob: -17.000003814697266
    9. 'Q' → logprob: -17.625003814697266
    10. 'sq' → logprob: -17.750003814697266

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022605215199291706
    2. ')
' → logprob: -6.127260684967041
    3. ' )' → logprob: -9.627260208129883
    4. ')

' → logprob: -12.877260208129883
    5. '<|end|>' → logprob: -13.002260208129883
    6. ')
' → logprob: -13.627260208129883
    7. ' )
' → logprob: -13.752260208129883
    8. ' ' → logprob: -14.877260208129883
    9. ',' → logprob: -15.127260208129883
    10. '),' → logprob: -15.127260208129883

Token 98: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24744641780853271
    2. '<|end|>' → logprob: -1.6224464178085327
    3. ' 
' → logprob: -4.247446537017822
    4. '  
' → logprob: -6.122446537017822
    5. ' if' → logprob: -6.497446537017822
    6. ' ' → logprob: -6.747446537017822
    7. '<|end|>' → logprob: -7.622446537017822
    8. '    
' → logprob: -7.747446537017822
    9. 'if' → logprob: -7.747446537017822
    10. '' → logprob: -8.247446060180664

Token 99: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.22694452106952667
    2. ' t' → logprob: -1.7269445657730103
    3. 'dist' → logprob: -3.9769444465637207
    4. ' ' → logprob: -5.476944446563721
    5. 't' → logprob: -6.101944446563721
    6. '	dist' → logprob: -10.601944923400879
    7. ' ' → logprob: -11.976944923400879
    8. '  ' → logprob: -12.726944923400879
    9. '(dist' → logprob: -12.726944923400879
    10. ' ‌' → logprob: -13.351944923400879

Token 100: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.240481914370321e-05
    2. '[' → logprob: -9.875052452087402
    3. '[t' → logprob: -14.250052452087402
    4. ' [' → logprob: -15.625052452087402
    5. 'u' → logprob: -16.500051498413086
    6. '```' → logprob: -17.375051498413086
    7. '[user' → logprob: -18.000051498413086
    8. '<u' → logprob: -18.250051498413086
    9. ' ' → logprob: -19.000051498413086
    10. '[int' → logprob: -19.000051498413086

Token 101: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6859244704246521
    2. ' <' → logprob: -0.8109244704246521
    3. '<u' → logprob: -3.060924530029297
    4. '<t' → logprob: -6.185924530029297
    5. '!=' → logprob: -7.185924530029297
    6. ' ' → logprob: -7.685924530029297
    7. '<len' → logprob: -7.810924530029297
    8. '<v' → logprob: -8.060924530029297
    9. '<n' → logprob: -8.060924530029297
    10. '<int' → logprob: -8.560924530029297

Token 102: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006715967319905758
    2. ' t' → logprob: -5.006715774536133
    3. '	t' → logprob: -14.881715774536133
    4. ' ' → logprob: -15.381715774536133
    5. '`t' → logprob: -18.256715774536133
    6. 'u' → logprob: -18.256715774536133
    7. '<t' → logprob: -18.506715774536133
    8. '
' → logprob: -19.506715774536133
    9. ')t' → logprob: -19.506715774536133
    10. '   ' → logprob: -19.631715774536133

Token 103: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03389844298362732
    2. ' continue' → logprob: -4.15889835357666
    3. ':
' → logprob: -4.28389835357666
    4. 'continue' → logprob: -5.90889835357666
    5. '	continue' → logprob: -6.78389835357666
    6. ' continues' → logprob: -10.40889835357666
    7. '_continue' → logprob: -11.28389835357666
    8. ' continued' → logprob: -12.28389835357666
    9. ' ' → logprob: -12.65889835357666
    10. '   ' → logprob: -12.90889835357666

Token 104: 'continue' (ID: 19452)
  Prédit: '	continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	continue' → logprob: -0.18290777504444122
    2. ' continue' → logprob: -1.9329078197479248
    3. 'continue' → logprob: -3.807907819747925
    4. '   ' → logprob: -10.182908058166504
    5. '\n' → logprob: -10.182908058166504
    6. '_continue' → logprob: -10.182908058166504
    7. '	' → logprob: -10.307908058166504
    8. '       ' → logprob: -11.057908058166504
    9. '\t' → logprob: -11.182908058166504
    10. ' continues' → logprob: -11.182908058166504

Token 105: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08153427392244339
    2. ' 
' → logprob: -2.9565343856811523
    3. ' for' → logprob: -4.581534385681152
    4. '\n' → logprob: -5.081534385681152
    5. '  
' → logprob: -6.081534385681152
    6. 'n' → logprob: -6.206534385681152
    7. '<|end|>' → logprob: -6.331534385681152
    8. '    
' → logprob: -6.956534385681152
    9. 'for' → logprob: -7.081534385681152
    10. '
' → logprob: -7.706534385681152

Token 106: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03379576653242111
    2. 'for' → logprob: -3.5337958335876465
    3. '
' → logprob: -5.7837958335876465
    4. '   ' → logprob: -8.033795356750488
    5. ' 
' → logprob: -8.158795356750488
    6. '<|end|>' → logprob: -9.033795356750488
    7. '	for' → logprob: -9.533795356750488
    8. '    
' → logprob: -9.783795356750488
    9. '\n' → logprob: -10.783795356750488
    10. ' ' → logprob: -10.783795356750488

Token 107: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01815708540380001
    2. ' v' → logprob: -4.018157005310059
    3. '(v' → logprob: -13.268157005310059
    4. 'w' → logprob: -13.518157005310059
    5. 'to' → logprob: -13.518157005310059
    6. '```' → logprob: -13.893157005310059
    7. '	v' → logprob: -14.268157005310059
    8. 'nv' → logprob: -15.268157005310059
    9. ',v' → logprob: -15.893157005310059
    10. 'x' → logprob: -16.018157958984375

Token 108: ',c' (ID: 22261)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.04320128634572029
    2. ',' → logprob: -3.418201208114624
    3. ',c' → logprob: -4.668201446533203
    4. ',d' → logprob: -9.418201446533203
    5. ' ,' → logprob: -10.918201446533203
    6. ',n' → logprob: -11.418201446533203
    7. ',W' → logprob: -13.043201446533203
    8. ',v' → logprob: -13.168201446533203
    9. ',l' → logprob: -13.668201446533203
    10. ',u' → logprob: -14.043201446533203

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03520379215478897
    2. 'ost' → logprob: -4.03520393371582
    3. 'in' → logprob: -4.53520393371582
    4. 'v' → logprob: -6.41020393371582
    5. ')' → logprob: -7.28520393371582
    6. ' ' → logprob: -7.41020393371582
    7. ',' → logprob: -7.53520393371582
    8. ',v' → logprob: -7.66020393371582
    9. 's' → logprob: -8.28520393371582
    10. 'a' → logprob: -8.53520393371582

Token 110: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.002805940806865692
    2. ' G' → logprob: -5.877805709838867
    3. ' ' → logprob: -14.002805709838867
    4. '(G' → logprob: -15.627805709838867
    5. '  ' → logprob: -17.252805709838867
    6. '<|end|>' → logprob: -17.252805709838867
    7. '```' → logprob: -17.502805709838867
    8. '	G' → logprob: -17.627805709838867
    9. '.G' → logprob: -17.752805709838867
    10. '[G' → logprob: -17.752805709838867

Token 111: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.117345684382599e-05
    2. 'u' → logprob: -11.375020980834961
    3. '[' → logprob: -11.750020980834961
    4. ' [' → logprob: -15.250020980834961
    5. '<u' → logprob: -15.250020980834961
    6. ' u' → logprob: -15.375020980834961
    7. '[s' → logprob: -15.500020980834961
    8. '	u' → logprob: -15.750020980834961
    9. '(u' → logprob: -16.00002098083496
    10. '[
' → logprob: -16.25002098083496

Token 112: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.029300961643457413
    2. '):' → logprob: -3.7793009281158447
    3. ':' → logprob: -5.154301166534424
    4. ']' → logprob: -9.154300689697266
    5. '>:' → logprob: -9.654300689697266
    6. '[' → logprob: -10.279300689697266
    7. ' ):' → logprob: -11.279300689697266
    8. '}:' → logprob: -11.404300689697266
    9. '[u' → logprob: -12.154300689697266
    10. '():' → logprob: -12.404300689697266

Token 113: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' nt' (ID: 7646)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12589985132217407
    2. 'if' → logprob: -2.6258997917175293
    3. ' ' → logprob: -3.6258997917175293
    4. '  ' → logprob: -4.375899791717529
    5. '   ' → logprob: -5.250899791717529
    6. '
' → logprob: -8.375900268554688
    7. '  
' → logprob: -8.500900268554688
    8. '    ' → logprob: -8.625900268554688
    9. ' 
' → logprob: -9.000900268554688
    10. '	if' → logprob: -9.000900268554688

Token 115: '=max' (ID: 102952)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45801231265068054
    2. '=' → logprob: -1.208012342453003
    3. '=t' → logprob: -2.708012342453003
    4. '=n' → logprob: -7.458012104034424
    5. ' ' → logprob: -7.833012104034424
    6. '=int' → logprob: -8.333012580871582
    7. '=v' → logprob: -9.208012580871582
    8. '=u' → logprob: -9.333012580871582
    9. ' =
' → logprob: -9.583012580871582
    10. '=
' → logprob: -9.708012580871582

Token 116: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.002358286874368787
    2. '(' → logprob: -6.752358436584473
    3. '(dist' → logprob: -6.877358436584473
    4. 't' → logprob: -9.002358436584473
    5. '(nt' → logprob: -11.002358436584473
    6. 'dist' → logprob: -11.877358436584473
    7. ' (' → logprob: -12.627358436584473
    8. '(c' → logprob: -12.877358436584473
    9. '0' → logprob: -14.252358436584473
    10. '(n' → logprob: -14.502358436584473

Token 117: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.4273923933506012
    2. ',' → logprob: -1.4273923635482788
    3. ' ,' → logprob: -2.3023924827575684
    4. ' c' → logprob: -5.302392482757568
    5. 'c' → logprob: -6.427392482757568
    6. ' ' → logprob: -8.05239200592041
    7. ',v' → logprob: -8.05239200592041
    8. '+c' → logprob: -9.05239200592041
    9. ' +' → logprob: -9.30239200592041
    10. ',
' → logprob: -9.86489200592041

Token 118: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3151143491268158
    2. ')
' → logprob: -1.3151143789291382
    3. ' )
' → logprob: -7.065114498138428
    4. ' )' → logprob: -7.690114498138428
    5. ')
' → logprob: -7.690114498138428
    6. '+' → logprob: -10.44011402130127
    7. ' ' → logprob: -10.81511402130127
    8. ')+' → logprob: -11.31511402130127
    9. ')

' → logprob: -11.81511402130127
    10. '<|end|>' → logprob: -13.44011402130127

Token 119: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7306022644042969
    2. ' if' → logprob: -0.7306022644042969
    3. '  
' → logprob: -4.355602264404297
    4. '
' → logprob: -4.480602264404297
    5. ' 
' → logprob: -5.355602264404297
    6. 'if' → logprob: -5.605602264404297
    7. '<|end|>' → logprob: -6.480602264404297
    8. '  ' → logprob: -6.730602264404297
    9. ',' → logprob: -7.855602264404297
    10. ')' → logprob: -8.480602264404297

Token 120: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2372131496667862
    2. 'if' → logprob: -1.737213134765625
    3. ' ' → logprob: -3.362213134765625
    4. '  
' → logprob: -8.612213134765625
    5. '<|end|>' → logprob: -9.362213134765625
    6. '  ' → logprob: -9.612213134765625
    7. ';if' → logprob: -10.237213134765625
    8. '
' → logprob: -10.737213134765625
    9. ' 
' → logprob: -10.862213134765625
    10. ',' → logprob: -11.112213134765625

Token 121: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.16630038619041443
    2. 'dist' → logprob: -2.1663002967834473
    3. ' nt' → logprob: -3.4163002967834473
    4. 'nt' → logprob: -5.166300296783447
    5. ' ' → logprob: -11.041300773620605
    6. '(nt' → logprob: -11.041300773620605
    7. '(dist' → logprob: -11.291300773620605
    8. '	dist' → logprob: -11.666300773620605
    9. ' ' → logprob: -12.416300773620605
    10. ' nd' → logprob: -13.291300773620605

Token 122: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.531315314830863e-06
    2. 'v' → logprob: -13.000003814697266
    3. '[' → logprob: -14.250003814697266
    4. '[u' → logprob: -14.625003814697266
    5. ' v' → logprob: -16.625003814697266
    6. '<v' → logprob: -17.375003814697266
    7. ' [' → logprob: -17.375003814697266
    8. '[
' → logprob: -18.875003814697266
    9. '[value' → logprob: -18.875003814697266
    10. '```' → logprob: -18.875003814697266

Token 123: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0699780061841011
    2. ' >' → logprob: -2.6949779987335205
    3. ' ' → logprob: -11.319977760314941
    4. '>NN' → logprob: -12.194977760314941
    5. '">' → logprob: -12.444977760314941
    6. '＞' → logprob: -12.569977760314941
    7. '>tag' → logprob: -13.319977760314941
    8. ')>' → logprob: -13.444977760314941
    9. ']>' → logprob: -13.694977760314941
    10. '>null' → logprob: -13.694977760314941

Token 124: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.22542735934257507
    2. ' nt' → logprob: -1.6004273891448975
    3. '(nt' → logprob: -11.350427627563477
    4. '.nt' → logprob: -13.975427627563477
    5. ' ' → logprob: -14.600427627563477
    6. '_nt' → logprob: -14.725427627563477
    7. ' ' → logprob: -15.225427627563477
    8. 'n' → logprob: -15.225427627563477
    9. ' nto' → logprob: -15.850427627563477
    10. 'nd' → logprob: -16.350427627563477

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02329939976334572
    2. ':
' → logprob: -3.7732994556427
    3. ' :' → logprob: -11.148299217224121
    4. '=' → logprob: -11.273299217224121
    5. ' :
' → logprob: -11.773299217224121
    6. ':

' → logprob: -12.273299217224121
    7. '):' → logprob: -12.898299217224121
    8. '<|end|>' → logprob: -13.148299217224121
    9. 'dist' → logprob: -13.273299217224121
    10. '):
' → logprob: -13.273299217224121

Token 126: '  ' (ID: 256)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.2362688183784485
    2. 'dist' → logprob: -2.4862687587738037
    3. '<|end|>' → logprob: -2.8612687587738037
    4. ' ' → logprob: -3.1112687587738037
    5. '  ' → logprob: -4.111268997192383
    6. '	dist' → logprob: -5.986268997192383
    7. '  
' → logprob: -6.486268997192383
    8. '   ' → logprob: -6.611268997192383
    9. '<|end|>' → logprob: -6.986268997192383
    10. ' 
' → logprob: -7.111268997192383

Token 127: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3172184228897095
    2. 'dist' (adapté à ' dist') → logprob: -1.3172184228897095
    3. '   ' → logprob: -5.69221830368042
    4. '	dist' → logprob: -7.94221830368042
    5. '  ' → logprob: -8.692218780517578
    6. '_dist' → logprob: -11.067218780517578
    7. '    ' → logprob: -11.567218780517578
    8. '<|end|>' → logprob: -11.817218780517578
    9. ' ' → logprob: -12.442218780517578
    10. '(dist' → logprob: -12.567218780517578

Token 128: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.088346359931165e-07
    2. 'v' → logprob: -15.000000953674316
    3. '[' → logprob: -15.250000953674316
    4. '=v' → logprob: -15.625000953674316
    5. '[val' → logprob: -17.25
    6. '[u' → logprob: -18.0
    7. '<v' → logprob: -18.0
    8. '```' → logprob: -18.125
    9. ',v' → logprob: -18.375
    10. '	v' → logprob: -18.5

Token 129: ']=' (ID: 9539)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.4410250782966614
    2. '=v' → logprob: -1.1910250186920166
    3. ']=' → logprob: -3.1910250186920166
    4. ']' → logprob: -4.816025257110596
    5. '=' → logprob: -5.816025257110596
    6. 'v' → logprob: -8.441024780273438
    7. '<v' → logprob: -8.691024780273438
    8. ' =' → logprob: -9.691024780273438
    9. ' v' → logprob: -11.316024780273438
    10. '[' → logprob: -11.441024780273438

Token 130: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.00010950337309623137
    2. ' nt' → logprob: -9.125109672546387
    3. '(nt' → logprob: -15.125109672546387
    4. '_nt' → logprob: -15.875109672546387
    5. 'ntu' → logprob: -16.75010871887207
    6. 'nts' → logprob: -17.12510871887207
    7. '.nt' → logprob: -18.50010871887207
    8. 'n' → logprob: -18.50010871887207
    9. 'ntil' → logprob: -18.87510871887207
    10. 'nta' → logprob: -19.25010871887207

Token 131: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.1166558489203453
    2. ',' → logprob: -2.8666558265686035
    3. ' heap' → logprob: -3.4916558265686035
    4. '  ' → logprob: -4.1166558265686035
    5. ' ' → logprob: -6.2416558265686035
    6. ',
' → logprob: -6.6166558265686035
    7. '(heap' → logprob: -6.8666558265686035
    8. '
' → logprob: -7.4916558265686035
    9. '   ' → logprob: -7.4916558265686035
    10. '  
' → logprob: -7.7416558265686035

Token 132: '  ' (ID: 256)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.011599683202803135
    2. '  ' → logprob: -5.136599540710449
    3. ' heap' → logprob: -5.261599540710449
    4. ' ' → logprob: -7.886599540710449
    5. '   ' → logprob: -10.01159954071045
    6. '(heap' → logprob: -10.63659954071045
    7. '```' → logprob: -11.26159954071045
    8. '
' → logprob: -12.38659954071045
    9. ',' → logprob: -13.38659954071045
    10. '.heap' → logprob: -13.76159954071045

Token 133: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.842555426876061e-06
    2. ' heap' → logprob: -12.250004768371582
    3. 'he' → logprob: -18.3750057220459
    4. '(heap' → logprob: -19.2500057220459
    5. 'heat' → logprob: -22.7500057220459
    6. '.heap' → logprob: -23.3750057220459
    7. '_heap' → logprob: -23.6250057220459
    8. ' ' → logprob: -23.7500057220459
    9. '  ' → logprob: -24.0000057220459
    10. '```' → logprob: -24.7500057220459

Token 134: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8087270038668066e-05
    2. 'push' → logprob: -11.250027656555176
    3. 'p' → logprob: -11.625027656555176
    4. 'he' → logprob: -13.125027656555176
    5. '.he' → logprob: -13.250027656555176
    6. 'h' → logprob: -13.500027656555176
    7. '```' → logprob: -15.375027656555176
    8. '.push' → logprob: -15.375027656555176
    9. 'app' → logprob: -15.625027656555176
    10. 'hq' → logprob: -16.875028610229492

Token 135: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.15310683415737e-05
    2. '.heap' → logprob: -11.625021934509277
    3. 'he' → logprob: -11.875021934509277
    4. 'q' → logprob: -13.375021934509277
    5. '.push' → logprob: -13.500021934509277
    6. '.' → logprob: -14.125021934509277
    7. 'push' → logprob: -14.125021934509277
    8. 'ush' → logprob: -14.625021934509277
    9. 'heap' → logprob: -15.500021934509277
    10. '_he' → logprob: -15.875021934509277

Token 136: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0077200825326144695
    2. 'pp' → logprob: -5.007719993591309
    3. 'ap' → logprob: -7.507719993591309
    4. 'p' → logprob: -7.882719993591309
    5. 'q' → logprob: -9.882719993591309
    6. 'push' → logprob: -10.757719993591309
    7. 'op' → logprob: -13.382719993591309
    8. 'qp' → logprob: -13.882719993591309
    9. '```' → logprob: -14.007719993591309
    10. 'ап' → logprob: -14.757719993591309

Token 137: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0004433011345099658
    2. 'push' → logprob: -7.875443458557129
    3. 'p' → logprob: -10.000443458557129
    4. 'pp' → logprob: -11.250443458557129
    5. 'op' → logprob: -13.000443458557129
    6. 'q' → logprob: -14.125443458557129
    7. 'app' → logprob: -14.250443458557129
    8. '```' → logprob: -14.500443458557129
    9. '_push' → logprob: -16.375442504882812
    10. 'u' → logprob: -16.375442504882812

Token 138: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.375004768371582
    3. '(q' → logprob: -14.750004768371582
    4. ',h' → logprob: -17.125003814697266
    5. '(
' → logprob: -17.250003814697266
    6. 'h' → logprob: -18.125003814697266
    7. '(n' → logprob: -18.250003814697266
    8. ' (' → logprob: -18.250003814697266
    9. '```' → logprob: -18.875003814697266
    10. '(heap' → logprob: -18.875003814697266

Token 139: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0011767742689698935
    2. '(h' → logprob: -6.751176834106445
    3. '(q' → logprob: -12.626176834106445
    4. ' (' → logprob: -13.876176834106445
    5. 'hq' → logprob: -14.001176834106445
    6. 'Q' → logprob: -14.501176834106445
    7. 'qh' → logprob: -15.501176834106445
    8. ')' → logprob: -15.876176834106445
    9. 'qs' → logprob: -16.001176834106445
    10. ' q' → logprob: -16.126176834106445

Token 140: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0005405236734077334
    2. '(q' → logprob: -8.125540733337402
    3. ' (' → logprob: -9.500540733337402
    4. '((' → logprob: -9.750540733337402
    5. ',(' → logprob: -10.125540733337402
    6. '(' → logprob: -10.625540733337402
    7. ',' → logprob: -10.750540733337402
    8. ')' → logprob: -11.250540733337402
    9. ',h' → logprob: -11.750540733337402
    10. '(heap' → logprob: -13.250540733337402

Token 141: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -5.3954463510308415e-05
    2. ' nt' → logprob: -10.250054359436035
    3. 'dist' → logprob: -11.000054359436035
    4. '(nt' → logprob: -13.500054359436035
    5. ' dist' → logprob: -15.875054359436035
    6. '  ' → logprob: -16.12505340576172
    7. '_nt' → logprob: -16.25005340576172
    8. 'nts' → logprob: -17.37505340576172
    9. '```' → logprob: -17.87505340576172
    10. ' ' → logprob: -17.87505340576172

Token 142: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.006728161126375198
    2. ',' → logprob: -5.006728172302246
    3. ' ,' → logprob: -11.506728172302246
    4. 'v' → logprob: -12.881728172302246
    5. ' v' → logprob: -16.50672721862793
    6. ',
' → logprob: -17.63172721862793
    7. '```' → logprob: -18.25672721862793
    8. ')v' → logprob: -18.63172721862793
    9. '?v' → logprob: -18.88172721862793
    10. '	v' → logprob: -19.13172721862793

Token 143: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06197395175695419
    2. '))' → logprob: -2.811974048614502
    3. ')
' → logprob: -12.561973571777344
    4. ' )' → logprob: -13.436973571777344
    5. ')))' → logprob: -14.186973571777344
    6. '))
' → logprob: -14.561973571777344
    7. ')}' → logprob: -16.686973571777344
    8. ' ))' → logprob: -16.936973571777344
    9. ')`' → logprob: -16.936973571777344
    10. ')]' → logprob: -17.436973571777344

Token 144: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5028623342514038
    2. 'print' → logprob: -1.0028623342514038
    3. ' 
' → logprob: -3.7528624534606934
    4. 'for' → logprob: -5.752862453460693
    5. '  
' → logprob: -7.127862453460693
    6. '
' → logprob: -8.377861976623535
    7. '

' → logprob: -8.627861976623535
    8. ' print' → logprob: -8.752861976623535
    9. '```' → logprob: -9.627861976623535
    10. ' 

' → logprob: -9.752861976623535

Token 145: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03366852179169655
    2. ' dist' → logprob: -3.4086685180664062
    3. '(dist' → logprob: -12.658668518066406
    4. '__' → logprob: -12.783668518066406
    5. 'max' → logprob: -12.783668518066406
    6. ' ' → logprob: -13.283668518066406
    7. '	dist' → logprob: -13.408668518066406
    8. ' __' → logprob: -13.408668518066406
    9. '```' → logprob: -13.596168518066406
    10. 'min' → logprob: -14.096168518066406

Token 146: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.4796721339225769
    2. '[' → logprob: -0.9796721339225769
    3. '[-' → logprob: -5.229671955108643
    4. '.count' → logprob: -8.9796724319458
    5. '==' → logprob: -9.4796724319458
    6. '[end' → logprob: -12.6046724319458
    7. ' [' → logprob: -12.7296724319458
    8. ' ==' → logprob: -12.7296724319458
    9. '```' → logprob: -12.8546724319458
    10. ' ' → logprob: -13.2296724319458

Token 147: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00017827287956606597
    2. ' ==' → logprob: -8.750178337097168
    3. '```' → logprob: -12.250178337097168
    4. ']==' → logprob: -12.500178337097168
    5. '<' → logprob: -12.875178337097168
    6. ')==' → logprob: -13.125178337097168
    7. '===' → logprob: -13.375178337097168
    8. '!=' → logprob: -13.500178337097168
    9. '==
' → logprob: -13.500178337097168
    10. '=' → logprob: -13.500178337097168

Token 148: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.735893965815194e-05
    2. '10' → logprob: -11.000017166137695
    3. 'IN' → logprob: -15.250017166137695
    4. ' INF' → logprob: -15.375017166137695
    5. '_INF' → logprob: -16.500017166137695
    6. '-INF' → logprob: -17.375017166137695
    7. 'inf' → logprob: -18.750017166137695
    8. 'INFO' → logprob: -19.250017166137695
    9. 'I' → logprob: -19.625017166137695
    10. '100' → logprob: -19.875017166137695

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004101315978914499
    2. ':
' → logprob: -5.504101276397705
    3. 'print' → logprob: -10.879101753234863
    4. ':

' → logprob: -14.129101753234863
    5. '):' → logprob: -14.754101753234863
    6. ':return' → logprob: -14.754101753234863
    7. ' :' → logprob: -15.004101753234863
    8. ' print' → logprob: -15.129101753234863
    9. ':
' → logprob: -15.379101753234863
    10. '.' → logprob: -15.379101753234863

Token 150: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012673746095970273
    2. ' print' → logprob: -6.876267433166504
    3. '-' → logprob: -9.001267433166504
    4. '-print' → logprob: -9.376267433166504
    5. '
' → logprob: -11.001267433166504
    6. '```' → logprob: -12.376267433166504
    7. 'pr' → logprob: -13.126267433166504
    8. ' 
' → logprob: -13.376267433166504
    9. ' -' → logprob: -15.251267433166504
    10. '_print' → logprob: -15.251267433166504

Token 151: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.31467756628990173
    2. '-' → logprob: -1.3146775960922241
    3. '(' → logprob: -6.814677715301514
    4. '("-' → logprob: -8.189677238464355
    5. '("' → logprob: -10.814677238464355
    6. '()-' → logprob: -11.314677238464355
    7. '('-' → logprob: -13.439677238464355
    8. ' -' → logprob: -13.439677238464355
    9. '('' → logprob: -13.814677238464355
    10. '()' → logprob: -14.314677238464355

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -19.125
    3. ' ' → logprob: -19.25
    4. '```' → logprob: -20.625
    5. '2' → logprob: -20.75
    6. '4' → logprob: -21.375
    7. '3' → logprob: -21.875
    8. '9' → logprob: -22.4375
    9. '۱' → logprob: -22.5625
    10. '১' → logprob: -22.625

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008617172949016094
    2. ')
' → logprob: -4.758617401123047
    3. ' )' → logprob: -13.258617401123047
    4. 'else' → logprob: -15.008617401123047
    5. ')
' → logprob: -15.133617401123047
    6. ')

' → logprob: -16.133617401123047
    7. '')' → logprob: -16.758617401123047
    8. ' )
' → logprob: -17.008617401123047
    9. '）' → logprob: -17.133617401123047
    10. ')`' → logprob: -17.258617401123047

Token 154: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0002036595979006961
    2. ' else' → logprob: -8.500204086303711
    3. '
' → logprob: -16.00020408630371
    4. ' 
' → logprob: -18.25020408630371
    5. '```' → logprob: -18.50020408630371
    6. 'Else' → logprob: -19.37520408630371
    7. '_else' → logprob: -19.37520408630371
    8. 'print' → logprob: -19.87520408630371
    9. '    
' → logprob: -19.87520408630371
    10. 'elses' → logprob: -20.00020408630371

Token 155: ':
' (ID: 734)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5506080389022827
    2. ':' → logprob: -0.9256080389022827
    3. 'print' → logprob: -4.300608158111572
    4. ':
' → logprob: -4.800608158111572
    5. '(print' → logprob: -5.800608158111572
    6. ' :' → logprob: -7.550608158111572
    7. '   ' → logprob: -7.800608158111572
    8. ' ' → logprob: -8.175607681274414
    9. ' :
' → logprob: -8.175607681274414
    10. '(' → logprob: -8.175607681274414

Token 156: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07894564419984818
    2. 'print' → logprob: -2.5789456367492676
    3. ' dist' → logprob: -9.828946113586426
    4. 'dist' → logprob: -13.203946113586426
    5. '```' → logprob: -16.32894515991211
    6. '(print' → logprob: -16.82894515991211
    7. ' ' → logprob: -18.07894515991211
    8. '.print' → logprob: -18.20394515991211
    9. ' printf' → logprob: -18.45394515991211
    10. '	print' → logprob: -18.70394515991211

Token 157: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.00038145645521581173
    2. '(' → logprob: -8.000381469726562
    3. 'dist' → logprob: -10.000381469726562
    4. ' dist' → logprob: -14.750381469726562
    5. ' (' → logprob: -15.250381469726562
    6. 'Dist' → logprob: -18.375381469726562
    7. '((' → logprob: -19.375381469726562
    8. '_dist' → logprob: -19.375381469726562
    9. '	dist' → logprob: -19.375381469726562
    10. '(
' → logprob: -19.625381469726562

Token 158: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: 0.0
    2. 'N' → logprob: -17.5
    3. '```' → logprob: -18.0
    4. '[' → logprob: -18.625
    5. '[
' → logprob: -19.0
    6. ' [' → logprob: -19.125
    7. '[n' → logprob: -19.125
    8. '	N' → logprob: -20.0
    9. ')[' → logprob: -20.375
    10. ')' → logprob: -20.5

Token 159: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.167648876318708e-05
    2. '))' → logprob: -10.125041961669922
    3. ' )' → logprob: -14.375041961669922
    4. '})' → logprob: -14.875041961669922
    5. '])' → logprob: -15.500041961669922
    6. ')`' → logprob: -16.000041961669922
    7. '())' → logprob: -16.125041961669922
    8. ')}' → logprob: -16.625041961669922
    9. '`)' → logprob: -16.875041961669922
    10. ')
' → logprob: -17.250041961669922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 157
Tokens correctement prédits (1ère position, stricte): 86
Tokens correctement prédits (1ère position, avec adaptation): 87
Tokens correctement prédits (top 10): 138
Précision stricte (1ère position): 54.78%
Précision adaptée (1ère position): 55.41%
Précision (top 10): 87.90%
================================================================================
