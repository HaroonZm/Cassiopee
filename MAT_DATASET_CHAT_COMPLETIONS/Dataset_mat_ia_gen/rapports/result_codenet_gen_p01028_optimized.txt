================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n,m= map(int,input().split())
c= list(map(int,input().split()))

dp = [['']*(m+1) for _ in range(n+1)]
dp[0][0] = ''

for i in range(n):
    for money in range(m+1):
        if dp[i][money] == '':
            continue
        for d in range(10):
            cost = c[d]
            new_money = money + cost
            if new_money <= m:
                candidate = dp[i][money] + str(d)
                # Compare lex order to keep minimal number
                if dp[i+1][new_money] == '' or candidate < dp[i+1][new_money]:
                    dp[i+1][new_money] = candidate

res = ''
for money in range(m+1):
    if dp[n][money] != '':
        if res == '' or dp[n][money] < res:
            res = dp[n][money]

if res == '':
    print("NA")
else:
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',m' (ID: 26648)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6707378029823303
    2. 'map' → logprob: -0.9207378029823303
    3. 'input' → logprob: -3.0457377433776855
    4. '0' → logprob: -4.0457377433776855
    5. ' input' → logprob: -4.2957377433776855
    6. ' ' → logprob: -4.5457377433776855
    7. '10' → logprob: -7.5457377433776855
    8. 'int' → logprob: -8.295738220214844
    9. '1' → logprob: -9.170738220214844
    10. '5' → logprob: -9.420738220214844

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014467834262177348
    2. '```' → logprob: -7.751446723937988
    3. '<|end|>' → logprob: -8.501446723937988
    4. '(lambda' → logprob: -8.626446723937988
    5. '(int' → logprob: -8.751446723937988
    6. '[' → logprob: -9.751446723937988
    7. ')' → logprob: -9.751446723937988
    8. ' (' → logprob: -9.876446723937988
    9. '(str' → logprob: -10.001446723937988
    10. '(n' → logprob: -10.251446723937988

Token 5: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5129127502441406
    2. '(input' → logprob: -1.2629127502441406
    3. '(' → logprob: -2.2629127502441406
    4. ')(' → logprob: -5.637912750244141
    5. '`)' → logprob: -6.262912750244141
    6. '```' → logprob: -6.387912750244141
    7. '(str' → logprob: -6.887912750244141
    8. '(user' → logprob: -7.262912750244141
    9. 'input' → logprob: -7.887912750244141
    10. '(line' → logprob: -7.887912750244141

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9023699164390564
    2. '()' → logprob: -1.5273699760437012
    3. ')' → logprob: -1.6523699760437012
    4. '(' → logprob: -1.7773699760437012
    5. '`()' → logprob: -5.652369976043701
    6. '```' → logprob: -6.152369976043701
    7. '('' → logprob: -6.402369976043701
    8. '`)' → logprob: -7.027369976043701
    9. '(""))' → logprob: -7.027369976043701
    10. '(()' → logprob: -7.152369976043701

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00019829542725346982
    2. ')' → logprob: -9.000198364257812
    3. 'strip' → logprob: -9.750198364257812
    4. ' split' → logprob: -11.875198364257812
    5. '(split' → logprob: -12.375198364257812
    6. 'rstrip' → logprob: -13.250198364257812
    7. 'spl' → logprob: -13.375198364257812
    8. 'read' → logprob: -14.625198364257812
    9. '_split' → logprob: -15.000198364257812
    10. 'replace' → logprob: -15.125198364257812

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013412445783615112
    2. '())' → logprob: -4.5134124755859375
    3. '))' → logprob: -6.3884124755859375
    4. '()' → logprob: -7.6384124755859375
    5. '`)' → logprob: -9.138412475585938
    6. '(' → logprob: -10.013412475585938
    7. ')`' → logprob: -11.138412475585938
    8. '')' → logprob: -12.013412475585938
    9. '()))' → logprob: -12.513412475585938
    10. ')))' → logprob: -13.013412475585938

Token 9: 'c' (ID: 66)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3516157865524292
    2. 'a' → logprob: -2.2266159057617188
    3. 'for' → logprob: -2.6016159057617188
    4. '
' → logprob: -3.4766159057617188
    5. '`' → logprob: -4.101615905761719
    6. 'if' → logprob: -4.601615905761719
    7. '```' → logprob: -4.726615905761719
    8. '\' → logprob: -4.976615905761719
    9. 'x' → logprob: -5.101615905761719
    10. '#' → logprob: -5.351615905761719

Token 10: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9906822443008423
    2. ' =' → logprob: -1.3656822443008423
    3. 'ount' → logprob: -1.4906822443008423
    4. '[' → logprob: -3.1156821250915527
    5. 'h' → logprob: -3.9906821250915527
    6. 'o' → logprob: -3.9906821250915527
    7. 'ounter' → logprob: -4.365682125091553
    8. '_' → logprob: -4.740682125091553
    9. '[i' → logprob: -4.740682125091553
    10. 'ont' → logprob: -4.740682125091553

Token 11: ' list' (ID: 1562)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6197947263717651
    2. '[' → logprob: -1.6197947263717651
    3. '0' → logprob: -2.3697948455810547
    4. '[]' → logprob: -2.6197948455810547
    5. '[n' → logprob: -3.3697948455810547
    6. 'list' → logprob: -3.8697948455810547
    7. '[input' → logprob: -4.244794845581055
    8. 'int' → logprob: -4.994794845581055
    9. '[m' → logprob: -5.244794845581055
    10. 'n' → logprob: -5.619794845581055

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024120506714098155
    2. '(int' → logprob: -9.62524127960205
    3. '(range' → logprob: -10.12524127960205
    4. '(
' → logprob: -10.62524127960205
    5. '((' → logprob: -11.00024127960205
    6. '(c' → logprob: -11.12524127960205
    7. '(list' → logprob: -11.37524127960205
    8. '("("' → logprob: -11.75024127960205
    9. '(

' → logprob: -11.75024127960205
    10. '(n' → logprob: -12.00024127960205

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0067673493176698685
    2. '(' → logprob: -5.006767272949219
    3. '(str' → logprob: -11.131767272949219
    4. '(input' → logprob: -11.256767272949219
    5. '<int' → logprob: -12.131767272949219
    6. '(lambda' → logprob: -12.631767272949219
    7. '(
' → logprob: -12.756767272949219
    8. '=int' → logprob: -12.881767272949219
    9. '```' → logprob: -13.131767272949219
    10. 'int' → logprob: -13.131767272949219

Token 14: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6410861015319824
    2. ',input' → logprob: -0.8910861015319824
    3. ',' → logprob: -3.1410861015319824
    4. ',int' → logprob: -4.891086101531982
    5. '(int' → logprob: -5.141086101531982
    6. '(' → logprob: -5.266086101531982
    7. '),' → logprob: -8.26608657836914
    8. ',(' → logprob: -8.26608657836914
    9. ')' → logprob: -8.39108657836914
    10. '=input' → logprob: -9.26608657836914

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10197960585355759
    2. '(' → logprob: -2.9769794940948486
    3. '()' → logprob: -3.2269794940948486
    4. '())' → logprob: -5.726979732513428
    5. '()))' → logprob: -6.851979732513428
    6. '(input' → logprob: -7.226979732513428
    7. ')' → logprob: -7.351979732513428
    8. '(),' → logprob: -8.72697925567627
    9. '(.' → logprob: -9.10197925567627
    10. '()));' → logprob: -10.22697925567627

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. ' split' → logprob: -13.750001907348633
    3. '(split' → logprob: -15.000001907348633
    4. 'strip' → logprob: -15.375001907348633
    5. 'spl' → logprob: -18.250001907348633
    6. 'rstrip' → logprob: -18.375001907348633
    7. 'plit' → logprob: -19.750001907348633
    8. ')' → logprob: -19.750001907348633
    9. '_split' → logprob: -20.000001907348633
    10. '.split' → logprob: -20.500001907348633

Token 17: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47849634289741516
    2. '))' → logprob: -1.7284963130950928
    3. '())' → logprob: -2.4784963130950928
    4. '(' → logprob: -2.6034963130950928
    5. ')' → logprob: -3.2284963130950928
    6. '()' → logprob: -5.603496551513672
    7. '('' → logprob: -7.603496551513672
    8. ')))' → logprob: -8.478496551513672
    9. '())))' → logprob: -8.478496551513672
    10. '`' → logprob: -9.728496551513672

Token 18: 'dp' (ID: 19037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0176509618759155
    2. 'a' → logprob: -1.6426509618759155
    3. 'r' → logprob: -1.8926509618759155
    4. 'd' → logprob: -1.8926509618759155
    5. 's' → logprob: -2.642651081085205
    6. 'dp' → logprob: -3.392651081085205
    7. 'x' → logprob: -5.017651081085205
    8. 'result' → logprob: -5.142651081085205
    9. 'b' → logprob: -5.267651081085205
    10. 'i' → logprob: -5.642651081085205

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034286505542695522
    2. '=' → logprob: -6.0034284591674805
    3. ' =' → logprob: -7.3784284591674805
    4. '\[' → logprob: -8.50342845916748
    5. '=[' → logprob: -9.87842845916748
    6. '_' → logprob: -11.25342845916748
    7. ' [' → logprob: -11.50342845916748
    8. '[i' → logprob: -11.62842845916748
    9. '```' → logprob: -11.75342845916748
    10. ' ' → logprob: -11.87842845916748

Token 20: ' [['' (ID: 81983)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01471574418246746
    2. '[[' → logprob: -4.264715671539307
    3. '[-' → logprob: -8.014716148376465
    4. ' [' → logprob: -8.514716148376465
    5. ' [[' → logprob: -11.264716148376465
    6. '[n' → logprob: -12.139716148376465
    7. '[m' → logprob: -13.764716148376465
    8. '[len' → logprob: -14.389716148376465
    9. '[int' → logprob: -14.639716148376465
    10. '[a' → logprob: -15.514716148376465

Token 21: '']' (ID: 1089)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10939986258745193
    2. '']' → logprob: -2.7343997955322266
    3. '-' → logprob: -3.8593997955322266
    4. ''' → logprob: -4.859399795532227
    5. 'inf' → logprob: -5.609399795532227
    6. ']' → logprob: -5.984399795532227
    7. 'False' → logprob: -6.609399795532227
    8. '.' → logprob: -6.984399795532227
    9. '1' → logprob: -7.859399795532227
    10. ' ']' → logprob: -8.859399795532227

Token 22: '*(' (ID: 14793)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1137905940413475
    2. 'for' → logprob: -2.238790512084961
    3. ']' → logprob: -7.238790512084961
    4. ']*' → logprob: -9.113790512084961
    5. ']*(' → logprob: -9.238790512084961
    6. ' ' → logprob: -10.988790512084961
    7. ']+' → logprob: -11.863790512084961
    8. ' ]' → logprob: -12.488790512084961
    9. '   ' → logprob: -12.613790512084961
    10. '	for' → logprob: -12.988790512084961

Token 23: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0029345564544200897
    2. 'n' → logprob: -6.002934455871582
    3. ' m' → logprob: -7.877934455871582
    4. '(m' → logprob: -10.002934455871582
    5. '(n' → logprob: -10.877934455871582
    6. ' n' → logprob: -11.877934455871582
    7. '101' → logprob: -12.627934455871582
    8. ' (' → logprob: -13.252934455871582
    9. '100' → logprob: -13.752934455871582
    10. ' ' → logprob: -14.502934455871582

Token 24: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001649220648687333
    2. ' +' → logprob: -8.750164985656738
    3. ')' → logprob: -12.125164985656738
    4. '+)' → logprob: -14.625164985656738
    5. '+n' → logprob: -15.500164985656738
    6. ' )' → logprob: -16.250164031982422
    7. ')+' → logprob: -16.375164031982422
    8. '+
' → logprob: -16.500164031982422
    9. '+j' → logprob: -18.250164031982422
    10. '+m' → logprob: -18.375164031982422

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. ' ' → logprob: -10.625025749206543
    3. '2' → logprob: -14.000025749206543
    4. '   ' → logprob: -17.125024795532227
    5. '  ' → logprob: -17.500024795532227
    6. '-' → logprob: -17.750024795532227
    7. '10' → logprob: -18.125024795532227
    8. '```' → logprob: -18.500024795532227
    9. '１' → logprob: -18.687524795532227
    10. ')' → logprob: -18.687524795532227

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038920470979064703
    2. ' )' → logprob: -8.000389099121094
    3. ')]' → logprob: -9.875389099121094
    4. ']' → logprob: -13.500389099121094
    5. ' for' → logprob: -14.625389099121094
    6. '')' → logprob: -16.375389099121094
    7. 'for' → logprob: -16.375389099121094
    8. '))' → logprob: -16.875389099121094
    9. '),' → logprob: -17.250389099121094
    10. ' ]' → logprob: -17.375389099121094

Token 27: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.160257026553154
    2. 'for' → logprob: -1.9102569818496704
    3. ']' → logprob: -10.660257339477539
    4. ')' → logprob: -12.410257339477539
    5. '	for' → logprob: -12.910257339477539
    6. ' ' → logprob: -13.785257339477539
    7. '+' → logprob: -14.535257339477539
    8. ' ]' → logprob: -14.785257339477539
    9. ')]' → logprob: -14.910257339477539
    10. '```' → logprob: -15.035257339477539

Token 28: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011398635804653168
    2. '_' → logprob: -5.136398792266846
    3. 'range' → logprob: -5.261398792266846
    4. ' i' → logprob: -9.011398315429688
    5. ' _' → logprob: -9.386398315429688
    6. '_range' → logprob: -10.636398315429688
    7. ' in' → logprob: -11.386398315429688
    8. ' ' → logprob: -11.386398315429688
    9. '(range' → logprob: -11.636398315429688
    10. ' xrange' → logprob: -13.136398315429688

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11293049156665802
    2. 'in' → logprob: -2.2379305362701416
    3. 'range' → logprob: -9.737930297851562
    4. ' ' → logprob: -10.612930297851562
    5. '_' → logprob: -11.112930297851562
    6. '=' → logprob: -13.237930297851562
    7. 'i' → logprob: -13.487930297851562
    8. '	in' → logprob: -13.737930297851562
    9. ' _' → logprob: -13.987930297851562
    10. ')' → logprob: -14.237930297851562

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038043100386857986
    2. ' range' → logprob: -3.2880430221557617
    3. ' ' → logprob: -13.913043022155762
    4. '	range' → logprob: -15.163043022155762
    5. 'c' → logprob: -15.913043022155762
    6. 'r' → logprob: -16.413043975830078
    7. '(range' → logprob: -16.788043975830078
    8. '  ' → logprob: -16.913043975830078
    9. ' xrange' → logprob: -17.788043975830078
    10. '   ' → logprob: -17.913043975830078

Token 31: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001728372066281736
    2. '(range' → logprob: -7.126728534698486
    3. '(' → logprob: -7.501728534698486
    4. ' (' → logprob: -8.001728057861328
    5. '(len' → logprob: -10.626728057861328
    6. ' range' → logprob: -12.001728057861328
    7. 'range' → logprob: -12.751728057861328
    8. '((' → logprob: -13.751728057861328
    9. '   ' → logprob: -14.126728057861328
    10. ' ' → logprob: -14.501728057861328

Token 32: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0033837456721812487
    2. ')]' → logprob: -5.753383636474609
    3. ')' → logprob: -8.87838363647461
    4. ' +' → logprob: -10.25338363647461
    5. '1' → logprob: -11.00338363647461
    6. ')])' → logprob: -12.25338363647461
    7. ')][' → logprob: -12.75338363647461
    8. '```' → logprob: -13.37838363647461
    9. ']' → logprob: -14.00338363647461
    10. ')+' → logprob: -14.25338363647461

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.375014305114746
    3. '0' → logprob: -13.500014305114746
    4. '2' → logprob: -14.625014305114746
    5. '```' → logprob: -15.250014305114746
    6. '   ' → logprob: -15.500014305114746
    7. ')' → logprob: -17.75001335144043
    8. 'm' → logprob: -18.00001335144043
    9. '  ' → logprob: -18.06251335144043
    10. '`' → logprob: -18.12501335144043

Token 34: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.5822400857578032e-05
    2. ')' → logprob: -10.750025749206543
    3. ']' → logprob: -12.500025749206543
    4. '')]' → logprob: -15.000025749206543
    5. ')])' → logprob: -16.12502670288086
    6. ')],' → logprob: -16.50002670288086
    7. '))' → logprob: -16.87502670288086
    8. '])]' → logprob: -17.25002670288086
    9. ')].' → logprob: -17.62502670288086
    10. ')][' → logprob: -17.62502670288086

Token 35: 'dp' (ID: 19037)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9064937829971313
    2. '
' → logprob: -1.1564937829971313
    3. ' for' → logprob: -2.531493663787842
    4. ' 
' → logprob: -2.781493663787842
    5. 'for' → logprob: -2.906493663787842
    6. ' ' → logprob: -3.656493663787842
    7. '<|end|>' → logprob: -4.031493663787842
    8. ')' → logprob: -4.281493663787842
    9. '  
' → logprob: -4.406493663787842
    10. '```' → logprob: -5.781493663787842

Token 36: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1301889568567276
    2. '[n' → logprob: -2.3801889419555664
    3. '<|end|>' → logprob: -3.8801889419555664
    4. '```' → logprob: -6.005188941955566
    5. '[user' → logprob: -6.380188941955566
    6. '\[' → logprob: -7.130188941955566
    7. '<|end|>' → logprob: -7.505188941955566
    8. '[
' → logprob: -7.630188941955566
    9. ']' → logprob: -7.630188941955566
    10. '[m' → logprob: -7.630188941955566

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00218583014793694
    2. '1' → logprob: -6.127185821533203
    3. ' ' → logprob: -14.752185821533203
    4. '-' → logprob: -16.002185821533203
    5. 'n' → logprob: -16.752185821533203
    6. '```' → logprob: -16.752185821533203
    7. '`' → logprob: -17.252185821533203
    8. ''' → logprob: -17.502185821533203
    9. '2' → logprob: -17.627185821533203
    10. '۰' → logprob: -17.752185821533203

Token 38: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019289902411401272
    2. ']' → logprob: -6.376928806304932
    3. '[' → logprob: -9.00192928314209
    4. ''][' → logprob: -10.12692928314209
    5. ']['' → logprob: -10.37692928314209
    6. ']=' → logprob: -10.87692928314209
    7. ']='' → logprob: -11.87692928314209
    8. ' ][' → logprob: -13.00192928314209
    9. '][-' → logprob: -14.37692928314209
    10. '"][' → logprob: -15.00192928314209

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۰' → logprob: -17.125001907348633
    4. '1' → logprob: -18.000001907348633
    5. '<|end|>' → logprob: -18.000001907348633
    6. '-' → logprob: -19.250001907348633
    7. '０' → logprob: -19.375001907348633
    8. ')' → logprob: -19.750001907348633
    9. '<|end|>' → logprob: -19.750001907348633
    10. '০' → logprob: -20.000001907348633

Token 40: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017504476010799408
    2. ']=' → logprob: -4.392504692077637
    3. ' ]' → logprob: -5.392504692077637
    4. ']='' → logprob: -7.892504692077637
    5. '=' → logprob: -10.017504692077637
    6. ']="' → logprob: -11.767504692077637
    7. ']+=' → logprob: -13.267504692077637
    8. ']==' → logprob: -13.892504692077637
    9. '']' → logprob: -14.142504692077637
    10. ' =' → logprob: -14.767504692077637

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4767204821109772
    2. '=' → logprob: -0.9767204523086548
    3. '='' → logprob: -6.726720333099365
    4. '=''' → logprob: -6.976720333099365
    5. ' ='' → logprob: -7.726720333099365
    6. ' ' → logprob: -10.851720809936523
    7. '+='' → logprob: -11.351720809936523
    8. '=""' → logprob: -11.476720809936523
    9. ''' → logprob: -11.601720809936523
    10. ' +=' → logprob: -12.476720809936523

Token 42: ' ''

' (ID: 107005)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.12494762986898422
    2. '""' → logprob: -2.2499475479125977
    3. '"' → logprob: -4.499947547912598
    4. ''' → logprob: -7.374947547912598
    5. ' ''' → logprob: -8.499947547912598
    6. ' ""' → logprob: -10.249947547912598
    7. ''"' → logprob: -10.999947547912598
    8. '''''' → logprob: -11.249947547912598
    9. ''''' → logprob: -11.624947547912598
    10. ''\' → logprob: -11.999947547912598

Token 43: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.023235926404595375
    2. 'for' → logprob: -4.27323579788208
    3. '
' → logprob: -6.02323579788208
    4. ' 
' → logprob: -6.14823579788208
    5. ' ' → logprob: -6.52323579788208
    6. ' for' → logprob: -6.64823579788208
    7. '\' → logprob: -6.77323579788208
    8. '\r' → logprob: -8.898236274719238
    9. '  
' → logprob: -9.398236274719238
    10. '```' → logprob: -9.523236274719238

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011091209948062897
    2. 'i' → logprob: -4.511091232299805
    3. ' ' → logprob: -10.636091232299805
    4. '_' → logprob: -11.636091232299805
    5. ' _' → logprob: -11.886091232299805
    6. ' ' → logprob: -13.386091232299805
    7. '	i' → logprob: -14.011091232299805
    8. '_i' → logprob: -14.011091232299805
    9. ' ‌' → logprob: -15.636091232299805
    10. '  ' → logprob: -16.261091232299805

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02342948690056801
    2. 'in' → logprob: -3.7734293937683105
    3. ' ' → logprob: -8.648429870605469
    4. '+' → logprob: -12.398429870605469
    5. '	in' → logprob: -13.023429870605469
    6. '<|end|>' → logprob: -14.648429870605469
    7. '  ' → logprob: -14.898429870605469
    8. '1' → logprob: -15.148429870605469
    9. 'range' → logprob: -15.398429870605469
    10. ')' → logprob: -15.523429870605469

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132637143135071
    2. ' range' → logprob: -1.3132636547088623
    3. '(range' → logprob: -13.438263893127441
    4. '	range' → logprob: -15.563263893127441
    5. ' ' → logprob: -16.063262939453125
    6. ' xrange' → logprob: -16.438262939453125
    7. '1' → logprob: -16.563262939453125
    8. '```' → logprob: -17.313262939453125
    9. ')' → logprob: -17.688262939453125
    10. ' in' → logprob: -18.063262939453125

Token 47: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007911669090390205
    2. ' (' → logprob: -7.375791072845459
    3. '(n' → logprob: -8.875791549682617
    4. ' ' → logprob: -10.875791549682617
    5. '1' → logprob: -12.250791549682617
    6. '(i' → logprob: -14.250791549682617
    7. ' range' → logprob: -15.250791549682617
    8. '(range' → logprob: -16.625791549682617
    9. 'range' → logprob: -17.625791549682617
    10. ' in' → logprob: -17.625791549682617

Token 48: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003412728663533926
    2. '):' → logprob: -6.37841272354126
    3. '):
' → logprob: -6.87841272354126
    4. '1' → logprob: -8.003413200378418
    5. ')' → logprob: -8.253413200378418
    6. ' +' → logprob: -10.003413200378418
    7. ')+' → logprob: -11.378413200378418
    8. '-' → logprob: -11.378413200378418
    9. ' ' → logprob: -11.503413200378418
    10. '>' → logprob: -13.878413200378418

Token 49: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15283772349357605
    2. '   ' → logprob: -2.1528377532958984
    3. ' ' → logprob: -4.402837753295898
    4. '	for' → logprob: -4.902837753295898
    5. '<|end|>' → logprob: -5.777837753295898
    6. 'for' → logprob: -7.027837753295898
    7. ' ' → logprob: -7.527837753295898
    8. '   ' → logprob: -8.402837753295898
    9. '```' → logprob: -8.902837753295898
    10. '    ' → logprob: -8.902837753295898

Token 50: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08990178257226944
    2. 'for' (adapté à ' for') → logprob: -2.4649016857147217
    3. '   ' → logprob: -7.214901924133301
    4. ' ' → logprob: -8.9649019241333
    5. '	for' → logprob: -9.3399019241333
    6. '<|end|>' → logprob: -12.5899019241333
    7. '```' → logprob: -12.8399019241333
    8. '    ' → logprob: -13.4649019241333
    9. '\t' → logprob: -14.3399019241333
    10. '  ' → logprob: -14.3399019241333

Token 51: ' money' (ID: 3905)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.34804630279541016
    2. ' j' → logprob: -1.5980463027954102
    3. 'j' → logprob: -3.09804630279541
    4. 'range' → logprob: -3.09804630279541
    5. ' m' → logprob: -7.34804630279541
    6. 'm' → logprob: -7.97304630279541
    7. ' ' → logprob: -9.34804630279541
    8. '   ' → logprob: -9.47304630279541
    9. ' in' → logprob: -9.59804630279541
    10. '(range' → logprob: -10.09804630279541

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06212799996137619
    2. 'in' → logprob: -2.8121280670166016
    3. ' ' → logprob: -9.812128067016602
    4. '   ' → logprob: -10.437128067016602
    5. '+' → logprob: -10.937128067016602
    6. '_in' → logprob: -11.562128067016602
    7. '	in' → logprob: -11.687128067016602
    8. ')' → logprob: -11.687128067016602
    9. '=' → logprob: -12.062128067016602
    10. '    ' → logprob: -12.187128067016602

Token 53: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20141421258449554
    2. 'range' → logprob: -1.7014142274856567
    3. '(range' → logprob: -14.826414108276367
    4. '	range' → logprob: -15.826414108276367
    5. ' ' → logprob: -16.201414108276367
    6. '   ' → logprob: -16.201414108276367
    7. 'c' → logprob: -16.576414108276367
    8. 'm' → logprob: -17.076414108276367
    9. ' list' → logprob: -17.576414108276367
    10. ' c' → logprob: -17.701414108276367

Token 54: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.046001121401786804
    2. '(' → logprob: -3.1710011959075928
    3. '1' → logprob: -5.921000957489014
    4. ' (' → logprob: -8.796001434326172
    5. 'm' → logprob: -9.171001434326172
    6. ' m' → logprob: -10.546001434326172
    7. ' ' → logprob: -11.671001434326172
    8. '0' → logprob: -12.296001434326172
    9. '   ' → logprob: -12.296001434326172
    10. ')' → logprob: -12.671001434326172

Token 55: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004634588025510311
    2. ' +' → logprob: -5.379634380340576
    3. '-' → logprob: -11.629634857177734
    4. ' -' → logprob: -12.504634857177734
    5. '   ' → logprob: -14.004634857177734
    6. '+m' → logprob: -15.629634857177734
    7. '):
' → logprob: -15.879634857177734
    8. ')+' → logprob: -16.254634857177734
    9. '):' → logprob: -16.629634857177734
    10. ''+' → logprob: -16.754634857177734

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.5000057220459
    4. '+' → logprob: -16.8750057220459
    5. '2' → logprob: -16.8750057220459
    6. '-' → logprob: -18.1250057220459
    7. ' -' → logprob: -18.6250057220459
    8. 'money' → logprob: -18.6250057220459
    9. ')' → logprob: -18.7500057220459
    10. '  ' → logprob: -18.9375057220459

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025173963513225317
    2. '):
' → logprob: -6.127517223358154
    3. '+' → logprob: -8.252517700195312
    4. ' ):' → logprob: -10.502517700195312
    5. '):
' → logprob: -10.627517700195312
    6. ')' → logprob: -11.502517700195312
    7. '   ' → logprob: -12.252517700195312
    8. ':' → logprob: -13.127517700195312
    9. '):

' → logprob: -14.252517700195312
    10. ',' → logprob: -14.627517700195312

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2721429169178009
    2. '    ' → logprob: -2.1471428871154785
    3. ' ' → logprob: -2.3971428871154785
    4. '<|end|>' → logprob: -4.5221428871154785
    5. '        ' → logprob: -4.6471428871154785
    6. '   ' → logprob: -5.1471428871154785
    7. ' if' → logprob: -6.1471428871154785
    8. '     ' → logprob: -7.7721428871154785
    9. ',' → logprob: -8.272143363952637
    10. '<|end|>' → logprob: -8.772143363952637

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02663094364106655
    2. '    ' → logprob: -4.776630878448486
    3. 'if' (adapté à ' if') → logprob: -4.776630878448486
    4. ' for' → logprob: -5.026630878448486
    5. ' ' → logprob: -6.651630878448486
    6. '       ' → logprob: -7.526630878448486
    7. '        ' → logprob: -8.526631355285645
    8. 'for' → logprob: -8.651631355285645
    9. '   ' → logprob: -8.776631355285645
    10. '```' → logprob: -9.526631355285645

Token 60: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4004933536052704
    2. ' money' → logprob: -1.6504933834075928
    3. ' c' → logprob: -2.5254933834075928
    4. 'dp' → logprob: -3.1504933834075928
    5. 'money' → logprob: -4.525493144989014
    6. 'c' → logprob: -5.775493144989014
    7. ' ' → logprob: -7.525493144989014
    8. ' len' → logprob: -8.900493621826172
    9. ' m' → logprob: -9.087993621826172
    10. '(dp' → logprob: -9.150493621826172

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.353008499601856e-05
    2. '[' → logprob: -9.375093460083008
    3. '[I' → logprob: -12.500093460083008
    4. '[n' → logprob: -13.875093460083008
    5. '[m' → logprob: -14.375093460083008
    6. ' [' → logprob: -14.750093460083008
    7. '[ip' → logprob: -15.125093460083008
    8. '[user' → logprob: -15.250093460083008
    9. '```' → logprob: -15.375093460083008
    10. '[ii' → logprob: -15.500093460083008

Token 62: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6370726823806763
    2. '[m' → logprob: -0.7620726823806763
    3. '[' → logprob: -5.512072563171387
    4. '[i' → logprob: -9.512072563171387
    5. ')[' → logprob: -9.512072563171387
    6. ' ][' → logprob: -9.887072563171387
    7. ''][' → logprob: -10.012072563171387
    8. '"][' → logprob: -10.387072563171387
    9. '}[' → logprob: -10.512072563171387
    10. '>[' → logprob: -10.512072563171387

Token 63: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -2.463036435074173e-05
    2. ' money' → logprob: -10.750024795532227
    3. 'm' → logprob: -13.000024795532227
    4. '_money' → logprob: -14.375024795532227
    5. '-money' → logprob: -16.000024795532227
    6. ''m' → logprob: -17.125024795532227
    7. ' ' → logprob: -17.375024795532227
    8. '.money' → logprob: -17.750024795532227
    9. '][' → logprob: -17.875024795532227
    10. 'mon' → logprob: -18.125024795532227

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01847497746348381
    2. ']!=' → logprob: -4.01847505569458
    3. '']' → logprob: -8.893474578857422
    4. ']!='' → logprob: -9.143474578857422
    5. ']==' → logprob: -10.518474578857422
    6. '[' → logprob: -11.268474578857422
    7. ']>=' → logprob: -11.643474578857422
    8. '!=' → logprob: -11.643474578857422
    9. ''' → logprob: -12.268474578857422
    10. 'is' → logprob: -12.393474578857422

Token 65: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.008292567916214466
    2. ' !=' → logprob: -5.3832926750183105
    3. '==' → logprob: -6.2582926750183105
    4. 'is' → logprob: -6.8832926750183105
    5. '!==' → logprob: -8.133292198181152
    6. ' is' → logprob: -8.258292198181152
    7. '>=' → logprob: -10.008292198181152
    8. '!='' → logprob: -10.008292198181152
    9. ']!=' → logprob: -10.258292198181152
    10. '!=-' → logprob: -11.383292198181152

Token 66: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.009329830296337605
    2. ' ''' → logprob: -5.134329795837402
    3. ''' → logprob: -5.759329795837402
    4. '""' → logprob: -9.384329795837402
    5. 'None' → logprob: -10.384329795837402
    6. ' '' → logprob: -10.509329795837402
    7. '"' → logprob: -10.759329795837402
    8. ''''' → logprob: -10.884329795837402
    9. ''',' → logprob: -11.259329795837402
    10. '''''' → logprob: -11.634329795837402

Token 67: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39334750175476074
    2. '           ' → logprob: -1.3933475017547607
    3. ' continue' → logprob: -2.8933475017547607
    4. 'continue' → logprob: -5.39334774017334
    5. '\n' → logprob: -5.51834774017334
    6. '   ' → logprob: -5.51834774017334
    7. '	continue' → logprob: -5.76834774017334
    8. '\t' → logprob: -6.64334774017334
    9. ':' → logprob: -7.14334774017334
    10. '\' → logprob: -7.26834774017334

Token 68: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.8371378779411316
    2. '           ' → logprob: -1.2121379375457764
    3. ' continue' → logprob: -1.3371379375457764
    4. '               ' → logprob: -5.462137699127197
    5. '	continue' → logprob: -6.462137699127197
    6. '       ' → logprob: -7.337137699127197
    7. '   ' → logprob: -8.587138175964355
    8. '```' → logprob: -9.837138175964355
    9. '_continue' → logprob: -9.962138175964355
    10. '	       ' → logprob: -10.712138175964355

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9885149002075195
    2. '
' → logprob: -1.1135149002075195
    3. '<|end|>' → logprob: -1.8635149002075195
    4. '        
' → logprob: -1.9885149002075195
    5. ' 
' → logprob: -6.6135149002075195
    6. '  
' → logprob: -6.9885149002075195
    7. '<|end|>' → logprob: -6.9885149002075195
    8. '
' → logprob: -7.1135149002075195
    9. '\n' → logprob: -7.3635149002075195
    10. '        ' → logprob: -7.7385149002075195

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06892883777618408
    2. '        
' → logprob: -2.8189287185668945
    3. '
' → logprob: -5.6939287185668945
    4. '<|end|>' → logprob: -6.3189287185668945
    5. '            
' → logprob: -8.193928718566895
    6. '        ' → logprob: -8.443928718566895
    7. '\n' → logprob: -8.443928718566895
    8. ' 
' → logprob: -8.693928718566895
    9. '```' → logprob: -8.818928718566895
    10. '\' → logprob: -9.318928718566895

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18993507325649261
    2. 'for' (adapté à ' for') → logprob: -2.3149349689483643
    3. ' coin' → logprob: -3.5649349689483643
    4. '   ' → logprob: -4.064935207366943
    5. 'coin' → logprob: -5.564935207366943
    6. ' next' → logprob: -5.564935207366943
    7. '       ' → logprob: -5.689935207366943
    8. ' if' → logprob: -5.939935207366943
    9. ' cost' → logprob: -6.189935207366943
    10. 'price' → logprob: -6.314935207366943

Token 72: ' d' (ID: 272)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9955244660377502
    2. 'c' → logprob: -1.1205244064331055
    3. 'x' → logprob: -3.2455244064331055
    4. 'cost' → logprob: -3.3705244064331055
    5. ' coin' → logprob: -3.4955244064331055
    6. 'coin' → logprob: -3.6205244064331055
    7. 'd' → logprob: -3.6205244064331055
    8. ' x' → logprob: -3.9955244064331055
    9. ' cost' → logprob: -4.1205244064331055
    10. ' d' → logprob: -4.1205244064331055

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007362048607319593
    2. 'in' → logprob: -5.757361888885498
    3. 'enom' → logprob: -6.882361888885498
    4. ',' → logprob: -7.132361888885498
    5. 'c' → logprob: -7.632361888885498
    6. 'e' → logprob: -8.257362365722656
    7. ' ' → logprob: -8.382362365722656
    8. 'en' → logprob: -8.507362365722656
    9. 'ef' → logprob: -8.632362365722656
    10. 'd' → logprob: -8.882362365722656

Token 74: ' range' (ID: 3352)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9526349902153015
    2. 'range' → logprob: -1.0776350498199463
    3. ' range' → logprob: -1.7026350498199463
    4. '[' → logprob: -2.8276350498199463
    5. ' c' → logprob: -3.5776350498199463
    6. ' [' → logprob: -6.327634811401367
    7. '[c' → logprob: -6.452634811401367
    8. '[-' → logprob: -7.077634811401367
    9. '(' → logprob: -9.202634811401367
    10. ' [-' → logprob: -9.702634811401367

Token 75: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029520081356167793
    2. '1' → logprob: -4.154520034790039
    3. '(c' → logprob: -5.154520034790039
    4. '(n' → logprob: -5.404520034790039
    5. ' ' → logprob: -6.154520034790039
    6. '(m' → logprob: -8.154520034790039
    7. '10' → logprob: -9.154520034790039
    8. 'c' → logprob: -9.154520034790039
    9. '-' → logprob: -9.654520034790039
    10. '(len' → logprob: -9.779520034790039

Token 76: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.032597292214632034
    2. '9' → logprob: -4.032597064971924
    3. '10' → logprob: -4.657597064971924
    4. 'n' → logprob: -6.282597064971924
    5. 'm' → logprob: -7.157597064971924
    6. 'c' → logprob: -7.157597064971924
    7. '2' → logprob: -8.032597541809082
    8. ' ' → logprob: -8.157597541809082
    9. '3' → logprob: -8.407597541809082
    10. '0' → logprob: -9.032597541809082

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03220513463020325
    2. '):
' → logprob: -3.532205104827881
    3. ' ):' → logprob: -6.532205104827881
    4. ',' → logprob: -8.782205581665039
    5. '1' → logprob: -8.907205581665039
    6. '):
' → logprob: -8.907205581665039
    7. ':' → logprob: -9.157205581665039
    8. '**' → logprob: -9.407205581665039
    9. '-' → logprob: -9.532205581665039
    10. '9' → logprob: -9.907205581665039

Token 78: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2823968529701233
    2. '<|end|>' → logprob: -1.9073967933654785
    3. '           ' → logprob: -2.4073967933654785
    4. '<|end|>' → logprob: -6.6573967933654785
    5. '            ' → logprob: -6.9073967933654785
    6. '        ' → logprob: -6.9073967933654785
    7. ':' → logprob: -7.2823967933654785
    8. '               ' → logprob: -7.2823967933654785
    9. ' ' → logprob: -7.6573967933654785
    10. '       ' → logprob: -7.7823967933654785

Token 79: ' cost' (ID: 3097)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9270303845405579
    2. ' if' → logprob: -1.177030324935913
    3. ' nd' → logprob: -3.052030324935913
    4. ' next' → logprob: -3.552030324935913
    5. 'if' → logprob: -3.802030324935913
    6. ' c' → logprob: -3.927030324935913
    7. ' new' → logprob: -4.052030563354492
    8. ' cost' → logprob: -4.427030563354492
    9. ' s' → logprob: -4.552030563354492
    10. '#' → logprob: -4.677030563354492

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.348663330078125
    2. '=' → logprob: -1.223663330078125
    3. ']' → logprob: -8.973663330078125
    4. ']=' → logprob: -10.348663330078125
    5. '=c' → logprob: -11.348663330078125
    6. ' ' → logprob: -11.848663330078125
    7. '_cost' → logprob: -11.848663330078125
    8. ',' → logprob: -12.348663330078125
    9. '=d' → logprob: -12.473663330078125
    10. '=int' → logprob: -12.473663330078125

Token 81: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008935756050050259
    2. 'd' → logprob: -5.633935928344727
    3. ' c' → logprob: -6.008935928344727
    4. 'cost' → logprob: -6.008935928344727
    5. 'abs' → logprob: -9.383935928344727
    6. 'money' → logprob: -9.508935928344727
    7. '   ' → logprob: -9.508935928344727
    8. '           ' → logprob: -10.258935928344727
    9. ' d' → logprob: -11.008935928344727
    10. ' cost' → logprob: -11.133935928344727

Token 82: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.01665744185447693
    2. '[i' → logprob: -4.14165735244751
    3. 'd' → logprob: -8.141657829284668
    4. '[' → logprob: -8.766657829284668
    5. '[c' → logprob: -9.141657829284668
    6. '[j' → logprob: -10.516657829284668
    7. '[m' → logprob: -11.516657829284668
    8. '[n' → logprob: -12.266657829284668
    9. '][' → logprob: -12.516657829284668
    10. 'i' → logprob: -12.891657829284668

Token 83: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020877830684185028
    2. '])' → logprob: -4.645877838134766
    3. ']
' → logprob: -5.270877838134766
    4. ']+' → logprob: -5.770877838134766
    5. ']*' → logprob: -6.645877838134766
    6. '])
' → logprob: -6.645877838134766
    7. ']
' → logprob: -9.645877838134766
    8. ']

' → logprob: -10.895877838134766
    9. '][' → logprob: -10.895877838134766
    10. ' ]' → logprob: -11.145877838134766

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.896223247051239
    2. ' ' → logprob: -1.2712233066558838
    3. '<|end|>' → logprob: -1.3962233066558838
    4. ' if' → logprob: -3.771223306655884
    5. ' 
' → logprob: -4.646223068237305
    6. '            
' → logprob: -4.896223068237305
    7. '  
' → logprob: -5.396223068237305
    8. '<|end|>' → logprob: -5.771223068237305
    9. '```' → logprob: -5.896223068237305
    10. '            ' → logprob: -5.896223068237305

Token 85: ' new' (ID: 620)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13760335743427277
    2. '           ' → logprob: -3.387603282928467
    3. ' 
' → logprob: -3.637603282928467
    4. '```' → logprob: -4.012603282928467
    5. ' ' → logprob: -4.387603282928467
    6. ' next' → logprob: -4.637603282928467
    7. ' new' → logprob: -4.887603282928467
    8. '            
' → logprob: -4.887603282928467
    9. 'if' → logprob: -5.762603282928467
    10. '<|end|>' → logprob: -6.012603282928467

Token 86: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -0.021132897585630417
    2. 'money' → logprob: -3.8961329460144043
    3. '_' → logprob: -8.396132469177246
    4. '_cost' → logprob: -8.396132469177246
    5. 'Money' → logprob: -10.146132469177246
    6. '_amount' → logprob: -10.271132469177246
    7. '_m' → logprob: -10.521132469177246
    8. 'cost' → logprob: -11.271132469177246
    9. 'm' → logprob: -11.646132469177246
    10. ' money' → logprob: -12.021132469177246

Token 87: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020710527896881
    2. ' =' → logprob: -2.3502070903778076
    3. '=m' → logprob: -15.600207328796387
    4. ')' → logprob: -16.60020637512207
    5. '＝' → logprob: -16.85020637512207
    6. '>' → logprob: -17.60020637512207
    7. ' ' → logprob: -17.60020637512207
    8. '=int' → logprob: -17.72520637512207
    9. ' =)' → logprob: -17.85020637512207
    10. '```' → logprob: -17.97520637512207

Token 88: ' money' (ID: 3905)
  Prédit: ' money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' money' → logprob: -0.2519310414791107
    2. 'money' → logprob: -1.501931071281433
    3. 'm' → logprob: -14.001931190490723
    4. '_money' → logprob: -14.251931190490723
    5. ' m' → logprob: -16.251930236816406
    6. ' ' → logprob: -16.251930236816406
    7. '.money' → logprob: -16.251930236816406
    8. '```' → logprob: -16.626930236816406
    9. 'Money' → logprob: -16.751930236816406
    10. 'mo' → logprob: -17.251930236816406

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519313097000122
    2. ' +' → logprob: -1.5019313097000122
    3. '+c' → logprob: -13.501931190490723
    4. '＋' → logprob: -14.876931190490723
    5. '<|end|>' → logprob: -16.62693214416504
    6. '+xml' → logprob: -16.75193214416504
    7. ' ' → logprob: -16.87693214416504
    8. ' +
' → logprob: -16.87693214416504
    9. '+
' → logprob: -17.12693214416504
    10. '+d' → logprob: -17.25193214416504

Token 90: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.014163628220558167
    2. ' cost' → logprob: -4.264163494110107
    3. '(cost' → logprob: -16.264163970947266
    4. 'c' → logprob: -17.639163970947266
    5. ' ' → logprob: -17.639163970947266
    6. '_cost' → logprob: -18.764163970947266
    7. '```' → logprob: -19.014163970947266
    8. 'Cost' → logprob: -19.389163970947266
    9. '.cost' → logprob: -19.764163970947266
    10. '   ' → logprob: -19.889163970947266

Token 91: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7395256161689758
    2. '<|end|>' → logprob: -0.7395256161689758
    3. ' if' → logprob: -4.73952579498291
    4. ' 
' → logprob: -4.86452579498291
    5. ' ' → logprob: -4.98952579498291
    6. '<|end|>' → logprob: -5.36452579498291
    7. ' <=' → logprob: -5.48952579498291
    8. '           ' → logprob: -5.61452579498291
    9. '  
' → logprob: -5.98952579498291
    10. 'if' → logprob: -6.23952579498291

Token 92: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5314680337905884
    2. 'if' (adapté à ' if') → logprob: -1.0314680337905884
    3. '           ' → logprob: -2.906467914581299
    4. '               ' → logprob: -8.406468391418457
    5. ' ' → logprob: -8.781468391418457
    6. '            
' → logprob: -9.031468391418457
    7. '            ' → logprob: -9.281468391418457
    8. ' <=' → logprob: -9.406468391418457
    9. '```' → logprob: -9.531468391418457
    10. '<=' → logprob: -9.906468391418457

Token 94: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3868747651576996
    2. 'new' → logprob: -1.136874794960022
    3. '>' → logprob: -14.01187515258789
    4. 'n' → logprob: -14.13687515258789
    5. ' ' → logprob: -14.63687515258789
    6. '   ' → logprob: -15.13687515258789
    7. '_new' → logprob: -15.88687515258789
    8. '	new' → logprob: -16.13687515258789
    9. '<=' → logprob: -16.26187515258789
    10. '```' → logprob: -16.26187515258789

Token 95: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -1.4259644558478612e-05
    2. 'money' → logprob: -12.000014305114746
    3. '_' → logprob: -13.125014305114746
    4. '```' → logprob: -13.125014305114746
    5. '_m' → logprob: -13.875014305114746
    6. 's' → logprob: -13.875014305114746
    7. ' _' → logprob: -15.000014305114746
    8. 'ew' → logprob: -15.000014305114746
    9. '_cost' → logprob: -15.375014305114746
    10. '_w' → logprob: -16.12501335144043

Token 96: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.18929541110992432
    2. ' <=' → logprob: -2.4392952919006348
    3. '>' → logprob: -2.5642952919006348
    4. ' >' → logprob: -4.814295291900635
    5. '">' → logprob: -9.314295768737793
    6. '```' → logprob: -11.314295768737793
    7. ')<=' → logprob: -11.564295768737793
    8. ']<=' → logprob: -11.689295768737793
    9. '<' → logprob: -11.939295768737793
    10. ')' → logprob: -12.189295768737793

Token 97: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023245712742209435
    2. ' m' → logprob: -3.7732458114624023
    3. '	m' → logprob: -16.273244857788086
    4. ' ' → logprob: -16.523244857788086
    5. '   ' → logprob: -16.898244857788086
    6. 'M' → logprob: -18.898244857788086
    7. '```' → logprob: -19.148244857788086
    8. ' ' → logprob: -19.398244857788086
    9. '  ' → logprob: -19.523244857788086
    10. ')m' → logprob: -19.648244857788086

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09258009493350983
    2. ' and' → logprob: -2.4675800800323486
    3. ':
' → logprob: -5.967580318450928
    4. 'and' → logprob: -7.217580318450928
    5. '               ' → logprob: -8.71757984161377
    6. '           ' → logprob: -9.21757984161377
    7. '):' → logprob: -11.09257984161377
    8. '<|end|>' → logprob: -11.34257984161377
    9. ':

' → logprob: -11.46757984161377
    10. '=' → logprob: -12.09257984161377

Token 99: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001213210285641253
    2. '                
' → logprob: -7.501213073730469
    3. '           ' → logprob: -8.251213073730469
    4. '<|end|>' → logprob: -9.001213073730469
    5. '              ' → logprob: -9.876213073730469
    6. '                ' → logprob: -9.876213073730469
    7. '                               ' → logprob: -10.251213073730469
    8. '            
' → logprob: -10.876213073730469
    9. ' ' → logprob: -11.126213073730469
    10. '```' → logprob: -11.376213073730469

Token 100: ' candidate' (ID: 17098)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7064136266708374
    2. ' if' → logprob: -1.7064136266708374
    3. ' dp' → logprob: -1.9564136266708374
    4. 'if' → logprob: -2.456413745880127
    5. 'new' → logprob: -3.956413745880127
    6. 'next' → logprob: -3.956413745880127
    7. ' next' → logprob: -4.081413745880127
    8. ' new' → logprob: -4.081413745880127
    9. 'candidate' (adapté à ' candidate') → logprob: -4.581413745880127
    10. 's' → logprob: -5.581413745880127

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142601430416107
    2. '=' → logprob: -1.7014260292053223
    3. '_candidate' → logprob: -11.951425552368164
    4. 's' → logprob: -12.326425552368164
    5. 'candidate' → logprob: -14.076425552368164
    6. '```' → logprob: -15.576425552368164
    7. '_str' → logprob: -15.951425552368164
    8. '_string' → logprob: -16.576425552368164
    9. 'string' → logprob: -16.826425552368164
    10. '_' → logprob: -16.951425552368164

Token 102: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.727905979962088e-05
    2. ' dp' → logprob: -10.00004768371582
    3. 'str' → logprob: -14.00004768371582
    4. 'd' → logprob: -14.75004768371582
    5. '   ' → logprob: -15.62504768371582
    6. '(dp' → logprob: -15.75004768371582
    7. '	dp' → logprob: -16.00004768371582
    8. 'int' → logprob: -16.87504768371582
    9. ''d' → logprob: -18.62504768371582
    10. ' ' → logprob: -18.62504768371582

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[I' → logprob: -12.000007629394531
    3. '<|end|>' → logprob: -14.875007629394531
    4. 'i' → logprob: -15.000007629394531
    5. '[' → logprob: -15.250007629394531
    6. '[n' → logprob: -15.875007629394531
    7. '[s' → logprob: -16.62500762939453
    8. '[user' → logprob: -17.00000762939453
    9. '```' → logprob: -17.00000762939453
    10. '<|end|>' → logprob: -17.87500762939453

Token 104: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00043162284418940544
    2. ']' → logprob: -8.500432014465332
    3. '[' → logprob: -9.375432014465332
    4. '[i' → logprob: -9.875432014465332
    5. ''][' → logprob: -11.375432014465332
    6. ' ][' → logprob: -11.375432014465332
    7. '"][' → logprob: -11.750432014465332
    8. ' ' → logprob: -11.875432014465332
    9. ')[' → logprob: -12.000432014465332
    10. '+' → logprob: -12.000432014465332

Token 105: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -5.5577775128767826e-06
    2. 'm' → logprob: -13.250005722045898
    3. ' money' → logprob: -13.375005722045898
    4. ' ' → logprob: -14.375005722045898
    5. '][' → logprob: -14.500005722045898
    6. '[m' → logprob: -15.000005722045898
    7. ')' → logprob: -16.1250057220459
    8. '[' → logprob: -16.3750057220459
    9. '  ' → logprob: -16.7500057220459
    10. '     ' → logprob: -16.7500057220459

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10677286982536316
    2. ']+' → logprob: -2.3567728996276855
    3. '+' → logprob: -5.1067728996276855
    4. ' +' → logprob: -8.606772422790527
    5. ' ]' → logprob: -9.106772422790527
    6. '+d' → logprob: -9.356772422790527
    7. ')' → logprob: -10.606772422790527
    8. '']' → logprob: -10.856772422790527
    9. 'd' → logprob: -10.981772422790527
    10. '>' → logprob: -11.231772422790527

Token 107: ' +' (ID: 659)
  Prédit: '+d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.7113255262374878
    2. '+' → logprob: -0.8363255262374878
    3. ' +' → logprob: -2.5863256454467773
    4. '+D' → logprob: -8.461325645446777
    5. 'd' → logprob: -9.086325645446777
    6. '+c' → logprob: -9.586325645446777
    7. '>d' → logprob: -12.211325645446777
    8. '+n' → logprob: -13.211325645446777
    9. '+l' → logprob: -13.336325645446777
    10. ' d' → logprob: -13.836325645446777

Token 108: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0005532711511477828
    2. ' str' → logprob: -7.500553131103516
    3. '(str' → logprob: -15.500553131103516
    4. '=str' → logprob: -16.500553131103516
    5. '	str' → logprob: -17.000553131103516
    6. '[str' → logprob: -17.625553131103516
    7. ' ' → logprob: -19.125553131103516
    8. 'chr' → logprob: -19.875553131103516
    9. ''' → logprob: -20.125553131103516
    10. '```' → logprob: -20.125553131103516

Token 109: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.319370302458992e-06
    2. 'd' → logprob: -12.250005722045898
    3. '(' → logprob: -14.500005722045898
    4. '[d' → logprob: -19.0000057220459
    5. ' (' → logprob: -19.2500057220459
    6. ' d' → logprob: -19.2500057220459
    7. ')d' → logprob: -19.2500057220459
    8. '	d' → logprob: -19.3750057220459
    9. '((' → logprob: -20.3750057220459
    10. '(
' → logprob: -20.5000057220459

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5767939686775208
    2. ')
' → logprob: -0.8267939686775208
    3. ')
' → logprob: -7.201794147491455
    4. '               ' → logprob: -9.451793670654297
    5. '')' → logprob: -11.826793670654297
    6. ')`
' → logprob: -11.951793670654297
    7. ')

' → logprob: -12.201793670654297
    8. '           ' → logprob: -12.451793670654297
    9. '')
' → logprob: -13.326793670654297
    10. ')'
' → logprob: -13.451793670654297

Token 111: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06352020800113678
    2. '
' → logprob: -3.1885201930999756
    3. '                
' → logprob: -4.563520431518555
    4. 'if' → logprob: -5.563520431518555
    5. ' if' → logprob: -6.063520431518555
    6. '           ' → logprob: -6.188520431518555
    7. '            
' → logprob: -7.688520431518555
    8. '```' → logprob: -8.313520431518555
    9. '  
' → logprob: -8.813520431518555
    10. '                    
' → logprob: -9.063520431518555

Token 112: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22759994864463806
    2. '               ' → logprob: -2.227599859237671
    3. ' if' → logprob: -2.352599859237671
    4. '```' → logprob: -8.10260009765625
    5. '                
' → logprob: -8.85260009765625
    6. '           ' → logprob: -9.60260009765625
    7. '#' (adapté à ' #') → logprob: -10.60260009765625
    8. 'dp' → logprob: -11.10260009765625
    9. '
' → logprob: -11.35260009765625
    10. ')' → logprob: -11.35260009765625

Token 113: ' Compare' (ID: 38200)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16049595177173615
    2. ' if' → logprob: -1.9104959964752197
    3. '               ' → logprob: -8.41049575805664
    4. '#' → logprob: -11.03549575805664
    5. '           ' → logprob: -11.41049575805664
    6. '```' → logprob: -12.03549575805664
    7. 'dp' → logprob: -12.78549575805664
    8. ' ' → logprob: -13.16049575805664
    9. '                   ' → logprob: -13.16049575805664
    10. 'If' → logprob: -13.28549575805664

Token 114: ' lex' (ID: 37772)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5271156430244446
    2. ' if' → logprob: -1.5271155834197998
    3. '               ' → logprob: -1.6521155834197998
    4. '           ' → logprob: -8.902115821838379
    5. 'len' → logprob: -9.152115821838379
    6. 'candidate' → logprob: -9.277115821838379
    7. 'length' → logprob: -9.402115821838379
    8. 'dp' → logprob: -9.652115821838379
    9. '```' → logprob: -10.027115821838379
    10. '#' → logprob: -10.027115821838379

Token 115: ' order' (ID: 2569)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.12933899462223053
    2. 'candidate' → logprob: -3.5043389797210693
    3. 'if' → logprob: -4.004339218139648
    4. 'ico' → logprob: -4.004339218139648
    5. 'ical' → logprob: -4.129339218139648
    6. 'max' → logprob: -4.879339218139648
    7. '```' → logprob: -5.004339218139648
    8. '>' → logprob: -5.254339218139648
    9. 'icon' → logprob: -5.879339218139648
    10. ' candidate' → logprob: -6.129339218139648

Token 116: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3003169596195221
    2. ' if' → logprob: -2.0503170490264893
    3. '               ' → logprob: -2.0503170490264893
    4. '           ' → logprob: -6.67531681060791
    5. '```' → logprob: -7.80031681060791
    6. ')' → logprob: -9.30031681060791
    7. ',' → logprob: -9.80031681060791
    8. ' and' → logprob: -10.17531681060791
    9. '                
' → logprob: -10.30031681060791
    10. 'token' → logprob: -10.67531681060791

Token 117: ' keep' (ID: 3357)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3099975883960724
    2. ' dp' → logprob: -2.55999755859375
    3. 'candidate' → logprob: -2.55999755859375
    4. 'update' → logprob: -3.05999755859375
    5. 'if' → logprob: -3.93499755859375
    6. ' candidate' → logprob: -4.18499755859375
    7. ' update' → logprob: -5.18499755859375
    8. 'continue' → logprob: -5.43499755859375
    9. 'replace' → logprob: -5.43499755859375
    10. 'det' → logprob: -5.55999755859375

Token 118: ' minimal' (ID: 19957)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2028835564851761
    2. 'candidate' → logprob: -2.20288348197937
    3. 'max' → logprob: -3.32788348197937
    4. ' dp' → logprob: -3.95288348197937
    5. 'the' → logprob: -4.577883720397949
    6. ' candidate' → logprob: -5.577883720397949
    7. ' the' → logprob: -6.077883720397949
    8. ' max' → logprob: -6.827883720397949
    9. '(dp' → logprob: -8.20288372039795
    10. 'largest' → logprob: -8.95288372039795

Token 119: ' number' (ID: 2086)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.550290048122406
    2. 'if' → logprob: -1.1752901077270508
    3. ' if' → logprob: -2.175290107727051
    4. '           ' → logprob: -8.17529010772705
    5. '```' → logprob: -8.92529010772705
    6. 'token' → logprob: -9.17529010772705
    7. ' or' → logprob: -9.55029010772705
    8. '                
' → logprob: -9.55029010772705
    9. '<|end|>' → logprob: -9.80029010772705
    10. '                   ' → logprob: -10.67529010772705

Token 120: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32974180579185486
    2. 'if' → logprob: -1.7047418355941772
    3. ' if' → logprob: -3.0797417163848877
    4. '           ' → logprob: -3.2047417163848877
    5. 'token' → logprob: -5.454741954803467
    6. '                   ' → logprob: -6.329741954803467
    7. ')' → logprob: -6.829741954803467
    8. '<|end|>' → logprob: -6.954741954803467
    9. '              ' → logprob: -7.579741954803467
    10. '=' → logprob: -7.829741954803467

Token 121: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32219570875167847
    2. 'if' → logprob: -1.5721957683563232
    3. ' if' → logprob: -2.6971957683563232
    4. '<|end|>' → logprob: -8.697196006774902
    5. '```' → logprob: -9.697196006774902
    6. '           ' → logprob: -10.197196006774902
    7. '                
' → logprob: -10.197196006774902
    8. ')' → logprob: -10.822196006774902
    9. '<|end|>' → logprob: -11.197196006774902
    10. '                   ' → logprob: -11.322196006774902

Token 122: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09189426898956299
    2. ' if' → logprob: -2.4668941497802734
    3. '               ' → logprob: -5.841894149780273
    4. '           ' → logprob: -11.091894149780273
    5. '```' → logprob: -11.091894149780273
    6. 'current' → logprob: -12.841894149780273
    7. 'token' → logprob: -12.966894149780273
    8. 'existing' → logprob: -13.091894149780273
    9. '                
' → logprob: -13.466894149780273
    10. ' ' → logprob: -13.841894149780273

Token 123: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20187227427959442
    2. ' dp' → logprob: -1.7018722295761108
    3. '(dp' → logprob: -7.7018723487854
    4. '	dp' → logprob: -13.076871871948242
    5. ' not' → logprob: -13.576871871948242
    6. ' (' → logprob: -13.826871871948242
    7. '                   ' → logprob: -13.951871871948242
    8. '               ' → logprob: -14.076871871948242
    9. '_dp' → logprob: -15.076871871948242
    10. 'not' → logprob: -15.576871871948242

Token 124: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011920140823349357
    2. '[new' → logprob: -6.751192092895508
    3. '[n' → logprob: -11.376192092895508
    4. '[next' → logprob: -12.376192092895508
    5. '[' → logprob: -12.626192092895508
    6. 'new' → logprob: -13.376192092895508
    7. '[I' → logprob: -14.626192092895508
    8. 'i' → logprob: -15.501192092895508
    9. '[ip' → logprob: -16.501192092895508
    10. '[end' → logprob: -16.626192092895508

Token 125: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11413926631212234
    2. '][' → logprob: -2.2391393184661865
    3. '[new' → logprob: -7.114139080047607
    4. ' +' → logprob: -8.489139556884766
    5. 'new' → logprob: -8.739139556884766
    6. '[' → logprob: -10.114139556884766
    7. '[next' → logprob: -10.114139556884766
    8. ']' → logprob: -11.614139556884766
    9. ' ][' → logprob: -11.989139556884766
    10. 'New' → logprob: -12.239139556884766

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05195058882236481
    2. '][' → logprob: -3.051950693130493
    3. '[' → logprob: -5.801950454711914
    4. '```' → logprob: -8.926950454711914
    5. 'new' → logprob: -9.676950454711914
    6. '"][' → logprob: -10.551950454711914
    7. ' ' → logprob: -10.676950454711914
    8. ''][' → logprob: -10.676950454711914
    9. ']' → logprob: -11.051950454711914
    10. '[new' → logprob: -11.301950454711914

Token 127: '][' (ID: 2696)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.04319843649864197
    2. '][' → logprob: -3.168198347091675
    3. '[' → logprob: -8.793198585510254
    4. 'new' → logprob: -11.418198585510254
    5. '```' → logprob: -11.418198585510254
    6. '[next' → logprob: -11.918198585510254
    7. '}[' → logprob: -12.418198585510254
    8. ')[' → logprob: -12.543198585510254
    9. '
' → logprob: -13.293198585510254
    10. ''][' → logprob: -13.418198585510254

Token 128: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.7432603272027336e-06
    2. ' new' → logprob: -13.375001907348633
    3. '[new' → logprob: -16.500001907348633
    4. 'New' → logprob: -20.250001907348633
    5. '_new' → logprob: -20.250001907348633
    6. '	new' → logprob: -20.875001907348633
    7. ')new' → logprob: -21.125001907348633
    8. '```' → logprob: -21.250001907348633
    9. '$new' → logprob: -22.125001907348633
    10. 'newline' → logprob: -22.750001907348633

Token 129: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -0.00041482248343527317
    2. '][' → logprob: -8.625414848327637
    3. 'money' → logprob: -9.000414848327637
    4. '```' → logprob: -10.000414848327637
    5. ']' → logprob: -11.125414848327637
    6. '_' → logprob: -11.875414848327637
    7. '[' → logprob: -12.250414848327637
    8. 'Money' → logprob: -12.250414848327637
    9. '-money' → logprob: -12.625414848327637
    10. '][_' → logprob: -13.000414848327637

Token 130: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00014215784904081374
    2. ' ==' → logprob: -8.875142097473145
    3. '===' → logprob: -14.000142097473145
    4. ']==' → logprob: -14.000142097473145
    5. '=' → logprob: -15.000142097473145
    6. 'in' → logprob: -16.75014305114746
    7. '()==' → logprob: -16.87514305114746
    8. '```' → logprob: -17.50014305114746
    9. ']' → logprob: -17.75014305114746
    10. 's' → logprob: -18.00014305114746

Token 131: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -6.869017852295656e-06
    2. ' ==' → logprob: -12.125006675720215
    3. '===' → logprob: -14.125006675720215
    4. '=' → logprob: -15.125006675720215
    5. '```' → logprob: -16.25000762939453
    6. 'in' → logprob: -16.37500762939453
    7. '[' → logprob: -16.75000762939453
    8. ']==' → logprob: -17.00000762939453
    9. '==
' → logprob: -17.12500762939453
    10. '>' → logprob: -17.62500762939453

Token 132: ' ''' (ID: 8686)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0002631238894537091
    2. ' ''' → logprob: -8.250263214111328
    3. '""' → logprob: -13.375263214111328
    4. ' ' → logprob: -16.125263214111328
    5. ''' → logprob: -17.125263214111328
    6. ''',' → logprob: -17.250263214111328
    7. '''
' → logprob: -17.375263214111328
    8. '=''' → logprob: -17.625263214111328
    9. '   ' → logprob: -18.125263214111328
    10. '  ' → logprob: -18.250263214111328

Token 133: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.029824301600456238
    2. 'or' → logprob: -3.5298242568969727
    3. '                   ' → logprob: -10.029824256896973
    4. '               ' → logprob: -10.779824256896973
    5. ' ' → logprob: -13.404824256896973
    6. '              ' → logprob: -13.404824256896973
    7. '                ' → logprob: -13.654824256896973
    8. '	or' → logprob: -13.779824256896973
    9. '                  ' → logprob: -14.154824256896973
    10. ')' → logprob: -14.404824256896973

Token 134: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.014741703867912292
    2. ' candidate' → logprob: -4.264741897583008
    3. 'int' → logprob: -8.264741897583008
    4. 'len' → logprob: -8.764741897583008
    5. 'dp' → logprob: -9.014741897583008
    6. '(candidate' → logprob: -11.014741897583008
    7. ' int' → logprob: -11.389741897583008
    8. ' dp' → logprob: -11.764741897583008
    9. ' len' → logprob: -13.014741897583008
    10. 'cand' → logprob: -13.639741897583008

Token 135: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0008083211723715067
    2. ' <' → logprob: -7.125808238983154
    3. '>' → logprob: -14.000808715820312
    4. '<len' → logprob: -14.125808715820312
    5. ' ' → logprob: -15.500808715820312
    6. '[' → logprob: -15.500808715820312
    7. '<ll' → logprob: -15.750808715820312
    8. '<p' → logprob: -15.750808715820312
    9. '<string' → logprob: -15.875808715820312
    10. '<
' → logprob: -16.000808715820312

Token 136: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007101670489646494
    2. ' dp' → logprob: -7.2507100105285645
    3. '	dp' → logprob: -16.250709533691406
    4. '(dp' → logprob: -17.500709533691406
    5. '_dp' → logprob: -18.750709533691406
    6. ' ' → logprob: -19.250709533691406
    7. 'df' → logprob: -19.375709533691406
    8. '.dp' → logprob: -19.875709533691406
    9. '   ' → logprob: -20.250709533691406
    10. 'd' → logprob: -20.375709533691406

Token 137: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.500000953674316
    3. '```' → logprob: -16.375
    4. '[' → logprob: -17.75
    5. 'dp' → logprob: -18.5
    6. '[n' → logprob: -19.25
    7. '\[' → logprob: -19.625
    8. '{i' → logprob: -19.875
    9. '`' → logprob: -20.125
    10. ' [' → logprob: -20.625

Token 138: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007418495370075107
    2. '[i' → logprob: -7.250741958618164
    3. '[' → logprob: -11.000741958618164
    4. '][' → logprob: -11.875741958618164
    5. '+i' → logprob: -12.875741958618164
    6. 'i' → logprob: -13.000741958618164
    7. '-' → logprob: -14.250741958618164
    8. '[new' → logprob: -14.375741958618164
    9. ' +' → logprob: -14.625741958618164
    10. 'new' → logprob: -14.750741958618164

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. 'new' → logprob: -11.750020027160645
    3. ' ' → logprob: -12.625020027160645
    4. '+' → logprob: -12.750020027160645
    5. 'money' → logprob: -12.875020027160645
    6. '```' → logprob: -13.625020027160645
    7. '   ' → logprob: -15.500020027160645
    8. '][' → logprob: -15.687520027160645
    9. '
' → logprob: -15.750020027160645
    10. '[' → logprob: -15.812520027160645

Token 140: '][' (ID: 2696)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.6334110498428345
    2. '][' → logprob: -0.7584110498428345
    3. '[' → logprob: -7.508410930633545
    4. ']' → logprob: -8.883411407470703
    5. 'new' → logprob: -10.133411407470703
    6. '```' → logprob: -10.508411407470703
    7. '[next' → logprob: -11.258411407470703
    8. ' ][' → logprob: -11.258411407470703
    9. ''][' → logprob: -11.883411407470703
    10. '   ' → logprob: -12.383411407470703

Token 141: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.0325924449716695e-05
    2. ' new' → logprob: -12.12501049041748
    3. '[new' → logprob: -12.25001049041748
    4. '[' → logprob: -16.625009536743164
    5. '_new' → logprob: -17.625009536743164
    6. '	new' → logprob: -18.750009536743164
    7. ')new' → logprob: -18.750009536743164
    8. '```' → logprob: -19.000009536743164
    9. '   ' → logprob: -19.375009536743164
    10. 'New' → logprob: -19.625009536743164

Token 142: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -0.005126784555613995
    2. 'money' → logprob: -5.505126953125
    3. '_cost' → logprob: -7.630126953125
    4. 'new' → logprob: -7.880126953125
    5. 'cost' → logprob: -8.880126953125
    6. '```' → logprob: -10.880126953125
    7. 'm' → logprob: -12.880126953125
    8. '돈' → logprob: -13.130126953125
    9. '[' → logprob: -13.255126953125
    10. '1' → logprob: -13.255126953125

Token 143: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4060378968715668
    2. ']:' → logprob: -1.2810379266738892
    3. ':' → logprob: -2.9060378074645996
    4. '}:' → logprob: -8.156038284301758
    5. ']):' → logprob: -8.531038284301758
    6. '):
' → logprob: -8.781038284301758
    7. '>:' → logprob: -8.906038284301758
    8. '']:' → logprob: -9.031038284301758
    9. '<|end|>' → logprob: -9.031038284301758
    10. ']:
' → logprob: -10.406038284301758

Token 144: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007673826068639755
    2. 'dp' → logprob: -5.257673740386963
    3. '               ' → logprob: -6.757673740386963
    4. ' dp' → logprob: -7.507673740386963
    5. '                       ' → logprob: -7.757673740386963
    6. '(dp' → logprob: -9.132674217224121
    7. '	dp' → logprob: -9.882674217224121
    8. '                           ' → logprob: -10.132674217224121
    9. '           ' → logprob: -10.882674217224121
    10. '                  ' → logprob: -11.132674217224121

Token 145: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.014381390064954758
    2. ' dp' → logprob: -4.264381408691406
    3. '                       ' → logprob: -8.514381408691406
    4. '                   ' → logprob: -11.139381408691406
    5. '	dp' → logprob: -13.514381408691406
    6. '(dp' → logprob: -15.014381408691406
    7. '_dp' → logprob: -15.014381408691406
    8. '               ' → logprob: -15.264381408691406
    9. '```' → logprob: -15.639381408691406
    10. '                           ' → logprob: -16.639381408691406

Token 146: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.375
    3. '[I' → logprob: -18.375
    4. '```' → logprob: -18.625
    5. ' [' → logprob: -18.875
    6. 'i' → logprob: -19.125
    7. '\[' → logprob: -19.25
    8. '[n' → logprob: -19.625
    9. '[j' → logprob: -19.875
    10. '][' → logprob: -20.0

Token 147: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001398929744027555
    2. '][' → logprob: -9.000140190124512
    3. '[' → logprob: -11.500140190124512
    4. '+i' → logprob: -13.000140190124512
    5. '[i' → logprob: -14.125140190124512
    6. '+[' → logprob: -14.125140190124512
    7. ' +' → logprob: -14.375140190124512
    8. ']' → logprob: -14.500140190124512
    9. ']+' → logprob: -14.500140190124512
    10. '```' → logprob: -14.875140190124512

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. 'new' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '[' → logprob: -15.500000953674316
    5. '```' → logprob: -15.625000953674316
    6. '+' → logprob: -16.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '[new' → logprob: -18.250001907348633
    9. '][' → logprob: -18.812501907348633
    10. '１' → logprob: -19.687501907348633

Token 149: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005645763128995895
    2. '[new' → logprob: -5.255645751953125
    3. ']' → logprob: -8.130645751953125
    4. '[' → logprob: -9.130645751953125
    5. ' ][' → logprob: -12.880645751953125
    6. '```' → logprob: -13.255645751953125
    7. ''][' → logprob: -13.255645751953125
    8. '"][' → logprob: -13.880645751953125
    9. 'new' → logprob: -14.880645751953125
    10. ']][' → logprob: -15.005645751953125

Token 150: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -5.9153885558771435e-06
    2. ' new' → logprob: -12.125005722045898
    3. '[new' → logprob: -14.750005722045898
    4. '	new' → logprob: -18.5000057220459
    5. '   ' → logprob: -18.8750057220459
    6. '[' → logprob: -18.8750057220459
    7. '_new' → logprob: -19.0000057220459
    8. 'New' → logprob: -19.2500057220459
    9. ')new' → logprob: -19.3750057220459
    10. '```' → logprob: -19.6250057220459

Token 151: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -0.0031936357263475657
    2. '][' → logprob: -6.1281938552856445
    3. 'money' → logprob: -7.1281938552856445
    4. '1' → logprob: -10.253193855285645
    5. '[' → logprob: -10.628193855285645
    6. ']' → logprob: -10.628193855285645
    7. '```' → logprob: -10.628193855285645
    8. '+' → logprob: -10.878193855285645
    9. '_cost' → logprob: -11.128193855285645
    10. ']][' → logprob: -11.253193855285645

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0770200788974762
    2. ']=' → logprob: -3.0770201683044434
    3. '=' → logprob: -3.5770201683044434
    4. ' =' → logprob: -9.827019691467285
    5. ' ]' → logprob: -10.952019691467285
    6. ']+=' → logprob: -13.577019691467285
    7. '']=' → logprob: -15.952019691467285
    8. ')' → logprob: -15.952019691467285
    9. ')=' → logprob: -16.0770206451416
    10. ']==' → logprob: -16.2020206451416

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024762547109276056
    2. ' =' → logprob: -6.002476215362549
    3. '=c' → logprob: -14.502476692199707
    4. '.=' → logprob: -18.50247573852539
    5. '＝' → logprob: -18.62747573852539
    6. '=

' → logprob: -19.50247573852539
    7. '=cut' → logprob: -19.87747573852539
    8. '_=' → logprob: -20.12747573852539
    9. '=d' → logprob: -20.12747573852539
    10. '=s' → logprob: -20.12747573852539

Token 154: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.014163628220558167
    2. ' candidate' → logprob: -4.264163494110107
    3. '(candidate' → logprob: -16.639163970947266
    4. ' candidat' → logprob: -18.264163970947266
    5. '                   ' → logprob: -18.764163970947266
    6. 'c' → logprob: -18.764163970947266
    7. '_candidate' → logprob: -19.889163970947266
    8. 'cand' → logprob: -20.264163970947266
    9. 'Candidate' → logprob: -20.639163970947266
    10. ' candidato' → logprob: -21.514163970947266

Token 155: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010592394508421421
    2. 'for' → logprob: -5.510592460632324
    3. 'result' → logprob: -5.760592460632324
    4. 'if' → logprob: -6.010592460632324
    5. 'answer' → logprob: -7.885592460632324
    6. 'ans' → logprob: -8.510592460632324
    7. '```' → logprob: -9.510592460632324
    8. '#' → logprob: -9.635592460632324
    9. ' print' → logprob: -10.135592460632324
    10. ')' → logprob: -10.260592460632324

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6398643851280212
    2. '=' → logprob: -0.7648643851280212
    3. '[' → logprob: -5.014864444732666
    4. 's' → logprob: -8.139863967895508
    5. '=[' → logprob: -9.389863967895508
    6. '[]' → logprob: -9.764863967895508
    7. '_' → logprob: -10.139863967895508
    8. '=[]' → logprob: -10.764863967895508
    9. ',' → logprob: -11.139863967895508
    10. '[:]' → logprob: -11.139863967895508

Token 158: ' ''
' (ID: 25366)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.024611931294202805
    2. 'min' → logprob: -3.8996119499206543
    3. ' dp' → logprob: -5.649611949920654
    4. ' min' → logprob: -8.274611473083496
    5. ''' → logprob: -9.524611473083496
    6. '(dp' → logprob: -10.274611473083496
    7. '''' → logprob: -10.524611473083496
    8. '""' → logprob: -10.774611473083496
    9. 'None' → logprob: -10.774611473083496
    10. 'max' → logprob: -10.774611473083496

Token 159: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003612065047491342
    2. 'if' → logprob: -8.125361442565918
    3. 'min' → logprob: -9.750361442565918
    4. 'found' → logprob: -12.500361442565918
    5. ' for' → logprob: -13.500361442565918
    6. 'best' → logprob: -14.500361442565918
    7. 'print' → logprob: -14.875361442565918
    8. 'import' → logprob: -15.500361442565918
    9. 'possible' → logprob: -15.875361442565918
    10. 'ans' → logprob: -16.1253604888916

Token 160: ' money' (ID: 3905)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.3676740825176239
    2. 'num' → logprob: -1.8676741123199463
    3. 'j' → logprob: -3.6176741123199463
    4. 'length' → logprob: -3.7426741123199463
    5. 'i' → logprob: -3.8676741123199463
    6. 'cost' → logprob: -4.242673873901367
    7. 'digit' → logprob: -4.242673873901367
    8. ' money' → logprob: -4.867673873901367
    9. 'x' → logprob: -5.492673873901367
    10. 'd' → logprob: -5.617673873901367

Token 161: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22542032599449158
    2. ' in' → logprob: -1.600420355796814
    3. 'range' → logprob: -13.350419998168945
    4. '```' → logprob: -13.475419998168945
    5. '	in' → logprob: -13.725419998168945
    6. ',' → logprob: -13.725419998168945
    7. '_in' → logprob: -14.350419998168945
    8. ' ' → logprob: -14.725419998168945
    9. '   ' → logprob: -14.850419998168945
    10. 'i' → logprob: -15.850419998168945

Token 162: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.963691804325208e-05
    2. ' range' → logprob: -10.500029563903809
    3. 'dp' → logprob: -13.125029563903809
    4. 'm' → logprob: -17.125030517578125
    5. '(range' → logprob: -18.750030517578125
    6. 'res' → logprob: -19.125030517578125
    7. '
' → logprob: -19.500030517578125
    8. 'r' → logprob: -19.625030517578125
    9. '```' → logprob: -19.625030517578125
    10. 're' → logprob: -20.125030517578125

Token 163: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0028350651264190674
    2. '(' → logprob: -5.877835273742676
    3. 'm' → logprob: -10.502835273742676
    4. '1' → logprob: -13.252835273742676
    5. '(dp' → logprob: -15.127835273742676
    6. '(len' → logprob: -15.502835273742676
    7. '(M' → logprob: -16.12783432006836
    8. '((' → logprob: -16.62783432006836
    9. '(n' → logprob: -16.75283432006836
    10. '(min' → logprob: -17.00283432006836

Token 164: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.1557283111615106e-05
    2. ' +' → logprob: -10.625041961669922
    3. ',' → logprob: -11.125041961669922
    4. ',m' → logprob: -13.625041961669922
    5. '+m' → logprob: -14.625041961669922
    6. 'm' → logprob: -15.250041961669922
    7. ',+' → logprob: -15.500041961669922
    8. ',-' → logprob: -15.875041961669922
    9. '```' → logprob: -16.250041961669922
    10. '1' → logprob: -16.875041961669922

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. '+' → logprob: -12.000006675720215
    3. ' ' → logprob: -14.875006675720215
    4. '```' → logprob: -16.50000762939453
    5. '-' → logprob: -16.87500762939453
    6. 'm' → logprob: -17.62500762939453
    7. '
' → logprob: -18.25000762939453
    8. '   ' → logprob: -18.25000762939453
    9. '2' → logprob: -19.00000762939453
    10. '{' → logprob: -19.12500762939453

Token 166: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16137373447418213
    2. '):' → logprob: -1.9113737344741821
    3. ',' → logprob: -7.411373615264893
    4. '-' → logprob: -8.53637409210205
    5. '   ' → logprob: -9.03637409210205
    6. '):
' → logprob: -9.41137409210205
    7. '[::-' → logprob: -10.03637409210205
    8. ':' → logprob: -10.16137409210205
    9. ')' → logprob: -11.03637409210205
    10. ':
' → logprob: -11.41137409210205

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033039047848433256
    2. 'if' → logprob: -5.7533040046691895
    3. ' if' → logprob: -9.003303527832031
    4. '   ' → logprob: -13.378303527832031
    5. '	if' → logprob: -14.253303527832031
    6. '       ' → logprob: -14.753303527832031
    7. '```' → logprob: -14.753303527832031
    8. '  ' → logprob: -16.50330352783203
    9. 'for' → logprob: -16.87830352783203
    10. ' ' → logprob: -17.25330352783203

Token 168: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18115352094173431
    2. '   ' → logprob: -1.8061535358428955
    3. ' if' → logprob: -6.806153297424316
    4. '       ' → logprob: -8.181153297424316
    5. 'res' → logprob: -11.306153297424316
    6. '	if' → logprob: -12.681153297424316
    7. 'for' → logprob: -13.306153297424316
    8. '```' → logprob: -13.306153297424316
    9. '           ' → logprob: -14.806153297424316
    10. '    
' → logprob: -14.931153297424316

Token 169: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.026460643857717514
    2. ' dp' → logprob: -3.651460647583008
    3. 'len' → logprob: -9.151460647583008
    4. '   ' → logprob: -11.026460647583008
    5. 'res' → logprob: -11.401460647583008
    6. '(dp' → logprob: -12.026460647583008
    7. '	dp' → logprob: -12.026460647583008
    8. ' len' → logprob: -12.151460647583008
    9. ' ' → logprob: -12.651460647583008
    10. ' res' → logprob: -13.026460647583008

Token 170: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00026407750556245446
    2. '[-' → logprob: -8.500264167785645
    3. 'n' → logprob: -9.750264167785645
    4. '[' → logprob: -14.250264167785645
    5. '
' → logprob: -14.625264167785645
    6. '```' → logprob: -14.750264167785645
    7. '[m' → logprob: -15.250264167785645
    8. '[
' → logprob: -16.250263214111328
    9. '(n' → logprob: -16.375263214111328
    10. '[i' → logprob: -16.500263214111328

Token 171: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012652362929657102
    2. '[' → logprob: -7.251265048980713
    3. '[n' → logprob: -8.376265525817871
    4. ']' → logprob: -8.501265525817871
    5. '[m' → logprob: -9.751265525817871
    6. '[i' → logprob: -10.626265525817871
    7. ' ][' → logprob: -11.876265525817871
    8. '```' → logprob: -12.251265525817871
    9. ''][' → logprob: -12.626265525817871
    10. '   ' → logprob: -13.001265525817871

Token 172: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -3.531315314830863e-06
    2. 'm' → logprob: -13.125003814697266
    3. ' money' → logprob: -13.500003814697266
    4. '[m' → logprob: -16.750003814697266
    5. '[' → logprob: -18.375003814697266
    6. '_money' → logprob: -18.500003814697266
    7. '
' → logprob: -19.125003814697266
    8. '.money' → logprob: -19.500003814697266
    9. '```' → logprob: -19.500003814697266
    10. ')' → logprob: -19.750003814697266

Token 173: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39405760169029236
    2. ']!=' → logprob: -1.2690576314926147
    3. '!=' → logprob: -3.769057512283325
    4. ']:' → logprob: -4.519057750701904
    5. ']!='' → logprob: -4.644057750701904
    6. '!='' → logprob: -7.269057750701904
    7. ' !=' → logprob: -8.894057273864746
    8. ']>' → logprob: -10.519057273864746
    9. ']==' → logprob: -10.769057273864746
    10. '']' → logprob: -10.769057273864746

Token 174: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.019058771431446075
    2. '!='' → logprob: -4.769058704376221
    3. ' !=' → logprob: -4.894058704376221
    4. 'and' → logprob: -6.769058704376221
    5. ':' → logprob: -7.394058704376221
    6. ' and' → logprob: -8.019059181213379
    7. '!==' → logprob: -8.019059181213379
    8. '>' → logprob: -8.644059181213379
    9. '<>' → logprob: -9.394059181213379
    10. '<' → logprob: -9.394059181213379

Token 175: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.25198522210121155
    2. ''' → logprob: -1.5019851922988892
    3. ' '':
' → logprob: -11.001985549926758
    4. ' '' → logprob: -11.751985549926758
    5. '''
' → logprob: -12.001985549926758
    6. ''',' → logprob: -12.251985549926758
    7. '''.' → logprob: -12.501985549926758
    8. ''s' → logprob: -12.751985549926758
    9. ' ''' → logprob: -13.251985549926758
    10. ''ex' → logprob: -13.501985549926758

Token 176: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28635674715042114
    2. '       ' → logprob: -1.4113566875457764
    3. 'res' → logprob: -5.5363569259643555
    4. ' if' → logprob: -7.7863569259643555
    5. ' res' → logprob: -7.9113569259643555
    6. 'if' → logprob: -8.036356925964355
    7. '
' → logprob: -9.536356925964355
    8. '    
' → logprob: -10.786356925964355
    9. ' and' → logprob: -10.911356925964355
    10. '           ' → logprob: -10.911356925964355

Token 177: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4757905602455139
    2. 'if' (adapté à ' if') → logprob: -1.1007905006408691
    3. '   ' → logprob: -3.100790500640869
    4. ' if' → logprob: -7.600790500640869
    5. 'print' → logprob: -8.600790977478027
    6. ' res' → logprob: -9.100790977478027
    7. '
' → logprob: -9.225790977478027
    8. '       ' → logprob: -10.225790977478027
    9. 'candidate' → logprob: -11.475790977478027
    10. '    
' → logprob: -11.725790977478027

Token 178: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2519298195838928
    2. ' res' → logprob: -1.501929759979248
    3. 'len' → logprob: -15.376930236816406
    4. '(res' → logprob: -15.501930236816406
    5. '   ' → logprob: -16.626930236816406
    6. ' ' → logprob: -17.126930236816406
    7. '  ' → logprob: -17.126930236816406
    8. '```' → logprob: -17.501930236816406
    9. ' not' → logprob: -17.751930236816406
    10. 'not' → logprob: -17.876930236816406

Token 179: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00020461321400944144
    2. ' ==' → logprob: -8.500205039978027
    3. '=' → logprob: -14.875205039978027
    4. '=='' → logprob: -15.000205039978027
    5. 'or' → logprob: -15.125205039978027
    6. '===' → logprob: -17.50020408630371
    7. '>' → logprob: -17.75020408630371
    8. '''' → logprob: -17.75020408630371
    9. '==
' → logprob: -17.87520408630371
    10. '```' → logprob: -18.00020408630371

Token 180: ' ''' (ID: 8686)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -2.7729658540920354e-05
    2. ' ''' → logprob: -10.500027656555176
    3. '""' → logprob: -16.875028610229492
    4. ''' → logprob: -17.625028610229492
    5. ''''' → logprob: -19.000028610229492
    6. ' ' → logprob: -19.000028610229492
    7. ''',' → logprob: -19.250028610229492
    8. '=''' → logprob: -19.750028610229492
    9. '   ' → logprob: -20.000028610229492
    10. '''
' → logprob: -20.125028610229492

Token 181: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.062042634934186935
    2. 'or' → logprob: -2.812042713165283
    3. '           ' → logprob: -9.562042236328125
    4. '               ' → logprob: -12.937042236328125
    5. ' ' → logprob: -14.312042236328125
    6. '       ' → logprob: -14.812042236328125
    7. '          ' → logprob: -15.062042236328125
    8. '	or' → logprob: -15.437042236328125
    9. '   ' → logprob: -15.562042236328125
    10. '```' → logprob: -15.687042236328125

Token 182: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011079768650233746
    2. ' dp' → logprob: -4.511079788208008
    3. 'res' → logprob: -10.511079788208008
    4. '	dp' → logprob: -13.261079788208008
    5. '   ' → logprob: -13.511079788208008
    6. '(dp' → logprob: -14.011079788208008
    7. 'len' → logprob: -15.511079788208008
    8. ' res' → logprob: -16.011079788208008
    9. '_dp' → logprob: -16.261079788208008
    10. 'd' → logprob: -16.386079788208008

Token 183: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.157039049663581e-05
    2. 'n' → logprob: -9.875051498413086
    3. '[i' → logprob: -17.500051498413086
    4. '```' → logprob: -17.625051498413086
    5. '[' → logprob: -17.750051498413086
    6. '<n' → logprob: -18.000051498413086
    7. '	n' → logprob: -19.625051498413086
    8. '(n' → logprob: -19.875051498413086
    9. ',n' → logprob: -20.375051498413086
    10. ')n' → logprob: -20.500051498413086

Token 184: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5367224216461182
    2. '][' → logprob: -0.9117224216461182
    3. 'n' → logprob: -4.411722183227539
    4. '[' → logprob: -6.911722183227539
    5. '```' → logprob: -9.036722183227539
    6. '[m' → logprob: -9.536722183227539
    7. ']' → logprob: -10.036722183227539
    8. '[i' → logprob: -10.661722183227539
    9. ''][' → logprob: -11.036722183227539
    10. '``' → logprob: -11.661722183227539

Token 185: 'money' (ID: 52994)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9630739688873291
    2. '[n' → logprob: -1.338073968887329
    3. '[' → logprob: -1.463073968887329
    4. 'money' → logprob: -2.713073968887329
    5. '[m' → logprob: -3.088073968887329
    6. 'm' → logprob: -4.58807373046875
    7. '][' → logprob: -6.46307373046875
    8. '```' → logprob: -8.71307373046875
    9. '[i' → logprob: -9.33807373046875
    10. ']' → logprob: -9.33807373046875

Token 186: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04303298518061638
    2. ' <' → logprob: -3.1680328845977783
    3. '>' → logprob: -11.0430326461792
    4. ']' → logprob: -12.6680326461792
    5. ')' → logprob: -12.9180326461792
    6. '[' → logprob: -12.9180326461792
    7. ']<' → logprob: -13.2930326461792
    8. ' ' → logprob: -13.4180326461792
    9. ')<' → logprob: -13.7930326461792
    10. '```' → logprob: -14.0430326461792

Token 187: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.012526600621640682
    2. ' <' → logprob: -4.387526512145996
    3. '>' → logprob: -11.762526512145996
    4. '[' → logprob: -13.637526512145996
    5. 'res' → logprob: -13.762526512145996
    6. '```' → logprob: -14.137526512145996
    7. '<len' → logprob: -14.387526512145996
    8. ' ' → logprob: -14.637526512145996
    9. '<string' → logprob: -14.762526512145996
    10. '<size' → logprob: -14.887526512145996

Token 188: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -9.615255839889869e-05
    2. ' res' → logprob: -9.250096321105957
    3. '	res' → logprob: -19.62509536743164
    4. '_res' → logprob: -19.87509536743164
    5. '(res' → logprob: -20.12509536743164
    6. '$res' → logprob: -21.25009536743164
    7. '
' → logprob: -21.62509536743164
    8. 'ress' → logprob: -21.62509536743164
    9. 'resc' → logprob: -21.87509536743164
    10. ' ' → logprob: -22.00009536743164

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0645289421081543
    2. ':
' → logprob: -1.0645289421081543
    3. '           ' → logprob: -1.1895289421081543
    4. '       ' → logprob: -5.689528942108154
    5. '):
' → logprob: -6.939528942108154
    6. '               ' → logprob: -7.439528942108154
    7. '=' → logprob: -8.439529418945312
    8. '):' → logprob: -8.564529418945312
    9. 'res' → logprob: -9.439529418945312
    10. '[' → logprob: -9.939529418945312

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4168315827846527
    2. '       ' → logprob: -1.666831612586975
    3. 'res' → logprob: -1.916831612586975
    4. ' res' → logprob: -5.6668314933776855
    5. '               ' → logprob: -7.1668314933776855
    6. '   ' → logprob: -7.4168314933776855
    7. '                   ' → logprob: -10.166831970214844
    8. '
' → logprob: -10.416831970214844
    9. '```' → logprob: -11.041831970214844
    10. '                       ' → logprob: -11.916831970214844

Token 191: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.07896855473518372
    2. ' res' → logprob: -2.5789685249328613
    3. '   ' → logprob: -10.07896900177002
    4. '               ' → logprob: -10.57896900177002
    5. '           ' → logprob: -11.57896900177002
    6. '       ' → logprob: -14.70396900177002
    7. '	res' → logprob: -14.70396900177002
    8. 'dp' → logprob: -14.95396900177002
    9. '                   ' → logprob: -15.20396900177002
    10. ' ' → logprob: -15.20396900177002

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692831456661224
    2. ' =' → logprob: -2.1269283294677734
    3. '=
' → logprob: -15.876928329467773
    4. '=

' → logprob: -17.251928329467773
    5. ' ' → logprob: -17.501928329467773
    6. ' =
' → logprob: -17.501928329467773
    7. 'dp' → logprob: -17.501928329467773
    8. '＝' → logprob: -17.751928329467773
    9. '   ' → logprob: -18.251928329467773
    10. '```' → logprob: -18.751928329467773

Token 193: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06196846812963486
    2. ' dp' → logprob: -2.8119685649871826
    3. '	dp' → logprob: -14.936968803405762
    4. '(dp' → logprob: -15.061968803405762
    5. ' ' → logprob: -16.811967849731445
    6. '_dp' → logprob: -17.311967849731445
    7. '   ' → logprob: -17.561967849731445
    8. '.dp' → logprob: -17.561967849731445
    9. 'res' → logprob: -18.061967849731445
    10. 'dc' → logprob: -18.436967849731445

Token 194: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00038991993642412126
    2. 'n' → logprob: -7.87539005279541
    3. '[i' → logprob: -12.12539005279541
    4. '```' → logprob: -12.75039005279541
    5. '[' → logprob: -14.12539005279541
    6. '
' → logprob: -15.62539005279541
    7. '<n' → logprob: -15.87539005279541
    8. '(n' → logprob: -16.500389099121094
    9. '``' → logprob: -16.875389099121094
    10. ' [' → logprob: -17.125389099121094

Token 195: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08616773784160614
    2. '[n' → logprob: -2.586167812347412
    3. '[' → logprob: -5.461167812347412
    4. '[m' → logprob: -6.336167812347412
    5. ']' → logprob: -7.336167812347412
    6. '```' → logprob: -8.586167335510254
    7. 'n' → logprob: -8.711167335510254
    8. '[i' → logprob: -10.336167335510254
    9. '}[' → logprob: -10.336167335510254
    10. ''][' → logprob: -10.461167335510254

Token 196: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.03325280547142029
    2. 'm' → logprob: -3.783252716064453
    3. 'n' → logprob: -4.783252716064453
    4. '[n' → logprob: -7.033252716064453
    5. '[m' → logprob: -7.408252716064453
    6. ']' → logprob: -10.533252716064453
    7. '_money' → logprob: -11.158252716064453
    8. '```' → logprob: -11.158252716064453
    9. ' money' → logprob: -11.408252716064453
    10. '][' → logprob: -11.658252716064453

Token 197: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1481989026069641
    2. ']' → logprob: -2.0231988430023193
    3. '<|end|>' → logprob: -6.523199081420898
    4. '']' → logprob: -6.773199081420898
    5. '}' → logprob: -6.898199081420898
    6. 'return' → logprob: -7.398199081420898
    7. ')return' → logprob: -8.398199081420898
    8. '')' → logprob: -8.523199081420898
    9. '```' → logprob: -8.648199081420898
    10. '<|end|>' → logprob: -9.023199081420898

Token 198: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008677207864820957
    2. 'if' → logprob: -4.758677005767822
    3. '
' → logprob: -10.00867748260498
    4. '```' → logprob: -11.25867748260498
    5. '``' → logprob: -13.25867748260498
    6. ' if' → logprob: -14.25867748260498
    7. ' print' → logprob: -14.50867748260498
    8. '`
' → logprob: -14.75867748260498
    9. '  
' → logprob: -15.00867748260498
    10. '\' → logprob: -15.25867748260498

Token 199: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.01815567910671234
    2. 'res' → logprob: -4.018155574798584
    3. ' __' → logprob: -13.018156051635742
    4. ' not' → logprob: -13.143156051635742
    5. ' ' → logprob: -14.643156051635742
    6. ' ' → logprob: -15.018156051635742
    7. ' len' → logprob: -15.268156051635742
    8. '__' → logprob: -15.393156051635742
    9. 'not' → logprob: -16.393156051635742
    10. 'n' → logprob: -16.893156051635742

Token 200: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005936859175562859
    2. ' ==' → logprob: -5.255936622619629
    3. '!=' → logprob: -7.505936622619629
    4. ':' → logprob: -9.255936622619629
    5. ' !=' → logprob: -9.880936622619629
    6. '=='' → logprob: -13.130936622619629
    7. '!='' → logprob: -13.130936622619629
    8. '=' → logprob: -13.755936622619629
    9. '===' → logprob: -14.505936622619629
    10. '>' → logprob: -14.630936622619629

Token 201: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0053364550694823265
    2. ''' → logprob: -5.255336284637451
    3. ' ''' → logprob: -10.00533676147461
    4. ' '':
' → logprob: -10.13033676147461
    5. ' '' → logprob: -11.25533676147461
    6. '''
' → logprob: -13.63033676147461
    7. '''.' → logprob: -14.13033676147461
    8. '':' → logprob: -14.88033676147461
    9. ''',' → logprob: -14.88033676147461
    10. '""' → logprob: -15.13033676147461

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0835757628083229
    2. 'print' → logprob: -2.70857572555542
    3. ' print' → logprob: -4.83357572555542
    4. ':
' → logprob: -5.45857572555542
    5. ':' → logprob: -7.58357572555542
    6. '-' → logprob: -7.58357572555542
    7. ' -' → logprob: -9.583576202392578
    8. ' or' → logprob: -9.958576202392578
    9. '
' → logprob: -10.208576202392578
    10. '):
' → logprob: -10.833576202392578

Token 203: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06878329068422318
    2. '-' → logprob: -3.4437832832336426
    3. ' print' → logprob: -3.8187832832336426
    4. '-print' → logprob: -4.818783283233643
    5. ' -' → logprob: -6.193783283233643
    6. ''-' → logprob: -6.818783283233643
    7. '   ' → logprob: -7.443783283233643
    8. '"-' → logprob: -7.568783283233643
    9. '```' → logprob: -10.3187837600708
    10. ' '-' → logprob: -10.5687837600708

Token 204: '("' (ID: 568)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.009217273443937302
    2. '-' → logprob: -4.884217262268066
    3. '(' → logprob: -6.634217262268066
    4. '("-' → logprob: -8.634217262268066
    5. '('-' → logprob: -9.634217262268066
    6. '('' → logprob: -10.759217262268066
    7. '()' → logprob: -11.259217262268066
    8. '("' → logprob: -11.509217262268066
    9. '()-' → logprob: -12.134217262268066
    10. '0' → logprob: -14.259217262268066

Token 205: 'NA' (ID: 9555)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00011391390580683947
    2. '0' → logprob: -9.875113487243652
    3. '"-' → logprob: -10.750113487243652
    4. '-im' → logprob: -11.000113487243652
    5. ''-' → logprob: -12.000113487243652
    6. '-m' → logprob: -13.000113487243652
    7. '-no' → logprob: -13.125113487243652
    8. 'im' → logprob: -13.125113487243652
    9. 'Impossible' → logprob: -13.250113487243652
    10. '-N' → logprob: -13.625113487243652

Token 206: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01181693933904171
    2. '")
' → logprob: -5.13681697845459
    3. 'L' → logprob: -5.63681697845459
    4. 'N' → logprob: -7.13681697845459
    5. 'T' → logprob: -7.38681697845459
    6. 'O' → logprob: -7.88681697845459
    7. ')' → logprob: -8.76181697845459
    8. '')' → logprob: -9.63681697845459
    9. 'M' → logprob: -10.01181697845459
    10. 'I' → logprob: -10.38681697845459

Token 207: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.4974866644479334e-05
    2. ' else' → logprob: -11.125015258789062
    3. 'elif' → logprob: -15.500015258789062
    4. '```' → logprob: -17.250015258789062
    5. 'print' → logprob: -18.625015258789062
    6. '}else' → logprob: -19.375015258789062
    7. '#else' → logprob: -19.500015258789062
    8. '   ' → logprob: -19.875015258789062
    9. '<|end|>' → logprob: -20.000015258789062
    10. 'elser' → logprob: -20.000015258789062

Token 208: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6505870223045349
    2. ':' → logprob: -0.9005870223045349
    3. '   ' → logprob: -2.6505870819091797
    4. ' print' → logprob: -7.40058708190918
    5. 'print' → logprob: -7.40058708190918
    6. ' :
' → logprob: -10.02558708190918
    7. '       ' → logprob: -11.27558708190918
    8. '(print' → logprob: -11.90058708190918
    9. '():
' → logprob: -12.02558708190918
    10. ' :' → logprob: -12.02558708190918

Token 209: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12032202631235123
    2. '   ' → logprob: -2.8703219890594482
    3. ' print' → logprob: -2.8703219890594482
    4. '```' → logprob: -12.870322227478027
    5. '	print' → logprob: -13.870322227478027
    6. '.print' → logprob: -15.870322227478027
    7. '       ' → logprob: -16.87032127380371
    8. ' ' → logprob: -16.99532127380371
    9. '(print' → logprob: -17.99532127380371
    10. '``' → logprob: -17.99532127380371

Token 210: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003213245654478669
    2. ' print' → logprob: -5.753213405609131
    3. '   ' → logprob: -10.253212928771973
    4. '```' → logprob: -15.378212928771973
    5. '	print' → logprob: -17.12821388244629
    6. ' ' → logprob: -19.50321388244629
    7. '``' → logprob: -19.50321388244629
    8. '.print' → logprob: -19.62821388244629
    9. 'printf' → logprob: -20.75321388244629
    10. '  ' → logprob: -20.87821388244629

Token 211: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0007183883571997285
    2. '(' → logprob: -7.250718593597412
    3. 'res' → logprob: -11.875718116760254
    4. '('' → logprob: -13.875718116760254
    5. ' (' → logprob: -15.125718116760254
    6. '("' → logprob: -16.75071907043457
    7. '()' → logprob: -17.00071907043457
    8. '(f' → logprob: -17.12571907043457
    9. '(re' → logprob: -17.37571907043457
    10. ' res' → logprob: -17.37571907043457

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '())' → logprob: -14.250001907348633
    3. ' )' → logprob: -15.250001907348633
    4. '()' → logprob: -15.375001907348633
    5. '))' → logprob: -16.000001907348633
    6. '')' → logprob: -16.125001907348633
    7. ')`' → logprob: -17.625001907348633
    8. '")' → logprob: -17.750001907348633
    9. '`)' → logprob: -18.125001907348633
    10. ')
' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 210
Tokens correctement prédits (1ère position, stricte): 100
Tokens correctement prédits (1ère position, avec adaptation): 107
Tokens correctement prédits (top 10): 181
Précision stricte (1ère position): 47.62%
Précision adaptée (1ère position): 50.95%
Précision (top 10): 86.19%
================================================================================
