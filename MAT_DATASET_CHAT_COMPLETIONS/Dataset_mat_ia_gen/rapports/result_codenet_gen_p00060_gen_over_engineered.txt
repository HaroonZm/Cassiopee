================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Set, Optional, Iterator

class Card:
    __slots__ = ['value']
    def __init__(self, value: int):
        if not 1 <= value <= 10:
            raise ValueError("Card value must be between 1 and 10 inclusive.")
        self.value = value
    def __repr__(self):
        return f"Card({self.value})"
    def __eq__(self, other):
        return isinstance(other, Card) and self.value == other.value
    def __hash__(self):
        return hash(self.value)

class Deck:
    def __init__(self):
        self._cards: Set[Card] = set(Card(v) for v in range(1, 11))
    def remove_cards(self, cards: List[Card]) -> None:
        for card in cards:
            self._cards.discard(card)
    def available_cards(self) -> Set[Card]:
        return set(self._cards)

class Hand(ABC):
    @abstractmethod
    def cards(self) -> List[Card]:
        pass
    def total_value(self) -> int:
        return sum(card.value for card in self.cards())
    def __repr__(self):
        return f"{self.__class__.__name__}({self.cards()})"

class PlayerHand(Hand):
    def __init__(self, cards: List[Card]):
        if len(cards) != 2:
            raise ValueError("PlayerHand must be initialized with exactly 2 cards")
        self._cards = cards
    def cards(self) -> List[Card]:
        return self._cards

class OpponentHand(Hand):
    def __init__(self, visible_card: Card, hidden_card: Optional[Card] = None):
        self._visible = visible_card
        self._hidden = hidden_card
    def set_hidden(self, hidden_card: Card) -> None:
        self._hidden = hidden_card
    def cards(self) -> List[Card]:
        if self._hidden is None:
            return [self._visible]
        return [self._visible, self._hidden]
    def visible_card(self) -> Card:
        return self._visible

class ProbabilityCalculator:
    def __init__(self, deck: Deck):
        self.deck = deck
    def probability_sum_no_exceed(self, base_cards: List[Card], threshold: int) -> float:
        """Calculate probability that sum(base_cards + one extra card) ≤ threshold"""
        base_sum = sum(card.value for card in base_cards)
        available_cards = self.deck.available_cards()
        # Exclude base cards already in use (3 known cards)
        cards_used = set(base_cards)
        candidate_cards = available_cards - cards_used
        if not candidate_cards:
            # No cards left to draw, probability is zero if sum already > threshold, else 1
            return 1.0 if base_sum <= threshold else 0.0
        successful = 0
        total = len(candidate_cards)
        for card in candidate_cards:
            if base_sum + card.value <= threshold:
                successful += 1
        return successful / total

class InputParser:
    def __init__(self, source: Iterator[str]):
        self.source = source
    def __iter__(self):
        return self
    def __next__(self):
        while True:
            line = next(self.source)
            if line.strip() == '':
                continue
            parts = line.strip().split()
            if len(parts) != 3:
                raise ValueError("Each input line must contain exactly three integers.")
            c1, c2, c3 = map(int, parts)
            return c1, c2, c3

class GameLogic:
    SUM_LIMIT = 20
    THRESHOLD_PROBABILITY = 0.5
    def __init__(self):
        self.deck = Deck()
    def decide_draw(self, c1: int, c2: int, c3: int) -> str:
        # Setup cards
        player_cards = [Card(c1), Card(c2)]
        opponent_visible = Card(c3)
        # Remove known cards from deck
        self.deck = Deck()  # fresh deck
        self.deck.remove_cards(player_cards + [opponent_visible])
        player_hand = PlayerHand(player_cards)
        # Calculate probability for player's own hand
        prob_player = ProbabilityCalculator(self.deck).probability_sum_no_exceed(player_hand.cards(), self.SUM_LIMIT)
        # Calculate probability for opponent's visible card only (since hidden unknown)
        # Opponent can only draw one card, but we must test as per problem statement for all three cards
        # So we apply the probability calc for each card in input (that's c1, c2, c3)
        # But problem wants output per line, so here we just solve per input line.
        # So output YES if prob_player >= 0.5 else NO
        return "YES" if prob_player >= self.THRESHOLD_PROBABILITY else "NO"

def main() -> None:
    import sys
    parser = InputParser(iter(sys.stdin))
    game = GameLogic()
    try:
        while True:
            c1, c2, c3 = next(parser)
            print(game.decide_draw(c1, c2, c3))
    except StopIteration:
        pass

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1270483285188675
    2. 'ABC' → logprob: -2.1270482540130615
    3. 'AB' → logprob: -10.00204849243164
    4. ' A' → logprob: -10.37704849243164
    5. 'ABCDE' → logprob: -11.25204849243164
    6. 'abc' → logprob: -11.75204849243164
    7. 'abstract' → logprob: -12.25204849243164
    8. 'A' → logprob: -12.37704849243164
    9. ' ' → logprob: -12.75204849243164
    10. ' ' → logprob: -12.75204849243164

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44743484258651733
    2. ',' → logprob: -1.072434902191162
    3. 'import' → logprob: -4.822434902191162
    4. '<|end|>' → logprob: -5.822434902191162
    5. ':' → logprob: -6.072434902191162
    6. '```' → logprob: -6.322434902191162
    7. ' ,' → logprob: -7.197434902191162
    8. ' .' → logprob: -7.697434902191162
    9. ' import' → logprob: -8.322434425354004
    10. '.I' → logprob: -8.572434425354004

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5769391059875488
    2. 'abstract' → logprob: -0.8269391059875488
    3. 'Abstract' → logprob: -7.076939105987549
    4. ' ' → logprob: -9.70193862915039
    5. '.abstract' → logprob: -10.82693862915039
    6. ' ABC' → logprob: -11.32693862915039
    7. '```' → logprob: -11.32693862915039
    8. ' A' → logprob: -11.32693862915039
    9. '123' → logprob: -12.45193862915039
    10. 'AB' → logprob: -12.57693862915039

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -9.805981972021982e-05
    2. 'classmethod' → logprob: -10.00009822845459
    3. 'm' → logprob: -11.00009822845459
    4. '_method' → logprob: -12.00009822845459
    5. 'meth' → logprob: -12.00009822845459
    6. 'staticmethod' → logprob: -12.25009822845459
    7. ' method' → logprob: -12.50009822845459
    8. 'abstract' → logprob: -12.75009822845459
    9. 'import' → logprob: -13.37509822845459
    10. 'ethod' → logprob: -13.37509822845459

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053840529173612595
    2. '```' → logprob: -3.5538406372070312
    3. '

' → logprob: -4.803840637207031
    4. '\n' → logprob: -5.428840637207031
    5. 'class' → logprob: -5.553840637207031
    6. '
' → logprob: -5.928840637207031
    7. '\' → logprob: -6.928840637207031
    8. '' → logprob: -7.428840637207031
    9. '  
' → logprob: -7.553840637207031
    10. '``' → logprob: -7.553840637207031

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33525776863098145
    2. '

' → logprob: -1.4602577686309814
    3. 'class' → logprob: -3.8352577686309814
    4. '```' → logprob: -4.585257530212402
    5. '
' → logprob: -4.960257530212402
    6. '' → logprob: -5.085257530212402
    7. ' 

' → logprob: -6.210257530212402
    8. '\n' → logprob: -6.710257530212402
    9. '


' → logprob: -7.335257530212402
    10. ' class' → logprob: -7.460257530212402

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.04827742278575897
    2. ' collections' → logprob: -3.4232773780822754
    3. 'typing' → logprob: -4.798277378082275
    4. ' dat' → logprob: -5.423277378082275
    5. 'collections' → logprob: -6.923277378082275
    6. ' math' → logprob: -8.173277854919434
    7. ' sys' → logprob: -9.048277854919434
    8. ' io' → logprob: -9.423277854919434
    9. ' os' → logprob: -9.423277854919434
    10. ' datetime' → logprob: -10.048277854919434

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06249941512942314
    2. 'import' → logprob: -2.812499523162842
    3. '.' → logprob: -9.062499046325684
    4. '```' → logprob: -9.187499046325684
    5. '<|end|>' → logprob: -9.562499046325684
    6. ' ' → logprob: -9.812499046325684
    7. '_import' → logprob: -10.062499046325684
    8. ' as' → logprob: -10.437499046325684
    9. '.import' → logprob: -10.687499046325684
    10. '	import' → logprob: -10.937499046325684

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.3196485638618469
    2. ' List' → logprob: -1.5696485042572021
    3. ' Union' → logprob: -3.319648504257202
    4. 'Any' → logprob: -4.444648742675781
    5. ' Callable' → logprob: -4.569648742675781
    6. ' Optional' → logprob: -5.944648742675781
    7. ' Protocol' → logprob: -6.444648742675781
    8. ' Iterable' → logprob: -6.694648742675781
    9. 'List' → logprob: -7.944648742675781
    10. ' Generator' → logprob: -8.069648742675781

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.45740941166877747
    2. '
' → logprob: -1.082409381866455
    3. 'class' → logprob: -4.332409381866455
    4. '```' → logprob: -4.457409381866455
    5. '


' → logprob: -6.582409381866455
    6. '\n' → logprob: -6.832409381866455
    7. '
' → logprob: -8.082409858703613
    8. '``' → logprob: -8.082409858703613
    9. 'import' → logprob: -8.832409858703613
    10. '<|end|>' → logprob: -9.582409858703613

Token 13: ' Set' (ID: 3957)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.1447416543960571
    2. ' Optional' → logprob: -1.1447416543960571
    3. ' Callable' → logprob: -1.5197416543960571
    4. 'Optional' → logprob: -3.1447415351867676
    5. ' Any' → logprob: -3.5197415351867676
    6. ' Protocol' → logprob: -4.394741535186768
    7. 'Any' → logprob: -4.519741535186768
    8. ' Tuple' → logprob: -4.519741535186768
    9. 'Union' → logprob: -4.769741535186768
    10. 'Callable' → logprob: -4.894741535186768

Token 14: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7551771402359009
    2. '
' → logprob: -1.0051771402359009
    3. 'class' → logprob: -1.8801771402359009
    4. '```' → logprob: -4.630177021026611
    5. '\n' → logprob: -7.630177021026611
    6. '``' → logprob: -7.755177021026611
    7. '


' → logprob: -7.755177021026611
    8. '
' → logprob: -8.25517749786377
    9. '<class' → logprob: -10.00517749786377
    10. ' class' → logprob: -10.25517749786377

Token 15: ' Optional' (ID: 19351)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.9115390777587891
    2. 'Dict' → logprob: -1.536539077758789
    3. ' Optional' → logprob: -2.536539077758789
    4. 'Iterable' → logprob: -2.661539077758789
    5. 'Optional' → logprob: -2.911539077758789
    6. ' Union' → logprob: -3.161539077758789
    7. 'Tuple' → logprob: -3.161539077758789
    8. ' Tuple' → logprob: -3.536539077758789
    9. ' Callable' → logprob: -3.661539077758789
    10. ' Iterable' → logprob: -4.036539077758789

Token 16: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.47032758593559265
    2. '
' → logprob: -1.345327615737915
    3. '

' → logprob: -2.345327615737915
    4. '```' → logprob: -4.345327377319336
    5. '\n' → logprob: -5.595327377319336
    6. '


' → logprob: -7.220327377319336
    7. '``' → logprob: -7.845327377319336
    8. '
' → logprob: -7.970327377319336
    9. '<class' → logprob: -8.220327377319336
    10. ' class' → logprob: -8.345327377319336

Token 17: ' Iterator' (ID: 41994)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.9902524352073669
    2. ' Dict' → logprob: -1.4902524948120117
    3. ' Union' → logprob: -1.6152524948120117
    4. 'Union' → logprob: -2.3652524948120117
    5. 'Iterable' → logprob: -3.2402524948120117
    6. 'Tuple' → logprob: -3.7402524948120117
    7. 'Any' → logprob: -3.8652524948120117
    8. ' Tuple' → logprob: -4.865252494812012
    9. ' Callable' → logprob: -5.115252494812012
    10. ' Any' → logprob: -5.365252494812012

Token 18: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.057034365832805634
    2. '
' → logprob: -3.1820342540740967
    3. 'class' → logprob: -4.432034492492676
    4. '


' → logprob: -7.057034492492676
    5. '```' → logprob: -7.057034492492676
    6. '
' → logprob: -8.932034492492676
    7. '

' → logprob: -10.057034492492676
    8. '\n' → logprob: -10.557034492492676
    9. ' 

' → logprob: -10.682034492492676
    10. '``' → logprob: -10.932034492492676

Token 19: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0004979863297194242
    2. '
' → logprob: -8.000497817993164
    3. '```' → logprob: -8.875497817993164
    4. ' class' → logprob: -11.875497817993164
    5. '\n' → logprob: -12.375497817993164
    6. '``' → logprob: -12.750497817993164
    7. '<class' → logprob: -13.250497817993164
    8. '"class' → logprob: -13.500497817993164
    9. '  
' → logprob: -13.875497817993164
    10. '

' → logprob: -14.125497817993164

Token 20: ' Card' (ID: 9958)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008659250102937222
    2. ' Abstract' → logprob: -5.508659362792969
    3. ' ABC' → logprob: -6.133659362792969
    4. ' My' → logprob: -7.633659362792969
    5. ' Base' → logprob: -7.758659362792969
    6. ' Space' → logprob: -7.883659362792969
    7. ' Iterable' → logprob: -8.008659362792969
    8. ' Object' → logprob: -8.883659362792969
    9. ' Basic' → logprob: -9.508659362792969
    10. ' Task' → logprob: -9.633659362792969

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09012512117624283
    2. '(' → logprob: -2.46512508392334
    3. ' :' → logprob: -7.09012508392334
    4. '(Abstract' → logprob: -8.21512508392334
    5. '():' → logprob: -10.34012508392334
    6. ':**' → logprob: -11.84012508392334
    7. '):' → logprob: -11.96512508392334
    8. '(:' → logprob: -12.09012508392334
    9. '```' → logprob: -12.34012508392334
    10. ':
' → logprob: -12.71512508392334

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05859017372131348
    2. '    ' → logprob: -3.5585901737213135
    3. '<|end|>' → logprob: -4.183589935302734
    4. ' ' → logprob: -4.558589935302734
    5. '  ' → logprob: -7.433589935302734
    6. '<|end|>' → logprob: -7.808589935302734
    7. '    
' → logprob: -7.933589935302734
    8. '```' → logprob: -7.933589935302734
    9. '(' → logprob: -9.183589935302734
    10. ' def' → logprob: -9.308589935302734

Token 23: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4090602993965149
    2. '   ' → logprob: -1.4090602397918701
    3. 'def' → logprob: -3.03406023979187
    4. '    ' → logprob: -3.78406023979187
    5. ' pass' → logprob: -4.784060478210449
    6. 'class' → logprob: -5.159060478210449
    7. ' ' → logprob: -6.534060478210449
    8. ' """' → logprob: -6.534060478210449
    9. '```' → logprob: -7.659060478210449
    10. '<|end|>' → logprob: -7.659060478210449

Token 24: 'slots' (ID: 101916)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5578540563583374
    2. 'init' → logprob: -1.1828540563583374
    3. 'rank' → logprob: -2.557854175567627
    4. 'slots' → logprob: -3.932854175567627
    5. 'value' → logprob: -4.182854175567627
    6. '_s' → logprob: -5.432854175567627
    7. 'id' → logprob: -6.307854175567627
    8. 'number' → logprob: -7.682854175567627
    9. '_rank' → logprob: -7.682854175567627
    10. 'name' → logprob: -8.182853698730469

Token 25: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00033320096554234624
    2. '=' → logprob: -8.500332832336426
    3. '__[' → logprob: -9.500332832336426
    4. '=['' → logprob: -10.500332832336426
    5. '=[' → logprob: -11.375332832336426
    6. '___' → logprob: -12.500332832336426
    7. '__["' → logprob: -12.625332832336426
    8. '__.__' → logprob: -13.375332832336426
    9. ' =' → logprob: -13.875332832336426
    10. '__('' → logprob: -13.875332832336426

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26092445850372314
    2. ' =' → logprob: -1.7609244585037231
    3. '__' → logprob: -2.8859243392944336
    4. '=['' → logprob: -6.385924339294434
    5. '=('' → logprob: -8.385924339294434
    6. '['' → logprob: -10.760924339294434
    7. '=["' → logprob: -11.260924339294434
    8. '=("' → logprob: -12.010924339294434
    9. '___' → logprob: -12.635924339294434
    10. '[' → logprob: -12.760924339294434

Token 27: ' ['' (ID: 5140)
  Prédit: '('_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('_' → logprob: -1.1965380907058716
    2. ''' → logprob: -1.6965380907058716
    3. ' ('' → logprob: -2.196537971496582
    4. '['' → logprob: -2.446537971496582
    5. ' ['' → logprob: -2.571537971496582
    6. '['_' → logprob: -2.946537971496582
    7. ''_' → logprob: -3.071537971496582
    8. '('' → logprob: -3.446537971496582
    9. ''s' → logprob: -3.446537971496582
    10. '('__' → logprob: -3.571537971496582

Token 28: 'value' (ID: 1594)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.6627731919288635
    2. '_rank' → logprob: -1.1627731323242188
    3. '_s' → logprob: -2.6627731323242188
    4. 's' → logprob: -3.0377731323242188
    5. 'name' → logprob: -4.287773132324219
    6. 'value' → logprob: -4.537773132324219
    7. '_id' → logprob: -4.787773132324219
    8. '_' → logprob: -4.912773132324219
    9. '_value' → logprob: -5.037773132324219
    10. '_name' → logprob: -5.412773132324219

Token 29: '']
' (ID: 9756)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.01825096644461155
    2. '']' → logprob: -4.018250942230225
    3. ',' → logprob: -9.893251419067383
    4. '_',' → logprob: -10.518251419067383
    5. ' ',' → logprob: -11.143251419067383
    6. ''' → logprob: -13.518251419067383
    7. 's' → logprob: -13.643251419067383
    8. '_value' → logprob: -13.768251419067383
    9. ' ']' → logprob: -13.893251419067383
    10. '_' → logprob: -14.143251419067383

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3353325426578522
    2. ':' → logprob: -1.4603325128555298
    3. '=' → logprob: -3.8353326320648193
    4. ' =' → logprob: -4.46033239364624
    5. '    
' → logprob: -5.08533239364624
    6. ',' → logprob: -5.46033239364624
    7. '
' → logprob: -5.96033239364624
    8. '(value' → logprob: -6.83533239364624
    9. '    ' → logprob: -7.08533239364624
    10. '(' → logprob: -7.21033239364624

Token 31: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35728690028190613
    2. ':' → logprob: -1.3572869300842285
    3. ' def' → logprob: -3.9822869300842285
    4. ' =' → logprob: -4.3572869300842285
    5. 'def' (adapté à ' def') → logprob: -5.6072869300842285
    6. '=' → logprob: -5.8572869300842285
    7. 'value' → logprob: -6.3572869300842285
    8. '    
' → logprob: -7.2322869300842285
    9. ' value' → logprob: -7.3572869300842285
    10. '    ' → logprob: -7.6072869300842285

Token 32: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.015235739760100842
    2. ' ' → logprob: -4.890235900878906
    3. ' def' → logprob: -5.015235900878906
    4. '__' → logprob: -7.640235900878906
    5. '_' → logprob: -9.140235900878906
    6. ' init' → logprob: -9.390235900878906
    7. '  ' → logprob: -9.640235900878906
    8. ' ' → logprob: -9.640235900878906
    9. 'def' → logprob: -9.765235900878906
    10. ' ```' → logprob: -10.765235900878906

Token 33: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'ini' → logprob: -15.625
    3. 'in' → logprob: -16.75
    4. ' init' → logprob: -18.0
    5. 'inite' → logprob: -18.5
    6. 'int' → logprob: -18.625
    7. 'i' → logprob: -20.125
    8. '_init' → logprob: -20.5
    9. '	init' → logprob: -20.75
    10. 'innit' → logprob: -21.0

Token 34: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01828724890947342
    2. '__' → logprob: -4.018287181854248
    3. '(' → logprob: -10.018287658691406
    4. '__(
' → logprob: -10.143287658691406
    5. '(self' → logprob: -10.518287658691406
    6. '__((' → logprob: -11.268287658691406
    7. '__('' → logprob: -11.643287658691406
    8. '__(*' → logprob: -13.518287658691406
    9. ' (' → logprob: -14.518287658691406
    10. '_' → logprob: -14.768287658691406

Token 35: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.722539834911004e-05
    2. ' self' → logprob: -9.250097274780273
    3. 'value' → logprob: -13.875097274780273
    4. '(self' → logprob: -16.750097274780273
    5. ' ' → logprob: -17.500097274780273
    6. '
' → logprob: -18.000097274780273
    7. '<|end|>' → logprob: -18.250097274780273
    8. '	self' → logprob: -18.500097274780273
    9. ')' → logprob: -18.500097274780273
    10. '_self' → logprob: -18.750097274780273

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42171287536621094
    2. ' ,' → logprob: -1.421712875366211
    3. ' value' → logprob: -3.671712875366211
    4. ' ' → logprob: -3.671712875366211
    5. ' )' → logprob: -4.171712875366211
    6. '<|end|>' → logprob: -4.296712875366211
    7. ')' → logprob: -4.421712875366211
    8. 'value' → logprob: -5.421712875366211
    9. ',value' → logprob: -5.671712875366211
    10. ' self' → logprob: -7.171712875366211

Token 37: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5759504437446594
    2. 'value' → logprob: -0.8259504437446594
    3. 'self' → logprob: -11.950950622558594
    4. ' self' → logprob: -12.325950622558594
    5. ')value' → logprob: -16.700950622558594
    6. '_value' → logprob: -17.825950622558594
    7. '"value' → logprob: -17.825950622558594
    8. ')' → logprob: -17.950950622558594
    9. ''value' → logprob: -18.325950622558594
    10. '	value' → logprob: -18.450950622558594

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.475544273853302
    2. '):' → logprob: -0.975544273853302
    3. ' ):' → logprob: -7.725544452667236
    4. ')' → logprob: -7.725544452667236
    5. '=' → logprob: -8.225543975830078
    6. ':int' → logprob: -8.975543975830078
    7. ',' → logprob: -9.475543975830078
    8. ' :' → logprob: -9.850543975830078
    9. '):
' → logprob: -11.225543975830078
    10. '<|end|>' → logprob: -11.225543975830078

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05511888489127159
    2. 'int' → logprob: -2.9301187992095947
    3. ' str' → logprob: -8.430118560791016
    4. ' ' → logprob: -11.430118560791016
    5. ' '' → logprob: -12.680118560791016
    6. ')' → logprob: -13.555118560791016
    7. 'str' → logprob: -14.055118560791016
    8. '[int' → logprob: -14.180118560791016
    9. ' )' → logprob: -15.180118560791016
    10. ''int' → logprob: -15.555118560791016

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002514069899916649
    2. ')' → logprob: -6.002513885498047
    3. ' ):' → logprob: -10.752513885498047
    4. ':' → logprob: -11.127513885498047
    5. '):
' → logprob: -13.877513885498047
    6. ',' → logprob: -14.627513885498047
    7. ' ' → logprob: -15.002513885498047
    8. '=' → logprob: -15.627513885498047
    9. ' )' → logprob: -15.627513885498047
    10. '   ' → logprob: -16.377513885498047

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024584142956882715
    2. ' ' → logprob: -7.252458572387695
    3. ' ' → logprob: -7.627458572387695
    4. 'self' → logprob: -7.752458572387695
    5. ' self' → logprob: -8.502458572387695
    6. '   ' → logprob: -8.627458572387695
    7. ')' → logprob: -8.877458572387695
    8. ',' → logprob: -9.377458572387695
    9. '    ' → logprob: -9.752458572387695
    10. '        ' → logprob: -10.377458572387695

Token 42: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519453763961792
    2. 'self' → logprob: -1.5019453763961792
    3. '       ' → logprob: -11.251945495605469
    4. ' ' → logprob: -13.626945495605469
    5. '        ' → logprob: -13.876945495605469
    6. ' ' → logprob: -13.876945495605469
    7. '	self' → logprob: -15.751945495605469
    8. '   ' → logprob: -16.12694549560547
    9. '    ' → logprob: -18.12694549560547
    10. ' super' → logprob: -18.87694549560547

Token 43: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25737226009368896
    2. ' value' → logprob: -1.507372260093689
    3. 'value' → logprob: -5.3823723793029785
    4. ' ' → logprob: -7.5073723793029785
    5. 'not' → logprob: -8.25737190246582
    6. '0' → logprob: -11.63237190246582
    7. '1' → logprob: -12.50737190246582
    8. ' ' → logprob: -13.00737190246582
    9. ' isinstance' → logprob: -13.75737190246582
    10. '(value' → logprob: -13.88237190246582

Token 44: ' ' (ID: 220)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.19185097515583038
    2. ' (' → logprob: -1.941851019859314
    3. ' ' → logprob: -4.1918511390686035
    4. '(' → logprob: -4.4418511390686035
    5. '0' → logprob: -5.9418511390686035
    6. '1' → logprob: -6.4418511390686035
    7. 'is' → logprob: -12.066850662231445
    8. '<|end|>' → logprob: -12.441850662231445
    9. ' ' → logprob: -13.191850662231445
    10. '(value' → logprob: -13.441850662231445

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6352062821388245
    2. '(' → logprob: -1.0102062225341797
    3. '0' → logprob: -2.8852062225341797
    4. 'is' → logprob: -3.1352062225341797
    5. ' isinstance' → logprob: -5.26020622253418
    6. '(is' → logprob: -7.26020622253418
    7. ' (' → logprob: -7.38520622253418
    8. ' ' → logprob: -8.76020622253418
    9. 'value' → logprob: -12.26020622253418
    10. '(type' → logprob: -12.63520622253418

Token 46: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0013333364622667432
    2. '<=' → logprob: -6.751333236694336
    3. '0' → logprob: -9.251333236694336
    4. ' ' → logprob: -10.001333236694336
    5. '<|end|>' → logprob: -11.376333236694336
    6. '6' → logprob: -13.001333236694336
    7. '2' → logprob: -13.251333236694336
    8. '1' → logprob: -13.751333236694336
    9. '7' → logprob: -14.251333236694336
    10. '8' → logprob: -14.501333236694336

Token 47: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.03804171830415726
    2. ' value' → logprob: -3.288041830062866
    3. ' ' → logprob: -16.288042068481445
    4. '	value' → logprob: -16.913042068481445
    5. '"value' → logprob: -17.538042068481445
    6. ')value' → logprob: -17.788042068481445
    7. '   ' → logprob: -17.913042068481445
    8. ' ' → logprob: -18.038042068481445
    9. '```' → logprob: -18.288042068481445
    10. '$value' → logprob: -18.413042068481445

Token 48: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.14394378662109375
    2. '<=' → logprob: -2.0189437866210938
    3. '<|end|>' → logprob: -6.893943786621094
    4. '<|end|>' → logprob: -8.393943786621094
    5. ' ' → logprob: -11.393943786621094
    6. ' <<=' → logprob: -12.518943786621094
    7. ' ≤' → logprob: -13.393943786621094
    8. ')<=' → logprob: -13.518943786621094
    9. '```' → logprob: -13.643943786621094
    10. ' <=",' → logprob: -13.643943786621094

Token 49: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.042171310633420944
    2. ' ' → logprob: -3.2921712398529053
    3. '52' → logprob: -6.292171478271484
    4. '10' → logprob: -6.292171478271484
    5. '54' → logprob: -8.292171478271484
    6. '14' → logprob: -9.792171478271484
    7. '100' → logprob: -10.167171478271484
    8. '53' → logprob: -10.417171478271484
    9. '1' → logprob: -11.667171478271484
    10. '9' → logprob: -11.792171478271484

Token 50: '10' (ID: 702)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.01325234305113554
    2. '10' → logprob: -5.013252258300781
    3. '52' → logprob: -5.513252258300781
    4. ' ' → logprob: -6.513252258300781
    5. '9' → logprob: -8.138252258300781
    6. '100' → logprob: -8.513252258300781
    7. '54' → logprob: -8.513252258300781
    8. '14' → logprob: -9.263252258300781
    9. '1' → logprob: -9.888252258300781
    10. '53' → logprob: -9.888252258300781

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017313449643552303
    2. ' :' → logprob: -6.6267313957214355
    3. ':
' → logprob: -7.8767313957214355
    4. '):' → logprob: -11.126730918884277
    5. ' :
' → logprob: -12.501730918884277
    6. ',' → logprob: -12.626730918884277
    7. ' or' → logprob: -13.251730918884277
    8. ' and' → logprob: -14.126730918884277
    9. ':return' → logprob: -14.751730918884277
    10. ' ):' → logprob: -15.126730918884277

Token 52: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27878445386886597
    2. ':' → logprob: -1.9037845134735107
    3. '            ' → logprob: -3.0287845134735107
    4. ' :' → logprob: -3.7787845134735107
    5. ' raise' → logprob: -4.528784275054932
    6. ':
' → logprob: -5.153784275054932
    7. ' :
' → logprob: -6.028784275054932
    8. 'raise' → logprob: -6.403784275054932
    9. '        ' → logprob: -6.903784275054932
    10. ' self' → logprob: -8.40378475189209

Token 53: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.03430434316396713
    2. 'raise' (adapté à ' raise') → logprob: -3.40930438041687
    3. '            ' → logprob: -7.909304141998291
    4. '           ' → logprob: -8.53430461883545
    5. '	raise' → logprob: -10.15930461883545
    6. ' ' → logprob: -10.78430461883545
    7. '_raise' → logprob: -10.90930461883545
    8. 'Raise' → logprob: -12.53430461883545
    9. ' ' → logprob: -12.53430461883545
    10. '        ' → logprob: -12.78430461883545

Token 54: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.2519334554672241
    2. 'Value' → logprob: -1.5019334554672241
    3. '	Value' → logprob: -13.126933097839355
    4. '_Value' → logprob: -14.376933097839355
    5. '<Value' → logprob: -14.626933097839355
    6. ' ' → logprob: -15.001933097839355
    7. '_value' → logprob: -15.501933097839355
    8. ' value' → logprob: -15.626933097839355
    9. 'value' → logprob: -15.751933097839355
    10. 'Val' → logprob: -15.876933097839355

Token 55: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.04863278940320015
    2. 'rror' → logprob: -3.048632860183716
    3. 'r' → logprob: -10.173632621765137
    4. 'ror' → logprob: -12.298632621765137
    5. 'Value' → logprob: -13.173632621765137
    6. 'error' → logprob: -14.673632621765137
    7. 'n' → logprob: -15.298632621765137
    8. 'rr' → logprob: -16.798633575439453
    9. 'alue' → logprob: -17.923633575439453
    10. 'Er' → logprob: -18.173633575439453

Token 56: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.013742305338382721
    2. '('' → logprob: -4.638742446899414
    3. '(' → logprob: -5.638742446899414
    4. '(f' → logprob: -7.888742446899414
    5. '(
' → logprob: -10.513742446899414
    6. '       ' → logprob: -11.388742446899414
    7. '           ' → logprob: -13.138742446899414
    8. '"' → logprob: -13.388742446899414
    9. '("'' → logprob: -13.888742446899414
    10. '   ' → logprob: -14.138742446899414

Token 57: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.7041503190994263
    2. 'Value' → logprob: -0.9541503190994263
    3. 'value' → logprob: -2.2041501998901367
    4. 'Invalid' → logprob: -5.704150199890137
    5. ' Card' → logprob: -5.704150199890137
    6. ' value' → logprob: -6.204150199890137
    7. ' Value' → logprob: -7.454150199890137
    8. 'card' → logprob: -7.954150199890137
    9. '"value' → logprob: -9.204150199890137
    10. ''value' → logprob: -9.704150199890137

Token 58: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.003645568387582898
    2. 'value' → logprob: -5.628645420074463
    3. ' must' → logprob: -10.503645896911621
    4. ' ' → logprob: -11.378645896911621
    5. ' values' → logprob: -13.128645896911621
    6. 'alue' → logprob: -13.628645896911621
    7. '"value' → logprob: -14.253645896911621
    8. ''s' → logprob: -14.628645896911621
    9. ''value' → logprob: -14.878645896911621
    10. '	value' → logprob: -14.878645896911621

Token 59: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -9.372294698550832e-06
    2. 'must' → logprob: -11.750009536743164
    3. ' should' → logprob: -13.750009536743164
    4. ' out' → logprob: -15.750009536743164
    5. 's' → logprob: -15.875009536743164
    6. ' ' → logprob: -17.500009536743164
    7. ' not' → logprob: -17.750009536743164
    8. ' s' → logprob: -18.000009536743164
    9. '<|end|>' → logprob: -18.625009536743164
    10. ' Must' → logprob: -19.125009536743164

Token 60: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.00011653638648567721
    2. '<|end|>' → logprob: -9.500116348266602
    3. ' ' → logprob: -10.500116348266602
    4. ' not' → logprob: -12.125116348266602
    5. 'be' → logprob: -12.500116348266602
    6. ' between' → logprob: -13.500116348266602
    7. '<|end|>' → logprob: -14.625116348266602
    8. ' only' → logprob: -14.625116348266602
    9. '1' → logprob: -15.000116348266602
    10. '```' → logprob: -15.125116348266602

Token 61: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.000895620440132916
    2. 'between' → logprob: -7.3758955001831055
    3. ' ' → logprob: -8.625895500183105
    4. ' an' → logprob: -9.750895500183105
    5. '1' → logprob: -10.500895500183105
    6. ' in' → logprob: -13.125895500183105
    7. ' within' → logprob: -14.500895500183105
    8. ' a' → logprob: -14.625895500183105
    9. '```' → logprob: -14.875895500183105
    10. ' from' → logprob: -16.000896453857422

Token 62: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1426803171634674
    2. '1' → logprob: -2.0176804065704346
    3. '```' → logprob: -12.892680168151855
    4. ' ' → logprob: -13.017680168151855
    5. '10' → logprob: -16.830181121826172
    6. '`' → logprob: -17.142681121826172
    7. '   ' → logprob: -17.517681121826172
    8. '  ' → logprob: -17.580181121826172
    9. '<|end|>' → logprob: -17.580181121826172
    10. '' → logprob: -17.767681121826172

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '```' → logprob: -15.500123977661133
    4. '`' → logprob: -18.500123977661133
    5. '10' → logprob: -18.625123977661133
    6. '' → logprob: -19.500123977661133
    7. '۱' → logprob: -19.625123977661133
    8. '１' → logprob: -20.062623977661133
    9. '   ' → logprob: -20.312623977661133
    10. 'and' → logprob: -20.625123977661133

Token 64: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.000432695698691532
    2. 'and' → logprob: -7.87543249130249
    3. ' ' → logprob: -9.875432968139648
    4. ' to' → logprob: -14.875432968139648
    5. ' a' → logprob: -15.000432968139648
    6. '0' → logprob: -16.12543296813965
    7. '   ' → logprob: -16.37543296813965
    8. '```' → logprob: -16.50043296813965
    9. '1' → logprob: -17.25043296813965
    10. ',' → logprob: -17.75043296813965

Token 65: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1269306242465973
    2. ' ' → logprob: -2.1269307136535645
    3. '```' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.126930236816406
    5. '1' → logprob: -15.001930236816406
    6. '100' → logprob: -15.814430236816406
    7. '  ' → logprob: -16.126930236816406
    8. '<|end|>' → logprob: -16.189430236816406
    9. '   ' → logprob: -16.689430236816406
    10. '

' → logprob: -17.626930236816406

Token 66: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.625001907348633
    3. '1' → logprob: -14.000001907348633
    4. '100' → logprob: -16.000001907348633
    5. '```' → logprob: -17.000001907348633
    6. '0' → logprob: -18.625001907348633
    7. '50' → logprob: -18.625001907348633
    8. '۱۰' → logprob: -19.125001907348633
    9. '9' → logprob: -19.812501907348633
    10. '  ' → logprob: -19.875001907348633

Token 67: ' inclusive' (ID: 29482)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.626134991645813
    2. '")' → logprob: -0.876134991645813
    3. '.")
' → logprob: -3.3761348724365234
    4. '.")' → logprob: -4.376134872436523
    5. '")
' → logprob: -6.251134872436523
    6. '.")
' → logprob: -8.626134872436523
    7. ',' → logprob: -10.251134872436523
    8. '"' → logprob: -11.126134872436523
    9. ')' → logprob: -11.626134872436523
    10. ' ")
' → logprob: -11.751134872436523

Token 68: '.")
' (ID: 27834)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.10703179240226746
    2. '")' → logprob: -2.35703182220459
    3. '.")
' → logprob: -5.10703182220459
    4. '")
' → logprob: -7.85703182220459
    5. '.")' → logprob: -7.98203182220459
    6. ')")
' → logprob: -12.10703182220459
    7. '.")
' → logprob: -12.35703182220459
    8. ')' → logprob: -12.73203182220459
    9. ')
' → logprob: -12.98203182220459
    10. '"' → logprob: -13.60703182220459

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032247265335172415
    2. 'self' → logprob: -8.875322341918945
    3. '        
' → logprob: -9.500322341918945
    4. ' self' → logprob: -10.500322341918945
    5. '
' → logprob: -10.875322341918945
    6. ' 
' → logprob: -11.125322341918945
    7. '   ' → logprob: -11.500322341918945
    8. '    
' → logprob: -11.875322341918945
    9. ' ' → logprob: -12.000322341918945
    10. '  
' → logprob: -12.000322341918945

Token 70: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6803253293037415
    2. 'self' (adapté à ' self') → logprob: -1.0553252696990967
    3. ' self' → logprob: -1.9303252696990967
    4. '   ' → logprob: -8.305325508117676
    5. '	self' → logprob: -9.805325508117676
    6. ' ' → logprob: -10.555325508117676
    7. '    ' → logprob: -11.930325508117676
    8. '        ' → logprob: -12.055325508117676
    9. '      ' → logprob: -12.180325508117676
    10. '	' → logprob: -12.680325508117676

Token 71: '.value' (ID: 4683)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3132699728012085
    2. '.value' → logprob: -1.3132699728012085
    3. ' .' → logprob: -11.81326961517334
    4. ' value' → logprob: -15.06326961517334
    5. '.val' → logprob: -15.56326961517334
    6. 'value' → logprob: -15.56326961517334
    7. '.values' → logprob: -16.813270568847656
    8. '.v' → logprob: -17.188270568847656
    9. '.
' → logprob: -17.313270568847656
    10. '.Value' → logprob: -17.813270568847656

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16031856834888458
    2. '=' → logprob: -1.9103186130523682
    3. ' ' → logprob: -9.285318374633789
    4. ' =
' → logprob: -14.535318374633789
    5. ' =)' → logprob: -15.160318374633789
    6. '_' → logprob: -15.285318374633789
    7. '.' → logprob: -15.785318374633789
    8. ' ' → logprob: -15.910318374633789
    9. '    ' → logprob: -16.16031837463379
    10. ' is' → logprob: -17.03531837463379

Token 73: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.10080242156982422
    2. 'value' → logprob: -2.350802421569824
    3. ' ' → logprob: -7.475802421569824
    4. ' ' → logprob: -10.475802421569824
    5. '(value' → logprob: -15.100802421569824
    6. '"value' → logprob: -15.225802421569824
    7. '	value' → logprob: -16.85080337524414
    8. '.value' → logprob: -17.22580337524414
    9. ''value' → logprob: -17.22580337524414
    10. '1' → logprob: -17.22580337524414

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02185034193098545
    2. '

' → logprob: -4.021850109100342
    3. '<|end|>' → logprob: -5.896850109100342
    4. '   ' → logprob: -8.6468505859375
    5. '<|end|>' → logprob: -8.8968505859375
    6. '    
' → logprob: -8.8968505859375
    7. '\n' → logprob: -9.1468505859375
    8. '


' → logprob: -9.6468505859375
    9. ' 
' → logprob: -9.7718505859375
    10. '' → logprob: -9.7718505859375

Token 75: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029300613328814507
    2. '<|end|>' → logprob: -4.029300689697266
    3. ' 
' → logprob: -6.404300689697266
    4. '\n' → logprob: -6.404300689697266
    5. '   ' → logprob: -6.654300689697266
    6. '

' → logprob: -6.779300689697266
    7. '<|end|>' → logprob: -7.029300689697266
    8. '```' → logprob: -7.154300689697266
    9. '' → logprob: -7.279300689697266
    10. ' ' → logprob: -7.279300689697266

Token 76: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14468561112880707
    2. ' ' → logprob: -2.0196855068206787
    3. ' def' → logprob: -6.894685745239258
    4. '__' → logprob: -7.894685745239258
    5. '_repr' → logprob: -8.394685745239258
    6. ' `' → logprob: -9.644685745239258
    7. ' repr' → logprob: -9.644685745239258
    8. ' _' → logprob: -10.019685745239258
    9. ' ' → logprob: -10.019685745239258
    10. '_' → logprob: -10.144685745239258

Token 78: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.005628462415188551
    2. 'repr' → logprob: -5.25562858581543
    3. 'lt' → logprob: -7.88062858581543
    4. 'str' → logprob: -11.13062858581543
    5. 'hash' → logprob: -13.63062858581543
    6. 'init' → logprob: -14.88062858581543
    7. 'int' → logprob: -15.88062858581543
    8. ' eq' → logprob: -15.88062858581543
    9. 'le' → logprob: -17.38062858581543
    10. 'e' → logprob: -17.38062858581543

Token 79: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.044684797525405884
    2. '__' → logprob: -3.294684886932373
    3. '__('' → logprob: -5.294684886932373
    4. '__(
' → logprob: -6.669684886932373
    5. '__("' → logprob: -8.294684410095215
    6. '__((' → logprob: -9.544684410095215
    7. '__(*' → logprob: -12.044684410095215
    8. '__.__' → logprob: -12.294684410095215
    9. '(' → logprob: -14.294684410095215
    10. '__(/*!' → logprob: -14.544684410095215

Token 80: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011467679869383574
    2. ')' → logprob: -7.0011467933654785
    3. ' self' → logprob: -8.37614631652832
    4. ' )' → logprob: -13.37614631652832
    5. 's' → logprob: -14.12614631652832
    6. ' ' → logprob: -14.37614631652832
    7. '_self' → logprob: -14.62614631652832
    8. '(self' → logprob: -14.75114631652832
    9. ''s' → logprob: -15.00114631652832
    10. 'f' → logprob: -15.00114631652832

Token 81: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14922215044498444
    2. '__(' → logprob: -3.3992221355438232
    3. ')' → logprob: -3.5242221355438232
    4. '__)' → logprob: -3.5242221355438232
    5. '__('' → logprob: -3.7742221355438232
    6. '__(
' → logprob: -4.524222373962402
    7. '(' → logprob: -5.524222373962402
    8. '_' → logprob: -6.774222373962402
    9. ')__' → logprob: -6.899222373962402
    10. '__,' → logprob: -7.149222373962402

Token 82: '       ' (ID: 309)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.46762406826019287
    2. '       ' → logprob: -1.3426240682601929
    3. 'f' → logprob: -2.4676241874694824
    4. ' return' → logprob: -4.592624187469482
    5. '   ' → logprob: -5.092624187469482
    6. '    ' → logprob: -5.217624187469482
    7. 'return' → logprob: -5.467624187469482
    8. '        ' → logprob: -7.467624187469482
    9. ' ' → logprob: -8.092623710632324
    10. '           ' → logprob: -8.592623710632324

Token 83: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5038517117500305
    2. ' f' → logprob: -1.5038516521453857
    3. 'return' (adapté à ' return') → logprob: -2.0038516521453857
    4. ' return' → logprob: -3.2538516521453857
    5. '       ' → logprob: -9.878851890563965
    6. '`' → logprob: -11.128851890563965
    7. '   ' → logprob: -11.128851890563965
    8. '```' → logprob: -13.003851890563965
    9. ''' → logprob: -13.753851890563965
    10. 'Return' → logprob: -14.128851890563965

Token 84: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.06196824833750725
    2. 'f' → logprob: -2.8119683265686035
    3. ' ' → logprob: -15.186967849731445
    4. ' ' → logprob: -15.686967849731445
    5. '	f' → logprob: -16.186967849731445
    6. ''f' → logprob: -16.436967849731445
    7. '(f' → logprob: -17.436967849731445
    8. ''' → logprob: -18.436967849731445
    9. 'F' → logprob: -18.561967849731445
    10. '"' → logprob: -18.811967849731445

Token 85: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06895487755537033
    2. '(f' → logprob: -3.3189549446105957
    3. '"' → logprob: -4.443954944610596
    4. ''' → logprob: -4.568954944610596
    5. ''f' → logprob: -5.568954944610596
    6. '`' → logprob: -6.318954944610596
    7. '(' → logprob: -6.568954944610596
    8. '"C' → logprob: -8.068954467773438
    9. '<Card' → logprob: -8.443954467773438
    10. ' f' → logprob: -8.443954467773438

Token 86: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.00025776340044103563
    2. '<Card' → logprob: -8.62525749206543
    3. ''' → logprob: -10.12525749206543
    4. '"' → logprob: -10.62525749206543
    5. ' Card' → logprob: -11.75025749206543
    6. 'Cards' → logprob: -12.75025749206543
    7. 'Car' → logprob: -13.37525749206543
    8. '`' → logprob: -14.75025749206543
    9. '(Card' → logprob: -15.37525749206543
    10. 'f' → logprob: -15.62525749206543

Token 87: '({' (ID: 3972)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6999443769454956
    2. '(value' → logprob: -0.6999443769454956
    3. '({' → logprob: -5.199944496154785
    4. '(`' → logprob: -7.824944496154785
    5. '<|end|>' → logprob: -8.824944496154785
    6. '(card' → logprob: -9.199944496154785
    7. '(Value' → logprob: -9.449944496154785
    8. '(Card' → logprob: -9.449944496154785
    9. '(valor' → logprob: -9.949944496154785
    10. '(values' → logprob: -9.949944496154785

Token 88: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.60414821645827e-06
    2. ' self' → logprob: -12.625004768371582
    3. '{' → logprob: -13.625004768371582
    4. 'sel' → logprob: -18.375003814697266
    5. 'value' → logprob: -18.625003814697266
    6. 'repr' → logprob: -18.625003814697266
    7. ')' → logprob: -18.750003814697266
    8. 's' → logprob: -19.375003814697266
    9. 'se' → logprob: -19.500003814697266
    10. '[self' → logprob: -19.750003814697266

Token 89: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.1994775377388578e-05
    2. '.' → logprob: -11.375012397766113
    3. ' .' → logprob: -16.000011444091797
    4. ').' → logprob: -16.250011444091797
    5. ')' → logprob: -16.375011444091797
    6. '.val' → logprob: -16.500011444091797
    7. 'value' → logprob: -16.875011444091797
    8. '.card' → logprob: -18.250011444091797
    9. '}.' → logprob: -18.375011444091797
    10. '.Value' → logprob: -18.625011444091797

Token 90: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.0004624855937436223
    2. ')' → logprob: -8.000462532043457
    3. ')}' → logprob: -9.750462532043457
    4. ')"' → logprob: -10.500462532043457
    5. '}' → logprob: -10.875462532043457
    6. '}")' → logprob: -11.500462532043457
    7. ' })' → logprob: -11.875462532043457
    8. '}"' → logprob: -13.250462532043457
    9. '"})' → logprob: -13.750462532043457
    10. '))' → logprob: -13.875462532043457

Token 91: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07408635318279266
    2. '

' → logprob: -2.6990864276885986
    3. 'class' → logprob: -5.6990861892700195
    4. '' → logprob: -8.44908618927002
    5. '```' → logprob: -9.32408618927002
    6. '
' → logprob: -9.44908618927002
    7. '<|end|>' → logprob: -9.44908618927002
    8. '
    
' → logprob: -9.57408618927002
    9. '


' → logprob: -9.82408618927002
    10. '\n' → logprob: -9.94908618927002

Token 93: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024932438507676125
    2. 'class' → logprob: -4.274932384490967
    3. '   ' → logprob: -5.649932384490967
    4. '

' → logprob: -6.274932384490967
    5. '    
' → logprob: -6.274932384490967
    6. '```' → logprob: -6.899932384490967
    7. '<|end|>' → logprob: -7.274932384490967
    8. ' 
' → logprob: -7.399932384490967
    9. '\n' → logprob: -8.149932861328125
    10. ' class' → logprob: -8.649932861328125

Token 94: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7234300971031189
    2. ' ' → logprob: -0.9734300971031189
    3. ' ==' → logprob: -2.8484301567077637
    4. '_' → logprob: -2.8484301567077637
    5. '__' → logprob: -5.098430156707764
    6. ' ' → logprob: -5.598430156707764
    7. ' value' → logprob: -6.098430156707764
    8. '<|end|>' → logprob: -6.223430156707764
    9. '_value' → logprob: -6.473430156707764
    10. ' _' → logprob: -6.598430156707764

Token 95: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0005649457452818751
    2. 'lt' → logprob: -7.500565052032471
    3. 'hash' → logprob: -11.375564575195312
    4. 'int' → logprob: -15.625564575195312
    5. ' eq' → logprob: -15.625564575195312
    6. 'le' → logprob: -17.000564575195312
    7. 'gt' → logprob: -17.250564575195312
    8. '_eq' → logprob: -18.125564575195312
    9. 'init' → logprob: -18.375564575195312
    10. 'e' → logprob: -18.500564575195312

Token 96: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0022287636529654264
    2. '__(' → logprob: -6.127228736877441
    3. '__('' → logprob: -10.752228736877441
    4. '__((' → logprob: -11.627228736877441
    5. '__(
' → logprob: -12.877228736877441
    6. '__.__' → logprob: -13.127228736877441
    7. '___' → logprob: -13.377228736877441
    8. '(' → logprob: -13.502228736877441
    9. '__(*' → logprob: -13.502228736877441
    10. '__*/' → logprob: -13.627228736877441

Token 97: 'self' (ID: 1156)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3153597116470337
    2. 'self' → logprob: -1.3153597116470337
    3. ' other' → logprob: -6.190359592437744
    4. ' self' → logprob: -10.190360069274902
    5. 'Other' → logprob: -12.315360069274902
    6. '_other' → logprob: -13.315360069274902
    7. '__' → logprob: -14.190360069274902
    8. '<|end|>' → logprob: -14.315360069274902
    9. ')' → logprob: -14.565360069274902
    10. ' ' → logprob: -14.565360069274902

Token 98: ',' (ID: 11)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.37158435583114624
    2. ',' → logprob: -1.621584415435791
    3. '__,' → logprob: -2.746584415435791
    4. ')' → logprob: -3.621584415435791
    5. '<|end|>' → logprob: -4.871584415435791
    6. '__)' → logprob: -5.246584415435791
    7. ' ,' → logprob: -5.621584415435791
    8. ' ' → logprob: -6.496584415435791
    9. ',__' → logprob: -7.496584415435791
    10. '__,
' → logprob: -7.496584415435791

Token 99: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.029761025682091713
    2. 'other' → logprob: -3.5297610759735107
    3. ' ' → logprob: -11.52976131439209
    4. ' o' → logprob: -14.52976131439209
    5. 'Other' → logprob: -16.654760360717773
    6. ' self' → logprob: -17.154760360717773
    7. ' oth' → logprob: -17.529760360717773
    8. '(other' → logprob: -17.779760360717773
    9. 'self' → logprob: -18.529760360717773
    10. '_other' → logprob: -18.779760360717773

Token 100: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39704737067222595
    2. '):' → logprob: -1.2720474004745483
    3. ' )' → logprob: -3.272047281265259
    4. ' ):' → logprob: -4.772047519683838
    5. ':' → logprob: -7.522047519683838
    6. ',' → logprob: -8.14704704284668
    7. '):
' → logprob: -9.64704704284668
    8. ' and' → logprob: -9.89704704284668
    9. ' ' → logprob: -10.52204704284668
    10. ' ,' → logprob: -10.77204704284668

Token 101: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7219719290733337
    2. ' isinstance' → logprob: -0.7219719290733337
    3. ' self' → logprob: -4.4719719886779785
    4. '    ' → logprob: -4.5969719886779785
    5. ' other' → logprob: -6.2219719886779785
    6. '       ' → logprob: -6.7219719886779785
    7. ' if' → logprob: -7.2219719886779785
    8. '        ' → logprob: -7.3469719886779785
    9. 'self' → logprob: -7.8469719886779785
    10. ' None' → logprob: -8.22197151184082

Token 102: ' return' (ID: 622)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.039384886622428894
    2. 'is' → logprob: -3.2893848419189453
    3. 'self' → logprob: -6.664384841918945
    4. ' self' → logprob: -10.539384841918945
    5. 'other' → logprob: -10.789384841918945
    6. 'not' → logprob: -12.414384841918945
    7. ' ' → logprob: -12.664384841918945
    8. ' other' → logprob: -12.664384841918945
    9. ' is' → logprob: -13.039384841918945
    10. ' not' → logprob: -13.164384841918945

Token 103: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0005557744298130274
    2. 'is' → logprob: -7.500555992126465
    3. ' self' → logprob: -13.125555992126465
    4. 'self' → logprob: -14.250555992126465
    5. ' hasattr' → logprob: -16.37555503845215
    6. '(is' → logprob: -16.62555503845215
    7. ' (
' → logprob: -17.75055503845215
    8. ' (' → logprob: -18.50055503845215
    9. ' is' → logprob: -19.00055503845215
    10. 'type' → logprob: -19.75055503845215

Token 104: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -6.098748053773306e-05
    2. 'other' → logprob: -9.75006103515625
    3. '(' → logprob: -13.50006103515625
    4. ' other' → logprob: -13.62506103515625
    5. 'Other' → logprob: -18.37506103515625
    6. ' (' → logprob: -18.75006103515625
    7. '(
' → logprob: -19.00006103515625
    8. '(object' → logprob: -20.00006103515625
    9. '.other' → logprob: -20.25006103515625
    10. '_other' → logprob: -20.62506103515625

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027065619360655546
    2. 'other' → logprob: -6.252706527709961
    3. '(other' → logprob: -7.377706527709961
    4. ' ,' → logprob: -8.877706527709961
    5. ' other' → logprob: -12.127706527709961
    6. ',
' → logprob: -12.877706527709961
    7. 'self' → logprob: -13.752706527709961
    8. ')' → logprob: -14.002706527709961
    9. 'Other' → logprob: -14.252706527709961
    10. ',self' → logprob: -14.252706527709961

Token 106: ' Card' (ID: 9958)
  Prédit: ' Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Card' → logprob: -0.0067154900170862675
    2. 'Card' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.506715774536133
    4. ' ' → logprob: -16.631715774536133
    5. '(Card' → logprob: -18.756715774536133
    6. '<Card' → logprob: -19.256715774536133
    7. ' Cardinal' → logprob: -19.631715774536133
    8. ' Car' → logprob: -20.381715774536133
    9. '/Card' → logprob: -20.506715774536133
    10. '.Card' → logprob: -21.006715774536133

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002193908003391698
    2. ' )' → logprob: -8.500219345092773
    3. 'and' → logprob: -11.250219345092773
    4. ' and' → logprob: -12.875219345092773
    5. '   ' → logprob: -16.125219345092773
    6. ')&&' → logprob: -16.375219345092773
    7. ')
' → logprob: -16.875219345092773
    8. '       ' → logprob: -17.500219345092773
    9. ' ' → logprob: -17.875219345092773
    10. '`)' → logprob: -18.500219345092773

Token 108: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804333135485649
    2. 'and' → logprob: -3.288043260574341
    3. ')' → logprob: -14.788043022155762
    4. ' ' → logprob: -15.038043022155762
    5. '    ' → logprob: -15.038043022155762
    6. '   ' → logprob: -15.038043022155762
    7. '
' → logprob: -16.038043975830078
    8. '       ' → logprob: -16.538043975830078
    9. '	and' → logprob: -16.538043975830078
    10. ' ' → logprob: -16.788043975830078

Token 109: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.583247184753418
    2. 'self' → logprob: -0.833247184753418
    3. ' other' → logprob: -5.083247184753418
    4. 'other' → logprob: -6.833247184753418
    5. ' ' → logprob: -12.958247184753418
    6. '
' → logprob: -14.208247184753418
    7. '	self' → logprob: -14.708247184753418
    8. ' ' → logprob: -15.333247184753418
    9. '(self' → logprob: -15.708247184753418
    10. '   ' → logprob: -17.708248138427734

Token 110: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -2.463036435074173e-05
    2. '.' → logprob: -10.625024795532227
    3. 'value' → logprob: -15.875024795532227
    4. ' .' → logprob: -16.250024795532227
    5. '.values' → logprob: -18.375024795532227
    6. '.val' → logprob: -18.875024795532227
    7. '.user' → logprob: -19.500024795532227
    8. ').' → logprob: -19.875024795532227
    9. '.type' → logprob: -20.500024795532227
    10. ''value' → logprob: -20.750024795532227

Token 111: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47409868240356445
    2. ' ==' → logprob: -0.9740986824035645
    3. '=' → logprob: -11.349098205566406
    4. '==
' → logprob: -12.099098205566406
    5. ')==' → logprob: -13.599098205566406
    6. '<|end|>' → logprob: -13.599098205566406
    7. '===' → logprob: -13.724098205566406
    8. ')' → logprob: -15.599098205566406
    9. '<|end|>' → logprob: -16.099098205566406
    10. '()==' → logprob: -16.224098205566406

Token 112: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.07888989895582199
    2. ' other' → logprob: -2.578889846801758
    3. 'Other' → logprob: -17.203889846801758
    4. '(other' → logprob: -17.328889846801758
    5. '.other' → logprob: -17.703889846801758
    6. '_other' → logprob: -18.578889846801758
    7. '   ' → logprob: -19.078889846801758
    8. '
' → logprob: -19.578889846801758
    9. ' ' → logprob: -19.703889846801758
    10. 'self' → logprob: -21.078889846801758

Token 113: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.4742700457572937
    2. '.' → logprob: -0.9742700457572937
    3. ' .' → logprob: -8.84926986694336
    4. 'value' → logprob: -10.09926986694336
    5. ' ' → logprob: -12.59926986694336
    6. '.
' → logprob: -12.84926986694336
    7. '.other' → logprob: -14.47426986694336
    8. '.val' → logprob: -14.84926986694336
    9. ' value' → logprob: -15.72426986694336
    10. '.

' → logprob: -15.72426986694336

Token 114: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029694996774196625
    2. '<|end|>' → logprob: -6.377969264984131
    3. '
' → logprob: -7.127969264984131
    4. '    
' → logprob: -8.877969741821289
    5. ' 
' → logprob: -9.127969741821289
    6. ' ' → logprob: -9.252969741821289
    7. '    ' → logprob: -10.127969741821289
    8. '  ' → logprob: -10.377969741821289
    9. '<|end|>' → logprob: -11.252969741821289
    10. '  
' → logprob: -11.752969741821289

Token 116: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004900033236481249
    2. 'def' (adapté à ' def') → logprob: -7.875490188598633
    3. ' def' → logprob: -10.250490188598633
    4. ' ' → logprob: -10.625490188598633
    5. '    
' → logprob: -10.750490188598633
    6. '  ' → logprob: -11.375490188598633
    7. ' 
' → logprob: -12.375490188598633
    8. '
' → logprob: -12.875490188598633
    9. '    ' → logprob: -12.875490188598633
    10. '   
' → logprob: -13.125490188598633

Token 117: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05500573292374611
    2. '__' → logprob: -2.9300057888031006
    3. 'hash' → logprob: -9.68000602722168
    4. ' hash' → logprob: -11.05500602722168
    5. ' ' → logprob: -11.05500602722168
    6. '_hash' → logprob: -11.55500602722168
    7. ' ' → logprob: -11.80500602722168
    8. ' <' → logprob: -12.93000602722168
    9. 'lt' → logprob: -13.93000602722168
    10. 'def' → logprob: -14.05500602722168

Token 118: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.002254218328744173
    2. 'lt' → logprob: -6.127254009246826
    3. 'ne' → logprob: -9.752254486083984
    4. ' hash' → logprob: -11.502254486083984
    5. 'gt' → logprob: -15.377254486083984
    6. '_hash' → logprob: -15.627254486083984
    7. '```' → logprob: -16.127254486083984
    8. 'Hash' → logprob: -16.377254486083984
    9. 'eq' → logprob: -16.752254486083984
    10. 'add' → logprob: -17.002254486083984

Token 119: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18609142303466797
    2. '(' → logprob: -1.811091423034668
    3. '__(' → logprob: -5.311091423034668
    4. '<|end|>' → logprob: -6.811091423034668
    5. ' (' → logprob: -8.811091423034668
    6. ')(' → logprob: -10.561091423034668
    7. '(
' → logprob: -10.686091423034668
    8. '__(
' → logprob: -11.061091423034668
    9. '__((' → logprob: -11.436091423034668
    10. '(this' → logprob: -11.561091423034668

Token 120: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03985271602869034
    2. 'other' → logprob: -3.2898526191711426
    3. ' self' → logprob: -6.414852619171143
    4. ' other' → logprob: -8.7898530960083
    5. ')' → logprob: -11.1648530960083
    6. '(self' → logprob: -12.2898530960083
    7. 'Other' → logprob: -14.6648530960083
    8. ' ' → logprob: -15.1648530960083
    9. '   ' → logprob: -15.1648530960083
    10. '	self' → logprob: -15.7898530960083

Token 121: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023492254316806793
    2. ',' → logprob: -4.148492336273193
    3. '<|end|>' → logprob: -5.023492336273193
    4. '__)' → logprob: -8.023491859436035
    5. ')object' → logprob: -9.398491859436035
    6. ').__' → logprob: -9.648491859436035
    7. ' )' → logprob: -9.773491859436035
    8. '):' → logprob: -9.898491859436035
    9. '__' → logprob: -10.273491859436035
    10. '):
' → logprob: -10.398491859436035

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10803854465484619
    2. ' return' → logprob: -2.8580384254455566
    3. 'return' → logprob: -3.1080384254455566
    4. '   ' → logprob: -8.733038902282715
    5. ' self' → logprob: -9.608038902282715
    6. 'self' → logprob: -9.858038902282715
    7. 'hash' → logprob: -10.858038902282715
    8. ' hash' → logprob: -11.233038902282715
    9. '
' → logprob: -11.733038902282715
    10. '      ' → logprob: -13.108038902282715

Token 123: ' return' (ID: 622)
  Prédit: ' hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -1.1274898052215576
    2. 'hash' → logprob: -1.3774898052215576
    3. 'return' (adapté à ' return') → logprob: -1.7524898052215576
    4. ' return' → logprob: -1.8774898052215576
    5. ' self' → logprob: -3.0024898052215576
    6. 'self' → logprob: -3.1274898052215576
    7. '       ' → logprob: -5.627490043640137
    8. '   ' → logprob: -7.627490043640137
    9. ' ' → logprob: -11.252490043640137
    10. '
' → logprob: -12.127490043640137

Token 124: ' hash' (ID: 10691)
  Prédit: ' hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.07644808292388916
    2. 'hash' → logprob: -2.7014479637145996
    3. ' self' → logprob: -5.0764479637146
    4. 'self' → logprob: -8.326448440551758
    5. ' ' → logprob: -12.451448440551758
    6. '   ' → logprob: -14.451448440551758
    7. '	hash' → logprob: -14.576448440551758
    8. '(hash' → logprob: -14.701448440551758
    9. '_hash' → logprob: -15.451448440551758
    10. 'Hash' → logprob: -15.576448440551758

Token 125: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.3080716346157715e-05
    2. '((' → logprob: -11.125022888183594
    3. '(' → logprob: -11.750022888183594
    4. '(s' → logprob: -15.875022888183594
    5. ' (' → logprob: -16.250022888183594
    6. 'self' → logprob: -16.375022888183594
    7. '(
' → logprob: -18.500022888183594
    8. '(this' → logprob: -19.625022888183594
    9. '(sel' → logprob: -19.625022888183594
    10. '(Self' → logprob: -19.750022888183594

Token 126: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -4.842555426876061e-06
    2. '.' → logprob: -13.000004768371582
    3. ').' → logprob: -13.750004768371582
    4. ' .' → logprob: -13.750004768371582
    5. 'value' → logprob: -15.375004768371582
    6. '.val' → logprob: -17.0000057220459
    7. ')' → logprob: -17.8750057220459
    8. '.v' → logprob: -17.8750057220459
    9. '.Value' → logprob: -18.1250057220459
    10. '.user' → logprob: -18.5000057220459

Token 127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4060561776859686e-05
    2. ' )' → logprob: -10.375043869018555
    3. ')
' → logprob: -11.375043869018555
    4. '}' → logprob: -13.750043869018555
    5. ')return' → logprob: -16.875043869018555
    6. ')}' → logprob: -17.125043869018555
    7. ')

' → logprob: -17.250043869018555
    8. '   ' → logprob: -18.250043869018555
    9. '<|end|>' → logprob: -18.250043869018555
    10. ' ' → logprob: -18.375043869018555

Token 128: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2637283205986023
    2. '

' → logprob: -1.513728380203247
    3. 'class' → logprob: -4.513728141784668
    4. '
' → logprob: -7.263728141784668
    5. '


' → logprob: -10.138728141784668
    6. '' → logprob: -11.763728141784668
    7. '\n' → logprob: -12.013728141784668
    8. '
    
' → logprob: -12.513728141784668
    9. '```' → logprob: -13.138728141784668
    10. ' 
' → logprob: -13.263728141784668

Token 129: ' Deck' (ID: 41948)
  Prédit: ' Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.7719246745109558
    2. ' Deck' → logprob: -1.2719247341156006
    3. ' Card' → logprob: -1.5219247341156006
    4. ' Hand' → logprob: -3.6469247341156006
    5. ' Game' → logprob: -5.3969244956970215
    6. ' Stack' → logprob: -5.8969244956970215
    7. ' Abstract' → logprob: -6.2719244956970215
    8. ' Poker' → logprob: -7.0219244956970215
    9. 'Deck' → logprob: -7.2719244956970215
    10. 'Player' → logprob: -8.27192497253418

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023843301460146904
    2. '(' → logprob: -6.127384185791016
    3. '(Abstract' → logprob: -9.377384185791016
    4. ':
' → logprob: -9.752384185791016
    5. ' :' → logprob: -10.127384185791016
    6. '():' → logprob: -11.377384185791016
    7. '(object' → logprob: -13.252384185791016
    8. ':

' → logprob: -14.127384185791016
    9. '(List' → logprob: -14.502384185791016
    10. '):' → logprob: -15.002384185791016

Token 131: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09251956641674042
    2. ':
' → logprob: -2.467519521713257
    3. '   ' → logprob: -5.842519760131836
    4. '(' → logprob: -7.467519760131836
    5. '(Abstract' → logprob: -10.467519760131836
    6. ' :' → logprob: -10.967519760131836
    7. '<|end|>' → logprob: -11.217519760131836
    8. ':

' → logprob: -12.092519760131836
    9. ' :
' → logprob: -12.217519760131836
    10. '```' → logprob: -12.342519760131836

Token 132: ' def' (ID: 1056)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.24616208672523499
    2. ' def' → logprob: -2.246162176132202
    3. '   ' → logprob: -2.871162176132202
    4. '__' → logprob: -3.496162176132202
    5. 'def' (adapté à ' def') → logprob: -3.746162176132202
    6. ':' → logprob: -7.746161937713623
    7. '    ' → logprob: -8.246162414550781
    8. ' ' → logprob: -8.371162414550781
    9. 'class' → logprob: -8.496162414550781
    10. '```' → logprob: -9.246162414550781

Token 133: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.8128275275230408
    2. 'List' → logprob: -1.1878275871276855
    3. ' List' → logprob: -1.4378275871276855
    4. 'init' → logprob: -5.6878275871276855
    5. '_init' → logprob: -6.1878275871276855
    6. '_list' → logprob: -6.1878275871276855
    7. '__' → logprob: -6.1878275871276855
    8. ' ' → logprob: -6.3128275871276855
    9. '```' → logprob: -7.5628275871276855
    10. ' list' → logprob: -7.8128275871276855

Token 134: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00043376852408982813
    2. 'slots' → logprob: -7.750433921813965
    3. '   ' → logprob: -14.250433921813965
    4. ' init' → logprob: -14.500433921813965
    5. '```' → logprob: -14.500433921813965
    6. 'iter' → logprob: -15.750433921813965
    7. 'slot' → logprob: -15.750433921813965
    8. 'in' → logprob: -15.875433921813965
    9. '_init' → logprob: -15.875433921813965
    10. 'len' → logprob: -16.25043296813965

Token 135: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005087109748274088
    2. '__(
' → logprob: -8.250508308410645
    3. '__' → logprob: -8.500508308410645
    4. '(self' → logprob: -10.375508308410645
    5. '_(' → logprob: -12.125508308410645
    6. '(' → logprob: -12.500508308410645
    7. '_' → logprob: -13.250508308410645
    8. '__((' → logprob: -13.875508308410645
    9. '```' → logprob: -15.500508308410645
    10. '__('' → logprob: -15.625508308410645

Token 136: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028450563549995422
    2. ' self' → logprob: -5.877845287322998
    3. ')' → logprob: -10.25284481048584
    4. '
' → logprob: -12.75284481048584
    5. ' ' → logprob: -14.12784481048584
    6. '[' → logprob: -14.75284481048584
    7. ',' → logprob: -16.002845764160156
    8. '```' → logprob: -16.002845764160156
    9. '	self' → logprob: -16.127845764160156
    10. '):
' → logprob: -16.252845764160156

Token 137: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002468643942847848
    2. ' ,' → logprob: -6.252468585968018
    3. '):' → logprob: -8.002469062805176
    4. 'self' → logprob: -9.252469062805176
    5. ' ):' → logprob: -10.627469062805176
    6. '):
' → logprob: -10.752469062805176
    7. ' (' → logprob: -10.752469062805176
    8. ')' → logprob: -10.752469062805176
    9. '(' → logprob: -12.752469062805176
    10. ' self' → logprob: -12.877469062805176

Token 138: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00017481597024016082
    2. ' self' → logprob: -9.000174522399902
    3. '       ' → logprob: -10.000174522399902
    4. '   ' → logprob: -12.875174522399902
    5. ')' → logprob: -13.375174522399902
    6. '):
' → logprob: -14.000174522399902
    7. '```' → logprob: -14.750174522399902
    8. '
' → logprob: -15.500174522399902
    9. '(self' → logprob: -15.625174522399902
    10. '	self' → logprob: -16.25017547607422

Token 139: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3167249262332916
    2. 'self' (adapté à ' self') → logprob: -1.3167248964309692
    3. 'import' → logprob: -6.56672477722168
    4. 'from' → logprob: -6.56672477722168
    5. ' from' → logprob: -8.06672477722168
    6. ' pass' → logprob: -9.06672477722168
    7. ' import' → logprob: -9.31672477722168
    8. '       ' → logprob: -9.56672477722168
    9. 'pass' → logprob: -10.81672477722168
    10. '	self' → logprob: -11.31672477722168

Token 140: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5353627800941467
    2. '_cards' → logprob: -1.535362720489502
    3. '.cards' → logprob: -2.160362720489502
    4. ' .' → logprob: -2.910362720489502
    5. ' =' → logprob: -4.035362720489502
    6. '.' → logprob: -5.285362720489502
    7. ' ' → logprob: -5.910362720489502
    8. 'cards' → logprob: -7.160362720489502
    9. ' cards' → logprob: -7.160362720489502
    10. ' _' → logprob: -7.660362720489502

Token 141: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.0025217996444553137
    2. '_cards' → logprob: -6.002521991729736
    3. 'deck' → logprob: -10.877521514892578
    4. ' cards' → logprob: -11.377521514892578
    5. '.cards' → logprob: -12.127521514892578
    6. 'stack' → logprob: -12.377521514892578
    7. '_card' → logprob: -13.502521514892578
    8. '_de' → logprob: -13.752521514892578
    9. 'card' → logprob: -14.252521514892578
    10. '_stack' → logprob: -14.377521514892578

Token 142: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07031307369470596
    2. ' =' → logprob: -2.695312976837158
    3. '=' → logprob: -8.320313453674316
    4. ' :' → logprob: -8.945313453674316
    5. '=[]' → logprob: -13.445313453674316
    6. ' ' → logprob: -13.820313453674316
    7. '<|end|>' → logprob: -15.695313453674316
    8. 's' → logprob: -17.0703125
    9. '[:]' → logprob: -17.1953125
    10. ')' → logprob: -17.3203125

Token 143: ' Set' (ID: 3957)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.12700413167476654
    2. 'List' → logprob: -2.1270041465759277
    3. '[List' → logprob: -10.62700366973877
    4. ' list' → logprob: -11.12700366973877
    5. ' Set' → logprob: -11.50200366973877
    6. 'Set' → logprob: -11.75200366973877
    7. 'list' → logprob: -11.75200366973877
    8. '	List' → logprob: -12.00200366973877
    9. ' ' → logprob: -13.62700366973877
    10. '```' → logprob: -14.12700366973877

Token 144: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7848862373502925e-05
    2. '<Card' → logprob: -11.000027656555176
    3. '[int' → logprob: -11.875027656555176
    4. '<|end|>' → logprob: -13.250027656555176
    5. '```' → logprob: -14.500027656555176
    6. '[
' → logprob: -14.500027656555176
    7. '(Card' → logprob: -14.750027656555176
    8. '[C' → logprob: -15.750027656555176
    9. '[List' → logprob: -15.875027656555176
    10. ' [' → logprob: -15.875027656555176

Token 145: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.10020849853754044
    2. ' Card' → logprob: -2.3502085208892822
    3. ' ' → logprob: -14.225208282470703
    4. '<Card' → logprob: -14.475208282470703
    5. '_card' → logprob: -15.475208282470703
    6. ']' → logprob: -15.725208282470703
    7. '(Card' → logprob: -15.725208282470703
    8. 'Car' → logprob: -16.725208282470703
    9. 'int' → logprob: -17.100208282470703
    10. '.Card' → logprob: -17.225208282470703

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.363617962459102e-05
    2. ' ]' → logprob: -9.500083923339844
    3. ']=' → logprob: -12.500083923339844
    4. '[' → logprob: -12.500083923339844
    5. '()]' → logprob: -14.375083923339844
    6. ']()' → logprob: -14.625083923339844
    7. ' ' → logprob: -16.250083923339844
    8. ']
' → logprob: -16.250083923339844
    9. '`]' → logprob: -17.500083923339844
    10. ']>' → logprob: -18.000083923339844

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.056514352560043335
    2. '=' → logprob: -2.931514263153076
    3. ' ' → logprob: -6.431514263153076
    4. '<|end|>' → logprob: -11.306514739990234
    5. ')' → logprob: -12.556514739990234
    6. ' =
' → logprob: -13.431514739990234
    7. '  ' → logprob: -13.431514739990234
    8. ']' → logprob: -14.431514739990234
    9. '=[]' → logprob: -15.681514739990234
    10. ' )' → logprob: -15.806514739990234

Token 148: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.07002735137939453
    2. 'set' → logprob: -2.6950273513793945
    3. ' {' → logprob: -10.195027351379395
    4. ' ' → logprob: -10.570027351379395
    5. '{' → logprob: -10.695027351379395
    6. '	set' → logprob: -13.070027351379395
    7. '(set' → logprob: -14.070027351379395
    8. '{}' → logprob: -14.570027351379395
    9. '=set' → logprob: -14.695027351379395
    10. ' ' → logprob: -15.195027351379395

Token 149: '(Card' (ID: 110777)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0325924449716695e-05
    2. '()
' → logprob: -11.87501049041748
    3. '()

' → logprob: -13.75001049041748
    4. '(' → logprob: -14.37501049041748
    5. '()]' → logprob: -14.87501049041748
    6. '([]' → logprob: -14.87501049041748
    7. ' ()' → logprob: -15.00001049041748
    8. '()}' → logprob: -15.75001049041748
    9. '())' → logprob: -16.875009536743164
    10. '()`' → logprob: -17.000009536743164

Token 150: '(v' (ID: 6932)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.033146247267723083
    2. '(value' → logprob: -3.5331461429595947
    3. '(v' → logprob: -5.783146381378174
    4. '(x' → logprob: -8.783145904541016
    5. '(' → logprob: -8.908145904541016
    6. '(val' → logprob: -11.283145904541016
    7. '(range' → logprob: -12.908145904541016
    8. '(s' → logprob: -12.908145904541016
    9. '((' → logprob: -13.533145904541016
    10. '(n' → logprob: -13.908145904541016

Token 151: ')' (ID: 8)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.9577676653862
    2. '(i' → logprob: -1.0827677249908447
    3. '(range' → logprob: -1.5827677249908447
    4. ')' → logprob: -3.7077677249908447
    5. '(v' → logprob: -3.8327677249908447
    6. 'range' → logprob: -4.332767486572266
    7. '(' → logprob: -4.832767486572266
    8. '(x' → logprob: -5.832767486572266
    9. ' range' → logprob: -6.957767486572266
    10. '()' → logprob: -7.582767486572266

Token 152: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5632935166358948
    2. '(i' → logprob: -1.81329345703125
    3. '(v' → logprob: -1.93829345703125
    4. '(value' → logprob: -2.56329345703125
    5. '(' → logprob: -3.81329345703125
    6. '(range' → logprob: -4.06329345703125
    7. 'for' → logprob: -5.56329345703125
    8. 'range' → logprob: -6.81329345703125
    9. ' range' → logprob: -7.43829345703125
    10. '(x' → logprob: -7.43829345703125

Token 153: ' v' (ID: 323)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31786516308784485
    2. ' v' → logprob: -1.3178651332855225
    3. ' ' → logprob: -5.442865371704102
    4. ' value' → logprob: -9.317865371704102
    5. 'v' → logprob: -9.692865371704102
    6. 'range' → logprob: -9.692865371704102
    7. '<|end|>' → logprob: -11.442865371704102
    8. '  ' → logprob: -11.692865371704102
    9. ' _' → logprob: -11.817865371704102
    10. '	range' → logprob: -12.067865371704102

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00803964864462614
    2. ' ' → logprob: -5.383039474487305
    3. ' range' → logprob: -5.758039474487305
    4. 'range' → logprob: -9.133039474487305
    5. '<|end|>' → logprob: -9.258039474487305
    6. 'in' → logprob: -9.883039474487305
    7. '<|end|>' → logprob: -15.133039474487305
    8. ' xrange' → logprob: -15.258039474487305
    9. '(range' → logprob: -15.508039474487305
    10. '  ' → logprob: -15.633039474487305

Token 155: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005234121344983578
    2. 'range' → logprob: -5.255234241485596
    3. '	range' → logprob: -15.755233764648438
    4. '(range' → logprob: -16.130233764648438
    5. ' ' → logprob: -16.380233764648438
    6. ' rang' → logprob: -19.505233764648438
    7. ' ran' → logprob: -19.880233764648438
    8. ' xrange' → logprob: -20.005233764648438
    9. '.range' → logprob: -20.505233764648438
    10. '```' → logprob: -20.505233764648438

Token 156: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.7014437364414334e-05
    2. '1' → logprob: -10.62502670288086
    3. '(
' → logprob: -13.50002670288086
    4. ' (' → logprob: -14.12502670288086
    5. ')' → logprob: -15.50002670288086
    6. ' ' → logprob: -15.75002670288086
    7. '<|end|>' → logprob: -16.12502670288086
    8. '[' → logprob: -18.75002670288086
    9. ',' → logprob: -18.75002670288086
    10. '```' → logprob: -19.00002670288086

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021859495900571346
    2. ' ' → logprob: -6.127185821533203
    3. '   ' → logprob: -15.502185821533203
    4. ')' → logprob: -15.502185821533203
    5. '(' → logprob: -15.627185821533203
    6. '10' → logprob: -15.752185821533203
    7. '```' → logprob: -16.627185821533203
    8. ',' → logprob: -16.877185821533203
    9. '[' → logprob: -17.564685821533203
    10. '	' → logprob: -18.252185821533203

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004238904919475317
    2. ' ,' → logprob: -5.629239082336426
    3. '1' → logprob: -7.379239082336426
    4. ' ' → logprob: -12.129239082336426
    5. '10' → logprob: -12.379239082336426
    6. ',
' → logprob: -12.504239082336426
    7. ' ,
' → logprob: -15.129239082336426
    8. '<|end|>' → logprob: -15.129239082336426
    9. '11' → logprob: -15.629239082336426
    10. '```' → logprob: -15.879239082336426

Token 159: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.007608278188854456
    2. ' ' → logprob: -4.882608413696289
    3. '1' → logprob: -13.757608413696289
    4. '```' → logprob: -15.382608413696289
    5. '   ' → logprob: -15.632608413696289
    6. '=' → logprob: -15.757608413696289
    7. ')' → logprob: -15.945108413696289
    8. '10' → logprob: -16.63260841369629
    9. '  ' → logprob: -17.00760841369629
    10. '    ' → logprob: -17.07010841369629

Token 160: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -8.566264295950532e-05
    2. ' ' → logprob: -9.375085830688477
    3. '1' → logprob: -14.750085830688477
    4. '```' → logprob: -15.625085830688477
    5. '
' → logprob: -17.000085830688477
    6. ')' → logprob: -17.375085830688477
    7. '=' → logprob: -17.625085830688477
    8. '10' → logprob: -17.750085830688477
    9. '' → logprob: -18.125085830688477
    10. '   ' → logprob: -18.562585830688477

Token 161: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006725437473505735
    2. ')' → logprob: -5.006725311279297
    3. ' ))' → logprob: -11.881725311279297
    4. ')))' → logprob: -13.006725311279297
    5. '),' → logprob: -15.256725311279297
    6. '))
' → logprob: -15.381725311279297
    7. ' )' → logprob: -15.756725311279297
    8. ')
' → logprob: -16.631725311279297
    9. ')}' → logprob: -16.756725311279297
    10. ' ' → logprob: -17.006725311279297

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2851044237613678
    2. '<|end|>' → logprob: -1.7851043939590454
    3. '
' → logprob: -2.535104513168335
    4. '<|end|>' → logprob: -7.535104274749756
    5. '    
' → logprob: -8.785104751586914
    6. ' ' → logprob: -9.035104751586914
    7. 'def' → logprob: -9.410104751586914
    8. ' def' → logprob: -9.660104751586914
    9. ')' → logprob: -10.785104751586914
    10. '```' → logprob: -11.410104751586914

Token 163: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.175296351313591
    2. 'def' (adapté à ' def') → logprob: -2.3002963066101074
    3. '<|end|>' → logprob: -2.9252963066101074
    4. ' def' → logprob: -5.175296306610107
    5. '    
' → logprob: -7.425296306610107
    6. '<|end|>' → logprob: -8.050296783447266
    7. '
' → logprob: -8.300296783447266
    8. ' ' → logprob: -10.300296783447266
    9. 'class' → logprob: -11.675296783447266
    10. '```' → logprob: -11.675296783447266

Token 164: ' remove' (ID: 6234)
  Prédit: ' draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' draw' → logprob: -0.2043912708759308
    2. ' shuffle' → logprob: -2.3293912410736084
    3. ' remove' → logprob: -3.3293912410736084
    4. ' __' → logprob: -3.8293912410736084
    5. ' add' → logprob: -4.0793914794921875
    6. ' ' → logprob: -6.3293914794921875
    7. ' def' → logprob: -6.3293914794921875
    8. 'draw' → logprob: -6.4543914794921875
    9. 'shuffle' → logprob: -6.7043914794921875
    10. '__' → logprob: -6.8293914794921875

Token 165: '_cards' (ID: 101651)
  Prédit: '_card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.1713314652442932
    2. '(' → logprob: -2.7963314056396484
    3. '(self' → logprob: -3.0463314056396484
    4. '_' → logprob: -3.6713314056396484
    5. '_cards' → logprob: -4.171331405639648
    6. '(card' → logprob: -5.296331405639648
    7. '_all' → logprob: -6.671331405639648
    8. '_at' → logprob: -7.671331405639648
    9. ' (' → logprob: -8.296331405639648
    10. '_(' → logprob: -8.421331405639648

Token 166: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000585322268307209
    2. ' (' → logprob: -7.875585556030273
    3. '(' → logprob: -8.500585556030273
    4. '   ' → logprob: -14.875585556030273
    5. '(s' → logprob: -15.125585556030273
    6. '(
' → logprob: -15.250585556030273
    7. '       ' → logprob: -15.375585556030273
    8. 'self' → logprob: -15.375585556030273
    9. ' self' → logprob: -15.625585556030273
    10. ' ' → logprob: -16.125585556030273

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015180727932602167
    2. ' ,' → logprob: -6.501518249511719
    3. 'self' → logprob: -11.751518249511719
    4. ')' → logprob: -12.751518249511719
    5. '):' → logprob: -13.876518249511719
    6. ',
' → logprob: -14.251518249511719
    7. ':' → logprob: -14.376518249511719
    8. ' ' → logprob: -14.376518249511719
    9. ' )' → logprob: -15.251518249511719
    10. '

' → logprob: -15.376518249511719

Token 168: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.0734771341085434
    2. 'cards' → logprob: -2.948477029800415
    3. ' self' → logprob: -4.323477268218994
    4. 'self' → logprob: -5.573477268218994
    5. ' to' → logprob: -7.573477268218994
    6. ' values' → logprob: -8.573476791381836
    7. ')' → logprob: -8.573476791381836
    8. 'to' → logprob: -9.073476791381836
    9. ' card' → logprob: -9.323476791381836
    10. 'values' → logprob: -9.698476791381836

Token 169: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011558275582501665
    2. '):' → logprob: -9.500115394592285
    3. ' :' → logprob: -10.875115394592285
    4. ')' → logprob: -11.000115394592285
    5. ':Set' → logprob: -12.875115394592285
    6. '):
' → logprob: -14.125115394592285
    7. '_:' → logprob: -14.500115394592285
    8. ' ):' → logprob: -14.875115394592285
    9. '   ' → logprob: -15.500115394592285
    10. ' ' → logprob: -15.625115394592285

Token 170: ' List' (ID: 2655)
  Prédit: ' Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Set' → logprob: -0.3327352702617645
    2. 'Set' → logprob: -1.832735300064087
    3. ' List' → logprob: -2.457735300064087
    4. 'List' → logprob: -3.957735300064087
    5. ')' → logprob: -5.207735061645508
    6. ' Iterable' → logprob: -5.457735061645508
    7. 'Iterable' → logprob: -5.582735061645508
    8. ' Iterator' → logprob: -5.957735061645508
    9. 'Iterator' → logprob: -6.707735061645508
    10. ' set' → logprob: -7.832735061645508

Token 171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. ')' → logprob: -12.875007629394531
    3. '[
' → logprob: -13.250007629394531
    4. '<Card' → logprob: -13.750007629394531
    5. '[int' → logprob: -14.375007629394531
    6. ' [' → logprob: -15.000007629394531
    7. '```' → logprob: -15.375007629394531
    8. ']' → logprob: -15.750007629394531
    9. 'Card' → logprob: -15.875007629394531
    10. '])' → logprob: -16.62500762939453

Token 172: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.00861528143286705
    2. ' Card' → logprob: -4.758615493774414
    3. '<Card' → logprob: -15.508615493774414
    4. ')' → logprob: -15.633615493774414
    5. ' ' → logprob: -15.633615493774414
    6. '_card' → logprob: -16.633615493774414
    7. '(Card' → logprob: -17.258615493774414
    8. '.Card' → logprob: -17.883615493774414
    9. '[' → logprob: -18.008615493774414
    10. 'card' → logprob: -18.133615493774414

Token 173: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.39066359400749207
    2. ')' → logprob: -1.1406636238098145
    3. ']):' → logprob: -5.8906636238098145
    4. '):' → logprob: -7.3906636238098145
    5. ']' → logprob: -8.765663146972656
    6. ']):
' → logprob: -9.140663146972656
    7. ' ])' → logprob: -9.890663146972656
    8. ' )' → logprob: -10.265663146972656
    9. ')])' → logprob: -11.765663146972656
    10. '):
' → logprob: -12.140663146972656

Token 174: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019229168072342873
    2. ' ->' → logprob: -4.644228935241699
    3. '->' → logprob: -5.144228935241699
    4. ')' → logprob: -6.269228935241699
    5. '):' → logprob: -6.644228935241699
    6. ':
' → logprob: -8.3942289352417
    7. ')->' → logprob: -9.2692289352417
    8. '       ' → logprob: -10.5192289352417
    9. '   ' → logprob: -10.6442289352417
    10. ' :' → logprob: -11.1442289352417

Token 175: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5989110469818115
    2. 'None' → logprob: -0.8489110469818115
    3. 'bool' → logprob: -4.223911285400391
    4. ' bool' → logprob: -4.848911285400391
    5. 'Set' → logprob: -9.59891128540039
    6. 'Optional' → logprob: -9.59891128540039
    7. ' Optional' → logprob: -9.97391128540039
    8. ' Set' → logprob: -10.84891128540039
    9. ' ' → logprob: -11.84891128540039
    10. '   ' → logprob: -11.97391128540039

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020620018243789673
    2. ':
' → logprob: -3.895620107650757
    3. '):' → logprob: -9.770620346069336
    4. '):
' → logprob: -11.520620346069336
    5. '       ' → logprob: -12.395620346069336
    6. ':
' → logprob: -12.395620346069336
    7. '   ' → logprob: -14.145620346069336
    8. ' :' → logprob: -15.020620346069336
    9. ' :
' → logprob: -15.145620346069336
    10. ':def' → logprob: -15.145620346069336

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023095356300473213
    2. ' for' → logprob: -8.62523078918457
    3. '   ' → logprob: -11.12523078918457
    4. '
' → logprob: -11.75023078918457
    5. '<|end|>' → logprob: -11.75023078918457
    6. ',' → logprob: -12.62523078918457
    7. ':' → logprob: -12.87523078918457
    8. ')' → logprob: -13.25023078918457
    9. ' to' → logprob: -13.50023078918457
    10. '      ' → logprob: -13.62523078918457

Token 178: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5895788669586182
    2. '       ' → logprob: -1.3395788669586182
    3. 'for' (adapté à ' for') → logprob: -1.8395788669586182
    4. ' self' → logprob: -4.339578628540039
    5. 'self' → logprob: -4.464578628540039
    6. '   ' → logprob: -11.339578628540039
    7. '
' → logprob: -11.464578628540039
    8. ' ' → logprob: -12.339578628540039
    9. '	for' → logprob: -12.464578628540039
    10. '```' → logprob: -12.464578628540039

Token 179: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.004722395446151495
    2. 'card' → logprob: -5.379722595214844
    3. ' c' → logprob: -9.754722595214844
    4. '	card' → logprob: -10.254722595214844
    5. 'c' → logprob: -12.004722595214844
    6. ' ' → logprob: -13.504722595214844
    7. '_card' → logprob: -14.754722595214844
    8. 'Card' → logprob: -15.004722595214844
    9. '(card' → logprob: -15.629722595214844
    10. '	c' → logprob: -15.754722595214844

Token 180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024259560741484165
    2. 'in' → logprob: -6.1274261474609375
    3. ' ' → logprob: -8.377426147460938
    4. 's' → logprob: -11.877426147460938
    5. '	in' → logprob: -13.502426147460938
    6. '_' → logprob: -14.502426147460938
    7. ' i' → logprob: -14.502426147460938
    8. ' ' → logprob: -15.127426147460938
    9. 'import' → logprob: -15.252426147460938
    10. '_in' → logprob: -15.252426147460938

Token 181: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.523148238658905
    2. ' cards' → logprob: -0.898148238658905
    3. '(cards' → logprob: -11.023148536682129
    4. '.cards' → logprob: -13.023148536682129
    5. '
' → logprob: -13.273148536682129
    6. '   ' → logprob: -13.648148536682129
    7. ' ' → logprob: -14.148148536682129
    8. 'card' → logprob: -14.648148536682129
    9. '_cards' → logprob: -14.648148536682129
    10. ' ' → logprob: -14.898148536682129

Token 182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16542449593544006
    2. ':
' → logprob: -1.9154244661331177
    3. '           ' → logprob: -5.290424346923828
    4. '.' → logprob: -9.665424346923828
    5. ':
' → logprob: -10.790424346923828
    6. ',' → logprob: -11.415424346923828
    7. '.remove' → logprob: -11.540424346923828
    8. ':

' → logprob: -11.790424346923828
    9. '):
' → logprob: -11.915424346923828
    10. ' self' → logprob: -12.165424346923828

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016093627782538533
    2. ':
' → logprob: -7.2516093254089355
    3. ' self' → logprob: -7.7516093254089355
    4. ':' → logprob: -7.8766093254089355
    5. 'self' → logprob: -9.626609802246094
    6. '            ' → logprob: -12.626609802246094
    7. '.' → logprob: -12.626609802246094
    8. '          ' → logprob: -13.126609802246094
    9. '            
' → logprob: -13.626609802246094
    10. '):
' → logprob: -13.876609802246094

Token 184: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6940172910690308
    2. 'self' (adapté à ' self') → logprob: -0.6940172910690308
    3. '           ' → logprob: -7.19401741027832
    4. '               ' → logprob: -9.69401741027832
    5. ' if' → logprob: -10.56901741027832
    6. 'if' → logprob: -11.56901741027832
    7. '       ' → logprob: -11.69401741027832
    8. '   ' → logprob: -12.94401741027832
    9. '            ' → logprob: -13.19401741027832
    10. '	self' → logprob: -13.31901741027832

Token 185: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.7697225252486533e-06
    2. ']._' → logprob: -13.125003814697266
    3. '.' → logprob: -14.500003814697266
    4. '.remove' → logprob: -14.625003814697266
    5. ')._' → logprob: -14.625003814697266
    6. ' .' → logprob: -16.125003814697266
    7. '   ' → logprob: -17.000003814697266
    8. '_' → logprob: -17.875003814697266
    9. '_remove' → logprob: -18.375003814697266
    10. 'remove' → logprob: -18.750003814697266

Token 186: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.00023214559769257903
    2. '_cards' → logprob: -8.375231742858887
    3. ' cards' → logprob: -14.125231742858887
    4. '.cards' → logprob: -14.375231742858887
    5. '(cards' → logprob: -16.000232696533203
    6. 'card' → logprob: -16.750232696533203
    7. 'cars' → logprob: -17.000232696533203
    8. 'remove' → logprob: -17.250232696533203
    9. '_' → logprob: -17.625232696533203
    10. '_card' → logprob: -18.000232696533203

Token 187: '.dis' (ID: 8454)
  Prédit: '.dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.3896843492984772
    2. '.remove' → logprob: -1.1396843194961548
    3. '.' → logprob: -5.889684200286865
    4. ' .' → logprob: -10.139684677124023
    5. 'discard' → logprob: -13.639684677124023
    6. 'remove' → logprob: -15.514684677124023
    7. '.pop' → logprob: -15.764684677124023
    8. '.rem' → logprob: -16.389684677124023
    9. '.d' → logprob: -16.389684677124023
    10. '.add' → logprob: -16.514684677124023

Token 188: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -3.292907877039397e-06
    2. 'ard' → logprob: -12.87500286102295
    3. 'cards' → logprob: -15.12500286102295
    4. 'c' → logprob: -16.375003814697266
    5. 'gard' → logprob: -16.625003814697266
    6. '_card' → logprob: -16.750003814697266
    7. 'Card' → logprob: -16.750003814697266
    8. 'car' → logprob: -16.750003814697266
    9. '```' → logprob: -17.000003814697266
    10. 'discard' → logprob: -17.125003814697266

Token 189: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. '(cards' → logprob: -15.125021934509277
    4. '(Card' → logprob: -16.75002098083496
    5. '(car' → logprob: -17.50002098083496
    6. '	card' → logprob: -17.87502098083496
    7. 'card' → logprob: -18.00002098083496
    8. ' card' → logprob: -18.62502098083496
    9. '(cart' → logprob: -19.12502098083496
    10. ' (' → logprob: -19.50002098083496

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3596853831550106e-05
    2. ')
' → logprob: -9.875053405761719
    3. ' )' → logprob: -13.625053405761719
    4. '       ' → logprob: -15.000053405761719
    5. '<|end|>' → logprob: -15.250053405761719
    6. ')

' → logprob: -15.500053405761719
    7. ')
' → logprob: -17.37505340576172
    8. '())' → logprob: -17.50005340576172
    9. '   ' → logprob: -18.25005340576172
    10. ')return' → logprob: -18.37505340576172

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6529889702796936
    2. '<|end|>' → logprob: -0.9029889702796936
    3. '
' → logprob: -2.652988910675049
    4. '<|end|>' → logprob: -5.902988910675049
    5. 'def' → logprob: -8.152989387512207
    6. '```' → logprob: -8.277989387512207
    7. ' def' → logprob: -8.527989387512207
    8. ' ' → logprob: -9.652989387512207
    9. '  ' → logprob: -9.777989387512207
    10. '    
' → logprob: -10.027989387512207

Token 192: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4145018756389618
    2. 'def' (adapté à ' def') → logprob: -1.5395019054412842
    3. '<|end|>' → logprob: -2.289501905441284
    4. ' def' → logprob: -4.539501667022705
    5. ' ' → logprob: -5.539501667022705
    6. '<|end|>' → logprob: -5.914501667022705
    7. '
' → logprob: -6.039501667022705
    8. '    
' → logprob: -6.789501667022705
    9. '	def' → logprob: -7.289501667022705
    10. '    ' → logprob: -7.289501667022705

Token 193: ' available' (ID: 2839)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -1.1779344081878662
    2. ' def' → logprob: -1.4279344081878662
    3. ' has' → logprob: -1.5529344081878662
    4. ' get' → logprob: -2.302934408187866
    5. ' cards' → logprob: -3.552934408187866
    6. ' __' → logprob: -3.677934408187866
    7. ' reset' → logprob: -3.927934408187866
    8. 'def' → logprob: -4.052934646606445
    9. ' contains' → logprob: -4.552934646606445
    10. 'has' → logprob: -4.927934646606445

Token 194: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0004528374411165714
    2. '_' → logprob: -7.750452995300293
    3. '_values' → logprob: -12.500452995300293
    4. '(self' → logprob: -12.625452995300293
    5. '_card' → logprob: -12.875452995300293
    6. '_tokens' → logprob: -13.625452995300293
    7. '_count' → logprob: -13.625452995300293
    8. '_items' → logprob: -13.625452995300293
    9. '_ids' → logprob: -13.750452995300293
    10. '()' → logprob: -13.875452995300293

Token 195: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.73183855926618e-05
    2. '(' → logprob: -9.875077247619629
    3. '()' → logprob: -10.625077247619629
    4. 'self' → logprob: -14.625077247619629
    5. ' (' → logprob: -14.875077247619629
    6. '   ' → logprob: -15.625077247619629
    7. '(s' → logprob: -15.750077247619629
    8. 's' → logprob: -16.125078201293945
    9. '       ' → logprob: -16.375078201293945
    10. ')' → logprob: -16.500078201293945

Token 196: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002579940017312765
    2. ' )' → logprob: -6.377580165863037
    3. '):' → logprob: -7.127580165863037
    4. '):
' → logprob: -10.752579689025879
    5. 'self' → logprob: -10.877579689025879
    6. ')->' → logprob: -11.627579689025879
    7. '   ' → logprob: -11.877579689025879
    8. ' ' → logprob: -12.127579689025879
    9. ' ):' → logprob: -12.127579689025879
    10. '       ' → logprob: -12.752579689025879

Token 197: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7104783058166504
    2. ' ->' → logprob: -0.8354783058166504
    3. '->' → logprob: -3.3354783058166504
    4. ')' → logprob: -3.3354783058166504
    5. ':' → logprob: -6.46047830581665
    6. '   ' → logprob: -7.33547830581665
    7. 'self' → logprob: -7.58547830581665
    8. '(' → logprob: -8.210477828979492
    9. ' ' → logprob: -8.585477828979492
    10. ')->' → logprob: -8.710477828979492

Token 198: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.073647141456604
    2. ' Set' → logprob: -2.9486470222473145
    3. 'List' → logprob: -4.0736470222473145
    4. ' List' → logprob: -6.5736470222473145
    5. 'set' → logprob: -9.198647499084473
    6. 'Iterator' → logprob: -10.323647499084473
    7. ' set' → logprob: -10.448647499084473
    8. '   ' → logprob: -12.073647499084473
    9. '	Set' → logprob: -12.948647499084473
    10. ' ' → logprob: -13.198647499084473

Token 199: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025420797988772392
    2. '(self' → logprob: -4.150420665740967
    3. '[self' → logprob: -4.900420665740967
    4. '(Card' → logprob: -6.400420665740967
    5. '<Card' → logprob: -8.900421142578125
    6. '()' → logprob: -9.775421142578125
    7. '```' → logprob: -11.400421142578125
    8. 'self' → logprob: -11.900421142578125
    9. '(' → logprob: -12.150421142578125
    10. '(C' → logprob: -12.400421142578125

Token 200: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -1.8624639324116288e-06
    2. ' Card' → logprob: -13.250001907348633
    3. '<Card' → logprob: -18.000001907348633
    4. 'card' → logprob: -19.500001907348633
    5. '(Card' → logprob: -19.750001907348633
    6. '_card' → logprob: -20.375001907348633
    7. 'Car' → logprob: -20.375001907348633
    8. 'Cards' → logprob: -21.000001907348633
    9. '   ' → logprob: -21.250001907348633
    10. ' ' → logprob: -21.875001907348633

Token 201: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1374795287847519
    2. '():' → logprob: -2.887479543685913
    3. '):
' → logprob: -3.012479543685913
    4. ')' → logprob: -3.887479543685913
    5. '()' → logprob: -6.762479305267334
    6. '():
' → logprob: -7.637479305267334
    7. ':' → logprob: -7.637479305267334
    8. '):
' → logprob: -7.887479305267334
    9. '   ' → logprob: -8.262479782104492
    10. '       ' → logprob: -9.262479782104492

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030162228271365166
    2. 'return' → logprob: -3.9051623344421387
    3. ' return' → logprob: -4.655162334442139
    4. '
' → logprob: -10.78016185760498
    5. '()' → logprob: -11.78016185760498
    6. '        
' → logprob: -12.15516185760498
    7. ':' → logprob: -12.28016185760498
    8. ':return' → logprob: -12.53016185760498
    9. '   ' → logprob: -12.65516185760498
    10. '(' → logprob: -12.90516185760498

Token 203: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01105265598744154
    2. ' return' → logprob: -4.51105260848999
    3. '       ' → logprob: -12.261053085327148
    4. '{return' → logprob: -17.26105308532715
    5. '	return' → logprob: -17.76105308532715
    6. ':return' → logprob: -19.01105308532715
    7. 'Return' → logprob: -19.51105308532715
    8. 'eturn' → logprob: -19.88605308532715
    9. '```' → logprob: -19.88605308532715
    10. 'self' → logprob: -20.13605308532715

Token 204: ' set' (ID: 920)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11340134590864182
    2. 'self' → logprob: -2.238401412963867
    3. ' set' → logprob: -7.613401412963867
    4. 'set' → logprob: -9.488401412963867
    5. '       ' → logprob: -12.988401412963867
    6. ' ' → logprob: -13.238401412963867
    7. '   ' → logprob: -13.238401412963867
    8. '{' → logprob: -13.863401412963867
    9. ' fro' → logprob: -14.113401412963867
    10. '(self' → logprob: -14.738401412963867

Token 205: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.00000286102295
    3. '(card' → logprob: -15.50000286102295
    4. 'self' → logprob: -16.250001907348633
    5. ' (' → logprob: -18.625001907348633
    6. '(s' → logprob: -18.750001907348633
    7. '```' → logprob: -19.250001907348633
    8. '	self' → logprob: -19.375001907348633
    9. '[self' → logprob: -19.625001907348633
    10. ' self' → logprob: -20.250001907348633

Token 206: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.2664456789934775e-06
    2. ')._' → logprob: -13.750000953674316
    3. ' .' → logprob: -16.125001907348633
    4. ']._' → logprob: -16.625001907348633
    5. '.' → logprob: -18.000001907348633
    6. '._
' → logprob: -19.500001907348633
    7. 'self' → logprob: -19.750001907348633
    8. '."_' → logprob: -19.875001907348633
    9. '_' → logprob: -20.375001907348633
    10. '.__' → logprob: -20.625001907348633

Token 207: 'cards' (ID: 40956)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.05516039952635765
    2. 'cards' → logprob: -2.9301602840423584
    3. '.cards' → logprob: -8.305160522460938
    4. ' cards' → logprob: -10.930160522460938
    5. '._' → logprob: -12.055160522460938
    6. '(cards' → logprob: -13.430160522460938
    7. 'Cards' → logprob: -13.930160522460938
    8. ' _' → logprob: -14.055160522460938
    9. '_c' → logprob: -14.055160522460938
    10. '_card' → logprob: -14.305160522460938

Token 208: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -13.625003814697266
    3. ' )' → logprob: -14.125003814697266
    4. '<|end|>' → logprob: -14.250003814697266
    5. '())' → logprob: -14.500003814697266
    6. ')

' → logprob: -15.750003814697266
    7. ')}' → logprob: -16.625003814697266
    8. '   ' → logprob: -17.250003814697266
    9. '}' → logprob: -17.750003814697266
    10. ' ' → logprob: -18.625003814697266

Token 209: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: ' Hand' (ID: 7110)
  Prédit: ' Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.14024540781974792
    2. ' Game' → logprob: -2.8902454376220703
    3. ' Hand' → logprob: -3.2652454376220703
    4. ' Card' → logprob: -4.14024543762207
    5. 'Player' → logprob: -5.26524543762207
    6. ' ABC' → logprob: -5.64024543762207
    7. 'Hand' → logprob: -5.76524543762207
    8. ' Abstract' → logprob: -6.39024543762207
    9. ' Poker' → logprob: -6.64024543762207
    10. ' Play' → logprob: -7.14024543762207

Token 211: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016314353793859482
    2. '(' → logprob: -4.141314506530762
    3. '(Abstract' → logprob: -8.391314506530762
    4. ':
' → logprob: -10.016314506530762
    5. '():' → logprob: -12.016314506530762
    6. ' :' → logprob: -14.516314506530762
    7. '(object' → logprob: -14.641314506530762
    8. ':

' → logprob: -15.141314506530762
    9. ':**' → logprob: -15.141314506530762
    10. '<|end|>' → logprob: -15.891314506530762

Token 212: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0002529952325858176
    2. '):
' → logprob: -9.125252723693848
    3. 'List' → logprob: -9.625252723693848
    4. ' ABC' → logprob: -10.625252723693848
    5. '):' → logprob: -11.125252723693848
    6. 'Card' → logprob: -11.625252723693848
    7. 'AB' → logprob: -11.875252723693848
    8. 'list' → logprob: -12.125252723693848
    9. ')' → logprob: -12.375252723693848
    10. 'abc' → logprob: -12.875252723693848

Token 213: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025544962845742702
    2. '):
' → logprob: -6.002554416656494
    3. ')' → logprob: -9.502554893493652
    4. '):

' → logprob: -13.002554893493652
    5. '):
' → logprob: -14.127554893493652
    6. ',' → logprob: -14.877554893493652
    7. ':' → logprob: -15.127554893493652
    8. '[' → logprob: -15.627554893493652
    9. ' ):' → logprob: -16.002553939819336
    10. '   ' → logprob: -16.252553939819336

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12192560732364655
    2. ':' → logprob: -2.4969255924224854
    3. '):' → logprob: -4.1219258308410645
    4. '):
' → logprob: -4.4969258308410645
    5. ':
' → logprob: -5.8719258308410645
    6. '(' → logprob: -6.9969258308410645
    7. ')' → logprob: -7.1219258308410645
    8. ',' → logprob: -7.9969258308410645
    9. ' :' → logprob: -9.496925354003906
    10. '    ' → logprob: -10.371925354003906

Token 215: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15602578222751617
    2. ' def' → logprob: -2.2810258865356445
    3. ' @' → logprob: -3.2810258865356445
    4. 'def' → logprob: -6.0310258865356445
    5. '@' (adapté à ' @') → logprob: -6.2810258865356445
    6. '    ' → logprob: -9.281025886535645
    7. ' __' → logprob: -9.406025886535645
    8. '
' → logprob: -9.531025886535645
    9. '    
' → logprob: -9.531025886535645
    10. '@property' → logprob: -10.781025886535645

Token 216: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -9.710618905955926e-05
    2. 'property' → logprob: -9.250097274780273
    3. ' abstract' → logprob: -14.375097274780273
    4. 'staticmethod' → logprob: -15.375097274780273
    5. 'abc' → logprob: -16.625097274780273
    6. 'classmethod' → logprob: -17.375097274780273
    7. '.abstract' → logprob: -19.125097274780273
    8. 'abs' → logprob: -19.250097274780273
    9. 'ab' → logprob: -20.250097274780273
    10. '@property' → logprob: -22.375097274780273

Token 217: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.008616345934569836
    2. '_method' → logprob: -4.7586164474487305
    3. 'classmethod' → logprob: -14.13361644744873
    4. ' method' → logprob: -15.63361644744873
    5. 'abstract' → logprob: -15.63361644744873
    6. '_' → logprob: -15.75861644744873
    7. '   ' → logprob: -16.008615493774414
    8. 'meth' → logprob: -16.383615493774414
    9. '	method' → logprob: -16.633615493774414
    10. '_m' → logprob: -16.883615493774414

Token 218: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015056570060551167
    2. '
' → logprob: -4.390056610107422
    3. ' def' → logprob: -6.015056610107422
    4. '   ' → logprob: -9.515056610107422
    5. '    
' → logprob: -11.390056610107422
    6. 'method' → logprob: -12.140056610107422
    7. 'classmethod' → logprob: -13.140056610107422
    8. '	def' → logprob: -13.515056610107422
    9. 'class' → logprob: -13.765056610107422
    10. '@property' → logprob: -13.890056610107422

Token 219: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03746981918811798
    2. '
' → logprob: -3.5374698638916016
    3. 'method' → logprob: -5.037469863891602
    4. '    
' → logprob: -7.912469863891602
    5. ' def' → logprob: -8.037469863891602
    6. '   ' → logprob: -8.162469863891602
    7. 'property' → logprob: -9.537469863891602
    8. '_method' → logprob: -10.412469863891602
    9. '	def' → logprob: -10.912469863891602
    10. 'classmethod' → logprob: -10.912469863891602

Token 220: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2167983502149582
    2. 'property' → logprob: -1.7167983055114746
    3. 'method' → logprob: -4.216798305511475
    4. 'classmethod' → logprob: -7.966798305511475
    5. ' def' → logprob: -8.966798782348633
    6. '
' → logprob: -10.716798782348633
    7. '@property' → logprob: -11.591798782348633
    8. 'staticmethod' → logprob: -11.966798782348633
    9. 'class' → logprob: -12.466798782348633
    10. '   ' → logprob: -13.091798782348633

Token 221: ' cards' (ID: 10541)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.8786408305168152
    2. ' play' → logprob: -1.50364089012146
    3. ' cards' → logprob: -1.87864089012146
    4. 'cards' → logprob: -3.37864089012146
    5. 'add' → logprob: -3.50364089012146
    6. ' possible' → logprob: -3.75364089012146
    7. 'play' → logprob: -3.87864089012146
    8. ' available' → logprob: -4.128640651702881
    9. ' can' → logprob: -4.503640651702881
    10. ' get' → logprob: -4.753640651702881

Token 222: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.816093228830141e-06
    2. ' (' → logprob: -14.25000286102295
    3. '()' → logprob: -14.25000286102295
    4. 'self' → logprob: -14.25000286102295
    5. ')' → logprob: -14.87500286102295
    6. '(' → logprob: -15.37500286102295
    7. '(s' → logprob: -16.750001907348633
    8. '(cls' → logprob: -17.375001907348633
    9. 's' → logprob: -17.625001907348633
    10. '```' → logprob: -17.625001907348633

Token 223: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013325021136552095
    2. 'self' → logprob: -6.8763322830200195
    3. '(self' → logprob: -8.25133228302002
    4. '):' → logprob: -11.00133228302002
    5. ' )' → logprob: -11.12633228302002
    6. '   ' → logprob: -12.87633228302002
    7. ')->' → logprob: -13.62633228302002
    8. '):
' → logprob: -13.87633228302002
    9. ' self' → logprob: -14.00133228302002
    10. '       ' → logprob: -14.50133228302002

Token 224: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011904643615707755
    2. 'self' → logprob: -7.251190662384033
    3. ')' → logprob: -8.001190185546875
    4. '->' → logprob: -9.126190185546875
    5. '()' → logprob: -11.126190185546875
    6. ' ->' → logprob: -11.376190185546875
    7. '   ' → logprob: -12.876190185546875
    8. '(' → logprob: -12.876190185546875
    9. '       ' → logprob: -13.001190185546875
    10. '```' → logprob: -14.251190185546875

Token 225: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.15450826287269592
    2. ' List' → logprob: -2.029508352279663
    3. 'Iterator' → logprob: -5.154508113861084
    4. 'Set' → logprob: -5.279508113861084
    5. ' Iterator' → logprob: -7.404508113861084
    6. ' Set' → logprob: -8.529508590698242
    7. '   ' → logprob: -9.654508590698242
    8. ' ' → logprob: -11.779508590698242
    9. '	List' → logprob: -12.154508590698242
    10. '[List' → logprob: -12.529508590698242

Token 226: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '<Card' → logprob: -13.125003814697266
    3. '[int' → logprob: -14.625003814697266
    4. ' [' → logprob: -14.625003814697266
    5. '[
' → logprob: -15.125003814697266
    6. '```' → logprob: -15.125003814697266
    7. '<|end|>' → logprob: -16.125003814697266
    8. 'Card' → logprob: -16.125003814697266
    9. ' ' → logprob: -17.500003814697266
    10. '  ' → logprob: -17.500003814697266

Token 227: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -1.688212614681106e-05
    2. ' Card' → logprob: -11.000017166137695
    3. 'int' → logprob: -15.875017166137695
    4. '   ' → logprob: -19.625017166137695
    5. '<Card' → logprob: -19.625017166137695
    6. 'Token' → logprob: -20.125017166137695
    7. ' ' → logprob: -20.375017166137695
    8. 'Car' → logprob: -20.375017166137695
    9. '_card' → logprob: -20.875017166137695
    10. '  ' → logprob: -21.250017166137695

Token 228: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.09757053852081299
    2. ']' → logprob: -2.4725704193115234
    3. ']:
' → logprob: -5.347570419311523
    4. '):' → logprob: -5.847570419311523
    5. ':' → logprob: -8.097570419311523
    6. ']:
' → logprob: -8.847570419311523
    7. '<|end|>' → logprob: -8.847570419311523
    8. '"]:' → logprob: -9.722570419311523
    9. ']>' → logprob: -10.222570419311523
    10. '']:' → logprob: -10.222570419311523

Token 229: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09566653519868851
    2. '       ' → logprob: -3.3456666469573975
    3. '<|end|>' → logprob: -3.3456666469573975
    4. '   ' → logprob: -4.220666408538818
    5. ':return' → logprob: -5.970666408538818
    6. ':
' → logprob: -6.095666408538818
    7. ' pass' → logprob: -8.220666885375977
    8. '():' → logprob: -8.845666885375977
    9. 'pass' → logprob: -8.845666885375977
    10. '<|end|>' → logprob: -8.970666885375977

Token 230: ' pass' (ID: 1853)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.2374386340379715
    2. 'pass' (adapté à ' pass') → logprob: -1.737438678741455
    3. ' pass' → logprob: -3.987438678741455
    4. '       ' → logprob: -4.362438678741455
    5. '   ' → logprob: -6.237438678741455
    6. '...
' → logprob: -6.612438678741455
    7. ' ...' → logprob: -7.737438678741455
    8. '...

' → logprob: -8.862438201904297
    9. '<|end|>' → logprob: -9.737438201904297
    10. '	pass' → logprob: -9.862438201904297

Token 231: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1696508377790451
    2. '<|end|>' → logprob: -2.5446507930755615
    3. '
' → logprob: -2.6696507930755615
    4. 'class' → logprob: -5.169651031494141
    5. ' ' → logprob: -7.419651031494141
    6. '<|end|>' → logprob: -7.544651031494141
    7. '    
' → logprob: -7.794651031494141
    8. ' 
' → logprob: -7.919651031494141
    9. ',' → logprob: -9.04465103149414
    10. ')' → logprob: -9.29465103149414

Token 233: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.723907470703125
    2. '   ' → logprob: -1.348907470703125
    3. '<|end|>' → logprob: -1.723907470703125
    4. '
' → logprob: -2.598907470703125
    5. '@property' → logprob: -7.348907470703125
    6. ' ' → logprob: -7.473907470703125
    7. '<|end|>' → logprob: -7.973907470703125
    8. ' class' → logprob: -7.973907470703125
    9. '    
' → logprob: -8.348907470703125
    10. '  ' → logprob: -9.098907470703125

Token 234: ' total' (ID: 3609)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4214268922805786
    2. ' add' → logprob: -2.046426773071289
    3. ' has' → logprob: -2.796426773071289
    4. ' __' → logprob: -3.296426773071289
    5. ' available' → logprob: -3.921426773071289
    6. 'def' → logprob: -4.171426773071289
    7. ' value' → logprob: -4.796426773071289
    8. ' cards' → logprob: -4.796426773071289
    9. ' best' → logprob: -5.296426773071289
    10. ' size' → logprob: -5.296426773071289

Token 235: '_value' (ID: 6734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006410650908946991
    2. '_value' → logprob: -5.506410598754883
    3. '_points' → logprob: -7.381410598754883
    4. '(' → logprob: -7.506410598754883
    5. '_score' → logprob: -7.506410598754883
    6. '()' → logprob: -7.756410598754883
    7. 'value' → logprob: -9.506410598754883
    8. ' (' → logprob: -10.631410598754883
    9. '_sum' → logprob: -10.881410598754883
    10. '_cards' → logprob: -11.131410598754883

Token 236: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.50001335144043
    3. ' (' → logprob: -12.87501335144043
    4. '(s' → logprob: -16.12501335144043
    5. 'self' → logprob: -16.37501335144043
    6. '   ' → logprob: -17.12501335144043
    7. 's' → logprob: -18.62501335144043
    8. '()' → logprob: -19.00001335144043
    9. ' self' → logprob: -19.87501335144043
    10. ' ' → logprob: -20.25001335144043

Token 237: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001532401074655354
    2. '):' → logprob: -9.125153541564941
    3. 'self' → logprob: -10.250153541564941
    4. ' )' → logprob: -12.500153541564941
    5. '):
' → logprob: -12.750153541564941
    6. '(self' → logprob: -13.500153541564941
    7. '   ' → logprob: -14.375153541564941
    8. ')->' → logprob: -15.250153541564941
    9. '):

' → logprob: -16.750152587890625
    10. '):
' → logprob: -16.875152587890625

Token 238: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.17204996943473816
    2. ' ->' → logprob: -2.4220499992370605
    3. '->' → logprob: -2.9220499992370605
    4. ':' → logprob: -4.9220499992370605
    5. '(' → logprob: -5.2970499992370605
    6. ')' → logprob: -6.5470499992370605
    7. 'self' → logprob: -7.0470499992370605
    8. '   ' → logprob: -7.4220499992370605
    9. ')->' → logprob: -9.047049522399902
    10. '       ' → logprob: -9.422049522399902

Token 239: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3252130448818207
    2. 'int' → logprob: -1.450213074684143
    3. ' sum' → logprob: -3.3252129554748535
    4. 'sum' → logprob: -4.9502129554748535
    5. ' ' → logprob: -10.450213432312012
    6. '   ' → logprob: -11.575213432312012
    7. ' None' → logprob: -12.325213432312012
    8. '(int' → logprob: -12.450213432312012
    9. '0' → logprob: -12.700213432312012
    10. ' self' → logprob: -12.950213432312012

Token 240: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.031155571341514587
    2. ':' → logprob: -3.531155586242676
    3. '(' → logprob: -7.031155586242676
    4. '   ' → logprob: -8.406155586242676
    5. '():' → logprob: -9.031155586242676
    6. ':
' → logprob: -9.531155586242676
    7. '       ' → logprob: -9.906155586242676
    8. 'self' → logprob: -10.531155586242676
    9. ':self' → logprob: -11.281155586242676
    10. ' self' → logprob: -12.156155586242676

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011963017750531435
    2. 'return' → logprob: -7.376196384429932
    3. ' return' → logprob: -7.626196384429932
    4. 'sum' → logprob: -10.001195907592773
    5. ' sum' → logprob: -11.251195907592773
    6. '   ' → logprob: -11.251195907592773
    7. '      ' → logprob: -12.626195907592773
    8. '    ' → logprob: -12.876195907592773
    9. '0' → logprob: -13.626195907592773
    10. '        ' → logprob: -14.001195907592773

Token 242: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01105206273496151
    2. ' return' → logprob: -5.011052131652832
    3. 'sum' → logprob: -5.761052131652832
    4. '       ' → logprob: -6.761052131652832
    5. ' sum' → logprob: -10.761052131652832
    6. '   ' → logprob: -16.636051177978516
    7. 'result' → logprob: -16.636051177978516
    8. '0' → logprob: -17.136051177978516
    9. '```' → logprob: -17.261051177978516
    10. '	return' → logprob: -18.386051177978516

Token 243: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.10021249949932098
    2. 'sum' → logprob: -2.350212574005127
    3. '0' → logprob: -13.100212097167969
    4. ' ' → logprob: -13.725212097167969
    5. '   ' → logprob: -13.975212097167969
    6. ' ' → logprob: -14.225212097167969
    7. '(sum' → logprob: -14.850212097167969
    8. '	sum' → logprob: -14.850212097167969
    9. ' self' → logprob: -15.725212097167969
    10. '    ' → logprob: -16.35021209716797

Token 244: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -2.8206473871250637e-05
    2. '(c' → logprob: -10.750028610229492
    3. '(self' → logprob: -12.000028610229492
    4. 'card' → logprob: -15.000028610229492
    5. '([' → logprob: -15.500028610229492
    6. '(' → logprob: -16.625028610229492
    7. ' card' → logprob: -17.750028610229492
    8. '((' → logprob: -18.500028610229492
    9. '(Card' → logprob: -18.500028610229492
    10. '	card' → logprob: -19.000028610229492

Token 245: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.575956404209137
    2. '.' → logprob: -0.825956404209137
    3. ' .' → logprob: -11.450956344604492
    4. '.card' → logprob: -13.075956344604492
    5. ').' → logprob: -13.575956344604492
    6. '.val' → logprob: -13.700956344604492
    7. '.
' → logprob: -14.450956344604492
    8. '.token' → logprob: -15.075956344604492
    9. '.values' → logprob: -15.700956344604492
    10. '.valor' → logprob: -16.200956344604492

Token 246: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011064093559980392
    2. 'for' → logprob: -4.511064052581787
    3. ')' → logprob: -11.511064529418945
    4. ' ' → logprob: -12.761064529418945
    5. '   ' → logprob: -13.636064529418945
    6. '()' → logprob: -14.011064529418945
    7. ' )' → logprob: -15.011064529418945
    8. ' in' → logprob: -15.011064529418945
    9. '       ' → logprob: -15.386064529418945
    10. '    ' → logprob: -15.886064529418945

Token 247: ' card' (ID: 4766)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.009895974770188332
    2. 'self' → logprob: -5.0098958015441895
    3. ' card' → logprob: -5.7598958015441895
    4. 'card' → logprob: -10.759896278381348
    5. ' ' → logprob: -13.759896278381348
    6. ' ' → logprob: -14.259896278381348
    7. '	self' → logprob: -14.634896278381348
    8. ' c' → logprob: -14.759896278381348
    9. ' s' → logprob: -15.384896278381348
    10. '	card' → logprob: -16.63489532470703

Token 248: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024012388661503792
    2. 'in' → logprob: -3.774012327194214
    3. 'self' → logprob: -7.399012565612793
    4. 's' → logprob: -9.399012565612793
    5. ' ' → logprob: -11.274012565612793
    6. ' self' → logprob: -11.649012565612793
    7. '   ' → logprob: -11.649012565612793
    8. '()' → logprob: -11.774012565612793
    9. '.' → logprob: -11.774012565612793
    10. ')' → logprob: -12.149012565612793

Token 249: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931508779525757
    2. 'self' → logprob: -0.6931508779525757
    3. '(self' → logprob: -13.068150520324707
    4. ')' → logprob: -14.943150520324707
    5. '	self' → logprob: -14.943150520324707
    6. '
' → logprob: -15.318150520324707
    7. '[self' → logprob: -15.318150520324707
    8. ' ' → logprob: -16.193151473999023
    9. '       ' → logprob: -16.318151473999023
    10. '=self' → logprob: -16.568151473999023

Token 250: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.0017167085316032171
    2. '.' → logprob: -6.376716613769531
    3. ' .' → logprob: -11.626716613769531
    4. 'cards' → logprob: -13.126716613769531
    5. '._' → logprob: -13.251716613769531
    6. ').' → logprob: -14.876716613769531
    7. '.card' → logprob: -15.126716613769531
    8. ' cards' → logprob: -15.126716613769531
    9. '.c' → logprob: -15.501716613769531
    10. ' ' → logprob: -15.751716613769531

Token 251: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003189597511664033
    2. '()' → logprob: -5.753189563751221
    3. ')' → logprob: -11.628190040588379
    4. ' ())' → logprob: -13.128190040588379
    5. '()))' → logprob: -14.753190040588379
    6. ' )' → logprob: -15.753190040588379
    7. '())
' → logprob: -16.128189086914062
    8. '();)' → logprob: -16.503189086914062
    9. '())

' → logprob: -16.753189086914062
    10. '()]' → logprob: -17.003189086914062

Token 252: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.369958758354187
    2. '   ' → logprob: -1.369958758354187
    3. 'class' → logprob: -3.6199588775634766
    4. '<|end|>' → logprob: -3.6199588775634766
    5. '    
' → logprob: -7.494958877563477
    6. '<|end|>' → logprob: -7.869958877563477
    7. ' class' → logprob: -8.994958877563477
    8. ' ' → logprob: -9.494958877563477
    9. '  
' → logprob: -9.494958877563477
    10. ' 
' → logprob: -9.619958877563477

Token 253: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' __' (ID: 2516)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -1.3865420818328857
    2. 'has' → logprob: -2.0115420818328857
    3. ' def' → logprob: -2.2615420818328857
    4. 'def' → logprob: -2.3865420818328857
    5. ' __' → logprob: -2.6365420818328857
    6. '__' → logprob: -2.6365420818328857
    7. 'contains' → logprob: -2.8865420818328857
    8. 'is' → logprob: -3.1365420818328857
    9. ' contains' → logprob: -3.1365420818328857
    10. 'can' → logprob: -3.5115420818328857

Token 255: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.2057795226573944
    2. 'eq' → logprob: -2.455779552459717
    3. 'len' → logprob: -2.705779552459717
    4. 'iter' → logprob: -3.705779552459717
    5. 'str' → logprob: -5.580779552459717
    6. 'hash' → logprob: -5.830779552459717
    7. 'contains' → logprob: -6.705779552459717
    8. 'lt' → logprob: -7.205779552459717
    9. 'init' → logprob: -9.330779075622559
    10. 'rep' → logprob: -12.205779075622559

Token 256: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0015217645559459925
    2. '__' → logprob: -6.501521587371826
    3. '__('' → logprob: -11.626522064208984
    4. '__(
' → logprob: -11.626522064208984
    5. '__("' → logprob: -14.251522064208984
    6. '__((' → logprob: -14.251522064208984
    7. '(self' → logprob: -16.376522064208984
    8. '__.__' → logprob: -16.876522064208984
    9. '__[' → logprob: -17.126522064208984
    10. '___' → logprob: -17.876522064208984

Token 257: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.3451433409936726e-05
    2. ')' → logprob: -10.500033378601074
    3. 'f' → logprob: -12.875033378601074
    4. ' self' → logprob: -13.250033378601074
    5. '(self' → logprob: -13.500033378601074
    6. ')(' → logprob: -17.50003433227539
    7. '   ' → logprob: -18.12503433227539
    8. '       ' → logprob: -18.25003433227539
    9. '{' → logprob: -18.37503433227539
    10. '),' → logprob: -18.50003433227539

Token 258: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6741180419921875
    2. '(self' → logprob: -1.0491180419921875
    3. 'self' → logprob: -2.1741180419921875
    4. '__' → logprob: -4.1741180419921875
    5. '__(
' → logprob: -5.0491180419921875
    6. ')' → logprob: -6.4241180419921875
    7. ')(' → logprob: -7.2991180419921875
    8. '(' → logprob: -7.6741180419921875
    9. '__('' → logprob: -7.6741180419921875
    10. ' self' → logprob: -7.7991180419921875

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037998564541339874
    2. ' return' → logprob: -3.912998676300049
    3. ' f' → logprob: -4.787998676300049
    4. 'return' → logprob: -4.787998676300049
    5. 'f' → logprob: -7.537998676300049
    6. '   ' → logprob: -9.41299819946289
    7. '"' → logprob: -11.16299819946289
    8. ' ' → logprob: -12.41299819946289
    9. ''' → logprob: -12.53799819946289
    10. '      ' → logprob: -13.03799819946289

Token 260: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6381873488426208
    2. 'f' → logprob: -0.8881873488426208
    3. ' return' → logprob: -3.6381874084472656
    4. ' f' → logprob: -4.013187408447266
    5. '       ' → logprob: -4.138187408447266
    6. '   ' → logprob: -11.513187408447266
    7. '"' → logprob: -12.388187408447266
    8. ''' → logprob: -13.263187408447266
    9. '           ' → logprob: -13.638187408447266
    10. ' ' → logprob: -14.138187408447266

Token 261: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05511651560664177
    2. ' f' → logprob: -2.9301164150238037
    3. '"' → logprob: -8.555116653442383
    4. ''' → logprob: -10.305116653442383
    5. ' ' → logprob: -13.055116653442383
    6. ''f' → logprob: -13.180116653442383
    7. '   ' → logprob: -14.055116653442383
    8. 'self' → logprob: -14.180116653442383
    9. ' "' → logprob: -14.555116653442383
    10. '	f' → logprob: -14.555116653442383

Token 262: '"{' (ID: 27510)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.20364530384540558
    2. 'f' → logprob: -2.3286452293395996
    3. '(self' → logprob: -2.8286452293395996
    4. '"{' → logprob: -4.8286452293396
    5. 'self' → logprob: -4.9536452293396
    6. '(type' → logprob: -5.3286452293396
    7. '"' → logprob: -6.0786452293396
    8. '(' → logprob: -6.3286452293396
    9. '"<' → logprob: -6.5786452293396
    10. 'type' → logprob: -6.8286452293396

Token 263: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008625566959381104
    2. 'type' → logprob: -4.758625507354736
    3. ' self' → logprob: -12.508625984191895
    4. '{' → logprob: -12.883625984191895
    5. '

' → logprob: -14.133625984191895
    6. '(self' → logprob: -14.383625984191895
    7. '[self' → logprob: -14.383625984191895
    8. 'cls' → logprob: -14.383625984191895
    9. ' type' → logprob: -14.758625984191895
    10. 'class' → logprob: -14.883625984191895

Token 264: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -4.978233846486546e-05
    2. '.cards' → logprob: -11.000049591064453
    3. '.' → logprob: -11.250049591064453
    4. '__.__' → logprob: -11.500049591064453
    5. '__' → logprob: -12.125049591064453
    6. '().__' → logprob: -12.750049591064453
    7. ' .' → logprob: -14.125049591064453
    8. 'class' → logprob: -15.875049591064453
    9. 'cards' → logprob: -15.875049591064453
    10. ').__' → logprob: -16.000049591064453

Token 265: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.128163257315464e-07
    2. 'repr' → logprob: -15.875
    3. 'name' → logprob: -16.0
    4. 'module' → logprob: -17.25
    5. 'classname' → logprob: -18.25
    6. ' class' → logprob: -18.375
    7. '"class' → logprob: -19.0
    8. 'clas' → logprob: -19.125
    9. 'qual' → logprob: -19.375
    10. ''class' → logprob: -19.875

Token 266: '__.__' (ID: 124889)
  Prédit: '__.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__.__' → logprob: -1.1517960956552997e-05
    2. '__.' → logprob: -11.500011444091797
    3. '.__' → logprob: -13.625011444091797
    4. '__' → logprob: -15.750011444091797
    5. '__(' → logprob: -21.125011444091797
    6. '__

' → logprob: -21.750011444091797
    7. '_.' → logprob: -21.875011444091797
    8. ').__' → logprob: -22.000011444091797
    9. 'name' → logprob: -22.250011444091797
    10. '.' → logprob: -22.375011444091797

Token 267: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -3.531315314830863e-06
    2. 'qual' → logprob: -12.750003814697266
    3. 'nam' → logprob: -15.000003814697266
    4. 'module' → logprob: -16.625003814697266
    5. '```' → logprob: -16.750003814697266
    6. 'na' → logprob: -17.250003814697266
    7. 'class' → logprob: -17.875003814697266
    8. '
' → logprob: -17.875003814697266
    9. ' name' → logprob: -18.000003814697266
    10. 'n' → logprob: -18.000003814697266

Token 268: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003404687449801713
    2. '__(' → logprob: -8.000340461730957
    3. '}' → logprob: -13.375340461730957
    4. '__('' → logprob: -13.875340461730957
    5. '__[' → logprob: -14.000340461730957
    6. '__.__' → logprob: -14.500340461730957
    7. '__(
' → logprob: -15.000340461730957
    8. '__((' → logprob: -15.125340461730957
    9. '__("' → logprob: -15.250340461730957
    10. '}(' → logprob: -15.750340461730957

Token 269: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.2254832237958908
    2. '}(' → logprob: -1.6004831790924072
    3. '(cards' → logprob: -10.225482940673828
    4. '([' → logprob: -11.725482940673828
    5. '}{' → logprob: -11.850482940673828
    6. '}[' → logprob: -11.975482940673828
    7. '(' → logprob: -12.350482940673828
    8. ' }' → logprob: -12.725482940673828
    9. '`' → logprob: -14.350482940673828
    10. '({' → logprob: -14.725482940673828

Token 270: '({' (ID: 3972)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.5583335161209106
    2. '(cards' → logprob: -0.9333335161209106
    3. '}(' → logprob: -3.433333396911621
    4. '([' → logprob: -6.683333396911621
    5. '(self' → logprob: -7.933333396911621
    6. '({' → logprob: -8.058333396911621
    7. '(' → logprob: -8.808333396911621
    8. '}{' → logprob: -10.058333396911621
    9. '(c' → logprob: -10.183333396911621
    10. '("("' → logprob: -10.433333396911621

Token 271: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001900436356663704
    2. '',' → logprob: -6.376900672912598
    3. '[self' → logprob: -8.751900672912598
    4. '[' → logprob: -10.751900672912598
    5. ' self' → logprob: -11.126900672912598
    6. '','.' → logprob: -13.376900672912598
    7. 'repr' → logprob: -14.126900672912598
    8. ',' → logprob: -14.876900672912598
    9. '(self' → logprob: -15.501900672912598
    10. ',self' → logprob: -15.501900672912598

Token 272: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.0002651503309607506
    2. '().' → logprob: -8.625265121459961
    3. '.' → logprob: -9.500265121459961
    4. ' .' → logprob: -11.875265121459961
    5. ').' → logprob: -13.000265121459961
    6. '.c' → logprob: -14.750265121459961
    7. '}.' → logprob: -14.750265121459961
    8. '(cards' → logprob: -14.875265121459961
    9. 'cards' → logprob: -15.750265121459961
    10. '.card' → logprob: -16.37526512145996

Token 273: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003232136834412813
    2. '())' → logprob: -5.753232002258301
    3. '()}' → logprob: -10.0032320022583
    4. '()
' → logprob: -12.7532320022583
    5. ' ()' → logprob: -13.7532320022583
    6. '()`' → logprob: -13.8782320022583
    7. '})' → logprob: -14.1282320022583
    8. '()))' → logprob: -14.2532320022583
    9. '()]' → logprob: -14.3782320022583
    10. '()}
' → logprob: -14.7532320022583

Token 274: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.10249995440244675
    2. ')' → logprob: -2.6024999618530273
    3. '()' → logprob: -4.102499961853027
    4. ')}' → logprob: -5.227499961853027
    5. '())' → logprob: -6.727499961853027
    6. '))' → logprob: -9.352499961853027
    7. ' })' → logprob: -9.477499961853027
    8. '}' → logprob: -9.977499961853027
    9. '])' → logprob: -11.727499961853027
    10. ' ' → logprob: -11.852499961853027

Token 275: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1747588813304901
    2. '<|end|>' → logprob: -1.9247589111328125
    3. '}' → logprob: -5.1747589111328125
    4. '   ' → logprob: -5.4247589111328125
    5. '")' → logprob: -5.7997589111328125
    6. '```' → logprob: -7.4247589111328125
    7. '<|end|>' → logprob: -7.7997589111328125
    8. '
' → logprob: -9.174758911132812
    9. '}")' → logprob: -10.299758911132812
    10. '"' → logprob: -10.299758911132812

Token 276: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.022827377542853355
    2. '
' → logprob: -3.897827386856079
    3. '<|end|>' → logprob: -6.5228271484375
    4. ' class' → logprob: -7.2728271484375
    5. '<|end|>' → logprob: -9.8978271484375
    6. '  
' → logprob: -11.1478271484375
    7. '<class' → logprob: -11.5228271484375
    8. '   ' → logprob: -12.0228271484375
    9. ' ' → logprob: -12.1478271484375
    10. '    
' → logprob: -12.3978271484375

Token 277: ' Player' (ID: 12487)
  Prédit: ' Simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Simple' → logprob: -0.7028511762619019
    2. ' Player' → logprob: -0.8278511762619019
    3. ' Poker' → logprob: -4.202851295471191
    4. ' Standard' → logprob: -4.702851295471191
    5. ' Concrete' → logprob: -4.702851295471191
    6. 'Player' → logprob: -4.952851295471191
    7. 'Simple' → logprob: -5.202851295471191
    8. ' Basic' → logprob: -5.202851295471191
    9. ' Play' → logprob: -5.952851295471191
    10. ' Playing' → logprob: -6.577851295471191

Token 278: 'Hand' (ID: 2941)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17119306325912476
    2. ':' → logprob: -1.9211931228637695
    3. 'Hand' → logprob: -5.1711931228637695
    4. '():' → logprob: -5.7961931228637695
    5. '(H' → logprob: -7.2961931228637695
    6. ' :' → logprob: -7.5461931228637695
    7. '(Player' → logprob: -8.04619312286377
    8. '(Abstract' → logprob: -8.29619312286377
    9. '):' → logprob: -9.54619312286377
    10. ':
' → logprob: -9.79619312286377

Token 279: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024146337062120438
    2. ':' → logprob: -3.774146318435669
    3. ' :' → logprob: -7.274146556854248
    4. ' (' → logprob: -9.27414608001709
    5. '(List' → logprob: -10.27414608001709
    6. '(H' → logprob: -10.77414608001709
    7. '(Abstract' → logprob: -11.02414608001709
    8. '():' → logprob: -11.39914608001709
    9. '(hand' → logprob: -12.02414608001709
    10. '(
' → logprob: -12.39914608001709

Token 280: 'Hand' (ID: 2941)
  Prédit: 'Hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -0.0012802376877516508
    2. ' Hand' → logprob: -6.751280307769775
    3. ')' → logprob: -9.251279830932617
    4. '):' → logprob: -12.001279830932617
    5. 'ABC' → logprob: -13.001279830932617
    6. 'Hands' → logprob: -14.001279830932617
    7. '(' → logprob: -14.626279830932617
    8. 'Handler' → logprob: -14.626279830932617
    9. 'Abstract' → logprob: -14.876279830932617
    10. '   ' → logprob: -14.876279830932617

Token 281: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018194425851106644
    2. '):
' → logprob: -4.018194198608398
    3. ')' → logprob: -10.518194198608398
    4. '):
' → logprob: -11.268194198608398
    5. '):

' → logprob: -13.643194198608398
    6. ':' → logprob: -13.768194198608398
    7. ' ):' → logprob: -13.893194198608398
    8. ',' → logprob: -14.143194198608398
    9. '[List' → logprob: -15.018194198608398
    10. '[' → logprob: -15.643194198608398

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014016677159816027
    2. ':' → logprob: -7.501401901245117
    3. '):' → logprob: -8.001401901245117
    4. '):
' → logprob: -8.626401901245117
    5. ')' → logprob: -8.876401901245117
    6. 'def' → logprob: -9.501401901245117
    7. ' def' → logprob: -9.751401901245117
    8. ':
' → logprob: -10.001401901245117
    9. ' List' → logprob: -12.876401901245117
    10. 'List' → logprob: -13.126401901245117

Token 283: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.395445317029953
    2. ' def' → logprob: -1.1454453468322754
    3. '   ' → logprob: -4.770445346832275
    4. '__' → logprob: -10.270444869995117
    5. ' __' → logprob: -10.895444869995117
    6. '_def' → logprob: -13.645444869995117
    7. 'class' → logprob: -13.770444869995117
    8. '	def' → logprob: -13.895444869995117
    9. ' ' → logprob: -13.895444869995117
    10. ':' → logprob: -14.270444869995117

Token 284: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0013189311139285564
    2. ' def' → logprob: -6.87631893157959
    3. '__' → logprob: -8.50131893157959
    4. 'def' → logprob: -9.62631893157959
    5. ':' → logprob: -12.00131893157959
    6. ' ' → logprob: -12.50131893157959
    7. ')' → logprob: -13.37631893157959
    8. '```' → logprob: -13.75131893157959
    9. '   ' → logprob: -13.87631893157959
    10. '().__' → logprob: -14.25131893157959

Token 285: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.0100624169572257e-05
    2. 'nit' → logprob: -11.125020027160645
    3. 'it' → logprob: -13.000020027160645
    4. 'int' → logprob: -14.125020027160645
    5. '_init' → logprob: -14.375020027160645
    6. 'iter' → logprob: -15.000020027160645
    7. '`' → logprob: -15.625020027160645
    8. 'in' → logprob: -15.750020027160645
    9. 'slots' → logprob: -15.875020027160645
    10. 'def' → logprob: -16.12502098083496

Token 286: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007383355405181646
    2. '(self' → logprob: -5.007383346557617
    3. '__' → logprob: -7.382383346557617
    4. '_(' → logprob: -10.382383346557617
    5. '__(
' → logprob: -12.007383346557617
    6. ' (' → logprob: -12.632383346557617
    7. '(' → logprob: -13.132383346557617
    8. 'self' → logprob: -13.757383346557617
    9. '_' → logprob: -14.382383346557617
    10. '__((' → logprob: -14.507383346557617

Token 287: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.269565634895116e-05
    2. ' self' → logprob: -9.500092506408691
    3. ')' → logprob: -11.250092506408691
    4. '
' → logprob: -13.250092506408691
    5. '):
' → logprob: -14.000092506408691
    6. '(self' → logprob: -14.375092506408691
    7. '	self' → logprob: -14.625092506408691
    8. '   ' → logprob: -15.125092506408691
    9. '       ' → logprob: -15.375092506408691
    10. ' ' → logprob: -15.750092506408691

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16100114583969116
    2. '):
' → logprob: -2.161001205444336
    3. '):' → logprob: -3.786001205444336
    4. 'self' → logprob: -5.161001205444336
    5. ' ,' → logprob: -6.786001205444336
    6. '__' → logprob: -6.786001205444336
    7. ')' → logprob: -7.036001205444336
    8. '__,' → logprob: -7.661001205444336
    9. ' ):' → logprob: -7.911001205444336
    10. '__(' → logprob: -8.286001205444336

Token 289: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.2835017144680023
    2. ' cards' → logprob: -1.4085017442703247
    3. 'initial' → logprob: -7.033501625061035
    4. 'self' → logprob: -7.408501625061035
    5. ' initial' → logprob: -7.533501625061035
    6. ')' → logprob: -8.658501625061035
    7. ' self' → logprob: -10.283501625061035
    8. '(cards' → logprob: -10.908501625061035
    9. '_cards' → logprob: -10.908501625061035
    10. '.cards' → logprob: -11.033501625061035

Token 290: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005035852082073689
    2. '):' → logprob: -7.6255035400390625
    3. ' ):' → logprob: -12.125503540039062
    4. '_:' → logprob: -12.375503540039062
    5. ')' → logprob: -13.125503540039062
    6. '=None' → logprob: -13.500503540039062
    7. ' :' → logprob: -13.875503540039062
    8. '=' → logprob: -14.375503540039062
    9. '():' → logprob: -15.000503540039062
    10. '):
' → logprob: -15.875503540039062

Token 291: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.3882415294647217
    2. 'List' → logprob: -1.1382415294647217
    3. ' Optional' → logprob: -7.138241767883301
    4. 'Optional' → logprob: -7.638241767883301
    5. ' list' → logprob: -10.1382417678833
    6. 'list' → logprob: -11.0132417678833
    7. ')' → logprob: -11.0132417678833
    8. '[List' → logprob: -11.2632417678833
    9. ' )' → logprob: -13.3882417678833
    10. ' ' → logprob: -13.5132417678833

Token 292: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.941850526549388e-06
    2. '[
' → logprob: -12.625007629394531
    3. '<Card' → logprob: -12.625007629394531
    4. 'Card' → logprob: -14.625007629394531
    5. ')' → logprob: -14.875007629394531
    6. '```' → logprob: -15.500007629394531
    7. '[int' → logprob: -16.25000762939453
    8. '<|end|>' → logprob: -16.62500762939453
    9. '(Card' → logprob: -17.12500762939453
    10. ' [' → logprob: -17.37500762939453

Token 293: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -6.704273118884885e-07
    2. ' Card' → logprob: -14.250000953674316
    3. '<Card' → logprob: -20.0
    4. 'card' → logprob: -21.375
    5. '(Card' → logprob: -22.0
    6. '_card' → logprob: -22.0
    7. ')' → logprob: -23.0
    8. ' ' → logprob: -23.625
    9. '.Card' → logprob: -23.625
    10. '[' → logprob: -23.75

Token 294: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1574663519859314
    2. ')' → logprob: -2.782466411590576
    3. ']):' → logprob: -2.907466411590576
    4. '):
' → logprob: -4.032466411590576
    5. ']):
' → logprob: -4.657466411590576
    6. '])' → logprob: -6.782466411590576
    7. ']' → logprob: -7.782466411590576
    8. ':' → logprob: -8.782465934753418
    9. ']:' → logprob: -9.032465934753418
    10. '>):' → logprob: -9.782465934753418

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0683535037969705e-05
    2. ',' → logprob: -12.87501049041748
    3. ' self' → logprob: -12.87501049041748
    4. 'self' → logprob: -13.12501049041748
    5. '   ' → logprob: -13.75001049041748
    6. ':' → logprob: -13.87501049041748
    7. '):
' → logprob: -14.62501049041748
    8. '
' → logprob: -15.00001049041748
    9. ':
' → logprob: -16.250011444091797
    10. '	' → logprob: -16.500011444091797

Token 296: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4098567068576813
    2. 'self' → logprob: -1.1598566770553589
    3. '       ' → logprob: -3.7848567962646484
    4. ' ' → logprob: -12.534856796264648
    5. '	self' → logprob: -12.534856796264648
    6. '   ' → logprob: -13.409856796264648
    7. ' super' → logprob: -14.534856796264648
    8. 'super' → logprob: -14.659856796264648
    9. '        ' → logprob: -14.909856796264648
    10. '(self' → logprob: -15.034856796264648

Token 297: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6256474852561951
    2. ' len' → logprob: -1.7506475448608398
    3. 'not' → logprob: -1.8756475448608398
    4. 'len' → logprob: -2.12564754486084
    5. ' any' → logprob: -4.37564754486084
    6. 'any' → logprob: -5.62564754486084
    7. ' cards' → logprob: -6.50064754486084
    8. 'cards' → logprob: -6.87564754486084
    9. '       ' → logprob: -10.37564754486084
    10. '           ' → logprob: -10.87564754486084

Token 298: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.375001907348633
    3. '(card' → logprob: -16.125001907348633
    4. 'cards' → logprob: -16.500001907348633
    5. ' cards' → logprob: -16.625001907348633
    6. '(players' → logprob: -18.875001907348633
    7. '/cards' → logprob: -20.125001907348633
    8. ' (' → logprob: -20.250001907348633
    9. '.cards' → logprob: -21.500001907348633
    10. '(
' → logprob: -21.500001907348633

Token 299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007726230192929506
    2. ' )' → logprob: -5.132726192474365
    3. ' >' → logprob: -7.132726192474365
    4. ' ==' → logprob: -7.632726192474365
    5. '==' → logprob: -8.882726669311523
    6. ')==' → logprob: -9.132726669311523
    7. ')>' → logprob: -9.257726669311523
    8. ' !=' → logprob: -9.507726669311523
    9. '>' → logprob: -10.507726669311523
    10. ' ' → logprob: -11.132726669311523

Token 300: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5949506163597107
    2. ' ==' → logprob: -1.2199506759643555
    3. ' !=' → logprob: -2.8449506759643555
    4. '==' → logprob: -3.2199506759643555
    5. '>' → logprob: -3.3449506759643555
    6. ' <' → logprob: -4.4699506759643555
    7. '!=' → logprob: -5.7199506759643555
    8. ' not' → logprob: -6.3449506759643555
    9. ')' → logprob: -6.3449506759643555
    10. ' ' → logprob: -7.0949506759643555

Token 301: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.9691248536109924
    2. ' ' → logprob: -1.0941247940063477
    3. '3' → logprob: -1.9691247940063477
    4. '2' → logprob: -1.9691247940063477
    5. '4' → logprob: -5.094124794006348
    6. '1' → logprob: -8.844124794006348
    7. '7' → logprob: -9.594124794006348
    8. '6' → logprob: -9.594124794006348
    9. '10' → logprob: -9.594124794006348
    10. 'len' → logprob: -10.031624794006348

Token 302: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5489076972007751
    2. '2' → logprob: -1.17390775680542
    3. '3' → logprob: -2.29890775680542
    4. ' ' → logprob: -4.79890775680542
    5. '4' → logprob: -5.79890775680542
    6. '1' → logprob: -6.79890775680542
    7. '10' → logprob: -8.048907279968262
    8. '0' → logprob: -9.423907279968262
    9. '6' → logprob: -10.423907279968262
    10. 'len' → logprob: -10.548907279968262

Token 303: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.18027015030384064
    2. ':' → logprob: -1.9302701950073242
    3. ':
' → logprob: -3.930270195007324
    4. 'or' → logprob: -8.680270195007324
    5. '       ' → logprob: -11.805270195007324
    6. ' and' → logprob: -12.180270195007324
    7. ')' → logprob: -12.180270195007324
    8. '):
' → logprob: -12.305270195007324
    9. ' ' → logprob: -12.555270195007324
    10. ' :' → logprob: -12.930270195007324

Token 304: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7899911403656006
    2. ':' → logprob: -1.5399911403656006
    3. ':
' → logprob: -1.5399911403656006
    4. '           ' → logprob: -2.1649911403656006
    5. ' and' → logprob: -6.28999137878418
    6. '            ' → logprob: -8.41499137878418
    7. ' raise' → logprob: -8.41499137878418
    8. '       ' → logprob: -9.41499137878418
    9. ',' → logprob: -9.53999137878418
    10. 'raise' → logprob: -9.78999137878418

Token 305: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.0036823786795139313
    2. 'raise' (adapté à ' raise') → logprob: -5.878682613372803
    3. '           ' → logprob: -7.128682613372803
    4. '	raise' → logprob: -9.878682136535645
    5. '            ' → logprob: -10.878682136535645
    6. '               ' → logprob: -13.003682136535645
    7. '_raise' → logprob: -13.628682136535645
    8. '.raise' → logprob: -14.878682136535645
    9. ' ' → logprob: -15.128682136535645
    10. '             ' → logprob: -15.378682136535645

Token 306: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.38687169551849365
    2. 'Value' → logprob: -1.1368716955184937
    3. '	Value' → logprob: -14.886871337890625
    4. ' ' → logprob: -16.261871337890625
    5. '_value' → logprob: -16.511871337890625
    6. '(Value' → logprob: -16.636871337890625
    7. ' value' → logprob: -17.011871337890625
    8. '_Value' → logprob: -17.261871337890625
    9. '.Value' → logprob: -17.636871337890625
    10. 'Val' → logprob: -18.011871337890625

Token 307: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.011062094010412693
    2. 'rror' → logprob: -4.511062145233154
    3. 'Value' → logprob: -11.761061668395996
    4. 'ror' → logprob: -12.136061668395996
    5. 'r' → logprob: -14.511061668395996
    6. 'alue' → logprob: -14.636061668395996
    7. 'error' → logprob: -16.261062622070312
    8. 'or' → logprob: -18.511062622070312
    9. 'SError' → logprob: -19.011062622070312
    10. 'Val' → logprob: -19.511062622070312

Token 308: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.50001049041748
    3. '(
' → logprob: -18.625009536743164
    4. '('' → logprob: -19.500009536743164
    5. '(f' → logprob: -19.875009536743164
    6. '("'' → logprob: -21.875009536743164
    7. '"' → logprob: -22.750009536743164
    8. '(("' → logprob: -23.500009536743164
    9. '("")' → logprob: -23.625009536743164
    10. '(

' → logprob: -23.625009536743164

Token 309: 'Player' (ID: 5896)
  Prédit: 'Player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.23600871860980988
    2. ' Player' → logprob: -1.6110087633132935
    3. 'A' → logprob: -4.861008644104004
    4. 'Hand' → logprob: -6.611008644104004
    5. 'Players' → logprob: -7.986008644104004
    6. 'Exactly' → logprob: -8.361008644104004
    7. 'Hands' → logprob: -8.486008644104004
    8. 'Initial' → logprob: -8.736008644104004
    9. ' A' → logprob: -8.986008644104004
    10. ' Players' → logprob: -9.361008644104004

Token 310: 'Hand' (ID: 2941)
  Prédit: 'Hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -0.00038705902989022434
    2. 'Hands' → logprob: -8.625387191772461
    3. ' hand' → logprob: -8.875387191772461
    4. 'hand' → logprob: -11.000387191772461
    5. ' Hand' → logprob: -11.000387191772461
    6. '   ' → logprob: -12.000387191772461
    7. ' ' → logprob: -12.125387191772461
    8. ' cards' → logprob: -12.250387191772461
    9. '_hand' → logprob: -12.250387191772461
    10. 'Cards' → logprob: -13.000387191772461

Token 311: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.07486676424741745
    2. ' requires' → logprob: -2.824866771697998
    3. 'must' → logprob: -4.574866771697998
    4. ' ' → logprob: -6.824866771697998
    5. ' cards' → logprob: -7.449866771697998
    6. 'requires' → logprob: -7.574866771697998
    7. ' should' → logprob: -9.57486629486084
    8. '```' → logprob: -10.07486629486084
    9. '()' → logprob: -10.69986629486084
    10. 'cards' → logprob: -10.82486629486084

Token 312: ' be' (ID: 413)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.03727022185921669
    2. ' ' → logprob: -4.0372700691223145
    3. ' be' → logprob: -4.4122700691223145
    4. 'have' → logprob: -5.7872700691223145
    5. ' consist' → logprob: -5.9122700691223145
    6. ' contain' → logprob: -6.9122700691223145
    7. '_have' → logprob: -11.287270545959473
    8. ' not' → logprob: -11.537270545959473
    9. 'Have' → logprob: -12.287270545959473
    10. 'contain' → logprob: -12.912270545959473

Token 313: ' initialized' (ID: 40319)
  Prédit: ' initialized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initialized' → logprob: -0.07702195644378662
    2. 'initialized' → logprob: -3.077022075653076
    3. 'exact' → logprob: -4.827022075653076
    4. 'constructed' → logprob: -5.702022075653076
    5. ' created' → logprob: -5.827022075653076
    6. 'initial' → logprob: -5.952022075653076
    7. ' exactly' → logprob: -5.952022075653076
    8. 'created' → logprob: -5.952022075653076
    9. ' constructed' → logprob: -6.202022075653076
    10. ' instantiated' → logprob: -7.577022075653076

Token 314: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.000181372175575234
    2. 'with' → logprob: -9.250181198120117
    3. ' ' → logprob: -9.375181198120117
    4. '	with' → logprob: -15.250181198120117
    5. ' exactly' → logprob: -16.500181198120117
    6. ' ' → logprob: -16.875181198120117
    7. '<|end|>' → logprob: -18.000181198120117
    8. ' two' → logprob: -18.500181198120117
    9. ' withd' → logprob: -18.500181198120117
    10. ' by' → logprob: -19.250181198120117

Token 315: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.0013403621269389987
    2. ' ' → logprob: -7.001340389251709
    3. 'exact' → logprob: -8.25133991241455
    4. ' two' → logprob: -8.75133991241455
    5. '2' → logprob: -11.75133991241455
    6. ' exact' → logprob: -13.75133991241455
    7. 'two' → logprob: -15.25133991241455
    8. ' a' → logprob: -16.001340866088867
    9. ' precisely' → logprob: -16.126340866088867
    10. 'Exactly' → logprob: -16.126340866088867

Token 316: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03332025930285454
    2. ' two' → logprob: -3.533320188522339
    3. '2' → logprob: -5.658320426940918
    4. 'two' → logprob: -9.533320426940918
    5. ' exactly' → logprob: -13.408320426940918
    6. ' ' → logprob: -14.533320426940918
    7. '  ' → logprob: -15.408320426940918
    8. 'Two' → logprob: -15.408320426940918
    9. ' cards' → logprob: -15.658320426940918
    10. '```' → logprob: -17.6583194732666

Token 317: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016453108983114362
    2. ' ' → logprob: -6.501645088195801
    3. 'two' → logprob: -9.3766450881958
    4. ' two' → logprob: -9.7516450881958
    5. '[' → logprob: -18.001646041870117
    6. '```' → logprob: -18.126646041870117
    7. 'exact' → logprob: -18.876646041870117
    8. '  ' → logprob: -19.001646041870117
    9. '   ' → logprob: -19.126646041870117
    10. 'Two' → logprob: -19.876646041870117

Token 318: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -8.77627644513268e-06
    2. 'cards' → logprob: -12.375008583068848
    3. ' ' → logprob: -13.250008583068848
    4. ' Cards' → logprob: -13.500008583068848
    5. ' Card' → logprob: -13.875008583068848
    6. 'Cards' → logprob: -15.875008583068848
    7. ' card' → logprob: -16.375009536743164
    8. ' ' → logprob: -16.625009536743164
    9. '_cards' → logprob: -16.750009536743164
    10. ' tokens' → logprob: -17.125009536743164

Token 319: '")
' (ID: 1896)
  Prédit: '.")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")
' → logprob: -0.4837191700935364
    2. '")
' → logprob: -0.9837191700935364
    3. ')")
' → logprob: -4.983719348907471
    4. '       ' → logprob: -6.608719348907471
    5. '")' → logprob: -7.233719348907471
    6. '.")' → logprob: -7.733719348907471
    7. ')' → logprob: -9.483718872070312
    8. '")
' → logprob: -10.108718872070312
    9. ')
' → logprob: -10.358718872070312
    10. '.")
' → logprob: -10.358718872070312

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.610702363715973e-06
    2. 'self' → logprob: -12.500009536743164
    3. '
' → logprob: -13.500009536743164
    4. '	' → logprob: -13.750009536743164
    5. '   ' → logprob: -13.875009536743164
    6. ',' → logprob: -14.125009536743164
    7. '<|end|>' → logprob: -14.500009536743164
    8. ' self' → logprob: -14.750009536743164
    9. '[' → logprob: -15.125009536743164
    10. '           ' → logprob: -15.875009536743164

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15640653669834137
    2. '       ' → logprob: -2.2814066410064697
    3. ' self' → logprob: -3.1564066410064697
    4. '   ' → logprob: -10.40640640258789
    5. 'super' → logprob: -11.15640640258789
    6. '
' → logprob: -11.90640640258789
    7. '	self' → logprob: -11.90640640258789
    8. ' ' → logprob: -12.28140640258789
    9. 'for' → logprob: -13.65640640258789
    10. '    ' → logprob: -13.78140640258789

Token 322: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.14373183250427246
    2. '.cards' → logprob: -2.0187318325042725
    3. ' .' → logprob: -8.018732070922852
    4. '   ' → logprob: -8.143732070922852
    5. '.' → logprob: -8.268732070922852
    6. '_cards' → logprob: -8.768732070922852
    7. ' ' → logprob: -12.143732070922852
    8. 'cards' → logprob: -12.643732070922852
    9. '       ' → logprob: -12.643732070922852
    10. '.__' → logprob: -12.893732070922852

Token 323: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.00023250321100931615
    2. '_cards' → logprob: -8.375232696533203
    3. ' cards' → logprob: -13.375232696533203
    4. '.cards' → logprob: -15.500232696533203
    5. 'card' → logprob: -16.750232696533203
    6. '(cards' → logprob: -17.000232696533203
    7. 'cars' → logprob: -18.250232696533203
    8. '_card' → logprob: -18.500232696533203
    9. '
' → logprob: -19.000232696533203
    10. '   ' → logprob: -19.250232696533203

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132636249065399
    2. '=' → logprob: -1.3132636547088623
    3. ' ' → logprob: -13.438263893127441
    4. ' =
' → logprob: -16.313262939453125
    5. ':' → logprob: -16.813262939453125
    6. '[' → logprob: -17.063262939453125
    7. ' =[' → logprob: -17.063262939453125
    8. '[:]' → logprob: -17.438262939453125
    9. '=c' → logprob: -17.563262939453125
    10. ' cards' → logprob: -17.688262939453125

Token 325: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.08975935727357864
    2. ' cards' → logprob: -2.464759349822998
    3. 'list' → logprob: -7.339759349822998
    4. ' list' → logprob: -8.839759826660156
    5. '[' → logprob: -11.589759826660156
    6. '(cards' → logprob: -12.214759826660156
    7. 'card' → logprob: -12.839759826660156
    8. '[]' → logprob: -13.339759826660156
    9. '.cards' → logprob: -13.589759826660156
    10. ' ' → logprob: -13.589759826660156

Token 326: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00893681775778532
    2. '
' → logprob: -5.383936882019043
    3. '<|end|>' → logprob: -5.508936882019043
    4. '    
' → logprob: -9.133936882019043
    5. 'def' → logprob: -9.883936882019043
    6. '<|end|>' → logprob: -10.008936882019043
    7. '@property' → logprob: -10.508936882019043
    8. '```' → logprob: -12.008936882019043
    9. ' ' → logprob: -12.258936882019043
    10. ' def' → logprob: -12.633936882019043

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010827097576111555
    2. ' def' → logprob: -8.001082420349121
    3. 'def' → logprob: -8.251082420349121
    4. '<|end|>' → logprob: -8.501082420349121
    5. '
' → logprob: -8.876082420349121
    6. '@property' → logprob: -9.501082420349121
    7. '    
' → logprob: -10.126082420349121
    8. ' ' → logprob: -11.251082420349121
    9. '```' → logprob: -12.251082420349121
    10. '  ' → logprob: -12.501082420349121

Token 328: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5727822780609131
    2. ' def' → logprob: -1.322782278060913
    3. '   ' → logprob: -1.822782278060913
    4. '@property' → logprob: -4.822782516479492
    5. '    
' → logprob: -11.572782516479492
    6. ' ' → logprob: -11.822782516479492
    7. '
' → logprob: -11.947782516479492
    8. ' @' → logprob: -12.447782516479492
    9. '  ' → logprob: -13.447782516479492
    10. '	def' → logprob: -13.447782516479492

Token 329: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.5760433673858643
    2. 'cards' → logprob: -0.8260433673858643
    3. '.cards' → logprob: -9.951043128967285
    4. '_cards' → logprob: -10.076043128967285
    5. '(cards' → logprob: -11.826043128967285
    6. ' ' → logprob: -12.701043128967285
    7. '   ' → logprob: -13.701043128967285
    8. 'Cards' → logprob: -13.951043128967285
    9. 'def' → logprob: -15.201043128967285
    10. ' Cards' → logprob: -15.576043128967285

Token 330: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.500004768371582
    3. '()' → logprob: -14.625004768371582
    4. ' (' → logprob: -15.500004768371582
    5. '(s' → logprob: -15.500004768371582
    6. 'self' → logprob: -16.625003814697266
    7. '   ' → logprob: -18.125003814697266
    8. 's' → logprob: -19.125003814697266
    9. '(sel' → logprob: -19.250003814697266
    10. '       ' → logprob: -19.500003814697266

Token 331: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012577465735375881
    2. 'self' → logprob: -5.137577533721924
    3. '):' → logprob: -5.762577533721924
    4. '):
' → logprob: -6.387577533721924
    5. '(self' → logprob: -6.637577533721924
    6. ')(' → logprob: -8.012577056884766
    7. '   ' → logprob: -9.887577056884766
    8. ')->' → logprob: -10.012577056884766
    9. '       ' → logprob: -10.637577056884766
    10. '):

' → logprob: -11.012577056884766

Token 332: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.900034299585968e-05
    2. 'self' → logprob: -10.000088691711426
    3. '(' → logprob: -10.250088691711426
    4. '()' → logprob: -12.500088691711426
    5. ')' → logprob: -12.875088691711426
    6. '       ' → logprob: -14.750088691711426
    7. ' (' → logprob: -15.125088691711426
    8. '():' → logprob: -15.125088691711426
    9. '   ' → logprob: -15.250088691711426
    10. '->' → logprob: -15.500088691711426

Token 333: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.07892107218503952
    2. ' List' → logprob: -2.57892107963562
    3. 'list' → logprob: -11.0789213180542
    4. ' list' → logprob: -11.0789213180542
    5. '[List' → logprob: -15.0789213180542
    6. '_list' → logprob: -17.703920364379883
    7. 'self' → logprob: -17.828920364379883
    8. ' ' → logprob: -17.953920364379883
    9. '   ' → logprob: -18.703920364379883
    10. '	List' → logprob: -19.203920364379883

Token 334: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20300044119358063
    2. '[self' → logprob: -1.7030004262924194
    3. '(self' → logprob: -6.453000545501709
    4. 'self' → logprob: -12.32800006866455
    5. '[List' → logprob: -12.95300006866455
    6. '<Card' → logprob: -13.82800006866455
    7. ' self' → logprob: -14.57800006866455
    8. ' [' → logprob: -14.70300006866455
    9. '(Card' → logprob: -14.82800006866455
    10. '[int' → logprob: -15.20300006866455

Token 335: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: 0.0
    2. ' Card' → logprob: -17.0
    3. 'card' → logprob: -21.0
    4. '<Card' → logprob: -21.0
    5. '_card' → logprob: -22.375
    6. '(Card' → logprob: -23.375
    7. 'Car' → logprob: -23.5
    8. 'Cards' → logprob: -24.25
    9. '   ' → logprob: -25.0
    10. 'CARD' → logprob: -25.75

Token 336: ']:
' (ID: 22152)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.047227077186107635
    2. '(self' → logprob: -3.547227144241333
    3. '):' → logprob: -4.797226905822754
    4. '():
' → logprob: -4.922226905822754
    5. '()' → logprob: -6.922226905822754
    6. '):
' → logprob: -8.297226905822754
    7. '   ' → logprob: -9.172226905822754
    8. ':' → logprob: -9.172226905822754
    9. 'self' → logprob: -9.422226905822754
    10. ']:' → logprob: -9.547226905822754

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13394013047218323
    2. ' return' → logprob: -2.2589402198791504
    3. 'return' → logprob: -3.8839402198791504
    4. 'self' → logprob: -8.633939743041992
    5. ' self' → logprob: -8.883939743041992
    6. '[self' → logprob: -12.383939743041992
    7. '[' → logprob: -13.008939743041992
    8. '[]' → logprob: -14.008939743041992
    9. ' [' → logprob: -14.383939743041992
    10. ':return' → logprob: -14.883939743041992

Token 338: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18012988567352295
    2. 'self' → logprob: -2.4301300048828125
    3. ' return' → logprob: -2.6801300048828125
    4. ' self' → logprob: -5.4301300048828125
    5. '       ' → logprob: -5.5551300048828125
    6. '   ' → logprob: -11.930130004882812
    7. '[self' → logprob: -14.305130004882812
    8. '	return' → logprob: -15.305130004882812
    9. '    ' → logprob: -15.430130004882812
    10. '        ' → logprob: -15.805130004882812

Token 339: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1269284337759018
    2. ' self' → logprob: -2.1269283294677734
    3. '[self' → logprob: -15.626928329467773
    4. '   ' → logprob: -16.376928329467773
    5. '	self' → logprob: -16.751928329467773
    6. 'list' → logprob: -17.376928329467773
    7. '(self' → logprob: -17.626928329467773
    8. ' list' → logprob: -18.001928329467773
    9. '       ' → logprob: -18.001928329467773
    10. ' ' → logprob: -18.376928329467773

Token 340: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.75
    3. ' .' → logprob: -16.875
    4. ']._' → logprob: -18.125
    5. ')._' → logprob: -18.375
    6. '.__' → logprob: -19.125
    7. '_' → logprob: -19.375
    8. '	' → logprob: -20.125
    9. '."_' → logprob: -20.375
    10. ' ' → logprob: -20.75

Token 341: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -4.961759259458631e-06
    2. '_cards' → logprob: -12.500004768371582
    3. '.cards' → logprob: -14.000004768371582
    4. ' cards' → logprob: -15.375004768371582
    5. '(cards' → logprob: -16.2500057220459
    6. 'slots' → logprob: -18.0000057220459
    7. 'tokens' → logprob: -18.3750057220459
    8. 'cars' → logprob: -18.3750057220459
    9. 'chars' → logprob: -18.8750057220459
    10. 'codes' → logprob: -18.8750057220459

Token 342: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.02443011850118637
    2. '
' → logprob: -3.7744300365448
    3. '<|end|>' → logprob: -7.024430274963379
    4. ' class' → logprob: -8.399430274963379
    5. '```' → logprob: -10.524430274963379
    6. '<|end|>' → logprob: -11.399430274963379
    7. '

' → logprob: -11.774430274963379
    8. '  
' → logprob: -11.774430274963379
    9. 'from' → logprob: -12.024430274963379
    10. '<class' → logprob: -12.399430274963379

Token 344: ' Opp' (ID: 55440)
  Prédit: 'Dealer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dealer' → logprob: -0.06508632749319077
    2. 'class' → logprob: -3.4400863647460938
    3. ' Dealer' → logprob: -4.690086364746094
    4. 'Opponent' → logprob: -5.065086364746094
    5. 'Community' → logprob: -5.690086364746094
    6. 'House' → logprob: -6.065086364746094
    7. 'Card' → logprob: -6.565086364746094
    8. ' class' → logprob: -6.565086364746094
    9. 'Deck' → logprob: -6.690086364746094
    10. 'Bank' → logprob: -6.815086364746094

Token 345: 'onent' (ID: 130930)
  Prédit: 'onent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -5.319370302458992e-06
    2. 'on' → logprob: -12.500005722045898
    3. 'ponent' → logprob: -14.125005722045898
    4. 'osite' → logprob: -15.000005722045898
    5. 'osing' → logprob: -15.125005722045898
    6. 'osition' → logprob: -16.1250057220459
    7. 'nent' → logprob: -16.3750057220459
    8. 'onen' → logprob: -17.1250057220459
    9. 'ONENT' → logprob: -17.5000057220459
    10. 'onet' → logprob: -18.3750057220459

Token 346: 'Hand' (ID: 2941)
  Prédit: 'Hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -1.5332478142227046e-05
    2. 'Hands' → logprob: -12.000015258789062
    3. ''s' → logprob: -12.625015258789062
    4. ' Hand' → logprob: -14.125015258789062
    5. ''' → logprob: -14.500015258789062
    6. 'Hold' → logprob: -14.625015258789062
    7. '`' → logprob: -14.875015258789062
    8. 'Card' → logprob: -15.250015258789062
    9. ' ' → logprob: -15.250015258789062
    10. '(' → logprob: -15.375015258789062

Token 347: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.60414821645827e-06
    2. '(Player' → logprob: -12.750004768371582
    3. ' (' → logprob: -13.375004768371582
    4. '(Abstract' → logprob: -17.000003814697266
    5. '(Card' → logprob: -18.250003814697266
    6. '   ' → logprob: -19.000003814697266
    7. '(hand' → logprob: -19.000003814697266
    8. ':' → logprob: -19.000003814697266
    9. 'Hand' → logprob: -19.125003814697266
    10. '(H' → logprob: -19.250003814697266

Token 348: 'Hand' (ID: 2941)
  Prédit: 'Hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -0.0004618896055035293
    2. ' Hand' → logprob: -8.00046157836914
    3. 'List' → logprob: -10.25046157836914
    4. ')' → logprob: -10.87546157836914
    5. 'Player' → logprob: -10.87546157836914
    6. 'Hands' → logprob: -11.37546157836914
    7. 'Deck' → logprob: -11.87546157836914
    8. 'Handler' → logprob: -12.00046157836914
    9. 'ABC' → logprob: -12.62546157836914
    10. '   ' → logprob: -12.87546157836914

Token 349: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4295957088470459
    2. '):' → logprob: -1.054595708847046
    3. ')' → logprob: -8.179595947265625
    4. '):
' → logprob: -8.304595947265625
    5. '(' → logprob: -8.429595947265625
    6. ',' → logprob: -9.554595947265625
    7. '   ' → logprob: -10.179595947265625
    8. '):

' → logprob: -10.929595947265625
    9. ':' → logprob: -11.554595947265625
    10. ' ):' → logprob: -12.804595947265625

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.327856630785391e-05
    2. 'def' → logprob: -10.625082969665527
    3. ' def' → logprob: -10.875082969665527
    4. 'class' → logprob: -11.000082969665527
    5. '
' → logprob: -11.500082969665527
    6. '    
' → logprob: -13.000082969665527
    7. '):
' → logprob: -13.125082969665527
    8. ':
' → logprob: -13.250082969665527
    9. '```' → logprob: -13.250082969665527
    10. ':' → logprob: -13.500082969665527

Token 351: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.14669491350650787
    2. ' def' → logprob: -2.0216948986053467
    3. '   ' → logprob: -5.521695137023926
    4. '	def' → logprob: -13.146695137023926
    5. 'class' → logprob: -13.271695137023926
    6. ' ' → logprob: -13.271695137023926
    7. 'from' → logprob: -13.521695137023926
    8. '  ' → logprob: -13.896695137023926
    9. '__' → logprob: -14.021695137023926
    10. '_def' → logprob: -14.521695137023926

Token 352: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7202025651931763
    2. 'init' → logprob: -1.3452025651931763
    3. '__' → logprob: -1.8452025651931763
    4. '_init' → logprob: -2.8452024459838867
    5. ' def' → logprob: -3.9702024459838867
    6. 'def' → logprob: -4.220202445983887
    7. ' init' → logprob: -6.345202445983887
    8. 'None' → logprob: -8.220202445983887
    9. '```' → logprob: -8.595202445983887
    10. ' None' → logprob: -8.595202445983887

Token 353: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.982165698194876e-05
    2. 'nit' → logprob: -10.250080108642578
    3. '```' → logprob: -11.250080108642578
    4. '_init' → logprob: -12.125080108642578
    5. 'def' → logprob: -12.250080108642578
    6. 'list' → logprob: -13.000080108642578
    7. 'slots' → logprob: -13.000080108642578
    8. 'val' → logprob: -13.375080108642578
    9. 'int' → logprob: -13.375080108642578
    10. '{' → logprob: -13.625080108642578

Token 354: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.051187146455049515
    2. '__(' → logprob: -3.176187038421631
    3. ',' → logprob: -5.176187038421631
    4. ' (' → logprob: -6.676187038421631
    5. 'self' → logprob: -7.551187038421631
    6. '(' → logprob: -7.676187038421631
    7. '   ' → logprob: -9.051187515258789
    8. '_(' → logprob: -9.176187515258789
    9. '       ' → logprob: -11.551187515258789
    10. '__(
' → logprob: -12.176187515258789

Token 355: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00027349460287950933
    2. ' self' → logprob: -8.250273704528809
    3. ',' → logprob: -11.625273704528809
    4. '(self' → logprob: -13.250273704528809
    5. '
' → logprob: -14.750273704528809
    6. '   ' → logprob: -14.750273704528809
    7. '       ' → logprob: -14.875273704528809
    8. '	self' → logprob: -16.625272750854492
    9. '__(' → logprob: -16.625272750854492
    10. '0' → logprob: -17.000272750854492

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014628577046096325
    2. 'self' → logprob: -7.126462936401367
    3. '       ' → logprob: -8.251462936401367
    4. '(self' → logprob: -8.876462936401367
    5. ' ,' → logprob: -8.876462936401367
    6. ' (' → logprob: -9.876462936401367
    7. '   ' → logprob: -10.251462936401367
    8. ' self' → logprob: -11.126462936401367
    9. ',self' → logprob: -11.626462936401367
    10. '):
' → logprob: -13.376462936401367

Token 357: ' visible' (ID: 15263)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.47708165645599365
    2. 'cards' → logprob: -0.9770816564559937
    3. 'self' → logprob: -7.102081775665283
    4. 'card' → logprob: -7.477081775665283
    5. ' card' → logprob: -7.727081775665283
    6. ')' → logprob: -7.852081775665283
    7. ' self' → logprob: -8.477081298828125
    8. '_cards' → logprob: -9.477081298828125
    9. '   ' → logprob: -10.164581298828125
    10. ' optional' → logprob: -10.289581298828125

Token 358: '_card' (ID: 37760)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.3187828063964844
    2. '_card' → logprob: -1.9437828063964844
    3. ':' → logprob: -2.0687828063964844
    4. 'cards' → logprob: -6.318782806396484
    5. 'card' → logprob: -7.318782806396484
    6. '_value' → logprob: -7.318782806396484
    7. 'Cards' → logprob: -9.568782806396484
    8. 'Card' → logprob: -9.693782806396484
    9. '_:' → logprob: -10.068782806396484
    10. ' cards' → logprob: -10.193782806396484

Token 359: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.786196975852363e-05
    2. ' :' → logprob: -10.875038146972656
    3. '):' → logprob: -11.250038146972656
    4. 's' → logprob: -12.750038146972656
    5. ',' → logprob: -14.125038146972656
    6. ')' → logprob: -14.875038146972656
    7. '_:' → logprob: -14.875038146972656
    8. '   ' → logprob: -15.000038146972656
    9. '):
' → logprob: -15.125038146972656
    10. ' ' → logprob: -15.125038146972656

Token 360: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.10026274621486664
    2. ' Card' → logprob: -2.3502626419067383
    3. 'Optional' → logprob: -9.975262641906738
    4. ' Optional' → logprob: -12.100262641906738
    5. ' ' → logprob: -13.475262641906738
    6. 'List' → logprob: -13.475262641906738
    7. '   ' → logprob: -14.475262641906738
    8. ' card' → logprob: -15.600262641906738
    9. ')' → logprob: -16.350263595581055
    10. 'card' → logprob: -16.475263595581055

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010331551544368267
    2. '):' → logprob: -5.135331630706787
    3. '):
' → logprob: -5.510331630706787
    4. ' ,' → logprob: -8.135331153869629
    5. ',
' → logprob: -10.260331153869629
    6. ')' → logprob: -11.635331153869629
    7. '   ' → logprob: -12.135331153869629
    8. '       ' → logprob: -13.385331153869629
    9. ' ):' → logprob: -13.510331153869629
    10. ' ):
' → logprob: -13.885331153869629

Token 362: ' hidden' (ID: 14051)
  Prédit: ' hidden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hidden' → logprob: -0.4944232702255249
    2. 'hidden' → logprob: -1.244423270225525
    3. ' possible' → logprob: -2.9944233894348145
    4. 'possible' → logprob: -3.7444233894348145
    5. ' unknown' → logprob: -4.9944233894348145
    6. 'unknown' → logprob: -5.6194233894348145
    7. ' hole' → logprob: -5.9944233894348145
    8. 'hole' → logprob: -5.9944233894348145
    9. ' ' → logprob: -6.3694233894348145
    10. 'known' → logprob: -6.6194233894348145

Token 363: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.0037405795883387327
    2. ':' → logprob: -5.7537407875061035
    3. '_cards' → logprob: -8.128740310668945
    4. 'Card' → logprob: -8.753740310668945
    5. 'card' → logprob: -9.503740310668945
    6. '<Card' → logprob: -11.753740310668945
    7. '_:' → logprob: -12.003740310668945
    8. '_' → logprob: -12.628740310668945
    9. ' card' → logprob: -12.628740310668945
    10. ' Card' → logprob: -12.878740310668945

Token 364: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.173704271830502e-06
    2. ' :' → logprob: -13.75000286102295
    3. 'Optional' → logprob: -13.87500286102295
    4. ' Optional' → logprob: -14.62500286102295
    5. ')' → logprob: -15.62500286102295
    6. '_optional' → logprob: -16.125003814697266
    7. 'optional' → logprob: -16.375003814697266
    8. '):' → logprob: -16.375003814697266
    9. '(Optional' → logprob: -16.500003814697266
    10. '=' → logprob: -16.750003814697266

Token 365: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.10781927406787872
    2. ' Optional' → logprob: -2.6078193187713623
    3. 'Card' → logprob: -3.6078193187713623
    4. ' Card' → logprob: -6.607819080352783
    5. ' ' → logprob: -11.232819557189941
    6. 'optional' → logprob: -11.357819557189941
    7. '	Optional' → logprob: -11.357819557189941
    8. '   ' → logprob: -12.482819557189941
    9. '(Optional' → logprob: -12.982819557189941
    10. 'Opt' → logprob: -13.357819557189941

Token 366: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '<Card' → logprob: -14.500001907348633
    3. 'Card' → logprob: -14.750001907348633
    4. '[List' → logprob: -14.750001907348633
    5. '[
' → logprob: -15.500001907348633
    6. ')' → logprob: -17.625001907348633
    7. '```' → logprob: -18.750001907348633
    8. '=' → logprob: -18.875001907348633
    9. '(Card' → logprob: -18.875001907348633
    10. '[int' → logprob: -19.375001907348633

Token 367: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.00026217024424113333
    2. ' Card' → logprob: -8.250262260437012
    3. '[' → logprob: -14.875262260437012
    4. 'List' → logprob: -15.625262260437012
    5. '<Card' → logprob: -15.625262260437012
    6. ' ' → logprob: -15.750262260437012
    7. '   ' → logprob: -16.750261306762695
    8. '(Card' → logprob: -17.875261306762695
    9. ')' → logprob: -18.000261306762695
    10. 'card' → logprob: -18.250261306762695

Token 368: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2201090008020401
    2. ']=' → logprob: -2.595108985900879
    3. ')' → logprob: -2.845108985900879
    4. '])' → logprob: -3.845108985900879
    5. ']):' → logprob: -4.220108985900879
    6. ']):
' → logprob: -4.345108985900879
    7. '=None' → logprob: -4.845108985900879
    8. '=' → logprob: -5.470108985900879
    9. ')=' → logprob: -5.845108985900879
    10. '):' → logprob: -7.970108985900879

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5045146942138672
    2. ' =' → logprob: -1.2545146942138672
    3. '=None' → logprob: -2.254514694213867
    4. '):
' → logprob: -5.254514694213867
    5. '):' → logprob: -7.504514694213867
    6. ')' → logprob: -8.254514694213867
    7. ' ' → logprob: -11.379514694213867
    8. ':' → logprob: -11.754514694213867
    9. '):

' → logprob: -12.629514694213867
    10. '   ' → logprob: -13.504514694213867

Token 370: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16022545099258423
    2. ' None' → logprob: -1.9102253913879395
    3. '   ' → logprob: -14.410225868225098
    4. '=None' → logprob: -15.035225868225098
    5. '(None' → logprob: -15.535225868225098
    6. '_None' → logprob: -16.41022491455078
    7. ' ' → logprob: -16.78522491455078
    8. 'none' → logprob: -16.91022491455078
    9. ',None' → logprob: -17.16022491455078
    10. ')' → logprob: -18.53522491455078

Token 371: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06203065440058708
    2. '):' → logprob: -2.812030553817749
    3. '):
' → logprob: -10.187030792236328
    4. '   ' → logprob: -10.937030792236328
    5. ' ):
' → logprob: -12.812030792236328
    6. ',' → logprob: -13.437030792236328
    7. ')' → logprob: -13.687030792236328
    8. '       ' → logprob: -13.687030792236328
    9. ':' → logprob: -14.437030792236328
    10. '):

' → logprob: -15.562030792236328

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.591415437171236e-05
    2. '   ' → logprob: -9.375096321105957
    3. 'self' → logprob: -12.000096321105957
    4. ' self' → logprob: -13.000096321105957
    5. '
' → logprob: -14.375096321105957
    6. ',' → logprob: -14.500096321105957
    7. '	' → logprob: -14.500096321105957
    8. ')' → logprob: -15.750096321105957
    9. '	   ' → logprob: -15.875096321105957
    10. '```' → logprob: -16.12509536743164

Token 373: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03897027671337128
    2. ' self' → logprob: -3.7889702320098877
    3. 'self' (adapté à ' self') → logprob: -4.163970470428467
    4. '   ' → logprob: -10.788969993591309
    5. ' ' → logprob: -11.038969993591309
    6. '	self' → logprob: -12.413969993591309
    7. '
' → logprob: -12.913969993591309
    8. 'super' → logprob: -13.038969993591309
    9. '(self' → logprob: -13.413969993591309
    10. '      ' → logprob: -13.538969993591309

Token 374: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.25934597849845886
    2. '.visible' → logprob: -1.5093460083007812
    3. '.' → logprob: -5.009346008300781
    4. ' .' → logprob: -8.384346008300781
    5. '_visible' → logprob: -8.509346008300781
    6. '.hidden' → logprob: -8.884346008300781
    7. '   ' → logprob: -9.634346008300781
    8. 'visible' → logprob: -10.884346008300781
    9. ' ' → logprob: -11.134346008300781
    10. '.__' → logprob: -11.259346008300781

Token 375: 'visible' (ID: 20450)
  Prédit: 'visible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visible' → logprob: -0.002043913584202528
    2. 'cards' → logprob: -6.252043724060059
    3. '_visible' → logprob: -9.752043724060059
    4. 'hidden' → logprob: -11.127043724060059
    5. '_cards' → logprob: -11.252043724060059
    6. '_' → logprob: -11.502043724060059
    7. ' visible' → logprob: -11.502043724060059
    8. '.visible' → logprob: -13.127043724060059
    9. 'known' → logprob: -13.627043724060059
    10. 'available' → logprob: -14.127043724060059

Token 376: ' =' (ID: 314)
  Prédit: '_card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_card' → logprob: -7.362307223957032e-05
    2. '_cards' → logprob: -9.625073432922363
    3. '_' → logprob: -12.250073432922363
    4. '_visible' → logprob: -13.625073432922363
    5. '_car' → logprob: -14.625073432922363
    6. 'card' → logprob: -15.625073432922363
    7. '_hand' → logprob: -15.750073432922363
    8. 'Card' → logprob: -16.00007438659668
    9. ' _' → logprob: -16.25007438659668
    10. '
' → logprob: -16.37507438659668

Token 377: ' visible' (ID: 15263)
  Prédit: 'visible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visible' → logprob: -0.16023032367229462
    2. ' visible' → logprob: -1.910230278968811
    3. '.visible' → logprob: -12.91023063659668
    4. 'hidden' → logprob: -13.03523063659668
    5. ' hidden' → logprob: -15.03523063659668
    6. ' ' → logprob: -15.16023063659668
    7. '_visible' → logprob: -15.41023063659668
    8. 'Visible' → logprob: -15.66023063659668
    9. ' ' → logprob: -15.78523063659668
    10. '   ' → logprob: -15.78523063659668

Token 378: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -1.4855663721391466e-05
    2. 'card' → logprob: -11.750015258789062
    3. 'Card' → logprob: -12.375015258789062
    4. '_cards' → logprob: -13.750015258789062
    5. '_CARD' → logprob: -15.000015258789062
    6. '_' → logprob: -15.375015258789062
    7. '
' → logprob: -15.375015258789062
    8. ' card' → logprob: -16.125015258789062
    9. '   ' → logprob: -16.500015258789062
    10. '<Card' → logprob: -16.750015258789062

Token 379: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027267748955637217
    2. '
' → logprob: -6.1277265548706055
    3. '<|end|>' → logprob: -8.002726554870605
    4. 'self' → logprob: -9.252726554870605
    5. ',' → logprob: -10.002726554870605
    6. '   ' → logprob: -10.252726554870605
    7. ' self' → logprob: -11.877726554870605
    8. '<|end|>' → logprob: -12.252726554870605
    9. ' and' → logprob: -12.752726554870605
    10. ',
' → logprob: -12.752726554870605

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006601344794034958
    2. '	' → logprob: -8.750659942626953
    3. 'self' → logprob: -8.750659942626953
    4. '<|end|>' → logprob: -9.375659942626953
    5. ' ' → logprob: -9.750659942626953
    6. ' self' → logprob: -10.125659942626953
    7. '   ' → logprob: -10.125659942626953
    8. '        
' → logprob: -10.250659942626953
    9. ',' → logprob: -10.375659942626953
    10. '
' → logprob: -11.500659942626953

Token 381: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.022437075152993202
    2. ' self' → logprob: -3.89743709564209
    3. '       ' → logprob: -6.27243709564209
    4. '	self' → logprob: -12.77243709564209
    5. '   ' → logprob: -14.27243709564209
    6. ' ' → logprob: -14.39743709564209
    7. '
' → logprob: -14.64743709564209
    8. '[self' → logprob: -15.02243709564209
    9. '(self' → logprob: -15.52243709564209
    10. '        ' → logprob: -15.89743709564209

Token 382: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.001379879075102508
    2. '_hidden' → logprob: -6.62637996673584
    3. '.hidden' → logprob: -10.37637996673584
    4. '.' → logprob: -11.62637996673584
    5. '_' → logprob: -11.87637996673584
    6. 'hidden' → logprob: -12.75137996673584
    7. ' .' → logprob: -13.50137996673584
    8. '
' → logprob: -14.25137996673584
    9. ']._' → logprob: -14.87637996673584
    10. ' hidden' → logprob: -15.25137996673584

Token 383: 'hidden' (ID: 13170)
  Prédit: 'hidden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hidden' → logprob: -0.002204855205491185
    2. '_hidden' → logprob: -6.127204895019531
    3. ' hidden' → logprob: -11.127204895019531
    4. 'visible' → logprob: -12.752204895019531
    5. '(hidden' → logprob: -14.377204895019531
    6. '.hidden' → logprob: -14.502204895019531
    7. '_' → logprob: -15.002204895019531
    8. '_cards' → logprob: -15.502204895019531
    9. '_visible' → logprob: -16.87720489501953
    10. '_card' → logprob: -17.00220489501953

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31347692012786865
    2. ' =' → logprob: -1.3134769201278687
    3. '_card' → logprob: -8.6884765625
    4. '_' → logprob: -10.9384765625
    5. '=_' → logprob: -11.1884765625
    6. '=None' → logprob: -12.1884765625
    7. ' ' → logprob: -12.1884765625
    8. '_cards' → logprob: -13.0634765625
    9. '_hidden' → logprob: -13.6884765625
    10. '<|end|>' → logprob: -15.3134765625

Token 385: ' hidden' (ID: 14051)
  Prédit: 'hidden'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hidden' → logprob: -0.25193899869918823
    2. ' hidden' → logprob: -1.501939058303833
    3. '(hidden' → logprob: -11.876938819885254
    4. '.hidden' → logprob: -13.876938819885254
    5. ' None' → logprob: -14.501938819885254
    6. 'None' → logprob: -14.626938819885254
    7. ' ' → logprob: -15.126938819885254
    8. '   ' → logprob: -15.251938819885254
    9. '_hidden' → logprob: -15.501938819885254
    10. 'visible' → logprob: -16.31443977355957

Token 386: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.00017016702622640878
    2. 'card' → logprob: -9.00016975402832
    3. 'Card' → logprob: -10.25016975402832
    4. '_' → logprob: -11.87516975402832
    5. '_CARD' → logprob: -14.12516975402832
    6. '_hand' → logprob: -14.25016975402832
    7. ' card' → logprob: -14.37516975402832
    8. '
' → logprob: -15.00016975402832
    9. '_hidden' → logprob: -15.12516975402832
    10. 'hidden' → logprob: -15.25016975402832

Token 387: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030166839715093374
    2. '
' → logprob: -5.878016471862793
    3. '<|end|>' → logprob: -9.128016471862793
    4. 'def' → logprob: -9.753016471862793
    5. '    
' → logprob: -11.003016471862793
    6. ' def' → logprob: -11.753016471862793
    7. ' ' → logprob: -12.128016471862793
    8. '  ' → logprob: -12.128016471862793
    9. '<|end|>' → logprob: -12.753016471862793
    10. '       ' → logprob: -12.878016471862793

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003597760514821857
    2. '
' → logprob: -8.125359535217285
    3. 'def' → logprob: -10.125359535217285
    4. '<|end|>' → logprob: -11.250359535217285
    5. ' def' → logprob: -12.000359535217285
    6. '    
' → logprob: -13.250359535217285
    7. '<|end|>' → logprob: -14.000359535217285
    8. '       ' → logprob: -14.250359535217285
    9. ' ' → logprob: -14.500359535217285
    10. '  ' → logprob: -15.125359535217285

Token 389: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17096230387687683
    2. '   ' → logprob: -1.9209623336791992
    3. ' def' → logprob: -4.545962333679199
    4. '@property' → logprob: -9.7959623336792
    5. '
' → logprob: -11.5459623336792
    6. '    
' → logprob: -13.2959623336792
    7. '@' → logprob: -13.2959623336792
    8. '	def' → logprob: -14.1709623336792
    9. ' ' → logprob: -14.5459623336792
    10. '  ' → logprob: -15.5459623336792

Token 390: ' set' (ID: 920)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.10150444507598877
    2. 'cards' → logprob: -2.351504325866699
    3. 'def' → logprob: -7.476504325866699
    4. ' def' → logprob: -7.726504325866699
    5. '   ' → logprob: -9.4765043258667
    6. ' visible' → logprob: -9.6015043258667
    7. ' ' → logprob: -10.3515043258667
    8. '(cards' → logprob: -10.4765043258667
    9. '.cards' → logprob: -10.6015043258667
    10. 'visible' → logprob: -10.6015043258667

Token 391: '_hidden' (ID: 62109)
  Prédit: '_hidden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hidden' → logprob: -0.003737491322681308
    2. 'hidden' → logprob: -5.878737449645996
    3. '_visible' → logprob: -7.128737449645996
    4. '_cards' → logprob: -10.003737449645996
    5. '(self' → logprob: -10.753737449645996
    6. '_hand' → logprob: -11.128737449645996
    7. '(hidden' → logprob: -11.503737449645996
    8. 'def' → logprob: -12.003737449645996
    9. 'Hidden' → logprob: -12.128737449645996
    10. '_' → logprob: -12.378737449645996

Token 392: '(self' (ID: 2402)
  Prédit: '_card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.0032204915769398212
    2. '(self' → logprob: -5.753220558166504
    3. '_hidden' → logprob: -11.628220558166504
    4. '(' → logprob: -11.878220558166504
    5. '_cards' → logprob: -12.003220558166504
    6. 'card' → logprob: -12.003220558166504
    7. 'Card' → logprob: -12.378220558166504
    8. '(_' → logprob: -12.503220558166504
    9. '(card' → logprob: -13.128220558166504
    10. '(Card' → logprob: -13.378220558166504

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0980832576751709
    2. '_card' → logprob: -2.598083257675171
    3. '(self' → logprob: -4.59808349609375
    4. 'card' → logprob: -5.72308349609375
    5. '(Card' → logprob: -6.84808349609375
    6. ')' → logprob: -7.09808349609375
    7. 'Card' → logprob: -7.09808349609375
    8. 'self' → logprob: -7.59808349609375
    9. ' ,' → logprob: -7.84808349609375
    10. '(card' → logprob: -7.97308349609375

Token 394: ' hidden' (ID: 14051)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.5087546110153198
    2. 'card' → logprob: -1.7587546110153198
    3. ' hidden' → logprob: -2.0087547302246094
    4. 'hidden' → logprob: -2.3837547302246094
    5. 'Card' → logprob: -9.38375473022461
    6. 'value' → logprob: -11.50875473022461
    7. ' Card' → logprob: -11.88375473022461
    8. '(hidden' → logprob: -11.88375473022461
    9. '	card' → logprob: -12.00875473022461
    10. ' value' → logprob: -12.38375473022461

Token 395: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -1.9027791495318525e-05
    2. ')' → logprob: -11.750019073486328
    3. 'Card' → logprob: -12.125019073486328
    4. '):' → logprob: -13.750019073486328
    5. 'card' → logprob: -13.875019073486328
    6. '_' → logprob: -14.375019073486328
    7. '_cards' → logprob: -14.500019073486328
    8. '<Card' → logprob: -14.500019073486328
    9. '_CARD' → logprob: -14.750019073486328
    10. ')_' → logprob: -15.000019073486328

Token 396: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07708629220724106
    2. ',' → logprob: -3.7020862102508545
    3. '(self' → logprob: -3.8270862102508545
    4. ')' → logprob: -3.9520862102508545
    5. 'self' → logprob: -5.827086448669434
    6. '):' → logprob: -6.077086448669434
    7. '(card' → logprob: -6.452086448669434
    8. '   ' → logprob: -7.702086448669434
    9. '       ' → logprob: -8.452086448669434
    10. ' (' → logprob: -8.577086448669434

Token 397: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.20161212980747223
    2. ' Card' → logprob: -1.701612114906311
    3. ' hidden' → logprob: -9.45161247253418
    4. ' card' → logprob: -9.95161247253418
    5. 'Hidden' → logprob: -10.57661247253418
    6. 'hidden' → logprob: -10.82661247253418
    7. 'Optional' → logprob: -11.82661247253418
    8. ' ' → logprob: -12.32661247253418
    9. 'card' → logprob: -12.32661247253418
    10. ' Optional' → logprob: -12.32661247253418

Token 398: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5037471055984497
    2. '):' → logprob: -1.5037471055984497
    3. ')' → logprob: -1.7537471055984497
    4. '):
' → logprob: -8.12874698638916
    5. ')->' → logprob: -11.75374698638916
    6. '):

' → logprob: -12.00374698638916
    7. '   ' → logprob: -12.37874698638916
    8. ' ):
' → logprob: -13.37874698638916
    9. ':' → logprob: -13.50374698638916
    10. '       ' → logprob: -14.00374698638916

Token 399: ' ->' (ID: 2747)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3890923261642456
    2. ':' → logprob: -1.1390923261642456
    3. '):
' → logprob: -6.514092445373535
    4. '       ' → logprob: -8.014092445373535
    5. '   ' → logprob: -8.389092445373535
    6. '->' → logprob: -9.889092445373535
    7. ')' → logprob: -10.264092445373535
    8. '):' → logprob: -10.514092445373535
    9. ' ->' → logprob: -10.764092445373535
    10. '():
' → logprob: -10.889092445373535

Token 400: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011048289015889168
    2. ' None' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.511048316955566
    4. ' ' → logprob: -17.51104736328125
    5. '_None' → logprob: -18.01104736328125
    6. 'none' → logprob: -18.76104736328125
    7. 'void' → logprob: -19.26104736328125
    8. '(None' → logprob: -20.01104736328125
    9. '  ' → logprob: -20.26104736328125
    10. '_none' → logprob: -21.13604736328125

Token 401: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.021486837416887283
    2. ':' → logprob: -4.021486759185791
    3. '       ' → logprob: -5.771486759185791
    4. '):
' → logprob: -8.77148723602295
    5. '   ' → logprob: -10.27148723602295
    6. ' :
' → logprob: -11.52148723602295
    7. '():
' → logprob: -11.77148723602295
    8. ':
' → logprob: -12.64648723602295
    9. ',' → logprob: -13.52148723602295
    10. '```' → logprob: -13.77148723602295

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020332036074250937
    2. ' self' → logprob: -6.377033233642578
    3. 'self' → logprob: -8.377033233642578
    4. '   ' → logprob: -9.627033233642578
    5. '	' → logprob: -11.002033233642578
    6. '	self' → logprob: -11.502033233642578
    7. '	   ' → logprob: -13.002033233642578
    8. ' ' → logprob: -13.877033233642578
    9. '(self' → logprob: -13.877033233642578
    10. ',' → logprob: -14.127033233642578

Token 403: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2700779139995575
    2. 'self' (adapté à ' self') → logprob: -1.5200779438018799
    3. '       ' → logprob: -4.020077705383301
    4. '   ' → logprob: -10.7700777053833
    5. '	self' → logprob: -11.3950777053833
    6. ' ' → logprob: -15.0200777053833
    7. '(self' → logprob: -15.2700777053833
    8. '	' → logprob: -15.6450777053833
    9. ' ' → logprob: -15.6450777053833
    10. '[self' → logprob: -16.520078659057617

Token 404: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.2200749754119897e-06
    2. '_hidden' → logprob: -13.625001907348633
    3. '.' → logprob: -14.750001907348633
    4. '_' → logprob: -15.875001907348633
    5. ']._' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.125001907348633
    7. '.__' → logprob: -16.500001907348633
    8. '->_' → logprob: -17.000001907348633
    9. '.hidden' → logprob: -17.250001907348633
    10. ')._' → logprob: -17.500001907348633

Token 405: 'hidden' (ID: 13170)
  Prédit: 'hidden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hidden' → logprob: -1.1756367712223437e-05
    2. '_hidden' → logprob: -11.500011444091797
    3. ' hidden' → logprob: -13.625011444091797
    4. '.hidden' → logprob: -14.750011444091797
    5. '(hidden' → logprob: -17.750011444091797
    6. '-hidden' → logprob: -18.750011444091797
    7. 'visible' → logprob: -18.875011444091797
    8. ':hidden' → logprob: -21.125011444091797
    9. 'Hidden' → logprob: -21.625011444091797
    10. 'hide' → logprob: -23.250011444091797

Token 406: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693149745464325
    2. ' =' → logprob: -0.693149745464325
    3. ' ' → logprob: -12.94314956665039
    4. '=

' → logprob: -17.06814956665039
    5. ')' → logprob: -17.56814956665039
    6. '.' → logprob: -18.31814956665039
    7. '＝' → logprob: -18.31814956665039
    8. '_=' → logprob: -18.44314956665039
    9. ' =
' → logprob: -18.44314956665039
    10. '_' → logprob: -18.56814956665039

Token 407: ' hidden' (ID: 14051)
  Prédit: 'hidden'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hidden' → logprob: -0.25193315744400024
    2. ' hidden' → logprob: -1.5019330978393555
    3. '(hidden' → logprob: -12.751933097839355
    4. '.hidden' → logprob: -14.126933097839355
    5. '_hidden' → logprob: -16.001934051513672
    6. ' ' → logprob: -16.501934051513672
    7. 'hide' → logprob: -17.126934051513672
    8. 'Hidden' → logprob: -17.251934051513672
    9. 'h' → logprob: -17.876934051513672
    10. ' ' → logprob: -17.939434051513672

Token 408: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.009855606593191624
    2. 'card' → logprob: -4.6348557472229
    3. 'Card' → logprob: -9.509855270385742
    4. '_' → logprob: -11.134855270385742
    5. ' card' → logprob: -12.884855270385742
    6. '_CARD' → logprob: -13.384855270385742
    7. '
' → logprob: -13.384855270385742
    8. '	card' → logprob: -13.634855270385742
    9. '_cards' → logprob: -14.259855270385742
    10. '   ' → logprob: -14.634855270385742

Token 409: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12905070185661316
    2. '
' → logprob: -2.3790507316589355
    3. '<|end|>' → logprob: -3.6290507316589355
    4. '    
' → logprob: -7.3790507316589355
    5. 'def' → logprob: -7.3790507316589355
    6. '  
' → logprob: -8.754050254821777
    7. '<|end|>' → logprob: -8.754050254821777
    8. ' 
' → logprob: -9.379050254821777
    9. ' ' → logprob: -9.629050254821777
    10. '  ' → logprob: -9.754050254821777

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05624078959226608
    2. '
' → logprob: -3.4312407970428467
    3. ' 
' → logprob: -4.556240558624268
    4. '    
' → logprob: -5.931240558624268
    5. ' ' → logprob: -6.056240558624268
    6. '  
' → logprob: -6.056240558624268
    7. ' def' → logprob: -6.681240558624268
    8. 'def' → logprob: -7.181240558624268
    9. '[' → logprob: -7.556240558624268
    10. '  ' → logprob: -8.056241035461426

Token 411: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.166764035820961
    2. '   ' → logprob: -1.9167640209197998
    3. ' def' → logprob: -5.041764259338379
    4. ' ' → logprob: -10.791764259338379
    5. '	def' → logprob: -11.166764259338379
    6. '
' → logprob: -11.916764259338379
    7. '    
' → logprob: -12.291764259338379
    8. '  ' → logprob: -12.666764259338379
    9. '@property' → logprob: -13.291764259338379
    10. '    ' → logprob: -13.416764259338379

Token 412: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.5172285437583923
    2. 'cards' → logprob: -1.142228603363037
    3. 'def' → logprob: -2.767228603363037
    4. ' def' → logprob: -3.892228603363037
    5. '   ' → logprob: -8.017228126525879
    6. '
' → logprob: -8.017228126525879
    7. '_cards' → logprob: -8.392228126525879
    8. '.cards' → logprob: -8.642228126525879
    9. ' ' → logprob: -9.017228126525879
    10. '(cards' → logprob: -9.829728126525879

Token 413: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9862216504407115e-05
    2. '(' → logprob: -11.000020027160645
    3. 'self' → logprob: -13.375020027160645
    4. ' (' → logprob: -14.000020027160645
    5. '()' → logprob: -14.750020027160645
    6. ')' → logprob: -16.375019073486328
    7. '(
' → logprob: -16.750019073486328
    8. '   ' → logprob: -17.375019073486328
    9. '(s' → logprob: -17.375019073486328
    10. ' ' → logprob: -17.875019073486328

Token 414: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017076305812224746
    2. '(self' → logprob: -9.125170707702637
    3. 'self' → logprob: -10.375170707702637
    4. ' )' → logprob: -11.000170707702637
    5. '()' → logprob: -11.375170707702637
    6. ' ' → logprob: -13.875170707702637
    7. ')(' → logprob: -14.500170707702637
    8. '   ' → logprob: -15.125170707702637
    9. '())' → logprob: -15.750170707702637
    10. '(' → logprob: -16.000171661376953

Token 415: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.22071097791194916
    2. ' ->' → logprob: -1.7207109928131104
    3. ')' → logprob: -3.9707109928131104
    4. '(self' → logprob: -8.845710754394531
    5. 'self' → logprob: -10.220710754394531
    6. '   ' → logprob: -10.595710754394531
    7. ')->' → logprob: -10.845710754394531
    8. '       ' → logprob: -11.470710754394531
    9. '```' → logprob: -11.845710754394531
    10. '()' → logprob: -12.095710754394531

Token 416: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.5782219767570496
    2. ' List' → logprob: -0.8282219767570496
    3. '[List' → logprob: -6.328221797943115
    4. ' list' → logprob: -7.953221797943115
    5. ' [' → logprob: -9.328222274780273
    6. '[' → logprob: -10.203222274780273
    7. ' ' → logprob: -12.078222274780273
    8. 'list' → logprob: -12.203222274780273
    9. '[]' → logprob: -13.828222274780273
    10. '   ' → logprob: -13.828222274780273

Token 417: '[' (ID: 58)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.10905477404594421
    2. '[' → logprob: -2.3590548038482666
    3. '(self' → logprob: -5.1090545654296875
    4. '<Card' → logprob: -6.8590545654296875
    5. '(Card' → logprob: -7.2340545654296875
    6. '([
' → logprob: -8.359054565429688
    7. 'Card' → logprob: -8.734054565429688
    8. '(
' → logprob: -9.109054565429688
    9. ' ([' → logprob: -9.359054565429688
    10. '[self' → logprob: -9.359054565429688

Token 418: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -7.896309739408025e-07
    2. ' Card' → logprob: -14.625000953674316
    3. '[' → logprob: -15.375000953674316
    4. '(Card' → logprob: -16.875
    5. '<Card' → logprob: -17.875
    6. 'card' → logprob: -18.5
    7. 'Car' → logprob: -20.875
    8. 'Optional' → logprob: -21.625
    9. ']' → logprob: -21.625
    10. 'Cards' → logprob: -22.0

Token 419: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002644351334311068
    2. '):
' → logprob: -8.875264167785645
    3. ']:
' → logprob: -10.125264167785645
    4. '():
' → logprob: -10.375264167785645
    5. 'self' → logprob: -10.750264167785645
    6. '       ' → logprob: -11.125264167785645
    7. '](' → logprob: -12.375264167785645
    8. '   ' → logprob: -12.500264167785645
    9. ']:' → logprob: -12.875264167785645
    10. '):' → logprob: -13.250264167785645

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021538054570555687
    2. '[' → logprob: -4.271538257598877
    3. ' [' → logprob: -5.896538257598877
    4. ' if' → logprob: -6.271538257598877
    5. 'return' → logprob: -6.521538257598877
    6. ' return' → logprob: -7.021538257598877
    7. 'if' → logprob: -8.896537780761719
    8. '[]' → logprob: -9.271537780761719
    9. '```' → logprob: -10.146537780761719
    10. '([' → logprob: -10.396537780761719

Token 421: ' if' (ID: 538)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.039793610572815
    2. '([' → logprob: -1.289793610572815
    3. '       ' → logprob: -1.664793610572815
    4. ' [' → logprob: -2.6647934913635254
    5. '[c' → logprob: -2.6647934913635254
    6. 'return' → logprob: -4.414793491363525
    7. '[self' → logprob: -5.414793491363525
    8. '[v' → logprob: -5.789793491363525
    9. '[result' → logprob: -5.914793491363525
    10. '   ' → logprob: -6.039793491363525

Token 422: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931713223457336
    2. 'self' → logprob: -0.6931713223457336
    3. '       ' → logprob: -11.943171501159668
    4. '[self' → logprob: -12.068171501159668
    5. '(self' → logprob: -12.193171501159668
    6. '	self' → logprob: -12.318171501159668
    7. '   ' → logprob: -14.068171501159668
    8. '           ' → logprob: -14.193171501159668
    9. ' ' → logprob: -15.693171501159668
    10. '        ' → logprob: -16.06817054748535

Token 423: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.069664333248511e-05
    2. '_hidden' → logprob: -10.875020980834961
    3. '.' → logprob: -14.500020980834961
    4. '_' → logprob: -14.625020980834961
    5. ']._' → logprob: -15.875020980834961
    6. '	' → logprob: -16.37502098083496
    7. '   ' → logprob: -16.50002098083496
    8. '
' → logprob: -16.75002098083496
    9. '->_' → logprob: -16.75002098083496
    10. ' .' → logprob: -16.87502098083496

Token 424: 'hidden' (ID: 13170)
  Prédit: 'hidden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hidden' → logprob: -0.006852477788925171
    2. 'visible' → logprob: -5.381852626800537
    3. '_hidden' → logprob: -6.131852626800537
    4. ' hidden' → logprob: -10.756852149963379
    5. '_visible' → logprob: -11.006852149963379
    6. '.hidden' → logprob: -11.256852149963379
    7. '(hidden' → logprob: -13.381852149963379
    8. '```' → logprob: -14.256852149963379
    9. '
' → logprob: -14.381852149963379
    10. '-hidden' → logprob: -14.506852149963379

Token 425: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0009242036612704396
    2. 'is' → logprob: -7.000924110412598
    3. ':' → logprob: -11.500924110412598
    4. ' ' → logprob: -13.625924110412598
    5. '<|end|>' → logprob: -14.000924110412598
    6. ':
' → logprob: -14.750924110412598
    7. '	is' → logprob: -15.625924110412598
    8. ')' → logprob: -17.125925064086914
    9. '[' → logprob: -17.500925064086914
    10. '<|end|>' → logprob: -18.000925064086914

Token 426: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3972703814506531
    2. ' None' → logprob: -1.1472704410552979
    3. ' not' → logprob: -5.147270202636719
    4. 'not' → logprob: -5.397270202636719
    5. '(None' → logprob: -14.772270202636719
    6. '=None' → logprob: -15.397270202636719
    7. 'Not' → logprob: -15.397270202636719
    8. 'none' → logprob: -15.647270202636719
    9. '_None' → logprob: -15.772270202636719
    10. ' ' → logprob: -16.27227020263672

Token 427: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03995788097381592
    2. ':' → logprob: -3.2899580001831055
    3. '           ' → logprob: -7.0399580001831055
    4. '       ' → logprob: -7.1649580001831055
    5. ':return' → logprob: -9.289958000183105
    6. ' or' → logprob: -9.914958000183105
    7. ':
' → logprob: -10.164958000183105
    8. '):
' → logprob: -10.289958000183105
    9. ',' → logprob: -11.289958000183105
    10. ' :
' → logprob: -11.414958000183105

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36518773436546326
    2. 'return' → logprob: -1.3651877641677856
    3. '[' → logprob: -3.490187644958496
    4. ' return' → logprob: -4.365187644958496
    5. ' [' → logprob: -4.990187644958496
    6. '       ' → logprob: -7.865187644958496
    7. '[
' → logprob: -9.865187644958496
    8. '[self' → logprob: -10.490187644958496
    9. '
' → logprob: -10.615187644958496
    10. '   ' → logprob: -10.740187644958496

Token 429: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38870546221733093
    2. '[self' → logprob: -2.0137054920196533
    3. '[' → logprob: -2.5137054920196533
    4. ' [' → logprob: -2.7637054920196533
    5. '           ' → logprob: -3.2637054920196533
    6. ' return' → logprob: -5.263705253601074
    7. '               ' → logprob: -8.263705253601074
    8. '       ' → logprob: -9.013705253601074
    9. '{return' → logprob: -9.388705253601074
    10. '[c' → logprob: -9.888705253601074

Token 430: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -9.436450636712834e-05
    2. ' [' → logprob: -9.750094413757324
    3. '[' → logprob: -10.250094413757324
    4. '[this' → logprob: -14.750094413757324
    5. '[C' → logprob: -16.750093460083008
    6. '[int' → logprob: -18.000093460083008
    7. '[v' → logprob: -18.000093460083008
    8. '[List' → logprob: -18.250093460083008
    9. '   ' → logprob: -18.375093460083008
    10. '[f' → logprob: -18.625093460083008

Token 431: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.554343366995454e-05
    2. ' self' → logprob: -9.375085830688477
    3. '       ' → logprob: -15.500085830688477
    4. '(self' → logprob: -15.500085830688477
    5. '           ' → logprob: -16.125085830688477
    6. '[self' → logprob: -17.250085830688477
    7. '	self' → logprob: -17.250085830688477
    8. '   ' → logprob: -18.000085830688477
    9. '
' → logprob: -18.000085830688477
    10. '         ' → logprob: -19.000085830688477

Token 432: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.7755875129951164e-05
    2. '_visible' → logprob: -10.00004768371582
    3. '_' → logprob: -13.62504768371582
    4. '.' → logprob: -15.12504768371582
    5. '_.' → logprob: -15.25004768371582
    6. ']._' → logprob: -15.75004768371582
    7. '.visible' → logprob: -16.50004768371582
    8. '_hidden' → logprob: -16.75004768371582
    9. '_self' → logprob: -17.25004768371582
    10. ' .' → logprob: -17.50004768371582

Token 433: 'visible' (ID: 20450)
  Prédit: 'visible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visible' → logprob: -1.1994775377388578e-05
    2. '_visible' → logprob: -11.500012397766113
    3. '.visible' → logprob: -13.500012397766113
    4. ' visible' → logprob: -15.250012397766113
    5. 'hidden' → logprob: -16.000011444091797
    6. '_VISIBLE' → logprob: -18.500011444091797
    7. '-visible' → logprob: -18.750011444091797
    8. 'VISIBLE' → logprob: -19.125011444091797
    9. 'visual' → logprob: -21.000011444091797
    10. 'vis' → logprob: -21.250011444091797

Token 434: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010170908644795418
    2. ']
' → logprob: -7.001017093658447
    3. ' ]' → logprob: -9.251016616821289
    4. ']

' → logprob: -11.751016616821289
    5. ',' → logprob: -13.751016616821289
    6. ' ]
' → logprob: -15.626016616821289
    7. '   ' → logprob: -15.751016616821289
    8. '<|end|>' → logprob: -16.37601661682129
    9. ']
' → logprob: -17.00101661682129
    10. '()]' → logprob: -17.25101661682129

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006085559725761414
    2. 'else' → logprob: -8.000608444213867
    3. 'return' → logprob: -8.375608444213867
    4. ' else' → logprob: -10.625608444213867
    5. '	' → logprob: -11.500608444213867
    6. '[]' → logprob: -13.125608444213867
    7. ' return' → logprob: -13.375608444213867
    8. '   ' → logprob: -13.875608444213867
    9. '[' → logprob: -13.875608444213867
    10. '
' → logprob: -14.125608444213867

Token 436: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15586689114570618
    2. ' [' → logprob: -2.655866861343384
    3. '       ' → logprob: -3.405866861343384
    4. '[self' → logprob: -3.780866861343384
    5. 'return' (adapté à ' return') → logprob: -4.655867099761963
    6. ' return' → logprob: -5.780867099761963
    7. ' else' → logprob: -5.905867099761963
    8. 'else' → logprob: -6.530867099761963
    9. ',' → logprob: -7.405867099761963
    10. '[
' → logprob: -8.030866622924805

Token 437: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.006746751256287098
    2. ' [' → logprob: -5.006746768951416
    3. '[' → logprob: -10.381746292114258
    4. '[this' → logprob: -15.631746292114258
    5. '   ' → logprob: -16.256746292114258
    6. ' ' → logprob: -17.506746292114258
    7. 'self' → logprob: -17.756746292114258
    8. '       ' → logprob: -18.006746292114258
    9. '[
' → logprob: -18.506746292114258
    10. ' ' → logprob: -18.631746292114258

Token 438: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026169343618676066
    2. ' self' → logprob: -8.250261306762695
    3. '(self' → logprob: -15.250261306762695
    4. '	self' → logprob: -16.000261306762695
    5. '[self' → logprob: -17.500261306762695
    6. '   ' → logprob: -18.000261306762695
    7. '*self' → logprob: -18.000261306762695
    8. 'Card' → logprob: -18.125261306762695
    9. '=self' → logprob: -18.875261306762695
    10. 'card' → logprob: -18.875261306762695

Token 439: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.006730526220053434
    2. '_visible' → logprob: -5.006730556488037
    3. '_' → logprob: -12.506730079650879
    4. '.visible' → logprob: -12.756730079650879
    5. '_hidden' → logprob: -13.506730079650879
    6. '.' → logprob: -13.631730079650879
    7. '_.' → logprob: -14.006730079650879
    8. '_VISIBLE' → logprob: -14.006730079650879
    9. ']._' → logprob: -14.131730079650879
    10. ' _' → logprob: -14.131730079650879

Token 440: 'visible' (ID: 20450)
  Prédit: 'visible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visible' → logprob: -4.215330409351736e-05
    2. '_visible' → logprob: -10.375041961669922
    3. 'hidden' → logprob: -12.125041961669922
    4. '.visible' → logprob: -12.250041961669922
    5. ' visible' → logprob: -14.500041961669922
    6. 'VISIBLE' → logprob: -16.750041961669922
    7. '_VISIBLE' → logprob: -16.750041961669922
    8. '-visible' → logprob: -17.250041961669922
    9. '_hidden' → logprob: -19.750041961669922
    10. '
' → logprob: -19.875041961669922

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.843177233240567e-05
    2. ' ,' → logprob: -11.500018119812012
    3. ',self' → logprob: -12.000018119812012
    4. ',
' → logprob: -13.250018119812012
    5. ']' → logprob: -16.000019073486328
    6. '   ' → logprob: -16.375019073486328
    7. '       ' → logprob: -16.875019073486328
    8. 'self' → logprob: -17.500019073486328
    9. '‌,' → logprob: -18.375019073486328
    10. ')' → logprob: -18.875019073486328

Token 442: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38687393069267273
    2. 'self' → logprob: -1.1368739604949951
    3. '(self' → logprob: -14.011874198913574
    4. ' ' → logprob: -14.261874198913574
    5. '	self' → logprob: -15.011874198913574
    6. '       ' → logprob: -15.136874198913574
    7. ' _' → logprob: -15.136874198913574
    8. ' ' → logprob: -15.636874198913574
    9. '        ' → logprob: -16.386873245239258
    10. '*self' → logprob: -16.386873245239258

Token 443: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.995397365652025e-05
    2. '_hidden' → logprob: -9.375089645385742
    3. '_' → logprob: -12.750089645385742
    4. '.' → logprob: -14.000089645385742
    5. ']._' → logprob: -14.250089645385742
    6. '_.' → logprob: -15.500089645385742
    7. '."_' → logprob: -16.250089645385742
    8. ')._' → logprob: -16.375089645385742
    9. '.hidden' → logprob: -16.500089645385742
    10. '->_' → logprob: -17.250089645385742

Token 444: 'hidden' (ID: 13170)
  Prédit: 'hidden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hidden' → logprob: -1.1994775377388578e-05
    2. '_hidden' → logprob: -11.625012397766113
    3. '.hidden' → logprob: -13.250012397766113
    4. ' hidden' → logprob: -13.875012397766113
    5. '(hidden' → logprob: -15.500012397766113
    6. '-hidden' → logprob: -17.500011444091797
    7. 'visible' → logprob: -17.875011444091797
    8. ':hidden' → logprob: -19.875011444091797
    9. 'Hidden' → logprob: -20.000011444091797
    10. '.Hidden' → logprob: -22.375011444091797

Token 445: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.179569077678025e-05
    2. ' ]' → logprob: -10.250041961669922
    3. ']
' → logprob: -12.250041961669922
    4. '   ' → logprob: -14.750041961669922
    5. ']

' → logprob: -15.000041961669922
    6. '()]' → logprob: -15.125041961669922
    7. '<|end|>' → logprob: -15.625041961669922
    8. ')]' → logprob: -16.125041961669922
    9. '}' → logprob: -16.375041961669922
    10. ')' → logprob: -16.750041961669922

Token 446: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01614651083946228
    2. '<|end|>' → logprob: -4.266146659851074
    3. 'from' → logprob: -6.766146659851074
    4. '
' → logprob: -8.016146659851074
    5. '   ' → logprob: -8.391146659851074
    6. '```' → logprob: -9.391146659851074
    7. ' class' → logprob: -9.391146659851074
    8. '<|end|>' → logprob: -9.766146659851074
    9. 'def' → logprob: -11.766146659851074
    10. ' ' → logprob: -12.141146659851074

Token 447: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05662790685892105
    2. '<|end|>' → logprob: -2.9316279888153076
    3. 'def' (adapté à ' def') → logprob: -7.5566277503967285
    4. 'from' → logprob: -7.6816277503967285
    5. '
' → logprob: -8.056628227233887
    6. '<|end|>' → logprob: -8.681628227233887
    7. ' class' → logprob: -9.181628227233887
    8. '   ' → logprob: -9.556628227233887
    9. '```' → logprob: -9.931628227233887
    10. ' ' → logprob: -11.181628227233887

Token 448: ' visible' (ID: 15263)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4167221784591675
    2. ' __' → logprob: -2.166722297668457
    3. 'has' → logprob: -2.916722297668457
    4. 'visible' → logprob: -3.041722297668457
    5. 'total' → logprob: -3.666722297668457
    6. 'is' → logprob: -3.666722297668457
    7. ' visible' → logprob: -3.916722297668457
    8. ' has' → logprob: -4.041722297668457
    9. 'hidden' → logprob: -4.166722297668457
    10. ' total' → logprob: -5.291722297668457

Token 449: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.10343480110168457
    2. '_cards' → logprob: -2.3534348011016846
    3. '_value' → logprob: -5.8534345626831055
    4. '_' → logprob: -8.478434562683105
    5. '()' → logprob: -9.728434562683105
    6. 'card' → logprob: -10.103434562683105
    7. '```' → logprob: -11.853434562683105
    8. '_hand' → logprob: -12.478434562683105
    9. '_score' → logprob: -12.728434562683105
    10. 'cards' → logprob: -12.853434562683105

Token 450: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016110755677800626
    2. '(' → logprob: -8.750161170959473
    3. 'self' → logprob: -13.500161170959473
    4. 's' → logprob: -14.750161170959473
    5. '(
' → logprob: -14.750161170959473
    6. '(s' → logprob: -15.875161170959473
    7. ' (' → logprob: -16.000160217285156
    8. '()' → logprob: -16.250160217285156
    9. '   ' → logprob: -16.500160217285156
    10. '(

' → logprob: -16.875160217285156

Token 451: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004158652853220701
    2. '):' → logprob: -6.2541584968566895
    3. 'self' → logprob: -6.8791584968566895
    4. '):
' → logprob: -7.2541584968566895
    5. '(self' → logprob: -7.7541584968566895
    6. ')->' → logprob: -10.129158973693848
    7. '   ' → logprob: -11.504158973693848
    8. ' )' → logprob: -12.754158973693848
    9. '()' → logprob: -13.379158973693848
    10. '       ' → logprob: -13.504158973693848

Token 452: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06842309981584549
    2. '->' → logprob: -3.56842303276062
    3. ')' → logprob: -4.068423271179199
    4. ' ->' → logprob: -4.443423271179199
    5. '(' → logprob: -5.568423271179199
    6. 'self' → logprob: -5.818423271179199
    7. ':' → logprob: -6.693423271179199
    8. '()->' → logprob: -8.4434232711792
    9. '   ' → logprob: -8.5684232711792
    10. ')->' → logprob: -8.6934232711792

Token 453: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.005234594456851482
    2. ' Card' → logprob: -5.255234718322754
    3. 'Optional' → logprob: -14.630234718322754
    4. ' ' → logprob: -15.755234718322754
    5. '   ' → logprob: -17.130233764648438
    6. 'self' → logprob: -17.255233764648438
    7. '  ' → logprob: -17.630233764648438
    8. ' card' → logprob: -17.880233764648438
    9. '<Card' → logprob: -17.880233764648438
    10. '(Card' → logprob: -17.880233764648438

Token 454: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.536369264125824
    2. '():' → logprob: -1.4113693237304688
    3. '(self' → logprob: -2.1613693237304688
    4. ':' → logprob: -3.6613693237304688
    5. '()' → logprob: -4.411369323730469
    6. ':
' → logprob: -4.661369323730469
    7. '       ' → logprob: -5.161369323730469
    8. '(' → logprob: -6.786369323730469
    9. '):
' → logprob: -7.161369323730469
    10. '   ' → logprob: -7.411369323730469

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7640594840049744
    2. 'return' → logprob: -1.0140595436096191
    3. ' return' → logprob: -1.7640595436096191
    4. '	return' → logprob: -9.514059066772461
    5. '   ' → logprob: -10.639059066772461
    6. ':return' → logprob: -10.889059066772461
    7. '{return' → logprob: -12.139059066772461
    8. '	' → logprob: -12.889059066772461
    9. 'self' → logprob: -13.264059066772461
    10. '        
' → logprob: -13.264059066772461

Token 456: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015053401002660394
    2. ' return' → logprob: -6.751505374908447
    3. '       ' → logprob: -8.001504898071289
    4. '	return' → logprob: -16.12650489807129
    5. '{return' → logprob: -17.00150489807129
    6. '```' → logprob: -18.37650489807129
    7. ':return' → logprob: -19.37650489807129
    8. '   ' → logprob: -19.50150489807129
    9. 'self' → logprob: -20.25150489807129
    10. 'Return' → logprob: -20.50150489807129

Token 457: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1269282102584839
    2. ' self' → logprob: -2.1269283294677734
    3. '	self' → logprob: -16.626928329467773
    4. '       ' → logprob: -18.126928329467773
    5. ' ' → logprob: -18.251928329467773
    6. '(self' → logprob: -18.626928329467773
    7. '   ' → logprob: -20.001928329467773
    8. '[self' → logprob: -20.751928329467773
    9. ' ' → logprob: -21.251928329467773
    10. '_self' → logprob: -22.126928329467773

Token 458: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.2948405128554441e-05
    2. '_visible' → logprob: -12.00001335144043
    3. '.' → logprob: -12.75001335144043
    4. '_' → logprob: -13.12501335144043
    5. '_card' → logprob: -14.62501335144043
    6. ' .' → logprob: -15.00001335144043
    7. '.visible' → logprob: -16.12501335144043
    8. ' _' → logprob: -16.25001335144043
    9. '_hand' → logprob: -16.25001335144043
    10. '_cards' → logprob: -16.25001335144043

Token 459: 'visible' (ID: 20450)
  Prédit: 'visible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visible' → logprob: -4.320199877838604e-07
    2. '_visible' → logprob: -14.875
    3. '.visible' → logprob: -16.875
    4. ' visible' → logprob: -17.25
    5. 'VISIBLE' → logprob: -19.875
    6. '-visible' → logprob: -20.25
    7. '_VISIBLE' → logprob: -20.5
    8. 'visi' → logprob: -20.625
    9. 'visual' → logprob: -20.75
    10. 'hidden' → logprob: -20.75

Token 460: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.598092684522271e-05
    2. '<|end|>' → logprob: -10.500056266784668
    3. ' class' → logprob: -11.125056266784668
    4. 'from' → logprob: -11.875056266784668
    5. 'def' → logprob: -13.125056266784668
    6. '```' → logprob: -13.750056266784668
    7. '<|end|>' → logprob: -14.000056266784668
    8. '
' → logprob: -14.125056266784668
    9. '"class' → logprob: -15.000056266784668
    10. 'import' → logprob: -15.125056266784668

Token 462: ' Probability' (ID: 194171)
  Prédit: ' Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Game' → logprob: -0.8223293423652649
    2. 'Game' → logprob: -0.9473293423652649
    3. ' Blackjack' → logprob: -2.82232928276062
    4. 'Strategy' → logprob: -3.94732928276062
    5. 'Dealer' → logprob: -4.447329521179199
    6. 'Black' → logprob: -4.447329521179199
    7. ' Strategy' → logprob: -4.697329521179199
    8. ' Black' → logprob: -5.072329521179199
    9. 'Bet' → logprob: -5.322329521179199
    10. ' Dealer' → logprob: -5.322329521179199

Token 463: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.15950757265090942
    2. 'Estimator' → logprob: -2.0345075130462646
    3. ':' → logprob: -4.534507751464844
    4. 'Analyzer' → logprob: -6.409507751464844
    5. '(' → logprob: -6.659507751464844
    6. 'Computer' → logprob: -7.284507751464844
    7. 'Predict' → logprob: -7.409507751464844
    8. 'Evaluator' → logprob: -7.659507751464844
    9. 'Distribution' → logprob: -8.159507751464844
    10. 'Model' → logprob: -8.784507751464844

Token 464: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6970470547676086
    2. ':' → logprob: -0.6970470547676086
    3. ':
' → logprob: -5.697047233581543
    4. '(Abstract' → logprob: -7.572047233581543
    5. ' :' → logprob: -11.072047233581543
    6. ':

' → logprob: -13.697047233581543
    7. '(
' → logprob: -14.322047233581543
    8. ' (' → logprob: -14.322047233581543
    9. '():' → logprob: -14.322047233581543
    10. '```' → logprob: -14.697047233581543

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007678911089897156
    2. ' def' → logprob: -4.882678985595703
    3. 'def' → logprob: -9.757678985595703
    4. '    
' → logprob: -12.382678985595703
    5. '
' → logprob: -12.757678985595703
    6. '   ' → logprob: -12.757678985595703
    7. '	def' → logprob: -13.007678985595703
    8. '    ' → logprob: -14.382678985595703
    9. '   ' → logprob: -14.632678985595703
    10. ' indentation' → logprob: -14.757678985595703

Token 466: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.00879372376948595
    2. 'def' (adapté à ' def') → logprob: -4.758793830871582
    3. '   ' → logprob: -8.633793830871582
    4. ' @' → logprob: -15.383793830871582
    5. ' ' → logprob: -15.633793830871582
    6. '	def' → logprob: -15.633793830871582
    7. 'class' → logprob: -15.758793830871582
    8. ' __' → logprob: -16.008792877197266
    9. '    ' → logprob: -16.258792877197266
    10. 'from' → logprob: -16.383792877197266

Token 467: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1802665740251541
    2. ' def' → logprob: -1.8052666187286377
    3. '__' → logprob: -7.805266380310059
    4. 'def' → logprob: -9.430266380310059
    5. 'staticmethod' → logprob: -11.555266380310059
    6. ' init' → logprob: -11.805266380310059
    7. '_' → logprob: -12.805266380310059
    8. '_init' → logprob: -13.055266380310059
    9. ' static' → logprob: -13.180266380310059
    10. ' ___' → logprob: -13.305266380310059

Token 468: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.5027299822540954e-05
    2. 'nit' → logprob: -9.875055313110352
    3. ' init' → logprob: -13.250055313110352
    4. 'def' → logprob: -14.000055313110352
    5. 'in' → logprob: -15.875055313110352
    6. 'call' → logprob: -16.00005531311035
    7. 'iter' → logprob: -16.00005531311035
    8. 'name' → logprob: -16.37505531311035
    9. 'it' → logprob: -16.50005531311035
    10. 'i' → logprob: -16.75005531311035

Token 469: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011789722368121147
    2. ' (' → logprob: -5.136789798736572
    3. '(' → logprob: -5.511789798736572
    4. '__(' → logprob: -6.386789798736572
    5. '()' → logprob: -9.761789321899414
    6. 'self' → logprob: -11.136789321899414
    7. '(
' → logprob: -11.761789321899414
    8. ' ' → logprob: -11.886789321899414
    9. '_(' → logprob: -12.136789321899414
    10. ')(' → logprob: -12.136789321899414

Token 470: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.0590548703912646e-05
    2. ' self' → logprob: -10.625030517578125
    3. ')' → logprob: -12.125030517578125
    4. '       ' → logprob: -15.250030517578125
    5. '
' → logprob: -15.625030517578125
    6. ',' → logprob: -16.125030517578125
    7. 'deck' → logprob: -16.250030517578125
    8. '   ' → logprob: -16.500030517578125
    9. '(self' → logprob: -16.500030517578125
    10. '):
' → logprob: -17.125030517578125

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012320445966906846
    2. ' ,' → logprob: -9.875123023986816
    3. '):' → logprob: -10.375123023986816
    4. ')' → logprob: -11.250123023986816
    5. 'self' → logprob: -11.250123023986816
    6. ',
' → logprob: -11.750123023986816
    7. '):
' → logprob: -13.000123023986816
    8. '__,' → logprob: -13.625123023986816
    9. '   ' → logprob: -14.875123023986816
    10. ' ' → logprob: -15.000123023986816

Token 472: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.23141475021839142
    2. 'player' → logprob: -2.106414794921875
    3. ' deck' → logprob: -3.356414794921875
    4. 'op' → logprob: -3.356414794921875
    5. ' player' → logprob: -4.981414794921875
    6. ' opponent' → logprob: -5.481414794921875
    7. ')' → logprob: -7.106414794921875
    8. 'available' → logprob: -7.231414794921875
    9. 'hand' → logprob: -7.606414794921875
    10. 'dealer' → logprob: -7.606414794921875

Token 473: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.650518920039758e-06
    2. '):' → logprob: -13.000003814697266
    3. ' :' → logprob: -14.125003814697266
    4. ',' → logprob: -15.125003814697266
    5. ')' → logprob: -15.375003814697266
    6. '_:' → logprob: -17.000003814697266
    7. ' ):' → logprob: -17.500003814697266
    8. '   ' → logprob: -17.500003814697266
    9. '=' → logprob: -17.875003814697266
    10. '  ' → logprob: -18.250003814697266

Token 474: ' Deck' (ID: 41948)
  Prédit: 'Deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Deck' → logprob: -0.0380416102707386
    2. ' Deck' → logprob: -3.288041591644287
    3. ' deck' → logprob: -16.788042068481445
    4. 'deck' → logprob: -17.663042068481445
    5. ')' → logprob: -18.413042068481445
    6. 'Deque' → logprob: -19.413042068481445
    7. ' ' → logprob: -19.913042068481445
    8. '   ' → logprob: -20.038042068481445
    9. 'Desk' → logprob: -20.288042068481445
    10. ' ' → logprob: -20.538042068481445

Token 475: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6338716149330139
    2. '):' → logprob: -0.7588716149330139
    3. ')' → logprob: -6.758871555328369
    4. '):
' → logprob: -9.758872032165527
    5. ' ):' → logprob: -10.133872032165527
    6. ' ,' → logprob: -12.258872032165527
    7. '   ' → logprob: -12.758872032165527
    8. ' ' → logprob: -13.258872032165527
    9. ':' → logprob: -13.633872032165527
    10. '),' → logprob: -13.758872032165527

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001777161261998117
    2. ',' → logprob: -6.501777172088623
    3. '<|end|>' → logprob: -9.126776695251465
    4. '   ' → logprob: -10.376776695251465
    5. ')' → logprob: -10.501776695251465
    6. ':' → logprob: -10.751776695251465
    7. ' self' → logprob: -10.751776695251465
    8. 'self' → logprob: -10.751776695251465
    9. '.' → logprob: -11.001776695251465
    10. ' and' → logprob: -11.751776695251465

Token 477: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09492537379264832
    2. '       ' → logprob: -3.0949254035949707
    3. ' self' → logprob: -3.0949254035949707
    4. '	self' → logprob: -13.469924926757812
    5. '   ' → logprob: -14.344924926757812
    6. ' ' → logprob: -15.469924926757812
    7. '(self' → logprob: -16.594924926757812
    8. '      ' → logprob: -17.344924926757812
    9. '[self' → logprob: -17.594924926757812
    10. 'deck' → logprob: -18.344924926757812

Token 478: '.deck' (ID: 191464)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.3134801685810089
    2. '.deck' → logprob: -1.3134801387786865
    3. '.' → logprob: -9.188480377197266
    4. ' .' → logprob: -9.938480377197266
    5. '   ' → logprob: -10.063480377197266
    6. 'deck' → logprob: -11.938480377197266
    7. '_de' → logprob: -12.188480377197266
    8. '(deck' → logprob: -12.688480377197266
    9. '.de' → logprob: -12.813480377197266
    10. '       ' → logprob: -13.313480377197266

Token 479: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234281420707703
    2. '=' → logprob: -0.8984281420707703
    3. '_cards' → logprob: -9.148427963256836
    4. '   ' → logprob: -9.648427963256836
    5. '_' → logprob: -10.523427963256836
    6. '.' → logprob: -10.773427963256836
    7. ' ' → logprob: -10.898427963256836
    8. '       ' → logprob: -11.023427963256836
    9. '_available' → logprob: -11.273427963256836
    10. '._' → logprob: -12.023427963256836

Token 480: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.5759427547454834
    2. ' deck' → logprob: -0.8259427547454834
    3. '(deck' → logprob: -12.825942993164062
    4. ' ' → logprob: -15.450942993164062
    5. '.deck' → logprob: -15.950942993164062
    6. 'de' → logprob: -16.200942993164062
    7. 'Deck' → logprob: -16.575942993164062
    8. '	de' → logprob: -16.825942993164062
    9. 'deque' → logprob: -17.700942993164062
    10. '   ' → logprob: -18.325942993164062

Token 481: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5642267465591431
    2. '   ' → logprob: -0.9392267465591431
    3. '<|end|>' → logprob: -3.3142266273498535
    4. '    
' → logprob: -6.0642266273498535
    5. '<|end|>' → logprob: -6.9392266273498535
    6. ' def' → logprob: -8.439227104187012
    7. 'def' → logprob: -8.689227104187012
    8. ' 
' → logprob: -9.689227104187012
    9. '  
' → logprob: -10.314227104187012
    10. '	def' → logprob: -10.439227104187012

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34509149193763733
    2. '
' → logprob: -1.345091462135315
    3. '    
' → logprob: -4.220091342926025
    4. '<|end|>' → logprob: -4.470091342926025
    5. 'def' → logprob: -6.220091342926025
    6. ' def' → logprob: -6.470091342926025
    7. '<|end|>' → logprob: -7.220091342926025
    8. ' 
' → logprob: -7.720091342926025
    9. ' ' → logprob: -9.220091819763184
    10. ',' → logprob: -9.595091819763184

Token 483: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2534577548503876
    2. '   ' → logprob: -2.00345778465271
    3. ' def' → logprob: -2.62845778465271
    4. '
' → logprob: -4.253457546234131
    5. '    
' → logprob: -6.128457546234131
    6. '	def' → logprob: -8.253458023071289
    7. ' 
' → logprob: -9.878458023071289
    8. '<|end|>' → logprob: -10.128458023071289
    9. '<|end|>' → logprob: -11.253458023071289
    10. ',' → logprob: -11.253458023071289

Token 484: ' probability' (ID: 34933)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9685100317001343
    2. ' possible' → logprob: -1.8435100317001343
    3. ' calculate' → logprob: -2.093510150909424
    4. 'calculate' → logprob: -2.468510150909424
    5. 'prob' → logprob: -2.593510150909424
    6. ' probability' → logprob: -2.843510150909424
    7. 'def' → logprob: -3.468510150909424
    8. 'available' → logprob: -3.968510150909424
    9. ' def' → logprob: -4.218510150909424
    10. ' available' → logprob: -4.343510150909424

Token 485: '_sum' (ID: 29859)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20435921847820282
    2. '(' → logprob: -1.9543591737747192
    3. '_of' → logprob: -3.204359292984009
    4. '_for' → logprob: -6.95435905456543
    5. '_' → logprob: -7.95435905456543
    6. '_to' → logprob: -8.32935905456543
    7. '   ' → logprob: -8.57935905456543
    8. '_cards' → logprob: -8.95435905456543
    9. '_(' → logprob: -9.07935905456543
    10. ' (' → logprob: -9.70435905456543

Token 486: '_no' (ID: 13575)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09616139531135559
    2. '_g' → logprob: -3.346161365509033
    3. '_equals' → logprob: -4.096161365509033
    4. '_ex' → logprob: -4.346161365509033
    5. '_at' → logprob: -4.346161365509033
    6. '_equal' → logprob: -5.721161365509033
    7. '(' → logprob: -5.721161365509033
    8. '_over' → logprob: -5.971161365509033
    9. '_in' → logprob: -7.346161365509033
    10. ' (' → logprob: -7.346161365509033

Token 487: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.6912847757339478
    2. 't' → logprob: -1.5662847757339478
    3. 'ex' → logprob: -1.8162847757339478
    4. '_g' → logprob: -3.191284656524658
    5. '_less' → logprob: -4.441284656524658
    6. '_b' → logprob: -4.566284656524658
    7. '_cards' → logprob: -4.566284656524658
    8. '_over' → logprob: -4.691284656524658
    9. 'greater' → logprob: -5.066284656524658
    10. '_' → logprob: -5.191284656524658

Token 488: 'ceed' (ID: 7945)
  Prédit: 'ceed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceed' → logprob: -0.07463279366493225
    2. 'ceeds' → logprob: -2.9496328830718994
    3. 'tra' → logprob: -4.44963264465332
    4. 'ceeded' → logprob: -5.69963264465332
    5. 't' → logprob: -7.32463264465332
    6. 'act' → logprob: -7.69963264465332
    7. 'tras' → logprob: -7.94963264465332
    8. '

' → logprob: -8.19963264465332
    9. 'ce' → logprob: -8.44963264465332
    10. '1' → logprob: -8.44963264465332

Token 489: '(self' (ID: 2402)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.12996622920036316
    2. '(' → logprob: -2.7549662590026855
    3. 's' → logprob: -2.8799662590026855
    4. '(self' → logprob: -6.3799662590026855
    5. 'ance' → logprob: -8.004965782165527
    6. '100' → logprob: -10.379965782165527
    7. '=' → logprob: -11.129965782165527
    8. '10' → logprob: -11.379965782165527
    9. '_' → logprob: -11.379965782165527
    10. '(
' → logprob: -11.754965782165527

Token 490: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0711158961057663
    2. ')(' → logprob: -2.9461159706115723
    3. ',' → logprob: -4.821115970611572
    4. '(' → logprob: -5.321115970611572
    5. 'self' → logprob: -6.446115970611572
    6. ')' → logprob: -8.071115493774414
    7. ' (' → logprob: -8.196115493774414
    8. ')(
' → logprob: -8.196115493774414
    9. '}(' → logprob: -8.446115493774414
    10. '   ' → logprob: -9.321115493774414

Token 491: ' base' (ID: 3611)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.3240368962287903
    2. ' max' → logprob: -2.1990368366241455
    3. 'target' → logprob: -3.0740368366241455
    4. ' threshold' → logprob: -3.0740368366241455
    5. ' limit' → logprob: -3.8240368366241455
    6. ' hand' → logprob: -4.574037075042725
    7. 'threshold' → logprob: -4.574037075042725
    8. 'max' → logprob: -4.574037075042725
    9. ' self' → logprob: -5.324037075042725
    10. ' cards' → logprob: -5.324037075042725

Token 492: '_cards' (ID: 101651)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6083212494850159
    2. '_sum' → logprob: -1.233321189880371
    3. ':' → logprob: -2.233321189880371
    4. ',' → logprob: -3.733321189880371
    5. '_cards' → logprob: -3.983321189880371
    6. '=' → logprob: -5.733321189880371
    7. '_val' → logprob: -5.858321189880371
    8. '_total' → logprob: -5.983321189880371
    9. '_hand' → logprob: -6.108321189880371
    10. 'ed' → logprob: -7.483321189880371

Token 493: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016054311767220497
    2. ',' → logprob: -4.141054153442383
    3. ' :' → logprob: -12.016054153442383
    4. ' ,' → logprob: -12.891054153442383
    5. ')' → logprob: -13.016054153442383
    6. '   ' → logprob: -13.016054153442383
    7. '```' → logprob: -13.516054153442383
    8. ',List' → logprob: -14.016054153442383
    9. '):' → logprob: -14.516054153442383
    10. '_list' → logprob: -14.891054153442383

Token 494: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.05533693730831146
    2. ' List' → logprob: -3.5553369522094727
    3. ',' → logprob: -4.805336952209473
    4. ')' → logprob: -4.930336952209473
    5. 'self' → logprob: -4.930336952209473
    6. ':' → logprob: -6.680336952209473
    7. ' self' → logprob: -8.055336952209473
    8. '   ' → logprob: -8.680336952209473
    9. '[List' → logprob: -9.305336952209473
    10. ' )' → logprob: -9.430336952209473

Token 495: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00027456742827780545
    2. '[
' → logprob: -9.000274658203125
    3. '[int' → logprob: -9.500274658203125
    4. ',' → logprob: -10.375274658203125
    5. '<Card' → logprob: -11.125274658203125
    6. '[List' → logprob: -11.625274658203125
    7. ')' → logprob: -12.000274658203125
    8. ']' → logprob: -12.500274658203125
    9. '   ' → logprob: -13.125274658203125
    10. '```' → logprob: -13.625274658203125

Token 496: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -4.246537173457909e-06
    2. ' Card' → logprob: -13.250003814697266
    3. 'int' → logprob: -13.250003814697266
    4. 'Token' → logprob: -14.625003814697266
    5. ' ' → logprob: -17.125003814697266
    6. '<Card' → logprob: -17.250003814697266
    7. '[' → logprob: -17.875003814697266
    8. 'Car' → logprob: -18.375003814697266
    9. ')' → logprob: -18.875003814697266
    10. '   ' → logprob: -19.000003814697266

Token 497: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009243228123523295
    2. ' ,' → logprob: -7.000924110412598
    3. '   ' → logprob: -11.625924110412598
    4. ')' → logprob: -13.625924110412598
    5. ',
' → logprob: -14.625924110412598
    6. ',int' → logprob: -14.875924110412598
    7. '[],' → logprob: -15.000924110412598
    8. '[' → logprob: -15.500924110412598
    9. '       ' → logprob: -15.500924110412598
    10. '    ' → logprob: -15.750924110412598

Token 498: ' threshold' (ID: 24313)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.916053295135498
    2. ' max' → logprob: -1.541053295135498
    3. 'max' → logprob: -1.666053295135498
    4. 'target' → logprob: -2.541053295135498
    5. ' threshold' → logprob: -3.166053295135498
    6. 'threshold' → logprob: -3.166053295135498
    7. ' limit' → logprob: -4.041053295135498
    8. 'limit' → logprob: -4.541053295135498
    9. 'additional' → logprob: -6.916053295135498
    10. 'n' → logprob: -7.166053295135498

Token 499: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8550976164988242e-05
    2. ':int' → logprob: -11.625018119812012
    3. '=' → logprob: -12.750018119812012
    4. ',' → logprob: -13.000018119812012
    5. ')' → logprob: -13.125018119812012
    6. '):' → logprob: -13.250018119812012
    7. '_:' → logprob: -15.375018119812012
    8. ' :' → logprob: -16.000019073486328
    9. 'value' → logprob: -16.125019073486328
    10. '1' → logprob: -17.000019073486328

Token 500: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20019957423210144
    2. ':' → logprob: -1.9501996040344238
    3. ' int' → logprob: -3.575199604034424
    4. ':int' → logprob: -5.450199604034424
    5. '10' → logprob: -5.700199604034424
    6. 'value' → logprob: -6.575199604034424
    7. ')' → logprob: -6.950199604034424
    8. '   ' → logprob: -7.450199604034424
    9. ' ' → logprob: -9.200199127197266
    10. '```' → logprob: -9.325199127197266

Token 501: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17976564168930054
    2. ',' → logprob: -1.8047657012939453
    3. ' )' → logprob: -11.804765701293945
    4. '   ' → logprob: -11.929765701293945
    5. ',)' → logprob: -13.054765701293945
    6. '):' → logprob: -13.679765701293945
    7. ' ,' → logprob: -13.679765701293945
    8. ')->' → logprob: -14.929765701293945
    9. '=' → logprob: -15.054765701293945
    10. '`)' → logprob: -15.054765701293945

Token 502: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.4192326068878174
    2. '->' → logprob: -1.2942326068878174
    3. ':' → logprob: -2.9192326068878174
    4. ')' → logprob: -4.419232368469238
    5. ')->' → logprob: -6.794232368469238
    6. '   ' → logprob: -6.919232368469238
    7. ',' → logprob: -9.044232368469238
    8. '       ' → logprob: -9.669232368469238
    9. ' ' → logprob: -11.669232368469238
    10. '(' → logprob: -12.794232368469238

Token 503: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.637682318687439
    2. ' float' → logprob: -0.762682318687439
    3. 'int' → logprob: -6.5126824378967285
    4. 'Iterator' → logprob: -6.8876824378967285
    5. ' Iterator' → logprob: -7.1376824378967285
    6. 'Optional' → logprob: -7.3876824378967285
    7. ' int' → logprob: -7.5126824378967285
    8. ' Optional' → logprob: -8.01268196105957
    9. ' ' → logprob: -8.76268196105957
    10. 'List' → logprob: -10.38768196105957

Token 504: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008527222089469433
    2. '       ' → logprob: -5.0085272789001465
    3. ':
' → logprob: -6.5085272789001465
    4. '   ' → logprob: -9.133526802062988
    5. ',' → logprob: -9.258526802062988
    6. '):' → logprob: -9.633526802062988
    7. '(self' → logprob: -10.758526802062988
    8. '():' → logprob: -11.133526802062988
    9. 'self' → logprob: -13.008526802062988
    10. ')' → logprob: -13.508526802062988

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005084725562483072
    2. '<|end|>' → logprob: -8.375508308410645
    3. ' ' → logprob: -9.500508308410645
    4. '        ' → logprob: -10.125508308410645
    5. ',' → logprob: -10.750508308410645
    6. '    ' → logprob: -10.875508308410645
    7. '      ' → logprob: -10.875508308410645
    8. '#' → logprob: -11.250508308410645
    9. ')' → logprob: -11.375508308410645
    10. '   ' → logprob: -11.500508308410645

Token 506: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3402896523475647
    2. ' available' → logprob: -2.21528959274292
    3. ' total' → logprob: -2.34028959274292
    4. 'available' → logprob: -3.46528959274292
    5. 'total' → logprob: -4.09028959274292
    6. ' remaining' → logprob: -5.09028959274292
    7. ' if' → logprob: -5.09028959274292
    8. 'count' → logprob: -5.34028959274292
    9. 'remaining' → logprob: -5.34028959274292
    10. ' count' → logprob: -5.46528959274292

Token 507: 'Calculate' (ID: 65570)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3640178442001343
    2. 'count' → logprob: -2.614017963409424
    3. 'available' → logprob: -2.614017963409424
    4. 'remaining' → logprob: -2.989017963409424
    5. 'total' → logprob: -3.239017963409424
    6. 'cards' → logprob: -3.239017963409424
    7. '"""' → logprob: -4.989017963409424
    8. ' available' → logprob: -5.239017963409424
    9. ' total' → logprob: -5.739017963409424
    10. 'from' → logprob: -6.114017963409424

Token 508: ' probability' (ID: 34933)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.45621684193611145
    2. ' the' → logprob: -2.206216812133789
    3. 'total' → logprob: -2.831216812133789
    4. ' available' → logprob: -3.081216812133789
    5. '       ' → logprob: -3.581216812133789
    6. ' remaining' → logprob: -3.706216812133789
    7. ' possible' → logprob: -3.831216812133789
    8. ' all' → logprob: -4.206216812133789
    9. 'possible' → logprob: -4.581216812133789
    10. 'remaining' → logprob: -4.706216812133789

Token 509: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.03545200452208519
    2. '       ' → logprob: -4.035451889038086
    3. 'that' → logprob: -4.160451889038086
    4. ' of' → logprob: -6.660451889038086
    5. '   ' → logprob: -9.285451889038086
    6. '```' → logprob: -9.660451889038086
    7. 'of' → logprob: -10.535451889038086
    8. '        ' → logprob: -10.535451889038086
    9. '        
' → logprob: -11.535451889038086
    10. '(' → logprob: -11.660451889038086

Token 510: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5133270621299744
    2. 'the' → logprob: -2.388327121734619
    3. ' sum' → logprob: -2.388327121734619
    4. ' the' → logprob: -2.638327121734619
    5. 'next' → logprob: -2.763327121734619
    6. ' next' → logprob: -4.138327121734619
    7. 'any' → logprob: -4.138327121734619
    8. ' any' → logprob: -4.263327121734619
    9. 'total' → logprob: -4.388327121734619
    10. 'a' → logprob: -5.013327121734619

Token 511: '(base' (ID: 25314)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.13559387624263763
    2. '(base' → logprob: -2.885593891143799
    3. 'of' → logprob: -3.260593891143799
    4. '=' → logprob: -5.135593891143799
    5. '(cards' → logprob: -5.510593891143799
    6. '(card' → logprob: -5.635593891143799
    7. ' cards' → logprob: -6.010593891143799
    8. ' base' → logprob: -6.135593891143799
    9. ' =' → logprob: -6.260593891143799
    10. ' <=' → logprob: -6.385593891143799

Token 512: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00016873658751137555
    2. 'cards' → logprob: -10.250168800354004
    3. '(cards' → logprob: -10.250168800354004
    4. '(base' → logprob: -11.000168800354004
    5. '_base' → logprob: -11.500168800354004
    6. '_card' → logprob: -11.500168800354004
    7. '_' → logprob: -11.625168800354004
    8. '   ' → logprob: -12.250168800354004
    9. '       ' → logprob: -12.250168800354004
    10. 'Cards' → logprob: -12.500168800354004

Token 513: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13982020318508148
    2. '+' → logprob: -2.139820098876953
    3. ')' → logprob: -4.389820098876953
    4. ')+' → logprob: -9.014820098876953
    5. ' )' → logprob: -9.639820098876953
    6. ' +
' → logprob: -9.764820098876953
    7. '+[' → logprob: -10.389820098876953
    8. ' plus' → logprob: -10.764820098876953
    9. '   ' → logprob: -10.889820098876953
    10. ',' → logprob: -11.139820098876953

Token 514: ' one' (ID: 1001)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0520375967025757
    2. '[next' → logprob: -1.5520375967025757
    3. 'new' → logprob: -2.3020377159118652
    4. ' new' → logprob: -2.5520377159118652
    5. '[new' → logprob: -2.5520377159118652
    6. ' [' → logprob: -3.5520377159118652
    7. 'card' → logprob: -3.5520377159118652
    8. ' one' → logprob: -3.8020377159118652
    9. 'next' → logprob: -4.052037715911865
    10. 'one' → logprob: -4.052037715911865

Token 515: ' extra' (ID: 5018)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.20060211420059204
    2. '_card' → logprob: -1.9506020545959473
    3. 'card' → logprob: -4.325602054595947
    4. ')' → logprob: -4.825602054595947
    5. ' of' → logprob: -5.200602054595947
    6. '(card' → logprob: -5.700602054595947
    7. ' more' → logprob: -6.075602054595947
    8. ' )' → logprob: -6.200602054595947
    9. ' ' → logprob: -7.325602054595947
    10. '_' → logprob: -7.450602054595947

Token 516: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.1363207995891571
    2. 'card' → logprob: -2.1363208293914795
    3. '_card' → logprob: -4.7613205909729
    4. ')' → logprob: -7.5113205909729
    5. 'Card' → logprob: -8.886321067810059
    6. '_' → logprob: -10.136321067810059
    7. ' )' → logprob: -10.511321067810059
    8. ' Card' → logprob: -10.886321067810059
    9. '   ' → logprob: -12.011321067810059
    10. '	card' → logprob: -12.636321067810059

Token 517: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017445837147533894
    2. ' )' → logprob: -9.375174522399902
    3. ')<=' → logprob: -10.000174522399902
    4. ' does' → logprob: -10.875174522399902
    5. 'value' → logprob: -12.375174522399902
    6. 'does' → logprob: -12.875174522399902
    7. ' <=' → logprob: -13.000174522399902
    8. '   ' → logprob: -13.250174522399902
    9. ' value' → logprob: -13.250174522399902
    10. ' from' → logprob: -13.375174522399902

Token 518: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8757667541503906
    2. ' does' → logprob: -1.0007667541503906
    3. ')' → logprob: -1.8757667541503906
    4. '<=' → logprob: -3.6257667541503906
    5. ' is' → logprob: -4.125766754150391
    6. 'does' → logprob: -4.625766754150391
    7. '```' → logprob: -5.500766754150391
    8. ' )' → logprob: -6.375766754150391
    9. '   ' → logprob: -6.750766754150391
    10. ')<=' → logprob: -6.875766754150391

Token 519: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.06196959316730499
    2. ' threshold' → logprob: -2.811969518661499
    3. '
' → logprob: -13.811969757080078
    4. 'th' → logprob: -15.311969757080078
    5. '   ' → logprob: -15.436969757080078
    6. '.threshold' → logprob: -16.061969757080078
    7. '10' → logprob: -16.311969757080078
    8. 'thr' → logprob: -16.436969757080078
    9. '```' → logprob: -16.561969757080078
    10. ' ' → logprob: -17.311969757080078

Token 520: '"""
' (ID: 15611)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3811754286289215
    2. ':' → logprob: -1.2561753988265991
    3. '"""' → logprob: -4.256175518035889
    4. '.' → logprob: -5.506175518035889
    5. ')' → logprob: -5.756175518035889
    6. '   ' → logprob: -6.131175518035889
    7. '):' → logprob: -6.256175518035889
    8. '"' → logprob: -6.631175518035889
    9. ' """' → logprob: -6.881175518035889
    10. '"""
' → logprob: -7.006175518035889

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002458430244587362
    2. '   ' → logprob: -9.500246047973633
    3. ',' → logprob: -10.250246047973633
    4. ' ' → logprob: -10.875246047973633
    5. '    ' → logprob: -10.875246047973633
    6. '      ' → logprob: -11.000246047973633
    7. '        ' → logprob: -11.250246047973633
    8. '        
' → logprob: -11.500246047973633
    9. '<|end|>' → logprob: -11.750246047973633
    10. ':' → logprob: -11.875246047973633

Token 522: ' base' (ID: 3611)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.10740199685096741
    2. '       ' → logprob: -3.3574020862579346
    3. 'remaining' → logprob: -3.6074020862579346
    4. 'total' → logprob: -3.9824020862579346
    5. ' available' → logprob: -4.1074018478393555
    6. 'cards' → logprob: -6.4824018478393555
    7. ' total' → logprob: -6.7324018478393555
    8. 'count' → logprob: -7.4824018478393555
    9. 'deck' → logprob: -7.6074018478393555
    10. 'possible' → logprob: -7.9824018478393555

Token 523: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.1633799970149994
    2. '_value' → logprob: -1.9133800268173218
    3. '_total' → logprob: -6.413380146026611
    4. '_cards' → logprob: -6.788380146026611
    5. '_values' → logprob: -8.038379669189453
    6. '_val' → logprob: -10.913379669189453
    7. '_' → logprob: -11.413379669189453
    8. 'sum' → logprob: -11.538379669189453
    9. '       ' → logprob: -12.038379669189453
    10. ' =' → logprob: -12.163379669189453

Token 524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132709264755249
    2. '=' → logprob: -1.313270926475525
    3. '_' → logprob: -12.313270568847656
    4. '=sum' → logprob: -13.563270568847656
    5. ' ' → logprob: -13.938270568847656
    6. '   ' → logprob: -14.063270568847656
    7. '    ' → logprob: -14.813270568847656
    8. '       ' → logprob: -15.313270568847656
    9. '	' → logprob: -15.813270568847656
    10. ')' → logprob: -15.938270568847656

Token 525: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0004306692280806601
    2. ' sum' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.875431060791016
    4. '	sum' → logprob: -18.625431060791016
    5. '=sum' → logprob: -18.875431060791016
    6. 'max' → logprob: -19.125431060791016
    7. '       ' → logprob: -19.625431060791016
    8. '(sum' → logprob: -19.625431060791016
    9. '
' → logprob: -19.750431060791016
    10. ' ' → logprob: -20.500431060791016

Token 526: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.16049301624298096
    2. 'card' → logprob: -1.910493016242981
    3. '(c' → logprob: -8.660492897033691
    4. 'c' → logprob: -9.410492897033691
    5. ' card' → logprob: -12.160492897033691
    6. '(' → logprob: -12.660492897033691
    7. '	card' → logprob: -13.035492897033691
    8. '(base' → logprob: -14.035492897033691
    9. 'base' → logprob: -14.535492897033691
    10. '.card' → logprob: -15.035492897033691

Token 527: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.004049075301736593
    2. '.' → logprob: -5.754049301147461
    3. '.card' → logprob: -7.379049301147461
    4. ' .' → logprob: -9.379049301147461
    5. '(card' → logprob: -9.504049301147461
    6. '.token' → logprob: -9.879049301147461
    7. '(' → logprob: -10.879049301147461
    8. 'value' → logprob: -12.254049301147461
    9. '.val' → logprob: -12.379049301147461
    10. '.user' → logprob: -13.504049301147461

Token 528: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1614239364862442
    2. 'for' → logprob: -1.911423921585083
    3. ')' → logprob: -6.786424160003662
    4. ' ' → logprob: -10.661423683166504
    5. '<|end|>' → logprob: -11.161423683166504
    6. '+' → logprob: -11.786423683166504
    7. ' +' → logprob: -12.036423683166504
    8. ' )' → logprob: -12.161423683166504
    9. '   ' → logprob: -12.286423683166504
    10. '	for' → logprob: -13.411423683166504

Token 529: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.18902505934238434
    2. ' card' → logprob: -1.9390250444412231
    3. 'base' → logprob: -3.6890251636505127
    4. ' base' → logprob: -5.689024925231934
    5. '	card' → logprob: -11.939024925231934
    6. '(card' → logprob: -13.689024925231934
    7. '_card' → logprob: -14.314024925231934
    8. ' ' → logprob: -15.314024925231934
    9. '.card' → logprob: -15.314024925231934
    10. 'car' → logprob: -15.314024925231934

Token 530: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0395323820412159
    2. 'in' → logprob: -3.414532423019409
    3. 'base' → logprob: -5.28953218460083
    4. 'card' → logprob: -7.28953218460083
    5. ' base' → logprob: -9.664532661437988
    6. ' card' → logprob: -10.289532661437988
    7. 's' → logprob: -11.164532661437988
    8. ' ' → logprob: -11.414532661437988
    9. '_base' → logprob: -12.789532661437988
    10. '   ' → logprob: -13.289532661437988

Token 531: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.12693031132221222
    2. ' base' → logprob: -2.1269302368164062
    3. '	base' → logprob: -13.876930236816406
    4. '(base' → logprob: -14.126930236816406
    5. ' ' → logprob: -15.501930236816406
    6. 'bas' → logprob: -15.751930236816406
    7. 'Base' → logprob: -16.376930236816406
    8. 'baseline' → logprob: -16.876930236816406
    9. '_base' → logprob: -17.501930236816406
    10. '.base' → logprob: -17.501930236816406

Token 532: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -3.082895273109898e-05
    2. 'cards' → logprob: -10.875030517578125
    3. '_' → logprob: -13.000030517578125
    4. '_card' → logprob: -13.250030517578125
    5. 's' → logprob: -13.250030517578125
    6. 'Cards' → logprob: -14.125030517578125
    7. '._' → logprob: -14.500030517578125
    8. '.cards' → logprob: -14.625030517578125
    9. '   ' → logprob: -14.750030517578125
    10. '```' → logprob: -14.750030517578125

Token 533: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033971716184169054
    2. ')
' → logprob: -5.753396987915039
    3. '       ' → logprob: -9.003396987915039
    4. ' )' → logprob: -9.503396987915039
    5. ')+' → logprob: -11.378396987915039
    6. '   ' → logprob: -12.753396987915039
    7. ' )
' → logprob: -13.003396987915039
    8. ')

' → logprob: -13.253396987915039
    9. ')
' → logprob: -13.253396987915039
    10. ' if' → logprob: -14.628396987915039

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004390134708955884
    2. ' available' → logprob: -9.250438690185547
    3. ' ' → logprob: -9.875438690185547
    4. '        
' → logprob: -9.875438690185547
    5. ' total' → logprob: -10.000438690185547
    6. ',' → logprob: -10.250438690185547
    7. '   ' → logprob: -10.500438690185547
    8. '        ' → logprob: -10.750438690185547
    9. '
' → logprob: -11.375438690185547
    10. '      ' → logprob: -12.000438690185547

Token 535: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' (adapté à ' available') → logprob: -0.8706328272819519
    2. 'remaining' → logprob: -0.8706328272819519
    3. ' available' → logprob: -3.2456328868865967
    4. 'if' → logprob: -3.3706328868865967
    5. ' remaining' → logprob: -3.4956328868865967
    6. ' if' → logprob: -3.6206328868865967
    7. 'possible' → logprob: -4.995632648468018
    8. 'valid' → logprob: -5.245632648468018
    9. 'cards' → logprob: -5.745632648468018
    10. ' valid' → logprob: -5.745632648468018

Token 536: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.012734724208712578
    2. ' =' → logprob: -4.762734889984131
    3. '=' → logprob: -5.512734889984131
    4. '_' → logprob: -10.387734413146973
    5. 'cards' → logprob: -11.012734413146973
    6. '```' → logprob: -11.762734413146973
    7. '   ' → logprob: -12.637734413146973
    8. '_values' → logprob: -13.012734413146973
    9. 'Cards' → logprob: -13.137734413146973
    10. '_card' → logprob: -13.137734413146973

Token 537: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018152866512537003
    2. '=' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.143153190612793
    4. '=set' → logprob: -14.893153190612793
    5. '   ' → logprob: -15.018153190612793
    6. '    ' → logprob: -16.393152236938477
    7. '  ' → logprob: -16.768152236938477
    8. 's' → logprob: -16.768152236938477
    9. ' =
' → logprob: -16.893152236938477
    10. '_set' → logprob: -17.143152236938477

Token 538: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4741043746471405
    2. ' self' → logprob: -0.9741044044494629
    3. '[self' → logprob: -11.474103927612305
    4. '(self' → logprob: -11.724103927612305
    5. '	self' → logprob: -12.849103927612305
    6. ' list' → logprob: -13.599103927612305
    7. '=self' → logprob: -13.974103927612305
    8. 'list' → logprob: -13.974103927612305
    9. '   ' → logprob: -14.099103927612305
    10. '{' → logprob: -14.724103927612305

Token 539: '.deck' (ID: 191464)
  Prédit: '.deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.deck' → logprob: -0.00047988566802814603
    2. '.' → logprob: -8.375479698181152
    3. 'deck' → logprob: -8.375479698181152
    4. ' .' → logprob: -11.250479698181152
    5. '._' → logprob: -13.875479698181152
    6. '.available' → logprob: -14.125479698181152
    7. '(deck' → logprob: -14.125479698181152
    8. ' deck' → logprob: -14.250479698181152
    9. 'Deck' → logprob: -14.750479698181152
    10. '_.' → logprob: -15.000479698181152

Token 540: '.available' (ID: 87418)
  Prédit: '.available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.available' → logprob: -0.013904678635299206
    2. '.' → logprob: -4.388904571533203
    3. '._' → logprob: -6.638904571533203
    4. 'available' → logprob: -9.638904571533203
    5. '_available' → logprob: -11.638904571533203
    6. ' .' → logprob: -11.888904571533203
    7. '.av' → logprob: -13.388904571533203
    8. '_.' → logprob: -14.138904571533203
    9. '\.' → logprob: -14.638904571533203
    10. '.allowed' → logprob: -15.138904571533203

Token 541: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -13.875000953674316
    3. 'cards' → logprob: -15.750000953674316
    4. 'Cards' → logprob: -18.125001907348633
    5. '_card' → logprob: -18.375001907348633
    6. '```' → logprob: -18.750001907348633
    7. '(cards' → logprob: -19.625001907348633
    8. ' cards' → logprob: -20.125001907348633
    9. '_c' → logprob: -20.250001907348633
    10. '\' → logprob: -20.250001907348633

Token 542: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005858874414116144
    2. '()
' → logprob: -5.255858898162842
    3. '       ' → logprob: -7.505858898162842
    4. '()
' → logprob: -10.380858421325684
    5. '()-' → logprob: -11.255858421325684
    6. '()

' → logprob: -11.380858421325684
    7. '().' → logprob: -12.505858421325684
    8. '())' → logprob: -12.505858421325684
    9. ')' → logprob: -13.005858421325684
    10. ' ()' → logprob: -13.130858421325684

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014749871334061027
    2. '        
' → logprob: -8.25147533416748
    3. ',' → logprob: -8.87647533416748
    4. '
' → logprob: -8.87647533416748
    5. ' total' → logprob: -9.00147533416748
    6. ' probabilities' → logprob: -9.00147533416748
    7. 'tokens' → logprob: -9.37647533416748
    8. 'total' → logprob: -9.37647533416748
    9. ' tokens' → logprob: -9.50147533416748
    10. 'count' → logprob: -9.62647533416748

Token 544: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.3111056089401245
    2. 'valid' → logprob: -1.5611056089401245
    3. 'remaining' → logprob: -1.8111056089401245
    4. 'if' → logprob: -2.061105728149414
    5. 'possible' → logprob: -2.311105728149414
    6. 'count' → logprob: -2.436105728149414
    7. 'success' → logprob: -4.561105728149414
    8. ' if' → logprob: -4.936105728149414
    9. ' valid' → logprob: -5.061105728149414
    10. 'counts' → logprob: -5.186105728149414

Token 545: ' Ex' (ID: 1771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8493036031723022
    2. ' if' → logprob: -1.8493036031723022
    3. 'total' → logprob: -2.224303722381592
    4. ' valid' → logprob: -2.349303722381592
    5. 'remaining' → logprob: -2.349303722381592
    6. 'possible' → logprob: -2.474303722381592
    7. '       ' → logprob: -2.599303722381592
    8. 'valid' → logprob: -2.599303722381592
    9. ' total' → logprob: -2.724303722381592
    10. 'count' → logprob: -4.099303722381592

Token 546: 'clude' (ID: 1472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3561054468154907
    2. 't' → logprob: -2.231105327606201
    3. 'tra' → logprob: -2.231105327606201
    4. '   ' → logprob: -3.731105327606201
    5. 'isting' → logprob: -3.981105327606201
    6. 'pected' → logprob: -4.856105327606201
    7. 'clud' → logprob: -5.231105327606201
    8. 'cluded' → logprob: -5.231105327606201
    9. 'clude' → logprob: -5.481105327606201
    10. '#' → logprob: -5.481105327606201

Token 547: ' base' (ID: 3611)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.3772310018539429
    2. 'card' → logprob: -1.3772310018539429
    3. 'base' → logprob: -1.3772310018539429
    4. 'cards' → logprob: -2.0022311210632324
    5. 'for' → logprob: -2.3772311210632324
    6. 'the' → logprob: -5.002231121063232
    7. 'Card' → logprob: -6.002231121063232
    8. ' base' → logprob: -7.002231121063232
    9. ' cards' → logprob: -7.252231121063232
    10. 'any' → logprob: -7.377231121063232

Token 548: ' cards' (ID: 10541)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.01145178359001875
    2. '_sum' → logprob: -4.761451721191406
    3. '_' → logprob: -6.011451721191406
    4. 'cards' → logprob: -8.886451721191406
    5. '_card' → logprob: -9.386451721191406
    6. ' cards' → logprob: -9.511451721191406
    7. 'sum' → logprob: -10.386451721191406
    8. '_set' → logprob: -11.136451721191406
    9. 'Cards' → logprob: -11.261451721191406
    10. '```' → logprob: -12.636451721191406

Token 549: ' already' (ID: 4279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6758518815040588
    2. ' =' → logprob: -1.550851821899414
    3. ' -' → logprob: -1.925851821899414
    4. '-' → logprob: -2.425851821899414
    5. ' -=' → logprob: -4.050851821899414
    6. '.d' → logprob: -4.675851821899414
    7. '=' → logprob: -5.800851821899414
    8. '-=' → logprob: -6.175851821899414
    9. '.' → logprob: -6.425851821899414
    10. '        
' → logprob: -6.425851821899414

Token 550: ' in' (ID: 306)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.375
    2. 'in' → logprob: -1.375
    3. 'present' → logprob: -3.375
    4. 'removed' → logprob: -4.25
    5. 'taken' → logprob: -5.625
    6. 'held' → logprob: -6.125
    7. 'draw' → logprob: -6.625
    8. ' used' → logprob: -6.875
    9. ' in' → logprob: -7.0
    10. 'included' → logprob: -7.5

Token 551: ' use' (ID: 1199)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.01137588545680046
    2. 'set' → logprob: -5.011375904083252
    3. ' base' → logprob: -5.636375904083252
    4. 'available' → logprob: -7.136375904083252
    5. 'the' → logprob: -9.761375427246094
    6. '   ' → logprob: -10.136375427246094
    7. '
' → logprob: -10.261375427246094
    8. 'self' → logprob: -10.386375427246094
    9. '```' → logprob: -10.636375427246094
    10. ' set' → logprob: -10.761375427246094

Token 552: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03669488802552223
    2. ' -' → logprob: -3.9116950035095215
    3. '-' → logprob: -4.7866950035095215
    4. '.' → logprob: -6.1616950035095215
    5. ' =' → logprob: -6.2866950035095215
    6. ',' → logprob: -7.2866950035095215
    7. '        
' → logprob: -7.6616950035095215
    8. ' -=' → logprob: -8.161694526672363
    9. '
' → logprob: -8.411694526672363
    10. '_' → logprob: -8.536694526672363

Token 553: '3' (ID: 18)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8504651784896851
    2. 'base' → logprob: -1.100465178489685
    3. ' for' → logprob: -2.1004652976989746
    4. '       ' → logprob: -3.2254652976989746
    5. ')' → logprob: -3.8504652976989746
    6. 'available' → logprob: -3.9754652976989746
    7. ' base' → logprob: -4.475465297698975
    8. 'set' → logprob: -4.850465297698975
    9. 'card' → logprob: -5.225465297698975
    10. 'cards' → logprob: -6.350465297698975

Token 554: ' known' (ID: 5542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34321844577789307
    2. ' and' → logprob: -3.0932183265686035
    3. '):' → logprob: -3.2182183265686035
    4. 'and' → logprob: -3.5932183265686035
    5. ' cards' → logprob: -3.9682183265686035
    6. '       ' → logprob: -4.0932183265686035
    7. '   ' → logprob: -4.2182183265686035
    8. '):
' → logprob: -4.3432183265686035
    9. ',' → logprob: -4.7182183265686035
    10. ' if' → logprob: -4.7182183265686035

Token 555: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.9669467806816101
    2. 'cards' → logprob: -0.9669467806816101
    3. ')' → logprob: -1.8419468402862549
    4. ' or' → logprob: -3.091946840286255
    5. '_cards' → logprob: -4.716946601867676
    6. ' and' → logprob: -4.716946601867676
    7. 'and' → logprob: -5.466946601867676
    8. '       ' → logprob: -5.716946601867676
    9. ',' → logprob: -6.841946601867676
    10. '   ' → logprob: -6.966946601867676

Token 556: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8886999487876892
    2. ' or' → logprob: -1.263700008392334
    3. ' and' → logprob: -2.388700008392334
    4. ' |' → logprob: -2.763700008392334
    5. '       ' → logprob: -2.888700008392334
    6. ' -' → logprob: -3.388700008392334
    7. ').' → logprob: -3.888700008392334
    8. '.union' → logprob: -4.138700008392334
    9. ',' → logprob: -5.013700008392334
    10. ' )' → logprob: -5.138700008392334

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004149037878960371
    2. ' for' → logprob: -6.754148960113525
    3. ',' → logprob: -7.004148960113525
    4. 'available' → logprob: -7.379148960113525
    5. ' available' → logprob: -8.129149436950684
    6. ' =' → logprob: -8.129149436950684
    7. 'remaining' → logprob: -8.629149436950684
    8. '<|end|>' → logprob: -9.254149436950684
    9. 'tokens' → logprob: -9.879149436950684
    10. '        
' → logprob: -10.004149436950684

Token 558: ' cards' (ID: 10541)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.6555047035217285
    2. 'for' → logprob: -1.5305047035217285
    3. 'used' → logprob: -1.6555047035217285
    4. '       ' → logprob: -3.1555047035217285
    5. 'remaining' → logprob: -4.1555047035217285
    6. 'unused' → logprob: -5.7805047035217285
    7. 'cards' (adapté à ' cards') → logprob: -6.2805047035217285
    8. 'unknown' → logprob: -6.2805047035217285
    9. 'known' → logprob: -6.4055047035217285
    10. ' for' → logprob: -6.5305047035217285

Token 559: '_used' (ID: 67016)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.13762423396110535
    2. '_in' → logprob: -2.3876242637634277
    3. ' =' → logprob: -3.5126242637634277
    4. '_used' → logprob: -5.137624263763428
    5. '=' → logprob: -8.01262378692627
    6. '_remaining' → logprob: -8.51262378692627
    7. '_left' → logprob: -9.76262378692627
    8. 'used' → logprob: -10.13762378692627
    9. '   ' → logprob: -10.13762378692627
    10. '_usage' → logprob: -10.13762378692627

Token 560: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05495179072022438
    2. '=' → logprob: -2.9299519062042236
    3. '=set' → logprob: -9.929951667785645
    4. ':' → logprob: -12.054951667785645
    5. '   ' → logprob: -12.304951667785645
    6. '_in' → logprob: -12.929951667785645
    7. ' ' → logprob: -13.429951667785645
    8. '  ' → logprob: -13.804951667785645
    9. '_to' → logprob: -14.179951667785645
    10. 's' → logprob: -14.679951667785645

Token 561: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.03020768240094185
    2. ' set' → logprob: -3.530207633972168
    3. 'base' → logprob: -8.155207633972168
    4. '{' → logprob: -9.030207633972168
    5. ' base' → logprob: -11.280207633972168
    6. '(set' → logprob: -11.780207633972168
    7. '   ' → logprob: -12.030207633972168
    8. 'Set' → logprob: -12.155207633972168
    9. '	set' → logprob: -12.530207633972168
    10. '=set' → logprob: -12.780207633972168

Token 562: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.0011040179524570704
    2. 'base' → logprob: -6.87610387802124
    3. '(card' → logprob: -9.751104354858398
    4. '(' → logprob: -12.001104354858398
    5. 'card' → logprob: -12.626104354858398
    6. '(
' → logprob: -14.126104354858398
    7. '()' → logprob: -14.626104354858398
    8. '	base' → logprob: -14.876104354858398
    9. ' base' → logprob: -14.876104354858398
    10. '(c' → logprob: -15.001104354858398

Token 563: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.9504606825648807e-05
    2. '(base' → logprob: -11.875019073486328
    3. 'cards' → logprob: -12.625019073486328
    4. '(cards' → logprob: -13.125019073486328
    5. '_sum' → logprob: -13.250019073486328
    6. 'Cards' → logprob: -13.750019073486328
    7. '_base' → logprob: -14.250019073486328
    8. '_' → logprob: -14.500019073486328
    9. '_card' → logprob: -14.875019073486328
    10. 'sum' → logprob: -15.125019073486328

Token 564: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02524435706436634
    2. ' +' → logprob: -4.900244235992432
    3. ').' → logprob: -5.150244235992432
    4. '+' → logprob: -5.525244235992432
    5. ')
' → logprob: -5.525244235992432
    6. ' )' → logprob: -5.650244235992432
    7. '+)' → logprob: -9.90024471282959
    8. ' )
' → logprob: -10.27524471282959
    9. ')
' → logprob: -10.90024471282959
    10. ')+' → logprob: -11.15024471282959

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012902775779366493
    2. 'available' → logprob: -4.637902736663818
    3. ' available' → logprob: -6.012902736663818
    4. '<|end|>' → logprob: -8.387903213500977
    5. ',' → logprob: -8.887903213500977
    6. '
' → logprob: -9.637903213500977
    7. 'cards' → logprob: -9.887903213500977
    8. '        
' → logprob: -10.012903213500977
    9. '.available' → logprob: -10.387903213500977
    10. '<|end|>' → logprob: -10.512903213500977

Token 566: ' candidate' (ID: 17098)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04156072437763214
    2. 'available' → logprob: -3.291560649871826
    3. ' available' → logprob: -6.291560649871826
    4. 'cards' → logprob: -7.041560649871826
    5. '
' → logprob: -8.416561126708984
    6. ' for' → logprob: -9.166561126708984
    7. 'for' → logprob: -9.541561126708984
    8. ' cards' → logprob: -9.666561126708984
    9. '<|end|>' → logprob: -9.791561126708984
    10. 'remaining' → logprob: -10.416561126708984

Token 567: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.2526869475841522
    2. 's' → logprob: -1.5026869773864746
    3. '_counts' → logprob: -7.377686977386475
    4. '_' → logprob: -10.252686500549316
    5. '_card' → logprob: -10.752686500549316
    6. ' cards' → logprob: -11.002686500549316
    7. 'cards' → logprob: -11.377686500549316
    8. '_s' → logprob: -11.627686500549316
    9. '_tokens' → logprob: -11.877686500549316
    10. '_scores' → logprob: -12.002686500549316

Token 568: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409260272979736
    2. '=' → logprob: -0.9740926027297974
    3. ' ' → logprob: -11.974092483520508
    4. ':' → logprob: -12.599092483520508
    5. '   ' → logprob: -12.724092483520508
    6. '    ' → logprob: -14.474092483520508
    7. '       ' → logprob: -14.599092483520508
    8. 's' → logprob: -14.849092483520508
    9. '=[]' → logprob: -15.224092483520508
    10. ' =
' → logprob: -15.474092483520508

Token 569: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.028524789959192276
    2. ' available' → logprob: -3.903524875640869
    3. '{' → logprob: -5.403524875640869
    4. '[' → logprob: -6.153524875640869
    5. '   ' → logprob: -7.028524875640869
    6. ' [' → logprob: -8.278524398803711
    7. ' {' → logprob: -9.403524398803711
    8. ' ' → logprob: -10.278524398803711
    9. '  ' → logprob: -11.403524398803711
    10. '       ' → logprob: -11.653524398803711

Token 570: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -3.35706390615087e-05
    2. 'cards' → logprob: -11.875033378601074
    3. ' =' → logprob: -12.000033378601074
    4. '=' → logprob: -12.000033378601074
    5. '
' → logprob: -13.000033378601074
    6. '_' → logprob: -13.625033378601074
    7. '_candidates' → logprob: -13.875033378601074
    8. '_card' → logprob: -13.875033378601074
    9. 'Cards' → logprob: -14.125033378601074
    10. '   ' → logprob: -14.125033378601074

Token 571: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12695373594760895
    2. '-' → logprob: -2.1269538402557373
    3. '.d' → logprob: -10.751954078674316
    4. '   ' → logprob: -13.376954078674316
    5. '.' → logprob: -13.751954078674316
    6. ' ' → logprob: -14.126954078674316
    7. '-d' → logprob: -16.001953125
    8. '  ' → logprob: -16.126953125
    9. ' ' → logprob: -16.126953125
    10. 'difference' → logprob: -16.376953125

Token 572: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.00975833274424076
    2. ' cards' → logprob: -4.634758472442627
    3. '(cards' → logprob: -13.384757995605469
    4. ' ' → logprob: -15.509757995605469
    5. '.cards' → logprob: -15.884757995605469
    6. '   ' → logprob: -15.884757995605469
    7. 'cars' → logprob: -16.88475799560547
    8. ' ' → logprob: -17.13475799560547
    9. '
' → logprob: -17.25975799560547
    10. '{' → logprob: -17.25975799560547

Token 573: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -5.676981345459353e-06
    2. 'used' → logprob: -12.375005722045898
    3. 'Used' → logprob: -13.625005722045898
    4. '_USED' → logprob: -17.1250057220459
    5. '.used' → logprob: -17.3750057220459
    6. 'ed' → logprob: -18.2500057220459
    7. '_cards' → logprob: -19.2500057220459
    8. '_using' → logprob: -19.3750057220459
    9. '_usage' → logprob: -19.6250057220459
    10. '_' → logprob: -19.6250057220459

Token 574: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035761918406933546
    2. '
' → logprob: -6.003576278686523
    3. 'total' → logprob: -7.628576278686523
    4. ' if' → logprob: -8.378576278686523
    5. ' total' → logprob: -8.753576278686523
    6. '        
' → logprob: -10.003576278686523
    7. ',' → logprob: -10.378576278686523
    8. 'if' → logprob: -11.003576278686523
    9. '<|end|>' → logprob: -11.003576278686523
    10. '
' → logprob: -11.003576278686523

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2985592484474182
    2. '
' → logprob: -1.5485591888427734
    3. '        
' → logprob: -4.173559188842773
    4. ' total' → logprob: -4.423559188842773
    5. ' 
' → logprob: -4.923559188842773
    6. '        ' → logprob: -5.798559188842773
    7. 'total' → logprob: -5.923559188842773
    8. ' ' → logprob: -6.923559188842773
    9. 'count' → logprob: -7.798559188842773
    10. '
' → logprob: -7.798559188842773

Token 576: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8492475152015686
    2. '       ' → logprob: -1.4742474555969238
    3. ' if' → logprob: -2.224247455596924
    4. 'if' (adapté à ' if') → logprob: -2.349247455596924
    5. ' total' → logprob: -2.349247455596924
    6. 'count' → logprob: -3.224247455596924
    7. ' count' → logprob: -6.599247455596924
    8. 'counts' → logprob: -6.724247455596924
    9. ' counts' → logprob: -7.849247455596924
    10. '
' → logprob: -8.349247932434082

Token 577: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.006246819160878658
    2. 'not' → logprob: -5.131247043609619
    3. ' len' → logprob: -8.631246566772461
    4. ' base' → logprob: -9.881246566772461
    5. ' ' → logprob: -10.756246566772461
    6. '	not' → logprob: -11.006246566772461
    7. 'len' → logprob: -11.131246566772461
    8. ' threshold' → logprob: -11.256246566772461
    9. 'threshold' → logprob: -11.881246566772461
    10. ' candidate' → logprob: -12.881246566772461

Token 578: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.03804194927215576
    2. ' candidate' → logprob: -3.2880420684814453
    3. '(candidate' → logprob: -15.413042068481445
    4. 'c' → logprob: -16.038042068481445
    5. '_candidate' → logprob: -16.288042068481445
    6. 'andidate' → logprob: -16.663042068481445
    7. 'Candidate' → logprob: -16.913042068481445
    8. ' ' → logprob: -17.788042068481445
    9. '```' → logprob: -18.163042068481445
    10. ' candidat' → logprob: -18.163042068481445

Token 579: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -4.56102097814437e-05
    2. '_' → logprob: -11.000045776367188
    3. 's' → logprob: -11.500045776367188
    4. 'Cards' → logprob: -12.000045776367188
    5. 'cards' → logprob: -12.125045776367188
    6. '_c' → logprob: -13.125045776367188
    7. '_card' → logprob: -13.625045776367188
    8. '_candidates' → logprob: -14.000045776367188
    9. ' cards' → logprob: -14.625045776367188
    10. 'ed' → logprob: -14.625045776367188

Token 580: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03814224898815155
    2. ':
' → logprob: -3.288142204284668
    3. ':return' → logprob: -9.288142204284668
    4. ':
' → logprob: -12.413142204284668
    5. '       ' → logprob: -13.413142204284668
    6. '):
' → logprob: -14.288142204284668
    7. '):' → logprob: -14.538142204284668
    8. ' :' → logprob: -14.788142204284668
    9. '   ' → logprob: -14.788142204284668
    10. ' or' → logprob: -15.038142204284668

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13310004770755768
    2. ':' → logprob: -2.1331000328063965
    3. '       ' → logprob: -5.6331000328063965
    4. ':
' → logprob: -6.1331000328063965
    5. ':return' → logprob: -8.633100509643555
    6. '0' → logprob: -9.508100509643555
    7. ' return' → logprob: -10.258100509643555
    8. ',' → logprob: -10.758100509643555
    9. 'return' → logprob: -10.883100509643555
    10. ' :' → logprob: -11.008100509643555

Token 582: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20193131268024445
    2. ' return' → logprob: -1.701931357383728
    3. '       ' → logprob: -8.20193099975586
    4. '           ' → logprob: -8.82693099975586
    5. '0' → logprob: -9.32693099975586
    6. '   ' → logprob: -12.95193099975586
    7. '
' → logprob: -13.20193099975586
    8. ' ' → logprob: -13.57693099975586
    9. '	return' → logprob: -14.32693099975586
    10. '               ' → logprob: -14.45193099975586

Token 583: ' No' (ID: 3004)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07921946793794632
    2. ' return' → logprob: -2.5792195796966553
    3. '           ' → logprob: -8.704219818115234
    4. '       ' → logprob: -8.954219818115234
    5. 'Return' → logprob: -10.579219818115234
    6. '   ' → logprob: -13.204219818115234
    7. ':return' → logprob: -13.579219818115234
    8. '	return' → logprob: -13.829219818115234
    9. '```' → logprob: -13.954219818115234
    10. 'raise' → logprob: -13.954219818115234

Token 584: ' cards' (ID: 10541)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1310575008392334
    2. ' possible' → logprob: -2.0060575008392334
    3. 'return' → logprob: -2.1310575008392334
    4. ' cards' → logprob: -2.2560575008392334
    5. 'possible' → logprob: -2.3810575008392334
    6. 'cards' → logprob: -3.1310575008392334
    7. ' valid' → logprob: -3.3810575008392334
    8. ' additional' → logprob: -3.5060575008392334
    9. ' possibilities' → logprob: -3.8810575008392334
    10. ' extra' → logprob: -3.8810575008392334

Token 585: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.7179982662200928
    2. ' to' → logprob: -0.8429982662200928
    3. ' return' → logprob: -3.3429982662200928
    4. 'left' → logprob: -3.7179982662200928
    5. ' can' → logprob: -4.717998504638672
    6. 'return' → logprob: -5.092998504638672
    7. 'to' → logprob: -5.967998504638672
    8. ' available' → logprob: -6.467998504638672
    9. '       ' → logprob: -7.342998504638672
    10. ' remain' → logprob: -7.592998504638672

Token 586: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4730559289455414
    2. ',' → logprob: -1.3480559587478638
    3. ':' → logprob: -2.723055839538574
    4. '           ' → logprob: -3.473055839538574
    5. ' to' → logprob: -4.348055839538574
    6. ' return' → logprob: -6.223055839538574
    7. ':
' → logprob: -6.473055839538574
    8. 'return' → logprob: -6.598055839538574
    9. '.' → logprob: -7.098055839538574
    10. ':return' → logprob: -7.473055839538574

Token 587: ' draw' (ID: 6174)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.011133656837046146
    2. ' draw' → logprob: -4.511133670806885
    3. 'choose' → logprob: -10.261133193969727
    4. 'add' → logprob: -10.886133193969727
    5. 'consider' → logprob: -11.261133193969727
    6. '_draw' → logprob: -11.636133193969727
    7. 'pick' → logprob: -12.261133193969727
    8. 'use' → logprob: -13.261133193969727
    9. 'play' → logprob: -14.011133193969727
    10. 'try' → logprob: -14.136133193969727

Token 588: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6858611106872559
    2. '       ' → logprob: -0.8108611106872559
    3. ',' → logprob: -3.185861110687256
    4. ':' → logprob: -5.185861110687256
    5. '.' → logprob: -6.185861110687256
    6. '0' → logprob: -7.060861110687256
    7. ' return' → logprob: -7.185861110687256
    8. 'return' → logprob: -7.935861110687256
    9. '               ' → logprob: -8.435861587524414
    10. ':return' → logprob: -8.810861587524414

Token 589: ' probability' (ID: 34933)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06308717280626297
    2. ' return' → logprob: -2.813087224960327
    3. '       ' → logprob: -7.188086986541748
    4. '           ' → logprob: -7.938086986541748
    5. '   ' → logprob: -13.188087463378906
    6. '               ' → logprob: -13.438087463378906
    7. '0' → logprob: -14.063087463378906
    8. ' ' → logprob: -14.188087463378906
    9. '	return' → logprob: -14.688087463378906
    10. '```' → logprob: -15.188087463378906

Token 590: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27104270458221436
    2. ' =' → logprob: -1.7710427045822144
    3. ' is' → logprob: -3.021042823791504
    4. 'return' → logprob: -4.896042823791504
    5. ' return' → logprob: -4.896042823791504
    6. ' ' → logprob: -6.146042823791504
    7. 'is' → logprob: -7.646042823791504
    8. ':' → logprob: -8.021042823791504
    9. '0' → logprob: -8.896042823791504
    10. '       ' → logprob: -9.396042823791504

Token 591: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022111583966761827
    2. ' ' → logprob: -6.127211093902588
    3. '1' → logprob: -10.752211570739746
    4. '   ' → logprob: -12.627211570739746
    5. '  ' → logprob: -14.877211570739746
    6. ' ' → logprob: -14.877211570739746
    7. 'zero' → logprob: -15.627211570739746
    8. '    ' → logprob: -16.25221061706543
    9. '       ' → logprob: -16.37721061706543
    10. '```' → logprob: -16.37721061706543

Token 592: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2440556436777115
    2. '
' → logprob: -1.9940556287765503
    3. '0' → logprob: -2.74405574798584
    4. '.' → logprob: -4.74405574798584
    5. 'return' → logprob: -5.99405574798584
    6. '        
' → logprob: -6.61905574798584
    7. ',' → logprob: -7.24405574798584
    8. ' return' → logprob: -7.49405574798584
    9. ':' → logprob: -8.11905574798584
    10. '   ' → logprob: -8.61905574798584

Token 593: ' sum' (ID: 4215)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.01607624813914299
    2. ' base' → logprob: -4.14107608795166
    3. '(base' → logprob: -11.14107608795166
    4. '   ' → logprob: -11.39107608795166
    5. ' ' → logprob: -12.14107608795166
    6. 'threshold' → logprob: -12.26607608795166
    7. '	base' → logprob: -12.76607608795166
    8. ' (' → logprob: -14.39107608795166
    9. '  ' → logprob: -14.64107608795166
    10. '```' → logprob: -14.89107608795166

Token 594: ' already' (ID: 4279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9527631402015686
    2. '(base' → logprob: -1.7027630805969238
    3. '>' → logprob: -1.9527630805969238
    4. ' +' → logprob: -2.077763080596924
    5. 'ex' → logprob: -2.202763080596924
    6. 'base' → logprob: -3.952763080596924
    7. ' exceeds' → logprob: -4.202763080596924
    8. ' >' → logprob: -4.577763080596924
    9. '<=' → logprob: -6.702763080596924
    10. '>=' → logprob: -7.077763080596924

Token 595: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1349889189004898
    2. 'ex' → logprob: -2.134989023208618
    3. '>=' → logprob: -5.009988784790039
    4. ' >' → logprob: -7.259988784790039
    5. ' exceeds' → logprob: -8.259988784790039
    6. '<=' → logprob: -8.384988784790039
    7. '+' → logprob: -10.509988784790039
    8. '≥' → logprob: -10.759988784790039
    9. 'greater' → logprob: -10.759988784790039
    10. 'base' → logprob: -11.134988784790039

Token 596: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.005235291086137295
    2. ' threshold' → logprob: -5.255235195159912
    3. 'th' → logprob: -13.75523567199707
    4. '=' → logprob: -15.75523567199707
    5. 'thr' → logprob: -15.88023567199707
    6. 't' → logprob: -17.25523567199707
    7. '0' → logprob: -17.25523567199707
    8. '_threshold' → logprob: -17.88023567199707
    9. 'reshold' → logprob: -18.63023567199707
    10. ' ' → logprob: -19.00523567199707

Token 597: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5462663769721985
    2. '       ' → logprob: -0.9212663769721985
    3. ',' → logprob: -4.796266555786133
    4. '.' → logprob: -5.046266555786133
    5. '           ' → logprob: -5.671266555786133
    6. 'return' → logprob: -6.796266555786133
    7. ' and' → logprob: -7.421266555786133
    8. ' return' → logprob: -7.421266555786133
    9. ' if' → logprob: -7.921266555786133
    10. '        ' → logprob: -8.046266555786133

Token 598: ' else' (ID: 1203)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7694335579872131
    2. ' or' → logprob: -1.7694334983825684
    3. 'return' → logprob: -2.1444334983825684
    4. '0' → logprob: -2.2694334983825684
    5. '       ' → logprob: -2.6444334983825684
    6. ' else' → logprob: -2.7694334983825684
    7. '           ' → logprob: -5.144433498382568
    8. ' ' → logprob: -6.019433498382568
    9. 'else' → logprob: -6.269433498382568
    10. 'or' → logprob: -7.269433498382568

Token 599: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013288346119225025
    2. ' ' → logprob: -4.388288497924805
    3. '0' → logprob: -8.138288497924805
    4. '   ' → logprob: -8.388288497924805
    5. 'return' → logprob: -9.013288497924805
    6. 'if' → logprob: -10.013288497924805
    7. ' return' → logprob: -10.638288497924805
    8. ' if' → logprob: -10.638288497924805
    9. '       ' → logprob: -11.263288497924805
    10. ' one' → logprob: -12.263288497924805

Token 600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.625011444091797
    3. '0' → logprob: -13.750011444091797
    4. '   ' → logprob: -14.750011444091797
    5. 'one' → logprob: -15.375011444091797
    6. '
' → logprob: -16.875011444091797
    7. ' ' → logprob: -16.875011444091797
    8. '`' → logprob: -18.000011444091797
    9. 'if' → logprob: -18.000011444091797
    10. 'return' → logprob: -18.125011444091797

Token 601: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013326223939657211
    2. ' if' → logprob: -5.263326168060303
    3. 'return' → logprob: -6.763326168060303
    4. '
' → logprob: -6.763326168060303
    5. ',' → logprob: -6.888326168060303
    6. '        
' → logprob: -6.888326168060303
    7. ':' → logprob: -7.013326168060303
    8. ' return' → logprob: -7.013326168060303
    9. '           ' → logprob: -7.638326168060303
    10. '.' → logprob: -8.013326644897461

Token 602: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009686448611319065
    2. ' if' → logprob: -5.009686470031738
    3. '           ' → logprob: -7.009686470031738
    4. '        
' → logprob: -7.384686470031738
    5. '        ' → logprob: -7.884686470031738
    6. 'if' → logprob: -8.634686470031738
    7. ' 
' → logprob: -9.259686470031738
    8. ',' → logprob: -9.259686470031738
    9. ':' → logprob: -9.259686470031738
    10. '.' → logprob: -9.509686470031738

Token 603: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6860687732696533
    2. ' if' → logprob: -1.1860687732696533
    3. 'return' (adapté à ' return') → logprob: -1.8110687732696533
    4. ' return' → logprob: -3.6860687732696533
    5. '       ' → logprob: -6.061068534851074
    6. '           ' → logprob: -8.936068534851074
    7. '{return' → logprob: -12.811068534851074
    8. '```' → logprob: -12.811068534851074
    9. '   ' → logprob: -13.311068534851074
    10. '        ' → logprob: -13.686068534851074

Token 604: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.044382207095623016
    2. ' ' → logprob: -3.419382095336914
    3. '0' → logprob: -4.544382095336914
    4. 'float' → logprob: -10.169382095336914
    5. ' float' → logprob: -11.919382095336914
    6. '   ' → logprob: -12.294382095336914
    7. ' ' → logprob: -14.044382095336914
    8. '  ' → logprob: -14.169382095336914
    9. '(' → logprob: -14.544382095336914
    10. ' (' → logprob: -16.044382095336914

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000400521676056087
    2. '0' → logprob: -7.875400543212891
    3. ' ' → logprob: -11.25040054321289
    4. 'float' → logprob: -11.87540054321289
    5. '   ' → logprob: -15.37540054321289
    6. '(' → logprob: -15.62540054321289
    7. '  ' → logprob: -17.75040054321289
    8. ' ' → logprob: -17.87540054321289
    9. ' float' → logprob: -18.18790054321289
    10. '(float' → logprob: -18.18790054321289

Token 606: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.837811088189483e-05
    2. 'if' → logprob: -10.000068664550781
    3. ' if' → logprob: -11.125068664550781
    4. '0' → logprob: -11.750068664550781
    5. 'e' → logprob: -15.625068664550781
    6. '```' → logprob: -16.37506866455078
    7. '1' → logprob: -17.12506866455078
    8. '.
' → logprob: -17.37506866455078
    9. 'If' → logprob: -17.75006866455078
    10. '\.' → logprob: -18.12506866455078

Token 607: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. 'if' → logprob: -13.000004768371582
    3. ' if' → logprob: -13.125004768371582
    4. ' ' → logprob: -15.000004768371582
    5. '   ' → logprob: -16.1250057220459
    6. '```' → logprob: -17.1250057220459
    7. '       ' → logprob: -17.2500057220459
    8. '        ' → logprob: -17.3750057220459
    9. 'float' → logprob: -17.7500057220459
    10. '           ' → logprob: -17.7500057220459

Token 608: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47464776039123535
    2. 'if' → logprob: -0.9746477603912354
    3. '.' → logprob: -7.474647521972656
    4. '0' → logprob: -13.849647521972656
    5. ' ' → logprob: -14.099647521972656
    6. '   ' → logprob: -14.724647521972656
    7. '       ' → logprob: -14.724647521972656
    8. '        ' → logprob: -15.224647521972656
    9. '	if' → logprob: -15.849647521972656
    10. '     ' → logprob: -16.224647521972656

Token 609: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0011708177626132965
    2. ' base' → logprob: -6.751170635223389
    3. '(base' → logprob: -15.001171112060547
    4. '   ' → logprob: -16.251171112060547
    5. '	base' → logprob: -16.376171112060547
    6. ' ' → logprob: -19.126171112060547
    7. '_base' → logprob: -20.001171112060547
    8. ' ' → logprob: -20.251171112060547
    9. 'baseline' → logprob: -20.376171112060547
    10. '  ' → logprob: -20.751171112060547

Token 610: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.45848218582978e-06
    2. 'sum' → logprob: -13.12500286102295
    3. '_' → logprob: -15.37500286102295
    4. '\' → logprob: -17.750001907348633
    5. 's' → logprob: -17.750001907348633
    6. '_cards' → logprob: -17.750001907348633
    7. ')' → logprob: -18.500001907348633
    8. '
' → logprob: -18.750001907348633
    9. 'a' → logprob: -18.875001907348633
    10. '_s' → logprob: -19.125001907348633

Token 611: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0017049367306753993
    2. ' <=' → logprob: -6.376705169677734
    3. '+' → logprob: -13.001705169677734
    4. ')<=' → logprob: -15.376705169677734
    5. '≤' → logprob: -16.001705169677734
    6. '```' → logprob: -16.626705169677734
    7. ']<=' → logprob: -16.876705169677734
    8. 'le' → logprob: -17.376705169677734
    9. '>' → logprob: -18.001705169677734
    10. '<' → logprob: -18.001705169677734

Token 612: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.000553151941858232
    2. ' threshold' → logprob: -7.500553131103516
    3. 'th' → logprob: -16.500553131103516
    4. 'thr' → logprob: -20.125553131103516
    5. '_threshold' → logprob: -20.250553131103516
    6. '.threshold' → logprob: -21.375553131103516
    7. '
' → logprob: -21.750553131103516
    8. '   ' → logprob: -22.125553131103516
    9. ' ' → logprob: -22.375553131103516
    10. 'Threshold' → logprob: -23.000553131103516

Token 613: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12696968019008636
    2. 'else' → logprob: -2.126969575881958
    3. '       ' → logprob: -10.126969337463379
    4. '        ' → logprob: -14.126969337463379
    5. '	else' → logprob: -15.126969337463379
    6. ' ' → logprob: -15.751969337463379
    7. '   ' → logprob: -16.001970291137695
    8. '0' → logprob: -16.501970291137695
    9. '           ' → logprob: -16.876970291137695
    10. ' ' → logprob: -16.876970291137695

Token 614: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.125051498413086
    4. ' ' → logprob: -19.875051498413086
    5. '  ' → logprob: -20.250051498413086
    6. '.' → logprob: -20.500051498413086
    7. '```' → logprob: -20.625051498413086
    8. '۰' → logprob: -21.125051498413086
    9. '00' → logprob: -22.187551498413086
    10. '`' → logprob: -22.437551498413086

Token 615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '.' → logprob: -19.625001907348633
    5. '۰' → logprob: -19.875001907348633
    6. ' ' → logprob: -20.250001907348633
    7. '```' → logprob: -20.250001907348633
    8. '  ' → logprob: -20.625001907348633
    9. '０' → logprob: -21.500001907348633
    10. '00' → logprob: -21.812501907348633

Token 616: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.704273118884885e-07
    2. '.
' → logprob: -14.375000953674316
    3. '0' → logprob: -17.375
    4. '       ' → logprob: -17.625
    5. '```' → logprob: -19.5
    6. '.

' → logprob: -20.125
    7. '.
' → logprob: -20.25
    8. '1' → logprob: -20.5
    9. 'return' → logprob: -20.625
    10. ')' → logprob: -20.625

Token 617: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. 'float' → logprob: -13.875001907348633
    3. '.' → logprob: -14.625001907348633
    4. ' ' → logprob: -15.250001907348633
    5. '```' → logprob: -15.875001907348633
    6. 'return' → logprob: -17.875001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '1' → logprob: -18.375001907348633
    9. '5' → logprob: -18.375001907348633
    10. ' float' → logprob: -19.000001907348633

Token 618: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07637221366167068
    2. '
' → logprob: -2.7013721466064453
    3. '        
' → logprob: -5.326372146606445
    4. 'total' → logprob: -7.451372146606445
    5. '    
' → logprob: -8.701372146606445
    6. 'count' → logprob: -8.701372146606445
    7. ' total' → logprob: -8.826372146606445
    8. '   ' → logprob: -9.326372146606445
    9. '
' → logprob: -9.451372146606445
    10. ',' → logprob: -9.951372146606445

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008866164833307266
    2. '   ' → logprob: -5.758866310119629
    3. '
' → logprob: -6.133866310119629
    4. '	' → logprob: -6.883866310119629
    5. '        
' → logprob: -7.258866310119629
    6. '    
' → logprob: -8.258866310119629
    7. ' ' → logprob: -8.758866310119629
    8. '  
' → logprob: -8.883866310119629
    9. 'return' → logprob: -9.133866310119629
    10. '      ' → logprob: -9.508866310119629

Token 620: ' successful' (ID: 9359)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6084801554679871
    2. 'valid' → logprob: -1.3584802150726318
    3. 'count' → logprob: -2.608480215072632
    4. '       ' → logprob: -2.858480215072632
    5. 'success' → logprob: -2.858480215072632
    6. 'possible' → logprob: -5.733479976654053
    7. 'successful' (adapté à ' successful') → logprob: -6.108479976654053
    8. 'allowed' → logprob: -6.608479976654053
    9. 'f' → logprob: -7.108479976654053
    10. 'counts' → logprob: -7.608479976654053

Token 621: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4322853684425354
    2. ' =' → logprob: -1.5572853088378906
    3. '_cards' → logprob: -2.4322853088378906
    4. '_counts' → logprob: -3.8072853088378906
    5. '=' → logprob: -3.9322853088378906
    6. '_draw' → logprob: -5.307285308837891
    7. '_cases' → logprob: -5.557285308837891
    8. '_' → logprob: -7.557285308837891
    9. '_trials' → logprob: -8.43228530883789
    10. '_hits' → logprob: -8.55728530883789

Token 622: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007909557782113552
    2. 'sum' → logprob: -4.882909774780273
    3. ' ' → logprob: -8.382909774780273
    4. ' sum' → logprob: -9.632909774780273
    5. 'len' → logprob: -12.757909774780273
    6. '   ' → logprob: -13.257909774780273
    7. '[' → logprob: -13.757909774780273
    8. '{' → logprob: -14.382909774780273
    9. '```' → logprob: -14.382909774780273
    10. 'set' → logprob: -14.507909774780273

Token 623: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10026026517152786
    2. 'sum' → logprob: -2.3502602577209473
    3. 'len' → logprob: -10.225260734558105
    4. '[' → logprob: -11.975260734558105
    5. ' sum' → logprob: -12.350260734558105
    6. '[
' → logprob: -12.975260734558105
    7. '{' → logprob: -13.225260734558105
    8. ' ' → logprob: -14.475260734558105
    9. '```' → logprob: -14.850260734558105
    10. 'set' → logprob: -15.725260734558105

Token 624: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07069090753793716
    2. '<|end|>' → logprob: -2.945690870285034
    3. '
' → logprob: -4.695691108703613
    4. 'total' → logprob: -6.445691108703613
    5. '        ' → logprob: -7.195691108703613
    6. '<|end|>' → logprob: -7.195691108703613
    7. '.' → logprob: -7.195691108703613
    8. '/' → logprob: -7.695691108703613
    9. '   ' → logprob: -8.320691108703613
    10. ',' → logprob: -8.445691108703613

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7379992604255676
    2. ' for' → logprob: -2.112999200820923
    3. '.' → logprob: -2.237999200820923
    4. 'for' → logprob: -2.362999200820923
    5. '<|end|>' → logprob: -2.612999200820923
    6. '        ' → logprob: -2.987999200820923
    7. ' ' → logprob: -3.987999200820923
    8. 'total' → logprob: -4.362999439239502
    9. '=' → logprob: -4.487999439239502
    10. ')' → logprob: -4.987999439239502

Token 626: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.20175275206565857
    2. 'for' → logprob: -1.701752781867981
    3. '       ' → logprob: -8.451752662658691
    4. ' total' → logprob: -9.451752662658691
    5. ' for' → logprob: -10.076752662658691
    6. '   ' → logprob: -13.201752662658691
    7. '        
' → logprob: -14.451752662658691
    8. 'possible' → logprob: -14.451752662658691
    9. 'count' → logprob: -14.576752662658691
    10. 'Total' → logprob: -14.701752662658691

Token 627: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5771176815032959
    2. ' =' → logprob: -0.8271176815032959
    3. '=len' → logprob: -7.452117919921875
    4. '<|end|>' → logprob: -7.702117919921875
    5. '_tokens' → logprob: -9.827117919921875
    6. 'tokens' → logprob: -9.952117919921875
    7. '<|end|>' → logprob: -11.202117919921875
    8. ':' → logprob: -11.327117919921875
    9. ' ' → logprob: -12.452117919921875
    10. '=count' → logprob: -13.577117919921875

Token 628: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03805067762732506
    2. ' len' → logprob: -3.288050651550293
    3. '(len' → logprob: -12.288050651550293
    4. '=len' → logprob: -13.038050651550293
    5. 'float' → logprob: -13.663050651550293
    6. '0' → logprob: -14.913050651550293
    7. '	len' → logprob: -14.913050651550293
    8. '[len' → logprob: -15.538050651550293
    9. '<|end|>' → logprob: -15.663050651550293
    10. ' ' → logprob: -16.03805160522461

Token 629: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.0052547454833984375
    2. 'candidate' → logprob: -5.255254745483398
    3. '(' → logprob: -11.130254745483398
    4. ' candidate' → logprob: -12.255254745483398
    5. 'available' → logprob: -14.005254745483398
    6. '(card' → logprob: -15.255254745483398
    7. '_candidate' → logprob: -16.0052547454834
    8. '(cards' → logprob: -16.0052547454834
    9. ' (' → logprob: -16.2552547454834
    10. '(
' → logprob: -16.5052547454834

Token 630: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00011284107313258573
    2. 'cards' → logprob: -9.250112533569336
    3. 'candidate' → logprob: -11.625112533569336
    4. '_candidates' → logprob: -12.500112533569336
    5. 'Cards' → logprob: -13.250112533569336
    6. '_' → logprob: -14.750112533569336
    7. '_candidate' → logprob: -14.750112533569336
    8. '```' → logprob: -15.000112533569336
    9. ')' → logprob: -15.500112533569336
    10. '.cards' → logprob: -15.625112533569336

Token 631: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013274075172375888
    2. ')
' → logprob: -9.62513256072998
    3. '<|end|>' → logprob: -10.50013256072998
    4. ' )' → logprob: -10.87513256072998
    5. '       ' → logprob: -11.00013256072998
    6. '
' → logprob: -13.62513256072998
    7. '<|end|>' → logprob: -14.50013256072998
    8. '   ' → logprob: -14.62513256072998
    9. ' ' → logprob: -15.75013256072998
    10. ')return' → logprob: -16.000133514404297

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18718025088310242
    2. ' for' → logprob: -1.8121802806854248
    3. '   ' → logprob: -5.687180042266846
    4. 'for' → logprob: -6.312180042266846
    5. '
' → logprob: -7.562180042266846
    6. '	for' → logprob: -7.937180042266846
    7. '    
' → logprob: -8.062180519104004
    8. '        
' → logprob: -8.437180519104004
    9. ' 
' → logprob: -8.687180519104004
    10. ' ' → logprob: -9.062180519104004

Token 633: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5133375525474548
    2. ' for' → logprob: -1.2633376121520996
    3. 'for' (adapté à ' for') → logprob: -2.1383376121520996
    4. '	for' → logprob: -7.6383376121521
    5. '        
' → logprob: -8.763337135314941
    6. '   ' → logprob: -9.013337135314941
    7. '
' → logprob: -9.513337135314941
    8. ' ' → logprob: -10.763337135314941
    9. ' 
' → logprob: -10.763337135314941
    10. '    
' → logprob: -10.888337135314941

Token 634: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.12813517451286316
    2. ' card' → logprob: -2.1281352043151855
    3. 'candidate' → logprob: -7.3781352043151855
    4. '_card' → logprob: -8.503134727478027
    5. '_' → logprob: -8.753134727478027
    6. ' candidate' → logprob: -9.628134727478027
    7. 'extra' → logprob: -9.878134727478027
    8. 'draw' → logprob: -10.753134727478027
    9. ' _' → logprob: -11.003134727478027
    10. 'new' → logprob: -11.128134727478027

Token 635: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004651080351322889
    2. 'in' → logprob: -5.379651069641113
    3. '<|end|>' → logprob: -11.004651069641113
    4. ' ' → logprob: -12.004651069641113
    5. '<|end|>' → logprob: -12.879651069641113
    6. '	in' → logprob: -13.254651069641113
    7. 's' → logprob: -13.629651069641113
    8. '_in' → logprob: -13.879651069641113
    9. ',' → logprob: -15.629651069641113
    10. ' ' → logprob: -15.692151069641113

Token 636: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.0007104054093360901
    2. ' candidate' → logprob: -7.250710487365723
    3. '(candidate' → logprob: -15.375710487365723
    4. 'card' → logprob: -15.625710487365723
    5. '   ' → logprob: -18.250709533691406
    6. '_candidate' → logprob: -18.250709533691406
    7. ' ' → logprob: -19.875709533691406
    8. 'c' → logprob: -19.875709533691406
    9. ' candidat' → logprob: -20.250709533691406
    10. '
' → logprob: -20.500709533691406

Token 637: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00013595925702247769
    2. 'cards' → logprob: -9.000136375427246
    3. 'Cards' → logprob: -12.250136375427246
    4. '_' → logprob: -13.250136375427246
    5. '_candidates' → logprob: -13.625136375427246
    6. 'candidate' → logprob: -14.125136375427246
    7. 'ate' → logprob: -14.250136375427246
    8. ' cards' → logprob: -14.250136375427246
    9. '.cards' → logprob: -15.000136375427246
    10. '
' → logprob: -15.125136375427246

Token 638: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029788913205266
    2. ':
' → logprob: -3.5297889709472656
    3. '<|end|>' → logprob: -11.654788970947266
    4. '):
' → logprob: -11.779788970947266
    5. ':
' → logprob: -12.279788970947266
    6. ':

' → logprob: -12.904788970947266
    7. '       ' → logprob: -12.904788970947266
    8. ',' → logprob: -12.904788970947266
    9. '):' → logprob: -12.904788970947266
    10. '           ' → logprob: -12.904788970947266

Token 639: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011778471525758505
    2. ' if' → logprob: -7.251177787780762
    3. '       ' → logprob: -9.001177787780762
    4. '<|end|>' → logprob: -9.126177787780762
    5. '            
' → logprob: -10.126177787780762
    6. ':' → logprob: -10.501177787780762
    7. '   ' → logprob: -10.626177787780762
    8. ',' → logprob: -10.751177787780762
    9. '<|end|>' → logprob: -10.876177787780762
    10. '          ' → logprob: -11.251177787780762

Token 640: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.532651424407959
    2. ' if' → logprob: -1.407651424407959
    3. '           ' → logprob: -1.782651424407959
    4. '               ' → logprob: -11.032651901245117
    5. '
' → logprob: -12.032651901245117
    6. 'total' → logprob: -12.782651901245117
    7. '```' → logprob: -12.907651901245117
    8. '   ' → logprob: -13.157651901245117
    9. '	if' → logprob: -13.532651901245117
    10. '          ' → logprob: -13.657651901245117

Token 641: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.07891809940338135
    2. ' base' → logprob: -2.578917980194092
    3. '(base' → logprob: -10.70391845703125
    4. 'card' → logprob: -12.57891845703125
    5. '	base' → logprob: -13.95391845703125
    6. '   ' → logprob: -14.45391845703125
    7. ' ' → logprob: -15.07891845703125
    8. ' (' → logprob: -15.32891845703125
    9. '(' → logprob: -15.70391845703125
    10. ' ' → logprob: -15.82891845703125

Token 642: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.259079363080673e-05
    2. 'sum' → logprob: -11.375012397766113
    3. '_' → logprob: -15.000012397766113
    4. '_cards' → logprob: -15.625012397766113
    5. '_card' → logprob: -15.750012397766113
    6. '_SUM' → logprob: -16.62501335144043
    7. '.sum' → logprob: -16.62501335144043
    8. 'Sum' → logprob: -16.87501335144043
    9. 'value' → logprob: -17.12501335144043
    10. '_value' → logprob: -17.37501335144043

Token 643: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759409070014954
    2. '+' → logprob: -0.8259409070014954
    3. '+
' → logprob: -14.20094108581543
    4. ' +
' → logprob: -15.45094108581543
    5. '   ' → logprob: -15.95094108581543
    6. '           ' → logprob: -16.32594108581543
    7. '＋' → logprob: -16.32594108581543
    8. ' ' → logprob: -16.70094108581543
    9. ' plus' → logprob: -17.07594108581543
    10. '+

' → logprob: -17.07594108581543

Token 644: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.0011703446507453918
    2. ' card' → logprob: -6.7511701583862305
    3. '	card' → logprob: -17.001171112060547
    4. '(card' → logprob: -17.876171112060547
    5. ' ' → logprob: -20.251171112060547
    6. 'car' → logprob: -20.626171112060547
    7. 'token' → logprob: -20.626171112060547
    8. '.card' → logprob: -20.626171112060547
    9. 'Card' → logprob: -21.501171112060547
    10. '_card' → logprob: -21.751171112060547

Token 645: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -13.500001907348633
    3. ' .' → logprob: -16.375001907348633
    4. 'value' → logprob: -17.250001907348633
    5. '.Value' → logprob: -19.750001907348633
    6. '.values' → logprob: -19.750001907348633
    7. '.val' → logprob: -21.000001907348633
    8. ').' → logprob: -21.500001907348633
    9. '"value' → logprob: -21.875001907348633
    10. '.valor' → logprob: -22.000001907348633

Token 646: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4740777611732483
    2. ' <=' → logprob: -0.9740777611732483
    3. ')<=' → logprob: -14.474078178405762
    4. ' ' → logprob: -16.099077224731445
    5. ']<=' → logprob: -16.974077224731445
    6. ')' → logprob: -17.474077224731445
    7. '```' → logprob: -17.599077224731445
    8. ' ' → logprob: -17.849077224731445
    9. '≤' → logprob: -18.099077224731445
    10. '>' → logprob: -19.099077224731445

Token 647: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.0002613358374219388
    2. ' threshold' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.125261306762695
    4. '
' → logprob: -19.000261306762695
    5. 'th' → logprob: -19.875261306762695
    6. '           ' → logprob: -19.875261306762695
    7. '.threshold' → logprob: -21.000261306762695
    8. '_threshold' → logprob: -21.250261306762695
    9. '
' → logprob: -21.875261306762695
    10. 'thr' → logprob: -22.000261306762695

Token 648: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16079695522785187
    2. ':
' → logprob: -1.9107969999313354
    3. '           ' → logprob: -7.660797119140625
    4. '               ' → logprob: -10.035797119140625
    5. ':
' → logprob: -10.160797119140625
    6. '):
' → logprob: -11.535797119140625
    7. ',' → logprob: -13.160797119140625
    8. '):' → logprob: -13.285797119140625
    9. '          ' → logprob: -13.410797119140625
    10. ':

' → logprob: -13.785797119140625

Token 649: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016341915354132652
    2. 'successful' → logprob: -4.891341686248779
    3. ' successful' → logprob: -5.141341686248779
    4. '           ' → logprob: -6.016341686248779
    5. ':
' → logprob: -8.766342163085938
    6. '):
' → logprob: -10.141342163085938
    7. ':' → logprob: -10.141342163085938
    8. ',' → logprob: -10.141342163085938
    9. '   ' → logprob: -10.391342163085938
    10. 'success' → logprob: -11.141342163085938

Token 650: ' successful' (ID: 9359)
  Prédit: 'successful'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'successful' (adapté à ' successful') → logprob: -0.0009417156688869
    2. ' successful' → logprob: -7.000941753387451
    3. '               ' → logprob: -10.750941276550293
    4. '           ' → logprob: -12.000941276550293
    5. 'success' → logprob: -13.625941276550293
    6. '   ' → logprob: -14.000941276550293
    7. '                   ' → logprob: -14.500941276550293
    8. '       ' → logprob: -16.12594223022461
    9. 'Successful' → logprob: -18.00094223022461
    10. '                
' → logprob: -18.37594223022461

Token 651: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07892955839633942
    2. ' +=' → logprob: -2.5789296627044678
    3. '           ' → logprob: -10.828929901123047
    4. '               ' → logprob: -11.578929901123047
    5. ']+=' → logprob: -12.453929901123047
    6. '   ' → logprob: -13.203929901123047
    7. '                   ' → logprob: -13.953929901123047
    8. '            ' → logprob: -14.203929901123047
    9. '                ' → logprob: -14.328929901123047
    10. '+' → logprob: -14.328929901123047

Token 652: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -20.125001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '<|end|>' → logprob: -21.500001907348633
    6. '۱' → logprob: -22.125001907348633
    7. '0' → logprob: -22.750001907348633
    8. '`' → logprob: -23.062501907348633
    9. '１' → logprob: -23.562501907348633
    10. '2' → logprob: -23.687501907348633

Token 653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. 'card' → logprob: -20.625
    4. '
' → logprob: -22.625
    5. '   ' → logprob: -22.75
    6. '```' → logprob: -23.0625
    7. '１' → logprob: -23.375
    8. '۱' → logprob: -23.875
    9. 'count' → logprob: -24.0
    10. '2' → logprob: -24.25

Token 654: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006730407476425171
    2. '
' → logprob: -5.381730556488037
    3. ' return' → logprob: -6.881730556488037
    4. 'return' → logprob: -7.506730556488037
    5. '        
' → logprob: -8.631730079650879
    6. '  
' → logprob: -9.631730079650879
    7. '   ' → logprob: -9.631730079650879
    8. '<|end|>' → logprob: -9.756730079650879
    9. '    
' → logprob: -10.256730079650879
    10. '\n' → logprob: -10.506730079650879

Token 655: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039968726923689246
    2. ' return' → logprob: -8.250399589538574
    3. 'return' → logprob: -9.000399589538574
    4. '
' → logprob: -11.750399589538574
    5. '   ' → logprob: -12.125399589538574
    6. '	return' → logprob: -14.500399589538574
    7. '```' → logprob: -14.750399589538574
    8. '	' → logprob: -14.875399589538574
    9. '        
' → logprob: -16.00040054321289
    10. '      ' → logprob: -16.50040054321289

Token 656: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.252410352230072
    2. 'return' (adapté à ' return') → logprob: -1.5024104118347168
    3. ' return' → logprob: -7.752410411834717
    4. '   ' → logprob: -10.502409934997559
    5. '```' → logprob: -11.502409934997559
    6. '
' → logprob: -12.127409934997559
    7. '	return' → logprob: -13.127409934997559
    8. ':return' → logprob: -13.127409934997559
    9. '        
' → logprob: -13.502409934997559
    10. '{return' → logprob: -14.502409934997559

Token 657: ' successful' (ID: 9359)
  Prédit: 'successful'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'successful' → logprob: -0.02324605919420719
    2. ' successful' → logprob: -3.7732460498809814
    3. 'success' → logprob: -15.023245811462402
    4. 'float' → logprob: -15.648245811462402
    5. ' ' → logprob: -17.77324676513672
    6. '(success' → logprob: -17.89824676513672
    7. ' float' → logprob: -18.52324676513672
    8. '0' → logprob: -18.64824676513672
    9. '1' → logprob: -19.27324676513672
    10. ' unsuccessful' → logprob: -19.52324676513672

Token 658: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6931484341621399
    2. ' /' → logprob: -0.6931484341621399
    3. ' ' → logprob: -14.443148612976074
    4. '   ' → logprob: -15.693148612976074
    5. '/
' → logprob: -15.693148612976074
    6. '```' → logprob: -16.193147659301758
    7. '       ' → logprob: -16.318147659301758
    8. ' ' → logprob: -17.318147659301758
    9. ' /
' → logprob: -17.443147659301758
    10. '*' → logprob: -17.818147659301758

Token 659: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -2.7610454708337784e-05
    2. ' total' → logprob: -10.500027656555176
    3. '
' → logprob: -21.37502670288086
    4. '   ' → logprob: -21.37502670288086
    5. '(total' → logprob: -22.87502670288086
    6. '	total' → logprob: -23.12502670288086
    7. '$total' → logprob: -23.75002670288086
    8. '           ' → logprob: -24.00002670288086
    9. '       ' → logprob: -24.12502670288086
    10. ' ' → logprob: -24.12502670288086

Token 660: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 661: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 662: ' Input' (ID: 10090)
  Prédit: ' Blackjack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Blackjack' → logprob: -0.8026626110076904
    2. ' Game' → logprob: -1.6776626110076904
    3. ' Player' → logprob: -3.1776626110076904
    4. 'Game' → logprob: -3.3026626110076904
    5. ' Strategy' → logprob: -3.5526626110076904
    6. ' Probability' → logprob: -3.8026626110076904
    7. 'Strategy' → logprob: -3.9276626110076904
    8. 'Dealer' → logprob: -3.9276626110076904
    9. ' Black' → logprob: -3.9276626110076904
    10. 'Probability' → logprob: -4.0526628494262695

Token 663: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.24476829171180725
    2. 'Parser' → logprob: -2.1197683811187744
    3. 'Processor' → logprob: -3.1197683811187744
    4. 'Reader' → logprob: -3.3697683811187744
    5. 'Validator' → logprob: -4.619768142700195
    6. 'Data' → logprob: -6.494768142700195
    7. 'Interface' → logprob: -6.744768142700195
    8. 'Assistant' → logprob: -6.994768142700195
    9. 'Manager' → logprob: -7.369768142700195
    10. 'Provider' → logprob: -7.744768142700195

Token 664: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030709904967807233
    2. ':
' → logprob: -8.125307083129883
    3. ' :' → logprob: -12.875307083129883
    4. '<|end|>' → logprob: -12.875307083129883
    5. '(' → logprob: -13.375307083129883
    6. '():' → logprob: -13.625307083129883
    7. ':def' → logprob: -13.625307083129883
    8. ':

' → logprob: -14.875307083129883
    9. '):' → logprob: -15.125307083129883
    10. ':**' → logprob: -15.750307083129883

Token 665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030341489240527153
    2. ' def' → logprob: -3.530341386795044
    3. 'def' → logprob: -8.030341148376465
    4. '```' → logprob: -8.905341148376465
    5. ' class' → logprob: -10.655341148376465
    6. '    ' → logprob: -11.030341148376465
    7. 'class' → logprob: -11.280341148376465
    8. ':' → logprob: -11.405341148376465
    9. ' indentation' → logprob: -11.405341148376465
    10. 'import' → logprob: -11.405341148376465

Token 666: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.643179714679718
    2. 'def' (adapté à ' def') → logprob: -1.7681796550750732
    3. ' @' → logprob: -1.8931796550750732
    4. '@' → logprob: -1.8931796550750732
    5. '   ' → logprob: -6.018179893493652
    6. 'import' → logprob: -9.518179893493652
    7. 'class' → logprob: -10.768179893493652
    8. 'IND' → logprob: -12.393179893493652
    9. ' import' → logprob: -12.643179893493652
    10. '@param' → logprob: -13.143179893493652

Token 667: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.1907857358455658
    2. 'def' → logprob: -2.3157856464385986
    3. 'init' → logprob: -3.6907856464385986
    4. ' __' → logprob: -3.8157856464385986
    5. '__' → logprob: -4.315785884857178
    6. ' def' → logprob: -5.065785884857178
    7. 'classmethod' → logprob: -6.065785884857178
    8. '_' → logprob: -6.815785884857178
    9. 'static' → logprob: -6.815785884857178
    10. ' static' → logprob: -7.190785884857178

Token 668: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.005285223014652729
    2. 'new' → logprob: -5.380285263061523
    3. 'Init' → logprob: -8.130285263061523
    4. 'it' → logprob: -8.880285263061523
    5. 'class' → logprob: -9.630285263061523
    6. 'classmethod' → logprob: -10.255285263061523
    7. 'staticmethod' → logprob: -10.630285263061523
    8. 'iter' → logprob: -10.755285263061523
    9. '```' → logprob: -11.005285263061523
    10. 'Lines' → logprob: -11.130285263061523

Token 669: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.28266555070877075
    2. '(self' → logprob: -1.532665491104126
    3. '(' → logprob: -4.157665729522705
    4. '__(
' → logprob: -5.032665729522705
    5. '<|end|>' → logprob: -5.532665729522705
    6. 'self' → logprob: -6.532665729522705
    7. '__' → logprob: -6.782665729522705
    8. ' (' → logprob: -7.032665729522705
    9. '__((' → logprob: -8.657665252685547
    10. '_(' → logprob: -8.782665252685547

Token 670: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03918533772230148
    2. ')' → logprob: -3.2891852855682373
    3. '):
' → logprob: -7.039185523986816
    4. '
' → logprob: -9.164185523986816
    5. '):' → logprob: -9.289185523986816
    6. ' self' → logprob: -10.539185523986816
    7. '   ' → logprob: -11.289185523986816
    8. '(self' → logprob: -12.164185523986816
    9. '):

' → logprob: -12.289185523986816
    10. '){' → logprob: -12.539185523986816

Token 671: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3587898910045624
    2. ',' → logprob: -1.4837899208068848
    3. '):
' → logprob: -2.7337899208068848
    4. 'self' → logprob: -5.358789920806885
    5. '   ' → logprob: -5.983789920806885
    6. ')' → logprob: -6.233789920806885
    7. '       ' → logprob: -9.233789443969727
    8. '(self' → logprob: -9.733789443969727
    9. '):
' → logprob: -9.858789443969727
    10. ' ):' → logprob: -9.858789443969727

Token 672: ' source' (ID: 4256)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4222996234893799
    2. ' input' → logprob: -1.1722996234893799
    3. ')' → logprob: -5.047299385070801
    4. 'line' → logprob: -5.047299385070801
    5. 'deck' → logprob: -5.297299385070801
    6. 'raw' → logprob: -5.672299385070801
    7. ' raw' → logprob: -5.797299385070801
    8. 'text' → logprob: -5.797299385070801
    9. ' deck' → logprob: -6.547299385070801
    10. ' line' → logprob: -6.672299385070801

Token 673: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05554547533392906
    2. '):' → logprob: -3.0555455684661865
    3. '=' → logprob: -5.930545330047607
    4. ' :' → logprob: -6.055545330047607
    5. ')' → logprob: -7.305545330047607
    6. '):
' → logprob: -7.430545330047607
    7. '=None' → logprob: -7.805545330047607
    8. ' ):' → logprob: -9.180545806884766
    9. ':str' → logprob: -9.430545806884766
    10. ',' → logprob: -11.430545806884766

Token 674: ' Iterator' (ID: 41994)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03141101449728012
    2. 'Iterator' → logprob: -4.156411170959473
    3. ' str' → logprob: -4.531411170959473
    4. 'List' → logprob: -6.531411170959473
    5. ')' → logprob: -6.781411170959473
    6. 'Optional' → logprob: -7.156411170959473
    7. 'iter' → logprob: -8.031411170959473
    8. 'list' → logprob: -8.531411170959473
    9. ' Iterator' → logprob: -9.031411170959473
    10. '[str' → logprob: -9.406411170959473

Token 675: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -7.896309739408025e-07
    2. 'str' → logprob: -14.125000953674316
    3. '[int' → logprob: -18.0
    4. '=str' → logprob: -18.0
    5. ')' → logprob: -18.25
    6. '```' → logprob: -18.75
    7. '
' → logprob: -18.875
    8. '	str' → logprob: -19.625
    9. 'Str' → logprob: -19.75
    10. '):' → logprob: -20.125

Token 676: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.12217072397470474
    2. ']):' → logprob: -2.2471706867218018
    3. ']' → logprob: -5.122170925140381
    4. '])' → logprob: -5.872170925140381
    5. '[' → logprob: -8.247170448303223
    6. '):
' → logprob: -9.247170448303223
    7. '[str' → logprob: -9.997170448303223
    8. '   ' → logprob: -10.747170448303223
    9. ')' → logprob: -10.872170448303223
    10. ' ]' → logprob: -10.872170448303223

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003780831815674901
    2. ':' → logprob: -5.878780841827393
    3. '   ' → logprob: -7.503780841827393
    4. '	' → logprob: -8.878780364990234
    5. '<|end|>' → logprob: -9.503780364990234
    6. ',' → logprob: -10.253780364990234
    7. 'self' → logprob: -10.378780364990234
    8. '      ' → logprob: -10.378780364990234
    9. '    ' → logprob: -11.003780364990234
    10. ' ' → logprob: -11.128780364990234

Token 678: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00034940900513902307
    2. ' self' → logprob: -8.250349044799805
    3. '       ' → logprob: -9.375349044799805
    4. 'source' → logprob: -12.750349044799805
    5. 'import' → logprob: -16.250349044799805
    6. '	self' → logprob: -16.250349044799805
    7. '   ' → logprob: -16.750349044799805
    8. 'line' → logprob: -17.875349044799805
    9. '(self' → logprob: -18.000349044799805
    10. 'next' → logprob: -18.000349044799805

Token 679: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.31380555033683777
    2. '._' → logprob: -1.3138055801391602
    3. '.' → logprob: -7.68880558013916
    4. 'source' → logprob: -9.81380558013916
    5. '_source' → logprob: -10.68880558013916
    6. ' .' → logprob: -12.68880558013916
    7. '.__' → logprob: -13.31380558013916
    8. ' source' → logprob: -14.31380558013916
    9. '	source' → logprob: -14.31380558013916
    10. '.tokens' → logprob: -15.18880558013916

Token 680: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03853139281272888
    2. ' =' → logprob: -3.2885313034057617
    3. '_iter' → logprob: -8.288531303405762
    4. '_iterator' → logprob: -9.788531303405762
    5. '_token' → logprob: -10.163531303405762
    6. '_' → logprob: -10.288531303405762
    7. '_tokens' → logprob: -10.413531303405762
    8. '   ' → logprob: -10.913531303405762
    9. ' ' → logprob: -11.038531303405762
    10. '	' → logprob: -11.913531303405762

Token 681: ' source' (ID: 4256)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -9.77022064034827e-05
    2. ' source' → logprob: -9.500097274780273
    3. '(source' → logprob: -11.125097274780273
    4. 'iter' → logprob: -11.750097274780273
    5. '	source' → logprob: -16.375097274780273
    6. ' iter' → logprob: -17.375097274780273
    7. '[source' → logprob: -17.750097274780273
    8. '
' → logprob: -18.500097274780273
    9. '_source' → logprob: -19.000097274780273
    10. 'enumer' → logprob: -19.125097274780273

Token 682: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02091168612241745
    2. '
' → logprob: -3.895911693572998
    3. 'def' → logprob: -8.27091121673584
    4. '    
' → logprob: -9.39591121673584
    5. '       ' → logprob: -12.14591121673584
    6. '<|end|>' → logprob: -12.14591121673584
    7. ' def' → logprob: -12.27091121673584
    8. ':' → logprob: -12.77091121673584
    9. '.next' → logprob: -13.39591121673584
    10. ',' → logprob: -13.39591121673584

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020568605395965278
    2. '
' → logprob: -9.000205993652344
    3. '    
' → logprob: -10.125205993652344
    4. 'def' → logprob: -10.250205993652344
    5. ' def' → logprob: -13.375205993652344
    6. '```' → logprob: -13.500205993652344
    7. '<|end|>' → logprob: -14.000205993652344
    8. '       ' → logprob: -14.000205993652344
    9. '	def' → logprob: -14.250205993652344
    10. '        
' → logprob: -14.750205993652344

Token 684: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4720062017440796
    2. '   ' → logprob: -1.2220062017440796
    3. '
' → logprob: -2.972006320953369
    4. ' def' → logprob: -3.597006320953369
    5. ':' → logprob: -7.097006320953369
    6. '    
' → logprob: -7.222006320953369
    7. '	def' → logprob: -7.347006320953369
    8. ' ' → logprob: -9.097005844116211
    9. '_next' → logprob: -9.347005844116211
    10. '  ' → logprob: -9.472005844116211

Token 685: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.657466471195221
    2. 'next' → logprob: -0.907466471195221
    3. '_next' → logprob: -3.032466411590576
    4. ' next' → logprob: -4.032466411590576
    5. 'parse' → logprob: -5.157466411590576
    6. 'read' → logprob: -5.782466411590576
    7. ' __' → logprob: -5.907466411590576
    8. 'def' → logprob: -8.157466888427734
    9. ' readline' → logprob: -9.282466888427734
    10. 'get' → logprob: -9.407466888427734

Token 686: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.38724714517593384
    2. 'next' → logprob: -1.137247085571289
    3. 'init' → logprob: -7.887247085571289
    4. ' next' → logprob: -14.762247085571289
    5. 'an' → logprob: -16.38724708557129
    6. 'iterator' → logprob: -16.51224708557129
    7. 'ait' → logprob: -18.13724708557129
    8. '_next' → logprob: -18.51224708557129
    9. 'Next' → logprob: -19.26224708557129
    10. '_iter' → logprob: -19.38724708557129

Token 687: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00525510311126709
    2. '__(' → logprob: -5.380255222320557
    3. '(' → logprob: -7.380255222320557
    4. '   ' → logprob: -13.005254745483398
    5. '(
' → logprob: -13.005254745483398
    6. ' (' → logprob: -13.630254745483398
    7. '__' → logprob: -13.755254745483398
    8. '
' → logprob: -13.880254745483398
    9. 'self' → logprob: -13.880254745483398
    10. '__(
' → logprob: -14.130254745483398

Token 688: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.1080467781284824e-05
    2. ')' → logprob: -10.375041007995605
    3. '
' → logprob: -11.875041007995605
    4. ' self' → logprob: -13.000041007995605
    5. '(self' → logprob: -15.625041007995605
    6. '	self' → logprob: -16.250041961669922
    7. '):
' → logprob: -16.500041961669922
    8. ')(' → logprob: -16.875041961669922
    9. '   ' → logprob: -17.000041961669922
    10. ')
' → logprob: -17.000041961669922

Token 689: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3149051070213318
    2. '):' → logprob: -1.3149051666259766
    3. 'self' → logprob: -7.064905166625977
    4. ')' → logprob: -7.439905166625977
    5. '):
' → logprob: -8.939905166625977
    6. '   ' → logprob: -9.939905166625977
    7. '):

' → logprob: -11.564905166625977
    8. '       ' → logprob: -12.189905166625977
    9. '(self' → logprob: -12.814905166625977
    10. ',' → logprob: -13.439905166625977

Token 690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009512408869341016
    2. ':' → logprob: -7.875951290130615
    3. ':
' → logprob: -7.875951290130615
    4. '   ' → logprob: -9.625950813293457
    5. '    ' → logprob: -10.250950813293457
    6. '
' → logprob: -11.000950813293457
    7. '    
' → logprob: -11.500950813293457
    8. '      ' → logprob: -11.750950813293457
    9. ' 
' → logprob: -11.750950813293457
    10. ')' → logprob: -12.000950813293457

Token 691: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31429633498191833
    2. ' return' → logprob: -1.3142963647842407
    3. '       ' → logprob: -7.189296245574951
    4. 'self' → logprob: -8.43929672241211
    5. '   ' → logprob: -9.93929672241211
    6. ' self' → logprob: -12.18929672241211
    7. '    ' → logprob: -12.31429672241211
    8. 'yield' → logprob: -12.68929672241211
    9. ' ' → logprob: -13.93929672241211
    10. '     ' → logprob: -15.06429672241211

Token 692: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007099286303855479
    2. ' self' → logprob: -7.2507100105285645
    3. '	self' → logprob: -19.875709533691406
    4. '(self' → logprob: -20.250709533691406
    5. 'this' → logprob: -21.625709533691406
    6. 's' → logprob: -21.750709533691406
    7. '[self' → logprob: -21.875709533691406
    8. 'iter' → logprob: -22.500709533691406
    9. ' ' → logprob: -22.625709533691406
    10. '
' → logprob: -22.625709533691406

Token 693: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00036775172338820994
    2. '
' → logprob: -8.125368118286133
    3. 'def' → logprob: -10.375368118286133
    4. '    
' → logprob: -11.125368118286133
    5. '<|end|>' → logprob: -11.750368118286133
    6. ' def' → logprob: -12.125368118286133
    7. '<|end|>' → logprob: -12.875368118286133
    8. '	def' → logprob: -13.125368118286133
    9. '```' → logprob: -13.500368118286133
    10. ' ' → logprob: -13.875368118286133

Token 695: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19603052735328674
    2. 'def' (adapté à ' def') → logprob: -2.071030616760254
    3. '   ' → logprob: -3.071030616760254
    4. ' def' → logprob: -5.571030616760254
    5. '    
' → logprob: -7.946030616760254
    6. '  
' → logprob: -8.071030616760254
    7. ':' → logprob: -8.446030616760254
    8. ' 
' → logprob: -8.821030616760254
    9. '	def' → logprob: -8.821030616760254
    10. '[' → logprob: -8.946030616760254

Token 696: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00275602238252759
    2. ' __' → logprob: -6.127756118774414
    3. 'next' → logprob: -8.252756118774414
    4. 'def' → logprob: -8.377756118774414
    5. '_next' → logprob: -10.002756118774414
    6. ' next' → logprob: -11.002756118774414
    7. '.__' → logprob: -12.002756118774414
    8. ' def' → logprob: -12.252756118774414
    9. '___' → logprob: -13.002756118774414
    10. '   ' → logprob: -13.127756118774414

Token 697: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.9361264946837764e-07
    2. ' next' → logprob: -15.75
    3. 'iter' → logprob: -17.5
    4. '_next' → logprob: -18.375
    5. 'an' → logprob: -19.25
    6. '.next' → logprob: -20.375
    7. '(next' → logprob: -21.25
    8. 'Next' → logprob: -22.0
    9. '
' → logprob: -22.5
    10. '-next' → logprob: -23.25

Token 698: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004114138428121805
    2. '__' → logprob: -6.004114151000977
    3. '(self' → logprob: -6.504114151000977
    4. '()(' → logprob: -9.754114151000977
    5. '()' → logprob: -10.504114151000977
    6. '__(
' → logprob: -11.129114151000977
    7. '(' → logprob: -11.254114151000977
    8. '__('' → logprob: -11.629114151000977
    9. '_(' → logprob: -12.504114151000977
    10. '__()

' → logprob: -12.629114151000977

Token 699: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004087305162101984
    2. ')' → logprob: -5.504087448120117
    3. '):' → logprob: -12.754087448120117
    4. ' self' → logprob: -13.254087448120117
    5. '):
' → logprob: -13.754087448120117
    6. '
' → logprob: -13.754087448120117
    7. '(self' → logprob: -13.879087448120117
    8. ')=' → logprob: -15.754087448120117
    9. '<|end|>' → logprob: -15.754087448120117
    10. ')
' → logprob: -16.004087448120117

Token 700: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06292644143104553
    2. ')' → logprob: -3.5629265308380127
    3. '):
' → logprob: -4.062926292419434
    4. '(self' → logprob: -4.812926292419434
    5. 'self' → logprob: -5.187926292419434
    6. ')(' → logprob: -6.687926292419434
    7. '():' → logprob: -8.937926292419434
    8. ' self' → logprob: -9.562926292419434
    9. ':' → logprob: -9.812926292419434
    10. ')(
' → logprob: -10.187926292419434

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020747212693095207
    2. 'return' → logprob: -7.252074718475342
    3. 'line' → logprob: -7.377074718475342
    4. ' line' → logprob: -8.1270751953125
    5. 'while' → logprob: -8.8770751953125
    6. 'for' → logprob: -9.5020751953125
    7. ' for' → logprob: -9.6270751953125
    8. ' return' → logprob: -10.1270751953125
    9. ' while' → logprob: -10.3770751953125
    10. 'try' → logprob: -10.6270751953125

Token 702: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16360755264759064
    2. 'while' (adapté à ' while') → logprob: -2.413607597351074
    3. ' line' → logprob: -3.413607597351074
    4. ' while' → logprob: -4.413607597351074
    5. 'for' → logprob: -5.163607597351074
    6. '       ' → logprob: -5.163607597351074
    7. 'return' → logprob: -5.913607597351074
    8. ' for' → logprob: -6.913607597351074
    9. 'token' → logprob: -7.038607597351074
    10. ' return' → logprob: -8.663607597351074

Token 703: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0024894531816244125
    2. ' True' → logprob: -6.0024895668029785
    3. '(True' → logprob: -11.25248908996582
    4. 'true' → logprob: -15.00248908996582
    5. 'line' → logprob: -15.50248908996582
    6. '1' → logprob: -15.62748908996582
    7. '
' → logprob: -16.25248908996582
    8. '   ' → logprob: -17.12748908996582
    9. 'TRUE' → logprob: -17.62748908996582
    10. '(' → logprob: -17.87748908996582

Token 704: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05527670681476593
    2. ':' → logprob: -3.18027663230896
    3. ':
' → logprob: -4.555276870727539
    4. ',' → logprob: -6.930276870727539
    5. ' and' → logprob: -8.180276870727539
    6. '       ' → logprob: -8.805276870727539
    7. ' line' → logprob: -8.930276870727539
    8. '<|end|>' → logprob: -11.555276870727539
    9. '          ' → logprob: -11.680276870727539
    10. 'string' → logprob: -11.680276870727539

Token 705: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2315652072429657
    2. 'line' → logprob: -1.731565237045288
    3. ' line' → logprob: -3.606565237045288
    4. 'try' → logprob: -6.606564998626709
    5. 'input' → logprob: -7.981564998626709
    6. 'token' → logprob: -8.231565475463867
    7. '   ' → logprob: -8.356565475463867
    8. '       ' → logprob: -8.981565475463867
    9. '	line' → logprob: -9.606565475463867
    10. 'raw' → logprob: -9.731565475463867

Token 706: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0032076577190309763
    2. ' line' → logprob: -5.753207683563232
    3. '           ' → logprob: -10.753207206726074
    4. '   ' → logprob: -12.253207206726074
    5. 'try' → logprob: -13.128207206726074
    6. 'raw' → logprob: -14.503207206726074
    7. '       ' → logprob: -14.878207206726074
    8. '	line' → logprob: -15.003207206726074
    9. 'token' → logprob: -15.628207206726074
    10. '_line' → logprob: -15.878207206726074

Token 707: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602294147014618
    2. '=' → logprob: -1.9102294445037842
    3. '=line' → logprob: -12.410229682922363
    4. 's' → logprob: -15.035229682922363
    5. ' ' → logprob: -15.410229682922363
    6. ':' → logprob: -15.535229682922363
    7. '_line' → logprob: -16.035228729248047
    8. ' =
' → logprob: -16.410228729248047
    9. '=
' → logprob: -16.910228729248047
    10. 'line' → logprob: -16.910228729248047

Token 708: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -3.583550642360933e-05
    2. ' next' → logprob: -10.250036239624023
    3. '(next' → logprob: -14.750036239624023
    4. '	next' → logprob: -18.875036239624023
    5. '[next' → logprob: -20.500036239624023
    6. '.next' → logprob: -20.750036239624023
    7. ',next' → logprob: -22.625036239624023
    8. '
' → logprob: -23.625036239624023
    9. '_next' → logprob: -24.000036239624023
    10. 'self' → logprob: -24.250036239624023

Token 709: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.054500666621607e-06
    2. 'self' → logprob: -12.75000286102295
    3. '(' → logprob: -18.125003814697266
    4. '(
' → logprob: -18.625003814697266
    5. '=self' → logprob: -20.750003814697266
    6. 's' → logprob: -21.375003814697266
    7. ',self' → logprob: -21.500003814697266
    8. '[self' → logprob: -21.625003814697266
    9. '1' → logprob: -22.250003814697266
    10. ' self' → logprob: -22.375003814697266

Token 710: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -2.47495681833243e-05
    2. '.user' → logprob: -11.250024795532227
    3. '.' → logprob: -11.750024795532227
    4. ').' → logprob: -13.375024795532227
    5. 'source' → logprob: -13.625024795532227
    6. '.s' → logprob: -14.250024795532227
    7. '.self' → logprob: -16.375024795532227
    8. ' .' → logprob: -16.625024795532227
    9. '.sources' → logprob: -16.750024795532227
    10. '.system' → logprob: -17.375024795532227

Token 711: ')
' (ID: 446)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0008184424950741231
    2. ')' → logprob: -7.125818252563477
    3. ')
' → logprob: -11.625818252563477
    4. ',' → logprob: -12.625818252563477
    5. ' ).' → logprob: -14.625818252563477
    6. '()).' → logprob: -14.750818252563477
    7. '").' → logprob: -15.250818252563477
    8. '.strip' → logprob: -15.375818252563477
    9. '().' → logprob: -16.250818252563477
    10. '("").' → logprob: -16.625818252563477

Token 712: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01923583820462227
    2. '.strip' → logprob: -4.269235610961914
    3. ' if' → logprob: -6.394235610961914
    4. 'strip' → logprob: -6.894235610961914
    5. '            
' → logprob: -7.894235610961914
    6. '.rstrip' → logprob: -8.144235610961914
    7. ' stripped' → logprob: -8.269235610961914
    8. '       ' → logprob: -8.269235610961914
    9. '.' → logprob: -8.769235610961914
    10. 'if' → logprob: -9.019235610961914

Token 713: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5557013154029846
    2. 'if' (adapté à ' if') → logprob: -1.4307012557983398
    3. 'strip' → logprob: -2.55570125579834
    4. ' if' → logprob: -3.55570125579834
    5. ' stripped' → logprob: -3.55570125579834
    6. ' line' → logprob: -4.05570125579834
    7. 'str' → logprob: -4.05570125579834
    8. '           ' → logprob: -4.18070125579834
    9. '=line' → logprob: -7.18070125579834
    10. 's' → logprob: -7.18070125579834

Token 714: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0003646633995231241
    2. ' line' → logprob: -8.000364303588867
    3. 'not' → logprob: -10.500364303588867
    4. ' not' → logprob: -13.750364303588867
    5. '(line' → logprob: -15.250364303588867
    6. 'len' → logprob: -16.125364303588867
    7. '#line' → logprob: -16.375364303588867
    8. '=line' → logprob: -16.625364303588867
    9. 'lin' → logprob: -16.875364303588867
    10. '	line' → logprob: -16.875364303588867

Token 715: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0549624040722847
    2. '.' → logprob: -2.929962396621704
    3. 'strip' → logprob: -10.679962158203125
    4. ' and' → logprob: -10.929962158203125
    5. '.rstrip' → logprob: -11.429962158203125
    6. '.trim' → logprob: -11.429962158203125
    7. ':' → logprob: -12.429962158203125
    8. 'and' → logprob: -12.679962158203125
    9. '.startswith' → logprob: -12.679962158203125
    10. '==' → logprob: -13.054962158203125

Token 716: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2569095492362976
    2. '()' → logprob: -2.0069096088409424
    3. ':' → logprob: -2.6319096088409424
    4. '()!=' → logprob: -4.506909370422363
    5. '==' → logprob: -5.881909370422363
    6. '()==' → logprob: -6.006909370422363
    7. '!=' → logprob: -6.131909370422363
    8. ' !=' → logprob: -7.381909370422363
    9. '<|end|>' → logprob: -7.756909370422363
    10. '():
' → logprob: -8.131909370422363

Token 717: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5698273777961731
    2. '!=' → logprob: -1.3198273181915283
    3. '==' → logprob: -2.5698273181915283
    4. 'and' → logprob: -3.3198273181915283
    5. ' !=' → logprob: -3.4448273181915283
    6. ' and' → logprob: -3.9448273181915283
    7. '!='' → logprob: -6.569827556610107
    8. ':
' → logprob: -7.819827556610107
    9. ' ==' → logprob: -7.819827556610107
    10. '!="' → logprob: -8.31982707977295

Token 718: ' '':
' (ID: 125614)
  Prédit: '"":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"":' → logprob: -0.5807791948318481
    2. ''' → logprob: -0.9557791948318481
    3. '''' → logprob: -3.0807790756225586
    4. '""' → logprob: -4.955779075622559
    5. '"' → logprob: -5.830779075622559
    6. ''ex' → logprob: -10.330779075622559
    7. '":' → logprob: -10.955779075622559
    8. ''or' → logprob: -11.580779075622559
    9. ''',' → logprob: -11.830779075622559
    10. '''.' → logprob: -11.955779075622559

Token 719: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001899959403090179
    2. 'continue' → logprob: -6.5019001960754395
    3. ' continue' → logprob: -8.501899719238281
    4. ':' → logprob: -8.626899719238281
    5. ':
' → logprob: -12.001899719238281
    6. ',' → logprob: -12.876899719238281
    7. '           ' → logprob: -12.876899719238281
    8. '                   ' → logprob: -13.751899719238281
    9. '_continue' → logprob: -14.626899719238281
    10. ' or' → logprob: -15.001899719238281

Token 720: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.006745447404682636
    2. ' continue' → logprob: -5.006745338439941
    3. '               ' → logprob: -10.506745338439941
    4. '           ' → logprob: -13.631745338439941
    5. 'return' → logprob: -14.506745338439941
    6. '                   ' → logprob: -14.631745338439941
    7. 'break' → logprob: -15.256745338439941
    8. '	continue' → logprob: -15.506745338439941
    9. '   ' → logprob: -16.631746292114258
    10. 'continu' → logprob: -17.006746292114258

Token 721: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003497666330076754
    2. 'return' → logprob: -8.250349998474121
    3. ' return' → logprob: -10.125349998474121
    4. '       ' → logprob: -10.625349998474121
    5. '               ' → logprob: -11.750349998474121
    6. '            
' → logprob: -13.000349998474121
    7. 'token' → logprob: -13.125349998474121
    8. 'tokens' → logprob: -13.250349998474121
    9. 'else' → logprob: -13.375349998474121
    10. '
' → logprob: -13.625349998474121

Token 722: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019863289780914783
    2. 'return' → logprob: -6.251986503601074
    3. ' return' → logprob: -9.876986503601074
    4. '       ' → logprob: -12.751986503601074
    5. '               ' → logprob: -13.376986503601074
    6. 'else' → logprob: -14.751986503601074
    7. '            
' → logprob: -15.376986503601074
    8. 'if' → logprob: -15.626986503601074
    9. 'import' → logprob: -15.626986503601074
    10. '```' → logprob: -15.751986503601074

Token 723: ' parts' (ID: 7881)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010936754755675793
    2. ' return' → logprob: -5.260936737060547
    3. '           ' → logprob: -5.760936737060547
    4. '       ' → logprob: -6.010936737060547
    5. 'tokens' → logprob: -10.010936737060547
    6. 'break' → logprob: -10.385936737060547
    7. 'token' → logprob: -12.510936737060547
    8. '   ' → logprob: -13.135936737060547
    9. 'try' → logprob: -13.885936737060547
    10. ' tokens' → logprob: -13.885936737060547

Token 724: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474077969789505
    2. ' =' → logprob: -0.9740779399871826
    3. '=line' → logprob: -14.099078178405762
    4. ',' → logprob: -16.974077224731445
    5. '   ' → logprob: -17.099077224731445
    6. '[' → logprob: -17.224077224731445
    7. '	' → logprob: -17.474077224731445
    8. ' ' → logprob: -17.474077224731445
    9. '.' → logprob: -17.724077224731445
    10. ')' → logprob: -18.099077224731445

Token 725: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00523719098418951
    2. ' line' → logprob: -5.255237102508545
    3. '[line' → logprob: -12.630237579345703
    4. '(line' → logprob: -17.130237579345703
    5. '	line' → logprob: -17.255237579345703
    6. 'list' → logprob: -17.505237579345703
    7. '#line' → logprob: -18.005237579345703
    8. '=line' → logprob: -18.005237579345703
    9. '[' → logprob: -18.755237579345703
    10. '   ' → logprob: -19.630237579345703

Token 726: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.05255928263068199
    2. '.' → logprob: -3.0525593757629395
    3. '.split' → logprob: -5.5525593757629395
    4. '.rstrip' → logprob: -10.052558898925781
    5. ' .' → logprob: -10.552558898925781
    6. '().' → logprob: -11.052558898925781
    7. '.trim' → logprob: -14.427558898925781
    8. 'strip' → logprob: -14.552558898925781
    9. '.readline' → logprob: -16.05255889892578
    10. '           ' → logprob: -16.42755889892578

Token 727: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.2617008400848135e-05
    2. '()' → logprob: -10.375032424926758
    3. '.split' → logprob: -13.625032424926758
    4. 'split' → logprob: -17.125032424926758
    5. '(' → logprob: -17.500032424926758
    6. ' ().' → logprob: -17.625032424926758
    7. '()
' → logprob: -17.625032424926758
    8. '('' → logprob: -18.125032424926758
    9. '().'' → logprob: -18.750032424926758
    10. '.' → logprob: -19.625032424926758

Token 728: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. '(split' → logprob: -18.875
    3. ' split' → logprob: -19.0
    4. 'replace' → logprob: -19.5
    5. 'spl' → logprob: -20.375
    6. '.split' → logprob: -20.875
    7. 'strip' → logprob: -21.125
    8. 'rstrip' → logprob: -21.375
    9. 'startswith' → logprob: -21.5
    10. 'sp' → logprob: -22.875

Token 729: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003927368205040693
    2. '('' → logprob: -5.753927230834961
    3. '(' → logprob: -7.378927230834961
    4. '()
' → logprob: -10.128927230834961
    5. '(None' → logprob: -10.753927230834961
    6. '(',' → logprob: -11.378927230834961
    7. '("' → logprob: -11.503927230834961
    8. '('.')' → logprob: -11.753927230834961
    9. '()[' → logprob: -12.003927230834961
    10. '(max' → logprob: -12.003927230834961

Token 730: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004858458414673805
    2. 'return' → logprob: -7.750485897064209
    3. '       ' → logprob: -10.12548542022705
    4. 'if' → logprob: -11.75048542022705
    5. '               ' → logprob: -12.87548542022705
    6. ' return' → logprob: -13.75048542022705
    7. '		' → logprob: -14.25048542022705
    8. '          ' → logprob: -14.50048542022705
    9. '```' → logprob: -14.75048542022705
    10. '   ' → logprob: -14.87548542022705

Token 731: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4850236177444458
    2. 'if' (adapté à ' if') → logprob: -0.9850236177444458
    3. '           ' → logprob: -4.610023498535156
    4. 'command' → logprob: -8.610023498535156
    5. 'token' → logprob: -8.860023498535156
    6. 'card' → logprob: -9.360023498535156
    7. ' if' → logprob: -9.360023498535156
    8. 'cmd' → logprob: -9.360023498535156
    9. 'tokens' → logprob: -9.860023498535156
    10. 'break' → logprob: -9.860023498535156

Token 732: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.18208946287631989
    2. 'parts' → logprob: -1.8070894479751587
    3. 'not' → logprob: -6.557089328765869
    4. ' len' → logprob: -7.432089328765869
    5. ' parts' → logprob: -8.557089805603027
    6. 'all' → logprob: -9.432089805603027
    7. ' not' → logprob: -10.682089805603027
    8. '(len' → logprob: -11.557089805603027
    9. '(parts' → logprob: -11.557089805603027
    10. '   ' → logprob: -12.932089805603027

Token 733: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0001415618316968903
    2. 'parts' → logprob: -9.000141143798828
    3. '(' → logprob: -11.250141143798828
    4. ' parts' → logprob: -12.250141143798828
    5. '(part' → logprob: -16.750141143798828
    6. '==' → logprob: -16.750141143798828
    7. ' (' → logprob: -16.875141143798828
    8. '(
' → logprob: -17.375141143798828
    9. '(p' → logprob: -17.875141143798828
    10. '=' → logprob: -18.250141143798828

Token 734: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1823749542236328
    2. '<|end|>' → logprob: -1.5573749542236328
    3. ' >=' → logprob: -1.8073749542236328
    4. '==' → logprob: -1.8073749542236328
    5. ')' → logprob: -2.182374954223633
    6. '>=' → logprob: -3.432374954223633
    7. ')>=' → logprob: -5.682374954223633
    8. ' <' → logprob: -6.182374954223633
    9. '<|end|>' → logprob: -6.432374954223633
    10. ')==' → logprob: -7.432374954223633

Token 735: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5907782316207886
    2. '>=' → logprob: -1.3407782316207886
    3. '<' → logprob: -1.9657782316207886
    4. '!=' → logprob: -3.715778350830078
    5. ' ==' → logprob: -4.465778350830078
    6. ' >=' → logprob: -5.340778350830078
    7. ' !=' → logprob: -6.340778350830078
    8. ' <' → logprob: -6.590778350830078
    9. '>' → logprob: -8.965778350830078
    10. '<|end|>' → logprob: -9.590778350830078

Token 736: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.15055698156356812
    2. '2' → logprob: -2.150557041168213
    3. '4' → logprob: -4.150557041168213
    4. '5' → logprob: -5.150557041168213
    5. '1' → logprob: -7.025557041168213
    6. '6' → logprob: -7.275557041168213
    7. '7' → logprob: -8.900556564331055
    8. '8' → logprob: -10.650556564331055
    9. '10' → logprob: -11.025556564331055
    10. '9' → logprob: -11.275556564331055

Token 737: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07810917496681213
    2. '3' → logprob: -2.7031092643737793
    3. '1' → logprob: -5.578109264373779
    4. '4' → logprob: -5.578109264373779
    5. '5' → logprob: -8.328108787536621
    6. ' ' → logprob: -8.328108787536621
    7. '6' → logprob: -9.953108787536621
    8. '7' → logprob: -10.703108787536621
    9. '10' → logprob: -11.578108787536621
    10. '8' → logprob: -12.078108787536621

Token 738: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.40009623765945435
    2. ':
' → logprob: -1.6500961780548096
    3. ':' → logprob: -2.2750961780548096
    4. '               ' → logprob: -3.9000961780548096
    5. 'or' → logprob: -4.400096416473389
    6. ':return' → logprob: -6.900096416473389
    7. ' and' → logprob: -7.525096416473389
    8. '           ' → logprob: -7.775096416473389
    9. 'and' → logprob: -8.02509593963623
    10. '              ' → logprob: -10.52509593963623

Token 739: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030606625601649284
    2. 'return' → logprob: -4.155606746673584
    3. 'raise' → logprob: -4.780606746673584
    4. 'continue' → logprob: -5.905606746673584
    5. 'value' → logprob: -7.030606746673584
    6. ' raise' → logprob: -7.530606746673584
    7. '                   ' → logprob: -8.155606269836426
    8. 'tokens' → logprob: -8.405606269836426
    9. ' return' → logprob: -8.530606269836426
    10. 'break' → logprob: -8.780606269836426

Token 740: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.11892833560705185
    2. 'continue' → logprob: -2.2439284324645996
    3. '           ' → logprob: -5.7439284324646
    4. 'return' → logprob: -6.1189284324646
    5. '               ' → logprob: -7.6189284324646
    6. ' raise' → logprob: -8.868927955627441
    7. 'break' → logprob: -11.118927955627441
    8. '                   ' → logprob: -11.118927955627441
    9. ' continue' → logprob: -11.743927955627441
    10. '       ' → logprob: -12.868927955627441

Token 741: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0005035852082073689
    2. 'Stop' → logprob: -8.000503540039062
    3. ' Value' → logprob: -8.875503540039062
    4. 'Runtime' → logprob: -10.500503540039062
    5. 'EOF' → logprob: -15.500503540039062
    6. 'Index' → logprob: -15.750503540039062
    7. 'Syntax' → logprob: -16.125503540039062
    8. 'Assertion' → logprob: -16.625503540039062
    9. '(Value' → logprob: -16.750503540039062
    10. 'Exception' → logprob: -16.875503540039062

Token 742: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.001170225441455841
    2. 'rror' → logprob: -6.7511701583862305
    3. 'n' → logprob: -17.251171112060547
    4. 'SError' → logprob: -17.626171112060547
    5. 'ror' → logprob: -18.501171112060547
    6. 'error' → logprob: -18.501171112060547
    7. 'r' → logprob: -18.626171112060547
    8. 'Er' → logprob: -19.251171112060547
    9. 'Input' → logprob: -19.501171112060547
    10. 'Erro' → logprob: -19.501171112060547

Token 743: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0014151156647130847
    2. '(' → logprob: -6.876415252685547
    3. '(f' → logprob: -8.126415252685547
    4. '           ' → logprob: -10.001415252685547
    5. '(
' → logprob: -11.126415252685547
    6. '('' → logprob: -11.376415252685547
    7. '               ' → logprob: -11.501415252685547
    8. '()' → logprob: -13.251415252685547
    9. '"' → logprob: -14.001415252685547
    10. '                   ' → logprob: -14.501415252685547

Token 744: 'Each' (ID: 7919)
  Prédit: 'Invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.3321128487586975
    2. 'Input' → logprob: -1.7071127891540527
    3. 'Expected' → logprob: -2.5821127891540527
    4. 'Incomplete' → logprob: -4.957112789154053
    5. 'Each' → logprob: -5.457112789154053
    6. '"' → logprob: -5.457112789154053
    7. 'Line' → logprob: -5.582112789154053
    8. 'Unexpected' → logprob: -6.582112789154053
    9. 'Incorrect' → logprob: -6.957112789154053
    10. 'Ins' → logprob: -7.332112789154053

Token 745: ' input' (ID: 3422)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2697940468788147
    2. ' line' → logprob: -1.51979398727417
    3. 'input' → logprob: -4.51979398727417
    4. ' input' → logprob: -5.39479398727417
    5. 'hand' → logprob: -6.39479398727417
    6. ' hand' → logprob: -8.269794464111328
    7. 'token' → logprob: -8.894794464111328
    8. 'round' → logprob: -10.394794464111328
    9. 'part' → logprob: -10.394794464111328
    10. ' token' → logprob: -11.019794464111328

Token 746: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3871995508670807
    2. 'line' → logprob: -1.1371995210647583
    3. ' must' → logprob: -8.262199401855469
    4. 'must' → logprob: -10.637199401855469
    5. ' should' → logprob: -11.387199401855469
    6. '   ' → logprob: -11.387199401855469
    7. ' ' → logprob: -11.762199401855469
    8. 'row' → logprob: -12.762199401855469
    9. 'should' → logprob: -12.887199401855469
    10. 'token' → logprob: -13.262199401855469

Token 747: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.22551338374614716
    2. 'must' → logprob: -1.6005133390426636
    3. '               ' → logprob: -10.475513458251953
    4. ' should' → logprob: -10.600513458251953
    5. ')' → logprob: -11.350513458251953
    6. '           ' → logprob: -11.725513458251953
    7. 'should' → logprob: -11.975513458251953
    8. '```' → logprob: -12.350513458251953
    9. ' requires' → logprob: -12.975513458251953
    10. '                   ' → logprob: -13.225513458251953

Token 748: ' contain' (ID: 10232)
  Prédit: ' contain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.5432400703430176
    2. ' have' → logprob: -1.2932400703430176
    3. 'contain' → logprob: -2.6682400703430176
    4. 'have' → logprob: -3.0432400703430176
    5. ' consist' → logprob: -3.6682400703430176
    6. 'cons' → logprob: -6.543240070343018
    7. ' be' → logprob: -7.668240070343018
    8. 'be' → logprob: -8.91823959350586
    9. ' represent' → logprob: -9.54323959350586
    10. 'represent' → logprob: -11.16823959350586

Token 749: ' exactly' (ID: 9707)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.1619352400302887
    2. ' exactly' → logprob: -1.9119352102279663
    3. '3' → logprob: -6.661935329437256
    4. 'three' → logprob: -8.161934852600098
    5. ' three' → logprob: -8.911934852600098
    6. ' ' → logprob: -11.786934852600098
    7. ' exact' → logprob: -12.786934852600098
    8. 'Exactly' → logprob: -15.036934852600098
    9. ' exactement' → logprob: -16.536935806274414
    10. ' exactamente' → logprob: -16.911935806274414

Token 750: ' three' (ID: 3407)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007145240902900696
    2. 'three' → logprob: -5.132145404815674
    3. ' three' → logprob: -6.757145404815674
    4. ' ' → logprob: -9.882144927978516
    5. 'exact' → logprob: -13.132144927978516
    6. ' exactly' → logprob: -16.132144927978516
    7. 'Three' → logprob: -17.632144927978516
    8. '三个' → logprob: -18.507144927978516
    9. '_three' → logprob: -18.757144927978516
    10. 'the' → logprob: -18.757144927978516

Token 751: ' integers' (ID: 54912)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.04624950885772705
    2. 'inte' → logprob: -3.7962493896484375
    3. 'values' → logprob: -4.9212493896484375
    4. 'parts' → logprob: -5.2962493896484375
    5. 'items' → logprob: -5.6712493896484375
    6. ' tokens' → logprob: -5.7962493896484375
    7. ' integers' → logprob: -6.7962493896484375
    8. 'elements' → logprob: -6.9212493896484375
    9. 'cards' → logprob: -7.2962493896484375
    10. 'fields' → logprob: -8.296249389648438

Token 752: '.")
' (ID: 27834)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.10959582030773163
    2. '")' → logprob: -2.359595775604248
    3. '.")
' → logprob: -5.234595775604248
    4. ')")
' → logprob: -6.609595775604248
    5. '")
' → logprob: -7.359595775604248
    6. ' or' → logprob: -7.484595775604248
    7. ',' → logprob: -7.609595775604248
    8. '.")' → logprob: -8.359596252441406
    9. ')' → logprob: -8.734596252441406
    10. '           ' → logprob: -9.359596252441406

Token 753: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004147376399487257
    2. 'return' → logprob: -5.754147529602051
    3. '       ' → logprob: -7.879147529602051
    4. ' return' → logprob: -8.12914752960205
    5. 'tokens' → logprob: -9.75414752960205
    6. '
' → logprob: -9.87914752960205
    7. '```' → logprob: -10.00414752960205
    8. 'value' → logprob: -10.37914752960205
    9. '               ' → logprob: -10.37914752960205
    10. ',' → logprob: -10.50414752960205

Token 754: ' c' (ID: 274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8459517359733582
    2. 'try' → logprob: -1.345951795578003
    3. 'v' → logprob: -2.095951795578003
    4. '           ' → logprob: -3.345951795578003
    5. 'value' → logprob: -3.345951795578003
    6. 'player' → logprob: -3.345951795578003
    7. 'values' → logprob: -4.095951557159424
    8. 'a' → logprob: -4.345951557159424
    9. 'cards' → logprob: -4.345951557159424
    10. ' return' → logprob: -4.595951557159424

Token 755: '1' (ID: 16)
  Prédit: 'ards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ards' → logprob: -0.3600284457206726
    2. '1' → logprob: -1.6100285053253174
    3. 'ard' → logprob: -2.6100285053253174
    4. 'value' → logprob: -4.485028266906738
    5. '_value' → logprob: -4.985028266906738
    6. '_values' → logprob: -5.985028266906738
    7. ' =' → logprob: -6.360028266906738
    8. 'values' → logprob: -6.360028266906738
    9. '0' → logprob: -6.735028266906738
    10. '=' → logprob: -7.360028266906738

Token 756: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005378306843340397
    2. ' =' → logprob: -5.755378246307373
    3. '=' → logprob: -7.005378246307373
    4. '_value' → logprob: -7.505378246307373
    5. '_val' → logprob: -8.130378723144531
    6. ',value' → logprob: -8.880378723144531
    7. 'value' → logprob: -9.380378723144531
    8. ',c' → logprob: -9.505378723144531
    9. 'alue' → logprob: -9.755378723144531
    10. '1' → logprob: -10.880378723144531

Token 757: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029799552634358406
    2. ' c' → logprob: -3.529799461364746
    3. ' ' → logprob: -10.279799461364746
    4. 'int' → logprob: -12.279799461364746
    5. 's' → logprob: -13.154799461364746
    6. ' ' → logprob: -13.654799461364746
    7. 'space' → logprob: -13.779799461364746
    8. '_' → logprob: -13.904799461364746
    9. ' 
' → logprob: -14.154799461364746
    10. '  ' → logprob: -14.529799461364746

Token 758: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003120318055152893
    2. 'c' → logprob: -6.503120422363281
    3. ',' → logprob: -6.878120422363281
    4. '1' → logprob: -7.628120422363281
    5. '3' → logprob: -9.503120422363281
    6. ',c' → logprob: -11.628120422363281
    7. '=' → logprob: -11.878120422363281
    8. ' =' → logprob: -12.503120422363281
    9. 's' → logprob: -13.753120422363281
    10. 'ard' → logprob: -14.003120422363281

Token 759: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015979631280060858
    2. '=' → logprob: -9.375160217285156
    3. ' ,' → logprob: -10.125160217285156
    4. ' =' → logprob: -10.625160217285156
    5. ',c' → logprob: -12.125160217285156
    6. '<|end|>' → logprob: -13.250160217285156
    7. ',int' → logprob: -13.375160217285156
    8. 'int' → logprob: -14.875160217285156
    9. 'c' → logprob: -15.000160217285156
    10. '‌,' → logprob: -15.375160217285156

Token 760: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.048986658453941345
    2. ' c' → logprob: -3.0489866733551025
    3. 't' → logprob: -8.423986434936523
    4. ' t' → logprob: -9.548986434936523
    5. 'threshold' → logprob: -10.923986434936523
    6. 'ct' → logprob: -11.048986434936523
    7. 'v' → logprob: -11.173986434936523
    8. 'cs' → logprob: -11.423986434936523
    9. 's' → logprob: -11.798986434936523
    10. 'th' → logprob: -12.548986434936523

Token 761: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00012642296496778727
    2. ',' → logprob: -9.000126838684082
    3. '1' → logprob: -13.875126838684082
    4. 'c' → logprob: -14.250126838684082
    5. ' =' → logprob: -14.750126838684082
    6. '=' → logprob: -15.500126838684082
    7. ' ' → logprob: -15.625126838684082
    8. 'ard' → logprob: -15.875126838684082
    9. 'ount' → logprob: -16.750125885009766
    10. '_' → logprob: -17.250125885009766

Token 762: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144939422607422
    2. ' =' → logprob: -1.7014493942260742
    3. ',' → logprob: -10.326449394226074
    4. '=int' → logprob: -13.201449394226074
    5. ')' → logprob: -14.951449394226074
    6. ' ' → logprob: -15.076449394226074
    7. '=
' → logprob: -15.201449394226074
    8. '   ' → logprob: -15.451449394226074
    9. 'int' → logprob: -16.20145034790039
    10. '=

' → logprob: -16.82645034790039

Token 763: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.01492774672806263
    2. ' map' → logprob: -4.264927864074707
    3. '(map' → logprob: -7.264927864074707
    4. 'int' → logprob: -9.764927864074707
    5. '[int' → logprob: -12.764927864074707
    6. '(int' → logprob: -13.014927864074707
    7. ' (' → logprob: -14.514927864074707
    8. '[' → logprob: -14.514927864074707
    9. ' int' → logprob: -14.764927864074707
    10. ' [' → logprob: -16.13992691040039

Token 764: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20141392946243286
    2. 'int' → logprob: -1.701413869857788
    3. ' int' → logprob: -15.701414108276367
    4. '(
' → logprob: -15.701414108276367
    5. '(' → logprob: -15.826414108276367
    6. '[int' → logprob: -16.451414108276367
    7. '=int' → logprob: -17.951414108276367
    8. '<int' → logprob: -18.576414108276367
    9. '```' → logprob: -18.701414108276367
    10. '	int' → logprob: -18.826414108276367

Token 765: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029884587973356247
    2. '(parts' → logprob: -3.5298845767974854
    3. 'parts' → logprob: -9.279884338378906
    4. ' ,' → logprob: -10.404884338378906
    5. ' parts' → logprob: -12.529884338378906
    6. '(' → logprob: -13.154884338378906
    7. ',line' → logprob: -13.529884338378906
    8. ',p' → logprob: -13.779884338378906
    9. ',(' → logprob: -14.154884338378906
    10. ')' → logprob: -14.279884338378906

Token 766: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0002692032721824944
    2. ' parts' → logprob: -8.250268936157227
    3. '(parts' → logprob: -11.750268936157227
    4. '[' → logprob: -17.750268936157227
    5. '
' → logprob: -17.750268936157227
    6. 'part' → logprob: -18.250268936157227
    7. '   ' → logprob: -18.750268936157227
    8. ' ' → logprob: -18.750268936157227
    9. '```' → logprob: -19.125268936157227
    10. '           ' → logprob: -19.750268936157227

Token 767: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.764977686339989e-05
    2. ')
' → logprob: -9.875057220458984
    3. ')return' → logprob: -12.875057220458984
    4. ')`' → logprob: -13.750057220458984
    5. ' )' → logprob: -13.875057220458984
    6. ')}' → logprob: -15.000057220458984
    7. '),' → logprob: -15.500057220458984
    8. ')

' → logprob: -16.000057220458984
    9. ');' → logprob: -16.125057220458984
    10. ')#' → logprob: -16.250057220458984

Token 768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002777822664938867
    2. 'return' → logprob: -8.250277519226074
    3. ' return' → logprob: -11.500277519226074
    4. '       ' → logprob: -13.000277519226074
    5. '               ' → logprob: -13.500277519226074
    6. '
' → logprob: -13.875277519226074
    7. '            
' → logprob: -14.125277519226074
    8. '		' → logprob: -15.125277519226074
    9. ',' → logprob: -15.250277519226074
    10. '          ' → logprob: -15.750277519226074

Token 769: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5241565704345703
    2. '           ' → logprob: -1.1491565704345703
    3. ' return' → logprob: -2.3991565704345703
    4. '
' → logprob: -9.14915657043457
    5. 'if' → logprob: -9.77415657043457
    6. ' if' → logprob: -9.89915657043457
    7. '            
' → logprob: -11.02415657043457
    8. 'break' → logprob: -12.02415657043457
    9. ' break' → logprob: -13.14915657043457
    10. 'card' → logprob: -13.27415657043457

Token 770: ' c' (ID: 274)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.1624799966812134
    2. '(Card' → logprob: -1.2874799966812134
    3. 'c' → logprob: -1.6624799966812134
    4. 'Card' → logprob: -1.9124799966812134
    5. '[c' → logprob: -2.787479877471924
    6. '[' → logprob: -4.787479877471924
    7. ' (' → logprob: -6.287479877471924
    8. ' Card' → logprob: -7.662479877471924
    9. '(C' → logprob: -7.662479877471924
    10. ' c' → logprob: -8.037480354309082

Token 771: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21901512145996094
    2. '[c' → logprob: -2.344015121459961
    3. '[' → logprob: -2.594015121459961
    4. '(c' → logprob: -4.719015121459961
    5. 'ard' → logprob: -5.094015121459961
    6. '3' → logprob: -5.219015121459961
    7. 'rd' → logprob: -6.469015121459961
    8. 'c' → logprob: -6.844015121459961
    9. '([' → logprob: -6.969015121459961
    10. '[C' → logprob: -7.344015121459961

Token 772: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 773: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07888989895582199
    2. ' c' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.203889846801758
    4. ' ' → logprob: -17.078889846801758
    5. '	c' → logprob: -18.078889846801758
    6. '(c' → logprob: -19.828889846801758
    7. '_c' → logprob: -19.953889846801758
    8. ')c' → logprob: -20.328889846801758
    9. '`' → logprob: -20.453889846801758
    10. ',c' → logprob: -20.828889846801758

Token 774: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16059331595897675
    2. '2' → logprob: -1.9105932712554932
    3. 'c' → logprob: -7.910593509674072
    4. ' ' → logprob: -13.785593032836914
    5. ' c' → logprob: -14.785593032836914
    6. '`' → logprob: -15.035593032836914
    7. '1' → logprob: -15.785593032836914
    8. ',' → logprob: -16.035593032836914
    9. '4' → logprob: -16.785593032836914
    10. '_' → logprob: -17.285593032836914

Token 775: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003809833142440766
    2. ' ,' → logprob: -8.250380516052246
    3. ',c' → logprob: -9.625380516052246
    4. '<|end|>' → logprob: -10.500380516052246
    5. '3' → logprob: -11.750380516052246
    6. '_,' → logprob: -12.125380516052246
    7. ',
' → logprob: -12.750380516052246
    8. 'c' → logprob: -13.125380516052246
    9. ' ' → logprob: -13.375380516052246
    10. ',None' → logprob: -14.000380516052246

Token 776: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.7610454708337784e-05
    2. ' c' → logprob: -10.500027656555176
    3. '
' → logprob: -21.87502670288086
    4. '	c' → logprob: -21.87502670288086
    5. '```' → logprob: -22.87502670288086
    6. ' ' → logprob: -23.12502670288086
    7. '`' → logprob: -23.25002670288086
    8. '   ' → logprob: -23.62502670288086
    9. ')c' → logprob: -23.62502670288086
    10. ' ' → logprob: -24.50002670288086

Token 777: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۳' → logprob: -19.375
    4. 'c' → logprob: -19.5
    5. 'three' → logprob: -20.0
    6. 'n' → logprob: -20.25
    7. '٣' → logprob: -20.25
    8. 'None' → logprob: -20.375
    9. '```' → logprob: -20.4375
    10. '`' → logprob: -20.5625

Token 778: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.023336440324783325
    2. 'def' → logprob: -4.148336410522461
    3. 'from' → logprob: -5.648336410522461
    4. '<|end|>' → logprob: -5.898336410522461
    5. '```' → logprob: -7.148336410522461
    6. '#' → logprob: -9.148336410522461
    7. 'c' → logprob: -10.148336410522461
    8. '<|end|>' → logprob: -10.648336410522461
    9. 'import' → logprob: -11.148336410522461
    10. '@dat' → logprob: -11.773336410522461

Token 779: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0002278542669955641
    2. 'from' → logprob: -8.625227928161621
    3. 'def' → logprob: -10.125227928161621
    4. '```' → logprob: -12.000227928161621
    5. ' class' → logprob: -14.500227928161621
    6. 'c' → logprob: -14.500227928161621
    7. 'card' → logprob: -14.625227928161621
    8. '#' → logprob: -15.375227928161621
    9. 'import' → logprob: -16.250226974487305
    10. 'for' → logprob: -16.375226974487305

Token 780: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.12165816873311996
    2. 'Black' → logprob: -3.4966580867767334
    3. 'Simulator' → logprob: -3.9966580867767334
    4. 'Solver' → logprob: -4.3716583251953125
    5. 'Poker' → logprob: -4.8716583251953125
    6. 'Evaluator' → logprob: -4.9966583251953125
    7. 'Solution' → logprob: -5.1216583251953125
    8. 'Card' → logprob: -5.4966583251953125
    9. 'Hand' → logprob: -5.6216583251953125
    10. 'Strategy' → logprob: -5.7466583251953125

Token 781: 'Logic' (ID: 30160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -9.93710636976175e-05
    2. ':
' → logprob: -9.750099182128906
    3. '():' → logprob: -10.625099182128906
    4. ' :' → logprob: -12.000099182128906
    5. '(' → logprob: -12.625099182128906
    6. 'State' → logprob: -13.000099182128906
    7. 'Handler' → logprob: -14.250099182128906
    8. ':**' → logprob: -14.250099182128906
    9. '):' → logprob: -14.500099182128906
    10. ':

' → logprob: -14.500099182128906

Token 782: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008676734752953053
    2. ':
' → logprob: -4.758676528930664
    3. ' :' → logprob: -9.883676528930664
    4. ' :
' → logprob: -12.758676528930664
    5. ':

' → logprob: -12.883676528930664
    6. ':def' → logprob: -13.508676528930664
    7. '(' → logprob: -13.633676528930664
    8. ':
' → logprob: -14.258676528930664
    9. '<|end|>' → logprob: -14.508676528930664
    10. '(Abstract' → logprob: -14.633676528930664

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026848025154322386
    2. ' def' → logprob: -6.002684593200684
    3. 'def' → logprob: -8.627684593200684
    4. 'class' → logprob: -11.127684593200684
    5. '   ' → logprob: -12.127684593200684
    6. '```' → logprob: -12.252684593200684
    7. '    ' → logprob: -13.127684593200684
    8. ' class' → logprob: -13.377684593200684
    9. '   ' → logprob: -15.127684593200684
    10. ' indentation' → logprob: -15.877684593200684

Token 784: ' SUM' (ID: 52418)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10039536654949188
    2. 'def' → logprob: -2.350395441055298
    3. '   ' → logprob: -8.600395202636719
    4. 'class' → logprob: -13.600395202636719
    5. '@' → logprob: -13.975395202636719
    6. 'de' → logprob: -14.225395202636719
    7. ' @' → logprob: -15.350395202636719
    8. 'DE' → logprob: -15.350395202636719
    9. 'deck' → logprob: -15.350395202636719
    10. ' MAX' → logprob: -15.475395202636719

Token 785: '_LIMIT' (ID: 64862)
  Prédit: '_THRESHOLD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_THRESHOLD' → logprob: -0.3554401099681854
    2. '_LIMIT' → logprob: -1.2304401397705078
    3. '_MAX' → logprob: -6.105440139770508
    4. 'TH' → logprob: -6.980440139770508
    5. '_TH' → logprob: -7.105440139770508
    6. '_TARGET' → logprob: -7.105440139770508
    7. '_TO' → logprob: -8.105440139770508
    8. '_THRESH' → logprob: -8.355440139770508
    9. 'LIMIT' → logprob: -8.355440139770508
    10. ' =' → logprob: -8.355440139770508

Token 786: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136581480503082
    2. '=' → logprob: -1.3136581182479858
    3. ':' → logprob: -8.188657760620117
    4. '   ' → logprob: -9.063657760620117
    5. '_' → logprob: -14.438657760620117
    6. '  ' → logprob: -14.563657760620117
    7. '_LIMIT' → logprob: -14.813657760620117
    8. 'S' → logprob: -15.188657760620117
    9. '_THRESHOLD' → logprob: -15.688657760620117
    10. '_MAX' → logprob: -15.938657760620117

Token 787: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '21' → logprob: -0.01706920936703682
    2. '20' → logprob: -4.392069339752197
    3. '17' → logprob: -6.142069339752197
    4. '10' → logprob: -7.642069339752197
    5. '16' → logprob: -7.767069339752197
    6. '11' → logprob: -8.017068862915039
    7. '15' → logprob: -8.017068862915039
    8. '14' → logprob: -8.767068862915039
    9. '19' → logprob: -8.767068862915039
    10. '18' → logprob: -9.017068862915039

Token 788: '20' (ID: 455)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.04114208370447159
    2. '20' → logprob: -3.666141986846924
    3. '17' → logprob: -5.041141986846924
    4. '10' → logprob: -6.041141986846924
    5. '16' → logprob: -6.416141986846924
    6. '15' → logprob: -7.041141986846924
    7. '19' → logprob: -7.166141986846924
    8. '11' → logprob: -7.416141986846924
    9. '18' → logprob: -7.541141986846924
    10. '22' → logprob: -7.791141986846924

Token 789: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011266500689089298
    2. '
' → logprob: -4.886266708374023
    3. '    
' → logprob: -6.011266708374023
    4. 'def' → logprob: -7.761266708374023
    5. ',' → logprob: -8.261266708374023
    6. ' def' → logprob: -8.886266708374023
    7. '<|end|>' → logprob: -9.011266708374023
    8. '    ' → logprob: -9.386266708374023
    9. ':' → logprob: -9.886266708374023
    10. '<|end|>' → logprob: -10.636266708374023

Token 790: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001931696751853451
    2. 'def' → logprob: -9.25019359588623
    3. ' def' → logprob: -10.50019359588623
    4. '
' → logprob: -10.50019359588623
    5. '    
' → logprob: -11.00019359588623
    6. ',' → logprob: -11.25019359588623
    7. '   ' → logprob: -13.25019359588623
    8. '```' → logprob: -13.50019359588623
    9. '    ' → logprob: -13.62519359588623
    10. ':' → logprob: -13.62519359588623

Token 791: ' TH' (ID: 6794)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004756683949381113
    2. ' def' → logprob: -5.629756450653076
    3. '@' → logprob: -6.879756450653076
    4. '   ' → logprob: -9.004756927490234
    5. 'DE' → logprob: -13.504756927490234
    6. ' @' → logprob: -13.629756927490234
    7. 'MAX' → logprob: -14.379756927490234
    8. 'class' → logprob: -14.879756927490234
    9. 'de' → logprob: -15.129756927490234
    10. '	def' → logprob: -15.754756927490234

Token 792: 'RESH' (ID: 44540)
  Prédit: 'RESH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RESH' → logprob: -0.0006682366947643459
    2. 'R' → logprob: -8.6256685256958
    3. 'RES' → logprob: -8.8756685256958
    4. '   ' → logprob: -9.2506685256958
    5. 'ESH' → logprob: -9.5006685256958
    6. 'RE' → logprob: -9.5006685256958
    7. '=' → logprob: -10.3756685256958
    8. '```' → logprob: -11.1256685256958
    9. 'ES' → logprob: -11.8756685256958
    10. '``' → logprob: -12.2506685256958

Token 793: 'OLD' (ID: 14375)
  Prédit: 'OLD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OLD' → logprob: -0.016229433938860893
    2. 'RESH' → logprob: -4.391229629516602
    3. 'ESH' → logprob: -5.641229629516602
    4. '   ' → logprob: -10.016229629516602
    5. 'RE' → logprob: -10.766229629516602
    6. '```' → logprob: -10.766229629516602
    7. 'H' → logprob: -11.141229629516602
    8. '=' → logprob: -11.641229629516602
    9. '_RE' → logprob: -11.766229629516602
    10. 'E' → logprob: -12.391229629516602

Token 794: '_PRO' (ID: 11693)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004712784197181463
    2. '=' → logprob: -5.3797125816345215
    3. '_' → logprob: -10.62971305847168
    4. ':' → logprob: -11.25471305847168
    5. 'S' → logprob: -11.25471305847168
    6. '_SUM' → logprob: -12.00471305847168
    7. '   ' → logprob: -12.12971305847168
    8. '_LIMIT' → logprob: -12.62971305847168
    9. '_MAX' → logprob: -12.87971305847168
    10. '_FOR' → logprob: -13.12971305847168

Token 795: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00037621514638885856
    2. 'BAB' → logprob: -8.625375747680664
    3. 'BA' → logprob: -9.625375747680664
    4. 'BAL' → logprob: -10.125375747680664
    5. 'PORT' → logprob: -10.375375747680664
    6. 'PERTY' → logprob: -10.875375747680664
    7. 'FIT' → logprob: -11.000375747680664
    8. 'ABILITY' → logprob: -11.250375747680664
    9. 'P' → logprob: -13.125375747680664
    10. 'F' → logprob: -13.125375747680664

Token 796: 'ABILITY' (ID: 11840)
  Prédit: 'ABILITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABILITY' → logprob: -0.0008486981969326735
    2. '=' → logprob: -7.750848770141602
    3. 'ABIL' → logprob: -8.375848770141602
    4. ' =' → logprob: -9.375848770141602
    5. '   ' → logprob: -10.375848770141602
    6. 'ILITY' → logprob: -10.750848770141602
    7. 'AB' → logprob: -11.125848770141602
    8. 'AL' → logprob: -12.250848770141602
    9. 'ability' → logprob: -12.375848770141602
    10. 'S' → logprob: -12.375848770141602

Token 797: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04699064791202545
    2. '=' → logprob: -3.1719906330108643
    3. ':' → logprob: -5.671990871429443
    4. '_' → logprob: -8.296990394592285
    5. ' ' → logprob: -8.921990394592285
    6. '   ' → logprob: -9.546990394592285
    7. ' :' → logprob: -10.296990394592285
    8. '  ' → logprob: -10.421990394592285
    9. '_THRESHOLD' → logprob: -11.796990394592285
    10. ',' → logprob: -12.546990394592285

Token 798: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03378516435623169
    2. ' ' → logprob: -3.408785104751587
    3. '1' → logprob: -9.033784866333008
    4. '   ' → logprob: -11.971284866333008
    5. '2' → logprob: -12.846284866333008
    6. '(' → logprob: -13.346284866333008
    7. '5' → logprob: -13.658784866333008
    8. '>' → logprob: -13.908784866333008
    9. '=' → logprob: -14.096284866333008
    10. '  ' → logprob: -14.533784866333008

Token 799: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012822567950934172
    2. '1' → logprob: -6.751282215118408
    3. '2' → logprob: -10.501282691955566
    4. ' ' → logprob: -10.876282691955566
    5. '5' → logprob: -11.376282691955566
    6. 'Decimal' → logprob: -12.376282691955566
    7. '7' → logprob: -12.501282691955566
    8. '(' → logprob: -12.501282691955566
    9. '50' → logprob: -12.751282691955566
    10. '10' → logprob: -12.751282691955566

Token 800: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.256334695033729e-05
    2. '0' → logprob: -9.625082969665527
    3. '1' → logprob: -12.250082969665527
    4. '   ' → logprob: -12.625082969665527
    5. '.
' → logprob: -13.000082969665527
    6. '5' → logprob: -13.625082969665527
    7. ' .' → logprob: -14.000082969665527
    8. '7' → logprob: -14.500082969665527
    9. '       ' → logprob: -14.500082969665527
    10. '4' → logprob: -14.875082969665527

Token 801: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.495027631521225
    2. '7' → logprob: -2.120027542114258
    3. '6' → logprob: -2.495027542114258
    4. '75' → logprob: -2.995027542114258
    5. '9' → logprob: -3.370027542114258
    6. '8' → logprob: -3.370027542114258
    7. '4' → logprob: -4.370027542114258
    8. '3' → logprob: -4.870027542114258
    9. '95' → logprob: -4.995027542114258
    10. '49' → logprob: -5.370027542114258

Token 802: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01478117611259222
    2. '
' → logprob: -4.2647809982299805
    3. 'def' → logprob: -7.7647809982299805
    4. '    
' → logprob: -8.63978099822998
    5. ' def' → logprob: -11.51478099822998
    6. '	def' → logprob: -13.38978099822998
    7. '<|end|>' → logprob: -13.76478099822998
    8. '```' → logprob: -14.26478099822998
    9. '
' → logprob: -14.88978099822998
    10. ',' → logprob: -15.01478099822998

Token 803: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013403621269389987
    2. 'def' → logprob: -7.376340389251709
    3. '
' → logprob: -7.876340389251709
    4. '    
' → logprob: -8.25133991241455
    5. ' def' → logprob: -9.87633991241455
    6. '<|end|>' → logprob: -12.25133991241455
    7. '```' → logprob: -12.75133991241455
    8. '	def' → logprob: -12.75133991241455
    9. ',' → logprob: -12.87633991241455
    10. '   ' → logprob: -13.25133991241455

Token 804: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.030249202623963356
    2. ' def' → logprob: -3.5302491188049316
    3. '   ' → logprob: -7.655249118804932
    4. '@' → logprob: -10.65524959564209
    5. ' @' → logprob: -14.40524959564209
    6. '	def' → logprob: -15.40524959564209
    7. ' ' → logprob: -15.65524959564209
    8. 'class' → logprob: -16.030248641967773
    9. '
' → logprob: -16.280248641967773
    10. '    ' → logprob: -16.530248641967773

Token 805: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.05784622207283974
    2. ' __' → logprob: -3.3078463077545166
    3. 'def' → logprob: -4.3078460693359375
    4. ' calculate' → logprob: -5.6828460693359375
    5. ' check' → logprob: -7.1828460693359375
    6. '__' → logprob: -7.3078460693359375
    7. ' decide' → logprob: -8.182846069335938
    8. ' evaluate' → logprob: -8.307846069335938
    9. ' analyze' → logprob: -8.932846069335938
    10. ' validate' → logprob: -9.057846069335938

Token 806: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.4021237802808173e-05
    2. 'def' → logprob: -11.375014305114746
    3. 'int' → logprob: -13.625014305114746
    4. 'new' → logprob: -14.875014305114746
    5. 'nit' → logprob: -15.125014305114746
    6. '   ' → logprob: -15.375014305114746
    7. 'iter' → logprob: -16.25001335144043
    8. ' init' → logprob: -16.50001335144043
    9. 'next' → logprob: -17.12501335144043
    10. 'post' → logprob: -17.25001335144043

Token 807: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -7.314625690924004e-05
    2. '(self' → logprob: -10.250073432922363
    3. '__(
' → logprob: -10.750073432922363
    4. '__' → logprob: -11.125073432922363
    5. '_(' → logprob: -13.750073432922363
    6. '(' → logprob: -14.875073432922363
    7. '__((' → logprob: -16.625072479248047
    8. 'self' → logprob: -17.000072479248047
    9. '__('' → logprob: -17.500072479248047
    10. '__("' → logprob: -18.500072479248047

Token 808: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.27099974633893e-05
    2. ' self' → logprob: -11.375012397766113
    3. '       ' → logprob: -14.500012397766113
    4. ')' → logprob: -14.875012397766113
    5. '   ' → logprob: -15.750012397766113
    6. '(self' → logprob: -16.25001335144043
    7. '
' → logprob: -16.87501335144043
    8. 'deck' → logprob: -16.87501335144043
    9. '):
' → logprob: -17.75001335144043
    10. ')(' → logprob: -19.50001335144043

Token 809: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014420164749026299
    2. 'self' → logprob: -4.264420032501221
    3. '(self' → logprob: -8.639420509338379
    4. ' self' → logprob: -11.014420509338379
    5. ' ,' → logprob: -11.389420509338379
    6. ',self' → logprob: -11.389420509338379
    7. ')' → logprob: -11.639420509338379
    8. '__(' → logprob: -12.014420509338379
    9. ',
' → logprob: -12.139420509338379
    10. ' (' → logprob: -12.514420509338379

Token 810: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018823540303856134
    2. '       ' → logprob: -6.501882553100586
    3. ' self' → logprob: -7.876882553100586
    4. 'deck' → logprob: -15.376882553100586
    5. '   ' → logprob: -15.751882553100586
    6. '(self' → logprob: -16.501882553100586
    7. '```' → logprob: -16.751882553100586
    8. '	self' → logprob: -17.376882553100586
    9. '
' → logprob: -17.501882553100586
    10. '           ' → logprob: -17.876882553100586

Token 811: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008408344583585858
    2. '       ' → logprob: -7.375840663909912
    3. ' self' → logprob: -9.00084114074707
    4. 'pass' → logprob: -9.37584114074707
    5. '   ' → logprob: -12.50084114074707
    6. '
' → logprob: -14.62584114074707
    7. 'deck' → logprob: -14.75084114074707
    8. 'from' → logprob: -15.25084114074707
    9. '           ' → logprob: -15.25084114074707
    10. '        
' → logprob: -15.87584114074707

Token 812: '.deck' (ID: 191464)
  Prédit: '.deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.deck' → logprob: -0.10250156372785568
    2. '._' → logprob: -2.352501630783081
    3. '.' → logprob: -7.352501392364502
    4. '.player' → logprob: -7.977501392364502
    5. '.cards' → logprob: -7.977501392364502
    6. 'deck' → logprob: -8.22750186920166
    7. ' .' → logprob: -8.85250186920166
    8. '.players' → logprob: -8.85250186920166
    9. '.hand' → logprob: -9.60250186920166
    10. '.de' → logprob: -9.72750186920166

Token 813: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142056047916412
    2. '=' → logprob: -1.701420545578003
    3. ':' → logprob: -12.826420783996582
    4. ' ' → logprob: -13.701420783996582
    5. '   ' → logprob: -13.701420783996582
    6. '.' → logprob: -14.326420783996582
    7. ' =
' → logprob: -14.951420783996582
    8. '    ' → logprob: -15.076420783996582
    9. ')' → logprob: -15.201420783996582
    10. '  ' → logprob: -15.701420783996582

Token 814: ' Deck' (ID: 41948)
  Prédit: 'Deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Deck' → logprob: -0.011047814972698689
    2. ' Deck' → logprob: -4.511047840118408
    3. ' deck' → logprob: -18.88604736328125
    4. 'Deque' → logprob: -19.88604736328125
    5. 'deck' → logprob: -20.13604736328125
    6. ' ' → logprob: -20.63604736328125
    7. '   ' → logprob: -20.76104736328125
    8. '	' → logprob: -20.76104736328125
    9. 'Desk' → logprob: -21.01104736328125
    10. '```' → logprob: -21.63604736328125

Token 815: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0892021656036377
    2. '<|end|>' → logprob: -1.0892021656036377
    3. '       ' → logprob: -1.2142021656036377
    4. '   ' → logprob: -3.5892021656036377
    5. '<|end|>' → logprob: -7.339201927185059
    6. ',' → logprob: -8.089201927185059
    7. 'self' → logprob: -8.214201927185059
    8. 'def' → logprob: -8.589201927185059
    9. ' ' → logprob: -8.589201927185059
    10. '.' → logprob: -8.839201927185059

Token 816: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8331010341644287
    2. '<|end|>' → logprob: -1.0831010341644287
    3. 'def' → logprob: -2.0831010341644287
    4. '       ' → logprob: -2.4581010341644287
    5. ' def' → logprob: -5.208101272583008
    6. '
' → logprob: -5.333101272583008
    7. 'self' → logprob: -5.833101272583008
    8. '<|end|>' → logprob: -6.583101272583008
    9. '```' → logprob: -7.583101272583008
    10. ' self' → logprob: -8.208101272583008

Token 817: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015337858349084854
    2. ' def' → logprob: -6.5015339851379395
    3. '   ' → logprob: -10.376533508300781
    4. '
' → logprob: -15.876533508300781
    5. '	def' → logprob: -16.50153350830078
    6. ')' → logprob: -17.00153350830078
    7. 'de' → logprob: -19.12653350830078
    8. ' ' → logprob: -19.37653350830078
    9. '       ' → logprob: -19.37653350830078
    10. '    
' → logprob: -19.50153350830078

Token 818: ' decide' (ID: 13001)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -1.3795615434646606
    2. 'process' → logprob: -1.5045615434646606
    3. 'can' → logprob: -2.004561424255371
    4. 'evaluate' → logprob: -2.629561424255371
    5. ' process' → logprob: -3.004561424255371
    6. ' play' → logprob: -3.379561424255371
    7. 'run' → logprob: -3.629561424255371
    8. ' decide' → logprob: -3.754561424255371
    9. 'calculate' → logprob: -3.754561424255371
    10. ' can' → logprob: -3.879561424255371

Token 819: '_draw' (ID: 51847)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02992890030145645
    2. '(' → logprob: -3.6549289226531982
    3. '_draw' → logprob: -6.654928684234619
    4. '_hand' → logprob: -7.404928684234619
    5. '_action' → logprob: -7.904928684234619
    6. '_next' → logprob: -8.279929161071777
    7. '_move' → logprob: -8.529929161071777
    8. '_player' → logprob: -8.529929161071777
    9. '_hit' → logprob: -8.529929161071777
    10. '_' → logprob: -9.654929161071777

Token 820: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013560164370574057
    2. '(' → logprob: -9.12513542175293
    3. '_card' → logprob: -11.50013542175293
    4. 'self' → logprob: -12.00013542175293
    5. '_(' → logprob: -12.37513542175293
    6. '_player' → logprob: -12.87513542175293
    7. '_hand' → logprob: -14.25013542175293
    8. '_next' → logprob: -14.62513542175293
    9. 'ing' → logprob: -14.87513542175293
    10. '(player' → logprob: -15.00013542175293

Token 821: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007189844618551433
    2. 'self' → logprob: -7.37571907043457
    3. ',self' → logprob: -10.37571907043457
    4. '(self' → logprob: -10.62571907043457
    5. '):' → logprob: -11.37571907043457
    6. ')' → logprob: -11.50071907043457
    7. ' ,' → logprob: -11.62571907043457
    8. 'player' → logprob: -13.25071907043457
    9. '   ' → logprob: -14.25071907043457
    10. ')(' → logprob: -14.50071907043457

Token 822: ' c' (ID: 274)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.03020768240094185
    2. ' player' → logprob: -3.655207633972168
    3. 'op' → logprob: -6.405207633972168
    4. 'hand' → logprob: -6.905207633972168
    5. 'ph' → logprob: -8.155207633972168
    6. 'p' → logprob: -8.280207633972168
    7. 'self' → logprob: -8.655207633972168
    8. 'base' → logprob: -9.405207633972168
    9. ' opponent' → logprob: -9.405207633972168
    10. 'own' → logprob: -10.030207633972168

Token 823: '1' (ID: 16)
  Prédit: 'ards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ards' → logprob: -0.24928419291973114
    2. 'urrent' → logprob: -1.6242841482162476
    3. 'player' → logprob: -4.499284267425537
    4. '1' → logprob: -5.249284267425537
    5. 'ard' → logprob: -6.124284267425537
    6. 'hand' → logprob: -6.374284267425537
    7. '_player' → logprob: -6.749284267425537
    8. 'urr' → logprob: -7.624284267425537
    9. '_cards' → logprob: -7.749284267425537
    10. 'cards' → logprob: -7.874284267425537

Token 824: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026333512738347054
    2. ',' → logprob: -3.6513335704803467
    3. ':c' → logprob: -11.401333808898926
    4. ',c' → logprob: -11.651333808898926
    5. ':int' → logprob: -12.026333808898926
    6. '   ' → logprob: -12.401333808898926
    7. ' :' → logprob: -13.526333808898926
    8. ' ,' → logprob: -15.276333808898926
    9. '       ' → logprob: -15.401333808898926
    10. ':list' → logprob: -15.526333808898926

Token 825: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0022185342386364937
    2. ' int' → logprob: -6.502218723297119
    3. 'Card' → logprob: -7.252218723297119
    4. '[int' → logprob: -13.502218246459961
    5. ' Card' → logprob: -13.752218246459961
    6. ':int' → logprob: -13.877218246459961
    7. 'c' → logprob: -14.252218246459961
    8. 'Int' → logprob: -14.377218246459961
    9. '	int' → logprob: -14.752218246459961
    10. ',' → logprob: -14.752218246459961

Token 826: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0100624169572257e-05
    2. ' ,' → logprob: -10.875020027160645
    3. ',c' → logprob: -14.250020027160645
    4. '   ' → logprob: -14.750020027160645
    5. ',int' → logprob: -16.25002098083496
    6. ':' → logprob: -17.37502098083496
    7. ',
' → logprob: -17.62502098083496
    8. '       ' → logprob: -17.62502098083496
    9. 'c' → logprob: -18.00002098083496
    10. '‌,' → logprob: -18.25002098083496

Token 827: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023262951523065567
    2. ' c' → logprob: -3.7732629776000977
    3. '   ' → logprob: -11.148262977600098
    4. ' ' → logprob: -13.648262977600098
    5. '  ' → logprob: -14.023262977600098
    6. '    ' → logprob: -14.398262977600098
    7. '	c' → logprob: -16.02326202392578
    8. '
' → logprob: -16.52326202392578
    9. 'card' → logprob: -16.58576202392578
    10. '
' → logprob: -17.08576202392578

Token 828: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015991552209015936
    2. '3' → logprob: -8.750160217285156
    3. ',' → logprob: -13.875160217285156
    4. 'c' → logprob: -15.375160217285156
    5. '_' → logprob: -16.000160217285156
    6. '₂' → logprob: -16.750160217285156
    7. ' ' → logprob: -17.062660217285156
    8. '```' → logprob: -17.062660217285156
    9. '۲' → logprob: -17.187660217285156
    10. '23' → logprob: -18.000160217285156

Token 829: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5254926085472107
    2. ':' → logprob: -0.9004926085472107
    3. ':int' → logprob: -6.2754926681518555
    4. ' ,' → logprob: -8.400492668151855
    5. ',int' → logprob: -8.775492668151855
    6. 'int' → logprob: -10.400492668151855
    7. ' :' → logprob: -10.525492668151855
    8. '   ' → logprob: -10.775492668151855
    9. ')' → logprob: -11.400492668151855
    10. '=' → logprob: -13.150492668151855

Token 830: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018151231110095978
    2. ' int' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.89315128326416
    4. ':int' → logprob: -15.01815128326416
    5. '[int' → logprob: -15.64315128326416
    6. '(int' → logprob: -16.393150329589844
    7. '=int' → logprob: -16.518150329589844
    8. ' ' → logprob: -16.643150329589844
    9. '   ' → logprob: -16.643150329589844
    10. '	int' → logprob: -16.768150329589844

Token 831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023798657639417797
    2. ' ,' → logprob: -8.375238418579102
    3. ',int' → logprob: -12.125238418579102
    4. '   ' → logprob: -14.375238418579102
    5. ')' → logprob: -14.625238418579102
    6. ',
' → logprob: -15.250238418579102
    7. 'int' → logprob: -15.750238418579102
    8. '‌,' → logprob: -15.875238418579102
    9. '       ' → logprob: -16.2502384185791
    10. '_,' → logprob: -16.8752384185791

Token 832: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02358866296708584
    2. ' c' → logprob: -3.7735886573791504
    3. 'visible' → logprob: -8.648589134216309
    4. '   ' → logprob: -10.148589134216309
    5. 'op' → logprob: -10.148589134216309
    6. ' visible' → logprob: -10.148589134216309
    7. ' ' → logprob: -11.148589134216309
    8. 'hidden' → logprob: -11.898589134216309
    9. '  ' → logprob: -12.023589134216309
    10. 'opp' → logprob: -13.086089134216309

Token 833: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -13.87500286102295
    3. '_' → logprob: -14.87500286102295
    4. ')' → logprob: -15.12500286102295
    5. ':' → logprob: -15.25000286102295
    6. '```' → logprob: -15.50000286102295
    7. '   ' → logprob: -15.56250286102295
    8. 'c' → logprob: -16.000003814697266
    9. ',' → logprob: -16.062503814697266
    10. ' ' → logprob: -16.125003814697266

Token 834: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3556731641292572
    2. ')' → logprob: -1.2306731939315796
    3. '):' → logprob: -5.605673313140869
    4. ',' → logprob: -5.730673313140869
    5. '):
' → logprob: -8.855672836303711
    6. '   ' → logprob: -10.230672836303711
    7. ':int' → logprob: -10.355672836303711
    8. ':)' → logprob: -10.980672836303711
    9. '1' → logprob: -11.605672836303711
    10. ' )' → logprob: -11.730672836303711

Token 835: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019308974733576179
    2. ' int' → logprob: -6.2519307136535645
    3. 'Optional' → logprob: -14.251931190490723
    4. ')' → logprob: -14.376931190490723
    5. ':int' → logprob: -15.001931190490723
    6. ' ' → logprob: -15.501931190490723
    7. '[int' → logprob: -15.876931190490723
    8. '(int' → logprob: -16.126930236816406
    9. '   ' → logprob: -16.376930236816406
    10. '=int' → logprob: -16.751930236816406

Token 836: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022876414004713297
    2. '):' → logprob: -6.127287864685059
    3. '):
' → logprob: -9.377287864685059
    4. '   ' → logprob: -12.002287864685059
    5. ' )' → logprob: -12.377287864685059
    6. '):
' → logprob: -12.877287864685059
    7. ')->' → logprob: -12.877287864685059
    8. ':' → logprob: -13.502287864685059
    9. ',' → logprob: -14.377287864685059
    10. '       ' → logprob: -16.377286911010742

Token 837: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04711541533470154
    2. '->' → logprob: -3.7971153259277344
    3. ' ->' → logprob: -3.7971153259277344
    4. ')' → logprob: -7.547115325927734
    5. ':
' → logprob: -7.797115325927734
    6. ')->' → logprob: -9.172115325927734
    7. '   ' → logprob: -9.547115325927734
    8. '       ' → logprob: -10.797115325927734
    9. '):' → logprob: -11.922115325927734
    10. ':
' → logprob: -12.797115325927734

Token 838: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.35000815987586975
    2. 'bool' → logprob: -1.2250081300735474
    3. ' str' → logprob: -7.100008010864258
    4. 'Optional' → logprob: -7.600008010864258
    5. ' bool' → logprob: -8.975008010864258
    6. 'None' → logprob: -9.850008010864258
    7. 'int' → logprob: -10.600008010864258
    8. 'float' → logprob: -11.350008010864258
    9. '[str' → logprob: -11.850008010864258
    10. 'List' → logprob: -12.475008010864258

Token 839: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006224190350621939
    2. ':
' → logprob: -5.756224155426025
    3. '       ' → logprob: -6.506224155426025
    4. '(self' → logprob: -7.256224155426025
    5. '):' → logprob: -8.131224632263184
    6. '():' → logprob: -8.381224632263184
    7. '   ' → logprob: -8.756224632263184
    8. ',' → logprob: -9.756224632263184
    9. '):
' → logprob: -10.381224632263184
    10. '():
' → logprob: -10.506224632263184

Token 840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010020548506872728
    2. ':' → logprob: -10.000100135803223
    3. '```' → logprob: -10.375100135803223
    4. '   ' → logprob: -12.375100135803223
    5. ',' → logprob: -12.500100135803223
    6. '        
' → logprob: -13.000100135803223
    7. ')' → logprob: -13.250100135803223
    8. '      ' → logprob: -13.500100135803223
    9. ' ' → logprob: -13.750100135803223
    10. '#' → logprob: -14.250100135803223

Token 841: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6939512491226196
    2. 'player' → logprob: -1.9439512491226196
    3. ' player' → logprob: -1.9439512491226196
    4. ' base' → logprob: -2.69395112991333
    5. 'cards' → logprob: -2.94395112991333
    6. ' cards' → logprob: -3.44395112991333
    7. 'base' → logprob: -3.69395112991333
    8. 'self' → logprob: -5.06895112991333
    9. 'hand' → logprob: -5.06895112991333
    10. ' hand' → logprob: -5.31895112991333

Token 842: ' Setup' (ID: 34095)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.6172676682472229
    2. 'base' → logprob: -1.4922676086425781
    3. 'cards' → logprob: -2.117267608642578
    4. '#' → logprob: -3.492267608642578
    5. 'p' → logprob: -3.492267608642578
    6. 'ph' → logprob: -4.242267608642578
    7. 'self' → logprob: -4.242267608642578
    8. 'hand' → logprob: -4.992267608642578
    9. 'try' → logprob: -5.117267608642578
    10. 'known' → logprob: -5.367267608642578

Token 843: ' cards' (ID: 10541)
  Prédit: ' player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.49723273515701294
    2. 'player' → logprob: -0.9972327351570129
    3. '       ' → logprob: -4.622232913970947
    4. ' base' → logprob: -5.497232913970947
    5. ' self' → logprob: -6.372232913970947
    6. 'self' → logprob: -6.372232913970947
    7. ' cards' → logprob: -6.747232913970947
    8. 'base' → logprob: -6.872232913970947
    9. ' hand' → logprob: -7.497232913970947
    10. 'cards' → logprob: -7.622232913970947

Token 844: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5370671153068542
    2. ':' → logprob: -1.537067174911499
    3. ' =' → logprob: -2.537067174911499
    4. '
' → logprob: -2.662067174911499
    5. '=' → logprob: -4.03706693649292
    6. ':
' → logprob: -4.53706693649292
    7. '        
' → logprob: -4.66206693649292
    8. ',' → logprob: -5.66206693649292
    9. '=
' → logprob: -6.41206693649292
    10. ')' → logprob: -7.03706693649292

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017749855294823647
    2. 'player' → logprob: -4.392749786376953
    3. ' player' → logprob: -5.392749786376953
    4. 'p' → logprob: -8.642749786376953
    5. 'c' → logprob: -9.642749786376953
    6. ':' → logprob: -9.767749786376953
    7. 'cards' → logprob: -9.767749786376953
    8. ' c' → logprob: -9.892749786376953
    9. ' hand' → logprob: -10.017749786376953
    10. ' p' → logprob: -10.392749786376953

Token 846: ' player' (ID: 5033)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' (adapté à ' player') → logprob: -0.1784135103225708
    2. 'p' → logprob: -3.0534133911132812
    3. 'card' → logprob: -3.9284133911132812
    4. 'base' → logprob: -4.053413391113281
    5. 'cards' → logprob: -4.053413391113281
    6. '       ' → logprob: -4.178413391113281
    7. ' player' → logprob: -4.178413391113281
    8. 'ph' → logprob: -4.678413391113281
    9. 'c' → logprob: -4.678413391113281
    10. 'ch' → logprob: -6.428413391113281

Token 847: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.03000490553677082
    2. '_hand' → logprob: -3.5300049781799316
    3. ' =' → logprob: -8.780004501342773
    4. 'hand' → logprob: -9.905004501342773
    5. 'cards' → logprob: -10.530004501342773
    6. '_player' → logprob: -11.655004501342773
    7. '_card' → logprob: -11.905004501342773
    8. '=' → logprob: -13.030004501342773
    9. '_base' → logprob: -13.530004501342773
    10. 'Cards' → logprob: -13.530004501342773

Token 848: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759703516960144
    2. '=' → logprob: -0.8259703516960144
    3. '=[' → logprob: -10.575970649719238
    4. ':' → logprob: -12.575970649719238
    5. '   ' → logprob: -14.200970649719238
    6. '[' → logprob: -14.825970649719238
    7. ' =[' → logprob: -15.325970649719238
    8. ' ' → logprob: -16.075969696044922
    9. '```' → logprob: -16.200969696044922
    10. 's' → logprob: -16.325969696044922

Token 849: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31372374296188354
    2. ' [' → logprob: -1.3137238025665283
    3. '[player' → logprob: -8.18872356414795
    4. '[List' → logprob: -9.18872356414795
    5. '[self' → logprob: -9.81372356414795
    6. '[
' → logprob: -11.18872356414795
    7. 'Player' → logprob: -12.56372356414795
    8. ' Player' → logprob: -12.56372356414795
    9. '[c' → logprob: -14.31372356414795
    10. ' [
' → logprob: -14.31372356414795

Token 850: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -3.128163257315464e-07
    2. ' Card' → logprob: -15.25
    3. '   ' → logprob: -22.5
    4. '(Card' → logprob: -23.25
    5. 'Car' → logprob: -24.125
    6. 'Player' → logprob: -24.125
    7. '<Card' → logprob: -24.125
    8. 'card' → logprob: -24.375
    9. '       ' → logprob: -25.625
    10. 'Deck' → logprob: -25.875

Token 851: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.125005722045898
    3. '(i' → logprob: -16.2500057220459
    4. ' (' → logprob: -17.3750057220459
    5. 'c' → logprob: -17.6250057220459
    6. '©' → logprob: -17.7500057220459
    7. '```' → logprob: -18.7500057220459
    8. ')c' → logprob: -19.0000057220459
    9. '](' → logprob: -19.1250057220459
    10. '((' → logprob: -19.2500057220459

Token 852: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '3' → logprob: -14.125000953674316
    3. '2' → logprob: -16.250001907348633
    4. ')' → logprob: -17.000001907348633
    5. 'c' → logprob: -17.125001907348633
    6. ' ' → logprob: -17.562501907348633
    7. '_' → logprob: -17.625001907348633
    8. '```' → logprob: -18.062501907348633
    9. '`' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.562501907348633

Token 853: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -8.721228368813172e-05
    2. ' ),' → logprob: -9.375086784362793
    3. ')' → logprob: -14.125086784362793
    4. '),
' → logprob: -14.250086784362793
    5. '   ' → logprob: -15.375086784362793
    6. ',),' → logprob: -15.375086784362793
    7. ' ' → logprob: -16.12508773803711
    8. ',' → logprob: -16.25008773803711
    9. '  ' → logprob: -16.87508773803711
    10. '],' → logprob: -17.00008773803711

Token 854: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.4740791916847229
    2. ' Card' → logprob: -0.9740791916847229
    3. ' ' → logprob: -14.224079132080078
    4. '(Card' → logprob: -14.724079132080078
    5. ' ' → logprob: -15.099079132080078
    6. '<Card' → logprob: -15.224079132080078
    7. 'Car' → logprob: -16.224079132080078
    8. ' Cardinal' → logprob: -16.599079132080078
    9. ' card' → logprob: -16.599079132080078
    10. '.Card' → logprob: -16.974079132080078

Token 855: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0010749688372015953
    2. '(' → logprob: -6.87607479095459
    3. ' (' → logprob: -10.50107479095459
    4. 'c' → logprob: -11.25107479095459
    5. ' c' → logprob: -14.75107479095459
    6. '(
' → logprob: -15.12607479095459
    7. '((' → logprob: -15.12607479095459
    8. '(C' → logprob: -15.25107479095459
    9. '('' → logprob: -16.126075744628906
    10. '(s' → logprob: -16.876075744628906

Token 856: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016623330884613097
    2. '3' → logprob: -8.875165939331055
    3. 'c' → logprob: -10.750165939331055
    4. ' ' → logprob: -14.000165939331055
    5. '```' → logprob: -14.062665939331055
    6. '۲' → logprob: -14.125165939331055
    7. ')' → logprob: -14.562665939331055
    8. '
' → logprob: -15.187665939331055
    9. '_' → logprob: -15.625165939331055
    10. '₂' → logprob: -15.812665939331055

Token 857: ')]
' (ID: 11587)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0025596146006137133
    2. ')]' → logprob: -6.002559661865234
    3. ',' → logprob: -10.377559661865234
    4. ' ),' → logprob: -10.502559661865234
    5. ')' → logprob: -11.752559661865234
    6. '],' → logprob: -12.127559661865234
    7. ')]
' → logprob: -12.377559661865234
    8. '       ' → logprob: -13.002559661865234
    9. '),
' → logprob: -13.127559661865234
    10. '   ' → logprob: -14.002559661865234

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015351853333413601
    2. ',' → logprob: -4.39035177230835
    3. 'player' → logprob: -7.26535177230835
    4. '```' → logprob: -7.89035177230835
    5. '
' → logprob: -8.015352249145508
    6. '        
' → logprob: -8.140352249145508
    7. ' and' → logprob: -8.265352249145508
    8. ')' → logprob: -8.890352249145508
    9. '<|end|>' → logprob: -9.015352249145508
    10. ' player' → logprob: -9.015352249145508

Token 859: ' opponent' (ID: 38519)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.479499876499176
    2. 'op' → logprob: -0.979499876499176
    3. '       ' → logprob: -5.979499816894531
    4. ' self' → logprob: -7.104499816894531
    5. '#' → logprob: -7.354499816894531
    6. ' opponent' → logprob: -7.479499816894531
    7. 'player' → logprob: -7.729499816894531
    8. 'for' → logprob: -8.729499816894531
    9. 'opp' → logprob: -9.979499816894531
    10. 'Opponent' → logprob: -10.229499816894531

Token 860: '_visible' (ID: 83516)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.4072786569595337
    2. '_hand' → logprob: -1.2822786569595337
    3. '_visible' → logprob: -2.907278537750244
    4. '_card' → logprob: -6.407278537750244
    5. 'hand' → logprob: -7.907278537750244
    6. '_hidden' → logprob: -8.907279014587402
    7. 'visible' → logprob: -9.532279014587402
    8. ' =' → logprob: -9.532279014587402
    9. '=' → logprob: -9.657279014587402
    10. 'cards' → logprob: -10.532279014587402

Token 861: ' =' (ID: 314)
  Prédit: '_card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.11894135922193527
    2. ' =' → logprob: -2.493941307067871
    3. '=' → logprob: -3.618941307067871
    4. '_hand' → logprob: -6.243941307067871
    5. 'card' → logprob: -7.493941307067871
    6. 'Card' → logprob: -9.868941307067871
    7. '_' → logprob: -9.993941307067871
    8. '=_' → logprob: -9.993941307067871
    9. 'hand' → logprob: -10.493941307067871
    10. '_cards' → logprob: -10.493941307067871

Token 862: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.0007102862582542002
    2. ' Card' → logprob: -7.250710487365723
    3. '(Card' → logprob: -16.125709533691406
    4. '<Card' → logprob: -16.375709533691406
    5. '   ' → logprob: -16.875709533691406
    6. 'card' → logprob: -17.000709533691406
    7. '_card' → logprob: -18.125709533691406
    8. ' ' → logprob: -18.625709533691406
    9. '.Card' → logprob: -18.875709533691406
    10. ' card' → logprob: -19.375709533691406

Token 863: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.875003814697266
    3. 'c' → logprob: -14.000003814697266
    4. ' (' → logprob: -16.875003814697266
    5. '(
' → logprob: -17.250003814697266
    6. '	c' → logprob: -19.625003814697266
    7. '(C' → logprob: -20.000003814697266
    8. '©' → logprob: -20.125003814697266
    9. '((' → logprob: -21.250003814697266
    10. ')c' → logprob: -21.625003814697266

Token 864: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.75000286102295
    3. 'c' → logprob: -14.00000286102295
    4. ' ' → logprob: -15.87500286102295
    5. ')' → logprob: -16.125001907348633
    6. '`' → logprob: -16.562501907348633
    7. '2' → logprob: -16.687501907348633
    8. ')
' → logprob: -16.875001907348633
    9. '```' → logprob: -16.875001907348633
    10. '   ' → logprob: -17.000001907348633

Token 865: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005137138650752604
    2. ')
' → logprob: -7.625513553619385
    3. '       ' → logprob: -10.625514030456543
    4. ' )' → logprob: -13.875514030456543
    5. ')
' → logprob: -16.375513076782227
    6. ')

' → logprob: -16.500513076782227
    7. '   ' → logprob: -16.875513076782227
    8. '<|end|>' → logprob: -17.375513076782227
    9. '))' → logprob: -17.750513076782227
    10. '),' → logprob: -18.125513076782227

Token 866: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002298109233379364
    2. 'self' → logprob: -6.877297878265381
    3. '
' → logprob: -7.252297878265381
    4. ' self' → logprob: -8.502298355102539
    5. 'deck' → logprob: -8.502298355102539
    6. '        
' → logprob: -9.502298355102539
    7. '   ' → logprob: -11.252298355102539
    8. '```' → logprob: -11.502298355102539
    9. ',' → logprob: -11.627298355102539
    10. '#' → logprob: -11.627298355102539

Token 867: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09122104942798615
    2. '#' (adapté à ' #') → logprob: -2.8412210941314697
    3. 'op' → logprob: -4.466220855712891
    4. 'player' → logprob: -4.841220855712891
    5. '       ' → logprob: -5.591220855712891
    6. 'prob' → logprob: -5.966220855712891
    7. 'hidden' → logprob: -6.341220855712891
    8. ' self' → logprob: -7.341220855712891
    9. 'hand' → logprob: -8.59122085571289
    10. 'cards' → logprob: -9.59122085571289

Token 868: ' Remove' (ID: 18141)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017000185325741768
    2. '#' → logprob: -4.892000198364258
    3. ' self' → logprob: -5.142000198364258
    4. '       ' → logprob: -6.142000198364258
    5. 'player' → logprob: -7.767000198364258
    6. 'op' → logprob: -7.892000198364258
    7. 'for' → logprob: -9.017000198364258
    8. '
' → logprob: -9.142000198364258
    9. 'cards' → logprob: -10.142000198364258
    10. 'deck' → logprob: -10.142000198364258

Token 869: ' known' (ID: 5542)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.02858341671526432
    2. ' player' → logprob: -3.903583526611328
    3. 'cards' → logprob: -5.278583526611328
    4. '[player' → logprob: -6.778583526611328
    5. 'self' → logprob: -7.778583526611328
    6. ' cards' → logprob: -7.778583526611328
    7. '_cards' → logprob: -8.028583526611328
    8. '[' → logprob: -8.653583526611328
    9. '(player' → logprob: -9.528583526611328
    10. 'op' → logprob: -9.903583526611328

Token 870: ' cards' (ID: 10541)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.2836296558380127
    2. ' cards' → logprob: -2.0336296558380127
    3. 'cards' → logprob: -2.1586296558380127
    4. 'player' → logprob: -8.783629417419434
    5. '(cards' → logprob: -9.408629417419434
    6. 'Cards' → logprob: -9.408629417419434
    7. '[player' → logprob: -9.533629417419434
    8. ' player' → logprob: -10.033629417419434
    9. '.cards' → logprob: -10.283629417419434
    10. '[' → logprob: -10.533629417419434

Token 871: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1707257479429245
    2. ' from' → logprob: -2.2957258224487305
    3. 'from' → logprob: -3.4207258224487305
    4. 'self' → logprob: -4.2957258224487305
    5. ' =' → logprob: -6.0457258224487305
    6. ' self' → logprob: -6.7957258224487305
    7. ',' → logprob: -6.9207258224487305
    8. ':' → logprob: -7.0457258224487305
    9. '
' → logprob: -7.0457258224487305
    10. '(self' → logprob: -7.4207258224487305

Token 872: ' deck' (ID: 16942)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02666332945227623
    2. ' self' → logprob: -3.651663303375244
    3. 'player' → logprob: -8.401663780212402
    4. '[self' → logprob: -9.776663780212402
    5. 'the' → logprob: -10.651663780212402
    6. 'deck' → logprob: -11.151663780212402
    7. '[' → logprob: -11.401663780212402
    8. '{' → logprob: -11.776663780212402
    9. ' the' → logprob: -11.776663780212402
    10. ' player' → logprob: -12.526663780212402

Token 873: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002075194614008069
    2. 'self' → logprob: -6.2520751953125
    3. ',' → logprob: -9.7520751953125
    4. ' self' → logprob: -10.0020751953125
    5. '   ' → logprob: -11.6270751953125
    6. '        
' → logprob: -12.0020751953125
    7. '<|end|>' → logprob: -12.0020751953125
    8. '```' → logprob: -12.5020751953125
    9. ':' → logprob: -12.6270751953125
    10. '[' → logprob: -13.2520751953125

Token 874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007687077857553959
    2. 'self' → logprob: -5.007687091827393
    3. ' self' → logprob: -7.132687091827393
    4. ',' → logprob: -9.132686614990234
    5. '   ' → logprob: -11.007686614990234
    6. ':' → logprob: -12.007686614990234
    7. ' for' → logprob: -12.132686614990234
    8. '[' → logprob: -12.257686614990234
    9. '```' → logprob: -12.382686614990234
    10. ' to' → logprob: -12.632686614990234

Token 875: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0055749984458088875
    2. ' self' → logprob: -5.255575180053711
    3. '       ' → logprob: -8.005575180053711
    4. '	self' → logprob: -13.880575180053711
    5. '[self' → logprob: -13.880575180053711
    6. '```' → logprob: -13.880575180053711
    7. 'for' → logprob: -14.255575180053711
    8. '=self' → logprob: -14.380575180053711
    9. '   ' → logprob: -14.505575180053711
    10. 'cards' → logprob: -15.130575180053711

Token 876: '.deck' (ID: 191464)
  Prédit: '.deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.deck' → logprob: -0.00011796683247666806
    2. '.' → logprob: -9.125118255615234
    3. 'deck' → logprob: -11.750118255615234
    4. ' .' → logprob: -14.750118255615234
    5. '```' → logprob: -16.250118255615234
    6. '   ' → logprob: -16.500118255615234
    7. '.decoder' → logprob: -16.500118255615234
    8. '(deck' → logprob: -16.625118255615234
    9. '.dequeue' → logprob: -16.875118255615234
    10. '`.' → logprob: -17.500118255615234

Token 877: ' =' (ID: 314)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0005891331238672137
    2. '.' → logprob: -7.500589370727539
    3. ' .' → logprob: -10.375589370727539
    4. '   ' → logprob: -13.500589370727539
    5. 'remove' → logprob: -13.750589370727539
    6. '.delete' → logprob: -14.250589370727539
    7. ' =' → logprob: -14.375589370727539
    8. '=' → logprob: -15.000589370727539
    9. '.reset' → logprob: -15.500589370727539
    10. ').' → logprob: -15.875589370727539

Token 878: ' Deck' (ID: 41948)
  Prédit: 'Deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Deck' → logprob: -0.0019287518225610256
    2. ' Deck' → logprob: -6.251928806304932
    3. 'deck' → logprob: -16.751928329467773
    4. 'Deque' → logprob: -18.376928329467773
    5. 'Desk' → logprob: -18.626928329467773
    6. ' deck' → logprob: -19.001928329467773
    7. '   ' → logprob: -19.126928329467773
    8. 'self' → logprob: -19.501928329467773
    9. '  ' → logprob: -20.001928329467773
    10. ' ' → logprob: -20.126928329467773

Token 879: '()' (ID: 416)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.8804985880851746
    2. '       ' → logprob: -1.0054986476898193
    3. '
' → logprob: -1.6304986476898193
    4. ')
' → logprob: -4.63049840927124
    5. '()' → logprob: -4.75549840927124
    6. '        
' → logprob: -6.25549840927124
    7. 'self' → logprob: -7.13049840927124
    8. 'deck' → logprob: -7.50549840927124
    9. ')' → logprob: -7.63049840927124
    10. '
' → logprob: -7.88049840927124

Token 880: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012831701897084713
    2. '       ' → logprob: -4.512831687927246
    3. ' self' → logprob: -6.637831687927246
    4. '        
' → logprob: -8.762831687927246
    5. '
' → logprob: -9.137831687927246
    6. '<|end|>' → logprob: -10.387831687927246
    7. '[self' → logprob: -10.512831687927246
    8. '
' → logprob: -10.887831687927246
    9. '   ' → logprob: -10.887831687927246
    10. 'player' → logprob: -11.137831687927246

Token 881: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6545652151107788
    2. 'self' → logprob: -0.9045652151107788
    3. '
' → logprob: -2.6545653343200684
    4. '        
' → logprob: -5.654565334320068
    5. '
' → logprob: -7.404565334320068
    6. 'player' → logprob: -8.40456485748291
    7. ')
' → logprob: -8.40456485748291
    8. '           ' → logprob: -9.40456485748291
    9. '()
' → logprob: -9.40456485748291
    10. '   ' → logprob: -9.77956485748291

Token 882: ' fresh' (ID: 8982)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007935435860417783
    2. '       ' → logprob: -7.50079345703125
    3. ' self' → logprob: -8.37579345703125
    4. '        
' → logprob: -13.12579345703125
    5. '
' → logprob: -13.37579345703125
    6. '<|end|>' → logprob: -13.75079345703125
    7. '```' → logprob: -13.75079345703125
    8. ')' → logprob: -14.12579345703125
    9. '`' → logprob: -14.50079345703125
    10. '	self' → logprob: -14.87579345703125

Token 883: ' deck' (ID: 16942)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 884: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3883744478225708
    2. '       ' → logprob: -1.1383744478225708
    3. ' self' → logprob: -7.013374328613281
    4. '   ' → logprob: -8.763374328613281
    5. '<|end|>' → logprob: -8.763374328613281
    6. ',' → logprob: -9.638374328613281
    7. '
' → logprob: -10.138374328613281
    8. '           ' → logprob: -10.388374328613281
    9. '<|end|>' → logprob: -10.388374328613281
    10. '        
' → logprob: -10.388374328613281

Token 885: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5770523548126221
    2. 'self' → logprob: -0.8270523548126221
    3. ' self' → logprob: -6.952052116394043
    4. '   ' → logprob: -9.077052116394043
    5. '```' → logprob: -10.952052116394043
    6. '           ' → logprob: -11.952052116394043
    7. '[self' → logprob: -12.702052116394043
    8. '`' → logprob: -13.077052116394043
    9. '	self' → logprob: -13.327052116394043
    10. '               ' → logprob: -13.577052116394043

Token 886: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0011941560078412294
    2. ' self' → logprob: -6.751194000244141
    3. '       ' → logprob: -10.87619400024414
    4. '        
' → logprob: -14.25119400024414
    5. 'known' → logprob: -14.37619400024414
    6. '```' → logprob: -14.50119400024414
    7. 'cards' → logprob: -14.50119400024414
    8. 'for' → logprob: -14.62619400024414
    9. '[self' → logprob: -14.75119400024414
    10. '	self' → logprob: -15.00119400024414

Token 887: '.deck' (ID: 191464)
  Prédit: '.deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.deck' → logprob: -0.006521391216665506
    2. 'deck' → logprob: -5.131521224975586
    3. '.' → logprob: -8.506521224975586
    4. ' .' → logprob: -8.881521224975586
    5. '
' → logprob: -10.006521224975586
    6. '   ' → logprob: -10.131521224975586
    7. ' deck' → logprob: -10.756521224975586
    8. ').' → logprob: -10.881521224975586
    9. 'Deck' → logprob: -11.131521224975586
    10. '(deck' → logprob: -11.381521224975586

Token 888: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -5.44312788406387e-05
    2. '.' → logprob: -10.000054359436035
    3. 'remove' → logprob: -12.000054359436035
    4. ' .' → logprob: -13.000054359436035
    5. '.delete' → logprob: -15.625054359436035
    6. '   ' → logprob: -15.750054359436035
    7. ').' → logprob: -17.00005531311035
    8. ' remove' → logprob: -17.62505531311035
    9. '().' → logprob: -18.37505531311035
    10. '].' → logprob: -18.37505531311035

Token 889: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -5.512236498361744e-07
    2. 'cards' → logprob: -15.000000953674316
    3. '_' → logprob: -16.625
    4. '_players' → logprob: -17.5
    5. '_card' → logprob: -17.875
    6. '```' → logprob: -18.625
    7. 'Cards' → logprob: -18.625
    8. '_c' → logprob: -18.75
    9. '_codes' → logprob: -19.25
    10. '(cards' → logprob: -19.625

Token 890: '(player' (ID: 20873)
  Prédit: '(player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(player' → logprob: -0.009908131323754787
    2. '([' → logprob: -4.759908199310303
    3. 'player' → logprob: -7.009908199310303
    4. '[player' → logprob: -7.884908199310303
    5. ' player' → logprob: -12.134907722473145
    6. '(' → logprob: -12.884907722473145
    7. '([
' → logprob: -13.634907722473145
    8. '([...' → logprob: -13.759907722473145
    9. '[' → logprob: -14.134907722473145
    10. '	player' → logprob: -14.509907722473145

Token 891: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -8.375538163818419e-05
    2. 'cards' → logprob: -10.750083923339844
    3. '[player' → logprob: -10.750083923339844
    4. 'player' → logprob: -11.000083923339844
    5. '_player' → logprob: -11.750083923339844
    6. '_players' → logprob: -12.500083923339844
    7. 'Cards' → logprob: -13.000083923339844
    8. '(player' → logprob: -13.125083923339844
    9. 's' → logprob: -13.500083923339844
    10. '[' → logprob: -13.625083923339844

Token 892: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10834483802318573
    2. '+[' → logprob: -2.608344793319702
    3. '+' → logprob: -3.608344793319702
    4. ')
' → logprob: -6.858345031738281
    5. ')' → logprob: -7.233345031738281
    6. '[' → logprob: -8.858345031738281
    7. ' [' → logprob: -12.733345031738281
    8. '+
' → logprob: -12.733345031738281
    9. '       ' → logprob: -13.108345031738281
    10. ' +
' → logprob: -13.858345031738281

Token 893: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010554377222433686
    2. '[player' → logprob: -7.5010552406311035
    3. ' [' → logprob: -8.001055717468262
    4. '[o' → logprob: -10.251055717468262
    5. '[ind' → logprob: -10.376055717468262
    6. '[out' → logprob: -10.501055717468262
    7. '[current' → logprob: -11.626055717468262
    8. '[offset' → logprob: -12.001055717468262
    9. '[pos' → logprob: -12.251055717468262
    10. '[obj' → logprob: -12.251055717468262

Token 894: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -4.723352049040841e-06
    2. ' opponent' → logprob: -12.375004768371582
    3. 'Opponent' → logprob: -15.000004768371582
    4. '
' → logprob: -16.625003814697266
    5. 'opp' → logprob: -17.375003814697266
    6. '(op' → logprob: -18.000003814697266
    7. '```' → logprob: -18.000003814697266
    8. '	op' → logprob: -18.375003814697266
    9. ')' → logprob: -18.500003814697266
    10. ']' → logprob: -18.625003814697266

Token 895: 'ponent' (ID: 1758)
  Prédit: 'onent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -7.219262624857947e-05
    2. 'ponent' → logprob: -9.625072479248047
    3. 'nent' → logprob: -12.750072479248047
    4. 'on' → logprob: -12.750072479248047
    5. 'ONENT' → logprob: -15.750072479248047
    6. 'ont' → logprob: -17.000072479248047
    7. 'onn' → logprob: -17.875072479248047
    8. 'ent' → logprob: -18.375072479248047
    9. 'onen' → logprob: -18.750072479248047
    10. '`' → logprob: -19.000072479248047

Token 896: '_visible' (ID: 83516)
  Prédit: '_visible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_visible' → logprob: -0.00014168102643452585
    2. 'visible' → logprob: -8.875142097473145
    3. '_' → logprob: -13.875142097473145
    4. 'Visible' → logprob: -15.250142097473145
    5. '
' → logprob: -15.375142097473145
    6. ' visible' → logprob: -15.875142097473145
    7. '_VISIBLE' → logprob: -16.250141143798828
    8. '.visible' → logprob: -17.625141143798828
    9. '_vis' → logprob: -18.000141143798828
    10. ' _' → logprob: -18.000141143798828

Token 897: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0020840009674429893
    2. '])
' → logprob: -6.377083778381348
    3. ')' → logprob: -8.252083778381348
    4. ' ])' → logprob: -9.627083778381348
    5. '])

' → logprob: -11.002083778381348
    6. ')])' → logprob: -11.252083778381348
    7. ')]' → logprob: -11.627083778381348
    8. '])
' → logprob: -12.127083778381348
    9. '       ' → logprob: -12.627083778381348
    10. ']' → logprob: -13.002083778381348

Token 898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022359201684594154
    2. ' pc' → logprob: -5.397359371185303
    3. 'calculator' → logprob: -5.397359371185303
    4. 'pc' → logprob: -5.522359371185303
    5. 'prob' → logprob: -5.772359371185303
    6. 'calc' → logprob: -6.522359371185303
    7. ' calc' → logprob: -6.647359371185303
    8. '   ' → logprob: -6.647359371185303
    9. '
' → logprob: -7.647359371185303
    10. ' prob' → logprob: -7.772359371185303

Token 899: ' player' (ID: 5033)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3034435510635376
    2. 'calculator' → logprob: -1.9284435510635376
    3. 'pc' → logprob: -3.178443431854248
    4. 'calc' → logprob: -3.303443431854248
    5. 'prob' → logprob: -3.803443431854248
    6. ' pc' → logprob: -4.928443431854248
    7. ' calc' → logprob: -5.428443431854248
    8. ' calculator' → logprob: -5.803443431854248
    9. ' prob' → logprob: -7.678443431854248
    10. ' probability' → logprob: -9.803443908691406

Token 900: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.08851305395364761
    2. '_cards' → logprob: -3.463513135910034
    3. '_sum' → logprob: -3.963513135910034
    4. '_total' → logprob: -4.213512897491455
    5. 'hand' → logprob: -4.338512897491455
    6. '_value' → logprob: -5.963512897491455
    7. '_prob' → logprob: -6.463512897491455
    8. 'Hand' → logprob: -7.463512897491455
    9. '_probability' → logprob: -7.588512897491455
    10. '_probs' → logprob: -8.088513374328613

Token 901: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687121868133545
    2. ' =' → logprob: -1.1368712186813354
    3. ':' → logprob: -16.636871337890625
    4. ' ' → logprob: -16.886871337890625
    5. '=

' → logprob: -17.761871337890625
    6. '=
' → logprob: -17.886871337890625
    7. '.' → logprob: -18.136871337890625
    8. ')' → logprob: -18.511871337890625
    9. 'player' → logprob: -18.511871337890625
    10. '   ' → logprob: -18.761871337890625

Token 902: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -9.627176768844947e-05
    2. ' Player' → logprob: -9.250096321105957
    3. '	Player' → logprob: -16.62509536743164
    4. '   ' → logprob: -17.12509536743164
    5. 'player' → logprob: -19.62509536743164
    6. 'User' → logprob: -21.00009536743164
    7. '_Player' → logprob: -21.12509536743164
    8. ' ' → logprob: -21.37509536743164
    9. '  ' → logprob: -21.87509536743164
    10. '<Player' → logprob: -22.12509536743164

Token 903: 'Hand' (ID: 2941)
  Prédit: 'Hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -7.896309739408025e-07
    2. 'hand' → logprob: -15.125000953674316
    3. 'Player' → logprob: -15.875000953674316
    4. 'Hands' → logprob: -16.125
    5. '[' → logprob: -16.875
    6. '(' → logprob: -16.875
    7. 'Card' → logprob: -17.375
    8. ' Hand' → logprob: -17.375
    9. '_hand' → logprob: -17.875
    10. 'H' → logprob: -17.875

Token 904: '(player' (ID: 20873)
  Prédit: '(player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(player' → logprob: -1.27099974633893e-05
    2. 'player' → logprob: -11.375012397766113
    3. '[player' → logprob: -14.750012397766113
    4. '(' → logprob: -15.500012397766113
    5. '([' → logprob: -15.500012397766113
    6. '(cards' → logprob: -16.00001335144043
    7. '(players' → logprob: -16.00001335144043
    8. ' (' → logprob: -16.12501335144043
    9. '(
' → logprob: -16.75001335144043
    10. '(patient' → logprob: -17.87501335144043

Token 905: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00020234835392329842
    2. 'cards' → logprob: -8.750202178955078
    3. '(player' → logprob: -11.375202178955078
    4. '(cards' → logprob: -11.500202178955078
    5. 'Cards' → logprob: -11.625202178955078
    6. '_hand' → logprob: -12.625202178955078
    7. 'player' → logprob: -13.000202178955078
    8. 'hand' → logprob: -13.500202178955078
    9. 's' → logprob: -13.875202178955078
    10. '[player' → logprob: -14.000202178955078

Token 906: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519993185997009
    2. ')
' → logprob: -1.5019993782043457
    3. '       ' → logprob: -10.001998901367188
    4. ')
' → logprob: -10.876998901367188
    5. ')

' → logprob: -12.376998901367188
    6. ' )' → logprob: -14.626998901367188
    7. '   ' → logprob: -14.876998901367188
    8. ' )
' → logprob: -15.126998901367188
    9. ')`
' → logprob: -16.126998901367188
    10. '),' → logprob: -16.251998901367188

Token 907: '       ' (ID: 309)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.45248493552207947
    2. '       ' → logprob: -1.3274849653244019
    3. 'op' → logprob: -2.4524848461151123
    4. 'calculator' → logprob: -4.702485084533691
    5. ' probability' → logprob: -6.702485084533691
    6. 'pc' → logprob: -6.952485084533691
    7. ' opponent' → logprob: -7.202485084533691
    8. ' prob' → logprob: -8.577485084533691
    9. 'calc' → logprob: -9.702485084533691
    10. 'available' → logprob: -9.952485084533691

Token 908: ' #' (ID: 1069)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.012809927575290203
    2. 'prob' → logprob: -4.512809753417969
    3. '       ' → logprob: -6.512809753417969
    4. ' opponent' → logprob: -8.887809753417969
    5. 'opp' → logprob: -9.637809753417969
    6. 'calculator' → logprob: -10.012809753417969
    7. '#' (adapté à ' #') → logprob: -12.262809753417969
    8. ' probability' → logprob: -13.137809753417969
    9. 'available' → logprob: -13.387809753417969
    10. 'player' → logprob: -13.387809753417969

Token 909: ' Calculate' (ID: 38942)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.1147698387503624
    2. 'calculator' → logprob: -2.73976993560791
    3. 'op' → logprob: -3.36476993560791
    4. 'calc' → logprob: -5.11476993560791
    5. 'pc' → logprob: -6.73976993560791
    6. '#' → logprob: -7.48976993560791
    7. 'opp' → logprob: -7.61476993560791
    8. 'player' → logprob: -8.73976993560791
    9. '       ' → logprob: -8.98976993560791
    10. '   ' → logprob: -9.61476993560791

Token 910: ' probability' (ID: 34933)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.03668317198753357
    2. ' prob' → logprob: -4.286683082580566
    3. '       ' → logprob: -5.161683082580566
    4. 'pc' → logprob: -5.411683082580566
    5. 'calculator' → logprob: -5.536683082580566
    6. 'calc' → logprob: -5.661683082580566
    7. ' probability' → logprob: -5.911683082580566
    8. 'pro' → logprob: -6.536683082580566
    9. ' pc' → logprob: -8.661683082580566
    10. ' calculator' → logprob: -8.911683082580566

Token 911: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009188431431539357
    2. 'calculator' → logprob: -7.125918865203857
    3. 'calc' → logprob: -9.3759183883667
    4. 'prob' → logprob: -11.7509183883667
    5. ' calculator' → logprob: -12.3759183883667
    6. 'pc' → logprob: -12.5009183883667
    7. ' =' → logprob: -12.7509183883667
    8. 'cal' → logprob: -13.1259183883667
    9. '
' → logprob: -13.6259183883667
    10. 'calcul' → logprob: -13.7509183883667

Token 912: ' player's' (ID: 107234)
  Prédit: 'drawing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'drawing' → logprob: -1.713714361190796
    2. 'draw' → logprob: -2.213714361190796
    3. ' probability' → logprob: -2.213714361190796
    4. 'player' → logprob: -2.338714361190796
    5. 'additional' → logprob: -2.463714361190796
    6. 'prob' → logprob: -2.463714361190796
    7. ' next' → logprob: -2.963714361190796
    8. ' the' → logprob: -3.213714361190796
    9. 'the' → logprob: -3.213714361190796
    10. 'Probability' → logprob: -3.338714361190796

Token 913: ' own' (ID: 2316)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.8002380728721619
    2. 'next' → logprob: -0.8002380728721619
    3. 'draw' → logprob: -3.6752381324768066
    4. 'decision' → logprob: -3.8002381324768066
    5. ' hand' → logprob: -4.300238132476807
    6. 'total' → logprob: -4.550238132476807
    7. ' next' → logprob: -4.550238132476807
    8. 'current' → logprob: -5.050238132476807
    9. 'Hand' → logprob: -5.925238132476807
    10. 'sum' → logprob: -6.050238132476807

Token 914: ' hand' (ID: 1803)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.03480113670229912
    2. 'draw' → logprob: -4.034801006317139
    3. 'next' → logprob: -5.409801006317139
    4. 'total' → logprob: -5.784801006317139
    5. 'cards' → logprob: -6.034801006317139
    6. ' hand' → logprob: -6.409801006317139
    7. 'sum' → logprob: -6.534801006317139
    8. 'decision' → logprob: -6.659801006317139
    9. 'Hand' → logprob: -6.909801006317139
    10. 'possible' → logprob: -8.284801483154297

Token 915: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017262301407754421
    2. 'calculator' → logprob: -7.376726150512695
    3. 'prob' → logprob: -7.376726150512695
    4. 'to' → logprob: -9.501726150512695
    5. 'and' → logprob: -9.501726150512695
    6. ' and' → logprob: -9.626726150512695
    7. ' to' → logprob: -10.001726150512695
    8. ',' → logprob: -10.251726150512695
    9. '   ' → logprob: -10.626726150512695
    10. 'calc' → logprob: -10.626726150512695

Token 916: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008458785712718964
    2. 'calculator' → logprob: -5.133458614349365
    3. 'prob' → logprob: -6.383458614349365
    4. 'calc' → logprob: -7.758458614349365
    5. 'pc' → logprob: -8.008459091186523
    6. 'cal' → logprob: -11.383459091186523
    7. '   ' → logprob: -11.508459091186523
    8. ',' → logprob: -11.758459091186523
    9. ' calculator' → logprob: -12.133459091186523
    10. '```' → logprob: -12.133459091186523

Token 917: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' (adapté à ' prob') → logprob: -0.7935547828674316
    2. '       ' → logprob: -1.9185547828674316
    3. 'calculator' → logprob: -1.9185547828674316
    4. 'calc' → logprob: -2.1685547828674316
    5. 'pc' → logprob: -2.2935547828674316
    6. ' prob' → logprob: -3.9185547828674316
    7. ' pc' → logprob: -4.793554782867432
    8. ' calculator' → logprob: -5.293554782867432
    9. ' calc' → logprob: -5.668554782867432
    10. 'pro' → logprob: -6.793554782867432

Token 918: '_player' (ID: 34918)
  Prédit: '_calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_calc' → logprob: -0.23229171335697174
    2. '_cal' → logprob: -1.6072916984558105
    3. ' =' → logprob: -5.1072916984558105
    4. 'calc' → logprob: -7.3572916984558105
    5. '=' → logprob: -9.607292175292969
    6. 'o' → logprob: -10.607292175292969
    7. 'Calc' → logprob: -10.732292175292969
    8. 'ability' → logprob: -10.982292175292969
    9. 'cal' → logprob: -11.232292175292969
    10. 'abil' → logprob: -12.732292175292969

Token 919: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016855431720614433
    2. '=' → logprob: -4.141855239868164
    3. '_cal' → logprob: -7.641855239868164
    4. '_calc' → logprob: -9.141855239868164
    5. '   ' → logprob: -9.391855239868164
    6. '_' → logprob: -10.141855239868164
    7. ':' → logprob: -10.391855239868164
    8. '       ' → logprob: -10.641855239868164
    9. 'calculator' → logprob: -11.891855239868164
    10. 'calc' → logprob: -12.141855239868164

Token 920: ' Probability' (ID: 194171)
  Prédit: 'Probability'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Probability' → logprob: -0.0024943258613348007
    2. ' Probability' → logprob: -6.1274943351745605
    3. 'self' → logprob: -8.377493858337402
    4. '       ' → logprob: -9.877493858337402
    5. '           ' → logprob: -11.627493858337402
    6. '   ' → logprob: -11.877493858337402
    7. 'prob' → logprob: -12.377493858337402
    8. 'Prob' → logprob: -12.502493858337402
    9. ' self' → logprob: -13.502493858337402
    10. ' probability' → logprob: -14.377493858337402

Token 921: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -5.512236498361744e-07
    2. 'calculator' → logprob: -15.250000953674316
    3. 'Probability' → logprob: -16.625
    4. '_cal' → logprob: -17.0
    5. 'Calcul' → logprob: -17.375
    6. 'Calculate' → logprob: -17.75
    7. '   ' → logprob: -18.375
    8. '       ' → logprob: -18.5
    9. 'prob' → logprob: -18.625
    10. '           ' → logprob: -18.625

Token 922: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.125006675720215
    3. '(
' → logprob: -14.375006675720215
    4. 'self' → logprob: -15.375006675720215
    5. '(deck' → logprob: -16.0000057220459
    6. ' (' → logprob: -17.7500057220459
    7. '       ' → logprob: -17.8750057220459
    8. '(de' → logprob: -17.8750057220459
    9. '   ' → logprob: -18.2500057220459
    10. ' self' → logprob: -19.0000057220459

Token 923: '.deck' (ID: 191464)
  Prédit: '.deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.deck' → logprob: -6.265633419388905e-05
    2. 'deck' → logprob: -10.000062942504883
    3. '.' → logprob: -11.375062942504883
    4. ').' → logprob: -12.875062942504883
    5. ' .' → logprob: -13.125062942504883
    6. '(deck' → logprob: -14.875062942504883
    7. '   ' → logprob: -15.000062942504883
    8. 'Deck' → logprob: -15.375062942504883
    9. '.game' → logprob: -16.375062942504883
    10. '       ' → logprob: -16.875062942504883

Token 924: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -7.946405094116926e-05
    2. ')' → logprob: -9.625079154968262
    3. '   ' → logprob: -11.625079154968262
    4. ' ).' → logprob: -13.125079154968262
    5. ')
' → logprob: -14.375079154968262
    6. '.pro' → logprob: -14.750079154968262
    7. ' ' → logprob: -15.000079154968262
    8. 'prob' → logprob: -15.375079154968262
    9. ').__' → logprob: -15.500079154968262
    10. '       ' → logprob: -15.625079154968262

Token 925: 'prob' (ID: 29823)
  Prédit: 'prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -5.512236498361744e-07
    2. ' probability' → logprob: -14.500000953674316
    3. '_probability' → logprob: -22.25
    4. '(prob' → logprob: -23.5
    5. 'Probability' → logprob: -25.75
    6. '概率' → logprob: -26.125
    7. '`' → logprob: -26.125
    8. ' ' → logprob: -27.5
    9. '```' → logprob: -27.5
    10. '   ' → logprob: -27.875

Token 926: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -1.8624639324116288e-06
    2. 'ality' → logprob: -13.625001907348633
    3. 'ABILITY' → logprob: -15.250001907348633
    4. 'abil' → logprob: -16.125001907348633
    5. 'prob' → logprob: -16.250001907348633
    6. '_probability' → logprob: -16.500001907348633
    7. 'Ability' → logprob: -16.750001907348633
    8. 'ility' → logprob: -18.375001907348633
    9. 'a' → logprob: -18.750001907348633
    10. ' ability' → logprob: -18.875001907348633

Token 927: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.704273118884885e-07
    2. 'sum' → logprob: -14.750000953674316
    3. '__' → logprob: -17.5
    4. '_' → logprob: -17.625
    5. '_
' → logprob: -17.75
    6. '```' → logprob: -18.0
    7. '_prob' → logprob: -19.125
    8. '`' → logprob: -19.5
    9. 's' → logprob: -19.875
    10. '\' → logprob: -20.0

Token 928: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.3856492842023727e-06
    2. '_sum' → logprob: -13.875000953674316
    3. '_' → logprob: -15.250000953674316
    4. 'no' → logprob: -16.500001907348633
    5. 'No' → logprob: -17.750001907348633
    6. '```' → logprob: -18.500001907348633
    7. '_
' → logprob: -18.750001907348633
    8. '_NO' → logprob: -18.750001907348633
    9. '_No' → logprob: -19.375001907348633
    10. '__' → logprob: -19.500001907348633

Token 929: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.00016027313540689647
    2. 'ex' → logprob: -8.750160217285156
    3. ' exceed' → logprob: -15.000160217285156
    4. '_' → logprob: -15.125160217285156
    5. 't' → logprob: -15.500160217285156
    6. '_not' → logprob: -15.625160217285156
    7. 's' → logprob: -16.375160217285156
    8. '(ex' → logprob: -16.625160217285156
    9. 'Ex' → logprob: -16.875160217285156
    10. '_EX' → logprob: -17.000160217285156

Token 930: 'ceed' (ID: 7945)
  Prédit: 'ceed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceed' → logprob: -1.1756367712223437e-05
    2. 'eed' → logprob: -11.500011444091797
    3. 'ce' → logprob: -14.625011444091797
    4. '`' → logprob: -15.500011444091797
    5. '<' → logprob: -15.625011444091797
    6. 'ceeds' → logprob: -15.625011444091797
    7. '```' → logprob: -16.000011444091797
    8. ' exceed' → logprob: -17.375011444091797
    9. '[' → logprob: -17.500011444091797
    10. '...' → logprob: -17.625011444091797

Token 931: '(player' (ID: 20873)
  Prédit: '(player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(player' → logprob: -0.0002943479048553854
    2. 'player' → logprob: -8.75029468536377
    3. '([' → logprob: -9.50029468536377
    4. '(
' → logprob: -10.62529468536377
    5. '(' → logprob: -11.12529468536377
    6. ' (' → logprob: -11.87529468536377
    7. '[player' → logprob: -12.12529468536377
    8. '(base' → logprob: -12.62529468536377
    9. '(Player' → logprob: -13.25029468536377
    10. '((' → logprob: -14.00029468536377

Token 932: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.0020264238119125366
    2. '_cards' → logprob: -6.502026557922363
    3. 'hand' → logprob: -7.627026557922363
    4. 'Hand' → logprob: -10.877026557922363
    5. 'cards' → logprob: -12.002026557922363
    6. '.hand' → logprob: -12.627026557922363
    7. 's' → logprob: -13.252026557922363
    8. '._' → logprob: -14.252026557922363
    9. '(hand' → logprob: -14.377026557922363
    10. '```' → logprob: -14.752026557922363

Token 933: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.009443086571991444
    2. '().' → logprob: -5.134443283081055
    3. '(cards' → logprob: -5.759443283081055
    4. '.' → logprob: -8.509443283081055
    5. 'cards' → logprob: -9.759443283081055
    6. '._' → logprob: -10.009443283081055
    7. ' .' → logprob: -10.884443283081055
    8. '(' → logprob: -11.884443283081055
    9. '   ' → logprob: -12.384443283081055
    10. '.players' → logprob: -12.509443283081055

Token 934: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.002908296650275588
    2. '()' → logprob: -5.877908229827881
    3. '(),
' → logprob: -10.377908706665039
    4. '()+' → logprob: -10.377908706665039
    5. ',' → logprob: -10.502908706665039
    6. '()
' → logprob: -12.752908706665039
    7. '()[' → logprob: -12.877908706665039
    8. '   ' → logprob: -13.377908706665039
    9. '(),

' → logprob: -13.752908706665039
    10. ' (),' → logprob: -14.252908706665039

Token 935: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2527281641960144
    2. ' self' → logprob: -1.5027282238006592
    3. 'Game' → logprob: -7.75272798538208
    4. '20' → logprob: -8.377728462219238
    5. ' Game' → logprob: -9.002728462219238
    6. '(self' → logprob: -12.627728462219238
    7. ' ' → logprob: -12.752728462219238
    8. '   ' → logprob: -12.877728462219238
    9. '
' → logprob: -13.627728462219238
    10. 'threshold' → logprob: -13.877728462219238

Token 936: '.S' (ID: 1242)
  Prédit: '.S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.S' → logprob: -9.519893501419574e-05
    2. 'SUM' → logprob: -9.37509536743164
    3. '.TH' → logprob: -12.12509536743164
    4. '.' → logprob: -12.75009536743164
    5. '	S' → logprob: -14.75009536743164
    6. '   ' → logprob: -14.87509536743164
    7. '._' → logprob: -15.50009536743164
    8. '
' → logprob: -15.62509536743164
    9. '_SUM' → logprob: -15.87509536743164
    10. ').' → logprob: -16.00009536743164

Token 937: 'UM' (ID: 4540)
  Prédit: 'UM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UM' → logprob: -0.0010379294399172068
    2. 'LIMIT' → logprob: -7.251038074493408
    3. '_LIMIT' → logprob: -8.50103759765625
    4. 'SUM' → logprob: -10.25103759765625
    5. '   ' → logprob: -11.00103759765625
    6. 'U' → logprob: -11.50103759765625
    7. 'um' → logprob: -12.12603759765625
    8. '_' → logprob: -12.12603759765625
    9. 'ULT' → logprob: -12.37603759765625
    10. '```' → logprob: -12.50103759765625

Token 938: '_LIMIT' (ID: 64862)
  Prédit: '_LIMIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LIMIT' → logprob: -4.008129963040119e-06
    2. 'LIMIT' → logprob: -12.500003814697266
    3. '_THRESHOLD' → logprob: -16.250003814697266
    4. 'Limit' → logprob: -16.875003814697266
    5. '\' → logprob: -18.250003814697266
    6. '_' → logprob: -18.375003814697266
    7. '```' → logprob: -18.500003814697266
    8. ')' → logprob: -18.750003814697266
    9. '_limit' → logprob: -19.000003814697266
    10. '_MAX' → logprob: -19.500003814697266

Token 939: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008785214275121689
    2. ' -' → logprob: -5.008785247802734
    3. '-' → logprob: -6.758785247802734
    4. ' )' → logprob: -7.133785247802734
    5. '+' → logprob: -10.508785247802734
    6. ')
' → logprob: -10.758785247802734
    7. '   ' → logprob: -10.758785247802734
    8. ' +' → logprob: -11.008785247802734
    9. '-)' → logprob: -11.133785247802734
    10. ')`' → logprob: -13.383785247802734

Token 940: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011244104243814945
    2. '<|end|>' → logprob: -5.386244297027588
    3. ')' → logprob: -5.636244297027588
    4. ' ' → logprob: -6.886244297027588
    5. ' if' → logprob: -7.011244297027588
    6. '   ' → logprob: -7.761244297027588
    7. '    ' → logprob: -9.26124382019043
    8. '        ' → logprob: -9.51124382019043
    9. '
' → logprob: -9.76124382019043
    10. ',' → logprob: -10.01124382019043

Token 941: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005970034282654524
    2. ' if' → logprob: -5.505970001220703
    3. 'if' → logprob: -7.130970001220703
    4. '   ' → logprob: -8.255970001220703
    5. ' ' → logprob: -8.630970001220703
    6. '	' → logprob: -9.380970001220703
    7. ')' → logprob: -9.755970001220703
    8. '```' → logprob: -9.755970001220703
    9. '<|end|>' → logprob: -9.880970001220703
    10. '[' → logprob: -9.880970001220703

Token 942: ' Calculate' (ID: 38942)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.43778693675994873
    2. 'op' → logprob: -1.8127869367599487
    3. 'if' → logprob: -1.9377869367599487
    4. '#' → logprob: -3.5627870559692383
    5. 'return' → logprob: -5.312787055969238
    6. 'player' → logprob: -5.437787055969238
    7. 'visible' → logprob: -6.312787055969238
    8. 'base' → logprob: -6.312787055969238
    9. 'threshold' → logprob: -6.687787055969238
    10. '       ' → logprob: -7.062787055969238

Token 943: ' probability' (ID: 34933)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.10212869942188263
    2. ' prob' → logprob: -2.352128744125366
    3. '       ' → logprob: -6.852128505706787
    4. ' probability' → logprob: -7.227128505706787
    5. '_prob' → logprob: -10.227128982543945
    6. ' probabil' → logprob: -10.977128982543945
    7. ' opponent' → logprob: -11.227128982543945
    8. 'op' → logprob: -11.727128982543945
    9. '_probability' → logprob: -11.727128982543945
    10. '(prob' → logprob: -11.727128982543945

Token 944: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5398471355438232
    2. '_op' → logprob: -1.2898471355438232
    3. ' for' → logprob: -2.5398471355438232
    4. 'op' → logprob: -3.4148471355438232
    5. ' opponent' → logprob: -4.539847373962402
    6. 'for' → logprob: -4.664847373962402
    7. 'Opponent' → logprob: -5.914847373962402
    8. 'prob' → logprob: -5.914847373962402
    9. '_for' → logprob: -6.789847373962402
    10. ' =' → logprob: -7.414847373962402

Token 945: ' opponent' (ID: 38519)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.32162460684776306
    2. 'Probability' → logprob: -1.8216246366500854
    3. 'Opponent' → logprob: -2.446624517440796
    4. 'prob' → logprob: -4.696624755859375
    5. 'the' → logprob: -4.821624755859375
    6. ' opponent' → logprob: -5.071624755859375
    7. ' the' → logprob: -7.321624755859375
    8. 'self' → logprob: -7.446624755859375
    9. ' Probability' → logprob: -7.446624755859375
    10. 'player' → logprob: -8.446624755859375

Token 946: ''s' (ID: 885)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5471237897872925
    2. '_visible' → logprob: -0.9221237897872925
    3. '=' → logprob: -4.172123908996582
    4. '_hand' → logprob: -5.047123908996582
    5. '   ' → logprob: -7.047123908996582
    6. ':' → logprob: -8.547123908996582
    7. 'visible' → logprob: -8.797123908996582
    8. '_prob' → logprob: -9.047123908996582
    9. 'Visible' → logprob: -9.547123908996582
    10. '_' → logprob: -10.047123908996582

Token 947: ' visible' (ID: 15263)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.7311074733734131
    2. 'visible' → logprob: -0.7311074733734131
    3. ' hand' → logprob: -4.106107711791992
    4. ' visible' → logprob: -4.856107711791992
    5. '_hand' → logprob: -5.606107711791992
    6. 'own' → logprob: -6.106107711791992
    7. 'hidden' → logprob: -6.606107711791992
    8. 'Hand' → logprob: -6.856107711791992
    9. '_visible' → logprob: -7.106107711791992
    10. 'prob' → logprob: -7.231107711791992

Token 948: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.31119051575660706
    2. 'hand' → logprob: -1.8111904859542847
    3. '_card' → logprob: -2.561190605163574
    4. '_hand' → logprob: -4.311190605163574
    5. ' card' → logprob: -5.061190605163574
    6. ' hand' → logprob: -5.186190605163574
    7. '
' → logprob: -7.811190605163574
    8. '_cards' → logprob: -8.311190605163574
    9. 'cards' → logprob: -8.686190605163574
    10. 'and' → logprob: -8.936190605163574

Token 949: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14295923709869385
    2. 'prob' → logprob: -2.1429591178894043
    3. ' =' → logprob: -4.767959117889404
    4. '=' → logprob: -6.017959117889404
    5. ' prob' → logprob: -6.142959117889404
    6. ',' → logprob: -6.767959117889404
    7. ' and' → logprob: -7.892959117889404
    8. 'visible' → logprob: -8.517959594726562
    9. ':' → logprob: -8.767959594726562
    10. '
' → logprob: -9.017959594726562

Token 950: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003067552810534835
    2. 'prob' → logprob: -5.878067493438721
    3. '
' → logprob: -8.878067970275879
    4. ',' → logprob: -10.128067970275879
    5. ' prob' → logprob: -10.128067970275879
    6. ' =' → logprob: -11.878067970275879
    7. 'player' → logprob: -12.253067970275879
    8. 'op' → logprob: -12.378067970275879
    9. '```' → logprob: -12.378067970275879
    10. ' and' → logprob: -13.128067970275879

Token 951: 'since' (ID: 21910)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.41986075043678284
    2. 'op' → logprob: -1.4198607206344604
    3. ')' → logprob: -3.91986083984375
    4. 'visible' → logprob: -4.16986083984375
    5. 'threshold' → logprob: -4.29486083984375
    6. 'Opponent' → logprob: -4.66986083984375
    7. ' opponent' → logprob: -4.91986083984375
    8. ' self' → logprob: -5.54486083984375
    9. '#' → logprob: -5.54486083984375
    10. ')
' → logprob: -5.79486083984375

Token 952: ' hidden' (ID: 14051)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.2513388395309448
    2. 'hidden' → logprob: -2.3763389587402344
    3. 'player' → logprob: -3.5013389587402344
    4. 'we' → logprob: -3.5013389587402344
    5. 'the' → logprob: -3.5013389587402344
    6. 'c' → logprob: -4.001338958740234
    7. ' opponent' → logprob: -5.251338958740234
    8. ' hidden' → logprob: -6.126338958740234
    9. ' we' → logprob: -6.126338958740234
    10. ' the' → logprob: -6.251338958740234

Token 953: ' unknown' (ID: 17927)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.10126304626464844
    2. ' card' → logprob: -2.6012630462646484
    3. '_card' → logprob: -4.101263046264648
    4. ')' → logprob: -5.601263046264648
    5. ' is' → logprob: -6.851263046264648
    6. '),' → logprob: -8.601263046264648
    7. '	card' → logprob: -9.101263046264648
    8. 'is' → logprob: -9.351263046264648
    9. 'hand' → logprob: -9.601263046264648
    10. '
' → logprob: -10.226263046264648

Token 954: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13909123837947845
    2. 'card' → logprob: -2.8890912532806396
    3. ' card' → logprob: -3.1390912532806396
    4. ')
' → logprob: -4.6390910148620605
    5. '),' → logprob: -4.7640910148620605
    6. '):
' → logprob: -5.5140910148620605
    7. ',' → logprob: -5.6390910148620605
    8. '):' → logprob: -6.5140910148620605
    9. ').' → logprob: -7.0140910148620605
    10. '):

' → logprob: -7.3890910148620605

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025620324537158012
    2. 'prob' → logprob: -3.775620222091675
    3. ' prob' → logprob: -6.400620460510254
    4. '
' → logprob: -7.525620460510254
    5. '```' → logprob: -10.025620460510254
    6. '   ' → logprob: -10.775620460510254
    7. 'pro' → logprob: -10.775620460510254
    8. '        
' → logprob: -11.275620460510254
    9. 'op' → logprob: -11.275620460510254
    10. '#' → logprob: -11.525620460510254

Token 956: ' #' (ID: 1069)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.08323567360639572
    2. ' prob' → logprob: -2.583235740661621
    3. '       ' → logprob: -5.458235740661621
    4. 'op' → logprob: -10.583235740661621
    5. '   ' → logprob: -11.708235740661621
    6. 'pro' → logprob: -11.958235740661621
    7. '
' → logprob: -12.208235740661621
    8. 'return' → logprob: -12.958235740661621
    9. '```' → logprob: -13.020735740661621
    10. ' probability' → logprob: -13.145735740661621

Token 957: ' Opp' (ID: 55440)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.030227916315197945
    2. ' prob' → logprob: -3.7802278995513916
    3. '       ' → logprob: -5.030228137969971
    4. 'op' → logprob: -8.155227661132812
    5. 'pro' → logprob: -10.030227661132812
    6. '#' → logprob: -10.530227661132812
    7. 'return' → logprob: -10.655227661132812
    8. 'player' → logprob: -11.530227661132812
    9. ' opponent' → logprob: -12.530227661132812
    10. ' opp' → logprob: -12.655227661132812

Token 958: 'onent' (ID: 130930)
  Prédit: 'onent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -8.697387966094539e-05
    2. 'ponent' → logprob: -10.000086784362793
    3. 'ent' → logprob: -11.875086784362793
    4. 'nent' → logprob: -12.000086784362793
    5. '       ' → logprob: -12.000086784362793
    6. 'on' → logprob: -12.500086784362793
    7. 'ONENT' → logprob: -12.625086784362793
    8. '   ' → logprob: -12.875086784362793
    9. 'oint' → logprob: -13.250086784362793
    10. 'onet' → logprob: -13.250086784362793

Token 959: ' can' (ID: 665)
  Prédit: '_hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.14372223615646362
    2. 'hand' → logprob: -3.2687222957611084
    3. '_visible' → logprob: -3.2687222957611084
    4. '_prob' → logprob: -3.8937222957611084
    5. 'prob' → logprob: -4.393722057342529
    6. 'visible' → logprob: -4.768722057342529
    7. 'Hand' → logprob: -5.018722057342529
    8. '_probability' → logprob: -5.393722057342529
    9. '_cards' → logprob: -6.018722057342529
    10. '_probs' → logprob: -6.768722057342529

Token 960: ' only' (ID: 1606)
  Prédit: '_hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_hand' → logprob: -1.1000890731811523
    2. 'visible' → logprob: -1.9750890731811523
    3. 'have' → logprob: -1.9750890731811523
    4. 'hand' → logprob: -2.7250890731811523
    5. 'not' → logprob: -3.1000890731811523
    6. 'consider' → logprob: -3.2250890731811523
    7. '_cards' → logprob: -3.2250890731811523
    8. ' hand' → logprob: -3.7250890731811523
    9. ' have' → logprob: -3.9750890731811523
    10. 'only' → logprob: -4.100089073181152

Token 961: ' draw' (ID: 6174)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.3100863993167877
    2. 'draw' → logprob: -1.9350863695144653
    3. ' have' → logprob: -2.435086488723755
    4. 'hold' → logprob: -5.185086250305176
    5. ' draw' → logprob: -5.560086250305176
    6. 'be' → logprob: -5.685086250305176
    7. 'use' → logprob: -6.435086250305176
    8. 'im' → logprob: -6.810086250305176
    9. 'poss' → logprob: -6.810086250305176
    10. 'receive' → logprob: -6.810086250305176

Token 962: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.20841585099697113
    2. ' if' → logprob: -2.3334157466888428
    3. 'one' → logprob: -3.5834157466888428
    4. ' or' → logprob: -3.9584157466888428
    5. ' a' → logprob: -4.708415985107422
    6. ' at' → logprob: -5.208415985107422
    7. 'if' → logprob: -5.458415985107422
    8. ' an' → logprob: -5.833415985107422
    9. ' to' → logprob: -6.083415985107422
    10. ' another' → logprob: -6.208415985107422

Token 963: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.7545925378799438
    2. ' more' → logprob: -2.1295924186706543
    3. ' extra' → logprob: -2.1295924186706543
    4. 'card' → logprob: -2.3795924186706543
    5. 'additional' → logprob: -3.0045924186706543
    6. 'extra' → logprob: -3.1295924186706543
    7. ' additional' → logprob: -3.1295924186706543
    8. '_card' → logprob: -4.129592418670654
    9. 'more' → logprob: -4.254592418670654
    10. '_extra' → logprob: -6.004592418670654

Token 964: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021507383789867163
    2. ',' → logprob: -7.002150535583496
    3. '
' → logprob: -7.252150535583496
    4. 'prob' → logprob: -8.127150535583496
    5. ' and' → logprob: -9.877150535583496
    6. ';' → logprob: -10.752150535583496
    7. ' to' → logprob: -10.752150535583496
    8. ')' → logprob: -10.752150535583496
    9. '.' → logprob: -10.877150535583496
    10. '#' → logprob: -11.377150535583496

Token 965: ' but' (ID: 889)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.821485161781311
    2. '#' → logprob: -1.696485161781311
    3. 'and' → logprob: -2.1964850425720215
    4. '       ' → logprob: -2.1964850425720215
    5. ' so' → logprob: -2.9464850425720215
    6. 'prob' → logprob: -3.1964850425720215
    7. 'but' → logprob: -3.9464850425720215
    8. 'which' → logprob: -4.9464850425720215
    9. ' and' → logprob: -5.0714850425720215
    10. 'since' → logprob: -5.1964850425720215

Token 966: ' we' (ID: 581)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.8267271518707275
    2. 'we' → logprob: -1.0767271518707275
    3. 'the' → logprob: -2.8267271518707275
    4. 'here' → logprob: -3.3267271518707275
    5. 'since' → logprob: -3.4517271518707275
    6. ' we' → logprob: -4.326726913452148
    7. '#' → logprob: -4.451726913452148
    8. 'prob' → logprob: -4.576726913452148
    9. 'for' → logprob: -5.076726913452148
    10. ' opponent' → logprob: -5.201726913452148

Token 967: ' must' (ID: 2804)
  Prédit: ' don't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' don't' → logprob: -1.331608533859253
    2. 'ass' → logprob: -2.081608533859253
    3. 'don't' → logprob: -2.206608533859253
    4. 'do' → logprob: -2.331608533859253
    5. 'consider' → logprob: -2.831608533859253
    6. 'cannot' → logprob: -2.956608533859253
    7. ' do' → logprob: -3.081608533859253
    8. ' cannot' → logprob: -3.206608533859253
    9. ' only' → logprob: -3.456608533859253
    10. ' assume' → logprob: -3.456608533859253

Token 968: ' test' (ID: 1746)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.834821879863739
    2. 'consider' → logprob: -0.959821879863739
    3. 'also' → logprob: -2.459821939468384
    4. ' also' → logprob: -3.584821939468384
    5. 'include' → logprob: -4.084821701049805
    6. ' consider' → logprob: -4.584821701049805
    7. 'not' → logprob: -4.834821701049805
    8. 'account' → logprob: -5.459821701049805
    9. 'simulate' → logprob: -5.709821701049805
    10. ' assume' → logprob: -5.709821701049805

Token 969: ' as' (ID: 472)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0111900568008423
    2. 'if' → logprob: -1.3861900568008423
    3. 'for' → logprob: -2.8861899375915527
    4. 'all' → logprob: -3.0111899375915527
    5. 'both' → logprob: -3.0111899375915527
    6. ' for' → logprob: -3.1361899375915527
    7. ' all' → logprob: -3.3861899375915527
    8. 'prob' → logprob: -3.6361899375915527
    9. ' the' → logprob: -4.386189937591553
    10. 'op' → logprob: -4.386189937591553

Token 970: ' per' (ID: 777)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29254069924354553
    2. ' if' → logprob: -2.2925407886505127
    3. 'well' → logprob: -2.6675407886505127
    4. 'op' → logprob: -4.167540550231934
    5. ' well' → logprob: -4.292540550231934
    6. 'sum' → logprob: -4.542540550231934
    7. ' worst' → logprob: -4.792540550231934
    8. 'the' → logprob: -5.167540550231934
    9. 'wor' → logprob: -5.292540550231934
    10. 'player' → logprob: -5.542540550231934

Token 971: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2035744190216064
    2. 'prob' → logprob: -1.3285744190216064
    3. ' the' → logprob: -2.8285744190216064
    4. 'comment' → logprob: -3.0785744190216064
    5. 'op' → logprob: -3.2035744190216064
    6. 'player' → logprob: -3.2035744190216064
    7. 'problem' → logprob: -3.5785744190216064
    8. 'code' → logprob: -3.9535744190216064
    9. 'instructions' → logprob: -4.078574180603027
    10. '#' → logprob: -4.078574180603027

Token 972: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008104336448013783
    2. '
' → logprob: -6.13310432434082
    3. ',' → logprob: -6.25810432434082
    4. ' for' → logprob: -6.25810432434082
    5. ' to' → logprob: -7.63310432434082
    6. '.' → logprob: -7.75810432434082
    7. ' with' → logprob: -8.88310432434082
    8. '<|end|>' → logprob: -9.00810432434082
    9. ')' → logprob: -9.13310432434082
    10. ' and' → logprob: -9.25810432434082

Token 973: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001890672487206757
    2. 'prob' → logprob: -6.751890659332275
    3. '
' → logprob: -7.751890659332275
    4. ',' → logprob: -9.501891136169434
    5. ' prob' → logprob: -9.751891136169434
    6. '```' → logprob: -10.626891136169434
    7. '        
' → logprob: -10.751891136169434
    8. 'op' → logprob: -10.751891136169434
    9. ' for' → logprob: -11.251891136169434
    10. '#' → logprob: -11.376891136169434

Token 974: ' all' (ID: 722)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.659378707408905
    2. 'prob' → logprob: -2.03437876701355
    3. 'the' → logprob: -2.65937876701355
    4. 'all' → logprob: -2.90937876701355
    5. 'player' → logprob: -3.28437876701355
    6. 'threshold' → logprob: -3.40937876701355
    7. 'possible' → logprob: -3.65937876701355
    8. 'both' → logprob: -3.65937876701355
    9. 'their' → logprob: -3.90937876701355
    10. 'cards' → logprob: -4.034378528594971

Token 975: ' three' (ID: 3407)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.19437207281589508
    2. ' possible' → logprob: -2.1943721771240234
    3. 'cards' → logprob: -3.6943721771240234
    4. ' cards' → logprob: -3.8193721771240234
    5. 'candidate' → logprob: -5.444372177124023
    6. 'poss' → logprob: -5.569372177124023
    7. '       ' → logprob: -6.319372177124023
    8. 'available' → logprob: -6.569372177124023
    9. ' candidate' → logprob: -7.069372177124023
    10. 'remaining' → logprob: -7.069372177124023

Token 976: ' cards' (ID: 10541)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32778939604759216
    2. 'cards' → logprob: -2.202789306640625
    3. 'player' → logprob: -2.452789306640625
    4. ' cards' → logprob: -3.202789306640625
    5. ' player' → logprob: -4.327789306640625
    6. '
' → logprob: -4.827789306640625
    7. '#' → logprob: -5.952789306640625
    8. 'base' → logprob: -6.202789306640625
    9. ' base' → logprob: -7.077789306640625
    10. 'for' → logprob: -7.077789306640625

Token 977: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010832746513187885
    2. '<|end|>' → logprob: -5.260832786560059
    3. ',' → logprob: -6.385832786560059
    4. '<|end|>' → logprob: -6.635832786560059
    5. ' and' → logprob: -7.510832786560059
    6. ' to' → logprob: -7.635832786560059
    7. '.' → logprob: -7.635832786560059
    8. '
' → logprob: -9.010832786560059
    9. '        
' → logprob: -9.135832786560059
    10. ' (' → logprob: -9.385832786560059

Token 978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01863669604063034
    2. '<|end|>' → logprob: -4.018636703491211
    3. '<|end|>' → logprob: -8.268636703491211
    4. ')' → logprob: -10.143636703491211
    5. '.' → logprob: -10.143636703491211
    6. '```' → logprob: -10.268636703491211
    7. '...' → logprob: -10.768636703491211
    8. ',' → logprob: -10.768636703491211
    9. '#' → logprob: -11.143636703491211
    10. 'return' → logprob: -11.268636703491211

Token 979: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11844092607498169
    2. 'prob' → logprob: -2.368440866470337
    3. 'return' → logprob: -4.868441104888916
    4. 'op' → logprob: -5.743441104888916
    5. ' prob' → logprob: -5.868441104888916
    6. ' return' → logprob: -6.868441104888916
    7. ' opponent' → logprob: -6.868441104888916
    8. '#' (adapté à ' #') → logprob: -7.243441104888916
    9. '```' → logprob: -7.993441104888916
    10. ' op' → logprob: -8.243440628051758

Token 980: ' So' (ID: 2632)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.06549371778964996
    2. '       ' → logprob: -3.0654938220977783
    3. 'op' → logprob: -4.690493583679199
    4. ' prob' → logprob: -5.315493583679199
    5. '#' → logprob: -6.690493583679199
    6. 'pro' → logprob: -7.815493583679199
    7. 'cards' → logprob: -8.4404935836792
    8. 'return' → logprob: -8.6904935836792
    9. 'player' → logprob: -8.9404935836792
    10. 'possible' → logprob: -9.8154935836792

Token 981: ' we' (ID: 581)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.82489413022995
    2. ' opponent' → logprob: -0.82489413022995
    3. 'prob' → logprob: -3.1998941898345947
    4. ' for' → logprob: -3.4498941898345947
    5. '       ' → logprob: -4.699893951416016
    6. '#' → logprob: -5.074893951416016
    7. ' opp' → logprob: -5.199893951416016
    8. ' prob' → logprob: -5.324893951416016
    9. 'player' → logprob: -5.574893951416016
    10. ' base' → logprob: -5.824893951416016

Token 982: ' apply' (ID: 6096)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -1.0618646144866943
    2. 'calculate' → logprob: -1.3118646144866943
    3. 'simulate' → logprob: -2.4368646144866943
    4. 'use' → logprob: -2.6868646144866943
    5. 'ass' → logprob: -2.8118646144866943
    6. 'can' → logprob: -3.5618646144866943
    7. 'check' → logprob: -3.6868646144866943
    8. 'continue' → logprob: -4.061864852905273
    9. 'also' → logprob: -4.436864852905273
    10. 'need' → logprob: -4.561864852905273

Token 983: ' the' (ID: 290)
  Prédit: 'Probability'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Probability' → logprob: -0.1206253319978714
    2. 'prob' → logprob: -2.3706252574920654
    3. ' Probability' → logprob: -4.4956254959106445
    4. 'self' → logprob: -5.4956254959106445
    5. 'the' → logprob: -6.1206254959106445
    6. ' the' → logprob: -7.1206254959106445
    7. ' probability' → logprob: -7.4956254959106445
    8. 'Prob' → logprob: -7.8706254959106445
    9. 'player' → logprob: -8.370625495910645
    10. ' self' → logprob: -8.870625495910645

Token 984: ' probability' (ID: 34933)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.20124919712543488
    2. 'Probability' → logprob: -1.9512492418289185
    3. 'same' → logprob: -3.701249122619629
    4. 'op' → logprob: -5.201249122619629
    5. 'threshold' → logprob: -5.951249122619629
    6. 'player' → logprob: -6.576249122619629
    7. ' probability' → logprob: -6.951249122619629
    8. 'Opponent' → logprob: -7.576249122619629
    9. 'return' → logprob: -7.701249122619629
    10. 'following' → logprob: -7.701249122619629

Token 985: ' calc' (ID: 25691)
  Prédit: '_player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.7257629632949829
    2. '       ' → logprob: -1.100762963294983
    3. ' for' → logprob: -2.3507628440856934
    4. ' =' → logprob: -3.7257628440856934
    5. ' of' → logprob: -4.225762844085693
    6. ' that' → logprob: -4.725762844085693
    7. 'prob' → logprob: -4.850762844085693
    8. '_cal' → logprob: -4.850762844085693
    9. 'for' → logprob: -5.350762844085693
    10. 'calculator' → logprob: -5.850762844085693

Token 986: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8948612213134766
    2. ' to' → logprob: -1.5198612213134766
    3. ' for' → logprob: -1.6448612213134766
    4. '_player' → logprob: -2.0198612213134766
    5. '.' → logprob: -5.019861221313477
    6. 'for' → logprob: -5.644861221313477
    7. ' with' → logprob: -5.644861221313477
    8. ' of' → logprob: -5.769861221313477
    9. ' that' → logprob: -5.769861221313477
    10. ',' → logprob: -5.769861221313477

Token 987: ' each' (ID: 2454)
  Prédit: '[player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[player' → logprob: -0.8226822018623352
    2. '[' → logprob: -1.5726821422576904
    3. 'player' → logprob: -1.5726821422576904
    4. 'op' → logprob: -1.9476821422576904
    5. 'Opponent' → logprob: -6.9476823806762695
    6. 'prob' → logprob: -7.0726823806762695
    7. 'Player' → logprob: -7.5726823806762695
    8. ' [' → logprob: -9.07268238067627
    9. '[self' → logprob: -9.19768238067627
    10. 'base' → logprob: -9.19768238067627

Token 988: ' card' (ID: 4766)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.1018624305725098
    2. 'op' → logprob: -1.4768624305725098
    3. ' of' → logprob: -1.8518624305725098
    4. 'card' → logprob: -1.9768624305725098
    5. 'base' → logprob: -3.2268624305725098
    6. ' card' → logprob: -4.47686243057251
    7. 'visible' → logprob: -4.47686243057251
    8. 'hand' → logprob: -4.47686243057251
    9. 'c' → logprob: -4.60186243057251
    10. ' opponent' → logprob: -4.85186243057251

Token 989: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3161002993583679
    2. ' in' → logprob: -2.3161003589630127
    3. ' and' → logprob: -2.8161003589630127
    4. ' with' → logprob: -3.9411003589630127
    5. ' for' → logprob: -4.066100120544434
    6. ',' → logprob: -4.441100120544434
    7. ' of' → logprob: -4.691100120544434
    8. '
' → logprob: -4.941100120544434
    9. ' to' → logprob: -5.191100120544434
    10. 'and' → logprob: -5.191100120544434

Token 990: ' input' (ID: 3422)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.03269939124584198
    2. '[player' → logprob: -4.0326995849609375
    3. 'op' → logprob: -5.0326995849609375
    4. '[' → logprob: -5.5326995849609375
    5. 'self' → logprob: -5.7826995849609375
    6. 'range' → logprob: -7.9076995849609375
    7. '[self' → logprob: -8.532699584960938
    8. '(player' → logprob: -10.032699584960938
    9. 'Player' → logprob: -10.032699584960938
    10. ' player' → logprob: -10.032699584960938

Token 991: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08244801312685013
    2. ',' → logprob: -3.3324480056762695
    3. '
' → logprob: -3.9574480056762695
    4. '.' → logprob: -5.0824480056762695
    5. ' and' → logprob: -5.2074480056762695
    6. ')' → logprob: -5.7074480056762695
    7. '   ' → logprob: -6.5824480056762695
    8. '        ' → logprob: -7.0824480056762695
    9. '        
' → logprob: -7.0824480056762695
    10. ':' → logprob: -7.2074480056762695

Token 992: 'that's' (ID: 133153)
  Prédit: '[player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[player' → logprob: -0.7015684843063354
    2. 'player' → logprob: -0.8265684843063354
    3. '[' → logprob: -3.576568603515625
    4. ')' → logprob: -4.076568603515625
    5. ' player' → logprob: -5.201568603515625
    6. ' [' → logprob: -5.701568603515625
    7. '(player' → logprob: -6.076568603515625
    8. 'and' → logprob: -7.076568603515625
    9. 'cards' → logprob: -7.076568603515625
    10. ')
' → logprob: -7.201568603515625

Token 993: ' c' (ID: 274)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6857773065567017
    2. '[' → logprob: -1.8107773065567017
    3. 'player' → logprob: -2.310777187347412
    4. '[player' → logprob: -2.685777187347412
    5. ' not' → logprob: -3.060777187347412
    6. 'the' → logprob: -3.435777187347412
    7. ' [' → logprob: -4.560777187347412
    8. '[c' → logprob: -4.560777187347412
    9. 'c' → logprob: -4.935777187347412
    10. ' player' → logprob: -4.935777187347412

Token 994: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18368783593177795
    2. '3' → logprob: -1.8086878061294556
    3. '2' → logprob: -5.683687686920166
    4. '4' → logprob: -8.308688163757324
    5. '```' → logprob: -9.308688163757324
    6. ')' → logprob: -9.933688163757324
    7. '
' → logprob: -10.996188163757324
    8. 'c' → logprob: -11.558688163757324
    9. '`' → logprob: -11.871188163757324
    10. '

' → logprob: -12.183688163757324

Token 995: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08400782197713852
    2. ')' → logprob: -3.459007740020752
    3. '),' → logprob: -3.834007740020752
    4. ' and' → logprob: -4.459007740020752
    5. 'and' → logprob: -5.209007740020752
    6. ',c' → logprob: -5.584007740020752
    7. 'c' → logprob: -5.834007740020752
    8. '+' → logprob: -7.084007740020752
    9. ' ,' → logprob: -7.209007740020752
    10. ' or' → logprob: -7.834007740020752

Token 996: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005929743405431509
    2. ' c' → logprob: -5.130929946899414
    3. '   ' → logprob: -15.380929946899414
    4. ' ' → logprob: -15.380929946899414
    5. '`' → logprob: -16.380929946899414
    6. 'and' → logprob: -16.380929946899414
    7. ')c' → logprob: -16.630929946899414
    8. ',' → logprob: -16.755929946899414
    9. '  ' → logprob: -16.880929946899414
    10. '
' → logprob: -17.130929946899414

Token 997: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010693700984120369
    2. ',' → logprob: -5.135693550109863
    3. '3' → logprob: -5.385693550109863
    4. '4' → logprob: -9.760693550109863
    5. 'c' → logprob: -9.885693550109863
    6. ' ' → logprob: -11.010693550109863
    7. ' ,' → logprob: -11.510693550109863
    8. ')' → logprob: -11.760693550109863
    9. '```' → logprob: -11.885693550109863
    10. '),' → logprob: -12.135693550109863

Token 998: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012715430930256844
    2. ',c' → logprob: -7.126271724700928
    3. ' ,' → logprob: -8.37627124786377
    4. ' and' → logprob: -9.00127124786377
    5. '),' → logprob: -10.12627124786377
    6. 'and' → logprob: -10.25127124786377
    7. 'c' → logprob: -10.87627124786377
    8. ')' → logprob: -11.25127124786377
    9. ',
' → logprob: -13.12627124786377
    10. ',and' → logprob: -13.50127124786377

Token 999: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0027763471007347107
    2. 'and' → logprob: -6.377776145935059
    3. ' c' → logprob: -6.877776145935059
    4. ' and' → logprob: -10.127776145935059
    5. '```' → logprob: -14.252776145935059
    6. '`' → logprob: -14.502776145935059
    7. ',' → logprob: -15.002776145935059
    8. ' ' → logprob: -15.127776145935059
    9. '
' → logprob: -15.502776145935059
    10. '...' → logprob: -15.565276145935059

Token 1000: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04900255426764488
    2. ')' → logprob: -3.0490026473999023
    3. '),' → logprob: -7.924002647399902
    4. ').' → logprob: -11.174002647399902
    5. ',' → logprob: -11.424002647399902
    6. '<|end|>' → logprob: -12.049002647399902
    7. '```' → logprob: -13.174002647399902
    8. '`)' → logprob: -13.174002647399902
    9. '):
' → logprob: -13.424002647399902
    10. ' ' → logprob: -13.549002647399902

Token 1001: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5971705913543701
    2. ')
' → logprob: -0.8471705913543701
    3. '       ' → logprob: -4.722170829772949
    4. '):
' → logprob: -6.097170829772949
    5. ').' → logprob: -6.222170829772949
    6. '):' → logprob: -6.347170829772949
    7. '),' → logprob: -6.597170829772949
    8. ')
' → logprob: -6.722170829772949
    9. ',' → logprob: -7.222170829772949
    10. ' )
' → logprob: -7.347170829772949

Token 1002: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005132715217769146
    2. '
' → logprob: -5.880132675170898
    3. '<|end|>' → logprob: -6.880132675170898
    4. '#' → logprob: -8.005132675170898
    5. ',' → logprob: -8.255132675170898
    6. ' and' → logprob: -8.880132675170898
    7. ')' → logprob: -9.255132675170898
    8. '        
' → logprob: -9.380132675170898
    9. '<|end|>' → logprob: -9.505132675170898
    10. '.' → logprob: -9.755132675170898

Token 1003: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3863201439380646
    2. 'prob' → logprob: -1.8863201141357422
    3. 'return' → logprob: -2.261320114135742
    4. 'result' → logprob: -4.386320114135742
    5. 'if' → logprob: -4.386320114135742
    6. '#' (adapté à ' #') → logprob: -4.761320114135742
    7. 'player' → logprob: -5.011320114135742
    8. ' prob' → logprob: -5.636320114135742
    9. ' return' → logprob: -5.636320114135742
    10. ' if' → logprob: -5.761320114135742

Token 1004: ' But' (ID: 3072)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.5088907480239868
    2. 'op' → logprob: -1.8838907480239868
    3. 'if' → logprob: -2.6338906288146973
    4. '       ' → logprob: -2.6338906288146973
    5. 'return' → logprob: -3.5088906288146973
    6. '#' → logprob: -4.008890628814697
    7. 'base' → logprob: -4.383890628814697
    8. 'threshold' → logprob: -4.383890628814697
    9. 'player' → logprob: -4.508890628814697
    10. 'cards' → logprob: -5.133890628814697

Token 1005: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1234598383307457
    2. 'here' → logprob: -3.248459815979004
    3. '       ' → logprob: -3.623459815979004
    4. 'we' → logprob: -4.123459815979004
    5. 'the' → logprob: -4.623459815979004
    6. 'for' → logprob: -5.373459815979004
    7. 'in' → logprob: -5.748459815979004
    8. ' here' → logprob: -5.998459815979004
    9. 'prob' → logprob: -6.248459815979004
    10. 'this' → logprob: -6.498459815979004

Token 1006: ' wants' (ID: 10648)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5055519342422485
    2. ' context' → logprob: -2.505551815032959
    3. 'context' → logprob: -2.755551815032959
    4. 'atic' → logprob: -3.380551815032959
    5. ' statement' → logprob: -3.380551815032959
    6. ' continues' → logprob: -3.630551815032959
    7. ' requires' → logprob: -3.880551815032959
    8. 'statement' → logprob: -4.005551815032959
    9. ' wants' → logprob: -4.130551815032959
    10. ':' → logprob: -4.255551815032959

Token 1007: ' output' (ID: 4733)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.8710616230964661
    2. 'only' → logprob: -1.2460615634918213
    3. 'the' → logprob: -2.4960615634918213
    4. 'prob' → logprob: -3.1210615634918213
    5. 'a' → logprob: -3.2460615634918213
    6. 'decision' → logprob: -3.4960615634918213
    7. 'just' → logprob: -3.6210615634918213
    8. ' to' → logprob: -3.8710615634918213
    9. ' only' → logprob: -4.2460618019104
    10. 'us' → logprob: -4.8710618019104

Token 1008: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7087147831916809
    2. ':' → logprob: -1.3337147235870361
    3. '"' → logprob: -2.583714723587036
    4. '   ' → logprob: -3.583714723587036
    5. 'return' → logprob: -3.833714723587036
    6. ',' → logprob: -4.458714962005615
    7. ' =' → logprob: -4.583714962005615
    8. '.' → logprob: -5.083714962005615
    9. ' ' → logprob: -5.083714962005615
    10. 'def' → logprob: -5.458714962005615

Token 1009: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1321290135383606
    2. 'input' → logprob: -2.382128953933716
    3. 'draw' → logprob: -4.757129192352295
    4. 'test' → logprob: -5.757129192352295
    5. 'round' → logprob: -5.882129192352295
    6. 'case' → logprob: -6.007129192352295
    7. 'game' → logprob: -6.257129192352295
    8. 'call' → logprob: -6.382129192352295
    9. ' line' → logprob: -6.632129192352295
    10. 'card' → logprob: -6.882129192352295

Token 1010: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19404850900173187
    2. 'if' → logprob: -1.819048523902893
    3. 'return' → logprob: -5.6940484046936035
    4. ' if' → logprob: -6.1940484046936035
    5. 'player' → logprob: -6.5690484046936035
    6. 'draw' → logprob: -6.5690484046936035
    7. 'prob' → logprob: -6.6940484046936035
    8. 'threshold' → logprob: -6.8190484046936035
    9. 'sum' → logprob: -7.3190484046936035
    10. '#' → logprob: -7.5690484046936035

Token 1011: ' so' (ID: 813)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2921914756298065
    2. 'if' → logprob: -1.917191505432129
    3. '       ' → logprob: -2.917191505432129
    4. ' if' → logprob: -3.542191505432129
    5. ' return' → logprob: -3.917191505432129
    6. '#' → logprob: -5.792191505432129
    7. 'prob' → logprob: -9.167191505432129
    8. 'result' → logprob: -9.292191505432129
    9. '           ' → logprob: -10.042191505432129
    10. ' #' → logprob: -10.292191505432129

Token 1012: ' here' (ID: 2105)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6925305128097534
    2. 'return' → logprob: -1.0675305128097534
    3. '       ' → logprob: -2.067530632019043
    4. ' if' → logprob: -3.817530632019043
    5. ' return' → logprob: -5.692530632019043
    6. 'prob' → logprob: -6.192530632019043
    7. 'result' → logprob: -7.692530632019043
    8. '#' → logprob: -7.817530632019043
    9. 'player' → logprob: -8.442530632019043
    10. '           ' → logprob: -8.942530632019043

Token 1013: ' we' (ID: 581)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1626659780740738
    2. '       ' → logprob: -2.287666082382202
    3. 'if' → logprob: -3.287666082382202
    4. ':' → logprob: -5.537665843963623
    5. '           ' → logprob: -5.787665843963623
    6. ' return' → logprob: -6.162665843963623
    7. ' if' → logprob: -7.037665843963623
    8. ':return' → logprob: -7.912665843963623
    9. '#' → logprob: -8.537666320800781
    10. 'raise' → logprob: -8.787666320800781

Token 1014: ' just' (ID: 1327)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03780069574713707
    2. ' return' → logprob: -3.4128007888793945
    3. 'continue' → logprob: -6.4128007888793945
    4. '       ' → logprob: -6.6628007888793945
    5. '   ' → logprob: -7.2878007888793945
    6. '           ' → logprob: -8.037800788879395
    7. ' continue' → logprob: -10.037800788879395
    8. 'raise' → logprob: -10.412800788879395
    9. '```' → logprob: -10.662800788879395
    10. 'pass' → logprob: -10.662800788879395

Token 1015: ' solve' (ID: 17722)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01128583773970604
    2. 'if' → logprob: -4.761285781860352
    3. 'pass' → logprob: -6.511285781860352
    4. ' return' → logprob: -7.261285781860352
    5. '       ' → logprob: -8.011285781860352
    6. ' if' → logprob: -10.136285781860352
    7. 'continue' → logprob: -10.261285781860352
    8. 'prob' → logprob: -11.011285781860352
    9. '           ' → logprob: -11.136285781860352
    10. 'raise' → logprob: -11.136285781860352

Token 1016: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0464297533035278
    2. 'return' → logprob: -1.7964297533035278
    3. ' ' → logprob: -2.2964296340942383
    4. ' for' → logprob: -2.2964296340942383
    5. ' if' → logprob: -2.4214296340942383
    6. 'if' → logprob: -2.9214296340942383
    7. ' return' → logprob: -3.0464296340942383
    8. 'for' → logprob: -3.5464296340942383
    9. '"' → logprob: -3.9214296340942383
    10. '           ' → logprob: -4.421429634094238

Token 1017: ' input' (ID: 3422)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2101384401321411
    2. 'call' → logprob: -1.9601384401321411
    3. 'input' → logprob: -3.0851383209228516
    4. ' call' → logprob: -7.335138320922852
    5. 'token' → logprob: -7.335138320922852
    6. 'instance' → logprob: -7.960138320922852
    7. ' line' → logprob: -8.085138320922852
    8. 'case' → logprob: -8.210138320922852
    9. ' input' → logprob: -8.960138320922852
    10. '```' → logprob: -9.335138320922852

Token 1018: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011965400772169232
    2. '
' → logprob: -7.501196384429932
    3. ' if' → logprob: -8.62619686126709
    4. '        
' → logprob: -8.87619686126709
    5. ',' → logprob: -9.37619686126709
    6. 'if' → logprob: -9.62619686126709
    7. '<|end|>' → logprob: -9.75119686126709
    8. ' and' → logprob: -11.12619686126709
    9. '<|end|>' → logprob: -11.25119686126709
    10. '   ' → logprob: -11.37619686126709

Token 1019: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016329283826053143
    2. '<|end|>' → logprob: -6.8766326904296875
    3. '        
' → logprob: -8.501632690429688
    4. '
' → logprob: -8.626632690429688
    5. '<|end|>' → logprob: -9.751632690429688
    6. ' if' → logprob: -10.126632690429688
    7. ',' → logprob: -10.626632690429688
    8. 'if' → logprob: -10.876632690429688
    9. '.' → logprob: -11.501632690429688
    10. ' ' → logprob: -11.751632690429688

Token 1020: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019763901829719543
    2. 'if' → logprob: -4.019763946533203
    3. 'return' → logprob: -6.644763946533203
    4. '```' → logprob: -9.019763946533203
    5. ' if' → logprob: -9.519763946533203
    6. '   ' → logprob: -9.769763946533203
    7. 'prob' → logprob: -10.769763946533203
    8. 'draw' → logprob: -12.269763946533203
    9. 'player' → logprob: -12.269763946533203
    10. 'threshold' → logprob: -12.644763946533203

Token 1021: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5474154949188232
    2. 'return' → logprob: -0.9224154949188232
    3. '       ' → logprob: -3.7974154949188232
    4. 'draw' → logprob: -7.172415733337402
    5. 'threshold' → logprob: -7.797415733337402
    6. 'prob' → logprob: -8.172415733337402
    7. '#' (adapté à ' #') → logprob: -10.672415733337402
    8. '```' → logprob: -10.797415733337402
    9. 'player' → logprob: -11.172415733337402
    10. ' if' → logprob: -11.422415733337402

Token 1022: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7117576003074646
    2. 'return' → logprob: -0.7117576003074646
    3. '       ' → logprob: -4.086757659912109
    4. 'draw' → logprob: -7.211757659912109
    5. 'threshold' → logprob: -7.336757659912109
    6. '#' → logprob: -9.21175765991211
    7. '```' → logprob: -9.58675765991211
    8. 'prob' → logprob: -10.21175765991211
    9. 'result' → logprob: -11.58675765991211
    10. ' if' → logprob: -11.83675765991211

Token 1023: ' output' (ID: 4733)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2617257833480835
    2. 'if' → logprob: -1.5117257833480835
    3. '       ' → logprob: -4.761725902557373
    4. ' if' → logprob: -7.511725902557373
    5. ' return' → logprob: -7.511725902557373
    6. 'result' → logprob: -10.511725425720215
    7. 'prob' → logprob: -10.636725425720215
    8. '#' → logprob: -10.636725425720215
    9. 'decision' → logprob: -11.386725425720215
    10. '```' → logprob: -12.261725425720215

Token 1024: ' YES' (ID: 32968)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31707900762557983
    2. 'return' → logprob: -1.8170790672302246
    3. ' "' → logprob: -3.1920790672302246
    4. ''' → logprob: -4.192079067230225
    5. ' return' → logprob: -4.192079067230225
    6. ' =' → logprob: -4.317079067230225
    7. '       ' → logprob: -4.692079067230225
    8. '=' → logprob: -5.442079067230225
    9. ':' → logprob: -5.817079067230225
    10. 'if' → logprob: -6.567079067230225

Token 1025: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23964454233646393
    2. 'if' → logprob: -1.6146445274353027
    3. '
' → logprob: -4.739644527435303
    4. '\n' → logprob: -6.239644527435303
    5. '<|end|>' → logprob: -6.489644527435303
    6. 'return' → logprob: -6.614644527435303
    7. '   ' → logprob: -9.114645004272461
    8. ' or' → logprob: -9.489645004272461
    9. '"' → logprob: -9.614645004272461
    10. ' ' → logprob: -9.864645004272461

Token 1026: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.08674294501543045
    2. ' prob' → logprob: -2.586742877960205
    3. '"' → logprob: -4.961742877960205
    4. ''' → logprob: -7.836742877960205
    5. ' "' → logprob: -7.961742877960205
    6. ' '' → logprob: -10.086743354797363
    7. '(prob' → logprob: -10.586743354797363
    8. 'pro' → logprob: -12.336743354797363
    9. ' probability' → logprob: -13.461743354797363
    10. '	pro' → logprob: -13.961743354797363

Token 1027: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -6.704273118884885e-07
    2. 'player' → logprob: -15.125000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_PLAYER' → logprob: -16.625
    5. '_Player' → logprob: -17.875
    6. '<Player' → logprob: -17.875
    7. 'Player' → logprob: -17.875
    8. '>' → logprob: -18.25
    9. '_patient' → logprob: -19.25
    10. '_draw' → logprob: -19.5

Token 1028: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7470484375953674
    2. ' >' → logprob: -1.6220483779907227
    3. '>=' → logprob: -1.7470483779907227
    4. '>' → logprob: -1.8720483779907227
    5. ' <' → logprob: -8.122048377990723
    6. ' <=' → logprob: -8.747048377990723
    7. '<=' → logprob: -9.372048377990723
    8. '<' → logprob: -10.122048377990723
    9. '≥' → logprob: -11.497048377990723
    10. ' ' → logprob: -11.497048377990723

Token 1029: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006046470254659653
    2. ' self' → logprob: -5.131046295166016
    3. '0' → logprob: -9.131046295166016
    4. 'Game' → logprob: -11.756046295166016
    5. '(self' → logprob: -14.756046295166016
    6. 'Self' → logprob: -14.881046295166016
    7. ' ' → logprob: -15.131046295166016
    8. '```' → logprob: -15.881046295166016
    9. ' Game' → logprob: -16.006046295166016
    10. '=self' → logprob: -16.256046295166016

Token 1030: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006919435109011829
    2. '0' → logprob: -7.375691890716553
    3. ' self' → logprob: -10.000692367553711
    4. 'Game' → logprob: -10.875692367553711
    5. 'Self' → logprob: -14.375692367553711
    6. '(self' → logprob: -15.125692367553711
    7. ' ' → logprob: -17.00069236755371
    8. '=self' → logprob: -17.12569236755371
    9. 'prob' → logprob: -17.37569236755371
    10. 'threshold' → logprob: -17.62569236755371

Token 1031: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010040796361863613
    2. 'else' → logprob: -5.135040760040283
    3. ' else' → logprob: -5.635040760040283
    4. ':' → logprob: -9.010041236877441
    5. ' .' → logprob: -9.260041236877441
    6. '1' → logprob: -9.510041236877441
    7. ' and' → logprob: -10.010041236877441
    8. '   ' → logprob: -10.135041236877441
    9. '```' → logprob: -10.510041236877441
    10. ' ' → logprob: -10.510041236877441

Token 1032: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.4987974029500037e-05
    2. '0' → logprob: -11.125024795532227
    3. '.' → logprob: -11.875024795532227
    4. '50' → logprob: -12.875024795532227
    5. '```' → logprob: -16.000024795532227
    6. ' ' → logprob: -16.250024795532227
    7. 'return' → logprob: -16.500024795532227
    8. '05' → logprob: -16.500024795532227
    9. '51' → logprob: -16.750024795532227
    10. ':' → logprob: -17.625024795532227

Token 1033: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09651150554418564
    2. ' else' → logprob: -3.2215116024017334
    3. '
' → logprob: -3.4715116024017334
    4. 'else' → logprob: -4.596511363983154
    5. ' if' → logprob: -4.971511363983154
    6. 'if' → logprob: -6.471511363983154
    7. 'return' → logprob: -6.846511363983154
    8. '\n' → logprob: -7.596511363983154
    9. ' and' → logprob: -7.721511363983154
    10. '   ' → logprob: -8.971511840820312

Token 1034: ' NO' (ID: 9319)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0660819485783577
    2. 'NO' → logprob: -3.066082000732422
    3. ''' → logprob: -5.191082000732422
    4. ' "' → logprob: -5.316082000732422
    5. ' NO' → logprob: -5.441082000732422
    6. '"No' → logprob: -6.066082000732422
    7. '"N' → logprob: -9.691082000732422
    8. '_NO' → logprob: -10.316082000732422
    9. ' ' → logprob: -10.441082000732422
    10. '   ' → logprob: -10.941082000732422

Token 1035: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5771538615226746
    2. '
' → logprob: -0.8271538615226746
    3. '\n' → logprob: -7.95215368270874
    4. '        
' → logprob: -8.077154159545898
    5. 'return' → logprob: -8.327154159545898
    6. '
' → logprob: -8.952154159545898
    7. ' 
' → logprob: -10.452154159545898
    8. '   ' → logprob: -10.577154159545898
    9. '\' → logprob: -10.702154159545898
    10. '```' → logprob: -10.702154159545898

Token 1036: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31567734479904175
    2. '
' → logprob: -1.3156774044036865
    3. '   ' → logprob: -6.690677165985107
    4. '        
' → logprob: -7.815677165985107
    5. 'return' → logprob: -8.190677642822266
    6. '
' → logprob: -9.690677642822266
    7. ' 
' → logprob: -9.690677642822266
    8. '	' → logprob: -9.815677642822266
    9. '\n' → logprob: -9.815677642822266
    10. '    
' → logprob: -9.815677642822266

Token 1037: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16984860599040985
    2. '       ' → logprob: -1.9198485612869263
    3. 'if' → logprob: -4.669848442077637
    4. ' return' → logprob: -8.544848442077637
    5. ' if' → logprob: -11.669848442077637
    6. '   ' → logprob: -14.169848442077637
    7. '```' → logprob: -14.544848442077637
    8. '	return' → logprob: -16.294849395751953
    9. '{return' → logprob: -17.669849395751953
    10. '	' → logprob: -17.669849395751953

Token 1038: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03841071575880051
    2. ' "' → logprob: -3.2884106636047363
    3. ''' → logprob: -7.913410663604736
    4. '("' → logprob: -13.663411140441895
    5. ' '' → logprob: -13.663411140441895
    6. '"No' → logprob: -14.163411140441895
    7. '"A' → logprob: -16.913410186767578
    8. '"I' → logprob: -17.288410186767578
    9. '"N' → logprob: -17.413410186767578
    10. '
' → logprob: -17.663410186767578

Token 1039: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -2.2127087504486553e-05
    2. '"' → logprob: -10.750021934509277
    3. 'NO' → logprob: -14.250021934509277
    4. 'Yes' → logprob: -20.250022888183594
    5. ''' → logprob: -21.125022888183594
    6. ' YES' → logprob: -21.375022888183594
    7. '{"' → logprob: -22.000022888183594
    8. '""' → logprob: -22.750022888183594
    9. 'OK' → logprob: -24.500022888183594
    10. 'YE' → logprob: -25.125022888183594

Token 1040: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: 0.0
    2. 'if' → logprob: -18.0
    3. '```' → logprob: -18.75
    4. ' "' → logprob: -19.0
    5. '\n' → logprob: -19.375
    6. ''' → logprob: -19.75
    7. '"""' → logprob: -20.25
    8. '"
' → logprob: -20.875
    9. ' if' → logprob: -20.875
    10. '"If' → logprob: -21.75

Token 1041: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3132701516151428
    2. 'if' → logprob: -1.313270092010498
    3. 'else' → logprob: -12.313270568847656
    4. '	if' → logprob: -13.688270568847656
    5. '   ' → logprob: -13.938270568847656
    6. '       ' → logprob: -14.063270568847656
    7. '
' → logprob: -14.438270568847656
    8. ' else' → logprob: -15.063270568847656
    9. ' ' → logprob: -16.313270568847656
    10. 'elif' → logprob: -16.688270568847656

Token 1042: ' prob' (ID: 4921)
  Prédit: ' prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prob' → logprob: -0.4740866422653198
    2. 'prob' → logprob: -0.9740866422653198
    3. '(prob' → logprob: -11.72408676147461
    4. 'pro' → logprob: -14.59908676147461
    5. ' ' → logprob: -14.84908676147461
    6. '_prob' → logprob: -15.34908676147461
    7. ' probabil' → logprob: -15.34908676147461
    8. ' probability' → logprob: -16.09908676147461
    9. '	pro' → logprob: -16.72408676147461
    10. 'Prob' → logprob: -16.84908676147461

Token 1043: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -7.226628895296017e-06
    2. 'ayer' → logprob: -12.750007629394531
    3. '_prob' → logprob: -13.375007629394531
    4. '_PLAYER' → logprob: -14.125007629394531
    5. '_layer' → logprob: -14.375007629394531
    6. 'player' → logprob: -14.375007629394531
    7. 'prob' → logprob: -14.750007629394531
    8. 'layer' → logprob: -16.12500762939453
    9. '_Player' → logprob: -16.12500762939453
    10. 'Player' → logprob: -16.75000762939453

Token 1044: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.014169503934681416
    2. '>=' → logprob: -4.264169692993164
    3. ' >' → logprob: -13.139169692993164
    4. '    ' → logprob: -13.889169692993164
    5. ' ' → logprob: -14.014169692993164
    6. '   ' → logprob: -14.639169692993164
    7. ' ' → logprob: -15.139169692993164
    8. ' ≥' → logprob: -15.139169692993164
    9. ' <=' → logprob: -15.264169692993164
    10. ')>=' → logprob: -15.264169692993164

Token 1045: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.708256185054779
    2. 'self' → logprob: -0.708256185054779
    3. '0' → logprob: -4.208256244659424
    4. ' ' → logprob: -9.083255767822266
    5. ' ' → logprob: -12.333255767822266
    6. '1' → logprob: -13.458255767822266
    7. '"' → logprob: -13.583255767822266
    8. '20' → logprob: -14.958255767822266
    9. 'Self' → logprob: -15.083255767822266
    10. ''' → logprob: -15.208255767822266

Token 1046: '.TH' (ID: 118867)
  Prédit: '.TH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.TH' → logprob: -0.003184244269505143
    2. '.' → logprob: -5.7531843185424805
    3. '.S' → logprob: -12.62818431854248
    4. '.threshold' → logprob: -13.25318431854248
    5. 'TH' → logprob: -14.00318431854248
    6. ' .' → logprob: -15.50318431854248
    7. '.T' → logprob: -16.003183364868164
    8. '._' → logprob: -16.503183364868164
    9. 'threshold' → logprob: -16.503183364868164
    10. '.Th' → logprob: -16.628183364868164

Token 1047: 'RESH' (ID: 44540)
  Prédit: 'RESH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RESH' → logprob: -6.027225754223764e-05
    2. 'R' → logprob: -10.000060081481934
    3. 'reshold' → logprob: -12.125060081481934
    4. 'RES' → logprob: -12.375060081481934
    5. 'RE' → logprob: -12.875060081481934
    6. 'ESH' → logprob: -13.625060081481934
    7. '_THRESHOLD' → logprob: -14.375060081481934
    8. 'ERS' → logprob: -15.500060081481934
    9. '```' → logprob: -16.12506103515625
    10. '_' → logprob: -16.25006103515625

Token 1048: 'OLD' (ID: 14375)
  Prédit: 'OLD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OLD' → logprob: -1.5928495486150496e-05
    2. 'H' → logprob: -11.500016212463379
    3. 'old' → logprob: -13.500016212463379
    4. 'O' → logprob: -14.000016212463379
    5. 'OD' → logprob: -14.125016212463379
    6. '```' → logprob: -14.750016212463379
    7. '_THRESHOLD' → logprob: -14.875016212463379
    8. 'OL' → logprob: -14.875016212463379
    9. 'ESH' → logprob: -15.125016212463379
    10. 'SH' → logprob: -15.625016212463379

Token 1049: '_PRO' (ID: 11693)
  Prédit: '_PRO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_PRO' → logprob: -0.00029637437546625733
    2. 'PRO' → logprob: -8.125296592712402
    3. '\' → logprob: -16.250295639038086
    4. '_' → logprob: -16.500295639038086
    5. '`' → logprob: -17.250295639038086
    6. '_probability' → logprob: -17.250295639038086
    7. '_THRESHOLD' → logprob: -17.250295639038086
    8. '_pro' → logprob: -17.375295639038086
    9. '**' → logprob: -17.750295639038086
    10. ' PRO' → logprob: -18.375295639038086

Token 1050: 'B' (ID: 33)
  Prédit: 'ABILITY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABILITY' → logprob: -0.027149323374032974
    2. 'OB' → logprob: -4.152149200439453
    3. 'B' → logprob: -4.527149200439453
    4. 'ORITY' → logprob: -10.402149200439453
    5. 'ABIL' → logprob: -10.402149200439453
    6. 'O' → logprob: -10.777149200439453
    7. 'BAL' → logprob: -10.902149200439453
    8. 'AB' → logprob: -10.902149200439453
    9. 'PRO' → logprob: -11.277149200439453
    10. 'BAB' → logprob: -11.402149200439453

Token 1051: 'ABILITY' (ID: 11840)
  Prédit: 'ABILITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABILITY' → logprob: -1.8312570318812504e-05
    2. 'ILITY' → logprob: -11.250018119812012
    3. 'AL' → logprob: -12.750018119812012
    4. 'ability' → logprob: -13.625018119812012
    5. 'ABIL' → logprob: -14.000018119812012
    6. 'Ability' → logprob: -16.000019073486328
    7. 'IBILITY' → logprob: -16.875019073486328
    8. 'Probability' → logprob: -17.250019073486328
    9. 'ORITY' → logprob: -17.250019073486328
    10. 'ACITY' → logprob: -17.375019073486328

Token 1052: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.048601340502500534
    2. 'else' → logprob: -3.0486013889312744
    3. '	else' → logprob: -11.423601150512695
    4. '       ' → logprob: -13.798601150512695
    5. ' ' → logprob: -14.548601150512695
    6. '_else' → logprob: -14.798601150512695
    7. ' ' → logprob: -15.673601150512695
    8. '   ' → logprob: -15.673601150512695
    9. '<|end|>' → logprob: -15.798601150512695
    10. ' 
' → logprob: -15.923601150512695

Token 1053: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1994775377388578e-05
    2. ' "' → logprob: -12.250012397766113
    3. '"No' → logprob: -12.500012397766113
    4. ''' → logprob: -12.625012397766113
    5. 'NO' → logprob: -16.750011444091797
    6. '`' → logprob: -18.500011444091797
    7. '"\' → logprob: -18.875011444091797
    8. ' ' → logprob: -18.875011444091797
    9. '
' → logprob: -19.250011444091797
    10. '	' → logprob: -19.500011444091797

Token 1054: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -4.127333340875339e-06
    2. '"' → logprob: -12.500003814697266
    3. '"No' → logprob: -15.250003814697266
    4. ' NO' → logprob: -17.250003814697266
    5. 'No' → logprob: -19.000003814697266
    6. ''' → logprob: -19.875003814697266
    7. '_NO' → logprob: -20.875003814697266
    8. '.NO' → logprob: -22.750003814697266
    9. '""' → logprob: -23.500003814697266
    10. '"N' → logprob: -23.500003814697266

Token 1055: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1056: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1057: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.004725602921098471
    2. ' run' → logprob: -5.379725456237793
    3. 'main' → logprob: -10.004725456237793
    4. ' process' → logprob: -10.254725456237793
    5. ' solve' → logprob: -11.129725456237793
    6. ' parse' → logprob: -12.754725456237793
    7. ' play' → logprob: -13.004725456237793
    8. ' test' → logprob: -13.629725456237793
    9. ' solution' → logprob: -13.879725456237793
    10. 'run' → logprob: -14.629725456237793

Token 1058: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00035608073812909424
    2. '():
' → logprob: -8.00035572052002
    3. '()' → logprob: -10.87535572052002
    4. ' ():' → logprob: -14.00035572052002
    5. '():
' → logprob: -14.37535572052002
    6. '()>' → logprob: -16.250356674194336
    7. '()">' → logprob: -17.125356674194336
    8. '():

' → logprob: -17.375356674194336
    9. '(' → logprob: -17.750356674194336
    10. '().' → logprob: -17.875356674194336

Token 1059: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06204767897725105
    2. '():
' → logprob: -2.8120477199554443
    3. '()' → logprob: -9.687047958374023
    4. ':' → logprob: -11.187047958374023
    5. ' ():' → logprob: -13.187047958374023
    6. '():
' → logprob: -13.312047958374023
    7. '()->' → logprob: -15.562047958374023
    8. ':
' → logprob: -16.312047958374023
    9. '():

' → logprob: -16.437047958374023
    10. '()>' → logprob: -16.562047958374023

Token 1060: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.034592388459714e-06
    2. ' None' → logprob: -12.500005722045898
    3. 'int' → logprob: -13.000005722045898
    4. 'none' → logprob: -21.3750057220459
    5. '(None' → logprob: -22.6250057220459
    6. '   ' → logprob: -23.0000057220459
    7. '_None' → logprob: -23.1250057220459
    8. 'No' → logprob: -24.2500057220459
    9. 'bool' → logprob: -25.0000057220459
    10. 'void' → logprob: -25.2500057220459

Token 1061: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5367825031280518
    2. ':
' → logprob: -1.4117825031280518
    3. '():
' → logprob: -1.9117825031280518
    4. '():' → logprob: -3.9117825031280518
    5. '   ' → logprob: -5.911782264709473
    6. '):
' → logprob: -8.161782264709473
    7. '()' → logprob: -8.411782264709473
    8. '(
' → logprob: -8.661782264709473
    9. '```' → logprob: -9.661782264709473
    10. 'def' → logprob: -9.786782264709473

Token 1062: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4561479091644287
    2. 'import' → logprob: -1.5811479091644287
    3. ' import' → logprob: -1.8311479091644287
    4. '```' → logprob: -8.456148147583008
    5. 'from' → logprob: -10.331148147583008
    6. ' from' → logprob: -10.581148147583008
    7. '	import' → logprob: -10.831148147583008
    8. '   ' → logprob: -10.956148147583008
    9. '>' → logprob: -14.456148147583008
    10. '    ' → logprob: -14.956148147583008

Token 1063: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.005259133875370026
    2. ' import' → logprob: -5.255259037017822
    3. 'from' → logprob: -11.13025951385498
    4. 'parser' → logprob: -11.75525951385498
    5. '   ' → logprob: -12.88025951385498
    6. ' parser' → logprob: -15.25525951385498
    7. 'input' → logprob: -16.755258560180664
    8. '	import' → logprob: -17.380258560180664
    9. 'source' → logprob: -18.005258560180664
    10. '```' → logprob: -18.005258560180664

Token 1064: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.935296834039036e-06
    2. ' sys' → logprob: -12.75000286102295
    3. '=sys' → logprob: -19.750003814697266
    4. '	sys' → logprob: -20.500003814697266
    5. 'stdin' → logprob: -21.000003814697266
    6. 'io' → logprob: -21.500003814697266
    7. '(sys' → logprob: -21.750003814697266
    8. '.sys' → logprob: -23.125003814697266
    9. '```' → logprob: -23.125003814697266
    10. 'math' → logprob: -23.375003814697266

Token 1065: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05996370315551758
    2. '
' → logprob: -3.0599637031555176
    3. '    
' → logprob: -5.309963703155518
    4. 'input' → logprob: -5.809963703155518
    5. 'source' → logprob: -5.934963703155518
    6. 'for' → logprob: -7.809963703155518
    7. ' source' → logprob: -9.55996322631836
    8. '   
' → logprob: -9.93496322631836
    9. ' for' → logprob: -10.18496322631836
    10. '    ' → logprob: -10.30996322631836

Token 1066: '   ' (ID: 271)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.3406520485877991
    2. '   ' → logprob: -1.3406519889831543
    3. 'input' → logprob: -3.9656519889831543
    4. 'source' → logprob: -5.090651988983154
    5. ' parser' → logprob: -6.340651988983154
    6. 'for' → logprob: -9.590652465820312
    7. 'reader' → logprob: -11.340652465820312
    8. 'lines' → logprob: -11.340652465820312
    9. ' input' → logprob: -11.590652465820312
    10. ' source' → logprob: -11.840652465820312

Token 1067: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.01464949268847704
    2. '   ' → logprob: -5.014649391174316
    3. 'input' → logprob: -5.014649391174316
    4. ' parser' → logprob: -7.264649391174316
    5. 'source' → logprob: -7.764649391174316
    6. 'for' → logprob: -9.264649391174316
    7. 'reader' → logprob: -10.389649391174316
    8. ' input' → logprob: -12.389649391174316
    9. 'lines' → logprob: -13.389649391174316
    10. 'iterator' → logprob: -13.514649391174316

Token 1068: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519416809082031
    2. ' =' → logprob: -1.5019416809082031
    3. '   ' → logprob: -11.751941680908203
    4. '=
' → logprob: -12.751941680908203
    5. ' ' → logprob: -14.876941680908203
    6. '=input' → logprob: -15.126941680908203
    7. ' =
' → logprob: -15.251941680908203
    8. 'parser' → logprob: -15.751941680908203
    9. ' ' → logprob: -15.876941680908203
    10. 'source' → logprob: -16.251941680908203

Token 1069: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. ' Input' → logprob: -18.25
    3. 'input' → logprob: -23.625
    4. '	Input' → logprob: -23.625
    5. '_input' → logprob: -25.375
    6. '<Input' → logprob: -26.375
    7. '_Input' → logprob: -26.625
    8. '\Input' → logprob: -27.25
    9. 'INPUT' → logprob: -27.375
    10. 'Iter' → logprob: -27.5

Token 1070: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.023575274273753166
    2. 'parser' → logprob: -3.7735753059387207
    3. 'iter' → logprob: -9.023574829101562
    4. '_parser' → logprob: -9.023574829101562
    5. 'Iterator' → logprob: -11.023574829101562
    6. '=' → logprob: -11.148574829101562
    7. 'parse' → logprob: -11.273574829101562
    8. 'sys' → logprob: -11.648574829101562
    9. '```' → logprob: -12.773574829101562
    10. '.Parser' → logprob: -12.898574829101562

Token 1071: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.2929193675518036
    2. '(sys' → logprob: -1.542919397354126
    3. 'iter' → logprob: -3.792919397354126
    4. 'sys' → logprob: -4.042919158935547
    5. ' iter' → logprob: -10.167919158935547
    6. '   ' → logprob: -10.542919158935547
    7. '(
' → logprob: -12.167919158935547
    8. 'line' → logprob: -12.417919158935547
    9. ' sys' → logprob: -13.042919158935547
    10. '(' → logprob: -13.167919158935547

Token 1072: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -3.6312321753939614e-05
    2. 'sys' → logprob: -10.250036239624023
    3. '=sys' → logprob: -14.375036239624023
    4. ' sys' → logprob: -16.125036239624023
    5. '(input' → logprob: -16.500036239624023
    6. '	sys' → logprob: -16.875036239624023
    7. '(' → logprob: -17.625036239624023
    8. '(line' → logprob: -19.000036239624023
    9. '(system' → logprob: -19.125036239624023
    10. '```' → logprob: -19.250036239624023

Token 1073: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.981667537620524e-06
    2. '.argv' → logprob: -13.250001907348633
    3. 'stdin' → logprob: -16.250001907348633
    4. '.stdout' → logprob: -18.625001907348633
    5. '.' → logprob: -18.875001907348633
    6. '(stdin' → logprob: -18.875001907348633
    7. '.std' → logprob: -18.875001907348633
    8. '.__' → logprob: -19.250001907348633
    9. ' .' → logprob: -20.500001907348633
    10. ' stdin' → logprob: -20.750001907348633

Token 1074: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.2186688780784607
    2. '))' → logprob: -2.2186689376831055
    3. '()))
' → logprob: -2.4686689376831055
    4. '()))' → logprob: -5.8436689376831055
    5. ' ))
' → logprob: -11.218668937683105
    6. '.readline' → logprob: -11.218668937683105
    7. '   ' → logprob: -11.843668937683105
    8. '))

' → logprob: -12.468668937683105
    9. ')' → logprob: -12.593668937683105
    10. '))
' → logprob: -12.718668937683105

Token 1075: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002436070004478097
    2. 'for' → logprob: -6.50243616104126
    3. ' for' → logprob: -7.00243616104126
    4. '```' → logprob: -11.627435684204102
    5. '    
' → logprob: -11.877435684204102
    6. '
' → logprob: -12.127435684204102
    7. 'while' → logprob: -13.502435684204102
    8. ' while' → logprob: -14.752435684204102
    9. '	for' → logprob: -15.127435684204102
    10. '<|end|>' → logprob: -16.3774356842041

Token 1076: ' game' (ID: 2813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3146742582321167
    2. 'for' → logprob: -1.3146742582321167
    3. ' for' → logprob: -6.564674377441406
    4. '```' → logprob: -13.439674377441406
    5. '
' → logprob: -15.189674377441406
    6. 'while' → logprob: -15.439674377441406
    7. '    
' → logprob: -15.564674377441406
    8. '	for' → logprob: -16.189674377441406
    9. 'try' → logprob: -18.314674377441406
    10. '``' → logprob: -18.689674377441406

Token 1077: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09881117939949036
    2. '_logic' → logprob: -2.723811149597168
    3. '=' → logprob: -4.098811149597168
    4. 'logic' → logprob: -4.598811149597168
    5. '   ' → logprob: -6.598811149597168
    6. 'for' → logprob: -8.598811149597168
    7. 'log' → logprob: -9.348811149597168
    8. '
' → logprob: -9.848811149597168
    9. 'Logic' → logprob: -10.473811149597168
    10. '_log' → logprob: -10.598811149597168

Token 1078: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -4.320199877838604e-07
    2. ' Game' → logprob: -15.0
    3. '	Game' → logprob: -22.625
    4. '(Game' → logprob: -24.5
    5. '_Game' → logprob: -24.5
    6. '<Game' → logprob: -24.875
    7. 'game' → logprob: -25.375
    8. '.Game' → logprob: -25.5
    9. '_game' → logprob: -25.75
    10. 'Gameplay' → logprob: -27.5

Token 1079: 'Logic' (ID: 30160)
  Prédit: 'Logic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Logic' → logprob: -6.704273118884885e-07
    2. 'logic' → logprob: -15.000000953674316
    3. '_logic' → logprob: -15.750000953674316
    4. 'Logical' → logprob: -16.75
    5. ' Logic' → logprob: -17.625
    6. '
' → logprob: -18.75
    7. '=' → logprob: -18.875
    8. '       ' → logprob: -19.25
    9. 'Log' → logprob: -19.5
    10. '   ' → logprob: -19.625

Token 1080: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006515554850921035
    2. 'for' → logprob: -7.3756513595581055
    3. '
' → logprob: -11.125651359558105
    4. ' for' → logprob: -12.250651359558105
    5. '    
' → logprob: -12.625651359558105
    6. '```' → logprob: -13.125651359558105
    7. '	for' → logprob: -16.250652313232422
    8. '       ' → logprob: -17.875652313232422
    9. '<|end|>' → logprob: -18.250652313232422
    10. '  
' → logprob: -18.625652313232422

Token 1081: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4745127856731415
    2. 'for' → logprob: -0.9745128154754639
    3. '```' → logprob: -8.099513053894043
    4. ' for' → logprob: -8.974513053894043
    5. '	for' → logprob: -13.224513053894043
    6. '    
' → logprob: -13.849513053894043
    7. '``' → logprob: -14.474513053894043
    8. '
' → logprob: -14.474513053894043
    9. '<|end|>' → logprob: -14.724513053894043
    10. 'try' → logprob: -14.974513053894043

Token 1082: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024780353996902704
    2. '   ' → logprob: -6.002478122711182
    3. ' for' → logprob: -13.002477645874023
    4. '```' → logprob: -16.877477645874023
    5. '	for' → logprob: -18.377477645874023
    6. '
' → logprob: -18.377477645874023
    7. 'while' → logprob: -19.377477645874023
    8. 'try' (adapté à ' try') → logprob: -19.877477645874023
    9. '    
' → logprob: -20.377477645874023
    10. '  ' → logprob: -21.502477645874023

Token 1083: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4562177062034607
    2. '       ' → logprob: -1.5812177658081055
    3. ':
' → logprob: -1.8312177658081055
    4. '   ' → logprob: -8.081217765808105
    5. '):
' → logprob: -10.581217765808105
    6. '    ' → logprob: -11.081217765808105
    7. '<|end|>' → logprob: -11.331217765808105
    8. ' for' → logprob: -12.706217765808105
    9. '      ' → logprob: -12.956217765808105
    10. '	   ' → logprob: -13.393717765808105

Token 1084: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -13.875003814697266
    3. ' for' → logprob: -14.000003814697266
    4. 'while' → logprob: -14.000003814697266
    5. 'for' → logprob: -14.000003814697266
    6. ' while' → logprob: -15.000003814697266
    7. '           ' → logprob: -17.125003814697266
    8. '      ' → logprob: -17.625003814697266
    9. '	   ' → logprob: -18.000003814697266
    10. '     ' → logprob: -19.250003814697266

Token 1085: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016601985320448875
    2. 'while' (adapté à ' while') → logprob: -4.516602039337158
    3. '   ' → logprob: -5.266602039337158
    4. ' while' → logprob: -8.0166015625
    5. 'for' → logprob: -10.0166015625
    6. ' for' → logprob: -13.7666015625
    7. '	while' → logprob: -14.1416015625
    8. '           ' → logprob: -14.1416015625
    9. '    ' → logprob: -15.6416015625
    10. '     ' → logprob: -15.6416015625

Token 1086: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0068310522474348545
    2. ' True' → logprob: -5.006831169128418
    3. '   ' → logprob: -9.256831169128418
    4. '       ' → logprob: -11.631831169128418
    5. ' ' → logprob: -12.131831169128418
    6. '(True' → logprob: -12.631831169128418
    7. 'true' → logprob: -14.006831169128418
    8. '           ' → logprob: -14.506831169128418
    9. '
' → logprob: -14.631831169128418
    10. '1' → logprob: -14.756831169128418

Token 1087: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4562569558620453
    2. ':
' → logprob: -1.5812569856643677
    3. '           ' → logprob: -1.8312569856643677
    4. '():
' → logprob: -8.706256866455078
    5. '       ' → logprob: -9.956256866455078
    6. ' :' → logprob: -10.456256866455078
    7. '):
' → logprob: -10.456256866455078
    8. ',' → logprob: -10.706256866455078
    9. '<|end|>' → logprob: -10.706256866455078
    10. '```' → logprob: -10.831256866455078

Token 1088: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009769308380782604
    2. '       ' → logprob: -4.634769439697266
    3. '	       ' → logprob: -12.134769439697266
    4. '		' → logprob: -13.634769439697266
    5. '#line' → logprob: -14.009769439697266
    6. '```' → logprob: -14.134769439697266
    7. 'line' → logprob: -14.259769439697266
    8. 'input' → logprob: -14.259769439697266
    9. ' line' → logprob: -14.384769439697266
    10. '               ' → logprob: -14.509769439697266

Token 1089: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0466267429292202
    2. '           ' → logprob: -3.2966268062591553
    3. '       ' → logprob: -4.796626567840576
    4. ' c' → logprob: -9.171627044677734
    5. '               ' → logprob: -9.296627044677734
    6. '   ' → logprob: -9.421627044677734
    7. 'line' → logprob: -11.546627044677734
    8. '	c' → logprob: -13.421627044677734
    9. '(c' → logprob: -13.546627044677734
    10. '                   ' → logprob: -15.421627044677734

Token 1090: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '=' → logprob: -15.000000953674316
    3. ' =' → logprob: -15.875000953674316
    4. ',' → logprob: -16.75
    5. '
' → logprob: -17.25
    6. '_line' → logprob: -17.75
    7. 'line' → logprob: -17.75
    8. '=line' → logprob: -18.75
    9. '   ' → logprob: -19.0
    10. '' → logprob: -19.125

Token 1091: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003410647332202643
    2. ',c' → logprob: -8.000341415405273
    3. ' ,' → logprob: -12.500341415405273
    4. 'c' → logprob: -13.250341415405273
    5. ',
' → logprob: -16.875341415405273
    6. ',\
' → logprob: -18.125341415405273
    7. '‌,' → logprob: -18.375341415405273
    8. '_,' → logprob: -19.000341415405273
    9. ' c' → logprob: -19.625341415405273
    10. ',",' → logprob: -19.875341415405273

Token 1092: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011047814972698689
    2. ' c' → logprob: -4.511047840118408
    3. '_c' → logprob: -17.76104736328125
    4. ' ' → logprob: -17.88604736328125
    5. '	c' → logprob: -18.51104736328125
    6. ' ' → logprob: -19.51104736328125
    7. '<|end|>' → logprob: -20.26104736328125
    8. ',c' → logprob: -20.63604736328125
    9. '_' → logprob: -21.01104736328125
    10. 'cation' → logprob: -21.76104736328125

Token 1093: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3782830137643032e-05
    2. ',' → logprob: -11.75001335144043
    3. '3' → logprob: -12.12501335144043
    4. '1' → logprob: -16.00001335144043
    5. '_' → logprob: -16.25001335144043
    6. 'c' → logprob: -16.50001335144043
    7. '4' → logprob: -16.75001335144043
    8. '_,' → logprob: -17.62501335144043
    9. '```' → logprob: -18.00001335144043
    10. ' ' → logprob: -18.37501335144043

Token 1094: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.153795766294934e-06
    2. ',c' → logprob: -13.000005722045898
    3. 'c' → logprob: -13.125005722045898
    4. ' ,' → logprob: -13.250005722045898
    5. '_,' → logprob: -18.0000057220459
    6. ',
' → logprob: -18.0000057220459
    7. '‌,' → logprob: -19.6250057220459
    8. '<|end|>' → logprob: -20.5000057220459
    9. ',\
' → logprob: -20.6250057220459
    10. '،' → logprob: -21.0000057220459

Token 1095: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005530327325686812
    2. ' c' → logprob: -7.500553131103516
    3. ' ' → logprob: -21.625553131103516
    4. '	c' → logprob: -22.375553131103516
    5. '<|end|>' → logprob: -24.375553131103516
    6. '_c' → logprob: -24.500553131103516
    7. ')c' → logprob: -24.625553131103516
    8. ',c' → logprob: -24.625553131103516
    9. ' ' → logprob: -24.875553131103516
    10. '  ' → logprob: -25.125553131103516

Token 1096: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ',' → logprob: -17.25
    3. '_' → logprob: -17.5
    4. 's' → logprob: -18.625
    5. 'c' → logprob: -18.625
    6. '```' → logprob: -18.625
    7. ' ' → logprob: -18.875
    8. '   ' → logprob: -19.125
    9. 'three' → logprob: -19.875
    10. '_three' → logprob: -19.875

Token 1097: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759488344192505
    2. ' =' → logprob: -0.8259488344192505
    3. '           ' → logprob: -11.950948715209961
    4. '		' → logprob: -14.325948715209961
    5. '            ' → logprob: -14.825948715209961
    6. '   ' → logprob: -15.200948715209961
    7. '=line' → logprob: -15.200948715209961
    8. '	' → logprob: -15.450948715209961
    9. '=
' → logprob: -15.450948715209961
    10. ' =
' → logprob: -15.825948715209961

Token 1098: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.018150178715586662
    2. ' next' → logprob: -4.018150329589844
    3. '	next' → logprob: -16.143150329589844
    4. '(next' → logprob: -16.768150329589844
    5. '
' → logprob: -17.893150329589844
    6. '_next' → logprob: -19.143150329589844
    7. ',next' → logprob: -19.518150329589844
    8. '[next' → logprob: -19.893150329589844
    9. 'Next' → logprob: -20.143150329589844
    10. '.next' → logprob: -20.268150329589844

Token 1099: '(parser' (ID: 82535)
  Prédit: '(parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parser' → logprob: -0.0005567280459217727
    2. 'parser' → logprob: -7.500556945800781
    3. ' parser' → logprob: -12.500556945800781
    4. '	parser' → logprob: -17.75055694580078
    5. '/parser' → logprob: -20.25055694580078
    6. '(parsed' → logprob: -20.37555694580078
    7. '_parser' → logprob: -20.75055694580078
    8. '(Parser' → logprob: -20.75055694580078
    9. 'Parser' → logprob: -20.87555694580078
    10. '(parse' → logprob: -21.12555694580078

Token 1100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0048319073393940926
    2. ')
' → logprob: -5.379831790924072
    3. '           ' → logprob: -8.50483226776123
    4. ')`' → logprob: -12.75483226776123
    5. '       ' → logprob: -13.50483226776123
    6. ')
' → logprob: -13.87983226776123
    7. '   ' → logprob: -14.00483226776123
    8. ')`
' → logprob: -14.25483226776123
    9. ')**' → logprob: -14.37983226776123
    10. '))' → logprob: -14.50483226776123

Token 1101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.082895273109898e-05
    2. '       ' → logprob: -11.125030517578125
    3. '<|end|>' → logprob: -11.625030517578125
    4. '            
' → logprob: -13.000030517578125
    5. '```' → logprob: -13.625030517578125
    6. '          ' → logprob: -13.875030517578125
    7. '	       ' → logprob: -14.125030517578125
    8. '   ' → logprob: -14.750030517578125
    9. '		' → logprob: -15.000030517578125
    10. '<|end|>' → logprob: -15.000030517578125

Token 1102: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05523327365517616
    2. '           ' → logprob: -3.5552332401275635
    3. ' print' → logprob: -3.8052332401275635
    4. 'result' → logprob: -5.930233478546143
    5. ' result' → logprob: -9.180233001708984
    6. 'answer' → logprob: -9.430233001708984
    7. 'output' → logprob: -9.930233001708984
    8. '   ' → logprob: -12.180233001708984
    9. 'decision' → logprob: -12.680233001708984
    10. ' answer' → logprob: -12.930233001708984

Token 1103: '(game' (ID: 29509)
  Prédit: '(game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(game' → logprob: -0.001981095178052783
    2. '(' → logprob: -6.251981258392334
    3. 'game' → logprob: -9.876980781555176
    4. '(f' → logprob: -14.501980781555176
    5. '(
' → logprob: -14.626980781555176
    6. '(Game' → logprob: -15.876980781555176
    7. '(g' → logprob: -17.251981735229492
    8. '(

' → logprob: -18.126981735229492
    9. '("' → logprob: -18.626981735229492
    10. ' game' → logprob: -18.626981735229492

Token 1104: '.dec' (ID: 65387)
  Prédit: '.dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dec' → logprob: -0.00030400342075154185
    2. 'dec' → logprob: -8.125304222106934
    3. '.' → logprob: -12.875304222106934
    4. ').' → logprob: -13.500304222106934
    5. ' .' → logprob: -13.875304222106934
    6. '.de' → logprob: -13.875304222106934
    7. '   ' → logprob: -14.250304222106934
    8. '_dec' → logprob: -14.500304222106934
    9. '(dec' → logprob: -15.250304222106934
    10. '.det' → logprob: -15.375304222106934

Token 1105: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: 0.0
    2. '   ' → logprob: -19.875
    3. '```' → logprob: -21.125
    4. '
' → logprob: -21.25
    5. '_' → logprob: -21.5
    6. 'ise' → logprob: -21.625
    7. 'ision' → logprob: -21.75
    8. 'id' → logprob: -21.875
    9. '`' → logprob: -22.125
    10. '**' → logprob: -22.375

Token 1106: '_draw' (ID: 51847)
  Prédit: '_draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_draw' → logprob: -5.796184723294573e-06
    2. 'draw' → logprob: -12.250005722045898
    3. '_' → logprob: -15.625005722045898
    4. '_DRAW' → logprob: -16.2500057220459
    5. '_dec' → logprob: -16.2500057220459
    6. ')' → logprob: -16.3750057220459
    7. '_Draw' → logprob: -16.3750057220459
    8. ')_' → logprob: -16.6250057220459
    9. '```' → logprob: -16.8750057220459
    10. '`' → logprob: -17.0000057220459

Token 1107: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0011722482740879059
    2. '(' → logprob: -6.751172065734863
    3. '(
' → logprob: -13.501172065734863
    4. ' (' → logprob: -15.001172065734863
    5. ')' → logprob: -16.00117301940918
    6. '((' → logprob: -16.25117301940918
    7. '(f' → logprob: -16.87617301940918
    8. '(

' → logprob: -17.12617301940918
    9. ')c' → logprob: -17.62617301940918
    10. ')(' → logprob: -18.50117301940918

Token 1108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. '3' → logprob: -10.125041007995605
    3. ')' → logprob: -14.875041007995605
    4. '(c' → logprob: -16.00004005432129
    5. '_' → logprob: -16.50004005432129
    6. '(' → logprob: -17.37504005432129
    7. '_cards' → logprob: -17.50004005432129
    8. '   ' → logprob: -18.37504005432129
    9. '33' → logprob: -18.43754005432129
    10. '```' → logprob: -18.43754005432129

Token 1109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.35837464465294e-05
    2. ' ,' → logprob: -10.625043869018555
    3. ',c' → logprob: -11.250043869018555
    4. ',
' → logprob: -12.125043869018555
    5. ')' → logprob: -15.250043869018555
    6. '‌,' → logprob: -16.375043869018555
    7. ' ' → logprob: -16.750043869018555
    8. '<|end|>' → logprob: -16.750043869018555
    9. 'c' → logprob: -17.000043869018555
    10. ',

' → logprob: -17.000043869018555

Token 1110: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007099286303855479
    2. ' c' → logprob: -7.2507100105285645
    3. ')c' → logprob: -21.125709533691406
    4. '   ' → logprob: -22.250709533691406
    5. '	c' → logprob: -23.125709533691406
    6. '    ' → logprob: -23.375709533691406
    7. '  ' → logprob: -24.500709533691406
    8. ' ' → logprob: -24.500709533691406
    9. '     ' → logprob: -25.625709533691406
    10. '           ' → logprob: -26.000709533691406

Token 1111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029852005536668
    2. '3' → logprob: -8.250298500061035
    3. '4' → logprob: -10.250298500061035
    4. '1' → logprob: -14.375298500061035
    5. ' ' → logprob: -15.125298500061035
    6. '  ' → logprob: -15.250298500061035
    7. 'c' → logprob: -15.250298500061035
    8. '   ' → logprob: -15.250298500061035
    9. ',' → logprob: -16.12529945373535
    10. '```' → logprob: -16.25029945373535

Token 1112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.550411151489243e-05
    2. ',c' → logprob: -10.000055313110352
    3. ' ,' → logprob: -12.125055313110352
    4. ',
' → logprob: -13.000055313110352
    5. 'c' → logprob: -13.125055313110352
    6. ')' → logprob: -16.12505531311035
    7. '```' → logprob: -16.12505531311035
    8. ' c' → logprob: -17.50005531311035
    9. '_,' → logprob: -17.50005531311035
    10. '),' → logprob: -17.62505531311035

Token 1113: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.547789674485102e-05
    2. ' c' → logprob: -10.250035285949707
    3. ')c' → logprob: -19.500036239624023
    4. '   ' → logprob: -20.625036239624023
    5. '	c' → logprob: -22.750036239624023
    6. ')' → logprob: -22.875036239624023
    7. '```' → logprob: -23.500036239624023
    8. '    ' → logprob: -23.500036239624023
    9. '  ' → logprob: -23.750036239624023
    10. ' ' → logprob: -24.000036239624023

Token 1114: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -12.750003814697266
    3. ')' → logprob: -15.125003814697266
    4. '```' → logprob: -15.625003814697266
    5. ',' → logprob: -16.500003814697266
    6. '))' → logprob: -17.000003814697266
    7. '4' → logprob: -17.250003814697266
    8. 'c' → logprob: -17.375003814697266
    9. 'd' → logprob: -17.500003814697266
    10. 'a' → logprob: -17.750003814697266

Token 1115: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03804757073521614
    2. '))' → logprob: -3.2880475521087646
    3. ')
' → logprob: -12.788047790527344
    4. ')))' → logprob: -13.538047790527344
    5. '))
' → logprob: -13.788047790527344
    6. '())' → logprob: -14.663047790527344
    7. ' )' → logprob: -16.163047790527344
    8. '`)' → logprob: -16.663047790527344
    9. '})' → logprob: -16.663047790527344
    10. ')`' → logprob: -16.663047790527344

Token 1116: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1117: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.07899840176105499
    2. ' except' → logprob: -2.953998327255249
    3. '<|end|>' → logprob: -3.953998327255249
    4. '	except' → logprob: -5.578998565673828
    5. '
' → logprob: -7.953998565673828
    6. '<|end|>' → logprob: -8.578998565673828
    7. 'Except' → logprob: -9.953998565673828
    8. '   ' → logprob: -10.203998565673828
    9. '#' → logprob: -11.078998565673828
    10. '       ' → logprob: -11.078998565673828

Token 1118: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.029794471338391304
    2. 'EOF' → logprob: -3.529794454574585
    3. ' Stop' → logprob: -10.279794692993164
    4. ' EOF' → logprob: -12.154794692993164
    5. '(' → logprob: -12.904794692993164
    6. 'Keyboard' → logprob: -13.779794692993164
    7. 'STOP' → logprob: -14.779794692993164
    8. '_stop' → logprob: -15.529794692993164
    9. 'stop' → logprob: -16.029794692993164
    10. 'Break' → logprob: -16.154794692993164

Token 1119: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -1.0280383548888494e-06
    2. 'iteration' → logprob: -15.000000953674316
    3. 'Iterator' → logprob: -15.125000953674316
    4. 'Async' → logprob: -15.125000953674316
    5. ' iteration' → logprob: -16.750001907348633
    6. 'Error' → logprob: -17.375001907348633
    7. 'Iter' → logprob: -18.125001907348633
    8. 'Iterations' → logprob: -18.250001907348633
    9. '_iteration' → logprob: -18.875001907348633
    10. 'Input' → logprob: -19.000001907348633

Token 1120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009788555093109608
    2. ':
' → logprob: -4.634788513183594
    3. ':return' → logprob: -11.259788513183594
    4. '():' → logprob: -11.384788513183594
    5. ' as' → logprob: -13.009788513183594
    6. '():
' → logprob: -13.509788513183594
    7. '   ' → logprob: -13.634788513183594
    8. ':void' → logprob: -13.759788513183594
    9. '<|end|>' → logprob: -14.009788513183594
    10. '):' → logprob: -14.259788513183594

Token 1121: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04421012103557587
    2. ':' → logprob: -3.419210195541382
    3. '       ' → logprob: -4.794209957122803
    4. ':
' → logprob: -7.044209957122803
    5. ' pass' → logprob: -7.794209957122803
    6. '    ' → logprob: -8.169210433959961
    7. 'pass' → logprob: -8.419210433959961
    8. ':return' → logprob: -8.794210433959961
    9. ' ' → logprob: -10.044210433959961
    10. '  ' → logprob: -10.169210433959961

Token 1122: ' pass' (ID: 1853)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5825169086456299
    2. 'pass' (adapté à ' pass') → logprob: -0.8325169086456299
    3. '   ' → logprob: -5.082516670227051
    4. ' pass' → logprob: -8.08251667022705
    5. ' return' → logprob: -10.45751667022705
    6. 'break' → logprob: -11.95751667022705
    7. '	pass' → logprob: -12.70751667022705
    8. '```' → logprob: -12.83251667022705
    9. '...' → logprob: -14.58251667022705
    10. '       ' → logprob: -14.70751667022705

Token 1123: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1124: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004969134461134672
    2. '```' → logprob: -7.750496864318848
    3. ' if' → logprob: -9.750496864318848
    4. '#' → logprob: -12.250496864318848
    5. '<|end|>' → logprob: -13.000496864318848
    6. '@if' → logprob: -14.375496864318848
    7. 'If' → logprob: -16.250497817993164
    8. '#if' → logprob: -17.125497817993164
    9. '	if' → logprob: -17.375497817993164
    10. ';if' → logprob: -17.625497817993164

Token 1125: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.429514616727829
    2. '__' → logprob: -1.0545146465301514
    3. '_name' → logprob: -7.554514408111572
    4. '_' → logprob: -9.05451488494873
    5. 'name' → logprob: -9.80451488494873
    6. ' ' → logprob: -9.92951488494873
    7. '___' → logprob: -10.30451488494873
    8. '_main' → logprob: -12.30451488494873
    9. ' ' → logprob: -12.42951488494873
    10. '_true' → logprob: -12.42951488494873

Token 1126: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16108639538288116
    2. ' ==' → logprob: -2.286086320877075
    3. '==' → logprob: -3.161086320877075
    4. 'if' → logprob: -6.411086559295654
    5. 'name' → logprob: -6.411086559295654
    6. '=="' → logprob: -7.536086559295654
    7. ' __' → logprob: -7.661086559295654
    8. '=='' → logprob: -8.286086082458496
    9. '```' → logprob: -9.911086082458496
    10. '==
' → logprob: -11.161086082458496

Token 1127: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.227250610711053e-05
    2. '==' → logprob: -10.125041961669922
    3. '__.__' → logprob: -13.625041961669922
    4. '=="' → logprob: -14.500041961669922
    5. '=='' → logprob: -16.250041961669922
    6. ' ==' → logprob: -16.250041961669922
    7. '__.' → logprob: -16.625041961669922
    8. '__('' → logprob: -16.750041961669922
    9. '___' → logprob: -17.375041961669922
    10. '__
' → logprob: -17.750041961669922

Token 1128: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16531214118003845
    2. '__' → logprob: -2.1653120517730713
    3. '=="' → logprob: -3.9153120517730713
    4. ' ==' → logprob: -4.04031229019165
    5. '=='' → logprob: -9.415311813354492
    6. '==
' → logprob: -10.290311813354492
    7. '===' → logprob: -12.415311813354492
    8. '=' → logprob: -12.415311813354492
    9. '==="' → logprob: -13.790311813354492
    10. '_' → logprob: -13.915311813354492

Token 1129: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02975292131304741
    2. ''' → logprob: -3.5297529697418213
    3. '__' → logprob: -13.404752731323242
    4. ' "__' → logprob: -14.154752731323242
    5. '"name' → logprob: -17.404752731323242
    6. '"user' → logprob: -17.904752731323242
    7. ' '__' → logprob: -18.029752731323242
    8. ''"' → logprob: -18.029752731323242
    9. '"class' → logprob: -18.404752731323242
    10. '   ' → logprob: -18.404752731323242

Token 1130: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.52919222577475e-05
    2. '__' → logprob: -9.750075340270996
    3. 'name' → logprob: -11.375075340270996
    4. '"' → logprob: -12.375075340270996
    5. 'built' → logprob: -14.500075340270996
    6. 'python' → logprob: -16.00007438659668
    7. 'm' → logprob: -16.12507438659668
    8. ''' → logprob: -16.37507438659668
    9. ' main' → logprob: -16.62507438659668
    10. 'builtin' → logprob: -16.87507438659668

Token 1131: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10534501075744629
    2. '__' → logprob: -2.3553450107574463
    3. '__':
' → logprob: -5.355344772338867
    4. '__
' → logprob: -8.730344772338867
    5. '__:' → logprob: -9.230344772338867
    6. '__
' → logprob: -9.480344772338867
    7. '__["' → logprob: -10.855344772338867
    8. '__.' → logprob: -10.980344772338867
    9. '__.__' → logprob: -11.605344772338867
    10. '__[' → logprob: -12.230344772338867

Token 1132: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00018577903392724693
    2. ' main' → logprob: -8.8751859664917
    3. '	main' → logprob: -10.2501859664917
    4. '   ' → logprob: -11.6251859664917
    5. '_main' → logprob: -14.2501859664917
    6. '    
' → logprob: -14.8751859664917
    7. '
' → logprob: -15.5001859664917
    8. 'import' → logprob: -15.8751859664917
    9. '__' → logprob: -16.625185012817383
    10. '(main' → logprob: -16.750185012817383

Token 1133: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.750000953674316
    3. '	main' → logprob: -16.25
    4. '   ' → logprob: -16.375
    5. '_main' → logprob: -19.875
    6. 'import' → logprob: -20.125
    7. '(main' → logprob: -21.0
    8. '.main' → logprob: -21.25
    9. 'Main' → logprob: -23.875
    10. '```' → logprob: -24.0

Token 1134: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1132
Tokens correctement prédits (1ère position, stricte): 543
Tokens correctement prédits (1ère position, avec adaptation): 584
Tokens correctement prédits (top 10): 977
Précision stricte (1ère position): 47.97%
Précision adaptée (1ère position): 51.59%
Précision (top 10): 86.31%
================================================================================
