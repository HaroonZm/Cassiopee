================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import Tuple, Dict


# Define the three-valued logic domain and helper functions

class TruthValue:
    FALSE = 0
    UNKNOWN = 1
    TRUE = 2
    DOMAIN = (FALSE, UNKNOWN, TRUE)


# Abstract syntax tree for formula

class Formula(ABC):
    @abstractmethod
    def evaluate(self, assignment: Dict[str, int]) -> int:
        pass

    def count_true(self) -> int:
        counter = 0
        # Iterate over all assignments of P,Q,R in domain {0,1,2}
        for p in TruthValue.DOMAIN:
            for q in TruthValue.DOMAIN:
                for r in TruthValue.DOMAIN:
                    assignment = {'P': p, 'Q': q, 'R': r}
                    val = self.evaluate(assignment)
                    if val == TruthValue.TRUE:
                        counter += 1
        return counter


# Constants

class Const(Formula):
    def __init__(self, value: int):
        self.value = value

    def evaluate(self, assignment: Dict[str, int]) -> int:
        return self.value


# Variables

class Var(Formula):
    def __init__(self, name: str):
        self.name = name

    def evaluate(self, assignment: Dict[str, int]) -> int:
        return assignment[self.name]


# Unary operator: Negation

class Negation(Formula):
    # Negation table mapping input => output
    NEG_TABLE = {
        TruthValue.FALSE: TruthValue.TRUE,
        TruthValue.UNKNOWN: TruthValue.UNKNOWN,
        TruthValue.TRUE: TruthValue.FALSE
    }

    def __init__(self, operand: Formula):
        self.operand = operand

    def evaluate(self, assignment: Dict[str, int]) -> int:
        v = self.operand.evaluate(assignment)
        return self.NEG_TABLE[v]


# Binary operators: Conjunction and Disjunction

class BinaryOperator(Formula, ABC):
    def __init__(self, left: Formula, right: Formula):
        self.left = left
        self.right = right

    @abstractmethod
    def op(self, a: int, b: int) -> int:
        pass

    def evaluate(self, assignment: Dict[str, int]) -> int:
        a = self.left.evaluate(assignment)
        b = self.right.evaluate(assignment)
        return self.op(a, b)


class Conjunction(BinaryOperator):
    # AND truth table from Table C-1
    # Rows and columns are from {0,1,2} rows by columns
    # Precompute the table for quick lookup:
    #   0 * anything => 0
    #   1 * 2 = 1
    #   2 * 2 = 2 etc
    AND_TABLE = [
        [0,0,0],
        [0,1,1],
        [0,1,2]
    ]

    def op(self, a: int, b: int) -> int:
        return self.AND_TABLE[a][b]


class Disjunction(BinaryOperator):
    # OR truth table from Table C-1
    OR_TABLE = [
        [0,1,2],
        [1,1,2],
        [2,2,2]
    ]

    def op(self, a: int, b: int) -> int:
        return self.OR_TABLE[a][b]


# Parser for the formula according to BNF grammar

class Parser:
    def __init__(self, text: str):
        self.text = text
        self.pos = 0

    def peek(self) -> str:
        return self.text[self.pos] if self.pos < len(self.text) else ''

    def consume(self, expected: str = None) -> str:
        if self.pos >= len(self.text):
            return ''
        current = self.text[self.pos]
        if expected and current != expected:
            raise ValueError(f"Expected '{expected}' at pos {self.pos} but found '{current}'")
        self.pos += 1
        return current

    def parse_formula(self) -> Formula:
        c = self.peek()
        # Constants
        if c in '012':
            self.consume()
            return Const(int(c))
        # Variables
        if c in 'PQR':
            self.consume()
            return Var(c)
        # Negation
        if c == '-':
            self.consume()
            operand = self.parse_formula()
            return Negation(operand)
        # Binary operations: must start with '('
        if c == '(':
            self.consume()  # skip '('
            left = self.parse_formula()
            op = self.consume()
            # op should be '*' or '+'
            if op not in ['*', '+']:
                raise ValueError(f"Expected '*' or '+' but got '{op}' at pos {self.pos}")
            right = self.parse_formula()
            closing = self.consume()
            if closing != ')':
                raise ValueError(f"Expected ')' but got '{closing}' at pos {self.pos}")
            if op == '*':
                return Conjunction(left, right)
            else:  # op == '+'
                return Disjunction(left, right)
        raise ValueError(f"Unexpected character '{c}' at pos {self.pos}")


def main():
    import sys
    for line in sys.stdin:
        line = line.strip()
        if line == '.':
            break
        if not line:
            continue
        # Parse
        parser = Parser(line)
        formula = parser.parse_formula()
        # Count triples making the formula true (value 2)
        print(formula.count_true())


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.18587228655815125
    2. 'ABC' → logprob: -1.8108723163604736
    3. ' ' → logprob: -6.3108720779418945
    4. 'ABCDE' → logprob: -6.8108720779418945
    5. 'abc' → logprob: -7.1858720779418945
    6. ' abc' → logprob: -7.5608720779418945
    7. ' A' → logprob: -7.8108720779418945
    8. 'import' → logprob: -8.435872077941895
    9. 'abstract' → logprob: -8.435872077941895
    10. ' ' → logprob: -8.560872077941895

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14764347672462463
    2. '.' → logprob: -2.022643566131592
    3. 'import' → logprob: -6.147643566131592
    4. ' ,' → logprob: -6.897643566131592
    5. ' ' → logprob: -7.522643566131592
    6. '<|end|>' → logprob: -7.647643566131592
    7. '```' → logprob: -8.647643089294434
    8. ':' → logprob: -9.272643089294434
    9. ' import' → logprob: -9.397643089294434
    10. ' .' → logprob: -9.772643089294434

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5464798808097839
    2. 'abstract' → logprob: -0.9214798808097839
    3. 'Abstract' → logprob: -3.7964799404144287
    4. ' ' → logprob: -8.671480178833008
    5. ' Abstract' → logprob: -9.046480178833008
    6. '.abstract' → logprob: -9.296480178833008
    7. ' A' → logprob: -9.921480178833008
    8. '```' → logprob: -10.546480178833008
    9. ' ABC' → logprob: -10.796480178833008
    10. ' ABSTRACT' → logprob: -11.296480178833008

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.002648071153089404
    2. 'm' → logprob: -6.002647876739502
    3. 'classmethod' → logprob: -9.50264835357666
    4. 'meth' → logprob: -10.00264835357666
    5. '_method' → logprob: -10.87764835357666
    6. 'staticmethod' → logprob: -11.75264835357666
    7. 'met' → logprob: -11.75264835357666
    8. 'me' → logprob: -12.12764835357666
    9. '_' → logprob: -12.75264835357666
    10. 'abstract' → logprob: -13.00264835357666

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32081368565559387
    2. '```' → logprob: -1.8208136558532715
    3. '\n' → logprob: -3.3208136558532715
    4. 'class' → logprob: -4.0708136558532715
    5. '

' → logprob: -4.1958136558532715
    6. '' → logprob: -4.5708136558532715
    7. '<|end|>' → logprob: -4.5708136558532715
    8. '\' → logprob: -5.0708136558532715
    9. '
' → logprob: -5.0708136558532715
    10. '  
' → logprob: -5.9458136558532715

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.275044709444046
    2. '

' → logprob: -1.6500446796417236
    3. 'class' → logprob: -3.4000446796417236
    4. '```' → logprob: -4.525044918060303
    5. '' → logprob: -6.775044918060303
    6. '
' → logprob: -7.275044918060303
    7. ' 

' → logprob: -7.650044918060303
    8. ' class' → logprob: -7.775044918060303
    9. '\n' → logprob: -8.150044441223145
    10. '``' → logprob: -8.150044441223145

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.048930589109659195
    2. ' collections' → logprob: -3.2989306449890137
    3. 'typing' → logprob: -5.173930644989014
    4. ' dat' → logprob: -5.673930644989014
    5. 'collections' → logprob: -7.048930644989014
    6. ' math' → logprob: -8.423930168151855
    7. ' sys' → logprob: -8.798930168151855
    8. ' io' → logprob: -9.298930168151855
    9. ' datetime' → logprob: -9.298930168151855
    10. ' os' → logprob: -9.548930168151855

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08950401097536087
    2. 'import' → logprob: -2.5895040035247803
    3. '.' → logprob: -4.839504241943359
    4. '```' → logprob: -6.839504241943359
    5. '.import' → logprob: -7.839504241943359
    6. '[' → logprob: -7.839504241943359
    7. ' ' → logprob: -8.83950424194336
    8. '<|end|>' → logprob: -9.08950424194336
    9. ' .' → logprob: -9.33950424194336
    10. ' as' → logprob: -9.96450424194336

Token 11: ' Tuple' (ID: 50841)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.4503095746040344
    2. ' List' → logprob: -1.7003095149993896
    3. 'Any' → logprob: -2.0753095149993896
    4. ' Union' → logprob: -3.7003095149993896
    5. ' Callable' → logprob: -4.325309753417969
    6. 'List' → logprob: -5.075309753417969
    7. ' Protocol' → logprob: -5.575309753417969
    8. ' Optional' → logprob: -6.075309753417969
    9. 'Union' → logprob: -6.825309753417969
    10. 'Callable' → logprob: -6.950309753417969

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8321534395217896
    2. '
' → logprob: -0.9571534395217896
    3. 'class' → logprob: -1.8321534395217896
    4. '```' → logprob: -4.0821533203125
    5. '\n' → logprob: -6.7071533203125
    6. '


' → logprob: -6.9571533203125
    7. '``' → logprob: -7.0821533203125
    8. '
' → logprob: -7.8321533203125
    9. ' class' → logprob: -8.8321533203125
    10. '`

' → logprob: -8.9571533203125

Token 13: ' Dict' (ID: 55179)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -1.3111306428909302
    2. ' Union' → logprob: -1.4361306428909302
    3. ' Any' → logprob: -1.9361306428909302
    4. ' Callable' → logprob: -2.1861305236816406
    5. ' Optional' → logprob: -2.5611305236816406
    6. 'Any' → logprob: -2.6861305236816406
    7. 'Union' → logprob: -3.6861305236816406
    8. 'List' → logprob: -3.8111305236816406
    9. 'Optional' → logprob: -4.186130523681641
    10. ' Protocol' → logprob: -4.311130523681641

Token 14: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3552440106868744
    2. '
' → logprob: -1.6052440404891968
    3. 'class' → logprob: -2.3552439212799072
    4. '


' → logprob: -6.730244159698486
    5. '\n' → logprob: -7.105244159698486
    6. '```' → logprob: -7.105244159698486
    7. ' class' → logprob: -8.980243682861328
    8. '
' → logprob: -9.480243682861328
    9. '``' → logprob: -9.730243682861328
    10. '`

' → logprob: -9.980243682861328

Token 15: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -9.849109119386412e-06
    2. '
' → logprob: -12.125009536743164
    3. ' class' → logprob: -13.000009536743164
    4. '```' → logprob: -13.375009536743164
    5. '"class' → logprob: -15.625009536743164
    6. '

' → logprob: -16.125009536743164
    7. '``' → logprob: -17.000009536743164
    8. 'clas' → logprob: -17.125009536743164
    9. '<class' → logprob: -17.375009536743164
    10. '-class' → logprob: -17.625009536743164

Token 16: ' Define' (ID: 38966)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 17: ' the' (ID: 290)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.710687518119812
    2. ' class' → logprob: -1.210687518119812
    3. 'class' → logprob: -1.585687518119812
    4. ' abstract' → logprob: -5.960687637329102
    5. ' a' → logprob: -6.210687637329102
    6. ' the' → logprob: -7.085687637329102
    7. 'abstract' → logprob: -8.210687637329102
    8. ' ' → logprob: -9.335687637329102
    9. 'an' → logprob: -10.210687637329102
    10. '<class' → logprob: -11.710687637329102

Token 18: ' three' (ID: 3407)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9022824168205261
    2. ' class' → logprob: -1.152282476425171
    3. ' base' → logprob: -2.152282476425171
    4. ' abstract' → logprob: -2.152282476425171
    5. 'abstract' → logprob: -3.277282476425171
    6. ' interface' → logprob: -6.402282238006592
    7. 'interface' → logprob: -6.652282238006592
    8. 'Base' → logprob: -7.152282238006592
    9. 'base' → logprob: -7.527282238006592
    10. ' next' → logprob: -7.527282238006592

Token 19: '-valu' (ID: 116315)
  Prédit: ' classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' classes' → logprob: -0.5338109731674194
    2. 'class' → logprob: -2.158811092376709
    3. ' states' → logprob: -2.658811092376709
    4. ' base' → logprob: -3.033811092376709
    5. ' abstract' → logprob: -3.533811092376709
    6. ' types' → logprob: -4.033811092376709
    7. ' main' → logprob: -4.158811092376709
    8. ' shapes' → logprob: -4.158811092376709
    9. 'classes' → logprob: -4.658811092376709
    10. 'types' → logprob: -4.658811092376709

Token 20: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.050218287855386734
    2. 'ated' → logprob: -3.050218343734741
    3. 'e' → logprob: -7.050218105316162
    4. 'al' → logprob: -7.425218105316162
    5. 'ate' → logprob: -9.42521858215332
    6. 'ation' → logprob: -10.55021858215332
    7. '```' → logprob: -10.55021858215332
    8. 'alue' → logprob: -10.92521858215332
    9. 'aled' → logprob: -12.80021858215332
    10. 'es' → logprob: -12.80021858215332

Token 21: ' logic' (ID: 18485)
  Prédit: ' logic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' logic' → logprob: -0.0008271370315924287
    2. 'logic' → logprob: -7.375827312469482
    3. ' logical' → logprob: -9.125826835632324
    4. '_logic' → logprob: -10.125826835632324
    5. 'Logic' → logprob: -11.250826835632324
    6. 'logical' → logprob: -11.375826835632324
    7. ' Boolean' → logprob: -11.875826835632324
    8. ' boolean' → logprob: -12.375826835632324
    9. ' lógica' → logprob: -12.500826835632324
    10. ' Logic' → logprob: -12.625826835632324

Token 22: ' domain' (ID: 11819)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.9103214144706726
    2. 'class' → logprob: -1.1603214740753174
    3. ':' → logprob: -1.6603214740753174
    4. ',' → logprob: -4.160321235656738
    5. '

' → logprob: -4.535321235656738
    6. ' values' → logprob: -5.035321235656738
    7. '_' → logprob: -5.285321235656738
    8. ' system' → logprob: -5.285321235656738
    9. ' enum' → logprob: -5.285321235656738
    10. ' operator' → logprob: -5.660321235656738

Token 23: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8409734964370728
    2. '
' → logprob: -1.4659734964370728
    3. 'class' → logprob: -1.9659734964370728
    4. '

' → logprob: -3.090973377227783
    5. ',' → logprob: -3.340973377227783
    6. 'T' → logprob: -3.590973377227783
    7. '_' → logprob: -4.090973377227783
    8. ':

' → logprob: -4.590973377227783
    9. ':
' → logprob: -4.715973377227783
    10. '_T' → logprob: -4.840973377227783

Token 24: ' helper' (ID: 25246)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.556067705154419
    2. ' operations' → logprob: -1.806067705154419
    3. ' the' → logprob: -2.431067705154419
    4. ' values' → logprob: -3.056067705154419
    5. ' operators' → logprob: -3.806067705154419
    6. ' logic' → logprob: -4.05606746673584
    7. '#' → logprob: -4.43106746673584
    8. ' truth' → logprob: -4.43106746673584
    9. 'values' → logprob: -4.80606746673584
    10. ' class' → logprob: -4.80606746673584

Token 25: ' functions' (ID: 9964)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.6316242218017578
    2. ' functions' → logprob: -2.131624221801758
    3. 'class' → logprob: -2.631624221801758
    4. ' constants' → logprob: -2.881624221801758
    5. ' classes' → logprob: -3.131624221801758
    6. ' values' → logprob: -3.256624221801758
    7. ' enums' → logprob: -3.756624221801758
    8. ' elements' → logprob: -4.006624221801758
    9. ' types' → logprob: -4.131624221801758
    10. 'values' → logprob: -5.131624221801758

Token 26: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.0364603996276855
    2. '
' → logprob: -1.6614603996276855
    3. '\' → logprob: -2.0364603996276855
    4. ' 

' → logprob: -2.2864603996276855
    5. '```' → logprob: -2.7864603996276855
    6. '_' → logprob: -3.0364603996276855
    7. '_

' → logprob: -3.9114603996276855
    8. 'class' → logprob: -4.0364603996276855
    9. ':' → logprob: -4.2864603996276855
    10. '\n' → logprob: -4.2864603996276855

Token 27: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0118483304977417
    2. '
' → logprob: -1.1368483304977417
    3. '

' → logprob: -2.2618484497070312
    4. 'T' → logprob: -2.5118484497070312
    5. 'TRUE' → logprob: -3.5118484497070312
    6. '```' → logprob: -3.7618484497070312
    7. 'def' → logprob: -4.261848449707031
    8. '\' → logprob: -4.386848449707031
    9. 'True' → logprob: -5.011848449707031
    10. '\n' → logprob: -5.261848449707031

Token 28: ' Truth' (ID: 47310)
  Prédit: ' Three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Three' → logprob: -0.09099185466766357
    2. ' ' → logprob: -3.215991973876953
    3. ' Abstract' → logprob: -4.340991973876953
    4. ' Logic' → logprob: -4.840991973876953
    5. ' Boolean' → logprob: -5.340991973876953
    6. ' ' → logprob: -5.465991973876953
    7. ' Logical' → logprob: -5.715991973876953
    8. 'Three' → logprob: -5.965991973876953
    9. ' Tri' → logprob: -5.965991973876953
    10. ' Truth' → logprob: -6.465991973876953

Token 29: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.006128225475549698
    2. 'Val' → logprob: -5.256128311157227
    3. 'Domain' → logprob: -8.256128311157227
    4. 'Table' → logprob: -8.381128311157227
    5. 'Values' → logprob: -8.381128311157227
    6. '<|end|>' → logprob: -10.756128311157227
    7. '(Value' → logprob: -11.006128311157227
    8. 'value' → logprob: -11.256128311157227
    9. '_value' → logprob: -11.256128311157227
    10. '-value' → logprob: -11.381128311157227

Token 30: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20305034518241882
    2. '    ' → logprob: -1.9530503749847412
    3. ' ' → logprob: -3.703050374984741
    4. ' UNKNOWN' → logprob: -5.828050136566162
    5. '  ' → logprob: -5.953050136566162
    6. '_' → logprob: -5.953050136566162
    7. '(' → logprob: -6.203050136566162
    8. ':' → logprob: -6.703050136566162
    9. ' def' → logprob: -7.078050136566162
    10. '   ' → logprob: -7.828050136566162

Token 32: ' FALSE' (ID: 19451)
  Prédit: ' TRUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' TRUE' → logprob: -0.5430269241333008
    2. 'TRUE' → logprob: -1.6680269241333008
    3. ' UNKNOWN' → logprob: -2.293026924133301
    4. ' UN' → logprob: -2.418026924133301
    5. 'UNKNOWN' → logprob: -4.168026924133301
    6. 'UN' → logprob: -4.918026924133301
    7. '   ' → logprob: -5.543026924133301
    8. 'T' → logprob: -5.918026924133301
    9. ' T' → logprob: -6.043026924133301
    10. ' def' → logprob: -6.668026924133301

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02528957463800907
    2. '=' → logprob: -3.775289535522461
    3. ',' → logprob: -6.275289535522461
    4. ':' → logprob: -8.900289535522461
    5. '   ' → logprob: -11.025289535522461
    6. ' ' → logprob: -12.775289535522461
    7. '  ' → logprob: -12.900289535522461
    8. ' ,' → logprob: -14.650289535522461
    9. '.' → logprob: -14.775289535522461
    10. '    ' → logprob: -15.400289535522461

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005237906239926815
    2. '0' → logprob: -5.255238056182861
    3. ' False' → logprob: -13.755237579345703
    4. '-' → logprob: -14.130237579345703
    5. 'False' → logprob: -14.255237579345703
    6. '  ' → logprob: -14.380237579345703
    7. ' "' → logprob: -14.630237579345703
    8. ' -' → logprob: -15.630237579345703
    9. '   ' → logprob: -15.755237579345703
    10. ' '' → logprob: -15.880237579345703

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012301725335419178
    2. ' ' → logprob: -4.512301921844482
    3. 'False' → logprob: -7.262301921844482
    4. '"' → logprob: -7.887301921844482
    5. '-' → logprob: -9.137301445007324
    6. ''' → logprob: -10.012301445007324
    7. ' False' → logprob: -11.387301445007324
    8. ' "' → logprob: -12.387301445007324
    9. '   ' → logprob: -13.012301445007324
    10. ' '' → logprob: -13.137301445007324

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025674238801002502
    2. '<|end|>' → logprob: -4.275674343109131
    3. '   ' → logprob: -5.025674343109131
    4. ')' → logprob: -7.275674343109131
    5. '    
' → logprob: -7.275674343109131
    6. 'x' → logprob: -7.525674343109131
    7. ' True' → logprob: -7.775674343109131
    8. ' ' → logprob: -7.775674343109131
    9. '1' → logprob: -8.275673866271973
    10. 'TRUE' → logprob: -8.525673866271973

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.827278733253479
    2. 'TRUE' → logprob: -1.077278733253479
    3. ' TRUE' → logprob: -2.3272786140441895
    4. '
' → logprob: -2.9522786140441895
    5. '1' → logprob: -3.4522786140441895
    6. '.TRUE' → logprob: -4.5772786140441895
    7. 'True' → logprob: -5.0772786140441895
    8. ' True' → logprob: -5.0772786140441895
    9. 'x' → logprob: -5.2022786140441895
    10. 'FALSE' → logprob: -5.4522786140441895

Token 38: ' UNKNOWN' (ID: 144384)
  Prédit: 'TRUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TRUE' → logprob: -0.6374182105064392
    2. ' TRUE' → logprob: -0.7624182105064392
    3. 'UNKNOWN' (adapté à ' UNKNOWN') → logprob: -6.387418270111084
    4. ' UNKNOWN' → logprob: -6.512418270111084
    5. 'True' → logprob: -6.762418270111084
    6. ' True' → logprob: -8.387417793273926
    7. '1' → logprob: -9.012417793273926
    8. '.TRUE' → logprob: -10.012417793273926
    9. ' ' → logprob: -10.262417793273926
    10. '_TRUE' → logprob: -11.012417793273926

Token 39: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04301734268665314
    2. ' ' → logprob: -3.1680173873901367
    3. '-' → logprob: -11.418017387390137
    4. ' -' → logprob: -13.043017387390137
    5. ' None' → logprob: -13.543017387390137
    6. '   ' → logprob: -13.668017387390137
    7. 'None' → logprob: -13.793017387390137
    8. '2' → logprob: -14.168017387390137
    9. '  ' → logprob: -14.793017387390137
    10. ' ' → logprob: -16.16801643371582

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. '-' → logprob: -12.000012397766113
    3. ' ' → logprob: -12.125012397766113
    4. 'None' → logprob: -15.000012397766113
    5. '2' → logprob: -15.750012397766113
    6. '   ' → logprob: -17.625011444091797
    7. '0' → logprob: -18.375011444091797
    8. ' -' → logprob: -18.500011444091797
    9. ' None' → logprob: -18.875011444091797
    10. '  ' → logprob: -19.625011444091797

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.5107177862082608e-05
    2. 'TRUE' → logprob: -11.125024795532227
    3. '    
' → logprob: -12.375024795532227
    4. '```' → logprob: -13.000024795532227
    5. 'FALSE' → logprob: -13.875024795532227
    6. '  ' → logprob: -14.375024795532227
    7. '    ' → logprob: -14.625024795532227
    8. '
' → logprob: -14.750024795532227
    9. ' TRUE' → logprob: -15.000024795532227
    10. ',' → logprob: -15.625024795532227

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.578184497309849e-05
    2. 'TRUE' → logprob: -9.750085830688477
    3. '    ' → logprob: -11.875085830688477
    4. '```' → logprob: -11.875085830688477
    5. '  ' → logprob: -12.375085830688477
    6. '    
' → logprob: -12.500085830688477
    7. ' ' → logprob: -13.000085830688477
    8. '
' → logprob: -13.375085830688477
    9. ' TRUE' → logprob: -14.750085830688477
    10. 'FALSE' → logprob: -15.250085830688477

Token 44: ' TRUE' (ID: 19894)
  Prédit: 'TRUE'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TRUE' (adapté à ' TRUE') → logprob: -0.10067717730998993
    2. ' TRUE' → logprob: -2.350677251815796
    3. 'True' → logprob: -7.725677013397217
    4. ' True' → logprob: -10.725677490234375
    5. '_TRUE' → logprob: -12.850677490234375
    6. '.TRUE' → logprob: -12.975677490234375
    7. ' ' → logprob: -13.975677490234375
    8. '   ' → logprob: -14.475677490234375
    9. '2' → logprob: -15.475677490234375
    10. '  ' → logprob: -15.600677490234375

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014287968166172504
    2. '=' → logprob: -4.264287948608398
    3. '   ' → logprob: -9.139287948608398
    4. ':' → logprob: -11.889287948608398
    5. '<|end|>' → logprob: -13.014287948608398
    6. '.' → logprob: -13.139287948608398
    7. '  ' → logprob: -13.389287948608398
    8. ' =
' → logprob: -13.889287948608398
    9. '2' → logprob: -14.139287948608398
    10. '4' → logprob: -14.139287948608398

Token 46: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6931489706039429
    2. ' ' → logprob: -0.6931489706039429
    3. '1' → logprob: -13.568148612976074
    4. '   ' → logprob: -14.693148612976074
    5. '  ' → logprob: -16.06814956665039
    6. '0' → logprob: -18.06814956665039
    7. ' ' → logprob: -18.31814956665039
    8. '    ' → logprob: -18.44314956665039
    9. '10' → logprob: -19.06814956665039
    10. '255' → logprob: -19.25564956665039

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '1' → logprob: -16.3750057220459
    4. '   ' → logprob: -18.8750057220459
    5. 'True' → logprob: -19.3750057220459
    6. '255' → logprob: -20.7500057220459
    7. '  ' → logprob: -20.8750057220459
    8. '```' → logprob: -21.1250057220459
    9. '-' → logprob: -21.5000057220459
    10. '0' → logprob: -21.6250057220459

Token 48: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.25017252564430237
    2. '
' → logprob: -1.62517249584198
    3. '```' → logprob: -4.3751726150512695
    4. '<|end|>' → logprob: -5.2501726150512695
    5. '


' → logprob: -6.1251726150512695
    6. '\n' → logprob: -6.8751726150512695
    7. ':' → logprob: -7.2501726150512695
    8. '<|end|>' → logprob: -7.3751726150512695
    9. '
    
' → logprob: -7.6251726150512695
    10. 'newline' → logprob: -7.8751726150512695

Token 49: '   ' (ID: 271)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1789567917585373
    2. '
' → logprob: -1.9289567470550537
    3. '<|end|>' → logprob: -5.178956985473633
    4. '```' → logprob: -5.428956985473633
    5. '


' → logprob: -6.178956985473633
    6. '<|end|>' → logprob: -6.678956985473633
    7. 'class' → logprob: -6.803956985473633
    8. ':' → logprob: -7.303956985473633
    9. '\n' → logprob: -7.678956985473633
    10. 'def' → logprob: -7.928956985473633

Token 50: ' DOMAIN' (ID: 192120)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9138071537017822
    2. '
' → logprob: -1.0388071537017822
    3. '```' → logprob: -2.7888071537017822
    4. '\n' → logprob: -3.6638071537017822
    5. ':' → logprob: -3.7888071537017822
    6. '@' → logprob: -3.7888071537017822
    7. ' 

' → logprob: -4.288806915283203
    8. '   ' → logprob: -4.538806915283203
    9. '<|end|>' → logprob: -4.788806915283203
    10. '    
    
' → logprob: -4.788806915283203

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010502149350941181
    2. '=' → logprob: -4.635502338409424
    3. '_SIZE' → logprob: -7.760502338409424
    4. '_' → logprob: -9.010501861572266
    5. ':' → logprob: -9.260501861572266
    6. 'S' → logprob: -9.635501861572266
    7. ')' → logprob: -11.885501861572266
    8. '_VALUES' → logprob: -12.135501861572266
    9. 'SIZE' → logprob: -12.260501861572266
    10. '   ' → logprob: -12.760501861572266

Token 52: ' (' (ID: 350)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.9512872099876404
    2. ' (' → logprob: -1.2012872695922852
    3. ' [' → logprob: -1.3262872695922852
    4. '[' → logprob: -4.076287269592285
    5. '{' → logprob: -4.201287269592285
    6. '(' → logprob: -4.201287269592285
    7. ' ' → logprob: -8.326287269592285
    8. ' fro' → logprob: -8.701287269592285
    9. 'fro' → logprob: -9.076287269592285
    10. ' range' → logprob: -11.576287269592285

Token 53: 'FALSE' (ID: 75732)
  Prédit: 'FALSE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FALSE' → logprob: -0.16969811916351318
    2. '0' → logprob: -2.0446982383728027
    3. ' FALSE' → logprob: -4.169698238372803
    4. 'False' → logprob: -4.794698238372803
    5. ' ' → logprob: -6.294698238372803
    6. '.FALSE' → logprob: -7.919698238372803
    7. ' False' → logprob: -8.669697761535645
    8. '   ' → logprob: -9.169697761535645
    9. '_FALSE' → logprob: -9.294697761535645
    10. ')' → logprob: -9.419697761535645

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029708960209973156
    2. ' ,' → logprob: -8.125297546386719
    3. ',
' → logprob: -14.125297546386719
    4. ',F' → logprob: -16.00029754638672
    5. 'FALSE' → logprob: -16.25029754638672
    6. ',

' → logprob: -17.75029754638672
    7. ' ' → logprob: -17.87529754638672
    8. 'TRUE' → logprob: -18.00029754638672
    9. 'False' → logprob: -18.12529754638672
    10. '0' → logprob: -18.25029754638672

Token 55: ' UNKNOWN' (ID: 144384)
  Prédit: ' UNKNOWN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' UNKNOWN' → logprob: -0.00977273564785719
    2. 'UNKNOWN' → logprob: -4.634772777557373
    3. ' ' → logprob: -11.509772300720215
    4. '1' → logprob: -12.759772300720215
    5. ' ' → logprob: -13.759772300720215
    6. '.UNKNOWN' → logprob: -13.884772300720215
    7. ' TRUE' → logprob: -14.384772300720215
    8. '_UNKNOWN' → logprob: -14.634772300720215
    9. ' unknown' → logprob: -15.259772300720215
    10. '   ' → logprob: -16.25977325439453

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.070975071750581e-05
    2. ' ,' → logprob: -10.500030517578125
    3. ')' → logprob: -12.875030517578125
    4. '   ' → logprob: -16.125030517578125
    5. ',
' → logprob: -16.125030517578125
    6. 'TRUE' → logprob: -16.250030517578125
    7. ',)' → logprob: -16.500030517578125
    8. ',F' → logprob: -17.125030517578125
    9. 'FALSE' → logprob: -17.125030517578125
    10. ' ' → logprob: -17.625030517578125

Token 57: ' TRUE' (ID: 19894)
  Prédit: 'TRUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TRUE' → logprob: -0.4741784930229187
    2. ' TRUE' → logprob: -0.9741784930229187
    3. ' ' → logprob: -10.349178314208984
    4. 'True' → logprob: -11.099178314208984
    5. '.TRUE' → logprob: -11.099178314208984
    6. '2' → logprob: -11.224178314208984
    7. '_TRUE' → logprob: -11.474178314208984
    8. ' True' → logprob: -11.724178314208984
    9. 'TR' → logprob: -12.599178314208984
    10. ' TR' → logprob: -13.724178314208984

Token 58: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.750000953674316
    4. '   ' → logprob: -18.375
    5. '),' → logprob: -19.75
    6. ')`' → logprob: -19.75
    7. ')
' → logprob: -19.875
    8. '))' → logprob: -20.0
    9. ')

' → logprob: -20.125
    10. ')#' → logprob: -20.375

Token 59: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.24804620444774628
    2. 'class' → logprob: -2.1230461597442627
    3. '
' → logprob: -2.6230461597442627
    4. 'def' → logprob: -3.7480461597442627
    5. '


' → logprob: -6.123046398162842
    6. '```' → logprob: -7.123046398162842
    7. ':' → logprob: -9.123045921325684
    8. ' 

' → logprob: -9.373045921325684
    9. '  

' → logprob: -9.498045921325684
    10. '



' → logprob: -9.623045921325684

Token 60: ' Abstract' (ID: 17413)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6642910838127136
    2. ' class' → logprob: -0.9142910838127136
    3. 'def' → logprob: -3.0392911434173584
    4. ' 

' → logprob: -4.039290904998779
    5. ' def' → logprob: -4.414290904998779
    6. ' 
' → logprob: -5.914290904998779
    7. '

' → logprob: -6.289290904998779
    8. '
' → logprob: -6.539290904998779
    9. ' 


' → logprob: -8.414291381835938
    10. ' 
 
' → logprob: -8.539291381835938

Token 61: ' syntax' (ID: 45440)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4754452407360077
    2. ' class' → logprob: -0.9754452705383301
    3. ' base' → logprob: -7.35044527053833
    4. 'Base' → logprob: -8.350444793701172
    5. 'Class' → logprob: -8.475444793701172
    6. 'classmethod' → logprob: -8.975444793701172
    7. '<class' → logprob: -9.600444793701172
    8. '
' → logprob: -10.725444793701172
    9. ' Base' → logprob: -10.850444793701172
    10. '"class' → logprob: -11.725444793701172

Token 62: ' tree' (ID: 8165)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07039563357830048
    2. ' class' → logprob: -2.6953957080841064
    3. ')' → logprob: -9.070395469665527
    4. '<class' → logprob: -9.695395469665527
    5. '_' → logprob: -9.820395469665527
    6. '<|end|>' → logprob: -10.070395469665527
    7. '<|end|>' → logprob: -10.445395469665527
    8. ' ' → logprob: -10.570395469665527
    9. 'from' → logprob: -10.820395469665527
    10. 'classmethod' → logprob: -11.445395469665527

Token 63: ' for' (ID: 395)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.49538880586624146
    2. 'class' → logprob: -1.1203887462615967
    3. ' (' → logprob: -2.9953887462615967
    4. '
' → logprob: -5.120388984680176
    5. '(' → logprob: -6.120388984680176
    6. '<|end|>' → logprob: -6.370388984680176
    7. '(class' → logprob: -7.120388984680176
    8. ' 
' → logprob: -7.120388984680176
    9. '<class' → logprob: -7.245388984680176
    10. ' node' → logprob: -7.495388984680176

Token 64: ' formula' (ID: 20690)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.922391951084137
    2. ' logic' → logprob: -1.1723918914794922
    3. ' logical' → logprob: -1.9223918914794922
    4. ' expressions' → logprob: -2.797391891479492
    5. ' formula' → logprob: -3.797391891479492
    6. ' a' → logprob: -4.297391891479492
    7. ' propos' → logprob: -4.297391891479492
    8. ' formulas' → logprob: -4.422391891479492
    9. ' expression' → logprob: -4.922391891479492
    10. ' Boolean' → logprob: -5.922391891479492

Token 65: '

' (ID: 279)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.4376063048839569
    2. 'class' → logprob: -1.0626063346862793
    3. '
' → logprob: -5.687606334686279
    4. 's' → logprob: -6.062606334686279
    5. '```' → logprob: -6.312606334686279
    6. ':' → logprob: -7.937606334686279
    7. '<class' → logprob: -8.187605857849121
    8. '

' → logprob: -8.437605857849121
    9. '<|end|>' → logprob: -8.437605857849121
    10. ' classes' → logprob: -9.937605857849121

Token 66: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00015550498210359365
    2. ' class' → logprob: -9.125155448913574
    3. '
' → logprob: -10.125155448913574
    4. ' 
' → logprob: -12.375155448913574
    5. '```' → logprob: -14.000155448913574
    6. '<class' → logprob: -14.125155448913574
    7. '

' → logprob: -14.875155448913574
    8. '"class' → logprob: -15.875155448913574
    9. '\n' → logprob: -17.25015640258789
    10. '<|end|>' → logprob: -17.37515640258789

Token 67: ' Formula' (ID: 52227)
  Prédit: ' Formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Formula' → logprob: -0.008647306822240353
    2. ' Expr' → logprob: -5.383647441864014
    3. ' Abstract' → logprob: -6.508647441864014
    4. 'Formula' → logprob: -6.758647441864014
    5. ' ABC' → logprob: -7.633647441864014
    6. ' AST' → logprob: -7.758647441864014
    7. ' Expression' → logprob: -8.508646965026855
    8. ' ' → logprob: -9.133646965026855
    9. ' Logical' → logprob: -10.008646965026855
    10. '_formula' → logprob: -10.633646965026855

Token 68: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006951338145881891
    2. ':' → logprob: -5.006951332092285
    3. '(Abstract' → logprob: -8.381951332092285
    4. '(object' → logprob: -13.381951332092285
    5. '(AST' → logprob: -13.381951332092285
    6. ' (' → logprob: -13.506951332092285
    7. '():' → logprob: -14.131951332092285
    8. '(QWidget' → logprob: -14.881951332092285
    9. ' :' → logprob: -15.631951332092285
    10. ':
' → logprob: -15.881951332092285

Token 69: 'ABC' (ID: 44197)
  Prédit: ' ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.38689661026000977
    2. 'ABC' → logprob: -1.1368966102600098
    3. ' ' → logprob: -11.011896133422852
    4. ')' → logprob: -12.761896133422852
    5. ',' → logprob: -13.511896133422852
    6. 'AB' → logprob: -13.886896133422852
    7. '  ' → logprob: -14.261896133422852
    8. '   ' → logprob: -14.261896133422852
    9. 'abc' → logprob: -14.261896133422852
    10. '):' → logprob: -14.511896133422852

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015824666479602456
    2. ')' → logprob: -9.000158309936523
    3. ':' → logprob: -10.500158309936523
    4. '):
' → logprob: -11.875158309936523
    5. '):

' → logprob: -16.500158309936523
    6. ' ):' → logprob: -16.875158309936523
    7. '):
' → logprob: -17.250158309936523
    8. ',' → logprob: -18.000158309936523
    9. '():' → logprob: -18.125158309936523
    10. ']:' → logprob: -18.250158309936523

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8133259415626526
    2. '
' → logprob: -1.3133258819580078
    3. '<|end|>' → logprob: -2.313325881958008
    4. ' 
' → logprob: -3.063325881958008
    5. '    
' → logprob: -3.563325881958008
    6. '    ' → logprob: -3.813325881958008
    7. ' ' → logprob: -3.813325881958008
    8. ':' → logprob: -3.813325881958008
    9. '' → logprob: -4.438325881958008
    10. 'newline' → logprob: -5.063325881958008

Token 72: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5818758010864258
    2. '
' → logprob: -2.081875801086426
    3. ' def' → logprob: -2.456875801086426
    4. ' 
' → logprob: -3.081875801086426
    5. ':' → logprob: -3.206875801086426
    6. 'def' → logprob: -3.331875801086426
    7. '    
' → logprob: -3.456875801086426
    8. '    ' → logprob: -3.456875801086426
    9. ' ' → logprob: -3.956875801086426
    10. '@' (adapté à ' @') → logprob: -5.081875801086426

Token 73: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.7432603272027336e-06
    2. 'property' → logprob: -13.375001907348633
    3. 'staticmethod' → logprob: -16.250001907348633
    4. ' abstract' → logprob: -17.375001907348633
    5. 'abc' → logprob: -17.625001907348633
    6. 'ab' → logprob: -17.750001907348633
    7. '.abstract' → logprob: -18.875001907348633
    8. 'abs' → logprob: -19.250001907348633
    9. 'classmethod' → logprob: -19.250001907348633
    10. 'a' → logprob: -22.500001907348633

Token 74: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -6.511406809295295e-06
    2. '_method' → logprob: -12.000006675720215
    3. 'meth' → logprob: -15.750006675720215
    4. 'classmethod' → logprob: -16.2500057220459
    5. 'staticmethod' → logprob: -18.0000057220459
    6. ' method' → logprob: -18.0000057220459
    7. '.method' → logprob: -18.6250057220459
    8. '	method' → logprob: -18.6250057220459
    9. 'm' → logprob: -18.7500057220459
    10. '-method' → logprob: -18.8750057220459

Token 75: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23145513236522675
    2. 'def' → logprob: -1.7314550876617432
    3. ' def' → logprob: -4.231455326080322
    4. '    
' → logprob: -4.606455326080322
    5. 'method' → logprob: -5.731455326080322
    6. '  
' → logprob: -7.231455326080322
    7. '\' → logprob: -8.356454849243164
    8. ' ' → logprob: -8.481454849243164
    9. '   
' → logprob: -8.981454849243164
    10. ' 
' → logprob: -9.481454849243164

Token 77: ' def' (ID: 1056)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.24136163294315338
    2. 'call' → logprob: -1.7413616180419922
    3. 'property' → logprob: -3.491361618041992
    4. 'classmethod' → logprob: -5.866361618041992
    5. 'method' → logprob: -6.116361618041992
    6. 'abc' → logprob: -6.491361618041992
    7. 'staticmethod' → logprob: -7.116361618041992
    8. ' abstract' → logprob: -7.491361618041992
    9. 'def' (adapté à ' def') → logprob: -7.616361618041992
    10. 'bool' → logprob: -9.991361618041992

Token 78: ' evaluate' (ID: 21646)
  Prédit: ' evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.020074987784028053
    2. ' ' → logprob: -4.770074844360352
    3. ' eval' → logprob: -4.770074844360352
    4. ' space' → logprob: -6.395074844360352
    5. ' ' → logprob: -7.895074844360352
    6. ' eva' → logprob: -8.770074844360352
    7. '_eval' → logprob: -9.020074844360352
    8. ' evaluates' → logprob: -9.395074844360352
    9. 'evaluate' → logprob: -9.645074844360352
    10. ' Evaluate' → logprob: -9.895074844360352

Token 79: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2022116333246231
    2. '(' → logprob: -1.702211618423462
    3. ' (' → logprob: -7.202211856842041
    4. '(
' → logprob: -10.202211380004883
    5. ' ' → logprob: -12.577211380004883
    6. ' self' → logprob: -12.702211380004883
    7. '(s' → logprob: -12.952211380004883
    8. 'self' → logprob: -12.952211380004883
    9. '<|end|>' → logprob: -13.077211380004883
    10. '(

' → logprob: -14.077211380004883

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029063932597637177
    2. ' ,' → logprob: -5.877906322479248
    3. 'self' → logprob: -9.877906799316406
    4. ',state' → logprob: -11.002906799316406
    5. ')' → logprob: -11.252906799316406
    6. '):' → logprob: -11.752906799316406
    7. ',self' → logprob: -12.627906799316406
    8. ' )' → logprob: -12.752906799316406
    9. ' self' → logprob: -13.377906799316406
    10. ',input' → logprob: -14.002906799316406

Token 81: ' assignment' (ID: 24618)
  Prédit: ' context'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' context' → logprob: -0.7529696226119995
    2. ' self' → logprob: -1.7529696226119995
    3. ' state' → logprob: -2.502969741821289
    4. ' domain' → logprob: -3.002969741821289
    5. 'context' → logprob: -3.252969741821289
    6. ')' → logprob: -3.252969741821289
    7. ' )' → logprob: -3.627969741821289
    8. ' model' → logprob: -3.877969741821289
    9. 'self' → logprob: -3.877969741821289
    10. ' interpretation' → logprob: -4.252969741821289

Token 82: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05080946907401085
    2. '):' → logprob: -3.300809383392334
    3. ')' → logprob: -4.425809383392334
    4. ' ):' → logprob: -8.050809860229492
    5. ' :' → logprob: -8.300809860229492
    6. ' )' → logprob: -9.175809860229492
    7. ',' → logprob: -10.175809860229492
    8. '):
' → logprob: -12.050809860229492
    9. '   ' → logprob: -13.425809860229492
    10. ')->' → logprob: -13.425809860229492

Token 83: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.03389694541692734
    2. 'Dict' → logprob: -3.4088969230651855
    3. ')' → logprob: -9.533897399902344
    4. ' Tuple' → logprob: -9.658897399902344
    5. ' ' → logprob: -10.033897399902344
    6. ' )' → logprob: -10.408897399902344
    7. ' dict' → logprob: -10.408897399902344
    8. 'dict' → logprob: -12.158897399902344
    9. 'Tuple' → logprob: -13.283897399902344
    10. '   ' → logprob: -13.783897399902344

Token 84: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0007503056549467146
    2. '[' → logprob: -7.250750541687012
    3. '[
' → logprob: -10.625750541687012
    4. ')' → logprob: -11.875750541687012
    5. '[int' → logprob: -12.250750541687012
    6. 'str' → logprob: -13.500750541687012
    7. '   ' → logprob: -14.250750541687012
    8. '<|end|>' → logprob: -14.875750541687012
    9. '[...,' → logprob: -15.250750541687012
    10. '```' → logprob: -15.250750541687012

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005501718260347843
    2. ',int' → logprob: -7.625550270080566
    3. '[int' → logprob: -10.250550270080566
    4. ' ,' → logprob: -11.125550270080566
    5. 'int' → logprob: -12.500550270080566
    6. ',Integer' → logprob: -13.125550270080566
    7. '<|end|>' → logprob: -13.125550270080566
    8. ',float' → logprob: -14.000550270080566
    9. '[' → logprob: -14.000550270080566
    10. ']int' → logprob: -14.125550270080566

Token 86: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06997844576835632
    2. ' int' → logprob: -2.6949784755706787
    3. '[int' → logprob: -11.069978713989258
    4. ''int' → logprob: -12.194978713989258
    5. ')' → logprob: -12.444978713989258
    6. ''s' → logprob: -12.819978713989258
    7. ' ' → logprob: -13.319978713989258
    8. 'Truth' → logprob: -13.319978713989258
    9. '	int' → logprob: -13.569978713989258
    10. ':int' → logprob: -13.569978713989258

Token 87: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006255837506614625
    2. ')' → logprob: -8.250625610351562
    3. ']):' → logprob: -8.375625610351562
    4. ']' → logprob: -9.000625610351562
    5. ''])' → logprob: -12.875625610351562
    6. ' ])' → logprob: -13.125625610351562
    7. '],' → logprob: -13.250625610351562
    8. '"])' → logprob: -13.875625610351562
    9. ']):
' → logprob: -14.125625610351562
    10. '])->' → logprob: -14.500625610351562

Token 88: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01435423456132412
    2. ':' → logprob: -5.264354228973389
    3. ' ->' → logprob: -5.639354228973389
    4. '->' → logprob: -6.014354228973389
    5. ')->' → logprob: -6.264354228973389
    6. '):' → logprob: -6.764354228973389
    7. ' )' → logprob: -11.889354705810547
    8. '   ' → logprob: -12.264354705810547
    9. ':return' → logprob: -12.514354705810547
    10. ',' → logprob: -13.514354705810547

Token 89: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029750952497124672
    2. 'int' → logprob: -3.5297510623931885
    3. '[int' → logprob: -15.40475082397461
    4. ' ' → logprob: -16.27975082397461
    5. '<int' → logprob: -16.65475082397461
    6. ':int' → logprob: -16.77975082397461
    7. '	int' → logprob: -17.40475082397461
    8. '(int' → logprob: -18.02975082397461
    9. ' ' → logprob: -18.15475082397461
    10. '  ' → logprob: -18.52975082397461

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004620003048330545
    2. '
' → logprob: -6.50462007522583
    3. '<|end|>' → logprob: -6.87962007522583
    4. ')' → logprob: -7.12962007522583
    5. '):' → logprob: -7.50462007522583
    6. ':
' → logprob: -7.75462007522583
    7. ':return' → logprob: -8.504619598388672
    8. '   ' → logprob: -10.379619598388672
    9. ' :' → logprob: -11.004619598388672
    10. '<|end|>' → logprob: -11.379619598388672

Token 91: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9315311312675476
    2. '<|end|>' → logprob: -1.0565311908721924
    3. '
' → logprob: -1.6815311908721924
    4. '       ' → logprob: -3.4315311908721924
    5. '\' → logprob: -4.556530952453613
    6. '   ' → logprob: -4.806530952453613
    7. ')' → logprob: -5.431530952453613
    8. '\r' → logprob: -5.681530952453613
    9. ' 
' → logprob: -5.806530952453613
    10. ':' → logprob: -5.806530952453613

Token 92: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.9622126817703247
    2. 'pass' (adapté à ' pass') → logprob: -1.3372126817703247
    3. '...' → logprob: -1.4622126817703247
    4. '       ' → logprob: -2.212212562561035
    5. '   ' → logprob: -5.212212562561035
    6. '<|end|>' → logprob: -5.837212562561035
    7. ' ' → logprob: -6.837212562561035
    8. ' ...' → logprob: -7.212212562561035
    9. '\n' → logprob: -7.212212562561035
    10. '#' → logprob: -7.337212562561035

Token 93: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19399861991405487
    2. '

' → logprob: -1.8189985752105713
    3. '


' → logprob: -4.56899881362915
    4. '\n' → logprob: -6.69399881362915
    5. '<|end|>' → logprob: -7.06899881362915
    6. '' → logprob: -7.56899881362915
    7. '
    
' → logprob: -8.818998336791992
    8. '



' → logprob: -8.818998336791992
    9. 'class' → logprob: -9.068998336791992
    10. ' 
' → logprob: -9.068998336791992

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10290388762950897
    2. '

' → logprob: -2.3529038429260254
    3. 'class' → logprob: -6.227903842926025
    4. '


' → logprob: -7.352903842926025
    5. '
' → logprob: -10.727904319763184
    6. '' → logprob: -10.852904319763184
    7. '



' → logprob: -11.602904319763184
    8. '\n' → logprob: -11.602904319763184
    9. '
    
' → logprob: -12.227904319763184
    10. ' 
' → logprob: -12.852904319763184

Token 95: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.24134626984596252
    2. '
' → logprob: -1.7413462400436401
    3. '

' → logprob: -3.2413463592529297
    4. '
    
' → logprob: -11.11634635925293
    5. ' class' → logprob: -11.99134635925293
    6. '


' → logprob: -12.49134635925293
    7. '\n' → logprob: -13.36634635925293
    8. '
' → logprob: -13.36634635925293
    9. '    
' → logprob: -13.49134635925293
    10. '    

' → logprob: -13.99134635925293

Token 96: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23859742283821106
    2. ' __' → logprob: -1.6135973930358887
    3. ' def' → logprob: -5.738597393035889
    4. ' _' → logprob: -5.988597393035889
    5. 'n' → logprob: -6.488597393035889
    6. ' is' → logprob: -6.613597393035889
    7. '_' → logprob: -6.863597393035889
    8. ' not' → logprob: -6.988597393035889
    9. ' ' → logprob: -7.738597393035889
    10. ' isinstance' → logprob: -8.363597869873047

Token 97: '_true' (ID: 37108)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.579078197479248
    2. '_tokens' → logprob: -1.329078197479248
    3. '_atoms' → logprob: -3.079078197479248
    4. '_nodes' → logprob: -3.704078197479248
    5. '_occ' → logprob: -3.829078197479248
    6. '_s' → logprob: -4.079078197479248
    7. '_variables' → logprob: -4.079078197479248
    8. '_literals' → logprob: -4.954078197479248
    9. '_words' → logprob: -5.079078197479248
    10. '_variable' → logprob: -5.579078197479248

Token 98: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5178637504577637
    2. 's' → logprob: -1.0178637504577637
    3. '()' → logprob: -3.5178637504577637
    4. '_' → logprob: -5.392863750457764
    5. '_tokens' → logprob: -6.017863750457764
    6. ')' → logprob: -6.767863750457764
    7. '_s' → logprob: -7.017863750457764
    8. '_occ' → logprob: -7.142863750457764
    9. '_parent' → logprob: -7.392863750457764
    10. '_nodes' → logprob: -8.267864227294922

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5524642467498779
    2. 's' → logprob: -0.9274642467498779
    3. '):' → logprob: -4.427464485168457
    4. ' ' → logprob: -5.802464485168457
    5. '   ' → logprob: -6.052464485168457
    6. '(' → logprob: -6.052464485168457
    7. '()' → logprob: -6.552464485168457
    8. '_' → logprob: -6.552464485168457
    9. '_s' → logprob: -6.552464485168457
    10. ' )' → logprob: -6.802464485168457

Token 100: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.577326774597168
    2. '(' → logprob: -0.827326774597168
    3. '():' → logprob: -7.702326774597168
    4. ' (' → logprob: -8.327326774597168
    5. 'self' → logprob: -8.327326774597168
    6. '(s' → logprob: -8.952326774597168
    7. ':' → logprob: -9.077326774597168
    8. '(
' → logprob: -9.452326774597168
    9. 's' → logprob: -9.577326774597168
    10. '_' → logprob: -11.577326774597168

Token 101: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4742569923400879
    2. ' int' → logprob: -0.9742569923400879
    3. ' ' → logprob: -9.22425651550293
    4. '0' → logprob: -9.97425651550293
    5. '1' → logprob: -10.47425651550293
    6. '(int' → logprob: -12.59925651550293
    7. '  ' → logprob: -14.34925651550293
    8. '[int' → logprob: -14.59925651550293
    9. '	int' → logprob: -14.72425651550293
    10. ' None' → logprob: -14.72425651550293

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007021184079349041
    2. ':
' → logprob: -6.007020950317383
    3. '(' → logprob: -6.257020950317383
    4. '(self' → logprob: -6.382020950317383
    5. '):' → logprob: -8.382020950317383
    6. '(
' → logprob: -8.757020950317383
    7. '   ' → logprob: -9.007020950317383
    8. '():' → logprob: -9.007020950317383
    9. ' :' → logprob: -9.132020950317383
    10. '       ' → logprob: -9.757020950317383

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21773876249790192
    2. '0' → logprob: -1.7177387475967407
    3. '1' → logprob: -4.342738628387451
    4. '   ' → logprob: -6.467738628387451
    5. '2' → logprob: -6.842738628387451
    6. ' ' → logprob: -7.842738628387451
    7. '    ' → logprob: -9.71773910522461
    8. '4' → logprob: -10.09273910522461
    9. '3' → logprob: -11.34273910522461
    10. '     ' → logprob: -11.46773910522461

Token 104: ' counter' (ID: 9446)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22435912489891052
    2. '       ' → logprob: -1.974359154701233
    3. 'return' → logprob: -3.7243590354919434
    4. '   ' → logprob: -3.7243590354919434
    5. '1' → logprob: -4.349359035491943
    6. ' return' → logprob: -7.724359035491943
    7. ' ' → logprob: -7.849359035491943
    8. 'raise' → logprob: -9.474359512329102
    9. ' raise' → logprob: -11.599359512329102
    10. '2' → logprob: -12.099359512329102

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28372713923454285
    2. '=' → logprob: -1.5337271690368652
    3. ' +=' → logprob: -4.158727169036865
    4. ' ' → logprob: -4.658727169036865
    5. '.' → logprob: -5.533727169036865
    6. '+' → logprob: -7.158727169036865
    7. '_' → logprob: -7.658727169036865
    8. '+=' → logprob: -8.408726692199707
    9. ' .' → logprob: -8.908726692199707
    10. '    ' → logprob: -9.033726692199707

Token 106: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003939479123800993
    2. ' ' → logprob: -5.628939628601074
    3. '1' → logprob: -8.003939628601074
    4. '   ' → logprob: -12.253939628601074
    5. 'self' → logprob: -15.753939628601074
    6. ' self' → logprob: -16.253938674926758
    7. '  ' → logprob: -16.378938674926758
    8. '    ' → logprob: -17.003938674926758
    9. '       ' → logprob: -17.003938674926758
    10. '```' → logprob: -18.253938674926758

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001934469910338521
    2. '1' → logprob: -6.25193452835083
    3. ' ' → logprob: -12.501934051513672
    4. 'sum' → logprob: -14.126934051513672
    5. '(' → logprob: -14.626934051513672
    6. 'int' → logprob: -14.751934051513672
    7. '[' → logprob: -15.376934051513672
    8. '   ' → logprob: -16.001934051513672
    9. 'self' → logprob: -17.251934051513672
    10. '{' → logprob: -17.751934051513672

Token 108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2593247592449188
    2. '<|end|>' → logprob: -1.5093247890472412
    3. '<|end|>' → logprob: -5.634324550628662
    4. '
' → logprob: -5.884324550628662
    5. '   ' → logprob: -7.634324550628662
    6. ' ' → logprob: -8.88432502746582
    7. '        ' → logprob: -10.00932502746582
    8. ',' → logprob: -10.38432502746582
    9. '    ' → logprob: -10.63432502746582
    10. '	' → logprob: -10.75932502746582

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014747818000614643
    2. '   ' → logprob: -4.639747619628906
    3. '<|end|>' → logprob: -5.514747619628906
    4. '    ' → logprob: -8.139747619628906
    5. '
' → logprob: -8.389747619628906
    6. ' ' → logprob: -8.514747619628906
    7. '<|end|>' → logprob: -9.764747619628906
    8. '        ' → logprob: -10.389747619628906
    9. '...' → logprob: -10.889747619628906
    10. ' for' → logprob: -11.139747619628906

Token 110: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6437883377075195
    2. '       ' → logprob: -1.5187883377075195
    3. 'if' → logprob: -2.0187883377075195
    4. 'counter' → logprob: -2.8937883377075195
    5. 'return' → logprob: -3.3937883377075195
    6. '   ' → logprob: -3.6437883377075195
    7. 'def' → logprob: -5.5187883377075195
    8. ' for' → logprob: -6.1437883377075195
    9. ' if' → logprob: -7.1437883377075195
    10. ' counter' → logprob: -8.01878833770752

Token 111: ' Iterate' (ID: 129410)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7896742224693298
    2. 'for' → logprob: -0.9146742224693298
    3. '   ' → logprob: -3.2896742820739746
    4. 'return' → logprob: -3.5396742820739746
    5. ' if' → logprob: -3.6646742820739746
    6. ' for' → logprob: -3.9146742820739746
    7. '       ' → logprob: -4.039674282073975
    8. 'counter' → logprob: -4.914674282073975
    9. 'def' → logprob: -5.289674282073975
    10. '#' → logprob: -7.664674282073975

Token 112: ' over' (ID: 1072)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11065337806940079
    2. ' self' → logprob: -2.9856534004211426
    3. 'all' → logprob: -4.485653400421143
    4. ' all' → logprob: -4.735653400421143
    5. '   ' → logprob: -4.860653400421143
    6. ' ' → logprob: -5.485653400421143
    7. 'the' → logprob: -5.610653400421143
    8. ' the' → logprob: -6.110653400421143
    9. '1' → logprob: -6.110653400421143
    10. '[' → logprob: -6.235653400421143

Token 114: ' assignments' (ID: 41477)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -1.4742101430892944
    2. ' attributes' → logprob: -1.5992101430892944
    3. '   ' → logprob: -1.7242101430892944
    4. ' nodes' → logprob: -1.8492101430892944
    5. 'tokens' → logprob: -2.974210262298584
    6. ' parts' → logprob: -3.349210262298584
    7. ' the' → logprob: -3.474210262298584
    8. 'attributes' → logprob: -3.724210262298584
    9. ' variables' → logprob: -4.224210262298584
    10. ' lines' → logprob: -4.349210262298584

Token 115: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' P' (ID: 398)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.49483561515808105
    2. 'variables' → logprob: -2.244835615158081
    3. ' self' → logprob: -2.744835615158081
    4. 'self' → logprob: -2.869835615158081
    5. ' all' → logprob: -2.994835615158081
    6. ' the' → logprob: -3.494835615158081
    7. 'all' → logprob: -3.994835615158081
    8. 'variable' → logprob: -5.36983585357666
    9. 'range' → logprob: -5.36983585357666
    10. '3' → logprob: -5.49483585357666

Token 117: ',Q' (ID: 130136)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1868806630373001
    2. ' ,' → logprob: -2.936880588531494
    3. ' and' → logprob: -3.311880588531494
    4. ' for' → logprob: -3.811880588531494
    5. '<|end|>' → logprob: -4.561880588531494
    6. '   ' → logprob: -4.686880588531494
    7. ' ' → logprob: -4.936880588531494
    8. ' to' → logprob: -5.061880588531494
    9. ' in' → logprob: -5.436880588531494
    10. ':' → logprob: -5.686880588531494

Token 118: ',R' (ID: 48317)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6013599038124084
    2. '   ' → logprob: -1.7263598442077637
    3. '<|end|>' → logprob: -1.9763598442077637
    4. ' ' → logprob: -2.9763598442077637
    5. '       ' → logprob: -3.8513598442077637
    6. ' to' → logprob: -4.226359844207764
    7. '    ' → logprob: -4.476359844207764
    8. ' and' → logprob: -4.476359844207764
    9. ' for' → logprob: -4.851359844207764
    10. '  ' → logprob: -4.851359844207764

Token 119: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49371209740638733
    2. '   ' → logprob: -1.868712067604065
    3. ',' → logprob: -2.4937121868133545
    4. '<|end|>' → logprob: -2.6187121868133545
    5. ' for' → logprob: -3.7437121868133545
    6. '    ' → logprob: -4.118711948394775
    7. ' ' → logprob: -4.243711948394775
    8. '        ' → logprob: -5.368711948394775
    9. '  ' → logprob: -5.493711948394775
    10. ' to' → logprob: -6.118711948394775

Token 120: ' domain' (ID: 11819)
  Prédit: ' Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Truth' → logprob: -0.5070395469665527
    2. ' range' → logprob: -1.5070395469665527
    3. 'Truth' → logprob: -2.3820395469665527
    4. 'range' → logprob: -3.1320395469665527
    5. '[' → logprob: -3.6320395469665527
    6. ' [' → logprob: -5.757039546966553
    7. '[(' → logprob: -6.257039546966553
    8. ' (' → logprob: -6.632039546966553
    9. ' [(' → logprob: -6.757039546966553
    10. 'Formula' → logprob: -6.757039546966553

Token 121: ' {' (ID: 354)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03583415225148201
    2. '       ' → logprob: -4.035834312438965
    3. '<|end|>' → logprob: -4.535834312438965
    4. ' for' → logprob: -6.660834312438965
    5. '   ' → logprob: -7.035834312438965
    6. '        ' → logprob: -7.160834312438965
    7. ' 
' → logprob: -7.285834312438965
    8. '        
' → logprob: -7.410834312438965
    9. '' → logprob: -7.660834312438965
    10. '    ' → logprob: -7.785834312438965

Token 122: '0' (ID: 15)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.5362387299537659
    2. '0' → logprob: -1.286238670349121
    3. ' Truth' → logprob: -3.036238670349121
    4. 'False' → logprob: -3.161238670349121
    5. ' ' → logprob: -3.286238670349121
    6. '}' → logprob: -5.661238670349121
    7. '2' → logprob: -6.661238670349121
    8. ' False' → logprob: -7.036238670349121
    9. '3' → logprob: -7.848738670349121
    10. 'True' → logprob: -8.098738670349121

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7292167184641585e-05
    2. ' ,' → logprob: -10.250057220458984
    3. ',
' → logprob: -11.250057220458984
    4. '}' → logprob: -12.250057220458984
    5. ' ' → logprob: -14.000057220458984
    6. ',...' → logprob: -14.125057220458984
    7. '...' → logprob: -14.500057220458984
    8. '<|end|>' → logprob: -15.000057220458984
    9. '},' → logprob: -15.125057220458984
    10. '```' → logprob: -15.375057220458984

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04863335192203522
    2. ' ' → logprob: -3.048633337020874
    3. '
' → logprob: -10.923633575439453
    4. '2' → logprob: -11.048633575439453
    5. '

' → logprob: -12.298633575439453
    6. ',' → logprob: -12.673633575439453
    7. '```' → logprob: -14.361133575439453
    8. '   ' → logprob: -14.486133575439453
    9. '  ' → logprob: -14.548633575439453
    10. ' 
' → logprob: -14.673633575439453

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1865795999765396
    2. '}' → logprob: -1.8115795850753784
    3. '2' → logprob: -5.061579704284668
    4. ' ,' → logprob: -8.061579704284668
    5. ' }' → logprob: -9.436579704284668
    6. '},' → logprob: -10.436579704284668
    7. '0' → logprob: -11.811579704284668
    8. '   ' → logprob: -11.936579704284668
    9. ' ' → logprob: -12.311579704284668
    10. '}:' → logprob: -12.561579704284668

Token 126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007143391412682831
    2. ' ' → logprob: -7.250714302062988
    3. ',' → logprob: -12.875714302062988
    4. '}' → logprob: -14.875714302062988
    5. '   ' → logprob: -14.875714302062988
    6. '
' → logprob: -15.000714302062988
    7. '

' → logprob: -15.938214302062988
    8. '```' → logprob: -15.938214302062988
    9. '  ' → logprob: -16.000715255737305
    10. '...' → logprob: -16.250715255737305

Token 127: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.019945161417126656
    2. ' }' → logprob: -4.64494514465332
    3. ',' → logprob: -5.26994514465332
    4. '}
' → logprob: -6.14494514465332
    5. '   ' → logprob: -6.14494514465332
    6. '       ' → logprob: -7.89494514465332
    7. ' }
' → logprob: -9.14494514465332
    8. '}:' → logprob: -9.39494514465332
    9. ' ' → logprob: -10.64494514465332
    10. ' ,' → logprob: -10.76994514465332

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003726207185536623
    2. '   ' → logprob: -6.503726005554199
    3. '<|end|>' → logprob: -7.003726005554199
    4. '
' → logprob: -7.878726005554199
    5. '    ' → logprob: -8.6287260055542
    6. '        ' → logprob: -9.0037260055542
    7. '        
' → logprob: -9.0037260055542
    8. ' for' → logprob: -9.6287260055542
    9. ' ' → logprob: -9.6287260055542
    10. ',' → logprob: -9.6287260055542

Token 129: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3953614830970764
    2. 'for' (adapté à ' for') → logprob: -1.5203614234924316
    3. '
' → logprob: -3.1453614234924316
    4. '   ' → logprob: -3.7703614234924316
    5. 'result' → logprob: -3.7703614234924316
    6. ' result' → logprob: -4.520361423492432
    7. '       ' → logprob: -5.270361423492432
    8. ' ' → logprob: -7.895361423492432
    9. 'counter' → logprob: -8.02036190032959
    10. 'from' → logprob: -8.27036190032959

Token 130: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4426208436489105
    2. ' P' → logprob: -1.067620873451233
    3. 'p' → logprob: -5.067620754241943
    4. ' ' → logprob: -5.567620754241943
    5. 'P' → logprob: -5.817620754241943
    6. ' i' → logprob: -8.942621231079102
    7. ' x' → logprob: -8.942621231079102
    8. ' t' → logprob: -9.067621231079102
    9. ' v' → logprob: -10.067621231079102
    10. '  ' → logprob: -10.130121231079102

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021349966526031494
    2. ',' → logprob: -4.146349906921387
    3. 'in' → logprob: -6.021349906921387
    4. ' ' → logprob: -6.771349906921387
    5. ' ,' → logprob: -6.896349906921387
    6. '  ' → logprob: -8.146349906921387
    7. '   ' → logprob: -9.271349906921387
    8. 'alue' → logprob: -9.646349906921387
    9. '_' → logprob: -10.146349906921387
    10. ' i' → logprob: -10.146349906921387

Token 132: ' Truth' (ID: 47310)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.39242544770240784
    2. ' Truth' → logprob: -1.1424254179000854
    3. ' range' → logprob: -5.392425537109375
    4. 'range' → logprob: -7.142425537109375
    5. 'Range' → logprob: -8.892425537109375
    6. ' ' → logprob: -10.642425537109375
    7. 'True' → logprob: -11.767425537109375
    8. '[' → logprob: -11.767425537109375
    9. '   ' → logprob: -12.267425537109375
    10. 'Truthy' → logprob: -13.142425537109375

Token 133: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.7432603272027336e-06
    2. 'Val' → logprob: -13.875001907348633
    3. '	Value' → logprob: -14.500001907348633
    4. ' Value' → logprob: -16.625001907348633
    5. '.Value' → logprob: -17.125001907348633
    6. '_Value' → logprob: -19.125001907348633
    7. 'Vale' → logprob: -19.250001907348633
    8. 'value' → logprob: -19.625001907348633
    9. 'Valor' → logprob: -19.750001907348633
    10. '_value' → logprob: -20.125001907348633

Token 134: '.DOM' (ID: 136073)
  Prédit: '.DOM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.DOM' → logprob: -0.04584559425711632
    2. '.' → logprob: -3.1708455085754395
    3. '.D' → logprob: -6.2958455085754395
    4. ' .' → logprob: -7.5458455085754395
    5. 'DOMAIN' → logprob: -7.7958455085754395
    6. '.DO' → logprob: -11.295845985412598
    7. ' DOMAIN' → logprob: -11.545845985412598
    8. '.Domain' → logprob: -11.545845985412598
    9. '._' → logprob: -11.920845985412598
    10. '_DOMAIN' → logprob: -12.295845985412598

Token 135: 'AIN' (ID: 19881)
  Prédit: 'AIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AIN' → logprob: -3.128163257315464e-07
    2. 'A' → logprob: -16.125
    3. '   ' → logprob: -16.875
    4. 'ain' → logprob: -17.625
    5. '
' → logprob: -18.0
    6. 'AI' → logprob: -18.875
    7. '

' → logprob: -19.125
    8. '```' → logprob: -19.125
    9. '    
' → logprob: -20.0
    10. 'MAIN' → logprob: -20.125

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010342398309148848
    2. ',' → logprob: -10.125102996826172
    3. ' :' → logprob: -10.125102996826172
    4. ':
' → logprob: -11.000102996826172
    5. '   ' → logprob: -12.250102996826172
    6. ' for' → logprob: -14.875102996826172
    7. '):' → logprob: -15.125102996826172
    8. '<|end|>' → logprob: -15.125102996826172
    9. ' in' → logprob: -16.250102996826172
    10. '.' → logprob: -16.375102996826172

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6052732467651367
    2. ' for' → logprob: -1.2302732467651367
    3. '       ' → logprob: -2.3552732467651367
    4. '        ' → logprob: -3.7302732467651367
    5. '<|end|>' → logprob: -4.480273246765137
    6. 'for' → logprob: -4.730273246765137
    7. ' ' → logprob: -4.855273246765137
    8. '            ' → logprob: -5.105273246765137
    9. '               ' → logprob: -5.480273246765137
    10. ',' → logprob: -6.980273246765137

Token 138: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14487013220787048
    2. 'for' (adapté à ' for') → logprob: -2.0198700428009033
    3. '               ' → logprob: -6.394870281219482
    4. '       ' → logprob: -8.519869804382324
    5. '           ' → logprob: -8.769869804382324
    6. ' ' → logprob: -9.519869804382324
    7. '   ' → logprob: -10.019869804382324
    8. ' ' → logprob: -10.519869804382324
    9. '	for' → logprob: -11.394869804382324
    10. '            ' → logprob: -13.019869804382324

Token 139: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.02327227033674717
    2. 'q' → logprob: -3.7732722759246826
    3. ' ' → logprob: -10.648272514343262
    4. '_q' → logprob: -13.523272514343262
    5. '	q' → logprob: -14.023272514343262
    6. ' ' → logprob: -15.523272514343262
    7. '_' → logprob: -15.773272514343262
    8. ',q' → logprob: -16.398271560668945
    9. ')' → logprob: -16.523271560668945
    10. ''q' → logprob: -16.898271560668945

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012067806674167514
    2. 'in' → logprob: -6.751206874847412
    3. ' ' → logprob: -10.251206398010254
    4. ' ' → logprob: -14.501206398010254
    5. ' i' → logprob: -15.251206398010254
    6. 'space' → logprob: -16.00120735168457
    7. '  ' → logprob: -16.37620735168457
    8. '<|end|>' → logprob: -17.00120735168457
    9. 'i' → logprob: -17.31370735168457
    10. ',' → logprob: -17.56370735168457

Token 141: ' Truth' (ID: 47310)
  Prédit: ' Truth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Truth' → logprob: -0.0059302207082509995
    2. 'Truth' → logprob: -5.130930423736572
    3. ' truth' → logprob: -13.880929946899414
    4. '_truth' → logprob: -14.505929946899414
    5. 'Truthy' → logprob: -16.880929946899414
    6. ' True' → logprob: -17.005929946899414
    7. ' ' → logprob: -18.005929946899414
    8. ' Thought' → logprob: -18.255929946899414
    9. 'truth' → logprob: -18.755929946899414
    10. ' Trust' → logprob: -19.255929946899414

Token 142: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.0087516784551553e-05
    2. 'Val' → logprob: -11.62501049041748
    3. 'value' → logprob: -14.12501049041748
    4. 'alue' → logprob: -16.000009536743164
    5. '	Value' → logprob: -16.375009536743164
    6. ' Value' → logprob: -17.375009536743164
    7. 'val' → logprob: -17.500009536743164
    8. 'VALUE' → logprob: -17.875009536743164
    9. '_VALUE' → logprob: -18.125009536743164
    10. '_value' → logprob: -18.125009536743164

Token 143: '.DOM' (ID: 136073)
  Prédit: '.DOM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.DOM' → logprob: -0.00046451209345832467
    2. '.' → logprob: -7.87546443939209
    3. '.DO' → logprob: -10.25046443939209
    4. 'DOMAIN' → logprob: -10.62546443939209
    5. '.D' → logprob: -11.25046443939209
    6. ' .' → logprob: -12.37546443939209
    7. '.Domain' → logprob: -13.00046443939209
    8. '   ' → logprob: -14.25046443939209
    9. '.Dom' → logprob: -14.25046443939209
    10. 'DOM' → logprob: -14.50046443939209

Token 144: 'AIN' (ID: 19881)
  Prédit: 'AIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AIN' → logprob: -5.9153885558771435e-06
    2. 'A' → logprob: -13.000005722045898
    3. 'ain' → logprob: -13.375005722045898
    4. '   ' → logprob: -14.000005722045898
    5. 'MAIN' → logprob: -15.250005722045898
    6. 'AI' → logprob: -15.375005722045898
    7. 'AN' → logprob: -16.1250057220459
    8. ' ' → logprob: -16.3750057220459
    9. '    
' → logprob: -16.5000057220459
    10. '  ' → logprob: -16.6250057220459

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06727812439203262
    2. '               ' → logprob: -2.8172781467437744
    3. '           ' → logprob: -5.692277908325195
    4. ':
' → logprob: -6.692277908325195
    5. ' for' → logprob: -8.192277908325195
    6. '<|end|>' → logprob: -9.192277908325195
    7. ' in' → logprob: -9.317277908325195
    8. '       ' → logprob: -10.192277908325195
    9. 'for' → logprob: -10.192277908325195
    10. ',' → logprob: -10.317277908325195

Token 146: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26221373677253723
    2. '               ' → logprob: -1.5122137069702148
    3. ' for' → logprob: -5.262213706970215
    4. '            ' → logprob: -5.887213706970215
    5. '		' → logprob: -6.762213706970215
    6. 'for' → logprob: -8.137213706970215
    7. '       ' → logprob: -8.262213706970215
    8. ' ' → logprob: -8.762213706970215
    9. '	       ' → logprob: -9.262213706970215
    10. '             ' → logprob: -10.012213706970215

Token 147: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2574473023414612
    2. 'for' (adapté à ' for') → logprob: -2.1324472427368164
    3. '               ' → logprob: -2.5074472427368164
    4. '           ' → logprob: -3.6324472427368164
    5. '            ' → logprob: -8.382447242736816
    6. ' ' → logprob: -9.632447242736816
    7. '                   ' → logprob: -10.132447242736816
    8. '                ' → logprob: -10.257447242736816
    9. '	for' → logprob: -10.632447242736816
    10. ' ' → logprob: -10.757447242736816

Token 148: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.575939953327179
    2. ' r' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.700940132141113
    4. '   ' → logprob: -16.200939178466797
    5. '	r' → logprob: -16.450939178466797
    6. '_r' → logprob: -16.450939178466797
    7. ' ' → logprob: -17.075939178466797
    8. '```' → logprob: -17.075939178466797
    9. '  ' → logprob: -17.200939178466797
    10. '    ' → logprob: -18.200939178466797

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010524577228352427
    2. 'in' → logprob: -6.876052379608154
    3. ' ' → logprob: -10.876052856445312
    4. ' i' → logprob: -15.626052856445312
    5. ' ' → logprob: -16.376052856445312
    6. '<|end|>' → logprob: -16.501052856445312
    7. 'space' → logprob: -16.626052856445312
    8. '_' → logprob: -16.626052856445312
    9. '	in' → logprob: -16.626052856445312
    10. 'In' → logprob: -16.751052856445312

Token 150: ' Truth' (ID: 47310)
  Prédit: ' Truth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Truth' → logprob: -0.02975604310631752
    2. 'Truth' → logprob: -3.5297560691833496
    3. '_truth' → logprob: -13.029755592346191
    4. 'Truthy' → logprob: -13.154755592346191
    5. ' truth' → logprob: -14.029755592346191
    6. ' ' → logprob: -15.529755592346191
    7. ' True' → logprob: -16.279756546020508
    8. ' ' → logprob: -16.404756546020508
    9. 'truth' → logprob: -16.904756546020508
    10. 'True' → logprob: -17.529756546020508

Token 151: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -4.320199877838604e-07
    2. 'Val' → logprob: -14.75
    3. 'value' → logprob: -16.875
    4. 'alue' → logprob: -17.125
    5. '	Value' → logprob: -18.0
    6. '_value' → logprob: -19.5
    7. 'VALUE' → logprob: -19.5
    8. 'Vale' → logprob: -20.0
    9. ' Value' → logprob: -20.625
    10. '_Value' → logprob: -20.625

Token 152: '.DOM' (ID: 136073)
  Prédit: '.DOM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.DOM' → logprob: -6.146429223008454e-05
    2. '.' → logprob: -10.75006103515625
    3. '.D' → logprob: -11.12506103515625
    4. '.DO' → logprob: -11.25006103515625
    5. 'DOMAIN' → logprob: -12.25006103515625
    6. ' .' → logprob: -12.62506103515625
    7. '.Domain' → logprob: -13.75006103515625
    8. '.Dom' → logprob: -14.12506103515625
    9. '   ' → logprob: -14.87506103515625
    10. '.DAL' → logprob: -15.00006103515625

Token 153: 'AIN' (ID: 19881)
  Prédit: 'AIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AIN' → logprob: -7.3458322731312364e-06
    2. 'ain' → logprob: -12.125007629394531
    3. 'A' → logprob: -14.125007629394531
    4. 'AN' → logprob: -14.750007629394531
    5. 'AI' → logprob: -15.750007629394531
    6. '   ' → logprob: -15.750007629394531
    7. 'MAIN' → logprob: -16.37500762939453
    8. 'IN' → logprob: -16.50000762939453
    9. 'HAIN' → logprob: -17.75000762939453
    10. '```' → logprob: -17.75000762939453

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025505772791802883
    2. '                   ' → logprob: -6.6275506019592285
    3. ':
' → logprob: -6.7525506019592285
    4. ',' → logprob: -10.75255012512207
    5. '               ' → logprob: -11.50255012512207
    6. '                       ' → logprob: -11.87755012512207
    7. ' :' → logprob: -12.12755012512207
    8. '           ' → logprob: -12.62755012512207
    9. '):' → logprob: -13.12755012512207
    10. '<|end|>' → logprob: -13.25255012512207

Token 155: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013278931379318237
    2. '           ' → logprob: -5.138278961181641
    3. '               ' → logprob: -5.263278961181641
    4. '                       ' → logprob: -7.013278961181641
    5. '                    ' → logprob: -8.26327896118164
    6. '   ' → logprob: -8.88827896118164
    7. ' if' → logprob: -9.01327896118164
    8. '       ' → logprob: -9.13827896118164
    9. '                    
' → logprob: -9.38827896118164
    10. '                ' → logprob: -9.38827896118164

Token 156: ' assignment' (ID: 24618)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9943894147872925
    2. 'assignment' (adapté à ' assignment') → logprob: -0.9943894147872925
    3. ' assignment' → logprob: -1.8693894147872925
    4. ' if' → logprob: -3.119389533996582
    5. '                   ' → logprob: -3.244389533996582
    6. 'if' → logprob: -4.494389533996582
    7. ' counter' → logprob: -6.119389533996582
    8. 'counter' → logprob: -6.619389533996582
    9. '               ' → logprob: -6.744389533996582
    10. '                        
' → logprob: -7.244389533996582

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3153083026409149
    2. ' =' → logprob: -1.3153083324432373
    3. '[' → logprob: -6.565308094024658
    4. '['' → logprob: -7.565308094024658
    5. '["' → logprob: -9.565308570861816
    6. '={'' → logprob: -10.815308570861816
    7. '={"' → logprob: -11.315308570861816
    8. ')' → logprob: -12.440308570861816
    9. ']' → logprob: -13.440308570861816
    10. '   ' → logprob: -13.690308570861816

Token 158: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.08456171303987503
    2. '{"' → logprob: -2.584561824798584
    3. ' {'' → logprob: -5.209561824798584
    4. '{' → logprob: -8.959561347961426
    5. ' {"' → logprob: -9.834561347961426
    6. '{
' → logprob: -11.834561347961426
    7. '({'' → logprob: -13.709561347961426
    8. '   ' → logprob: -14.084561347961426
    9. ' {' → logprob: -15.209561347961426
    10. ' ' → logprob: -16.209562301635742

Token 159: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0006533435662277043
    2. 'p' → logprob: -7.875653266906738
    3. ''' → logprob: -8.250653266906738
    4. ''p' → logprob: -11.750653266906738
    5. '"P' → logprob: -13.250653266906738
    6. ' P' → logprob: -13.500653266906738
    7. ')' → logprob: -15.625653266906738
    8. '   ' → logprob: -16.000654220581055
    9. '"' → logprob: -16.000654220581055
    10. '')' → logprob: -16.250654220581055

Token 160: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.015756424516439438
    2. ':' → logprob: -4.390756607055664
    3. '<|end|>' → logprob: -6.140756607055664
    4. ''' → logprob: -7.265756607055664
    5. ',' → logprob: -9.640756607055664
    6. '   ' → logprob: -9.890756607055664
    7. ' ':' → logprob: -10.015756607055664
    8. '```' → logprob: -10.515756607055664
    9. '',' → logprob: -10.640756607055664
    10. '':'' → logprob: -10.765756607055664

Token 161: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.061967797577381134
    2. ' p' → logprob: -2.8119678497314453
    3. '   ' → logprob: -17.811967849731445
    4. '	p' → logprob: -17.811967849731445
    5. ' ' → logprob: -17.936967849731445
    6. ''p' → logprob: -18.061967849731445
    7. '<p' → logprob: -18.186967849731445
    8. ')p' → logprob: -18.436967849731445
    9. '    ' → logprob: -18.686967849731445
    10. '_p' → logprob: -19.061967849731445

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0042351046577095985
    2. ','' → logprob: -5.62923526763916
    3. ' ,' → logprob: -7.75423526763916
    4. '                   ' → logprob: -8.62923526763916
    5. '',' → logprob: -11.75423526763916
    6. ' ,'' → logprob: -11.87923526763916
    7. '                       ' → logprob: -13.00423526763916
    8. ',
' → logprob: -13.00423526763916
    9. ''' → logprob: -13.12923526763916
    10. ',"' → logprob: -14.12923526763916

Token 163: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.3501597046852112
    2. ''' → logprob: -1.2251596450805664
    3. '<|end|>' → logprob: -7.475159645080566
    4. '                   ' → logprob: -8.100159645080566
    5. ' ' → logprob: -8.725159645080566
    6. '                             ' → logprob: -9.100159645080566
    7. '                            ' → logprob: -9.225159645080566
    8. '                           ' → logprob: -9.725159645080566
    9. '                        ' → logprob: -9.725159645080566
    10. '                    ' → logprob: -9.725159645080566

Token 164: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0019355426775291562
    2. ''' → logprob: -6.2519354820251465
    3. ' Q' → logprob: -12.001935958862305
    4. ''q' → logprob: -15.001935958862305
    5. '	Q' → logprob: -15.501935958862305
    6. '<Q' → logprob: -16.126935958862305
    7. ''s' → logprob: -17.501935958862305
    8. ',Q' → logprob: -17.751935958862305
    9. '"' → logprob: -18.126935958862305
    10. '   ' → logprob: -18.126935958862305

Token 165: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5766099095344543
    2. '':' → logprob: -0.8266099095344543
    3. ' :' → logprob: -8.07660961151123
    4. ',' → logprob: -8.70160961151123
    5. ''' → logprob: -9.70160961151123
    6. '',' → logprob: -9.82660961151123
    7. '<|end|>' → logprob: -10.95160961151123
    8. '':'' → logprob: -11.20160961151123
    9. ' ':' → logprob: -11.57660961151123
    10. ''s' → logprob: -11.95160961151123

Token 166: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.14285673201084137
    2. ' q' → logprob: -2.0178568363189697
    3. 'r' → logprob: -8.76785659790039
    4. ' r' → logprob: -10.76785659790039
    5. ''q' → logprob: -12.64285659790039
    6. '	q' → logprob: -14.26785659790039
    7. ' ' → logprob: -15.64285659790039
    8. '   ' → logprob: -15.64285659790039
    9. '    ' → logprob: -15.89285659790039
    10. ''' → logprob: -16.39285659790039

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005867527215741575
    2. ' ,' → logprob: -8.25058650970459
    3. ','' → logprob: -8.62558650970459
    4. '                   ' → logprob: -9.00058650970459
    5. '',' → logprob: -11.50058650970459
    6. '                       ' → logprob: -12.87558650970459
    7. ',
' → logprob: -12.87558650970459
    8. '}' → logprob: -13.25058650970459
    9. '<|end|>' → logprob: -13.62558650970459
    10. ''' → logprob: -13.87558650970459

Token 168: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02543148212134838
    2. ' '' → logprob: -4.0254316329956055
    3. ''S' → logprob: -5.6504316329956055
    4. '                   ' → logprob: -6.4004316329956055
    5. '                       ' → logprob: -6.7754316329956055
    6. '                      ' → logprob: -9.025431632995605
    7. '                     ' → logprob: -9.150431632995605
    8. '                        ' → logprob: -9.150431632995605
    9. ''A' → logprob: -9.275431632995605
    10. '               ' → logprob: -9.525431632995605

Token 169: 'R' (ID: 49)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00021331508469302207
    2. ' r' → logprob: -8.875213623046875
    3. ''r' → logprob: -9.875213623046875
    4. 'R' → logprob: -10.875213623046875
    5. ''' → logprob: -12.750213623046875
    6. '           ' → logprob: -17.375213623046875
    7. '   ' → logprob: -17.875213623046875
    8. ''s' → logprob: -17.875213623046875
    9. '_r' → logprob: -18.000213623046875
    10. '}' → logprob: -18.000213623046875

Token 170: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.020840702578425407
    2. ':' → logprob: -3.895840644836426
    3. ' :' → logprob: -9.395840644836426
    4. ''' → logprob: -9.395840644836426
    5. '<|end|>' → logprob: -10.395840644836426
    6. ' ':' → logprob: -10.520840644836426
    7. '":' → logprob: -11.020840644836426
    8. ''s' → logprob: -11.520840644836426
    9. ''):' → logprob: -11.770840644836426
    10. '):' → logprob: -12.395840644836426

Token 171: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.28115466237068176
    2. ' r' → logprob: -1.4061546325683594
    3. 'q' → logprob: -13.78115463256836
    4. ' ' → logprob: -13.90615463256836
    5. '   ' → logprob: -14.15615463256836
    6. '    ' → logprob: -15.28115463256836
    7. '           ' → logprob: -15.90615463256836
    8. '       ' → logprob: -15.90615463256836
    9. '  ' → logprob: -16.03115463256836
    10. ' q' → logprob: -16.03115463256836

Token 172: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.01807115599513054
    2. '}
' → logprob: -4.268071174621582
    3. '                   ' → logprob: -5.643071174621582
    4. ',' → logprob: -8.643071174621582
    5. ' }' → logprob: -9.893071174621582
    6. '}
' → logprob: -9.893071174621582
    7. '                       ' → logprob: -10.518071174621582
    8. '               ' → logprob: -10.643071174621582
    9. ' }
' → logprob: -12.393071174621582
    10. '}

' → logprob: -12.393071174621582

Token 173: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010281658032909036
    2. '               ' → logprob: -7.751028060913086
    3. 'if' → logprob: -8.626028060913086
    4. ' if' → logprob: -9.126028060913086
    5. '           ' → logprob: -9.626028060913086
    6. '                    
' → logprob: -9.751028060913086
    7. '                       ' → logprob: -10.626028060913086
    8. '                    ' → logprob: -10.751028060913086
    9. '                  ' → logprob: -10.876028060913086
    10. '
' → logprob: -10.876028060913086

Token 174: ' val' (ID: 1459)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21126435697078705
    2. 'counter' → logprob: -1.9612643718719482
    3. '                   ' → logprob: -3.4612643718719482
    4. ' if' → logprob: -4.336264133453369
    5. 'result' → logprob: -6.336264133453369
    6. ' counter' → logprob: -6.461264133453369
    7. '
' → logprob: -7.086264133453369
    8. 'value' → logprob: -7.836264133453369
    9. '               ' → logprob: -8.586264610290527
    10. '                       ' → logprob: -9.336264610290527

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22623324394226074
    2. ' =' → logprob: -1.6012332439422607
    3. '   ' → logprob: -8.10123348236084
    4. '                   ' → logprob: -8.85123348236084
    5. 'uate' → logprob: -9.35123348236084
    6. 'ue' → logprob: -9.60123348236084
    7. '       ' → logprob: -9.85123348236084
    8. 'uator' → logprob: -10.35123348236084
    9. ' ' → logprob: -10.47623348236084
    10. '           ' → logprob: -10.72623348236084

Token 176: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04859782010316849
    2. ' self' → logprob: -3.048597812652588
    3. '                   ' → logprob: -12.173598289489746
    4. '
' → logprob: -13.173598289489746
    5. '(self' → logprob: -13.173598289489746
    6. '                       ' → logprob: -14.923598289489746
    7. '[self' → logprob: -15.298598289489746
    8. '	self' → logprob: -15.423598289489746
    9. '```' → logprob: -16.17359733581543
    10. '_self' → logprob: -16.29859733581543

Token 177: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0024800582323223352
    2. '.' → logprob: -6.0024800300598145
    3. 'evaluate' → logprob: -13.002480506896973
    4. ' .' → logprob: -13.627480506896973
    5. '.calculate' → logprob: -15.002480506896973
    6. '.validate' → logprob: -15.127480506896973
    7. '.e' → logprob: -16.252479553222656
    8. '.execute' → logprob: -16.502479553222656
    9. '.eval' → logprob: -16.502479553222656
    10. '.count' → logprob: -17.127479553222656

Token 178: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.774276774493046e-05
    2. ' (' → logprob: -10.250038146972656
    3. '(
' → logprob: -13.875038146972656
    4. '(assign' → logprob: -13.875038146972656
    5. 'assignment' → logprob: -16.000038146972656
    6. '(

' → logprob: -16.125038146972656
    7. '((' → logprob: -16.375038146972656
    8. ' ' → logprob: -17.000038146972656
    9. '(`' → logprob: -18.625038146972656
    10. '(a' → logprob: -18.750038146972656

Token 179: 'assignment' (ID: 78785)
  Prédit: 'assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -0.00020497082732617855
    2. ' assignment' → logprob: -8.500205039978027
    3. 'assign' → logprob: -14.375205039978027
    4. ')' → logprob: -14.750205039978027
    5. '.assignment' → logprob: -15.250205039978027
    6. '                   ' → logprob: -16.62520408630371
    7. '   ' → logprob: -17.00020408630371
    8. '
' → logprob: -17.25020408630371
    9. ' ' → logprob: -17.75020408630371
    10. '_assignment' → logprob: -17.87520408630371

Token 180: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12893733382225037
    2. ')
' → logprob: -2.128937244415283
    3. '                   ' → logprob: -6.253937244415283
    4. ')
' → logprob: -10.128937721252441
    5. ' )' → logprob: -11.378937721252441
    6. '               ' → logprob: -11.503937721252441
    7. ')

' → logprob: -12.128937721252441
    8. ')==' → logprob: -12.128937721252441
    9. ' )
' → logprob: -12.253937721252441
    10. '                       ' → logprob: -13.503937721252441

Token 181: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.68153518543113e-05
    2. '           ' → logprob: -11.250057220458984
    3. '               ' → logprob: -11.250057220458984
    4. '       ' → logprob: -11.500057220458984
    5. '                    
' → logprob: -11.500057220458984
    6. '                  ' → logprob: -12.500057220458984
    7. '                    ' → logprob: -13.250057220458984
    8. '
' → logprob: -13.750057220458984
    9. '                       ' → logprob: -14.000057220458984
    10. '         ' → logprob: -14.625057220458984

Token 182: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31524211168289185
    2. '                   ' → logprob: -1.940242052078247
    3. 'counter' → logprob: -2.315242052078247
    4. ' if' → logprob: -3.690242052078247
    5. ' counter' → logprob: -6.065242290496826
    6. '
' → logprob: -8.690241813659668
    7. '           ' → logprob: -8.815241813659668
    8. '               ' → logprob: -9.190241813659668
    9. '       ' → logprob: -9.315241813659668
    10. '```' → logprob: -9.815241813659668

Token 183: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.001502598519437015
    2. 'val' → logprob: -6.501502513885498
    3. '(val' → logprob: -16.626502990722656
    4. '	val' → logprob: -16.626502990722656
    5. ' ' → logprob: -17.251502990722656
    6. '[val' → logprob: -18.126502990722656
    7. '                    ' → logprob: -18.376502990722656
    8. ' va' → logprob: -18.376502990722656
    9. '                   ' → logprob: -19.251502990722656
    10. 'v' → logprob: -19.251502990722656

Token 184: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10022500902414322
    2. '==' → logprob: -2.3502249717712402
    3. '=' → logprob: -11.600225448608398
    4. ' ' → logprob: -12.725225448608398
    5. ' ' → logprob: -13.100225448608398
    6. '[' → logprob: -13.725225448608398
    7. '===' → logprob: -14.475225448608398
    8. '==
' → logprob: -14.850225448608398
    9. ' =' → logprob: -14.975225448608398
    10. ')==' → logprob: -15.100225448608398

Token 185: ' Truth' (ID: 47310)
  Prédit: ' Truth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Truth' → logprob: -0.03808968514204025
    2. 'Truth' → logprob: -3.2880897521972656
    3. ' ' → logprob: -10.663089752197266
    4. ' True' → logprob: -11.288089752197266
    5. '2' → logprob: -12.413089752197266
    6. 'True' → logprob: -12.663089752197266
    7. 'Truthy' → logprob: -13.538089752197266
    8. '    ' → logprob: -14.038089752197266
    9. '   ' → logprob: -14.163089752197266
    10. ' truth' → logprob: -14.538089752197266

Token 186: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -6.704273118884885e-07
    2. 'Val' → logprob: -15.125000953674316
    3. '	Value' → logprob: -15.750000953674316
    4. 'True' → logprob: -16.5
    5. '   ' → logprob: -17.5
    6. 'Vale' → logprob: -18.125
    7. ' Value' → logprob: -18.5
    8. '_VALUE' → logprob: -18.625
    9. 'VALUE' → logprob: -18.875
    10. '_Value' → logprob: -19.375

Token 187: '.TRUE' (ID: 127017)
  Prédit: '.TRUE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.TRUE' → logprob: -0.011242696084082127
    2. '.' → logprob: -4.511242866516113
    3. '.FALSE' → logprob: -8.886242866516113
    4. ' .' → logprob: -10.261242866516113
    5. 'TRUE' → logprob: -11.261242866516113
    6. '   ' → logprob: -12.511242866516113
    7. '_TRUE' → logprob: -12.761242866516113
    8. '.true' → logprob: -14.261242866516113
    9. '.True' → logprob: -14.511242866516113
    10. '.TR' → logprob: -14.886242866516113

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07890576124191284
    2. ':
' → logprob: -2.5789058208465576
    3. ':
' → logprob: -12.203906059265137
    4. '):
' → logprob: -13.203906059265137
    5. '                       ' → logprob: -13.203906059265137
    6. ' :' → logprob: -13.453906059265137
    7. ' :
' → logprob: -13.453906059265137
    8. ':

' → logprob: -13.703906059265137
    9. '       ' → logprob: -13.828906059265137
    10. '):' → logprob: -14.078906059265137

Token 189: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0019022206543013453
    2. ' counter' → logprob: -6.751902103424072
    3. 'counter' → logprob: -7.376902103424072
    4. '
' → logprob: -10.25190258026123
    5. '                   ' → logprob: -10.50190258026123
    6. '               ' → logprob: -10.75190258026123
    7. '                        
' → logprob: -12.25190258026123
    8. '                           ' → logprob: -12.50190258026123
    9. '                      ' → logprob: -13.50190258026123
    10. '1' → logprob: -13.50190258026123

Token 190: ' counter' (ID: 9446)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.017998570576310158
    2. ' counter' → logprob: -4.642998695373535
    3. 'counter' (adapté à ' counter') → logprob: -5.392998695373535
    4. '                   ' → logprob: -5.767998695373535
    5. '               ' → logprob: -7.892998695373535
    6. '                           ' → logprob: -10.142998695373535
    7. '
' → logprob: -10.517998695373535
    8. '       ' → logprob: -10.517998695373535
    9. '	counter' → logprob: -11.017998695373535
    10. '           ' → logprob: -11.392998695373535

Token 191: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.42893388867378235
    2. '+=' → logprob: -1.05393385887146
    3. '+' → logprob: -8.553934097290039
    4. ']+=' → logprob: -11.178934097290039
    5. '=' → logprob: -11.303934097290039
    6. ' ' → logprob: -13.303934097290039
    7. '<|end|>' → logprob: -13.803934097290039
    8. '+="' → logprob: -13.803934097290039
    9. ')' → logprob: -13.928934097290039
    10. '+='' → logprob: -14.053934097290039

Token 192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.879077911376953
    4. ' ' → logprob: -19.379077911376953
    5. '```' → logprob: -20.129077911376953
    6. '                       ' → logprob: -21.004077911376953
    7. '                   ' → logprob: -21.254077911376953
    8. '           ' → logprob: -21.504077911376953
    9. '  ' → logprob: -21.629077911376953
    10. '
' → logprob: -21.754077911376953

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.625003814697266
    4. '```' → logprob: -20.625003814697266
    5. '
' → logprob: -21.000003814697266
    6. '  ' → logprob: -21.125003814697266
    7. '           ' → logprob: -21.375003814697266
    8. '１' → logprob: -22.000003814697266
    9. '۱' → logprob: -22.125003814697266
    10. '       ' → logprob: -22.250003814697266

Token 194: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4307194650173187
    2. '
' → logprob: -1.0557194948196411
    3. 'return' → logprob: -7.180719375610352
    4. '
' → logprob: -7.805719375610352
    5. ' return' → logprob: -7.805719375610352
    6. '   ' → logprob: -8.180719375610352
    7. '               ' → logprob: -10.430719375610352
    8. '        
' → logprob: -10.430719375610352
    9. '           ' → logprob: -10.555719375610352
    10. '    
' → logprob: -11.430719375610352

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016229336615651846
    2. 'return' → logprob: -6.876623153686523
    3. '   ' → logprob: -7.626623153686523
    4. ' return' → logprob: -9.501623153686523
    5. '
' → logprob: -11.376623153686523
    6. '           ' → logprob: -11.876623153686523
    7. '               ' → logprob: -12.376623153686523
    8. '	' → logprob: -13.376623153686523
    9. '      ' → logprob: -13.876623153686523
    10. '```' → logprob: -13.876623153686523

Token 196: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6397284865379333
    2. '       ' → logprob: -1.1397285461425781
    3. 'return' (adapté à ' return') → logprob: -1.8897285461425781
    4. ' return' → logprob: -6.514728546142578
    5. '	return' → logprob: -9.889728546142578
    6. '           ' → logprob: -12.264728546142578
    7. '               ' → logprob: -13.014728546142578
    8. ' ' → logprob: -13.014728546142578
    9. '```' → logprob: -13.389728546142578
    10. '
' → logprob: -14.389728546142578

Token 197: ' counter' (ID: 9446)
  Prédit: ' counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.47407710552215576
    2. 'counter' → logprob: -0.9740771055221558
    3. '	counter' → logprob: -16.474077224731445
    4. '(counter' → logprob: -17.599077224731445
    5. '[counter' → logprob: -18.974077224731445
    6. '_counter' → logprob: -19.349077224731445
    7. 'ounter' → logprob: -19.724077224731445
    8. 'c' → logprob: -20.349077224731445
    9. '.counter' → logprob: -20.349077224731445
    10. ' ' → logprob: -20.349077224731445

Token 198: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.20225702226161957
    2. '
' → logprob: -1.7022570371627808
    3. '

' → logprob: -7.32725715637207
    4. '\n' → logprob: -9.32725715637207
    5. ' class' → logprob: -10.20225715637207
    6. '' → logprob: -10.95225715637207
    7. ' 
' → logprob: -11.82725715637207
    8. '#' → logprob: -11.95225715637207
    9. '
' → logprob: -12.20225715637207
    10. '    
' → logprob: -12.20225715637207

Token 200: ' Constants' (ID: 31976)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0006299942615441978
    2. ' class' → logprob: -7.375629901885986
    3. '
' → logprob: -13.000630378723145
    4. '"class' → logprob: -15.500630378723145
    5. 'c' → logprob: -15.750630378723145
    6. '<class' → logprob: -16.250629425048828
    7. 'import' → logprob: -16.375629425048828
    8. '#' → logprob: -16.500629425048828
    9. ' 
' → logprob: -16.625629425048828
    10. 'True' → logprob: -16.750629425048828

Token 201: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11890695244073868
    2. '
' → logprob: -2.2439069747924805
    3. '

' → logprob: -5.1189069747924805
    4. ' class' → logprob: -10.36890697479248
    5. 'TRUE' → logprob: -10.99390697479248
    6. 'FALSE' → logprob: -11.36890697479248
    7. '
' → logprob: -12.11890697479248
    8. 'True' → logprob: -12.24390697479248
    9. '


' → logprob: -12.86890697479248
    10. '    
' → logprob: -13.36890697479248

Token 202: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.676981345459353e-06
    2. ' class' → logprob: -12.750005722045898
    3. 'FALSE' → logprob: -13.625005722045898
    4. 'TRUE' → logprob: -14.500005722045898
    5. 'False' → logprob: -15.000005722045898
    6. '
' → logprob: -15.000005722045898
    7. 'True' → logprob: -15.875005722045898
    8. '<class' → logprob: -17.0000057220459
    9. '    
' → logprob: -17.1250057220459
    10. 'c' → logprob: -17.5000057220459

Token 203: ' Const' (ID: 19594)
  Prédit: ' Constant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Constant' → logprob: -0.10300680249929428
    2. 'Constant' → logprob: -3.2280068397521973
    3. ' Truth' → logprob: -3.6030068397521973
    4. ' False' → logprob: -3.9780068397521973
    5. ' Const' → logprob: -5.603006839752197
    6. ' True' → logprob: -5.603006839752197
    7. 'False' → logprob: -6.228006839752197
    8. 'Truth' → logprob: -6.978006839752197
    9. 'Const' → logprob: -7.728006839752197
    10. 'True' → logprob: -7.853006839752197

Token 204: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003231779206544161
    2. ':' → logprob: -5.753232002258301
    3. ' :' → logprob: -11.1282320022583
    4. '(True' → logprob: -11.7532320022583
    5. '):' → logprob: -13.0032320022583
    6. 'Truth' → logprob: -13.0032320022583
    7. 'ant' → logprob: -13.1282320022583
    8. ')' → logprob: -13.3782320022583
    9. '(False' → logprob: -13.3782320022583
    10. '(Constant' → logprob: -13.3782320022583

Token 205: 'Formula' (ID: 60482)
  Prédit: 'Formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formula' → logprob: -0.00010616567305987701
    2. ' Formula' → logprob: -9.250105857849121
    3. 'Truth' → logprob: -12.000105857849121
    4. 'ABC' → logprob: -13.375105857849121
    5. ')' → logprob: -13.875105857849121
    6. 'Form' → logprob: -14.250105857849121
    7. ' formula' → logprob: -15.375105857849121
    8. '_formula' → logprob: -15.750105857849121
    9. '(' → logprob: -16.750106811523438
    10. 'False' → logprob: -16.750106811523438

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012554160319268703
    2. '):
' → logprob: -4.387554168701172
    3. '):
' → logprob: -10.637554168701172
    4. ')' → logprob: -11.137554168701172
    5. ':' → logprob: -12.637554168701172
    6. '):

' → logprob: -13.887554168701172
    7. ',' → logprob: -14.387554168701172
    8. ' ):' → logprob: -14.387554168701172
    9. '   ' → logprob: -14.887554168701172
    10. '>):' → logprob: -16.887554168701172

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009863656014204025
    2. ' def' → logprob: -7.000986576080322
    3. 'def' → logprob: -10.625986099243164
    4. ':' → logprob: -11.125986099243164
    5. '   ' → logprob: -11.375986099243164
    6. '    ' → logprob: -11.750986099243164
    7. '	def' → logprob: -12.375986099243164
    8. '    
' → logprob: -12.375986099243164
    9. '  ' → logprob: -13.500986099243164
    10. '<|end|>' → logprob: -13.750986099243164

Token 208: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1030828207731247
    2. ' def' → logprob: -2.3530828952789307
    3. '   ' → logprob: -5.853082656860352
    4. ' ' → logprob: -14.478082656860352
    5. '	def' → logprob: -14.603082656860352
    6. '  ' → logprob: -16.22808265686035
    7. '    ' → logprob: -17.22808265686035
    8. '__' → logprob: -17.47808265686035
    9. '    
' → logprob: -18.10308265686035
    10. ' __' → logprob: -18.22808265686035

Token 209: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.015096963383257389
    2. '__' → logprob: -4.390097141265869
    3. '_init' → logprob: -6.390097141265869
    4. ' _' → logprob: -8.515096664428711
    5. ' init' → logprob: -8.765096664428711
    6. 'init' → logprob: -8.890096664428711
    7. ' ' → logprob: -9.140096664428711
    8. '_value' → logprob: -9.265096664428711
    9. '_' → logprob: -9.515096664428711
    10. ' ' → logprob: -10.015096664428711

Token 210: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'ini' → logprob: -15.875
    3. 'inite' → logprob: -17.25
    4. ' init' → logprob: -17.25
    5. 'int' → logprob: -18.125
    6. 'in' → logprob: -19.0
    7. 'name' → logprob: -20.375
    8. '(init' → logprob: -20.75
    9. 'i' → logprob: -21.0
    10. '_init' → logprob: -21.25

Token 211: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.14304406940937042
    2. '(self' → logprob: -2.0180439949035645
    3. '__' → logprob: -8.268044471740723
    4. '(' → logprob: -9.643044471740723
    5. ' (' → logprob: -11.018044471740723
    6. 'self' → logprob: -11.268044471740723
    7. '_(' → logprob: -12.018044471740723
    8. '__(
' → logprob: -12.393044471740723
    9. '=self' → logprob: -12.893044471740723
    10. '__((' → logprob: -13.393044471740723

Token 212: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.36574100604048e-06
    2. ' self' → logprob: -12.375004768371582
    3. '(self' → logprob: -16.875003814697266
    4. 'value' → logprob: -16.875003814697266
    5. ',' → logprob: -17.375003814697266
    6. ',self' → logprob: -17.875003814697266
    7. '0' → logprob: -18.625003814697266
    8. '
' → logprob: -18.750003814697266
    9. '   ' → logprob: -18.875003814697266
    10. '	self' → logprob: -19.375003814697266

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05501136928796768
    2. 'self' → logprob: -2.93001127243042
    3. ',self' → logprob: -10.055011749267578
    4. ' self' → logprob: -10.180011749267578
    5. ' ,' → logprob: -10.680011749267578
    6. '(self' → logprob: -10.680011749267578
    7. '_,' → logprob: -14.680011749267578
    8. 's' → logprob: -15.430011749267578
    9. '<|end|>' → logprob: -15.430011749267578
    10. '__,' → logprob: -15.680011749267578

Token 214: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.00047190272016450763
    2. ' value' → logprob: -7.750472068786621
    3. 'self' → logprob: -10.750472068786621
    4. 'val' → logprob: -10.875472068786621
    5. ')value' → logprob: -15.250472068786621
    6. '.value' → logprob: -16.250471115112305
    7. '"value' → logprob: -16.250471115112305
    8. '(value' → logprob: -16.375471115112305
    9. '	value' → logprob: -16.750471115112305
    10. ' ' → logprob: -17.000471115112305

Token 215: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16382910311222076
    2. '):' → logprob: -1.9138290882110596
    3. ':int' → logprob: -5.788829326629639
    4. ')' → logprob: -7.913829326629639
    5. ' ):' → logprob: -9.16382884979248
    6. ' :' → logprob: -9.91382884979248
    7. '):
' → logprob: -11.78882884979248
    8. 'int' → logprob: -12.28882884979248
    9. '   ' → logprob: -14.03882884979248
    10. '():' → logprob: -14.41382884979248

Token 216: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001929228543303907
    2. ' int' → logprob: -6.25192928314209
    3. ')' → logprob: -14.75192928314209
    4. ' ' → logprob: -15.62692928314209
    5. '   ' → logprob: -17.251928329467773
    6. ':int' → logprob: -17.251928329467773
    7. '  ' → logprob: -17.501928329467773
    8. '[int' → logprob: -18.251928329467773
    9. '	int' → logprob: -18.376928329467773
    10. '(int' → logprob: -18.626928329467773

Token 217: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019073354778811336
    2. ')' → logprob: -6.3769073486328125
    3. '):
' → logprob: -8.626907348632812
    4. ':' → logprob: -10.751907348632812
    5. ' ):' → logprob: -12.501907348632812
    6. '   ' → logprob: -14.501907348632812
    7. '):
' → logprob: -15.376907348632812
    8. ' )' → logprob: -17.501907348632812
    9. ' ' → logprob: -18.001907348632812
    10. '=' → logprob: -18.251907348632812

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.7292167184641585e-05
    2. 'self' → logprob: -10.375057220458984
    3. ' self' → logprob: -10.750057220458984
    4. '   ' → logprob: -13.625057220458984
    5. '      ' → logprob: -14.125057220458984
    6. '    ' → logprob: -14.250057220458984
    7. ',' → logprob: -14.500057220458984
    8. ' ' → logprob: -14.750057220458984
    9. '     ' → logprob: -15.375057220458984
    10. '    ' → logprob: -15.500057220458984

Token 219: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3137906491756439
    2. ' self' → logprob: -1.3137906789779663
    3. '       ' → logprob: -7.563790798187256
    4. 'super' → logprob: -11.938790321350098
    5. ' super' → logprob: -13.188790321350098
    6. '   ' → logprob: -13.688790321350098
    7. '	self' → logprob: -15.813790321350098
    8. ' ' → logprob: -16.688791275024414
    9. '    ' → logprob: -17.063791275024414
    10. '        ' → logprob: -17.438791275024414

Token 220: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.2081262320280075
    2. ' value' → logprob: -2.3331263065338135
    3. '.' → logprob: -2.8331263065338135
    4. 'value' → logprob: -3.4581263065338135
    5. ' =' → logprob: -8.833126068115234
    6. ':' → logprob: -8.958126068115234
    7. '_value' → logprob: -9.708126068115234
    8. '=' → logprob: -9.958126068115234
    9. '=value' → logprob: -10.208126068115234
    10. ',' → logprob: -10.708126068115234

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194215774536133
    2. '=' → logprob: -1.5019421577453613
    3. ' ' → logprob: -11.751941680908203
    4. '=value' → logprob: -12.251941680908203
    5. ' =
' → logprob: -15.376941680908203
    6. ' =)' → logprob: -16.001941680908203
    7. ')' → logprob: -17.876941680908203
    8. '    ' → logprob: -18.126941680908203
    9. ' ' → logprob: -18.126941680908203
    10. '<|end|>' → logprob: -18.501941680908203

Token 222: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.011047814972698689
    2. ' value' → logprob: -4.511047840118408
    3. '"value' → logprob: -19.51104736328125
    4. '(value' → logprob: -19.63604736328125
    5. '	value' → logprob: -20.01104736328125
    6. ')value' → logprob: -20.13604736328125
    7. '$value' → logprob: -20.63604736328125
    8. ''value' → logprob: -20.88604736328125
    9. 'alue' → logprob: -21.26104736328125
    10. 'valu' → logprob: -21.51104736328125

Token 223: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1577797681093216
    2. '<|end|>' → logprob: -2.0327796936035156
    3. '   ' → logprob: -4.907779693603516
    4. '    
' → logprob: -5.907779693603516
    5. '<|end|>' → logprob: -5.907779693603516
    6. '

' → logprob: -7.407779693603516
    7. ' 
' → logprob: -7.657779693603516
    8. '  
' → logprob: -8.407779693603516
    9. ')' → logprob: -8.407779693603516
    10. '\n' → logprob: -8.782779693603516

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4503113925457001
    2. '
' → logprob: -1.5753114223480225
    3. '<|end|>' → logprob: -2.7003114223480225
    4. 'def' → logprob: -2.8253114223480225
    5. ' def' → logprob: -4.450311183929443
    6. '    
' → logprob: -4.575311183929443
    7. '<|end|>' → logprob: -6.075311183929443
    8. '  
' → logprob: -6.950311183929443
    9. ')' → logprob: -7.075311183929443
    10. ' 
' → logprob: -7.075311183929443

Token 225: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001930420519784093
    2. ' def' → logprob: -6.251930236816406
    3. '   ' → logprob: -13.251930236816406
    4. '	def' → logprob: -18.501930236816406
    5. '
' → logprob: -19.376930236816406
    6. ' ' → logprob: -20.001930236816406
    7. 'de' → logprob: -20.376930236816406
    8. ')' → logprob: -21.376930236816406
    9. '  ' → logprob: -21.501930236816406
    10. ':def' → logprob: -21.626930236816406

Token 226: ' evaluate' (ID: 21646)
  Prédit: ' evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.10020710527896881
    2. 'evaluate' → logprob: -2.3502070903778076
    3. '.evaluate' → logprob: -14.975207328796387
    4. ' ' → logprob: -16.97520637512207
    5. ' ' → logprob: -17.10020637512207
    6. ' evaluates' → logprob: -18.47520637512207
    7. 'Evaluate' → logprob: -18.72520637512207
    8. 'valuate' → logprob: -19.10020637512207
    9. 'e' → logprob: -19.47520637512207
    10. ' evaluation' → logprob: -19.85020637512207

Token 227: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16083917021751404
    2. '(' → logprob: -1.9108392000198364
    3. ' (' → logprob: -7.410839080810547
    4. '(
' → logprob: -12.910839080810547
    5. '(assign' → logprob: -13.035839080810547
    6. '(space' → logprob: -13.660839080810547
    7. ',' → logprob: -14.035839080810547
    8. '(s' → logprob: -14.785839080810547
    9. '(user' → logprob: -15.160839080810547
    10. 'self' → logprob: -15.160839080810547

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026872646412812173
    2. ' ,' → logprob: -8.250268936157227
    3. 'assignment' → logprob: -12.000268936157227
    4. ')' → logprob: -15.375268936157227
    5. ',
' → logprob: -15.375268936157227
    6. '(' → logprob: -15.750268936157227
    7. '_assignment' → logprob: -15.875268936157227
    8. 'self' → logprob: -16.125268936157227
    9. ' ' → logprob: -16.500268936157227
    10. '   ' → logprob: -16.500268936157227

Token 229: ' assignment' (ID: 24618)
  Prédit: 'assignment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -0.031831078231334686
    2. ' assignment' → logprob: -3.5318310260772705
    3. '_' → logprob: -6.53183126449585
    4. '_assignment' → logprob: -8.156830787658691
    5. ' _' → logprob: -8.781830787658691
    6. '{}' → logprob: -9.906830787658691
    7. ' {})' → logprob: -10.281830787658691
    8. '{})' → logprob: -10.656830787658691
    9. '_)' → logprob: -10.781830787658691
    10. '{' → logprob: -11.156830787658691

Token 230: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14709094166755676
    2. ':' → logprob: -2.6470909118652344
    3. ')' → logprob: -2.7720909118652344
    4. ' ):' → logprob: -6.522090911865234
    5. ',' → logprob: -6.647090911865234
    6. '):
' → logprob: -8.272090911865234
    7. '   ' → logprob: -8.647090911865234
    8. ' )' → logprob: -9.147090911865234
    9. ' :' → logprob: -10.147090911865234
    10. ' ' → logprob: -10.772090911865234

Token 231: ' Dict' (ID: 55179)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6074108481407166
    2. 'None' → logprob: -1.1074109077453613
    3. 'Dict' → logprob: -3.2324109077453613
    4. '_)' → logprob: -3.3574109077453613
    5. ' None' → logprob: -3.8574109077453613
    6. '_dict' → logprob: -5.607410907745361
    7. ')' → logprob: -5.607410907745361
    8. ' Dict' → logprob: -5.857410907745361
    9. ' _' → logprob: -5.982410907745361
    10. '):' → logprob: -5.982410907745361

Token 232: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.250001907348633
    3. '[
' → logprob: -16.000001907348633
    4. ' [' → logprob: -16.500001907348633
    5. 'str' → logprob: -16.875001907348633
    6. '```' → logprob: -18.125001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '	str' → logprob: -18.875001907348633
    9. '(str' → logprob: -18.875001907348633
    10. ':str' → logprob: -19.125001907348633

Token 233: ',' (ID: 11)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0004007600946351886
    2. ',' → logprob: -8.00040054321289
    3. ',str' → logprob: -10.12540054321289
    4. '[int' → logprob: -11.25040054321289
    5. '[' → logprob: -11.87540054321289
    6. 'str' → logprob: -12.37540054321289
    7. ' ,' → logprob: -15.12540054321289
    8. '])' → logprob: -15.37540054321289
    9. ':str' → logprob: -16.12540054321289
    10. '[
' → logprob: -16.37540054321289

Token 234: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.061054359131958e-06
    2. ' int' → logprob: -11.750007629394531
    3. '[int' → logprob: -16.37500762939453
    4. '<int' → logprob: -18.50000762939453
    5. ')' → logprob: -19.50000762939453
    6. ':int' → logprob: -19.75000762939453
    7. '=int' → logprob: -20.00000762939453
    8. 'str' → logprob: -20.00000762939453
    9. ']int' → logprob: -20.12500762939453
    10. '	int' → logprob: -20.37500762939453

Token 235: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014811802248004824
    2. '):' → logprob: -9.250147819519043
    3. '])' → logprob: -10.375147819519043
    4. '):
' → logprob: -11.250147819519043
    5. ' )' → logprob: -12.250147819519043
    6. '`)' → logprob: -13.375147819519043
    7. '   ' → logprob: -14.625147819519043
    8. ')->' → logprob: -14.875147819519043
    9. '):

' → logprob: -15.875147819519043
    10. '})' → logprob: -16.25014877319336

Token 236: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01595202088356018
    2. ' ->' → logprob: -5.015952110290527
    3. '->' → logprob: -5.140952110290527
    4. ':return' → logprob: -6.890952110290527
    5. ')' → logprob: -7.265952110290527
    6. '   ' → logprob: -7.390952110290527
    7. ' :' → logprob: -7.765952110290527
    8. '       ' → logprob: -7.890952110290527
    9. ':
' → logprob: -9.265952110290527
    10. '):' → logprob: -9.640952110290527

Token 237: ' int' (ID: 677)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5782394409179688
    2. 'self' → logprob: -0.8282394409179688
    3. 'int' → logprob: -6.328239440917969
    4. ' int' → logprob: -7.578239440917969
    5. '       ' → logprob: -14.828239440917969
    6. '   ' → logprob: -15.578239440917969
    7. '	self' → logprob: -16.57823944091797
    8. ' ' → logprob: -17.20323944091797
    9. 'Self' → logprob: -18.20323944091797
    10. '<int' → logprob: -18.57823944091797

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004740433767437935
    2. ':
' → logprob: -5.379740238189697
    3. '       ' → logprob: -10.004740715026855
    4. ':return' → logprob: -10.129740715026855
    5. '):' → logprob: -11.004740715026855
    6. '):
' → logprob: -11.629740715026855
    7. '   ' → logprob: -12.879740715026855
    8. '<|end|>' → logprob: -13.004740715026855
    9. ',' → logprob: -13.254740715026855
    10. ':

' → logprob: -14.504740715026855

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018483871594071388
    2. ' return' → logprob: -4.143483638763428
    3. 'return' → logprob: -6.018483638763428
    4. '   ' → logprob: -12.893484115600586
    5. ' ' → logprob: -12.893484115600586
    6. '    ' → logprob: -13.143484115600586
    7. '    ' → logprob: -13.393484115600586
    8. '{return' → logprob: -13.893484115600586
    9. '	return' → logprob: -14.018484115600586
    10. '        
' → logprob: -14.643484115600586

Token 240: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013804510235786438
    2. ' return' → logprob: -4.7638044357299805
    3. '       ' → logprob: -5.2638044357299805
    4. '	return' → logprob: -14.26380443572998
    5. '   ' → logprob: -15.63880443572998
    6. '{return' → logprob: -16.013805389404297
    7. ':return' → logprob: -18.388805389404297
    8. ' ' → logprob: -19.013805389404297
    9. '	' → logprob: -19.138805389404297
    10. 'eturn' → logprob: -19.388805389404297

Token 241: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931471824645996
    2. 'self' → logprob: -0.6931471824645996
    3. ' ' → logprob: -17.193147659301758
    4. '	self' → logprob: -18.818147659301758
    5. '(self' → logprob: -19.318147659301758
    6. ' ' → logprob: -20.693147659301758
    7. '   ' → logprob: -21.693147659301758
    8. '  ' → logprob: -23.568147659301758
    9. 'Self' → logprob: -23.568147659301758
    10. '[self' → logprob: -23.568147659301758

Token 242: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00247981958091259
    2. '.' → logprob: -6.0024800300598145
    3. ' .' → logprob: -12.752479553222656
    4. '.const' → logprob: -15.002479553222656
    5. '.values' → logprob: -15.127479553222656
    6. '.val' → logprob: -15.627479553222656
    7. '.constant' → logprob: -16.252479553222656
    8. 'value' → logprob: -16.502479553222656
    9. '.Value' → logprob: -17.002479553222656
    10. '.status' → logprob: -17.377479553222656

Token 243: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.31387418508529663
    2. '#' → logprob: -1.5638742446899414
    3. '
' → logprob: -3.4388742446899414
    4. '<|end|>' → logprob: -3.8138742446899414
    5. '

' → logprob: -5.563874244689941
    6. ' class' → logprob: -6.688874244689941
    7. '```' → logprob: -8.438874244689941
    8. 'Variable' → logprob: -8.938874244689941
    9. '<|end|>' → logprob: -8.938874244689941
    10. 'Variables' → logprob: -9.188874244689941

Token 245: ' Variables' (ID: 46975)
  Prédit: 'Variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Variable' → logprob: -0.9039840698242188
    2. 'class' → logprob: -1.1539840698242188
    3. 'Var' → logprob: -1.2789840698242188
    4. 'var' → logprob: -7.903984069824219
    5. 'Literal' → logprob: -7.903984069824219
    6. ' class' → logprob: -9.028984069824219
    7. 'Atom' → logprob: -9.278984069824219
    8. ' Var' → logprob: -9.403984069824219
    9. 'Class' → logprob: -9.528984069824219
    10. ' Variable' → logprob: -9.778984069824219

Token 246: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.006018857005983591
    2. '
' → logprob: -5.13101863861084
    3. ' class' → logprob: -10.38101863861084
    4. '<|end|>' → logprob: -10.38101863861084
    5. '

' → logprob: -10.75601863861084
    6. '  
' → logprob: -13.13101863861084
    7. '(class' → logprob: -13.38101863861084
    8. '<class' → logprob: -14.13101863861084
    9. '    
' → logprob: -14.50601863861084
    10. '(' → logprob: -14.50601863861084

Token 247: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.9153885558771435e-06
    2. '
' → logprob: -12.125005722045898
    3. ' class' → logprob: -15.000005722045898
    4. '  
' → logprob: -17.0000057220459
    5. '<class' → logprob: -17.0000057220459
    6. ' 
' → logprob: -17.2500057220459
    7. '<|end|>' → logprob: -17.7500057220459
    8. '    
' → logprob: -18.2500057220459
    9. '"class' → logprob: -18.5000057220459
    10. '```' → logprob: -19.1250057220459

Token 248: ' Var' (ID: 18782)
  Prédit: ' Var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Var' → logprob: -0.10996679216623306
    2. 'Var' → logprob: -2.35996675491333
    3. ' Variable' → logprob: -4.85996675491333
    4. 'Variable' → logprob: -6.23496675491333
    5. ' var' → logprob: -14.484967231750488
    6. ' ' → logprob: -14.609967231750488
    7. 'var' → logprob: -14.859967231750488
    8. '_var' → logprob: -14.984967231750488
    9. ' variable' → logprob: -15.734967231750488
    10. ' Vars' → logprob: -15.859967231750488

Token 249: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.935296834039036e-06
    2. ' (' → logprob: -12.75000286102295
    3. '(Form' → logprob: -19.000003814697266
    4. '(
' → logprob: -21.000003814697266
    5. '((' → logprob: -21.000003814697266
    6. '("' → logprob: -21.500003814697266
    7. ')(' → logprob: -21.625003814697266
    8. '   ' → logprob: -22.250003814697266
    9. '（' → logprob: -22.375003814697266
    10. 'Formula' → logprob: -22.500003814697266

Token 250: 'Formula' (ID: 60482)
  Prédit: 'Formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formula' → logprob: -6.392202976712724e-06
    2. ' Formula' → logprob: -12.000006675720215
    3. 'Form' → logprob: -16.7500057220459
    4. 'formula' → logprob: -17.6250057220459
    5. ' formula' → logprob: -18.5000057220459
    6. '_formula' → logprob: -18.6250057220459
    7. 'Variable' → logprob: -18.8750057220459
    8. '   ' → logprob: -19.7500057220459
    9. ' ' → logprob: -21.0000057220459
    10. 'Format' → logprob: -21.7500057220459

Token 251: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12697136402130127
    2. '):
' → logprob: -2.1269712448120117
    3. '):
' → logprob: -10.626971244812012
    4. '):

' → logprob: -11.001971244812012
    5. ')' → logprob: -13.751971244812012
    6. ':' → logprob: -14.501971244812012
    7. ' ):' → logprob: -14.876971244812012
    8. '   ' → logprob: -15.251971244812012
    9. ',' → logprob: -16.251972198486328
    10. '}:' → logprob: -17.501972198486328

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032261949963867664
    2. 'def' → logprob: -6.128226280212402
    3. ' def' → logprob: -6.878226280212402
    4. '	def' → logprob: -12.753226280212402
    5. ')' → logprob: -13.128226280212402
    6. '  ' → logprob: -13.378226280212402
    7. '
' → logprob: -14.003226280212402
    8. '):
' → logprob: -14.003226280212402
    9. '    
' → logprob: -14.378226280212402
    10. ':def' → logprob: -14.878226280212402

Token 253: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25510168075561523
    2. ' def' → logprob: -1.5051016807556152
    3. '   ' → logprob: -5.755101680755615
    4. '	def' → logprob: -14.505102157592773
    5. '__' → logprob: -15.005102157592773
    6. '
' → logprob: -16.630102157592773
    7. ' __' → logprob: -17.130102157592773
    8. '_def' → logprob: -17.255102157592773
    9. ' ' → logprob: -17.880102157592773
    10. '  ' → logprob: -18.005102157592773

Token 254: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2520159184932709
    2. '__' → logprob: -1.5020159482955933
    3. 'init' → logprob: -10.252016067504883
    4. ' def' → logprob: -10.502016067504883
    5. '_init' → logprob: -11.377016067504883
    6. 'def' → logprob: -11.752016067504883
    7. '.__' → logprob: -13.252016067504883
    8. ' init' → logprob: -13.877016067504883
    9. '___' → logprob: -14.252016067504883
    10. '```' → logprob: -15.127016067504883

Token 255: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.875
    3. '_init' → logprob: -20.875
    4. 'ini' → logprob: -21.25
    5. 'def' → logprob: -22.375
    6. 'int' → logprob: -22.5
    7. '(init' → logprob: -22.5
    8. '	init' → logprob: -22.625
    9. 'inite' → logprob: -22.75
    10. '   ' → logprob: -23.375

Token 256: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47557443380355835
    2. '__(' → logprob: -0.9755744338035583
    3. ' (' → logprob: -7.100574493408203
    4. '(' → logprob: -7.600574493408203
    5. ',' → logprob: -9.350574493408203
    6. '_(' → logprob: -10.225574493408203
    7. 'self' → logprob: -10.850574493408203
    8. '__' → logprob: -11.225574493408203
    9. '__(
' → logprob: -12.600574493408203
    10. '__((' → logprob: -13.100574493408203

Token 257: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.660315895918757e-05
    2. ' self' → logprob: -9.875076293945312
    3. ',' → logprob: -10.625076293945312
    4. '(self' → logprob: -14.375076293945312
    5. ',self' → logprob: -16.125076293945312
    6. '
' → logprob: -17.500076293945312
    7. '   ' → logprob: -17.625076293945312
    8. '       ' → logprob: -18.250076293945312
    9. ' ' → logprob: -19.500076293945312
    10. '	self' → logprob: -19.750076293945312

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032332094851881266
    2. 'self' → logprob: -5.753233432769775
    3. ' ,' → logprob: -10.503232955932617
    4. '(self' → logprob: -10.753232955932617
    5. ' self' → logprob: -12.628232955932617
    6. ',self' → logprob: -13.003232955932617
    7. ' (' → logprob: -15.253232955932617
    8. '   ' → logprob: -15.503232955932617
    9. ',
' → logprob: -15.753232955932617
    10. '__(' → logprob: -15.878232955932617

Token 259: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.005238260608166456
    2. ' name' → logprob: -5.255238056182861
    3. 'self' → logprob: -13.00523853302002
    4. '   ' → logprob: -13.38023853302002
    5. ' ' → logprob: -14.63023853302002
    6. 'n' → logprob: -16.755237579345703
    7. '	name' → logprob: -16.880237579345703
    8. '  ' → logprob: -17.130237579345703
    9. ',' → logprob: -17.630237579345703
    10. '
' → logprob: -17.880237579345703

Token 260: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03078111633658409
    2. '):' → logprob: -3.5307810306549072
    3. '):
' → logprob: -7.530781269073486
    4. ':str' → logprob: -7.655781269073486
    5. ' :' → logprob: -11.280780792236328
    6. '   ' → logprob: -13.030780792236328
    7. ' ):' → logprob: -13.280780792236328
    8. ')' → logprob: -13.655780792236328
    9. '<|end|>' → logprob: -14.655780792236328
    10. '<|end|>' → logprob: -14.905780792236328

Token 261: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0002036595979006961
    2. ' str' → logprob: -8.500204086303711
    3. '[str' → logprob: -16.50020408630371
    4. ')' → logprob: -17.25020408630371
    5. ':str' → logprob: -18.87520408630371
    6. 'Str' → logprob: -20.62520408630371
    7. '	str' → logprob: -20.75020408630371
    8. '   ' → logprob: -21.00020408630371
    9. ' ' → logprob: -21.62520408630371
    10. '=str' → logprob: -22.00020408630371

Token 262: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025449818931519985
    2. 'self' → logprob: -6.00254487991333
    3. ' self' → logprob: -9.627545356750488
    4. '   ' → logprob: -12.877545356750488
    5. '	self' → logprob: -14.502545356750488
    6. '	' → logprob: -14.752545356750488
    7. '      ' → logprob: -17.877544403076172
    8. '(self' → logprob: -18.127544403076172
    9. '	   ' → logprob: -18.377544403076172
    10. ' ' → logprob: -18.502544403076172

Token 264: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011755794286727905
    2. ' self' → logprob: -4.51175594329834
    3. '       ' → logprob: -7.26175594329834
    4. '   ' → logprob: -12.13675594329834
    5. '	self' → logprob: -15.01175594329834
    6. 'super' → logprob: -16.761754989624023
    7. '(self' → logprob: -17.386754989624023
    8. ' ' → logprob: -17.636754989624023
    9. '        ' → logprob: -17.761754989624023
    10. '    ' → logprob: -17.886754989624023

Token 265: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.012915372848510742
    2. '.' → logprob: -4.38791561126709
    3. 'name' → logprob: -8.26291561126709
    4. ' name' → logprob: -9.51291561126709
    5. ' .' → logprob: -9.63791561126709
    6. '   ' → logprob: -12.88791561126709
    7. ':' → logprob: -13.38791561126709
    8. '=name' → logprob: -13.38791561126709
    9. '	name' → logprob: -13.51291561126709
    10. '=' → logprob: -14.51291561126709

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6350708603858948
    2. ' =' → logprob: -0.7600708603858948
    3. '<|end|>' → logprob: -6.26007080078125
    4. ')' → logprob: -7.88507080078125
    5. ' ' → logprob: -9.63507080078125
    6. '=name' → logprob: -10.01007080078125
    7. '<|end|>' → logprob: -11.01007080078125
    8. ':' → logprob: -11.13507080078125
    9. ',' → logprob: -11.38507080078125
    10. ')=' → logprob: -12.13507080078125

Token 267: ' name' (ID: 1308)
  Prédit: ' name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.25192955136299133
    2. 'name' → logprob: -1.501929521560669
    3. '	name' → logprob: -15.12692928314209
    4. '(name' → logprob: -16.501930236816406
    5. '"name' → logprob: -17.126930236816406
    6. ''name' → logprob: -17.251930236816406
    7. '.name' → logprob: -18.876930236816406
    8. '$name' → logprob: -18.876930236816406
    9. ' ' → logprob: -19.001930236816406
    10. '=name' → logprob: -19.126930236816406

Token 268: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43853485584259033
    2. '
' → logprob: -1.5635348558425903
    3. '<|end|>' → logprob: -2.063534736633301
    4. '    
' → logprob: -4.938534736633301
    5. '<|end|>' → logprob: -5.438534736633301
    6. 'def' → logprob: -5.938534736633301
    7. ' def' → logprob: -7.188534736633301
    8. '  
' → logprob: -7.313534736633301
    9. ' 
' → logprob: -7.313534736633301
    10. ' ' → logprob: -7.313534736633301

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12263239175081253
    2. 'def' → logprob: -2.4976325035095215
    3. '
' → logprob: -3.6226325035095215
    4. ' def' → logprob: -5.7476325035095215
    5. '    
' → logprob: -6.2476325035095215
    6. '<|end|>' → logprob: -7.1226325035095215
    7. '  
' → logprob: -8.997632026672363
    8. '<|end|>' → logprob: -9.372632026672363
    9. '```' → logprob: -9.622632026672363
    10. ' ' → logprob: -9.872632026672363

Token 270: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001246348983841017
    2. ' def' → logprob: -9.00012493133545
    3. '   ' → logprob: -13.75012493133545
    4. '
' → logprob: -17.375123977661133
    5. '	def' → logprob: -18.500123977661133
    6. ' ' → logprob: -20.500123977661133
    7. '    
' → logprob: -21.500123977661133
    8. '```' → logprob: -21.750123977661133
    9. ':def' → logprob: -22.625123977661133
    10. 'de' → logprob: -22.625123977661133

Token 271: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.02467985637485981
    2. ' evaluate' → logprob: -3.7746798992156982
    3. 'def' → logprob: -6.774679660797119
    4. ' def' → logprob: -8.149680137634277
    5. '.evaluate' → logprob: -13.149680137634277
    6. '   ' → logprob: -15.899680137634277
    7. ' ' → logprob: -16.14967918395996
    8. '  ' → logprob: -18.14967918395996
    9. 'valuate' → logprob: -18.14967918395996
    10. 'eval' → logprob: -18.64967918395996

Token 272: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01821737363934517
    2. '(' → logprob: -4.01821756362915
    3. ' (' → logprob: -9.643217086791992
    4. ',' → logprob: -13.643217086791992
    5. '(
' → logprob: -14.518217086791992
    6. 'self' → logprob: -14.893217086791992
    7. '(s' → logprob: -15.768217086791992
    8. '(assign' → logprob: -16.393217086791992
    9. '   ' → logprob: -16.643217086791992
    10. ' self' → logprob: -16.893217086791992

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021843716967850924
    2. '(' → logprob: -9.125218391418457
    3. ' ,' → logprob: -9.625218391418457
    4. 'assignment' → logprob: -10.250218391418457
    5. ' (' → logprob: -12.625218391418457
    6. '(self' → logprob: -13.250218391418457
    7. 'self' → logprob: -13.875218391418457
    8. '[' → logprob: -14.750218391418457
    9. ')' → logprob: -14.750218391418457
    10. ' assignment' → logprob: -15.250218391418457

Token 274: ' assignment' (ID: 24618)
  Prédit: 'assignment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -0.5759401321411133
    2. ' assignment' → logprob: -0.8259401321411133
    3. 'assign' → logprob: -14.950940132141113
    4. 'Assignment' → logprob: -15.825940132141113
    5. '.assignment' → logprob: -15.825940132141113
    6. '_assignment' → logprob: -16.575939178466797
    7. ' ' → logprob: -17.950939178466797
    8. 'assing' → logprob: -18.200939178466797
    9. 'self' → logprob: -18.200939178466797
    10. '   ' → logprob: -18.700939178466797

Token 275: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038975838106125593
    2. ':' → logprob: -6.378897666931152
    3. '[' → logprob: -6.503897666931152
    4. '[self' → logprob: -7.753897666931152
    5. ')' → logprob: -8.878897666931152
    6. 'self' → logprob: -10.128897666931152
    7. '.get' → logprob: -10.753897666931152
    8. '   ' → logprob: -10.878897666931152
    9. 'return' → logprob: -11.128897666931152
    10. '[str' → logprob: -11.503897666931152

Token 276: ' Dict' (ID: 55179)
  Prédit: 'assignment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -0.9426316022872925
    2. ' assignment' → logprob: -1.0676316022872925
    3. ' return' → logprob: -2.317631721496582
    4. ' Dict' → logprob: -2.442631721496582
    5. 'Dict' → logprob: -2.692631721496582
    6. 'return' → logprob: -4.317631721496582
    7. ' ' → logprob: -11.067631721496582
    8. ' lambda' → logprob: -11.067631721496582
    9. 'lambda' → logprob: -11.317631721496582
    10. 'Assignment' → logprob: -11.567631721496582

Token 277: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.875001907348633
    3. 'str' → logprob: -15.125001907348633
    4. '[name' → logprob: -16.000001907348633
    5. '[...,' → logprob: -16.375001907348633
    6. ')' → logprob: -16.625001907348633
    7. '[var' → logprob: -17.000001907348633
    8. '[[' → logprob: -17.125001907348633
    9. ':str' → logprob: -17.750001907348633
    10. '       ' → logprob: -17.875001907348633

Token 278: ',' (ID: 11)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.00015455135144293308
    2. 'str' → logprob: -9.125154495239258
    3. ')' → logprob: -10.625154495239258
    4. '])' → logprob: -11.625154495239258
    5. ':str' → logprob: -12.375154495239258
    6. '):' → logprob: -13.500154495239258
    7. '):
' → logprob: -13.625154495239258
    8. '[' → logprob: -13.875154495239258
    9. ']):
' → logprob: -14.250154495239258
    10. ']):' → logprob: -14.250154495239258

Token 279: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009126556105911732
    2. ' int' → logprob: -7.000912666320801
    3. '[int' → logprob: -13.7509126663208
    4. ')' → logprob: -17.375911712646484
    5. '(int' → logprob: -18.125911712646484
    6. ':int' → logprob: -18.250911712646484
    7. '<int' → logprob: -18.375911712646484
    8. ' ' → logprob: -18.875911712646484
    9. '   ' → logprob: -19.250911712646484
    10. '	int' → logprob: -20.125911712646484

Token 280: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0055766636505723
    2. '):' → logprob: -5.6305766105651855
    3. '):
' → logprob: -6.5055766105651855
    4. '])' → logprob: -7.7555766105651855
    5. ' )' → logprob: -10.255577087402344
    6. '):

' → logprob: -12.505577087402344
    7. ']):' → logprob: -12.505577087402344
    8. ']' → logprob: -12.630577087402344
    9. '):
' → logprob: -13.380577087402344
    10. ' ):' → logprob: -13.630577087402344

Token 281: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6239907145500183
    2. ':
' → logprob: -1.123990774154663
    3. ':return' → logprob: -3.123990774154663
    4. '       ' → logprob: -3.498990774154663
    5. '   ' → logprob: -3.748990774154663
    6. ' return' → logprob: -3.748990774154663
    7. 'return' → logprob: -4.748990535736084
    8. '[' → logprob: -5.998990535736084
    9. '):
' → logprob: -6.748990535736084
    10. '<|end|>' → logprob: -6.748990535736084

Token 282: ' int' (ID: 677)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2627371847629547
    2. ' assignment' → logprob: -2.137737274169922
    3. 'assignment' → logprob: -2.762737274169922
    4. 'return' → logprob: -3.012737274169922
    5. 'int' → logprob: -7.387737274169922
    6. ' int' → logprob: -8.387737274169922
    7. '[int' → logprob: -13.012737274169922
    8. '<int' → logprob: -13.137737274169922
    9. '.assignment' → logprob: -13.762737274169922
    10. '   ' → logprob: -13.887737274169922

Token 283: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19284285604953766
    2. ':' → logprob: -2.192842960357666
    3. '       ' → logprob: -2.817842960357666
    4. '   ' → logprob: -6.442842960357666
    5. ':return' → logprob: -7.442842960357666
    6. '[' → logprob: -7.567842960357666
    7. '[
' → logprob: -7.692842960357666
    8. '):
' → logprob: -8.067842483520508
    9. 'return' → logprob: -8.942842483520508
    10. ' return' → logprob: -9.442842483520508

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023357287049293518
    2. ' return' → logprob: -3.773357391357422
    3. 'return' → logprob: -9.148357391357422
    4. '<|end|>' → logprob: -13.273357391357422
    5. '	return' → logprob: -14.023357391357422
    6. '   ' → logprob: -14.148357391357422
    7. ' ' → logprob: -14.148357391357422
    8. '{return' → logprob: -14.648357391357422
    9. '	' → logprob: -15.273357391357422
    10. '```' → logprob: -16.148357391357422

Token 285: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1629326045513153
    2. ' return' → logprob: -1.9129326343536377
    3. '       ' → logprob: -5.912932395935059
    4. '   ' → logprob: -14.662932395935059
    5. '	return' → logprob: -16.412933349609375
    6. '           ' → logprob: -18.287933349609375
    7. '
' → logprob: -18.412933349609375
    8. '        
' → logprob: -18.537933349609375
    9. '{return' → logprob: -18.662933349609375
    10. '```' → logprob: -18.662933349609375

Token 286: ' assignment' (ID: 24618)
  Prédit: ' assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assignment' → logprob: -0.011047814972698689
    2. 'assignment' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.38604736328125
    4. '.assignment' → logprob: -18.38604736328125
    5. '_assignment' → logprob: -18.76104736328125
    6. 'Assignment' → logprob: -20.88604736328125
    7. ' assignments' → logprob: -21.13604736328125
    8. ' assigned' → logprob: -21.88604736328125
    9. ' space' → logprob: -21.88604736328125
    10. 'assign' → logprob: -22.13604736328125

Token 287: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.000001907348633
    3. 'self' → logprob: -17.000001907348633
    4. '.get' → logprob: -20.250001907348633
    5. ' self' → logprob: -20.375001907348633
    6. ' [' → logprob: -20.875001907348633
    7. '[
' → logprob: -21.750001907348633
    8. '[this' → logprob: -22.875001907348633
    9. '[get' → logprob: -22.875001907348633
    10. '(self' → logprob: -23.125001907348633

Token 288: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.006722352933138609
    2. '.' → logprob: -5.006722450256348
    3. ' .' → logprob: -12.006722450256348
    4. '.
' → logprob: -14.381722450256348
    5. '.n' → logprob: -15.381722450256348
    6. 'name' → logprob: -16.88172149658203
    7. '.]' → logprob: -17.50672149658203
    8. '.Name' → logprob: -18.13172149658203
    9. '.user' → logprob: -18.88172149658203
    10. ' ' → logprob: -19.00672149658203

Token 289: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -6.24179228907451e-05
    2. ' ]' → logprob: -9.750061988830566
    3. ']
' → logprob: -12.625061988830566
    4. '<|end|>' → logprob: -15.375061988830566
    5. ')' → logprob: -15.500061988830566
    6. '']' → logprob: -16.250062942504883
    7. '}' → logprob: -16.625062942504883
    8. '[' → logprob: -17.375062942504883
    9. '"]' → logprob: -17.875062942504883
    10. ']

' → logprob: -18.875062942504883

Token 290: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3850526511669159
    2. '#' → logprob: -1.7600526809692383
    3. '<|end|>' → logprob: -2.6350526809692383
    4. '
' → logprob: -2.8850526809692383
    5. ' class' → logprob: -5.135052680969238
    6. '

' → logprob: -5.135052680969238
    7. '```' → logprob: -5.135052680969238
    8. '\n' → logprob: -7.260052680969238
    9. '<|end|>' → logprob: -7.385052680969238
    10. '<class' → logprob: -7.885052680969238

Token 291: ' Unary' (ID: 170108)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.000958031858317554
    2. ' class' → logprob: -7.37595796585083
    3. 'Not' → logprob: -9.250958442687988
    4. '#' → logprob: -9.375958442687988
    5. 'Unary' → logprob: -9.500958442687988
    6. 'Neg' → logprob: -9.750958442687988
    7. 'And' → logprob: -11.750958442687988
    8. '
' → logprob: -13.000958442687988
    9. 'Class' → logprob: -13.250958442687988
    10. 'and' → logprob: -13.375958442687988

Token 292: ' operator' (ID: 11019)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.026937926188111305
    2. ' class' → logprob: -3.651937961578369
    3. '
' → logprob: -8.026937484741211
    4. '(' → logprob: -9.526937484741211
    5. '  
' → logprob: -9.651937484741211
    6. ' ' → logprob: -9.901937484741211
    7. ' 
' → logprob: -9.901937484741211
    8. '(
' → logprob: -11.026937484741211
    9. 'space' → logprob: -11.151937484741211
    10. '<|end|>' → logprob: -12.026937484741211

Token 293: ':' (ID: 25)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0022401853930205107
    2. '
' → logprob: -6.127240180969238
    3. ' class' → logprob: -10.377240180969238
    4. '<|end|>' → logprob: -12.127240180969238
    5. '(' → logprob: -12.252240180969238
    6. '<class' → logprob: -12.502240180969238
    7. '

' → logprob: -12.752240180969238
    8. '(
' → logprob: -13.502240180969238
    9. '(class' → logprob: -14.002240180969238
    10. '  
' → logprob: -14.127240180969238

Token 294: ' Neg' (ID: 22837)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005431900266557932
    2. ' class' → logprob: -5.25543212890625
    3. 'Neg' → logprob: -9.63043212890625
    4. 'Not' → logprob: -9.88043212890625
    5. 'not' → logprob: -10.00543212890625
    6. 'neg' → logprob: -10.63043212890625
    7. ' not' → logprob: -12.50543212890625
    8. '
' → logprob: -12.75543212890625
    9. ' Neg' → logprob: -13.13043212890625
    10. '   ' → logprob: -13.50543212890625

Token 295: 'ation' (ID: 387)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0004988207365386188
    2. 'ation' → logprob: -7.7504987716674805
    3. ' class' → logprob: -10.00049877166748
    4. 'ate' → logprob: -10.87549877166748
    5. '   ' → logprob: -12.87549877166748
    6. 'ative' → logprob: -14.37549877166748
    7. '	class' → logprob: -15.25049877166748
    8. ' ' → logprob: -15.87549877166748
    9. 'def' → logprob: -16.500499725341797
    10. 'otation' → logprob: -17.000499725341797

Token 296: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2018626183271408
    2. '
' → logprob: -1.7018625736236572
    3. '<|end|>' → logprob: -8.451862335205078
    4. ' class' → logprob: -9.451862335205078
    5. '

' → logprob: -9.826862335205078
    6. '  
' → logprob: -10.201862335205078
    7. ' 
' → logprob: -10.826862335205078
    8. '   ' → logprob: -11.076862335205078
    9. '    
' → logprob: -11.451862335205078
    10. '<class' → logprob: -12.701862335205078

Token 297: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.4868770196917467e-05
    2. '
' → logprob: -10.625024795532227
    3. ' class' → logprob: -14.875024795532227
    4. '<|end|>' → logprob: -16.125024795532227
    5. '

' → logprob: -17.375024795532227
    6. '<class' → logprob: -17.500024795532227
    7. '"class' → logprob: -17.750024795532227
    8. '```' → logprob: -18.500024795532227
    9. '  
' → logprob: -18.750024795532227
    10. '	class' → logprob: -19.250024795532227

Token 298: ' Neg' (ID: 22837)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.5975461602210999
    2. ' Not' → logprob: -0.8475461602210999
    3. 'Neg' → logprob: -4.097546100616455
    4. ' Neg' → logprob: -5.347546100616455
    5. '_Not' → logprob: -14.097546577453613
    6. ' ' → logprob: -14.972546577453613
    7. 'NOT' → logprob: -15.347546577453613
    8. '(Not' → logprob: -15.847546577453613
    9. 'Unary' → logprob: -16.597545623779297
    10. ' neg' → logprob: -17.222545623779297

Token 299: 'ation' (ID: 387)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.1012517511844635
    2. '(' → logprob: -2.3512518405914307
    3. 'ation' → logprob: -7.226251602172852
    4. '   ' → logprob: -8.976251602172852
    5. 'class' → logprob: -10.351251602172852
    6. 'ate' → logprob: -10.476251602172852
    7. '(F' → logprob: -10.601251602172852
    8. ')' → logprob: -10.976251602172852
    9. '(Log' → logprob: -10.976251602172852
    10. '(C' → logprob: -11.351251602172852

Token 300: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.25
    3. '(Form' → logprob: -20.0
    4. '((' → logprob: -21.5
    5. '(
' → logprob: -22.625
    6. '(F' → logprob: -22.875
    7. '(

' → logprob: -23.75
    8. '\(' → logprob: -24.25
    9. '(Constructor' → logprob: -24.625
    10. '（' → logprob: -24.75

Token 301: 'Formula' (ID: 60482)
  Prédit: 'Formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formula' → logprob: -9.088346359931165e-07
    2. ' Formula' → logprob: -14.000000953674316
    3. 'Form' → logprob: -17.75
    4. 'formula' → logprob: -18.0
    5. '   ' → logprob: -18.125
    6. '_formula' → logprob: -19.625
    7. ' formula' → logprob: -20.375
    8. ' ' → logprob: -20.375
    9. 'Format' → logprob: -20.875
    10. '
' → logprob: -22.875

Token 302: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006742015480995178
    2. '):
' → logprob: -5.006742000579834
    3. '):
' → logprob: -11.506742477416992
    4. '):

' → logprob: -11.881742477416992
    5. ')' → logprob: -12.381742477416992
    6. '   ' → logprob: -12.506742477416992
    7. ' ):' → logprob: -13.881742477416992
    8. '(' → logprob: -14.631742477416992
    9. ':' → logprob: -14.881742477416992
    10. '):

' → logprob: -17.256742477416992

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00977698341012001
    2. 'def' → logprob: -4.884777069091797
    3. ' def' → logprob: -6.134777069091797
    4. '
' → logprob: -13.634777069091797
    5. '	def' → logprob: -14.634777069091797
    6. '  ' → logprob: -15.384777069091797
    7. ')' → logprob: -15.509777069091797
    8. '    
' → logprob: -16.009777069091797
    9. ' ' → logprob: -16.759777069091797
    10. ':def' → logprob: -17.884777069091797

Token 304: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11020876467227936
    2. ' def' → logprob: -2.360208749771118
    3. '   ' → logprob: -4.610208988189697
    4. '	def' → logprob: -13.610208511352539
    5. ':' → logprob: -14.485208511352539
    6. '  ' → logprob: -15.110208511352539
    7. ' ' → logprob: -15.735208511352539
    8. ':def' → logprob: -15.860208511352539
    9. '
' → logprob: -16.23520851135254
    10. '_def' → logprob: -16.48520851135254

Token 305: ' Neg' (ID: 22837)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011740362970158458
    2. ' def' → logprob: -6.876173973083496
    3. '   ' → logprob: -9.501173973083496
    4. '_def' → logprob: -10.751173973083496
    5. 'NEG' → logprob: -10.751173973083496
    6. '_neg' → logprob: -11.251173973083496
    7. 'OP' → logprob: -12.876173973083496
    8. '_op' → logprob: -13.376173973083496
    9. '_operator' → logprob: -13.876173973083496
    10. '_' → logprob: -14.376173973083496

Token 306: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.5429210066795349
    2. 'def' → logprob: -1.5429210662841797
    3. '   ' → logprob: -1.6679210662841797
    4. ' def' → logprob: -4.16792106628418
    5. '	def' → logprob: -7.54292106628418
    6. 'otation' → logprob: -8.16792106628418
    7. 'ection' → logprob: -8.66792106628418
    8. ' ' → logprob: -10.79292106628418
    9. ')' → logprob: -10.91792106628418
    10. '  ' → logprob: -11.41792106628418

Token 307: ' table' (ID: 3293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0707278847694397
    2. '   ' → logprob: -2.945727825164795
    3. ' def' → logprob: -4.195727825164795
    4. '	def' → logprob: -9.070728302001953
    5. '
' → logprob: -9.195728302001953
    6. '_map' → logprob: -9.445728302001953
    7. 'DOMAIN' → logprob: -9.820728302001953
    8. ':' → logprob: -10.070728302001953
    9. ' =' → logprob: -10.070728302001953
    10. ')' → logprob: -10.570728302001953

Token 308: ' mapping' (ID: 22573)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21368037164211273
    2. ' =' → logprob: -1.713680386543274
    3. ':' → logprob: -5.088680267333984
    4. ' =
' → logprob: -6.713680267333984
    5. ' _' → logprob: -7.088680267333984
    6. '_NEG' → logprob: -7.213680267333984
    7. '_neg' → logprob: -7.463680267333984
    8. ':
' → logprob: -7.838680267333984
    9. '=' → logprob: -8.088680267333984
    10. '    ' → logprob: -8.213680267333984

Token 309: ' input' (ID: 3422)
  Prédit: '_neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_neg' → logprob: -0.36117613315582275
    2. '   ' → logprob: -2.236176013946533
    3. 'NEG' → logprob: -2.861176013946533
    4. '{
' → logprob: -3.236176013946533
    5. '{' → logprob: -3.236176013946533
    6. '_NEG' → logprob: -3.486176013946533
    7. ' _' → logprob: -4.861176013946533
    8. ' {
' → logprob: -5.736176013946533
    9. ' NEG' → logprob: -5.736176013946533
    10. 'neg' → logprob: -5.986176013946533

Token 310: ' =>' (ID: 871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3559671640396118
    2. '=' → logprob: -1.2309671640396118
    3. ':' → logprob: -5.730967044830322
    4. '{' → logprob: -6.480967044830322
    5. '_value' → logprob: -7.105967044830322
    6. 'value' → logprob: -7.480967044830322
    7. ' to' → logprob: -8.10596752166748
    8. '   ' → logprob: -8.35596752166748
    9. 'to' → logprob: -8.73096752166748
    10. '_val' → logprob: -9.48096752166748

Token 311: ' output' (ID: 4733)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.12196022272109985
    2. '{
' → logprob: -2.371960163116455
    3. 'output' → logprob: -4.246960163116455
    4. '[' → logprob: -5.996960163116455
    5. 'Truth' → logprob: -6.746960163116455
    6. '(' → logprob: -6.996960163116455
    7. ' {' → logprob: -6.996960163116455
    8. '2' → logprob: -7.871960163116455
    9. '3' → logprob: -8.246960639953613
    10. '0' → logprob: -8.371960639953613

Token 312: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36213287711143494
    2. '_neg' → logprob: -2.1121327877044678
    3. 'NEG' → logprob: -2.2371327877044678
    4. 'neg' → logprob: -3.3621327877044678
    5. '_NEG' → logprob: -3.4871327877044678
    6. ' NEG' → logprob: -4.987133026123047
    7. ' neg' → logprob: -6.487133026123047
    8. ' _' → logprob: -7.612133026123047
    9. ' =' → logprob: -7.737133026123047
    10. ' ' → logprob: -8.362133026123047

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.317209929227829
    2. '_neg' → logprob: -1.6922099590301514
    3. 'NEG' → logprob: -2.6922099590301514
    4. 'neg' → logprob: -4.317209720611572
    5. '_NEG' → logprob: -5.192209720611572
    6. ' NEG' → logprob: -7.817209720611572
    7. ' neg' → logprob: -8.81721019744873
    8. '_n' → logprob: -9.44221019744873
    9. ' _' → logprob: -9.69221019744873
    10. '_' → logprob: -10.06721019744873

Token 314: ' NEG' (ID: 132900)
  Prédit: '_neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neg' → logprob: -0.2088787704706192
    2. 'NEG' (adapté à ' NEG') → logprob: -2.583878755569458
    3. '_NEG' → logprob: -2.958878755569458
    4. 'neg' → logprob: -2.958878755569458
    5. ' neg' → logprob: -5.958878993988037
    6. ' NEG' → logprob: -6.208878993988037
    7. '_table' → logprob: -6.833878993988037
    8. ' _' → logprob: -7.083878993988037
    9. 'TABLE' → logprob: -7.333878993988037
    10. '   ' → logprob: -7.583878993988037

Token 315: '_TABLE' (ID: 34862)
  Prédit: 'ATION'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ATION' → logprob: -0.48007720708847046
    2. '_TABLE' → logprob: -0.9800772070884705
    3. 'TABLE' → logprob: -5.230077266693115
    4. '_table' → logprob: -7.980077266693115
    5. 'ATE' → logprob: -8.730076789855957
    6. '_MAP' → logprob: -10.480076789855957
    7. '   ' → logprob: -10.855076789855957
    8. ' =' → logprob: -10.980076789855957
    9. 'ation' → logprob: -11.105076789855957
    10. '=' → logprob: -11.605076789855957

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03807029500603676
    2. '=' → logprob: -3.2880702018737793
    3. ':' → logprob: -10.913070678710938
    4. '   ' → logprob: -11.663070678710938
    5. ' ' → logprob: -13.913070678710938
    6. '=[' → logprob: -14.538070678710938
    7. ' =[' → logprob: -14.913070678710938
    8. '[' → logprob: -15.913070678710938
    9. '  ' → logprob: -17.038070678710938
    10. ' =
' → logprob: -17.413070678710938

Token 317: ' {
' (ID: 405)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.31820783019065857
    2. '{' → logprob: -1.318207859992981
    3. '[' → logprob: -5.318207740783691
    4. '   ' → logprob: -11.068207740783691
    5. ' {
' → logprob: -11.818207740783691
    6. '[
' → logprob: -12.568207740783691
    7. '{
' → logprob: -13.068207740783691
    8. ' {' → logprob: -13.318207740783691
    9. '(' → logprob: -13.568207740783691
    10. '{

' → logprob: -15.318207740783691

Token 318: '       ' (ID: 309)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.03918774425983429
    2. '   ' → logprob: -4.039187908172607
    3. '       ' → logprob: -4.539187908172607
    4. '0' → logprob: -4.664187908172607
    5. ' Truth' → logprob: -7.289187908172607
    6. 'False' → logprob: -11.16418743133545
    7. '           ' → logprob: -12.16418743133545
    8. ' ' → logprob: -12.78918743133545
    9. '    ' → logprob: -14.16418743133545
    10. '     ' → logprob: -14.41418743133545

Token 319: ' Truth' (ID: 47310)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' (adapté à ' Truth') → logprob: -3.023293538717553e-05
    2. '0' → logprob: -10.500030517578125
    3. '   ' → logprob: -13.500030517578125
    4. ' Truth' → logprob: -13.625030517578125
    5. 'False' → logprob: -17.000030517578125
    6. '2' → logprob: -18.375030517578125
    7. 'Truthy' → logprob: -19.250030517578125
    8. '       ' → logprob: -19.250030517578125
    9. 'truth' → logprob: -19.250030517578125
    10. '_truth' → logprob: -20.000030517578125

Token 320: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -4.320199877838604e-07
    2. 'Val' → logprob: -15.5
    3. '	Value' → logprob: -15.875
    4. 'value' → logprob: -17.5
    5. '   ' → logprob: -17.75
    6. ' Value' → logprob: -17.875
    7. '.Value' → logprob: -18.0
    8. ' ' → logprob: -18.75
    9. 'alue' → logprob: -19.375
    10. '<Value' → logprob: -19.375

Token 321: '.FALSE' (ID: 154841)
  Prédit: '.FALSE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.FALSE' → logprob: -0.0018888992490246892
    2. '.' → logprob: -6.501888751983643
    3. '.TRUE' → logprob: -7.876888751983643
    4. 'FALSE' → logprob: -12.3768892288208
    5. '.False' → logprob: -13.6268892288208
    6. '.false' → logprob: -14.6268892288208
    7. ' .' → logprob: -14.8768892288208
    8. '_FALSE' → logprob: -15.5018892288208
    9. '   ' → logprob: -15.7518892288208
    10. ':' → logprob: -15.8768892288208

Token 322: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.433829159708694e-05
    2. ' :' → logprob: -9.62507438659668
    3. '   ' → logprob: -11.75007438659668
    4. '    ' → logprob: -16.50007438659668
    5. '2' → logprob: -16.62507438659668
    6. '       ' → logprob: -16.75007438659668
    7. ',' → logprob: -17.50007438659668
    8. '0' → logprob: -17.62507438659668
    9. '=' → logprob: -17.87507438659668
    10. ':
' → logprob: -18.00007438659668

Token 323: ' Truth' (ID: 47310)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.0024835076183080673
    2. ' Truth' → logprob: -6.002483367919922
    3. '2' → logprob: -11.877483367919922
    4. 'Truthy' → logprob: -14.877483367919922
    5. '_truth' → logprob: -15.502483367919922
    6. ' truth' → logprob: -15.752483367919922
    7. 'truth' → logprob: -15.877483367919922
    8. 'True' → logprob: -17.127483367919922
    9. '3' → logprob: -17.627483367919922
    10. '   ' → logprob: -17.752483367919922

Token 324: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: 0.0
    2. 'Val' → logprob: -17.25
    3. '	Value' → logprob: -20.0
    4. '_VALUE' → logprob: -20.625
    5. 'value' → logprob: -20.875
    6. 'True' → logprob: -21.0
    7. '_Value' → logprob: -21.125
    8. '_value' → logprob: -21.625
    9. 'VALUE' → logprob: -21.75
    10. ' Value' → logprob: -22.0

Token 325: '.TRUE' (ID: 127017)
  Prédit: 'TRUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TRUE' → logprob: -0.3133319318294525
    2. '.TRUE' → logprob: -1.313331961631775
    3. '_TRUE' → logprob: -9.938331604003906
    4. '2' → logprob: -11.063331604003906
    5. ' TRUE' → logprob: -12.563331604003906
    6. 'True' → logprob: -14.188331604003906
    7. '(TRUE' → logprob: -14.688331604003906
    8. '[' → logprob: -14.813331604003906
    9. '3' → logprob: -14.938331604003906
    10. '   ' → logprob: -14.938331604003906

Token 326: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00524098752066493
    2. ',
' → logprob: -5.2552409172058105
    3. '   ' → logprob: -12.380241394042969
    4. ' ,' → logprob: -14.005241394042969
    5. '       ' → logprob: -14.005241394042969
    6. ',

' → logprob: -14.130241394042969
    7. ',
' → logprob: -14.505241394042969
    8. ',\
' → logprob: -16.88024139404297
    9. ' ,
' → logprob: -17.88024139404297
    10. ' ' → logprob: -18.63024139404297

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10645826160907745
    2. 'Truth' → logprob: -2.6064581871032715
    3. ' Truth' → logprob: -3.6064581871032715
    4. '   ' → logprob: -10.23145866394043
    5. '           ' → logprob: -12.85645866394043
    6. '      ' → logprob: -13.48145866394043
    7. '_truth' → logprob: -14.35645866394043
    8. ' ' → logprob: -14.48145866394043
    9. '    ' → logprob: -14.48145866394043
    10. '     ' → logprob: -14.60645866394043

Token 328: ' Truth' (ID: 47310)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' (adapté à ' Truth') → logprob: -1.306760805164231e-05
    2. ' Truth' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.62501335144043
    4. 'Truthy' → logprob: -20.37501335144043
    5. '_truth' → logprob: -20.37501335144043
    6. '       ' → logprob: -21.25001335144043
    7. 'truth' → logprob: -21.50001335144043
    8. ' truth' → logprob: -21.75001335144043
    9. 'Unknown' → logprob: -22.12501335144043
    10. 'True' → logprob: -22.12501335144043

Token 329: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.9361264946837764e-07
    2. 'value' → logprob: -16.0
    3. 'Val' → logprob: -17.625
    4. '	Value' → logprob: -19.875
    5. 'VALUE' → logprob: -20.125
    6. '.Value' → logprob: -21.25
    7. ' Value' → logprob: -21.625
    8. 'False' → logprob: -21.75
    9. 'alue' → logprob: -21.75
    10. '_VALUE' → logprob: -21.875

Token 330: '.UNKNOWN' (ID: 188801)
  Prédit: '.UNKNOWN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.UNKNOWN' → logprob: -0.001175343873910606
    2. 'UNKNOWN' → logprob: -6.751175403594971
    3. '_UNKNOWN' → logprob: -13.251174926757812
    4. '.' → logprob: -13.376174926757812
    5. '.FALSE' → logprob: -13.751174926757812
    6. '.UN' → logprob: -14.626174926757812
    7. '.TRUE' → logprob: -15.501174926757812
    8. ' UNKNOWN' → logprob: -17.126174926757812
    9. '.Unknown' → logprob: -17.751174926757812
    10. 'Unknown' → logprob: -18.376174926757812

Token 331: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4974866644479334e-05
    2. ' :' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.125015258789062
    4. '[' → logprob: -17.125015258789062
    5. '):' → logprob: -17.125015258789062
    6. ',' → logprob: -18.000015258789062
    7. ':
' → logprob: -18.125015258789062
    8. ')' → logprob: -18.250015258789062
    9. '       ' → logprob: -19.375015258789062
    10. '<|end|>' → logprob: -19.375015258789062

Token 332: ' Truth' (ID: 47310)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.0009115827269852161
    2. ' Truth' → logprob: -7.000911712646484
    3. 'Truthy' → logprob: -16.625911712646484
    4. '_truth' → logprob: -18.125911712646484
    5. ' truth' → logprob: -18.750911712646484
    6. '   ' → logprob: -19.375911712646484
    7. 'truth' → logprob: -19.750911712646484
    8. 'Unknown' → logprob: -20.000911712646484
    9. 'True' → logprob: -20.750911712646484
    10. ' ' → logprob: -21.875911712646484

Token 333: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: 0.0
    2. 'Val' → logprob: -18.625
    3. 'value' → logprob: -21.375
    4. '	Value' → logprob: -21.5
    5. '_VALUE' → logprob: -22.0
    6. '_value' → logprob: -22.125
    7. 'VALUE' → logprob: -22.25
    8. 'alue' → logprob: -22.25
    9. ' Value' → logprob: -23.25
    10. 'View' → logprob: -23.375

Token 334: '.UNKNOWN' (ID: 188801)
  Prédit: '.UNKNOWN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.UNKNOWN' → logprob: -0.0031781906727701426
    2. 'UNKNOWN' → logprob: -5.753178119659424
    3. '_UNKNOWN' → logprob: -14.878178596496582
    4. '.UN' → logprob: -16.878177642822266
    5. '.Unknown' → logprob: -18.128177642822266
    6. '.' → logprob: -18.503177642822266
    7. '.FALSE' → logprob: -19.128177642822266
    8. 'Unknown' → logprob: -19.253177642822266
    9. ' UNKNOWN' → logprob: -19.628177642822266
    10. '.TRUE' → logprob: -20.128177642822266

Token 335: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00409656623378396
    2. ',
' → logprob: -5.504096508026123
    3. '       ' → logprob: -11.504096984863281
    4. '   ' → logprob: -11.879096984863281
    5. ' ,' → logprob: -14.504096984863281
    6. ',
' → logprob: -15.129096984863281
    7. ',

' → logprob: -15.629096984863281
    8. '}' → logprob: -16.87909698486328
    9. ',\
' → logprob: -17.12909698486328
    10. ')' → logprob: -17.75409698486328

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06264408677816391
    2. 'Truth' → logprob: -2.8126440048217773
    3. ' Truth' → logprob: -7.312644004821777
    4. '   ' → logprob: -12.062644004821777
    5. 'True' → logprob: -14.062644004821777
    6. '      ' → logprob: -14.437644004821777
    7. '           ' → logprob: -14.562644004821777
    8. 'Trace' → logprob: -14.562644004821777
    9. 'Truthy' → logprob: -15.187644004821777
    10. 'Trust' → logprob: -15.687644004821777

Token 337: ' Truth' (ID: 47310)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' (adapté à ' Truth') → logprob: -6.2729995988775045e-06
    2. ' Truth' → logprob: -12.000006675720215
    3. 'True' → logprob: -16.6250057220459
    4. 'Trace' → logprob: -16.8750057220459
    5. '       ' → logprob: -17.8750057220459
    6. 'Truthy' → logprob: -18.5000057220459
    7. '   ' → logprob: -18.6250057220459
    8. '_truth' → logprob: -20.6250057220459
    9. '           ' → logprob: -20.8750057220459
    10. 'Trust' → logprob: -21.6250057220459

Token 338: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: 0.0
    2. 'Val' → logprob: -17.5
    3. 'value' → logprob: -17.5
    4. '	Value' → logprob: -20.625
    5. 'alue' → logprob: -21.375
    6. 'VALUE' → logprob: -21.75
    7. ' Value' → logprob: -22.5
    8. '.Value' → logprob: -22.5
    9. 'Valor' → logprob: -22.875
    10. 'Values' → logprob: -22.875

Token 339: '.TRUE' (ID: 127017)
  Prédit: '.TRUE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.TRUE' → logprob: -0.07909809052944183
    2. '.FALSE' → logprob: -2.5790979862213135
    3. 'TRUE' → logprob: -8.829097747802734
    4. '.' → logprob: -10.079097747802734
    5. 'FALSE' → logprob: -11.079097747802734
    6. '.TR' → logprob: -13.079097747802734
    7. '.UNKNOWN' → logprob: -13.329097747802734
    8. '_TRUE' → logprob: -15.829097747802734
    9. ':' → logprob: -16.079097747802734
    10. '(TRUE' → logprob: -16.079097747802734

Token 340: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.696889623621246e-06
    2. ' :' → logprob: -13.12500286102295
    3. ':
' → logprob: -16.000001907348633
    4. ')' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.375001907348633
    6. ',' → logprob: -16.500001907348633
    7. '=' → logprob: -16.875001907348633
    8. '):' → logprob: -17.375001907348633
    9. '[' → logprob: -17.500001907348633
    10. '}' → logprob: -17.625001907348633

Token 341: ' Truth' (ID: 47310)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.38687199354171753
    2. ' Truth' → logprob: -1.1368720531463623
    3. 'False' → logprob: -14.011872291564941
    4. ' truth' → logprob: -16.261871337890625
    5. 'Trace' → logprob: -16.386871337890625
    6. ' False' → logprob: -17.386871337890625
    7. 'Truthy' → logprob: -17.636871337890625
    8. '_truth' → logprob: -18.136871337890625
    9. ' ' → logprob: -19.261871337890625
    10. '   ' → logprob: -19.261871337890625

Token 342: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: 0.0
    2. 'Val' → logprob: -18.375
    3. 'VALUE' → logprob: -21.0
    4. '_VALUE' → logprob: -21.125
    5. '	Value' → logprob: -21.125
    6. 'Vale' → logprob: -21.625
    7. '_value' → logprob: -21.875
    8. '_Value' → logprob: -22.0
    9. 'value' → logprob: -22.25
    10. 'alue' → logprob: -22.375

Token 343: '.FALSE' (ID: 154841)
  Prédit: '.FALSE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.FALSE' → logprob: -1.6286106983898208e-05
    2. 'FALSE' → logprob: -11.250016212463379
    3. '.' → logprob: -13.000016212463379
    4. '.False' → logprob: -14.250016212463379
    5. '.TRUE' → logprob: -15.625016212463379
    6. '_FALSE' → logprob: -15.875016212463379
    7. '.false' → logprob: -16.500017166137695
    8. ' .' → logprob: -17.875017166137695
    9. '.F' → logprob: -18.750017166137695
    10. '(FALSE' → logprob: -19.250017166137695

Token 344: '
' (ID: 198)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.029769469052553177
    2. '   ' → logprob: -3.5297694206237793
    3. '}

' → logprob: -11.279769897460938
    4. '}
' → logprob: -12.279769897460938
    5. ' }' → logprob: -13.779769897460938
    6. ',' → logprob: -14.529769897460938
    7. '	' → logprob: -16.404769897460938
    8. '}


' → logprob: -16.529769897460938
    9. '   ' → logprob: -16.904769897460938
    10. ')' → logprob: -17.154769897460938

Token 345: '   ' (ID: 271)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.10022769868373871
    2. '   ' → logprob: -2.3502275943756104
    3. '}

' → logprob: -11.350227355957031
    4. '}
' → logprob: -11.850227355957031
    5. ' }' → logprob: -13.725227355957031
    6. ',' → logprob: -14.100227355957031
    7. '   ' → logprob: -16.10022735595703
    8. ')' → logprob: -16.85022735595703
    9. '	' → logprob: -16.85022735595703
    10. '}


' → logprob: -17.47522735595703

Token 346: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.013828721828758717
    2. '}

' (adapté à ' }

') → logprob: -4.513828754425049
    3. '   ' → logprob: -6.013828754425049
    4. '}
' → logprob: -8.01382827758789
    5. '}


' → logprob: -13.76382827758789
    6. ' }' → logprob: -15.01382827758789
    7. '}

' → logprob: -17.13882827758789
    8. ' ' → logprob: -17.13882827758789
    9. ' }

' → logprob: -17.51382827758789
    10. '}



' → logprob: -18.51382827758789

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7183101177215576
    2. 'def' → logprob: -0.7183101177215576
    3. ' def' → logprob: -3.7183101177215576
    4. '
' → logprob: -7.843310356140137
    5. '    
' → logprob: -8.718310356140137
    6. '	def' → logprob: -11.968310356140137
    7. ' ' → logprob: -12.718310356140137
    8. '```' → logprob: -12.843310356140137
    9. ' 
' → logprob: -13.468310356140137
    10. '  ' → logprob: -13.718310356140137

Token 348: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -15.0
    3. '@' → logprob: -20.875
    4. '   ' → logprob: -21.625
    5. '
' → logprob: -23.375
    6. '	def' → logprob: -23.875
    7. ':def' → logprob: -24.5
    8. 'de' → logprob: -24.625
    9. '_def' → logprob: -24.625
    10. '```' → logprob: -25.125

Token 349: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16326305270195007
    2. ' def' → logprob: -2.1632630825042725
    3. ' evaluate' → logprob: -3.9132630825042725
    4. '__' → logprob: -4.163262844085693
    5. 'def' → logprob: -9.038263320922852
    6. 'evaluate' → logprob: -10.538263320922852
    7. ' define' → logprob: -13.288263320922852
    8. ' _' → logprob: -13.538263320922852
    9. '_def' → logprob: -14.038263320922852
    10. '  ' → logprob: -14.538263320922852

Token 350: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'ini' → logprob: -15.0
    3. 'i' → logprob: -18.125
    4. 'in' → logprob: -18.25
    5. 'inite' → logprob: -20.625
    6. ' init' → logprob: -21.375
    7. '_init' → logprob: -21.625
    8. 'int' → logprob: -21.75
    9. 'class' → logprob: -22.125
    10. 'def' → logprob: -22.25

Token 351: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000649529043585062
    2. '__' → logprob: -7.375649452209473
    3. '__(
' → logprob: -11.125649452209473
    4. '__((' → logprob: -12.500649452209473
    5. '(self' → logprob: -13.250649452209473
    6. '(' → logprob: -13.375649452209473
    7. '__('' → logprob: -14.500649452209473
    8. '_(' → logprob: -14.750649452209473
    9. '__(*' → logprob: -15.875649452209473
    10. '__("' → logprob: -16.62565040588379

Token 352: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1875571544806007e-05
    2. ' self' → logprob: -11.375011444091797
    3. '(self' → logprob: -14.875011444091797
    4. ')' → logprob: -18.250011444091797
    5. ',' → logprob: -18.500011444091797
    6. '0' → logprob: -19.500011444091797
    7. '
' → logprob: -19.625011444091797
    8. '       ' → logprob: -20.500011444091797
    9. '	self' → logprob: -20.500011444091797
    10. '1' → logprob: -20.750011444091797

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014966767048463225
    2. 'self' → logprob: -9.125149726867676
    3. ' ,' → logprob: -10.250149726867676
    4. '(self' → logprob: -12.875149726867676
    5. ',self' → logprob: -13.125149726867676
    6. ' (' → logprob: -15.500149726867676
    7. '   ' → logprob: -15.625149726867676
    8. ' self' → logprob: -15.750149726867676
    9. ',
' → logprob: -16.12514877319336
    10. '       ' → logprob: -16.50014877319336

Token 354: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.08324159681797028
    2. 'formula' → logprob: -2.5832417011260986
    3. 'sub' → logprob: -5.5832414627075195
    4. ' operand' → logprob: -7.8332414627075195
    5. 'child' → logprob: -9.45824146270752
    6. 'expr' → logprob: -9.70824146270752
    7. 'inner' → logprob: -10.70824146270752
    8. ' sub' → logprob: -11.33324146270752
    9. ' formula' → logprob: -12.45824146270752
    10. 'arg' → logprob: -12.45824146270752

Token 355: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3188929557800293
    2. '):' → logprob: -1.3188929557800293
    3. ' :' → logprob: -6.068892955780029
    4. ' ):' → logprob: -6.193892955780029
    5. '):
' → logprob: -6.818892955780029
    6. ')' → logprob: -8.943893432617188
    7. ',' → logprob: -10.693893432617188
    8. '   ' → logprob: -12.568893432617188
    9. ' ):
' → logprob: -12.818893432617188
    10. ' )' → logprob: -12.943893432617188

Token 356: ' Formula' (ID: 52227)
  Prédit: 'Formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formula' → logprob: -0.006715728435665369
    2. ' Formula' → logprob: -5.006715774536133
    3. ' formula' → logprob: -16.131715774536133
    4. '_formula' → logprob: -16.631715774536133
    5. 'formula' → logprob: -17.256715774536133
    6. 'Form' → logprob: -17.381715774536133
    7. ')' → logprob: -18.131715774536133
    8. 'Expression' → logprob: -19.631715774536133
    9. '   ' → logprob: -19.631715774536133
    10. ' Formel' → logprob: -19.756715774536133

Token 357: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01117101963609457
    2. '):
' → logprob: -4.511170864105225
    3. ')' → logprob: -9.011171340942383
    4. '):
' → logprob: -14.636171340942383
    5. '):

' → logprob: -15.261171340942383
    6. ':' → logprob: -15.261171340942383
    7. ' ):' → logprob: -15.636171340942383
    8. '   ' → logprob: -17.011171340942383
    9. ').' → logprob: -19.136171340942383
    10. ' ):
' → logprob: -19.761171340942383

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06586690992116928
    2. 'self' → logprob: -2.8158669471740723
    3. ' self' → logprob: -5.565866947174072
    4. '	self' → logprob: -10.065866470336914
    5. '	' → logprob: -11.315866470336914
    6. '   ' → logprob: -12.190866470336914
    7. '(self' → logprob: -13.065866470336914
    8. ',' → logprob: -14.315866470336914
    9. ' ' → logprob: -14.690866470336914
    10. '​' → logprob: -14.940866470336914

Token 359: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00532957399263978
    2. ' self' → logprob: -5.255329608917236
    3. '       ' → logprob: -9.255329132080078
    4. '   ' → logprob: -16.005329132080078
    5. '	self' → logprob: -17.005329132080078
    6. 'operand' → logprob: -18.755329132080078
    7. 'super' → logprob: -18.880329132080078
    8. '(self' → logprob: -19.255329132080078
    9. '     ' → logprob: -19.630329132080078
    10. '        ' → logprob: -20.005329132080078

Token 360: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.145118848304264e-05
    2. 'operand' → logprob: -10.375051498413086
    3. ' .' → logprob: -11.375051498413086
    4. '.oper' → logprob: -12.000051498413086
    5. '.operator' → logprob: -13.250051498413086
    6. ' operand' → logprob: -15.125051498413086
    7. '_operand' → logprob: -15.500051498413086
    8. '.op' → logprob: -15.750051498413086
    9. '._' → logprob: -15.875051498413086
    10. '​.' → logprob: -17.375051498413086

Token 361: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -3.47626737493556e-05
    2. ' operand' → logprob: -11.25003433227539
    3. '_operand' → logprob: -11.62503433227539
    4. 'operator' → logprob: -12.00003433227539
    5. 'oper' → logprob: -13.75003433227539
    6. 'opcode' → logprob: -14.00003433227539
    7. '__' → logprob: -14.25003433227539
    8. 'operate' → logprob: -14.62503433227539
    9. '```' → logprob: -14.87503433227539
    10. 'op' → logprob: -14.87503433227539

Token 362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040785204619169235
    2. ' =' → logprob: -5.504078388214111
    3. ')' → logprob: -17.754077911376953
    4. ' ' → logprob: -18.129077911376953
    5. '   ' → logprob: -18.254077911376953
    6. '.' → logprob: -18.629077911376953
    7. '=

' → logprob: -18.754077911376953
    8. '=}' → logprob: -18.879077911376953
    9. '.=' → logprob: -19.379077911376953
    10. '=
' → logprob: -20.254077911376953

Token 363: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.023245595395565033
    2. ' operand' → logprob: -3.7732455730438232
    3. 'operator' → logprob: -16.773244857788086
    4. '_operand' → logprob: -16.898244857788086
    5. 'oper' → logprob: -17.523244857788086
    6. 'Operand' → logprob: -18.273244857788086
    7. ' ' → logprob: -18.898244857788086
    8. 'opcode' → logprob: -18.898244857788086
    9. 'operative' → logprob: -19.273244857788086
    10. '   ' → logprob: -19.648244857788086

Token 364: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021405041217803955
    2. '
' → logprob: -4.646405220031738
    3. '    
' → logprob: -4.771405220031738
    4. 'def' → logprob: -6.646405220031738
    5. '<|end|>' → logprob: -6.771405220031738
    6. '  
' → logprob: -8.021405220031738
    7. '```' → logprob: -8.771405220031738
    8. '<|end|>' → logprob: -9.396405220031738
    9. ' 
' → logprob: -10.646405220031738
    10. '   
' → logprob: -10.896405220031738

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022023592609912157
    2. 'def' → logprob: -6.50220251083374
    3. '    
' → logprob: -7.50220251083374
    4. '
' → logprob: -9.252202033996582
    5. ' def' → logprob: -10.627202033996582
    6. '        
' → logprob: -11.252202033996582
    7. '<|end|>' → logprob: -12.127202033996582
    8. '  
' → logprob: -12.252202033996582
    9. '```' → logprob: -13.252202033996582
    10. '<|end|>' → logprob: -14.127202033996582

Token 366: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.7848862373502925e-05
    2. ' def' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.500027656555176
    4. '	def' → logprob: -20.375028610229492
    5. 'de' → logprob: -24.000028610229492
    6. '
' → logprob: -24.125028610229492
    7. ' ' → logprob: -24.625028610229492
    8. 'd' → logprob: -24.750028610229492
    9. '_def' → logprob: -24.750028610229492
    10. 'Def' → logprob: -24.750028610229492

Token 367: ' evaluate' (ID: 21646)
  Prédit: ' evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.5759397745132446
    2. 'evaluate' → logprob: -0.8259397745132446
    3. '.evaluate' → logprob: -14.825940132141113
    4. 'Evaluate' → logprob: -19.075939178466797
    5. 'def' → logprob: -19.450939178466797
    6. ' ' → logprob: -19.575939178466797
    7. ' ' → logprob: -19.825939178466797
    8. ' def' → logprob: -19.950939178466797
    9. 'e' → logprob: -20.450939178466797
    10. 'valuate' → logprob: -20.575939178466797

Token 368: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023293230682611465
    2. '(' → logprob: -3.7732932567596436
    3. ' (' → logprob: -10.148293495178223
    4. '(
' → logprob: -12.398293495178223
    5. ',' → logprob: -12.773293495178223
    6. 'self' → logprob: -13.648293495178223
    7. '(s' → logprob: -15.898293495178223
    8. '   ' → logprob: -16.023292541503906
    9. ' self' → logprob: -16.773292541503906
    10. '       ' → logprob: -17.523292541503906

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003126971423625946
    2. '(' → logprob: -5.878127098083496
    3. ' ,' → logprob: -8.628127098083496
    4. ' (' → logprob: -9.378127098083496
    5. 'assignment' → logprob: -10.753127098083496
    6. ',(' → logprob: -11.253127098083496
    7. '(self' → logprob: -11.878127098083496
    8. ',
' → logprob: -12.503127098083496
    9. '   ' → logprob: -12.878127098083496
    10. ')' → logprob: -13.003127098083496

Token 370: ' assignment' (ID: 24618)
  Prédit: 'assignment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -0.1128435954451561
    2. ' assignment' → logprob: -2.2378435134887695
    3. 'self' → logprob: -11.36284351348877
    4. 'assign' → logprob: -12.61284351348877
    5. '.assignment' → logprob: -12.86284351348877
    6. ' self' → logprob: -13.86284351348877
    7. '_assignment' → logprob: -14.61284351348877
    8. ' ' → logprob: -14.73784351348877
    9. 'Assignment' → logprob: -14.98784351348877
    10. '   ' → logprob: -15.23784351348877

Token 371: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.844883382320404
    2. '):' → logprob: -0.969883382320404
    3. ')' → logprob: -1.8448834419250488
    4. ',' → logprob: -3.469883441925049
    5. '):
' → logprob: -6.844883441925049
    6. '   ' → logprob: -7.844883441925049
    7. 'self' → logprob: -8.46988296508789
    8. ' ):' → logprob: -9.09488296508789
    9. '(self' → logprob: -9.84488296508789
    10. '       ' → logprob: -10.09488296508789

Token 372: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.04876631125807762
    2. ' Dict' → logprob: -3.0487663745880127
    3. ')' → logprob: -9.423766136169434
    4. 'dict' → logprob: -9.548766136169434
    5. ' dict' → logprob: -10.673766136169434
    6. '.Dict' → logprob: -13.673766136169434
    7. 'assignment' → logprob: -13.673766136169434
    8. '_dict' → logprob: -15.673766136169434
    9. ' assignment' → logprob: -15.923766136169434
    10. ':' → logprob: -15.923766136169434

Token 373: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -5.2166411478538066e-05
    2. '[' → logprob: -10.125052452087402
    3. ')' → logprob: -11.625052452087402
    4. ':str' → logprob: -14.125052452087402
    5. '[
' → logprob: -14.625052452087402
    6. '=str' → logprob: -15.000052452087402
    7. '[string' → logprob: -15.125052452087402
    8. '[self' → logprob: -15.125052452087402
    9. '[int' → logprob: -15.375052452087402
    10. ':' → logprob: -15.625052452087402

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019360709935426712
    2. '[str' → logprob: -4.019360542297363
    3. '[int' → logprob: -7.394360542297363
    4. ',str' → logprob: -8.519360542297363
    5. ' ,' → logprob: -8.894360542297363
    6. ')' → logprob: -9.644360542297363
    7. '])' → logprob: -9.769360542297363
    8. ',int' → logprob: -10.144360542297363
    9. '[' → logprob: -10.644360542297363
    10. '   ' → logprob: -11.394360542297363

Token 375: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.127333340875339e-06
    2. ' int' → logprob: -12.500003814697266
    3. '[int' → logprob: -15.250003814697266
    4. ')' → logprob: -16.875003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '(int' → logprob: -18.875003814697266
    7. ':int' → logprob: -19.250003814697266
    8. '<int' → logprob: -19.625003814697266
    9. '=int' → logprob: -20.000003814697266
    10. ',int' → logprob: -20.250003814697266

Token 376: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.096126576769166e-05
    2. '):' → logprob: -10.750041007995605
    3. '):
' → logprob: -10.875041007995605
    4. ' )' → logprob: -15.000041007995605
    5. '])' → logprob: -16.25004005432129
    6. '   ' → logprob: -17.50004005432129
    7. '):

' → logprob: -17.50004005432129
    8. '`)' → logprob: -17.87504005432129
    9. '):
' → logprob: -18.00004005432129
    10. ')
' → logprob: -18.37504005432129

Token 377: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02931705303490162
    2. '->' → logprob: -3.7793171405792236
    3. ' ->' → logprob: -5.6543169021606445
    4. ')' → logprob: -6.6543169021606445
    5. '):' → logprob: -7.7793169021606445
    6. ')->' → logprob: -7.9043169021606445
    7. ':
' → logprob: -8.154316902160645
    8. ':return' → logprob: -9.529316902160645
    9. '   ' → logprob: -9.779316902160645
    10. '():' → logprob: -11.029316902160645

Token 378: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3132622241973877
    2. ' int' → logprob: -1.3132622241973877
    3. 'self' → logprob: -15.438261985778809
    4. '(int' → logprob: -16.063262939453125
    5. ' self' → logprob: -16.063262939453125
    6. ' ' → logprob: -17.063262939453125
    7. '[int' → logprob: -17.688262939453125
    8. ':int' → logprob: -17.938262939453125
    9. '<int' → logprob: -18.063262939453125
    10. '   ' → logprob: -18.438262939453125

Token 379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016278225928544998
    2. ':
' → logprob: -4.141278266906738
    3. '       ' → logprob: -8.516278266906738
    4. ':return' → logprob: -10.516278266906738
    5. '):' → logprob: -12.266278266906738
    6. '   ' → logprob: -12.391278266906738
    7. '):
' → logprob: -12.516278266906738
    8. '():
' → logprob: -14.141278266906738
    9. ',' → logprob: -14.391278266906738
    10. '():' → logprob: -14.516278266906738

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07389327883720398
    2. 'return' → logprob: -2.8238933086395264
    3. ' return' → logprob: -4.448893070220947
    4. 'value' → logprob: -9.198893547058105
    5. 'val' → logprob: -10.573893547058105
    6. ' value' → logprob: -11.198893547058105
    7. 'v' → logprob: -11.698893547058105
    8. ' val' → logprob: -12.198893547058105
    9. 'result' → logprob: -12.948893547058105
    10. '```' → logprob: -13.448893547058105

Token 381: ' v' (ID: 323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1800062358379364
    2. 'val' → logprob: -2.180006265640259
    3. 'value' → logprob: -3.930006265640259
    4. '       ' → logprob: -4.05500602722168
    5. ' return' → logprob: -4.55500602722168
    6. 'operand' → logprob: -6.30500602722168
    7. 'input' → logprob: -6.43000602722168
    8. ' val' → logprob: -8.05500602722168
    9. 'result' → logprob: -9.05500602722168
    10. ' value' → logprob: -9.55500602722168

Token 382: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.3184102773666382
    2. ' =' → logprob: -1.5684102773666382
    3. '=' → logprob: -2.9434103965759277
    4. 'alue' → logprob: -4.818410396575928
    5. 'a' → logprob: -6.318410396575928
    6. 'alu' → logprob: -6.443410396575928
    7. 'ALUE' → logprob: -9.56840991973877
    8. 'alid' → logprob: -10.31840991973877
    9. '   ' → logprob: -10.56840991973877
    10. 'AL' → logprob: -12.56840991973877

Token 383: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006715370807796717
    2. ' self' → logprob: -5.006715297698975
    3. '(self' → logprob: -17.381715774536133
    4. '       ' → logprob: -18.381715774536133
    5. '	self' → logprob: -18.881715774536133
    6. '=self' → logprob: -19.506715774536133
    7. '[self' → logprob: -20.256715774536133
    8. '   ' → logprob: -20.881715774536133
    9. ' ' → logprob: -21.131715774536133
    10. ':self' → logprob: -22.256715774536133

Token 384: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.816093228830141e-06
    2. 'operand' → logprob: -12.87500286102295
    3. ' .' → logprob: -16.500001907348633
    4. '.operator' → logprob: -16.750001907348633
    5. '.neg' → logprob: -17.625001907348633
    6. '.evaluate' → logprob: -18.125001907348633
    7. '.op' → logprob: -18.875001907348633
    8. '​.' → logprob: -19.375001907348633
    9. '._' → logprob: -19.375001907348633
    10. ' operand' → logprob: -19.750001907348633

Token 385: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -6.869017852295656e-06
    2. 'evaluate' → logprob: -12.000006675720215
    3. ' operand' → logprob: -14.750006675720215
    4. 'operator' → logprob: -15.625006675720215
    5. 'operate' → logprob: -16.87500762939453
    6. 'valuate' → logprob: -17.50000762939453
    7. '_operand' → logprob: -18.37500762939453
    8. 'oper' → logprob: -18.50000762939453
    9. 'operative' → logprob: -19.00000762939453
    10. 'opcode' → logprob: -19.25000762939453

Token 386: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0004444931691978127
    2. '.' → logprob: -7.750444412231445
    3. 'evaluate' → logprob: -11.250444412231445
    4. ' .' → logprob: -14.250444412231445
    5. ').' → logprob: -17.000444412231445
    6. '   ' → logprob: -17.375444412231445
    7. '.calculate' → logprob: -18.375444412231445
    8. '.validate' → logprob: -18.625444412231445
    9. ' ' → logprob: -19.000444412231445
    10. '.eval' → logprob: -19.000444412231445

Token 387: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '(assign' → logprob: -15.625
    3. ' (' → logprob: -16.875
    4. '(
' → logprob: -17.75
    5. 'assignment' → logprob: -17.75
    6. '(self' → logprob: -19.25
    7. '(object' → logprob: -20.375
    8. '(operator' → logprob: -20.75
    9. '(expression' → logprob: -21.0
    10. '((' → logprob: -21.5

Token 388: 'assignment' (ID: 78785)
  Prédit: 'assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -0.0002036595979006961
    2. ' assignment' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.75020408630371
    4. ',' → logprob: -18.12520408630371
    5. ' ' → logprob: -18.37520408630371
    6. 'assign' → logprob: -18.62520408630371
    7. '.assignment' → logprob: -19.62520408630371
    8. '       ' → logprob: -19.87520408630371
    9. ')' → logprob: -19.87520408630371
    10. '    ' → logprob: -20.00020408630371

Token 389: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4740898013114929
    2. ')
' → logprob: -0.9740898013114929
    3. ')
' → logprob: -12.224089622497559
    4. ' )
' → logprob: -12.849089622497559
    5. '       ' → logprob: -12.974089622497559
    6. ')

' → logprob: -13.474089622497559
    7. '   ' → logprob: -13.724089622497559
    8. ' )' → logprob: -14.974089622497559
    9. ')`
' → logprob: -16.724090576171875
    10. ')return' → logprob: -17.599090576171875

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5112308263778687
    2. 'return' → logprob: -1.7612308263778687
    3. ' return' → logprob: -1.8862308263778687
    4. '
' → logprob: -2.761230945587158
    5. ' 
' → logprob: -5.511230945587158
    6. '<|end|>' → logprob: -5.636230945587158
    7. '        
' → logprob: -5.886230945587158
    8. '  
' → logprob: -6.636230945587158
    9. '	return' → logprob: -7.386230945587158
    10. '   ' → logprob: -8.38623046875

Token 391: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00031985383247956634
    2. ' return' → logprob: -8.250319480895996
    3. '       ' → logprob: -9.750319480895996
    4. '
' → logprob: -15.500319480895996
    5. '   ' → logprob: -18.875320434570312
    6. '        
' → logprob: -19.125320434570312
    7. '	return' → logprob: -19.125320434570312
    8. '```' → logprob: -20.500320434570312
    9. ')return' → logprob: -21.375320434570312
    10. 'result' → logprob: -21.500320434570312

Token 392: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05243666470050812
    2. ' self' → logprob: -3.052436590194702
    3. 'Neg' → logprob: -5.677436828613281
    4. ' Neg' → logprob: -7.802436828613281
    5. 'Truth' → logprob: -12.677436828613281
    6. '(self' → logprob: -12.927436828613281
    7. 'Self' → logprob: -12.927436828613281
    8. '	self' → logprob: -13.927436828613281
    9. ' ' → logprob: -14.802436828613281
    10. '[self' → logprob: -15.302436828613281

Token 393: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -14.875000953674316
    3. '.neg' → logprob: -15.250000953674316
    4. 'NEG' → logprob: -15.500000953674316
    5. ' .' → logprob: -16.375001907348633
    6. '_NEG' → logprob: -17.000001907348633
    7. '.NOT' → logprob: -17.000001907348633
    8. '.NUM' → logprob: -18.000001907348633
    9. '.__' → logprob: -18.500001907348633
    10. '..' → logprob: -18.625001907348633

Token 394: 'EG' (ID: 21389)
  Prédit: 'EG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EG' → logprob: -3.054500666621607e-06
    2. 'eg' → logprob: -13.25000286102295
    3. 'E' → logprob: -14.25000286102295
    4. 'NEG' → logprob: -14.75000286102295
    5. 'Eg' → logprob: -16.625003814697266
    6. ' EG' → logprob: -16.625003814697266
    7. 'EGIN' → logprob: -16.875003814697266
    8. 'G' → logprob: -17.000003814697266
    9. 'EV' → logprob: -18.375003814697266
    10. '_NEG' → logprob: -19.125003814697266

Token 395: '_TABLE' (ID: 34862)
  Prédit: '_TABLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TABLE' → logprob: -1.5451681974809617e-05
    2. 'TABLE' → logprob: -11.125015258789062
    3. 'ATION' → logprob: -15.000015258789062
    4. '_TAB' → logprob: -16.375015258789062
    5. '_table' → logprob: -16.625015258789062
    6. '_' → logprob: -17.500015258789062
    7. 'Table' → logprob: -17.500015258789062
    8. '_Table' → logprob: -17.625015258789062
    9. 'ITable' → logprob: -17.750015258789062
    10. '@Table' → logprob: -17.875015258789062

Token 396: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. 'v' → logprob: -18.250001907348633
    4. '[
' → logprob: -21.750001907348633
    5. '[val' → logprob: -21.750001907348633
    6. '.get' → logprob: -22.625001907348633
    7. '[V' → logprob: -23.000001907348633
    8. ' [' → logprob: -23.375001907348633
    9. '[get' → logprob: -24.000001907348633
    10. '(v' → logprob: -24.125001907348633

Token 397: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -3.7146746763028204e-05
    2. ' ]' → logprob: -10.37503719329834
    3. '[' → logprob: -13.25003719329834
    4. ')' → logprob: -13.62503719329834
    5. ']
' → logprob: -13.87503719329834
    6. '   ' → logprob: -14.12503719329834
    7. '}' → logprob: -14.87503719329834
    8. '<|end|>' → logprob: -14.87503719329834
    9. ' ' → logprob: -15.50003719329834
    10. '       ' → logprob: -16.375036239624023

Token 398: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.029826855286955833
    2. 'class' → logprob: -3.5298268795013428
    3. '<|end|>' → logprob: -10.404827117919922
    4. ' class' → logprob: -10.779827117919922
    5. '
' → logprob: -10.904827117919922
    6. '<class' → logprob: -13.029827117919922
    7. '```' → logprob: -13.154827117919922
    8. '

' → logprob: -14.279827117919922
    9. '[' → logprob: -14.904827117919922
    10. '  
' → logprob: -16.029827117919922

Token 399: ' Binary' (ID: 32672)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.031452715396881104
    2. '#' → logprob: -3.9064526557922363
    3. 'Binary' → logprob: -4.531452655792236
    4. 'And' → logprob: -10.406453132629395
    5. ' class' → logprob: -10.906453132629395
    6. 'and' → logprob: -11.406453132629395
    7. 'Unary' → logprob: -11.906453132629395
    8. 'from' → logprob: -12.156453132629395
    9. 'Class' → logprob: -12.656453132629395
    10. 'Con' → logprob: -12.906453132629395

Token 400: ' operators' (ID: 29893)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.636707603931427
    2. ' operator' → logprob: -1.5117075443267822
    3. 'operator' → logprob: -2.5117075443267822
    4. ' class' → logprob: -2.5117075443267822
    5. '_operator' → logprob: -2.7617075443267822
    6. 'Operator' → logprob: -3.7617075443267822
    7. '(operator' → logprob: -7.261707782745361
    8. 'space' → logprob: -7.886707782745361
    9. ' ' → logprob: -8.761707305908203
    10. '_op' → logprob: -9.261707305908203

Token 401: ':' (ID: 25)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.8789383830153383e-05
    2. ' class' → logprob: -11.000019073486328
    3. '<|end|>' → logprob: -14.000019073486328
    4. '
' → logprob: -14.625019073486328
    5. '<class' → logprob: -14.875019073486328
    6. '"class' → logprob: -16.625019073486328
    7. '  
' → logprob: -16.625019073486328
    8. '(' → logprob: -16.875019073486328
    9. ' 
' → logprob: -17.500019073486328
    10. '	class' → logprob: -18.000019073486328

Token 402: ' Con' (ID: 1532)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.001960393972694874
    2. ' class' → logprob: -6.251960277557373
    3. 'from' → logprob: -10.751960754394531
    4. '
' → logprob: -12.251960754394531
    5. 'import' → logprob: -13.126960754394531
    6. '<class' → logprob: -13.751960754394531
    7. '<|end|>' → logprob: -14.376960754394531
    8. '"class' → logprob: -14.501960754394531
    9. 'and' → logprob: -15.251960754394531
    10. '(class' → logprob: -15.876960754394531

Token 403: 'junction' (ID: 140291)
  Prédit: 'junction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'junction' → logprob: -0.0004740447038784623
    2. 'class' → logprob: -8.250473976135254
    3. 'ju' → logprob: -9.000473976135254
    4. 'unction' → logprob: -10.625473976135254
    5. ' junction' → logprob: -11.250473976135254
    6. 'n' → logprob: -11.250473976135254
    7. 'jun' → logprob: -11.375473976135254
    8. 'nection' → logprob: -11.375473976135254
    9. 'j' → logprob: -11.750473976135254
    10. 'jon' → logprob: -12.875473976135254

Token 404: ' and' (ID: 326)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.007976618595421314
    2. '(' → logprob: -5.882976531982422
    3. '
' → logprob: -5.882976531982422
    4. ' class' → logprob: -6.757976531982422
    5. '(
' → logprob: -7.882976531982422
    6. ',' → logprob: -8.007976531982422
    7. '<|end|>' → logprob: -8.632976531982422
    8. '(class' → logprob: -8.757976531982422
    9. ' (' → logprob: -9.132976531982422
    10. ',class' → logprob: -11.507976531982422

Token 405: ' Dis' (ID: 3946)
  Prédit: 'Dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dis' → logprob: -0.038149017840623856
    2. ' Dis' → logprob: -3.288149118423462
    3. 'class' → logprob: -9.538148880004883
    4. ' dis' → logprob: -10.538148880004883
    5. 'dis' → logprob: -13.038148880004883
    6. ' ' → logprob: -13.538148880004883
    7. '_dis' → logprob: -13.663148880004883
    8. 'Or' → logprob: -14.038148880004883
    9. '#' → logprob: -14.163148880004883
    10. ' class' → logprob: -14.163148880004883

Token 406: 'junction' (ID: 140291)
  Prédit: 'junction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'junction' → logprob: -6.630610641877865e-06
    2. 'ju' → logprob: -12.625006675720215
    3. 'jun' → logprob: -13.000006675720215
    4. 'unction' → logprob: -14.625006675720215
    5. 'jon' → logprob: -15.875006675720215
    6. 'union' → logprob: -16.2500057220459
    7. ' junction' → logprob: -16.5000057220459
    8. 'joint' → logprob: -16.6250057220459
    9. 'j' → logprob: -16.7500057220459
    10. 'ion' → logprob: -17.6250057220459

Token 407: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0031875784043222666
    2. '
' → logprob: -5.753187656402588
    3. ' class' → logprob: -12.00318717956543
    4. '

' → logprob: -13.75318717956543
    5. '  
' → logprob: -14.00318717956543
    6. ' 
' → logprob: -14.00318717956543
    7. '<class' → logprob: -14.87818717956543
    8. '<|end|>' → logprob: -15.25318717956543
    9. '"class' → logprob: -16.87818717956543
    10. '
' → logprob: -17.00318717956543

Token 408: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.128163257315464e-07
    2. ' class' → logprob: -15.5
    3. '"class' → logprob: -18.0
    4. '<class' → logprob: -18.0
    5. ''class' → logprob: -19.5
    6. 'clas' → logprob: -19.875
    7. '-class' → logprob: -20.125
    8. '#' → logprob: -20.875
    9. '	class' → logprob: -21.0
    10. '
' → logprob: -21.125

Token 409: ' Binary' (ID: 32672)
  Prédit: 'Con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Con' → logprob: -0.6968828439712524
    2. ' Con' → logprob: -0.6968828439712524
    3. 'And' → logprob: -5.696882724761963
    4. ' And' → logprob: -8.071883201599121
    5. 'Binary' → logprob: -10.196883201599121
    6. ' conjunction' → logprob: -10.821883201599121
    7. 'Dis' → logprob: -14.196883201599121
    8. ' Binary' → logprob: -14.321883201599121
    9. 'con' → logprob: -14.946883201599121
    10. 'AND' → logprob: -15.071883201599121

Token 410: 'Operator' (ID: 21693)
  Prédit: 'Operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operator' → logprob: -0.019810892641544342
    2. '(' → logprob: -4.144810676574707
    3. 'Op' → logprob: -6.269810676574707
    4. 'operator' → logprob: -6.769810676574707
    5. 'Operation' → logprob: -8.144810676574707
    6. ' operator' → logprob: -8.519810676574707
    7. '_operator' → logprob: -9.519810676574707
    8. 'class' → logprob: -9.769810676574707
    9. 'OP' → logprob: -11.019810676574707
    10. '(
' → logprob: -11.269810676574707

Token 411: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.9888433093437925e-05
    2. ':' → logprob: -10.375040054321289
    3. ' (' → logprob: -12.000040054321289
    4. '(
' → logprob: -13.875040054321289
    5. '(Form' → logprob: -14.625040054321289
    6. '(Abstract' → logprob: -15.125040054321289
    7. '):' → logprob: -15.875040054321289
    8. ',' → logprob: -16.25004005432129
    9. '((' → logprob: -16.50004005432129
    10. '():' → logprob: -16.87504005432129

Token 412: 'Formula' (ID: 60482)
  Prédit: 'Formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formula' → logprob: -3.173704271830502e-06
    2. ' Formula' → logprob: -13.25000286102295
    3. '(' → logprob: -13.87500286102295
    4. 'Form' → logprob: -14.87500286102295
    5. 'formula' → logprob: -17.000003814697266
    6. '_formula' → logprob: -17.750003814697266
    7. ')' → logprob: -18.625003814697266
    8. 'ABC' → logprob: -19.000003814697266
    9. ' formula' → logprob: -19.250003814697266
    10. 'Format' → logprob: -19.250003814697266

Token 413: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.387919545173645
    2. '):
' → logprob: -1.137919545173645
    3. ':' → logprob: -7.5129194259643555
    4. ',' → logprob: -8.137919425964355
    5. '(' → logprob: -9.387919425964355
    6. ':
' → logprob: -9.512919425964355
    7. '   ' → logprob: -10.387919425964355
    8. '):
' → logprob: -11.637919425964355
    9. '):

' → logprob: -12.262919425964355
    10. ')' → logprob: -13.137919425964355

Token 414: ' ABC' (ID: 33047)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.002751142019405961
    2. ' ABC' → logprob: -6.002751350402832
    3. '):
' → logprob: -8.752751350402832
    4. 'abc' → logprob: -10.127751350402832
    5. '):' → logprob: -10.252751350402832
    6. '   ' → logprob: -10.877751350402832
    7. '
' → logprob: -11.752751350402832
    8. ')' → logprob: -12.002751350402832
    9. 'Formula' → logprob: -13.127751350402832
    10. 'abstract' → logprob: -13.377751350402832

Token 415: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043022483587265015
    2. '):
' → logprob: -3.168022394180298
    3. '):
' → logprob: -11.543022155761719
    4. '   ' → logprob: -12.418022155761719
    5. ')' → logprob: -12.543022155761719
    6. ':' → logprob: -12.793022155761719
    7. '):

' → logprob: -12.918022155761719
    8. ' ):' → logprob: -14.918022155761719
    9. ',' → logprob: -16.16802215576172
    10. '>):' → logprob: -16.54302215576172

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014896746724843979
    2. ':' → logprob: -4.889896869659424
    3. ')' → logprob: -5.764896869659424
    4. 'def' → logprob: -6.764896869659424
    5. '<|end|>' → logprob: -6.889896869659424
    6. '):' → logprob: -7.264896869659424
    7. ' def' → logprob: -7.764896869659424
    8. '):
' → logprob: -8.139896392822266
    9. '  ' → logprob: -9.014896392822266
    10. ',' → logprob: -9.014896392822266

Token 417: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12408246099948883
    2. '   ' → logprob: -2.249082565307617
    3. ' def' → logprob: -4.499082565307617
    4. ')' → logprob: -10.499082565307617
    5. '):
' → logprob: -11.749082565307617
    6. '  ' → logprob: -11.874082565307617
    7. ':' → logprob: -11.874082565307617
    8. ' ' → logprob: -11.999082565307617
    9. '):' → logprob: -11.999082565307617
    10. '	def' → logprob: -11.999082565307617

Token 418: ' __' (ID: 2516)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.06614610552787781
    2. '__' → logprob: -3.0661461353302
    3. 'init' → logprob: -4.066145896911621
    4. ' abstract' → logprob: -8.941145896911621
    5. '_init' → logprob: -9.441145896911621
    6. ' __' → logprob: -10.691145896911621
    7. 'def' → logprob: -10.816145896911621
    8. 'abc' → logprob: -11.941145896911621
    9. '___' → logprob: -13.816145896911621
    10. ' init' → logprob: -15.066145896911621

Token 419: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.875
    3. 'abstract' → logprob: -20.125
    4. 'ini' → logprob: -20.875
    5. '_init' → logprob: -21.5
    6. 'new' → logprob: -21.625
    7. 'int' → logprob: -21.75
    8. '(init' → logprob: -21.75
    9. 'in' → logprob: -22.5
    10. 'sub' → logprob: -22.75

Token 420: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -2.856408536899835e-05
    2. '__' → logprob: -11.000028610229492
    3. '(self' → logprob: -12.000028610229492
    4. '__(
' → logprob: -12.250028610229492
    5. '_(' → logprob: -14.875028610229492
    6. '(' → logprob: -15.375028610229492
    7. '__((' → logprob: -16.000028610229492
    8. 'self' → logprob: -16.375028610229492
    9. '__('' → logprob: -17.625028610229492
    10. '__("' → logprob: -19.125028610229492

Token 421: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.45848218582978e-06
    2. ' self' → logprob: -13.75000286102295
    3. '__(' → logprob: -14.12500286102295
    4. '(self' → logprob: -14.87500286102295
    5. ',' → logprob: -15.37500286102295
    6. '__' → logprob: -17.875001907348633
    7. '__,' → logprob: -19.250001907348633
    8. '   ' → logprob: -19.500001907348633
    9. ',self' → logprob: -19.500001907348633
    10. '	self' → logprob: -19.625001907348633

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07097765803337097
    2. 'self' → logprob: -2.6959776878356934
    3. '__,' → logprob: -7.070977687835693
    4. '__(' → logprob: -8.820977210998535
    5. '(self' → logprob: -10.570977210998535
    6. ' self' → logprob: -11.695977210998535
    7. ',self' → logprob: -12.695977210998535
    8. '__' → logprob: -13.320977210998535
    9. ' ,' → logprob: -13.695977210998535
    10. 'class' → logprob: -14.195977210998535

Token 423: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0009431460639461875
    2. ' left' → logprob: -7.000943183898926
    3. 'lhs' → logprob: -10.375943183898926
    4. '	left' → logprob: -15.125943183898926
    5. ' lhs' → logprob: -16.50094223022461
    6. '.left' → logprob: -17.37594223022461
    7. 'operand' → logprob: -17.50094223022461
    8. '(left' → logprob: -17.50094223022461
    9. '[left' → logprob: -17.50094223022461
    10. '   ' → logprob: -17.62594223022461

Token 424: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5231724977493286
    2. ',' → logprob: -0.8981724977493286
    3. ' ,' → logprob: -10.398172378540039
    4. ' :' → logprob: -11.273172378540039
    5. ':,' → logprob: -12.773172378540039
    6. '   ' → logprob: -13.148172378540039
    7. ',:' → logprob: -15.898172378540039
    8. ' ' → logprob: -16.14817237854004
    9. ':left' → logprob: -16.27317237854004
    10. '```' → logprob: -16.27317237854004

Token 425: ' Formula' (ID: 52227)
  Prédit: 'Formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formula' → logprob: -0.0003360582049936056
    2. ' Formula' → logprob: -8.000335693359375
    3. '_formula' → logprob: -15.000335693359375
    4. 'Form' → logprob: -16.500335693359375
    5. ' ' → logprob: -16.750335693359375
    6. ')' → logprob: -17.000335693359375
    7. '   ' → logprob: -17.250335693359375
    8. ' formula' → logprob: -17.250335693359375
    9. 'formula' → logprob: -17.375335693359375
    10. '  ' → logprob: -19.000335693359375

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.643152740551159e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',right' → logprob: -14.875036239624023
    4. ',
' → logprob: -15.000036239624023
    5. ',left' → logprob: -15.125036239624023
    6. '   ' → logprob: -18.750036239624023
    7. '‌,' → logprob: -19.250036239624023
    8. ',

' → logprob: -20.000036239624023
    9. ' ' → logprob: -21.125036239624023
    10. '       ' → logprob: -21.500036239624023

Token 427: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.47407761216163635
    2. ' right' → logprob: -0.974077582359314
    3. '	right' → logprob: -14.849077224731445
    4. '   ' → logprob: -15.724077224731445
    5. ' ' → logprob: -17.224077224731445
    6. ',right' → logprob: -17.974077224731445
    7. 'Right' → logprob: -18.099077224731445
    8. '_right' → logprob: -18.224077224731445
    9. '.right' → logprob: -18.849077224731445
    10. '(right' → logprob: -19.599077224731445

Token 428: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014610488899052143
    2. ',' → logprob: -4.264610290527344
    3. '):' → logprob: -7.764610290527344
    4. ' :' → logprob: -11.514610290527344
    5. ')' → logprob: -12.139610290527344
    6. '):
' → logprob: -12.514610290527344
    7. ' ,' → logprob: -13.264610290527344
    8. ' ):' → logprob: -14.639610290527344
    9. '<|end|>' → logprob: -14.889610290527344
    10. '<|end|>' → logprob: -15.264610290527344

Token 429: ' Formula' (ID: 52227)
  Prédit: 'Formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formula' → logprob: -0.06198998540639877
    2. ' Formula' → logprob: -2.8119900226593018
    3. ' formula' → logprob: -11.561989784240723
    4. '_formula' → logprob: -12.311989784240723
    5. 'Form' → logprob: -12.686989784240723
    6. ' ' → logprob: -13.436989784240723
    7. ')' → logprob: -13.561989784240723
    8. 'formula' → logprob: -13.561989784240723
    9. ' Formel' → logprob: -15.061989784240723
    10. ' Fór' → logprob: -15.061989784240723

Token 430: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3135269284248352
    2. '):
' → logprob: -1.3135268688201904
    3. ')' → logprob: -8.31352710723877
    4. ' ):' → logprob: -11.93852710723877
    5. '   ' → logprob: -12.31352710723877
    6. ':' → logprob: -12.81352710723877
    7. ',' → logprob: -13.06352710723877
    8. '):
' → logprob: -13.06352710723877
    9. ' ):
' → logprob: -13.68852710723877
    10. '):

' → logprob: -14.56352710723877

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03179435431957245
    2. 'self' → logprob: -3.531794309616089
    3. ' self' → logprob: -6.531794548034668
    4. '   ' → logprob: -7.781794548034668
    5. '	' → logprob: -9.031794548034668
    6. '	self' → logprob: -10.281794548034668
    7. ',' → logprob: -11.656794548034668
    8. '	   ' → logprob: -13.031794548034668
    9. ' ' → logprob: -13.906794548034668
    10. ',self' → logprob: -14.281794548034668

Token 432: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002090899972245097
    2. ' self' → logprob: -6.252090930938721
    3. '       ' → logprob: -8.752090454101562
    4. 'super' → logprob: -13.002090454101562
    5. '   ' → logprob: -13.252090454101562
    6. '	self' → logprob: -16.627090454101562
    7. ' ' → logprob: -18.127090454101562
    8. 'left' → logprob: -18.377090454101562
    9. ' super' → logprob: -18.627090454101562
    10. '     ' → logprob: -18.627090454101562

Token 433: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0003372502396814525
    2. '.' → logprob: -8.000337600708008
    3. 'left' → logprob: -13.625337600708008
    4. ' .' → logprob: -15.000337600708008
    5. '.Left' → logprob: -15.250337600708008
    6. '	left' → logprob: -17.625337600708008
    7. '.right' → logprob: -17.750337600708008
    8. ' left' → logprob: -18.625337600708008
    9. '.le' → logprob: -18.625337600708008
    10. '._' → logprob: -18.875337600708008

Token 434: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6334418654441833
    2. ' =' → logprob: -0.7584418654441833
    3. ',' → logprob: -7.133441925048828
    4. ' ' → logprob: -11.133441925048828
    5. '   ' → logprob: -11.633441925048828
    6. ':' → logprob: -12.008441925048828
    7. ')' → logprob: -12.258441925048828
    8. ' ,' → logprob: -12.383441925048828
    9. ' and' → logprob: -13.633441925048828
    10. '    ' → logprob: -13.758441925048828

Token 435: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16022412478923798
    2. ' left' → logprob: -1.9102240800857544
    3. '	left' → logprob: -18.03522491455078
    4. 'right' → logprob: -18.78522491455078
    5. '(left' → logprob: -19.16022491455078
    6. ' lef' → logprob: -19.41022491455078
    7. 'lef' → logprob: -20.16022491455078
    8. '_left' → logprob: -21.03522491455078
    9. '[left' → logprob: -21.16022491455078
    10. ':left' → logprob: -21.66022491455078

Token 436: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010212026536464691
    2. 'self' → logprob: -4.635211944580078
    3. ' self' → logprob: -8.760211944580078
    4. '
' → logprob: -8.885211944580078
    5. ',' → logprob: -9.385211944580078
    6. '   ' → logprob: -10.010211944580078
    7. ' ' → logprob: -11.385211944580078
    8. '	' → logprob: -11.885211944580078
    9. '<|end|>' → logprob: -12.010211944580078
    10. '	self' → logprob: -13.510211944580078

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2631767988204956
    2. 'self' → logprob: -1.5131767988204956
    3. ' self' → logprob: -4.513176918029785
    4. '   ' → logprob: -9.263176918029785
    5. ',' → logprob: -9.763176918029785
    6. '	self' → logprob: -10.638176918029785
    7. ' ' → logprob: -11.013176918029785
    8. ',self' → logprob: -11.388176918029785
    9. '
' → logprob: -12.263176918029785
    10. '      ' → logprob: -12.888176918029785

Token 438: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0016153192846104503
    2. 'right' → logprob: -6.751615524291992
    3. ' self' → logprob: -7.751615524291992
    4. '       ' → logprob: -11.251615524291992
    5. ' right' → logprob: -13.251615524291992
    6. '   ' → logprob: -15.126615524291992
    7. ' ' → logprob: -17.501615524291992
    8. '           ' → logprob: -18.001615524291992
    9. '	self' → logprob: -19.001615524291992
    10. '     ' → logprob: -19.126615524291992

Token 439: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.5335659384727478
    2. 'right' → logprob: -0.9085659384727478
    3. ' right' → logprob: -5.408565998077393
    4. '.' → logprob: -6.158565998077393
    5. ',' → logprob: -6.283565998077393
    6. '.left' → logprob: -6.908565998077393
    7. ',right' → logprob: -8.283565521240234
    8. '
' → logprob: -9.033565521240234
    9. '	right' → logprob: -9.033565521240234
    10. '   ' → logprob: -9.533565521240234

Token 440: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0485873706638813
    2. ' right' → logprob: -3.0485873222351074
    3. 'left' → logprob: -17.048587799072266
    4. '	right' → logprob: -18.673587799072266
    5. '(right' → logprob: -21.923587799072266
    6. 'r' → logprob: -22.173587799072266
    7. ' left' → logprob: -22.298587799072266
    8. '[right' → logprob: -22.923587799072266
    9. '右' → logprob: -23.048587799072266
    10. '.right' → logprob: -23.298587799072266

Token 442: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010001497343182564
    2. '
' → logprob: -4.8850016593933105
    3. '<|end|>' → logprob: -7.0100016593933105
    4. '    
' → logprob: -7.1350016593933105
    5. '@' → logprob: -7.7600016593933105
    6. 'def' → logprob: -9.635001182556152
    7. ')' → logprob: -10.260001182556152
    8. '  ' → logprob: -10.635001182556152
    9. 'abstract' → logprob: -10.760001182556152
    10. '    ' → logprob: -11.010001182556152

Token 444: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -4.961759259458631e-06
    2. '   ' → logprob: -12.750004768371582
    3. 'from' → logprob: -13.750004768371582
    4. 'def' → logprob: -14.625004768371582
    5. 'pass' → logprob: -15.000004768371582
    6. ' @' → logprob: -15.875004768371582
    7. 'class' → logprob: -17.7500057220459
    8. '@
' → logprob: -17.8750057220459
    9. '
' → logprob: -18.7500057220459
    10. 'abstract' → logprob: -18.8750057220459

Token 445: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: 0.0
    2. ' abstract' → logprob: -16.875
    3. 'staticmethod' → logprob: -18.5
    4. 'abc' → logprob: -19.125
    5. 'ab' → logprob: -20.0
    6. 'property' → logprob: -20.0
    7. 'classmethod' → logprob: -21.375
    8. '.abstract' → logprob: -21.375
    9. 'override' → logprob: -21.875
    10. 'abs' → logprob: -22.75

Token 446: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.007892413064837456
    2. '_method' → logprob: -4.882892608642578
    3. 'def' → logprob: -8.757892608642578
    4. '_token' → logprob: -10.132892608642578
    5. 'classmethod' → logprob: -10.382892608642578
    6. 'token' → logprob: -10.757892608642578
    7. 'staticmethod' → logprob: -11.132892608642578
    8. '.method' → logprob: -11.632892608642578
    9. ' method' → logprob: -12.507892608642578
    10. '	method' → logprob: -12.507892608642578

Token 447: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007648630067706108
    2. 'def' → logprob: -4.882648468017578
    3. '   ' → logprob: -10.632648468017578
    4. '
' → logprob: -11.382648468017578
    5. '\' → logprob: -13.007648468017578
    6. '```' → logprob: -13.132648468017578
    7. '    
' → logprob: -13.257648468017578
    8. ' def' → logprob: -14.882648468017578
    9. '\
' → logprob: -15.632648468017578
    10. '	def' → logprob: -15.882648468017578

Token 448: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.032160237431526184
    2. '
' → logprob: -3.5321602821350098
    3. '   ' → logprob: -6.40716028213501
    4. ' def' → logprob: -7.40716028213501
    5. 'method' → logprob: -9.032159805297852
    6. '
' → logprob: -10.907159805297852
    7. '    
' → logprob: -12.782159805297852
    8. '	def' → logprob: -13.032159805297852
    9. '\' → logprob: -13.282159805297852
    10. '```' → logprob: -13.282159805297852

Token 449: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1009654700756073
    2. 'abstract' → logprob: -2.3509654998779297
    3. 'property' → logprob: -8.10096549987793
    4. 'method' → logprob: -8.47596549987793
    5. ' def' → logprob: -8.97596549987793
    6. 'classmethod' → logprob: -10.35096549987793
    7. 'staticmethod' → logprob: -10.47596549987793
    8. 'define' → logprob: -11.10096549987793
    9. 'evaluate' → logprob: -11.60096549987793
    10. '
' → logprob: -11.85096549987793

Token 450: ' op' (ID: 991)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.0006311862962320447
    2. ' evaluate' → logprob: -7.500631332397461
    3. 'operate' → logprob: -9.875631332397461
    4. 'operator' → logprob: -11.250631332397461
    5. '_operator' → logprob: -12.750631332397461
    6. 'combine' → logprob: -12.750631332397461
    7. 'apply' → logprob: -12.750631332397461
    8. '.evaluate' → logprob: -13.625631332397461
    9. 'compute' → logprob: -14.625631332397461
    10. 'op' → logprob: -14.625631332397461

Token 451: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.15339335799217224
    2. 'er' → logprob: -2.153393268585205
    3. 'ERATOR' → logprob: -3.778393268585205
    4. '(' → logprob: -6.028393268585205
    5. 'ERATION' → logprob: -9.403393745422363
    6. '_code' → logprob: -9.528393745422363
    7. 'evaluate' → logprob: -9.528393745422363
    8. 'code' → logprob: -9.653393745422363
    9. '()' → logprob: -10.153393745422363
    10. 'uate' → logprob: -10.278393745422363

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0032026767730713
    2. '(self' → logprob: -1.0032026767730713
    3. ')(' → logprob: -1.5032026767730713
    4. 'self' → logprob: -4.003202438354492
    5. '):' → logprob: -4.378202438354492
    6. ')' → logprob: -5.003202438354492
    7. ')(
' → logprob: -6.378202438354492
    8. '):
' → logprob: -6.753202438354492
    9. 'evaluate' → logprob: -7.253202438354492
    10. '   ' → logprob: -7.253202438354492

Token 453: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09309115260839462
    2. 'left' → logprob: -2.9680912494659424
    3. 'v' → logprob: -3.8430912494659424
    4. ' a' → logprob: -5.218091011047363
    5. ' left' → logprob: -5.468091011047363
    6. 'x' → logprob: -5.593091011047363
    7. 'l' → logprob: -6.843091011047363
    8. ' v' → logprob: -7.968091011047363
    9. 'lhs' → logprob: -7.968091011047363
    10. ')' → logprob: -8.093091011047363

Token 454: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002990536391735077
    2. ',' → logprob: -6.12799072265625
    3. ':int' → logprob: -7.12799072265625
    4. ' :' → logprob: -13.50299072265625
    5. 'int' → logprob: -15.25299072265625
    6. ':Int' → logprob: -15.37799072265625
    7. '<int' → logprob: -15.62799072265625
    8. '[int' → logprob: -15.75299072265625
    9. '<|end|>' → logprob: -16.00299072265625
    10. ' ,' → logprob: -16.50299072265625

Token 455: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.662937372922897e-05
    2. ' int' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.500096321105957
    4. '[int' → logprob: -16.125097274780273
    5. ' ' → logprob: -17.000097274780273
    6. ')' → logprob: -17.000097274780273
    7. ':int' → logprob: -17.125097274780273
    8. '  ' → logprob: -17.625097274780273
    9. '	int' → logprob: -18.125097274780273
    10. '<int' → logprob: -18.250097274780273

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011450992315076292
    2. ' ,' → logprob: -9.250114440917969
    3. ',b' → logprob: -11.000114440917969
    4. 'b' → logprob: -13.875114440917969
    5. '   ' → logprob: -15.000114440917969
    6. ',
' → logprob: -15.625114440917969
    7. ',int' → logprob: -15.625114440917969
    8. ',a' → logprob: -17.12511444091797
    9. 'a' → logprob: -17.37511444091797
    10. '_,' → logprob: -17.62511444091797

Token 457: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804229199886322
    2. ' b' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.788042068481445
    4. '   ' → logprob: -15.163042068481445
    5. '	b' → logprob: -16.538042068481445
    6. '  ' → logprob: -16.913042068481445
    7. ')b' → logprob: -16.913042068481445
    8. '    ' → logprob: -18.163042068481445
    9. '
' → logprob: -19.038042068481445
    10. ' ' → logprob: -19.288042068481445

Token 458: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2582399249076843
    2. ',' → logprob: -1.508239984512329
    3. ':int' → logprob: -5.75823974609375
    4. ')' → logprob: -5.88323974609375
    5. '):' → logprob: -8.88323974609375
    6. ',int' → logprob: -9.50823974609375
    7. ' ,' → logprob: -9.63323974609375
    8. '   ' → logprob: -10.25823974609375
    9. ' :' → logprob: -11.38323974609375
    10. '[int' → logprob: -11.88323974609375

Token 459: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10023795068264008
    2. ' int' → logprob: -2.3502378463745117
    3. ')' → logprob: -10.475237846374512
    4. ':int' → logprob: -13.100237846374512
    5. '[int' → logprob: -14.475237846374512
    6. ' )' → logprob: -15.350237846374512
    7. '=int' → logprob: -16.225238800048828
    8. ' ' → logprob: -16.350238800048828
    9. '<int' → logprob: -16.850238800048828
    10. '(int' → logprob: -16.850238800048828

Token 460: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2020991056924686e-05
    2. ' )' → logprob: -10.375032424926758
    3. '):' → logprob: -14.500032424926758
    4. '   ' → logprob: -16.750032424926758
    5. '):
' → logprob: -17.000032424926758
    6. ')
' → logprob: -17.125032424926758
    7. ')->' → logprob: -17.250032424926758
    8. ':' → logprob: -17.375032424926758
    9. ',)' → logprob: -18.500032424926758
    10. ' ' → logprob: -18.625032424926758

Token 461: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014428533613681793
    2. ':' → logprob: -7.126442909240723
    3. ' )' → logprob: -8.626442909240723
    4. ' ->' → logprob: -8.751442909240723
    5. '->' → logprob: -9.251442909240723
    6. ')->' → logprob: -9.376442909240723
    7. '):' → logprob: -9.501442909240723
    8. '   ' → logprob: -10.376442909240723
    9. ' ' → logprob: -12.376442909240723
    10. '  ' → logprob: -12.876442909240723

Token 462: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.935296834039036e-06
    2. ' int' → logprob: -12.75000286102295
    3. '[int' → logprob: -19.875003814697266
    4. '<int' → logprob: -21.750003814697266
    5. '	int' → logprob: -21.875003814697266
    6. '   ' → logprob: -22.000003814697266
    7. ':int' → logprob: -22.000003814697266
    8. '(int' → logprob: -23.250003814697266
    9. '=int' → logprob: -23.375003814697266
    10. ' ' → logprob: -24.625003814697266

Token 463: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033435091376304626
    2. ' pass' → logprob: -4.033434867858887
    3. 'pass' (adapté à ' pass') → logprob: -4.658434867858887
    4. '...' → logprob: -5.783434867858887
    5. '   ' → logprob: -6.033434867858887
    6. '    ' → logprob: -10.033434867858887
    7. '<|end|>' → logprob: -10.033434867858887
    8. 'return' → logprob: -10.158434867858887
    9. '	pass' → logprob: -10.658434867858887
    10. ' ...' → logprob: -11.533434867858887

Token 466: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.055725887417793274
    2. '<|end|>' → logprob: -3.5557258129119873
    3. '   ' → logprob: -3.9307258129119873
    4. '<|end|>' → logprob: -5.555726051330566
    5. '

' → logprob: -6.555726051330566
    6. '    
' → logprob: -8.305726051330566
    7. '  
' → logprob: -8.930726051330566
    8. ' 
' → logprob: -9.430726051330566
    9. 'def' → logprob: -9.555726051330566
    10. ' ' → logprob: -10.055726051330566

Token 468: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.953082341467962e-05
    2. ' def' → logprob: -10.500039100646973
    3. '   ' → logprob: -11.375039100646973
    4. '
' → logprob: -14.875039100646973
    5. '    
' → logprob: -16.00004005432129
    6. '	def' → logprob: -18.25004005432129
    7. ' ' → logprob: -18.62504005432129
    8. '  
' → logprob: -18.62504005432129
    9. '        
' → logprob: -19.50004005432129
    10. '   
' → logprob: -20.50004005432129

Token 469: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.038042064756155014
    2. ' evaluate' → logprob: -3.2880420684814453
    3. '.evaluate' → logprob: -14.788042068481445
    4. 'def' → logprob: -16.038042068481445
    5. ' ' → logprob: -16.913042068481445
    6. '   ' → logprob: -17.163042068481445
    7. 'valuate' → logprob: -18.288042068481445
    8. ' def' → logprob: -18.538042068481445
    9. '  ' → logprob: -18.538042068481445
    10. 'Evaluate' → logprob: -18.663042068481445

Token 470: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0031790214125066996
    2. '(' → logprob: -5.75317907333374
    3. ' (' → logprob: -13.878178596496582
    4. '(
' → logprob: -15.003178596496582
    5. '(s' → logprob: -17.1281795501709
    6. 'self' → logprob: -18.0031795501709
    7. '   ' → logprob: -18.5031795501709
    8. '(Self' → logprob: -18.7531795501709
    9. ',' → logprob: -18.8781795501709
    10. ' ' → logprob: -19.0031795501709

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -13.125003814697266
    3. 'self' → logprob: -13.250003814697266
    4. '   ' → logprob: -16.125003814697266
    5. '(' → logprob: -16.500003814697266
    6. ',
' → logprob: -16.625003814697266
    7. '(self' → logprob: -16.875003814697266
    8. 'assignment' → logprob: -16.875003814697266
    9. ',self' → logprob: -17.750003814697266
    10. ',(' → logprob: -17.875003814697266

Token 472: ' assignment' (ID: 24618)
  Prédit: 'assignment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -0.0028778647538274527
    2. ' assignment' → logprob: -5.877877712249756
    3. 'self' → logprob: -10.002878189086914
    4. '   ' → logprob: -12.127878189086914
    5. 'assign' → logprob: -12.377878189086914
    6. '{
' → logprob: -12.502878189086914
    7. '{' → logprob: -12.627878189086914
    8. '.assignment' → logprob: -12.877878189086914
    9. '       ' → logprob: -13.002878189086914
    10. ' self' → logprob: -13.252878189086914

Token 473: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003389190824236721
    2. ' ,' → logprob: -8.750338554382324
    3. 'self' → logprob: -9.625338554382324
    4. '):' → logprob: -10.250338554382324
    5. '       ' → logprob: -10.750338554382324
    6. '   ' → logprob: -10.750338554382324
    7. ')' → logprob: -11.375338554382324
    8. ':' → logprob: -11.625338554382324
    9. '(self' → logprob: -11.750338554382324
    10. '[' → logprob: -12.875338554382324

Token 474: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.005234832875430584
    2. ' Dict' → logprob: -5.255234718322754
    3. 'dict' → logprob: -14.005234718322754
    4. ' dict' → logprob: -16.13023567199707
    5. '   ' → logprob: -18.38023567199707
    6. ')' → logprob: -18.50523567199707
    7. '       ' → logprob: -18.63023567199707
    8. '.Dict' → logprob: -19.00523567199707
    9. '_dict' → logprob: -19.38023567199707
    10. ' ' → logprob: -19.88023567199707

Token 475: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.306760805164231e-05
    2. '[' → logprob: -11.50001335144043
    3. ')' → logprob: -14.12501335144043
    4. ' [' → logprob: -14.37501335144043
    5. '       ' → logprob: -14.75001335144043
    6. '```' → logprob: -15.25001335144043
    7. '[self' → logprob: -15.37501335144043
    8. '   ' → logprob: -15.50001335144043
    9. '[[' → logprob: -16.12501335144043
    10. 'str' → logprob: -16.25001335144043

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11994633078575134
    2. '[str' → logprob: -2.244946241378784
    3. '[int' → logprob: -5.244946479797363
    4. '       ' → logprob: -7.744946479797363
    5. ' ,' → logprob: -7.994946479797363
    6. ',str' → logprob: -7.994946479797363
    7. ')' → logprob: -8.744946479797363
    8. '   ' → logprob: -9.119946479797363
    9. '[' → logprob: -9.244946479797363
    10. ',int' → logprob: -9.494946479797363

Token 477: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.961759259458631e-06
    2. ' int' → logprob: -12.250004768371582
    3. '[int' → logprob: -16.8750057220459
    4. '   ' → logprob: -18.3750057220459
    5. ')' → logprob: -18.5000057220459
    6. ' ' → logprob: -19.1250057220459
    7. '(int' → logprob: -19.7500057220459
    8. '<int' → logprob: -20.2500057220459
    9. ':int' → logprob: -20.7500057220459
    10. '  ' → logprob: -21.1250057220459

Token 478: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.47495681833243e-05
    2. '):' → logprob: -11.500024795532227
    3. '):
' → logprob: -11.625024795532227
    4. ' )' → logprob: -12.500024795532227
    5. '   ' → logprob: -13.750024795532227
    6. '])' → logprob: -14.625024795532227
    7. '`)' → logprob: -15.875024795532227
    8. ' ' → logprob: -16.500024795532227
    9. '})' → logprob: -17.125024795532227
    10. '):
' → logprob: -17.625024795532227

Token 479: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03321532905101776
    2. ':
' → logprob: -3.533215284347534
    3. '       ' → logprob: -6.658215522766113
    4. ')' → logprob: -7.158215522766113
    5. '):' → logprob: -7.783215522766113
    6. '):
' → logprob: -7.908215522766113
    7. '   ' → logprob: -8.533215522766113
    8. ':return' → logprob: -8.533215522766113
    9. ' :' → logprob: -10.033215522766113
    10. ':
' → logprob: -10.533215522766113

Token 480: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931474208831787
    2. ' int' → logprob: -0.6931474208831787
    3. ' ' → logprob: -15.193147659301758
    4. '   ' → logprob: -18.193147659301758
    5. ' ' → logprob: -18.818147659301758
    6. '	int' → logprob: -18.818147659301758
    7. '  ' → logprob: -19.318147659301758
    8. '=int' → logprob: -19.693147659301758
    9. '(int' → logprob: -19.818147659301758
    10. ':int' → logprob: -19.818147659301758

Token 481: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.877629280090332
    2. '       ' → logprob: -0.877629280090332
    3. '(self' → logprob: -2.627629280090332
    4. '(' → logprob: -2.877629280090332
    5. ':
' → logprob: -3.377629280090332
    6. '(
' → logprob: -5.627629280090332
    7. '   ' → logprob: -6.752629280090332
    8. '):
' → logprob: -9.002629280090332
    9. '	' → logprob: -9.127629280090332
    10. '{' → logprob: -9.377629280090332

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014793036505579948
    2. 'a' → logprob: -5.0147929191589355
    3. ' a' → logprob: -5.0147929191589355
    4. 'left' → logprob: -7.3897929191589355
    5. ' left' → logprob: -7.5147929191589355
    6. 'l' → logprob: -8.639793395996094
    7. ' l' → logprob: -10.389793395996094
    8. '   ' → logprob: -11.514793395996094
    9. 'v' → logprob: -11.889793395996094
    10. ' lhs' → logprob: -12.389793395996094

Token 483: ' a' (ID: 261)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22218172252178192
    2. 'a' (adapté à ' a') → logprob: -2.222181797027588
    3. 'left' → logprob: -2.972181797027588
    4. 'lv' → logprob: -3.347181797027588
    5. '       ' → logprob: -5.722181797027588
    6. ' lv' → logprob: -8.22218132019043
    7. 'la' → logprob: -8.34718132019043
    8. 'lhs' → logprob: -8.34718132019043
    9. ' left' → logprob: -8.47218132019043
    10. ' l' → logprob: -9.09718132019043

Token 484: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5764763355255127
    2. ' =' → logprob: -0.8264763355255127
    3. '_val' → logprob: -7.576476097106934
    4. 'val' → logprob: -11.326476097106934
    5. ',' → logprob: -12.451476097106934
    6. '_' → logprob: -13.076476097106934
    7. '_value' → logprob: -13.076476097106934
    8. 'v' → logprob: -13.326476097106934
    9. ')' → logprob: -13.451476097106934
    10. 'Val' → logprob: -15.701476097106934

Token 485: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004306692280806601
    2. ' self' → logprob: -7.750430583953857
    3. '       ' → logprob: -17.500431060791016
    4. '(self' → logprob: -18.000431060791016
    5. '=self' → logprob: -18.250431060791016
    6. '[self' → logprob: -19.125431060791016
    7. '	self' → logprob: -19.500431060791016
    8. 's' → logprob: -21.500431060791016
    9. 'Self' → logprob: -21.875431060791016
    10. '$self' → logprob: -22.375431060791016

Token 486: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.1472419600977446e-06
    2. '.right' → logprob: -14.125000953674316
    3. '.' → logprob: -15.125000953674316
    4. 'left' → logprob: -15.750000953674316
    5. '.evaluate' → logprob: -18.000001907348633
    6. '[left' → logprob: -18.625001907348633
    7. '.Left' → logprob: -20.000001907348633
    8. ' .' → logprob: -20.375001907348633
    9. '.eval' → logprob: -21.750001907348633
    10. '.parent' → logprob: -21.875001907348633

Token 487: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0009089602972380817
    2. '.' → logprob: -7.250908851623535
    3. 'evaluate' → logprob: -8.625908851623535
    4. ' .' → logprob: -10.875908851623535
    5. '.validate' → logprob: -16.00090980529785
    6. ')' → logprob: -16.00090980529785
    7. '  ' → logprob: -16.87590980529785
    8. '   ' → logprob: -16.87590980529785
    9. ' ' → logprob: -17.00090980529785
    10. '.calculate' → logprob: -17.00090980529785

Token 488: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.125
    3. '(assign' → logprob: -16.5
    4. '(
' → logprob: -19.0
    5. 'assignment' → logprob: -19.375
    6. '```' → logprob: -21.25
    7. '(operator' → logprob: -22.5
    8. '(order' → logprob: -22.625
    9. '(space' → logprob: -22.75
    10. '   ' → logprob: -23.0

Token 489: 'assignment' (ID: 78785)
  Prédit: 'assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -6.704273118884885e-07
    2. ' assignment' → logprob: -14.250000953674316
    3. '   ' → logprob: -20.125
    4. '(' → logprob: -20.875
    5. 'assign' → logprob: -21.125
    6. '.assignment' → logprob: -21.625
    7. 'assembly' → logprob: -22.0
    8. ' ' → logprob: -22.25
    9. 'assistant' → logprob: -22.25
    10. '       ' → logprob: -22.5

Token 490: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4814574122428894
    2. ')
' → logprob: -0.9814574122428894
    3. '       ' → logprob: -5.356457233428955
    4. ',' → logprob: -5.981457233428955
    5. ')
' → logprob: -9.856457710266113
    6. '),' → logprob: -10.481457710266113
    7. '   ' → logprob: -11.481457710266113
    8. ')

' → logprob: -12.731457710266113
    9. ' )
' → logprob: -12.981457710266113
    10. '           ' → logprob: -13.231457710266113

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19880662858486176
    2. ' 
' → logprob: -1.948806643486023
    3. '
' → logprob: -4.0738067626953125
    4. '  
' → logprob: -5.0738067626953125
    5. '        
' → logprob: -5.1988067626953125
    6. 'b' → logprob: -5.9488067626953125
    7. '	' → logprob: -6.4488067626953125
    8. '   
' → logprob: -6.8238067626953125
    9. '    
' → logprob: -7.1988067626953125
    10. ' ' → logprob: -7.5738067626953125

Token 492: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.014271167106926441
    2. ' b' → logprob: -4.264271259307861
    3. '       ' → logprob: -9.264270782470703
    4. '	b' → logprob: -12.139270782470703
    5. '	' → logprob: -12.264270782470703
    6. '   ' → logprob: -13.889270782470703
    7. ' ' → logprob: -14.639270782470703
    8. ' ' → logprob: -14.764270782470703
    9. '    ' → logprob: -14.889270782470703
    10. ' 	' → logprob: -15.639270782470703

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002078503370285
    2. '=' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.850208282470703
    4. ')' → logprob: -14.975208282470703
    5. ' =
' → logprob: -15.225208282470703
    6. ':' → logprob: -16.100208282470703
    7. ',' → logprob: -16.350208282470703
    8. '.' → logprob: -16.600208282470703
    9. '<|end|>' → logprob: -17.225208282470703
    10. '=self' → logprob: -17.600208282470703

Token 494: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061967913061380386
    2. ' self' → logprob: -2.8119678497314453
    3. '	self' → logprob: -16.686967849731445
    4. '(self' → logprob: -16.811967849731445
    5. '[self' → logprob: -17.061967849731445
    6. '       ' → logprob: -17.561967849731445
    7. '=self' → logprob: -18.186967849731445
    8. ' ' → logprob: -18.311967849731445
    9. ' ' → logprob: -18.686967849731445
    10. '   ' → logprob: -19.186967849731445

Token 495: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -1.8193366486229934e-05
    2. 'right' → logprob: -11.000018119812012
    3. '.' → logprob: -13.500018119812012
    4. '.left' → logprob: -17.375019073486328
    5. ' .' → logprob: -17.625019073486328
    6. '	right' → logprob: -18.375019073486328
    7. '[right' → logprob: -18.375019073486328
    8. 'ight' → logprob: -19.125019073486328
    9. ' right' → logprob: -19.875019073486328
    10. '_right' → logprob: -21.375019073486328

Token 496: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.011053833179175854
    2. '.' → logprob: -4.511054039001465
    3. ' .' → logprob: -12.136054039001465
    4. 'evaluate' → logprob: -14.636054039001465
    5. '.calculate' → logprob: -16.88605308532715
    6. '.validate' → logprob: -17.26105308532715
    7. '.eval' → logprob: -17.26105308532715
    8. '   ' → logprob: -17.51105308532715
    9. '.execute' → logprob: -17.76105308532715
    10. '.perform' → logprob: -17.88605308532715

Token 497: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.723352049040841e-06
    2. ' (' → logprob: -12.750004768371582
    3. 'assignment' → logprob: -13.375004768371582
    4. '(assign' → logprob: -15.375004768371582
    5. '[' → logprob: -17.750003814697266
    6. '(
' → logprob: -18.000003814697266
    7. '```' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.750003814697266
    9. ' assignment' → logprob: -19.500003814697266
    10. '.assignment' → logprob: -19.625003814697266

Token 498: 'assignment' (ID: 78785)
  Prédit: 'assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -5.512236498361744e-07
    2. ' assignment' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.875
    4. 'assign' → logprob: -21.0
    5. 'appointment' → logprob: -21.375
    6. 'assessment' → logprob: -21.75
    7. '.assignment' → logprob: -22.0
    8. ' ' → logprob: -22.25
    9. 'assembly' → logprob: -22.375
    10. '_assignment' → logprob: -22.5

Token 499: ')
' (ID: 446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010226892307400703
    2. '
' → logprob: -5.135226726531982
    3. 'return' → logprob: -6.135226726531982
    4. '	' → logprob: -7.385226726531982
    5. '        
' → logprob: -7.385226726531982
    6. '  
' → logprob: -8.13522720336914
    7. ' return' → logprob: -8.38522720336914
    8. '	return' → logprob: -9.76022720336914
    9. ' 
' → logprob: -9.76022720336914
    10. '   ' → logprob: -9.76022720336914

Token 501: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006510786479339004
    2. '       ' → logprob: -7.500650882720947
    3. ' return' → logprob: -9.250651359558105
    4. 'result' → logprob: -13.125651359558105
    5. '	return' → logprob: -17.50065040588379
    6. 'c' → logprob: -17.75065040588379
    7. '   ' → logprob: -19.00065040588379
    8. 'r' → logprob: -19.87565040588379
    9. '```' → logprob: -20.37565040588379
    10. 'res' → logprob: -21.00065040588379

Token 502: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0485873706638813
    2. ' self' → logprob: -3.0485873222351074
    3. '       ' → logprob: -17.673587799072266
    4. '(self' → logprob: -20.298587799072266
    5. '	self' → logprob: -20.423587799072266
    6. '   ' → logprob: -21.673587799072266
    7. ' ' → logprob: -21.923587799072266
    8. '[self' → logprob: -22.798587799072266
    9. ' ' → logprob: -23.923587799072266
    10. '    ' → logprob: -25.048587799072266

Token 503: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -6.194110756041482e-05
    2. '.' → logprob: -9.875061988830566
    3. ' .' → logprob: -12.000061988830566
    4. '.opt' → logprob: -12.750061988830566
    5. '.ops' → logprob: -13.875061988830566
    6. '​.' → logprob: -16.50006103515625
    7. '._' → logprob: -16.75006103515625
    8. '.operator' → logprob: -17.00006103515625
    9. '	op' → logprob: -17.12506103515625
    10. '.openc' → logprob: -17.75006103515625

Token 504: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0019301822176203132
    2. '(' → logprob: -6.251930236816406
    3. ' (' → logprob: -13.376930236816406
    4. '((' → logprob: -16.751930236816406
    5. '(
' → logprob: -17.001930236816406
    6. '(ab' → logprob: -17.876930236816406
    7. ' ' → logprob: -19.001930236816406
    8. '(i' → logprob: -19.251930236816406
    9. '(op' → logprob: -19.251930236816406
    10. '(A' → logprob: -19.251930236816406

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042292833677493036
    2. ',b' → logprob: -8.250422477722168
    3. ' ,' → logprob: -8.750422477722168
    4. ',
' → logprob: -13.500422477722168
    5. ')' → logprob: -14.000422477722168
    6. 'b' → logprob: -14.125422477722168
    7. ' b' → logprob: -16.125423431396484
    8. ' ' → logprob: -16.875423431396484
    9. '),' → logprob: -18.375423431396484
    10. '[' → logprob: -18.875423431396484

Token 506: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. ')b' → logprob: -19.376502990722656
    4. '   ' → logprob: -19.501502990722656
    5. '    ' → logprob: -19.876502990722656
    6. ' ' → logprob: -20.126502990722656
    7. '	b' → logprob: -20.501502990722656
    8. '       ' → logprob: -20.751502990722656
    9. '  ' → logprob: -22.376502990722656
    10. '     ' → logprob: -22.376502990722656

Token 507: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -14.87501335144043
    4. '<|end|>' → logprob: -15.37501335144043
    5. ')return' → logprob: -17.37501335144043
    6. '   ' → logprob: -17.62501335144043
    7. '),' → logprob: -17.62501335144043
    8. ')}' → logprob: -18.12501335144043
    9. ')

' → logprob: -18.25001335144043
    10. '       ' → logprob: -18.50001335144043

Token 508: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.978233846486546e-05
    2. '
' → logprob: -10.125049591064453
    3. ' class' → logprob: -12.250049591064453
    4. '<class' → logprob: -12.750049591064453
    5. '

' → logprob: -14.000049591064453
    6. '-class' → logprob: -15.000049591064453
    7. '#' → logprob: -15.125049591064453
    8. '<|end|>' → logprob: -15.625049591064453
    9. '```' → logprob: -15.875049591064453
    10. '"class' → logprob: -15.875049591064453

Token 509: ' Con' (ID: 1532)
  Prédit: 'Con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Con' → logprob: -0.5779483318328857
    2. ' Con' → logprob: -0.8279483318328857
    3. 'And' → logprob: -6.327948570251465
    4. ' And' → logprob: -8.452948570251465
    5. ' conjunction' → logprob: -12.077948570251465
    6. 'Dis' → logprob: -13.577948570251465
    7. 'AND' → logprob: -15.202948570251465
    8. 'con' → logprob: -15.202948570251465
    9. ' ' → logprob: -15.702948570251465
    10. '_con' → logprob: -16.07794761657715

Token 510: 'junction' (ID: 140291)
  Prédit: 'junction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'junction' → logprob: -0.0003408263437449932
    2. 'ju' → logprob: -8.250340461730957
    3. 'unction' → logprob: -9.875340461730957
    4. 'jun' → logprob: -11.125340461730957
    5. 'j' → logprob: -12.250340461730957
    6. 'nection' → logprob: -13.125340461730957
    7. ' junction' → logprob: -13.250340461730957
    8. 'n' → logprob: -13.250340461730957
    9. 'jon' → logprob: -13.375340461730957
    10. 'jection' → logprob: -14.750340461730957

Token 511: '(Binary' (ID: 163942)
  Prédit: '(Binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Binary' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.75000286102295
    3. '(binary' → logprob: -18.125003814697266
    4. ' (' → logprob: -18.375003814697266
    5. '(B' → logprob: -18.625003814697266
    6. '(Form' → logprob: -19.625003814697266
    7. '(Base' → logprob: -19.625003814697266
    8. '(Bit' → logprob: -20.000003814697266
    9. '(
' → logprob: -20.750003814697266
    10. '(Abstract' → logprob: -21.375003814697266

Token 512: 'Operator' (ID: 21693)
  Prédit: 'Operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operator' → logprob: 0.0
    2. 'Op' → logprob: -17.125
    3. 'operator' → logprob: -17.375
    4. 'O' → logprob: -18.125
    5. '_operator' → logprob: -19.25
    6. 'Oper' → logprob: -19.375
    7. '(' → logprob: -19.5
    8. ' Operator' → logprob: -19.75
    9. 'Operand' → logprob: -19.75
    10. '.Operator' → logprob: -20.5

Token 513: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06202314421534538
    2. '):
' → logprob: -2.812023162841797
    3. '   ' → logprob: -10.187023162841797
    4. '):
' → logprob: -11.937023162841797
    5. ')' → logprob: -12.437023162841797
    6. '):

' → logprob: -12.687023162841797
    7. ':' → logprob: -13.187023162841797
    8. ',' → logprob: -14.062023162841797
    9. '(Binary' → logprob: -14.437023162841797
    10. ' ):' → logprob: -14.812023162841797

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025536655448377132
    2. 'def' → logprob: -6.877553462982178
    3. ' def' → logprob: -7.377553462982178
    4. '):
' → logprob: -8.377553939819336
    5. '
' → logprob: -8.627553939819336
    6. ':' → logprob: -8.752553939819336
    7. ':
' → logprob: -9.877553939819336
    8. '<|end|>' → logprob: -9.877553939819336
    9. '  ' → logprob: -10.002553939819336
    10. ' ' → logprob: -10.127553939819336

Token 515: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0909355878829956
    2. ' def' → logprob: -2.965935707092285
    3. '   ' → logprob: -3.340935707092285
    4. '	def' → logprob: -12.715935707092285
    5. ' ' → logprob: -14.215935707092285
    6. 'DEF' → logprob: -14.340935707092285
    7. ' op' → logprob: -14.840935707092285
    8. '
' → logprob: -14.840935707092285
    9. 'OP' → logprob: -14.840935707092285
    10. 'class' → logprob: -14.965935707092285

Token 516: ' AND' (ID: 6178)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25337448716163635
    2. ' def' → logprob: -1.503374457359314
    3. 'OP' → logprob: -7.2533745765686035
    4. '   ' → logprob: -8.503374099731445
    5. ' OP' → logprob: -8.753374099731445
    6. ' op' → logprob: -9.003374099731445
    7. 'op' → logprob: -9.378374099731445
    8. 'DOMAIN' → logprob: -10.503374099731445
    9. '@' → logprob: -10.628374099731445
    10. 'class' → logprob: -10.878374099731445

Token 517: ' truth' (ID: 12388)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7311947345733643
    2. '_TABLE' → logprob: -1.4811947345733643
    3. 'TABLE' → logprob: -1.9811947345733643
    4. '   ' → logprob: -2.3561947345733643
    5. ' def' → logprob: -3.2311947345733643
    6. 'OP' → logprob: -5.106194496154785
    7. ' =' → logprob: -5.481194496154785
    8. '_OP' → logprob: -6.481194496154785
    9. 'op' → logprob: -6.481194496154785
    10. '_RESULT' → logprob: -7.231194496154785

Token 518: ' table' (ID: 3293)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.031011927872896194
    2. '_TABLE' → logprob: -3.7810118198394775
    3. '_value' → logprob: -5.656012058258057
    4. '_' → logprob: -5.781012058258057
    5. '   ' → logprob: -7.156012058258057
    6. 'TABLE' → logprob: -9.781011581420898
    7. ' _' → logprob: -10.031011581420898
    8. '_mapping' → logprob: -10.281011581420898
    9. '_map' → logprob: -10.406011581420898
    10. '_tab' → logprob: -10.406011581420898

Token 519: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21432048082351685
    2. '   ' → logprob: -1.714320421218872
    3. '=' → logprob: -4.839320659637451
    4. 'def' → logprob: -6.589320659637451
    5. 'OP' → logprob: -6.714320659637451
    6. '_OP' → logprob: -6.964320659637451
    7. 'TABLE' → logprob: -8.089320182800293
    8. ' def' → logprob: -8.339320182800293
    9. ' OP' → logprob: -8.714320182800293
    10. ' =
' → logprob: -9.339320182800293

Token 520: ' Table' (ID: 10211)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.7667616009712219
    2. '0' → logprob: -1.7667615413665771
    3. '{
' → logprob: -2.516761541366577
    4. '(' → logprob: -2.641761541366577
    5. 'a' → logprob: -3.516761541366577
    6. '[
' → logprob: -3.641761541366577
    7. ' ' → logprob: -3.766761541366577
    8. ' (' → logprob: -3.891761541366577
    9. '(
' → logprob: -4.016761779785156
    10. ' Truth' → logprob: -4.266761779785156

Token 521: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4247300624847412
    2. '[
' → logprob: -1.7997300624847412
    3. '[' → logprob: -2.549730062484741
    4. '{' → logprob: -2.924730062484741
    5. ' =' → logprob: -4.29973030090332
    6. '{
' → logprob: -5.29973030090332
    7. ' ' → logprob: -5.54973030090332
    8. '  ' → logprob: -5.67473030090332
    9. '<|end|>' → logprob: -5.67473030090332
    10. ':' → logprob: -5.79973030090332

Token 522: '-' (ID: 12)
  Prédit: 'ON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ON' → logprob: -1.0093307495117188
    2. ' =' → logprob: -1.8843307495117188
    3. '   ' → logprob: -2.1343307495117188
    4. 'ODE' → logprob: -2.3843307495117188
    5. '{' → logprob: -2.8843307495117188
    6. 'ONT' → logprob: -3.2593307495117188
    7. '{
' → logprob: -3.6343307495117188
    8. 'O' → logprob: -3.7593307495117188
    9. ':' → logprob: -3.8843307495117188
    10. '_' → logprob: -3.8843307495117188

Token 523: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.902307391166687
    2. '1' → logprob: -1.152307391166687
    3. '2' → logprob: -1.652307391166687
    4. '4' → logprob: -3.0273075103759766
    5. '5' → logprob: -4.027307510375977
    6. '7' → logprob: -4.902307510375977
    7. '6' → logprob: -5.402307510375977
    8. '9' → logprob: -6.402307510375977
    9. '8' → logprob: -6.402307510375977
    10. '.' → logprob: -6.652307510375977

Token 524: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004272734746336937
    2. ' =' → logprob: -6.254272937774658
    3. 'OP' → logprob: -7.004272937774658
    4. ' ' → logprob: -8.2542724609375
    5. 'def' → logprob: -8.7542724609375
    6. '=' → logprob: -9.1292724609375
    7. '{
' → logprob: -9.2542724609375
    8. '{' → logprob: -9.5042724609375
    9. ':' → logprob: -9.6292724609375
    10. ' OP' → logprob: -9.6292724609375

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028650204185396433
    2. 'def' → logprob: -6.252864837646484
    3. 'OP' → logprob: -7.627864837646484
    4. ' def' → logprob: -8.502864837646484
    5. '{
' → logprob: -9.877864837646484
    6. ' OP' → logprob: -10.252864837646484
    7. ' ' → logprob: -10.502864837646484
    8. '
' → logprob: -10.502864837646484
    9. '    
' → logprob: -10.627864837646484
    10. 'TABLE' → logprob: -10.877864837646484

Token 526: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3296668827533722
    2. 'def' → logprob: -1.9546668529510498
    3. 'OP' → logprob: -3.07966685295105
    4. 'AND' → logprob: -3.07966685295105
    5. 'TR' → logprob: -3.82966685295105
    6. ' def' → logprob: -4.579667091369629
    7. 'TABLE' → logprob: -5.704667091369629
    8. ' OP' → logprob: -5.829667091369629
    9. 'CON' → logprob: -5.829667091369629
    10. ' AND' → logprob: -5.954667091369629

Token 527: ' Rows' (ID: 153767)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5935468077659607
    2. 'def' → logprob: -1.7185468673706055
    3. 'AND' → logprob: -1.9685468673706055
    4. 'TR' → logprob: -3.0935468673706055
    5. 'OP' → logprob: -3.7185468673706055
    6. 'TABLE' → logprob: -3.8435468673706055
    7. 'CON' → logprob: -4.4685468673706055
    8. ' def' → logprob: -4.7185468673706055
    9. ' AND' → logprob: -5.2185468673706055
    10. ' TR' → logprob: -5.8435468673706055

Token 528: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7126258015632629
    2. '=' → logprob: -1.5876257419586182
    3. ':' → logprob: -2.087625741958618
    4. ' and' → logprob: -2.337625741958618
    5. 'and' → logprob: -2.962625741958618
    6. '   ' → logprob: -3.837625741958618
    7. ',' → logprob: -5.587625980377197
    8. '=
' → logprob: -6.087625980377197
    9. ':
' → logprob: -6.212625980377197
    10. ' =
' → logprob: -6.337625980377197

Token 529: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.3962530493736267
    2. ' columns' → logprob: -1.1462531089782715
    3. 'cols' → logprob: -4.7712531089782715
    4. ' cols' → logprob: -7.5212531089782715
    5. 'Columns' → logprob: -8.521252632141113
    6. '#' → logprob: -9.646252632141113
    7. 'Cols' → logprob: -10.521252632141113
    8. '   ' → logprob: -11.271252632141113
    9. '_columns' → logprob: -11.646252632141113
    10. ' Columns' → logprob: -12.271252632141113

Token 530: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3290266692638397
    2. ' =' → logprob: -1.454026699066162
    3. ' are' → logprob: -3.704026699066162
    4. ':' → logprob: -4.579026699066162
    5. '=
' → logprob: -5.079026699066162
    6. '   ' → logprob: -6.704026699066162
    7. 'def' → logprob: -6.954026699066162
    8. 'are' → logprob: -7.204026699066162
    9. ' =
' → logprob: -7.579026699066162
    10. '=[
' → logprob: -7.954026699066162

Token 531: ' from' (ID: 591)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26326513290405273
    2. 'Truth' → logprob: -2.5132651329040527
    3. '(' → logprob: -2.6382651329040527
    4. '0' → logprob: -4.013265132904053
    5. '[
' → logprob: -4.138265132904053
    6. '   ' → logprob: -4.263265132904053
    7. '#' → logprob: -4.763265132904053
    8. ' ' → logprob: -5.263265132904053
    9. ' [' → logprob: -5.263265132904053
    10. ' (' → logprob: -5.388265132904053

Token 532: ' {' (ID: 354)
  Prédit: 'Truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Truth' → logprob: -0.6222318410873413
    2. '(' → logprob: -1.6222318410873413
    3. '0' → logprob: -1.8722318410873413
    4. '[' → logprob: -2.997231960296631
    5. ' ' → logprob: -3.872231960296631
    6. ' (' → logprob: -4.497231960296631
    7. ' Truth' → logprob: -4.997231960296631
    8. 'left' → logprob: -5.372231960296631
    9. 'False' → logprob: -5.747231960296631
    10. 'DOMAIN' → logprob: -5.872231960296631

Token 533: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6449665427207947
    2. 'Truth' → logprob: -0.7699665427207947
    3. '(' → logprob: -4.7699666023254395
    4. 'False' → logprob: -6.0199666023254395
    5. ' Truth' → logprob: -7.5199666023254395
    6. ' ' → logprob: -7.7699666023254395
    7. '2' → logprob: -9.519966125488281
    8. ' (' → logprob: -9.644966125488281
    9. '(False' → logprob: -9.769966125488281
    10. '
' → logprob: -10.769966125488281

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014265445061028004
    2. ':' → logprob: -7.001426696777344
    3. ' ,' → logprob: -8.376426696777344
    4. ',
' → logprob: -9.376426696777344
    5. ' (' → logprob: -10.001426696777344
    6. '0' → logprob: -10.251426696777344
    7. 'x' → logprob: -10.626426696777344
    8. 'False' → logprob: -11.126426696777344
    9. '(False' → logprob: -11.251426696777344
    10. 'FALSE' → logprob: -11.251426696777344

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001931696751853451
    2. ' ' → logprob: -8.62519359588623
    3. '0' → logprob: -11.25019359588623
    4. '   ' → logprob: -15.62519359588623
    5. ',' → logprob: -16.312692642211914
    6. '
' → logprob: -16.812692642211914
    7. '2' → logprob: -16.937692642211914
    8. '  ' → logprob: -17.000192642211914
    9. 'UNKNOWN' → logprob: -17.250192642211914
    10. 'Unknown' → logprob: -17.562692642211914

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011723674833774567
    2. '2' → logprob: -6.8761725425720215
    3. ' ,' → logprob: -9.376172065734863
    4. '0' → logprob: -10.876172065734863
    5. ',
' → logprob: -11.001172065734863
    6. ' ' → logprob: -11.251172065734863
    7. '   ' → logprob: -13.126172065734863
    8. ':' → logprob: -14.501172065734863
    9. '}' → logprob: -14.626172065734863
    10. ',...' → logprob: -14.751172065734863

Token 537: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010397175792604685
    2. ' ' → logprob: -6.876039505004883
    3. '   ' → logprob: -12.751039505004883
    4. ',' → logprob: -13.438539505004883
    5. '  ' → logprob: -14.813539505004883
    6. '```' → logprob: -14.876039505004883
    7. '       ' → logprob: -15.563539505004883
    8. '...' → logprob: -15.563539505004883
    9. '۲' → logprob: -15.688539505004883
    10. '
' → logprob: -15.688539505004883

Token 538: '}' (ID: 92)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22178873419761658
    2. '}' → logprob: -1.846788763999939
    3. '   ' → logprob: -4.3467888832092285
    4. ':' → logprob: -4.8467888832092285
    5. '}:' → logprob: -5.0967888832092285
    6. '0' → logprob: -5.3467888832092285
    7. ' ,' → logprob: -5.5967888832092285
    8. '}
' → logprob: -6.2217888832092285
    9. ',
' → logprob: -6.8467888832092285
    10. ' ' → logprob: -7.3467888832092285

Token 539: ' rows' (ID: 13585)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024020420387387276
    2. ' =' → logprob: -4.774020195007324
    3. ',' → logprob: -5.024020195007324
    4. '{' → logprob: -5.524020195007324
    5. ':' → logprob: -6.649020195007324
    6. '{
' → logprob: -6.774020195007324
    7. '=' → logprob: -6.899020195007324
    8. ' ' → logprob: -7.649020195007324
    9. ' {' → logprob: -8.649020195007324
    10. '[' → logprob: -9.274020195007324

Token 540: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05722261220216751
    2. ',' → logprob: -3.432222604751587
    3. ':' → logprob: -4.682222843170166
    4. ' =' → logprob: -5.432222843170166
    5. '       ' → logprob: -6.057222843170166
    6. ' ' → logprob: -6.557222843170166
    7. '=' → logprob: -6.807222843170166
    8. '[' → logprob: -6.932222843170166
    9. ' and' → logprob: -6.932222843170166
    10. '  ' → logprob: -7.182222843170166

Token 541: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.12792961299419403
    2. ' columns' → logprob: -3.5029296875
    3. ' ' → logprob: -3.8779296875
    4. '0' → logprob: -4.2529296875
    5. '   ' → logprob: -4.5029296875
    6. 'cols' → logprob: -4.6279296875
    7. '{' → logprob: -4.7529296875
    8. '[' → logprob: -5.0029296875
    9. '2' → logprob: -5.0029296875
    10. '  ' → logprob: -5.7529296875

Token 542: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006561310030519962
    2. ' =' → logprob: -5.256561279296875
    3. ':' → logprob: -7.631561279296875
    4. ',' → logprob: -8.381561279296875
    5. '=' → logprob: -9.006561279296875
    6. ' ' → logprob: -9.131561279296875
    7. '
' → logprob: -9.631561279296875
    8. '{
' → logprob: -9.631561279296875
    9. '{' → logprob: -9.881561279296875
    10. '  ' → logprob: -10.631561279296875

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019889144459739327
    2. '    
' → logprob: -9.375199317932129
    3. '[
' → logprob: -10.750199317932129
    4. '
' → logprob: -11.500199317932129
    5. 'AND' → logprob: -11.500199317932129
    6. '[' → logprob: -11.750199317932129
    7. ' ' → logprob: -11.875199317932129
    8. '  ' → logprob: -11.875199317932129
    9. '#' → logprob: -12.250199317932129
    10. '    ' → logprob: -12.250199317932129

Token 544: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2972291111946106
    2. 'AND' → logprob: -1.5472290515899658
    3. 'CON' → logprob: -3.422229051589966
    4. 'OP' → logprob: -5.672229290008545
    5. 'TR' → logprob: -5.797229290008545
    6. 'TABLE' → logprob: -5.922229290008545
    7. ' AND' → logprob: -7.172229290008545
    8. ' CON' → logprob: -7.797229290008545
    9. '#' (adapté à ' #') → logprob: -7.922229290008545
    10. 'def' → logprob: -8.172228813171387

Token 545: ' Pre' (ID: 4659)
  Prédit: 'AND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AND' → logprob: -0.7639247179031372
    2. '   ' → logprob: -1.0139247179031372
    3. 'OP' → logprob: -2.8889245986938477
    4. 'TABLE' → logprob: -2.8889245986938477
    5. 'CON' → logprob: -3.7639245986938477
    6. 'TR' → logprob: -4.013924598693848
    7. ' AND' → logprob: -5.513924598693848
    8. '_AND' → logprob: -6.013924598693848
    9. '_OP' → logprob: -6.388924598693848
    10. 'and' → logprob: -6.763924598693848

Token 546: 'compute' (ID: 54521)
  Prédit: 'TABLE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'TABLE' → logprob: -0.8326931595802307
    2. '_TABLE' → logprob: -0.9576931595802307
    3. '_' → logprob: -3.582693099975586
    4. '_table' → logprob: -4.332693099975586
    5. 'COM' → logprob: -4.582693099975586
    6. 'CED' → logprob: -4.582693099975586
    7. 'C' → logprob: -4.582693099975586
    8. 'V' → logprob: -4.707693099975586
    9. '_MATRIX' → logprob: -4.707693099975586
    10. 'S' → logprob: -4.832693099975586

Token 547: ' the' (ID: 290)
  Prédit: 'AND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AND' → logprob: -0.9675256609916687
    2. '_op' → logprob: -1.5925257205963135
    3. 'TR' → logprob: -2.7175257205963135
    4. 'OP' → logprob: -2.7175257205963135
    5. '_table' → logprob: -2.8425257205963135
    6. '   ' → logprob: -3.2175257205963135
    7. 'TABLE' → logprob: -3.2175257205963135
    8. '_OP' → logprob: -3.3425257205963135
    9. '_truth' → logprob: -3.3425257205963135
    10. '_AND' → logprob: -4.592525482177734

Token 548: ' table' (ID: 3293)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.3932595252990723
    2. 'AND' → logprob: -1.5182595252990723
    3. 'TABLE' → logprob: -1.8932595252990723
    4. '_op' → logprob: -2.5182595252990723
    5. 'table' → logprob: -3.0182595252990723
    6. 'and' → logprob: -3.0182595252990723
    7. '_and' → logprob: -3.2682595252990723
    8. 'TR' → logprob: -3.6432595252990723
    9. '_truth' → logprob: -3.8932595252990723
    10. '_AND' → logprob: -4.143259525299072

Token 549: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017658978700637817
    2. 'AND' → logprob: -4.6426591873168945
    3. 'CON' → logprob: -5.3926591873168945
    4. ' AND' → logprob: -7.0176591873168945
    5. '_CON' → logprob: -7.0176591873168945
    6. ' CON' → logprob: -7.8926591873168945
    7. ' ' → logprob: -8.017659187316895
    8. '_AND' → logprob: -8.392659187316895
    9. 'and' → logprob: -8.892659187316895
    10. '_' → logprob: -9.767659187316895

Token 550: ' quick' (ID: 4853)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.0131919384002686
    2. '[
' → logprob: -1.5131919384002686
    3. '0' → logprob: -2.1381919384002686
    4. '[' → logprob: -2.7631919384002686
    5. '_con' → logprob: -2.7631919384002686
    6. 'CON' → logprob: -3.5131919384002686
    7. 'AND' → logprob: -3.7631919384002686
    8. '_' → logprob: -3.7631919384002686
    9. 'con' → logprob: -4.388192176818848
    10. '_op' → logprob: -4.388192176818848

Token 551: ' lookup' (ID: 37342)
  Prédit: 'lookup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lookup' → logprob: -0.7131787538528442
    2. ' lookup' → logprob: -0.8381787538528442
    3. ' access' → logprob: -3.0881786346435547
    4. ' look' → logprob: -4.088178634643555
    5. 'look' → logprob: -4.963178634643555
    6. 'access' → logprob: -5.338178634643555
    7. '_lookup' → logprob: -6.588178634643555
    8. '[
' → logprob: -6.963178634643555
    9. 'def' → logprob: -8.463178634643555
    10. '0' → logprob: -9.088178634643555

Token 552: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1142720952630043
    2. 'AND' → logprob: -2.489272117614746
    3. ' AND' → logprob: -4.114272117614746
    4. 'CON' → logprob: -5.739272117614746
    5. ' CON' → logprob: -6.864272117614746
    6. '_AND' → logprob: -7.239272117614746
    7. 'OP' → logprob: -7.489272117614746
    8. 'TABLE' → logprob: -7.614272117614746
    9. ' OP' → logprob: -7.739272117614746
    10. 'TR' → logprob: -7.864272117614746

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008080212399363518
    2. 'AND' → logprob: -5.258080005645752
    3. '_OP' → logprob: -7.133080005645752
    4. 'OP' → logprob: -7.633080005645752
    5. ' AND' → logprob: -7.883080005645752
    6. 'CON' → logprob: -8.00808048248291
    7. '_op' → logprob: -8.63308048248291
    8. ' OP' → logprob: -8.88308048248291
    9. '_AND' → logprob: -9.13308048248291
    10. '_' → logprob: -9.38308048248291

Token 554: ' #' (ID: 1069)
  Prédit: 'AND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AND' → logprob: -0.4361153542995453
    2. '   ' → logprob: -1.8111153841018677
    3. 'CON' → logprob: -2.436115264892578
    4. 'TABLE' → logprob: -3.561115264892578
    5. 'TR' → logprob: -3.686115264892578
    6. ' AND' → logprob: -4.061115264892578
    7. 'OP' → logprob: -4.436115264892578
    8. ' CON' → logprob: -4.686115264892578
    9. ' TR' → logprob: -6.061115264892578
    10. ' ' → logprob: -6.811115264892578

Token 555: '  ' (ID: 256)
  Prédit: 'AND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AND' → logprob: -0.26466041803359985
    2. 'CON' → logprob: -1.889660358428955
    3. '   ' → logprob: -3.389660358428955
    4. 'TR' → logprob: -4.264660358428955
    5. 'OP' → logprob: -4.514660358428955
    6. 'TABLE' → logprob: -4.514660358428955
    7. '#' → logprob: -5.764660358428955
    8. '_CON' → logprob: -6.264660358428955
    9. '_AND' → logprob: -6.889660358428955
    10. 'and' → logprob: -7.264660358428955

Token 556: ' ' (ID: 220)
  Prédit: 'AND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AND' → logprob: -0.13077034056186676
    2. 'CON' → logprob: -3.005770444869995
    3. 'TABLE' → logprob: -3.380770444869995
    4. 'OP' → logprob: -4.630770206451416
    5. 'TR' → logprob: -5.005770206451416
    6. '#' → logprob: -5.630770206451416
    7. '_AND' → logprob: -6.005770206451416
    8. '_CON' → logprob: -6.380770206451416
    9. '   ' → logprob: -6.380770206451416
    10. 'and' → logprob: -6.505770206451416

Token 557: '0' (ID: 15)
  Prédit: 'AND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AND' → logprob: -0.7203271389007568
    2. 'CON' → logprob: -1.0953271389007568
    3. 'TABLE' → logprob: -2.720327138900757
    4. '   ' → logprob: -3.345327138900757
    5. 'OP' → logprob: -3.470327138900757
    6. 'TR' → logprob: -3.595327138900757
    7. ' ' → logprob: -5.845327377319336
    8. '_CON' → logprob: -5.845327377319336
    9. ' CON' → logprob: -5.970327377319336
    10. '#' → logprob: -6.720327377319336

Token 558: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31353864073753357
    2. '0' → logprob: -2.5635385513305664
    3. ' ' → logprob: -2.5635385513305664
    4. ',' → logprob: -2.9385385513305664
    5. ' =' → logprob: -3.6885385513305664
    6. '   ' → logprob: -4.313538551330566
    7. '=' → logprob: -5.438538551330566
    8. '  ' → logprob: -5.563538551330566
    9. ' :' → logprob: -5.813538551330566
    10. '[' → logprob: -6.063538551330566

Token 559: ' anything' (ID: 6137)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010162705555558205
    2. ' ' → logprob: -5.010162830352783
    3. '{
' → logprob: -7.260162830352783
    4. '[
' → logprob: -7.260162830352783
    5. ' =' → logprob: -8.135162353515625
    6. '[' → logprob: -8.135162353515625
    7. '=' → logprob: -8.135162353515625
    8. '   ' → logprob: -8.385162353515625
    9. '  ' → logprob: -8.510162353515625
    10. ':' → logprob: -8.510162353515625

Token 560: ' =>' (ID: 871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22922804951667786
    2. ':' → logprob: -1.9792280197143555
    3. '=' → logprob: -2.8542280197143555
    4. ' ' → logprob: -6.2292280197143555
    5. ' :' → logprob: -6.6042280197143555
    6. ' is' → logprob: -6.6042280197143555
    7. '0' → logprob: -6.6042280197143555
    8. ':
' → logprob: -7.1042280197143555
    9. ' =
' → logprob: -7.2292280197143555
    10. ',' → logprob: -7.8542280197143555

Token 561: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014299227041192353
    2. ' ' → logprob: -9.500143051147461
    3. '{
' → logprob: -10.750143051147461
    4. '[
' → logprob: -11.125143051147461
    5. 'Truth' → logprob: -11.375143051147461
    6. '[' → logprob: -11.750143051147461
    7. '{' → logprob: -12.750143051147461
    8. 'lambda' → logprob: -12.750143051147461
    9. 'False' → logprob: -13.000143051147461
    10. '   ' → logprob: -14.125143051147461

Token 562: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. 'Truth' → logprob: -12.125011444091797
    3. ' ' → logprob: -12.750011444091797
    4. '[' → logprob: -14.125011444091797
    5. '{
' → logprob: -14.125011444091797
    6. '[
' → logprob: -14.625011444091797
    7. 'False' → logprob: -14.750011444091797
    8. '{' → logprob: -14.875011444091797
    9. 'truth' → logprob: -16.000011444091797
    10. ' Truth' → logprob: -16.250011444091797

Token 563: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006798971444368362
    2. ',' → logprob: -6.25679874420166
    3. '0' → logprob: -6.38179874420166
    4. ' ' → logprob: -6.50679874420166
    5. '
' → logprob: -6.75679874420166
    6. '#' → logprob: -8.63179874420166
    7. '  ' → logprob: -9.38179874420166
    8. ',
' → logprob: -9.75679874420166
    9. '    
' → logprob: -9.88179874420166
    10. 'class' → logprob: -10.38179874420166

Token 564: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005776984617114067
    2. '#' → logprob: -6.005776882171631
    3. ' ' → logprob: -6.630776882171631
    4. '0' → logprob: -7.130776882171631
    5. '
' → logprob: -7.255776882171631
    6. '  ' → logprob: -8.505777359008789
    7. '       ' → logprob: -9.630777359008789
    8. ',' → logprob: -9.880777359008789
    9. '    
' → logprob: -10.005777359008789
    10. '    ' → logprob: -10.630777359008789

Token 565: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07608513534069061
    2. '0' → logprob: -3.076085090637207
    3. ' ' → logprob: -3.701085090637207
    4. '  ' → logprob: -7.576085090637207
    5. '       ' → logprob: -7.701085090637207
    6. ',' → logprob: -8.201085090637207
    7. '
' → logprob: -8.451085090637207
    8. '[
' → logprob: -8.826085090637207
    9. 'def' → logprob: -8.826085090637207
    10. '    ' → logprob: -8.951085090637207

Token 566: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3790580630302429
    2. '0' → logprob: -1.5040581226348877
    3. ' ' → logprob: -2.7540581226348877
    4. 'CON' → logprob: -4.754057884216309
    5. 'C' → logprob: -5.379057884216309
    6. '  ' → logprob: -5.754057884216309
    7. '#' → logprob: -5.879057884216309
    8. 'AND' → logprob: -6.129057884216309
    9. '
' → logprob: -6.754057884216309
    10. 'TABLE' → logprob: -7.129057884216309

Token 567: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7274391055107117
    2. '   ' → logprob: -1.2274391651153564
    3. '0' → logprob: -2.1024391651153564
    4. ' ' → logprob: -3.2274391651153564
    5. '#' → logprob: -3.7274391651153564
    6. 'def' → logprob: -4.352438926696777
    7. '  ' → logprob: -4.852438926696777
    8. '
' → logprob: -5.727438926696777
    9. '{
' → logprob: -5.727438926696777
    10. '{' → logprob: -6.102438926696777

Token 568: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3517475128173828
    2. '0' → logprob: -1.4767475128173828
    3. ' ' → logprob: -3.726747512817383
    4. '1' → logprob: -3.851747512817383
    5. '[' → logprob: -5.101747512817383
    6. '  ' → logprob: -5.476747512817383
    7. '
' → logprob: -6.226747512817383
    8. '[
' → logprob: -6.226747512817383
    9. '       ' → logprob: -6.351747512817383
    10. '2' → logprob: -6.476747512817383

Token 569: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014799959026277065
    2. '*' → logprob: -4.264800071716309
    3. ' &' → logprob: -7.889800071716309
    4. ' ' → logprob: -9.264800071716309
    5. '   ' → logprob: -9.389800071716309
    6. ' if' → logprob: -10.764800071716309
    7. ',' → logprob: -11.639800071716309
    8. '	' → logprob: -11.639800071716309
    9. '  ' → logprob: -11.764800071716309
    10. '    ' → logprob: -12.139800071716309

Token 570: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46850430965423584
    2. '0' → logprob: -1.8435043096542358
    3. 'anything' → logprob: -2.5935044288635254
    4. ' ' → logprob: -2.8435044288635254
    5. 'any' → logprob: -3.4685044288635254
    6. ' any' → logprob: -4.218504428863525
    7. ' anything' → logprob: -4.468504428863525
    8. '   ' → logprob: -5.718504428863525
    9. 'min' → logprob: -5.718504428863525
    10. 'a' → logprob: -5.968504428863525

Token 571: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5360134243965149
    2. 'anything' → logprob: -1.6610133647918701
    3. '1' → logprob: -1.7860133647918701
    4. 'any' → logprob: -3.03601336479187
    5. 'a' → logprob: -5.786013603210449
    6. 'b' → logprob: -6.036013603210449
    7. ' anything' → logprob: -7.161013603210449
    8. 'x' → logprob: -7.286013603210449
    9. '2' → logprob: -7.911013603210449
    10. '...' → logprob: -8.28601360321045

Token 572: ' =' (ID: 314)
  Prédit: ' =>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =>' → logprob: -0.6524134278297424
    2. ' =' → logprob: -1.6524133682250977
    3. '   ' → logprob: -2.1524133682250977
    4. '=>' → logprob: -2.6524133682250977
    5. '=' → logprob: -2.9024133682250977
    6. ':' → logprob: -4.027413368225098
    7. ' ' → logprob: -4.527413368225098
    8. '    ' → logprob: -5.527413368225098
    9. '       ' → logprob: -5.777413368225098
    10. ' ->' → logprob: -5.902413368225098

Token 573: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032122957054525614
    2. ' ' → logprob: -5.7532124519348145
    3. '   ' → logprob: -11.128211975097656
    4. '0' → logprob: -11.503211975097656
    5. '2' → logprob: -12.128211975097656
    6. '    ' → logprob: -13.690711975097656
    7. 'min' → logprob: -14.253211975097656
    8. '  ' → logprob: -14.940711975097656
    9. '       ' → logprob: -15.003211975097656
    10. '=' → logprob: -15.628211975097656

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.500005722045898
    3. '0' → logprob: -14.125005722045898
    4. '2' → logprob: -14.375005722045898
    5. '   ' → logprob: -15.812505722045898
    6. '۱' → logprob: -16.3125057220459
    7. 'min' → logprob: -16.6875057220459
    8. '१' → logprob: -17.0000057220459
    9. '১' → logprob: -17.1250057220459
    10. '```' → logprob: -17.1875057220459

Token 575: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07331474870443344
    2. ',' → logprob: -3.573314666748047
    3. '
' → logprob: -3.948314666748047
    4. '1' → logprob: -4.448314666748047
    5. ' ' → logprob: -6.073314666748047
    6. ',
' → logprob: -6.448314666748047
    7. '2' → logprob: -6.448314666748047
    8. '       ' → logprob: -6.573314666748047
    9. '    ' → logprob: -6.823314666748047
    10. '0' → logprob: -7.198314666748047

Token 576: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015057739801704884
    2. '#' → logprob: -4.515057563781738
    3. ' ' → logprob: -6.140057563781738
    4. '1' → logprob: -7.390057563781738
    5. '2' → logprob: -7.765057563781738
    6. '0' → logprob: -8.265057563781738
    7. '       ' → logprob: -8.640057563781738
    8. ',' → logprob: -8.890057563781738
    9. '  ' → logprob: -9.640057563781738
    10. '    ' → logprob: -9.640057563781738

Token 577: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030865846201777458
    2. ' ' → logprob: -4.280865669250488
    3. '2' → logprob: -4.905865669250488
    4. '1' → logprob: -5.280865669250488
    5. '	' → logprob: -6.530865669250488
    6. '0' → logprob: -7.280865669250488
    7. '       ' → logprob: -7.405865669250488
    8. '#' (adapté à ' #') → logprob: -8.030865669250488
    9. '    ' → logprob: -8.155865669250488
    10. '  ' → logprob: -8.405865669250488

Token 578: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1507120281457901
    2. '2' → logprob: -2.650712013244629
    3. '1' → logprob: -3.275712013244629
    4. ' ' → logprob: -3.650712013244629
    5. '#' → logprob: -6.275712013244629
    6. 'def' → logprob: -6.900712013244629
    7. '  ' → logprob: -7.275712013244629
    8. 'TABLE' → logprob: -8.025712013244629
    9. '       ' → logprob: -8.275712013244629
    10. '    ' → logprob: -8.525712013244629

Token 579: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8492014408111572
    2. '2' → logprob: -0.9742014408111572
    3. '1' → logprob: -2.2242014408111572
    4. ' ' → logprob: -3.2242014408111572
    5. 'def' → logprob: -4.099201202392578
    6. '#' → logprob: -5.099201202392578
    7. 'TABLE' → logprob: -5.224201202392578
    8. 'OP' → logprob: -5.599201202392578
    9. 'op' → logprob: -5.724201202392578
    10. 'CON' → logprob: -6.474201202392578

Token 580: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24629579484462738
    2. '2' → logprob: -2.121295690536499
    3. ' ' → logprob: -2.746295690536499
    4. '1' → logprob: -3.871295690536499
    5. 'def' → logprob: -5.621295928955078
    6. '  ' → logprob: -5.871295928955078
    7. ' def' → logprob: -6.121295928955078
    8. '    ' → logprob: -6.121295928955078
    9. '       ' → logprob: -6.746295928955078
    10. '
' → logprob: -8.121295928955078

Token 581: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14291232824325562
    2. '*' → logprob: -2.0179123878479004
    3. '   ' → logprob: -8.892911911010742
    4. ' ' → logprob: -9.642911911010742
    5. '  ' → logprob: -10.892911911010742
    6. ',' → logprob: -12.267911911010742
    7. '    ' → logprob: -13.517911911010742
    8. '1' → logprob: -13.767911911010742
    9. ')' → logprob: -13.892911911010742
    10. ' if' → logprob: -14.330411911010742

Token 582: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012282057665288448
    2. '0' → logprob: -5.012281894683838
    3. '2' → logprob: -5.512281894683838
    4. ' ' → logprob: -6.512281894683838
    5. '   ' → logprob: -10.637282371520996
    6. '  ' → logprob: -13.262282371520996
    7. '...' → logprob: -15.199782371520996
    8. 'anything' → logprob: -15.512282371520996
    9. '(' → logprob: -15.574782371520996
    10. 'True' → logprob: -15.699782371520996

Token 583: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009119934402406216
    2. '2' → logprob: -5.134119987487793
    3. '0' → logprob: -5.759119987487793
    4. ' ' → logprob: -10.509119987487793
    5. '   ' → logprob: -13.071619987487793
    6. 'True' → logprob: -14.634119987487793
    7. '  ' → logprob: -15.134119987487793
    8. 'Truth' → logprob: -15.509119987487793
    9. '...' → logprob: -15.696619987487793
    10. '{' → logprob: -15.946619987487793

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4745340049266815
    2. '=' → logprob: -0.9745340347290039
    3. ':' → logprob: -7.849534034729004
    4. ' ' → logprob: -9.849534034729004
    5. '   ' → logprob: -12.099534034729004
    6. ' :' → logprob: -12.724534034729004
    7. ' =>' → logprob: -13.099534034729004
    8. '=>' → logprob: -13.474534034729004
    9. '  ' → logprob: -13.974534034729004
    10. ',' → logprob: -15.599534034729004

Token 585: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005249768029898405
    2. ' ' → logprob: -5.255249977111816
    3. '   ' → logprob: -11.130249977111816
    4. '  ' → logprob: -14.880249977111816
    5. 'Truth' → logprob: -15.255249977111816
    6. '۲' → logprob: -15.817749977111816
    7. '           ' → logprob: -16.0052490234375
    8. ' Truth' → logprob: -16.2552490234375
    9. '       ' → logprob: -16.6927490234375
    10. '    ' → logprob: -16.8802490234375

Token 586: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.500066757202148
    4. '۲' → logprob: -16.75006675720215
    5. 'True' → logprob: -16.87506675720215
    6. 'Truth' → logprob: -17.25006675720215
    7. '  ' → logprob: -17.62506675720215
    8. '２' → logprob: -18.00006675720215
    9. ' Truth' → logprob: -19.68756675720215
    10. '```' → logprob: -19.87506675720215

Token 587: ' etc' (ID: 5178)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020017379894852638
    2. 'def' → logprob: -4.395017147064209
    3. 'OP' → logprob: -5.145017147064209
    4. '_OP' → logprob: -7.270017147064209
    5. 'CON' → logprob: -8.145017623901367
    6. ' def' → logprob: -8.645017623901367
    7. ' ' → logprob: -9.270017623901367
    8. ' OP' → logprob: -9.645017623901367
    9. '_CON' → logprob: -9.895017623901367
    10. '_op' → logprob: -10.270017623901367

Token 588: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017873171716928482
    2. '
' → logprob: -4.392873287200928
    3. 'def' → logprob: -6.142873287200928
    4. ' ' → logprob: -7.392873287200928
    5. ' def' → logprob: -7.517873287200928
    6. 'CON' → logprob: -8.01787281036377
    7. '_CON' → logprob: -8.01787281036377
    8. '```' → logprob: -8.64287281036377
    9. '_OP' → logprob: -9.26787281036377
    10. '_' → logprob: -9.26787281036377

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04944048821926117
    2. 'def' → logprob: -4.174440383911133
    3. 'OP' → logprob: -4.424440383911133
    4. 'AND' → logprob: -5.049440383911133
    5. '_OP' → logprob: -5.299440383911133
    6. 'TABLE' → logprob: -6.174440383911133
    7. 'CON' → logprob: -6.299440383911133
    8. 'TR' → logprob: -6.424440383911133
    9. ' OP' → logprob: -6.924440383911133
    10. ' def' → logprob: -7.549440383911133

Token 590: ' AND' (ID: 6178)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5787264108657837
    2. 'def' → logprob: -1.5787264108657837
    3. 'AND' (adapté à ' AND') → logprob: -2.578726291656494
    4. 'OP' → logprob: -2.703726291656494
    5. ' OP' → logprob: -3.328726291656494
    6. ' def' → logprob: -4.203726291656494
    7. 'TR' → logprob: -4.453726291656494
    8. ' AND' → logprob: -4.828726291656494
    9. 'CON' → logprob: -4.828726291656494
    10. ' TR' → logprob: -5.453726291656494

Token 591: '_TABLE' (ID: 34862)
  Prédit: '_TABLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TABLE' → logprob: -0.0005557744298130274
    2. '_' → logprob: -8.250555992126465
    3. '_table' → logprob: -9.125555992126465
    4. ' =' → logprob: -9.500555992126465
    5. '_TAB' → logprob: -10.000555992126465
    6. '=' → logprob: -11.000555992126465
    7. 'TABLE' → logprob: -11.125555992126465
    8. '=_' → logprob: -11.500555992126465
    9. ' _' → logprob: -11.625555992126465
    10. '_T' → logprob: -12.250555992126465

Token 592: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006726264487951994
    2. '=' → logprob: -5.006726264953613
    3. '   ' → logprob: -11.881726264953613
    4. ':' → logprob: -13.506726264953613
    5. ' =
' → logprob: -14.256726264953613
    6. '[' → logprob: -14.506726264953613
    7. ' =[' → logprob: -14.756726264953613
    8. '=[' → logprob: -15.006726264953613
    9. ' ' → logprob: -15.131726264953613
    10. '=
' → logprob: -15.381726264953613

Token 593: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.025959093123674393
    2. '{
' → logprob: -4.275959014892578
    3. '[' → logprob: -4.525959014892578
    4. '{' → logprob: -7.275959014892578
    5. '[[' → logprob: -8.525959014892578
    6. ' [
' → logprob: -11.775959014892578
    7. '(
' → logprob: -13.275959014892578
    8. '   ' → logprob: -13.525959014892578
    9. '(' → logprob: -14.275959014892578
    10. ' [' → logprob: -16.150959014892578

Token 594: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.0339031834737398e-05
    2. ' [' → logprob: -11.750020027160645
    3. '[
' → logprob: -11.875020027160645
    4. '   ' → logprob: -12.250020027160645
    5. '0' → logprob: -14.750020027160645
    6. ' ' → logprob: -16.62502098083496
    7. '       ' → logprob: -16.75002098083496
    8. '  ' → logprob: -19.12502098083496
    9. '{' → logprob: -20.50002098083496
    10. ']' → logprob: -20.75002098083496

Token 595: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -15.75
    3. ' [' → logprob: -16.25
    4. '   ' → logprob: -16.75
    5. ' ' → logprob: -19.0
    6. '0' → logprob: -19.0
    7. '       ' → logprob: -19.75
    8. '(' → logprob: -21.25
    9. '#' → logprob: -21.25
    10. '  ' → logprob: -22.25

Token 596: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. 'Truth' → logprob: -11.125021934509277
    3. ' ' → logprob: -12.125021934509277
    4. 'False' → logprob: -13.750021934509277
    5. '   ' → logprob: -15.375021934509277
    6. '00' → logprob: -17.62502098083496
    7. ' Truth' → logprob: -17.62502098083496
    8. '  ' → logprob: -17.75002098083496
    9. '[' → logprob: -17.87502098083496
    10. '
' → logprob: -19.25002098083496

Token 597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045498309191316366
    2. '0' → logprob: -8.250454902648926
    3. ' ,' → logprob: -9.000454902648926
    4. ',
' → logprob: -9.625454902648926
    5. '   ' → logprob: -12.875454902648926
    6. ' ' → logprob: -14.250454902648926
    7. '       ' → logprob: -15.250454902648926
    8. '[' → logprob: -15.500454902648926
    9. '  ' → logprob: -16.000455856323242
    10. ',

' → logprob: -16.250455856323242

Token 598: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.625006675720215
    4. '[' → logprob: -17.2500057220459
    5. '  ' → logprob: -18.0625057220459
    6. '```' → logprob: -18.2500057220459
    7. '۰' → logprob: -18.3125057220459
    8. '       ' → logprob: -18.6250057220459
    9. '    ' → logprob: -18.8750057220459
    10. '00' → logprob: -19.3125057220459

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006684751133434474
    2. '0' → logprob: -7.375668525695801
    3. ' ,' → logprob: -10.1256685256958
    4. ',
' → logprob: -13.6256685256958
    5. ' ' → logprob: -14.6256685256958
    6. '   ' → logprob: -16.500667572021484
    7. '  ' → logprob: -16.875667572021484
    8. ',

' → logprob: -18.125667572021484
    9. '],' → logprob: -18.250667572021484
    10. ',\
' → logprob: -18.500667572021484

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -18.0
    4. '۰' → logprob: -19.125
    5. '[' → logprob: -19.5
    6. '  ' → logprob: -20.25
    7. '```' → logprob: -20.3125
    8. '０' → logprob: -21.25
    9. '       ' → logprob: -21.3125
    10. '০' → logprob: -21.375

Token 601: '],
' (ID: 2274)
  Prédit: '],
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],
' → logprob: -0.014107325114309788
    2. '],' → logprob: -4.7641072273254395
    3. ',' → logprob: -5.8891072273254395
    4. '],[' → logprob: -6.2641072273254395
    5. ',
' → logprob: -8.014107704162598
    6. '0' → logprob: -8.264107704162598
    7. '],

' → logprob: -9.514107704162598
    8. '[' → logprob: -9.639107704162598
    9. '],
' → logprob: -10.264107704162598
    10. '   ' → logprob: -10.889107704162598

Token 602: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013022610219195485
    2. ' [' → logprob: -6.876302242279053
    3. '0' → logprob: -8.376302719116211
    4. '   ' → logprob: -10.751302719116211
    5. '       ' → logprob: -11.126302719116211
    6. ' ' → logprob: -13.251302719116211
    7. '[
' → logprob: -15.126302719116211
    8. '	' → logprob: -15.376302719116211
    9. '      ' → logprob: -15.501302719116211
    10. '1' → logprob: -15.876302719116211

Token 603: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -3.47626737493556e-05
    2. '0' → logprob: -10.75003433227539
    3. ' [' → logprob: -11.25003433227539
    4. '   ' → logprob: -16.00003433227539
    5. '[
' → logprob: -16.75003433227539
    6. ' ' → logprob: -17.12503433227539
    7. '       ' → logprob: -19.12503433227539
    8. '  ' → logprob: -21.37503433227539
    9. '[[' → logprob: -21.37503433227539
    10. '(' → logprob: -21.75003433227539

Token 604: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023255497217178345
    2. '[' → logprob: -3.7732555866241455
    3. '[
' → logprob: -12.398255348205566
    4. ' [' → logprob: -12.648255348205566
    5. ' ' → logprob: -14.023255348205566
    6. '   ' → logprob: -14.273255348205566
    7. '
' → logprob: -14.773255348205566
    8. '1' → logprob: -14.773255348205566
    9. '{' → logprob: -16.023256301879883
    10. '(' → logprob: -16.335756301879883

Token 605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016477931290864944
    2. ',[' → logprob: -4.266478061676025
    3. '1' → logprob: -6.641478061676025
    4. '[' → logprob: -7.266478061676025
    5. ',
' → logprob: -8.141477584838867
    6. ' ,' → logprob: -12.016477584838867
    7. ' ,[' → logprob: -13.266477584838867
    8. '   ' → logprob: -13.266477584838867
    9. ',

' → logprob: -13.891477584838867
    10. ',
' → logprob: -14.266477584838867

Token 606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.750001907348633
    5. '{
' → logprob: -17.125001907348633
    6. '[' → logprob: -17.375001907348633
    7. '{' → logprob: -17.500001907348633
    8. '۱' → logprob: -18.375001907348633
    9. 'Truth' → logprob: -18.437501907348633
    10. '(' → logprob: -18.562501907348633

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012015394167974591
    2. ',[' → logprob: -6.876201629638672
    3. '1' → logprob: -9.876201629638672
    4. ',
' → logprob: -10.126201629638672
    5. '[' → logprob: -10.251201629638672
    6. ' ,' → logprob: -10.251201629638672
    7. '   ' → logprob: -13.376201629638672
    8. '0' → logprob: -13.501201629638672
    9. '],[' → logprob: -14.001201629638672
    10. '2' → logprob: -14.876201629638672

Token 608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -18.75
    3. ' ' → logprob: -19.25
    4. '۱' → logprob: -20.5
    5. '１' → logprob: -20.875
    6. '[' → logprob: -21.125
    7. '१' → logprob: -21.25
    8. '১' → logprob: -21.5
    9. '' → logprob: -21.625
    10. '```' → logprob: -22.25

Token 609: '],
' (ID: 2274)
  Prédit: '],
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],
' → logprob: -0.011526266112923622
    2. '],' → logprob: -5.136526107788086
    3. ',' → logprob: -5.886526107788086
    4. '[' → logprob: -6.636526107788086
    5. ',
' → logprob: -7.386526107788086
    6. '   ' → logprob: -7.761526107788086
    7. '1' → logprob: -8.886526107788086
    8. ']' → logprob: -9.011526107788086
    9. '       ' → logprob: -9.386526107788086
    10. '0' → logprob: -10.136526107788086

Token 610: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014262702316045761
    2. '       ' → logprob: -4.264262676239014
    3. ' [' → logprob: -9.639263153076172
    4. '[
' → logprob: -10.514263153076172
    5. '   ' → logprob: -12.014263153076172
    6. '      ' → logprob: -15.139263153076172
    7. '2' → logprob: -15.264263153076172
    8. '	' → logprob: -15.764263153076172
    9. '1' → logprob: -16.514263153076172
    10. ' ' → logprob: -16.764263153076172

Token 611: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -3.292907877039397e-06
    2. '0' → logprob: -12.75000286102295
    3. ' [' → logprob: -14.87500286102295
    4. '[
' → logprob: -18.125003814697266
    5. '   ' → logprob: -20.500003814697266
    6. ' ' → logprob: -21.125003814697266
    7. '{' → logprob: -21.875003814697266
    8. '       ' → logprob: -22.000003814697266
    9. '[[' → logprob: -23.500003814697266
    10. '[...,' → logprob: -23.625003814697266

Token 612: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.125005722045898
    3. ' ' → logprob: -15.625005722045898
    4. '   ' → logprob: -18.7500057220459
    5. '[
' → logprob: -18.7500057220459
    6. ' [' → logprob: -19.5000057220459
    7. '
' → logprob: -20.2500057220459
    8. '۰' → logprob: -20.5000057220459
    9. '  ' → logprob: -20.7500057220459
    10. '０' → logprob: -21.1250057220459

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010556964843999594
    2. '1' → logprob: -9.500105857849121
    3. ' ,' → logprob: -10.625105857849121
    4. ',
' → logprob: -12.625105857849121
    5. '   ' → logprob: -13.250105857849121
    6. '       ' → logprob: -15.125105857849121
    7. ' ' → logprob: -15.625105857849121
    8. ',[' → logprob: -15.625105857849121
    9. '2' → logprob: -15.875105857849121
    10. '[' → logprob: -16.125104904174805

Token 614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '2' → logprob: -18.375
    4. '   ' → logprob: -19.875
    5. '۱' → logprob: -20.375
    6. '１' → logprob: -21.375
    7. '১' → logprob: -22.375
    8. '१' → logprob: -22.625
    9. 'True' → logprob: -22.875
    10. '[' → logprob: -23.5

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.537180211627856e-05
    2. '2' → logprob: -10.125045776367188
    3. ' ,' → logprob: -12.625045776367188
    4. ',
' → logprob: -13.375045776367188
    5. '   ' → logprob: -15.375045776367188
    6. ' ' → logprob: -16.875045776367188
    7. '       ' → logprob: -18.250045776367188
    8. '  ' → logprob: -18.375045776367188
    9. '           ' → logprob: -18.625045776367188
    10. ',\
' → logprob: -18.750045776367188

Token 616: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '   ' → logprob: -19.75
    4. '۲' → logprob: -19.875
    5. '２' → logprob: -21.125
    6. '```' → logprob: -22.875
    7. '২' → logprob: -23.0
    8. '  ' → logprob: -23.25
    9. '[' → logprob: -23.375
    10. '₂' → logprob: -23.5

Token 617: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01091470941901207
    2. ']
' → logprob: -5.1359148025512695
    3. '   ' → logprob: -5.3859148025512695
    4. '],' → logprob: -8.76091480255127
    5. '],
' → logprob: -9.26091480255127
    6. '       ' → logprob: -9.76091480255127
    7. ' ]' → logprob: -10.01091480255127
    8. ']]' → logprob: -10.38591480255127
    9. ',' → logprob: -13.01091480255127
    10. ' ' → logprob: -14.26091480255127

Token 618: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4741276502609253
    2. ']' → logprob: -0.9741276502609253
    3. '       ' → logprob: -10.974127769470215
    4. ',' → logprob: -11.224127769470215
    5. ' ]' → logprob: -11.224127769470215
    6. ']

' → logprob: -12.849127769470215
    7. ' ' → logprob: -13.849127769470215
    8. '  ' → logprob: -13.849127769470215
    9. '           ' → logprob: -14.724127769470215
    10. ']
' → logprob: -14.974127769470215

Token 619: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04071458429098129
    2. '   ' → logprob: -3.9157145023345947
    3. ']

' (adapté à ' ]

') → logprob: -3.9157145023345947
    4. ']


' → logprob: -10.790714263916016
    5. ' ]' → logprob: -11.290714263916016
    6. ']
' → logprob: -12.040714263916016
    7. ' ' → logprob: -13.290714263916016
    8. 'def' → logprob: -14.290714263916016
    9. ']

' → logprob: -14.290714263916016
    10. ' ]

' → logprob: -14.540714263916016

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017783237621188164
    2. '
' → logprob: -4.267783164978027
    3. 'def' → logprob: -5.642783164978027
    4. ' def' → logprob: -10.142783164978027
    5. '    
' → logprob: -10.642783164978027
    6. '```' → logprob: -13.142783164978027
    7. ' ' → logprob: -13.642783164978027
    8. '

' → logprob: -14.017783164978027
    9. '  ' → logprob: -14.392783164978027
    10. '<|end|>' → logprob: -14.642783164978027

Token 621: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.2987729102605954e-05
    2. '   ' → logprob: -10.750042915344238
    3. ' def' → logprob: -10.750042915344238
    4. '
' → logprob: -17.875043869018555
    5. '	def' → logprob: -18.750043869018555
    6. '```' → logprob: -20.875043869018555
    7. ' ' → logprob: -21.000043869018555
    8. '    
' → logprob: -21.125043869018555
    9. ':def' → logprob: -21.250043869018555
    10. '  ' → logprob: -21.500043869018555

Token 622: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.006736916024237871
    2. ' op' → logprob: -5.006736755371094
    3. 'def' → logprob: -10.756736755371094
    4. ' def' → logprob: -15.881736755371094
    5. '_op' → logprob: -16.006736755371094
    6. '   ' → logprob: -16.756736755371094
    7. '	op' → logprob: -17.506736755371094
    8. ' ' → logprob: -17.756736755371094
    9. '
' → logprob: -18.006736755371094
    10. 'opt' → logprob: -18.131736755371094

Token 623: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007133854669518769
    2. '(' → logprob: -7.250713348388672
    3. ' (' → logprob: -13.375713348388672
    4. '(a' → logprob: -13.875713348388672
    5. '(s' → logprob: -14.500713348388672
    6. '(
' → logprob: -15.250713348388672
    7. '   ' → logprob: -16.250713348388672
    8. '(sel' → logprob: -18.500713348388672
    9. ' ' → logprob: -19.000713348388672
    10. 'self' → logprob: -19.125713348388672

Token 624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2172650694847107
    2. '(self' → logprob: -1.8422651290893555
    3. '.op' → logprob: -4.2172651290893555
    4. 'self' → logprob: -4.4672651290893555
    5. '(a' → logprob: -5.7172651290893555
    6. '   ' → logprob: -6.2172651290893555
    7. ',self' → logprob: -6.4672651290893555
    8. 'op' → logprob: -7.3422651290893555
    9. 'def' → logprob: -7.5922651290893555
    10. ' ,' → logprob: -7.7172651290893555

Token 625: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00012892624363303185
    2. 'self' → logprob: -9.000128746032715
    3. ' a' → logprob: -12.125128746032715
    4. '   ' → logprob: -17.00012969970703
    5. ' self' → logprob: -17.62512969970703
    6. '       ' → logprob: -19.62512969970703
    7. ' ' → logprob: -20.00012969970703
    8. '  ' → logprob: -20.62512969970703
    9. '	a' → logprob: -20.75012969970703
    10. '     ' → logprob: -21.62512969970703

Token 626: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03879253938794136
    2. ' ,' → logprob: -3.788792610168457
    3. '][' → logprob: -5.163792610168457
    4. ':' → logprob: -5.288792610168457
    5. ',b' → logprob: -6.913792610168457
    6. ')[' → logprob: -7.413792610168457
    7. '[' → logprob: -7.413792610168457
    8. '[int' → logprob: -7.413792610168457
    9. ' ][' → logprob: -7.663792610168457
    10. ',a' → logprob: -8.163792610168457

Token 627: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.15310683415737e-05
    2. ' int' → logprob: -10.750021934509277
    3. ':int' → logprob: -18.87502098083496
    4. '(int' → logprob: -20.00002098083496
    5. '   ' → logprob: -20.87502098083496
    6. '[int' → logprob: -21.00002098083496
    7. 'b' → logprob: -21.25002098083496
    8. ' ' → logprob: -21.37502098083496
    9. '=int' → logprob: -21.50002098083496
    10. '	int' → logprob: -21.87502098083496

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003464289184194058
    2. ',b' → logprob: -8.250346183776855
    3. ' ,' → logprob: -9.375346183776855
    4. ',int' → logprob: -15.375346183776855
    5. '   ' → logprob: -16.750347137451172
    6. ',
' → logprob: -17.000347137451172
    7. ':' → logprob: -18.125347137451172
    8. ',a' → logprob: -18.125347137451172
    9. 'b' → logprob: -18.500347137451172
    10. ',self' → logprob: -18.750347137451172

Token 629: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031777136027812958
    2. ' b' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.253177642822266
    4. ' ' → logprob: -19.503177642822266
    5. '    ' → logprob: -20.253177642822266
    6. '  ' → logprob: -20.628177642822266
    7. ')b' → logprob: -20.878177642822266
    8. '	b' → logprob: -21.003177642822266
    9. '       ' → logprob: -21.378177642822266
    10. '
' → logprob: -22.378177642822266

Token 630: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03867395967245102
    2. '):' → logprob: -3.6636738777160645
    3. ')' → logprob: -4.4136738777160645
    4. ' ):' → logprob: -9.413674354553223
    5. ' :' → logprob: -10.413674354553223
    6. ':int' → logprob: -10.663674354553223
    7. '):
' → logprob: -10.663674354553223
    8. '   ' → logprob: -11.288674354553223
    9. ' )' → logprob: -11.413674354553223
    10. ',' → logprob: -12.663674354553223

Token 631: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. ' ' → logprob: -18.250335693359375
    4. ')' → logprob: -18.250335693359375
    5. '   ' → logprob: -18.375335693359375
    6. ':int' → logprob: -18.625335693359375
    7. '(int' → logprob: -19.000335693359375
    8. '[int' → logprob: -19.250335693359375
    9. '  ' → logprob: -20.625335693359375
    10. '	int' → logprob: -21.000335693359375

Token 632: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.47495681833243e-05
    2. '):' → logprob: -10.875024795532227
    3. ' )' → logprob: -12.375024795532227
    4. '   ' → logprob: -14.500024795532227
    5. '):
' → logprob: -14.750024795532227
    6. ')->' → logprob: -15.500024795532227
    7. ']' → logprob: -16.250024795532227
    8. ':' → logprob: -16.375024795532227
    9. ')
' → logprob: -17.375024795532227
    10. '):
' → logprob: -18.375024795532227

Token 633: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0127636743709445
    2. '->' → logprob: -4.887763500213623
    3. ')' → logprob: -5.762763500213623
    4. ' ->' → logprob: -6.387763500213623
    5. '):' → logprob: -8.262763977050781
    6. ':return' → logprob: -10.762763977050781
    7. '>' → logprob: -11.512763977050781
    8. '   ' → logprob: -11.637763977050781
    9. ')->' → logprob: -11.762763977050781
    10. ':
' → logprob: -12.262763977050781

Token 634: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7610454708337784e-05
    2. ' int' → logprob: -10.500027656555176
    3. ' ' → logprob: -18.37502670288086
    4. '   ' → logprob: -18.50002670288086
    5. '  ' → logprob: -19.62502670288086
    6. '[int' → logprob: -19.87502670288086
    7. 'return' → logprob: -20.00002670288086
    8. '(int' → logprob: -20.12502670288086
    9. ':int' → logprob: -22.25002670288086
    10. '=int' → logprob: -22.50002670288086

Token 635: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007114463951438665
    2. ':
' → logprob: -5.007114410400391
    3. '       ' → logprob: -8.13211441040039
    4. ':return' → logprob: -10.50711441040039
    5. '[' → logprob: -10.63211441040039
    6. '):' → logprob: -10.88211441040039
    7. '   ' → logprob: -10.88211441040039
    8. '):
' → logprob: -12.25711441040039
    9. '{' → logprob: -12.38211441040039
    10. ':
' → logprob: -13.63211441040039

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008574149571359158
    2. 'return' → logprob: -5.25857400894165
    3. ' return' → logprob: -5.75857400894165
    4. '   ' → logprob: -8.883574485778809
    5. '<|end|>' → logprob: -10.883574485778809
    6. '	return' → logprob: -11.383574485778809
    7. '{return' → logprob: -12.383574485778809
    8. '
' → logprob: -13.133574485778809
    9. '[' → logprob: -14.008574485778809
    10. ' ' → logprob: -14.383574485778809

Token 637: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025666454806923866
    2. '       ' → logprob: -3.7756664752960205
    3. ' return' → logprob: -6.025666236877441
    4. '	return' → logprob: -13.900666236877441
    5. ':return' → logprob: -14.650666236877441
    6. '{return' → logprob: -15.150666236877441
    7. '   ' → logprob: -15.775666236877441
    8. '```' → logprob: -15.900666236877441
    9. '
' → logprob: -16.400667190551758
    10. '	' → logprob: -17.900667190551758

Token 638: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.73052782076411e-05
    2. ' self' → logprob: -10.000067710876465
    3. 'Con' → logprob: -10.750067710876465
    4. '(self' → logprob: -15.500067710876465
    5. 'Binary' → logprob: -15.875067710876465
    6. 'Self' → logprob: -17.00006675720215
    7. '[self' → logprob: -17.12506675720215
    8. '=self' → logprob: -18.25006675720215
    9. '
' → logprob: -19.00006675720215
    10. '	self' → logprob: -19.00006675720215

Token 639: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -5.512236498361744e-07
    2. 'AND' → logprob: -15.000000953674316
    3. '.and' → logprob: -16.5
    4. '.And' → logprob: -16.875
    5. ' .' → logprob: -17.125
    6. '.' → logprob: -17.5
    7. '	AND' → logprob: -17.625
    8. '._' → logprob: -18.25
    9. '.CON' → logprob: -18.375
    10. 'A' → logprob: -18.375

Token 640: 'ND' (ID: 17538)
  Prédit: 'ND'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ND' → logprob: -0.21326860785484314
    2. 'D' → logprob: -1.9632686376571655
    3. 'AND' → logprob: -2.963268518447876
    4. 'END' → logprob: -12.838268280029297
    5. 'SD' → logprob: -13.088268280029297
    6. '
' → logprob: -13.213268280029297
    7. '[' → logprob: -13.588268280029297
    8. 'N' → logprob: -14.463268280029297
    9. '\' → logprob: -14.713268280029297
    10. '`' → logprob: -14.713268280029297

Token 641: '_TABLE' (ID: 34862)
  Prédit: '_TABLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TABLE' → logprob: -0.0024799390230327845
    2. 'TABLE' → logprob: -6.0024800300598145
    3. '_table' → logprob: -12.502479553222656
    4. '[' → logprob: -15.252479553222656
    5. '_TAB' → logprob: -15.627479553222656
    6. 'Table' → logprob: -16.752479553222656
    7. '_Table' → logprob: -16.877479553222656
    8. '_T' → logprob: -17.752479553222656
    9. '[_' → logprob: -17.752479553222656
    10. '@Table' → logprob: -17.877479553222656

Token 642: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.306760805164231e-05
    2. 'a' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.62501335144043
    4. '[' → logprob: -19.62501335144043
    5. '	a' → logprob: -20.00001335144043
    6. ' [' → logprob: -20.87501335144043
    7. ' a' → logprob: -21.50001335144043
    8. '[b' → logprob: -22.00001335144043
    9. '[min' → logprob: -22.75001335144043
    10. '<a' → logprob: -22.87501335144043

Token 643: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.147740689106286e-05
    2. '[b' → logprob: -9.87507152557373
    3. ']' → logprob: -11.37507152557373
    4. ' ][' → logprob: -11.75007152557373
    5. '[' → logprob: -14.75007152557373
    6. '   ' → logprob: -16.000070571899414
    7. 'b' → logprob: -16.625070571899414
    8. '[a' → logprob: -17.750070571899414
    9. '       ' → logprob: -18.750070571899414
    10. ']
' → logprob: -19.000070571899414

Token 644: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -17.375
    3. '	b' → logprob: -22.875
    4. '   ' → logprob: -23.5
    5. ')b' → logprob: -23.625
    6. '_b' → logprob: -25.125
    7. '
' → logprob: -25.625
    8. '  ' → logprob: -26.25
    9. '```' → logprob: -26.5
    10. '>b' → logprob: -26.875

Token 645: ']


' (ID: 52447)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 646: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.034592388459714e-06
    2. '
' → logprob: -12.250005722045898
    3. ' class' → logprob: -14.250005722045898
    4. '<class' → logprob: -15.250005722045898
    5. '<|end|>' → logprob: -16.5000057220459
    6. '```' → logprob: -16.6250057220459
    7. '"class' → logprob: -17.2500057220459
    8. '

' → logprob: -17.6250057220459
    9. '-class' → logprob: -19.2500057220459
    10. '


' → logprob: -19.3750057220459

Token 647: ' Dis' (ID: 3946)
  Prédit: 'Dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dis' → logprob: -2.2007883671903983e-05
    2. ' Dis' → logprob: -10.750021934509277
    3. 'class' → logprob: -14.750021934509277
    4. 'dis' → logprob: -16.375022888183594
    5. '_Dis' → logprob: -17.250022888183594
    6. '_dis' → logprob: -18.375022888183594
    7. ' dis' → logprob: -19.500022888183594
    8. '.Dis' → logprob: -20.250022888183594
    9. 'DIS' → logprob: -20.875022888183594
    10. 'Binary' → logprob: -21.250022888183594

Token 648: 'junction' (ID: 140291)
  Prédit: 'junction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'junction' → logprob: -9.610702363715973e-06
    2. 'j' → logprob: -12.500009536743164
    3. 'ju' → logprob: -12.625009536743164
    4. 'jun' → logprob: -13.625009536743164
    5. 'jection' → logprob: -14.750009536743164
    6. ' junction' → logprob: -14.875009536743164
    7. 'unction' → logprob: -15.125009536743164
    8. 'J' → logprob: -16.875009536743164
    9. 's' → logprob: -16.875009536743164
    10. '_' → logprob: -17.000009536743164

Token 649: '(Binary' (ID: 163942)
  Prédit: '(Binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Binary' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.500001907348633
    3. '(B' → logprob: -16.000001907348633
    4. '(class' → logprob: -16.875001907348633
    5. 'class' → logprob: -17.125001907348633
    6. '(binary' → logprob: -17.500001907348633
    7. 'Binary' → logprob: -18.375001907348633
    8. '(Base' → logprob: -19.875001907348633
    9. '(Class' → logprob: -20.000001907348633
    10. ' (' → logprob: -20.125001907348633

Token 650: 'Operator' (ID: 21693)
  Prédit: 'Operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operator' → logprob: -1.9361264946837764e-07
    2. 'operator' → logprob: -16.25
    3. 'O' → logprob: -17.875
    4. 'Op' → logprob: -18.25
    5. '(' → logprob: -18.375
    6. '_operator' → logprob: -18.5
    7. '(Binary' → logprob: -19.0
    8. 'Operators' → logprob: -19.5
    9. 'OP' → logprob: -19.625
    10. '[' → logprob: -19.625

Token 651: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023610791191458702
    2. '):
' → logprob: -4.398610591888428
    3. '(Binary' → logprob: -4.523610591888428
    4. '   ' → logprob: -9.398611068725586
    5. ':' → logprob: -10.023611068725586
    6. ')' → logprob: -10.898611068725586
    7. '(B' → logprob: -11.648611068725586
    8. 'Binary' → logprob: -11.648611068725586
    9. '):

' → logprob: -11.773611068725586
    10. '):
' → logprob: -12.398611068725586

Token 652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007171963807195425
    2. ':' → logprob: -7.8757171630859375
    3. ':
' → logprob: -8.250717163085938
    4. 'class' → logprob: -10.250717163085938
    5. '):
' → logprob: -10.500717163085938
    6. '):' → logprob: -12.750717163085938
    7. '(Binary' → logprob: -13.250717163085938
    8. '  ' → logprob: -13.375717163085938
    9. '
' → logprob: -13.500717163085938
    10. '#' → logprob: -13.750717163085938

Token 653: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.011169012635946274
    2. '   ' → logprob: -4.761168956756592
    3. 'OR' → logprob: -6.011168956756592
    4. ' #' → logprob: -10.38616943359375
    5. 'def' → logprob: -10.38616943359375
    6. 'DIS' → logprob: -11.13616943359375
    7. 'class' → logprob: -11.63616943359375
    8. '```' → logprob: -11.88616943359375
    9. ' OR' → logprob: -12.88616943359375
    10. '
' → logprob: -13.38616943359375

Token 654: ' OR' (ID: 4917)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.2017500251531601
    2. '#' → logprob: -1.7017500400543213
    3. 'def' → logprob: -8.951749801635742
    4. '   ' → logprob: -8.951749801635742
    5. 'class' → logprob: -10.076749801635742
    6. '_OR' → logprob: -11.451749801635742
    7. 'or' → logprob: -11.701749801635742
    8. ' OR' → logprob: -11.826749801635742
    9. 'ORE' → logprob: -13.201749801635742
    10. 'DIS' → logprob: -13.701749801635742

Token 655: ' truth' (ID: 12388)
  Prédit: '_TABLE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_TABLE' → logprob: -1.291490912437439
    2. '   ' → logprob: -1.541490912437439
    3. 'TABLE' → logprob: -1.541490912437439
    4. '#' → logprob: -1.666490912437439
    5. 'class' → logprob: -3.5414910316467285
    6. 'OR' → logprob: -3.5414910316467285
    7. '(TABLE' → logprob: -3.7914910316467285
    8. '(' → logprob: -4.7914910316467285
    9. '_OR' → logprob: -4.9164910316467285
    10. 'AND' → logprob: -5.6664910316467285

Token 656: ' table' (ID: 3293)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.011768875643610954
    2. '   ' → logprob: -5.386768817901611
    3. '_TABLE' → logprob: -5.511768817901611
    4. 'TABLE' → logprob: -6.011768817901611
    5. 'table' → logprob: -7.636768817901611
    6. ' table' → logprob: -9.01176929473877
    7. 'Table' → logprob: -11.13676929473877
    8. ' TABLE' → logprob: -12.26176929473877
    9. '       ' → logprob: -12.76176929473877
    10. ' ' → logprob: -13.26176929473877

Token 657: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24948346614837646
    2. '   ' → logprob: -1.6244834661483765
    3. '=' → logprob: -3.749483585357666
    4. 'AND' → logprob: -9.249483108520508
    5. '#' → logprob: -9.999483108520508
    6. '  ' → logprob: -10.374483108520508
    7. ' ' → logprob: -10.624483108520508
    8. '=[' → logprob: -10.999483108520508
    9. ':' → logprob: -11.749483108520508
    10. '    ' → logprob: -11.999483108520508

Token 658: ' Table' (ID: 10211)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0625099390745163
    2. ' [
' → logprob: -3.1875100135803223
    3. '[' → logprob: -4.937510013580322
    4. '#' → logprob: -5.187510013580322
    5. 'Table' → logprob: -6.562510013580322
    6. '   ' → logprob: -6.562510013580322
    7. 'class' → logprob: -6.937510013580322
    8. ' Table' → logprob: -7.437510013580322
    9. ' [' → logprob: -7.812510013580322
    10. ' ' → logprob: -8.187509536743164

Token 659: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0031881670001894236
    2. ' C' → logprob: -5.753188133239746
    3. '[' → logprob: -12.003188133239746
    4. '#' → logprob: -13.128188133239746
    5. '   ' → logprob: -13.878188133239746
    6. 'class' → logprob: -14.253188133239746
    7. 'c' → logprob: -16.128189086914062
    8. 'D' → logprob: -16.503189086914062
    9. ' ' → logprob: -16.503189086914062
    10. '[-' → logprob: -17.003189086914062

Token 660: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005575948394834995
    2. '[' → logprob: -5.380576133728027
    3. '1' → logprob: -7.005576133728027
    4. '_' → logprob: -11.130576133728027
    5. '#' → logprob: -11.505576133728027
    6. '   ' → logprob: -12.130576133728027
    7. ' -' → logprob: -12.380576133728027
    8. 'C' → logprob: -12.755576133728027
    9. '<|end|>' → logprob: -13.380576133728027
    10. ' ' → logprob: -13.505576133728027

Token 661: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. '-' → logprob: -10.875024795532227
    3. '[' → logprob: -12.625024795532227
    4. '2' → logprob: -14.000024795532227
    5. '<|end|>' → logprob: -14.500024795532227
    6. ' ' → logprob: -14.625024795532227
    7. '#' → logprob: -15.750024795532227
    8. '<|end|>' → logprob: -16.375024795532227
    9. '...' → logprob: -16.500024795532227
    10. '[
' → logprob: -17.125024795532227

Token 662: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007258945843204856
    2. '#' → logprob: -7.750725746154785
    3. 'OR' → logprob: -8.375725746154785
    4. 'AND' → logprob: -9.875725746154785
    5. '```' → logprob: -11.875725746154785
    6. '
' → logprob: -12.375725746154785
    7. '  ' → logprob: -14.750725746154785
    8. '``' → logprob: -14.750725746154785
    9. ' OR' → logprob: -15.375725746154785
    10. '[' → logprob: -15.500725746154785

Token 664: ' OR' (ID: 4917)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20180116593837738
    2. 'OR' (adapté à ' OR') → logprob: -1.7018011808395386
    3. ' OR' → logprob: -8.326801300048828
    4. 'def' → logprob: -9.451801300048828
    5. '#' → logprob: -10.076801300048828
    6. '_OR' → logprob: -11.201801300048828
    7. '
' → logprob: -12.826801300048828
    8. '```' → logprob: -13.451801300048828
    9. 'DIS' → logprob: -13.576801300048828
    10. 'ORE' → logprob: -13.576801300048828

Token 665: '_TABLE' (ID: 34862)
  Prédit: '_TABLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TABLE' → logprob: -0.000443420372903347
    2. 'TABLE' → logprob: -7.750443458557129
    3. '_TAB' → logprob: -12.750443458557129
    4. '=' → logprob: -13.000443458557129
    5. '_' → logprob: -13.625443458557129
    6. ' =' → logprob: -13.750443458557129
    7. '_table' → logprob: -13.750443458557129
    8. '   ' → logprob: -13.875443458557129
    9. '_Table' → logprob: -14.000443458557129
    10. '@Table' → logprob: -14.250443458557129

Token 666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023251881822943687
    2. '=' → logprob: -3.77325177192688
    3. '   ' → logprob: -12.3982515335083
    4. '=[' → logprob: -13.5232515335083
    5. ' =[' → logprob: -14.5232515335083
    6. '=[
' → logprob: -15.1482515335083
    7. ' ' → logprob: -15.5232515335083
    8. '  ' → logprob: -16.773252487182617
    9. ':' → logprob: -17.023252487182617
    10. ' =
' → logprob: -18.023252487182617

Token 667: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0005812693270854652
    2. '[' → logprob: -7.50058126449585
    3. ' [
' → logprob: -10.500581741333008
    4. '   ' → logprob: -14.125581741333008
    5. ' [' → logprob: -17.500581741333008
    6. '[[' → logprob: -19.125581741333008
    7. ' ' → logprob: -19.625581741333008
    8. '=[
' → logprob: -19.875581741333008
    9. '  ' → logprob: -20.625581741333008
    10. '([
' → logprob: -21.500581741333008

Token 668: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20575495064258575
    2. '       ' → logprob: -1.7057549953460693
    3. '   ' → logprob: -5.45575475692749
    4. ' [' → logprob: -9.830755233764648
    5. '[
' → logprob: -11.955755233764648
    6. ' ' → logprob: -15.955755233764648
    7. '0' → logprob: -16.20575523376465
    8. '      ' → logprob: -16.45575523376465
    9. '     ' → logprob: -16.95575523376465
    10. '	' → logprob: -17.58075523376465

Token 669: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -2.2200749754119897e-06
    2. ' [' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.000001907348633
    4. '       ' → logprob: -14.875001907348633
    5. '0' → logprob: -17.625001907348633
    6. '[
' → logprob: -17.625001907348633
    7. ' ' → logprob: -20.750001907348633
    8. '
' → logprob: -20.875001907348633
    9. '  ' → logprob: -21.375001907348633
    10. '      ' → logprob: -21.875001907348633

Token 670: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3663626305060461e-05
    2. '[' → logprob: -11.25001335144043
    3. ' ' → logprob: -14.50001335144043
    4. '   ' → logprob: -16.00001335144043
    5. '       ' → logprob: -17.75001335144043
    6. '           ' → logprob: -18.50001335144043
    7. ' [' → logprob: -18.62501335144043
    8. '
' → logprob: -19.00001335144043
    9. '(' → logprob: -19.37501335144043
    10. '  ' → logprob: -20.12501335144043

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011193804675713181
    2. ',[' → logprob: -7.001119613647461
    3. '[' → logprob: -8.751119613647461
    4. '0' → logprob: -10.376119613647461
    5. ' ,' → logprob: -11.751119613647461
    6. ',
' → logprob: -12.251119613647461
    7. '   ' → logprob: -12.501119613647461
    8. '],[' → logprob: -13.751119613647461
    9. ' ' → logprob: -15.126119613647461
    10. '       ' → logprob: -15.251119613647461

Token 672: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026968008023686707
    2. '0' → logprob: -8.250269889831543
    3. ' ' → logprob: -12.000269889831543
    4. '   ' → logprob: -13.125269889831543
    5. '[' → logprob: -17.125268936157227
    6. '    ' → logprob: -17.375268936157227
    7. '  ' → logprob: -17.500268936157227
    8. '       ' → logprob: -17.500268936157227
    9. '     ' → logprob: -18.250268936157227
    10. '	' → logprob: -18.375268936157227

Token 673: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021605310030281544
    2. '],[' → logprob: -9.000216484069824
    3. ' ,' → logprob: -9.750216484069824
    4. ',
' → logprob: -11.500216484069824
    5. '[' → logprob: -11.875216484069824
    6. ',[' → logprob: -12.000216484069824
    7. '],
' → logprob: -12.500216484069824
    8. '0' → logprob: -13.125216484069824
    9. '   ' → logprob: -13.375216484069824
    10. '],' → logprob: -13.500216484069824

Token 674: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۲' → logprob: -19.0
    4. '   ' → logprob: -20.125
    5. '[' → logprob: -20.25
    6. '<|end|>' → logprob: -20.375
    7. '```' → logprob: -21.0
    8. '২' → logprob: -21.0
    9. '२' → logprob: -21.625
    10. '  ' → logprob: -22.25

Token 675: '],
' (ID: 2274)
  Prédit: '],
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],
' → logprob: -0.15374934673309326
    2. '],' → logprob: -2.028749465942383
    3. ']' → logprob: -4.778749465942383
    4. '   ' → logprob: -6.278749465942383
    5. '       ' → logprob: -8.028749465942383
    6. '[' → logprob: -8.403749465942383
    7. ']
' → logprob: -10.153749465942383
    8. '],
' → logprob: -10.153749465942383
    9. '],[' → logprob: -10.528749465942383
    10. '],

' → logprob: -10.653749465942383

Token 676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062321458011865616
    2. '[' → logprob: -2.812321424484253
    3. '	' → logprob: -8.437321662902832
    4. '   ' → logprob: -9.437321662902832
    5. ' [' → logprob: -10.312321662902832
    6. '      ' → logprob: -11.437321662902832
    7. '[
' → logprob: -11.937321662902832
    8. '	   ' → logprob: -13.187321662902832
    9. '     ' → logprob: -13.312321662902832
    10. '    ' → logprob: -13.562321662902832

Token 677: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -1.8312570318812504e-05
    2. ' [' → logprob: -11.125018119812012
    3. '   ' → logprob: -12.625018119812012
    4. '[
' → logprob: -16.000019073486328
    5. '       ' → logprob: -16.250019073486328
    6. '	' → logprob: -17.875019073486328
    7. ' ' → logprob: -18.750019073486328
    8. '  ' → logprob: -19.125019073486328
    9. '      ' → logprob: -19.125019073486328
    10. '1' → logprob: -19.125019073486328

Token 678: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005317362025380135
    2. '[' → logprob: -5.255317211151123
    3. '   ' → logprob: -9.505317687988281
    4. ' ' → logprob: -12.380317687988281
    5. ' [' → logprob: -12.380317687988281
    6. '(' → logprob: -14.755317687988281
    7. '  ' → logprob: -15.380317687988281
    8. '{' → logprob: -16.88031768798828
    9. '    
' → logprob: -17.13031768798828
    10. '[
' → logprob: -17.25531768798828

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08234679698944092
    2. ',[' → logprob: -2.5823469161987305
    3. '[' → logprob: -5.7073469161987305
    4. '1' → logprob: -9.33234691619873
    5. ',
' → logprob: -11.33234691619873
    6. '   ' → logprob: -11.83234691619873
    7. ' ,' → logprob: -11.83234691619873
    8. '],[' → logprob: -12.20734691619873
    9. '2' → logprob: -12.83234691619873
    10. ' ,[' → logprob: -13.45734691619873

Token 680: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. '2' → logprob: -11.125017166137695
    3. ' ' → logprob: -13.500017166137695
    4. '[' → logprob: -14.375017166137695
    5. '   ' → logprob: -15.625017166137695
    6. '```' → logprob: -17.125017166137695
    7. '۱' → logprob: -17.125017166137695
    8. '
' → logprob: -17.250017166137695
    9. '  ' → logprob: -17.375017166137695
    10. '১' → logprob: -18.937517166137695

Token 681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.572941179503687e-05
    2. ',[' → logprob: -10.750045776367188
    3. '[' → logprob: -10.875045776367188
    4. '2' → logprob: -12.625045776367188
    5. ' ,' → logprob: -13.375045776367188
    6. ',
' → logprob: -15.125045776367188
    7. '   ' → logprob: -16.250045776367188
    8. ' ' → logprob: -17.125045776367188
    9. '],[' → logprob: -17.750045776367188
    10. '[
' → logprob: -18.750045776367188

Token 682: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '۲' → logprob: -18.5
    4. '[' → logprob: -19.125
    5. '   ' → logprob: -20.125
    6. '২' → logprob: -20.375
    7. '२' → logprob: -21.0
    8. '```' → logprob: -21.0
    9. '<|end|>' → logprob: -21.125
    10. '  ' → logprob: -21.375

Token 683: '],
' (ID: 2274)
  Prédit: '],
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],
' → logprob: -0.0685693770647049
    2. '[' → logprob: -3.9435694217681885
    3. '],' → logprob: -4.068569183349609
    4. '   ' → logprob: -4.193569183349609
    5. '       ' → logprob: -4.568569183349609
    6. ',' → logprob: -5.568569183349609
    7. ']' → logprob: -8.44356918334961
    8. '[
' → logprob: -9.31856918334961
    9. ',
' → logprob: -9.69356918334961
    10. '      ' → logprob: -10.44356918334961

Token 684: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10025358200073242
    2. '       ' → logprob: -2.3502535820007324
    3. ' [' → logprob: -10.10025405883789
    4. '[
' → logprob: -12.60025405883789
    5. '   ' → logprob: -13.35025405883789
    6. '	' → logprob: -14.72525405883789
    7. '      ' → logprob: -15.10025405883789
    8. '2' → logprob: -17.35025405883789
    9. '[...,' → logprob: -17.35025405883789
    10. '	   ' → logprob: -17.47525405883789

Token 685: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -1.2664456789934775e-06
    2. ' [' → logprob: -14.000000953674316
    3. '       ' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.125001907348633
    5. '2' → logprob: -16.250001907348633
    6. '[
' → logprob: -17.875001907348633
    7. ' ' → logprob: -21.875001907348633
    8. '      ' → logprob: -22.125001907348633
    9. '0' → logprob: -23.125001907348633
    10. '  ' → logprob: -23.625001907348633

Token 686: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011049000546336174
    2. '[' → logprob: -4.511048793792725
    3. ' [' → logprob: -14.636049270629883
    4. ' ' → logprob: -14.761049270629883
    5. '[
' → logprob: -15.136049270629883
    6. '   ' → logprob: -16.011049270629883
    7. '(' → logprob: -18.011049270629883
    8. '۲' → logprob: -18.386049270629883
    9. '{' → logprob: -18.636049270629883
    10. '２' → logprob: -19.386049270629883

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018610459519550204
    2. '[' → logprob: -7.126861095428467
    3. ',[' → logprob: -7.251861095428467
    4. '2' → logprob: -8.126860618591309
    5. ' ,' → logprob: -10.001860618591309
    6. '   ' → logprob: -12.251860618591309
    7. ' ' → logprob: -15.001860618591309
    8. ',
' → logprob: -15.126860618591309
    9. ' ,[' → logprob: -15.251860618591309
    10. '][' → logprob: -16.126861572265625

Token 688: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.125
    4. '۲' → logprob: -20.875
    5. '[' → logprob: -21.125
    6. '  ' → logprob: -21.5
    7. ',' → logprob: -22.0
    8. '２' → logprob: -22.625
    9. '       ' → logprob: -23.0
    10. '২' → logprob: -23.125

Token 689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014418430509977043
    2. '2' → logprob: -8.875144004821777
    3. ' ,' → logprob: -12.750144004821777
    4. '[' → logprob: -13.750144004821777
    5. '   ' → logprob: -16.375144958496094
    6. ']' → logprob: -16.875144958496094
    7. ' ' → logprob: -17.125144958496094
    8. '       ' → logprob: -17.625144958496094
    9. ',
' → logprob: -17.750144958496094
    10. '  ' → logprob: -19.250144958496094

Token 690: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۲' → logprob: -18.0
    4. '[' → logprob: -18.375
    5. '   ' → logprob: -19.125
    6. '２' → logprob: -20.875
    7. '২' → logprob: -20.875
    8. '२' → logprob: -21.0
    9. '  ' → logprob: -21.625
    10. '٢' → logprob: -21.625

Token 691: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010824140161275864
    2. '   ' → logprob: -4.760824203491211
    3. ']
' → logprob: -6.135824203491211
    4. '       ' → logprob: -10.260824203491211
    5. ' ]' → logprob: -12.135824203491211
    6. '],' → logprob: -13.385824203491211
    7. ' ' → logprob: -14.760824203491211
    8. '  ' → logprob: -15.510824203491211
    9. '],
' → logprob: -15.635824203491211
    10. '[' → logprob: -15.760824203491211

Token 692: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 693: ' ]

' (ID: 32229)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11284562945365906
    2. ']' → logprob: -2.4878456592559814
    3. ']

' (adapté à ' ]

') → logprob: -4.112845420837402
    4. '

' → logprob: -4.987845420837402
    5. 'def' → logprob: -8.112845420837402
    6. '
' → logprob: -10.237845420837402
    7. '```' → logprob: -10.362845420837402
    8. ' 

' → logprob: -11.112845420837402
    9. ' def' → logprob: -11.487845420837402
    10. ' ]' → logprob: -11.737845420837402

Token 694: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 695: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.5048530030981055e-06
    2. ' def' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.375001907348633
    4. 'class' → logprob: -20.750001907348633
    5. '
' → logprob: -21.125001907348633
    6. '	def' → logprob: -21.250001907348633
    7. 'OR' → logprob: -23.125001907348633
    8. '_def' → logprob: -23.250001907348633
    9. '  ' → logprob: -23.500001907348633
    10. ' ' → logprob: -23.750001907348633

Token 696: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.000400521676056087
    2. ' op' → logprob: -7.875400543212891
    3. '__' → logprob: -10.87540054321289
    4. 'opt' → logprob: -14.75040054321289
    5. '_op' → logprob: -15.87540054321289
    6. 'init' → logprob: -16.00040054321289
    7. '
' → logprob: -16.12540054321289
    8. '	op' → logprob: -16.12540054321289
    9. '```' → logprob: -16.25040054321289
    10. ' __' → logprob: -16.25040054321289

Token 697: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015920029545668513
    2. '(' → logprob: -8.75015926361084
    3. '(s' → logprob: -15.12515926361084
    4. ' (' → logprob: -15.37515926361084
    5. '(
' → logprob: -15.87515926361084
    6. 'self' → logprob: -16.625158309936523
    7. '   ' → logprob: -18.375158309936523
    8. '(sel' → logprob: -19.000158309936523
    9. ' ' → logprob: -19.375158309936523
    10. '(Self' → logprob: -19.500158309936523

Token 698: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.038910992443561554
    2. ',' → logprob: -3.2889111042022705
    3. 'self' → logprob: -7.163910865783691
    4. '(' → logprob: -10.413910865783691
    5. ',self' → logprob: -10.413910865783691
    6. ' (' → logprob: -10.913910865783691
    7. ')' → logprob: -11.788910865783691
    8. ' self' → logprob: -12.288910865783691
    9. '[self' → logprob: -13.913910865783691
    10. '   ' → logprob: -14.163910865783691

Token 699: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0026902712415903807
    2. 'self' → logprob: -6.002690315246582
    3. ' a' → logprob: -8.502690315246582
    4. ' self' → logprob: -11.377690315246582
    5. '   ' → logprob: -16.127689361572266
    6. ' ' → logprob: -17.627689361572266
    7. '       ' → logprob: -19.002689361572266
    8. '	a' → logprob: -19.127689361572266
    9. '  ' → logprob: -20.002689361572266
    10. '
' → logprob: -20.127689361572266

Token 700: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024523992091417313
    2. ',' → logprob: -3.774523973464966
    3. ':int' → logprob: -6.774524211883545
    4. ' :' → logprob: -9.649523735046387
    5. '[' → logprob: -10.899523735046387
    6. '[int' → logprob: -11.024523735046387
    7. 'int' → logprob: -11.524523735046387
    8. 'a' → logprob: -12.649523735046387
    9. ' ,' → logprob: -12.649523735046387
    10. ' ' → logprob: -12.649523735046387

Token 701: ' int' (ID: 677)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 702: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 703: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0012057077838107944
    2. ' b' → logprob: -6.751205921173096
    3. 'int' → logprob: -10.251205444335938
    4. ' int' → logprob: -16.626205444335938
    5. '   ' → logprob: -17.376205444335938
    6. ' ' → logprob: -18.001205444335938
    7. '  ' → logprob: -19.126205444335938
    8. '    ' → logprob: -19.251205444335938
    9. 'a' → logprob: -19.876205444335938
    10. '       ' → logprob: -20.626205444335938

Token 704: ':' (ID: 25)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 705: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '[int' → logprob: -18.125335693359375
    4. '(int' → logprob: -19.625335693359375
    5. ' ' → logprob: -20.750335693359375
    6. '   ' → logprob: -21.125335693359375
    7. ':int' → logprob: -21.125335693359375
    8. '<int' → logprob: -21.250335693359375
    9. '	int' → logprob: -22.125335693359375
    10. 'Int' → logprob: -23.125335693359375

Token 706: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. '   ' → logprob: -11.875009536743164
    3. ' )' → logprob: -13.250009536743164
    4. ')->' → logprob: -15.500009536743164
    5. '       ' → logprob: -16.250009536743164
    6. ']' → logprob: -16.750009536743164
    7. ')
' → logprob: -17.375009536743164
    8. 'int' → logprob: -17.875009536743164
    9. ' ' → logprob: -17.875009536743164
    10. ':' → logprob: -18.000009536743164

Token 707: ' ->' (ID: 2747)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 708: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -14.75
    3. '[int' → logprob: -20.0
    4. 'Int' → logprob: -20.875
    5. '  ' → logprob: -22.625
    6. ' ' → logprob: -22.625
    7. '   ' → logprob: -22.875
    8. 'return' → logprob: -22.875
    9. '(int' → logprob: -23.25
    10. ':int' → logprob: -23.5

Token 709: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5394433736801147
    2. ':' → logprob: -1.9144433736801147
    3. '->' → logprob: -2.5394434928894043
    4. ':
' → logprob: -2.5394434928894043
    5. ')' → logprob: -2.7894434928894043
    6. ' ->' → logprob: -3.0394434928894043
    7. '[' → logprob: -6.664443492889404
    8. '=' → logprob: -8.289443016052246
    9. '   ' → logprob: -8.414443016052246
    10. ']' → logprob: -8.914443016052246

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.090760431718081e-05
    2. ' return' → logprob: -10.000090599060059
    3. 'return' → logprob: -10.000090599060059
    4. '	' → logprob: -17.250091552734375
    5. '	return' → logprob: -17.375091552734375
    6. '{return' → logprob: -17.750091552734375
    7. ':return' → logprob: -18.625091552734375
    8. '      ' → logprob: -18.750091552734375
    9. '   ' → logprob: -19.000091552734375
    10. ' ' → logprob: -19.125091552734375

Token 711: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.5928495486150496e-05
    2. ' return' → logprob: -11.250016212463379
    3. '       ' → logprob: -12.750016212463379
    4. 'self' → logprob: -17.500015258789062
    5. '   ' → logprob: -19.500015258789062
    6. '	return' → logprob: -21.875015258789062
    7. '```' → logprob: -22.750015258789062
    8. 'eturn' → logprob: -23.000015258789062
    9. '
' → logprob: -23.125015258789062
    10. '           ' → logprob: -23.750015258789062

Token 712: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005530327325686812
    2. ' self' → logprob: -7.500553131103516
    3. '(self' → logprob: -19.875553131103516
    4. '	self' → logprob: -19.875553131103516
    5. '[self' → logprob: -21.125553131103516
    6. '=self' → logprob: -21.250553131103516
    7. 'Self' → logprob: -21.875553131103516
    8. ' ' → logprob: -22.250553131103516
    9. '   ' → logprob: -22.750553131103516
    10. '
' → logprob: -23.750553131103516

Token 713: '.OR' (ID: 130912)
  Prédit: '.OR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.OR' → logprob: -7.314625690924004e-05
    2. '.' → logprob: -10.000073432922363
    3. 'OR' → logprob: -10.500073432922363
    4. '_OR' → logprob: -16.625072479248047
    5. '.Or' → logprob: -16.875072479248047
    6. '.or' → logprob: -17.375072479248047
    7. '.DIS' → logprob: -17.875072479248047
    8. '.OP' → logprob: -18.625072479248047
    9. ' OR' → logprob: -18.750072479248047
    10. '.A' → logprob: -19.000072479248047

Token 714: '_TABLE' (ID: 34862)
  Prédit: '_TABLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TABLE' → logprob: -1.8624639324116288e-06
    2. 'TABLE' → logprob: -13.500001907348633
    3. '_TAB' → logprob: -16.000001907348633
    4. '\' → logprob: -16.125001907348633
    5. '[_' → logprob: -16.375001907348633
    6. '[' → logprob: -16.375001907348633
    7. '_table' → logprob: -17.125001907348633
    8. '_Table' → logprob: -17.625001907348633
    9. '_' → logprob: -18.000001907348633
    10. '_T' → logprob: -18.625001907348633

Token 715: '[a' (ID: 32035)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 716: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002942287246696651
    2. '[b' → logprob: -8.50029468536377
    3. ']' → logprob: -9.75029468536377
    4. ' ][' → logprob: -10.50029468536377
    5. 'b' → logprob: -13.25029468536377
    6. '[' → logprob: -13.50029468536377
    7. '   ' → logprob: -13.75029468536377
    8. '       ' → logprob: -15.37529468536377
    9. ' ' → logprob: -16.250293731689453
    10. ']][' → logprob: -16.625293731689453

Token 717: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. ' b' → logprob: -15.5
    3. ' ' → logprob: -20.75
    4. ')b' → logprob: -21.125
    5. '[b' → logprob: -21.625
    6. '	b' → logprob: -21.75
    7. '   ' → logprob: -21.875
    8. '[' → logprob: -23.25
    9. '>b' → logprob: -23.75
    10. ',b' → logprob: -24.125

Token 718: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03201546519994736
    2. '<|end|>' → logprob: -3.657015562057495
    3. '[b' → logprob: -5.782015323638916
    4. '[a' → logprob: -6.782015323638916
    5. '[' → logprob: -7.157015323638916
    6. '       ' → logprob: -8.532015800476074
    7. '][' → logprob: -8.782015800476074
    8. '```' → logprob: -8.907015800476074
    9. '}' → logprob: -9.907015800476074
    10. '   ' → logprob: -10.157015800476074

Token 719: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0048187305219471455
    2. 'class' → logprob: -5.879818916320801
    3. 'def' → logprob: -6.879818916320801
    4. '<|end|>' → logprob: -7.129818916320801
    5. '<|end|>' → logprob: -9.6298189163208
    6. '```' → logprob: -9.8798189163208
    7. '...' → logprob: -10.5048189163208
    8. 'form' → logprob: -12.1298189163208
    9. 'a' → logprob: -12.3798189163208
    10. 'formula' → logprob: -12.5048189163208

Token 720: ' Parser' (ID: 44901)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2117130011320114
    2. 'class' → logprob: -1.8367129564285278
    3. 'def' → logprob: -3.4617130756378174
    4. '```' → logprob: -10.461712837219238
    5. 'from' → logprob: -11.086712837219238
    6. 'if' → logprob: -11.336712837219238
    7. 'Class' → logprob: -12.086712837219238
    8. 'The' → logprob: -12.961712837219238
    9. 'import' → logprob: -13.086712837219238
    10. ' class' → logprob: -13.336712837219238

Token 721: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1329515427350998
    2. 'import' → logprob: -2.257951498031616
    3. 'def' → logprob: -4.007951736450195
    4. ' class' → logprob: -7.507951736450195
    5. '<|end|>' → logprob: -7.507951736450195
    6. 'from' → logprob: -8.007951736450195
    7. '(' → logprob: -8.632951736450195
    8. '(
' → logprob: -10.257951736450195
    9. '(class' → logprob: -10.882951736450195
    10. 'token' → logprob: -11.257951736450195

Token 722: ' the' (ID: 290)
  Prédit: 'Formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formula' → logprob: -1.476117730140686
    2. ' formulas' → logprob: -1.476117730140686
    3. 'the' → logprob: -1.851117730140686
    4. ' the' → logprob: -2.2261176109313965
    5. 'formula' → logprob: -2.9761176109313965
    6. ' formula' → logprob: -2.9761176109313965
    7. 'str' → logprob: -3.2261176109313965
    8. ' expressions' → logprob: -3.3511176109313965
    9. ' logical' → logprob: -3.7261176109313965
    10. ' a' → logprob: -4.3511176109313965

Token 723: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.7128254771232605
    2. 'formula' → logprob: -1.0878255367279053
    3. 'Formula' → logprob: -1.8378255367279053
    4. '_formula' → logprob: -4.837825298309326
    5. ' Formula' → logprob: -6.087825298309326
    6. ' formulas' → logprob: -6.337825298309326
    7. ' next' → logprob: -7.962825298309326
    8. 'expression' → logprob: -8.337825775146484
    9. ' expression' → logprob: -8.712825775146484
    10. '...' → logprob: -8.962825775146484

Token 724: ' according' (ID: 7065)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11545002460479736
    2. ' class' → logprob: -2.615449905395508
    3. 'import' → logprob: -3.365449905395508
    4. '(
' → logprob: -7.990449905395508
    5. ' import' → logprob: -8.115449905395508
    6. '(' → logprob: -8.365449905395508
    7. 'def' → logprob: -8.490449905395508
    8. 'from' → logprob: -9.740449905395508
    9. '(class' → logprob: -9.740449905395508
    10. ' (
' → logprob: -10.365449905395508

Token 725: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10604965686798096
    2. ' to' → logprob: -2.3560495376586914
    3. '_to' → logprob: -5.981049537658691
    4. '_token' → logprob: -6.231049537658691
    5. 'token' → logprob: -7.356049537658691
    6. '<|end|>' → logprob: -7.731049537658691
    7. 'def' → logprob: -10.356049537658691
    8. 'To' → logprob: -10.606049537658691
    9. '_tokens' → logprob: -10.606049537658691
    10. '=' → logprob: -10.981049537658691

Token 726: ' B' (ID: 418)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6398234367370605
    2. 'the' → logprob: -1.2648234367370605
    3. ' the' → logprob: -2.3898234367370605
    4. '"""
' → logprob: -2.7648234367370605
    5. ''''
' → logprob: -4.1398234367370605
    6. 'grammar' → logprob: -5.8898234367370605
    7. ''' → logprob: -6.0148234367370605
    8. '"' → logprob: -6.2648234367370605
    9. '```' → logprob: -6.5148234367370605
    10. 'ANTLR' → logprob: -6.6398234367370605

Token 727: 'NF' (ID: 64104)
  Prédit: 'NF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NF' → logprob: -0.09228014200925827
    2. 'ack' → logprob: -2.467280149459839
    3. 'N' → logprob: -6.34227991104126
    4. 'nf' → logprob: -6.71727991104126
    5. 'CN' → logprob: -8.842280387878418
    6. '
' → logprob: -9.842280387878418
    7. 'ase' → logprob: -10.467280387878418
    8. 'ACK' → logprob: -10.967280387878418
    9. '   ' → logprob: -11.217280387878418
    10. '```' → logprob: -11.342280387878418

Token 728: ' grammar' (ID: 41735)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1838604211807251
    2. 'import' → logprob: -2.0588603019714355
    3. '(' → logprob: -4.5588603019714355
    4. '
' → logprob: -4.8088603019714355
    5. '(
' → logprob: -5.0588603019714355
    6. 'from' → logprob: -5.6838603019714355
    7. ':' → logprob: -5.8088603019714355
    8. '```' → logprob: -6.0588603019714355
    9. ' class' → logprob: -6.3088603019714355
    10. 'def' → logprob: -6.9338603019714355

Token 729: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.016769511625170708
    2. 'import' → logprob: -4.2667694091796875
    3. ' class' → logprob: -7.0167694091796875
    4. 'from' → logprob: -7.3917694091796875
    5. '(
' → logprob: -7.3917694091796875
    6. '(' → logprob: -8.766769409179688
    7. '<class' → logprob: -9.391769409179688
    8. 'def' → logprob: -9.891769409179688
    9. '(class' → logprob: -10.141769409179688
    10. '
' → logprob: -10.266769409179688

Token 730: 'class' (ID: 1444)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 731: ' Parser' (ID: 44901)
  Prédit: 'Formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formula' → logprob: -0.47475025057792664
    2. 'Parser' → logprob: -0.974750280380249
    3. '_formula' → logprob: -7.84975004196167
    4. 'Tokenizer' → logprob: -9.224750518798828
    5. ' Formula' → logprob: -9.349750518798828
    6. ' Parser' → logprob: -9.974750518798828
    7. '_parser' → logprob: -10.849750518798828
    8. 'Token' → logprob: -11.349750518798828
    9. 'Lexer' → logprob: -11.724750518798828
    10. 'formula' → logprob: -12.474750518798828

Token 732: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01114166434854269
    2. ':
' → logprob: -4.511141777038574
    3. ' :' → logprob: -10.011141777038574
    4. '<|end|>' → logprob: -10.886141777038574
    5. '):' → logprob: -11.261141777038574
    6. '):
' → logprob: -12.886141777038574
    7. '(' → logprob: -13.011141777038574
    8. ' :
' → logprob: -13.136141777038574
    9. '():' → logprob: -13.386141777038574
    10. '>:' → logprob: -13.761141777038574

Token 733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010287309065461159
    2. ' def' → logprob: -4.635287284851074
    3. '	def' → logprob: -8.260287284851074
    4. 'def' → logprob: -9.260287284851074
    5. '<|end|>' → logprob: -10.260287284851074
    6. ',' → logprob: -10.885287284851074
    7. ' indentation' → logprob: -11.010287284851074
    8. '    
' → logprob: -11.385287284851074
    9. '    ' → logprob: -11.510287284851074
    10. '(indent' → logprob: -11.510287284851074

Token 734: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0010412635747343302
    2. 'def' (adapté à ' def') → logprob: -6.876041412353516
    3. ' tokens' → logprob: -11.876041412353516
    4. ' token' → logprob: -14.251041412353516
    5. '   ' → logprob: -15.126041412353516
    6. ' TOKEN' → logprob: -15.376041412353516
    7. '	def' → logprob: -15.626041412353516
    8. 'tokens' → logprob: -17.001041412353516
    9. 'token' → logprob: -17.876041412353516
    10. '_token' → logprob: -18.126041412353516

Token 735: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19432063400745392
    2. ' __' → logprob: -1.8193206787109375
    3. 'init' → logprob: -4.6943206787109375
    4. '_init' → logprob: -5.8193206787109375
    5. 'def' → logprob: -6.4443206787109375
    6. ' def' → logprob: -7.4443206787109375
    7. '___' → logprob: -9.819320678710938
    8. '```' → logprob: -10.319320678710938
    9. ' init' → logprob: -10.944320678710938
    10. 'parse' → logprob: -11.569320678710938

Token 736: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'next' → logprob: -16.25
    3. ' init' → logprob: -18.375
    4. 'int' → logprob: -18.5
    5. 'def' → logprob: -18.75
    6. 'nit' → logprob: -19.375
    7. 'in' → logprob: -19.875
    8. '   ' → logprob: -20.0
    9. 'innit' → logprob: -20.0
    10. '```' → logprob: -20.125

Token 737: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010156603530049324
    2. '(' → logprob: -7.251015663146973
    3. 'self' → logprob: -8.751015663146973
    4. '__(' → logprob: -9.876015663146973
    5. ' (' → logprob: -10.126015663146973
    6. '<|end|>' → logprob: -11.001015663146973
    7. '(
' → logprob: -11.626015663146973
    8. ')(' → logprob: -12.501015663146973
    9. ' self' → logprob: -12.876015663146973
    10. '=self' → logprob: -13.126015663146973

Token 738: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9981420336989686e-05
    2. ' self' → logprob: -11.375020027160645
    3. '(self' → logprob: -11.750020027160645
    4. '   ' → logprob: -15.750020027160645
    5. '
' → logprob: -15.875020027160645
    6. '       ' → logprob: -16.875019073486328
    7. '	self' → logprob: -17.250019073486328
    8. 's' → logprob: -17.250019073486328
    9. ',' → logprob: -17.750019073486328
    10. '0' → logprob: -17.875019073486328

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019463682547211647
    2. 'self' → logprob: -6.251946449279785
    3. ',self' → logprob: -11.751946449279785
    4. '(self' → logprob: -12.251946449279785
    5. ' self' → logprob: -13.251946449279785
    6. ' ,' → logprob: -13.501946449279785
    7. ',text' → logprob: -14.501946449279785
    8. ',input' → logprob: -14.501946449279785
    9. '   ' → logprob: -15.251946449279785
    10. 'def' → logprob: -15.501946449279785

Token 740: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.0011670070234686136
    2. 'formula' → logprob: -7.501166820526123
    3. 'input' → logprob: -7.751166820526123
    4. ' text' → logprob: -9.001167297363281
    5. 's' → logprob: -9.751167297363281
    6. ' formula' → logprob: -14.251167297363281
    7. 'expr' → logprob: -14.376167297363281
    8. 'string' → logprob: -15.251167297363281
    9. ' input' → logprob: -15.876167297363281
    10. 'source' → logprob: -16.00116729736328

Token 741: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015054568648338318
    2. '):' → logprob: -4.515054702758789
    3. '):
' → logprob: -5.765054702758789
    4. ' :' → logprob: -7.265054702758789
    5. ':str' → logprob: -9.265054702758789
    6. '   ' → logprob: -9.890054702758789
    7. ',' → logprob: -12.140054702758789
    8. '):
' → logprob: -12.515054702758789
    9. ' ):' → logprob: -13.140054702758789
    10. ')' → logprob: -13.265054702758789

Token 742: ' str' (ID: 989)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.5266080498695374
    2. 'str' → logprob: -1.0266079902648926
    3. ' str' → logprob: -3.4016079902648926
    4. ' text' → logprob: -4.026607990264893
    5. ' ' → logprob: -11.40160846710205
    6. '{text' → logprob: -12.90160846710205
    7. ')' → logprob: -13.27660846710205
    8. '(text' → logprob: -13.52660846710205
    9. '=text' → logprob: -14.27660846710205
    10. '   ' → logprob: -14.27660846710205

Token 743: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05543506518006325
    2. '):' → logprob: -2.9304351806640625
    3. ')' → logprob: -7.6804351806640625
    4. '):
' → logprob: -10.055435180664062
    5. ' ):
' → logprob: -10.805435180664062
    6. '   ' → logprob: -11.555435180664062
    7. ',' → logprob: -11.930435180664062
    8. ':' → logprob: -12.180435180664062
    9. ' ):' → logprob: -12.305435180664062
    10. '):

' → logprob: -14.055435180664062

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002208069898188114
    2. 'self' → logprob: -6.752208232879639
    3. ' self' → logprob: -6.877208232879639
    4. '   ' → logprob: -12.87720775604248
    5. 'import' → logprob: -13.87720775604248
    6. '	self' → logprob: -13.87720775604248
    7. '      ' → logprob: -14.50220775604248
    8. ' ' → logprob: -14.87720775604248
    9. '	' → logprob: -15.50220775604248
    10. '        ' → logprob: -16.377208709716797

Token 745: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003186386078596115
    2. ' self' → logprob: -5.753186225891113
    3. 'import' → logprob: -12.378186225891113
    4. '       ' → logprob: -13.003186225891113
    5. '   ' → logprob: -13.128186225891113
    6. '	self' → logprob: -15.628186225891113
    7. 'from' → logprob: -16.75318717956543
    8. ' ' → logprob: -18.00318717956543
    9. '0' → logprob: -18.37818717956543
    10. '(self' → logprob: -18.87818717956543

Token 746: '.text' (ID: 5232)
  Prédit: '.text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.text' → logprob: -3.726595241460018e-05
    2. 'text' → logprob: -10.87503719329834
    3. '.pos' → logprob: -11.50003719329834
    4. '.' → logprob: -12.37503719329834
    5. '.tokens' → logprob: -12.87503719329834
    6. 'pos' → logprob: -14.75003719329834
    7. '_text' → logprob: -14.75003719329834
    8. '._' → logprob: -14.87503719329834
    9. ' text' → logprob: -16.500038146972656
    10. '.position' → logprob: -16.750038146972656

Token 747: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5269172191619873
    2. ' =' → logprob: -0.9019172191619873
    3. ':' → logprob: -6.901917457580566
    4. '   ' → logprob: -7.026917457580566
    5. ' ' → logprob: -7.901917457580566
    6. 'import' → logprob: -7.901917457580566
    7. '    ' → logprob: -8.401917457580566
    8. ',' → logprob: -8.776917457580566
    9. '=self' → logprob: -9.151917457580566
    10. '<|end|>' → logprob: -9.526917457580566

Token 748: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.06196768581867218
    2. ' text' → logprob: -2.811967611312866
    3. '	text' → logprob: -19.186967849731445
    4. ' ' → logprob: -20.061967849731445
    5. '(text' → logprob: -20.311967849731445
    6. '{text' → logprob: -21.186967849731445
    7. '.text' → logprob: -21.311967849731445
    8. '_text' → logprob: -21.561967849731445
    9. '"text' → logprob: -22.436967849731445
    10. '=text' → logprob: -22.561967849731445

Token 749: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037761081010103226
    2. '
' → logprob: -3.6627609729766846
    3. 'self' → logprob: -4.537761211395264
    4. ' self' → logprob: -8.037760734558105
    5. ',' → logprob: -8.537760734558105
    6. '   ' → logprob: -9.787760734558105
    7. '<|end|>' → logprob: -10.287760734558105
    8. '[self' → logprob: -10.912760734558105
    9. ',
' → logprob: -11.162760734558105
    10. '      ' → logprob: -12.037760734558105

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05287231504917145
    2. 'self' → logprob: -3.0528724193573
    3. ' self' → logprob: -5.552872180938721
    4. '   ' → logprob: -8.052872657775879
    5. ',' → logprob: -10.677872657775879
    6. 'def' → logprob: -10.927872657775879
    7. 'import' → logprob: -12.177872657775879
    8. ' =' → logprob: -12.302872657775879
    9. '	self' → logprob: -12.427872657775879
    10. '[self' → logprob: -12.427872657775879

Token 751: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004410651978105307
    2. 'pos' → logprob: -5.504410743713379
    3. ' self' → logprob: -8.129410743713379
    4. '   ' → logprob: -10.504410743713379
    5. '       ' → logprob: -12.129410743713379
    6. 'len' → logprob: -13.504410743713379
    7. '0' → logprob: -13.504410743713379
    8. 'length' → logprob: -14.004410743713379
    9. ' pos' → logprob: -14.879410743713379
    10. ' ' → logprob: -15.879410743713379

Token 752: '.pos' (ID: 25321)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.16097314655780792
    2. '.pos' → logprob: -1.9109731912612915
    3. '_pos' → logprob: -7.410973072052002
    4. 'index' → logprob: -9.91097354888916
    5. '.position' → logprob: -10.28597354888916
    6. ' pos' → logprob: -10.53597354888916
    7. '.index' → logprob: -11.53597354888916
    8. 'position' → logprob: -11.78597354888916
    9. '.length' → logprob: -12.16097354888916
    10. 'length' → logprob: -12.28597354888916

Token 753: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7239587903022766
    2. ' +=' → logprob: -1.2239587306976318
    3. '=' → logprob: -1.5989587306976318
    4. '+=' → logprob: -4.098958969116211
    5. ' ' → logprob: -6.348958969116211
    6. '<|end|>' → logprob: -7.973958969116211
    7. '  ' → logprob: -9.598958969116211
    8. '   ' → logprob: -9.723958969116211
    9. '_token' → logprob: -10.348958969116211
    10. '_tokens' → logprob: -10.598958969116211

Token 754: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -20.125003814697266
    4. '[' → logprob: -21.875003814697266
    5. '<|end|>' → logprob: -21.875003814697266
    6. '-' → logprob: -22.125003814697266
    7. '   ' → logprob: -22.250003814697266
    8. '=' → logprob: -22.500003814697266
    9. '০' → logprob: -22.875003814697266
    10. '  ' → logprob: -23.250003814697266

Token 755: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -21.0
    4. '```' → logprob: -23.0
    5. '-' → logprob: -23.125
    6. '=' → logprob: -23.125
    7. '০' → logprob: -23.75
    8. '[' → logprob: -23.75
    9. '00' → logprob: -24.125
    10. '०' → logprob: -24.5

Token 756: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7798795700073242
    2. '<|end|>' → logprob: -1.4048795700073242
    3. ' def' → logprob: -2.154879570007324
    4. '   ' → logprob: -2.529879570007324
    5. 'def' → logprob: -2.654879570007324
    6. '    
' → logprob: -4.654879570007324
    7. '```' → logprob: -4.779879570007324
    8. '<|end|>' → logprob: -5.904879570007324
    9. '  
' → logprob: -6.279879570007324
    10. ' 
' → logprob: -6.779879570007324

Token 757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05265350267291069
    2. '       ' → logprob: -3.3026535511016846
    3. 'self' → logprob: -5.0526533126831055
    4. 'def' → logprob: -5.4276533126831055
    5. '
' → logprob: -6.6776533126831055
    6. '    
' → logprob: -6.6776533126831055
    7. ' self' → logprob: -7.5526533126831055
    8. ' ' → logprob: -8.302653312683105
    9. ' def' → logprob: -9.177653312683105
    10. '<|end|>' → logprob: -9.427653312683105

Token 758: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016086915275081992
    2. ' def' → logprob: -8.750161170959473
    3. 'current' → logprob: -13.500161170959473
    4. '   ' → logprob: -14.000161170959473
    5. '	def' → logprob: -16.375160217285156
    6. '@property' → logprob: -18.125160217285156
    7. '    
' → logprob: -18.125160217285156
    8. 'token' → logprob: -18.875160217285156
    9. '
' → logprob: -19.375160217285156
    10. 'de' → logprob: -19.750160217285156

Token 759: ' peek' (ID: 54757)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.41115233302116394
    2. ' peek' → logprob: -2.2861523628234863
    3. 'skip' → logprob: -2.4111523628234863
    4. ' current' → logprob: -3.2861523628234863
    5. ' skip' → logprob: -3.5361523628234863
    6. 'current' → logprob: -3.6611523628234863
    7. 'next' → logprob: -4.661152362823486
    8. 'eat' → logprob: -4.786152362823486
    9. 'consume' → logprob: -4.786152362823486
    10. 'advance' → logprob: -5.286152362823486

Token 760: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20778900384902954
    2. '()' → logprob: -1.7077889442443848
    3. '(' → logprob: -5.082788944244385
    4. ' ()' → logprob: -9.207789421081543
    5. ' (' → logprob: -10.582789421081543
    6. 'self' → logprob: -11.082789421081543
    7. '():' → logprob: -12.832789421081543
    8. ' self' → logprob: -13.457789421081543
    9. '()`' → logprob: -14.082789421081543
    10. ' ' → logprob: -14.082789421081543

Token 761: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07592913508415222
    2. '()' → logprob: -2.7009291648864746
    3. '():' → logprob: -5.200929164886475
    4. '(' → logprob: -8.075928688049316
    5. 'self' → logprob: -9.825928688049316
    6. '())' → logprob: -10.075928688049316
    7. ')' → logprob: -10.575928688049316
    8. '():
' → logprob: -11.575928688049316
    9. ' ()' → logprob: -11.825928688049316
    10. ' ' → logprob: -13.200928688049316

Token 762: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.040248990058898926
    2. '()' → logprob: -3.7902488708496094
    3. '():' → logprob: -4.540248870849609
    4. '(' → logprob: -5.165248870849609
    5. '():
' → logprob: -8.66524887084961
    6. 'self' → logprob: -8.79024887084961
    7. ' (' → logprob: -9.29024887084961
    8. ':' → logprob: -10.79024887084961
    9. ' self' → logprob: -11.54024887084961
    10. ' ()' → logprob: -11.91524887084961

Token 763: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.5996829271316528
    2. 'str' → logprob: -0.9746829271316528
    3. ''' → logprob: -2.9746828079223633
    4. ' '' → logprob: -4.099682807922363
    5. 'self' → logprob: -6.474682807922363
    6. ' self' → logprob: -6.474682807922363
    7. '(str' → logprob: -7.474682807922363
    8. 'None' → logprob: -7.599682807922363
    9. ' None' → logprob: -7.724682807922363
    10. ' ' → logprob: -8.099682807922363

Token 764: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.17928040027618408
    2. '():
' → logprob: -1.929280400276184
    3. '()' → logprob: -4.0542802810668945
    4. ':' → logprob: -6.5542802810668945
    5. ':
' → logprob: -10.054280281066895
    6. '():
' → logprob: -10.929280281066895
    7. ' ():' → logprob: -11.179280281066895
    8. '):' → logprob: -11.554280281066895
    9. '(' → logprob: -11.929280281066895
    10. '()
' → logprob: -12.554280281066895

Token 765: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18406441807746887
    2. ' return' → logprob: -2.6840643882751465
    3. '       ' → logprob: -3.0590643882751465
    4. 'if' → logprob: -3.3090643882751465
    5. 'return' → logprob: -4.1840643882751465
    6. '   ' → logprob: -7.3090643882751465
    7. '        
' → logprob: -7.9340643882751465
    8. ' 
' → logprob: -10.934064865112305
    9. '
' → logprob: -11.559064865112305
    10. '           ' → logprob: -11.934064865112305

Token 766: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5086003541946411
    2. ' if' → logprob: -1.2586003541946411
    3. ' return' → logprob: -2.7586002349853516
    4. 'return' (adapté à ' return') → logprob: -3.0086002349853516
    5. 'self' → logprob: -6.633600234985352
    6. ' self' → logprob: -7.508600234985352
    7. '   ' → logprob: -12.508600234985352
    8. '       ' → logprob: -13.883600234985352
    9. 'while' → logprob: -13.883600234985352
    10. ' while' → logprob: -14.383600234985352

Token 767: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0141702089458704
    2. ' self' → logprob: -4.264170169830322
    3. '''' → logprob: -12.01417064666748
    4. ''' → logprob: -14.63917064666748
    5. ''s' → logprob: -17.639169692993164
    6. '(self' → logprob: -17.889169692993164
    7. '	self' → logprob: -18.139169692993164
    8. 'None' → logprob: -18.264169692993164
    9. ''\' → logprob: -18.264169692993164
    10. '""' → logprob: -18.514169692993164

Token 768: '.text' (ID: 5232)
  Prédit: '.text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.text' → logprob: -1.9385402993066236e-05
    2. 'text' → logprob: -11.000019073486328
    3. '.' → logprob: -13.000019073486328
    4. 'self' → logprob: -15.125019073486328
    5. ' .' → logprob: -15.875019073486328
    6. '.pos' → logprob: -16.875019073486328
    7. ' text' → logprob: -17.375019073486328
    8. 'pos' → logprob: -18.125019073486328
    9. '.self' → logprob: -18.875019073486328
    10. '.txt' → logprob: -19.000019073486328

Token 769: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.62500286102295
    3. '[
' → logprob: -14.12500286102295
    4. 'self' → logprob: -14.25000286102295
    5. '[min' → logprob: -16.500001907348633
    6. '[len' → logprob: -17.625001907348633
    7. '[:' → logprob: -17.625001907348633
    8. '(self' → logprob: -19.625001907348633
    9. '[:]' → logprob: -20.250001907348633
    10. '[max' → logprob: -20.375001907348633

Token 770: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.24146191775798798
    2. 'pos' → logprob: -1.7414618730545044
    3. 'self' → logprob: -3.241461992263794
    4. '[self' → logprob: -9.866461753845215
    5. '_pos' → logprob: -9.866461753845215
    6. '.self' → logprob: -10.741461753845215
    7. ' self' → logprob: -11.366461753845215
    8. 'Pos' → logprob: -12.241461753845215
    9. ':self' → logprob: -13.241461753845215
    10. '[pos' → logprob: -14.116461753845215

Token 771: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001875671005109325
    2. ' if' → logprob: -8.875187873840332
    3. 'if' → logprob: -10.875187873840332
    4. '<|end|>' → logprob: -11.250187873840332
    5. ' ]' → logprob: -11.375187873840332
    6. '<|end|>' → logprob: -13.375187873840332
    7. ']
' → logprob: -14.500187873840332
    8. ':' → logprob: -14.750187873840332
    9. ':self' → logprob: -15.125187873840332
    10. 'self' → logprob: -16.000186920166016

Token 772: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07240139693021774
    2. '<|end|>' → logprob: -2.697401285171509
    3. 'if' → logprob: -6.197401523590088
    4. '<|end|>' → logprob: -8.32240104675293
    5. ' ' → logprob: -9.44740104675293
    6. '
' → logprob: -10.32240104675293
    7. '[' → logprob: -11.07240104675293
    8. '  ' → logprob: -11.19740104675293
    9. '    ' → logprob: -11.32240104675293
    10. '	if' → logprob: -11.57240104675293

Token 773: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.676292231422849e-05
    2. ' self' → logprob: -11.000017166137695
    3. '(self' → logprob: -21.375017166137695
    4. '   ' → logprob: -22.250017166137695
    5. '0' → logprob: -22.500017166137695
    6. '	self' → logprob: -22.500017166137695
    7. ' ' → logprob: -23.000017166137695
    8. '_self' → logprob: -23.250017166137695
    9. '[self' → logprob: -23.875017166137695
    10. '
' → logprob: -23.875017166137695

Token 774: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -5.512236498361744e-07
    2. 'pos' → logprob: -14.625000953674316
    3. '	pos' → logprob: -20.125
    4. '.' → logprob: -20.375
    5. '[pos' → logprob: -20.5
    6. ' pos' → logprob: -21.875
    7. ' .' → logprob: -22.0
    8. 'self' → logprob: -22.25
    9. ',pos' → logprob: -23.5
    10. '.position' → logprob: -23.5

Token 775: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04343473166227341
    2. ' <' → logprob: -3.7934346199035645
    3. '<len' → logprob: -3.9184346199035645
    4. '<size' → logprob: -9.543435096740723
    5. '<int' → logprob: -11.543435096740723
    6. '<|end|>' → logprob: -12.168435096740723
    7. '<std' → logprob: -12.918435096740723
    8. '[' → logprob: -13.043435096740723
    9. '<num' → logprob: -13.043435096740723
    10. '<class' → logprob: -13.043435096740723

Token 776: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.941850526549388e-06
    2. ' len' → logprob: -11.750007629394531
    3. 'length' → logprob: -22.25000762939453
    4. '(len' → logprob: -22.62500762939453
    5. 'self' → logprob: -23.25000762939453
    6. '[len' → logprob: -23.37500762939453
    7. '	len' → logprob: -23.37500762939453
    8. '=len' → logprob: -24.37500762939453
    9. '<len' → logprob: -25.75000762939453
    10. '_len' → logprob: -26.12500762939453

Token 777: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00318163656629622
    2. 'self' → logprob: -5.753181457519531
    3. ' self' → logprob: -13.378181457519531
    4. '[self' → logprob: -13.878181457519531
    5. '(' → logprob: -14.003181457519531
    6. '=self' → logprob: -15.753181457519531
    7. ':self' → logprob: -15.878181457519531
    8. '	self' → logprob: -16.25318145751953
    9. 's' → logprob: -16.37818145751953
    10. ',self' → logprob: -17.50318145751953

Token 778: '.text' (ID: 5232)
  Prédit: '.text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.text' → logprob: -4.320199877838604e-07
    2. 'text' → logprob: -15.25
    3. '.' → logprob: -15.75
    4. ' .' → logprob: -19.0
    5. '.txt' → logprob: -21.25
    6. '.tex' → logprob: -21.5
    7. ').' → logprob: -21.625
    8. ' text' → logprob: -21.875
    9. '	text' → logprob: -22.75
    10. '.Text' → logprob: -22.875

Token 779: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2977311909198761
    2. ')' → logprob: -2.1727311611175537
    3. ' else' → logprob: -2.4227311611175537
    4. 'else' → logprob: -2.9227311611175537
    5. 'self' → logprob: -6.922731399536133
    6. 'and' → logprob: -10.547731399536133
    7. ' ]' → logprob: -11.047731399536133
    8. '}' → logprob: -11.172731399536133
    9. '<|end|>' → logprob: -11.172731399536133
    10. ' )' → logprob: -11.172731399536133

Token 780: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.39959657192230225
    2. 'else' → logprob: -1.1495965719223022
    3. '<|end|>' → logprob: -4.399596691131592
    4. '<|end|>' → logprob: -8.649596214294434
    5. ' ' → logprob: -9.024596214294434
    6. '	else' → logprob: -11.024596214294434
    7. 'self' → logprob: -11.274596214294434
    8. '
' → logprob: -11.274596214294434
    9. '[' → logprob: -11.899596214294434
    10. '.' → logprob: -13.524596214294434

Token 781: ' ''

' (ID: 107005)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.00035238542477600276
    2. ''\' → logprob: -8.25035285949707
    3. ''' → logprob: -10.50035285949707
    4. ' ''' → logprob: -10.62535285949707
    5. '""' → logprob: -10.62535285949707
    6. '''
' → logprob: -11.12535285949707
    7. 'None' → logprob: -16.00035285949707
    8. '"' → logprob: -16.50035285949707
    9. '"\' → logprob: -18.25035285949707
    10. ''',' → logprob: -18.50035285949707

Token 782: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05191866680979729
    2. ' def' → logprob: -3.1769187450408936
    3. '   ' → logprob: -5.1769185066223145
    4. '<|end|>' → logprob: -7.1769185066223145
    5. ' ' → logprob: -7.5519185066223145
    6. '.' → logprob: -7.5519185066223145
    7. '    
' → logprob: -7.6769185066223145
    8. '	def' → logprob: -8.176918983459473
    9. ' 
' → logprob: -8.676918983459473
    10. '  
' → logprob: -8.801918983459473

Token 783: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0018398716347292066
    2. ' def' → logprob: -6.501839637756348
    3. '   ' → logprob: -8.001839637756348
    4. '    
' → logprob: -13.751839637756348
    5. '	def' → logprob: -14.251839637756348
    6. '
' → logprob: -14.751839637756348
    7. '```' → logprob: -15.751839637756348
    8. ')' → logprob: -15.876839637756348
    9. ' ' → logprob: -16.126840591430664
    10. '  ' → logprob: -16.876840591430664

Token 784: ' consume' (ID: 34881)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.18910370767116547
    2. 'eat' → logprob: -2.439103603363037
    3. 'advance' → logprob: -3.064103603363037
    4. 'skip' → logprob: -3.314103603363037
    5. 'next' → logprob: -6.564103603363037
    6. ' consume' → logprob: -8.439104080200195
    7. 'error' → logprob: -9.064104080200195
    8. '_next' → logprob: -9.564104080200195
    9. '_skip' → logprob: -9.939104080200195
    10. '_' → logprob: -10.689104080200195

Token 785: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.311241090297699
    2. '(self' → logprob: -1.6862411499023438
    3. '(' → logprob: -2.5612411499023438
    4. ' (' → logprob: -5.936241149902344
    5. ' ()' → logprob: -6.186241149902344
    6. '('' → logprob: -9.436241149902344
    7. 'self' → logprob: -10.061241149902344
    8. '(char' → logprob: -10.186241149902344
    9. '():' → logprob: -10.561241149902344
    10. ' ' → logprob: -10.686241149902344

Token 786: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053500790148973465
    2. '):' → logprob: -3.9285008907318115
    3. 'self' → logprob: -4.553500652313232
    4. '()' → logprob: -4.553500652313232
    5. '(self' → logprob: -5.303500652313232
    6. '(' → logprob: -6.303500652313232
    7. ' ' → logprob: -6.678500652313232
    8. ',' → logprob: -7.178500652313232
    9. '():' → logprob: -7.303500652313232
    10. ' )' → logprob: -7.928500652313232

Token 787: ' expected' (ID: 5930)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.9534860849380493
    2. ')' → logprob: -1.0784860849380493
    3. 'expected' → logprob: -1.8284860849380493
    4. 'c' → logprob: -2.8284859657287598
    5. 'token' → logprob: -3.7034859657287598
    6. ' ' → logprob: -4.57848596572876
    7. ' expected' → logprob: -5.45348596572876
    8. '  ' → logprob: -5.95348596572876
    9. ')c' → logprob: -6.20348596572876
    10. '):' → logprob: -6.32848596572876

Token 788: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45398780703544617
    2. '):' → logprob: -1.5789878368377686
    3. '_char' → logprob: -2.7039878368377686
    4. ')' → logprob: -2.9539878368377686
    5. 'char' → logprob: -4.0789875984191895
    6. '_token' → logprob: -4.4539875984191895
    7. ':str' → logprob: -5.2039875984191895
    8. '():' → logprob: -6.2039875984191895
    9. '):
' → logprob: -6.8289875984191895
    10. 'token' → logprob: -7.8289875984191895

Token 789: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0011724866926670074
    2. ' str' → logprob: -6.7511725425720215
    3. ''' → logprob: -13.626172065734863
    4. ' ' → logprob: -15.126172065734863
    5. 'char' → logprob: -15.626172065734863
    6. ''s' → logprob: -15.751172065734863
    7. ')' → logprob: -16.12617301940918
    8. '[str' → logprob: -16.12617301940918
    9. 'chr' → logprob: -16.62617301940918
    10. '   ' → logprob: -16.75117301940918

Token 790: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14432638883590698
    2. '):' → logprob: -2.3943264484405518
    3. '):
' → logprob: -3.1443264484405518
    4. ')->' → logprob: -10.519326210021973
    5. ':' → logprob: -10.769326210021973
    6. '   ' → logprob: -12.019326210021973
    7. '):
' → logprob: -12.394326210021973
    8. ' )' → logprob: -12.894326210021973
    9. '):

' → logprob: -13.894326210021973
    10. ')throws' → logprob: -14.269326210021973

Token 791: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.24168868362903595
    2. ' None' → logprob: -2.1166887283325195
    3. ''' → logprob: -2.3666887283325195
    4. ' '')' → logprob: -7.8666887283325195
    5. ' '' → logprob: -10.11668872833252
    6. '(None' → logprob: -10.86668872833252
    7. '=None' → logprob: -11.74168872833252
    8. '')' → logprob: -11.99168872833252
    9. '''' → logprob: -12.11668872833252
    10. '"' → logprob: -12.24168872833252

Token 792: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6587951183319092
    2. ')' → logprob: -0.9087951183319092
    3. '):' → logprob: -2.533795118331909
    4. '   ' → logprob: -10.033795356750488
    5. '):
' → logprob: -10.158795356750488
    6. ')->' → logprob: -10.408795356750488
    7. ':' → logprob: -10.908795356750488
    8. ' )' → logprob: -11.908795356750488
    9. ' ):
' → logprob: -11.908795356750488
    10. '):

' → logprob: -12.033795356750488

Token 793: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006295749451965094
    2. ':
' → logprob: -5.131295680999756
    3. '):' → logprob: -8.756296157836914
    4. '):
' → logprob: -9.631296157836914
    5. '       ' → logprob: -10.256296157836914
    6. '():
' → logprob: -10.881296157836914
    7. '():' → logprob: -11.006296157836914
    8. '   ' → logprob: -11.131296157836914
    9. ' :' → logprob: -11.506296157836914
    10. '->' → logprob: -11.506296157836914

Token 794: ' str' (ID: 989)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28189486265182495
    2. ' self' → logprob: -1.5318949222564697
    3. 'str' → logprob: -4.281894683837891
    4. ''' → logprob: -4.656894683837891
    5. ' str' → logprob: -5.281894683837891
    6. ' '' → logprob: -7.656894683837891
    7. ''s' → logprob: -8.65689468383789
    8. 'None' → logprob: -8.65689468383789
    9. '''' → logprob: -9.15689468383789
    10. ' None' → logprob: -9.40689468383789

Token 795: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1168317124247551
    2. ':
' → logprob: -2.2418317794799805
    3. '():
' → logprob: -6.2418317794799805
    4. '():' → logprob: -7.3668317794799805
    5. '       ' → logprob: -7.6168317794799805
    6. '):
' → logprob: -7.7418317794799805
    7. '   ' → logprob: -8.49183177947998
    8. '):' → logprob: -9.11683177947998
    9. '<|end|>' → logprob: -9.24183177947998
    10. '{' → logprob: -10.86683177947998

Token 796: '       ' (ID: 309)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5329177379608154
    2. 'c' → logprob: -0.9079177379608154
    3. 'ch' → logprob: -6.1579179763793945
    4. ' if' → logprob: -6.1579179763793945
    5. '       ' → logprob: -6.5329179763793945
    6. ' token' → logprob: -6.7829179763793945
    7. 'char' → logprob: -7.0329179763793945
    8. ' char' → logprob: -7.2829179763793945
    9. '   ' → logprob: -7.4079179763793945
    10. 'token' → logprob: -8.282917976379395

Token 797: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.021227894350886345
    2. 'ch' → logprob: -4.271227836608887
    3. 'if' (adapté à ' if') → logprob: -6.021227836608887
    4. ' if' → logprob: -6.271227836608887
    5. ' c' → logprob: -6.521227836608887
    6. 'char' → logprob: -6.771227836608887
    7. ' ch' → logprob: -9.771227836608887
    8. ' char' → logprob: -10.021227836608887
    9. 'token' → logprob: -13.521227836608887
    10. 'current' → logprob: -14.146227836608887

Token 798: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6370024681091309
    2. ' self' → logprob: -0.7620024681091309
    3. 'expected' → logprob: -6.012002468109131
    4. ' expected' → logprob: -6.262002468109131
    5. ' not' → logprob: -10.887002944946289
    6. '	self' → logprob: -12.512002944946289
    7. ' ' → logprob: -12.512002944946289
    8. '_expected' → logprob: -13.012002944946289
    9. '(self' → logprob: -13.262002944946289
    10. 'not' → logprob: -13.387002944946289

Token 799: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -5.741137283621356e-05
    2. '.text' → logprob: -10.500057220458984
    3. 'pos' → logprob: -10.750057220458984
    4. '.' → logprob: -12.125057220458984
    5. '.peek' → logprob: -13.125057220458984
    6. ' .' → logprob: -15.000057220458984
    7. '	pos' → logprob: -15.500057220458984
    8. '[pos' → logprob: -16.375057220458984
    9. '.pe' → logprob: -16.375057220458984
    10. '_pos' → logprob: -16.375057220458984

Token 800: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.32469621300697327
    2. ' <' → logprob: -1.6996961832046509
    3. '>=' → logprob: -3.0746963024139404
    4. '<len' → logprob: -3.6996963024139404
    5. ' >=' → logprob: -3.8246963024139404
    6. '==' → logprob: -7.199696063995361
    7. '[' → logprob: -8.57469654083252
    8. ' ==' → logprob: -8.82469654083252
    9. '<n' → logprob: -8.94969654083252
    10. '<size' → logprob: -9.07469654083252

Token 801: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.547789674485102e-05
    2. ' len' → logprob: -10.250035285949707
    3. '(len' → logprob: -18.375036239624023
    4. '	len' → logprob: -19.000036239624023
    5. '<len' → logprob: -19.125036239624023
    6. '[len' → logprob: -19.500036239624023
    7. '   ' → logprob: -19.750036239624023
    8. '=len' → logprob: -19.875036239624023
    9. 'length' → logprob: -20.500036239624023
    10. 'leni' → logprob: -21.125036239624023

Token 802: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47778213024139404
    2. 'self' → logprob: -0.977782130241394
    3. ' self' → logprob: -5.602782249450684
    4. '(' → logprob: -11.852782249450684
    5. '[self' → logprob: -14.102782249450684
    6. '	self' → logprob: -14.227782249450684
    7. '=self' → logprob: -14.352782249450684
    8. 's' → logprob: -14.602782249450684
    9. ' (' → logprob: -15.602782249450684
    10. '
' → logprob: -15.727782249450684

Token 803: '.text' (ID: 5232)
  Prédit: '.text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.text' → logprob: -3.650518920039758e-06
    2. 'text' → logprob: -12.875003814697266
    3. 'self' → logprob: -13.875003814697266
    4. '.' → logprob: -17.250003814697266
    5. '.self' → logprob: -18.125003814697266
    6. ' .' → logprob: -19.250003814697266
    7. '.code' → logprob: -20.750003814697266
    8. '_text' → logprob: -21.000003814697266
    9. '(text' → logprob: -21.125003814697266
    10. '.user' → logprob: -21.250003814697266

Token 804: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19240333139896393
    2. ':' → logprob: -2.1924033164978027
    3. '):
' → logprob: -2.8174033164978027
    4. '):' → logprob: -6.567403316497803
    5. '       ' → logprob: -7.692403316497803
    6. '<|end|>' → logprob: -7.817403316497803
    7. ':return' → logprob: -8.067403793334961
    8. '():
' → logprob: -8.567403793334961
    9. ' or' → logprob: -8.942403793334961
    10. ')' → logprob: -8.942403793334961

Token 805: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2186947464942932
    2. 'raise' → logprob: -2.4686946868896484
    3. ' raise' → logprob: -3.0936946868896484
    4. ' c' → logprob: -3.2186946868896484
    5. 'char' → logprob: -4.468694686889648
    6. 'self' → logprob: -5.468694686889648
    7. 'c' → logprob: -5.843694686889648
    8. '   ' → logprob: -6.093694686889648
    9. '       ' → logprob: -6.093694686889648
    10. ' self' → logprob: -7.343694686889648

Token 806: ' return' (ID: 622)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.018687596544623375
    2. ' raise' → logprob: -4.143687725067139
    3. '''
' → logprob: -6.893687725067139
    4. 'return' (adapté à ' return') → logprob: -7.393687725067139
    5. ''\' → logprob: -7.768687725067139
    6. '''' → logprob: -7.893687725067139
    7. ''' → logprob: -9.01868724822998
    8. '       ' → logprob: -10.01868724822998
    9. '   ' → logprob: -11.51868724822998
    10. 'self' → logprob: -12.01868724822998

Token 807: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.005280483979731798
    2. '''
' → logprob: -5.255280494689941
    3. ''' → logprob: -10.005280494689941
    4. ' ''' → logprob: -14.255280494689941
    5. '""' → logprob: -14.255280494689941
    6. ''',' → logprob: -15.880280494689941
    7. '"' → logprob: -17.255279541015625
    8. ''\' → logprob: -18.255279541015625
    9. 'None' → logprob: -18.505279541015625
    10. ' ''
' → logprob: -18.630279541015625

Token 808: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13112662732601166
    2. ' 
' → logprob: -2.881126642227173
    3. '  
' → logprob: -3.756126642227173
    4. 'self' → logprob: -4.006126403808594
    5. '       ' → logprob: -4.256126403808594
    6. '        
' → logprob: -5.006126403808594
    7. '    
' → logprob: -6.256126403808594
    8. ' self' → logprob: -7.256126403808594
    9. '		
' → logprob: -8.506126403808594
    10. '   ' → logprob: -8.631126403808594

Token 809: ' current' (ID: 2208)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3878943622112274
    2. 'ch' → logprob: -1.1378943920135498
    3. 'char' → logprob: -7.137894153594971
    4. ' ch' → logprob: -9.012894630432129
    5. ' c' → logprob: -9.512894630432129
    6. 'current' (adapté à ' current') → logprob: -10.762894630432129
    7. 'result' → logprob: -12.387894630432129
    8. 'curr' → logprob: -13.262894630432129
    9. 'token' → logprob: -13.637894630432129
    10. 'r' → logprob: -14.137894630432129

Token 810: ' =' (ID: 314)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0646328404545784
    2. 'char' → logprob: -2.8146328926086426
    3. 'Char' → logprob: -7.064632892608643
    4. ' char' → logprob: -7.439632892608643
    5. 'c' → logprob: -8.064632415771484
    6. ' =' → logprob: -8.064632415771484
    7. '=' → logprob: -8.439632415771484
    8. '_' → logprob: -8.564632415771484
    9. ' ' → logprob: -9.814632415771484
    10. '_character' → logprob: -10.314632415771484

Token 811: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004306692280806601
    2. ' self' → logprob: -7.750430583953857
    3. '[self' → logprob: -19.125431060791016
    4. '(self' → logprob: -19.250431060791016
    5. 's' → logprob: -20.375431060791016
    6. '	self' → logprob: -20.500431060791016
    7. 'Self' → logprob: -20.625431060791016
    8. ' ' → logprob: -21.250431060791016
    9. '=self' → logprob: -21.250431060791016
    10. '`' → logprob: -21.500431060791016

Token 812: '.text' (ID: 5232)
  Prédit: '.text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.text' → logprob: -8.180258191714529e-06
    2. 'text' → logprob: -11.750008583068848
    3. '.' → logprob: -15.375008583068848
    4. 'self' → logprob: -19.87500762939453
    5. '.user' → logprob: -20.00000762939453
    6. ' text' → logprob: -20.37500762939453
    7. '"text' → logprob: -20.50000762939453
    8. ' .' → logprob: -21.00000762939453
    9. '=text' → logprob: -21.37500762939453
    10. '{text' → logprob: -21.50000762939453

Token 813: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -6.480199954239652e-05
    2. 'self' → logprob: -9.750064849853516
    3. '[' → logprob: -12.375064849853516
    4. '[current' → logprob: -13.125064849853516
    5. ' self' → logprob: -16.125064849853516
    6. '[
' → logprob: -16.250064849853516
    7. '[next' → logprob: -17.250064849853516
    8. '
' → logprob: -17.500064849853516
    9. '```' → logprob: -18.000064849853516
    10. '(self' → logprob: -18.750064849853516

Token 814: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.03429962322115898
    2. '.text' → logprob: -4.034299850463867
    3. 'pos' → logprob: -4.159299850463867
    4. '[pos' → logprob: -8.159299850463867
    5. 'text' → logprob: -9.784299850463867
    6. 'self' → logprob: -10.034299850463867
    7. '[self' → logprob: -11.534299850463867
    8. '	pos' → logprob: -13.034299850463867
    9. '_pos' → logprob: -14.159299850463867
    10. '```' → logprob: -14.534299850463867

Token 815: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1327784061431885
    2. 'self' → logprob: -1.1327784061431885
    3. '
' → logprob: -2.0077784061431885
    4. ')
' → logprob: -2.3827784061431885
    5. ']' → logprob: -2.6327784061431885
    6. '<|end|>' → logprob: -3.6327784061431885
    7. ']
' → logprob: -3.7577784061431885
    8. ' self' → logprob: -6.257778167724609
    9. '       ' → logprob: -6.757778167724609
    10. '<|end|>' → logprob: -6.882778167724609

Token 816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07276468724012375
    2. 'self' → logprob: -2.6977646350860596
    3. ' self' → logprob: -5.947764873504639
    4. '
' → logprob: -8.69776439666748
    5. '   ' → logprob: -11.44776439666748
    6. '	self' → logprob: -11.69776439666748
    7. '[self' → logprob: -12.07276439666748
    8. '```' → logprob: -12.19776439666748
    9. '           ' → logprob: -12.94776439666748
    10. '        
' → logprob: -12.94776439666748

Token 817: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005700715119019151
    2. ' self' → logprob: -7.500570297241211
    3. '       ' → logprob: -11.000570297241211
    4. '	self' → logprob: -15.375570297241211
    5. 'if' (adapté à ' if') → logprob: -16.00057029724121
    6. '
' → logprob: -16.87557029724121
    7. '        
' → logprob: -17.50057029724121
    8. '   ' → logprob: -18.62557029724121
    9. '[self' → logprob: -19.50057029724121
    10. '(self' → logprob: -20.12557029724121

Token 818: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.20142260193824768
    2. ' expected' → logprob: -1.7014225721359253
    3. '(expected' → logprob: -11.826422691345215
    4. '	expected' → logprob: -13.326422691345215
    5. ' current' → logprob: -15.701422691345215
    6. 'current' → logprob: -16.7014217376709
    7. ' not' → logprob: -17.8264217376709
    8. '
' → logprob: -17.8264217376709
    9. '.expected' → logprob: -17.8264217376709
    10. ' ' → logprob: -18.3264217376709

Token 819: ' and' (ID: 326)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2559232711791992
    2. ' and' → logprob: -2.130923271179199
    3. ' ==' → logprob: -2.380923271179199
    4. 'and' → logprob: -4.755923271179199
    5. '==' → logprob: -5.755923271179199
    6. 'is' → logprob: -5.880923271179199
    7. ' ' → logprob: -11.0059232711792
    8. '<|end|>' → logprob: -11.7559232711792
    9. ' =' → logprob: -12.1309232711792
    10. '=' → logprob: -12.3809232711792

Token 820: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5759702324867249
    2. 'current' → logprob: -0.8259702324867249
    3. 'expected' → logprob: -10.950970649719238
    4. ' expected' → logprob: -11.575970649719238
    5. '	current' → logprob: -13.325970649719238
    6. '(current' → logprob: -13.950970649719238
    7. ' not' → logprob: -14.825970649719238
    8. 'urrent' → logprob: -14.950970649719238
    9. '$current' → logprob: -15.700970649719238
    10. 'not' → logprob: -16.075969696044922

Token 821: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6931533217430115
    2. '!=' → logprob: -0.6931533217430115
    3. '()!=' → logprob: -13.193153381347656
    4. '!==' → logprob: -13.443153381347656
    5. ')!=' → logprob: -14.068153381347656
    6. '!='' → logprob: -14.068153381347656
    7. ']!=' → logprob: -14.943153381347656
    8. '!="' → logprob: -15.068153381347656
    9. '==' → logprob: -15.193153381347656
    10. ' not' → logprob: -15.943153381347656

Token 822: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.00317783304490149
    2. ' expected' → logprob: -5.753177642822266
    3. '(expected' → logprob: -16.253177642822266
    4. '	expected' → logprob: -16.753177642822266
    5. '.expected' → logprob: -18.753177642822266
    6. '_expected' → logprob: -19.878177642822266
    7. 'Expected' → logprob: -21.753177642822266
    8. 'expect' → logprob: -22.503177642822266
    9. 'EXPECTED' → logprob: -23.253177642822266
    10. ' esperado' → logprob: -24.003177642822266

Token 823: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0701819509267807
    2. ':
' → logprob: -2.6951818466186523
    3. ':return' → logprob: -8.945181846618652
    4. '<|end|>' → logprob: -9.570181846618652
    5. ' :' → logprob: -11.695181846618652
    6. '):' → logprob: -12.070181846618652
    7. ':

' → logprob: -12.195181846618652
    8. '.' → logprob: -12.195181846618652
    9. ' and' → logprob: -12.570181846618652
    10. '):
' → logprob: -12.570181846618652

Token 824: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004507970064878464
    2. ' raise' → logprob: -5.879508018493652
    3. ':' → logprob: -7.379508018493652
    4. ':
' → logprob: -8.004508018493652
    5. 'raise' → logprob: -8.129508018493652
    6. '       ' → logprob: -8.504508018493652
    7. ' Assertion' → logprob: -10.254508018493652
    8. '            ' → logprob: -10.254508018493652
    9. ' return' → logprob: -10.629508018493652
    10. '          ' → logprob: -11.004508018493652

Token 825: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.009446507319808006
    2. ' raise' → logprob: -4.759446620941162
    3. '           ' → logprob: -7.259446620941162
    4. 'assert' → logprob: -10.134446144104004
    5. '	raise' → logprob: -10.509446144104004
    6. '
' → logprob: -10.884446144104004
    7. 'self' → logprob: -11.009446144104004
    8. 'return' → logprob: -11.384446144104004
    9. '            
' → logprob: -12.259446144104004
    10. '```' → logprob: -12.634446144104004

Token 826: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0235140323638916
    2. ' Value' → logprob: -3.7735140323638916
    3. 'Syntax' → logprob: -8.523513793945312
    4. 'Runtime' → logprob: -10.273513793945312
    5. 'Exception' → logprob: -10.648513793945312
    6. 'Assertion' → logprob: -11.648513793945312
    7. '(Value' → logprob: -14.148513793945312
    8. ' Runtime' → logprob: -14.273513793945312
    9. ' Syntax' → logprob: -14.898513793945312
    10. ' Assertion' → logprob: -14.898513793945312

Token 827: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.3132726848125458
    2. 'rror' → logprob: -1.3132727146148682
    3. 'error' → logprob: -12.438272476196289
    4. 'rr' → logprob: -12.563272476196289
    5. 'ror' → logprob: -13.063272476196289
    6. 'r' → logprob: -14.563272476196289
    7. 'SError' → logprob: -14.563272476196289
    8. 'nd' → logprob: -15.813272476196289
    9. 'n' → logprob: -16.81327247619629
    10. 'RR' → logprob: -17.81327247619629

Token 828: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.09451568126678467
    2. '('' → logprob: -3.344515800476074
    3. '(' → logprob: -3.594515800476074
    4. '("' → logprob: -3.844515800476074
    5. '(
' → logprob: -5.219515800476074
    6. '(expected' → logprob: -7.719515800476074
    7. '()' → logprob: -9.469515800476074
    8. 'f' → logprob: -9.594515800476074
    9. '(current' → logprob: -10.844515800476074
    10. '("'' → logprob: -11.844515800476074

Token 829: '"' (ID: 1)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6131443381309509
    2. ' f' → logprob: -1.2381443977355957
    3. 'Unexpected' → logprob: -2.4881443977355957
    4. ' expected' → logprob: -3.7381443977355957
    5. 'expected' → logprob: -4.238144397735596
    6. 'Expected' → logprob: -4.363144397735596
    7. 'f' → logprob: -4.863144397735596
    8. ''{' → logprob: -4.988144397735596
    9. ' unexpected' → logprob: -5.363144397735596
    10. '{' → logprob: -5.488144397735596

Token 830: 'Expected' (ID: 28041)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.4959382116794586
    2. '{' → logprob: -0.9959381818771362
    3. ' expected' → logprob: -4.620938301086426
    4. 'Expected' → logprob: -5.245938301086426
    5. 'Unexpected' → logprob: -5.745938301086426
    6. ''{' → logprob: -6.745938301086426
    7. 'current' → logprob: -6.745938301086426
    8. 'unexpected' → logprob: -7.495938301086426
    9. '(expected' → logprob: -8.620938301086426
    10. ' unexpected' → logprob: -9.620938301086426

Token 831: ' '{' (ID: 24918)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -0.5084686279296875
    2. '{' → logprob: -1.0084686279296875
    3. 'expected' → logprob: -3.7584686279296875
    4. ' '{' → logprob: -5.1334686279296875
    5. ' expected' → logprob: -6.0084686279296875
    6. ' {' → logprob: -6.8834686279296875
    7. ''' → logprob: -6.8834686279296875
    8. '(expected' → logprob: -10.133468627929688
    9. '"{' → logprob: -10.633468627929688
    10. ' '' → logprob: -12.258468627929688

Token 832: 'expected' (ID: 12575)
  Prédit: 'expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -6.153795766294934e-06
    2. '{' → logprob: -12.125005722045898
    3. ' expected' → logprob: -15.000005722045898
    4. '(expected' → logprob: -15.875005722045898
    5. '	expected' → logprob: -16.5000057220459
    6. '
' → logprob: -17.6250057220459
    7. '}' → logprob: -18.1250057220459
    8. '.expected' → logprob: -18.2500057220459
    9. '_expected' → logprob: -19.3750057220459
    10. '{
' → logprob: -19.7500057220459

Token 833: '}'' (ID: 24321)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.34194111824035645
    2. ''' → logprob: -1.3419411182403564
    3. '}',' → logprob: -3.8419411182403564
    4. '}'' → logprob: -5.091940879821777
    5. ',' → logprob: -7.466940879821777
    6. ' but' → logprob: -9.716940879821777
    7. ' ',' → logprob: -11.091940879821777
    8. ' '' → logprob: -11.966940879821777
    9. '}' → logprob: -12.841940879821777
    10. '"',' → logprob: -12.966940879821777

Token 834: ' at' (ID: 540)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2525278627872467
    2. ' but' → logprob: -1.5025278329849243
    3. 'but' → logprob: -8.127528190612793
    4. ' ,' → logprob: -8.377528190612793
    5. ''' → logprob: -11.127528190612793
    6. '',' → logprob: -11.502528190612793
    7. ')' → logprob: -11.752528190612793
    8. '")' → logprob: -11.877528190612793
    9. ',current' → logprob: -12.002528190612793
    10. '')' → logprob: -12.127528190612793

Token 835: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13667045533657074
    2. 'pos' → logprob: -2.3866703510284424
    3. 'position' → logprob: -3.3866703510284424
    4. ' position' → logprob: -7.1366705894470215
    5. '{' → logprob: -7.3866705894470215
    6. ' self' → logprob: -7.5116705894470215
    7. ' pos' → logprob: -11.761670112609863
    8. ''{' → logprob: -11.886670112609863
    9. 'token' → logprob: -12.761670112609863
    10. 'char' → logprob: -13.636670112609863

Token 836: ' {' (ID: 354)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008074773475527763
    2. ' self' → logprob: -5.383074760437012
    3. '{' → logprob: -6.008074760437012
    4. '=self' → logprob: -7.133074760437012
    5. ' {' → logprob: -10.008074760437012
    6. '=' → logprob: -10.508074760437012
    7. '(self' → logprob: -10.508074760437012
    8. 'elf' → logprob: -10.633074760437012
    9. '[self' → logprob: -10.883074760437012
    10. 's' → logprob: -11.383074760437012

Token 837: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008681347593665123
    2. '{' → logprob: -4.758681297302246
    3. ' self' → logprob: -9.633681297302246
    4. ' {' → logprob: -14.008681297302246
    5. '(self' → logprob: -15.508681297302246
    6. '[self' → logprob: -16.633682250976562
    7. '{s' → logprob: -16.758682250976562
    8. 's' → logprob: -17.258682250976562
    9. '{
' → logprob: -17.633682250976562
    10. '{}' → logprob: -18.008682250976562

Token 838: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.023246875032782555
    2. 'pos' → logprob: -3.7732467651367188
    3. '	pos' → logprob: -14.523246765136719
    4. ' pos' → logprob: -15.648246765136719
    5. '.' → logprob: -15.648246765136719
    6. ' .' → logprob: -15.898246765136719
    7. '[pos' → logprob: -16.02324676513672
    8. '_pos' → logprob: -16.39824676513672
    9. 'Pos' → logprob: -16.64824676513672
    10. '
' → logprob: -16.77324676513672

Token 839: '}' (ID: 92)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06810098141431808
    2. ' but' → logprob: -2.818100929260254
    3. '")' → logprob: -5.318100929260254
    4. '')' → logprob: -7.443100929260254
    5. ')' → logprob: -8.068100929260254
    6. ',
' → logprob: -9.193100929260254
    7. '       ' → logprob: -10.068100929260254
    8. ' ,' → logprob: -10.318100929260254
    9. 'but' → logprob: -10.318100929260254
    10. '}' → logprob: -10.568100929260254

Token 840: ' but' (ID: 889)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08105377107858658
    2. ' but' → logprob: -2.5810537338256836
    3. '")' → logprob: -6.831053733825684
    4. ' ,' → logprob: -7.456053733825684
    5. 'but' → logprob: -8.081053733825684
    6. ',
' → logprob: -9.956053733825684
    7. ')' → logprob: -10.331053733825684
    8. ',current' → logprob: -10.581053733825684
    9. '")
' → logprob: -10.831053733825684
    10. '')' → logprob: -11.331053733825684

Token 841: ' found' (ID: 2491)
  Prédit: ' got'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' got' → logprob: -0.5582269430160522
    2. 'got' → logprob: -1.5582269430160522
    3. ' found' → logprob: -1.8082269430160522
    4. 'found' → logprob: -2.933227062225342
    5. '	got' → logprob: -9.933226585388184
    6. 'g' → logprob: -11.183226585388184
    7. '	found' → logprob: -11.433226585388184
    8. ' g' → logprob: -11.808226585388184
    9. 'received' → logprob: -12.183226585388184
    10. ' ' → logprob: -13.558226585388184

Token 842: ' '{' (ID: 24918)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0944289118051529
    2. ' '' → logprob: -3.2194290161132812
    3. ''{' → logprob: -3.2194290161132812
    4. ' '{' → logprob: -4.719429016113281
    5. ' current' → logprob: -7.469429016113281
    6. 'current' → logprob: -8.344429016113281
    7. '"' → logprob: -8.594429016113281
    8. '{' → logprob: -9.219429016113281
    9. ' {' → logprob: -10.219429016113281
    10. '`' → logprob: -10.594429016113281

Token 843: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -2.5776860184123507e-06
    2. ' current' → logprob: -13.00000286102295
    3. 'cur' → logprob: -15.62500286102295
    4. 'curr' → logprob: -16.625001907348633
    5. '$current' → logprob: -18.750001907348633
    6. '[current' → logprob: -20.500001907348633
    7. 'urrent' → logprob: -20.750001907348633
    8. '.current' → logprob: -21.250001907348633
    9. 'c' → logprob: -21.375001907348633
    10. ' ' → logprob: -21.500001907348633

Token 844: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6599695682525635
    2. '}'' → logprob: -0.9099695682525635
    3. ''"' → logprob: -2.6599695682525635
    4. ''}' → logprob: -5.034969329833984
    5. '')"' → logprob: -6.534969329833984
    6. ''")
' → logprob: -6.784969329833984
    7. '')' → logprob: -7.034969329833984
    8. ' '' → logprob: -8.784969329833984
    9. '}' → logprob: -9.034969329833984
    10. '}')' → logprob: -9.159969329833984

Token 845: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.0991487130522728
    2. '')
' → logprob: -2.599148750305176
    3. '")' → logprob: -4.849148750305176
    4. '       ' → logprob: -4.974148750305176
    5. ''")
' → logprob: -6.099148750305176
    6. '')' → logprob: -6.224148750305176
    7. '"' → logprob: -8.099148750305176
    8. ')
' → logprob: -8.724148750305176
    9. '.")
' → logprob: -8.724148750305176
    10. ''' → logprob: -8.724148750305176

Token 846: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5282425284385681
    2. 'self' → logprob: -0.9032425284385681
    3. ' self' → logprob: -5.528242588043213
    4. '
' → logprob: -7.528242588043213
    5. '        
' → logprob: -8.153242111206055
    6. '   ' → logprob: -9.153242111206055
    7. '```' → logprob: -10.028242111206055
    8. '	self' → logprob: -10.278242111206055
    9. '\' → logprob: -10.778242111206055
    10. '           ' → logprob: -11.028242111206055

Token 847: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0029097271617501974
    2. ' self' → logprob: -6.0029096603393555
    3. '       ' → logprob: -7.7529096603393555
    4. '   ' → logprob: -12.752909660339355
    5. '	self' → logprob: -14.127909660339355
    6. '
' → logprob: -14.877909660339355
    7. '```' → logprob: -15.752909660339355
    8. '[self' → logprob: -16.127910614013672
    9. '(self' → logprob: -16.502910614013672
    10. '           ' → logprob: -16.877910614013672

Token 848: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0025005098432302475
    2. 'pos' → logprob: -6.002500534057617
    3. ' pos' → logprob: -11.002500534057617
    4. '.' → logprob: -12.002500534057617
    5. '_pos' → logprob: -14.127500534057617
    6. ' .' → logprob: -14.127500534057617
    7. '	pos' → logprob: -14.752500534057617
    8. '[pos' → logprob: -16.002500534057617
    9. '.space' → logprob: -17.002500534057617
    10. 'Pos' → logprob: -18.127500534057617

Token 849: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006715728435665369
    2. ' +=' → logprob: -5.006715774536133
    3. '+' → logprob: -15.631715774536133
    4. ']+=' → logprob: -15.756715774536133
    5. '=' → logprob: -17.256715774536133
    6. '+="' → logprob: -18.006715774536133
    7. '+='' → logprob: -19.006715774536133
    8. '+=(' → logprob: -20.381715774536133
    9. '   ' → logprob: -20.756715774536133
    10. '```' → logprob: -21.131715774536133

Token 850: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -22.25
    4. '```' → logprob: -22.5
    5. '
' → logprob: -22.625
    6. '１' → logprob: -24.0
    7. '۱' → logprob: -24.375
    8. '0' → logprob: -25.3125
    9. '+' → logprob: -25.75
    10. '' → logprob: -25.875

Token 851: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -22.375
    4. '```' → logprob: -22.625
    5. '１' → logprob: -24.5
    6. '۱' → logprob: -24.625
    7. '
' → logprob: -24.75
    8. '0' → logprob: -25.0
    9. 'current' → logprob: -25.75
    10. '`' → logprob: -25.875

Token 852: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006753815687261522
    2. 'return' → logprob: -8.125675201416016
    3. '<|end|>' → logprob: -8.500675201416016
    4. ' return' → logprob: -9.125675201416016
    5. '	return' → logprob: -10.875675201416016
    6. '	' → logprob: -11.000675201416016
    7. '   ' → logprob: -11.500675201416016
    8. '        
' → logprob: -12.250675201416016
    9. '{return' → logprob: -12.875675201416016
    10. '
' → logprob: -13.125675201416016

Token 853: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006902746972627938
    2. 'return' → logprob: -7.500690460205078
    3. ' return' → logprob: -9.625690460205078
    4. '	' → logprob: -10.500690460205078
    5. '	return' → logprob: -10.625690460205078
    6. '<|end|>' → logprob: -11.500690460205078
    7. '   ' → logprob: -12.500690460205078
    8. '	   ' → logprob: -13.375690460205078
    9. '
' → logprob: -14.125690460205078
    10. '{return' → logprob: -14.250690460205078

Token 854: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007456640596501529
    2. ' return' → logprob: -7.50074577331543
    3. '       ' → logprob: -8.87574577331543
    4. '	return' → logprob: -9.87574577331543
    5. '{return' → logprob: -15.00074577331543
    6. '
' → logprob: -15.50074577331543
    7. '```' → logprob: -15.50074577331543
    8. '	' → logprob: -15.62574577331543
    9. ':return' → logprob: -15.87574577331543
    10. 'eturn' → logprob: -15.87574577331543

Token 855: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0009114635176956654
    2. ' current' → logprob: -7.000911235809326
    3. '$current' → logprob: -21.625911712646484
    4. 'cur' → logprob: -22.125911712646484
    5. '(current' → logprob: -22.250911712646484
    6. '	current' → logprob: -22.375911712646484
    7. '[current' → logprob: -22.625911712646484
    8. '.current' → logprob: -22.750911712646484
    9. 'urrent' → logprob: -23.125911712646484
    10. '=current' → logprob: -23.625911712646484

Token 856: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 857: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37866121530532837
    2. '   ' → logprob: -1.2536611557006836
    3. ' def' → logprob: -3.6286611557006836
    4. '    
' → logprob: -6.628661155700684
    5. '```' → logprob: -6.628661155700684
    6. '
' → logprob: -8.378661155700684
    7. '<|end|>' → logprob: -8.878661155700684
    8. '	def' → logprob: -9.253661155700684
    9. ' 
' → logprob: -10.253661155700684
    10. '        
' → logprob: -11.128661155700684

Token 858: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0013315484393388033
    2. ' def' → logprob: -6.751331329345703
    3. '   ' → logprob: -8.751331329345703
    4. '	def' → logprob: -13.251331329345703
    5. '    
' → logprob: -14.251331329345703
    6. '```' → logprob: -14.751331329345703
    7. '
' → logprob: -16.751331329345703
    8. 'Def' → logprob: -17.751331329345703
    9. '        
' → logprob: -17.876331329345703
    10. ' 
' → logprob: -18.751331329345703

Token 859: ' parse' (ID: 8420)
  Prédit: 'skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skip' → logprob: -0.6276204586029053
    2. 'parse' → logprob: -1.0026204586029053
    3. ' skip' → logprob: -2.7526204586029053
    4. ' parse' → logprob: -3.3776204586029053
    5. '_skip' → logprob: -7.627620697021484
    6. 'consume' → logprob: -7.627620697021484
    7. 'wh' → logprob: -9.377620697021484
    8. 'eat' → logprob: -9.752620697021484
    9. '_parse' → logprob: -9.752620697021484
    10. '_formula' → logprob: -10.502620697021484

Token 860: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -0.04176608473062515
    2. '_expression' → logprob: -4.041766166687012
    3. '_factor' → logprob: -5.041766166687012
    4. '_atom' → logprob: -5.041766166687012
    5. '(self' → logprob: -5.416766166687012
    6. '_term' → logprob: -5.541766166687012
    7. '_expr' → logprob: -7.166766166687012
    8. '_primary' → logprob: -7.541766166687012
    9. '()' → logprob: -8.791766166687012
    10. '_' → logprob: -8.791766166687012

Token 861: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.625003814697266
    3. ' (' → logprob: -15.250003814697266
    4. 'self' → logprob: -15.500003814697266
    5. '()' → logprob: -17.500003814697266
    6. '(s' → logprob: -17.625003814697266
    7. '   ' → logprob: -17.625003814697266
    8. ' self' → logprob: -18.625003814697266
    9. '(
' → logprob: -19.125003814697266
    10. ' ' → logprob: -19.625003814697266

Token 862: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020458148792386055
    2. '(self' → logprob: -4.520458221435547
    3. 'self' → logprob: -5.020458221435547
    4. '):' → logprob: -6.145458221435547
    5. '):
' → logprob: -7.770458221435547
    6. ')->' → logprob: -9.395458221435547
    7. ' )' → logprob: -9.895458221435547
    8. ' self' → logprob: -10.895458221435547
    9. '   ' → logprob: -11.645458221435547
    10. '	self' → logprob: -12.270458221435547

Token 863: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012094692647224292
    2. 'self' → logprob: -9.250121116638184
    3. '(' → logprob: -10.750121116638184
    4. '()' → logprob: -14.250121116638184
    5. '():' → logprob: -14.500121116638184
    6. '->' → logprob: -14.625121116638184
    7. ' ->' → logprob: -14.875121116638184
    8. '       ' → logprob: -15.125121116638184
    9. '   ' → logprob: -15.125121116638184
    10. ' self' → logprob: -15.375121116638184

Token 864: ' Formula' (ID: 52227)
  Prédit: 'Formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formula' → logprob: -4.656383680412546e-05
    2. ' Formula' → logprob: -10.000046730041504
    3. 'Form' → logprob: -14.250046730041504
    4. 'Tuple' → logprob: -15.375046730041504
    5. '_formula' → logprob: -16.500045776367188
    6. 'formula' → logprob: -16.625045776367188
    7. 'str' → logprob: -17.250045776367188
    8. ''' → logprob: -18.125045776367188
    9. 'Union' → logprob: -18.375045776367188
    10. '(' → logprob: -18.375045776367188

Token 865: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.47087904810905457
    2. ':' → logprob: -1.220879077911377
    3. '():
' → logprob: -2.845879077911377
    4. '       ' → logprob: -4.220879077911377
    5. ':
' → logprob: -5.595879077911377
    6. '()' → logprob: -6.595879077911377
    7. '(self' → logprob: -6.845879077911377
    8. '   ' → logprob: -6.845879077911377
    9. '):' → logprob: -8.595878601074219
    10. '):
' → logprob: -8.845878601074219

Token 866: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5189203023910522
    2. 'token' → logprob: -1.2689203023910522
    3. 'char' → logprob: -3.393920421600342
    4. '   ' → logprob: -3.393920421600342
    5. 'ch' → logprob: -3.893920421600342
    6. '       ' → logprob: -4.518920421600342
    7. 'tok' → logprob: -5.018920421600342
    8. ' c' → logprob: -5.143920421600342
    9. ' token' → logprob: -5.393920421600342
    10. 'self' → logprob: -5.643920421600342

Token 867: ' c' (ID: 274)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.2565996050834656
    2. 'c' (adapté à ' c') → logprob: -2.2565996646881104
    3. 'left' → logprob: -3.3815996646881104
    4. 'tok' → logprob: -3.7565996646881104
    5. 'ch' → logprob: -3.8815996646881104
    6. 'char' → logprob: -4.131599426269531
    7. 'term' → logprob: -4.256599426269531
    8. 'return' → logprob: -5.506599426269531
    9. 'result' → logprob: -6.131599426269531
    10. ' token' → logprob: -6.256599426269531

Token 868: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032802533358335495
    2. '=' → logprob: -3.6578025817871094
    3. 'har' → logprob: -5.157802581787109
    4. 'urrent' → logprob: -7.532802581787109
    5. 'h' → logprob: -9.03280258178711
    6. '   ' → logprob: -10.03280258178711
    7. ' ' → logprob: -11.78280258178711
    8. 'ur' → logprob: -12.65780258178711
    9. '  ' → logprob: -12.90780258178711
    10. '=h' → logprob: -13.15780258178711

Token 869: ' self' (ID: 1051)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 870: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.005265425890684128
    2. '.consume' → logprob: -5.255265235900879
    3. 'peek' → logprob: -10.880265235900879
    4. '.' → logprob: -11.505265235900879
    5. '.parse' → logprob: -14.130265235900879
    6. ' .' → logprob: -14.255265235900879
    7. '.pe' → logprob: -14.380265235900879
    8. '.text' → logprob: -14.880265235900879
    9. '.next' → logprob: -15.630265235900879
    10. 'consume' → logprob: -16.505266189575195

Token 871: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024548891931772232
    2. '<|end|>' → logprob: -3.7745490074157715
    3. '()
' → logprob: -7.0245490074157715
    4. '<|end|>' → logprob: -8.649548530578613
    5. ' ' → logprob: -9.899548530578613
    6. '()<' → logprob: -9.899548530578613
    7. '(' → logprob: -10.899548530578613
    8. 'if' → logprob: -11.399548530578613
    9. '       ' → logprob: -11.524548530578613
    10. ')' → logprob: -11.649548530578613

Token 872: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04744753986597061
    2. 'if' → logprob: -3.547447443008423
    3. ' if' → logprob: -4.047447681427002
    4. '   ' → logprob: -9.922447204589844
    5. '        
' → logprob: -11.797447204589844
    6. '	if' → logprob: -12.547447204589844
    7. 'If' → logprob: -12.672447204589844
    8. '           ' → logprob: -12.922447204589844
    9. ' ' → logprob: -13.047447204589844
    10. '      ' → logprob: -13.797447204589844

Token 873: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00032044618274085224
    2. '       ' → logprob: -8.625320434570312
    3. ' if' → logprob: -8.875320434570312
    4. '	if' → logprob: -15.000320434570312
    5. '        
' → logprob: -15.375320434570312
    6. '   ' → logprob: -15.500320434570312
    7. 'If' → logprob: -15.625320434570312
    8. '#' (adapté à ' #') → logprob: -16.250320434570312
    9. '           ' → logprob: -18.375320434570312
    10. '        ' → logprob: -18.625320434570312

Token 874: ' Constants' (ID: 31976)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.7729658540920354e-05
    2. ' if' → logprob: -10.625027656555176
    3. '       ' → logprob: -13.500027656555176
    4. 'while' → logprob: -14.000027656555176
    5. 'If' → logprob: -14.625027656555176
    6. 'i' → logprob: -15.375027656555176
    7. '#' → logprob: -15.500027656555176
    8. '   ' → logprob: -15.750027656555176
    9. '    ' → logprob: -17.000028610229492
    10. '	if' → logprob: -17.250028610229492

Token 875: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5989525318145752
    2. 'if' → logprob: -0.8489525318145752
    3. '       ' → logprob: -4.223952293395996
    4. ' ' → logprob: -5.098952293395996
    5. '<|end|>' → logprob: -7.098952293395996
    6. '   ' → logprob: -8.598952293395996
    7. 'If' → logprob: -8.848952293395996
    8. 'i' → logprob: -8.973952293395996
    9. '	if' → logprob: -9.223952293395996
    10. ',' → logprob: -9.348952293395996

Token 876: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28070470690727234
    2. 'if' → logprob: -2.1557047367095947
    3. '       ' → logprob: -2.2807047367095947
    4. ' ' → logprob: -5.030704498291016
    5. '<|end|>' → logprob: -5.280704498291016
    6. ' or' → logprob: -5.405704498291016
    7. '   ' → logprob: -5.405704498291016
    8. ' and' → logprob: -6.405704498291016
    9. ' =' → logprob: -7.280704498291016
    10. ',' → logprob: -7.280704498291016

Token 877: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0053924149833619595
    2. ' if' → logprob: -5.255392551422119
    3. '       ' → logprob: -8.755392074584961
    4. '   ' → logprob: -15.255392074584961
    5. ' ' → logprob: -16.00539207458496
    6. 'If' → logprob: -16.13039207458496
    7. '	if' → logprob: -16.13039207458496
    8. '        
' → logprob: -16.13039207458496
    9. 'i' → logprob: -16.50539207458496
    10. '      ' → logprob: -16.75539207458496

Token 878: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25193241238594055
    2. ' c' → logprob: -1.5019323825836182
    3. ' ' → logprob: -13.501932144165039
    4. '	c' → logprob: -14.251932144165039
    5. 'self' → logprob: -15.001932144165039
    6. '  ' → logprob: -15.626932144165039
    7. '   ' → logprob: -15.751932144165039
    8. ''' → logprob: -15.751932144165039
    9. ' ' → logprob: -16.25193214416504
    10. ' '' → logprob: -16.25193214416504

Token 879: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4721810519695282
    2. ' ==' → logprob: -1.4721810817718506
    3. '==' → logprob: -2.7221810817718506
    4. 'in' → logprob: -2.7221810817718506
    5. '=='' → logprob: -4.2221808433532715
    6. ' =='' → logprob: -7.5971808433532715
    7. ' '' → logprob: -9.09718132019043
    8. ''' → logprob: -9.59718132019043
    9. ' ' → logprob: -10.47218132019043
    10. 'is' → logprob: -10.72218132019043

Token 880: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00956613477319479
    2. '('' → logprob: -5.134566307067871
    3. '"' → logprob: -6.009566307067871
    4. '['' → logprob: -7.259566307067871
    5. '{'' → logprob: -7.759566307067871
    6. ' '' → logprob: -10.634566307067871
    7. ''T' → logprob: -11.134566307067871
    8. '("' → logprob: -12.634566307067871
    9. '{"' → logprob: -14.009566307067871
    10. '   ' → logprob: -14.634566307067871

Token 881: '012' (ID: 19267)
  Prédit: '012'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -0.02828679420053959
    2. '01' → logprob: -3.9032866954803467
    3. ''' → logprob: -5.653286933898926
    4. '02' → logprob: -6.153286933898926
    5. '"' → logprob: -6.903286933898926
    6. 'F' → logprob: -7.028286933898926
    7. '0' → logprob: -9.528286933898926
    8. 'T' → logprob: -10.403286933898926
    9. ''T' → logprob: -10.903286933898926
    10. ' ' → logprob: -11.028286933898926

Token 882: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.4352097809314728
    2. '':' → logprob: -1.0602097511291504
    3. ''' → logprob: -5.56020975112915
    4. ''):
' → logprob: -7.06020975112915
    5. '345' → logprob: -7.18520975112915
    6. '':
' → logprob: -8.060210227966309
    7. '3' → logprob: -8.185210227966309
    8. ''>
' → logprob: -9.185210227966309
    9. '012' → logprob: -9.185210227966309
    10. '':['' → logprob: -9.935210227966309

Token 883: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3894549012184143
    2. ':
' → logprob: -1.3894548416137695
    3. '       ' → logprob: -2.7644548416137695
    4. ':return' → logprob: -5.5144548416137695
    5. '           ' → logprob: -5.6394548416137695
    6. ' :' → logprob: -7.0144548416137695
    7. ' :
' → logprob: -8.01445484161377
    8. '):
' → logprob: -8.38945484161377
    9. '.' → logprob: -8.63945484161377
    10. '   ' → logprob: -8.88945484161377

Token 884: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4124709665775299
    2. 'self' (adapté à ' self') → logprob: -2.162471055984497
    3. 'value' → logprob: -2.287471055984497
    4. 'val' → logprob: -3.162471055984497
    5. 'v' → logprob: -3.412471055984497
    6. ' value' → logprob: -4.412470817565918
    7. ' self' → logprob: -4.537470817565918
    8. ' val' → logprob: -4.787470817565918
    9. 'num' → logprob: -5.662470817565918
    10. 'token' → logprob: -5.662470817565918

Token 885: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.00010354319238103926
    2. '.' → logprob: -9.750103950500488
    3. 'consume' → logprob: -10.375103950500488
    4. '.pos' → logprob: -11.750103950500488
    5. 'pos' → logprob: -12.375103950500488
    6. '.cons' → logprob: -14.250103950500488
    7. '.acquire' → logprob: -15.375103950500488
    8. ':' → logprob: -15.750103950500488
    9. '.advance' → logprob: -16.250102996826172
    10. '[pos' → logprob: -16.375102996826172

Token 886: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4858795404434204
    2. '(c' → logprob: -1.4858795404434204
    3. '()' → logprob: -1.8608795404434204
    4. 'c' → logprob: -5.860879421234131
    5. '(' → logprob: -9.985879898071289
    6. '()
' → logprob: -10.110879898071289
    7. ' c' → logprob: -10.610879898071289
    8. '(
' → logprob: -11.485879898071289
    9. ' ()
' → logprob: -11.860879898071289
    10. ')c' → logprob: -12.110879898071289

Token 887: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020976364612579346
    2. 'return' → logprob: -4.020976543426514
    3. '       ' → logprob: -6.520976543426514
    4. ' return' → logprob: -6.645976543426514
    5. '
' → logprob: -11.645976066589355
    6. '               ' → logprob: -11.895976066589355
    7. ',' → logprob: -12.395976066589355
    8. ':return' → logprob: -12.395976066589355
    9. '            
' → logprob: -12.520976066589355
    10. '	       ' → logprob: -12.645976066589355

Token 888: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -4.036524842376821e-05
    2. 'value' → logprob: -11.000040054321289
    3. '           ' → logprob: -11.250040054321289
    4. ' return' → logprob: -11.750040054321289
    5. '       ' → logprob: -13.750040054321289
    6. '
' → logprob: -13.750040054321289
    7. 'v' → logprob: -15.375040054321289
    8. 'val' → logprob: -15.625040054321289
    9. '   ' → logprob: -15.750040054321289
    10. '```' → logprob: -16.87504005432129

Token 889: ' Const' (ID: 19594)
  Prédit: 'Const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Const' → logprob: -0.0001584850688232109
    2. ' Const' → logprob: -8.750158309936523
    3. 'const' → logprob: -17.125158309936523
    4. '(Const' → logprob: -18.500158309936523
    5. '   ' → logprob: -19.750158309936523
    6. 'Constant' → logprob: -20.500158309936523
    7. '       ' → logprob: -20.875158309936523
    8. ' ' → logprob: -21.500158309936523
    9. 'Con' → logprob: -21.875158309936523
    10. 'Cons' → logprob: -22.750158309936523

Token 890: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005243598949164152
    2. '(' → logprob: -5.25524377822876
    3. 'int' → logprob: -12.130243301391602
    4. '((' → logprob: -13.505243301391602
    5. '[int' → logprob: -14.255243301391602
    6. '(
' → logprob: -14.755243301391602
    7. '(True' → logprob: -15.255243301391602
    8. '(Int' → logprob: -15.255243301391602
    9. ' (' → logprob: -15.380243301391602
    10. '(value' → logprob: -15.380243301391602

Token 891: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0016534021124243736
    2. 'c' → logprob: -6.87665319442749
    3. '(' → logprob: -7.62665319442749
    4. ')c' → logprob: -9.126653671264648
    5. ')' → logprob: -11.001653671264648
    6. '(
' → logprob: -12.501653671264648
    7. ')(' → logprob: -13.376653671264648
    8. ' (' → logprob: -13.376653671264648
    9. ' c' → logprob: -14.751653671264648
    10. '('' → logprob: -16.00165367126465

Token 892: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003754999197553843
    2. '))
' → logprob: -8.125375747680664
    3. ')' → logprob: -9.500375747680664
    4. ' ))' → logprob: -12.875375747680664
    5. ')))' → logprob: -14.625375747680664
    6. '()))' → logprob: -14.750375747680664
    7. '))

' → logprob: -14.750375747680664
    8. ''))' → logprob: -15.000375747680664
    9. '   ' → logprob: -15.250375747680664
    10. ' ' → logprob: -16.500375747680664

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017729965038597584
    2. 'elif' → logprob: -6.876772880554199
    3. '        
' → logprob: -7.751772880554199
    4. '
' → logprob: -8.2517728805542
    5. 'if' → logprob: -10.5017728805542
    6. '<|end|>' → logprob: -12.6267728805542
    7. '   ' → logprob: -13.0017728805542
    8. '    
' → logprob: -13.2517728805542
    9. '      ' → logprob: -13.3767728805542
    10. ')' → logprob: -13.3767728805542

Token 894: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21370838582515717
    2. '       ' → logprob: -1.9637084007263184
    3. 'elif' → logprob: -2.9637084007263184
    4. '
' → logprob: -8.83870792388916
    5. '        
' → logprob: -8.83870792388916
    6. '#' (adapté à ' #') → logprob: -9.46370792388916
    7. ' if' → logprob: -9.71370792388916
    8. ' elif' → logprob: -11.71370792388916
    9. '   ' → logprob: -12.33870792388916
    10. '      ' → logprob: -12.46370792388916

Token 895: ' Variables' (ID: 46975)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002392421243712306
    2. 'elif' → logprob: -6.252392292022705
    3. '#' → logprob: -7.877392292022705
    4. 'If' → logprob: -9.752392768859863
    5. ' if' → logprob: -11.502392768859863
    6. 'var' → logprob: -12.627392768859863
    7. 'V' → logprob: -12.877392768859863
    8. 'v' → logprob: -13.127392768859863
    9. 'Variables' → logprob: -13.502392768859863
    10. '   ' → logprob: -13.627392768859863

Token 896: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10459168255329132
    2. 'if' → logprob: -2.7295916080474854
    3. '       ' → logprob: -4.2295918464660645
    4. 'elif' → logprob: -4.4795918464660645
    5. ' elif' → logprob: -5.6045918464660645
    6. '   ' → logprob: -6.6045918464660645
    7. '<|end|>' → logprob: -6.9795918464660645
    8. ' (' → logprob: -6.9795918464660645
    9. ',' → logprob: -7.4795918464660645
    10. ' or' → logprob: -8.104591369628906

Token 897: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06040581315755844
    2. '       ' → logprob: -3.435405731201172
    3. 'if' → logprob: -3.935405731201172
    4. 'elif' → logprob: -6.060405731201172
    5. ' elif' → logprob: -6.060405731201172
    6. '<|end|>' → logprob: -6.935405731201172
    7. '   ' → logprob: -7.435405731201172
    8. ' or' → logprob: -8.185405731201172
    9. ',' → logprob: -9.185405731201172
    10. ' (' → logprob: -10.060405731201172

Token 898: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06198740750551224
    2. 'elif' → logprob: -2.8119874000549316
    3. ' if' → logprob: -11.31198787689209
    4. '       ' → logprob: -12.06198787689209
    5. ' elif' → logprob: -13.56198787689209
    6. '   ' → logprob: -15.06198787689209
    7. 'If' → logprob: -17.436986923217773
    8. '        
' → logprob: -17.936986923217773
    9. '	if' → logprob: -18.686986923217773
    10. 'el' → logprob: -18.936986923217773

Token 899: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.033675435930490494
    2. ' c' → logprob: -3.4086754322052
    3. 'self' → logprob: -10.533675193786621
    4. ' self' → logprob: -12.908675193786621
    5. '	c' → logprob: -15.283675193786621
    6. '   ' → logprob: -16.158676147460938
    7. ' ' → logprob: -16.158676147460938
    8. ')c' → logprob: -17.033676147460938
    9. '(c' → logprob: -17.408676147460938
    10. '  ' → logprob: -17.408676147460938

Token 900: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021423548460007
    2. 'in' → logprob: -2.3502142429351807
    3. 'In' → logprob: -11.975214004516602
    4. '('' → logprob: -14.975214004516602
    5. ' ' → logprob: -15.475214004516602
    6. ' In' → logprob: -15.600214004516602
    7. '
' → logprob: -16.3502140045166
    8. '   ' → logprob: -16.4752140045166
    9. ' '' → logprob: -16.4752140045166
    10. '[' → logprob: -16.6002140045166

Token 901: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10135483741760254
    2. ' '' → logprob: -2.3513548374176025
    3. 'P' → logprob: -7.351354598999023
    4. 'PQ' → logprob: -8.226354598999023
    5. ' PQ' → logprob: -8.976354598999023
    6. '"P' → logprob: -9.726354598999023
    7. ' P' → logprob: -10.726354598999023
    8. '('' → logprob: -10.851354598999023
    9. '{'' → logprob: -12.726354598999023
    10. ' {'' → logprob: -13.226354598999023

Token 902: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.3438327843905427e-05
    2. '"P' → logprob: -11.00002384185791
    3. ''' → logprob: -12.25002384185791
    4. 'PQ' → logprob: -13.87502384185791
    5. ' P' → logprob: -14.00002384185791
    6. '"' → logprob: -16.625022888183594
    7. '[P' → logprob: -17.375022888183594
    8. '_P' → logprob: -17.750022888183594
    9. '`' → logprob: -17.750022888183594
    10. '.P' → logprob: -18.750022888183594

Token 903: 'QR' (ID: 45481)
  Prédit: 'QR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QR' → logprob: -0.0014628577046096325
    2. 'Q' → logprob: -7.126462936401367
    3. 'QRST' → logprob: -8.001462936401367
    4. 'QRSTUVWXYZ' → logprob: -8.251462936401367
    5. ' QR' → logprob: -10.376462936401367
    6. 'QRSTUVW' → logprob: -10.876462936401367
    7. ',Q' → logprob: -12.876462936401367
    8. ''' → logprob: -13.126462936401367
    9. ',' → logprob: -13.126462936401367
    10. '':
' → logprob: -13.251462936401367

Token 904: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.0045194849371910095
    2. '':' → logprob: -5.504519462585449
    3. ''):
' → logprob: -8.50451946258545
    4. '):
' → logprob: -8.75451946258545
    5. ':
' → logprob: -10.75451946258545
    6. ''' → logprob: -11.00451946258545
    7. '':
' → logprob: -11.12951946258545
    8. ' '' → logprob: -12.00451946258545
    9. ':' → logprob: -12.12951946258545
    10. ')' → logprob: -12.37951946258545

Token 905: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8717935681343079
    2. ':
' → logprob: -1.121793508529663
    3. ':' → logprob: -1.371793508529663
    4. '):
' → logprob: -6.871793746948242
    5. '   ' → logprob: -7.996793746948242
    6. '           ' → logprob: -8.121793746948242
    7. '<|end|>' → logprob: -8.621793746948242
    8. '):' → logprob: -8.871793746948242
    9. '.' → logprob: -8.996793746948242
    10. ',' → logprob: -9.621793746948242

Token 906: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12455335259437561
    2. '       ' → logprob: -2.4995534420013428
    3. ' self' → logprob: -3.3745534420013428
    4. '           ' → logprob: -7.374553203582764
    5. '	self' → logprob: -10.249553680419922
    6. '```' → logprob: -10.749553680419922
    7. 'var' → logprob: -11.249553680419922
    8. 's' → logprob: -12.124553680419922
    9. '[self' → logprob: -12.124553680419922
    10. '   ' → logprob: -12.124553680419922

Token 907: '.consume' (ID: 140765)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.25197216868400574
    2. '.consume' → logprob: -1.5019721984863281
    3. ' consume' → logprob: -10.251972198486328
    4. '.' → logprob: -12.126972198486328
    5. 'cons' → logprob: -14.001972198486328
    6. '_cons' → logprob: -15.126972198486328
    7. '```' → logprob: -15.501972198486328
    8. ':' → logprob: -15.626972198486328
    9. '
' → logprob: -15.751972198486328
    10. '.cons' → logprob: -15.876972198486328

Token 908: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20309987664222717
    2. '()
' → logprob: -1.8280998468399048
    3. '()' → logprob: -3.9530999660491943
    4. 'return' → logprob: -5.578099727630615
    5. ' return' → logprob: -10.328100204467773
    6. '
' → logprob: -10.578100204467773
    7. '()
' → logprob: -11.703100204467773
    8. '		' → logprob: -12.078100204467773
    9. '       ' → logprob: -12.203100204467773
    10. '(' → logprob: -12.703100204467773

Token 909: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005431308411061764
    2. 'return' → logprob: -5.255431175231934
    3. ' return' → logprob: -9.505431175231934
    4. '   ' → logprob: -10.130431175231934
    5. '       ' → logprob: -10.130431175231934
    6. '		' → logprob: -11.255431175231934
    7. '<|end|>' → logprob: -11.630431175231934
    8. '
' → logprob: -12.255431175231934
    9. '	       ' → logprob: -12.505431175231934
    10. '	return' → logprob: -12.630431175231934

Token 910: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002036595979006961
    2. ' return' → logprob: -8.500204086303711
    3. '       ' → logprob: -16.12520408630371
    4. '	return' → logprob: -17.62520408630371
    5. 'eturn' → logprob: -18.62520408630371
    6. ':return' → logprob: -19.75020408630371
    7. '{return' → logprob: -20.25020408630371
    8. '   ' → logprob: -20.62520408630371
    9. '
' → logprob: -20.87520408630371
    10. '           ' → logprob: -21.12520408630371

Token 911: ' Var' (ID: 18782)
  Prédit: 'Var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Var' → logprob: -0.023245595395565033
    2. ' Var' → logprob: -3.7732455730438232
    3. 'var' → logprob: -16.148244857788086
    4. '_var' → logprob: -18.523244857788086
    5. 'Vars' → logprob: -19.398244857788086
    6. 'Variable' → logprob: -20.023244857788086
    7. ' var' → logprob: -20.148244857788086
    8. ' ' → logprob: -20.148244857788086
    9. '.Var' → logprob: -20.148244857788086
    10. '   ' → logprob: -20.773244857788086

Token 912: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.036524842376821e-05
    2. 'c' → logprob: -10.625040054321289
    3. '(' → logprob: -11.250040054321289
    4. '(
' → logprob: -13.000040054321289
    5. ' (' → logprob: -14.875040054321289
    6. ' c' → logprob: -16.00004005432129
    7. '((' → logprob: -16.87504005432129
    8. ')c' → logprob: -17.12504005432129
    9. '(str' → logprob: -17.25004005432129
    10. '	c' → logprob: -18.12504005432129

Token 913: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6047699318733066e-05
    2. ')
' → logprob: -11.250016212463379
    3. '       ' → logprob: -12.875016212463379
    4. ' )' → logprob: -16.000015258789062
    5. ')return' → logprob: -16.000015258789062
    6. '<|end|>' → logprob: -16.250015258789062
    7. '')' → logprob: -16.750015258789062
    8. '   ' → logprob: -17.250015258789062
    9. ')

' → logprob: -17.875015258789062
    10. '))' → logprob: -18.375015258789062

Token 914: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014607120538130403
    2. '        
' → logprob: -7.251460552215576
    3. '
' → logprob: -8.001461029052734
    4. 'elif' → logprob: -9.001461029052734
    5. '    
' → logprob: -9.251461029052734
    6. '   ' → logprob: -9.751461029052734
    7. '<|end|>' → logprob: -10.251461029052734
    8. '  
' → logprob: -10.501461029052734
    9. 'if' → logprob: -10.501461029052734
    10. '       
' → logprob: -11.626461029052734

Token 915: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0038328561931848526
    2. '       ' → logprob: -5.628832817077637
    3. '#' (adapté à ' #') → logprob: -9.003832817077637
    4. ' if' → logprob: -9.503832817077637
    5. 'elif' → logprob: -10.628832817077637
    6. '   ' → logprob: -12.003832817077637
    7. '        
' → logprob: -13.378832817077637
    8. '	if' → logprob: -13.753832817077637
    9. 'If' → logprob: -14.128832817077637
    10. '```' → logprob: -14.753832817077637

Token 916: ' Neg' (ID: 22837)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.91732100979425e-05
    2. ' if' → logprob: -11.625039100646973
    3. '       ' → logprob: -11.625039100646973
    4. 'elif' → logprob: -11.625039100646973
    5. '(' → logprob: -12.125039100646973
    6. '   ' → logprob: -13.250039100646973
    7. '#' → logprob: -13.625039100646973
    8. 'i' → logprob: -13.750039100646973
    9. 'If' → logprob: -14.250039100646973
    10. 'n' → logprob: -14.375039100646973

Token 917: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.2471589798224159e-05
    2. 'a' → logprob: -12.250012397766113
    3. '   ' → logprob: -12.875012397766113
    4. '       ' → logprob: -13.875012397766113
    5. 'otation' → logprob: -14.000012397766113
    6. '('' → logprob: -14.375012397766113
    7. ')' → logprob: -14.500012397766113
    8. '(' → logprob: -14.750012397766113
    9. 'ociation' → logprob: -15.125012397766113
    10. '()' → logprob: -15.375012397766113

Token 918: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5704460740089417
    2. ' if' → logprob: -1.0704460144042969
    3. '       ' → logprob: -2.445446014404297
    4. '   ' → logprob: -5.945446014404297
    5. 'elif' → logprob: -7.695446014404297
    6. '(' → logprob: -7.820446014404297
    7. ' (' → logprob: -7.945446014404297
    8. ',' → logprob: -8.070446014404297
    9. '(
' → logprob: -8.195446014404297
    10. '	if' → logprob: -9.320446014404297

Token 919: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9648792743682861
    2. '       ' → logprob: -1.2148792743682861
    3. 'if' → logprob: -1.2148792743682861
    4. '   ' → logprob: -3.839879274368286
    5. ',' → logprob: -7.089879035949707
    6. 'elif' → logprob: -7.214879035949707
    7. ':' → logprob: -7.339879035949707
    8. '(' → logprob: -8.214879035949707
    9. ' (' → logprob: -8.589879035949707
    10. '<|end|>' → logprob: -8.714879035949707

Token 920: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006427380722016096
    2. 'elif' → logprob: -7.625642776489258
    3. '       ' → logprob: -9.375642776489258
    4. ' if' → logprob: -9.875642776489258
    5. '   ' → logprob: -11.000642776489258
    6. 'i' → logprob: -13.750642776489258
    7. '           ' → logprob: -15.000642776489258
    8. '     ' → logprob: -16.375642776489258
    9. 'If' → logprob: -16.625642776489258
    10. '    ' → logprob: -16.625642776489258

Token 921: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38910841941833496
    2. ' self' → logprob: -1.139108419418335
    3. 'c' → logprob: -7.014108657836914
    4. ' c' → logprob: -7.264108657836914
    5. ' ' → logprob: -8.514108657836914
    6. ' '' → logprob: -9.139108657836914
    7. ''' → logprob: -9.764108657836914
    8. 's' → logprob: -10.139108657836914
    9. ' (' → logprob: -10.514108657836914
    10. 'Neg' → logprob: -10.514108657836914

Token 922: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3955339789390564
    2. '==' → logprob: -1.1455340385437012
    3. '=='' → logprob: -4.770534038543701
    4. '=' → logprob: -9.770533561706543
    5. ' =='' → logprob: -10.020533561706543
    6. ' =' → logprob: -11.395533561706543
    7. '=="' → logprob: -11.520533561706543
    8. '()==' → logprob: -11.770533561706543
    9. '==='' → logprob: -13.020533561706543
    10. '==
' → logprob: -13.020533561706543

Token 923: ' '-' (ID: 17489)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06226758286356926
    2. ''-' → logprob: -2.812267541885376
    3. ''N' → logprob: -9.312267303466797
    4. '"' → logprob: -9.812267303466797
    5. ' '~' → logprob: -10.562267303466797
    6. ''A' → logprob: -10.687267303466797
    7. '-' → logprob: -10.937267303466797
    8. ''U' → logprob: -11.062267303466797
    9. ''C' → logprob: -11.562267303466797
    10. ''T' → logprob: -11.937267303466797

Token 924: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.6742752194404602
    2. '':' → logprob: -0.7992752194404602
    3. ''>' → logprob: -4.4242753982543945
    4. ''' → logprob: -4.6742753982543945
    5. ':
' → logprob: -5.2992753982543945
    6. ':' → logprob: -5.6742753982543945
    7. ''):
' → logprob: -5.7992753982543945
    8. ''>
' → logprob: -5.9242753982543945
    9. '('' → logprob: -7.0492753982543945
    10. '>' → logprob: -7.0492753982543945

Token 925: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2831088602542877
    2. 'self' → logprob: -1.4081088304519653
    3. '           ' → logprob: -6.658108711242676
    4. ' self' → logprob: -7.533108711242676
    5. '   ' → logprob: -9.533108711242676
    6. '```' → logprob: -11.158108711242676
    7. '(self' → logprob: -11.408108711242676
    8. 's' → logprob: -12.033108711242676
    9. '	self' → logprob: -12.283108711242676
    10. '0' → logprob: -12.283108711242676

Token 926: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00021307668066583574
    2. ' self' → logprob: -8.625212669372559
    3. '       ' → logprob: -10.625212669372559
    4. '           ' → logprob: -11.875212669372559
    5. 's' → logprob: -14.625212669372559
    6. '(self' → logprob: -15.000212669372559
    7. '	self' → logprob: -15.125212669372559
    8. '               ' → logprob: -15.250212669372559
    9. '   ' → logprob: -15.500212669372559
    10. '[self' → logprob: -15.750212669372559

Token 927: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.0013857127632945776
    2. 'consume' → logprob: -6.626385688781738
    3. '.' → logprob: -9.876385688781738
    4. '   ' → logprob: -12.251385688781738
    5. '.advance' → logprob: -14.126385688781738
    6. '_cons' → logprob: -14.376385688781738
    7. '.cons' → logprob: -14.751385688781738
    8. '       ' → logprob: -14.876385688781738
    9. 'self' → logprob: -15.126385688781738
    10. ' consume' → logprob: -15.126385688781738

Token 928: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.7097132802009583
    2. '           ' → logprob: -0.9597132802009583
    3. '()' → logprob: -2.2097132205963135
    4. 'return' → logprob: -4.459713459014893
    5. '(' → logprob: -6.084713459014893
    6. '       ' → logprob: -7.584713459014893
    7. '();' → logprob: -8.209712982177734
    8. 'formula' → logprob: -9.334712982177734
    9. 'self' → logprob: -9.459712982177734
    10. '
' → logprob: -9.834712982177734

Token 929: '           ' (ID: 352)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.3499220609664917
    2. '           ' → logprob: -1.2249220609664917
    3. ' operand' → logprob: -7.099922180175781
    4. 'op' → logprob: -7.974922180175781
    5. 'return' → logprob: -8.724922180175781
    6. '       ' → logprob: -9.974922180175781
    7. 'operator' → logprob: -10.849922180175781
    8. 'expr' → logprob: -10.849922180175781
    9. '_operand' → logprob: -11.349922180175781
    10. '
' → logprob: -11.349922180175781

Token 930: ' operand' (ID: 63895)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' (adapté à ' operand') → logprob: -0.011292786337435246
    2. 'return' → logprob: -4.511292934417725
    3. 'op' → logprob: -9.011292457580566
    4. 'expr' → logprob: -9.386292457580566
    5. ' operand' → logprob: -11.261292457580566
    6. 'sub' → logprob: -12.136292457580566
    7. 'neg' → logprob: -12.386292457580566
    8. 'inner' → logprob: -12.511292457580566
    9. '   ' → logprob: -12.511292457580566
    10. 'child' → logprob: -12.886292457580566

Token 931: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '   ' → logprob: -17.436967849731445
    4. ' ' → logprob: -18.936967849731445
    5. '=self' → logprob: -18.936967849731445
    6. ')' → logprob: -19.061967849731445
    7. '    ' → logprob: -19.811967849731445
    8. 'return' → logprob: -19.936967849731445
    9. '_=' → logprob: -19.936967849731445
    10. '  ' → logprob: -20.561967849731445

Token 932: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005530327325686812
    2. ' self' → logprob: -7.500553131103516
    3. '(self' → logprob: -17.125553131103516
    4. 'Neg' → logprob: -17.250553131103516
    5. '       ' → logprob: -20.125553131103516
    6. '	self' → logprob: -20.375553131103516
    7. '[self' → logprob: -20.625553131103516
    8. '   ' → logprob: -20.875553131103516
    9. '=self' → logprob: -21.500553131103516
    10. 'neg' → logprob: -22.000553131103516

Token 933: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.07890058308839798
    2. 'parse' → logprob: -2.5789005756378174
    3. '=parse' → logprob: -11.953900337219238
    4. '(parse' → logprob: -13.328900337219238
    5. '	parse' → logprob: -13.703900337219238
    6. '.' → logprob: -13.703900337219238
    7. ' parse' → logprob: -14.703900337219238
    8. '_parse' → logprob: -17.578901290893555
    9. 'Neg' → logprob: -17.953901290893555
    10. 'neg' → logprob: -17.953901290893555

Token 934: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -3.7697225252486533e-06
    2. 'formula' → logprob: -12.500003814697266
    3. '_form' → logprob: -18.625003814697266
    4. '_factor' → logprob: -19.375003814697266
    5. 'Formula' → logprob: -20.250003814697266
    6. ' formula' → logprob: -21.000003814697266
    7. '_neg' → logprob: -21.500003814697266
    8. '_' → logprob: -22.125003814697266
    9. '_operand' → logprob: -22.125003814697266
    10. '\' → logprob: -23.500003814697266

Token 935: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028910634573549032
    2. 'return' → logprob: -6.2528910636901855
    3. '       ' → logprob: -7.5028910636901855
    4. '()
' → logprob: -8.877890586853027
    5. ')
' → logprob: -8.877890586853027
    6. '
' → logprob: -9.627890586853027
    7. '               ' → logprob: -10.627890586853027
    8. ')' → logprob: -11.252890586853027
    9. '   ' → logprob: -12.002890586853027
    10. ' return' → logprob: -12.127890586853027

Token 936: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.203703835606575
    2. 'return' → logprob: -1.7037038803100586
    3. '       ' → logprob: -6.203703880310059
    4. ' return' → logprob: -8.328703880310059
    5. '   ' → logprob: -10.953703880310059
    6. '
' → logprob: -12.828703880310059
    7. '	return' → logprob: -13.578703880310059
    8. '		' → logprob: -14.078703880310059
    9. '{return' → logprob: -14.453703880310059
    10. '	       ' → logprob: -14.828703880310059

Token 937: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.8624639324116288e-06
    2. '       ' → logprob: -14.000001907348633
    3. ' return' → logprob: -14.000001907348633
    4. '           ' → logprob: -16.000001907348633
    5. '	return' → logprob: -20.500001907348633
    6. '   ' → logprob: -20.625001907348633
    7. '
' → logprob: -21.125001907348633
    8. ')return' → logprob: -23.875001907348633
    9. 'eturn' → logprob: -24.000001907348633
    10. '               ' → logprob: -24.000001907348633

Token 938: ' Neg' (ID: 22837)
  Prédit: 'Neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Neg' → logprob: -1.5048530030981055e-06
    2. ' Neg' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.875001907348633
    4. 'neg' → logprob: -19.625001907348633
    5. '_neg' → logprob: -20.375001907348633
    6. '`' → logprob: -20.875001907348633
    7. '	' → logprob: -21.625001907348633
    8. '
' → logprob: -21.875001907348633
    9. '#' → logprob: -22.000001907348633
    10. 'N' → logprob: -22.250001907348633

Token 939: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: 0.0
    2. 'ATION' → logprob: -19.0
    3. 'a' → logprob: -19.5
    4. 'otation' → logprob: -21.375
    5. 'atio' → logprob: -21.75
    6. 'cation' → logprob: -22.5
    7. '#' → logprob: -22.625
    8. 'acion' → logprob: -22.75
    9. '   ' → logprob: -23.0
    10. 'agation' → logprob: -23.25

Token 940: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '(
' → logprob: -13.625001907348633
    3. 'operand' → logprob: -14.500001907348633
    4. '(operator' → logprob: -15.000001907348633
    5. ' (' → logprob: -16.625001907348633
    6. '(

' → logprob: -17.875001907348633
    7. '(op' → logprob: -18.000001907348633
    8. ' operand' → logprob: -19.375001907348633
    9. '((' → logprob: -19.500001907348633
    10. '("("' → logprob: -20.125001907348633

Token 941: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -4.320199877838604e-07
    2. ' operand' → logprob: -14.75
    3. 'operator' → logprob: -19.375
    4. '(' → logprob: -20.25
    5. ')' → logprob: -21.625
    6. '_operand' → logprob: -22.125
    7. 'opcode' → logprob: -22.125
    8. '   ' → logprob: -22.625
    9. 'Operand' → logprob: -23.625
    10. 'oper' → logprob: -24.375

Token 942: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038134094211272895
    2. ')
' → logprob: -8.000381469726562
    3. '       ' → logprob: -10.000381469726562
    4. ')return' → logprob: -15.375381469726562
    5. ' )' → logprob: -16.000381469726562
    6. '   ' → logprob: -16.000381469726562
    7. ')

' → logprob: -17.000381469726562
    8. '),' → logprob: -17.750381469726562
    9. ')
' → logprob: -18.125381469726562
    10. '))' → logprob: -18.375381469726562

Token 943: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000585322268307209
    2. '#' → logprob: -7.625585556030273
    3. 'if' → logprob: -9.750585556030273
    4. '   ' → logprob: -10.875585556030273
    5. '
' → logprob: -11.750585556030273
    6. '        
' → logprob: -12.250585556030273
    7. '```' → logprob: -12.375585556030273
    8. '           ' → logprob: -13.875585556030273
    9. 'elif' → logprob: -14.250585556030273
    10. '	' → logprob: -14.500585556030273

Token 944: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02499581128358841
    2. '       ' → logprob: -3.774995803833008
    3. '#' (adapté à ' #') → logprob: -6.399995803833008
    4. ' if' → logprob: -9.774995803833008
    5. 'elif' → logprob: -11.024995803833008
    6. '   ' → logprob: -11.899995803833008
    7. '        
' → logprob: -13.149995803833008
    8. '(' → logprob: -13.149995803833008
    9. '	if' → logprob: -14.024995803833008
    10. 'If' → logprob: -14.149995803833008

Token 945: ' Binary' (ID: 32672)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006427380722016096
    2. '(' → logprob: -7.375642776489258
    3. ' if' → logprob: -11.375642776489258
    4. '#' → logprob: -13.125642776489258
    5. '(
' → logprob: -13.500642776489258
    6. 'If' → logprob: -15.000642776489258
    7. '       ' → logprob: -15.250642776489258
    8. 'self' → logprob: -15.375642776489258
    9. 'elif' → logprob: -15.625642776489258
    10. ' (' → logprob: -15.875642776489258

Token 946: ' operations' (ID: 12084)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5763341188430786
    2. ' (' → logprob: -1.8263341188430786
    3. 'op' → logprob: -2.326333999633789
    4. '(
' → logprob: -2.951333999633789
    5. 'if' → logprob: -3.201333999633789
    6. 'space' → logprob: -3.951333999633789
    7. 'operator' → logprob: -4.201333999633789
    8. '   ' → logprob: -4.826333999633789
    9. ' if' → logprob: -4.951333999633789
    10. '_op' → logprob: -5.076333999633789

Token 947: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031028684228658676
    2. ' if' → logprob: -3.9060287475585938
    3. 'if' → logprob: -4.656028747558594
    4. ' (' → logprob: -7.531028747558594
    5. '(' → logprob: -8.781028747558594
    6. ',' → logprob: -9.406028747558594
    7. '   ' → logprob: -9.781028747558594
    8. '(
' → logprob: -10.906028747558594
    9. ':' → logprob: -11.531028747558594
    10. '        
' → logprob: -11.656028747558594

Token 948: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030489154160022736
    2. '       ' → logprob: -3.655489206314087
    3. ' if' → logprob: -5.530488967895508
    4. 'self' → logprob: -9.655488967895508
    5. '(' → logprob: -10.030488967895508
    6. 'def' → logprob: -10.655488967895508
    7. '(
' → logprob: -10.905488967895508
    8. '   ' → logprob: -11.030488967895508
    9. '#' → logprob: -11.905488967895508
    10. ' (' → logprob: -12.405488967895508

Token 949: ' start' (ID: 1604)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.8244283199310303
    2. 'elif' → logprob: -1.6994283199310303
    3. 'if' → logprob: -2.0744283199310303
    4. 'match' → logprob: -2.6994283199310303
    5. 'return' → logprob: -2.8244283199310303
    6. '=' → logprob: -3.3244283199310303
    7. 'expect' → logprob: -3.3244283199310303
    8. ' consume' → logprob: -4.324428558349609
    9. 'be' → logprob: -4.324428558349609
    10. 's' → logprob: -5.449428558349609

Token 950: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.025264931842684746
    2. ' with' → logprob: -3.9002649784088135
    3. '       ' → logprob: -5.900264739990234
    4. 'if' → logprob: -7.275264739990234
    5. '(' → logprob: -7.400264739990234
    6. '(
' → logprob: -8.650264739990234
    7. '('' → logprob: -8.650264739990234
    8. '   ' → logprob: -9.150264739990234
    9. '("("' → logprob: -9.400264739990234
    10. '    ' → logprob: -10.525264739990234

Token 951: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012001062743365765
    2. '(' → logprob: -5.137001037597656
    3. '"' → logprob: -5.512001037597656
    4. '('' → logprob: -6.637001037597656
    5. ''(' → logprob: -7.637001037597656
    6. '("("' → logprob: -9.262001037597656
    7. '`' → logprob: -11.137001037597656
    8. 'f' → logprob: -11.137001037597656
    9. 's' → logprob: -11.262001037597656
    10. ' '('' → logprob: -11.262001037597656

Token 952: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5212936401367188
    2. 'self' → logprob: -1.2712936401367188
    3. 'if' → logprob: -2.2712936401367188
    4. '(' → logprob: -4.521293640136719
    5. '(
' → logprob: -4.771293640136719
    6. ' if' → logprob: -6.896293640136719
    7. '   ' → logprob: -7.521293640136719
    8. ' self' → logprob: -7.646293640136719
    9. '           ' → logprob: -7.771293640136719
    10. '(self' → logprob: -7.771293640136719

Token 953: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043521471321582794
    2. '(' → logprob: -3.2935214042663574
    3. '   ' → logprob: -5.793521404266357
    4. '(
' → logprob: -6.293521404266357
    5. 'if' → logprob: -8.918521881103516
    6. '{' → logprob: -9.543521881103516
    7. ' (' → logprob: -9.793521881103516
    8. 'self' → logprob: -10.043521881103516
    9. ')' → logprob: -10.168521881103516
    10. '           ' → logprob: -10.293521881103516

Token 954: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014537660405039787
    2. '       ' → logprob: -4.514537811279297
    3. 'if' (adapté à ' if') → logprob: -5.889537811279297
    4. ' self' → logprob: -7.514537811279297
    5. '(' → logprob: -9.264537811279297
    6. '   ' → logprob: -10.514537811279297
    7. '(self' → logprob: -11.014537811279297
    8. ' if' → logprob: -11.389537811279297
    9. '           ' → logprob: -11.764537811279297
    10. '(
' → logprob: -12.014537811279297

Token 955: ' c' (ID: 274)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08015183359384537
    2. 'self' → logprob: -2.5801517963409424
    3. ' c' → logprob: -6.8301520347595215
    4. 'c' → logprob: -8.830151557922363
    5. ' (' → logprob: -11.080151557922363
    6. '(self' → logprob: -11.455151557922363
    7. '(' → logprob: -12.455151557922363
    8. ' ' → logprob: -12.830151557922363
    9. ' ' → logprob: -13.830151557922363
    10. '	self' → logprob: -15.580151557922363

Token 956: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18599878251552582
    2. ' ==' → logprob: -1.810998797416687
    3. '(' → logprob: -5.185998916625977
    4. '=' → logprob: -7.935998916625977
    5. '=='' → logprob: -9.310998916625977
    6. ' (' → logprob: -9.435998916625977
    7. '()==' → logprob: -9.685998916625977
    8. '==(' → logprob: -10.435998916625977
    9. '{' → logprob: -12.060998916625977
    10. ' =' → logprob: -12.310998916625977

Token 957: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6365192532539368
    2. '(' → logprob: -0.7615192532539368
    3. ''(' → logprob: -6.136519432067871
    4. ' '('' → logprob: -7.011519432067871
    5. '('' → logprob: -7.386519432067871
    6. '"' → logprob: -9.011519432067871
    7. '("("' → logprob: -9.886519432067871
    8. ' (' → logprob: -10.011519432067871
    9. '(
' → logprob: -11.761519432067871
    10. ' '' → logprob: -14.636519432067871

Token 958: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15118519961833954
    2. '       ' → logprob: -2.1511852741241455
    3. 'self' → logprob: -4.276185035705566
    4. ')' → logprob: -6.276185035705566
    5. '<|end|>' → logprob: -6.276185035705566
    6. '   ' → logprob: -7.026185035705566
    7. '(' → logprob: -7.276185035705566
    8. '               ' → logprob: -7.401185035705566
    9. '(self' → logprob: -7.651185035705566
    10. '<|end|>' → logprob: -7.776185035705566

Token 959: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021081069484353065
    2. 'self' → logprob: -4.02108097076416
    3. '           ' → logprob: -5.89608097076416
    4. ' self' → logprob: -9.02108097076416
    5. '   ' → logprob: -9.89608097076416
    6. '(self' → logprob: -12.77108097076416
    7. '	self' → logprob: -13.52108097076416
    8. '               ' → logprob: -14.77108097076416
    9. '```' → logprob: -15.77108097076416
    10. '	' → logprob: -15.77108097076416

Token 960: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0013355977134779096
    2. ' self' → logprob: -7.126335620880127
    3. '           ' → logprob: -7.751335620880127
    4. '       ' → logprob: -9.251335144042969
    5. '   ' → logprob: -12.501335144042969
    6. '	self' → logprob: -14.376335144042969
    7. '               ' → logprob: -15.126335144042969
    8. ' ' → logprob: -16.12633514404297
    9. '(self' → logprob: -16.62633514404297
    10. '=self' → logprob: -18.50133514404297

Token 961: '.consume' (ID: 140765)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.06198393553495407
    2. '.consume' → logprob: -2.811983823776245
    3. '.' → logprob: -11.811984062194824
    4. ' consume' → logprob: -11.811984062194824
    5. 'pos' → logprob: -14.186984062194824
    6. '   ' → logprob: -14.561984062194824
    7. 'cons' → logprob: -16.186983108520508
    8. 'def' → logprob: -16.811983108520508
    9. '.pos' → logprob: -17.686983108520508
    10. 'Consume' → logprob: -18.436983108520508

Token 962: '()' (ID: 416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03235991671681404
    2. 'left' → logprob: -3.5323598384857178
    3. '       ' → logprob: -6.657360076904297
    4. ' left' → logprob: -7.657360076904297
    5. 'formula' → logprob: -8.032360076904297
    6. 'expr' → logprob: -8.657360076904297
    7. 'lhs' → logprob: -10.282360076904297
    8. '(left' → logprob: -10.407360076904297
    9. 'form' → logprob: -10.532360076904297
    10. '	left' → logprob: -10.532360076904297

Token 963: ' ' (ID: 220)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.015852995216846466
    2. '           ' → logprob: -4.515852928161621
    3. ' left' → logprob: -5.390852928161621
    4. '   ' → logprob: -9.515852928161621
    5. '       ' → logprob: -9.515852928161621
    6. '	left' → logprob: -10.140852928161621
    7. '               ' → logprob: -10.765852928161621
    8. 'lhs' → logprob: -11.015852928161621
    9. '(left' → logprob: -13.140852928161621
    10. '[left' → logprob: -13.640852928161621

Token 964: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00019102399528492242
    2. '           ' → logprob: -8.750190734863281
    3. ' left' → logprob: -10.375190734863281
    4. 'lhs' → logprob: -13.875190734863281
    5. '	left' → logprob: -16.25019073486328
    6. '   ' → logprob: -16.25019073486328
    7. '               ' → logprob: -17.12519073486328
    8. 'l' → logprob: -17.50019073486328
    9. '       ' → logprob: -17.62519073486328
    10. 'right' → logprob: -17.87519073486328

Token 965: ' skip' (ID: 16677)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -4.008129963040119e-06
    2. ' left' → logprob: -12.875003814697266
    3. 'lhs' → logprob: -13.875003814697266
    4. '#' → logprob: -15.500003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '	left' → logprob: -17.125003814697266
    7. 'expr' → logprob: -17.250003814697266
    8. 'right' → logprob: -18.000003814697266
    9. 'l' → logprob: -18.250003814697266
    10. 'first' → logprob: -18.750003814697266

Token 966: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20727752149105072
    2. '(' → logprob: -2.332277536392212
    3. '('' → logprob: -3.332277536392212
    4. 'c' → logprob: -4.207277297973633
    5. '')' → logprob: -4.332277297973633
    6. '<|end|>' → logprob: -4.832277297973633
    7. ' (' → logprob: -5.457277297973633
    8. ')' → logprob: -5.582277297973633
    9. ' '('' → logprob: -5.707277297973633
    10. '#' → logprob: -7.082277297973633

Token 967: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.002842199057340622
    2. '           ' → logprob: -6.502842426300049
    3. ' left' → logprob: -6.627842426300049
    4. 'lhs' → logprob: -11.75284194946289
    5. '	left' → logprob: -12.62784194946289
    6. '   ' → logprob: -12.87784194946289
    7. '       ' → logprob: -14.50284194946289
    8. '               ' → logprob: -15.25284194946289
    9. '(left' → logprob: -15.87784194946289
    10. ' lhs' → logprob: -15.87784194946289

Token 968: '           ' (ID: 352)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0006409500492736697
    2. ' left' → logprob: -8.000640869140625
    3. '           ' → logprob: -8.125640869140625
    4. 'lhs' → logprob: -12.750640869140625
    5. '	left' → logprob: -12.875640869140625
    6. '   ' → logprob: -13.375640869140625
    7. '       ' → logprob: -13.500640869140625
    8. '               ' → logprob: -14.500640869140625
    9. '_left' → logprob: -16.125640869140625
    10. '左' → logprob: -16.250640869140625

Token 969: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -6.704273118884885e-07
    2. 'lhs' → logprob: -14.625000953674316
    3. ' left' → logprob: -15.750000953674316
    4. '   ' → logprob: -18.25
    5. '	left' → logprob: -18.5
    6. 'l' → logprob: -20.0
    7. 'Left' → logprob: -20.875
    8. '    
' → logprob: -21.25
    9. 'lef' → logprob: -21.25
    10. '.left' → logprob: -21.75

Token 970: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407716512680054
    2. ' =' → logprob: -0.9740771651268005
    3. '=form' → logprob: -16.599077224731445
    4. 'formula' → logprob: -17.099077224731445
    5. 'left' → logprob: -17.349077224731445
    6. ' ' → logprob: -17.474077224731445
    7. '_formula' → logprob: -17.599077224731445
    8. ':' → logprob: -18.224077224731445
    9. '_=' → logprob: -18.849077224731445
    10. '           ' → logprob: -18.974077224731445

Token 971: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.5597102396423e-05
    2. ' self' → logprob: -10.250035285949707
    3. '       ' → logprob: -17.375036239624023
    4. '           ' → logprob: -17.750036239624023
    5. '(self' → logprob: -17.875036239624023
    6. '   ' → logprob: -18.250036239624023
    7. '
' → logprob: -19.125036239624023
    8. '	self' → logprob: -19.500036239624023
    9. '[self' → logprob: -19.500036239624023
    10. 'this' → logprob: -19.875036239624023

Token 972: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.008617766201496124
    2. '.parse' → logprob: -4.758617877960205
    3. ' parse' → logprob: -13.508617401123047
    4. '=parse' → logprob: -13.883617401123047
    5. 'parser' → logprob: -15.383617401123047
    6. '_parse' → logprob: -15.383617401123047
    7. '	parse' → logprob: -15.383617401123047
    8. '(parse' → logprob: -16.008617401123047
    9. '.' → logprob: -16.258617401123047
    10. 'Parse' → logprob: -18.258617401123047

Token 973: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -0.0009126556105911732
    2. 'formula' → logprob: -7.000912666320801
    3. 'Formula' → logprob: -13.8759126663208
    4. ' formula' → logprob: -16.375911712646484
    5. '_form' → logprob: -16.750911712646484
    6. '_expression' → logprob: -18.000911712646484
    7. '_binary' → logprob: -18.250911712646484
    8. '_factor' → logprob: -18.500911712646484
    9. '_' → logprob: -19.000911712646484
    10. ' Formula' → logprob: -19.625911712646484

Token 974: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004135112394578755
    2. 'c' → logprob: -8.37541389465332
    3. ' c' → logprob: -9.75041389465332
    4. 'b' → logprob: -10.00041389465332
    5. '       ' → logprob: -10.75041389465332
    6. '		' → logprob: -10.75041389465332
    7. '          ' → logprob: -12.12541389465332
    8. '   ' → logprob: -12.12541389465332
    9. 'op' → logprob: -12.12541389465332
    10. '            
' → logprob: -12.25041389465332

Token 975: '           ' (ID: 352)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.07832811772823334
    2. 'c' → logprob: -3.0783281326293945
    3. '           ' → logprob: -3.8283281326293945
    4. '       ' → logprob: -5.4533281326293945
    5. ' op' → logprob: -6.0783281326293945
    6. 'operator' → logprob: -7.5783281326293945
    7. '	op' → logprob: -8.703328132629395
    8. ' c' → logprob: -9.453328132629395
    9. 'space' → logprob: -9.578328132629395
    10. 'b' → logprob: -10.328328132629395

Token 976: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' (adapté à ' op') → logprob: -0.0008502478594891727
    2. '           ' → logprob: -7.875850200653076
    3. ' op' → logprob: -8.375850677490234
    4. 'c' → logprob: -8.375850677490234
    5. 'operator' → logprob: -12.625850677490234
    6. '	op' → logprob: -13.000850677490234
    7. 'ops' → logprob: -13.375850677490234
    8. '       ' → logprob: -14.500850677490234
    9. 'oper' → logprob: -14.875850677490234
    10. '            
' → logprob: -15.000850677490234

Token 977: ' =' (ID: 314)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.060822274535894394
    2. 'char' → logprob: -3.4358222484588623
    3. ' =' → logprob: -4.310822486877441
    4. '=' → logprob: -5.185822486877441
    5. '_' → logprob: -5.185822486877441
    6. 'er' → logprob: -6.935822486877441
    7. '_sym' → logprob: -8.310822486877441
    8. '_token' → logprob: -8.435822486877441
    9. '_symbol' → logprob: -8.560822486877441
    10. 'r' → logprob: -8.560822486877441

Token 978: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033558503491804004
    2. ' self' → logprob: -8.000335693359375
    3. ' ' → logprob: -16.375335693359375
    4. ''' → logprob: -18.125335693359375
    5. '`' → logprob: -18.875335693359375
    6. '   ' → logprob: -19.250335693359375
    7. '	self' → logprob: -19.375335693359375
    8. '  ' → logprob: -19.750335693359375
    9. '(self' → logprob: -20.625335693359375
    10. '    ' → logprob: -20.875335693359375

Token 979: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.014194886200129986
    2. 'consume' → logprob: -4.264194965362549
    3. '.' → logprob: -10.88919448852539
    4. '.peek' → logprob: -11.51419448852539
    5. ' consume' → logprob: -13.13919448852539
    6. 'self' → logprob: -15.13919448852539
    7. 'peek' → logprob: -16.26419448852539
    8. ' .' → logprob: -16.38919448852539
    9. 'Consume' → logprob: -16.51419448852539
    10. '.cons' → logprob: -16.63919448852539

Token 980: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008213119581341743
    2. '('' → logprob: -5.633213043212891
    3. '<|end|>' → logprob: -6.008213043212891
    4. ''' → logprob: -7.383213043212891
    5. ')' → logprob: -7.758213043212891
    6. '(' → logprob: -8.38321304321289
    7. '<|end|>' → logprob: -8.38321304321289
    8. '()>' → logprob: -9.00821304321289
    9. '()='' → logprob: -9.00821304321289
    10. ' ' → logprob: -9.50821304321289

Token 981: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 982: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0017935856012627482
    2. 'if' → logprob: -6.376793384552002
    3. ' right' → logprob: -9.50179386138916
    4. '           ' → logprob: -11.50179386138916
    5. '	right' → logprob: -12.87679386138916
    6. '   ' → logprob: -14.12679386138916
    7. ' if' → logprob: -14.75179386138916
    8. 'op' → logprob: -14.87679386138916
    9. 'rightness' → logprob: -14.87679386138916
    10. 'return' → logprob: -15.00179386138916

Token 983: ' op' (ID: 991)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5765749216079712
    2. 'right' → logprob: -0.8265749216079712
    3. '           ' → logprob: -7.451574802398682
    4. ' if' → logprob: -10.57657527923584
    5. 'assert' → logprob: -11.32657527923584
    6. ' right' → logprob: -11.32657527923584
    7. '       ' → logprob: -13.07657527923584
    8. 'Right' → logprob: -14.57657527923584
    9. '          ' → logprob: -14.70157527923584
    10. '            
' → logprob: -15.07657527923584

Token 984: ' should' (ID: 1757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8813258409500122
    2. 'op' → logprob: -1.1313258409500122
    3. '=' → logprob: -2.1313257217407227
    4. ' ' → logprob: -3.0063257217407227
    5. ' in' → logprob: -3.1313257217407227
    6. ')' → logprob: -4.256325721740723
    7. 'in' → logprob: -4.506325721740723
    8. '_op' → logprob: -4.881325721740723
    9. 'if' → logprob: -4.881325721740723
    10. ' op' → logprob: -5.881325721740723

Token 985: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.2537981867790222
    2. ' be' → logprob: -1.503798246383667
    3. 'in' → logprob: -6.503798007965088
    4. ' in' → logprob: -8.003798484802246
    5. '	be' → logprob: -11.628798484802246
    6. 'not' → logprob: -11.878798484802246
    7. 'either' → logprob: -12.253798484802246
    8. '_be' → logprob: -12.253798484802246
    9. ')' → logprob: -12.378798484802246
    10. '=' → logprob: -13.628798484802246

Token 986: ' '*'' (ID: 89603)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.046832889318466187
    2. ''*' → logprob: -4.046833038330078
    3. ''A' → logprob: -4.046833038330078
    4. '('&' → logprob: -5.671833038330078
    5. '')' → logprob: -5.796833038330078
    6. ''.' → logprob: -7.671833038330078
    7. ''C' → logprob: -7.671833038330078
    8. ''^' → logprob: -7.921833038330078
    9. ''-' → logprob: -8.171833038330078
    10. '','' → logprob: -8.421833038330078

Token 987: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07122613489627838
    2. 'or' → logprob: -3.196226119995117
    3. '<|end|>' → logprob: -4.321226119995117
    4. ' ' → logprob: -5.321226119995117
    5. '<|end|>' → logprob: -5.946226119995117
    6. ' op' → logprob: -6.071226119995117
    7. 'op' → logprob: -6.071226119995117
    8. ' if' → logprob: -6.946226119995117
    9. 'if' → logprob: -6.946226119995117
    10. ')' → logprob: -8.821226119995117

Token 988: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1048910841345787
    2. ''+' → logprob: -2.854891061782837
    3. '+' → logprob: -3.229891061782837
    4. '"+"' → logprob: -6.729891300201416
    5. ' '+'' → logprob: -7.479891300201416
    6. '|' → logprob: -7.854891300201416
    7. '+'' → logprob: -9.229890823364258
    8. '')' → logprob: -9.604890823364258
    9. ''||' → logprob: -9.604890823364258
    10. ''>' → logprob: -10.854890823364258

Token 989: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 990: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35164007544517517
    2. ' ' → logprob: -2.351639986038208
    3. '<|end|>' → logprob: -2.601639986038208
    4. ' if' → logprob: -2.726639986038208
    5. 'if' → logprob: -2.976639986038208
    6. '            ' → logprob: -4.976640224456787
    7. '       ' → logprob: -6.851640224456787
    8. '          ' → logprob: -7.476640224456787
    9. '<|end|>' → logprob: -7.476640224456787
    10. '        ' → logprob: -8.101639747619629

Token 991: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47522372007369995
    2. ' if' → logprob: -0.9752237200737
    3. ' ' → logprob: -7.725223541259766
    4. '           ' → logprob: -7.850223541259766
    5. '       ' → logprob: -8.725223541259766
    6. '            ' → logprob: -10.225223541259766
    7. 'return' → logprob: -10.600223541259766
    8. '        ' → logprob: -10.725223541259766
    9. ' 
' → logprob: -10.725223541259766
    10. 'assert' → logprob: -11.600223541259766

Token 992: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -4.0126840758603066e-05
    2. ' op' → logprob: -10.125040054321289
    3. '(op' → logprob: -16.75004005432129
    4. '   ' → logprob: -17.50004005432129
    5. '	op' → logprob: -17.50004005432129
    6. ' ' → logprob: -17.87504005432129
    7. '  ' → logprob: -19.37504005432129
    8. '           ' → logprob: -19.37504005432129
    9. '
' → logprob: -20.50004005432129
    10. '       ' → logprob: -20.75004005432129

Token 993: ' not' (ID: 625)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 994: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34873104095458984
    2. ' in' → logprob: -1.2237310409545898
    3. '['' → logprob: -9.22373104095459
    4. '('' → logprob: -9.84873104095459
    5. '"' → logprob: -10.59873104095459
    6. ' ['' → logprob: -11.22373104095459
    7. '=' → logprob: -11.34873104095459
    8. ''' → logprob: -11.34873104095459
    9. ''in' → logprob: -11.59873104095459
    10. 'In' → logprob: -11.84873104095459

Token 995: ' ['' (ID: 5140)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.002029277151450515
    2. '"*' → logprob: -7.0020294189453125
    3. '('*' → logprob: -7.8770294189453125
    4. ''+' → logprob: -8.127029418945312
    5. '['' → logprob: -8.502029418945312
    6. ''' → logprob: -8.752029418945312
    7. '{'' → logprob: -9.502029418945312
    8. ' '*' → logprob: -12.627029418945312
    9. '*' → logprob: -13.627029418945312
    10. '"' → logprob: -14.377029418945312

Token 996: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1315770447254181
    2. ''*' → logprob: -2.1315770149230957
    3. '*,' → logprob: -5.381577014923096
    4. '*
' → logprob: -11.006577491760254
    5. '"*' → logprob: -12.131577491760254
    6. ''' → logprob: -12.256577491760254
    7. '*",' → logprob: -12.506577491760254
    8. ''+' → logprob: -13.006577491760254
    9. '*

' → logprob: -13.631577491760254
    10. ' '*' → logprob: -13.881577491760254

Token 997: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.05051720514893532
    2. '','' → logprob: -3.4255173206329346
    3. '+',' → logprob: -4.8005170822143555
    4. ' ',' → logprob: -5.5505170822143555
    5. '+' → logprob: -5.5505170822143555
    6. ',' → logprob: -7.5505170822143555
    7. ' ','' → logprob: -8.675517082214355
    8. ''' → logprob: -10.925517082214355
    9. '',
' → logprob: -12.800517082214355
    10. '+,' → logprob: -12.925517082214355

Token 998: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.11640714854001999
    2. '+' → logprob: -2.4914071559906006
    3. ''' → logprob: -3.6164071559906006
    4. ' '+' → logprob: -9.36640739440918
    5. '+]' → logprob: -9.86640739440918
    6. ' +' → logprob: -10.74140739440918
    7. '+'' → logprob: -10.99140739440918
    8. ''>' → logprob: -11.36640739440918
    9. '']' → logprob: -11.49140739440918
    10. '',' → logprob: -12.61640739440918

Token 999: '']:
' (ID: 44766)
  Prédit: '']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:
' → logprob: -0.010097680613398552
    2. '']:' → logprob: -4.635097503662109
    3. '']' → logprob: -8.13509750366211
    4. ']:
' → logprob: -10.88509750366211
    5. '):
' → logprob: -11.26009750366211
    6. ''):
' → logprob: -12.26009750366211
    7. '"]:
' → logprob: -12.63509750366211
    8. '',' → logprob: -13.01009750366211
    9. ']:' → logprob: -13.13509750366211
    10. '"]:' → logprob: -13.88509750366211

Token 1000: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7848750352859497
    2. '<|end|>' → logprob: -1.6598750352859497
    3. '           ' → logprob: -2.03487491607666
    4. ':' → logprob: -2.03487491607666
    5. ':
' → logprob: -2.90987491607666
    6. ' ' → logprob: -4.15987491607666
    7. '       ' → logprob: -5.15987491607666
    8. '<|end|>' → logprob: -5.65987491607666
    9. ',' → logprob: -6.03487491607666
    10. ':return' → logprob: -6.65987491607666

Token 1001: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.38793498277664185
    2. ' raise' → logprob: -1.137934923171997
    3. '	raise' → logprob: -7.137935161590576
    4. '                   ' → logprob: -8.512934684753418
    5. '               ' → logprob: -10.387934684753418
    6. 'self' → logprob: -11.262934684753418
    7. '_raise' → logprob: -11.762934684753418
    8. 'Raise' → logprob: -12.262934684753418
    9. '           ' → logprob: -13.262934684753418
    10. '```' → logprob: -13.262934684753418

Token 1002: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.0280383548888494e-06
    2. 'Syntax' → logprob: -14.000000953674316
    3. ' Value' → logprob: -15.625000953674316
    4. 'Runtime' → logprob: -18.875001907348633
    5. 'value' → logprob: -19.250001907348633
    6. '(Value' → logprob: -19.625001907348633
    7. '	Value' → logprob: -20.500001907348633
    8. '_value' → logprob: -20.625001907348633
    9. '_Value' → logprob: -21.125001907348633
    10. 'Exception' → logprob: -21.125001907348633

Token 1003: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.001035191467963159
    2. 'rror' → logprob: -6.876035213470459
    3. 'error' → logprob: -13.1260347366333
    4. 'Value' → logprob: -15.1260347366333
    5. 'SError' → logprob: -16.876035690307617
    6. 'alue' → logprob: -17.126035690307617
    7. '('' → logprob: -17.751035690307617
    8. 'n' → logprob: -18.001035690307617
    9. '("' → logprob: -18.251035690307617
    10. '(Error' → logprob: -18.251035690307617

Token 1004: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0005981888971291482
    2. '("' → logprob: -7.625597953796387
    3. '(' → logprob: -9.125597953796387
    4. '(
' → logprob: -14.375597953796387
    5. 'f' → logprob: -15.125597953796387
    6. '(F' → logprob: -15.250597953796387
    7. '('' → logprob: -15.750597953796387
    8. '()' → logprob: -17.875598907470703
    9. '("'' → logprob: -18.750598907470703
    10. '("")' → logprob: -19.000598907470703

Token 1005: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3398449122905731
    2. ' f' → logprob: -1.3398449420928955
    3. '(f' → logprob: -3.7148449420928955
    4. '"' → logprob: -6.589844703674316
    5. 'Unexpected' → logprob: -8.089844703674316
    6. '           ' → logprob: -8.714844703674316
    7. ' Unexpected' → logprob: -12.464844703674316
    8. '[f' → logprob: -12.589844703674316
    9. '       ' → logprob: -12.714844703674316
    10. 'Expected' → logprob: -12.714844703674316

Token 1006: 'Expected' (ID: 28041)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003769303730223328
    2. '"' → logprob: -8.37537670135498
    3. 'Unexpected' → logprob: -9.62537670135498
    4. 'Expected' → logprob: -9.75037670135498
    5. ' f' → logprob: -11.37537670135498
    6. '(f' → logprob: -11.87537670135498
    7. 'Invalid' → logprob: -12.87537670135498
    8. '           ' → logprob: -15.12537670135498
    9. '       ' → logprob: -15.37537670135498
    10. '   ' → logprob: -16.000377655029297

Token 1007: ' '*'' (ID: 89603)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.01517175231128931
    2. ''' → logprob: -4.515171527862549
    3. '('*' → logprob: -6.140171527862549
    4. 'op' → logprob: -6.640171527862549
    5. ''op' → logprob: -7.890171527862549
    6. '')' → logprob: -8.765172004699707
    7. ' '*'' → logprob: -10.390172004699707
    8. ' op' → logprob: -11.015172004699707
    9. '"' → logprob: -11.140172004699707
    10. '"*' → logprob: -11.140172004699707

Token 1008: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.47408807277679443
    2. 'or' → logprob: -0.9740880727767944
    3. ''or' → logprob: -12.474087715148926
    4. ',' → logprob: -13.349087715148926
    5. ')' → logprob: -13.474087715148926
    6. '<|end|>' → logprob: -13.599087715148926
    7. ' ' → logprob: -13.724087715148926
    8. '	or' → logprob: -14.349087715148926
    9. 'orm' → logprob: -15.349087715148926
    10. '```' → logprob: -15.724087715148926

Token 1009: ' '+'' (ID: 137356)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00427938112989068
    2. ''+' → logprob: -5.504279613494873
    3. '')' → logprob: -8.879279136657715
    4. '+' → logprob: -10.004279136657715
    5. ' '+'' → logprob: -11.754279136657715
    6. '"+"' → logprob: -12.004279136657715
    7. '+')' → logprob: -14.129279136657715
    8. '+'' → logprob: -14.129279136657715
    9. '','' → logprob: -15.004279136657715
    10. ''*' → logprob: -15.504279136657715

Token 1010: ' but' (ID: 889)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.1017744168639183
    2. ' but' → logprob: -2.3517744541168213
    3. 'at' → logprob: -7.101774215698242
    4. ',' → logprob: -7.601774215698242
    5. 'but' → logprob: -8.601774215698242
    6. ' or' → logprob: -10.851774215698242
    7. ')' → logprob: -11.226774215698242
    8. ' after' → logprob: -11.601774215698242
    9. ' here' → logprob: -12.101774215698242
    10. ''' → logprob: -12.601774215698242

Token 1011: ' got' (ID: 3508)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.009686094708740711
    2. ' found' → logprob: -5.00968599319458
    3. 'got' → logprob: -5.88468599319458
    4. 'op' → logprob: -8.884686470031738
    5. ' got' → logprob: -10.384686470031738
    6. ' op' → logprob: -11.884686470031738
    7. 'received' → logprob: -12.134686470031738
    8. 'f' → logprob: -13.134686470031738
    9. '(op' → logprob: -15.509686470031738
    10. '	found' → logprob: -15.884686470031738

Token 1012: ' '{' (ID: 24918)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -0.13117943704128265
    2. 'op' → logprob: -2.2561793327331543
    3. '{' → logprob: -4.256179332733154
    4. ''op' → logprob: -6.381179332733154
    5. ''' → logprob: -6.756179332733154
    6. 'f' → logprob: -7.506179332733154
    7. ' '{' → logprob: -7.881179332733154
    8. '"{' → logprob: -9.006179809570312
    9. ''"' → logprob: -10.381179809570312
    10. ' op' → logprob: -10.381179809570312

Token 1013: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -5.5577775128767826e-06
    2. ' op' → logprob: -12.125005722045898
    3. '{' → logprob: -16.8750057220459
    4. '	op' → logprob: -17.8750057220459
    5. '(op' → logprob: -18.0000057220459
    6. ''op' → logprob: -20.0000057220459
    7. 'opf' → logprob: -20.1250057220459
    8. '
' → logprob: -20.5000057220459
    9. 'o' → logprob: -22.0000057220459
    10. '[' → logprob: -22.1250057220459

Token 1014: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5647741556167603
    2. ''")
' → logprob: -1.1897741556167603
    3. ''"' → logprob: -2.4397740364074707
    4. '')"' → logprob: -3.5647740364074707
    5. '')' → logprob: -5.064774036407471
    6. '')")
' → logprob: -6.314774036407471
    7. '')
' → logprob: -6.314774036407471
    8. ')'' → logprob: -6.814774036407471
    9. ' '' → logprob: -7.939774036407471
    10. ''"
' → logprob: -9.439774513244629

Token 1015: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14996398985385895
    2. ')
' → logprob: -2.7749640941619873
    3. ')' → logprob: -3.0249640941619873
    4. '")
' → logprob: -4.399963855743408
    5. '       ' → logprob: -5.024963855743408
    6. '")' → logprob: -5.649963855743408
    7. '               ' → logprob: -6.274963855743408
    8. '')
' → logprob: -6.399963855743408
    9. ',' → logprob: -6.899963855743408
    10. '')' → logprob: -7.399963855743408

Token 1016: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006820533308200538
    2. ' self' → logprob: -7.3756818771362305
    3. 'pos' → logprob: -9.87568187713623
    4. 'position' → logprob: -13.00068187713623
    5. '(self' → logprob: -14.50068187713623
    6. '{' → logprob: -14.62568187713623
    7. '
' → logprob: -15.12568187713623
    8. 'op' → logprob: -15.25068187713623
    9. '[self' → logprob: -16.375682830810547
    10. '           ' → logprob: -16.750682830810547

Token 1017: ' {' (ID: 354)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7256254553794861
    2. '{' → logprob: -0.9756254553794861
    3. ' self' → logprob: -2.225625514984131
    4. ' {' → logprob: -3.475625514984131
    5. '{}' → logprob: -10.225625038146973
    6. '(self' → logprob: -10.725625038146973
    7. '{s' → logprob: -12.225625038146973
    8. '{
' → logprob: -12.725625038146973
    9. '           ' → logprob: -13.100625038146973
    10. '[self' → logprob: -13.475625038146973

Token 1018: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.226628895296017e-06
    2. ' self' → logprob: -11.875007629394531
    3. '
' → logprob: -15.750007629394531
    4. '0' → logprob: -16.75000762939453
    5. '{' → logprob: -18.12500762939453
    6. '(self' → logprob: -18.50000762939453
    7. '14' → logprob: -18.62500762939453
    8. '22' → logprob: -19.12500762939453
    9. '12' → logprob: -19.12500762939453
    10. '20' → logprob: -19.12500762939453

Token 1019: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0021914218086749315
    2. 'pos' → logprob: -6.127191543579102
    3. '.consume' → logprob: -12.752191543579102
    4. '.' → logprob: -13.877191543579102
    5. '.prev' → logprob: -14.377191543579102
    6. '	pos' → logprob: -14.752191543579102
    7. '.op' → logprob: -15.502191543579102
    8. '.position' → logprob: -15.627191543579102
    9. ' .' → logprob: -15.627191543579102
    10. ').' → logprob: -15.877191543579102

Token 1020: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6996710300445557
    2. ')")' → logprob: -1.0746710300445557
    3. ')")
' → logprob: -2.6996710300445557
    4. '}")' → logprob: -3.1996710300445557
    5. '       ' → logprob: -3.6996710300445557
    6. ')' → logprob: -4.199670791625977
    7. '           ' → logprob: -5.449670791625977
    8. ' )' → logprob: -5.574670791625977
    9. '-' → logprob: -6.574670791625977
    10. ' ")' → logprob: -6.699670791625977

Token 1021: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0162336565554142
    2. 'right' → logprob: -4.141233444213867
    3. '       ' → logprob: -9.266233444213867
    4. ' right' → logprob: -9.391233444213867
    5. 'rhs' → logprob: -12.266233444213867
    6. '   ' → logprob: -12.391233444213867
    7. '		' → logprob: -12.516233444213867
    8. '	right' → logprob: -13.641233444213867
    9. '               ' → logprob: -13.891233444213867
    10. '          ' → logprob: -13.891233444213867

Token 1022: ' right' (ID: 1849)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1023: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192955136299133
    2. ' =' → logprob: -1.501929521560669
    3. '=self' → logprob: -14.75192928314209
    4. '           ' → logprob: -17.376930236816406
    5. '       ' → logprob: -18.876930236816406
    6. ')' → logprob: -19.001930236816406
    7. '=line' → logprob: -19.751930236816406
    8. '＝' → logprob: -19.876930236816406
    9. '   ' → logprob: -20.001930236816406
    10. ' ' → logprob: -20.001930236816406

Token 1024: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040785204619169235
    2. ' self' → logprob: -5.504078388214111
    3. '           ' → logprob: -15.75407886505127
    4. '(self' → logprob: -18.129077911376953
    5. '               ' → logprob: -19.129077911376953
    6. '	self' → logprob: -19.504077911376953
    7. '   ' → logprob: -20.004077911376953
    8. ' ' → logprob: -20.129077911376953
    9. '[self' → logprob: -20.129077911376953
    10. '       ' → logprob: -20.629077911376953

Token 1025: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.004079828038811684
    2. '.parse' → logprob: -5.504079818725586
    3. ' parse' → logprob: -13.629079818725586
    4. '	parse' → logprob: -16.504079818725586
    5. '.' → logprob: -17.004079818725586
    6. '_parse' → logprob: -17.629079818725586
    7. 'consume' → logprob: -17.879079818725586
    8. '(parse' → logprob: -18.129079818725586
    9. '=parse' → logprob: -18.504079818725586
    10. '```' → logprob: -20.004079818725586

Token 1026: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -0.00021140782337170094
    2. 'formula' → logprob: -8.500211715698242
    3. 'Formula' → logprob: -11.750211715698242
    4. ' formula' → logprob: -17.250211715698242
    5. '_form' → logprob: -18.125211715698242
    6. '```' → logprob: -19.250211715698242
    7. '_factor' → logprob: -19.500211715698242
    8. '_expression' → logprob: -19.875211715698242
    9. ' Formula' → logprob: -20.625211715698242
    10. '_format' → logprob: -20.875211715698242

Token 1027: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03481380641460419
    2. ')' → logprob: -3.40981388092041
    3. 'self' → logprob: -7.15981388092041
    4. '       ' → logprob: -8.28481388092041
    5. ')
' → logprob: -10.28481388092041
    6. '		' → logprob: -10.78481388092041
    7. '   ' → logprob: -10.78481388092041
    8. '<|end|>' → logprob: -10.78481388092041
    9. '               ' → logprob: -11.78481388092041
    10. ' self' → logprob: -12.03481388092041

Token 1028: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4418923854827881
    2. '           ' → logprob: -1.441892385482788
    3. ')' → logprob: -2.191892385482788
    4. 'self' → logprob: -4.816892623901367
    5. ')
' → logprob: -8.316892623901367
    6. '   ' → logprob: -8.316892623901367
    7. ' self' → logprob: -9.816892623901367
    8. '<|end|>' → logprob: -9.941892623901367
    9. '               ' → logprob: -10.066892623901367
    10. '                   ' → logprob: -10.691892623901367

Token 1029: ' closing' (ID: 23436)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04335540533065796
    2. ')' → logprob: -3.5433554649353027
    3. '           ' → logprob: -4.418355464935303
    4. '       ' → logprob: -7.043355464935303
    5. ' self' → logprob: -8.418354988098145
    6. ')
' → logprob: -8.668354988098145
    7. 'c' → logprob: -9.168354988098145
    8. 'if' → logprob: -10.668354988098145
    9. ')c' → logprob: -10.668354988098145
    10. '               ' → logprob: -12.043354988098145

Token 1030: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2515852451324463
    2. '=' → logprob: -2.3765852451324463
    3. '')' → logprob: -2.5015852451324463
    4. ' =' → logprob: -4.001585006713867
    5. 'parent' → logprob: -5.126585006713867
    6. '('' → logprob: -5.126585006713867
    7. '(' → logprob: -5.501585006713867
    8. 'paren' → logprob: -5.626585006713867
    9. '_parent' → logprob: -5.751585006713867
    10. '   ' → logprob: -6.376585006713867

Token 1031: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001503313542343676
    2. ' self' → logprob: -6.5015034675598145
    3. ')' → logprob: -15.251502990722656
    4. '           ' → logprob: -15.376502990722656
    5. '(self' → logprob: -15.626502990722656
    6. '   ' → logprob: -16.501502990722656
    7. '')' → logprob: -16.751502990722656
    8. '	self' → logprob: -16.876502990722656
    9. '       ' → logprob: -18.001502990722656
    10. '[self' → logprob: -18.001502990722656

Token 1032: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.005234594456851482
    2. 'consume' → logprob: -5.255234718322754
    3. '.' → logprob: -14.505234718322754
    4. ' consume' → logprob: -16.130233764648438
    5. ').' → logprob: -17.005233764648438
    6. 'cons' → logprob: -17.630233764648438
    7. ' .' → logprob: -17.755233764648438
    8. '.cons' → logprob: -18.005233764648438
    9. '   ' → logprob: -18.130233764648438
    10. 'self' → logprob: -18.630233764648438

Token 1033: '()
' (ID: 1234)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16549280285835266
    2. '('' → logprob: -1.9154927730560303
    3. ')' → logprob: -5.665493011474609
    4. '")' → logprob: -6.540493011474609
    5. '(' → logprob: -8.66549301147461
    6. '   ' → logprob: -9.29049301147461
    7. '("' → logprob: -10.16549301147461
    8. ' ')'' → logprob: -11.29049301147461
    9. '`)' → logprob: -11.66549301147461
    10. '()' → logprob: -12.54049301147461

Token 1034: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5677694082260132
    2. ')' → logprob: -1.3177694082260132
    3. '')' → logprob: -1.8177694082260132
    4. '       ' → logprob: -6.067769527435303
    5. ' if' → logprob: -7.942769527435303
    6. 'if' → logprob: -9.567769050598145
    7. '<|end|>' → logprob: -9.692769050598145
    8. '   ' → logprob: -9.817769050598145
    9. '}' → logprob: -10.317769050598145
    10. '")' → logprob: -10.567769050598145

Token 1035: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5911703109741211
    2. ')' → logprob: -1.091170310974121
    3. '           ' → logprob: -2.466170310974121
    4. '')' → logprob: -3.966170310974121
    5. ' if' → logprob: -5.216170310974121
    6. '       ' → logprob: -7.216170310974121
    7. '")' → logprob: -8.466170310974121
    8. 'assert' → logprob: -8.966170310974121
    9. ')
' → logprob: -9.716170310974121
    10. 'return' → logprob: -11.216170310974121

Token 1036: ' closing' (ID: 23436)
  Prédit: 'closing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'closing' → logprob: -0.0009117019944824278
    2. ' closing' → logprob: -7.000911712646484
    3. '           ' → logprob: -16.125911712646484
    4. 'Closing' → logprob: -16.375911712646484
    5. '   ' → logprob: -17.750911712646484
    6. 'cl' → logprob: -18.375911712646484
    7. '       ' → logprob: -19.625911712646484
    8. '               ' → logprob: -20.125911712646484
    9. '```' → logprob: -20.375911712646484
    10. ' ' → logprob: -21.000911712646484

Token 1037: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5784122943878174
    2. ' !=' → logprob: -0.8284122943878174
    3. ')!=' → logprob: -6.703412055969238
    4. ')' → logprob: -7.078412055969238
    5. '!='' → logprob: -8.328412055969238
    6. '()!=' → logprob: -9.578412055969238
    7. '==' → logprob: -10.453412055969238
    8. ']!=' → logprob: -10.953412055969238
    9. '           ' → logprob: -11.203412055969238
    10. '!="' → logprob: -12.203412055969238

Token 1038: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0007161272224038839
    2. ')' → logprob: -7.250716209411621
    3. '")' → logprob: -12.125716209411621
    4. ' ')'' → logprob: -14.500716209411621
    5. ' ')' → logprob: -16.500715255737305
    6. ''' → logprob: -16.750715255737305
    7. ''):' → logprob: -17.250715255737305
    8. '')"' → logprob: -17.500715255737305
    9. '']' → logprob: -17.750715255737305
    10. ''){' → logprob: -18.125715255737305

Token 1039: '':
' (ID: 7669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6430020928382874
    2. '           ' → logprob: -1.5180020332336426
    3. ':
' → logprob: -1.6430020332336426
    4. '):
' → logprob: -3.2680020332336426
    5. '':
' → logprob: -4.768002033233643
    6. ''):
' → logprob: -5.393002033233643
    7. '               ' → logprob: -5.393002033233643
    8. ':' → logprob: -6.268002033233643
    9. '')' → logprob: -6.268002033233643
    10. '       ' → logprob: -6.643002033233643

Token 1040: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0403171181678772
    2. '               ' → logprob: -3.2903170585632324
    3. 'raise' → logprob: -6.290317058563232
    4. ' raise' → logprob: -7.915317058563232
    5. '	raise' → logprob: -10.54031753540039
    6. '       ' → logprob: -11.41531753540039
    7. '   ' → logprob: -11.79031753540039
    8. 'Raise' → logprob: -13.04031753540039
    9. '             ' → logprob: -13.79031753540039
    10. '                   ' → logprob: -14.04031753540039

Token 1041: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.015171872451901436
    2. ' raise' → logprob: -5.265172004699707
    3. '                   ' → logprob: -5.390172004699707
    4. '               ' → logprob: -5.765172004699707
    5. '           ' → logprob: -6.390172004699707
    6. '	raise' → logprob: -7.890172004699707
    7. 'Raise' → logprob: -9.640172004699707
    8. '                       ' → logprob: -10.640172004699707
    9. '   ' → logprob: -10.765172004699707
    10. 'Value' → logprob: -11.890172004699707

Token 1042: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -4.596781946020201e-05
    2. ' Value' → logprob: -10.000045776367188
    3. 'Syntax' → logprob: -15.375045776367188
    4. '	Value' → logprob: -15.750045776367188
    5. '(Value' → logprob: -17.250045776367188
    6. '_Value' → logprob: -17.500045776367188
    7. '.Value' → logprob: -17.875045776367188
    8. '_value' → logprob: -18.000045776367188
    9. '<Value' → logprob: -18.750045776367188
    10. 'value' → logprob: -19.375045776367188

Token 1043: 'Error' (ID: 2255)
  Prédit: 'alue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alue' → logprob: -0.4768803119659424
    2. 'Value' → logprob: -0.9768803119659424
    3. 'Error' → logprob: -6.226880073547363
    4. 'ue' → logprob: -7.476880073547363
    5. 'ALUE' → logprob: -8.976880073547363
    6. 'al' → logprob: -9.351880073547363
    7. 'l' → logprob: -10.601880073547363
    8. 'value' → logprob: -12.351880073547363
    9. '(Value' → logprob: -12.851880073547363
    10. 'rror' → logprob: -12.976880073547363

Token 1044: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0003107943630311638
    2. '(' → logprob: -8.500310897827148
    3. 'f' → logprob: -9.750310897827148
    4. '("' → logprob: -10.000310897827148
    5. '(
' → logprob: -12.750310897827148
    6. '(F' → logprob: -15.000310897827148
    7. ' f' → logprob: -15.875310897827148
    8. '           ' → logprob: -16.37531089782715
    9. 'F' → logprob: -17.50031089782715
    10. '(Expected' → logprob: -17.62531089782715

Token 1045: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14178411662578583
    2. 'Expected' → logprob: -2.141784191131592
    3. '")' → logprob: -5.391784191131592
    4. ' f' → logprob: -5.516784191131592
    5. 'Value' → logprob: -5.641784191131592
    6. '(f' → logprob: -6.891784191131592
    7. ')' → logprob: -7.016784191131592
    8. '"' → logprob: -7.766784191131592
    9. '           ' → logprob: -8.641783714294434
    10. ' Expected' → logprob: -10.516783714294434

Token 1046: 'Expected' (ID: 28041)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6688807010650635
    2. 'Expected' → logprob: -1.1688807010650635
    3. '")' → logprob: -1.7938807010650635
    4. '"' → logprob: -4.918880462646484
    5. ')' → logprob: -6.043880462646484
    6. 'Value' → logprob: -7.418880462646484
    7. '')' → logprob: -8.793880462646484
    8. 'expected' → logprob: -9.543880462646484
    9. 'Unexpected' → logprob: -9.918880462646484
    10. ' f' → logprob: -10.418880462646484

Token 1047: ' ')'' (ID: 198756)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -4.1080467781284824e-05
    2. ')' → logprob: -10.375041007995605
    3. ' ')'' → logprob: -12.375041007995605
    4. '")' → logprob: -12.500041007995605
    5. '')"' → logprob: -13.500041007995605
    6. '}')' → logprob: -15.750041007995605
    7. '`)' → logprob: -16.500041961669922
    8. '']' → logprob: -16.625041961669922
    9. ' ')' → logprob: -17.000041961669922
    10. '')
' → logprob: -17.000041961669922

Token 1048: ' but' (ID: 889)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.014278925023972988
    2. 'at' → logprob: -4.389278888702393
    3. ' but' → logprob: -6.389278888702393
    4. ')' → logprob: -10.01427936553955
    5. 'but' → logprob: -10.76427936553955
    6. '')' → logprob: -11.26427936553955
    7. ''' → logprob: -13.01427936553955
    8. ',' → logprob: -13.13927936553955
    9. '")' → logprob: -13.13927936553955
    10. ''at' → logprob: -14.13927936553955

Token 1049: ' got' (ID: 3508)
  Prédit: 'closing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'closing' → logprob: -0.11588698625564575
    2. ' closing' → logprob: -2.615886926651001
    3. 'found' → logprob: -4.24088716506958
    4. 'got' → logprob: -4.49088716506958
    5. ' got' → logprob: -5.24088716506958
    6. ' found' → logprob: -5.49088716506958
    7. 'closed' → logprob: -6.99088716506958
    8. 'received' → logprob: -8.615886688232422
    9. 'cl' → logprob: -9.615886688232422
    10. 'self' → logprob: -10.115886688232422

Token 1050: ' '{' (ID: 24918)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -0.008736534975469112
    2. '{' → logprob: -5.633736610412598
    3. ''' → logprob: -5.883736610412598
    4. ' '{' → logprob: -6.258736610412598
    5. 'closing' → logprob: -8.008736610412598
    6. '"{' → logprob: -9.883736610412598
    7. '"' → logprob: -11.633736610412598
    8. ''}' → logprob: -11.633736610412598
    9. '')' → logprob: -12.008736610412598
    10. ' closing' → logprob: -12.508736610412598

Token 1051: 'closing' (ID: 68850)
  Prédit: 'closing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'closing' → logprob: -1.3663626305060461e-05
    2. ' closing' → logprob: -11.25001335144043
    3. '{' → logprob: -15.00001335144043
    4. '}' → logprob: -16.00001335144043
    5. ')' → logprob: -16.50001335144043
    6. '')' → logprob: -17.00001335144043
    7. '```' → logprob: -17.12501335144043
    8. 'Closing' → logprob: -17.25001335144043
    9. '}}' → logprob: -17.37501335144043
    10. 'self' → logprob: -17.50001335144043

Token 1052: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3008366525173187
    2. ''")
' → logprob: -2.0508365631103516
    3. '}'' → logprob: -2.4258365631103516
    4. ''"' → logprob: -3.8008365631103516
    5. ')'' → logprob: -4.175836563110352
    6. '')' → logprob: -5.550836563110352
    7. ''''' → logprob: -8.175836563110352
    8. '')
' → logprob: -8.300836563110352
    9. '')"' → logprob: -8.300836563110352
    10. '"'' → logprob: -8.425836563110352

Token 1053: ' at' (ID: 540)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008229914121329784
    2. '")' → logprob: -5.258229732513428
    3. '')' → logprob: -6.883229732513428
    4. '           ' → logprob: -7.508229732513428
    5. '<|end|>' → logprob: -7.508229732513428
    6. ')
' → logprob: -7.758229732513428
    7. '       ' → logprob: -8.383230209350586
    8. '.' → logprob: -9.758230209350586
    9. ' )' → logprob: -9.758230209350586
    10. ')")' → logprob: -10.758230209350586

Token 1054: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.40200185775756836
    2. 'self' → logprob: -1.1520018577575684
    3. ''{' → logprob: -4.652001857757568
    4. ' self' → logprob: -6.152001857757568
    5. '{' → logprob: -6.527001857757568
    6. ''' → logprob: -6.777001857757568
    7. ' pos' → logprob: -7.527001857757568
    8. '')' → logprob: -10.277002334594727
    9. ' '{' → logprob: -10.527002334594727
    10. '}'' → logprob: -11.027002334594727

Token 1055: ' {' (ID: 354)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5898195505142212
    2. 'self' → logprob: -0.9648195505142212
    3. ' {' → logprob: -3.0898194313049316
    4. '{' → logprob: -3.9648194313049316
    5. '(self' → logprob: -11.08981990814209
    6. '[self' → logprob: -11.71481990814209
    7. ')' → logprob: -12.58981990814209
    8. 's' → logprob: -12.58981990814209
    9. '{s' → logprob: -13.71481990814209
    10. ' (' → logprob: -13.83981990814209

Token 1056: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.547789674485102e-05
    2. ' self' → logprob: -10.250035285949707
    3. '(self' → logprob: -19.000036239624023
    4. '[self' → logprob: -20.250036239624023
    5. '
' → logprob: -20.500036239624023
    6. '{' → logprob: -20.750036239624023
    7. '           ' → logprob: -21.625036239624023
    8. '	self' → logprob: -22.625036239624023
    9. ' ' → logprob: -22.750036239624023
    10. '       ' → logprob: -22.875036239624023

Token 1057: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -4.596781946020201e-05
    2. 'pos' → logprob: -10.000045776367188
    3. '.' → logprob: -14.875045776367188
    4. '.position' → logprob: -16.625045776367188
    5. 'Pos' → logprob: -17.625045776367188
    6. '	pos' → logprob: -17.875045776367188
    7. ' .' → logprob: -18.250045776367188
    8. '.Pos' → logprob: -18.375045776367188
    9. ').' → logprob: -19.250045776367188
    10. '.s' → logprob: -19.625045776367188

Token 1058: '}")
' (ID: 23577)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.6952081918716431
    2. '")' → logprob: -1.570208191871643
    3. '')' → logprob: -2.0702080726623535
    4. ')")
' → logprob: -2.1952080726623535
    5. '')")
' → logprob: -3.9452080726623535
    6. '}")' → logprob: -4.1952080726623535
    7. ''")
' → logprob: -4.4452080726623535
    8. '')"' → logprob: -6.0702080726623535
    9. '")
' → logprob: -6.5702080726623535
    10. ''' → logprob: -6.8202080726623535

Token 1059: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10451865196228027
    2. '       ' → logprob: -2.3545186519622803
    3. 'return' → logprob: -5.604518890380859
    4. ' return' → logprob: -7.979518890380859
    5. '   ' → logprob: -8.47951889038086
    6. '<|end|>' → logprob: -10.72951889038086
    7. '
' → logprob: -11.10451889038086
    8. '               ' → logprob: -11.60451889038086
    9. '          ' → logprob: -11.97951889038086
    10. '         ' → logprob: -12.85451889038086

Token 1060: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2503451704978943
    2. '           ' → logprob: -2.000345230102539
    3. '       ' → logprob: -2.500345230102539
    4. 'if' (adapté à ' if') → logprob: -5.625345230102539
    5. ' return' → logprob: -7.625345230102539
    6. ' if' → logprob: -11.250345230102539
    7. '   ' → logprob: -11.375345230102539
    8. '	return' → logprob: -13.250345230102539
    9. '
' → logprob: -13.875345230102539
    10. '               ' → logprob: -14.375345230102539

Token 1061: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.07889056205749512
    2. ' op' → logprob: -2.578890562057495
    3. '	op' → logprob: -14.953890800476074
    4. '(op' → logprob: -15.328890800476074
    5. '           ' → logprob: -15.453890800476074
    6. '
' → logprob: -17.953889846801758
    7. 'opf' → logprob: -18.328889846801758
    8. '_op' → logprob: -18.703889846801758
    9. '       ' → logprob: -18.703889846801758
    10. 'opcode' → logprob: -18.703889846801758

Token 1062: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1442309319972992
    2. '==' → logprob: -2.019230842590332
    3. '=='' → logprob: -6.519230842590332
    4. '=="' → logprob: -10.644230842590332
    5. ' =='' → logprob: -11.269230842590332
    6. '  ' → logprob: -11.394230842590332
    7. '[' → logprob: -11.769230842590332
    8. '=' → logprob: -11.769230842590332
    9. ' ' → logprob: -12.269230842590332
    10. '	' → logprob: -12.644230842590332

Token 1063: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -7.465036105713807e-06
    2. '"*' → logprob: -12.125007629394531
    3. ' '*'' → logprob: -13.875007629394531
    4. '('*' → logprob: -14.750007629394531
    5. ''' → logprob: -15.125007629394531
    6. ' '*' → logprob: -15.500007629394531
    7. '*' → logprob: -16.12500762939453
    8. ''>' → logprob: -17.62500762939453
    9. ''+' → logprob: -18.50000762939453
    10. ''s' → logprob: -18.75000762939453

Token 1064: '':
' (ID: 7669)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -1.186033010482788
    2. '):
' → logprob: -1.436033010482788
    3. ':
' → logprob: -2.311033010482788
    4. 'return' → logprob: -2.811033010482788
    5. '           ' → logprob: -2.936033010482788
    6. ')' → logprob: -3.186033010482788
    7. ':' → logprob: -3.311033010482788
    8. '':' → logprob: -3.436033010482788
    9. '):' → logprob: -3.561033010482788
    10. '':
' → logprob: -3.686033010482788

Token 1065: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0342273935675621
    2. '           ' → logprob: -3.5342273712158203
    3. '       ' → logprob: -6.15922737121582
    4. 'return' → logprob: -6.40922737121582
    5. ' return' → logprob: -7.40922737121582
    6. '<|end|>' → logprob: -10.15922737121582
    7. '                       ' → logprob: -10.90922737121582
    8. '{return' → logprob: -11.90922737121582
    9. '	       ' → logprob: -12.15922737121582
    10. '		       ' → logprob: -12.28422737121582

Token 1066: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012714238837361336
    2. ' return' → logprob: -7.1262712478637695
    3. '               ' → logprob: -8.25127124786377
    4. '           ' → logprob: -8.50127124786377
    5. '	return' → logprob: -14.00127124786377
    6. '{return' → logprob: -14.37627124786377
    7. ':return' → logprob: -14.62627124786377
    8. '   ' → logprob: -15.62627124786377
    9. '       ' → logprob: -15.62627124786377
    10. ')return' → logprob: -15.87627124786377

Token 1067: ' Con' (ID: 1532)
  Prédit: 'Con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Con' → logprob: -6.2729995988775045e-06
    2. ' Con' → logprob: -12.000006675720215
    3. 'Dis' → logprob: -21.1250057220459
    4. '   ' → logprob: -21.3750057220459
    5. '.Con' → logprob: -24.0000057220459
    6. 'Cong' → logprob: -24.0000057220459
    7. '_con' → logprob: -24.0000057220459
    8. '       ' → logprob: -24.5000057220459
    9. 'con' → logprob: -24.6250057220459
    10. 'Constr' → logprob: -25.2500057220459

Token 1068: 'junction' (ID: 140291)
  Prédit: 'junction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'junction' → logprob: -9.519893501419574e-05
    2. 'ju' → logprob: -9.87509536743164
    3. 'unction' → logprob: -10.75009536743164
    4. ' junction' → logprob: -11.37509536743164
    5. 'j' → logprob: -12.50009536743164
    6. 'jun' → logprob: -12.62509536743164
    7. ' Junction' → logprob: -13.50009536743164
    8. 'jection' → logprob: -14.00009536743164
    9. 'nection' → logprob: -15.37509536743164
    10. 'n' → logprob: -15.37509536743164

Token 1069: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.011811518110334873
    2. '(' → logprob: -4.76181173324585
    3. '(
' → logprob: -5.76181173324585
    4. '(right' → logprob: -10.011811256408691
    5. 'left' → logprob: -15.011811256408691
    6. '(

' → logprob: -15.136811256408691
    7. ' (' → logprob: -15.261811256408691
    8. '           ' → logprob: -15.386811256408691
    9. ',left' → logprob: -16.136812210083008
    10. '(self' → logprob: -16.136812210083008

Token 1070: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002852901816368103
    2. ',right' → logprob: -5.877852916717529
    3. ',left' → logprob: -10.627852439880371
    4. ' ,' → logprob: -11.002852439880371
    5. ',
' → logprob: -12.502852439880371
    6. ')' → logprob: -12.877852439880371
    7. ',b' → logprob: -14.627852439880371
    8. 'right' → logprob: -16.377853393554688
    9. '<|end|>' → logprob: -16.877853393554688
    10. '   ' → logprob: -17.252853393554688

Token 1071: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00020354038861114532
    2. ' right' → logprob: -8.500203132629395
    3. '	right' → logprob: -18.50020408630371
    4. '           ' → logprob: -19.00020408630371
    5. '[right' → logprob: -19.12520408630371
    6. 'Right' → logprob: -19.50020408630371
    7. '   ' → logprob: -19.62520408630371
    8. '(right' → logprob: -19.75020408630371
    9. '       ' → logprob: -20.00020408630371
    10. '               ' → logprob: -20.12520408630371

Token 1072: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39050716161727905
    2. ')' → logprob: -1.1405072212219238
    3. ')
' → logprob: -5.640507221221924
    4. '<|end|>' → logprob: -10.765506744384766
    5. ')return' → logprob: -11.140506744384766
    6. '       ' → logprob: -11.390506744384766
    7. ')\
' → logprob: -12.765506744384766
    8. ').' → logprob: -12.765506744384766
    9. '          ' → logprob: -12.890506744384766
    10. '<|end|>' → logprob: -12.890506744384766

Token 1073: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03590086102485657
    2. '           ' → logprob: -3.410900831222534
    3. 'return' → logprob: -6.410901069641113
    4. 'else' → logprob: -7.910901069641113
    5. '
' → logprob: -8.910901069641113
    6. '   ' → logprob: -10.410901069641113
    7. ' else' → logprob: -10.535901069641113
    8. ' return' → logprob: -10.660901069641113
    9. '```' → logprob: -12.410901069641113
    10. '[' → logprob: -12.785901069641113

Token 1074: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7188997864723206
    2. '       ' → logprob: -1.4688997268676758
    3. 'else' (adapté à ' else') → logprob: -1.4688997268676758
    4. '           ' → logprob: -2.968899726867676
    5. ' else' → logprob: -7.343899726867676
    6. ' return' → logprob: -8.843899726867676
    7. '
' → logprob: -9.093899726867676
    8. 'elif' → logprob: -9.718899726867676
    9. '   ' → logprob: -11.093899726867676
    10. '               ' → logprob: -12.343899726867676

Token 1075: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20909076929092407
    2. ':
' → logprob: -1.7090907096862793
    3. ':return' → logprob: -5.834090709686279
    4. ' :' → logprob: -5.959090709686279
    5. ' :
' → logprob: -6.834090709686279
    6. '           ' → logprob: -8.084091186523438
    7. ' return' → logprob: -8.584091186523438
    8. '               ' → logprob: -8.834091186523438
    9. 'return' → logprob: -8.959091186523438
    10. '          ' → logprob: -9.834091186523438

Token 1076: ' ' (ID: 220)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3269684910774231
    2. 'return' → logprob: -1.9519684314727783
    3. '           ' → logprob: -2.0769684314727783
    4. '               ' → logprob: -4.951968669891357
    5. '       ' → logprob: -5.451968669891357
    6. ' ' → logprob: -9.4519681930542
    7. 'Dis' → logprob: -10.7019681930542
    8. '          ' → logprob: -10.7019681930542
    9. '            ' → logprob: -10.8269681930542
    10. '   ' → logprob: -11.0769681930542

Token 1077: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00319304340519011
    2. ' return' → logprob: -6.128192901611328
    3. '               ' → logprob: -7.128192901611328
    4. '           ' → logprob: -8.628192901611328
    5. '       ' → logprob: -12.253192901611328
    6. '
' → logprob: -12.253192901611328
    7. ':return' → logprob: -12.503192901611328
    8. '              ' → logprob: -12.753192901611328
    9. '                   ' → logprob: -13.003192901611328
    10. '             ' → logprob: -13.128192901611328

Token 1078: ' op' (ID: 991)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010673471260815859
    2. ' return' → logprob: -7.251067161560059
    3. '           ' → logprob: -8.001067161560059
    4. '               ' → logprob: -10.876067161560059
    5. 'Dis' → logprob: -13.126067161560059
    6. '   ' → logprob: -14.126067161560059
    7. '       ' → logprob: -14.751067161560059
    8. '             ' → logprob: -16.126068115234375
    9. ':return' → logprob: -17.126068115234375
    10. '          ' → logprob: -17.751068115234375

Token 1079: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25199615955352783
    2. ' ==' → logprob: -1.5019961595535278
    3. '=' → logprob: -10.376996040344238
    4. '+' → logprob: -10.751996040344238
    5. '=='' → logprob: -11.751996040344238
    6. ')==' → logprob: -12.876996040344238
    7. '===' → logprob: -13.751996040344238
    8. '           ' → logprob: -14.251996040344238
    9. ''' → logprob: -14.751996040344238
    10. ']==' → logprob: -15.001996040344238

Token 1080: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25271010398864746
    2. ''+' → logprob: -1.5027101039886475
    3. '+' → logprob: -7.252710342407227
    4. ' '+'' → logprob: -10.002710342407227
    5. '"+"' → logprob: -11.002710342407227
    6. '')' → logprob: -12.627710342407227
    7. '('+' → logprob: -13.002710342407227
    8. '+'' → logprob: -13.252710342407227
    9. ''>' → logprob: -13.502710342407227
    10. '+)' → logprob: -14.752710342407227

Token 1081: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4578196108341217
    2. '           ' → logprob: -1.2078195810317993
    3. '               ' → logprob: -3.207819700241089
    4. ')
' → logprob: -4.95781946182251
    5. '):
' → logprob: -5.33281946182251
    6. ' return' → logprob: -5.70781946182251
    7. 'return' → logprob: -5.95781946182251
    8. '')' → logprob: -5.95781946182251
    9. '            ' → logprob: -6.08281946182251
    10. '             ' → logprob: -6.20781946182251

Token 1082: '               ' (ID: 506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.29916834831237793
    2. '           ' → logprob: -1.799168348312378
    3. '               ' → logprob: -3.174168348312378
    4. '       ' → logprob: -3.174168348312378
    5. ' return' → logprob: -4.674168586730957
    6. '   ' → logprob: -9.924168586730957
    7. ':return' → logprob: -10.674168586730957
    8. '	return' → logprob: -10.924168586730957
    9. '          ' → logprob: -11.924168586730957
    10. '{return' → logprob: -12.049168586730957

Token 1083: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00010485442908247933
    2. ' return' → logprob: -9.250104904174805
    3. '               ' → logprob: -12.125104904174805
    4. '           ' → logprob: -12.875104904174805
    5. '       ' → logprob: -14.500104904174805
    6. '   ' → logprob: -16.125104904174805
    7. '                   ' → logprob: -16.500104904174805
    8. '	return' → logprob: -17.500104904174805
    9. '
' → logprob: -18.250104904174805
    10. ':return' → logprob: -18.500104904174805

Token 1084: ' Dis' (ID: 3946)
  Prédit: 'Dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dis' → logprob: -3.7697225252486533e-06
    2. ' Dis' → logprob: -12.500003814697266
    3. '   ' → logprob: -21.375003814697266
    4. '       ' → logprob: -22.375003814697266
    5. 'dis' → logprob: -22.500003814697266
    6. '           ' → logprob: -23.625003814697266
    7. '_Dis' → logprob: -23.625003814697266
    8. '_dis' → logprob: -24.875003814697266
    9. 'DIS' → logprob: -25.875003814697266
    10. '.Dis' → logprob: -26.000003814697266

Token 1085: 'junction' (ID: 140291)
  Prédit: 'junction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'junction' → logprob: -5.371605948312208e-05
    2. 'ju' → logprob: -10.500053405761719
    3. 'unction' → logprob: -10.750053405761719
    4. 'jection' → logprob: -13.125053405761719
    5. 'jun' → logprob: -13.750053405761719
    6. ' junction' → logprob: -14.125053405761719
    7. 'j' → logprob: -14.625053405761719
    8. '(' → logprob: -16.50005340576172
    9. ' Junction' → logprob: -16.62505340576172
    10. 'J' → logprob: -17.12505340576172

Token 1086: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00015681622608099133
    2. '(right' → logprob: -9.25015640258789
    3. '(' → logprob: -10.00015640258789
    4. '(
' → logprob: -11.12515640258789
    5. '[left' → logprob: -15.00015640258789
    6. ' (' → logprob: -16.87515640258789
    7. 'left' → logprob: -17.25015640258789
    8. ',left' → logprob: -17.25015640258789
    9. '           ' → logprob: -18.00015640258789
    10. '(le' → logprob: -18.62515640258789

Token 1087: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0056451670825481415
    2. ',right' → logprob: -5.255645275115967
    3. '(right' → logprob: -8.130644798278809
    4. ')' → logprob: -9.630644798278809
    5. 'right' → logprob: -10.130644798278809
    6. ' ,' → logprob: -12.130644798278809
    7. '[right' → logprob: -12.505644798278809
    8. ' right' → logprob: -14.005644798278809
    9. '.right' → logprob: -14.255644798278809
    10. '           ' → logprob: -15.130644798278809

Token 1088: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0024756586644798517
    2. ' right' → logprob: -6.002475738525391
    3. '(right' → logprob: -18.50247573852539
    4. '	right' → logprob: -19.00247573852539
    5. '           ' → logprob: -19.25247573852539
    6. '[right' → logprob: -19.87747573852539
    7. '               ' → logprob: -20.00247573852539
    8. '.right' → logprob: -21.00247573852539
    9. 'Right' → logprob: -21.50247573852539
    10. ',right' → logprob: -22.12747573852539

Token 1089: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005115681560710073
    2. '<|end|>' → logprob: -7.750511646270752
    3. '       ' → logprob: -10.375511169433594
    4. ')
' → logprob: -10.375511169433594
    5. ')return' → logprob: -11.375511169433594
    6. '<|end|>' → logprob: -13.250511169433594
    7. '           ' → logprob: -13.750511169433594
    8. ' )' → logprob: -14.000511169433594
    9. ')}' → logprob: -14.125511169433594
    10. '')' → logprob: -14.500511169433594

Token 1090: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1091: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008965532295405865
    2. '<|end|>' → logprob: -5.258965492248535
    3. 'raise' (adapté à ' raise') → logprob: -6.383965492248535
    4. ' raise' → logprob: -7.383965492248535
    5. 'return' → logprob: -8.008965492248535
    6. '\' → logprob: -8.133965492248535
    7. '        ' → logprob: -8.883965492248535
    8. '        
' → logprob: -9.133965492248535
    9. '#' → logprob: -9.383965492248535
    10. '```' → logprob: -9.383965492248535

Token 1092: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -5.512236498361744e-07
    2. ' Value' → logprob: -15.500000953674316
    3. 'Syntax' → logprob: -15.500000953674316
    4. '_value' → logprob: -20.5
    5. 'value' → logprob: -20.75
    6. 'Runtime' → logprob: -21.625
    7. '_Value' → logprob: -21.75
    8. '(Value' → logprob: -21.875
    9. '.Value' → logprob: -23.5
    10. '	Value' → logprob: -23.75

Token 1093: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0003831252979580313
    2. 'rror' → logprob: -7.875382900238037
    3. 'alue' → logprob: -13.625383377075195
    4. 'LError' → logprob: -14.000383377075195
    5. 'error' → logprob: -15.000383377075195
    6. 'Value' → logprob: -15.125383377075195
    7. 'SError' → logprob: -15.750383377075195
    8. 'Token' → logprob: -16.500383377075195
    9. '_error' → logprob: -16.500383377075195
    10. 'Errors' → logprob: -17.375383377075195

Token 1094: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1025136187672615
    2. '(f' → logprob: -2.352513551712036
    3. '(' → logprob: -6.102513790130615
    4. '('' → logprob: -9.727513313293457
    5. 'f' → logprob: -12.852513313293457
    6. '(
' → logprob: -13.102513313293457
    7. '("'' → logprob: -13.602513313293457
    8. '(("' → logprob: -14.352513313293457
    9. '(F' → logprob: -15.602513313293457
    10. '("("' → logprob: -15.727513313293457

Token 1095: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10839629918336868
    2. 'Unexpected' → logprob: -2.608396291732788
    3. '(f' → logprob: -3.608396291732788
    4. ' f' → logprob: -6.733396530151367
    5. '"' → logprob: -7.483396530151367
    6. '("' → logprob: -8.858396530151367
    7. 'Invalid' → logprob: -9.733396530151367
    8. 'Syntax' → logprob: -11.983396530151367
    9. 'unexpected' → logprob: -12.233396530151367
    10. 'Expected' → logprob: -12.608396530151367

Token 1096: 'Unexpected' (ID: 59338)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.16038000583648682
    2. 'Unexpected' → logprob: -1.9103800058364868
    3. 'Invalid' → logprob: -9.410380363464355
    4. '"' → logprob: -9.660380363464355
    5. ' f' → logprob: -12.285380363464355
    6. 'Syntax' → logprob: -13.035380363464355
    7. 'EOF' → logprob: -13.410380363464355
    8. '(f' → logprob: -13.660380363464355
    9. 'Unknown' → logprob: -15.285380363464355
    10. 'Un' → logprob: -15.285380363464355

Token 1097: ' character' (ID: 5855)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15619823336601257
    2. 'c' → logprob: -2.656198263168335
    3. 'character' → logprob: -2.656198263168335
    4. 'f' → logprob: -6.156198024749756
    5. 'char' → logprob: -7.406198024749756
    6. ' character' → logprob: -7.406198024749756
    7. ' self' → logprob: -7.906198024749756
    8. 'Character' → logprob: -8.781198501586914
    9. 'token' → logprob: -8.906198501586914
    10. 'EOF' → logprob: -9.406198501586914

Token 1098: ' '{' (ID: 24918)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.24446949362754822
    2. 'self' → logprob: -1.9944695234298706
    3. '{' → logprob: -3.744469404220581
    4. '(self' → logprob: -3.869469404220581
    5. 'f' → logprob: -4.49446964263916
    6. ' self' → logprob: -4.99446964263916
    7. 'at' → logprob: -4.99446964263916
    8. 'c' → logprob: -5.11946964263916
    9. ' c' → logprob: -6.49446964263916
    10. ''{' → logprob: -6.74446964263916

Token 1099: 'c' (ID: 66)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1617816537618637
    2. 'c' → logprob: -1.911781668663025
    3. ' self' → logprob: -6.5367817878723145
    4. ' c' → logprob: -9.161781311035156
    5. '(self' → logprob: -14.411781311035156
    6. '
' → logprob: -15.036781311035156
    7. 's' → logprob: -15.161781311035156
    8. '   ' → logprob: -15.661781311035156
    9. '{' → logprob: -15.911781311035156
    10. ' ' → logprob: -16.036781311035156

Token 1100: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00884312205016613
    2. '}'' → logprob: -4.758842945098877
    3. ')'' → logprob: -9.133843421936035
    4. ''"' → logprob: -9.383843421936035
    5. '"'' → logprob: -11.008843421936035
    6. ' '' → logprob: -12.133843421936035
    7. ']'' → logprob: -12.383843421936035
    8. ''''' → logprob: -12.758843421936035
    9. ' at' → logprob: -13.008843421936035
    10. '')' → logprob: -13.508843421936035

Token 1101: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.008805068209767342
    2. 'at' → logprob: -4.883805274963379
    3. ')' → logprob: -6.758805274963379
    4. '<|end|>' → logprob: -11.133805274963379
    5. '.' → logprob: -12.133805274963379
    6. '	at' → logprob: -12.633805274963379
    7. ' ' → logprob: -12.758805274963379
    8. ' a' → logprob: -13.258805274963379
    9. '}' → logprob: -13.633805274963379
    10. ',' → logprob: -13.633805274963379

Token 1102: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007367022335529327
    2. 'pos' → logprob: -5.007367134094238
    3. ' self' → logprob: -7.382367134094238
    4. 'position' → logprob: -10.507367134094238
    5. ' pos' → logprob: -13.757367134094238
    6. ' position' → logprob: -14.757367134094238
    7. 'token' → logprob: -15.882367134094238
    8. '{' → logprob: -16.257366180419922
    9. '(self' → logprob: -16.507366180419922
    10. ')' → logprob: -17.007366180419922

Token 1103: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3946226239204407
    2. 'self' → logprob: -1.644622564315796
    3. ' self' → logprob: -2.144622564315796
    4. ' {' → logprob: -4.144622802734375
    5. '0' → logprob: -11.519622802734375
    6. '{s' → logprob: -13.019622802734375
    7. '{}' → logprob: -13.519622802734375
    8. ' ' → logprob: -13.894622802734375
    9. '(self' → logprob: -14.144622802734375
    10. '[self' → logprob: -14.644622802734375

Token 1104: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.630610641877865e-06
    2. ' self' → logprob: -12.000006675720215
    3. '{' → logprob: -14.875006675720215
    4. '0' → logprob: -17.3750057220459
    5. '
' → logprob: -17.5000057220459
    6. '[self' → logprob: -18.1250057220459
    7. '       ' → logprob: -19.0000057220459
    8. '(self' → logprob: -19.3750057220459
    9. '$self' → logprob: -19.7500057220459
    10. 'pos' → logprob: -20.2500057220459

Token 1105: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -5.264322317088954e-05
    2. 'pos' → logprob: -9.875052452087402
    3. '.position' → logprob: -14.125052452087402
    4. '.' → logprob: -15.500052452087402
    5. '	pos' → logprob: -15.875052452087402
    6. 'Pos' → logprob: -17.75005340576172
    7. '.Pos' → logprob: -17.87505340576172
    8. '[pos' → logprob: -18.12505340576172
    9. '.text' → logprob: -18.25005340576172
    10. '_pos' → logprob: -18.50005340576172

Token 1106: '}"' (ID: 21503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024442218244075775
    2. ')")' → logprob: -4.024442195892334
    3. '")' → logprob: -5.274442195892334
    4. '}")' → logprob: -7.024442195892334
    5. '}' → logprob: -8.649442672729492
    6. ')">' → logprob: -10.774442672729492
    7. ')"' → logprob: -11.149442672729492
    8. ')}' → logprob: -11.274442672729492
    9. ' )' → logprob: -11.399442672729492
    10. '       ' → logprob: -12.024442672729492

Token 1107: ')


' (ID: 7861)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1108: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1109: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2121884524822235
    2. 'main' → logprob: -2.462188482284546
    3. 'evaluate' → logprob: -3.462188482284546
    4. 'count' → logprob: -3.587188482284546
    5. ' count' → logprob: -3.837188482284546
    6. ' evaluate' → logprob: -4.087188243865967
    7. 'parse' → logprob: -5.587188243865967
    8. ' parse' → logprob: -5.587188243865967
    9. ' truth' → logprob: -7.712188243865967
    10. ' formula' → logprob: -8.837188720703125

Token 1110: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0017149277264252305
    2. '():
' → logprob: -6.376714706420898
    3. '()' → logprob: -11.626714706420898
    4. ' ():' → logprob: -12.751714706420898
    5. '():
' → logprob: -14.626714706420898
    6. '():

' → logprob: -15.876714706420898
    7. '()>' → logprob: -16.2517147064209
    8. 'def' → logprob: -17.3767147064209
    9. '();' → logprob: -17.5017147064209
    10. '(argv' → logprob: -17.6267147064209

Token 1111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019754672423005104
    2. 'text' → logprob: -4.894754886627197
    3. 'import' → logprob: -6.019754886627197
    4. 'formula' → logprob: -6.144754886627197
    5. ' formula' → logprob: -6.394754886627197
    6. '(' → logprob: -6.769754886627197
    7. ' import' → logprob: -6.894754886627197
    8. '```' → logprob: -7.019754886627197
    9. ' text' → logprob: -7.394754886627197
    10. 'f' → logprob: -7.644754886627197

Token 1112: ' import' (ID: 1588)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.36086341738700867
    2. 'import' (adapté à ' import') → logprob: -1.360863447189331
    3. 'formula' → logprob: -3.735863447189331
    4. '   ' → logprob: -4.985863208770752
    5. ' import' → logprob: -5.235863208770752
    6. 'expr' → logprob: -5.860863208770752
    7. 's' → logprob: -5.985863208770752
    8. 'line' → logprob: -6.610863208770752
    9. ' text' → logprob: -6.610863208770752
    10. ' formula' → logprob: -6.735863208770752

Token 1113: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.339278580620885e-06
    2. ' sys' → logprob: -13.000001907348633
    3. 'math' → logprob: -17.875001907348633
    4. '=sys' → logprob: -17.875001907348633
    5. 'io' → logprob: -20.000001907348633
    6. 'json' → logprob: -20.500001907348633
    7. 'random' → logprob: -20.875001907348633
    8. '(sys' → logprob: -20.875001907348633
    9. 'stdin' → logprob: -21.875001907348633
    10. '	sys' → logprob: -22.125001907348633

Token 1114: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05395347625017166
    2. 'input' → logprob: -3.9289534091949463
    3. '
' → logprob: -4.178953647613525
    4. 'line' → logprob: -4.928953647613525
    5. '    
' → logprob: -5.678953647613525
    6. ' line' → logprob: -5.678953647613525
    7. 'text' → logprob: -7.303953647613525
    8. ' lines' → logprob: -7.553953647613525
    9. ' input' → logprob: -7.803953647613525
    10. '```' → logprob: -7.928953647613525

Token 1115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071638235822319984
    2. ' lines' → logprob: -6.507164001464844
    3. 'input' → logprob: -6.757164001464844
    4. ' for' → logprob: -6.882164001464844
    5. ' input' → logprob: -7.507164001464844
    6. ' if' → logprob: -7.632164001464844
    7. ' code' → logprob: -7.632164001464844
    8. 'for' → logprob: -8.007164001464844
    9. ' line' → logprob: -8.007164001464844
    10. 'text' → logprob: -8.007164001464844

Token 1116: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7301855683326721
    2. 'line' → logprob: -1.4801855087280273
    3. '   ' → logprob: -1.7301855087280273
    4. 'text' → logprob: -2.6051855087280273
    5. 'input' → logprob: -4.355185508728027
    6. ' for' → logprob: -4.855185508728027
    7. 'if' → logprob: -5.230185508728027
    8. 'formula' → logprob: -5.230185508728027
    9. 'code' → logprob: -6.230185508728027
    10. 'lines' → logprob: -6.230185508728027

Token 1117: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.10020839422941208
    2. 'line' → logprob: -2.350208282470703
    3. '	line' → logprob: -13.850208282470703
    4. '=line' → logprob: -14.475208282470703
    5. '_line' → logprob: -16.100208282470703
    6. '#line' → logprob: -17.100208282470703
    7. '(line' → logprob: -17.100208282470703
    8. ' linea' → logprob: -17.225208282470703
    9. ' linha' → logprob: -17.850208282470703
    10. ' lijn' → logprob: -17.850208282470703

Token 1118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015087933279573917
    2. 'in' → logprob: -6.501508712768555
    3. '()' → logprob: -13.376508712768555
    4. ' ' → logprob: -14.001508712768555
    5. '   ' → logprob: -14.001508712768555
    6. 'import' → logprob: -14.126508712768555
    7. 'line' → logprob: -14.501508712768555
    8. '_in' → logprob: -15.001508712768555
    9. '[' → logprob: -15.251508712768555
    10. '():
' → logprob: -15.626508712768555

Token 1119: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.7729658540920354e-05
    2. ' sys' → logprob: -10.500027656555176
    3. '=sys' → logprob: -16.125028610229492
    4. '(sys' → logprob: -17.625028610229492
    5. '	sys' → logprob: -19.125028610229492
    6. 'stdin' → logprob: -20.125028610229492
    7. '```' → logprob: -21.875028610229492
    8. '   ' → logprob: -22.125028610229492
    9. 'import' → logprob: -22.625028610229492
    10. '
' → logprob: -23.625028610229492

Token 1120: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.006105354521423578
    2. 'stdin' → logprob: -5.256105422973633
    3. '.' → logprob: -8.131105422973633
    4. 'in' → logprob: -8.631105422973633
    5. '.readline' → logprob: -8.631105422973633
    6. '(stdin' → logprob: -9.131105422973633
    7. '.stdout' → logprob: -10.131105422973633
    8. ' stdin' → logprob: -10.506105422973633
    9. '   ' → logprob: -11.006105422973633
    10. 'import' → logprob: -11.881105422973633

Token 1121: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.06520137190818787
    2. ' in' → logprob: -3.4402012825012207
    3. '.' → logprob: -4.815201282501221
    4. ':' → logprob: -5.065201282501221
    5. '   ' → logprob: -5.315201282501221
    6. ':
' → logprob: -5.940201282501221
    7. '.readlines' → logprob: -6.190201282501221
    8. '():
' → logprob: -6.190201282501221
    9. '.rstrip' → logprob: -6.315201282501221
    10. '.strip' → logprob: -7.315201282501221

Token 1122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17074866592884064
    2. '   ' → logprob: -1.9207487106323242
    3. ' line' → logprob: -4.670748710632324
    4. '(line' → logprob: -8.045748710632324
    5. '```' → logprob: -8.920748710632324
    6. '    
' → logprob: -9.045748710632324
    7. '        
' → logprob: -9.420748710632324
    8. '	line' → logprob: -9.670748710632324
    9. '#line' → logprob: -9.670748710632324
    10. ':' → logprob: -9.670748710632324

Token 1123: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.013650591485202312
    2. 'formula' → logprob: -5.263650417327881
    3. 'expr' → logprob: -5.638650417327881
    4. ' line' → logprob: -5.638650417327881
    5. 'text' → logprob: -7.638650417327881
    6. '       ' → logprob: -8.138650894165039
    7. 's' → logprob: -8.638650894165039
    8. ' formula' → logprob: -9.513650894165039
    9. 'expression' → logprob: -9.513650894165039
    10. 'code' → logprob: -9.763650894165039

Token 1124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09199170023202896
    2. ' =' → logprob: -2.591991662979126
    3. '=line' → logprob: -4.341991901397705
    4. '_strip' → logprob: -13.216991424560547
    5. '.strip' → logprob: -13.341991424560547
    6. 'strip' → logprob: -13.716991424560547
    7. '=str' → logprob: -13.966991424560547
    8. 'rstrip' → logprob: -15.216991424560547
    9. '=
' → logprob: -15.841991424560547
    10. '.rstrip' → logprob: -16.216991424560547

Token 1125: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0007099286303855479
    2. ' line' → logprob: -7.2507100105285645
    3. '=line' → logprob: -19.750709533691406
    4. '#line' → logprob: -19.875709533691406
    5. '(line' → logprob: -20.875709533691406
    6. '	line' → logprob: -21.500709533691406
    7. 'Line' → logprob: -23.625709533691406
    8. '_line' → logprob: -23.625709533691406
    9. '[line' → logprob: -23.750709533691406
    10. '   ' → logprob: -24.500709533691406

Token 1126: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0020512896589934826
    2. '.rstrip' → logprob: -6.25205135345459
    3. 'strip' → logprob: -9.12705135345459
    4. '.' → logprob: -11.37705135345459
    5. 'rstrip' → logprob: -13.12705135345459
    6. '_strip' → logprob: -15.25205135345459
    7. '(strip' → logprob: -15.62705135345459
    8. ' .' → logprob: -15.75205135345459
    9. '().' → logprob: -17.252050399780273
    10. '.str' → logprob: -17.252050399780273

Token 1127: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022892709239386022
    2. '<|end|>' → logprob: -9.000228881835938
    3. '()' → logprob: -10.500228881835938
    4. '<|end|>' → logprob: -11.375228881835938
    5. 'if' → logprob: -11.500228881835938
    6. '        
' → logprob: -11.500228881835938
    7. ' if' → logprob: -11.875228881835938
    8. '()
' → logprob: -11.875228881835938
    9. '           ' → logprob: -12.250228881835938
    10. ':' → logprob: -12.500228881835938

Token 1128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02909475937485695
    2. 'if' → logprob: -3.654094696044922
    3. ' if' → logprob: -6.029094696044922
    4. '   ' → logprob: -7.904094696044922
    5. '<|end|>' → logprob: -11.779094696044922
    6. ' ' → logprob: -13.779094696044922
    7. '```' → logprob: -13.779094696044922
    8. '           ' → logprob: -14.029094696044922
    9. '	if' → logprob: -14.279094696044922
    10. ',' → logprob: -14.654094696044922

Token 1129: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.333223139634356e-05
    2. ' if' → logprob: -10.375033378601074
    3. '       ' → logprob: -13.125033378601074
    4. '   ' → logprob: -16.750032424926758
    5. '	if' → logprob: -17.000032424926758
    6. 'If' → logprob: -18.125032424926758
    7. '```' → logprob: -18.125032424926758
    8. '        
' → logprob: -18.875032424926758
    9. ';if' → logprob: -19.375032424926758
    10. '<|end|>' → logprob: -19.625032424926758

Token 1130: ' line' (ID: 2543)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47498831152915955
    2. ' not' → logprob: -0.9749883413314819
    3. 'line' → logprob: -7.3499884605407715
    4. ' line' → logprob: -8.224987983703613
    5. '#line' → logprob: -15.474987983703613
    6. '```' → logprob: -16.84998893737793
    7. '	not' → logprob: -17.22498893737793
    8. 'no' → logprob: -17.22498893737793
    9. '!' → logprob: -17.34998893737793
    10. '=line' → logprob: -17.34998893737793

Token 1131: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10026026517152786
    2. ' ==' → logprob: -2.3502602577209473
    3. '()==' → logprob: -10.725260734558105
    4. '=' → logprob: -11.850260734558105
    5. '=='' → logprob: -11.850260734558105
    6. '==
' → logprob: -11.975260734558105
    7. '=="' → logprob: -12.475260734558105
    8. ')==' → logprob: -12.850260734558105
    9. '===' → logprob: -12.975260734558105
    10. ']==' → logprob: -13.350260734558105

Token 1132: ' '.' (ID: 12662)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.012816987000405788
    2. ''' → logprob: -4.512816905975342
    3. '"' → logprob: -7.387816905975342
    4. '""' → logprob: -7.637816905975342
    5. '"":' → logprob: -7.762816905975342
    6. ''ex' → logprob: -8.3878173828125
    7. ''end' → logprob: -12.3878173828125
    8. ''t' → logprob: -13.2628173828125
    9. ''e' → logprob: -13.3878173828125
    10. '''
' → logprob: -13.5128173828125

Token 1133: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.818315327167511
    2. '':' → logprob: -0.943315327167511
    3. ''):
' → logprob: -2.068315267562866
    4. '\n' → logprob: -3.693315267562866
    5. ''):' → logprob: -4.818315505981445
    6. '.' → logprob: -5.568315505981445
    7. ':
' → logprob: -6.818315505981445
    8. '')' → logprob: -6.943315505981445
    9. ''' → logprob: -6.943315505981445
    10. '':
' → logprob: -7.318315505981445

Token 1134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07899388670921326
    2. '       ' → logprob: -2.578993797302246
    3. '	       ' → logprob: -10.578993797302246
    4. '		' → logprob: -10.953993797302246
    5. '               ' → logprob: -11.328993797302246
    6. 'break' → logprob: -11.578993797302246
    7. '   ' → logprob: -11.953993797302246
    8. '	   ' → logprob: -12.203993797302246
    9. '<|end|>' → logprob: -12.203993797302246
    10. '	break' → logprob: -12.328993797302246

Token 1135: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0015216453466564417
    2. '           ' → logprob: -7.001521587371826
    3. ' break' → logprob: -8.001522064208984
    4. '       ' → logprob: -8.501522064208984
    5. 'return' → logprob: -10.126522064208984
    6. '	break' → logprob: -10.376522064208984
    7. '_break' → logprob: -15.501522064208984
    8. '               ' → logprob: -15.626522064208984
    9. 'Break' → logprob: -17.126522064208984
    10. 'b' → logprob: -17.251522064208984

Token 1136: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002655079588294029
    2. '        
' → logprob: -9.250265121459961
    3. '<|end|>' → logprob: -9.500265121459961
    4. '   ' → logprob: -10.250265121459961
    5. 'try' → logprob: -10.500265121459961
    6. ' if' → logprob: -11.250265121459961
    7. 'if' → logprob: -12.125265121459961
    8. ' try' → logprob: -12.500265121459961
    9. '    
' → logprob: -13.500265121459961
    10. '           ' → logprob: -13.875265121459961

Token 1137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002198676229454577
    2. '   ' → logprob: -8.62522029876709
    3. 'try' → logprob: -11.25022029876709
    4. ' if' → logprob: -12.25022029876709
    5. '        
' → logprob: -12.25022029876709
    6. ' try' → logprob: -12.37522029876709
    7. 'formula' → logprob: -12.62522029876709
    8. ' formula' → logprob: -12.75022029876709
    9. 'if' → logprob: -13.62522029876709
    10. 'form' → logprob: -13.62522029876709

Token 1138: ' if' (ID: 538)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.18683506548404694
    2. 'formula' → logprob: -1.9368350505828857
    3. 'try' → logprob: -3.8118350505828857
    4. 'p' → logprob: -6.936835289001465
    5. 'f' → logprob: -6.936835289001465
    6. 'tree' → logprob: -7.061835289001465
    7. 'expr' → logprob: -7.436835289001465
    8. ' parser' → logprob: -8.061835289001465
    9. 'form' → logprob: -8.436835289001465
    10. 'root' → logprob: -9.561835289001465

Token 1139: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2007971853017807
    2. 'not' → logprob: -1.950797200202942
    3. 'line' → logprob: -3.4507970809936523
    4. ' line' → logprob: -4.825797080993652
    5. 'len' → logprob: -11.450797080993652
    6. ' len' → logprob: -12.200797080993652
    7. ' ' → logprob: -12.575797080993652
    8. '   ' → logprob: -14.700797080993652
    9. '#line' → logprob: -16.07579803466797
    10. '	not' → logprob: -16.20079803466797

Token 1140: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00861456897109747
    2. ' line' → logprob: -4.758614540100098
    3. '	line' → logprob: -17.633615493774414
    4. '#line' → logprob: -19.133615493774414
    5. '
' → logprob: -19.508615493774414
    6. 'Line' → logprob: -19.758615493774414
    7. '(line' → logprob: -20.008615493774414
    8. 'len' → logprob: -21.383615493774414
    9. ' ' → logprob: -21.383615493774414
    10. '   ' → logprob: -21.633615493774414

Token 1141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48349878191947937
    2. '.strip' → logprob: -1.6084988117218018
    3. ':
' → logprob: -2.3584988117218018
    4. '.' → logprob: -2.7334988117218018
    5. '.startswith' → logprob: -3.8584988117218018
    6. '):
' → logprob: -7.608498573303223
    7. ' or' → logprob: -7.983498573303223
    8. '<|end|>' → logprob: -7.983498573303223
    9. '       ' → logprob: -8.483498573303223
    10. '   ' → logprob: -8.608498573303223

Token 1142: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006187464576214552
    2. ' continue' → logprob: -5.381187438964844
    3. 'continue' → logprob: -6.506187438964844
    4. ' continues' → logprob: -10.506187438964844
    5. '       ' → logprob: -11.631187438964844
    6. ':' → logprob: -11.881187438964844
    7. '_continue' → logprob: -12.131187438964844
    8. ':
' → logprob: -12.256187438964844
    9. '	       ' → logprob: -12.631187438964844
    10. '		' → logprob: -12.756187438964844

Token 1143: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0026801754720509052
    2. ' continue' → logprob: -6.50268030166626
    3. '           ' → logprob: -6.75268030166626
    4. '       ' → logprob: -11.877679824829102
    5. '	continue' → logprob: -13.627679824829102
    6. '   ' → logprob: -14.502679824829102
    7. '_continue' → logprob: -15.502679824829102
    8. '               ' → logprob: -15.627679824829102
    9. 'contin' → logprob: -15.752679824829102
    10. '```' → logprob: -15.877679824829102

Token 1144: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.263011578586884e-05
    2. '        
' → logprob: -11.375042915344238
    3. '   ' → logprob: -11.625042915344238
    4. 'try' → logprob: -12.250042915344238
    5. ' formula' → logprob: -12.375042915344238
    6. ' try' → logprob: -12.375042915344238
    7. 'formula' → logprob: -12.750042915344238
    8. '```' → logprob: -13.375042915344238
    9. '<|end|>' → logprob: -14.125042915344238
    10. '           ' → logprob: -14.250042915344238

Token 1145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.874882430769503e-05
    2. ' formula' → logprob: -10.500079154968262
    3. 'formula' → logprob: -11.000079154968262
    4. '   ' → logprob: -11.250079154968262
    5. 'try' → logprob: -11.625079154968262
    6. ' try' → logprob: -11.750079154968262
    7. '        
' → logprob: -13.250079154968262
    8. 'form' → logprob: -13.875079154968262
    9. '```' → logprob: -14.375079154968262
    10. '           ' → logprob: -15.375079154968262

Token 1146: ' #' (ID: 1069)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.021643638610839844
    2. 'try' → logprob: -4.27164363861084
    3. ' parser' → logprob: -5.14664363861084
    4. 'formula' → logprob: -6.77164363861084
    5. 'p' → logprob: -8.02164363861084
    6. '       ' → logprob: -9.89664363861084
    7. '   ' → logprob: -9.89664363861084
    8. ' try' → logprob: -10.27164363861084
    9. 'expr' → logprob: -11.64664363861084
    10. ' formula' → logprob: -12.52164363861084

Token 1147: ' Parse' (ID: 26701)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.017981473356485367
    2. 'try' → logprob: -4.26798152923584
    3. 'formula' → logprob: -5.64298152923584
    4. 'p' → logprob: -8.89298152923584
    5. 'expr' → logprob: -10.14298152923584
    6. '   ' → logprob: -10.26798152923584
    7. ' parser' → logprob: -10.51798152923584
    8. '       ' → logprob: -11.14298152923584
    9. 'parsed' → logprob: -12.26798152923584
    10. 'tree' → logprob: -12.39298152923584

Token 1148: '
' (ID: 198)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.0007528089336119592
    2. 'f' → logprob: -8.000752449035645
    3. ' formula' → logprob: -8.750752449035645
    4. 'form' → logprob: -8.750752449035645
    5. 'parser' → logprob: -9.625752449035645
    6. '       ' → logprob: -11.125752449035645
    7. 'expr' → logprob: -11.375752449035645
    8. 'tree' → logprob: -12.250752449035645
    9. 'root' → logprob: -13.375752449035645
    10. '_formula' → logprob: -13.500752449035645

Token 1149: '       ' (ID: 309)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.013244936242699623
    2. 'f' → logprob: -5.013245105743408
    3. 'form' → logprob: -5.263245105743408
    4. '       ' → logprob: -7.763245105743408
    5. 'tree' → logprob: -7.888245105743408
    6. 'expr' → logprob: -8.13824462890625
    7. ' formula' → logprob: -8.88824462890625
    8. 'root' → logprob: -10.38824462890625
    9. 'parser' → logprob: -10.51324462890625
    10. 'expression' → logprob: -11.26324462890625

Token 1150: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.02990703657269478
    2. 'formula' → logprob: -3.529906988143921
    3. ' parser' → logprob: -9.6549072265625
    4. 'p' → logprob: -9.9049072265625
    5. 'expr' → logprob: -11.1549072265625
    6. 'try' → logprob: -11.7799072265625
    7. 'tree' → logprob: -12.0299072265625
    8. 'form' → logprob: -12.2799072265625
    9. 'parsed' → logprob: -12.5299072265625
    10. 'ast' → logprob: -13.1549072265625

Token 1151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474078506231308
    2. ' =' → logprob: -0.9740785360336304
    3. '=parse' → logprob: -14.474078178405762
    4. '=
' → logprob: -15.349078178405762
    5. '   ' → logprob: -15.724078178405762
    6. '=line' → logprob: -16.599079132080078
    7. '＝' → logprob: -16.724079132080078
    8. '(' → logprob: -16.849079132080078
    9. 'parser' → logprob: -16.974079132080078
    10. ')' → logprob: -17.099079132080078

Token 1152: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -7.941850526549388e-06
    2. ' Parser' → logprob: -11.750007629394531
    3. '(Parser' → logprob: -21.12500762939453
    4. '.Parser' → logprob: -21.87500762939453
    5. 'parser' → logprob: -22.25000762939453
    6. '_parser' → logprob: -24.00000762939453
    7. 'Parsed' → logprob: -24.37500762939453
    8. 'Parsing' → logprob: -24.50000762939453
    9. ' parser' → logprob: -25.87500762939453
    10. 'Parse' → logprob: -26.00000762939453

Token 1153: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0019450569525361061
    2. 'line' → logprob: -6.2519450187683105
    3. '[line' → logprob: -12.001945495605469
    4. ' line' → logprob: -12.001945495605469
    5. '=line' → logprob: -12.626945495605469
    6. '#line' → logprob: -14.626945495605469
    7. '(' → logprob: -15.376945495605469
    8. '(
' → logprob: -15.876945495605469
    9. ',line' → logprob: -16.87694549560547
    10. '	line' → logprob: -18.00194549560547

Token 1154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023526832461357117
    2. '       ' → logprob: -4.398526668548584
    3. ')
' → logprob: -4.523526668548584
    4. '   ' → logprob: -10.148527145385742
    5. '<|end|>' → logprob: -10.898527145385742
    6. ')
' → logprob: -11.148527145385742
    7. '<|end|>' → logprob: -12.148527145385742
    8. '(' → logprob: -12.523527145385742
    9. ').' → logprob: -12.898527145385742
    10. ')object' → logprob: -13.398527145385742

Token 1155: '       ' (ID: 309)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.2727121114730835
    2. '       ' → logprob: -1.5227121114730835
    3. 'form' → logprob: -4.772712230682373
    4. ' formula' → logprob: -5.147712230682373
    5. 'f' → logprob: -5.397712230682373
    6. 'expr' → logprob: -6.522712230682373
    7. ' f' → logprob: -8.772711753845215
    8. 'tree' → logprob: -10.147711753845215
    9. 'root' → logprob: -10.397711753845215
    10. 'expression' → logprob: -10.397711753845215

Token 1156: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' (adapté à ' formula') → logprob: -6.802049756515771e-05
    2. 'f' → logprob: -10.500067710876465
    3. 'expr' → logprob: -10.750067710876465
    4. 'form' → logprob: -11.250067710876465
    5. 'ast' → logprob: -12.875067710876465
    6. ' formula' → logprob: -13.625067710876465
    7. 'tree' → logprob: -13.750067710876465
    8. 'root' → logprob: -14.250067710876465
    9. 'try' → logprob: -15.500067710876465
    10. '_formula' → logprob: -16.37506866455078

Token 1157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868717551231384
    2. '=' → logprob: -1.1368718147277832
    3. '=form' → logprob: -14.886871337890625
    4. ' ' → logprob: -15.886871337890625
    5. ':' → logprob: -16.136871337890625
    6. '   ' → logprob: -16.886871337890625
    7. ')' → logprob: -17.011871337890625
    8. '.' → logprob: -17.136871337890625
    9. '=
' → logprob: -18.261871337890625
    10. '＝' → logprob: -18.386871337890625

Token 1158: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.0001238004770129919
    2. ' parser' → logprob: -9.000123977661133
    3. '(parser' → logprob: -15.375123977661133
    4. 'formula' → logprob: -16.000123977661133
    5. '	parser' → logprob: -17.125123977661133
    6. '.parser' → logprob: -17.875123977661133
    7. 'parsed' → logprob: -19.625123977661133
    8. 'parse' → logprob: -20.750123977661133
    9. 'Parser' → logprob: -20.750123977661133
    10. '/parser' → logprob: -20.875123977661133

Token 1159: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -2.4987974029500037e-05
    2. 'parse' → logprob: -10.750024795532227
    3. '=parse' → logprob: -13.125024795532227
    4. '.' → logprob: -13.500024795532227
    5. ' =' → logprob: -17.500024795532227
    6. '_parse' → logprob: -17.875024795532227
    7. '	parse' → logprob: -18.250024795532227
    8. '=' → logprob: -18.875024795532227
    9. '.Parse' → logprob: -19.125024795532227
    10. '.evaluate' → logprob: -19.375024795532227

Token 1160: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -7.743758760625497e-05
    2. 'formula' → logprob: -9.500077247619629
    3. 'Formula' → logprob: -12.875077247619629
    4. '_form' → logprob: -17.125078201293945
    5. ' formula' → logprob: -17.750078201293945
    6. '_format' → logprob: -19.375078201293945
    7. '_' → logprob: -19.500078201293945
    8. '_expression' → logprob: -20.375078201293945
    9. '__' → logprob: -20.875078201293945
    10. '```' → logprob: -20.875078201293945

Token 1161: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051238905638456345
    2. '
' → logprob: -3.051239013671875
    3. '<|end|>' → logprob: -6.176239013671875
    4. '        
' → logprob: -7.926239013671875
    5. ',' → logprob: -10.551239013671875
    6. '  
' → logprob: -10.676239013671875
    7. '   ' → logprob: -10.676239013671875
    8. ')' → logprob: -10.801239013671875
    9. 'print' → logprob: -10.926239013671875
    10. ')
' → logprob: -11.301239013671875

Token 1162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019821643363684416
    2. 'print' → logprob: -6.62698221206665
    3. '   ' → logprob: -7.75198221206665
    4. 'count' → logprob: -9.251981735229492
    5. '```' → logprob: -9.501981735229492
    6. 'result' → logprob: -10.626981735229492
    7. ' print' → logprob: -11.501981735229492
    8. '        
' → logprob: -12.251981735229492
    9. 'counter' → logprob: -12.376981735229492
    10. '``' → logprob: -12.751981735229492

Token 1163: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08023369312286377
    2. 'count' → logprob: -2.830233573913574
    3. 'result' → logprob: -4.205233573913574
    4. '       ' → logprob: -5.830233573913574
    5. 'true' → logprob: -8.830233573913574
    6. 'counter' → logprob: -9.955233573913574
    7. 'cnt' → logprob: -11.205233573913574
    8. ' print' → logprob: -11.330233573913574
    9. 'value' → logprob: -12.455233573913574
    10. 'truth' → logprob: -12.580233573913574

Token 1164: ' Count' (ID: 6789)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016656972467899323
    2. 'count' → logprob: -4.266656875610352
    3. 'result' → logprob: -6.016656875610352
    4. 'counter' → logprob: -10.391656875610352
    5. '   ' → logprob: -11.516656875610352
    6. 'cnt' → logprob: -12.891656875610352
    7. 'value' → logprob: -13.391656875610352
    8. ' print' → logprob: -13.516656875610352
    9. 'true' → logprob: -13.516656875610352
    10. '       ' → logprob: -13.516656875610352

Token 1165: ' triples' (ID: 189700)
  Prédit: 'true'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'true' → logprob: -0.5967710614204407
    2. 'print' → logprob: -0.8467710614204407
    3. 'result' → logprob: -4.596771240234375
    4. '       ' → logprob: -5.221771240234375
    5. 'count' → logprob: -5.846771240234375
    6. 'truth' → logprob: -6.596771240234375
    7. '_true' → logprob: -7.596771240234375
    8. 'True' → logprob: -9.471771240234375
    9. 'value' → logprob: -9.846771240234375
    10. ' print' → logprob: -9.971771240234375

Token 1166: ' making' (ID: 4137)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.517520010471344
    2. '       ' → logprob: -1.0175199508666992
    3. '=' → logprob: -3.517519950866699
    4. 'print' → logprob: -5.267519950866699
    5. '<|end|>' → logprob: -6.892519950866699
    6. ':' → logprob: -7.017519950866699
    7. '(' → logprob: -7.017519950866699
    8. 'result' → logprob: -7.142519950866699
    9. ',' → logprob: -7.517519950866699
    10. ')' → logprob: -7.892519950866699

Token 1167: ' the' (ID: 290)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.0031184181571006775
    2. 'the' → logprob: -6.628118515014648
    3. 'True' → logprob: -6.878118515014648
    4. ' formula' → logprob: -7.878118515014648
    5. 'truth' → logprob: -8.378118515014648
    6. 'Truth' → logprob: -9.128118515014648
    7. 'form' → logprob: -11.128118515014648
    8. 'true' → logprob: -11.878118515014648
    9. 'value' → logprob: -12.003118515014648
    10. '_truth' → logprob: -12.878118515014648

Token 1168: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -3.1782583391759545e-05
    2. ' formula' → logprob: -10.625031471252441
    3. 'form' → logprob: -11.875031471252441
    4. 'truth' → logprob: -15.375031471252441
    5. '_formula' → logprob: -16.000032424926758
    6. 'value' → logprob: -17.250032424926758
    7. 'Formula' → logprob: -18.125032424926758
    8. 'true' → logprob: -18.500032424926758
    9. 'expression' → logprob: -18.750032424926758
    10. 'True' → logprob: -18.875032424926758

Token 1169: ' true' (ID: 1343)
  Prédit: 'true'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'true' → logprob: -0.36682114005088806
    2. 'True' → logprob: -1.3668211698532104
    3. ' true' → logprob: -3.116821050643921
    4. '_true' → logprob: -5.3668212890625
    5. ' True' → logprob: -5.8668212890625
    6. 'TRUE' → logprob: -8.3668212890625
    7. '.true' → logprob: -10.4918212890625
    8. '       ' → logprob: -10.7418212890625
    9. '```' → logprob: -11.2418212890625
    10. '_TRUE' → logprob: -11.4918212890625

Token 1170: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07175729423761368
    2. 'print' → logprob: -2.6967573165893555
    3. 'count' → logprob: -6.9467573165893555
    4. 'result' → logprob: -7.3217573165893555
    5. '```' → logprob: -9.071757316589355
    6. ' print' → logprob: -10.821757316589355
    7. '
' → logprob: -11.071757316589355
    8. '        
' → logprob: -11.821757316589355
    9. 'counter' → logprob: -11.946757316589355
    10. '   ' → logprob: -12.071757316589355

Token 1171: 'value' (ID: 1594)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3155798017978668
    2. 'formula' → logprob: -1.4405797719955444
    3. ')
' → logprob: -4.190579891204834
    4. '       ' → logprob: -4.440579891204834
    5. 'print' → logprob: -5.065579891204834
    6. ' formula' → logprob: -8.690579414367676
    7. 'True' → logprob: -9.690579414367676
    8. ')
' → logprob: -9.815579414367676
    9. 'form' → logprob: -9.815579414367676
    10. '')' → logprob: -10.440579414367676

Token 1172: ' ' (ID: 220)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4759156107902527
    2. ' ==' → logprob: -0.9759156107902527
    3. '()==' → logprob: -6.350915431976318
    4. '()' → logprob: -10.725915908813477
    5. '=' → logprob: -10.850915908813477
    6. '==
' → logprob: -11.225915908813477
    7. ')==' → logprob: -11.475915908813477
    8. ' ==
' → logprob: -11.600915908813477
    9. ')' → logprob: -11.850915908813477
    10. '```' → logprob: -12.350915908813477

Token 1173: '2' (ID: 17)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5883516669273376
    2. 'Truth' → logprob: -0.8383516669273376
    3. '2' → logprob: -4.963351726531982
    4. ' Truth' → logprob: -5.713351726531982
    5. '=' → logprob: -6.588351726531982
    6. ' ==' → logprob: -7.463351726531982
    7. 'True' → logprob: -10.338351249694824
    8. '3' → logprob: -11.213351249694824
    9. '_truth' → logprob: -11.588351249694824
    10. '   ' → logprob: -11.963351249694824

Token 1174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1532329022884369
    2. ')
' → logprob: -2.5282328128814697
    3. '       ' → logprob: -2.7782328128814697
    4. '):
' → logprob: -9.90323257446289
    5. '   ' → logprob: -10.90323257446289
    6. ')

' → logprob: -11.52823257446289
    7. ',' → logprob: -11.52823257446289
    8. '):' → logprob: -12.15323257446289
    9. ')
' → logprob: -12.40323257446289
    10. ').' → logprob: -12.40323257446289

Token 1175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026383911608718336
    2. 'print' → logprob: -8.375264167785645
    3. '   ' → logprob: -11.125264167785645
    4. '```' → logprob: -11.875264167785645
    5. '<|end|>' → logprob: -12.500264167785645
    6. '
' → logprob: -12.625264167785645
    7. ' print' → logprob: -13.125264167785645
    8. '        
' → logprob: -13.875264167785645
    9. '           ' → logprob: -14.875264167785645
    10. '`' → logprob: -15.375264167785645

Token 1176: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.27223071455955505
    2. 'count' → logprob: -1.5222307443618774
    3. 'result' → logprob: -4.022230625152588
    4. 'counter' → logprob: -6.647230625152588
    5. '       ' → logprob: -7.397230625152588
    6. ' print' → logprob: -8.397231101989746
    7. ' count' → logprob: -10.647231101989746
    8. ' result' → logprob: -11.897231101989746
    9. 'cnt' → logprob: -12.522231101989746
    10. '```' → logprob: -12.522231101989746

Token 1177: '(form' (ID: 33445)
  Prédit: '(form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -0.00026622318546287715
    2. 'formula' → logprob: -8.250266075134277
    3. 'form' → logprob: -12.875266075134277
    4. '(' → logprob: -13.250266075134277
    5. '(f' → logprob: -14.875266075134277
    6. '=form' → logprob: -15.500266075134277
    7. ' formula' → logprob: -16.375267028808594
    8. '$form' → logprob: -17.125267028808594
    9. '_formula' → logprob: -18.375267028808594
    10. '((' → logprob: -18.875267028808594

Token 1178: 'ula' (ID: 3419)
  Prédit: 'ula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -0.0005262265913188457
    2. '(form' → logprob: -7.625526428222656
    3. 'at' → logprob: -10.625526428222656
    4. 'ala' → logprob: -12.625526428222656
    5. 'a' → logprob: -12.875526428222656
    6. '(' → logprob: -13.250526428222656
    7. 'la' → logprob: -13.375526428222656
    8. 'ata' → logprob: -13.625526428222656
    9. 'formula' → logprob: -13.625526428222656
    10. 'al' → logprob: -14.125526428222656

Token 1179: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.002237566513940692
    2. '.' → logprob: -6.127237796783447
    3. ').' → logprob: -10.002237319946289
    4. ' .' → logprob: -13.377237319946289
    5. '   ' → logprob: -13.627237319946289
    6. '.Count' → logprob: -14.002237319946289
    7. ')' → logprob: -14.252237319946289
    8. '.counter' → logprob: -15.002237319946289
    9. '.calculate' → logprob: -15.127237319946289
    10. '.
' → logprob: -15.377237319946289

Token 1180: '_true' (ID: 37108)
  Prédit: '_true'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_true' → logprob: -1.4378848391061183e-05
    2. 'True' → logprob: -11.375014305114746
    3. 'true' → logprob: -13.125014305114746
    4. '_TRUE' → logprob: -14.625014305114746
    5. ')_' → logprob: -15.750014305114746
    6. '_' → logprob: -16.250015258789062
    7. ')' → logprob: -17.625015258789062
    8. '(True' → logprob: -18.000015258789062
    9. '```' → logprob: -18.250015258789062
    10. ' True' → logprob: -19.125015258789062

Token 1181: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01817944087088108
    2. '()' → logprob: -4.018179416656494
    3. ')' → logprob: -10.518179893493652
    4. '())
' → logprob: -13.643179893493652
    5. ' ())' → logprob: -14.018179893493652
    6. '(' → logprob: -15.518179893493652
    7. '(),' → logprob: -15.893179893493652
    8. '()
' → logprob: -16.268178939819336
    9. '()))' → logprob: -17.018178939819336
    10. '();)' → logprob: -17.393178939819336

Token 1182: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1183: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001454955490771681
    2. ' __' → logprob: -8.87514591217041
    3. 'name' → logprob: -12.25014591217041
    4. '_name' → logprob: -14.37514591217041
    5. '_' → logprob: -16.000144958496094
    6. '___' → logprob: -16.250144958496094
    7. '```' → logprob: -17.250144958496094
    8. '#__' → logprob: -17.625144958496094
    9. '/__' → logprob: -18.250144958496094
    10. 'True' → logprob: -18.750144958496094

Token 1184: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03009583055973053
    2. '==' → logprob: -3.9050958156585693
    3. ' ==' → logprob: -5.155096054077148
    4. '=="' → logprob: -5.780096054077148
    5. '=='' → logprob: -7.530096054077148
    6. 'name' → logprob: -10.905096054077148
    7. '```' → logprob: -11.030096054077148
    8. ' __' → logprob: -11.280096054077148
    9. '==
' → logprob: -11.280096054077148
    10. 'if' → logprob: -11.530096054077148

Token 1185: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0017959660617634654
    2. '==' → logprob: -6.376795768737793
    3. ' ==' → logprob: -10.376795768737793
    4. '=="' → logprob: -10.376795768737793
    5. '__.__' → logprob: -11.251795768737793
    6. '=='' → logprob: -11.376795768737793
    7. '___' → logprob: -13.626795768737793
    8. '__[' → logprob: -13.751795768737793
    9. '__('' → logprob: -14.001795768737793
    10. '```' → logprob: -14.001795768737793

Token 1186: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3639299273490906
    2. ' ==' → logprob: -1.2389299869537354
    3. '=="' → logprob: -4.613929748535156
    4. '__' → logprob: -5.738929748535156
    5. '=='' → logprob: -6.113929748535156
    6. '===' → logprob: -11.988929748535156
    7. '==
' → logprob: -12.238929748535156
    8. '=' → logprob: -12.613929748535156
    9. '[' → logprob: -13.738929748535156
    10. ' =="' → logprob: -13.863929748535156

Token 1187: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10021842271089554
    2. ''' → logprob: -2.3502185344696045
    3. '__' → logprob: -11.850218772888184
    4. ' "__' → logprob: -12.475218772888184
    5. ' '__' → logprob: -14.475218772888184
    6. '   ' → logprob: -16.350217819213867
    7. ''"' → logprob: -16.475217819213867
    8. '("__' → logprob: -17.600217819213867
    9. '"user' → logprob: -17.600217819213867
    10. '('__' → logprob: -17.725217819213867

Token 1188: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014177493751049042
    2. '__' → logprob: -4.264177322387695
    3. 'name' → logprob: -11.389177322387695
    4. ''' → logprob: -13.764177322387695
    5. '_main' → logprob: -13.764177322387695
    6. ' main' → logprob: -15.264177322387695
    7. '"' → logprob: -15.514177322387695
    8. '-main' → logprob: -17.389177322387695
    9. '___' → logprob: -18.514177322387695
    10. 'm' → logprob: -18.639177322387695

Token 1189: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6439188718795776
    2. '__':
' → logprob: -0.7689188718795776
    3. '__":
' → logprob: -4.893918991088867
    4. ':' → logprob: -6.268918991088867
    5. '__:' → logprob: -6.643918991088867
    6. '_' → logprob: -8.268918991088867
    7. '__
' → logprob: -9.143918991088867
    8. ':
' → logprob: -10.393918991088867
    9. '__
' → logprob: -10.768918991088867
    10. '():
' → logprob: -11.018918991088867

Token 1190: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00013738969573751092
    2. ' main' → logprob: -9.125137329101562
    3. '   ' → logprob: -11.125137329101562
    4. '	main' → logprob: -11.250137329101562
    5. '_main' → logprob: -15.250137329101562
    6. '__' → logprob: -15.375137329101562
    7. '(main' → logprob: -15.500137329101562
    8. '```' → logprob: -17.625137329101562
    9. '
' → logprob: -17.875137329101562
    10. '    
' → logprob: -18.125137329101562

Token 1191: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.75
    3. '	main' → logprob: -22.5
    4. 'import' → logprob: -23.0
    5. '   ' → logprob: -24.5
    6. '(main' → logprob: -25.25
    7. '
' → logprob: -26.375
    8. '.main' → logprob: -26.5
    9. '_main' → logprob: -26.625
    10. '__' → logprob: -28.125

Token 1192: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1190
Tokens correctement prédits (1ère position, stricte): 477
Tokens correctement prédits (1ère position, avec adaptation): 548
Tokens correctement prédits (top 10): 981
Précision stricte (1ère position): 40.08%
Précision adaptée (1ère position): 46.05%
Précision (top 10): 82.44%
================================================================================
