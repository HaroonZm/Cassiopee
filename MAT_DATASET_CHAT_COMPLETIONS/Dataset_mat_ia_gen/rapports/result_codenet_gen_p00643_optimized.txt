================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input = sys.stdin.readline

# Dice faces ordering: [top, bottom, north, south, west, east]
# sum of opposite faces =7: top(1)-bottom(6), north(5)-south(2), west(4)-east(3)
# initial: top=1, south=2, east=3 => north=5, bottom=6, west=4
# Rolling updates faces according to direction

def roll(dice, direction):
    top, bottom, north, south, west, east = dice
    if direction == 0:  # north
        return (south, north, top, bottom, west, east)
    elif direction == 1:  # south
        return (north, south, bottom, top, west, east)
    elif direction == 2:  # west
        return (east, west, north, south, top, bottom)
    else:  # east
        return (west, east, north, south, bottom, top)

while True:
    h, w = map(int, input().split())
    if h == 0 and w == 0:
        break

    grid = [list(map(int, input().split())) for _ in range(h)]
    sy, sx = map(int, input().split())
    gy, gx = map(int, input().split())

    # Distances: 3D (y,x,dice_state)
    # dice_state can be represented by the 6 faces values, but to reduce memory,
    # we assign an index to each dice orientation; since dice orientation is huge,
    # we store dice faces to detect visited states.

    # To reduce state space, we store dice faces as a tuple of 6 numbers.

    # initial dice faces
    dice0 = (1,6,5,2,4,3)

    dist = {}
    # heap elements: (cost, y, x, dice_faces)
    heap = []
    heapq.heappush(heap, (0, sy, sx, dice0))
    dist[(sy, sx, dice0)] = 0

    dy = [-1,1,0,0]
    dx = [0,0,-1,1]

    res = -1
    while heap:
        cost, y, x, dice = heapq.heappop(heap)
        if (y, x) == (gy, gx):
            res = cost
            break
        if dist[(y, x, dice)] < cost:
            continue
        for d in range(4):
            ny, nx = y + dy[d], x + dx[d]
            if 0 <= ny < h and 0 <= nx < w:
                ndice = roll(dice, d)
                bottom = ndice[1]
                ncost = cost + bottom * grid[ny][nx]
                state = (ny, nx, ndice)
                if state not in dist or dist[state] > ncost:
                    dist[state] = ncost
                    heapq.heappush(heap, (ncost, ny, nx, ndice))
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8444881536415778e-05
    2. '.' → logprob: -10.750028610229492
    3. '#' → logprob: -13.875028610229492
    4. '_' → logprob: -14.000028610229492
    5. 'ify' → logprob: -14.500028610229492
    6. 'space' → logprob: -14.500028610229492
    7. 's' → logprob: -14.750028610229492
    8. ')' → logprob: -14.875028610229492
    9. '

' → logprob: -15.000028610229492
    10. 'queue' → logprob: -15.000028610229492

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2145320177078247
    2. '
' → logprob: -2.464531898498535
    3. '\n' → logprob: -3.214531898498535
    4. '\' → logprob: -3.714531898498535
    5. '<|end|>' → logprob: -4.589531898498535
    6. '.
' → logprob: -4.964531898498535
    7. '

' → logprob: -4.964531898498535
    8. 'import' → logprob: -5.339531898498535
    9. '' → logprob: -5.464531898498535
    10. '```' → logprob: -5.714531898498535

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11484295129776001
    2. '
' → logprob: -3.4898428916931152
    3. '.
' → logprob: -3.6148428916931152
    4. '\' → logprob: -3.9898428916931152
    5. '\n' → logprob: -4.489842891693115
    6. 'def' → logprob: -4.614842891693115
    7. '```' → logprob: -5.989842891693115
    8. '' → logprob: -6.364842891693115
    9. 'import' → logprob: -6.489842891693115
    10. ',' → logprob: -6.739842891693115

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038364943116903305
    2. '.' → logprob: -3.288364887237549
    3. ')' → logprob: -8.913365364074707
    4. '```' → logprob: -10.163365364074707
    5. '(.)' → logprob: -10.788365364074707
    6. '=' → logprob: -10.788365364074707
    7. '[' → logprob: -11.163365364074707
    8. '()' → logprob: -11.163365364074707
    9. ''' → logprob: -11.413365364074707
    10. '(
' → logprob: -11.538365364074707

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7084513306617737
    2. 'sys' → logprob: -0.7084513306617737
    3. 'input' → logprob: -4.333451271057129
    4. ' input' → logprob: -6.208451271057129
    5. '	sys' → logprob: -10.833451271057129
    6. 'lambda' → logprob: -11.208451271057129
    7. '=sys' → logprob: -11.458451271057129
    8. ' lambda' → logprob: -12.208451271057129
    9. '(sys' → logprob: -13.333451271057129
    10. ' ' → logprob: -14.333451271057129

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.18179261684417725
    2. '.' → logprob: -1.8067926168441772
    3. '.stdout' → logprob: -7.056792736053467
    4. '.readline' → logprob: -8.181792259216309
    5. '.input' → logprob: -8.431792259216309
    6. ' .' → logprob: -8.431792259216309
    7. '.argv' → logprob: -8.806792259216309
    8. '.path' → logprob: -9.181792259216309
    9. '.std' → logprob: -9.806792259216309
    10. '.import' → logprob: -9.931792259216309

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005874514114111662
    2. '.read' → logprob: -5.2558746337890625
    3. '.' → logprob: -7.5058746337890625
    4. 'read' → logprob: -9.505874633789062
    5. '.readlines' → logprob: -11.380874633789062
    6. '.buffer' → logprob: -13.130874633789062
    7. '.Read' → logprob: -13.630874633789062
    8. ' readline' → logprob: -14.505874633789062
    9. '```' → logprob: -15.255874633789062
    10. '_read' → logprob: -15.380874633789062

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5368983745574951
    2. '()' → logprob: -0.9118983745574951
    3. '(
' → logprob: -4.786898612976074
    4. '()
' → logprob: -5.911898612976074
    5. 'def' → logprob: -7.411898612976074
    6. '()

' → logprob: -7.411898612976074
    7. '
' → logprob: -7.911898612976074
    8. '(

' → logprob: -8.286898612976074
    9. '()\' → logprob: -8.411898612976074
    10. ')' → logprob: -9.036898612976074

Token 13: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3871574401855469
    2. 'def' → logprob: -1.1371574401855469
    3. 'N' → logprob: -8.387157440185547
    4. 'class' → logprob: -9.887157440185547
    5. 'from' → logprob: -13.512157440185547
    6. '\' → logprob: -13.637157440185547
    7. 'd' → logprob: -13.762157440185547
    8. 'for' → logprob: -14.137157440185547
    9. 'data' → logprob: -14.137157440185547
    10. 'num' → logprob: -14.262157440185547

Token 14: ' Dice' (ID: 100924)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6061404347419739
    2. 'def' → logprob: -0.8561404347419739
    3. 'd' → logprob: -4.606140613555908
    4. 'N' → logprob: -4.856140613555908
    5. 'class' → logprob: -5.231140613555908
    6. ' n' → logprob: -5.731140613555908
    7. ' def' → logprob: -6.981140613555908
    8. 'data' → logprob: -7.106140613555908
    9. ' class' → logprob: -7.981140613555908
    10. 'de' → logprob: -8.48114013671875

Token 15: ' faces' (ID: 22060)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41337108612060547
    2. 's' → logprob: -1.6633710861206055
    3. '_roll' → logprob: -2.7883710861206055
    4. ' =' → logprob: -3.9133710861206055
    5. 'roll' → logprob: -4.6633710861206055
    6. '_faces' → logprob: -4.7883710861206055
    7. ' (' → logprob: -4.9133710861206055
    8. '=' → logprob: -5.0383710861206055
    9. 'def' → logprob: -5.1633710861206055
    10. ''s' → logprob: -5.5383710861206055

Token 16: ' ordering' (ID: 30931)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.386226624250412
    2. 's' → logprob: -1.8862266540527344
    3. '_faces' → logprob: -2.5112266540527344
    4. 'faces' → logprob: -3.3862266540527344
    5. ' =' → logprob: -3.8862266540527344
    6. 'dice' → logprob: -4.511226654052734
    7. ' faces' → logprob: -4.886226654052734
    8. '6' → logprob: -5.886226654052734
    9. ',' → logprob: -6.386226654052734
    10. ' ' → logprob: -6.511226654052734

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25123751163482666
    2. ' =' → logprob: -2.876237392425537
    3. 'd' → logprob: -3.001237392425537
    4. 'dice' → logprob: -3.376237392425537
    5. '_faces' → logprob: -3.501237392425537
    6. 'faces' → logprob: -3.501237392425537
    7. 's' → logprob: -4.751237392425537
    8. ' faces' → logprob: -5.876237392425537
    9. '[' → logprob: -6.126237392425537
    10. '_d' → logprob: -6.626237392425537

Token 18: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2805861234664917
    2. ' faces' → logprob: -1.2805861234664917
    3. 'dice' → logprob: -2.2805862426757812
    4. ' dice' → logprob: -2.4055862426757812
    5. ' ['' → logprob: -2.7805862426757812
    6. 'faces' → logprob: -3.0305862426757812
    7. 'd' → logprob: -4.030586242675781
    8. '#' → logprob: -4.155586242675781
    9. ' d' → logprob: -4.280586242675781
    10. '['' → logprob: -4.405586242675781

Token 19: 'top' (ID: 8169)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.843520998954773
    2. '1' → logprob: -1.968520998954773
    3. '"' → logprob: -2.3435211181640625
    4. 'top' → logprob: -2.3435211181640625
    5. ' ' → logprob: -2.5935211181640625
    6. ''' → logprob: -2.7185211181640625
    7. 'up' → logprob: -3.0935211181640625
    8. ']' → logprob: -3.0935211181640625
    9. '[' → logprob: -3.0935211181640625
    10. '-' → logprob: -3.2185211181640625

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002813909435644746
    2. ']' → logprob: -6.002813816070557
    3. ' ,' → logprob: -8.252814292907715
    4. ',
' → logprob: -10.252814292907715
    5. ')' → logprob: -10.877814292907715
    6. ' ]' → logprob: -11.377814292907715
    7. '[' → logprob: -13.377814292907715
    8. '<|end|>' → logprob: -13.627814292907715
    9. ' ' → logprob: -13.752814292907715
    10. '0' → logprob: -14.002814292907715

Token 21: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.475333034992218
    2. 'bottom' → logprob: -0.975333034992218
    3. ' front' → logprob: -7.475333213806152
    4. 'front' → logprob: -8.350333213806152
    5. ' ' → logprob: -8.600333213806152
    6. ' north' → logprob: -10.225333213806152
    7. 'north' → logprob: -10.350333213806152
    8. '1' → logprob: -10.600333213806152
    9. 'bot' → logprob: -10.600333213806152
    10. ' right' → logprob: -10.850333213806152

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001337624154984951
    2. ']' → logprob: -6.62633752822876
    3. ' ,' → logprob: -11.751338005065918
    4. ',
' → logprob: -13.751338005065918
    5. ' ]' → logprob: -14.626338005065918
    6. 's' → logprob: -14.876338005065918
    7. ')' → logprob: -15.376338005065918
    8. ',

' → logprob: -15.501338005065918
    9. '#' → logprob: -15.626338005065918
    10. '```' → logprob: -16.1263370513916

Token 23: ' north' (ID: 16173)
  Prédit: ' front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' front' → logprob: -0.35986626148223877
    2. ' left' → logprob: -1.3598662614822388
    3. 'front' → logprob: -3.484866142272949
    4. 'left' → logprob: -4.984866142272949
    5. ' right' → logprob: -5.359866142272949
    6. ' north' → logprob: -5.984866142272949
    7. ' ' → logprob: -8.23486614227295
    8. 'north' → logprob: -8.73486614227295
    9. 'right' → logprob: -8.85986614227295
    10. ' top' → logprob: -9.60986614227295

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.396757089532912e-05
    2. ' ,' → logprob: -10.0000638961792
    3. ']' → logprob: -11.8750638961792
    4. 'face' → logprob: -12.3750638961792
    5. 'south' → logprob: -13.3750638961792
    6. ' face' → logprob: -13.7500638961792
    7. 'north' → logprob: -14.3750638961792
    8. '_face' → logprob: -14.3750638961792
    9. 's' → logprob: -14.5000638961792
    10. '```' → logprob: -14.6250638961792

Token 25: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.5235506892204285
    2. ' south' → logprob: -0.8985506892204285
    3. 'east' → logprob: -8.523550987243652
    4. 's' → logprob: -9.148550987243652
    5. ' east' → logprob: -9.273550987243652
    6. '```' → logprob: -11.398550987243652
    7. ' ' → logprob: -12.273550987243652
    8. ' ' → logprob: -12.523550987243652
    9. 'west' → logprob: -12.523550987243652
    10. ' west' → logprob: -14.023550987243652

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007548353751190007
    2. ']' → logprob: -7.2507548332214355
    3. ' ,' → logprob: -10.125755310058594
    4. ',
' → logprob: -13.750755310058594
    5. '#' → logprob: -14.500755310058594
    6. ' ]' → logprob: -15.125755310058594
    7. ',

' → logprob: -15.250755310058594
    8. 's' → logprob: -15.563255310058594
    9. '```' → logprob: -15.563255310058594
    10. ')' → logprob: -15.750755310058594

Token 27: ' west' (ID: 14078)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -1.0128016471862793
    2. 'east' → logprob: -1.2628016471862793
    3. ' east' → logprob: -1.5128016471862793
    4. ' west' → logprob: -2.0128016471862793
    5. ' ' → logprob: -10.887802124023438
    6. 'e' → logprob: -12.012802124023438
    7. '  ' → logprob: -13.012802124023438
    8. '```' → logprob: -13.262802124023438
    9. '-west' → logprob: -14.387802124023438
    10. ']' → logprob: -14.512802124023438

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015236717881634831
    2. ']' → logprob: -6.501523494720459
    3. ' ,' → logprob: -11.001523971557617
    4. ' ]' → logprob: -14.126523971557617
    5. ',
' → logprob: -14.251523971557617
    6. '<|end|>' → logprob: -14.251523971557617
    7. ',

' → logprob: -14.751523971557617
    8. 's' → logprob: -15.501523971557617
    9. ')' → logprob: -15.501523971557617
    10. '<|end|>' → logprob: -15.626523971557617

Token 29: ' east' (ID: 23557)
  Prédit: ' east'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' east' → logprob: -0.4288444519042969
    2. 'east' → logprob: -1.0538444519042969
    3. 'e' → logprob: -9.303844451904297
    4. ' ' → logprob: -10.178844451904297
    5. '  ' → logprob: -12.678844451904297
    6. 'est' → logprob: -13.053844451904297
    7. '```' → logprob: -13.178844451904297
    8. ',e' → logprob: -13.928844451904297
    9. ' e' → logprob: -14.178844451904297
    10. ''e' → logprob: -14.428844451904297

Token 30: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.040457421680912e-05
    2. ' ]' → logprob: -9.875070571899414
    3. ',' → logprob: -11.750070571899414
    4. ']
' → logprob: -12.000070571899414
    5. ']

' → logprob: -13.375070571899414
    6. ']
' → logprob: -14.375070571899414
    7. '#' → logprob: -14.500070571899414
    8. ')' → logprob: -14.750070571899414
    9. '```' → logprob: -14.750070571899414
    10. '`]' → logprob: -14.875070571899414

Token 31: '#' (ID: 2)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.27004650235176086
    2. 'def' → logprob: -1.8950464725494385
    3. 'class' → logprob: -2.7700464725494385
    4. 'faces' → logprob: -4.020046710968018
    5. 'cube' → logprob: -6.520046710968018
    6. 'd' → logprob: -6.770046710968018
    7. 'face' → logprob: -7.395046710968018
    8. 'dire' → logprob: -7.770046710968018
    9. 'next' → logprob: -8.02004623413086
    10. 'current' → logprob: -8.52004623413086

Token 32: ' sum' (ID: 4215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.604111909866333
    2. 'dice' → logprob: -1.479111909866333
    3. 'class' → logprob: -1.854111909866333
    4. '#' → logprob: -3.104111909866333
    5. 'faces' → logprob: -4.229111671447754
    6. 'dire' → logprob: -5.979111671447754
    7. 'face' → logprob: -6.854111671447754
    8. 'N' → logprob: -7.354111671447754
    9. 'd' → logprob: -7.604111671447754
    10. ' class' → logprob: -7.854111671447754

Token 33: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3745259940624237
    2. '_' → logprob: -1.749526023864746
    3. '=' → logprob: -2.624526023864746
    4. 's' → logprob: -3.999526023864746
    5. '(' → logprob: -4.374526023864746
    6. '_faces' → logprob: -4.499526023864746
    7. 'of' → logprob: -4.874526023864746
    8. ')' → logprob: -5.124526023864746
    9. 'faces' → logprob: -6.499526023864746
    10. ' of' → logprob: -6.499526023864746

Token 34: ' opposite' (ID: 23821)
  Prédit: ' faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -1.375252604484558
    2. ' dice' → logprob: -1.375252604484558
    3. ' the' → logprob: -2.2502527236938477
    4. ' all' → logprob: -2.5002527236938477
    5. ' opposite' → logprob: -2.5002527236938477
    6. 'dice' → logprob: -2.6252527236938477
    7. 'faces' → logprob: -2.6252527236938477
    8. ' ' → logprob: -4.625252723693848
    9. ' face' → logprob: -5.000252723693848
    10. 'the' → logprob: -5.125252723693848

Token 35: ' faces' (ID: 22060)
  Prédit: ' faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.7415797114372253
    2. 'faces' → logprob: -1.8665797710418701
    3. ' sides' → logprob: -1.8665797710418701
    4. '_faces' → logprob: -2.11657977104187
    5. 's' → logprob: -2.49157977104187
    6. '_s' → logprob: -5.616579532623291
    7. '=' → logprob: -6.116579532623291
    8. '_face' → logprob: -6.116579532623291
    9. ' =' → logprob: -6.991579532623291
    10. '_f' → logprob: -7.491579532623291

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0879005566239357
    2. '=' → logprob: -3.0879006385803223
    3. ' is' → logprob: -3.3379006385803223
    4. ' ' → logprob: -7.337900638580322
    5. '#' → logprob: -7.587900638580322
    6. ':' → logprob: -7.587900638580322
    7. ' #' → logprob: -7.837900638580322
    8. 'is' → logprob: -7.962900638580322
    9. '6' → logprob: -8.712900161743164
    10. '_' → logprob: -9.587900161743164

Token 37: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.14304056763648987
    2. ' ' → logprob: -2.018040657043457
    3. '11' → logprob: -8.018040657043457
    4. '```' → logprob: -11.268040657043457
    5. ' ' → logprob: -11.393040657043457
    6. '1' → logprob: -13.268040657043457
    7. '12' → logprob: -13.330540657043457
    8. '	' → logprob: -13.580540657043457
    9. '14' → logprob: -13.768040657043457
    10. '`' → logprob: -14.393040657043457

Token 38: ':' (ID: 25)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.34021517634391785
    2. '
' → logprob: -1.7152152061462402
    3. 'def' → logprob: -2.4652152061462402
    4. 'dice' → logprob: -4.84021520614624
    5. '\' → logprob: -5.21521520614624
    6. 'd' → logprob: -5.96521520614624
    7. '#' → logprob: -6.46521520614624
    8. '
' → logprob: -6.46521520614624
    9. 'class' → logprob: -6.96521520614624
    10. 'n' → logprob: -7.34021520614624

Token 39: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.5945769548416138
    2. 'dice' → logprob: -1.7195769548416138
    3. 'def' → logprob: -2.094576835632324
    4. 'faces' → logprob: -2.219576835632324
    5. '```' → logprob: -2.969576835632324
    6. 'face' → logprob: -2.969576835632324
    7. ' faces' → logprob: -3.219576835632324
    8. ' top' → logprob: -3.219576835632324
    9. '
' → logprob: -3.719576835632324
    10. ' 
' → logprob: -4.094576835632324

Token 40: '(' (ID: 7)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2395373433828354
    2. ' -' → logprob: -2.489537239074707
    3. '+' → logprob: -2.614537239074707
    4. ' ' → logprob: -3.239537239074707
    5. ',' → logprob: -4.739537239074707
    6. ' ,' → logprob: -5.364537239074707
    7. '-' → logprob: -5.864537239074707
    8. '=' → logprob: -7.489537239074707
    9. ' and' → logprob: -7.614537239074707
    10. ' =' → logprob: -9.114537239074707

Token 41: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09026661515235901
    2. '1' → logprob: -2.965266704559326
    3. '),' → logprob: -4.465266704559326
    4. ')+' → logprob: -4.465266704559326
    5. ' )' → logprob: -4.965266704559326
    6. '0' → logprob: -6.840266704559326
    7. ' ' → logprob: -6.840266704559326
    8. ',' → logprob: -7.215266704559326
    9. '')' → logprob: -7.590266704559326
    10. '6' → logprob: -8.090266227722168

Token 42: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26369738578796387
    2. '),' → logprob: -1.5136973857879639
    3. ')+' → logprob: -5.138697624206543
    4. ',' → logprob: -5.763697624206543
    5. ' )' → logprob: -6.888697624206543
    6. '+' → logprob: -7.263697624206543
    7. ' ),' → logprob: -7.888697624206543
    8. '-' → logprob: -8.763697624206543
    9. ')=' → logprob: -9.388697624206543
    10. ')-' → logprob: -9.638697624206543

Token 43: 'bottom' (ID: 29677)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.15418851375579834
    2. 'bottom' → logprob: -2.154188632965088
    3. ' ' → logprob: -4.154188632965088
    4. ' bottom' → logprob: -4.529188632965088
    5. '7' → logprob: -8.77918815612793
    6. '2' → logprob: -9.40418815612793
    7. 'bot' → logprob: -10.02918815612793
    8. '  ' → logprob: -10.77918815612793
    9. '_bottom' → logprob: -10.90418815612793
    10. '```' → logprob: -11.27918815612793

Token 44: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023177221417427063
    2. ' (' → logprob: -4.148177146911621
    3. '7' → logprob: -5.648177146911621
    4. '6' → logprob: -5.898177146911621
    5. ' ' → logprob: -8.023177146911621
    6. ':' → logprob: -8.148177146911621
    7. '1' → logprob: -9.273177146911621
    8. ',' → logprob: -9.898177146911621
    9. ')' → logprob: -10.773177146911621
    10. '=' → logprob: -11.273177146911621

Token 45: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0011167617049068213
    2. ' ' → logprob: -6.876116752624512
    3. ')' → logprob: -9.626116752624512
    4. '-' → logprob: -12.126116752624512
    5. '1' → logprob: -12.751116752624512
    6. '7' → logprob: -12.876116752624512
    7. '```' → logprob: -12.876116752624512
    8. '0' → logprob: -14.313616752624512
    9. ' )' → logprob: -14.376116752624512
    10. '۶' → logprob: -14.688616752624512

Token 46: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07117694616317749
    2. '),' → logprob: -2.8211770057678223
    3. ')
' → logprob: -4.946177005767822
    4. ',' → logprob: -7.321177005767822
    5. '),
' → logprob: -7.446177005767822
    6. ')

' → logprob: -8.446176528930664
    7. ')
' → logprob: -8.571176528930664
    8. '#' → logprob: -9.321176528930664
    9. ' )' → logprob: -9.696176528930664
    10. '),
' → logprob: -10.446176528930664

Token 47: ' north' (ID: 16173)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.6107962131500244
    2. ' north' → logprob: -0.9857962131500244
    3. '#' → logprob: -2.6107962131500244
    4. 'top' → logprob: -5.985795974731445
    5. ' #' → logprob: -5.985795974731445
    6. ' ' → logprob: -6.985795974731445
    7. ' south' → logprob: -6.985795974731445
    8. ' west' → logprob: -7.235795974731445
    9. ' top' → logprob: -7.235795974731445
    10. ' east' → logprob: -7.485795974731445

Token 48: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.310693111619912e-05
    2. ' (' → logprob: -10.250042915344238
    3. '<|end|>' → logprob: -12.000042915344238
    4. '<|end|>' → logprob: -14.625042915344238
    5. '```' → logprob: -15.000042915344238
    6. '-' → logprob: -15.875042915344238
    7. ')' → logprob: -15.875042915344238
    8. '#' → logprob: -15.875042915344238
    9. ',' → logprob: -16.250043869018555
    10. '6' → logprob: -16.500043869018555

Token 49: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8844634294509888
    2. '4' → logprob: -1.1344634294509888
    3. '7' → logprob: -1.3844634294509888
    4. '3' → logprob: -4.884463310241699
    5. '2' → logprob: -5.384463310241699
    6. ' ' → logprob: -6.384463310241699
    7. '5' → logprob: -7.134463310241699
    8. ')' → logprob: -9.0094633102417
    9. '```' → logprob: -9.0094633102417
    10. '0' → logprob: -10.2594633102417

Token 50: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.29893824458122253
    2. '-' → logprob: -1.673938274383545
    3. ')' → logprob: -3.173938274383545
    4. '),' → logprob: -3.923938274383545
    5. ' -' → logprob: -5.423938274383545
    6. ')-(' → logprob: -6.048938274383545
    7. ' )' → logprob: -6.673938274383545
    8. '-)' → logprob: -8.173937797546387
    9. '6' → logprob: -8.298937797546387
    10. ',' → logprob: -8.798937797546387

Token 51: 'south' (ID: 145118)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5441576242446899
    2. '4' → logprob: -1.16915762424469
    3. 'south' → logprob: -2.4191575050354004
    4. ' south' → logprob: -4.2941575050354
    5. ' ' → logprob: -5.1691575050354
    6. '3' → logprob: -8.169157981872559
    7. '```' → logprob: -9.044157981872559
    8. '5' → logprob: -9.419157981872559
    9. 's' → logprob: -9.794157981872559
    10. '  ' → logprob: -10.169157981872559

Token 52: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2030026614665985
    2. '(' → logprob: -1.703002691268921
    3. ' (' → logprob: -7.078002452850342
    4. '4' → logprob: -8.3280029296875
    5. ' ' → logprob: -8.5780029296875
    6. '1' → logprob: -8.8280029296875
    7. '```' → logprob: -9.5780029296875
    8. '3' → logprob: -10.5780029296875
    9. '5' → logprob: -11.0780029296875
    10. '12' → logprob: -11.2030029296875

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023826509714126587
    2. '4' → logprob: -3.7738265991210938
    3. ' ' → logprob: -7.523826599121094
    4. '3' → logprob: -10.898826599121094
    5. ')' → logprob: -11.898826599121094
    6. '```' → logprob: -12.523826599121094
    7. '5' → logprob: -13.273826599121094
    8. '6' → logprob: -13.336326599121094
    9. '２' → logprob: -13.461326599121094
    10. '  ' → logprob: -13.898826599121094

Token 54: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.34996891021728516
    2. ')' → logprob: -1.2249689102172852
    3. ' ),' → logprob: -7.349968910217285
    4. ',' → logprob: -7.724968910217285
    5. ' )' → logprob: -8.724968910217285
    6. '6' → logprob: -9.974968910217285
    7. '7' → logprob: -10.099968910217285
    8. '#' → logprob: -10.099968910217285
    9. ')#' → logprob: -10.349968910217285
    10. '),
' → logprob: -10.849968910217285

Token 55: ' west' (ID: 14078)
  Prédit: ' west'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' west' → logprob: -0.05003948509693146
    2. 'west' → logprob: -3.050039529800415
    3. ' east' → logprob: -7.175039291381836
    4. ' ' → logprob: -8.175039291381836
    5. '#' → logprob: -9.050039291381836
    6. '4' → logprob: -9.300039291381836
    7. '3' → logprob: -9.675039291381836
    8. 'east' → logprob: -10.050039291381836
    9. '  ' → logprob: -10.425039291381836
    10. ' #' → logprob: -11.675039291381836

Token 56: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.861651490908116e-05
    2. ' (' → logprob: -9.625068664550781
    3. '6' → logprob: -14.000068664550781
    4. '3' → logprob: -15.000068664550781
    5. '-' → logprob: -15.000068664550781
    6. '7' → logprob: -15.125068664550781
    7. '4' → logprob: -15.500068664550781
    8. '<|end|>' → logprob: -15.500068664550781
    9. ',' → logprob: -16.12506866455078
    10. ' ' → logprob: -16.87506866455078

Token 57: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.015141589567065239
    2. '3' → logprob: -5.015141487121582
    3. ' ' → logprob: -5.015141487121582
    4. '(' → logprob: -6.515141487121582
    5. ')' → logprob: -9.577641487121582
    6. '5' → logprob: -9.640141487121582
    7. ' (' → logprob: -10.015141487121582
    8. '[' → logprob: -10.952641487121582
    9. '1' → logprob: -11.515141487121582
    10. '-' → logprob: -11.952641487121582

Token 58: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.358978807926178
    2. '-' → logprob: -1.7339787483215332
    3. ')-' → logprob: -2.108978748321533
    4. '-)' → logprob: -6.108978748321533
    5. ')-(' → logprob: -7.358978748321533
    6. '6' → logprob: -8.608979225158691
    7. '),' → logprob: -8.733979225158691
    8. ' -' → logprob: -8.733979225158691
    9. ' )' → logprob: -8.983979225158691
    10. '4' → logprob: -9.233979225158691

Token 59: 'east' (ID: 157488)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00026991849881596863
    2. ' ' → logprob: -8.250269889831543
    3. 'east' → logprob: -12.000269889831543
    4. '３' → logprob: -14.125269889831543
    5. ' east' → logprob: -14.125269889831543
    6. '۳' → logprob: -14.250269889831543
    7. '৩' → logprob: -16.25027084350586
    8. ' three' → logprob: -17.25027084350586
    9. '٣' → logprob: -17.62527084350586
    10. '३' → logprob: -17.87527084350586

Token 60: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003208726877346635
    2. ' (' → logprob: -5.753208637237549
    3. '3' → logprob: -11.503209114074707
    4. ')' → logprob: -12.440709114074707
    5. '```' → logprob: -12.815709114074707
    6. 'import' → logprob: -12.878209114074707
    7. ' ' → logprob: -13.128209114074707
    8. '<|end|>' → logprob: -13.253209114074707
    9. '4' → logprob: -14.128209114074707
    10. '6' → logprob: -14.253209114074707

Token 61: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0017906129360198975
    2. ')' → logprob: -6.501790523529053
    3. '5' → logprob: -8.501791000366211
    4. ' ' → logprob: -9.501791000366211
    5. ']' → logprob: -13.001791000366211
    6. '4' → logprob: -13.126791000366211
    7. ')]' → logprob: -13.626791000366211
    8. ' )' → logprob: -14.001791000366211
    9. '```' → logprob: -14.314291000366211
    10. '۳' → logprob: -14.939291000366211

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09119535982608795
    2. ']' → logprob: -2.4661953449249268
    3. '])' → logprob: -6.466195583343506
    4. ')]' → logprob: -7.841195583343506
    5. '#' → logprob: -9.091195106506348
    6. '）' → logprob: -10.341195106506348
    7. ' )' → logprob: -10.466195106506348
    8. '```' → logprob: -10.466195106506348
    9. '6' → logprob: -11.091195106506348
    10. '4' → logprob: -11.091195106506348

Token 63: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3268664479255676
    2. 'class' → logprob: -1.3268663883209229
    3. '

' → logprob: -5.576866626739502
    4. '
' → logprob: -5.701866626739502
    5. '\' → logprob: -6.076866626739502
    6. 'd' → logprob: -6.451866626739502
    7. 'n' → logprob: -7.076866626739502
    8. '```' → logprob: -8.201866149902344
    9. '\n' → logprob: -8.201866149902344
    10. 'dice' → logprob: -8.326866149902344

Token 64: ' initial' (ID: 4871)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10172757506370544
    2. 'class' → logprob: -2.3517274856567383
    3. 'n' → logprob: -7.476727485656738
    4. 'N' → logprob: -7.976727485656738
    5. 'd' → logprob: -8.601727485656738
    6. 'dice' → logprob: -9.101727485656738
    7. '#' → logprob: -9.351727485656738
    8. 'from' → logprob: -10.351727485656738
    9. ' class' → logprob: -10.726727485656738
    10. '6' → logprob: -10.851727485656738

Token 65: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35084107518196106
    2. '_faces' → logprob: -1.9758410453796387
    3. '_d' → logprob: -2.6008410453796387
    4. '_face' → logprob: -3.1008410453796387
    5. '=' → logprob: -4.350841045379639
    6. 'dice' → logprob: -5.725841045379639
    7. '_' → logprob: -5.725841045379639
    8. '_position' → logprob: -5.725841045379639
    9. '_positions' → logprob: -5.975841045379639
    10. '_state' → logprob: -6.100841045379639

Token 66: ' top' (ID: 2344)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.35226109623908997
    2. ' dice' → logprob: -1.3522610664367676
    3. 'faces' → logprob: -4.602261066436768
    4. 'top' → logprob: -4.602261066436768
    5. ' faces' → logprob: -5.227261066436768
    6. ' top' → logprob: -5.602261066436768
    7. 'd' → logprob: -6.727261066436768
    8. ' die' → logprob: -6.852261066436768
    9. '```' → logprob: -7.102261066436768
    10. '[' → logprob: -7.227261066436768

Token 67: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020274927373975515
    2. '=' → logprob: -6.87702751159668
    3. ',' → logprob: -7.12702751159668
    4. ' ,' → logprob: -9.37702751159668
    5. ' ' → logprob: -10.00202751159668
    6. '_face' → logprob: -10.50202751159668
    7. ')' → logprob: -12.00202751159668
    8. '(' → logprob: -12.25202751159668
    9. ' (' → logprob: -12.37702751159668
    10. ' =[' → logprob: -12.75202751159668

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22554782032966614
    2. ' ' → logprob: -1.6005477905273438
    3. '0' → logprob: -9.600547790527344
    4. '[' → logprob: -10.350547790527344
    5. ' [' → logprob: -11.100547790527344
    6. '6' → logprob: -11.850547790527344
    7. '  ' → logprob: -12.975547790527344
    8. '3' → logprob: -13.100547790527344
    9. '2' → logprob: -13.350547790527344
    10. ',' → logprob: -13.475547790527344

Token 69: ',' (ID: 11)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.6917945146560669
    2. 'n' → logprob: -1.566794514656067
    3. 'd' → logprob: -2.4417943954467773
    4. 'class' → logprob: -2.5667943954467773
    5. 'def' → logprob: -3.1917943954467773
    6. 'N' → logprob: -3.6917943954467773
    7. ',' → logprob: -4.816794395446777
    8. '
' → logprob: -4.816794395446777
    9. 'face' → logprob: -5.316794395446777
    10. '#' → logprob: -5.316794395446777

Token 70: ' south' (ID: 15019)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.5796446204185486
    2. ' bottom' → logprob: -0.8296446204185486
    3. 'bot' → logprob: -7.204644680023193
    4. 'north' → logprob: -7.454644680023193
    5. ' south' → logprob: -8.329644203186035
    6. ' east' → logprob: -8.454644203186035
    7. 'top' → logprob: -8.579644203186035
    8. ' north' → logprob: -8.704644203186035
    9. ' ' → logprob: -8.829644203186035
    10. 'south' → logprob: -8.954644203186035

Token 71: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17756223678588867
    2. ' =' → logprob: -1.9275622367858887
    3. ',' → logprob: -4.177562236785889
    4. 'top' → logprob: -8.052562713623047
    5. '#' → logprob: -8.552562713623047
    6. 'face' → logprob: -8.677562713623047
    7. '_' → logprob: -8.927562713623047
    8. 'south' → logprob: -9.052562713623047
    9. '_face' → logprob: -9.302562713623047
    10. '=
' → logprob: -9.552562713623047

Token 72: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.38450896739959717
    2. '1' → logprob: -1.3845089673995972
    3. ' ' → logprob: -3.2595090866088867
    4. '3' → logprob: -4.134509086608887
    5. '4' → logprob: -4.884509086608887
    6. '2' → logprob: -5.259509086608887
    7. '6' → logprob: -6.509509086608887
    8. '0' → logprob: -9.634509086608887
    9. '[' → logprob: -11.759509086608887
    10. '```' → logprob: -11.884509086608887

Token 73: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9053908586502075
    2. 'class' → logprob: -1.4053908586502075
    3. 'dice' → logprob: -2.030390739440918
    4. 'N' → logprob: -2.405390739440918
    5. 'def' → logprob: -2.530390739440918
    6. 'd' → logprob: -3.780390739440918
    7. '#' → logprob: -4.905390739440918
    8. '
' → logprob: -5.030390739440918
    9. 'top' → logprob: -6.155390739440918
    10. 'face' → logprob: -6.405390739440918

Token 74: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.8602758646011353
    2. 'west' → logprob: -1.2352758646011353
    3. 'north' → logprob: -2.1102757453918457
    4. 'south' → logprob: -2.8602757453918457
    5. ' east' → logprob: -3.2352757453918457
    6. 'top' → logprob: -3.4852757453918457
    7. ' west' → logprob: -4.110275745391846
    8. '#' → logprob: -4.985275745391846
    9. 'current' → logprob: -5.485275745391846
    10. 'bottom' → logprob: -6.110275745391846

Token 75: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017368246335536242
    2. ' =' → logprob: -6.376736640930176
    3. '3' → logprob: -10.501736640930176
    4. '1' → logprob: -13.251736640930176
    5. '4' → logprob: -13.751736640930176
    6. ',' → logprob: -14.001736640930176
    7. '6' → logprob: -14.251736640930176
    8. '```' → logprob: -14.626736640930176
    9. ' ' → logprob: -14.876736640930176
    10. ')' → logprob: -15.251736640930176

Token 76: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007730965036898851
    2. '4' → logprob: -5.382730960845947
    3. '1' → logprob: -6.507730960845947
    4. ' ' → logprob: -7.257730960845947
    5. '6' → logprob: -7.382730960845947
    6. '5' → logprob: -8.257731437683105
    7. '```' → logprob: -11.257731437683105
    8. '2' → logprob: -12.695231437683105
    9. ')' → logprob: -12.695231437683105
    10. '[' → logprob: -13.882731437683105

Token 77: ' =>' (ID: 871)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6426719427108765
    2. 'class' → logprob: -1.0176719427108765
    3. 'n' → logprob: -3.392672061920166
    4. '#' → logprob: -3.767672061920166
    5. 'd' → logprob: -3.892672061920166
    6. '
' → logprob: -3.892672061920166
    7. 'N' → logprob: -5.142672061920166
    8. 'dice' → logprob: -5.892672061920166
    9. '

' → logprob: -6.017672061920166
    10. '\' → logprob: -7.267672061920166

Token 78: ' north' (ID: 16173)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.6260078549385071
    2. 'dice' → logprob: -1.7510077953338623
    3. 'start' → logprob: -3.1260077953338623
    4. 'pos' → logprob: -3.2510077953338623
    5. ' top' → logprob: -3.3760077953338623
    6. 'faces' → logprob: -4.001008033752441
    7. 'current' → logprob: -4.001008033752441
    8. 'd' → logprob: -4.126008033752441
    9. 'initial' → logprob: -4.126008033752441
    10. ' dice' → logprob: -4.251008033752441

Token 79: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04883069172501564
    2. ' =' → logprob: -3.04883074760437
    3. ',' → logprob: -9.17383098602295
    4. '=[' → logprob: -10.42383098602295
    5. ']' → logprob: -10.54883098602295
    6. ']=' → logprob: -10.79883098602295
    7. ')' → logprob: -12.04883098602295
    8. '=
' → logprob: -12.04883098602295
    9. ' =[' → logprob: -12.04883098602295
    10. '_=' → logprob: -12.17383098602295

Token 80: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.875009536743164
    3. '4' → logprob: -13.125009536743164
    4. '५' → logprob: -16.500009536743164
    5. '５' → logprob: -16.750009536743164
    6. '৫' → logprob: -17.000009536743164
    7. '٥' → logprob: -17.562509536743164
    8. '6' → logprob: -17.687509536743164
    9. '۵' → logprob: -17.687509536743164
    10. '(' → logprob: -18.000009536743164

Token 81: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8303787112236023
    2. '#' → logprob: -2.205378770828247
    3. 'class' → logprob: -2.330378770828247
    4. 'def' → logprob: -2.455378770828247
    5. 'current' → logprob: -2.580378770828247
    6. 'dice' → logprob: -2.580378770828247
    7. 'd' → logprob: -3.955378770828247
    8. '

' → logprob: -4.080378532409668
    9. 'n' → logprob: -4.205378532409668
    10. ',' → logprob: -4.455378532409668

Token 82: ' bottom' (ID: 8725)
  Prédit: ' west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' west' → logprob: -0.5785452127456665
    2. 'west' → logprob: -0.8285452127456665
    3. '4' → logprob: -6.453545093536377
    4. 'w' → logprob: -7.453545093536377
    5. ' ' → logprob: -9.078545570373535
    6. ' south' → logprob: -9.453545570373535
    7. 'north' → logprob: -10.078545570373535
    8. ' east' → logprob: -10.328545570373535
    9. '6' → logprob: -10.328545570373535
    10. 'south' → logprob: -10.453545570373535

Token 83: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.3120038501219824e-05
    2. ' =' → logprob: -9.875053405761719
    3. '=
' → logprob: -14.125053405761719
    4. '=

' → logprob: -15.250053405761719
    5. '＝' → logprob: -16.00005340576172
    6. '=}' → logprob: -16.37505340576172
    7. ')=' → logprob: -16.37505340576172
    8. '6' → logprob: -16.50005340576172
    9. '=int' → logprob: -17.00005340576172
    10. ')' → logprob: -17.25005340576172

Token 84: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.004623918328434229
    2. ' ' → logprob: -5.379623889923096
    3. '<|end|>' → logprob: -14.254624366760254
    4. '4' → logprob: -14.379624366760254
    5. '' → logprob: -15.004624366760254
    6. '  ' → logprob: -15.379624366760254
    7. '```' → logprob: -15.754624366760254
    8. '	' → logprob: -16.129623413085938
    9. '46' → logprob: -16.254623413085938
    10. '٦' → logprob: -16.254623413085938

Token 85: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8408523797988892
    2. 'class' → logprob: -0.9658523797988892
    3. '
' → logprob: -2.4658522605895996
    4. 'dice' → logprob: -3.8408522605895996
    5. '#' → logprob: -3.9658522605895996
    6. 'n' → logprob: -4.2158522605896
    7. 'd' → logprob: -4.3408522605896
    8. '

' → logprob: -4.5908522605896
    9. 'current' → logprob: -5.0908522605896
    10. '```' → logprob: -6.2158522605896

Token 86: ' west' (ID: 14078)
  Prédit: ' west'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' west' → logprob: -0.5234656929969788
    2. 'west' → logprob: -0.8984656929969788
    3. '4' → logprob: -8.648466110229492
    4. 'w' → logprob: -9.273466110229492
    5. ' ' → logprob: -11.148466110229492
    6. 'and' → logprob: -11.148466110229492
    7. '7' → logprob: -11.898466110229492
    8. 'top' → logprob: -11.898466110229492
    9. 'north' → logprob: -12.273466110229492
    10. ' and' → logprob: -12.648466110229492

Token 87: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.610702363715973e-06
    2. ' =' → logprob: -11.625009536743164
    3. '=

' → logprob: -15.250009536743164
    4. '=
' → logprob: -15.625009536743164
    5. '＝' → logprob: -16.250009536743164
    6. '4' → logprob: -17.250009536743164
    7. '=}' → logprob: -17.375009536743164
    8. '=int' → logprob: -17.875009536743164
    9. '=None' → logprob: -18.000009536743164
    10. '	' → logprob: -18.125009536743164

Token 88: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00026336227892898023
    2. ' ' → logprob: -8.250263214111328
    3. '' → logprob: -14.500263214111328
    4. '```' → logprob: -14.750263214111328
    5. '४' → logprob: -15.437763214111328
    6. '  ' → logprob: -15.500263214111328
    7. '৪' → logprob: -15.562763214111328
    8. '۴' → logprob: -16.062763214111328
    9. '<|end|>' → logprob: -16.500263214111328
    10. '   ' → logprob: -16.562763214111328

Token 89: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5101456642150879
    2. 'class' → logprob: -1.510145664215088
    3. 'n' → logprob: -2.635145664215088
    4. 'dice' → logprob: -2.885145664215088
    5. '#' → logprob: -3.885145664215088
    6. 'N' → logprob: -4.760145664215088
    7. 'd' → logprob: -4.885145664215088
    8. 'dire' → logprob: -6.010145664215088
    9. '
' → logprob: -6.635145664215088
    10. '\' → logprob: -6.760145664215088

Token 90: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3563840389251709
    2. 'def' → logprob: -1.356384038925171
    3. 'dice' → logprob: -3.731384038925171
    4. 'N' → logprob: -5.10638427734375
    5. 'n' → logprob: -5.10638427734375
    6. 'd' → logprob: -5.85638427734375
    7. '#' → logprob: -6.23138427734375
    8. '
' → logprob: -8.10638427734375
    9. '\' → logprob: -9.10638427734375
    10. 'face' → logprob: -9.23138427734375

Token 91: ' Rolling' (ID: 72538)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5725885629653931
    2. 'def' → logprob: -0.9475885629653931
    3. 'N' → logprob: -3.3225884437561035
    4. 'n' → logprob: -5.1975884437561035
    5. '#' → logprob: -5.5725884437561035
    6. 'dice' → logprob: -6.9475884437561035
    7. 'from' → logprob: -7.0725884437561035
    8. 'dp' → logprob: -8.322588920593262
    9. 'd' → logprob: -8.322588920593262
    10. 'D' → logprob: -9.072588920593262

Token 92: ' updates' (ID: 12663)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3115500807762146
    2. ' ' → logprob: -1.5615501403808594
    3. ' the' → logprob: -3.4365501403808594
    4. ' _' → logprob: -4.686550140380859
    5. ' =' → logprob: -4.811550140380859
    6. '_d' → logprob: -6.936550140380859
    7. 'the' → logprob: -7.061550140380859
    8. ' ,' → logprob: -7.311550140380859
    9. '_down' → logprob: -7.686550140380859
    10. ')' → logprob: -7.811550140380859

Token 93: ' faces' (ID: 22060)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7266255617141724
    2. ':' → logprob: -1.6016255617141724
    3. ' ' → logprob: -2.101625442504883
    4. 'def' → logprob: -2.976625442504883
    5. '_' → logprob: -3.226625442504883
    6. 'dice' → logprob: -3.851625442504883
    7. 'd' → logprob: -3.976625442504883
    8. '=' → logprob: -4.351625442504883
    9. ',' → logprob: -4.476625442504883
    10. '_d' → logprob: -4.851625442504883

Token 94: ' according' (ID: 7065)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04679477587342262
    2. ':' → logprob: -4.421794891357422
    3. ',' → logprob: -4.671794891357422
    4. '#' → logprob: -4.921794891357422
    5. '
' → logprob: -5.421794891357422
    6. '=' → logprob: -6.171794891357422
    7. 'faces' → logprob: -6.171794891357422
    8. 'd' → logprob: -6.421794891357422
    9. ' =' → logprob: -6.921794891357422
    10. '_' → logprob: -7.046794891357422

Token 95: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.785003125667572
    2. ' to' → logprob: -1.0350031852722168
    3. ' ' → logprob: -2.535003185272217
    4. '<|end|>' → logprob: -2.535003185272217
    5. '_' → logprob: -3.785003185272217
    6. 'space' → logprob: -6.535003185272217
    7. '_to' → logprob: -6.535003185272217
    8. ')' → logprob: -7.035003185272217
    9. 'ly' → logprob: -7.285003185272217
    10. 's' → logprob: -7.785003185272217

Token 96: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.6963803172111511
    2. ' the' → logprob: -1.321380376815796
    3. 'direction' → logprob: -1.571380376815796
    4. 'the' → logprob: -4.571380138397217
    5. ' directions' → logprob: -5.696380138397217
    6. ' a' → logprob: -6.071380138397217
    7. 'dice' → logprob: -6.071380138397217
    8. 'dire' → logprob: -6.446380138397217
    9. 'd' → logprob: -6.696380138397217
    10. 'roll' → logprob: -6.946380138397217

Token 97: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0909183919429779
    2. 'dire' → logprob: -3.3409183025360107
    3. '
' → logprob: -3.7159183025360107
    4. 'd' → logprob: -4.34091854095459
    5. '#' → logprob: -5.21591854095459
    6. 'direction' → logprob: -5.34091854095459
    7. '\' → logprob: -7.21591854095459
    8. ' directions' → logprob: -7.21591854095459
    9. '

' → logprob: -7.71591854095459
    10. 'class' → logprob: -7.71591854095459

Token 98: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004771514795720577
    2. 'class' → logprob: -5.504771709442139
    3. '
' → logprob: -7.754771709442139
    4. 'd' → logprob: -8.62977123260498
    5. 'de' → logprob: -10.50477123260498
    6. '

' → logprob: -10.75477123260498
    7. '\' → logprob: -11.50477123260498
    8. '```' → logprob: -11.87977123260498
    9. ' 
' → logprob: -12.37977123260498
    10. 'n' → logprob: -12.37977123260498

Token 99: ' roll' (ID: 8465)
  Prédit: ' roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' roll' → logprob: -0.006548870820552111
    2. ' dice' → logprob: -5.631548881530762
    3. ' ' → logprob: -6.631548881530762
    4. 'roll' → logprob: -6.881548881530762
    5. '_roll' → logprob: -8.881548881530762
    6. ' rolling' → logprob: -9.256548881530762
    7. ' space' → logprob: -9.256548881530762
    8. ' get' → logprob: -9.881548881530762
    9. ' r' → logprob: -10.506548881530762
    10. ' dfs' → logprob: -10.881548881530762

Token 100: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7704823613166809
    2. '(d' → logprob: -1.2704823017120361
    3. '_d' → logprob: -1.7704823017120361
    4. '_die' → logprob: -3.020482301712036
    5. '_' → logprob: -3.645482301712036
    6. '_face' → logprob: -5.395482540130615
    7. '_(' → logprob: -5.770482540130615
    8. '(direction' → logprob: -6.395482540130615
    9. '_direction' → logprob: -7.520482540130615
    10. '(face' → logprob: -7.520482540130615

Token 101: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.04156346991658211
    2. ',' → logprob: -4.166563510894775
    3. 'i' → logprob: -4.166563510894775
    4. ')' → logprob: -5.291563510894775
    5. 'ir' → logprob: -6.541563510894775
    6. 'irection' → logprob: -6.666563510894775
    7. ',i' → logprob: -8.041563034057617
    8. ' i' → logprob: -8.541563034057617
    9. '_i' → logprob: -8.666563034057617
    10. 'ie' → logprob: -9.041563034057617

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.833878508885391e-05
    2. ' ,' → logprob: -10.625038146972656
    3. ',d' → logprob: -11.375038146972656
    4. 'd' → logprob: -14.750038146972656
    5. ',
' → logprob: -14.750038146972656
    6. ':' → logprob: -15.375038146972656
    7. 's' → logprob: -15.625038146972656
    8. '):' → logprob: -15.625038146972656
    9. ' ' → logprob: -15.750038146972656
    10. '‌,' → logprob: -15.750038146972656

Token 103: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.5782371759414673
    2. 'direction' → logprob: -0.8282371759414673
    3. 'dir' → logprob: -6.203237056732178
    4. ' dir' → logprob: -9.078237533569336
    5. 'd' → logprob: -9.453237533569336
    6. ' ' → logprob: -10.828237533569336
    7. 'dire' → logprob: -10.953237533569336
    8. '```' → logprob: -11.078237533569336
    9. '   ' → logprob: -11.828237533569336
    10. ' d' → logprob: -11.953237533569336

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005917556118220091
    2. ')' → logprob: -8.000592231750488
    3. '):
' → logprob: -8.375592231750488
    4. ':' → logprob: -10.750592231750488
    5. ' ):' → logprob: -12.750592231750488
    6. ',' → logprob: -13.875592231750488
    7. '=' → logprob: -16.000591278076172
    8. '):
' → logprob: -16.750591278076172
    9. ' :' → logprob: -17.000591278076172
    10. '):

' → logprob: -17.000591278076172

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040084317326545715
    2. ' ' → logprob: -4.290084362030029
    3. ':' → logprob: -4.415084362030029
    4. '[' → logprob: -5.290084362030029
    5. '(' → logprob: -5.915084362030029
    6. '    ' → logprob: -7.040084362030029
    7. ' 
' → logprob: -7.415084362030029
    8. '    
' → logprob: -7.415084362030029
    9. ' if' → logprob: -7.790084362030029
    10. ' (' → logprob: -7.915084362030029

Token 106: ' top' (ID: 2344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28617095947265625
    2. ' if' → logprob: -1.5361709594726562
    3. ' new' → logprob: -3.6611709594726562
    4. ' top' → logprob: -6.036170959472656
    5. 'if' → logprob: -6.536170959472656
    6. ' d' → logprob: -6.786170959472656
    7. ' dice' → logprob: -6.911170959472656
    8. 'd' → logprob: -7.536170959472656
    9. 'top' (adapté à ' top') → logprob: -8.161170959472656
    10. 'new' → logprob: -8.411170959472656

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021435849368572235
    2. ' =' → logprob: -4.146435737609863
    3. '=' → logprob: -5.646435737609863
    4. ' ,' → logprob: -6.396435737609863
    5. ']' → logprob: -9.646435737609863
    6. '   ' → logprob: -10.396435737609863
    7. '[' → logprob: -10.646435737609863
    8. ',
' → logprob: -11.521435737609863
    9. ' ' → logprob: -11.646435737609863
    10. ']=' → logprob: -11.646435737609863

Token 108: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.314764142036438
    2. ' bottom' → logprob: -1.314764142036438
    3. 'bot' → logprob: -6.564764022827148
    4. ' bot' → logprob: -9.689764022827148
    5. 'b' → logprob: -11.314764022827148
    6. '   ' → logprob: -11.564764022827148
    7. ' ' → logprob: -12.814764022827148
    8. '_bottom' → logprob: -14.189764022827148
    9. ',' → logprob: -14.314764022827148
    10. '    ' → logprob: -14.439764022827148

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006889777258038521
    2. '=' → logprob: -5.006889820098877
    3. ' =' → logprob: -9.006889343261719
    4. ' ,' → logprob: -9.881889343261719
    5. ',b' → logprob: -15.381889343261719
    6. ',d' → logprob: -16.38188934326172
    7. ',
' → logprob: -16.63188934326172
    8. ')' → logprob: -16.63188934326172
    9. '‌,' → logprob: -17.88188934326172
    10. '   ' → logprob: -18.06938934326172

Token 110: ' north' (ID: 16173)
  Prédit: ' north'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' north' → logprob: -0.20263215899467468
    2. 'north' → logprob: -1.702632188796997
    3. ' south' → logprob: -6.827631950378418
    4. 'south' → logprob: -10.077631950378418
    5. 'n' → logprob: -10.327631950378418
    6. ' ' → logprob: -10.577631950378418
    7. '   ' → logprob: -11.077631950378418
    8. ' nord' → logprob: -12.702631950378418
    9. ',' → logprob: -12.952631950378418
    10. ' northeast' → logprob: -13.202631950378418

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1318875446449965e-05
    2. '=' → logprob: -10.375041007995605
    3. ' ,' → logprob: -11.750041007995605
    4. ',s' → logprob: -13.875041007995605
    5. ' =' → logprob: -14.750041007995605
    6. ',n' → logprob: -15.375041007995605
    7. ')' → logprob: -16.875041961669922
    8. ',
' → logprob: -16.875041961669922
    9. '‌,' → logprob: -16.875041961669922
    10. '<|end|>' → logprob: -16.875041961669922

Token 112: ' south' (ID: 15019)
  Prédit: ' south'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' south' → logprob: -0.22553029656410217
    2. 'south' → logprob: -1.6005302667617798
    3. 's' → logprob: -9.600530624389648
    4. ' ' → logprob: -10.350530624389648
    5. ' ' → logprob: -12.225530624389648
    6. '```' → logprob: -12.600530624389648
    7. 'sou' → logprob: -13.225530624389648
    8. '   ' → logprob: -13.600530624389648
    9. ',' → logprob: -13.913030624389648
    10. '	s' → logprob: -14.475530624389648

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001462107611587271
    2. ' ,' → logprob: -9.37514591217041
    3. '=' → logprob: -9.75014591217041
    4. ' =' → logprob: -12.75014591217041
    5. ',w' → logprob: -16.125146865844727
    6. ',e' → logprob: -17.000146865844727
    7. ',width' → logprob: -17.625146865844727
    8. '   ' → logprob: -18.500146865844727
    9. ' ' → logprob: -18.625146865844727
    10. '‌,' → logprob: -18.625146865844727

Token 114: ' west' (ID: 14078)
  Prédit: ' west'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' west' → logprob: -0.04861903935670853
    2. 'west' → logprob: -3.048619031906128
    3. ' ' → logprob: -11.298619270324707
    4. ',' → logprob: -12.048619270324707
    5. ' east' → logprob: -12.423619270324707
    6. '   ' → logprob: -13.048619270324707
    7. ' south' → logprob: -13.298619270324707
    8. ' ' → logprob: -13.923619270324707
    9. '    ' → logprob: -14.173619270324707
    10. '  ' → logprob: -14.298619270324707

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002249933750135824
    2. '=' → logprob: -8.875225067138672
    3. ' ,' → logprob: -9.500225067138672
    4. ' =' → logprob: -11.625225067138672
    5. ',e' → logprob: -13.625225067138672
    6. ',b' → logprob: -17.125225067138672
    7. ',w' → logprob: -17.500225067138672
    8. '   ' → logprob: -17.625225067138672
    9. '‌,' → logprob: -18.000225067138672
    10. ' ' → logprob: -18.375225067138672

Token 116: ' east' (ID: 23557)
  Prédit: ' east'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' east' → logprob: -0.023254914209246635
    2. 'east' → logprob: -3.773254871368408
    3. 'e' → logprob: -12.648255348205566
    4. '=' → logprob: -12.773255348205566
    5. ' ' → logprob: -13.523255348205566
    6. ' =' → logprob: -14.648255348205566
    7. ' ' → logprob: -14.898255348205566
    8. '   ' → logprob: -15.398255348205566
    9. '```' → logprob: -15.398255348205566
    10. ' west' → logprob: -16.27325439453125

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002107709646225
    2. '=' → logprob: -2.350210666656494
    3. ',' → logprob: -13.225211143493652
    4. '   ' → logprob: -13.600211143493652
    5. ' ' → logprob: -14.975211143493652
    6. ')' → logprob: -15.350211143493652
    7. '	' → logprob: -16.100210189819336
    8. '    ' → logprob: -16.350210189819336
    9. ' =
' → logprob: -16.350210189819336
    10. ' =[' → logprob: -16.725210189819336

Token 118: ' dice' (ID: 22078)
  Prédit: ' dice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.38691020011901855
    2. 'dice' → logprob: -1.1369102001190186
    3. ' dices' → logprob: -10.511910438537598
    4. 'd' → logprob: -12.011910438537598
    5. ' ' → logprob: -13.386910438537598
    6. '	d' → logprob: -13.511910438537598
    7. '   ' → logprob: -14.136910438537598
    8. ' d' → logprob: -14.261910438537598
    9. 'dic' → logprob: -14.386910438537598
    10. ' dic' → logprob: -15.011910438537598

Token 119: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6509475708007812
    2. '   ' → logprob: -0.9009475708007812
    3. '    
' → logprob: -2.7759475708007812
    4. '\n' → logprob: -5.525947570800781
    5. '' → logprob: -6.150947570800781
    6. '  
' → logprob: -6.650947570800781
    7. ' 
' → logprob: -7.650947570800781
    8. '   
' → logprob: -7.775947570800781
    9. '<|end|>' → logprob: -8.275947570800781
    10. '
' → logprob: -8.650947570800781

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08141625672578812
    2. '
' → logprob: -3.081416368484497
    3. '    
' → logprob: -3.581416368484497
    4. ' if' → logprob: -6.456416130065918
    5. '\n' → logprob: -6.581416130065918
    6. '  
' → logprob: -7.956416130065918
    7. ' 
' → logprob: -8.081416130065918
    8. 'if' → logprob: -8.706416130065918
    9. '   
' → logprob: -8.706416130065918
    10. '' → logprob: -9.331416130065918

Token 121: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46258601546287537
    2. ' if' → logprob: -1.2125860452651978
    3. 'if' (adapté à ' if') → logprob: -3.087585926055908
    4. '    
' → logprob: -4.212585926055908
    5. ' 
' → logprob: -4.962585926055908
    6. '
' → logprob: -5.962585926055908
    7. '  
' → logprob: -7.212585926055908
    8. '\n' → logprob: -7.587585926055908
    9. '    ' → logprob: -7.837585926055908
    10. '	if' → logprob: -8.212586402893066

Token 122: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.00038574778591282666
    2. 'direction' → logprob: -7.875385761260986
    3. ' ' → logprob: -12.750385284423828
    4. ' ' → logprob: -13.375385284423828
    5. '(direction' → logprob: -14.000385284423828
    6. ' direct' → logprob: -16.250385284423828
    7. ' directions' → logprob: -16.875385284423828
    8. 'dire' → logprob: -17.625385284423828
    9. '_direction' → logprob: -18.250385284423828
    10. '.direction' → logprob: -18.375385284423828

Token 123: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014280329458415508
    2. '==' → logprob: -4.264280319213867
    3. ' =='' → logprob: -10.014280319213867
    4. '=='' → logprob: -10.764280319213867
    5. '=="' → logprob: -10.889280319213867
    6. ' ' → logprob: -11.264280319213867
    7. ' =="' → logprob: -11.389280319213867
    8. '=' → logprob: -13.139280319213867
    9. ' =' → logprob: -13.639280319213867
    10. ')' → logprob: -13.639280319213867

Token 124: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.532272458076477
    2. ' '' → logprob: -0.907272458076477
    3. ' "' → logprob: -5.2822723388671875
    4. '"' → logprob: -5.5322723388671875
    5. ' ' → logprob: -10.282272338867188
    6. ''s' → logprob: -11.032272338867188
    7. ''a' → logprob: -12.782272338867188
    8. ' ' → logprob: -12.907272338867188
    9. '(' → logprob: -13.157272338867188
    10. '1' → logprob: -13.407272338867188

Token 125: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0934050902724266
    2. '"' → logprob: -3.21840500831604
    3. ''U' → logprob: -4.218405246734619
    4. ''w' → logprob: -4.593405246734619
    5. ' '' → logprob: -4.718405246734619
    6. ''n' → logprob: -5.468405246734619
    7. ''r' → logprob: -5.968405246734619
    8. ''N' → logprob: -6.343405246734619
    9. ''t' → logprob: -6.468405246734619
    10. ''u' → logprob: -6.593405246734619

Token 126: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043086547404527664
    2. ' :' → logprob: -3.168086528778076
    3. ':
' → logprob: -9.543087005615234
    4. ' :
' → logprob: -11.168087005615234
    5. ' ' → logprob: -13.918087005615234
    6. '#:' → logprob: -15.793087005615234
    7. ':#' → logprob: -16.293087005615234
    8. '):' → logprob: -16.293087005615234
    9. ':

' → logprob: -16.793087005615234
    10. '   ' → logprob: -16.793087005615234

Token 127: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6123231053352356
    2. ' #' → logprob: -1.2373230457305908
    3. ' new' → logprob: -2.737323045730591
    4. '#' → logprob: -3.362323045730591
    5. '       ' → logprob: -3.987323045730591
    6. ' south' → logprob: -4.73732328414917
    7. '    ' → logprob: -4.86232328414917
    8. '
' → logprob: -5.11232328414917
    9. '    
' → logprob: -5.11232328414917
    10. ' top' → logprob: -5.23732328414917

Token 128: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13888655602931976
    2. ' #' → logprob: -2.7638864517211914
    3. '   ' → logprob: -3.8888864517211914
    4. 'north' → logprob: -4.138886451721191
    5. 'top' → logprob: -4.388886451721191
    6. 'south' → logprob: -5.388886451721191
    7. 'new' → logprob: -5.888886451721191
    8. ' north' → logprob: -5.888886451721191
    9. ' south' → logprob: -6.013886451721191
    10. ' new' → logprob: -6.513886451721191

Token 129: ' north' (ID: 16173)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.6787248253822327
    2. ' north' → logprob: -1.303724765777588
    3. ' east' → logprob: -2.178724765777588
    4. ' south' → logprob: -3.053724765777588
    5. 'east' → logprob: -3.553724765777588
    6. 'south' → logprob: -3.678724765777588
    7. 'roll' → logprob: -5.928724765777588
    8. ' roll' → logprob: -6.303724765777588
    9. '#' → logprob: -7.428724765777588
    10. ' East' → logprob: -7.928724765777588

Token 130: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6671497225761414
    2. ':
' → logprob: -0.7921497225761414
    3. '   ' → logprob: -4.292149543762207
    4. '
' → logprob: -4.292149543762207
    5. ',' → logprob: -5.917149543762207
    6. '       ' → logprob: -6.042149543762207
    7. '):
' → logprob: -7.417149543762207
    8. '    
' → logprob: -8.667149543762207
    9. ',
' → logprob: -8.917149543762207
    10. ' :
' → logprob: -9.042149543762207

Token 131: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34146857261657715
    2. '       ' → logprob: -1.7164685726165771
    3. ' top' → logprob: -3.466468572616577
    4. ' new' → logprob: -3.966468572616577
    5. ' return' → logprob: -4.216468811035156
    6. '
' → logprob: -4.216468811035156
    7. ' north' → logprob: -5.216468811035156
    8. 'top' → logprob: -5.341468811035156
    9. '    
' → logprob: -5.841468811035156
    10. 'return' → logprob: -5.966468811035156

Token 132: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6558261513710022
    2. 'return' (adapté à ' return') → logprob: -1.0308260917663574
    3. '   ' → logprob: -2.7808260917663574
    4. ' top' → logprob: -3.9058260917663574
    5. 'top' → logprob: -4.530826091766357
    6. ' new' → logprob: -4.780826091766357
    7. ' north' → logprob: -4.780826091766357
    8. 'north' → logprob: -4.905826091766357
    9. 'new' → logprob: -6.030826091766357
    10. ' (' → logprob: -6.280826091766357

Token 133: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.37827086448669434
    2. '(bottom' → logprob: -1.5032708644866943
    3. ' (' → logprob: -3.1282708644866943
    4. '(n' → logprob: -3.2532708644866943
    5. 'bottom' → logprob: -5.628271102905273
    6. '(' → logprob: -5.753271102905273
    7. '(
' → logprob: -7.253271102905273
    8. '[' → logprob: -7.753271102905273
    9. ' bottom' → logprob: -7.753271102905273
    10. 'south' → logprob: -7.753271102905273

Token 134: 'south' (ID: 145118)
  Prédit: 'south'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.08753518760204315
    2. 'north' → logprob: -2.7125351428985596
    3. ' south' → logprob: -4.087535381317139
    4. ' north' → logprob: -7.587535381317139
    5. 's' → logprob: -10.08753490447998
    6. 'n' → logprob: -10.21253490447998
    7. ' ' → logprob: -10.46253490447998
    8. 'sou' → logprob: -10.46253490447998
    9. '   ' → logprob: -11.58753490447998
    10. 'bottom' → logprob: -12.71253490447998

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006988536333665252
    2. ' ,' → logprob: -7.500699043273926
    3. ',
' → logprob: -9.500699043273926
    4. ',n' → logprob: -9.750699043273926
    5. ',b' → logprob: -12.625699043273926
    6. ' top' → logprob: -12.625699043273926
    7. 'top' → logprob: -13.500699043273926
    8. ',s' → logprob: -13.875699043273926
    9. 'op' → logprob: -14.500699043273926
    10. ' ' → logprob: -14.750699043273926

Token 136: ' north' (ID: 16173)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.002006791764870286
    2. ' north' → logprob: -6.627007007598877
    3. 'n' → logprob: -7.377007007598877
    4. '   ' → logprob: -10.502006530761719
    5. 'top' → logprob: -12.002006530761719
    6. '[n' → logprob: -12.127006530761719
    7. '(n' → logprob: -12.377006530761719
    8. 'nor' → logprob: -13.252006530761719
    9. '5' → logprob: -13.627006530761719
    10. ' ' → logprob: -13.627006530761719

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011546281166374683
    2. ' ,' → logprob: -6.87615442276001
    3. ',
' → logprob: -10.001154899597168
    4. ')' → logprob: -10.876154899597168
    5. '<|end|>' → logprob: -11.376154899597168
    6. 'bottom' → logprob: -12.001154899597168
    7. '),' → logprob: -12.001154899597168
    8. ',b' → logprob: -12.126154899597168
    9. 'top' → logprob: -12.126154899597168
    10. '6' → logprob: -12.251154899597168

Token 138: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.3534465432167053
    2. 'bottom' → logprob: -1.2284464836120605
    3. ' bottom' → logprob: -5.9784464836120605
    4. ' top' → logprob: -6.1034464836120605
    5. '6' → logprob: -8.978446960449219
    6. 'bot' → logprob: -10.853446960449219
    7. '7' → logprob: -11.103446960449219
    8. '```' → logprob: -11.228446960449219
    9. '1' → logprob: -11.353446960449219
    10. ' ' → logprob: -11.353446960449219

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017183588352054358
    2. ' ,' → logprob: -8.750171661376953
    3. ')' → logprob: -12.375171661376953
    4. ',b' → logprob: -12.750171661376953
    5. ',
' → logprob: -13.000171661376953
    6. '6' → logprob: -13.375171661376953
    7. '),' → logprob: -14.125171661376953
    8. '<|end|>' → logprob: -14.250171661376953
    9. 'bottom' → logprob: -15.250171661376953
    10. ' bottom' → logprob: -16.000171661376953

Token 140: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0007105246186256409
    2. ' bottom' → logprob: -7.250710487365723
    3. 'bot' → logprob: -15.375710487365723
    4. '   ' → logprob: -16.12571144104004
    5. '```' → logprob: -16.62571144104004
    6. '_bottom' → logprob: -17.12571144104004
    7. ' ' → logprob: -18.12571144104004
    8. '.bottom' → logprob: -18.50071144104004
    9. 'b' → logprob: -18.75071144104004
    10. 'ottom' → logprob: -19.00071144104004

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0514153428375721
    2. ')' → logprob: -3.17641544342041
    3. ' ,' → logprob: -5.17641544342041
    4. ' )' → logprob: -6.55141544342041
    5. '   ' → logprob: -6.67641544342041
    6. ' ' → logprob: -11.17641544342041
    7. ',
' → logprob: -11.80141544342041
    8. '<|end|>' → logprob: -11.92641544342041
    9. ')
' → logprob: -12.80141544342041
    10. '  ' → logprob: -12.80141544342041

Token 142: ' west' (ID: 14078)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.10029929131269455
    2. ' west' → logprob: -2.35029935836792
    3. '   ' → logprob: -9.850298881530762
    4. ' ' → logprob: -11.725298881530762
    5. '    ' → logprob: -11.975298881530762
    6. 'wes' → logprob: -11.975298881530762
    7. '4' → logprob: -12.100298881530762
    8. '       ' → logprob: -12.350298881530762
    9. '  ' → logprob: -12.975298881530762
    10. ' wes' → logprob: -13.600298881530762

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006395269301719964
    2. ' ,' → logprob: -7.50063943862915
    3. ')' → logprob: -9.500639915466309
    4. ',)' → logprob: -12.250639915466309
    5. ' )' → logprob: -13.000639915466309
    6. ',e' → logprob: -13.250639915466309
    7. ',
' → logprob: -13.875639915466309
    8. '<|end|>' → logprob: -14.375639915466309
    9. '),' → logprob: -15.000639915466309
    10. '   ' → logprob: -15.500639915466309

Token 144: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.06199278309941292
    2. ' east' → logprob: -2.811992883682251
    3. 'e' → logprob: -10.936992645263672
    4. ' ' → logprob: -12.686992645263672
    5. 'ea' → logprob: -14.561992645263672
    6. ')' → logprob: -14.874492645263672
    7. '-east' → logprob: -14.874492645263672
    8. '  ' → logprob: -14.999492645263672
    9. '   ' → logprob: -14.999492645263672
    10. '```' → logprob: -15.061992645263672

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005607473198324442
    2. '   ' → logprob: -5.505607604980469
    3. ')
' → logprob: -6.505607604980469
    4. ' )' → logprob: -10.380607604980469
    5. ')

' → logprob: -15.005607604980469
    6. '
' → logprob: -15.130607604980469
    7. ' )
' → logprob: -15.630607604980469
    8. ')n' → logprob: -15.755607604980469
    9. ',' → logprob: -15.880607604980469
    10. '),' → logprob: -16.13060760498047

Token 146: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.6636421084403992
    2. '   ' → logprob: -1.038642168045044
    3. ')' → logprob: -2.788642168045044
    4. ' elif' → logprob: -3.663642168045044
    5. '    
' → logprob: -4.288641929626465
    6. '
' → logprob: -5.163641929626465
    7. ' ' → logprob: -5.288641929626465
    8. '  
' → logprob: -5.663641929626465
    9. '<|end|>' → logprob: -6.038641929626465
    10. ',' → logprob: -6.163641929626465

Token 148: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.45633402466773987
    2. 'direction' → logprob: -1.4563339948654175
    3. '1' → logprob: -2.081334114074707
    4. ' ' → logprob: -4.831334114074707
    5. '(direction' → logprob: -7.706334114074707
    6. '   ' → logprob: -10.081334114074707
    7. '0' → logprob: -10.581334114074707
    8. ' (' → logprob: -11.206334114074707
    9. 'dire' → logprob: -11.581334114074707
    10. '(' → logprob: -12.206334114074707

Token 149: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005951552651822567
    2. '==' → logprob: -5.130951404571533
    3. ' ' → logprob: -11.755951881408691
    4. ' =' → logprob: -12.255951881408691
    5. ' ' → logprob: -12.255951881408691
    6. '=' → logprob: -13.255951881408691
    7. '[' → logprob: -13.880951881408691
    8. ')==' → logprob: -14.005951881408691
    9. ')' → logprob: -14.380951881408691
    10. ' ===' → logprob: -15.505951881408691

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1797584742307663
    2. ' ' → logprob: -1.8047584295272827
    3. '0' → logprob: -12.304758071899414
    4. '2' → logprob: -12.617258071899414
    5. '3' → logprob: -13.117258071899414
    6. '4' → logprob: -14.554758071899414
    7. '  ' → logprob: -15.179758071899414
    8. '<|end|>' → logprob: -15.242258071899414
    9. ' ' → logprob: -15.304758071899414
    10. '(' → logprob: -15.367258071899414

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001197370933368802
    2. ' ' → logprob: -6.751197338104248
    3. '3' → logprob: -11.001197814941406
    4. '2' → logprob: -11.626197814941406
    5. '0' → logprob: -14.251197814941406
    6. '4' → logprob: -15.126197814941406
    7. '
' → logprob: -15.688697814941406
    8. '   ' → logprob: -16.126197814941406
    9. '(' → logprob: -16.938697814941406
    10. '  ' → logprob: -17.251197814941406

Token 152: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002813194179907441
    2. ' :' → logprob: -5.877813339233398
    3. ' ' → logprob: -12.252813339233398
    4. ':#' → logprob: -13.002813339233398
    5. ':
' → logprob: -15.002813339233398
    6. ' #' → logprob: -15.127813339233398
    7. '(' → logprob: -15.377813339233398
    8. ',' → logprob: -16.7528133392334
    9. '):' → logprob: -16.8778133392334
    10. '#' → logprob: -16.8778133392334

Token 153: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3323925733566284
    2. ' (' → logprob: -1.4573925733566284
    3. '(' → logprob: -1.5823925733566284
    4. ' #' → logprob: -2.332392692565918
    5. '   ' → logprob: -3.207392692565918
    6. '#' → logprob: -3.207392692565918
    7. '1' → logprob: -3.457392692565918
    8. '0' → logprob: -3.707392692565918
    9. '(s' → logprob: -3.707392692565918
    10. ' south' → logprob: -4.707392692565918

Token 154: ' #' (ID: 1069)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8974587321281433
    2. '3' → logprob: -1.522458791732788
    3. '#' → logprob: -2.147458791732788
    4. '0' → logprob: -2.397458791732788
    5. ' ' → logprob: -2.522458791732788
    6. ' #' → logprob: -2.647458791732788
    7. '1' → logprob: -4.897458553314209
    8. '4' → logprob: -5.897458553314209
    9. ' south' → logprob: -6.397458553314209
    10. '(' → logprob: -7.022458553314209

Token 155: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.7485040426254272
    2. ' south' → logprob: -1.1235040426254272
    3. '1' → logprob: -1.7485040426254272
    4. 's' → logprob: -3.748504161834717
    5. 'east' → logprob: -6.748504161834717
    6. ' ' → logprob: -6.873504161834717
    7. ' east' → logprob: -6.998504161834717
    8. '2' → logprob: -7.498504161834717
    9. '4' → logprob: -8.748503684997559
    10. '0' → logprob: -8.748503684997559

Token 156: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03057563118636608
    2. '   ' → logprob: -3.7805755138397217
    3. ':
' → logprob: -5.155575752258301
    4. '       ' → logprob: -6.905575752258301
    5. ' :' → logprob: -9.2805757522583
    6. ',' → logprob: -9.4055757522583
    7. ':return' → logprob: -9.7805757522583
    8. '(' → logprob: -9.9055757522583
    9. '):' → logprob: -9.9055757522583
    10. ')' → logprob: -10.4055757522583

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4409133493900299
    2. '   ' → logprob: -1.3159133195877075
    3. '(' → logprob: -3.065913438796997
    4. ' return' → logprob: -3.440913438796997
    5. 'return' → logprob: -5.315913200378418
    6. ' (' → logprob: -5.565913200378418
    7. ':' → logprob: -8.440913200378418
    8. '    ' → logprob: -8.565913200378418
    9. '(top' → logprob: -9.065913200378418
    10. '	return' → logprob: -9.690913200378418

Token 158: ' return' (ID: 622)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12858687341213226
    2. '(n' → logprob: -2.503586769104004
    3. '(s' → logprob: -4.753586769104004
    4. '(' → logprob: -4.878586769104004
    5. '(bottom' → logprob: -4.878586769104004
    6. '   ' → logprob: -5.003586769104004
    7. '(top' → logprob: -5.378586769104004
    8. ' return' → logprob: -5.878586769104004
    9. 'return' (adapté à ' return') → logprob: -7.503586769104004
    10. '       ' → logprob: -8.503586769104004

Token 159: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20190967619419098
    2. ' (' → logprob: -1.7019096612930298
    3. '(' → logprob: -8.951910018920898
    4. '(bottom' → logprob: -8.951910018920898
    5. '(s' → logprob: -9.201910018920898
    6. '   ' → logprob: -9.451910018920898
    7. '(top' → logprob: -10.451910018920898
    8. ' ' → logprob: -10.701910018920898
    9. ' ' → logprob: -13.076910018920898
    10. '  ' → logprob: -13.201910018920898

Token 160: 'north' (ID: 132211)
  Prédit: 'north'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.09328402578830719
    2. '(n' → logprob: -2.5932841300964355
    3. ' north' → logprob: -4.8432841300964355
    4. 'n' → logprob: -5.2182841300964355
    5. '   ' → logprob: -7.3432841300964355
    6. 'bottom' → logprob: -9.343283653259277
    7. '[n' → logprob: -10.093283653259277
    8. '	n' → logprob: -10.343283653259277
    9. ' ' → logprob: -10.718283653259277
    10. ' (' → logprob: -10.843283653259277

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017040544480551034
    2. ' ,' → logprob: -9.125170707702637
    3. ',s' → logprob: -9.875170707702637
    4. ',b' → logprob: -12.250170707702637
    5. ',
' → logprob: -12.875170707702637
    6. ')' → logprob: -14.000170707702637
    7. 'bottom' → logprob: -14.750170707702637
    8. '<|end|>' → logprob: -15.000170707702637
    9. 's' → logprob: -15.125170707702637
    10. '),' → logprob: -15.250170707702637

Token 162: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.08150283247232437
    2. ' south' → logprob: -2.831502914428711
    3. 'bottom' → logprob: -4.331502914428711
    4. 's' → logprob: -5.331502914428711
    5. ' ' → logprob: -8.081502914428711
    6. ' bottom' → logprob: -8.206502914428711
    7. 'sou' → logprob: -8.206502914428711
    8. '   ' → logprob: -8.331502914428711
    9. ')' → logprob: -9.581502914428711
    10. ',' → logprob: -9.956502914428711

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015276329941116273
    2. ' ,' → logprob: -9.000152587890625
    3. ')' → logprob: -11.125152587890625
    4. 'top' → logprob: -12.000152587890625
    5. '(top' → logprob: -12.750152587890625
    6. ' top' → logprob: -13.250152587890625
    7. ',
' → logprob: -13.250152587890625
    8. '(' → logprob: -14.500152587890625
    9. '[top' → logprob: -14.625152587890625
    10. '),' → logprob: -15.500152587890625

Token 164: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.00680454121902585
    2. ' bottom' → logprob: -5.006804466247559
    3. '   ' → logprob: -9.631804466247559
    4. ' ' → logprob: -12.006804466247559
    5. 'bot' → logprob: -12.506804466247559
    6. 'b' → logprob: -13.006804466247559
    7. ',' → logprob: -13.256804466247559
    8. 'top' → logprob: -13.381804466247559
    9. '```' → logprob: -13.506804466247559
    10. '  ' → logprob: -13.756804466247559

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.927930654550437e-05
    2. ' ,' → logprob: -10.625029563903809
    3. ' top' → logprob: -13.125029563903809
    4. ',
' → logprob: -13.625029563903809
    5. 'top' → logprob: -13.625029563903809
    6. ')' → logprob: -15.250029563903809
    7. '[top' → logprob: -16.500028610229492
    8. '   ' → logprob: -16.875028610229492
    9. '),' → logprob: -16.875028610229492
    10. '(top' → logprob: -18.000028610229492

Token 166: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.011248587630689144
    2. ' top' → logprob: -4.511248588562012
    3. '   ' → logprob: -8.761248588562012
    4. ' ' → logprob: -10.511248588562012
    5. '       ' → logprob: -12.386248588562012
    6. '  ' → logprob: -12.511248588562012
    7. '    ' → logprob: -13.011248588562012
    8. '	top' → logprob: -13.136248588562012
    9. '     ' → logprob: -13.636248588562012
    10. ')' → logprob: -14.386248588562012

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024608144303783774
    2. ' ,' → logprob: -8.375246047973633
    3. '   ' → logprob: -11.875246047973633
    4. ')' → logprob: -12.125246047973633
    5. ',w' → logprob: -13.750246047973633
    6. ',
' → logprob: -15.125246047973633
    7. '       ' → logprob: -15.375246047973633
    8. '),' → logprob: -15.625246047973633
    9. '	' → logprob: -15.750246047973633
    10. ' ' → logprob: -15.875246047973633

Token 168: ' west' (ID: 14078)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.34880852699279785
    2. ' west' → logprob: -1.2238085269927979
    3. '    ' → logprob: -9.473808288574219
    4. '   ' → logprob: -9.473808288574219
    5. ' ' → logprob: -9.973808288574219
    6. '       ' → logprob: -10.473808288574219
    7. '     ' → logprob: -10.911308288574219
    8. 'w' → logprob: -11.286308288574219
    9. ' east' → logprob: -11.286308288574219
    10. 'east' → logprob: -11.598808288574219

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8590300139039755e-05
    2. ' ,' → logprob: -10.125048637390137
    3. ',e' → logprob: -11.750048637390137
    4. ')' → logprob: -14.750048637390137
    5. '   ' → logprob: -16.62504768371582
    6. ' east' → logprob: -17.25004768371582
    7. ',
' → logprob: -17.37504768371582
    8. '),' → logprob: -17.37504768371582
    9. '```' → logprob: -17.37504768371582
    10. 'east' → logprob: -17.87504768371582

Token 170: ' east' (ID: 23557)
  Prédit: ' east'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' east' → logprob: -0.5231906771659851
    2. 'east' → logprob: -0.8981906771659851
    3. 'e' → logprob: -10.14819049835205
    4. 'west' → logprob: -11.27319049835205
    5. ' ' → logprob: -12.27319049835205
    6. ' west' → logprob: -12.64819049835205
    7. '   ' → logprob: -13.77319049835205
    8. ' eas' → logprob: -13.89819049835205
    9. '-east' → logprob: -14.52319049835205
    10. 'ea' → logprob: -14.52319049835205

Token 171: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003276937175542116
    2. '   ' → logprob: -5.753276824951172
    3. ')
' → logprob: -9.628276824951172
    4. ' )' → logprob: -10.753276824951172
    5. '<|end|>' → logprob: -11.503276824951172
    6. ')return' → logprob: -14.878276824951172
    7. ' ' → logprob: -15.878276824951172
    8. '}' → logprob: -16.128276824951172
    9. '<|end|>' → logprob: -16.128276824951172
    10. ',' → logprob: -16.128276824951172

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01337185874581337
    2. ' elif' → logprob: -4.63837194442749
    3. 'elif' → logprob: -6.01337194442749
    4. '	elif' → logprob: -7.63837194442749
    5. ' else' → logprob: -8.763371467590332
    6. '<|end|>' → logprob: -9.013371467590332
    7. '    
' → logprob: -9.013371467590332
    8. ' ' → logprob: -9.013371467590332
    9. '    ' → logprob: -9.888371467590332
    10. ')' → logprob: -10.763371467590332

Token 173: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.36452800035476685
    2. ' elif' → logprob: -1.239527940750122
    3. '   ' → logprob: -4.739528179168701
    4. ' else' → logprob: -5.614528179168701
    5. 'else' → logprob: -5.989528179168701
    6. '2' → logprob: -7.864528179168701
    7. ' ' → logprob: -8.239527702331543
    8. '	elif' → logprob: -8.489527702331543
    9. '0' → logprob: -9.489527702331543
    10. ')' → logprob: -10.239527702331543

Token 174: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.8126493692398071
    2. 'direction' → logprob: -1.3126493692398071
    3. '2' → logprob: -1.4376493692398071
    4. ' ' → logprob: -3.0626492500305176
    5. '(direction' → logprob: -5.937649250030518
    6. ' (' → logprob: -9.562649726867676
    7. '0' → logprob: -9.687649726867676
    8. '   ' → logprob: -10.062649726867676
    9. '1' → logprob: -10.187649726867676
    10. '(' → logprob: -10.312649726867676

Token 175: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029772823676466942
    2. '==' → logprob: -3.5297727584838867
    3. '=' → logprob: -11.779772758483887
    4. ' ' → logprob: -11.779772758483887
    5. ' =' → logprob: -12.529772758483887
    6. ' ' → logprob: -14.404772758483887
    7. ')' → logprob: -14.404772758483887
    8. '[' → logprob: -14.529772758483887
    9. '2' → logprob: -14.904772758483887
    10. ')==' → logprob: -15.654772758483887

Token 176: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06995365768671036
    2. ' ' → logprob: -2.694953680038452
    3. '3' → logprob: -12.069953918457031
    4. '   ' → logprob: -12.569953918457031
    5. '  ' → logprob: -12.819953918457031
    6. '
' → logprob: -13.882453918457031
    7. '4' → logprob: -14.382453918457031
    8. '    ' → logprob: -14.632453918457031
    9. '```' → logprob: -14.882453918457031
    10. '     ' → logprob: -15.257453918457031

Token 177: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0032358209136873484
    2. ' ' → logprob: -5.753235816955566
    3. '3' → logprob: -10.003235816955566
    4. '   ' → logprob: -12.565735816955566
    5. '4' → logprob: -12.753235816955566
    6. '  ' → logprob: -13.628235816955566
    7. '
' → logprob: -14.003235816955566
    8. ''' → logprob: -14.753235816955566
    9. '       ' → logprob: -14.753235816955566
    10. '     ' → logprob: -15.003235816955566

Token 178: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010362643515691161
    2. ' :' → logprob: -6.876036167144775
    3. '(' → logprob: -13.501036643981934
    4. ' ' → logprob: -14.251036643981934
    5. ' (' → logprob: -15.126036643981934
    6. ',' → logprob: -15.376036643981934
    7. ':(' → logprob: -15.876036643981934
    8. ':#' → logprob: -16.001035690307617
    9. ':
' → logprob: -16.001035690307617
    10. ' :(' → logprob: -16.001035690307617

Token 179: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02160467579960823
    2. '(' → logprob: -4.271604537963867
    3. '(e' → logprob: -5.271604537963867
    4. '(w' → logprob: -6.771604537963867
    5. ' east' → logprob: -7.646604537963867
    6. '   ' → logprob: -8.271604537963867
    7. ' ' → logprob: -8.771604537963867
    8. ' west' → logprob: -9.396604537963867
    9. '(s' → logprob: -10.146604537963867
    10. 'east' → logprob: -10.396604537963867

Token 180: ' #' (ID: 1069)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.7810449004173279
    2. '(' → logprob: -1.6560449600219727
    3. '(w' → logprob: -1.9060449600219727
    4. ' (' → logprob: -2.0310449600219727
    5. '#' → logprob: -3.6560449600219727
    6. ' ' → logprob: -4.156044960021973
    7. '   ' → logprob: -4.531044960021973
    8. 'east' → logprob: -4.656044960021973
    9. ' #' → logprob: -5.906044960021973
    10. 'e' → logprob: -6.281044960021973

Token 181: ' west' (ID: 14078)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.35130739212036133
    2. ' east' → logprob: -1.7263073921203613
    3. 'west' → logprob: -2.2263073921203613
    4. ' west' → logprob: -4.601307392120361
    5. ' ' → logprob: -8.226306915283203
    6. '4' → logprob: -10.851306915283203
    7. 'roll' → logprob: -11.226306915283203
    8. '   ' → logprob: -11.976306915283203
    9. '3' → logprob: -12.476306915283203
    10. 'e' → logprob: -12.601306915283203

Token 182: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00864282064139843
    2. ':
' → logprob: -5.008642673492432
    3. '   ' → logprob: -6.383642673492432
    4. ' :' → logprob: -8.75864315032959
    5. ',' → logprob: -10.75864315032959
    6. ':return' → logprob: -10.88364315032959
    7. ':

' → logprob: -11.13364315032959
    8. '):' → logprob: -12.25864315032959
    9. ' :
' → logprob: -12.38364315032959
    10. '=' → logprob: -12.75864315032959

Token 183: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21916095912456512
    2. '(' → logprob: -2.094161033630371
    3. '(top' → logprob: -2.969161033630371
    4. ' (' → logprob: -3.844161033630371
    5. '(e' → logprob: -7.969161033630371
    6. '(w' → logprob: -8.844161033630371
    7. ' return' → logprob: -9.469161033630371
    8. 'return' → logprob: -9.469161033630371
    9. ' top' → logprob: -10.094161033630371
    10. '(bottom' → logprob: -10.219161033630371

Token 184: ' return' (ID: 622)
  Prédit: '(top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.33853307366371155
    2. ' (' → logprob: -1.9635330438613892
    3. '(e' → logprob: -2.8385331630706787
    4. '(' → logprob: -2.8385331630706787
    5. '(bottom' → logprob: -4.0885329246521
    6. '   ' → logprob: -4.5885329246521
    7. ' east' → logprob: -6.9635329246521
    8. 'east' → logprob: -7.2135329246521
    9. 'return' (adapté à ' return') → logprob: -8.588533401489258
    10. '(t' → logprob: -8.588533401489258

Token 185: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.42030835151672363
    2. '(e' → logprob: -1.2953083515167236
    3. '(top' → logprob: -3.0453083515167236
    4. '(' → logprob: -3.9203083515167236
    5. '(bottom' → logprob: -6.6703081130981445
    6. '(w' → logprob: -8.045308113098145
    7. '(s' → logprob: -8.795308113098145
    8. '(n' → logprob: -9.670308113098145
    9. '(d' → logprob: -10.670308113098145
    10. '(t' → logprob: -10.795308113098145

Token 186: 'east' (ID: 157488)
  Prédit: 'east'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.006864678580313921
    2. ' east' → logprob: -5.131864547729492
    3. '(e' → logprob: -7.631864547729492
    4. 'e' → logprob: -8.006864547729492
    5. 'top' → logprob: -9.381864547729492
    6. 'west' → logprob: -11.381864547729492
    7. 'bottom' → logprob: -12.131864547729492
    8. '(' → logprob: -12.756864547729492
    9. '   ' → logprob: -13.131864547729492
    10. ' (' → logprob: -13.256864547729492

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0033853515051305e-05
    2. ' ,' → logprob: -9.750060081481934
    3. ')' → logprob: -14.000060081481934
    4. ',
' → logprob: -14.750060081481934
    5. ',b' → logprob: -15.375060081481934
    6. '),' → logprob: -17.250059127807617
    7. ',w' → logprob: -17.500059127807617
    8. ' ' → logprob: -17.937559127807617
    9. '```' → logprob: -18.000059127807617
    10. ',

' → logprob: -18.187559127807617

Token 188: ' west' (ID: 14078)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.034352950751781464
    2. ' west' → logprob: -3.409353017807007
    3. '4' → logprob: -8.284353256225586
    4. '   ' → logprob: -8.659353256225586
    5. ' ' → logprob: -8.784353256225586
    6. '  ' → logprob: -10.284353256225586
    7. '```' → logprob: -10.909353256225586
    8. '    ' → logprob: -11.159353256225586
    9. '
' → logprob: -11.159353256225586
    10. 'w' → logprob: -11.784353256225586

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003240578342229128
    2. ' ,' → logprob: -5.753240585327148
    3. ')' → logprob: -10.503240585327148
    4. '   ' → logprob: -11.128240585327148
    5. ' ' → logprob: -11.628240585327148
    6. '),' → logprob: -12.628240585327148
    7. ' top' → logprob: -12.753240585327148
    8. ',
' → logprob: -13.753240585327148
    9. '  ' → logprob: -13.878240585327148
    10. '3' → logprob: -14.253240585327148

Token 190: ' north' (ID: 16173)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.6022256016731262
    2. 'bottom' → logprob: -1.2272255420684814
    3. 'north' → logprob: -2.4772255420684814
    4. 'south' → logprob: -3.1022255420684814
    5. 'west' → logprob: -4.7272257804870605
    6. ' top' → logprob: -5.1022257804870605
    7. ' south' → logprob: -5.2272257804870605
    8. ' bottom' → logprob: -5.4772257804870605
    9. ' north' → logprob: -5.9772257804870605
    10. '```' → logprob: -7.3522257804870605

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005196703714318573
    2. ' ,' → logprob: -7.625519752502441
    3. ')' → logprob: -10.625519752502441
    4. '   ' → logprob: -13.125519752502441
    5. '),' → logprob: -13.625519752502441
    6. ' ' → logprob: -14.000519752502441
    7. ',
' → logprob: -14.375519752502441
    8. ',

' → logprob: -14.875519752502441
    9. ',s' → logprob: -15.375519752502441
    10. ',)' → logprob: -15.375519752502441

Token 192: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.0028665661811828613
    2. ' south' → logprob: -5.877866744995117
    3. '```' → logprob: -10.502866744995117
    4. 'north' → logprob: -11.002866744995117
    5. 'sou' → logprob: -12.127866744995117
    6. 's' → logprob: -12.752866744995117
    7. ',' → logprob: -13.127866744995117
    8. '  ' → logprob: -13.752866744995117
    9. '   ' → logprob: -13.877866744995117
    10. ' ' → logprob: -14.002866744995117

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005832957685925066
    2. ' ,' → logprob: -7.500583171844482
    3. '   ' → logprob: -10.62558364868164
    4. ')' → logprob: -12.25058364868164
    5. ',
' → logprob: -14.75058364868164
    6. '),' → logprob: -14.87558364868164
    7. ' ' → logprob: -15.50058364868164
    8. '  ' → logprob: -16.25058364868164
    9. '4' → logprob: -17.37558364868164
    10. ',)' → logprob: -17.50058364868164

Token 194: ' top' (ID: 2344)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.22898830473423004
    2. 'top' → logprob: -1.6039882898330688
    3. ' bottom' → logprob: -5.728988170623779
    4. ' top' → logprob: -8.103988647460938
    5. 'bot' → logprob: -11.728988647460938
    6. '```' → logprob: -12.478988647460938
    7. '   ' → logprob: -13.728988647460938
    8. ' ' → logprob: -13.853988647460938
    9. '(bottom' → logprob: -14.728988647460938
    10. 'op' → logprob: -15.103988647460938

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.310693111619912e-05
    2. ' ,' → logprob: -10.250042915344238
    3. ',b' → logprob: -12.250042915344238
    4. ')' → logprob: -13.125042915344238
    5. '),' → logprob: -15.375042915344238
    6. ',)' → logprob: -15.375042915344238
    7. ',
' → logprob: -16.750043869018555
    8. '4' → logprob: -17.000043869018555
    9. '   ' → logprob: -17.125043869018555
    10. ' bottom' → logprob: -17.312543869018555

Token 196: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0040807779878377914
    2. ' bottom' → logprob: -5.504080772399902
    3. 'bot' → logprob: -13.754080772399902
    4. 'west' → logprob: -14.129080772399902
    5. 'down' → logprob: -15.379080772399902
    6. 'left' → logprob: -16.87908172607422
    7. ' ' → logprob: -17.12908172607422
    8. '(bottom' → logprob: -17.12908172607422
    9. 'b' → logprob: -17.37908172607422
    10. 'top' → logprob: -17.87908172607422

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011942865327000618
    2. ')
' → logprob: -5.0119428634643555
    3. '   ' → logprob: -5.2619428634643555
    4. ' )' → logprob: -10.636942863464355
    5. ')
' → logprob: -13.011942863464355
    6. ' )
' → logprob: -13.886942863464355
    7. ' ' → logprob: -14.261942863464355
    8. '  ' → logprob: -16.011943817138672
    9. ')

' → logprob: -16.011943817138672
    10. '4' → logprob: -16.386943817138672

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04106909781694412
    2. 'elif' → logprob: -3.9160690307617188
    3. ' elif' → logprob: -4.041069030761719
    4. '	elif' → logprob: -6.666069030761719
    5. '<|end|>' → logprob: -7.416069030761719
    6. ')' → logprob: -8.416069030761719
    7. ' ' → logprob: -8.541069030761719
    8. ' else' → logprob: -8.916069030761719
    9. '    
' → logprob: -9.041069030761719
    10. 'else' → logprob: -9.791069030761719

Token 199: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.06510341167449951
    2. ' elif' → logprob: -3.190103530883789
    3. '   ' → logprob: -4.065103530883789
    4. 'else' (adapté à ' else') → logprob: -5.565103530883789
    5. ' else' → logprob: -7.190103530883789
    6. '	elif' → logprob: -9.690103530883789
    7. ' ' → logprob: -10.315103530883789
    8. ')' → logprob: -11.815103530883789
    9. '3' → logprob: -12.690103530883789
    10. '  ' → logprob: -12.940103530883789

Token 200: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010127831774298102
    2. ' :' → logprob: -9.500101089477539
    3. ':
' → logprob: -10.750101089477539
    4. ':#' → logprob: -12.875101089477539
    5. '   ' → logprob: -13.875101089477539
    6. ' ' → logprob: -14.125101089477539
    7. '  ' → logprob: -15.000101089477539
    8. ':return' → logprob: -16.12510108947754
    9. '4' → logprob: -16.62510108947754
    10. '#:' → logprob: -16.62510108947754

Token 201: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.483577162027359
    2. '   ' → logprob: -1.2335771322250366
    3. '(' → logprob: -2.608577251434326
    4. '(top' → logprob: -5.233577251434326
    5. ' return' → logprob: -5.733577251434326
    6. 'return' → logprob: -5.983577251434326
    7. '(w' → logprob: -6.108577251434326
    8. ' #' → logprob: -6.608577251434326
    9. '#' → logprob: -7.233577251434326
    10. ' ' → logprob: -7.358577251434326

Token 202: ' #' (ID: 1069)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.04662606120109558
    2. '(' → logprob: -3.296626091003418
    3. ' (' → logprob: -4.796626091003418
    4. '   ' → logprob: -8.671626091003418
    5. '(e' → logprob: -9.546626091003418
    6. ' ' → logprob: -10.796626091003418
    7. '  ' → logprob: -12.296626091003418
    8. '(up' → logprob: -12.796626091003418
    9. '(right' → logprob: -12.796626091003418
    10. '(t' → logprob: -13.171626091003418

Token 203: ' east' (ID: 23557)
  Prédit: ' east'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' east' → logprob: -0.04284902289509773
    2. 'east' → logprob: -3.542849063873291
    3. '(' → logprob: -4.792849063873291
    4. ' (' → logprob: -5.542849063873291
    5. ' ' → logprob: -7.792849063873291
    6. '(e' → logprob: -9.167848587036133
    7. '   ' → logprob: -9.167848587036133
    8. ' direction' → logprob: -9.917848587036133
    9. '3' → logprob: -9.917848587036133
    10. '  ' → logprob: -9.917848587036133

Token 204: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4893237054347992
    2. '(w' → logprob: -1.4893237352371216
    3. ' (' → logprob: -2.489323616027832
    4. '(' → logprob: -2.614323616027832
    5. '       ' → logprob: -5.989323616027832
    6. '(top' → logprob: -6.489323616027832
    7. 'return' → logprob: -7.989323616027832
    8. ' return' → logprob: -8.614323616027832
    9. '(n' → logprob: -8.864323616027832
    10. '  ' → logprob: -9.364323616027832

Token 205: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5254345536231995
    2. '(w' → logprob: -1.1504344940185547
    3. '(' → logprob: -2.5254344940185547
    4. ' (' → logprob: -4.525434494018555
    5. '(top' → logprob: -7.525434494018555
    6. '       ' → logprob: -7.900434494018555
    7. 'return' → logprob: -9.275434494018555
    8. '(
' → logprob: -9.525434494018555
    9. 'west' → logprob: -10.025434494018555
    10. '    ' → logprob: -10.150434494018555

Token 206: ' return' (ID: 622)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0006323783891275525
    2. ' (' → logprob: -7.875632286071777
    3. '(' → logprob: -8.375632286071777
    4. '   ' → logprob: -10.875632286071777
    5. 'west' → logprob: -13.750632286071777
    6. '(W' → logprob: -14.125632286071777
    7. '(top' → logprob: -15.375632286071777
    8. ' ' → logprob: -15.375632286071777
    9. '(s' → logprob: -15.750632286071777
    10. '	w' → logprob: -16.125633239746094

Token 207: ' (' (ID: 350)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.003207538742572069
    2. ' (' → logprob: -6.253207683563232
    3. '(top' → logprob: -7.003207683563232
    4. '(bottom' → logprob: -8.503207206726074
    5. '(n' → logprob: -9.378207206726074
    6. '(' → logprob: -9.503207206726074
    7. '(s' → logprob: -12.753207206726074
    8. '(t' → logprob: -14.003207206726074
    9. '(W' → logprob: -14.128207206726074
    10. '(d' → logprob: -14.628207206726074

Token 208: 'west' (ID: 14914)
  Prédit: 'west'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.009080009534955025
    2. ' west' → logprob: -4.759079933166504
    3. '(w' → logprob: -7.884079933166504
    4. ' ' → logprob: -10.384079933166504
    5. '   ' → logprob: -10.509079933166504
    6. 'w' → logprob: -11.134079933166504
    7. '	w' → logprob: -12.634079933166504
    8. '(' → logprob: -12.634079933166504
    9. '  ' → logprob: -13.009079933166504
    10. '/w' → logprob: -13.384079933166504

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4021237802808173e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',w' → logprob: -13.875014305114746
    4. ')' → logprob: -18.50001335144043
    5. ',
' → logprob: -18.75001335144043
    6. '‌,' → logprob: -18.75001335144043
    7. ',d' → logprob: -19.12501335144043
    8. ',e' → logprob: -19.50001335144043
    9. ',right' → logprob: -19.50001335144043
    10. ',b' → logprob: -19.62501335144043

Token 210: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.018152397125959396
    2. ' east' → logprob: -4.018152236938477
    3. 'top' → logprob: -14.143152236938477
    4. 'e' → logprob: -14.268152236938477
    5. 'west' → logprob: -15.018152236938477
    6. '4' → logprob: -15.268152236938477
    7. 'bottom' → logprob: -16.018152236938477
    8. '   ' → logprob: -16.393152236938477
    9. 'four' → logprob: -16.518152236938477
    10. ' ' → logprob: -16.518152236938477

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004240011621732265
    2. ' ,' → logprob: -7.875423908233643
    3. ',n' → logprob: -10.1254243850708
    4. ',
' → logprob: -13.3754243850708
    5. ' top' → logprob: -14.2504243850708
    6. 'north' → logprob: -14.8754243850708
    7. 'n' → logprob: -15.0004243850708
    8. ')' → logprob: -15.3754243850708
    9. 'top' → logprob: -15.6254243850708
    10. '),' → logprob: -16.000423431396484

Token 212: ' north' (ID: 16173)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.0011732018319889903
    2. ' north' → logprob: -6.75117301940918
    3. 'n' → logprob: -13.12617301940918
    4. '   ' → logprob: -15.37617301940918
    5. ' ' → logprob: -15.62617301940918
    6. '```' → logprob: -16.00117301940918
    7. 'nor' → logprob: -16.50117301940918
    8. 'python' → logprob: -16.62617301940918
    9. ')' → logprob: -16.62617301940918
    10. '<|end|>' → logprob: -16.87617301940918

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010783452307805419
    2. ',s' → logprob: -9.500107765197754
    3. ' ,' → logprob: -10.375107765197754
    4. ')' → logprob: -14.125107765197754
    5. ',
' → logprob: -14.875107765197754
    6. ' south' → logprob: -15.875107765197754
    7. 'south' → logprob: -16.00010871887207
    8. ',

' → logprob: -16.37510871887207
    9. 's' → logprob: -16.50010871887207
    10. '),' → logprob: -16.87510871887207

Token 214: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.008651564829051495
    2. ' south' → logprob: -4.7586517333984375
    3. ' ' → logprob: -11.258651733398438
    4. 'sou' → logprob: -11.508651733398438
    5. 's' → logprob: -12.258651733398438
    6. '   ' → logprob: -13.258651733398438
    7. '
' → logprob: -13.633651733398438
    8. '  ' → logprob: -13.883651733398438
    9. ',' → logprob: -14.008651733398438
    10. ' ' → logprob: -14.258651733398438

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001593195047462359
    2. ' ,' → logprob: -8.75015926361084
    3. ',
' → logprob: -14.75015926361084
    4. ' top' → logprob: -15.50015926361084
    5. ')' → logprob: -16.250160217285156
    6. 'top' → logprob: -16.750160217285156
    7. '),' → logprob: -17.250160217285156
    8. '‌,' → logprob: -18.375160217285156
    9. '[top' → logprob: -18.500160217285156
    10. '   ' → logprob: -18.500160217285156

Token 216: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.011100047267973423
    2. ' bottom' → logprob: -4.511099815368652
    3. 'top' → logprob: -9.886099815368652
    4. '   ' → logprob: -14.761099815368652
    5. ' top' → logprob: -14.886099815368652
    6. 'bot' → logprob: -15.261099815368652
    7. ' ' → logprob: -16.01110076904297
    8. '  ' → logprob: -17.13610076904297
    9. '(bottom' → logprob: -17.51110076904297
    10. '    ' → logprob: -17.63610076904297

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.999452772201039e-05
    2. ' ,' → logprob: -11.000029563903809
    3. ' top' → logprob: -11.625029563903809
    4. 'top' → logprob: -12.500029563903809
    5. ',
' → logprob: -14.875029563903809
    6. ')' → logprob: -15.875029563903809
    7. '),' → logprob: -17.000030517578125
    8. '[top' → logprob: -17.125030517578125
    9. ' ' → logprob: -18.000030517578125
    10. '	top' → logprob: -18.875030517578125

Token 218: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0002613358374219388
    2. ' top' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.750261306762695
    4. '	top' → logprob: -17.625261306762695
    5. '[top' → logprob: -17.875261306762695
    6. ' ' → logprob: -17.875261306762695
    7. 'bottom' → logprob: -19.625261306762695
    8. 'Top' → logprob: -19.875261306762695
    9. '(top' → logprob: -19.875261306762695
    10. 't' → logprob: -20.000261306762695

Token 219: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2113979209971149e-05
    2. ')
' → logprob: -11.750012397766113
    3. ' )' → logprob: -12.625012397766113
    4. '}' → logprob: -14.625012397766113
    5. ')

' → logprob: -15.750012397766113
    6. ')}' → logprob: -16.500011444091797
    7. '   ' → logprob: -16.625011444091797
    8. ')return' → logprob: -18.625011444091797
    9. '<|end|>' → logprob: -18.750011444091797
    10. '))' → logprob: -18.875011444091797

Token 220: 'while' (ID: 7032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7889789938926697
    2. 'def' → logprob: -1.4139790534973145
    3. 'd' → logprob: -1.9139790534973145
    4. '#' → logprob: -2.6639790534973145
    5. '[' → logprob: -3.6639790534973145
    6. '.' → logprob: -4.9139790534973145
    7. ' ' → logprob: -5.0389790534973145
    8. '(' → logprob: -5.2889790534973145
    9. ',' → logprob: -5.2889790534973145
    10. 'n' → logprob: -5.4139790534973145

Token 221: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.002192852320149541
    2. 'True' → logprob: -6.127192974090576
    3. '(True' → logprob: -12.877192497253418
    4. '=True' → logprob: -13.627192497253418
    5. ' ' → logprob: -13.877192497253418
    6. ' not' → logprob: -14.002192497253418
    7. ' T' → logprob: -14.252192497253418
    8. ' n' → logprob: -15.002192497253418
    9. ' input' → logprob: -15.252192497253418
    10. ' len' → logprob: -15.752192497253418

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017040544480551034
    2. ' :' → logprob: -8.875170707702637
    3. '():' → logprob: -10.750170707702637
    4. ':
' → logprob: -12.250170707702637
    5. ':**' → logprob: -13.125170707702637
    6. ',' → logprob: -14.125170707702637
    7. '):' → logprob: -14.250170707702637
    8. '.' → logprob: -15.875170707702637
    9. ',:' → logprob: -16.50016975402832
    10. ':

' → logprob: -16.62516975402832

Token 223: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.41271060705184937
    2. ' n' → logprob: -1.7877106666564941
    3. '   ' → logprob: -2.287710666656494
    4. ' line' → logprob: -3.162710666656494
    5. ' try' → logprob: -3.787710666656494
    6. 'try' → logprob: -5.787710666656494
    7. 'N' → logprob: -7.412710666656494
    8. 'line' → logprob: -8.162710189819336
    9. '	n' → logprob: -8.662710189819336
    10. ' N' → logprob: -9.287710189819336

Token 224: ' h' (ID: 312)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4069153368473053
    2. 'h' (adapté à ' h') → logprob: -1.781915307044983
    3. 'W' → logprob: -3.1569154262542725
    4. 'N' → logprob: -3.2819154262542725
    5. 'w' → logprob: -3.2819154262542725
    6. 'n' → logprob: -3.5319154262542725
    7. 'R' → logprob: -4.781915187835693
    8. 'line' → logprob: -5.656915187835693
    9. 'r' → logprob: -5.781915187835693
    10. ' H' → logprob: -6.281915187835693

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014964618720114231
    2. ' =' → logprob: -4.764964580535889
    3. '=' → logprob: -5.264964580535889
    4. ',w' → logprob: -8.014965057373047
    5. 'e' → logprob: -8.389965057373047
    6. ' ,' → logprob: -8.764965057373047
    7. ',e' → logprob: -8.889965057373047
    8. 'eight' → logprob: -9.889965057373047
    9. '=int' → logprob: -10.014965057373047
    10. '   ' → logprob: -10.514965057373047

Token 226: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0004951290902681649
    2. ' w' → logprob: -7.625494956970215
    3. 'b' → logprob: -12.250494956970215
    4. 'n' → logprob: -14.125494956970215
    5. 'l' → logprob: -14.750494956970215
    6. 't' → logprob: -15.000494956970215
    7. 'k' → logprob: -15.625494956970215
    8. 'm' → logprob: -15.750494956970215
    9. 'r' → logprob: -15.875494956970215
    10. '
' → logprob: -16.62549591064453

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0798487737774849
    2. ' =' → logprob: -2.5798487663269043
    3. ',' → logprob: -6.954848766326904
    4. '=input' → logprob: -13.204849243164062
    5. ')' → logprob: -14.079849243164062
    6. '=

' → logprob: -14.579849243164062
    7. ' ' → logprob: -14.954849243164062
    8. ' ,' → logprob: -15.204849243164062
    9. '=int' → logprob: -15.454849243164062
    10. ')=' → logprob: -16.204849243164062

Token 228: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2018074095249176
    2. 'map' → logprob: -1.7018073797225952
    3. ' input' → logprob: -8.326807022094727
    4. 'input' → logprob: -9.326807022094727
    5. ' list' → logprob: -10.326807022094727
    6. 'list' → logprob: -10.826807022094727
    7. ' ' → logprob: -12.701807022094727
    8. '	map' → logprob: -12.826807022094727
    9. '[' → logprob: -12.951807022094727
    10. ' [' → logprob: -14.201807022094727

Token 229: '(int' (ID: 2742)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.551568865776062
    2. '(' → logprob: -1.551568865776062
    3. '(int' → logprob: -1.551568865776062
    4. 'input' → logprob: -10.176568984985352
    5. '(str' → logprob: -10.301568984985352
    6. 'int' → logprob: -10.801568984985352
    7. '(
' → logprob: -11.926568984985352
    8. '(in' → logprob: -11.926568984985352
    9. ' (' → logprob: -12.801568984985352
    10. ' input' → logprob: -12.926568984985352

Token 230: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.9321967363357544
    2. ',' → logprob: -1.1821967363357544
    3. ',input' → logprob: -1.4321967363357544
    4. '(' → logprob: -3.557196617126465
    5. '(),' → logprob: -4.182196617126465
    6. 'input' → logprob: -4.432196617126465
    7. '(sys' → logprob: -5.557196617126465
    8. ')' → logprob: -7.057196617126465
    9. '()' → logprob: -9.057196617126465
    10. ' input' → logprob: -9.432196617126465

Token 231: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005233882926404476
    2. ' input' → logprob: -5.2552337646484375
    3. '(input' → logprob: -18.505233764648438
    4. 'map' → logprob: -19.380233764648438
    5. ',input' → logprob: -19.505233764648438
    6. '=input' → logprob: -19.630233764648438
    7. '	input' → logprob: -19.755233764648438
    8. ' ' → logprob: -20.005233764648438
    9. 'inp' → logprob: -20.130233764648438
    10. 'sys' → logprob: -20.255233764648438

Token 232: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.176947600673884e-05
    2. '()' → logprob: -10.750021934509277
    3. ' ().' → logprob: -15.500021934509277
    4. '()
' → logprob: -18.00002098083496
    5. '(' → logprob: -19.00002098083496
    6. '()

' → logprob: -19.75002098083496
    7. '.' → logprob: -20.62502098083496
    8. '())' → logprob: -20.75002098083496
    9. '().'' → logprob: -21.50002098083496
    10. '()?.' → logprob: -21.62502098083496

Token 233: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.31626826524734497
    2. 'strip' → logprob: -1.3162682056427002
    3. 'rstrip' → logprob: -5.816268444061279
    4. '().' → logprob: -10.941267967224121
    5. ' strip' → logprob: -13.191267967224121
    6. 'read' → logprob: -13.566267967224121
    7. ' split' → logprob: -13.816267967224121
    8. '(split' → logprob: -14.066267967224121
    9. '(strip' → logprob: -15.441267967224121
    10. ')' → logprob: -15.941267967224121

Token 234: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13093934953212738
    2. ')' → logprob: -2.130939245223999
    3. '()' → logprob: -5.630939483642578
    4. '())
' → logprob: -8.255939483642578
    5. '(' → logprob: -8.880939483642578
    6. '))' → logprob: -12.005939483642578
    7. ')
' → logprob: -12.630939483642578
    8. '()))' → logprob: -12.630939483642578
    9. ' ())' → logprob: -13.505939483642578
    10. '(),' → logprob: -13.755939483642578

Token 235: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0031880477908998728
    2. ' if' → logprob: -5.753188133239746
    3. '0' → logprob: -12.503188133239746
    4. '
' → logprob: -13.003188133239746
    5. '<|end|>' → logprob: -13.503188133239746
    6. '#' → logprob: -14.003188133239746
    7. 'If' → logprob: -14.378188133239746
    8. ' 
' → logprob: -14.503188133239746
    9. 'i' → logprob: -15.753188133239746
    10. ',' → logprob: -16.12818717956543

Token 237: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20141451060771942
    2. ' h' → logprob: -1.7014144659042358
    3. ' not' → logprob: -14.201414108276367
    4. '(h' → logprob: -14.951414108276367
    5. ' ' → logprob: -16.201414108276367
    6. '	h' → logprob: -16.576414108276367
    7. '0' → logprob: -17.326414108276367
    8. ' (' → logprob: -17.576414108276367
    9. '(' → logprob: -17.701414108276367
    10. 'not' → logprob: -18.451414108276367

Token 238: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5762286186218262
    2. ' ==' → logprob: -0.8262286186218262
    3. '=' → logprob: -8.201229095458984
    4. ' =' → logprob: -11.951229095458984
    5. ' ' → logprob: -13.326229095458984
    6. '<=' → logprob: -13.576229095458984
    7. '==
' → logprob: -13.826229095458984
    8. '===' → logprob: -13.951229095458984
    9. ' <=' → logprob: -14.076229095458984
    10. ')==' → logprob: -14.201229095458984

Token 239: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '۰' → logprob: -17.00048828125
    4. ' ' → logprob: -17.18798828125
    5. '<|end|>' → logprob: -17.37548828125
    6. '=' → logprob: -18.25048828125
    7. '  ' → logprob: -18.31298828125
    8. '   ' → logprob: -18.68798828125
    9. '０' → logprob: -19.00048828125
    10. '

' → logprob: -19.06298828125

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'w' → logprob: -16.625032424926758
    4. '```' → logprob: -16.750032424926758
    5. '۰' → logprob: -17.500032424926758
    6. '０' → logprob: -17.750032424926758
    7. 'o' → logprob: -18.250032424926758
    8. 'end' → logprob: -19.062532424926758
    9. '``' → logprob: -19.312532424926758
    10. '
' → logprob: -19.437532424926758

Token 241: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20141790807247162
    2. 'and' → logprob: -1.7014179229736328
    3. ' or' → logprob: -12.826417922973633
    4. ' ' → logprob: -13.951417922973633
    5. '	and' → logprob: -14.201417922973633
    6. ':' → logprob: -15.951417922973633
    7. ' a' → logprob: -16.326417922973633
    8. 'a' → logprob: -16.826417922973633
    9. ' an' → logprob: -17.076417922973633
    10. ' ' → logprob: -17.451417922973633

Token 242: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.31326204538345337
    2. 'w' → logprob: -1.3132619857788086
    3. '	w' → logprob: -15.688261985778809
    4. ' ' → logprob: -16.313262939453125
    5. '   ' → logprob: -17.563262939453125
    6. ' ' → logprob: -18.313262939453125
    7. '  ' → logprob: -19.063262939453125
    8. '<w' → logprob: -19.563262939453125
    9. '    ' → logprob: -20.188262939453125
    10. '_w' → logprob: -20.563262939453125

Token 243: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25193166732788086
    2. '==' → logprob: -1.5019316673278809
    3. ')==' → logprob: -14.251932144165039
    4. '=' → logprob: -14.376932144165039
    5. ' ' → logprob: -15.001932144165039
    6. ']==' → logprob: -15.501932144165039
    7. ')' → logprob: -15.876932144165039
    8. ' ' → logprob: -15.876932144165039
    9. '()==' → logprob: -16.37693214416504
    10. ' =' → logprob: -16.37693214416504

Token 244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '<|end|>' → logprob: -19.37510871887207
    4. '  ' → logprob: -21.00010871887207
    5. '   ' → logprob: -21.12510871887207
    6. '۰' → logprob: -21.62510871887207
    7. ' ' → logprob: -22.06260871887207
    8. '=' → logprob: -22.37510871887207
    9. '```' → logprob: -22.93760871887207
    10. '<|end|>' → logprob: -23.50010871887207

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -21.00000762939453
    4. '   ' → logprob: -21.12500762939453
    5. '<|end|>' → logprob: -21.12500762939453
    6. '  ' → logprob: -21.25000762939453
    7. '```' → logprob: -21.50000762939453
    8. '০' → logprob: -22.62500762939453
    9. ')' → logprob: -22.81250762939453
    10. '０' → logprob: -22.87500762939453

Token 246: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011134241707623005
    2. ':
' → logprob: -4.511134147644043
    3. '   ' → logprob: -9.386134147644043
    4. ':return' → logprob: -14.136134147644043
    5. ':
' → logprob: -14.886134147644043
    6. ' :' → logprob: -15.136134147644043
    7. '       ' → logprob: -15.386134147644043
    8. '):' → logprob: -15.511134147644043
    9. '.' → logprob: -15.636134147644043
    10. '	break' → logprob: -15.761134147644043

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5349885821342468
    2. ':' → logprob: -1.2849886417388916
    3. '   ' → logprob: -2.0349886417388916
    4. ':
' → logprob: -5.2849884033203125
    5. '	break' → logprob: -7.2849884033203125
    6. '	' → logprob: -7.2849884033203125
    7. ',' → logprob: -8.284988403320312
    8. ' break' → logprob: -9.909988403320312
    9. '<|end|>' → logprob: -10.034988403320312
    10. '	   ' → logprob: -10.284988403320312

Token 248: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.38694000244140625
    2. ' break' → logprob: -1.1369400024414062
    3. '	break' → logprob: -9.636940002441406
    4. '   ' → logprob: -12.636940002441406
    5. '_break' → logprob: -15.261940002441406
    6. '       ' → logprob: -16.761940002441406
    7. 'b' → logprob: -16.886940002441406
    8. '-break' → logprob: -17.386940002441406
    9. '
' → logprob: -17.636940002441406
    10. 'Break' → logprob: -18.261940002441406

Token 249: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0490284338593483
    2. '    
' → logprob: -3.5490283966064453
    3. '   ' → logprob: -4.924028396606445
    4. '<|end|>' → logprob: -5.799028396606445
    5. '  
' → logprob: -6.049028396606445
    6. '

' → logprob: -6.174028396606445
    7. '```' → logprob: -7.174028396606445
    8. ' 
' → logprob: -7.549028396606445
    9. '
' → logprob: -8.174028396606445
    10. 'tile' → logprob: -8.174028396606445

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3298993110656738
    2. 'grid' → logprob: -1.4548993110656738
    3. 'graph' → logprob: -1.9548993110656738
    4. 'dist' → logprob: -2.329899311065674
    5. 'dp' → logprob: -2.454899311065674
    6. ' grid' → logprob: -2.829899311065674
    7. ' dist' → logprob: -3.579899311065674
    8. 'board' → logprob: -3.829899311065674
    9. ' graph' → logprob: -4.454899311065674
    10. 'cost' → logprob: -4.704899311065674

Token 251: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.17616742849349976
    2. 'board' → logprob: -2.5511674880981445
    3. 'maze' → logprob: -3.6761674880981445
    4. 'graph' → logprob: -4.1761674880981445
    5. 'field' → logprob: -4.3011674880981445
    6. 'cost' → logprob: -5.0511674880981445
    7. 'start' → logprob: -5.3011674880981445
    8. 'c' → logprob: -5.4261674880981445
    9. 'dist' → logprob: -6.1761674880981445
    10. 'm' → logprob: -6.9261674880981445

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193557143211365
    2. '=' → logprob: -1.501935601234436
    3. ',' → logprob: -13.251935958862305
    4. '[' → logprob: -13.751935958862305
    5. '=[]' → logprob: -14.001935958862305
    6. ' ' → logprob: -14.376935958862305
    7. ' =
' → logprob: -14.501935958862305
    8. ' =
' → logprob: -14.751935958862305
    9. ' =[' → logprob: -14.751935958862305
    10. '＝' → logprob: -15.501935958862305

Token 253: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06512865424156189
    2. ' [' → logprob: -2.8151285648345947
    3. '[str' → logprob: -8.065128326416016
    4. '[line' → logprob: -8.065128326416016
    5. '[input' → logprob: -8.065128326416016
    6. '[int' → logprob: -8.315128326416016
    7. '[h' → logprob: -8.690128326416016
    8. '[list' → logprob: -8.815128326416016
    9. '[t' → logprob: -8.940128326416016
    10. '[class' → logprob: -9.065128326416016

Token 254: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0012164250947535038
    2. ' list' → logprob: -6.751216411590576
    3. 'input' → logprob: -10.001216888427734
    4. '[list' → logprob: -14.251216888427734
    5. ' input' → logprob: -16.126216888427734
    6. '[input' → logprob: -16.501216888427734
    7. '	list' → logprob: -17.501216888427734
    8. 'tuple' → logprob: -17.626216888427734
    9. '[' → logprob: -17.626216888427734
    10. '=list' → logprob: -18.501216888427734

Token 255: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.575563020305708e-05
    2. '(input' → logprob: -10.125065803527832
    3. '(' → logprob: -11.125065803527832
    4. 'map' → logprob: -11.500065803527832
    5. '()' → logprob: -14.875065803527832
    6. ']' → logprob: -16.000064849853516
    7. ' map' → logprob: -16.250064849853516
    8. '(
' → logprob: -17.000064849853516
    9. '	map' → logprob: -18.000064849853516
    10. '(int' → logprob: -18.125064849853516

Token 256: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012999906903132796
    2. 'int' → logprob: -9.500129699707031
    3. ',int' → logprob: -11.125129699707031
    4. ']int' → logprob: -11.125129699707031
    5. '(' → logprob: -11.250129699707031
    6. ')' → logprob: -12.625129699707031
    7. '<int' → logprob: -12.625129699707031
    8. '=int' → logprob: -13.125129699707031
    9. '[int' → logprob: -13.125129699707031
    10. '   ' → logprob: -13.625129699707031

Token 257: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.30166682600975037
    2. ',' → logprob: -1.5516668558120728
    3. '(input' → logprob: -3.051666736602783
    4. 'input' → logprob: -6.801666736602783
    5. '(' → logprob: -10.176667213439941
    6. ' ,' → logprob: -10.551667213439941
    7. '=input' → logprob: -10.676667213439941
    8. ' input' → logprob: -10.676667213439941
    9. ')' → logprob: -12.426667213439941
    10. '[input' → logprob: -12.801667213439941

Token 258: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001170225441455841
    2. ' input' → logprob: -6.7511701583862305
    3. '(input' → logprob: -17.251171112060547
    4. ')' → logprob: -18.626171112060547
    5. '	input' → logprob: -19.376171112060547
    6. ' ' → logprob: -19.751171112060547
    7. ',input' → logprob: -19.751171112060547
    8. '<input' → logprob: -19.876171112060547
    9. '=input' → logprob: -20.251171112060547
    10. '))' → logprob: -20.251171112060547

Token 259: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.9153885558771435e-06
    2. '()' → logprob: -12.125005722045898
    3. '()))' → logprob: -15.625005722045898
    4. '(' → logprob: -16.6250057220459
    5. '.split' → logprob: -16.8750057220459
    6. ' ().' → logprob: -17.1250057220459
    7. '.' → logprob: -17.3750057220459
    8. '))' → logprob: -17.8750057220459
    9. '.readline' → logprob: -18.0000057220459
    10. '()
' → logprob: -18.1250057220459

Token 260: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.3458322731312364e-06
    2. 'strip' → logprob: -12.000007629394531
    3. 'rstrip' → logprob: -13.875007629394531
    4. ' split' → logprob: -15.750007629394531
    5. '(split' → logprob: -16.87500762939453
    6. 'spl' → logprob: -18.87500762939453
    7. '.split' → logprob: -20.12500762939453
    8. 'read' → logprob: -21.50000762939453
    9. ')' → logprob: -22.00000762939453
    10. '_split' → logprob: -22.37500762939453

Token 261: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07928895950317383
    2. '))' → logprob: -2.579288959503174
    3. '()' → logprob: -7.954288959503174
    4. '(' → logprob: -10.579288482666016
    5. '()))
' → logprob: -11.704288482666016
    6. '())' → logprob: -11.829288482666016
    7. ' ))' → logprob: -13.329288482666016
    8. '()
' → logprob: -13.329288482666016
    9. '().' → logprob: -13.954288482666016
    10. '   ' → logprob: -14.454288482666016

Token 262: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.360996485454962e-05
    2. ')]' → logprob: -10.7500638961792
    3. '()' → logprob: -11.2500638961792
    4. 'for' → logprob: -11.5000638961792
    5. ' for' → logprob: -11.6250638961792
    6. ' )' → logprob: -12.0000638961792
    7. ']' → logprob: -13.0000638961792
    8. '   ' → logprob: -14.6250638961792
    9. ')
' → logprob: -14.6250638961792
    10. '(' → logprob: -15.3750638961792

Token 263: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.407366916188039e-05
    2. ' _' → logprob: -10.375054359436035
    3. '_range' → logprob: -11.125054359436035
    4. ' range' → logprob: -12.375054359436035
    5. '_i' → logprob: -13.000054359436035
    6. 'range' → logprob: -14.000054359436035
    7. 'i' → logprob: -15.500054359436035
    8. '_h' → logprob: -15.750054359436035
    9. '_in' → logprob: -16.00005340576172
    10. '_=' → logprob: -16.50005340576172

Token 264: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.049442876130342484
    2. 'range' → logprob: -3.049442768096924
    3. ' range' → logprob: -7.424442768096924
    4. 'in' → logprob: -8.549443244934082
    5. '(range' → logprob: -9.674443244934082
    6. '(' → logprob: -14.049443244934082
    7. 'i' → logprob: -15.049443244934082
    8. ' ' → logprob: -15.424443244934082
    9. '	range' → logprob: -15.424443244934082
    10. '(i' → logprob: -16.299442291259766

Token 265: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000553151941858232
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -15.625553131103516
    4. '	range' → logprob: -18.250553131103516
    5. 'rang' → logprob: -20.250553131103516
    6. ')' → logprob: -20.375553131103516
    7. 'r' → logprob: -20.625553131103516
    8. '.range' → logprob: -20.750553131103516
    9. '   ' → logprob: -22.000553131103516
    10. ']' → logprob: -22.625553131103516

Token 266: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.5048530030981055e-06
    2. 'h' → logprob: -13.500001907348633
    3. '(' → logprob: -17.250001907348633
    4. '	h' → logprob: -19.875001907348633
    5. '(H' → logprob: -20.250001907348633
    6. '(
' → logprob: -20.625001907348633
    7. '[h' → logprob: -21.375001907348633
    8. ' (' → logprob: -21.500001907348633
    9. '(w' → logprob: -21.875001907348633
    10. ' h' → logprob: -21.875001907348633

Token 267: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.941850526549388e-06
    2. ')' → logprob: -12.250007629394531
    3. ']' → logprob: -13.375007629394531
    4. '   ' → logprob: -14.375007629394531
    5. ' )' → logprob: -14.625007629394531
    6. ')]
' → logprob: -15.000007629394531
    7. ' ' → logprob: -17.37500762939453
    8. '))' → logprob: -17.62500762939453
    9. '')]' → logprob: -17.75000762939453
    10. ')])' → logprob: -18.00000762939453

Token 268: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9105044007301331
    2. '   ' → logprob: -1.0355043411254883
    3. 'dp' → logprob: -1.9105043411254883
    4. 'distance' → logprob: -2.9105043411254883
    5. 'visited' → logprob: -4.910504341125488
    6. '    
' → logprob: -5.160504341125488
    7. 'cost' → logprob: -5.410504341125488
    8. 'import' → logprob: -5.660504341125488
    9. 'start' → logprob: -5.660504341125488
    10. ' dist' → logprob: -5.785504341125488

Token 269: ' sy' (ID: 6157)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.30002593994140625
    2. 'dp' → logprob: -1.4250259399414062
    3. 'cost' → logprob: -4.675025939941406
    4. 'start' → logprob: -5.550025939941406
    5. 'distance' → logprob: -6.175025939941406
    6. 'visited' → logprob: -6.675025939941406
    7. 'import' → logprob: -7.550025939941406
    8. '   ' → logprob: -7.675025939941406
    9. ' dist' → logprob: -7.925025939941406
    10. 'INF' → logprob: -8.425025939941406

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016504127415828407
    2. ' ,' → logprob: -8.750164985656738
    3. '=' → logprob: -12.875164985656738
    4. ',s' → logprob: -13.500164985656738
    5. ' =' → logprob: -13.625164985656738
    6. ',y' → logprob: -14.875164985656738
    7. '‌,' → logprob: -15.375164985656738
    8. ',
' → logprob: -16.000165939331055
    9. ',x' → logprob: -16.000165939331055
    10. ',start' → logprob: -16.500165939331055

Token 271: ' sx' (ID: 39428)
  Prédit: ' sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sx' → logprob: -0.38714492321014404
    2. 'sx' → logprob: -1.137144923210144
    3. '0' → logprob: -8.512145042419434
    4. 's' → logprob: -10.012145042419434
    5. 'sz' → logprob: -12.012145042419434
    6. ' ' → logprob: -12.012145042419434
    7. ' sz' → logprob: -12.762145042419434
    8. '	s' → logprob: -13.012145042419434
    9. '=' → logprob: -13.137145042419434
    10. ' =' → logprob: -13.512145042419434

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4794597327709198
    2. ' =' → logprob: -0.9794597625732422
    3. ',' → logprob: -5.229459762573242
    4. ')' → logprob: -12.854459762573242
    5. ' ' → logprob: -12.979459762573242
    6. ' ,' → logprob: -13.104459762573242
    7. ' =
' → logprob: -14.104459762573242
    8. ' =)' → logprob: -14.229459762573242
    9. ' =
' → logprob: -14.479459762573242
    10. ')=' → logprob: -14.604459762573242

Token 273: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001022566924802959
    2. ' ' → logprob: -7.0010223388671875
    3. '(' → logprob: -9.876022338867188
    4. '[' → logprob: -10.626022338867188
    5. 'h' → logprob: -11.001022338867188
    6. ' (' → logprob: -12.126022338867188
    7. '   ' → logprob: -13.376022338867188
    8. 'next' → logprob: -13.376022338867188
    9. ' [' → logprob: -13.626022338867188
    10. ' h' → logprob: -13.876022338867188

Token 274: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00017982252757064998
    2. '=int' → logprob: -8.8751802444458
    3. 'int' → logprob: -11.3751802444458
    4. '[int' → logprob: -11.7501802444458
    5. '<int' → logprob: -11.7501802444458
    6. ',int' → logprob: -11.8751802444458
    7. '(' → logprob: -12.6251802444458
    8. ':int' → logprob: -13.6251802444458
    9. ']int' → logprob: -14.0001802444458
    10. ' (' → logprob: -15.8751802444458

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014766492880880833
    2. '(),' → logprob: -4.639766693115234
    3. ',input' → logprob: -5.389766693115234
    4. '(' → logprob: -8.014766693115234
    5. '(input' → logprob: -9.764766693115234
    6. ' ,' → logprob: -10.764766693115234
    7. 'input' → logprob: -12.264766693115234
    8. '()' → logprob: -12.514766693115234
    9. ',int' → logprob: -12.639766693115234
    10. '   ' → logprob: -12.889766693115234

Token 276: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31326258182525635
    2. ' input' → logprob: -1.3132625818252563
    3. '(input' → logprob: -14.188262939453125
    4. ',input' → logprob: -16.438262939453125
    5. '=input' → logprob: -17.438262939453125
    6. '[input' → logprob: -17.563262939453125
    7. '_input' → logprob: -17.563262939453125
    8. 'Input' → logprob: -17.813262939453125
    9. '	input' → logprob: -18.938262939453125
    10. '   ' → logprob: -19.313262939453125

Token 277: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.65707261255011e-06
    2. '()' → logprob: -11.750008583068848
    3. ')' → logprob: -14.875008583068848
    4. '(' → logprob: -16.250009536743164
    5. ' ().' → logprob: -16.250009536743164
    6. '()
' → logprob: -17.125009536743164
    7. '.' → logprob: -17.375009536743164
    8. '.split' → logprob: -17.750009536743164
    9. ').' → logprob: -17.750009536743164
    10. '=' → logprob: -17.875009536743164

Token 278: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. 'strip' → logprob: -17.0
    3. ' split' → logprob: -17.75
    4. '(split' → logprob: -18.875
    5. '.split' → logprob: -19.625
    6. 'skip' → logprob: -20.125
    7. 'spl' → logprob: -20.25
    8. '_split' → logprob: -20.25
    9. ')' → logprob: -20.875
    10. 'plit' → logprob: -21.375

Token 279: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0384540781378746
    2. ')' → logprob: -3.538454055786133
    3. '()' → logprob: -4.788454055786133
    4. '())
' → logprob: -8.038454055786133
    5. '(' → logprob: -12.163454055786133
    6. '()
' → logprob: -12.288454055786133
    7. ' ())' → logprob: -12.788454055786133
    8. ')
' → logprob: -12.913454055786133
    9. '())
' → logprob: -14.663454055786133
    10. '();)' → logprob: -14.788454055786133

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051097895950078964
    2. '
' → logprob: -3.801097869873047
    3. 'y' → logprob: -4.551097869873047
    4. '<|end|>' → logprob: -5.551097869873047
    5. '    
' → logprob: -5.801097869873047
    6. ',' → logprob: -6.551097869873047
    7. '```' → logprob: -6.551097869873047
    8. 'ay' → logprob: -6.676097869873047
    9. 'dy' → logprob: -6.801097869873047
    10. ')' → logprob: -7.301097869873047

Token 281: ' gy' (ID: 11045)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.5936757326126099
    2. 'gy' (adapté à ' gy') → logprob: -1.3436757326126099
    3. 'ty' → logprob: -2.3436756134033203
    4. 'dy' → logprob: -2.5936756134033203
    5. 'sy' → logprob: -5.21867561340332
    6. 'dist' → logprob: -5.84367561340332
    7. 'goal' → logprob: -5.96867561340332
    8. 'fy' → logprob: -6.96867561340332
    9. 'cy' → logprob: -7.34367561340332
    10. 'dice' → logprob: -7.71867561340332

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010044389637187123
    2. 'y' → logprob: -9.750100135803223
    3. ',y' → logprob: -10.125100135803223
    4. ' ,' → logprob: -13.250100135803223
    5. '=' → logprob: -15.750100135803223
    6. ' y' → logprob: -16.75010108947754
    7. 'x' → logprob: -16.75010108947754
    8. ',
' → logprob: -18.12510108947754
    9. '_,' → logprob: -18.75010108947754
    10. ',j' → logprob: -18.87510108947754

Token 283: ' gx' (ID: 142840)
  Prédit: ' gx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gx' → logprob: -0.20150135457515717
    2. 'gx' → logprob: -1.7015013694763184
    3. ' g' → logprob: -10.07650089263916
    4. ' sx' → logprob: -11.32650089263916
    5. 'sx' → logprob: -11.57650089263916
    6. 'g' → logprob: -11.70150089263916
    7. 'gs' → logprob: -12.45150089263916
    8. 'x' → logprob: -12.82650089263916
    9. ' ' → logprob: -13.20150089263916
    10. ' gs' → logprob: -13.45150089263916

Token 284: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150413408875465
    2. ' =' → logprob: -4.018150329589844
    3. ',' → logprob: -15.268150329589844
    4. '   ' → logprob: -16.018150329589844
    5. ' ' → logprob: -16.393150329589844
    6. '=

' → logprob: -17.518150329589844
    7. ')' → logprob: -17.643150329589844
    8. '＝' → logprob: -17.768150329589844
    9. ')=' → logprob: -17.893150329589844
    10. '=
' → logprob: -18.393150329589844

Token 285: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6931508779525757
    2. ' map' → logprob: -0.6931508779525757
    3. '(map' → logprob: -12.943150520324707
    4. '   ' → logprob: -13.943150520324707
    5. '	map' → logprob: -15.193150520324707
    6. '    ' → logprob: -16.818151473999023
    7. 'input' → logprob: -17.068151473999023
    8. ' ' → logprob: -17.443151473999023
    9. 'm' → logprob: -17.693151473999023
    10. '  ' → logprob: -18.318151473999023

Token 286: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10667644441127777
    2. '(int' → logprob: -2.3566763401031494
    3. '=int' → logprob: -5.6066765785217285
    4. ',int' → logprob: -6.2316765785217285
    5. '<int' → logprob: -7.8566765785217285
    6. '[int' → logprob: -8.10667610168457
    7. ' int' → logprob: -9.85667610168457
    8. ']int' → logprob: -10.48167610168457
    9. ':int' → logprob: -10.73167610168457
    10. ',' → logprob: -12.60667610168457

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.611731231212616
    2. '().' → logprob: -1.1117312908172607
    3. ')' → logprob: -2.3617312908172607
    4. ').' → logprob: -4.361731052398682
    5. '=' → logprob: -5.111731052398682
    6. '.split' → logprob: -5.361731052398682
    7. '   ' → logprob: -5.986731052398682
    8. '(),' → logprob: -6.236731052398682
    9. '(' → logprob: -6.861731052398682
    10. ')
' → logprob: -6.861731052398682

Token 288: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0446417331695557
    2. 'input' → logprob: -1.0446417331695557
    3. 'map' → logprob: -1.2946417331695557
    4. ' map' → logprob: -4.294641494750977
    5. ' input' → logprob: -4.794641494750977
    6. 'split' → logprob: -7.919641494750977
    7. ' int' → logprob: -10.044641494750977
    8. ')' → logprob: -11.544641494750977
    9. '[int' → logprob: -11.919641494750977
    10. '(input' → logprob: -12.044641494750977

Token 289: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.62500286102295
    3. '.split' → logprob: -13.87500286102295
    4. '()' → logprob: -14.87500286102295
    5. ' ().' → logprob: -16.125001907348633
    6. ').' → logprob: -16.875001907348633
    7. '()
' → logprob: -17.750001907348633
    8. ' .' → logprob: -18.875001907348633
    9. '()).' → logprob: -19.500001907348633
    10. '(' → logprob: -19.875001907348633

Token 290: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.869017852295656e-06
    2. '2' → logprob: -12.625006675720215
    3. '1' → logprob: -13.375006675720215
    4. ' split' → logprob: -14.625006675720215
    5. 'skip' → logprob: -15.000006675720215
    6. '0' → logprob: -15.375006675720215
    7. '5' → logprob: -15.375006675720215
    8. ')' → logprob: -15.625006675720215
    9. '```' → logprob: -16.12500762939453
    10. 's' → logprob: -16.25000762939453

Token 291: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.289473822107539e-05
    2. '())' → logprob: -9.875062942504883
    3. '()' → logprob: -11.750062942504883
    4. ')
' → logprob: -13.000062942504883
    5. ')`' → logprob: -14.250062942504883
    6. ' )' → logprob: -15.125062942504883
    7. '))' → logprob: -15.500062942504883
    8. ')

' → logprob: -16.000062942504883
    9. '`)' → logprob: -17.375062942504883
    10. '   ' → logprob: -17.625062942504883

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056347157806158066
    2. '
' → logprob: -3.431347131729126
    3. 'dist' → logprob: -5.056347370147705
    4. 'distance' → logprob: -5.181347370147705
    5. '    
' → logprob: -5.306347370147705
    6. ' dist' → logprob: -6.931347370147705
    7. 'dice' → logprob: -6.931347370147705
    8. 'visited' → logprob: -7.431347370147705
    9. '```' → logprob: -7.931347370147705
    10. 'dp' → logprob: -8.181346893310547

Token 293: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4028322398662567
    2. 'dist' → logprob: -2.027832269668579
    3. 'dice' → logprob: -2.777832269668579
    4. '#' (adapté à ' #') → logprob: -2.902832269668579
    5. 'dp' → logprob: -3.652832269668579
    6. 'initial' → logprob: -3.652832269668579
    7. 'visited' → logprob: -4.52783203125
    8. 'INF' → logprob: -4.65283203125
    9. 'cost' → logprob: -5.90283203125
    10. 'import' → logprob: -6.15283203125

Token 294: ' Dist' (ID: 35375)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5752365589141846
    2. 'start' → logprob: -1.8252365589141846
    3. '#' → logprob: -1.9502365589141846
    4. 'dp' → logprob: -3.0752365589141846
    5. 'visited' → logprob: -3.5752365589141846
    6. 'dice' → logprob: -4.2002363204956055
    7. 'INF' → logprob: -4.3252363204956055
    8. 'def' → logprob: -4.5752363204956055
    9. 'import' → logprob: -4.8252363204956055
    10. 'initial' → logprob: -5.2002363204956055

Token 295: 'ances' (ID: 3528)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.618630051612854
    2. 'ances' → logprob: -0.868630051612854
    3. 'dist' → logprob: -3.8686299324035645
    4. ' =' → logprob: -4.3686299324035645
    5. 'inf' → logprob: -6.2436299324035645
    6. '=' → logprob: -6.4936299324035645
    7. 'import' → logprob: -6.6186299324035645
    8. 'INF' → logprob: -7.3686299324035645
    9. '```' → logprob: -7.4936299324035645
    10. '   ' → logprob: -7.8686299324035645

Token 296: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5936575531959534
    2. 'dist' → logprob: -1.0936574935913086
    3. '=' → logprob: -2.2186574935913086
    4. 'dp' → logprob: -6.343657493591309
    5. 'INF' → logprob: -6.968657493591309
    6. ' dist' → logprob: -7.593657493591309
    7. '   ' → logprob: -7.718657493591309
    8. 'inf' → logprob: -9.218657493591309
    9. 'distance' → logprob: -9.593657493591309
    10. 'import' → logprob: -10.218657493591309

Token 297: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.015016059391200542
    2. ' dist' → logprob: -4.765016078948975
    3. 'INF' → logprob: -5.265016078948975
    4. 'import' → logprob: -6.890016078948975
    5. ' INF' → logprob: -9.515015602111816
    6. 'distance' → logprob: -9.890015602111816
    7. 'inf' → logprob: -10.640015602111816
    8. 'dp' → logprob: -10.890015602111816
    9. ' distances' → logprob: -11.265015602111816
    10. 'from' → logprob: -12.265015602111816

Token 298: '3' (ID: 18)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011534392833709717
    2. 'INF' → logprob: -4.511534214019775
    3. '#' → logprob: -8.511534690856934
    4. 'import' → logprob: -8.886534690856934
    5. 'distance' → logprob: -9.511534690856934
    6. 'inf' → logprob: -10.386534690856934
    7. 'dp' → logprob: -10.761534690856934
    8. 'd' → logprob: -11.511534690856934
    9. 'from' → logprob: -12.636534690856934
    10. '
' → logprob: -12.886534690856934

Token 299: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.01852424442768097
    2. 'd' → logprob: -4.893524169921875
    3. '6' → logprob: -4.893524169921875
    4. '2' → logprob: -6.018524169921875
    5. 'dim' → logprob: -8.518524169921875
    6. '0' → logprob: -9.018524169921875
    7. '-dimensional' → logprob: -9.018524169921875
    8. '-d' → logprob: -9.518524169921875
    9. ' =' → logprob: -9.518524169921875
    10. ' D' → logprob: -9.768524169921875

Token 300: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15742632746696472
    2. ' =' → logprob: -2.157426357269287
    3. '_dist' → logprob: -4.532426357269287
    4. 'dp' → logprob: -5.407426357269287
    5. 'distance' → logprob: -5.407426357269287
    6. ',' → logprob: -6.157426357269287
    7. '=' → logprob: -6.157426357269287
    8. ' dist' → logprob: -6.282426357269287
    9. ']' → logprob: -7.282426357269287
    10. ')' → logprob: -7.407426357269287

Token 301: 'y' (ID: 88)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03359083831310272
    2. ' h' → logprob: -3.908590793609619
    3. 'distance' → logprob: -5.533590793609619
    4. 'dist' → logprob: -6.408590793609619
    5. ')' → logprob: -6.533590793609619
    6. '[h' → logprob: -6.658590793609619
    7. 'visited' → logprob: -7.033590793609619
    8. 'y' → logprob: -7.158590793609619
    9. ' distances' → logprob: -7.158590793609619
    10. 'd' → logprob: -7.783590793609619

Token 302: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03483394905924797
    2. ',w' → logprob: -4.034833908081055
    3. ',x' → logprob: -5.159833908081055
    4. ' x' → logprob: -5.409833908081055
    5. ')' → logprob: -6.159833908081055
    6. 'x' → logprob: -6.659833908081055
    7. ' ,' → logprob: -6.659833908081055
    8. '   ' → logprob: -7.659833908081055
    9. '*w' → logprob: -7.659833908081055
    10. ')x' → logprob: -8.159833908081055

Token 303: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3945179283618927
    2. ',d' → logprob: -1.1445178985595703
    3. ',z' → logprob: -5.76951789855957
    4. ',state' → logprob: -6.14451789855957
    5. ',num' → logprob: -7.26951789855957
    6. ',
' → logprob: -8.89451789855957
    7. ',x' → logprob: -9.01951789855957
    8. ',k' → logprob: -9.01951789855957
    9. ' ,' → logprob: -9.26951789855957
    10. ',pos' → logprob: -9.39451789855957

Token 304: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.2606842815876007
    2. 'ir' → logprob: -1.5106842517852783
    3. 'irection' → logprob: -5.010684490203857
    4. ')' → logprob: -7.010684490203857
    5. 'ic' → logprob: -8.0106840133667
    6. '1' → logprob: -8.8856840133667
    7. 'i' → logprob: -9.3856840133667
    8. '),' → logprob: -9.5106840133667
    9. '[' → logprob: -9.7606840133667
    10. 'im' → logprob: -9.8856840133667

Token 305: '_state' (ID: 9479)
  Prédit: '_faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_faces' → logprob: -0.5192062258720398
    2. '_state' → logprob: -1.6442062854766846
    3. ')' → logprob: -2.2692062854766846
    4. ',' → logprob: -3.0192062854766846
    5. '_face' → logprob: -3.7692062854766846
    6. '_states' → logprob: -3.8942062854766846
    7. ',state' → logprob: -5.6442060470581055
    8. ',)' → logprob: -5.7692060470581055
    9. 'state' → logprob: -6.3942060470581055
    10. '_orientation' → logprob: -6.5192060470581055

Token 306: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001981333363801241
    2. ')
' → logprob: -7.126981258392334
    3. ' )' → logprob: -8.126981735229492
    4. ')=' → logprob: -8.251981735229492
    5. ',' → logprob: -8.376981735229492
    6. ',)' → logprob: -9.251981735229492
    7. 's' → logprob: -9.626981735229492
    8. '_states' → logprob: -10.251981735229492
    9. ',d' → logprob: -10.501981735229492
    10. '):' → logprob: -10.751981735229492

Token 307: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5978744029998779
    2. 'dist' → logprob: -1.097874402999878
    3. 'distance' → logprob: -2.847874402999878
    4. 'dp' → logprob: -3.722874402999878
    5. '   ' → logprob: -4.597874641418457
    6. '_dist' → logprob: -5.097874641418457
    7. ')' → logprob: -5.347874641418457
    8. '_' → logprob: -6.097874641418457
    9. ' distances' → logprob: -6.097874641418457
    10. 'import' → logprob: -6.722874641418457

Token 308: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005314635578542948
    2. ' dist' → logprob: -6.130314826965332
    3. 'INF' → logprob: -6.130314826965332
    4. 'import' → logprob: -7.255314826965332
    5. 'distance' → logprob: -9.005314826965332
    6. 'from' → logprob: -9.630314826965332
    7. 'dp' → logprob: -11.005314826965332
    8. 'inf' → logprob: -11.005314826965332
    9. ' INF' → logprob: -11.755314826965332
    10. 'DIST' → logprob: -12.005314826965332

Token 309: ' dice' (ID: 22078)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0033706773538142443
    2. 'import' → logprob: -6.378370761871338
    3. 'INF' → logprob: -7.003370761871338
    4. 'from' → logprob: -7.753370761871338
    5. 'distance' → logprob: -8.25337028503418
    6. ' dist' → logprob: -10.50337028503418
    7. '#' → logprob: -11.37837028503418
    8. 'dp' → logprob: -11.87837028503418
    9. 'inf' → logprob: -12.12837028503418
    10. '
' → logprob: -12.37837028503418

Token 310: '_state' (ID: 9479)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.15619292855262756
    2. '_state' → logprob: -2.0311930179595947
    3. '_faces' → logprob: -4.531192779541016
    4. '_positions' → logprob: -6.906192779541016
    5. 'state' → logprob: -7.406192779541016
    6. 'states' → logprob: -8.281192779541016
    7. ' =' → logprob: -8.531192779541016
    8. '_pos' → logprob: -9.406192779541016
    9. '_face' → logprob: -9.406192779541016
    10. '_top' → logprob: -9.531192779541016

Token 311: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3441803753376007
    2. '=' → logprob: -1.5941803455352783
    3. '_states' → logprob: -3.0941803455352783
    4. 's' → logprob: -3.4691803455352783
    5. '_size' → logprob: -5.094180583953857
    6. '_s' → logprob: -6.469180583953857
    7. '_' → logprob: -7.469180583953857
    8. '_count' → logprob: -7.594180583953857
    9. ',' → logprob: -7.844180583953857
    10. '_state' → logprob: -8.2191801071167

Token 312: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.005956768058240414
    2. 'be' → logprob: -5.255956649780273
    3. ' range' → logprob: -8.380956649780273
    4. 'range' → logprob: -8.505956649780273
    5. '=' → logprob: -9.005956649780273
    6. '_be' → logprob: -10.005956649780273
    7. '...' → logprob: -10.630956649780273
    8. ' =' → logprob: -11.005956649780273
    9. ' represent' → logprob: -11.255956649780273
    10. ' not' → logprob: -11.380956649780273

Token 313: ' represented' (ID: 27328)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.213929295539856
    2. '(' → logprob: -1.713929295539856
    3. '6' → logprob: -2.2139291763305664
    4. '0' → logprob: -2.2139291763305664
    5. '(top' → logprob: -2.4639291763305664
    6. '(tuple' → logprob: -2.8389291763305664
    7. 'top' → logprob: -3.0889291763305664
    8. 'range' → logprob: -3.4639291763305664
    9. '1' → logprob: -3.8389291763305664
    10. '64' → logprob: -4.588929176330566

Token 314: ' by' (ID: 656)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.29659536480903625
    2. ' as' → logprob: -1.9215953350067139
    3. 'by' → logprob: -2.296595335006714
    4. ' by' → logprob: -4.671595573425293
    5. '=' → logprob: -8.546595573425293
    6. '<|end|>' → logprob: -10.171595573425293
    7. ',' → logprob: -10.921595573425293
    8. '	as' → logprob: -11.171595573425293
    9. ')' → logprob: -11.421595573425293
    10. 'As' → logprob: -12.046595573425293

Token 315: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9262926578521729
    2. 'tuple' → logprob: -1.0512926578521729
    3. '(top' → logprob: -2.301292657852173
    4. 'top' → logprob: -2.301292657852173
    5. '()' → logprob: -4.176292419433594
    6. '(tuple' → logprob: -4.176292419433594
    7. '6' → logprob: -4.551292419433594
    8. ' tuple' → logprob: -6.051292419433594
    9. '(d' → logprob: -6.551292419433594
    10. ' (' → logprob: -6.676292419433594

Token 316: ' ' (ID: 220)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.5617920756340027
    2. 'dice' → logprob: -1.5617921352386475
    3. 'current' → logprob: -2.8117921352386475
    4. 'top' → logprob: -2.8117921352386475
    5. 'faces' → logprob: -2.9367921352386475
    6. 'positions' → logprob: -4.311791896820068
    7. ' tuple' → logprob: -4.311791896820068
    8. '(' → logprob: -5.436791896820068
    9. '6' → logprob: -5.811791896820068
    10. ' current' → logprob: -6.186791896820068

Token 317: '6' (ID: 21)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.5374577045440674
    2. 'top' → logprob: -1.6624577045440674
    3. 'dice' → logprob: -1.9124577045440674
    4. '(' → logprob: -3.2874577045440674
    5. 'current' → logprob: -4.162457466125488
    6. 'faces' → logprob: -4.662457466125488
    7. '6' → logprob: -4.662457466125488
    8. '(top' → logprob: -6.662457466125488
    9. ' tuple' → logprob: -7.162457466125488
    10. 'd' → logprob: -7.412457466125488

Token 318: ' faces' (ID: 22060)
  Prédit: '-t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-t' → logprob: -0.9731321334838867
    2. ' faces' → logprob: -1.8481321334838867
    3. 'tuple' → logprob: -1.8481321334838867
    4. 'faces' → logprob: -2.5981321334838867
    5. ',' → logprob: -2.7231321334838867
    6. ' tuples' → logprob: -3.0981321334838867
    7. ')' → logprob: -3.4731321334838867
    8. '-tu' → logprob: -3.7231321334838867
    9. '-' → logprob: -4.098132133483887
    10. '_faces' → logprob: -4.473132133483887

Token 319: ' values' (ID: 4824)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9406464099884033
    2. 'dist' → logprob: -1.8156464099884033
    3. '<|end|>' → logprob: -1.9406464099884033
    4. ')' → logprob: -2.1906464099884033
    5. ',' → logprob: -2.8156464099884033
    6. 'distance' → logprob: -3.5656464099884033
    7. '
' → logprob: -3.5656464099884033
    8. 'import' → logprob: -4.065646171569824
    9. 'visited' → logprob: -4.690646171569824
    10. '<|end|>' → logprob: -5.315646171569824

Token 320: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.034507058560848236
    2. 'distance' → logprob: -4.4095072746276855
    3. 'import' → logprob: -4.7845072746276855
    4. 'from' → logprob: -5.2845072746276855
    5. '   ' → logprob: -5.5345072746276855
    6. ' dist' → logprob: -6.0345072746276855
    7. ' distances' → logprob: -6.9095072746276855
    8. 'dp' → logprob: -8.034506797790527
    9. '
' → logprob: -9.034506797790527
    10. 'visited' → logprob: -9.034506797790527

Token 321: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -1.1859759092330933
    2. '#' → logprob: -1.4359759092330933
    3. 'visited' → logprob: -1.5609759092330933
    4. ' or' → logprob: -2.435976028442383
    5. ' visited' → logprob: -2.935976028442383
    6. '   ' → logprob: -2.935976028442383
    7. 'dist' → logprob: -4.185976028442383
    8. 'but' → logprob: -4.560976028442383
    9. ' #' → logprob: -5.435976028442383
    10. 'distance' → logprob: -5.560976028442383

Token 322: ' to' (ID: 316)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -1.145914077758789
    2. 'it' → logprob: -1.520914077758789
    3. 'it's' → logprob: -2.395914077758789
    4. ' it' → logprob: -2.520914077758789
    5. ' it's' → logprob: -2.520914077758789
    6. ' that' → logprob: -2.520914077758789
    7. 'too' → logprob: -3.645914077758789
    8. 'this' → logprob: -4.520914077758789
    9. 'since' → logprob: -4.520914077758789
    10. ' is' → logprob: -4.520914077758789

Token 323: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.3459876775741577
    2. 'save' → logprob: -1.8459876775741577
    3. 'store' → logprob: -1.9709876775741577
    4. ' reduce' → logprob: -2.8459877967834473
    5. ' store' → logprob: -2.8459877967834473
    6. ' save' → logprob: -3.0959877967834473
    7. 'avoid' → logprob: -3.0959877967834473
    8. ' avoid' → logprob: -3.5959877967834473
    9. 'represent' → logprob: -3.7209877967834473
    10. ' optimize' → logprob: -3.8459877967834473

Token 324: ' memory' (ID: 8197)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.24841664731502533
    2. 'memory' → logprob: -2.7484166622161865
    3. 'the' → logprob: -3.2484166622161865
    4. ' complexity' → logprob: -3.7484166622161865
    5. 'states' → logprob: -3.7484166622161865
    6. 'space' → logprob: -3.7484166622161865
    7. 'complex' → logprob: -4.373416423797607
    8. ' memory' → logprob: -4.498416423797607
    9. ' the' → logprob: -5.123416423797607
    10. 'size' → logprob: -5.498416423797607

Token 325: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16475442051887512
    2. ' usage' → logprob: -2.1647543907165527
    3. '<|end|>' → logprob: -4.664754390716553
    4. ' use' → logprob: -4.789754390716553
    5. ' ,' → logprob: -4.914754390716553
    6. 'usage' → logprob: -5.164754390716553
    7. ' and' → logprob: -6.664754390716553
    8. '<|end|>' → logprob: -7.414754390716553
    9. 'size' → logprob: -7.664754390716553
    10. ' states' → logprob: -8.164754867553711

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41909533739089966
    2. '#' → logprob: -1.7940952777862549
    3. 'we' → logprob: -2.794095277786255
    4. '<|end|>' → logprob: -2.919095277786255
    5. ' we' → logprob: -3.544095277786255
    6. '<|end|>' → logprob: -4.919095516204834
    7. ')' → logprob: -5.044095516204834
    8. '    ' → logprob: -5.169095516204834
    9. 'the' → logprob: -6.294095516204834
    10. '1' → logprob: -6.794095516204834

Token 327: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.007298263721168041
    2. 'we' → logprob: -5.507298469543457
    3. ' we' → logprob: -6.257298469543457
    4. '   ' → logprob: -6.757298469543457
    5. ' #' → logprob: -9.882298469543457
    6. '    ' → logprob: -10.757298469543457
    7. '    
' → logprob: -11.882298469543457
    8. 'dice' → logprob: -12.007298469543457
    9. 'the' → logprob: -12.382298469543457
    10. ' you' → logprob: -12.507298469543457

Token 328: ' we' (ID: 581)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.22284138202667236
    2. '#' → logprob: -2.097841262817383
    3. 'dice' → logprob: -2.847841262817383
    4. 'from' → logprob: -5.347841262817383
    5. ' we' → logprob: -5.847841262817383
    6. 'states' → logprob: -5.972841262817383
    7. 'faces' → logprob: -6.097841262817383
    8. 'import' → logprob: -6.347841262817383
    9. 'it' → logprob: -6.847841262817383
    10. '
' → logprob: -7.347841262817383

Token 329: ' assign' (ID: 14975)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.7203641533851624
    2. ' can' → logprob: -0.8453641533851624
    3. ''ll' → logprob: -3.9703640937805176
    4. 'use' → logprob: -4.345364093780518
    5. 'should' → logprob: -4.470364093780518
    6. 'will' → logprob: -4.845364093780518
    7. ' should' → logprob: -4.970364093780518
    8. ' will' → logprob: -5.095364093780518
    9. ' use' → logprob: -5.220364093780518
    10. 'need' → logprob: -5.470364093780518

Token 330: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -1.2977335453033447
    2. 'each' → logprob: -1.5477335453033447
    3. 'dice' → logprob: -1.5477335453033447
    4. 'an' → logprob: -2.1727335453033447
    5. 'a' → logprob: -3.0477335453033447
    6. ' each' → logprob: -3.0477335453033447
    7. 'indices' → logprob: -3.9227335453033447
    8. 'ids' → logprob: -4.172733306884766
    9. ' ids' → logprob: -4.297733306884766
    10. ' a' → logprob: -4.422733306884766

Token 331: ' index' (ID: 3472)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.5767006874084473
    2. ' id' → logprob: -1.2017006874084473
    3. ' index' → logprob: -2.5767006874084473
    4. 'index' → logprob: -3.3267006874084473
    5. ' integer' → logprob: -4.451700687408447
    6. ' ID' → logprob: -5.576700687408447
    7. ' unique' → logprob: -5.826700687408447
    8. '_id' → logprob: -6.451700687408447
    9. 'integer' → logprob: -6.576700687408447
    10. ' ' → logprob: -6.826700687408447

Token 332: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6792472004890442
    2. '<|end|>' → logprob: -1.8042471408843994
    3. ' to' → logprob: -2.4292471408843994
    4. ' ' → logprob: -2.8042471408843994
    5. '=' → logprob: -3.3042471408843994
    6. ',' → logprob: -3.3042471408843994
    7. '<|end|>' → logprob: -3.8042471408843994
    8. ')' → logprob: -3.9292471408843994
    9. '0' → logprob: -4.0542473793029785
    10. '   ' → logprob: -4.3042473793029785

Token 333: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.08862368762493134
    2. ' each' → logprob: -2.5886237621307373
    3. 'the' → logprob: -5.463623523712158
    4. 'dice' → logprob: -5.588623523712158
    5. 'all' → logprob: -7.463623523712158
    6. ' the' → logprob: -7.713623523712158
    7. ' all' → logprob: -8.713624000549316
    8. 'possible' → logprob: -9.213624000549316
    9. 'represent' → logprob: -9.338624000549316
    10. 'every' → logprob: -9.338624000549316

Token 334: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.7319018840789795
    2. 'possible' → logprob: -1.4819018840789795
    3. ' possible' → logprob: -1.6069018840789795
    4. ' dice' → logprob: -3.1069018840789795
    5. 'state' → logprob: -4.356902122497559
    6. '_possible' → logprob: -4.731902122497559
    7. '(' → logprob: -5.606902122497559
    8. ')' → logprob: -5.981902122497559
    9. ' of' → logprob: -6.106902122497559
    10. ' state' → logprob: -6.606902122497559

Token 335: ' orientation' (ID: 29546)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.3088304400444031
    2. 'state' → logprob: -2.183830499649048
    3. '_' → logprob: -3.308830499649048
    4. '_states' → logprob: -3.683830499649048
    5. '_orientation' → logprob: -3.683830499649048
    6. ' state' → logprob: -3.933830499649048
    7. '_faces' → logprob: -4.183830261230469
    8. ' orientation' → logprob: -4.433830261230469
    9. '_face' → logprob: -5.308830261230469
    10. 'orientation' → logprob: -5.308830261230469

Token 336: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9510089159011841
    2. '   ' → logprob: -1.326008915901184
    3. '#' → logprob: -2.7010087966918945
    4. 'dice' → logprob: -2.8260087966918945
    5. 'states' → logprob: -3.2010087966918945
    6. '<|end|>' → logprob: -3.3260087966918945
    7. 'visited' → logprob: -3.3260087966918945
    8. 'state' → logprob: -3.7010087966918945
    9. 'import' → logprob: -4.4510087966918945
    10. ',' → logprob: -4.5760087966918945

Token 337: ' since' (ID: 3630)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0477349758148193
    2. 'dice' → logprob: -1.4227349758148193
    3. ' states' → logprob: -2.4227349758148193
    4. 'visited' → logprob: -2.9227349758148193
    5. '<|end|>' → logprob: -3.1727349758148193
    6. ' dice' → logprob: -3.2977349758148193
    7. ' visited' → logprob: -3.4227349758148193
    8. 'states' → logprob: -3.6727349758148193
    9. ' from' → logprob: -3.7977349758148193
    10. 'from' → logprob: -4.047735214233398

Token 338: ' dice' (ID: 22078)
  Prédit: 'there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'there' → logprob: -0.4654577374458313
    2. 'the' → logprob: -1.8404576778411865
    3. ' there' → logprob: -2.3404576778411865
    4. 'dice' → logprob: -2.4654576778411865
    5. 'a' → logprob: -3.8404576778411865
    6. ' the' → logprob: -5.215457916259766
    7. ' a' → logprob: -7.090457916259766
    8. 'each' → logprob: -7.215457916259766
    9. ' dice' → logprob: -7.465457916259766
    10. 'we' → logprob: -7.590457916259766

Token 339: ' orientation' (ID: 29546)
  Prédit: ' orientations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orientations' → logprob: -0.9521380662918091
    2. 'orient' → logprob: -1.077138066291809
    3. ' has' → logprob: -1.952138066291809
    4. 'has' → logprob: -2.8271379470825195
    5. ' can' → logprob: -3.4521379470825195
    6. 'can' → logprob: -4.0771379470825195
    7. 'faces' → logprob: -5.4521379470825195
    8. ' orientation' → logprob: -5.5771379470825195
    9. 's' → logprob: -5.7021379470825195
    10. ' have' → logprob: -5.9521379470825195

Token 340: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.025267243385315
    2. ' can' → logprob: -1.525267243385315
    3. 's' → logprob: -1.650267243385315
    4. ' has' → logprob: -2.2752671241760254
    5. 'is' → logprob: -2.7752671241760254
    6. 'can' → logprob: -3.9002671241760254
    7. '<|end|>' → logprob: -4.650267124176025
    8. ' changes' → logprob: -5.025267124176025
    9. ' states' → logprob: -5.275267124176025
    10. 'has' → logprob: -5.650267124176025

Token 341: ' huge' (ID: 9560)
  Prédit: ' limited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' limited' → logprob: -0.6963908076286316
    2. 'limited' → logprob: -1.0713908672332764
    3. 'not' → logprob: -3.0713908672332764
    4. ' not' → logprob: -3.4463908672332764
    5. 'finite' → logprob: -4.196390628814697
    6. '24' → logprob: -4.446390628814697
    7. ' finite' → logprob: -4.446390628814697
    8. ' always' → logprob: -4.696390628814697
    9. ' constrained' → logprob: -4.946390628814697
    10. 'fixed' → logprob: -5.196390628814697

Token 342: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02783544920384884
    2. ',
' → logprob: -4.402835369110107
    3. '<|end|>' → logprob: -4.402835369110107
    4. ' ,' → logprob: -6.902835369110107
    5. '<|end|>' → logprob: -7.652835369110107
    6. ')' → logprob: -7.902835369110107
    7. '   ' → logprob: -7.902835369110107
    8. 'import' → logprob: -8.652835845947266
    9. ' and' → logprob: -9.027835845947266
    10. ' but' → logprob: -9.902835845947266

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06155291572213173
    2. '    ' → logprob: -3.5615530014038086
    3. ',' → logprob: -4.561553001403809
    4. ' we' → logprob: -4.686553001403809
    5. '<|end|>' → logprob: -5.436553001403809
    6. ')' → logprob: -5.811553001403809
    7. '<|end|>' → logprob: -6.811553001403809
    8. '    
' → logprob: -7.436553001403809
    9. '       ' → logprob: -7.936553001403809
    10. '#' → logprob: -7.936553001403809

Token 344: ' #' (ID: 1069)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.16002483665943146
    2. 'we' → logprob: -2.660024881362915
    3. '#' (adapté à ' #') → logprob: -2.785024881362915
    4. '   ' → logprob: -5.160024642944336
    5. ' #' → logprob: -6.035024642944336
    6. ' we'll' → logprob: -6.535024642944336
    7. '    
' → logprob: -6.660024642944336
    8. ' the' → logprob: -7.535024642944336
    9. '    ' → logprob: -7.785024642944336
    10. ' from' → logprob: -7.910024642944336

Token 345: ' we' (ID: 581)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.5541998147964478
    2. '#' → logprob: -0.9291998147964478
    3. ' we' → logprob: -4.054199695587158
    4. 'from' → logprob: -5.304199695587158
    5. 'import' → logprob: -6.429199695587158
    6. 'continue' → logprob: -6.554199695587158
    7. 'the' → logprob: -6.679199695587158
    8. 'it' → logprob: -7.804199695587158
    9. 'here' → logprob: -7.804199695587158
    10. 'instead' → logprob: -8.054200172424316

Token 346: ' store' (ID: 4897)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.1854393184185028
    2. 'will' → logprob: -2.935439348220825
    3. 'can' → logprob: -3.185439348220825
    4. ' need' → logprob: -4.560439109802246
    5. 'use' → logprob: -4.560439109802246
    6. 'cannot' → logprob: -4.560439109802246
    7. 'generate' → logprob: -5.060439109802246
    8. '#' → logprob: -5.310439109802246
    9. ' will' → logprob: -5.560439109802246
    10. 'def' → logprob: -5.685439109802246

Token 347: ' dice' (ID: 22078)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.3474631309509277
    2. ' the' → logprob: -2.3474631309509277
    3. 'dice' → logprob: -2.3474631309509277
    4. 'the' → logprob: -2.4724631309509277
    5. ' all' → logprob: -2.5974631309509277
    6. 'states' → logprob: -2.7224631309509277
    7. ' a' → logprob: -2.8474631309509277
    8. ' them' → logprob: -2.9724631309509277
    9. ' states' → logprob: -3.0974631309509277
    10. 'all' → logprob: -3.0974631309509277

Token 348: ' faces' (ID: 22060)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.2706293761730194
    2. '_or' → logprob: -2.020629405975342
    3. 'orient' → logprob: -2.645629405975342
    4. '_faces' → logprob: -4.145629405975342
    5. '_positions' → logprob: -4.770629405975342
    6. '_orientation' → logprob: -5.895629405975342
    7. 'states' → logprob: -6.645629405975342
    8. 's' → logprob: -7.020629405975342
    9. ' orientations' → logprob: -7.020629405975342
    10. 'faces' → logprob: -7.270629405975342

Token 349: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0456714630126953
    2. '_states' → logprob: -1.6706714630126953
    3. ')' → logprob: -1.9206714630126953
    4. ',' → logprob: -2.1706714630126953
    5. 'states' → logprob: -3.0456714630126953
    6. '=' → logprob: -3.4206714630126953
    7. 's' → logprob: -3.9206714630126953
    8. '   ' → logprob: -4.295671463012695
    9. 'es' → logprob: -4.545671463012695
    10. '_state' → logprob: -4.670671463012695

Token 350: ' detect' (ID: 11839)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.39463135600090027
    2. ' index' → logprob: -1.2696313858032227
    3. ' tuple' → logprob: -3.7696313858032227
    4. 'tuple' → logprob: -4.769631385803223
    5. 'idx' → logprob: -6.269631385803223
    6. '_index' → logprob: -6.894631385803223
    7. ' a' → logprob: -7.019631385803223
    8. ' list' → logprob: -7.144631385803223
    9. 'list' → logprob: -7.144631385803223
    10. ' state' → logprob: -7.144631385803223

Token 351: ' visited' (ID: 18416)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.6535071134567261
    2. 'duplicates' → logprob: -2.0285072326660156
    3. ' repeats' → logprob: -2.2785072326660156
    4. ' repeated' → logprob: -2.6535072326660156
    5. 'visited' → logprob: -2.9035072326660156
    6. ' duplicate' → logprob: -3.4035072326660156
    7. ' visited' → logprob: -3.9035072326660156
    8. ' cycles' → logprob: -4.153507232666016
    9. 'duplicate' → logprob: -4.403507232666016
    10. ' orientation' → logprob: -4.903507232666016

Token 352: ' states' (ID: 9407)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3437339663505554
    2. '_states' → logprob: -1.8437340259552002
    3. 'states' → logprob: -3.7187340259552
    4. '_faces' → logprob: -3.9687340259552
    5. ',' → logprob: -4.343733787536621
    6. 's' → logprob: -4.468733787536621
    7. '
' → logprob: -4.468733787536621
    8. '   ' → logprob: -4.718733787536621
    9. ' visited' → logprob: -4.968733787536621
    10. 'faces' → logprob: -4.968733787536621

Token 353: '.

' (ID: 364)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.29921358823776245
    2. '   ' → logprob: -2.0492136478424072
    3. '
' → logprob: -2.5492136478424072
    4. 'dist' → logprob: -3.1742136478424072
    5. 'distance' → logprob: -5.674213409423828
    6. ' visited' → logprob: -5.924213409423828
    7. 'import' → logprob: -6.924213409423828
    8. '#' → logprob: -7.174213409423828
    9. 'dp' → logprob: -7.799213409423828
    10. '    
' → logprob: -8.174213409423828

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3238321840763092
    2. 'visited' → logprob: -1.4488321542739868
    3. ' visited' → logprob: -3.9488322734832764
    4. 'dist' → logprob: -4.198832035064697
    5. 'import' → logprob: -6.698832035064697
    6. 'from' → logprob: -6.948832035064697
    7. 'distance' → logprob: -6.948832035064697
    8. 'dp' → logprob: -6.948832035064697
    9. '
' → logprob: -7.448832035064697
    10. '    
' → logprob: -7.698832035064697

Token 355: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.33708786964416504
    2. 'from' → logprob: -2.087087869644165
    3. 'dist' → logprob: -2.087087869644165
    4. '   ' → logprob: -4.212087631225586
    5. 'import' → logprob: -4.837087631225586
    6. 'INF' → logprob: -4.962087631225586
    7. '#' (adapté à ' #') → logprob: -5.962087631225586
    8. 'max' → logprob: -6.212087631225586
    9. 'faces' → logprob: -6.837087631225586
    10. 'dp' → logprob: -7.587087631225586

Token 356: ' To' (ID: 2514)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1488734781742096
    2. 'dist' → logprob: -2.8988735675811768
    3. 'from' → logprob: -3.0238735675811768
    4. '#' → logprob: -4.273873329162598
    5. 'faces' → logprob: -5.273873329162598
    6. 'max' → logprob: -5.648873329162598
    7. 'INF' → logprob: -5.898873329162598
    8. 'dice' → logprob: -6.023873329162598
    9. 'dire' → logprob: -6.273873329162598
    10. 'import' → logprob: -6.523873329162598

Token 357: ' reduce' (ID: 10389)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0228440761566162
    2. 'visit' → logprob: -2.147844076156616
    3. 'solve' → logprob: -2.522844076156616
    4. 'reduce' → logprob: -2.897844076156616
    5. 'store' → logprob: -3.022844076156616
    6. ' store' → logprob: -3.147844076156616
    7. 'keep' → logprob: -3.647844076156616
    8. 'do' → logprob: -3.647844076156616
    9. 'avoid' → logprob: -3.772844076156616
    10. 'opt' → logprob: -4.022844314575195

Token 358: ' state' (ID: 2608)
  Prédit: 'memory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memory' → logprob: -0.7072694897651672
    2. 'visited' → logprob: -1.7072694301605225
    3. 'the' → logprob: -1.9572694301605225
    4. ' memory' → logprob: -2.9572694301605225
    5. 'from' → logprob: -3.2072694301605225
    6. 'states' → logprob: -3.5822694301605225
    7. 'code' → logprob: -3.9572694301605225
    8. ' the' → logprob: -4.832269668579102
    9. 'space' → logprob: -5.082269668579102
    10. ' code' → logprob: -5.457269668579102

Token 359: ' space' (ID: 4918)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7076970338821411
    2. '_space' → logprob: -1.4576970338821411
    3. 'space' → logprob: -1.5826970338821411
    4. '_size' → logprob: -3.3326969146728516
    5. ' space' → logprob: -4.207696914672852
    6. '_count' → logprob: -5.207696914672852
    7. 'size' → logprob: -5.207696914672852
    8. '_num' → logprob: -5.957696914672852
    9. 'visited' → logprob: -7.082696914672852
    10. '_' → logprob: -7.207696914672852

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26839426159858704
    2. '   ' → logprob: -1.5183942317962646
    3. 'visited' → logprob: -5.143394470214844
    4. ',
' → logprob: -5.893394470214844
    5. ' visited' → logprob: -6.768394470214844
    6. ' states' → logprob: -7.018394470214844
    7. 'states' → logprob: -7.143394470214844
    8. ' ,' → logprob: -7.268394470214844
    9. 'from' → logprob: -7.393394470214844
    10. ':' → logprob: -7.518394470214844

Token 361: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5445560812950134
    2. 'from' → logprob: -1.6695561408996582
    3. 'import' → logprob: -2.669556140899658
    4. 'dice' → logprob: -2.669556140899658
    5. 'we' → logprob: -3.169556140899658
    6. 'visited' → logprob: -4.044556140899658
    7. 'faces' → logprob: -4.669556140899658
    8. 'def' → logprob: -5.044556140899658
    9. '
' → logprob: -5.419556140899658
    10. ' from' → logprob: -5.919556140899658

Token 362: ' store' (ID: 4897)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.96820068359375
    2. ' can' → logprob: -1.84320068359375
    3. ''ll' → logprob: -1.96820068359375
    4. 'need' → logprob: -3.21820068359375
    5. 'will' → logprob: -3.21820068359375
    6. 'store' → logprob: -3.34320068359375
    7. 'use' → logprob: -3.59320068359375
    8. ' will' → logprob: -3.84320068359375
    9. 'define' → logprob: -3.96820068359375
    10. 'consider' → logprob: -3.96820068359375

Token 363: ' dice' (ID: 22078)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.17571903765201569
    2. 'dice' → logprob: -2.8007190227508545
    3. 'faces' → logprob: -3.1757190227508545
    4. 'the' → logprob: -4.175719261169434
    5. ' visited' → logprob: -4.300719261169434
    6. 'states' → logprob: -5.050719261169434
    7. 'dist' → logprob: -5.175719261169434
    8. 'a' → logprob: -5.800719261169434
    9. 'seen' → logprob: -5.800719261169434
    10. 'from' → logprob: -6.050719261169434

Token 364: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.5562406778335571
    2. 'orient' → logprob: -1.8062406778335571
    3. ' orientations' → logprob: -2.3062405586242676
    4. '_faces' → logprob: -2.3062405586242676
    5. ' faces' → logprob: -3.5562405586242676
    6. '_states' → logprob: -4.181240558624268
    7. 'states' → logprob: -5.056240558624268
    8. ' orientation' → logprob: -5.681240558624268
    9. ' states' → logprob: -5.931240558624268
    10. 'positions' → logprob: -6.181240558624268

Token 365: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7361971139907837
    2. ' =' → logprob: -1.7361971139907837
    3. '_states' → logprob: -1.7361971139907837
    4. '_state' → logprob: -3.861196994781494
    5. 's' → logprob: -4.236196994781494
    6. ')' → logprob: -4.236196994781494
    7. 'and' → logprob: -4.361196994781494
    8. 'states' → logprob: -4.486196994781494
    9. '_positions' → logprob: -4.611196994781494
    10. '_faces' → logprob: -4.611196994781494

Token 366: ' a' (ID: 261)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.29668575525283813
    2. ' tuple' → logprob: -1.5466856956481934
    3. ' tuples' → logprob: -3.6716856956481934
    4. 'a' → logprob: -4.921685695648193
    5. '(tuple' → logprob: -4.921685695648193
    6. ' a' → logprob: -6.671685695648193
    7. 'top' → logprob: -7.171685695648193
    8. '(top' → logprob: -7.171685695648193
    9. 'tu' → logprob: -7.671685695648193
    10. '(' → logprob: -8.171686172485352

Token 367: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.16026932001113892
    2. ' tuple' → logprob: -1.9102692604064941
    3. 'fro' → logprob: -10.410269737243652
    4. 'key' → logprob: -12.660269737243652
    5. '(tuple' → logprob: -12.785269737243652
    6. 'string' → logprob: -12.785269737243652
    7. 'tu' → logprob: -13.160269737243652
    8. ' ' → logprob: -13.660269737243652
    9. 'hash' → logprob: -14.160269737243652
    10. '6' → logprob: -14.285269737243652

Token 368: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7742376327514648
    2. '   ' → logprob: -1.1492376327514648
    3. 'visited' → logprob: -3.024237632751465
    4. ' and' → logprob: -3.274237632751465
    5. ' =' → logprob: -3.524237632751465
    6. ')' → logprob: -3.899237632751465
    7. '
' → logprob: -4.024237632751465
    8. ',
' → logprob: -4.149237632751465
    9. ':' → logprob: -4.649237632751465
    10. '<|end|>' → logprob: -5.149237632751465

Token 369: ' ' (ID: 220)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.974571704864502
    2. '(top' → logprob: -1.099571704864502
    3. 'inte' → logprob: -2.849571704864502
    4. '6' → logprob: -3.099571704864502
    5. 'dice' → logprob: -3.224571704864502
    6. '(' → logprob: -3.474571704864502
    7. '(int' → logprob: -3.724571704864502
    8. 'faces' → logprob: -3.849571704864502
    9. 'the' → logprob: -3.974571704864502
    10. 'six' → logprob: -4.349571704864502

Token 370: '6' (ID: 21)
  Prédit: '(top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.5570322275161743
    2. 'top' → logprob: -1.6820322275161743
    3. 'inte' → logprob: -2.6820321083068848
    4. 'int' → logprob: -2.8070321083068848
    5. '(int' → logprob: -3.0570321083068848
    6. 'ints' → logprob: -3.6820321083068848
    7. '6' → logprob: -4.557032108306885
    8. 'dice' → logprob: -4.682032108306885
    9. '(' → logprob: -4.807032108306885
    10. 'six' → logprob: -5.307032108306885

Token 371: ' numbers' (ID: 8663)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.6768004298210144
    2. ')' → logprob: -2.051800489425659
    3. 'faces' → logprob: -2.051800489425659
    4. ' integers' → logprob: -2.176800489425659
    5. ' values' → logprob: -3.551800489425659
    6. 'inte' → logprob: -3.676800489425659
    7. 'elements' → logprob: -4.17680025100708
    8. 'numbers' → logprob: -4.42680025100708
    9. ',' → logprob: -4.55180025100708
    10. '_values' → logprob: -5.42680025100708

Token 372: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4036225378513336
    2. 'visited' → logprob: -1.7786225080490112
    3. '
' → logprob: -2.153622627258301
    4. ',' → logprob: -3.403622627258301
    5. '<|end|>' → logprob: -5.653622627258301
    6. '.' → logprob: -6.403622627258301
    7. 'import' → logprob: -6.528622627258301
    8. ')' → logprob: -6.653622627258301
    9. ' visited' → logprob: -6.653622627258301
    10. ',
' → logprob: -7.028622627258301

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3290193974971771
    2. 'dist' → logprob: -1.5790194272994995
    3. 'visited' → logprob: -3.07901930809021
    4. 'import' → logprob: -4.204019546508789
    5. 'from' → logprob: -4.579019546508789
    6. 'distance' → logprob: -6.204019546508789
    7. '
' → logprob: -8.204019546508789
    8. 'dp' → logprob: -8.579019546508789
    9. ' visited' → logprob: -8.954019546508789
    10. 'def' → logprob: -9.329019546508789

Token 374: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.30202850699424744
    2. 'visited' → logprob: -1.5520285367965698
    3. 'from' → logprob: -3.5520284175872803
    4. '   ' → logprob: -4.677028656005859
    5. 'import' → logprob: -5.177028656005859
    6. 'INF' → logprob: -5.802028656005859
    7. 'distance' → logprob: -7.052028656005859
    8. 'max' → logprob: -8.05202865600586
    9. 'dp' → logprob: -8.30202865600586
    10. 'start' → logprob: -8.42702865600586

Token 375: ' initial' (ID: 4871)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6165432333946228
    2. 'visited' → logprob: -1.1165432929992676
    3. 'from' → logprob: -2.2415432929992676
    4. 'import' → logprob: -3.9915432929992676
    5. '#' → logprob: -6.116543292999268
    6. 'INF' → logprob: -6.241543292999268
    7. 'start' → logprob: -7.116543292999268
    8. 'distance' → logprob: -7.116543292999268
    9. 'def' → logprob: -7.366543292999268
    10. '   ' → logprob: -7.491543292999268

Token 376: ' dice' (ID: 22078)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.029973672702908516
    2. 'dice' → logprob: -3.6549737453460693
    3. '_state' → logprob: -6.40497350692749
    4. '_faces' → logprob: -6.77997350692749
    5. '_pos' → logprob: -7.77997350692749
    6. '_distance' → logprob: -9.029973983764648
    7. '_dist' → logprob: -9.279973983764648
    8. '_position' → logprob: -10.029973983764648
    9. 'd' → logprob: -10.154973983764648
    10. ' =' → logprob: -10.529973983764648

Token 377: ' faces' (ID: 22060)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09581289440393448
    2. '_state' → logprob: -3.2208127975463867
    3. '_faces' → logprob: -3.3458127975463867
    4. '=' → logprob: -4.220812797546387
    5. 'state' → logprob: -7.095812797546387
    6. 'faces' → logprob: -8.220812797546387
    7. '=(' → logprob: -8.845812797546387
    8. '_orientation' → logprob: -9.595812797546387
    9. 'dice' → logprob: -9.845812797546387
    10. '_states' → logprob: -10.345812797546387

Token 378: '
' (ID: 198)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.4192778468132019
    2. ' =' → logprob: -1.2942779064178467
    3. '=' → logprob: -2.7942779064178467
    4. '   ' → logprob: -6.044277667999268
    5. ' dice' → logprob: -6.044277667999268
    6. '=(' → logprob: -6.544277667999268
    7. 'faces' → logprob: -8.044278144836426
    8. '(' → logprob: -8.294278144836426
    9. '=d' → logprob: -8.794278144836426
    10. 'd' → logprob: -9.544278144836426

Token 379: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3013684153556824
    2. 'dice' → logprob: -1.9263684749603271
    3. '=' → logprob: -2.176368474960327
    4. '   ' → logprob: -7.801368236541748
    5. ' dice' → logprob: -7.801368236541748
    6. '=d' → logprob: -9.301368713378906
    7. '=(' → logprob: -9.801368713378906
    8. 'd' → logprob: -10.176368713378906
    9. 'faces' → logprob: -10.926368713378906
    10. ':' → logprob: -11.551368713378906

Token 380: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' (adapté à ' dice') → logprob: -0.049653310328722
    2. '(' → logprob: -3.0496532917022705
    3. 'start' → logprob: -7.29965353012085
    4. ' dice' → logprob: -8.674653053283691
    5. '   ' → logprob: -9.049653053283691
    6. ' (' → logprob: -10.174653053283691
    7. 'initial' → logprob: -11.299653053283691
    8. 'current' → logprob: -11.424653053283691
    9. 'd' → logprob: -11.674653053283691
    10. 'faces' → logprob: -12.174653053283691

Token 381: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741269052028656
    2. '=' → logprob: -0.974126935005188
    3. '=(' → logprob: -10.724126815795898
    4. '_faces' → logprob: -10.724126815795898
    5. 'faces' → logprob: -12.974126815795898
    6. ' =(' → logprob: -13.599126815795898
    7. '_face' → logprob: -14.224126815795898
    8. 's' → logprob: -14.474126815795898
    9. '_state' → logprob: -15.724126815795898
    10. '_states' → logprob: -15.849126815795898

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688158988952637
    2. ' =' → logprob: -1.1368815898895264
    3. '=(' → logprob: -11.761881828308105
    4. 'faces' → logprob: -14.011881828308105
    5. ' =(' → logprob: -14.261881828308105
    6. 's' → logprob: -14.886881828308105
    7. ')' → logprob: -15.136881828308105
    8. 'face' → logprob: -15.261881828308105
    9. '_faces' → logprob: -15.261881828308105
    10. ' ' → logprob: -17.13688087463379

Token 383: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009115827269852161
    2. ' (' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.000911712646484
    4. '  ' → logprob: -19.500911712646484
    5. ' ' → logprob: -20.625911712646484
    6. '((' → logprob: -23.375911712646484
    7. '（' → logprob: -23.625911712646484
    8. '(
' → logprob: -24.500911712646484
    9. '    ' → logprob: -25.125911712646484
    10. ' ' → logprob: -25.250911712646484

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -17.0
    4. '  ' → logprob: -20.75
    5. '１' → logprob: -21.25
    6. '(' → logprob: -21.875
    7. '    ' → logprob: -22.0
    8. '
' → logprob: -22.875
    9. '۱' → logprob: -23.0
    10. '0' → logprob: -24.0

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.040457421680912e-05
    2. ' ,' → logprob: -9.625070571899414
    3. ',
' → logprob: -12.500070571899414
    4. '6' → logprob: -15.375070571899414
    5. ',)' → logprob: -15.500070571899414
    6. ')' → logprob: -16.750070571899414
    7. '‌,' → logprob: -17.750070571899414
    8. ',,' → logprob: -17.875070571899414
    9. ',),' → logprob: -18.000070571899414
    10. ',,,' → logprob: -18.125070571899414

Token 386: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۶' → logprob: -18.250015258789062
    4. '   ' → logprob: -18.687515258789062
    5. '６' → logprob: -19.062515258789062
    6. '  ' → logprob: -19.125015258789062
    7. '2' → logprob: -19.250015258789062
    8. '٦' → logprob: -19.437515258789062
    9. '```' → logprob: -19.500015258789062
    10. '1' → logprob: -20.062515258789062

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.661626634420827e-05
    2. ' ,' → logprob: -9.750086784362793
    3. '2' → logprob: -11.125086784362793
    4. '1' → logprob: -11.625086784362793
    5. ',
' → logprob: -12.750086784362793
    6. '5' → logprob: -14.125086784362793
    7. ')' → logprob: -14.875086784362793
    8. ' ' → logprob: -15.875086784362793
    9. '   ' → logprob: -16.125085830688477
    10. '),' → logprob: -16.625085830688477

Token 388: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -15.250004768371582
    4. '۵' → logprob: -17.125003814697266
    5. '５' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '٥' → logprob: -18.125003814697266
    8. '৫' → logprob: -18.625003814697266
    9. '५' → logprob: -18.625003814697266
    10. '  ' → logprob: -18.687503814697266

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041744497139006853
    2. ' ,' → logprob: -7.875417232513428
    3. '2' → logprob: -10.250417709350586
    4. ',
' → logprob: -13.250417709350586
    5. ' ' → logprob: -16.875417709350586
    6. '3' → logprob: -17.250417709350586
    7. '6' → logprob: -17.500417709350586
    8. '1' → logprob: -17.750417709350586
    9. ',

' → logprob: -17.750417709350586
    10. ')' → logprob: -17.750417709350586

Token 390: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. '۲' → logprob: -15.750140190124512
    4. '
' → logprob: -16.625141143798828
    5. '  ' → logprob: -16.625141143798828
    6. '２' → logprob: -16.687641143798828
    7. ',' → logprob: -17.312641143798828
    8. '   ' → logprob: -17.375141143798828
    9. '```' → logprob: -17.562641143798828
    10. '<|end|>' → logprob: -17.750141143798828

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002790935104712844
    2. ' ,' → logprob: -8.250279426574707
    3. '4' → logprob: -11.000279426574707
    4. '1' → logprob: -15.125279426574707
    5. ')' → logprob: -15.125279426574707
    6. ',
' → logprob: -15.500279426574707
    7. ',,' → logprob: -16.12527847290039
    8. '3' → logprob: -16.62527847290039
    9. ' ' → logprob: -16.87527847290039
    10. ',(' → logprob: -17.50027847290039

Token 392: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۴' → logprob: -16.750015258789062
    4. '৪' → logprob: -17.750015258789062
    5. '' → logprob: -18.250015258789062
    6. '４' → logprob: -18.250015258789062
    7. '٤' → logprob: -18.375015258789062
    8. '४' → logprob: -18.500015258789062
    9. '  ' → logprob: -19.062515258789062
    10. ',' → logprob: -19.250015258789062

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001368807745166123
    2. '3' → logprob: -6.876368999481201
    3. ' ,' → logprob: -8.001368522644043
    4. ',
' → logprob: -14.376368522644043
    5. ')' → logprob: -16.00136947631836
    6. ' ' → logprob: -16.25136947631836
    7. '‌,' → logprob: -16.87636947631836
    8. ',\
' → logprob: -17.75136947631836
    9. '
' → logprob: -18.37636947631836
    10. '<|end|>' → logprob: -18.50136947631836

Token 394: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۳' → logprob: -18.750003814697266
    4. '３' → logprob: -20.000003814697266
    5. ')' → logprob: -20.125003814697266
    6. '৩' → logprob: -20.500003814697266
    7. ' three' → logprob: -21.000003814697266
    8. '३' → logprob: -21.500003814697266
    9. '٣' → logprob: -22.375003814697266
    10. '```' → logprob: -22.687503814697266

Token 395: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ')
' → logprob: -12.250005722045898
    3. ' )' → logprob: -13.750005722045898
    4. '   ' → logprob: -17.2500057220459
    5. ')

' → logprob: -17.3750057220459
    6. ')`' → logprob: -18.6250057220459
    7. ')
' → logprob: -19.0000057220459
    8. ')#' → logprob: -19.2500057220459
    9. '),' → logprob: -20.0000057220459
    10. '))' → logprob: -20.6250057220459

Token 396: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6011765599250793
    2. '   ' → logprob: -0.8511765599250793
    3. 'import' → logprob: -4.101176738739014
    4. 'distance' → logprob: -5.101176738739014
    5. 'from' → logprob: -6.726176738739014
    6. 'visited' → logprob: -7.226176738739014
    7. '
' → logprob: -8.726176261901855
    8. 'dp' → logprob: -9.351176261901855
    9. '    
' → logprob: -10.351176261901855
    10. ' dist' → logprob: -10.476176261901855

Token 397: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.017888860777020454
    2. 'import' → logprob: -4.767889022827148
    3. 'from' → logprob: -5.267889022827148
    4. 'visited' → logprob: -5.767889022827148
    5. '   ' → logprob: -8.142889022827148
    6. 'distance' → logprob: -8.517889022827148
    7. 'INF' → logprob: -8.517889022827148
    8. 'dp' → logprob: -9.517889022827148
    9. '
' → logprob: -9.517889022827148
    10. '#' → logprob: -10.767889022827148

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07049884647130966
    2. ' =' → logprob: -2.6954989433288574
    3. ',' → logprob: -8.3204984664917
    4. 'ance' → logprob: -8.9454984664917
    5. 'ances' → logprob: -9.1954984664917
    6. '[' → logprob: -9.9454984664917
    7. ')' → logprob: -10.8204984664917
    8. '=[]' → logprob: -12.1954984664917
    9. ' ' → logprob: -12.3204984664917
    10. ']' → logprob: -13.6954984664917

Token 399: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.061081476509571075
    2. '[[' → logprob: -3.3110814094543457
    3. '{' → logprob: -3.8110814094543457
    4. 'dict' → logprob: -8.686081886291504
    5. '[' → logprob: -8.811081886291504
    6. ' {}' → logprob: -9.061081886291504
    7. '{}
' → logprob: -9.311081886291504
    8. ' [[[' → logprob: -9.561081886291504
    9. ' [[' → logprob: -11.436081886291504
    10. '{-' → logprob: -11.561081886291504

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41144096851348877
    2. 'dist' → logprob: -1.4114409685134888
    3. 'import' → logprob: -3.411440849304199
    4. 'heap' → logprob: -3.911440849304199
    5. 'queue' → logprob: -4.161440849304199
    6. ' dist' → logprob: -4.536440849304199
    7. 'pq' → logprob: -5.036440849304199
    8. ' queue' → logprob: -6.536440849304199
    9. 'start' → logprob: -6.786440849304199
    10. ' heap' → logprob: -6.911440849304199

Token 401: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.0694094896316528
    2. 'import' → logprob: -1.5694094896316528
    3. 'heap' → logprob: -2.0694093704223633
    4. 'dist' → logprob: -2.1944093704223633
    5. 'start' → logprob: -2.5694093704223633
    6. 'from' → logprob: -2.6944093704223633
    7. 'q' → logprob: -3.0694093704223633
    8. 'que' → logprob: -5.319409370422363
    9. 'pq' → logprob: -5.319409370422363
    10. '   ' → logprob: -5.569409370422363

Token 402: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.0099326372146606
    2. 'hq' → logprob: -1.2599326372146606
    3. 'pq' → logprob: -2.384932518005371
    4. 'q' → logprob: -2.384932518005371
    5. 'import' → logprob: -2.759932518005371
    6. 'start' → logprob: -3.259932518005371
    7. 'queue' → logprob: -3.384932518005371
    8. 'dist' → logprob: -3.884932518005371
    9. 'que' → logprob: -5.009932518005371
    10. 'h' → logprob: -5.759932518005371

Token 403: ' elements' (ID: 8632)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04967599734663963
    2. 'q' → logprob: -3.299675941467285
    3. '=' → logprob: -4.674675941467285
    4. '=[]' → logprob: -6.174675941467285
    5. ' ' → logprob: -9.799675941467285
    6. 'queue' → logprob: -11.174675941467285
    7. ' =[' → logprob: -11.424675941467285
    8. '[' → logprob: -11.549675941467285
    9. ',' → logprob: -11.549675941467285
    10. '   ' → logprob: -11.674675941467285

Token 404: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0796690285205841
    2. '=' → logprob: -2.5796689987182617
    3. '   ' → logprob: -7.454668998718262
    4. '=[]' → logprob: -9.329668998718262
    5. '.append' → logprob: -10.329668998718262
    6. ',' → logprob: -10.829668998718262
    7. '=[' → logprob: -11.454668998718262
    8. ' =(' → logprob: -11.954668998718262
    9. ' =[' → logprob: -12.204668998718262
    10. '=[]
' → logprob: -12.454668998718262

Token 405: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.30051735043525696
    2. '(' → logprob: -1.4255173206329346
    3. '(heap' → logprob: -4.675517559051514
    4. '   ' → logprob: -5.300517559051514
    5. '(h' → logprob: -6.925517559051514
    6. '(y' → logprob: -7.050517559051514
    7. '(s' → logprob: -7.925517559051514
    8. '(distance' → logprob: -8.050517082214355
    9. '(cost' → logprob: -8.175517082214355
    10. '(priority' → logprob: -8.300517082214355

Token 406: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2577563226222992
    2. 'dist' → logprob: -1.6327563524246216
    3. ' cost' → logprob: -4.257756233215332
    4. '0' → logprob: -4.632756233215332
    5. 'distance' → logprob: -5.507756233215332
    6. ' dist' → logprob: -6.007756233215332
    7. ')' → logprob: -7.257756233215332
    8. 'score' → logprob: -8.632756233215332
    9. 'd' → logprob: -8.757756233215332
    10. 'current' → logprob: -9.507756233215332

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.570319702499546e-05
    2. ' ,' → logprob: -10.750025749206543
    3. ',
' → logprob: -13.625025749206543
    4. ')' → logprob: -13.625025749206543
    5. ',c' → logprob: -15.250025749206543
    6. '),' → logprob: -15.625025749206543
    7. ',d' → logprob: -16.000024795532227
    8. ',int' → logprob: -16.000024795532227
    9. ',)' → logprob: -16.000024795532227
    10. ',y' → logprob: -16.125024795532227

Token 408: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5232700705528259
    2. ' y' → logprob: -0.8982700705528259
    3. 'sy' → logprob: -9.773269653320312
    4. '   ' → logprob: -10.273269653320312
    5. ')' → logprob: -10.648269653320312
    6. ' sy' → logprob: -12.023269653320312
    7. 'ny' → logprob: -12.648269653320312
    8. ' ny' → logprob: -12.898269653320312
    9. ')y' → logprob: -12.898269653320312
    10. '	y' → logprob: -13.273269653320312

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006401229766197503
    2. ',x' → logprob: -7.375639915466309
    3. ' ,' → logprob: -11.375639915466309
    4. 'x' → logprob: -13.750639915466309
    5. ',
' → logprob: -15.125639915466309
    6. ' x' → logprob: -15.625639915466309
    7. ')' → logprob: -15.750639915466309
    8. ',s' → logprob: -16.000640869140625
    9. ',w' → logprob: -16.875640869140625
    10. ' ' → logprob: -17.000640869140625

Token 410: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0889502614736557
    2. ' x' → logprob: -2.4639501571655273
    3. ',' → logprob: -12.213950157165527
    4. '   ' → logprob: -13.088950157165527
    5. ' ' → logprob: -13.713950157165527
    6. ',x' → logprob: -14.088950157165527
    7. '	x' → logprob: -14.213950157165527
    8. '  ' → logprob: -15.088950157165527
    9. '    ' → logprob: -15.463950157165527
    10. ')x' → logprob: -15.713950157165527

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011148543562740088
    2. ')' → logprob: -7.001114845275879
    3. ',d' → logprob: -8.626114845275879
    4. ' ,' → logprob: -11.876114845275879
    5. 'dice' → logprob: -12.501114845275879
    6. '   ' → logprob: -12.626114845275879
    7. ',
' → logprob: -12.876114845275879
    8. ',)' → logprob: -13.001114845275879
    9. '),' → logprob: -13.126114845275879
    10. ')d' → logprob: -14.751114845275879

Token 412: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.0065232873894274235
    2. ' dice' → logprob: -6.131523132324219
    3. '(' → logprob: -6.756523132324219
    4. 'faces' → logprob: -6.881523132324219
    5. 'd' → logprob: -7.256523132324219
    6. 'top' → logprob: -7.381523132324219
    7. '(d' → logprob: -7.881523132324219
    8. ')' → logprob: -8.881523132324219
    9. ' (' → logprob: -9.506523132324219
    10. '(top' → logprob: -9.756523132324219

Token 413: '_faces' (ID: 158689)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7508243918418884
    2. '_faces' → logprob: -1.0008244514465332
    3. '_state' → logprob: -1.8758244514465332
    4. 'faces' → logprob: -6.125824451446533
    5. 'state' → logprob: -6.125824451446533
    6. '_states' → logprob: -7.000824451446533
    7. ')_' → logprob: -7.000824451446533
    8. ',' → logprob: -7.750824451446533
    9. '_f' → logprob: -8.500823974609375
    10. '_face' → logprob: -8.875823974609375

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014084660506341606
    2. ',' → logprob: -9.250141143798828
    3. ')
' → logprob: -10.250141143798828
    4. ' )' → logprob: -12.250141143798828
    5. '   ' → logprob: -12.875141143798828
    6. ')=' → logprob: -14.500141143798828
    7. ')
' → logprob: -15.125141143798828
    8. ',)' → logprob: -15.750141143798828
    9. '_' → logprob: -16.125141143798828
    10. '),' → logprob: -16.125141143798828

Token 415: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0575588941574097
    2. 'heap' → logprob: -1.5575588941574097
    3. '[' → logprob: -2.307559013366699
    4. '   ' → logprob: -2.432559013366699
    5. ')' → logprob: -2.432559013366699
    6. '(' → logprob: -3.557559013366699
    7. ' =' → logprob: -3.682559013366699
    8. '(heap' → logprob: -3.807559013366699
    9. '[
' → logprob: -4.182559013366699
    10. ' (' → logprob: -4.307559013366699

Token 416: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.006960689090192318
    2. ' heap' → logprob: -5.756960868835449
    3. 'hq' → logprob: -5.881960868835449
    4. 'h' → logprob: -7.881960868835449
    5. '   ' → logprob: -8.50696086883545
    6. 'pq' → logprob: -8.75696086883545
    7. 'import' → logprob: -9.13196086883545
    8. 'q' → logprob: -9.50696086883545
    9. 'queue' → logprob: -10.00696086883545
    10. '
' → logprob: -12.50696086883545

Token 417: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7989969849586487
    2. '=' → logprob: -1.173996925354004
    3. ' =' → logprob: -1.423996925354004
    4. '=[]' → logprob: -8.423996925354004
    5. '   ' → logprob: -10.298996925354004
    6. ',' → logprob: -10.923996925354004
    7. ')' → logprob: -11.048996925354004
    8. ' ' → logprob: -11.048996925354004
    9. '.push' → logprob: -11.673996925354004
    10. '.' → logprob: -11.923996925354004

Token 418: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.004352860152721405
    2. ' [(' → logprob: -5.754353046417236
    3. '[]' → logprob: -6.754353046417236
    4. ' []' → logprob: -11.879352569580078
    5. '[]
' → logprob: -13.879352569580078
    6. '[' → logprob: -14.379352569580078
    7. '[((' → logprob: -15.879352569580078
    8. '[]

' → logprob: -17.379352569580078
    9. '([(' → logprob: -17.754352569580078
    10. ' [' → logprob: -17.879352569580078

Token 419: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4557724595069885
    2. '   ' → logprob: -1.7057723999023438
    3. '(heap' → logprob: -2.5807723999023438
    4. ' heap' → logprob: -3.3307723999023438
    5. '
' → logprob: -3.8307723999023438
    6. 'he' → logprob: -4.080772399902344
    7. ' 
' → logprob: -4.705772399902344
    8. '[' → logprob: -5.330772399902344
    9. '  
' → logprob: -5.705772399902344
    10. 'import' → logprob: -5.955772399902344

Token 420: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.10467863827943802
    2. ' heap' → logprob: -2.3546786308288574
    3. '   ' → logprob: -6.604678630828857
    4. '(heap' → logprob: -6.729678630828857
    5. 'import' → logprob: -7.354678630828857
    6. 'he' → logprob: -7.354678630828857
    7. '
' → logprob: -8.479679107666016
    8. ' 
' → logprob: -9.729679107666016
    9. '0' → logprob: -10.479679107666016
    10. '_heap' → logprob: -10.479679107666016

Token 421: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.37511226534843445
    2. '.append' → logprob: -1.6251122951507568
    3. '.' → logprob: -2.875112295150757
    4. '.he' → logprob: -3.375112295150757
    5. '.push' → logprob: -3.750112295150757
    6. '.heap' → logprob: -7.500112056732178
    7. ' .' → logprob: -8.250112533569336
    8. 'push' → logprob: -8.250112533569336
    9. '_push' → logprob: -8.625112533569336
    10. 'ush' → logprob: -9.625112533569336

Token 422: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0006102138431742787
    2. '.heap' → logprob: -7.8756103515625
    3. '.' → logprob: -8.6256103515625
    4. '.push' → logprob: -10.1256103515625
    5. '.put' → logprob: -12.5006103515625
    6. ').' → logprob: -12.7506103515625
    7. '.enqueue' → logprob: -13.6256103515625
    8. '.append' → logprob: -14.7506103515625
    9. '.p' → logprob: -15.2506103515625
    10. '.ap' → logprob: -15.5006103515625

Token 423: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.440506407059729e-05
    2. 'pp' → logprob: -10.50003433227539
    3. 'push' → logprob: -12.00003433227539
    4. 'append' → logprob: -14.87503433227539
    5. 'ap' → logprob: -15.75003433227539
    6. 'appen' → logprob: -17.50003433227539
    7. '[' → logprob: -17.75003433227539
    8. '```' → logprob: -18.00003433227539
    9. 'q' → logprob: -18.62503433227539
    10. '...' → logprob: -18.75003433227539

Token 424: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.246537173457909e-06
    2. 'push' → logprob: -13.000003814697266
    3. 'sh' → logprob: -13.500003814697266
    4. '```' → logprob: -14.750003814697266
    5. 'op' → logprob: -16.875003814697266
    6. 'us' → logprob: -17.875003814697266
    7. '``' → logprob: -18.000003814697266
    8. 'u' → logprob: -18.125003814697266
    9. 'le' → logprob: -18.125003814697266
    10. 'USH' → logprob: -18.125003814697266

Token 425: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.9361264946837764e-07
    2. 'heap' → logprob: -15.75
    3. ' (' → logprob: -17.0
    4. '(' → logprob: -17.625
    5. '```' → logprob: -19.0
    6. '((' → logprob: -20.0
    7. '(h' → logprob: -20.625
    8. '(hash' → logprob: -20.875
    9. '(queue' → logprob: -20.875
    10. '   ' → logprob: -21.0

Token 426: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0045464192517101765
    2. ',' → logprob: -6.129546642303467
    3. '(' → logprob: -6.254546642303467
    4. '((' → logprob: -8.504546165466309
    5. ' (' → logprob: -8.879546165466309
    6. ')' → logprob: -10.004546165466309
    7. ',(' → logprob: -10.879546165466309
    8. '(h' → logprob: -11.254546165466309
    9. 'heap' → logprob: -12.129546165466309
    10. ' ,' → logprob: -12.379546165466309

Token 427: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018293926259502769
    2. '0' → logprob: -7.001829624176025
    3. ' (' → logprob: -7.001829624176025
    4. ' ' → logprob: -12.501829147338867
    5. '   ' → logprob: -13.376829147338867
    6. ')' → logprob: -14.251829147338867
    7. '((' → logprob: -14.876829147338867
    8. '(
' → logprob: -15.126829147338867
    9. '
' → logprob: -15.376829147338867
    10. '[' → logprob: -15.751829147338867

Token 428: '0' (ID: 15)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.1650705188512802
    2. '0' → logprob: -1.9150705337524414
    3. ' grid' → logprob: -5.415070533752441
    4. ' ' → logprob: -9.040070533752441
    5. '(grid' → logprob: -9.415070533752441
    6. '-grid' → logprob: -9.665070533752441
    7. '1' → logprob: -10.415070533752441
    8. '(' → logprob: -11.165070533752441
    9. '-' → logprob: -11.415070533752441
    10. '	grid' → logprob: -11.852570533752441

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',s' → logprob: -15.500012397766113
    4. ',
' → logprob: -15.625012397766113
    5. '   ' → logprob: -17.500011444091797
    6. ')' → logprob: -18.625011444091797
    7. '
' → logprob: -18.750011444091797
    8. '),' → logprob: -18.750011444091797
    9. ',y' → logprob: -18.875011444091797
    10. ',\
' → logprob: -19.125011444091797

Token 430: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.00978961680084467
    2. ' sy' → logprob: -4.63478946685791
    3. '0' → logprob: -11.50978946685791
    4. 'sx' → logprob: -11.63478946685791
    5. '_sy' → logprob: -12.13478946685791
    6. '   ' → logprob: -12.50978946685791
    7. '.sy' → logprob: -14.00978946685791
    8. 's' → logprob: -14.25978946685791
    9. 'Sy' → logprob: -14.25978946685791
    10. ')' → logprob: -14.38478946685791

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001895935565698892
    2. ',s' → logprob: -8.875189781188965
    3. ' ,' → logprob: -10.000189781188965
    4. ' ' → logprob: -13.875189781188965
    5. ',x' → logprob: -14.000189781188965
    6. ',S' → logprob: -14.750189781188965
    7. '‌,' → logprob: -15.000189781188965
    8. ',n' → logprob: -15.000189781188965
    9. '<|end|>' → logprob: -15.500189781188965
    10. ',
' → logprob: -15.750189781188965

Token 432: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.008634308353066444
    2. ' sx' → logprob: -4.758634090423584
    3. 's' → logprob: -11.383634567260742
    4. ' ' → logprob: -12.133634567260742
    5. '   ' → logprob: -14.633634567260742
    6. ',' → logprob: -14.883634567260742
    7. 'ss' → logprob: -15.008634567260742
    8. '
' → logprob: -15.133634567260742
    9. ')' → logprob: -15.383634567260742
    10. '

' → logprob: -15.383634567260742

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001720742875477299
    2. ',d' → logprob: -8.875171661376953
    3. ' ,' → logprob: -10.375171661376953
    4. ',
' → logprob: -14.625171661376953
    5. '   ' → logprob: -15.375171661376953
    6. 'd' → logprob: -15.750171661376953
    7. '),' → logprob: -16.750171661376953
    8. ')' → logprob: -17.000171661376953
    9. '```' → logprob: -17.000171661376953
    10. ',

' → logprob: -17.875171661376953

Token 434: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.0021861877758055925
    2. ' dice' → logprob: -6.127186298370361
    3. 'd' → logprob: -14.127185821533203
    4. 'tuple' → logprob: -16.377185821533203
    5. 'dic' → logprob: -16.502185821533203
    6. '   ' → logprob: -16.877185821533203
    7. 'Dice' → logprob: -17.127185821533203
    8. ' ' → logprob: -17.877185821533203
    9. ')' → logprob: -18.252185821533203
    10. ' dices' → logprob: -18.877185821533203

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.625
    3. ' ' → logprob: -16.875
    4. '۰' → logprob: -17.5
    5. '))' → logprob: -18.625
    6. '_' → logprob: -19.0
    7. '```' → logprob: -19.25
    8. ',' → logprob: -19.5
    9. '(' → logprob: -19.875
    10. '０' → logprob: -20.375

Token 436: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.547789674485102e-05
    2. ')' → logprob: -10.625035285949707
    3. '))
' → logprob: -11.625035285949707
    4. ' ))' → logprob: -13.250035285949707
    5. '))

' → logprob: -15.750035285949707
    6. ')))' → logprob: -16.250036239624023
    7. '))
' → logprob: -16.750036239624023
    8. '   ' → logprob: -16.875036239624023
    9. '));' → logprob: -17.625036239624023
    10. ' ' → logprob: -17.875036239624023

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8127361536026001
    2. ' while' → logprob: -1.4377361536026
    3. 'while' → logprob: -1.8127361536026
    4. ')' → logprob: -2.0627360343933105
    5. '<|end|>' → logprob: -4.1877360343933105
    6. '    
' → logprob: -5.9377360343933105
    7. '```' → logprob: -6.3127360343933105
    8. '
' → logprob: -6.4377360343933105
    9. ' 
' → logprob: -6.6877360343933105
    10. ',' → logprob: -6.6877360343933105

Token 438: ' dist' (ID: 3601)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4576309025287628
    2. 'while' → logprob: -1.0826308727264404
    3. '   ' → logprob: -3.8326308727264404
    4. ' while' → logprob: -5.8326311111450195
    5. 'dist' (adapté à ' dist') → logprob: -6.5826311111450195
    6. ' visited' → logprob: -6.9576311111450195
    7. ')' → logprob: -7.3326311111450195
    8. 'v' → logprob: -8.08263111114502
    9. '    
' → logprob: -8.95763111114502
    10. 'seen' → logprob: -9.70763111114502

Token 439: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.010797612369060516
    2. '[' → logprob: -4.760797500610352
    3. '[d' → logprob: -6.135797500610352
    4. '[
' → logprob: -11.885797500610352
    5. '[((' → logprob: -12.760797500610352
    6. '[s' → logprob: -14.010797500610352
    7. 'heap' → logprob: -14.135797500610352
    8. '(d' → logprob: -14.135797500610352
    9. '```' → logprob: -14.135797500610352
    10. '[key' → logprob: -14.510797500610352

Token 440: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -3.583550642360933e-05
    2. ' sy' → logprob: -10.250036239624023
    3. '_sy' → logprob: -14.875036239624023
    4. 's' → logprob: -17.625036239624023
    5. '.sy' → logprob: -18.250036239624023
    6. '(s' → logprob: -18.625036239624023
    7. 'Sy' → logprob: -18.750036239624023
    8. '(' → logprob: -18.875036239624023
    9. 'syz' → logprob: -19.250036239624023
    10. ' ' → logprob: -19.375036239624023

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011158885434269905
    2. ',s' → logprob: -4.5111589431762695
    3. ',x' → logprob: -9.38615894317627
    4. ' ,' → logprob: -10.88615894317627
    5. ',
' → logprob: -12.76115894317627
    6. ',S' → logprob: -13.26115894317627
    7. '<|end|>' → logprob: -14.38615894317627
    8. ',h' → logprob: -14.88615894317627
    9. ' ' → logprob: -15.26115894317627
    10. ',d' → logprob: -15.26115894317627

Token 442: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.0002181987656513229
    2. ' sx' → logprob: -8.750218391418457
    3. 's' → logprob: -9.875218391418457
    4. ' ' → logprob: -12.000218391418457
    5. ')' → logprob: -15.125218391418457
    6. '<|end|>' → logprob: -15.500218391418457
    7. '   ' → logprob: -15.625218391418457
    8. '
' → logprob: -15.750218391418457
    9. '0' → logprob: -16.00021743774414
    10. 'SX' → logprob: -16.37521743774414

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0060662562027573586
    2. ',d' → logprob: -5.25606632232666
    3. ' ,' → logprob: -7.13106632232666
    4. 'dice' → logprob: -11.63106632232666
    5. ',
' → logprob: -11.75606632232666
    6. ')]' → logprob: -12.25606632232666
    7. 'd' → logprob: -12.50606632232666
    8. ')' → logprob: -12.63106632232666
    9. ' dice' → logprob: -14.00606632232666
    10. '),' → logprob: -14.25606632232666

Token 444: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -4.8828707804204896e-05
    2. '(' → logprob: -10.125048637390137
    3. ' dice' → logprob: -11.750048637390137
    4. '1' → logprob: -14.125048637390137
    5. ' (' → logprob: -17.250049591064453
    6. 'dic' → logprob: -17.250049591064453
    7. ')' → logprob: -17.500049591064453
    8. '
' → logprob: -18.375049591064453
    9. '```' → logprob: -18.375049591064453
    10. 'd' → logprob: -19.000049591064453

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ')' → logprob: -18.875
    3. '```' → logprob: -18.875
    4. '۰' → logprob: -19.5
    5. '[' → logprob: -20.0
    6. 'o' → logprob: -20.25
    7. ')]' → logprob: -20.25
    8. ')])' → logprob: -20.375
    9. '０' → logprob: -20.875
    10. '_' → logprob: -20.875

Token 446: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.084206375409849e-05
    2. ']' → logprob: -10.500041007995605
    3. ')' → logprob: -11.500041007995605
    4. ' )' → logprob: -12.750041007995605
    5. '])' → logprob: -15.875041007995605
    6. '   ' → logprob: -17.75004005432129
    7. '])]' → logprob: -17.75004005432129
    8. ']=' → logprob: -17.87504005432129
    9. ')=' → logprob: -18.00004005432129
    10. '))' → logprob: -18.12504005432129

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015047440538182855
    2. ' =' → logprob: -6.501504898071289
    3. ']' → logprob: -13.626504898071289
    4. ']=' → logprob: -14.001504898071289
    5. ')' → logprob: -15.376504898071289
    6. ')=' → logprob: -15.626504898071289
    7. '=

' → logprob: -18.25150489807129
    8. ' ' → logprob: -19.37650489807129
    9. '=
' → logprob: -19.50150489807129
    10. '0' → logprob: -19.50150489807129

Token 448: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۰' → logprob: -20.875
    4. '   ' → logprob: -22.125
    5. '000' → logprob: -23.0
    6. '０' → logprob: -23.0
    7. '00' → logprob: -23.25
    8. ' ' → logprob: -24.0
    9. '[' → logprob: -24.375
    10. '	' → logprob: -24.875

Token 449: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '۰' → logprob: -21.375
    4. '00' → logprob: -21.75
    5. '   ' → logprob: -22.25
    6. '000' → logprob: -22.25
    7. '０' → logprob: -23.25
    8. '[' → logprob: -24.5
    9. ' ' → logprob: -24.6875
    10. '1' → logprob: -24.8125

Token 450: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.315989226102829
    2. '   ' → logprob: -1.5659892559051514
    3. ' while' → logprob: -2.9409892559051514
    4. '<|end|>' → logprob: -5.065989017486572
    5. '	while' → logprob: -6.815989017486572
    6. '    
' → logprob: -7.440989017486572
    7. ')' → logprob: -7.940989017486572
    8. '```' → logprob: -8.44098949432373
    9. '
' → logprob: -8.69098949432373
    10. 'While' → logprob: -8.69098949432373

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7070005536079407
    2. ' while' → logprob: -1.207000494003296
    3. 'while' → logprob: -1.832000494003296
    4. ')' → logprob: -3.707000494003296
    5. '<|end|>' → logprob: -4.457000732421875
    6. ',' → logprob: -6.082000732421875
    7. ' ' → logprob: -6.457000732421875
    8. '  ' → logprob: -6.832000732421875
    9. '	while' → logprob: -6.957000732421875
    10. ' 
' → logprob: -7.082000732421875

Token 452: ' dy' (ID: 11996)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.001270112581551075
    2. '   ' → logprob: -7.376270294189453
    3. ' while' → logprob: -7.376270294189453
    4. 'dire' → logprob: -11.376270294189453
    5. 'moves' → logprob: -13.876270294189453
    6. '    
' → logprob: -14.001270294189453
    7. '```' → logprob: -14.126270294189453
    8. 'direction' → logprob: -14.376270294189453
    9. '	while' → logprob: -14.376270294189453
    10. 'While' → logprob: -14.501270294189453

Token 453: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020708413794636726
    2. '=' → logprob: -3.8957083225250244
    3. 's' → logprob: -9.395708084106445
    4. '=[' → logprob: -9.770708084106445
    5. ',' → logprob: -11.395708084106445
    6. ' =[' → logprob: -11.645708084106445
    7. ')' → logprob: -13.395708084106445
    8. '   ' → logprob: -13.395708084106445
    9. '[' → logprob: -14.020708084106445
    10. ']' → logprob: -14.520708084106445

Token 454: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.006790562998503447
    2. ' [-' → logprob: -5.006790637969971
    3. '[' → logprob: -9.506790161132812
    4. '(-' → logprob: -14.506790161132812
    5. ' [' → logprob: -15.506790161132812
    6. '-' → logprob: -17.131790161132812
    7. ' (-' → logprob: -17.381790161132812
    8. '   ' → logprob: -18.006790161132812
    9. ' ' → logprob: -19.256790161132812
    10. '([-' → logprob: -19.756790161132812

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.375
    4. '
' → logprob: -18.5
    5. '１' → logprob: -19.625
    6. '0' → logprob: -19.625
    7. '

' → logprob: -19.625
    8. '-' → logprob: -20.0
    9. ']' → logprob: -20.5625
    10. '[' → logprob: -20.625

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ' ,' → logprob: -12.125009536743164
    3. '0' → logprob: -12.500009536743164
    4. ',
' → logprob: -14.625009536743164
    5. ' ' → logprob: -18.500009536743164
    6. '[' → logprob: -20.125009536743164
    7. '‌,' → logprob: -20.375009536743164
    8. ',

' → logprob: -20.500009536743164
    9. '   ' → logprob: -20.500009536743164
    10. ',
' → logprob: -20.875009536743164

Token 457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002378673671046272
    2. ' ' → logprob: -8.625237464904785
    3. '0' → logprob: -9.750237464904785
    4. '+' → logprob: -18.3752384185791
    5. '   ' → logprob: -18.8752384185791
    6. '```' → logprob: -18.8752384185791
    7. '
' → logprob: -19.5002384185791
    8. ']' → logprob: -20.5627384185791
    9. ',' → logprob: -20.5627384185791
    10. '１' → logprob: -20.6252384185791

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006336859660223126
    2. ' ,' → logprob: -7.375633716583252
    3. '0' → logprob: -12.125633239746094
    4. ' ' → logprob: -14.375633239746094
    5. '   ' → logprob: -14.750633239746094
    6. ']' → logprob: -15.375633239746094
    7. ',
' → logprob: -15.750633239746094
    8. ',None' → logprob: -16.500633239746094
    9. '<|end|>' → logprob: -17.125633239746094
    10. '  ' → logprob: -17.375633239746094

Token 459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.12520408630371
    4. '۰' → logprob: -17.50020408630371
    5. '  ' → logprob: -17.75020408630371
    6. '
' → logprob: -18.00020408630371
    7. ',' → logprob: -18.87520408630371
    8. '00' → logprob: -19.00020408630371
    9. '    ' → logprob: -19.18770408630371
    10. '０' → logprob: -19.56270408630371

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004350797680672258
    2. ' ,' → logprob: -7.750434875488281
    3. ']' → logprob: -12.500434875488281
    4. ',
' → logprob: -15.875434875488281
    5. '0' → logprob: -16.00043487548828
    6. ' ' → logprob: -16.25043487548828
    7. ',None' → logprob: -16.62543487548828
    8. '<|end|>' → logprob: -16.75043487548828
    9. '   ' → logprob: -17.37543487548828
    10. ' ]' → logprob: -18.00043487548828

Token 461: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '۰' → logprob: -16.37506675720215
    4. '   ' → logprob: -17.87506675720215
    5. '  ' → logprob: -18.00006675720215
    6. '０' → logprob: -18.68756675720215
    7. '-' → logprob: -19.18756675720215
    8. '    ' → logprob: -19.75006675720215
    9. '০' → logprob: -20.31256675720215
    10. '00' → logprob: -20.37506675720215

Token 462: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10042329877614975
    2. ']
' → logprob: -2.3504233360290527
    3. ' ]' → logprob: -9.600422859191895
    4. ',' → logprob: -9.600422859191895
    5. ']
' → logprob: -9.975422859191895
    6. ' ]
' → logprob: -11.100422859191895
    7. '   ' → logprob: -11.225422859191895
    8. ']

' → logprob: -12.600422859191895
    9. 'w' → logprob: -14.725422859191895
    10. ',
' → logprob: -14.850422859191895

Token 463: '   ' (ID: 271)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.2087879180908203
    2. ' dx' → logprob: -1.7087879180908203
    3. '   ' → logprob: -5.20878791809082
    4. ',' → logprob: -6.70878791809082
    5. '_dx' → logprob: -8.20878791809082
    6. 'dc' → logprob: -8.45878791809082
    7. ' dc' → logprob: -9.58378791809082
    8. '(dx' → logprob: -10.20878791809082
    9. ' ,' → logprob: -11.45878791809082
    10. '    ' → logprob: -11.58378791809082

Token 464: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.02324594371020794
    2. ' dx' → logprob: -3.7732460498809814
    3. '_dx' → logprob: -15.398245811462402
    4. '   ' → logprob: -16.02324676513672
    5. ' directions' → logprob: -17.39824676513672
    6. 'dire' → logprob: -17.64824676513672
    7. '(dx' → logprob: -18.64824676513672
    8. ' ' → logprob: -19.02324676513672
    9. '
' → logprob: -19.27324676513672
    10. 'd' → logprob: -19.52324676513672

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5770611763000488
    2. ' =' → logprob: -0.8270611763000488
    3. '=[' → logprob: -6.827061176300049
    4. ' =[' → logprob: -10.82706069946289
    5. '[' → logprob: -11.32706069946289
    6. ']' → logprob: -12.95206069946289
    7. ']=' → logprob: -13.70206069946289
    8. '＝' → logprob: -14.95206069946289
    9. '   ' → logprob: -15.07706069946289
    10. ' ' → logprob: -15.70206069946289

Token 466: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.347765181795694e-05
    2. ' [' → logprob: -10.375053405761719
    3. '0' → logprob: -10.750053405761719
    4. '[-' → logprob: -14.125053405761719
    5. ' ' → logprob: -17.62505340576172
    6. '   ' → logprob: -18.00005340576172
    7. '[...,' → logprob: -19.00005340576172
    8. '(' → logprob: -19.87505340576172
    9. '=[' → logprob: -20.12505340576172
    10. '	' → logprob: -20.37505340576172

Token 467: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034273360506631434
    2. ' ' → logprob: -8.00034236907959
    3. '-' → logprob: -11.87534236907959
    4. ' -' → logprob: -16.250343322753906
    5. '   ' → logprob: -16.500343322753906
    6. '00' → logprob: -17.000343322753906
    7. '۰' → logprob: -17.000343322753906
    8. '
' → logprob: -17.250343322753906
    9. '  ' → logprob: -17.375343322753906
    10. '０' → logprob: -18.062843322753906

Token 468: ',' (ID: 11)
  Prédit: ',-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.25195762515068054
    2. ',' → logprob: -1.501957654953003
    3. ',
' → logprob: -11.126957893371582
    4. ' ,' → logprob: -12.001957893371582
    5. ' ,-' → logprob: -12.501957893371582
    6. ',-
' → logprob: -14.001957893371582
    7. '-' → logprob: -14.376957893371582
    8. ',+' → logprob: -14.376957893371582
    9. ',\
' → logprob: -14.751957893371582
    10. '   ' → logprob: -15.126957893371582

Token 469: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.2842308680992573e-05
    2. ' -' → logprob: -10.750022888183594
    3. '1' → logprob: -14.125022888183594
    4. '0' → logprob: -14.375022888183594
    5. ' ' → logprob: -18.750022888183594
    6. '−' → logprob: -19.500022888183594
    7. '-d' → logprob: -20.125022888183594
    8. '   ' → logprob: -20.250022888183594
    9. '```' → logprob: -20.250022888183594
    10. '-direction' → logprob: -20.500022888183594

Token 470: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.13372230529785156
    2. '-' → logprob: -2.2587223052978516
    3. ',' → logprob: -3.8837223052978516
    4. '1' → logprob: -9.383722305297852
    5. ' -' → logprob: -11.383722305297852
    6. ' ,-' → logprob: -12.508722305297852
    7. '-,' → logprob: -13.008722305297852
    8. '[-' → logprob: -13.383722305297852
    9. '   ' → logprob: -13.383722305297852
    10. ',-
' → logprob: -13.633722305297852

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -17.875001907348633
    4. '۱' → logprob: -19.500001907348633
    5. '১' → logprob: -20.000001907348633
    6. '<|end|>' → logprob: -20.125001907348633
    7. ',' → logprob: -20.375001907348633
    8. '１' → logprob: -20.562501907348633
    9. '१' → logprob: -20.625001907348633
    10. ']' → logprob: -21.187501907348633

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3213025744771585e-05
    2. '1' → logprob: -10.500033378601074
    3. ' ,' → logprob: -12.250033378601074
    4. ']' → logprob: -14.250033378601074
    5. ',
' → logprob: -17.250032424926758
    6. ',+' → logprob: -17.375032424926758
    7. ' ' → logprob: -17.875032424926758
    8. '0' → logprob: -18.375032424926758
    9. '```' → logprob: -19.125032424926758
    10. '4' → logprob: -19.750032424926758

Token 473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -17.1250057220459
    4. '-' → logprob: -19.0000057220459
    5. ']' → logprob: -19.3750057220459
    6. '```' → logprob: -19.8750057220459
    7. '0' → logprob: -20.7500057220459
    8. '۱' → logprob: -21.0000057220459
    9. '１' → logprob: -21.1875057220459
    10. '   ' → logprob: -21.5625057220459

Token 474: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.029847231227905e-05
    2. ' ]' → logprob: -10.375080108642578
    3. ']
' → logprob: -10.375080108642578
    4. ']

' → logprob: -11.875080108642578
    5. '   ' → logprob: -12.000080108642578
    6. '<|end|>' → logprob: -13.000080108642578
    7. ')' → logprob: -13.625080108642578
    8. ',' → logprob: -15.375080108642578
    9. ')]' → logprob: -15.500080108642578
    10. '']' → logprob: -16.000080108642578

Token 475: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03222787380218506
    2. ' while' → logprob: -3.5322279930114746
    3. '   ' → logprob: -6.157227993011475
    4. '<|end|>' → logprob: -9.157227516174316
    5. '```' → logprob: -9.157227516174316
    6. '	while' → logprob: -10.032227516174316
    7. 'While' → logprob: -10.157227516174316
    8. ')' → logprob: -10.532227516174316
    9. '    
' → logprob: -11.407227516174316
    10. 'for' → logprob: -11.907227516174316

Token 476: ' res' (ID: 694)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0028354227542877197
    2. '   ' → logprob: -6.502835273742676
    3. ' while' → logprob: -6.627835273742676
    4. '```' → logprob: -12.127835273742676
    5. 'While' → logprob: -13.502835273742676
    6. '	while' → logprob: -14.002835273742676
    7. 'for' → logprob: -14.252835273742676
    8. ')' → logprob: -15.002835273742676
    9. '
' → logprob: -15.627835273742676
    10. '    
' → logprob: -16.002836227416992

Token 477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193390250205994
    2. '=' → logprob: -1.5019339323043823
    3. '=None' → logprob: -13.376934051513672
    4. ' ' → logprob: -13.626934051513672
    5. ',' → logprob: -14.251934051513672
    6. ' =
' → logprob: -15.251934051513672
    7. ' ' → logprob: -15.751934051513672
    8. '=int' → logprob: -16.001934051513672
    9. ')' → logprob: -16.376934051513672
    10. '   ' → logprob: -16.376934051513672

Token 478: ' -' (ID: 533)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2200196236371994
    2. '-' → logprob: -1.7200195789337158
    3. 'None' → logprob: -5.220019817352295
    4. ' -' → logprob: -5.220019817352295
    5. '10' → logprob: -5.595019817352295
    6. ' float' → logprob: -5.970019817352295
    7. ' None' → logprob: -7.345019817352295
    8. 'sys' → logprob: -7.345019817352295
    9. ' sys' → logprob: -10.845019340515137
    10. 'int' → logprob: -10.970019340515137

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '2' → logprob: -17.75
    4. 'sys' → logprob: -18.125
    5. '   ' → logprob: -18.5
    6. '10' → logprob: -19.5
    7. 'float' → logprob: -20.125
    8. '999' → logprob: -20.5
    9. '0' → logprob: -20.5
    10. '100' → logprob: -20.875

Token 480: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15039566159248352
    2. '   ' → logprob: -2.275395631790161
    3. 'while' → logprob: -3.650395631790161
    4. ' while' → logprob: -5.27539587020874
    5. '    
' → logprob: -6.15039587020874
    6. '<|end|>' → logprob: -6.40039587020874
    7. '  
' → logprob: -6.65039587020874
    8. ' 
' → logprob: -8.400395393371582
    9. '	while' → logprob: -8.525395393371582
    10. '   
' → logprob: -9.400395393371582

Token 481: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11061249673366547
    2. ' while' → logprob: -2.985612392425537
    3. '   ' → logprob: -3.360612392425537
    4. '
' → logprob: -3.985612392425537
    5. '	while' → logprob: -7.860612392425537
    6. '<|end|>' → logprob: -8.610612869262695
    7. '    
' → logprob: -8.985612869262695
    8. '  
' → logprob: -9.610612869262695
    9. '```' → logprob: -9.985612869262695
    10. ' 
' → logprob: -10.110612869262695

Token 482: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00026217024424113333
    2. ' while' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.000262260437012
    4. 'While' → logprob: -17.750261306762695
    5. '	while' → logprob: -19.125261306762695
    6. '```' → logprob: -20.250261306762695
    7. '
' → logprob: -20.625261306762695
    8. '    
' → logprob: -21.000261306762695
    9. 'import' → logprob: -21.750261306762695
    10. 'from' → logprob: -22.000261306762695

Token 483: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.04859134554862976
    2. ' heap' → logprob: -3.048591375350952
    3. '(heap' → logprob: -13.173591613769531
    4. 'len' → logprob: -13.298591613769531
    5. ' len' → logprob: -16.17359161376953
    6. '   ' → logprob: -16.42359161376953
    7. '.heap' → logprob: -16.42359161376953
    8. 'h' → logprob: -16.79859161376953
    9. ' ' → logprob: -17.67359161376953
    10. '```' → logprob: -18.17359161376953

Token 484: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20459386706352234
    2. ':' → logprob: -1.7045938968658447
    3. '[' → logprob: -6.579593658447266
    4. ',' → logprob: -7.079593658447266
    5. '):
' → logprob: -8.329593658447266
    6. '   ' → logprob: -8.329593658447266
    7. ' and' → logprob: -8.579593658447266
    8. '=' → logprob: -8.704593658447266
    9. 'and' → logprob: -10.329593658447266
    10. '!=' → logprob: -11.329593658447266

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035019537899643183
    2. ',' → logprob: -5.753501892089844
    3. '   ' → logprob: -9.253501892089844
    4. '    ' → logprob: -9.628501892089844
    5. ' (' → logprob: -9.753501892089844
    6. ' ,' → logprob: -10.128501892089844
    7. '     ' → logprob: -11.503501892089844
    8. '(' → logprob: -11.628501892089844
    9. '      ' → logprob: -11.753501892089844
    10. ')' → logprob: -11.878501892089844

Token 486: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.006277501583099365
    2. 'c' → logprob: -5.506277561187744
    3. ' cost' → logprob: -6.256277561187744
    4. '       ' → logprob: -8.881277084350586
    5. 'cur' → logprob: -9.131277084350586
    6. '(cost' → logprob: -10.756277084350586
    7. ' c' → logprob: -12.381277084350586
    8. '   ' → logprob: -13.756277084350586
    9. '_cost' → logprob: -14.256277084350586
    10. 'cc' → logprob: -14.381277084350586

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.65707261255011e-06
    2. ' ,' → logprob: -12.500008583068848
    3. ',
' → logprob: -13.250008583068848
    4. ',c' → logprob: -13.625008583068848
    5. ',n' → logprob: -14.250008583068848
    6. ',next' → logprob: -15.250008583068848
    7. ',y' → logprob: -15.750008583068848
    8. ',current' → logprob: -15.750008583068848
    9. ',num' → logprob: -16.375009536743164
    10. ',user' → logprob: -16.500009536743164

Token 488: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0380416102707386
    2. ' y' → logprob: -3.288041591644287
    3. '	y' → logprob: -16.038042068481445
    4. ')y' → logprob: -17.038042068481445
    5. ''y' → logprob: -17.163042068481445
    6. 'cy' → logprob: -17.538042068481445
    7. '(y' → logprob: -18.538042068481445
    8. '```' → logprob: -19.163042068481445
    9. 'py' → logprob: -19.288042068481445
    10. '   ' → logprob: -19.413042068481445

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.466968650580384e-05
    2. '<|end|>' → logprob: -10.625054359436035
    3. ' ,' → logprob: -10.750054359436035
    4. ',x' → logprob: -12.250054359436035
    5. ',user' → logprob: -13.875054359436035
    6. ',y' → logprob: -14.000054359436035
    7. '=' → logprob: -14.250054359436035
    8. ',next' → logprob: -15.500054359436035
    9. ',
' → logprob: -15.500054359436035
    10. '<|end|>' → logprob: -15.750054359436035

Token 490: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233763717114925
    2. ' x' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.130233764648438
    4. '<|end|>' → logprob: -17.380233764648438
    5. '   ' → logprob: -19.380233764648438
    6. '	x' → logprob: -19.505233764648438
    7. 's' → logprob: -20.005233764648438
    8. ')x' → logprob: -20.005233764648438
    9. '```' → logprob: -20.255233764648438
    10. '"x' → logprob: -20.255233764648438

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ',d' → logprob: -13.500001907348633
    3. ' ,' → logprob: -14.625001907348633
    4. ',
' → logprob: -18.875001907348633
    5. '،' → logprob: -19.625001907348633
    6. 'd' → logprob: -19.750001907348633
    7. '‌,' → logprob: -20.000001907348633
    8. '   ' → logprob: -21.062501907348633
    9. 'dice' → logprob: -21.062501907348633
    10. '=' → logprob: -21.250001907348633

Token 492: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.0012520157033577561
    2. 'faces' → logprob: -6.751252174377441
    3. ' dice' → logprob: -9.501252174377441
    4. 'd' → logprob: -12.126252174377441
    5. ' faces' → logprob: -14.626252174377441
    6. 'dic' → logprob: -15.001252174377441
    7. '   ' → logprob: -15.626252174377441
    8. 'face' → logprob: -15.876252174377441
    9. '```' → logprob: -16.626251220703125
    10. ' dices' → logprob: -16.876251220703125

Token 493: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0230514258146286
    2. ' =' → logprob: -4.3980512619018555
    3. '_faces' → logprob: -4.6480512619018555
    4. 'faces' → logprob: -7.1480512619018555
    5. ')' → logprob: -10.523051261901855
    6. '_' → logprob: -10.523051261901855
    7. '_=' → logprob: -11.273051261901855
    8. ',' → logprob: -11.273051261901855
    9. ')=' → logprob: -11.523051261901855
    10. '=_' → logprob: -11.898051261901855

Token 494: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.014167149551212788
    2. ' heap' → logprob: -4.264167308807373
    3. 'he' → logprob: -13.014166831970215
    4. '(heap' → logprob: -13.639166831970215
    5. '.heap' → logprob: -16.51416778564453
    6. '   ' → logprob: -16.51416778564453
    7. '_heap' → logprob: -17.01416778564453
    8. '
' → logprob: -17.38916778564453
    9. ' he' → logprob: -17.76416778564453
    10. ' =' → logprob: -18.38916778564453

Token 495: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.010146655142307281
    2. '=' → logprob: -5.010146617889404
    3. '[' → logprob: -6.135146617889404
    4. '   ' → logprob: -7.635146617889404
    5. ' =' → logprob: -7.885146617889404
    6. '       ' → logprob: -8.635147094726562
    7. 'pop' → logprob: -9.260147094726562
    8. '.pop' → logprob: -10.010147094726562
    9. 'Q' → logprob: -11.385147094726562
    10. ',' → logprob: -11.635147094726562

Token 496: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.001675302512012422
    2. 'he' → logprob: -6.501675128936768
    3. 'q' → logprob: -9.251675605773926
    4. 'app' → logprob: -10.626675605773926
    5. 'op' → logprob: -10.751675605773926
    6. '.pop' → logprob: -12.126675605773926
    7. ' he' → logprob: -12.126675605773926
    8. '```' → logprob: -12.251675605773926
    9. 'pop' → logprob: -12.376675605773926
    10. '_he' → logprob: -12.876675605773926

Token 497: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.517272024415433e-05
    2. 'pp' → logprob: -9.500075340270996
    3. 'ap' → logprob: -16.00007438659668
    4. '[' → logprob: -16.25007438659668
    5. '...' → logprob: -17.00007438659668
    6. '```' → logprob: -17.25007438659668
    7. 'appe' → logprob: -18.50007438659668
    8. '``' → logprob: -18.75007438659668
    9. 'pop' → logprob: -19.00007438659668
    10. 'App' → logprob: -19.00007438659668

Token 498: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.25599873065948486
    2. 'ush' → logprob: -1.5059987306594849
    3. 'app' → logprob: -5.755998611450195
    4. 'pop' → logprob: -7.755998611450195
    5. 'pp' → logprob: -7.755998611450195
    6. 'p' → logprob: -11.505998611450195
    7. 'opp' → logprob: -11.630998611450195
    8. 'push' → logprob: -12.005998611450195
    9. 'q' → logprob: -12.505998611450195
    10. 'he' → logprob: -12.630998611450195

Token 499: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.8193366486229934e-05
    2. '(' → logprob: -11.000018119812012
    3. 'heap' → logprob: -13.750018119812012
    4. '(
' → logprob: -15.375018119812012
    5. ' (' → logprob: -16.500019073486328
    6. '(queue' → logprob: -17.125019073486328
    7. '(stack' → logprob: -17.750019073486328
    8. ' heap' → logprob: -18.250019073486328
    9. '(h' → logprob: -18.250019073486328
    10. '```' → logprob: -18.625019073486328

Token 500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030039381235837936
    2. ')
' → logprob: -3.5300393104553223
    3. ')
' → logprob: -8.40503978729248
    4. ')

' → logprob: -9.90503978729248
    5. '   ' → logprob: -12.03003978729248
    6. '       ' → logprob: -12.40503978729248
    7. ')

' → logprob: -13.15503978729248
    8. ')`' → logprob: -13.28003978729248
    9. ')`
' → logprob: -13.78003978729248
    10. ')


' → logprob: -16.280038833618164

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18814367055892944
    2. '   ' → logprob: -2.313143730163574
    3. ' if' → logprob: -3.188143730163574
    4. 'if' → logprob: -3.813143730163574
    5. '<|end|>' → logprob: -4.813143730163574
    6. '        
' → logprob: -8.063143730163574
    7. '```' → logprob: -8.188143730163574
    8. '
' → logprob: -8.188143730163574
    9. '    
' → logprob: -9.688143730163574
    10. '           ' → logprob: -10.313143730163574

Token 502: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.040642593055963516
    2. ' if' → logprob: -3.540642499923706
    3. '       ' → logprob: -4.540642738342285
    4. '   ' → logprob: -8.915642738342285
    5. '	if' → logprob: -10.790642738342285
    6. '        
' → logprob: -11.540642738342285
    7. 'If' → logprob: -14.665642738342285
    8. '    
' → logprob: -14.915642738342285
    9. '
' → logprob: -15.415642738342285
    10. '```' → logprob: -15.790642738342285

Token 503: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.006462643854320049
    2. ' (' → logprob: -5.381462574005127
    3. 'y' → logprob: -6.381462574005127
    4. ' y' → logprob: -9.131463050842285
    5. '(' → logprob: -10.631463050842285
    6. '(res' → logprob: -12.256463050842285
    7. '(cost' → logprob: -12.631463050842285
    8. '   ' → logprob: -12.881463050842285
    9. ' ' → logprob: -13.881463050842285
    10. '(not' → logprob: -14.131463050842285

Token 504: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003442832676228136
    2. '(y' → logprob: -8.500344276428223
    3. ' y' → logprob: -8.875344276428223
    4. ' (' → logprob: -14.750344276428223
    5. '   ' → logprob: -15.125344276428223
    6. ''y' → logprob: -16.00034523010254
    7. ')y' → logprob: -16.75034523010254
    8. '	y' → logprob: -16.87534523010254
    9. ')' → logprob: -17.00034523010254
    10. ',y' → logprob: -18.50034523010254

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01950206235051155
    2. ' ==' → logprob: -4.14450216293335
    3. '==' → logprob: -5.76950216293335
    4. ' ,' → logprob: -8.394501686096191
    5. ',x' → logprob: -9.394501686096191
    6. ',y' → logprob: -11.269501686096191
    7. ')==' → logprob: -11.769501686096191
    8. ')' → logprob: -12.269501686096191
    9. ',
' → logprob: -13.269501686096191
    10. ',s' → logprob: -14.644501686096191

Token 506: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003177952254191041
    2. ' x' → logprob: -5.753178119659424
    3. '```' → logprob: -16.378177642822266
    4. ')x' → logprob: -17.003177642822266
    5. ',' → logprob: -17.253177642822266
    6. ',x' → logprob: -17.378177642822266
    7. '   ' → logprob: -17.503177642822266
    8. ' ' → logprob: -17.628177642822266
    9. '
' → logprob: -17.753177642822266
    10. '	x' → logprob: -18.378177642822266

Token 507: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035588506143540144
    2. ')==' → logprob: -6.25355863571167
    3. '==' → logprob: -7.00355863571167
    4. ' ==' → logprob: -7.37855863571167
    5. ' )' → logprob: -9.378559112548828
    6. ',' → logprob: -11.503559112548828
    7. ',)' → logprob: -14.003559112548828
    8. ']==' → logprob: -16.128559112548828
    9. '）' → logprob: -17.253559112548828
    10. '=' → logprob: -17.378559112548828

Token 508: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47674208879470825
    2. ' ==' → logprob: -0.9767420887947083
    3. ')==' → logprob: -6.476742267608643
    4. ')' → logprob: -6.851742267608643
    5. ',' → logprob: -10.351741790771484
    6. ']==' → logprob: -10.601741790771484
    7. '=' → logprob: -12.476741790771484
    8. '==(' → logprob: -13.476741790771484
    9. '==
' → logprob: -13.601741790771484
    10. ']' → logprob: -14.976741790771484

Token 509: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023890875279903412
    2. ' (' → logprob: -3.773890972137451
    3. '(go' → logprob: -8.023890495300293
    4. '(g' → logprob: -8.273890495300293
    5. '(gt' → logprob: -9.773890495300293
    6. '(goal' → logprob: -12.773890495300293
    7. '(gui' → logprob: -13.773890495300293
    8. '(G' → logprob: -14.523890495300293
    9. '(gs' → logprob: -14.773890495300293
    10. '(gulp' → logprob: -15.398890495300293

Token 510: 'gy' (ID: 4544)
  Prédit: 'gy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gy' → logprob: -1.0921942703134846e-05
    2. '(' → logprob: -11.87501049041748
    3. ' gy' → logprob: -12.50001049041748
    4. '   ' → logprob: -16.000011444091797
    5. ' (' → logprob: -17.125011444091797
    6. '(g' → logprob: -17.875011444091797
    7. 'gx' → logprob: -18.375011444091797
    8. 'gyro' → logprob: -18.625011444091797
    9. ' ' → logprob: -19.125011444091797
    10. '  ' → logprob: -19.125011444091797

Token 511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.906711546937004e-05
    2. ' ,' → logprob: -10.000048637390137
    3. ',x' → logprob: -12.750048637390137
    4. ',
' → logprob: -15.000048637390137
    5. ',y' → logprob: -15.125048637390137
    6. ',g' → logprob: -16.625049591064453
    7. '<|end|>' → logprob: -16.750049591064453
    8. ')' → logprob: -17.000049591064453
    9. '‌,' → logprob: -17.625049591064453
    10. ' ' → logprob: -18.000049591064453

Token 512: ' gx' (ID: 142840)
  Prédit: 'gx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gx' → logprob: -0.02976958453655243
    2. ' gx' → logprob: -3.5297696590423584
    3. 'x' → logprob: -10.904769897460938
    4. ' ' → logprob: -15.029769897460938
    5. 'kx' → logprob: -16.279769897460938
    6. '
' → logprob: -16.529769897460938
    7. ' x' → logprob: -16.529769897460938
    8. '   ' → logprob: -16.779769897460938
    9. ',' → logprob: -17.529769897460938
    10. 'GX' → logprob: -17.529769897460938

Token 513: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08120952546596527
    2. ' and' → logprob: -2.581209421157837
    3. 'and' → logprob: -6.206209659576416
    4. ' )' → logprob: -8.331209182739258
    5. '):
' → logprob: -10.206209182739258
    6. '):' → logprob: -11.831209182739258
    7. ',' → logprob: -12.081209182739258
    8. '       ' → logprob: -12.581209182739258
    9. '   ' → logprob: -12.831209182739258
    10. ' ' → logprob: -13.706209182739258

Token 514: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5241200923919678
    2. '           ' → logprob: -0.8991200923919678
    3. '       ' → logprob: -7.774120330810547
    4. 'and' → logprob: -7.899120330810547
    5. ' if' → logprob: -8.899120330810547
    6. ',' → logprob: -11.274120330810547
    7. '   ' → logprob: -11.649120330810547
    8. ':' → logprob: -11.649120330810547
    9. '```' → logprob: -11.649120330810547
    10. ' &&' → logprob: -12.024120330810547

Token 515: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6661131978034973
    2. 'res' (adapté à ' res') → logprob: -0.9161131978034973
    3. '       ' → logprob: -2.9161131381988525
    4. '           ' → logprob: -3.6661131381988525
    5. ' if' → logprob: -5.291113376617432
    6. '   ' → logprob: -6.666113376617432
    7. ' res' → logprob: -8.916112899780273
    8. '               ' → logprob: -10.166112899780273
    9. '```' → logprob: -11.541112899780273
    10. '=res' → logprob: -12.291112899780273

Token 516: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. '＝' → logprob: -17.751928329467773
    4. ' =
' → logprob: -17.876928329467773
    5. '=
' → logprob: -18.626928329467773
    6. '=cut' → logprob: -18.876928329467773
    7. '=

' → logprob: -18.876928329467773
    8. ')' → logprob: -19.001928329467773
    9. ' =)' → logprob: -19.251928329467773
    10. ' ' → logprob: -19.251928329467773

Token 517: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0040785204619169235
    2. ' cost' → logprob: -5.504078388214111
    3. '(cost' → logprob: -16.629077911376953
    4. 'code' → logprob: -17.129077911376953
    5. '_cost' → logprob: -17.754077911376953
    6. 'Cost' → logprob: -18.379077911376953
    7. 'count' → logprob: -18.879077911376953
    8. 'cos' → logprob: -19.129077911376953
    9. '   ' → logprob: -19.379077911376953
    10. 'min' → logprob: -19.379077911376953

Token 518: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.4034345187828876e-05
    2. '
' → logprob: -11.12502384185791
    3. '		' → logprob: -12.12502384185791
    4. '            
' → logprob: -14.00002384185791
    5. '               ' → logprob: -14.12502384185791
    6. '       ' → logprob: -14.37502384185791
    7. '          ' → logprob: -14.87502384185791
    8. '<|end|>' → logprob: -15.37502384185791
    9. '	       ' → logprob: -15.50002384185791
    10. '                   ' → logprob: -15.87502384185791

Token 519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.318681188422488e-05
    2. '		' → logprob: -12.62501335144043
    3. '               ' → logprob: -13.00001335144043
    4. '<|end|>' → logprob: -13.12501335144043
    5. '       ' → logprob: -13.50001335144043
    6. '            
' → logprob: -13.75001335144043
    7. '                   ' → logprob: -14.12501335144043
    8. '	       ' → logprob: -14.50001335144043
    9. '
' → logprob: -14.75001335144043
    10. '```' → logprob: -15.37501335144043

Token 520: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0707748681306839
    2. '           ' → logprob: -2.820774793624878
    3. ' break' → logprob: -5.320775032043457
    4. '       ' → logprob: -5.570775032043457
    5. '	break' → logprob: -10.070775032043457
    6. '   ' → logprob: -10.570775032043457
    7. 'if' → logprob: -13.070775032043457
    8. '               ' → logprob: -13.695775032043457
    9. '		' → logprob: -15.445775032043457
    10. '
' → logprob: -15.445775032043457

Token 521: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010203412733972073
    2. '   ' → logprob: -5.0102033615112305
    3. ' for' → logprob: -6.3852033615112305
    4. '<|end|>' → logprob: -7.2602033615112305
    5. '        
' → logprob: -7.3852033615112305
    6. '    
' → logprob: -8.76020336151123
    7. 'for' → logprob: -9.01020336151123
    8. '    ' → logprob: -10.76020336151123
    9. '	' → logprob: -10.88520336151123
    10. '  
' → logprob: -11.01020336151123

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010701603256165981
    2. '   ' → logprob: -4.635701656341553
    3. ' for' → logprob: -7.760701656341553
    4. 'for' → logprob: -8.760701179504395
    5. '        
' → logprob: -8.885701179504395
    6. '
' → logprob: -9.385701179504395
    7. '    
' → logprob: -10.010701179504395
    8. '<|end|>' → logprob: -10.760701179504395
    9. '	' → logprob: -11.385701179504395
    10. '           ' → logprob: -11.885701179504395

Token 523: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022169863805174828
    2. ' for' → logprob: -4.022170066833496
    3. '   ' → logprob: -5.522170066833496
    4. '	for' → logprob: -11.522170066833496
    5. '       ' → logprob: -12.647170066833496
    6. '    
' → logprob: -14.147170066833496
    7. '
' → logprob: -15.272170066833496
    8. '```' → logprob: -15.272170066833496
    9. 'if' (adapté à ' if') → logprob: -15.397170066833496
    10. ' ' → logprob: -16.39716911315918

Token 524: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6416918635368347
    2. ' dist' → logprob: -0.7666918635368347
    3. '(dist' → logprob: -5.3916916847229
    4. ' (' → logprob: -5.7666916847229
    5. '(cost' → logprob: -7.5166916847229
    6. 'cost' → logprob: -7.5166916847229
    7. ' cost' → logprob: -8.266692161560059
    8. '(' → logprob: -10.891692161560059
    9. '	dist' → logprob: -14.141692161560059
    10. ' ' → logprob: -14.516692161560059

Token 525: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.029755238443613052
    2. '.get' → logprob: -3.5297553539276123
    3. '[' → logprob: -12.404755592346191
    4. 'get' → logprob: -14.654755592346191
    5. '.setdefault' → logprob: -17.154754638671875
    6. '
' → logprob: -17.654754638671875
    7. '(' → logprob: -18.279754638671875
    8. '[
' → logprob: -18.279754638671875
    9. '((' → logprob: -18.404754638671875
    10. '   ' → logprob: -18.404754638671875

Token 526: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.5491004129871726e-05
    2. ' y' → logprob: -10.000045776367188
    3. '(y' → logprob: -17.125045776367188
    4. ')y' → logprob: -17.625045776367188
    5. '	y' → logprob: -17.750045776367188
    6. ',y' → logprob: -18.500045776367188
    7. '   ' → logprob: -18.875045776367188
    8. ' ' → logprob: -19.250045776367188
    9. ')' → logprob: -19.625045776367188
    10. ',' → logprob: -20.750045776367188

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038872790173627436
    2. ',x' → logprob: -7.8753886222839355
    3. ' ,' → logprob: -12.375389099121094
    4. ',
' → logprob: -12.500389099121094
    5. ',y' → logprob: -15.000389099121094
    6. 'x' → logprob: -16.125389099121094
    7. '<|end|>' → logprob: -17.375389099121094
    8. ')' → logprob: -17.750389099121094
    9. ',user' → logprob: -17.875389099121094
    10. '
' → logprob: -18.000389099121094

Token 528: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015023599844425917
    2. ' x' → logprob: -6.501502513885498
    3. ' ' → logprob: -17.751502990722656
    4. ',' → logprob: -17.751502990722656
    5. '	x' → logprob: -18.126502990722656
    6. ',x' → logprob: -18.376502990722656
    7. '   ' → logprob: -19.876502990722656
    8. ')x' → logprob: -19.876502990722656
    9. '"x' → logprob: -20.876502990722656
    10. '(x' → logprob: -22.126502990722656

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004633522592484951
    2. ',d' → logprob: -5.37963342666626
    3. ' ,' → logprob: -11.504633903503418
    4. ',
' → logprob: -13.629633903503418
    5. ')]' → logprob: -14.129633903503418
    6. '),' → logprob: -15.004633903503418
    7. ')][' → logprob: -15.254633903503418
    8. ')' → logprob: -15.504633903503418
    9. '   ' → logprob: -15.629633903503418
    10. ' ' → logprob: -15.879633903503418

Token 530: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.0004309076175559312
    2. ' dice' → logprob: -7.750431060791016
    3. 'Dice' → logprob: -16.125431060791016
    4. 'dic' → logprob: -16.625431060791016
    5. ' ' → logprob: -17.500431060791016
    6. 'd' → logprob: -18.375431060791016
    7. '   ' → logprob: -18.875431060791016
    8. ')' → logprob: -19.000431060791016
    9. 'cost' → logprob: -20.500431060791016
    10. '骰' → logprob: -20.500431060791016

Token 531: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.36840030550956726
    2. '])' → logprob: -1.7434003353118896
    3. ')' → logprob: -2.4934003353118896
    4. ']' → logprob: -3.7434003353118896
    5. ')>' → logprob: -4.3684000968933105
    6. ']>' → logprob: -5.2434000968933105
    7. ')<' → logprob: -5.4934000968933105
    8. ']<' → logprob: -5.6184000968933105
    9. ']!=' → logprob: -7.1184000968933105
    10. ')!=' → logprob: -7.9934000968933105

Token 532: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0010471008718013763
    2. ' <' → logprob: -6.876047134399414
    3. '<int' → logprob: -13.251047134399414
    4. ' ' → logprob: -13.251047134399414
    5. '<c' → logprob: -13.376047134399414
    6. '<len' → logprob: -13.501047134399414
    7. '<n' → logprob: -13.626047134399414
    8. '<com' → logprob: -13.876047134399414
    9. '<num' → logprob: -14.001047134399414
    10. '<data' → logprob: -14.376047134399414

Token 533: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -9.615255839889869e-05
    2. ' cost' → logprob: -9.250096321105957
    3. '(cost' → logprob: -20.37509536743164
    4. '   ' → logprob: -20.50009536743164
    5. 'code' → logprob: -21.12509536743164
    6. ' ' → logprob: -21.25009536743164
    7. '_cost' → logprob: -21.62509536743164
    8. '-cost' → logprob: -22.12509536743164
    9. 'Cost' → logprob: -22.62509536743164
    10. '  ' → logprob: -23.12509536743164

Token 534: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6292998790740967
    2. ':' → logprob: -0.8792998790740967
    3. '       ' → logprob: -3.1292998790740967
    4. ' continue' → logprob: -5.879300117492676
    5. '   ' → logprob: -6.129300117492676
    6. 'continue' → logprob: -6.254300117492676
    7. '           ' → logprob: -7.254300117492676
    8. '	continue' → logprob: -7.504300117492676
    9. ':
' → logprob: -11.129300117492676
    10. '_continue' → logprob: -11.379300117492676

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03615901619195938
    2. ' continue' → logprob: -3.911159038543701
    3. 'continue' → logprob: -4.411159038543701
    4. '       ' → logprob: -5.786159038543701
    5. '	continue' → logprob: -8.911158561706543
    6. '		' → logprob: -9.161158561706543
    7. '_continue' → logprob: -11.286158561706543
    8. '	       ' → logprob: -11.536158561706543
    9. ' continues' → logprob: -11.786158561706543
    10. '
' → logprob: -12.661158561706543

Token 536: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.024110035970807076
    2. ' continue' → logprob: -3.7741100788116455
    3. '           ' → logprob: -7.274109840393066
    4. '       ' → logprob: -9.149109840393066
    5. '	continue' → logprob: -9.774109840393066
    6. '   ' → logprob: -12.399109840393066
    7. '_continue' → logprob: -13.149109840393066
    8. 'contin' → logprob: -14.024109840393066
    9. '		' → logprob: -14.524109840393066
    10. '               ' → logprob: -16.024110794067383

Token 537: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013432204723358154
    2. '   ' → logprob: -5.638432025909424
    3. '<|end|>' → logprob: -6.013432025909424
    4. '        
' → logprob: -6.263432025909424
    5. '
' → logprob: -6.388432025909424
    6. '	' → logprob: -6.513432025909424
    7. ' for' → logprob: -7.388432025909424
    8. '  
' → logprob: -7.888432025909424
    9. '    
' → logprob: -8.263432502746582
    10. '		
' → logprob: -9.013432502746582

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.059422254562378
    2. '   ' → logprob: -1.184422254562378
    3. '<|end|>' → logprob: -1.434422254562378
    4. ' for' → logprob: -2.434422254562378
    5. 'for' → logprob: -5.559422492980957
    6. '    
' → logprob: -5.684422492980957
    7. '
' → logprob: -6.059422492980957
    8. '  
' → logprob: -6.184422492980957
    9. '	for' → logprob: -6.434422492980957
    10. '        
' → logprob: -6.434422492980957

Token 539: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5939775705337524
    2. ' for' → logprob: -0.8439775705337524
    3. '   ' → logprob: -4.218977451324463
    4. '       ' → logprob: -5.968977451324463
    5. '	for' → logprob: -7.468977451324463
    6. '```' → logprob: -10.468977928161621
    7. '<|end|>' → logprob: -12.968977928161621
    8. '        
' → logprob: -13.968977928161621
    9. ')' → logprob: -14.218977928161621
    10. '    
' → logprob: -14.468977928161621

Token 540: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4497690498828888
    2. 'dir' → logprob: -1.1997690200805664
    3. 'i' → logprob: -3.5747690200805664
    4. ' dir' → logprob: -4.449769020080566
    5. 'ndir' → logprob: -4.574769020080566
    6. ' d' → logprob: -5.199769020080566
    7. 'direction' → logprob: -5.949769020080566
    8. 'nd' → logprob: -6.699769020080566
    9. ' i' → logprob: -7.074769020080566
    10. ' direction' → logprob: -8.324769020080566

Token 541: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07921020686626434
    2. 'in' → logprob: -2.5792102813720703
    3. ' ' → logprob: -8.32921028137207
    4. ',' → logprob: -10.32921028137207
    5. '	in' → logprob: -11.57921028137207
    6. '  ' → logprob: -11.82921028137207
    7. ' ,' → logprob: -12.32921028137207
    8. 'd' → logprob: -12.32921028137207
    9. ' i' → logprob: -12.45421028137207
    10. 'i' → logprob: -13.20421028137207

Token 542: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196959316730499
    2. ' range' → logprob: -2.811969518661499
    3. '[' → logprob: -13.311969757080078
    4. '0' → logprob: -16.186969757080078
    5. ' ' → logprob: -16.436969757080078
    6. '	range' → logprob: -16.436969757080078
    7. '(range' → logprob: -16.936969757080078
    8. '   ' → logprob: -18.686969757080078
    9. ' [' → logprob: -19.061969757080078
    10. '4' → logprob: -19.311969757080078

Token 543: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.026389241218566895
    2. '(' → logprob: -3.6513891220092773
    3. ' ' → logprob: -9.526389122009277
    4. ' (' → logprob: -12.401389122009277
    5. '   ' → logprob: -12.401389122009277
    6. '0' → logprob: -12.776389122009277
    7. ')' → logprob: -13.651389122009277
    8. '<|end|>' → logprob: -13.651389122009277
    9. '(
' → logprob: -14.151389122009277
    10. ',' → logprob: -14.651389122009277

Token 544: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. ')' → logprob: -19.875
    4. '```' → logprob: -19.875
    5. '   ' → logprob: -20.375
    6. '۴' → logprob: -20.375
    7. '' → logprob: -20.625
    8. 'len' → logprob: -21.125
    9. '0' → logprob: -21.25
    10. '４' → logprob: -21.5625

Token 545: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1269710510969162
    2. '):
' → logprob: -2.1269710063934326
    3. '   ' → logprob: -10.876971244812012
    4. '):
' → logprob: -11.751971244812012
    5. ' ):' → logprob: -11.876971244812012
    6. '       ' → logprob: -12.626971244812012
    7. ')' → logprob: -13.001971244812012
    8. '):

' → logprob: -13.376971244812012
    9. ':' → logprob: -14.126971244812012
    10. ' ):
' → logprob: -14.251971244812012

Token 546: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1996246725320816
    2. '<|end|>' → logprob: -2.07462477684021
    3. ',' → logprob: -3.69962477684021
    4. '       ' → logprob: -4.949624538421631
    5. '<|end|>' → logprob: -4.949624538421631
    6. '        ' → logprob: -5.324624538421631
    7. '            
' → logprob: -6.074624538421631
    8. '```' → logprob: -6.199624538421631
    9. ':' → logprob: -6.699624538421631
    10. '	       ' → logprob: -6.824624538421631

Token 547: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.03815784677863121
    2. 'ny' (adapté à ' ny') → logprob: -3.2881579399108887
    3. '           ' → logprob: -9.28815746307373
    4. '```' → logprob: -11.28815746307373
    5. '   ' → logprob: -13.16315746307373
    6. '            ' → logprob: -13.16315746307373
    7. '               ' → logprob: -13.16315746307373
    8. ' ' → logprob: -13.41315746307373
    9. ' new' → logprob: -13.53815746307373
    10. ' nye' → logprob: -14.53815746307373

Token 548: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3888501226902008
    2. ' =' → logprob: -1.1388500928878784
    3. ',' → logprob: -6.263850212097168
    4. '=y' → logprob: -9.638850212097168
    5. ' ,' → logprob: -12.388850212097168
    6. ',y' → logprob: -13.013850212097168
    7. '=n' → logprob: -14.013850212097168
    8. ' ' → logprob: -15.638850212097168
    9. ' y' → logprob: -16.01384925842285
    10. ')' → logprob: -16.13884925842285

Token 549: ' nx' (ID: 50118)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08812063187360764
    2. ' x' → logprob: -2.838120698928833
    3. 'nx' → logprob: -4.088120460510254
    4. ' nx' → logprob: -4.713120460510254
    5. 'Nx' → logprob: -9.963120460510254
    6. 'n' → logprob: -11.463120460510254
    7. ' Nx' → logprob: -12.963120460510254
    8. ' ' → logprob: -12.963120460510254
    9. '(nx' → logprob: -14.088120460510254
    10. ' =' → logprob: -14.588120460510254

Token 550: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12696097791194916
    2. ' =' → logprob: -2.1269609928131104
    3. '=y' → logprob: -10.376960754394531
    4. ',' → logprob: -14.376960754394531
    5. '=n' → logprob: -14.376960754394531
    6. ')' → logprob: -15.126960754394531
    7. '=
' → logprob: -16.12696075439453
    8. ' ' → logprob: -16.87696075439453
    9. '＝' → logprob: -17.12696075439453
    10. ')=' → logprob: -17.50196075439453

Token 551: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07888989895582199
    2. 'y' → logprob: -2.578889846801758
    3. '	y' → logprob: -16.453889846801758
    4. '(y' → logprob: -17.578889846801758
    5. ')y' → logprob: -19.578889846801758
    6. ' (' → logprob: -19.953889846801758
    7. ' ' → logprob: -20.203889846801758
    8. ',y' → logprob: -20.328889846801758
    9. ' ' → logprob: -20.828889846801758
    10. '=y' → logprob: -21.078889846801758

Token 552: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2816416621208191
    2. '+' → logprob: -1.4066417217254639
    3. '+y' → logprob: -7.656641483306885
    4. ' y' → logprob: -11.906641960144043
    5. ' ' → logprob: -12.781641960144043
    6. ' ' → logprob: -13.281641960144043
    7. ' +
' → logprob: -13.531641960144043
    8. '+
' → logprob: -13.531641960144043
    9. '[' → logprob: -14.031641960144043
    10. ',' → logprob: -14.281641960144043

Token 553: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -2.15310683415737e-05
    2. ' dy' → logprob: -10.750021934509277
    3. '.dy' → logprob: -21.00002098083496
    4. 'd' → logprob: -22.12502098083496
    5. 'Dy' → logprob: -22.62502098083496
    6. 'dym' → logprob: -23.00002098083496
    7. 'ddy' → logprob: -24.12502098083496
    8. 'di' → logprob: -24.12502098083496
    9. 'dj' → logprob: -24.37502098083496
    10. '   ' → logprob: -24.50002098083496

Token 554: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.981667537620524e-06
    2. 'd' → logprob: -13.250001907348633
    3. '[' → logprob: -16.250001907348633
    4. '(d' → logprob: -17.750001907348633
    5. ',d' → logprob: -18.000001907348633
    6. '[
' → logprob: -19.375001907348633
    7. '```' → logprob: -19.375001907348633
    8. ',' → logprob: -19.750001907348633
    9. '[y' → logprob: -19.875001907348633
    10. ' [' → logprob: -20.000001907348633

Token 555: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.12428208440542221
    2. ',' → logprob: -2.624282121658325
    3. '),' → logprob: -3.124282121658325
    4. ']' → logprob: -9.624281883239746
    5. '>,' → logprob: -9.874281883239746
    6. '},' → logprob: -10.374281883239746
    7. '[' → logprob: -10.374281883239746
    8. ',y' → logprob: -10.624281883239746
    9. '][' → logprob: -10.624281883239746
    10. '[y' → logprob: -10.624281883239746

Token 556: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20141343772411346
    2. ' x' → logprob: -1.7014133930206299
    3. '   ' → logprob: -16.451414108276367
    4. '	x' → logprob: -16.701414108276367
    5. ' ' → logprob: -17.076414108276367
    6. '"x' → logprob: -20.076414108276367
    7. '    ' → logprob: -20.076414108276367
    8. '  ' → logprob: -20.076414108276367
    9. '```' → logprob: -21.451414108276367
    10. ')x' → logprob: -21.576414108276367

Token 557: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5258206725120544
    2. ' +' → logprob: -0.9008206725120544
    3. '+d' → logprob: -6.025820732116699
    4. '[' → logprob: -9.1508207321167
    5. '+x' → logprob: -9.2758207321167
    6. '[d' → logprob: -10.5258207321167
    7. '+n' → logprob: -10.9008207321167
    8. ',' → logprob: -11.9008207321167
    9. '[n' → logprob: -12.1508207321167
    10. '+y' → logprob: -12.5258207321167

Token 558: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.011051470413804054
    2. ' dx' → logprob: -4.511051654815674
    3. 'x' → logprob: -13.011051177978516
    4. '(dx' → logprob: -13.761051177978516
    5. '1' → logprob: -15.761051177978516
    6. '_dx' → logprob: -16.136051177978516
    7. '[' → logprob: -16.886051177978516
    8. '.dx' → logprob: -16.886051177978516
    9. 'xd' → logprob: -17.261051177978516
    10. '   ' → logprob: -17.511051177978516

Token 559: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0005140714929439127
    2. '[y' → logprob: -7.750514030456543
    3. 'd' → logprob: -9.625514030456543
    4. '[' → logprob: -11.625514030456543
    5. ']' → logprob: -12.625514030456543
    6. '[
' → logprob: -14.000514030456543
    7. '   ' → logprob: -14.125514030456543
    8. '```' → logprob: -14.500514030456543
    9. '][' → logprob: -14.750514030456543
    10. '[c' → logprob: -15.250514030456543

Token 560: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011403702199459076
    2. ']
' → logprob: -4.511403560638428
    3. ')' → logprob: -8.011404037475586
    4. ']

' → logprob: -11.886404037475586
    5. ')]' → logprob: -12.261404037475586
    6. '']' → logprob: -12.886404037475586
    7. ' ]' → logprob: -13.011404037475586
    8. ')
' → logprob: -13.136404037475586
    9. ']
' → logprob: -13.261404037475586
    10. '   ' → logprob: -14.011404037475586

Token 561: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06168685853481293
    2. '<|end|>' → logprob: -3.0616867542266846
    3. '            
' → logprob: -5.436686992645264
    4. ' if' → logprob: -5.936686992645264
    5. '            ' → logprob: -6.936686992645264
    6. ' 
' → logprob: -7.061686992645264
    7. '       ' → logprob: -7.186686992645264
    8. '```' → logprob: -7.561686992645264
    9. '  
' → logprob: -7.811686992645264
    10. '<|end|>' → logprob: -7.936686992645264

Token 562: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3455938398838043
    2. ' if' → logprob: -1.470593810081482
    3. 'if' (adapté à ' if') → logprob: -3.9705939292907715
    4. '            
' → logprob: -4.3455939292907715
    5. '            ' → logprob: -4.4705939292907715
    6. '<|end|>' → logprob: -4.7205939292907715
    7. ' 
' → logprob: -5.4705939292907715
    8. ' ' → logprob: -6.5955939292907715
    9. '  
' → logprob: -7.4705939292907715
    10. '       ' → logprob: -7.5955939292907715

Token 563: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19396571815013885
    2. ' ' → logprob: -1.9439656734466553
    3. ' not' → logprob: -3.4439656734466553
    4. 'not' → logprob: -6.818965911865234
    5. ' ny' → logprob: -9.193965911865234
    6. 'ny' → logprob: -10.068965911865234
    7. ' ' → logprob: -13.318965911865234
    8. '	not' → logprob: -14.193965911865234
    9. '   ' → logprob: -14.443965911865234
    10. '  ' → logprob: -15.443965911865234

Token 564: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07278907299041748
    2. 'not' → logprob: -2.697789192199707
    3. ' not' → logprob: -6.197789192199707
    4. 'ny' → logprob: -7.197789192199707
    5. ' ' → logprob: -9.822789192199707
    6. ' ny' → logprob: -12.322789192199707
    7. '(not' → logprob: -13.447789192199707
    8. '	not' → logprob: -13.822789192199707
    9. '   ' → logprob: -14.135289192199707
    10. 'nx' → logprob: -14.572789192199707

Token 565: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04317012056708336
    2. '<=' → logprob: -3.168170213699341
    3. ' <' → logprob: -9.293169975280762
    4. '<' → logprob: -10.293169975280762
    5. ' >=' → logprob: -10.918169975280762
    6. '[' → logprob: -11.418169975280762
    7. '>=' → logprob: -12.543169975280762
    8. ' ≤' → logprob: -12.543169975280762
    9. ' ' → logprob: -13.168169975280762
    10. '   ' → logprob: -13.168169975280762

Token 566: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0004900033236481249
    2. ' ny' → logprob: -7.625490188598633
    3. 'n' → logprob: -15.250490188598633
    4. 'nyt' → logprob: -15.250490188598633
    5. 'nyi' → logprob: -15.375490188598633
    6. ' ' → logprob: -15.500490188598633
    7. 'nym' → logprob: -15.875490188598633
    8. 'nx' → logprob: -16.125490188598633
    9. '
' → logprob: -16.125490188598633
    10. 'ni' → logprob: -16.250490188598633

Token 567: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2020563930273056
    2. ' <' → logprob: -1.7020564079284668
    3. '<n' → logprob: -7.452056407928467
    4. '<h' → logprob: -10.327055931091309
    5. '<w' → logprob: -11.952055931091309
    6. '<N' → logprob: -12.077055931091309
    7. ' and' → logprob: -12.202055931091309
    8. '<len' → logprob: -12.202055931091309
    9. '<size' → logprob: -13.577055931091309
    10. 'and' → logprob: -13.702055931091309

Token 568: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -5.836499985889532e-05
    2. ' h' → logprob: -9.7500581741333
    3. '	h' → logprob: -17.250059127807617
    4. '   ' → logprob: -18.125059127807617
    5. '
' → logprob: -20.500059127807617
    6. '[h' → logprob: -20.750059127807617
    7. '<h' → logprob: -21.125059127807617
    8. '(h' → logprob: -21.625059127807617
    9. '"h' → logprob: -22.125059127807617
    10. '  ' → logprob: -22.375059127807617

Token 569: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026302039623260498
    2. 'and' → logprob: -3.6513020992279053
    3. '	and' → logprob: -14.026302337646484
    4. ' ' → logprob: -14.776302337646484
    5. '<|end|>' → logprob: -16.026302337646484
    6. ',' → logprob: -16.526302337646484
    7. ' и' → logprob: -16.901302337646484
    8. '        ' → logprob: -17.026302337646484
    9. ' ' → logprob: -17.526302337646484
    10. '           ' → logprob: -17.526302337646484

Token 570: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005235767923295498
    2. ' ' → logprob: -5.25523567199707
    3. 'nx' → logprob: -14.25523567199707
    4. ' nx' → logprob: -14.25523567199707
    5. '           ' → logprob: -15.50523567199707
    6. '            ' → logprob: -15.75523567199707
    7. '               ' → logprob: -16.13023567199707
    8. '   ' → logprob: -16.38023567199707
    9. '                   ' → logprob: -16.63023567199707
    10. ' ' → logprob: -16.75523567199707

Token 571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.767116367816925
    2. 'nx' → logprob: -1.2671163082122803
    3. 'w' → logprob: -1.3921163082122803
    4. 'nw' → logprob: -5.642116546630859
    5. ' nx' → logprob: -6.892116546630859
    6. ' w' → logprob: -7.642116546630859
    7. ' ' → logprob: -8.39211654663086
    8. 'wx' → logprob: -9.26711654663086
    9. 'ny' → logprob: -10.39211654663086
    10. 'wn' → logprob: -10.64211654663086

Token 572: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1860545128583908
    2. '<' → logprob: -1.8110544681549072
    3. 'w' → logprob: -5.686054706573486
    4. '<n' → logprob: -6.561054706573486
    5. '<w' → logprob: -7.061054706573486
    6. 'nx' → logprob: -8.186054229736328
    7. ' nx' → logprob: -9.061054229736328
    8. ' w' → logprob: -9.311054229736328
    9. '<x' → logprob: -10.561054229736328
    10. 'x' → logprob: -11.311054229736328

Token 573: ' nx' (ID: 50118)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0031794982496649027
    2. ' w' → logprob: -5.753179550170898
    3. '
' → logprob: -14.628179550170898
    4. ' ' → logprob: -15.003179550170898
    5. '   ' → logprob: -15.128179550170898
    6. '	w' → logprob: -15.628179550170898
    7. 'wx' → logprob: -16.0031795501709
    8. '0' → logprob: -16.3781795501709
    9. 'h' → logprob: -16.7531795501709
    10. 'x' → logprob: -17.1906795501709

Token 574: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03500836342573166
    2. '<' → logprob: -3.410008430480957
    3. '<w' → logprob: -6.660008430480957
    4. 'w' → logprob: -9.785008430480957
    5. '<n' → logprob: -11.410008430480957
    6. '<len' → logprob: -12.285008430480957
    7. '<size' → logprob: -12.660008430480957
    8. ' w' → logprob: -13.660008430480957
    9. '<h' → logprob: -13.785008430480957
    10. '<W' → logprob: -13.785008430480957

Token 575: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0024756586644798517
    2. ' w' → logprob: -6.002475738525391
    3. '	w' → logprob: -17.75247573852539
    4. '   ' → logprob: -18.62747573852539
    5. ' ' → logprob: -19.37747573852539
    6. '=w' → logprob: -20.62747573852539
    7. '<w' → logprob: -21.00247573852539
    8. '0' → logprob: -21.12747573852539
    9. 'W' → logprob: -21.25247573852539
    10. '_w' → logprob: -21.87747573852539

Token 576: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016373341903090477
    2. 'and' → logprob: -4.141373157501221
    3. '           ' → logprob: -8.641373634338379
    4. ':' → logprob: -10.016373634338379
    5. ':
' → logprob: -10.016373634338379
    6. '               ' → logprob: -10.391373634338379
    7. '       ' → logprob: -11.266373634338379
    8. '          ' → logprob: -11.766373634338379
    9. ',' → logprob: -12.516373634338379
    10. '            ' → logprob: -12.516373634338379

Token 577: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8025060892105103
    2. ' if' → logprob: -1.0525060892105103
    3. '           ' → logprob: -1.6775060892105103
    4. ' next' → logprob: -5.302505970001221
    5. 'if' → logprob: -5.677505970001221
    6. ' new' → logprob: -6.552505970001221
    7. ' face' → logprob: -6.802505970001221
    8. '```' → logprob: -7.052505970001221
    9. 'next' → logprob: -7.302505970001221
    10. ' cost' → logprob: -7.927505970001221

Token 578: ' nd' (ID: 5914)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4752940237522125
    2. ' new' → logprob: -1.4752939939498901
    3. 'nd' (adapté à ' nd') → logprob: -2.7252941131591797
    4. 'nc' → logprob: -3.4752941131591797
    5. ' nd' → logprob: -3.4752941131591797
    6. 'next' → logprob: -5.47529411315918
    7. 'n' → logprob: -5.72529411315918
    8. 'cost' → logprob: -5.72529411315918
    9. '                   ' → logprob: -6.10029411315918
    10. 'if' → logprob: -6.10029411315918

Token 579: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.2753647267818451
    2. 'cost' → logprob: -2.400364637374878
    3. '_cost' → logprob: -2.525364637374878
    4. 'dice' → logprob: -3.275364637374878
    5. 'ist' → logprob: -3.650364637374878
    6. ' =' → logprob: -6.400364875793457
    7. '_' → logprob: -6.900364875793457
    8. '_d' → logprob: -7.400364875793457
    9. '=' → logprob: -8.150364875793457
    10. 'istance' → logprob: -8.525364875793457

Token 580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020710527896881
    2. ' =' → logprob: -2.3502070903778076
    3. ',' → logprob: -14.850207328796387
    4. '=

' → logprob: -17.35020637512207
    5. '=
' → logprob: -17.60020637512207
    6. 's' → logprob: -17.72520637512207
    7. ')' → logprob: -17.85020637512207
    8. 'roll' → logprob: -18.10020637512207
    9. ' ' → logprob: -18.22520637512207
    10. 'new' → logprob: -18.47520637512207

Token 581: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.0009114635176956654
    2. ' roll' → logprob: -7.000911235809326
    3. 'rol' → logprob: -17.250911712646484
    4. 'roller' → logprob: -18.250911712646484
    5. 'rollback' → logprob: -18.375911712646484
    6. 'rolling' → logprob: -19.125911712646484
    7. '.roll' → logprob: -19.125911712646484
    8. '   ' → logprob: -19.375911712646484
    9. ' ' → logprob: -19.500911712646484
    10. '_roll' → logprob: -20.000911712646484

Token 582: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.3663626305060461e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -14.62501335144043
    4. '(dic' → logprob: -16.50001335144043
    5. 'dice' → logprob: -16.50001335144043
    6. '(
' → logprob: -17.62501335144043
    7. '(n' → logprob: -18.50001335144043
    8. ',d' → logprob: -18.50001335144043
    9. '((' → logprob: -18.62501335144043
    10. '(dtype' → logprob: -19.00001335144043

Token 583: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0008355968166142702
    2. 'dice' → logprob: -7.125835418701172
    3. ' dice' → logprob: -11.625835418701172
    4. '(d' → logprob: -12.500835418701172
    5. 'lice' → logprob: -12.750835418701172
    6. 'ices' → logprob: -13.000835418701172
    7. ' ice' → logprob: -13.000835418701172
    8. '(' → logprob: -13.250835418701172
    9. '[' → logprob: -13.250835418701172
    10. ')' → logprob: -13.250835418701172

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12733405828475952
    2. ',d' → logprob: -2.1273341178894043
    3. ' ,' → logprob: -8.252333641052246
    4. ',n' → logprob: -9.627333641052246
    5. 'd' → logprob: -10.127333641052246
    6. '(d' → logprob: -11.002333641052246
    7. ')' → logprob: -11.877333641052246
    8. ')d' → logprob: -12.502333641052246
    9. '[d' → logprob: -12.502333641052246
    10. ' d' → logprob: -13.002333641052246

Token 585: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0011714138090610504
    2. ' d' → logprob: -6.751171588897705
    3. ')d' → logprob: -13.626171112060547
    4. ')' → logprob: -17.001171112060547
    5. '(d' → logprob: -18.376171112060547
    6. '	d' → logprob: -19.001171112060547
    7. '[d' → logprob: -19.626171112060547
    8. '   ' → logprob: -19.876171112060547
    9. '_d' → logprob: -20.251171112060547
    10. ' ' → logprob: -20.251171112060547

Token 586: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06225593388080597
    2. ')
' → logprob: -2.812255859375
    3. ')
' → logprob: -8.812255859375
    4. '               ' → logprob: -8.937255859375
    5. ')`
' → logprob: -12.687255859375
    6. '           ' → logprob: -13.437255859375
    7. ')

' → logprob: -13.937255859375
    8. '              ' → logprob: -14.312255859375
    9. ' )' → logprob: -14.812255859375
    10. ')`' → logprob: -15.187255859375

Token 587: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007081321906298399
    2. ' new' → logprob: -5.382081508636475
    3. 'new' → logprob: -7.132081508636475
    4. '                
' → logprob: -7.257081508636475
    5. ' nd' → logprob: -8.632081031799316
    6. 'n' → logprob: -9.007081031799316
    7. ' next' → logprob: -9.382081031799316
    8. '```' → logprob: -9.507081031799316
    9. '
' → logprob: -10.007081031799316
    10. ' face' → logprob: -10.132081031799316

Token 588: ' bottom' (ID: 8725)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.24167996644973755
    2. 'n' → logprob: -1.7416799068450928
    3. 'if' → logprob: -3.6166799068450928
    4. 'new' → logprob: -5.116680145263672
    5. '               ' → logprob: -5.866680145263672
    6. 'nd' → logprob: -6.741680145263672
    7. '                   ' → logprob: -7.241680145263672
    8. 'nt' → logprob: -7.241680145263672
    9. 'nv' → logprob: -7.741680145263672
    10. 'cost' → logprob: -8.366680145263672

Token 589: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6686532497406006
    2. '_value' → logprob: -1.0436532497406006
    3. '=' → logprob: -2.6686532497406006
    4. '_val' → logprob: -3.5436532497406006
    5. '_cost' → logprob: -3.6686532497406006
    6. ',' → logprob: -4.91865348815918
    7. '_' → logprob: -6.54365348815918
    8. '_face' → logprob: -6.91865348815918
    9. 'value' → logprob: -7.91865348815918
    10. '_score' → logprob: -8.41865348815918

Token 590: ' nd' (ID: 5914)
  Prédit: 'ndice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ndice' → logprob: -0.01265962515026331
    2. 'nd' → logprob: -4.387659549713135
    3. ' nd' → logprob: -9.887660026550293
    4. 'nodiscard' → logprob: -11.012660026550293
    5. 'nbsp' → logprob: -11.137660026550293
    6. 'ndrome' → logprob: -11.137660026550293
    7. 'ndash' → logprob: -11.887660026550293
    8. 'ndür' → logprob: -12.262660026550293
    9. '(nd' → logprob: -12.512660026550293
    10. 'n' → logprob: -12.512660026550293

Token 591: 'ice' (ID: 603)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.06265349686145782
    2. 'ndice' → logprob: -3.3126535415649414
    3. 'd' → logprob: -3.9376535415649414
    4. 'ice' → logprob: -6.312653541564941
    5. '[' → logprob: -6.937653541564941
    6. 'nd' → logprob: -7.437653541564941
    7. '_nd' → logprob: -8.187653541564941
    8. '[]' → logprob: -8.312653541564941
    9. 'ices' → logprob: -8.687653541564941
    10. '_d' → logprob: -8.812653541564941

Token 592: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8193366486229934e-05
    2. '[-' → logprob: -11.125018119812012
    3. ' [' → logprob: -13.500018119812012
    4. '1' → logprob: -14.000018119812012
    5. '2' → logprob: -14.875018119812012
    6. '=' → logprob: -15.500018119812012
    7. '0' → logprob: -16.125019073486328
    8. '5' → logprob: -16.250019073486328
    9. '6' → logprob: -16.625019073486328
    10. '
' → logprob: -16.750019073486328

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -18.125
    3. '```' → logprob: -18.25
    4. ' ' → logprob: -18.875
    5. '0' → logprob: -19.5
    6. '   ' → logprob: -19.625
    7. '۱' → logprob: -20.625
    8. '[' → logprob: -21.6875
    9. ']' → logprob: -21.6875
    10. '>' → logprob: -21.8125

Token 594: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5247632265090942
    2. ']' → logprob: -0.8997632265090942
    3. ')' → logprob: -7.524763107299805
    4. ']
' → logprob: -7.899763107299805
    5. '               ' → logprob: -8.274763107299805
    6. ')
' → logprob: -8.774763107299805
    7. '<|end|>' → logprob: -9.274763107299805
    8. ' ]
' → logprob: -9.899763107299805
    9. '
' → logprob: -10.024763107299805
    10. ')]' → logprob: -10.399763107299805

Token 595: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012722006998956203
    2. '                
' → logprob: -5.262722015380859
    3. ' if' → logprob: -5.512722015380859
    4. '                ' → logprob: -7.012722015380859
    5. 'if' → logprob: -7.387722015380859
    6. '<|end|>' → logprob: -7.512722015380859
    7. ',' → logprob: -8.01272201538086
    8. '```' → logprob: -8.51272201538086
    9. ' 
' → logprob: -9.13772201538086
    10. '
' → logprob: -9.51272201538086

Token 596: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03167078644037247
    2. 'nc' → logprob: -4.406670570373535
    3. ' if' → logprob: -4.531670570373535
    4. 'cost' → logprob: -5.531670570373535
    5. 'new' → logprob: -6.156670570373535
    6. 'n' (adapté à ' n') → logprob: -6.656670570373535
    7. '               ' → logprob: -8.156670570373535
    8. '                   ' → logprob: -8.531670570373535
    9. 'c' → logprob: -9.281670570373535
    10. 'cell' → logprob: -9.531670570373535

Token 597: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.01216783095151186
    2. 'cell' → logprob: -5.137167930603027
    3. 'c' → logprob: -6.387167930603027
    4. 'ew' → logprob: -6.887167930603027
    5. 'val' → logprob: -7.012167930603027
    6. 'if' → logprob: -7.637167930603027
    7. 'ext' → logprob: -7.762167930603027
    8. '_cost' → logprob: -7.887167930603027
    9. 'v' → logprob: -8.012167930603027
    10. 'value' → logprob: -8.262167930603027

Token 598: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931536197662354
    2. ' =' → logprob: -0.6931536197662354
    3. '+' → logprob: -12.693153381347656
    4. ' ' → logprob: -13.318153381347656
    5. ' +' → logprob: -13.818153381347656
    6. ' +=' → logprob: -14.943153381347656
    7. '+=' → logprob: -15.943153381347656
    8. ',' → logprob: -16.443153381347656
    9. '＝' → logprob: -16.568153381347656
    10. ')' → logprob: -17.068153381347656

Token 599: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0009114635176956654
    2. ' cost' → logprob: -7.000911235809326
    3. '   ' → logprob: -18.250911712646484
    4. ' ' → logprob: -19.125911712646484
    5. '(cost' → logprob: -19.125911712646484
    6. 'code' → logprob: -19.750911712646484
    7. '               ' → logprob: -20.375911712646484
    8. '_cost' → logprob: -21.375911712646484
    9. '  ' → logprob: -21.500911712646484
    10. '           ' → logprob: -21.625911712646484

Token 600: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602262556552887
    2. ' +' → logprob: -1.9102262258529663
    3. '+=' → logprob: -14.285225868225098
    4. ' +=' → logprob: -15.035225868225098
    5. '＋' → logprob: -15.285225868225098
    6. '+
' → logprob: -15.410225868225098
    7. ' ' → logprob: -15.660225868225098
    8. ' ' → logprob: -16.285226821899414
    9. '=' → logprob: -16.535226821899414
    10. ' +
' → logprob: -16.785226821899414

Token 601: ' bottom' (ID: 8725)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.010102635249495506
    2. 'bottom' → logprob: -4.76010274887085
    3. ' grid' → logprob: -6.63510274887085
    4. 'nd' → logprob: -9.385102272033691
    5. ' bottom' → logprob: -10.510102272033691
    6. '(grid' → logprob: -11.010102272033691
    7. '	grid' → logprob: -12.010102272033691
    8. '1' → logprob: -12.135102272033691
    9. '   ' → logprob: -12.510102272033691
    10. 'abs' → logprob: -12.760102272033691

Token 602: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3110148310661316
    2. '               ' → logprob: -1.6860148906707764
    3. '+' → logprob: -2.5610148906707764
    4. '
' → logprob: -5.561014652252197
    5. ' if' → logprob: -7.686014652252197
    6. '                
' → logprob: -9.311015129089355
    7. 'if' → logprob: -9.686015129089355
    8. ' +
' → logprob: -9.936015129089355
    9. '```' → logprob: -9.936015129089355
    10. '                ' → logprob: -10.186015129089355

Token 603: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.008703920990228653
    2. ' grid' → logprob: -4.758703708648682
    3. '1' → logprob: -10.63370418548584
    4. '	grid' → logprob: -10.88370418548584
    5. '2' → logprob: -11.75870418548584
    6. 'bottom' → logprob: -11.88370418548584
    7. '(grid' → logprob: -12.00870418548584
    8. '-grid' → logprob: -12.38370418548584
    9. '.grid' → logprob: -12.63370418548584
    10. '/grid' → logprob: -13.00870418548584

Token 604: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.968312951968983e-06
    2. '[n' → logprob: -12.000009536743164
    3. '[y' → logprob: -13.625009536743164
    4. 'ny' → logprob: -14.375009536743164
    5. '][' → logprob: -14.375009536743164
    6. ' [' → logprob: -14.750009536743164
    7. '[new' → logprob: -15.250009536743164
    8. '[
' → logprob: -15.375009536743164
    9. '```' → logprob: -15.875009536743164
    10. '[now' → logprob: -15.875009536743164

Token 605: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0042339167557656765
    2. '[' → logprob: -5.5042338371276855
    3. ' ny' → logprob: -9.254234313964844
    4. '][' → logprob: -10.004234313964844
    5. ']' → logprob: -11.754234313964844
    6. 'n' → logprob: -13.629234313964844
    7. '```' → logprob: -13.754234313964844
    8. '[n' → logprob: -13.879234313964844
    9. 'y' → logprob: -13.879234313964844
    10. '   ' → logprob: -14.004234313964844

Token 606: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006034302059561014
    2. '[n' → logprob: -8.000603675842285
    3. ']' → logprob: -8.625603675842285
    4. '[' → logprob: -9.500603675842285
    5. ' ][' → logprob: -11.500603675842285
    6. '"][' → logprob: -14.000603675842285
    7. '   ' → logprob: -14.250603675842285
    8. '(nx' → logprob: -14.500603675842285
    9. ''][' → logprob: -14.625603675842285
    10. '       ' → logprob: -16.12560272216797

Token 607: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.000145137935760431
    2. ' nx' → logprob: -8.875144958496094
    3. '(nx' → logprob: -12.250144958496094
    4. 'n' → logprob: -15.375144958496094
    5. '
' → logprob: -16.500144958496094
    6. 'x' → logprob: -18.125144958496094
    7. 'Nx' → logprob: -18.250144958496094
    8. '   ' → logprob: -18.375144958496094
    9. '```' → logprob: -18.375144958496094
    10. 'nc' → logprob: -18.875144958496094

Token 608: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22796711325645447
    2. '               ' → logprob: -1.6029671430587769
    3. ')
' → logprob: -6.477967262268066
    4. '<|end|>' → logprob: -7.727967262268066
    5. ']' → logprob: -8.602967262268066
    6. '                   ' → logprob: -9.102967262268066
    7. ',' → logprob: -9.852967262268066
    8. '<|end|>' → logprob: -10.477967262268066
    9. '           ' → logprob: -10.727967262268066
    10. '```' → logprob: -10.977967262268066

Token 609: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025014597922563553
    2. '                
' → logprob: -7.377501487731934
    3. '<|end|>' → logprob: -7.502501487731934
    4. ' if' → logprob: -7.877501487731934
    5. '```' → logprob: -7.877501487731934
    6. 'if' → logprob: -8.627501487731934
    7. '                   ' → logprob: -9.252501487731934
    8. '           ' → logprob: -9.252501487731934
    9. '	           ' → logprob: -10.502501487731934
    10. '              ' → logprob: -10.752501487731934

Token 610: ' state' (ID: 2608)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29481247067451477
    2. '               ' → logprob: -1.5448124408721924
    3. ' if' → logprob: -3.4198124408721924
    4. 'key' → logprob: -4.7948126792907715
    5. ' key' → logprob: -7.1698126792907715
    6. '                
' → logprob: -9.169812202453613
    7. 'state' (adapté à ' state') → logprob: -10.544812202453613
    8. '                   ' → logprob: -11.294812202453613
    9. '```' → logprob: -11.294812202453613
    10. '_key' → logprob: -11.419812202453613

Token 611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252054899930954
    2. ' =' → logprob: -1.5020549297332764
    3. '_key' → logprob: -9.377055168151855
    4. '_' → logprob: -10.377055168151855
    5. ')' → logprob: -12.502055168151855
    6. '=
' → logprob: -13.127055168151855
    7. ' =
' → logprob: -13.502055168151855
    8. ')=' → logprob: -14.377055168151855
    9. 's' → logprob: -14.627055168151855
    10. ' key' → logprob: -14.627055168151855

Token 612: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01532191876322031
    2. '(' → logprob: -4.265321731567383
    3. ' (' → logprob: -6.765321731567383
    4. '(nd' → logprob: -13.140321731567383
    5. '(nx' → logprob: -13.390321731567383
    6. '(N' → logprob: -14.265321731567383
    7. '   ' → logprob: -15.390321731567383
    8. '(y' → logprob: -16.640321731567383
    9. '(nt' → logprob: -16.640321731567383
    10. '  ' → logprob: -17.015321731567383

Token 613: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.190178904333152e-05
    2. ' ny' → logprob: -10.750031471252441
    3. '(n' → logprob: -11.500031471252441
    4. '(' → logprob: -15.625031471252441
    5. 'n' → logprob: -16.375032424926758
    6. '   ' → logprob: -18.375032424926758
    7. '
' → logprob: -18.375032424926758
    8. ' (' → logprob: -19.375032424926758
    9. 'nx' → logprob: -19.375032424926758
    10. ',' → logprob: -19.500032424926758

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. ',n' → logprob: -10.87503719329834
    3. ' ,' → logprob: -11.12503719329834
    4. ',
' → logprob: -12.75003719329834
    5. ',x' → logprob: -15.00003719329834
    6. '<|end|>' → logprob: -15.87503719329834
    7. '`,' → logprob: -16.250038146972656
    8. '‌,' → logprob: -16.375038146972656
    9. '',' → logprob: -16.875038146972656
    10. ',num' → logprob: -17.250038146972656

Token 615: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.04859054833650589
    2. ' nx' → logprob: -3.048590660095215
    3. '(nx' → logprob: -13.048590660095215
    4. 'n' → logprob: -14.298590660095215
    5. 'nc' → logprob: -16.1735897064209
    6. 'Nx' → logprob: -16.5485897064209
    7. '
' → logprob: -17.4235897064209
    8. '   ' → logprob: -17.5485897064209
    9. ' ' → logprob: -17.6735897064209
    10. 'NX' → logprob: -18.2985897064209

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016992862219922245
    2. ',n' → logprob: -8.87516975402832
    3. ',d' → logprob: -11.37516975402832
    4. ' ,' → logprob: -11.75016975402832
    5. ',
' → logprob: -11.87516975402832
    6. '‌,' → logprob: -13.50016975402832
    7. ',new' → logprob: -14.87516975402832
    8. ',node' → logprob: -15.00016975402832
    9. '<|end|>' → logprob: -15.50016975402832
    10. '<|end|>' → logprob: -15.87516975402832

Token 617: ' nd' (ID: 5914)
  Prédit: 'ndice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ndice' → logprob: -0.026817113161087036
    2. 'nd' → logprob: -3.6518170833587646
    3. ' nd' → logprob: -8.026817321777344
    4. '(nd' → logprob: -9.776817321777344
    5. 'ndrome' → logprob: -9.901817321777344
    6. '_nd' → logprob: -10.776817321777344
    7. 'nodiscard' → logprob: -11.526817321777344
    8. 'ndür' → logprob: -11.651817321777344
    9. 'нд' → logprob: -12.026817321777344
    10. 'Nd' → logprob: -12.276817321777344

Token 618: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0001475220051361248
    2. 'dice' → logprob: -8.875147819519043
    3. 'oce' → logprob: -13.250147819519043
    4. 'lice' → logprob: -13.375147819519043
    5. 'ce' → logprob: -13.625147819519043
    6. 'ince' → logprob: -14.750147819519043
    7. '```' → logprob: -15.500147819519043
    8. '{
' → logprob: -15.500147819519043
    9. '(' → logprob: -15.625147819519043
    10. '`' → logprob: -15.750147819519043

Token 619: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20146334171295166
    2. ')' → logprob: -1.7014633417129517
    3. ')
' → logprob: -9.95146369934082
    4. ')

' → logprob: -13.32646369934082
    5. '               ' → logprob: -15.57646369934082
    6. '   ' → logprob: -15.57646369934082
    7. ')`
' → logprob: -16.20146369934082
    8. ' )
' → logprob: -16.45146369934082
    9. '       ' → logprob: -16.82646369934082
    10. '                   ' → logprob: -16.95146369934082

Token 620: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00891153234988451
    2. '<|end|>' → logprob: -5.508911609649658
    3. ' if' → logprob: -6.133911609649658
    4. '                
' → logprob: -6.883911609649658
    5. '```' → logprob: -7.633911609649658
    6. 'if' → logprob: -8.0089111328125
    7. ')' → logprob: -8.5089111328125
    8. '                   ' → logprob: -9.2589111328125
    9. '
' → logprob: -9.2589111328125
    10. '           ' → logprob: -9.3839111328125

Token 621: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7990081310272217
    2. '               ' → logprob: -0.7990081310272217
    3. ' if' → logprob: -2.2990081310272217
    4. '           ' → logprob: -10.1740083694458
    5. '   ' → logprob: -11.6740083694458
    6. '	if' → logprob: -11.6740083694458
    7. '                
' → logprob: -11.9240083694458
    8. '              ' → logprob: -12.0490083694458
    9. '                   ' → logprob: -12.0490083694458
    10. '<|end|>' → logprob: -12.1740083694458

Token 622: ' state' (ID: 2608)
  Prédit: ' state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' state' → logprob: -0.07889353483915329
    2. 'state' → logprob: -2.5788934230804443
    3. '(state' → logprob: -12.703893661499023
    4. ' (' → logprob: -15.078893661499023
    5. '	state' → logprob: -15.953893661499023
    6. '               ' → logprob: -16.453893661499023
    7. ' ' → logprob: -16.453893661499023
    8. ' dist' → logprob: -17.203893661499023
    9. '   ' → logprob: -17.203893661499023
    10. '                   ' → logprob: -17.578893661499023

Token 623: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.015098259784281254
    2. 'not' → logprob: -4.2650980949401855
    3. ']' → logprob: -7.1400980949401855
    4. ')' → logprob: -9.015098571777344
    5. ' in' → logprob: -11.890098571777344
    6. '<|end|>' → logprob: -12.265098571777344
    7. '	not' → logprob: -12.515098571777344
    8. 'in' → logprob: -13.765098571777344
    9. ' ' → logprob: -14.140098571777344
    10. '[' → logprob: -14.390098571777344

Token 624: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011251295916736126
    2. 'in' → logprob: -4.511251449584961
    3. ' or' → logprob: -9.636251449584961
    4. '<|end|>' → logprob: -10.011251449584961
    5. ' not' → logprob: -10.511251449584961
    6. ')' → logprob: -10.636251449584961
    7. '               ' → logprob: -11.511251449584961
    8. '                   ' → logprob: -12.261251449584961
    9. '<|end|>' → logprob: -12.261251449584961
    10. ']' → logprob: -12.386251449584961

Token 625: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009114635176956654
    2. ' dist' → logprob: -7.000911235809326
    3. '	dist' → logprob: -17.750911712646484
    4. '(dist' → logprob: -19.375911712646484
    5. '
' → logprob: -19.750911712646484
    6. '_dist' → logprob: -20.375911712646484
    7. '.dist' → logprob: -20.625911712646484
    8. 'Dist' → logprob: -21.625911712646484
    9. '```' → logprob: -22.375911712646484
    10. 'dict' → logprob: -22.375911712646484

Token 626: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0010685354936867952
    2. 'or' → logprob: -6.876068592071533
    3. '	or' → logprob: -10.501068115234375
    4. ' ' → logprob: -12.376068115234375
    5. '<|end|>' → logprob: -13.001068115234375
    6. '   ' → logprob: -14.501068115234375
    7. '  ' → logprob: -15.501068115234375
    8. '           ' → logprob: -15.751068115234375
    9. '    ' → logprob: -15.751068115234375
    10. '<|end|>' → logprob: -15.876068115234375

Token 627: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6426841616630554
    2. 'dist' → logprob: -1.3926842212677002
    3. ' n' → logprob: -2.1426842212677
    4. 'nc' → logprob: -2.3926842212677
    5. 'cost' → logprob: -5.142683982849121
    6. 'n' → logprob: -5.142683982849121
    7. ' nc' → logprob: -6.017683982849121
    8. ' cost' → logprob: -6.142683982849121
    9. '   ' → logprob: -8.017683982849121
    10. '           ' → logprob: -9.392683982849121

Token 628: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -3.583550642360933e-05
    2. '[' → logprob: -10.250036239624023
    3. '[(' → logprob: -14.875036239624023
    4. 'state' → logprob: -17.625036239624023
    5. '(state' → logprob: -17.875036239624023
    6. '[
' → logprob: -18.750036239624023
    7. ' [' → logprob: -19.000036239624023
    8. '<State' → logprob: -19.125036239624023
    9. '```' → logprob: -19.375036239624023
    10. ',state' → logprob: -20.375036239624023

Token 629: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08894874155521393
    2. ' >' → logprob: -2.4639487266540527
    3. ']>' → logprob: -12.963949203491211
    4. '">' → logprob: -13.838949203491211
    5. ']' → logprob: -13.963949203491211
    6. '()>' → logprob: -14.213949203491211
    7. 'n' → logprob: -14.338949203491211
    8. ' ' → logprob: -14.838949203491211
    9. '   ' → logprob: -14.838949203491211
    10. '>null' → logprob: -14.963949203491211

Token 630: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02325153350830078
    2. ' >' → logprob: -3.773251533508301
    3. '>d' → logprob: -14.0232515335083
    4. '>
' → logprob: -14.5232515335083
    5. ' ' → logprob: -14.5232515335083
    6. '>null' → logprob: -14.6482515335083
    7. '>NN' → logprob: -14.7732515335083
    8. '   ' → logprob: -14.8982515335083
    9. '[' → logprob: -15.0232515335083
    10. '>
' → logprob: -15.2732515335083

Token 631: ' n' (ID: 297)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.47450029850006104
    2. ' n' → logprob: -0.974500298500061
    3. 'n' → logprob: -7.9745001792907715
    4. ' nc' → logprob: -10.09950065612793
    5. '   ' → logprob: -11.22450065612793
    6. 'cost' → logprob: -12.34950065612793
    7. '	n' → logprob: -12.47450065612793
    8. '(n' → logprob: -12.97450065612793
    9. '```' → logprob: -12.97450065612793
    10. 'nb' → logprob: -13.34950065612793

Token 632: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.000397422380046919
    2. 'nc' → logprob: -8.750397682189941
    3. '_cost' → logprob: -9.375397682189941
    4. '```' → logprob: -9.375397682189941
    5. ' cost' → logprob: -10.250397682189941
    6. 'oc' → logprob: -12.000397682189941
    7. 'pc' → logprob: -12.250397682189941
    8. 'cc' → logprob: -12.500397682189941
    9. ' n' → logprob: -12.625397682189941
    10. '   ' → logprob: -13.125397682189941

Token 633: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2842051088809967
    2. ':
' → logprob: -1.4092050790786743
    3. '               ' → logprob: -6.659204959869385
    4. '                   ' → logprob: -6.784204959869385
    5. '):
' → logprob: -8.534205436706543
    6. '=' → logprob: -9.284205436706543
    7. '           ' → logprob: -9.534205436706543
    8. '):' → logprob: -9.784205436706543
    9. '                       ' → logprob: -9.909205436706543
    10. ':
' → logprob: -10.159205436706543

Token 634: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0041618566028773785
    2. '               ' → logprob: -5.879161834716797
    3. '                       ' → logprob: -7.379161834716797
    4. 'heap' → logprob: -8.254161834716797
    5. ' heap' → logprob: -8.629161834716797
    6. '                  ' → logprob: -10.129161834716797
    7. '           ' → logprob: -10.379161834716797
    8. '                    
' → logprob: -10.379161834716797
    9. '```' → logprob: -10.379161834716797
    10. ':' → logprob: -10.504161834716797

Token 635: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3873122036457062
    2. 'dist' (adapté à ' dist') → logprob: -1.1373121738433838
    3. '                   ' → logprob: -8.012311935424805
    4. '                       ' → logprob: -10.137311935424805
    5. '```' → logprob: -10.512311935424805
    6. 'heap' → logprob: -10.637311935424805
    7. '   ' → logprob: -12.262311935424805
    8. '	dist' → logprob: -12.387311935424805
    9. ' heap' → logprob: -12.512311935424805
    10. '                    ' → logprob: -13.262311935424805

Token 636: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.125005722045898
    3. 'state' → logprob: -16.2500057220459
    4. ',state' → logprob: -18.3750057220459
    5. '(state' → logprob: -19.3750057220459
    6. ' [' → logprob: -19.3750057220459
    7. '[
' → logprob: -19.7500057220459
    8. ')[' → logprob: -20.2500057220459
    9. '                   ' → logprob: -20.2500057220459
    10. '```' → logprob: -20.3750057220459

Token 637: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47418639063835144
    2. ' =' → logprob: -0.9741864204406738
    3. ']' → logprob: -9.474185943603516
    4. ']=' → logprob: -10.599185943603516
    5. '=n' → logprob: -11.974185943603516
    6. ')' → logprob: -14.224185943603516
    7. ')=' → logprob: -14.974185943603516
    8. '=
' → logprob: -16.724185943603516
    9. ',' → logprob: -16.849185943603516
    10. '＝' → logprob: -16.974185943603516

Token 638: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858794063329697
    2. ' =' → logprob: -3.0485880374908447
    3. '=n' → logprob: -15.048587799072266
    4. '＝' → logprob: -16.673587799072266
    5. ']=' → logprob: -16.798587799072266
    6. ')=' → logprob: -17.173587799072266
    7. '=
' → logprob: -17.798587799072266
    8. '<|end|>' → logprob: -17.798587799072266
    9. '[' → logprob: -18.298587799072266
    10. ')' → logprob: -18.423587799072266

Token 639: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.387261301279068
    2. 'nc' → logprob: -1.1372612714767456
    3. ' nc' → logprob: -8.012261390686035
    4. 'n' → logprob: -9.887261390686035
    5. '	n' → logprob: -13.512261390686035
    6. 'NC' → logprob: -13.637261390686035
    7. '_nc' → logprob: -14.012261390686035
    8. ' ' → logprob: -14.012261390686035
    9. 'nd' → logprob: -14.262261390686035
    10. 'nb' → logprob: -14.387261390686035

Token 640: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -4.320199877838604e-07
    2. ' cost' → logprob: -15.125
    3. '_cost' → logprob: -15.625
    4. '-cost' → logprob: -18.75
    5. 'Cost' → logprob: -18.875
    6. 'ost' → logprob: -18.875
    7. 'c' → logprob: -19.375
    8. 'cos' → logprob: -20.375
    9. '.cost' → logprob: -21.25
    10. '(cost' → logprob: -21.25

Token 641: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.5649528298527e-05
    2. 'heap' → logprob: -10.250075340270996
    3. '				' → logprob: -10.750075340270996
    4. '```' → logprob: -12.000075340270996
    5. '           ' → logprob: -12.375075340270996
    6. '
' → logprob: -12.875075340270996
    7. '               ' → logprob: -13.125075340270996
    8. '   ' → logprob: -13.625075340270996
    9. ' heap' → logprob: -14.250075340270996
    10. '                    
' → logprob: -14.625075340270996

Token 642: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0042817541398108006
    2. '```' → logprob: -5.754281520843506
    3. 'heap' → logprob: -6.879281520843506
    4. ' heap' → logprob: -10.504281997680664
    5. '				' → logprob: -11.504281997680664
    6. '           ' → logprob: -11.629281997680664
    7. '``' → logprob: -11.754281997680664
    8. '               ' → logprob: -11.879281997680664
    9. '   ' → logprob: -12.004281997680664
    10. '                  ' → logprob: -12.754281997680664

Token 643: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.56102097814437e-05
    2. ' heap' → logprob: -10.000045776367188
    3. 'he' → logprob: -15.625045776367188
    4. '                   ' → logprob: -20.000045776367188
    5. '   ' → logprob: -20.375045776367188
    6. 'Heap' → logprob: -21.375045776367188
    7. '.heap' → logprob: -21.375045776367188
    8. '_heap' → logprob: -21.500045776367188
    9. '(heap' → logprob: -21.500045776367188
    10. '           ' → logprob: -22.375045776367188

Token 644: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.630610641877865e-06
    2. 'p' → logprob: -12.375006675720215
    3. '.he' → logprob: -13.625006675720215
    4. 'h' → logprob: -14.500006675720215
    5. 'he' → logprob: -15.250006675720215
    6. 'app' → logprob: -15.625006675720215
    7. '```' → logprob: -16.2500057220459
    8. 'push' → logprob: -16.5000057220459
    9. '   ' → logprob: -16.8750057220459
    10. '.heap' → logprob: -18.1250057220459

Token 645: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.9385402993066236e-05
    2. 'he' → logprob: -11.000019073486328
    3. '.heap' → logprob: -13.875019073486328
    4. '.push' → logprob: -14.125019073486328
    5. '.' → logprob: -15.250019073486328
    6. '```' → logprob: -16.000019073486328
    7. 'push' → logprob: -16.000019073486328
    8. ' he' → logprob: -16.500019073486328
    9. '_he' → logprob: -16.625019073486328
    10. '>.' → logprob: -16.875019073486328

Token 646: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.041165199130773544
    2. 'push' → logprob: -3.5411651134490967
    3. 'pp' → logprob: -4.541165351867676
    4. 'ush' → logprob: -7.291165351867676
    5. 'p' → logprob: -12.291165351867676
    6. 'he' → logprob: -13.791165351867676
    7. 'h' → logprob: -14.166165351867676
    8. '```' → logprob: -15.291165351867676
    9. '.push' → logprob: -15.666165351867676
    10. '[' → logprob: -15.666165351867676

Token 647: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00018923594325315207
    2. 'push' → logprob: -8.625188827514648
    3. 'sh' → logprob: -12.375188827514648
    4. 'app' → logprob: -12.625188827514648
    5. 'p' → logprob: -13.875188827514648
    6. '```' → logprob: -14.625188827514648
    7. 'pp' → logprob: -15.125188827514648
    8. 'op' → logprob: -15.875188827514648
    9. '.push' → logprob: -16.00018882751465
    10. 'u' → logprob: -17.25018882751465

Token 648: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.500001907348633
    3. '(h' → logprob: -15.750001907348633
    4. ' (' → logprob: -16.000001907348633
    5. 'heap' → logprob: -16.250001907348633
    6. ' heap' → logprob: -16.625001907348633
    7. '(hit' → logprob: -18.250001907348633
    8. '(
' → logprob: -18.500001907348633
    9. '(queue' → logprob: -18.875001907348633
    10. '```' → logprob: -19.000001907348633

Token 649: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -12.00001049041748
    3. ',' → logprob: -13.50001049041748
    4. ')' → logprob: -14.12501049041748
    5. 'heap' → logprob: -14.50001049041748
    6. ' (' → logprob: -14.75001049041748
    7. '(h' → logprob: -15.00001049041748
    8. '(queue' → logprob: -15.12501049041748
    9. ' heap' → logprob: -15.50001049041748
    10. '```' → logprob: -15.87501049041748

Token 650: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.029876135289669037
    2. ' (' → logprob: -3.529876232147217
    3. '(' → logprob: -9.029875755310059
    4. '(nd' → logprob: -12.904875755310059
    5. '(nx' → logprob: -13.904875755310059
    6. '   ' → logprob: -14.154875755310059
    7. '(nt' → logprob: -14.529875755310059
    8. '(cost' → logprob: -14.529875755310059
    9. ' ' → logprob: -14.904875755310059
    10. '  ' → logprob: -16.279876708984375

Token 651: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -8.061054359131958e-06
    2. 'n' → logprob: -12.000007629394531
    3. ' nc' → logprob: -13.500007629394531
    4. ' n' → logprob: -15.875007629394531
    5. '```' → logprob: -16.12500762939453
    6. '   ' → logprob: -16.87500762939453
    7. '(n' → logprob: -17.25000762939453
    8. '_nc' → logprob: -17.62500762939453
    9. 'ncmp' → logprob: -17.87500762939453
    10. '	n' → logprob: -18.75000762939453

Token 652: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.023258987814188004
    2. 'cost' → logprob: -3.773258924484253
    3. '_cost' → logprob: -11.523259162902832
    4. 'st' → logprob: -13.898259162902832
    5. ' cost' → logprob: -14.023259162902832
    6. 'ост' → logprob: -14.648259162902832
    7. '(cost' → logprob: -14.648259162902832
    8. 'Cost' → logprob: -14.898259162902832
    9. '```' → logprob: -16.023258209228516
    10. 'os' → logprob: -16.398258209228516

Token 653: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.093505099765025e-05
    2. ' ,' → logprob: -11.500020980834961
    3. ',n' → logprob: -11.875020980834961
    4. '<|end|>' → logprob: -13.625020980834961
    5. ',y' → logprob: -13.875020980834961
    6. ',
' → logprob: -15.125020980834961
    7. '`,' → logprob: -15.250020980834961
    8. '```' → logprob: -15.500020980834961
    9. '   ' → logprob: -15.750020980834961
    10. '‌,' → logprob: -16.00002098083496

Token 654: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.3868728280067444
    2. 'ny' → logprob: -1.1368727684020996
    3. 'nyi' → logprob: -14.636873245239258
    4. ' ' → logprob: -15.386873245239258
    5. 'nye' → logprob: -15.386873245239258
    6. ''ny' → logprob: -15.636873245239258
    7. '```' → logprob: -15.886873245239258
    8. '   ' → logprob: -16.511873245239258
    9. ' nny' → logprob: -16.636873245239258
    10. ' ' → logprob: -16.636873245239258

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005124026210978627
    2. ',n' → logprob: -7.625512599945068
    3. ' ,' → logprob: -10.75051212310791
    4. '<|end|>' → logprob: -13.87551212310791
    5. ' nx' → logprob: -14.25051212310791
    6. ',
' → logprob: -14.37551212310791
    7. ',x' → logprob: -14.87551212310791
    8. '(nx' → logprob: -15.62551212310791
    9. ',next' → logprob: -17.375513076782227
    10. 'nx' → logprob: -17.375513076782227

Token 656: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.03365468978881836
    2. ' nx' → logprob: -3.4086546897888184
    3. '(nx' → logprob: -12.533655166625977
    4. 'n' → logprob: -12.908655166625977
    5. '
' → logprob: -14.408655166625977
    6. '   ' → logprob: -14.783655166625977
    7. 'Nx' → logprob: -14.783655166625977
    8. 'nc' → logprob: -15.283655166625977
    9. ' ' → logprob: -15.283655166625977
    10. '```' → logprob: -15.283655166625977

Token 657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',n' → logprob: -15.000012397766113
    4. ',
' → logprob: -15.250012397766113
    5. ',state' → logprob: -16.875011444091797
    6. '‌,' → logprob: -17.375011444091797
    7. ',d' → logprob: -17.375011444091797
    8. '`,' → logprob: -18.125011444091797
    9. '),' → logprob: -18.250011444091797
    10. '<|end|>' → logprob: -18.625011444091797

Token 658: ' nd' (ID: 5914)
  Prédit: 'ndice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ndice' → logprob: -0.044565554708242416
    2. 'nd' → logprob: -3.169565439224243
    3. ' nd' → logprob: -6.669565677642822
    4. 'state' → logprob: -9.544565200805664
    5. 'ndrome' → logprob: -9.544565200805664
    6. 'stice' → logprob: -10.419565200805664
    7. 'n' → logprob: -10.794565200805664
    8. 'ndag' → logprob: -11.294565200805664
    9. '_nd' → logprob: -11.544565200805664
    10. '(nd' → logprob: -12.044565200805664

Token 659: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0005037044174969196
    2. 'dice' → logprob: -7.7505035400390625
    3. 'ce' → logprob: -10.125503540039062
    4. 'oce' → logprob: -11.500503540039062
    5. 'ise' → logprob: -12.500503540039062
    6. 'lice' → logprob: -12.875503540039062
    7. '```' → logprob: -13.125503540039062
    8. 'Dice' → logprob: -13.500503540039062
    9. '
' → logprob: -13.750503540039062
    10. 'ose' → logprob: -13.750503540039062

Token 660: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.3199920178740285e-05
    2. '))
' → logprob: -10.875022888183594
    3. ')' → logprob: -12.500022888183594
    4. ' ))' → logprob: -15.250022888183594
    5. ')))' → logprob: -15.625022888183594
    6. '   ' → logprob: -17.750022888183594
    7. '))

' → logprob: -18.625022888183594
    8. '))
' → logprob: -19.125022888183594
    9. '       ' → logprob: -19.875022888183594
    10. '));' → logprob: -19.875022888183594

Token 661: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 662: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.875000953674316
    3. ' print' → logprob: -15.125000953674316
    4. '
' → logprob: -16.875
    5. '   ' → logprob: -17.125
    6. '    
' → logprob: -17.375
    7. '#print' → logprob: -19.75
    8. 'pr' → logprob: -19.75
    9. '(print' → logprob: -19.875
    10. 'printf' → logprob: -20.0

Token 663: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.750000953674316
    3. 'res' → logprob: -15.125000953674316
    4. '(result' → logprob: -17.875
    5. ' (' → logprob: -18.125
    6. '(r' → logprob: -19.625
    7. '(re' → logprob: -19.75
    8. ' res' → logprob: -19.75
    9. '	res' → logprob: -20.875
    10. '=res' → logprob: -20.875

Token 664: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')`' → logprob: -15.875
    3. ' )' → logprob: -16.5
    4. '))' → logprob: -16.75
    5. '())' → logprob: -17.875
    6. '`)' → logprob: -17.875
    7. ')}' → logprob: -18.625
    8. ')
' → logprob: -18.75
    9. '()' → logprob: -19.0
    10. '),' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 662
Tokens correctement prédits (1ère position, stricte): 288
Tokens correctement prédits (1ère position, avec adaptation): 308
Tokens correctement prédits (top 10): 563
Précision stricte (1ère position): 43.50%
Précision adaptée (1ère position): 46.53%
Précision (top 10): 85.05%
================================================================================
