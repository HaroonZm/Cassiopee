================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    H, W = map(int, input().split())
    if H == 0 and W == 0:
        break
    room = [input() for _ in range(H)]
    x, y = 0, 0
    visited = set()
    moves = {'>': (1, 0), '<': (-1, 0), '^': (0, -1), 'v': (0, 1)}
    while True:
        if (x, y) in visited:
            print("LOOP")
            break
        visited.add((x, y))
        tile = room[y][x]
        if tile == '.':
            print(x, y)
            break
        dx, dy = moves[tile]
        x += dx
        y += dy
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2772314250469208
    2. ' ' → logprob: -1.9022314548492432
    3. '\' → logprob: -3.902231454849243
    4. '    ' → logprob: -4.152231216430664
    5. '    
' → logprob: -4.527231216430664
    6. ' 
' → logprob: -4.777231216430664
    7. '```' → logprob: -4.777231216430664
    8. '\n' → logprob: -5.277231216430664
    9. '<|end|>' → logprob: -5.277231216430664
    10. ''' → logprob: -5.902231216430664

Token 4: ' H' (ID: 487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.038549523800611496
    2. '=' → logprob: -3.9135494232177734
    3. '   ' → logprob: -5.038549423217773
    4. 'i' → logprob: -5.288549423217773
    5. ' =' → logprob: -6.913549423217773
    6. 'u' → logprob: -6.913549423217773
    7. ' ' → logprob: -7.163549423217773
    8. 'a' → logprob: -7.163549423217773
    9. ':' → logprob: -7.413549423217773
    10. '    ' → logprob: -7.663549423217773

Token 6: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -1.137293815612793
    2. 'W' → logprob: -1.887293815612793
    3. 'I' → logprob: -2.012293815612793
    4. ' I' → logprob: -2.637293815612793
    5. 'S' → logprob: -3.387293815612793
    6. ' S' → logprob: -3.762293815612793
    7. '   ' → logprob: -3.887293815612793
    8. ' =' → logprob: -4.012293815612793
    9. 'e' → logprob: -4.262293815612793
    10. 'T' → logprob: -4.324793815612793

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8750006556510925
    2. ',' → logprob: -1.1250007152557373
    3. ' =' → logprob: -1.5000007152557373
    4. ')' → logprob: -4.000000476837158
    5. ' ,' → logprob: -5.250000476837158
    6. '<|end|>' → logprob: -5.500000476837158
    7. ' ' → logprob: -5.875000476837158
    8. '[' → logprob: -6.250000476837158
    9. '   ' → logprob: -6.375000476837158
    10. '```' → logprob: -8.750000953674316

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.08952843397855759
    2. 'map' → logprob: -2.4645283222198486
    3. ' input' → logprob: -7.964528560638428
    4. ' list' → logprob: -9.21452808380127
    5. 'input' → logprob: -9.21452808380127
    6. 'list' → logprob: -11.33952808380127
    7. ' [' → logprob: -11.46452808380127
    8. '[' → logprob: -11.71452808380127
    9. ' ' → logprob: -12.21452808380127
    10. '0' → logprob: -12.46452808380127

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007787373848259449
    2. '(' → logprob: -5.007787227630615
    3. '(str' → logprob: -7.632787227630615
    4. 'int' → logprob: -7.757787227630615
    5. '(input' → logprob: -9.007787704467773
    6. '<int' → logprob: -11.382787704467773
    7. '(lambda' → logprob: -12.382787704467773
    8. '```' → logprob: -12.507787704467773
    9. '(list' → logprob: -12.632787704467773
    10. ' int' → logprob: -12.757787704467773

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.030791057273745537
    2. 'input' → logprob: -3.9057910442352295
    3. '(' → logprob: -5.905791282653809
    4. ' input' → logprob: -6.155791282653809
    5. ',input' → logprob: -6.155791282653809
    6. ')' → logprob: -6.280791282653809
    7. ',' → logprob: -6.655791282653809
    8. '=input' → logprob: -10.530791282653809
    9. '[input' → logprob: -12.030791282653809
    10. '```' → logprob: -12.030791282653809

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132762610912323
    2. ' input' → logprob: -1.3132762908935547
    3. ')' → logprob: -11.813276290893555
    4. '(input' → logprob: -12.063276290893555
    5. '	input' → logprob: -15.313276290893555
    6. '```' → logprob: -15.313276290893555
    7. ',input' → logprob: -15.313276290893555
    8. ' )' → logprob: -15.688276290893555
    9. ' ' → logprob: -15.813276290893555
    10. '=input' → logprob: -15.813276290893555

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7447989583015442
    2. '().' → logprob: -1.1197988986968994
    3. '()' → logprob: -1.6197988986968994
    4. '()))' → logprob: -7.9947991371154785
    5. '());' → logprob: -8.49479866027832
    6. ')' → logprob: -9.74479866027832
    7. '('' → logprob: -9.86979866027832
    8. '(' → logprob: -10.36979866027832
    9. ' ())' → logprob: -10.61979866027832
    10. '();)' → logprob: -10.74479866027832

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.996708104154095e-05
    2. 'strip' → logprob: -9.250100135803223
    3. 'rstrip' → logprob: -12.750100135803223
    4. ' split' → logprob: -14.625100135803223
    5. 'read' → logprob: -15.500100135803223
    6. '(split' → logprob: -15.625100135803223
    7. ')' → logprob: -17.250099182128906
    8. '().' → logprob: -18.250099182128906
    9. ' readline' → logprob: -18.625099182128906
    10. 'spl' → logprob: -19.250099182128906

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36794140934944153
    2. '())' → logprob: -1.3679413795471191
    3. '))' → logprob: -3.117941379547119
    4. '()' → logprob: -5.242941379547119
    5. '()))' → logprob: -5.617941379547119
    6. '(' → logprob: -11.367941856384277
    7. '),' → logprob: -11.992941856384277
    8. '())
' → logprob: -11.992941856384277
    9. '()),' → logprob: -12.867941856384277
    10. ')))' → logprob: -13.242941856384277

Token 15: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31093305349349976
    2. ':' → logprob: -2.3109331130981445
    3. '   ' → logprob: -2.8109331130981445
    4. 'if' → logprob: -3.3109331130981445
    5. '<|end|>' → logprob: -3.9359331130981445
    6. ' ' → logprob: -4.1859331130981445
    7. ')' → logprob: -4.4359331130981445
    8. ',' → logprob: -4.6859331130981445
    9. '\n' → logprob: -5.5609331130981445
    10. '  ' → logprob: -6.3109331130981445

Token 16: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1005195677280426
    2. ' if' → logprob: -2.9755196571350098
    3. ' ' → logprob: -3.7255196571350098
    4. '<|end|>' → logprob: -4.85051965713501
    5. 'if' (adapté à ' if') → logprob: -5.97551965713501
    6. ':' → logprob: -6.10051965713501
    7. '```' → logprob: -6.47551965713501
    8. '    ' → logprob: -6.60051965713501
    9. '  ' → logprob: -7.10051965713501
    10. ')' → logprob: -7.10051965713501

Token 17: ' H' (ID: 487)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31747159361839294
    2. ' H' → logprob: -1.3174716234207153
    3. 'not' → logprob: -6.192471504211426
    4. ' ' → logprob: -6.442471504211426
    5. 'H' → logprob: -7.692471504211426
    6. ' W' → logprob: -9.567471504211426
    7. ' ' → logprob: -10.817471504211426
    8. ' (' → logprob: -11.692471504211426
    9. '(not' → logprob: -13.192471504211426
    10. ' break' → logprob: -13.442471504211426

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09928429871797562
    2. '==' → logprob: -2.7242844104766846
    3. ' <=' → logprob: -3.8492844104766846
    4. ' <' → logprob: -5.2242841720581055
    5. '<=' → logprob: -6.8492841720581055
    6. '<' → logprob: -7.3492841720581055
    7. '>' → logprob: -8.974284172058105
    8. '=' → logprob: -9.099284172058105
    9. ' ' → logprob: -9.349284172058105
    10. ' >' → logprob: -9.599284172058105

Token 19: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3484688997268677
    2. ' ' → logprob: -1.2234688997268677
    3. '   ' → logprob: -11.723468780517578
    4. '  ' → logprob: -11.848468780517578
    5. ' W' → logprob: -12.973468780517578
    6. 'W' → logprob: -13.348468780517578
    7. '```' → logprob: -13.348468780517578
    8. '    ' → logprob: -14.473468780517578
    9. '=' → logprob: -14.785968780517578
    10. '_' → logprob: -15.473468780517578

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001037691137753427
    2. ' ' → logprob: -6.87603759765625
    3. 'W' → logprob: -12.87603759765625
    4. '```' → logprob: -14.00103759765625
    5. '０' → logprob: -16.18853759765625
    6. 'and' → logprob: -16.31353759765625
    7. '-' → logprob: -16.37603759765625
    8. '  ' → logprob: -16.43853759765625
    9. '۰' → logprob: -16.50103759765625
    10. '``' → logprob: -16.50103759765625

Token 21: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03417958691716194
    2. 'and' → logprob: -3.4091796875
    3. ' ' → logprob: -7.6591796875
    4. ' or' → logprob: -10.4091796875
    5. ':' → logprob: -10.5341796875
    6. ' a' → logprob: -13.6591796875
    7. ' ' → logprob: -13.7841796875
    8. '	and' → logprob: -14.2841796875
    9. '  ' → logprob: -14.4091796875
    10. '0' → logprob: -15.0341796875

Token 22: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.5759576559066772
    2. ' W' → logprob: -0.8259576559066772
    3. '   ' → logprob: -11.575957298278809
    4. '    ' → logprob: -12.700957298278809
    5. '	W' → logprob: -12.950957298278809
    6. ' ' → logprob: -12.950957298278809
    7. '  ' → logprob: -14.950957298278809
    8. ' ' → logprob: -15.450957298278809
    9. '<|end|>' → logprob: -16.075958251953125
    10. 'w' → logprob: -16.700958251953125

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11442743241786957
    2. '==' → logprob: -2.239427328109741
    3. '<|end|>' → logprob: -7.23942756652832
    4. '=' → logprob: -8.61442756652832
    5. '<|end|>' → logprob: -8.61442756652832
    6. ')' → logprob: -8.73942756652832
    7. ' ' → logprob: -9.11442756652832
    8. '```' → logprob: -9.48942756652832
    9. ' ' → logprob: -9.98942756652832
    10. ')==' → logprob: -10.11442756652832

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0889405608177185
    2. ' ' → logprob: -2.4639406204223633
    3. '  ' → logprob: -15.088940620422363
    4. '   ' → logprob: -15.088940620422363
    5. '<|end|>' → logprob: -15.901440620422363
    6. ' ' → logprob: -16.026439666748047
    7. '```' → logprob: -16.276439666748047
    8. '۰' → logprob: -16.276439666748047
    9. '<|end|>' → logprob: -16.401439666748047
    10. '０' → logprob: -18.026439666748047

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. '  ' → logprob: -16.00037956237793
    4. '   ' → logprob: -16.18787956237793
    5. ' ' → logprob: -16.37537956237793
    6. '۰' → logprob: -17.31287956237793
    7. ')' → logprob: -17.37537956237793
    8. '```' → logprob: -17.50037956237793
    9. '０' → logprob: -18.50037956237793
    10. '<|end|>' → logprob: -18.56287956237793

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002600245934445411
    2. ':
' → logprob: -8.375260353088379
    3. '   ' → logprob: -10.875260353088379
    4. '       ' → logprob: -11.875260353088379
    5. ' :' → logprob: -13.125260353088379
    6. ':return' → logprob: -14.125260353088379
    7. '):' → logprob: -15.000260353088379
    8. ':\' → logprob: -16.250259399414062
    9. '.' → logprob: -16.750259399414062
    10. '	break' → logprob: -16.750259399414062

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003119863977190107
    2. '   ' → logprob: -8.625311851501465
    3. ':' → logprob: -9.875311851501465
    4. ' break' → logprob: -10.000311851501465
    5. '\n' → logprob: -11.250311851501465
    6. ':
' → logprob: -12.375311851501465
    7. '\' → logprob: -12.625311851501465
    8. '	break' → logprob: -13.125311851501465
    9. '```' → logprob: -13.375311851501465
    10. '<|end|>' → logprob: -13.375311851501465

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.043552860617637634
    2. '       ' → logprob: -3.293552875518799
    3. 'break' (adapté à ' break') → logprob: -5.293552875518799
    4. '   ' → logprob: -7.793552875518799
    5. '	break' → logprob: -10.16855239868164
    6. '```' → logprob: -11.29355239868164
    7. '_break' → logprob: -12.54355239868164
    8. '           ' → logprob: -13.41855239868164
    9. 'Break' → logprob: -13.54355239868164
    10. '-break' → logprob: -14.41855239868164

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03753399848937988
    2. '\n' → logprob: -3.41253399848938
    3. '    
' → logprob: -6.412533760070801
    4. '```' → logprob: -7.537533760070801
    5. '
' → logprob: -8.0375337600708
    6. '\' → logprob: -8.1625337600708
    7. 'print' → logprob: -8.1625337600708
    8. '       ' → logprob: -8.6625337600708
    9. '\r' → logprob: -9.0375337600708
    10. '#' → logprob: -9.0375337600708

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030510317534208298
    2. '    
' → logprob: -4.280510425567627
    3. '\n' → logprob: -4.780510425567627
    4. '```' → logprob: -5.030510425567627
    5. 'print' → logprob: -8.030509948730469
    6. '
' → logprob: -8.405509948730469
    7. '\' → logprob: -8.655509948730469
    8. '#' → logprob: -9.030509948730469
    9. '``' → logprob: -9.530509948730469
    10. '`' → logprob: -10.155509948730469

Token 31: ' room' (ID: 3435)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016878411173820496
    2. 'print' → logprob: -5.391878604888916
    3. 'for' → logprob: -6.016878604888916
    4. '    
' → logprob: -6.141878604888916
    5. ' for' → logprob: -6.266878604888916
    6. '```' → logprob: -6.391878604888916
    7. '#' → logprob: -7.516878604888916
    8. '[' → logprob: -7.641878604888916
    9. '\n' → logprob: -7.891878604888916
    10. 'grid' → logprob: -8.016878128051758

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027215447276830673
    2. '=' → logprob: -3.6522154808044434
    3. '_map' → logprob: -8.527215003967285
    4. ' ' → logprob: -8.527215003967285
    5. '[' → logprob: -8.652215003967285
    6. '_' → logprob: -8.902215003967285
    7. '=[]' → logprob: -10.152215003967285
    8. '[:]' → logprob: -10.777215003967285
    9. 's' → logprob: -10.902215003967285
    10. '_height' → logprob: -11.027215003967285

Token 33: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9074898362159729
    2. ' [' → logprob: -1.6574897766113281
    3. '[]' → logprob: -1.7824897766113281
    4. ' []' → logprob: -2.407489776611328
    5. '[['' → logprob: -3.032489776611328
    6. ' [['' → logprob: -3.532489776611328
    7. '[[' → logprob: -3.657489776611328
    8. '["' → logprob: -4.532489776611328
    9. ' [[' → logprob: -4.532489776611328
    10. ' [["' → logprob: -4.657489776611328

Token 34: 'input' (ID: 2586)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8090550899505615
    2. '['' → logprob: -0.9340550899505615
    3. '["' → logprob: -2.8090550899505615
    4. '[input' → logprob: -3.5590550899505615
    5. 'input' → logprob: -3.6840550899505615
    6. '[' → logprob: -4.184055328369141
    7. '[]' → logprob: -4.434055328369141
    8. ' list' → logprob: -4.684055328369141
    9. '[list' → logprob: -5.059055328369141
    10. ' ['' → logprob: -6.184055328369141

Token 35: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001409878022968769
    2. '()]' → logprob: -6.751410007476807
    3. '().' → logprob: -8.501409530639648
    4. '())' → logprob: -10.751409530639648
    5. ' ()' → logprob: -11.626409530639648
    6. '（）' → logprob: -13.376409530639648
    7. '()+' → logprob: -14.001409530639648
    8. '()>' → logprob: -14.126409530639648
    9. '(' → logprob: -14.751409530639648
    10. '()`' → logprob: -14.876409530639648

Token 36: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13672804832458496
    2. 'for' → logprob: -2.261728048324585
    3. '()' → logprob: -3.886728048324585
    4. ')' → logprob: -6.011728286743164
    5. '	for' → logprob: -8.011728286743164
    6. ' ' → logprob: -9.386728286743164
    7. 'rstrip' → logprob: -9.761728286743164
    8. ']' → logprob: -10.136728286743164
    9. '.strip' → logprob: -10.136728286743164
    10. '   ' → logprob: -10.261728286743164

Token 37: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.018256355077028275
    2. '_' → logprob: -4.518256187438965
    3. ' range' → logprob: -5.018256187438965
    4. ' i' → logprob: -7.643256187438965
    5. ' ' → logprob: -9.518256187438965
    6. '_range' → logprob: -12.143256187438965
    7. ' in' → logprob: -13.018256187438965
    8. 'range' → logprob: -13.143256187438965
    9. ' ' → logprob: -13.393256187438965
    10. ' I' → logprob: -14.268256187438965

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025353385135531425
    2. 'in' → logprob: -3.77535343170166
    3. 'range' → logprob: -6.27535343170166
    4. ' range' → logprob: -8.65035343170166
    5. ' ' → logprob: -10.02535343170166
    6. '  ' → logprob: -13.15035343170166
    7. '   ' → logprob: -14.65035343170166
    8. ')' → logprob: -14.90035343170166
    9. '(range' → logprob: -15.65035343170166
    10. 'i' → logprob: -15.65035343170166

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048528365790844
    2. ' range' → logprob: -4.511048316955566
    3. '(range' → logprob: -15.261048316955566
    4. ' ' → logprob: -15.761048316955566
    5. '	range' → logprob: -15.886048316955566
    6. '   ' → logprob: -16.386049270629883
    7. '  ' → logprob: -17.011049270629883
    8. '[' → logprob: -17.136049270629883
    9. ')' → logprob: -17.386049270629883
    10. 'rang' → logprob: -17.886049270629883

Token 40: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0008159428252838552
    2. '(' → logprob: -7.1258158683776855
    3. ' (' → logprob: -12.000816345214844
    4. 'H' → logprob: -12.875816345214844
    5. '(W' → logprob: -13.125816345214844
    6. ' H' → logprob: -14.625816345214844
    7. '(
' → logprob: -15.875816345214844
    8. '   ' → logprob: -17.000816345214844
    9. '(int' → logprob: -17.000816345214844
    10. '	H' → logprob: -17.000816345214844

Token 41: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00026991849881596863
    2. ')' → logprob: -8.750269889831543
    3. ']' → logprob: -9.125269889831543
    4. ' )' → logprob: -14.250269889831543
    5. ')]
' → logprob: -14.750269889831543
    6. '   ' → logprob: -15.250269889831543
    7. '')]' → logprob: -15.500269889831543
    8. ')],' → logprob: -15.875269889831543
    9. '])]' → logprob: -16.25027084350586
    10. ' ]' → logprob: -16.37527084350586

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16413961350917816
    2. '    
' → logprob: -3.28913950920105
    3. 'for' → logprob: -3.53913950920105
    4. ' for' → logprob: -3.78913950920105
    5. '
' → logprob: -3.78913950920105
    6. '\n' → logprob: -4.164139747619629
    7. 'print' → logprob: -5.039139747619629
    8. '#' → logprob: -5.164139747619629
    9. '  
' → logprob: -6.289139747619629
    10. '\' → logprob: -6.664139747619629

Token 43: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3767350912094116
    2. 'for' → logprob: -1.3767350912094116
    3. 'result' → logprob: -1.8767350912094116
    4. 'print' → logprob: -2.501735210418701
    5. 's' → logprob: -2.876735210418701
    6. 'r' → logprob: -3.501735210418701
    7. '*' → logprob: -4.001735210418701
    8. '#' → logprob: -4.001735210418701
    9. 'room' → logprob: -4.251735210418701
    10. ' for' → logprob: -4.376735210418701

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09670427441596985
    2. ' =' → logprob: -2.5967042446136475
    3. '=' → logprob: -4.221704483032227
    4. ',y' → logprob: -6.471704483032227
    5. ' ,' → logprob: -7.096704483032227
    6. 's' → logprob: -8.221704483032227
    7. '_pos' → logprob: -9.721704483032227
    8. '_' → logprob: -10.221704483032227
    9. 'pos' → logprob: -10.596704483032227
    10. 'y' → logprob: -10.846704483032227

Token 45: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20143477618694305
    2. 'y' → logprob: -1.7014347314834595
    3. '	y' → logprob: -11.451435089111328
    4. ' ' → logprob: -12.201435089111328
    5. '_y' → logprob: -13.201435089111328
    6. '    ' → logprob: -13.451435089111328
    7. '   ' → logprob: -14.576435089111328
    8. 'space' → logprob: -14.826435089111328
    9. '_' → logprob: -14.951435089111328
    10. '  ' → logprob: -14.951435089111328

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028441838920116425
    2. '=' → logprob: -3.653441905975342
    3. ',' → logprob: -6.153441905975342
    4. ')' → logprob: -12.278441429138184
    5. ' ,' → logprob: -13.153441429138184
    6. ' ' → logprob: -13.153441429138184
    7. '<|end|>' → logprob: -13.403441429138184
    8. '    ' → logprob: -14.778441429138184
    9. '<|end|>' → logprob: -14.778441429138184
    10. '   ' → logprob: -15.028441429138184

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009772143326699734
    2. '[' → logprob: -5.134772300720215
    3. '-' → logprob: -6.759772300720215
    4. 'next' → logprob: -6.759772300720215
    5. ' ' → logprob: -7.009772300720215
    6. 'room' → logprob: -8.259772300720215
    7. ' next' → logprob: -9.384772300720215
    8. '(' → logprob: -9.634772300720215
    9. '[next' → logprob: -10.134772300720215
    10. ' -' → logprob: -10.259772300720215

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003677632659673691
    2. '[' → logprob: -7.003677845001221
    3. 'room' → logprob: -7.128677845001221
    4. 'next' → logprob: -7.128677845001221
    5. '-' → logprob: -7.503677845001221
    6. ' ' → logprob: -8.128677368164062
    7. 'range' → logprob: -9.003677368164062
    8. '(' → logprob: -10.503677368164062
    9. ' next' → logprob: -10.628677368164062
    10. '[
' → logprob: -10.753677368164062

Token 49: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804493322968483
    2. ' ' → logprob: -3.2880449295043945
    3. ' -' → logprob: -14.288044929504395
    4. '  ' → logprob: -14.288044929504395
    5. '   ' → logprob: -14.413044929504395
    6. '1' → logprob: -14.413044929504395
    7. '<|end|>' → logprob: -14.850544929504395
    8. '-' → logprob: -15.038044929504395
    9. '    ' → logprob: -16.10054588317871
    10. 'W' → logprob: -16.72554588317871

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014072739577386528
    2. ' ' → logprob: -8.875141143798828
    3. '1' → logprob: -15.000141143798828
    4. '-' → logprob: -15.937641143798828
    5. '   ' → logprob: -16.437641143798828
    6. '<|end|>' → logprob: -16.437641143798828
    7. ' -' → logprob: -16.687641143798828
    8. '  ' → logprob: -16.812641143798828
    9. '    ' → logprob: -17.250141143798828
    10. '۰' → logprob: -17.500141143798828

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5527495741844177
    2. '<|end|>' → logprob: -1.1777496337890625
    3. ':' → logprob: -2.9277496337890625
    4. '   ' → logprob: -3.9277496337890625
    5. '\n' → logprob: -4.4277496337890625
    6. '<|end|>' → logprob: -4.6777496337890625
    7. ' 
' → logprob: -5.1777496337890625
    8. '  
' → logprob: -5.5527496337890625
    9. '    
' → logprob: -5.6777496337890625
    10. ':
' → logprob: -6.5527496337890625

Token 53: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07833582907915115
    2. ':' → logprob: -3.578335762023926
    3. '   ' → logprob: -3.828335762023926
    4. ':
' → logprob: -4.953335762023926
    5. '    
' → logprob: -5.328335762023926
    6. '  
' → logprob: -5.453335762023926
    7. '<|end|>' → logprob: -5.578335762023926
    8. ' 
' → logprob: -6.203335762023926
    9. '\n' → logprob: -6.453335762023926
    10. '```' → logprob: -8.203335762023926

Token 54: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5519366264343262
    2. '<|end|>' → logprob: -1.8019366264343262
    3. 'while' → logprob: -2.801936626434326
    4. ' while' → logprob: -3.176936626434326
    5. ' for' → logprob: -3.551936626434326
    6. '
' → logprob: -3.801936626434326
    7. 'for' → logprob: -3.801936626434326
    8. '\n' → logprob: -4.676936626434326
    9. ' ' → logprob: -4.676936626434326
    10. 'x' → logprob: -4.926936626434326

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014224499464035034
    2. '=' → logprob: -4.264224529266357
    3. '[' → logprob: -10.1392240524292
    4. ' ' → logprob: -11.5142240524292
    5. ',' → logprob: -12.6392240524292
    6. ')' → logprob: -12.6392240524292
    7. '<|end|>' → logprob: -13.2642240524292
    8. ']' → logprob: -14.3892240524292
    9. '=set' → logprob: -14.6392240524292
    10. ' =[' → logprob: -14.7642240524292

Token 56: ' set' (ID: 920)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.45441675186157227
    2. ' set' → logprob: -1.3294167518615723
    3. 'set' → logprob: -2.8294167518615723
    4. ' [' → logprob: -4.204416751861572
    5. '[[' → logprob: -4.329416751861572
    6. ' {' → logprob: -4.954416751861572
    7. ' ' → logprob: -5.954416751861572
    8. '[' → logprob: -6.454416751861572
    9. ' []' → logprob: -7.329416751861572
    10. '{' → logprob: -7.454416751861572

Token 57: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03824356943368912
    2. '(' → logprob: -3.288243532180786
    3. '()
' → logprob: -9.913243293762207
    4. ' ()' → logprob: -10.788243293762207
    5. '()\' → logprob: -10.788243293762207
    6. '((' → logprob: -11.163243293762207
    7. '()

' → logprob: -11.413243293762207
    8. '()]' → logprob: -11.413243293762207
    9. '([(' → logprob: -11.413243293762207
    10. '({' → logprob: -11.788243293762207

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21614302694797516
    2. '<|end|>' → logprob: -2.7161431312561035
    3. '
' → logprob: -2.9661431312561035
    4. ' while' → logprob: -3.8411431312561035
    5. 'while' → logprob: -3.8411431312561035
    6. ':' → logprob: -4.2161431312561035
    7. '    
' → logprob: -4.9661431312561035
    8. '	while' → logprob: -6.4661431312561035
    9. '  
' → logprob: -6.4661431312561035
    10. ' ' → logprob: -6.5911431312561035

Token 59: ' moves' (ID: 19523)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6413816213607788
    2. 'while' → logprob: -1.5163816213607788
    3. '<|end|>' → logprob: -2.2663817405700684
    4. ' while' → logprob: -2.6413817405700684
    5. '
' → logprob: -4.266381740570068
    6. ':' → logprob: -4.516381740570068
    7. '\n' → logprob: -4.641381740570068
    8. ' 
' → logprob: -4.891381740570068
    9. '    
' → logprob: -5.266381740570068
    10. ' ' → logprob: -5.266381740570068

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028128400444984436
    2. '=' → logprob: -5.87781286239624
    3. '<|end|>' → logprob: -12.502812385559082
    4. ' ' → logprob: -13.627812385559082
    5. ')' → logprob: -14.377812385559082
    6. '.' → logprob: -14.627812385559082
    7. ' =
' → logprob: -15.002812385559082
    8. '[' → logprob: -15.502812385559082
    9. ' =)' → logprob: -15.502812385559082
    10. '<|end|>' → logprob: -15.502812385559082

Token 61: ' {'' (ID: 11881)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3204895555973053
    2. ' [(' → logprob: -1.445489525794983
    3. '[' → logprob: -3.5704896450042725
    4. '['' → logprob: -5.570489406585693
    5. ' [' → logprob: -6.195489406585693
    6. '[]' → logprob: -6.320489406585693
    7. ' ['' → logprob: -7.070489406585693
    8. '["' → logprob: -7.445489406585693
    9. ' [('' → logprob: -7.945489406585693
    10. ' ' → logprob: -8.070489883422852

Token 62: '>' (ID: 29)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.8166861534118652
    2. 'R' → logprob: -1.4416861534118652
    3. 'D' → logprob: -2.3166861534118652
    4. 'L' → logprob: -2.6916861534118652
    5. 'N' → logprob: -2.8166861534118652
    6. 'E' → logprob: -3.6916861534118652
    7. 'd' → logprob: -4.191686153411865
    8. 'r' → logprob: -4.691686153411865
    9. 'S' → logprob: -4.816686153411865
    10. 'u' → logprob: -5.191686153411865

Token 63: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.20776061713695526
    2. ''' → logprob: -2.7077605724334717
    3. 'R' → logprob: -3.8327605724334717
    4. '(' → logprob: -3.9577605724334717
    5. '':'' → logprob: -4.582760810852051
    6. 'v' → logprob: -4.707760810852051
    7. '>' → logprob: -4.957760810852051
    8. 'D' → logprob: -4.957760810852051
    9. '^' → logprob: -5.332760810852051
    10. '1' → logprob: -5.457760810852051

Token 64: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2270425707101822
    2. ' (' → logprob: -1.602042555809021
    3. '(x' → logprob: -7.1020426750183105
    4. '[' → logprob: -8.102042198181152
    5. '(lambda' → logprob: -8.102042198181152
    6. '(-' → logprob: -9.852042198181152
    7. '   ' → logprob: -10.352042198181152
    8. '[(' → logprob: -10.477042198181152
    9. '(+' → logprob: -11.352042198181152
    10. '(y' → logprob: -11.477042198181152

Token 65: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002414657501503825
    2. ' ' → logprob: -6.377414703369141
    3. '1' → logprob: -7.252414703369141
    4. ',' → logprob: -13.50241470336914
    5. '   ' → logprob: -13.87741470336914
    6. ' ,' → logprob: -14.25241470336914
    7. '    ' → logprob: -15.62741470336914
    8. ')' → logprob: -15.87741470336914
    9. '۰' → logprob: -16.93991470336914
    10. '
' → logprob: -17.00241470336914

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004062434600200504
    2. '0' → logprob: -7.875406265258789
    3. ' ,' → logprob: -10.625406265258789
    4. '),' → logprob: -14.875406265258789
    5. '<|end|>' → logprob: -15.125406265258789
    6. ' ' → logprob: -15.250406265258789
    7. ')' → logprob: -15.500406265258789
    8. '   ' → logprob: -15.750406265258789
    9. '```' → logprob: -16.06290626525879
    10. ',
' → logprob: -16.31290626525879

Token 67: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.632602334022522
    2. ' ' → logprob: -0.757602334022522
    3. '  ' → logprob: -13.63260269165039
    4. '   ' → logprob: -14.25760269165039
    5. ')' → logprob: -15.00760269165039
    6. ' 
' → logprob: -15.13260269165039
    7. '<|end|>' → logprob: -15.75760269165039
    8. '    ' → logprob: -16.07010269165039
    9. ' 

' → logprob: -16.32010269165039
    10. '۰' → logprob: -16.57010269165039

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0076085166074335575
    2. ' ' → logprob: -4.882608413696289
    3. '   ' → logprob: -13.882608413696289
    4. '  ' → logprob: -14.445108413696289
    5. ')' → logprob: -15.195108413696289
    6. '۰' → logprob: -16.38260841369629
    7. ',' → logprob: -16.44510841369629
    8. '<|end|>' → logprob: -16.50760841369629
    9. '    ' → logprob: -16.57010841369629
    10. '),' → logprob: -16.69510841369629

Token 69: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0167541541159153
    2. ')' → logprob: -4.641754150390625
    3. '),
' → logprob: -5.016754150390625
    4. '),

' → logprob: -9.391754150390625
    5. ' ),' → logprob: -9.516754150390625
    6. '   ' → logprob: -9.766754150390625
    7. ')}' → logprob: -10.016754150390625
    8. '),
' → logprob: -10.641754150390625
    9. '),'' → logprob: -10.641754150390625
    10. ',' → logprob: -10.891754150390625

Token 70: ' '<' (ID: 8144)
  Prédit: ''<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''<' → logprob: -0.14682532846927643
    2. ''' → logprob: -2.8968253135681152
    3. ' '<' → logprob: -3.0218253135681152
    4. ''^' → logprob: -3.7718253135681152
    5. '   ' → logprob: -5.271825313568115
    6. ' '^' → logprob: -6.271825313568115
    7. '<' → logprob: -7.271825313568115
    8. ' '' → logprob: -7.396825313568115
    9. ' ' → logprob: -7.521825313568115
    10. 'v' → logprob: -8.521825790405273

Token 71: '':' (ID: 2337)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00793356541544199
    2. ' ,' → logprob: -5.757933616638184
    3. ':' → logprob: -5.882933616638184
    4. '0' → logprob: -7.257933616638184
    5. '),' → logprob: -8.132933616638184
    6. '):' → logprob: -8.382933616638184
    7. ')' → logprob: -8.382933616638184
    8. '',' → logprob: -8.757933616638184
    9. '(' → logprob: -9.132933616638184
    10. ' :' → logprob: -10.132933616638184

Token 72: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.4800165593624115
    2. ' (-' → logprob: -0.9800165891647339
    3. '-' → logprob: -5.730016708374023
    4. '(' → logprob: -6.605016708374023
    5. ' -' → logprob: -7.230016708374023
    6. ' (' → logprob: -8.480016708374023
    7. '0' → logprob: -8.480016708374023
    8. ' ' → logprob: -8.980016708374023
    9. '   ' → logprob: -10.355016708374023
    10. ',' → logprob: -11.855016708374023

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.250005722045898
    3. '0' → logprob: -16.0000057220459
    4. ',' → logprob: -16.0625057220459
    5. '   ' → logprob: -16.0625057220459
    6. '１' → logprob: -16.5625057220459
    7. 'x' → logprob: -17.2500057220459
    8. '```' → logprob: -17.4375057220459
    9. '    ' → logprob: -17.5625057220459
    10. '-' → logprob: -17.5625057220459

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.353008499601856e-05
    2. ' ,' → logprob: -10.000093460083008
    3. '0' → logprob: -10.125093460083008
    4. '<|end|>' → logprob: -12.250093460083008
    5. ' ' → logprob: -14.125093460083008
    6. '),' → logprob: -15.000093460083008
    7. '```' → logprob: -15.062593460083008
    8. '<|end|>' → logprob: -15.062593460083008
    9. '1' → logprob: -15.437593460083008
    10. ')' → logprob: -15.500093460083008

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47407740354537964
    2. ' ' → logprob: -0.9740774035453796
    3. '<|end|>' → logprob: -15.474077224731445
    4. ' ' → logprob: -16.349077224731445
    5. '  ' → logprob: -16.849077224731445
    6. '۰' → logprob: -17.474077224731445
    7. ' 
' → logprob: -17.849077224731445
    8. '   ' → logprob: -18.724077224731445
    9. ')' → logprob: -18.786577224731445
    10. '1' → logprob: -18.974077224731445

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. '  ' → logprob: -17.438825607299805
    4. '۰' → logprob: -17.688825607299805
    5. '   ' → logprob: -18.063825607299805
    6. ' ' → logprob: -18.251325607299805
    7. ')' → logprob: -18.563825607299805
    8. '1' → logprob: -18.688825607299805
    9. '０' → logprob: -19.001325607299805
    10. '```' → logprob: -19.188825607299805

Token 77: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.015659963712096214
    2. ')' → logprob: -4.265659809112549
    3. ')}' → logprob: -7.140659809112549
    4. '),
' → logprob: -7.515659809112549
    5. '   ' → logprob: -9.765660285949707
    6. ' ),' → logprob: -10.265660285949707
    7. '},' → logprob: -11.265660285949707
    8. ',' → logprob: -11.265660285949707
    9. '),

' → logprob: -11.515660285949707
    10. '}' → logprob: -12.015660285949707

Token 78: ' '^' (ID: 117788)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''^' → logprob: -0.015252185054123402
    2. ' '^' → logprob: -4.515252113342285
    3. '^' → logprob: -5.640252113342285
    4. ''' → logprob: -8.140252113342285
    5. ' ' → logprob: -8.890252113342285
    6. ' ^' → logprob: -9.640252113342285
    7. '   ' → logprob: -10.015252113342285
    8. 'v' → logprob: -10.390252113342285
    9. ''\' → logprob: -10.765252113342285
    10. ' '' → logprob: -11.890252113342285

Token 79: '':' (ID: 2337)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06764039397239685
    2. ':' → logprob: -2.9426403045654297
    3. '(' → logprob: -4.81764030456543
    4. ' ,' → logprob: -5.56764030456543
    5. ' :' → logprob: -8.56764030456543
    6. ' (' → logprob: -9.06764030456543
    7. '',' → logprob: -9.19264030456543
    8. '(-' → logprob: -9.19264030456543
    9. ',(' → logprob: -10.06764030456543
    10. ':(' → logprob: -10.19264030456543

Token 80: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06349000334739685
    2. ' (' → logprob: -2.8134899139404297
    3. '0' → logprob: -6.56348991394043
    4. ' ' → logprob: -9.43848991394043
    5. ',' → logprob: -10.68848991394043
    6. ')' → logprob: -12.68848991394043
    7. '   ' → logprob: -13.68848991394043
    8. '-' → logprob: -13.81348991394043
    9. '(-' → logprob: -14.06348991394043
    10. ' ,' → logprob: -14.81348991394043

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016477111726999283
    2. '-' → logprob: -4.141477108001709
    3. ' ' → logprob: -8.016477584838867
    4. '(' → logprob: -9.266477584838867
    5. ' -' → logprob: -11.891477584838867
    6. ',' → logprob: -12.766477584838867
    7. ')' → logprob: -13.016477584838867
    8. '1' → logprob: -13.266477584838867
    9. '   ' → logprob: -13.391477584838867
    10. '```' → logprob: -13.516477584838867

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0053129736334085464
    2. ',-' → logprob: -5.755312919616699
    3. '-' → logprob: -6.255312919616699
    4. ' -' → logprob: -9.2553129196167
    5. '   ' → logprob: -9.6303129196167
    6. ' ,' → logprob: -10.2553129196167
    7. '<|end|>' → logprob: -11.6303129196167
    8. '-,' → logprob: -13.2553129196167
    9. ' ,-' → logprob: -13.8803129196167
    10. ')' → logprob: -14.0053129196167

Token 83: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002627662615850568
    2. ' -' → logprob: -8.250263214111328
    3. '1' → logprob: -13.625263214111328
    4. '   ' → logprob: -15.750263214111328
    5. ' ' → logprob: -16.625263214111328
    6. '  ' → logprob: -18.375263214111328
    7. '<|end|>' → logprob: -18.750263214111328
    8. '```' → logprob: -18.875263214111328
    9. ')' → logprob: -19.750263214111328
    10. '	' → logprob: -20.250263214111328

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. ')' → logprob: -14.875009536743164
    4. '  ' → logprob: -17.062509536743164
    5. '   ' → logprob: -17.250009536743164
    6. '<|end|>' → logprob: -17.500009536743164
    7. '```' → logprob: -17.625009536743164
    8. '    ' → logprob: -18.312509536743164
    9. '１' → logprob: -18.500009536743164
    10. ')>' → logprob: -18.687509536743164

Token 85: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.31512337923049927
    2. ')' → logprob: -1.3151233196258545
    3. ')}' → logprob: -6.565123558044434
    4. '),
' → logprob: -8.065123558044434
    5. ',' → logprob: -10.565123558044434
    6. '   ' → logprob: -10.690123558044434
    7. ' ),' → logprob: -10.815123558044434
    8. '}' → logprob: -11.065123558044434
    9. '},' → logprob: -11.690123558044434
    10. ')}}' → logprob: -11.690123558044434

Token 86: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22045892477035522
    2. 'v' → logprob: -2.220458984375
    3. ' '' → logprob: -2.470458984375
    4. ''d' → logprob: -6.595458984375
    5. '   ' → logprob: -7.345458984375
    6. '```' → logprob: -7.595458984375
    7. ''s' → logprob: -7.845458984375
    8. ' v' → logprob: -8.220458984375
    9. '1' → logprob: -8.470458984375
    10. ' ' → logprob: -8.595458984375

Token 87: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.034592388459714e-06
    2. ' v' → logprob: -12.375005722045898
    3. ''' → logprob: -13.375005722045898
    4. 'V' → logprob: -16.6250057220459
    5. '1' → logprob: -17.5000057220459
    6. '_v' → logprob: -17.8750057220459
    7. '	v' → logprob: -18.0000057220459
    8. 'vv' → logprob: -18.2500057220459
    9. '>' → logprob: -19.2500057220459
    10. ''>' → logprob: -19.2500057220459

Token 88: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7981696128845215
    2. '(' → logprob: -0.9231696128845215
    3. ',' → logprob: -2.5481696128845215
    4. '':' → logprob: -3.4231696128845215
    5. ' (' → logprob: -3.9231696128845215
    6. '',' → logprob: -5.0481696128845215
    7. '<|end|>' → logprob: -5.4231696128845215
    8. ')' → logprob: -5.6731696128845215
    9. '):' → logprob: -5.7981696128845215
    10. '">(' → logprob: -7.5481696128845215

Token 89: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5232224464416504
    2. ' (' → logprob: -0.8982224464416504
    3. '1' → logprob: -9.523221969604492
    4. ' ' → logprob: -11.398221969604492
    5. '<|end|>' → logprob: -11.523221969604492
    6. ')' → logprob: -13.148221969604492
    7. '0' → logprob: -13.773221969604492
    8. ',' → logprob: -14.273221969604492
    9. '   ' → logprob: -15.023221969604492
    10. '(s' → logprob: -15.523221969604492

Token 90: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.85104202805087e-05
    2. ' ' → logprob: -9.500078201293945
    3. ')' → logprob: -13.000078201293945
    4. '   ' → logprob: -14.875078201293945
    5. '+' → logprob: -15.125078201293945
    6. '0' → logprob: -15.375078201293945
    7. '```' → logprob: -15.750078201293945
    8. '  ' → logprob: -16.000078201293945
    9. ',' → logprob: -16.562578201293945
    10. '),' → logprob: -17.562578201293945

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07908090949058533
    2. '1' → logprob: -2.579080820083618
    3. ' ,' → logprob: -8.704080581665039
    4. ' ' → logprob: -11.079080581665039
    5. ')' → logprob: -12.454080581665039
    6. '<|end|>' → logprob: -12.829080581665039
    7. ',
' → logprob: -13.454080581665039
    8. '```' → logprob: -14.454080581665039
    9. '   ' → logprob: -15.204080581665039
    10. '+' → logprob: -15.329080581665039

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. '<|end|>' → logprob: -15.62780475616455
    4. ')' → logprob: -17.252805709838867
    5. '+' → logprob: -17.752805709838867
    6. '```' → logprob: -18.127805709838867
    7. ' ' → logprob: -18.752805709838867
    8. '  ' → logprob: -19.752805709838867
    9. '１' → logprob: -20.190305709838867
    10. '   ' → logprob: -20.252805709838867

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.967624019831419e-05
    2. ' ' → logprob: -9.750060081481934
    3. ')' → logprob: -15.000060081481934
    4. '<|end|>' → logprob: -15.250060081481934
    5. '   ' → logprob: -15.375060081481934
    6. '+' → logprob: -15.750060081481934
    7. '  ' → logprob: -16.812559127807617
    8. '-' → logprob: -17.187559127807617
    9. '```' → logprob: -17.500059127807617
    10. '>' → logprob: -17.500059127807617

Token 94: ')}
' (ID: 19324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44843778014183044
    2. ')}' → logprob: -1.1984378099441528
    3. '}' → logprob: -2.8234376907348633
    4. '})' → logprob: -8.573437690734863
    5. '),' → logprob: -9.948437690734863
    6. ' )' → logprob: -11.198437690734863
    7. '   ' → logprob: -11.198437690734863
    8. ' }' → logprob: -11.323437690734863
    9. '))' → logprob: -11.573437690734863
    10. ')}
' → logprob: -12.698437690734863

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1371624767780304
    2. '
' → logprob: -2.762162446975708
    3. 'while' → logprob: -3.512162446975708
    4. ' while' → logprob: -3.762162446975708
    5. '    
' → logprob: -4.887162685394287
    6. '  
' → logprob: -7.387162685394287
    7. '<|end|>' → logprob: -7.512162685394287
    8. 'token' → logprob: -7.762162685394287
    9. '```' → logprob: -7.762162685394287
    10. '	while' → logprob: -8.012162208557129

Token 96: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.39031001925468445
    2. '   ' → logprob: -1.2653100490570068
    3. ' while' → logprob: -3.265310049057007
    4. 'direction' → logprob: -6.890309810638428
    5. '    
' → logprob: -8.015310287475586
    6. '  ' → logprob: -8.515310287475586
    7. 'd' → logprob: -8.515310287475586
    8. 'current' → logprob: -9.015310287475586
    9. '```' → logprob: -9.015310287475586
    10. ' ' → logprob: -9.015310287475586

Token 97: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7058074474334717
    2. ' True' → logprob: -0.8308074474334717
    3. 'x' → logprob: -4.205807685852051
    4. ' (' → logprob: -4.205807685852051
    5. '(x' → logprob: -4.455807685852051
    6. ' x' → logprob: -4.705807685852051
    7. '(True' → logprob: -4.830807685852051
    8. ' y' → logprob: -5.705807685852051
    9. 'y' → logprob: -5.830807685852051
    10. 'room' → logprob: -6.455807685852051

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028107017278671265
    2. '       ' → logprob: -6.752810478210449
    3. '<|end|>' → logprob: -6.752810478210449
    4. ',' → logprob: -8.62781047821045
    5. ':
' → logprob: -8.75281047821045
    6. '):' → logprob: -10.25281047821045
    7. '   ' → logprob: -10.25281047821045
    8. '<|end|>' → logprob: -10.87781047821045
    9. '.' → logprob: -11.12781047821045
    10. ' :' → logprob: -11.37781047821045

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014359770342707634
    2. '   ' → logprob: -5.014359951019287
    3. '<|end|>' → logprob: -5.014359951019287
    4. '    ' → logprob: -8.139359474182129
    5. '    
' → logprob: -8.889359474182129
    6. ' ' → logprob: -9.389359474182129
    7. '        
' → logprob: -9.639359474182129
    8. '<|end|>' → logprob: -9.764359474182129
    9. '  ' → logprob: -10.014359474182129
    10. 'n' → logprob: -10.264359474182129

Token 100: ' if' (ID: 538)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.14659206569194794
    2. 'if' (adapté à ' if') → logprob: -3.021592140197754
    3. 'direction' → logprob: -4.021592140197754
    4. '   ' → logprob: -4.271592140197754
    5. 'd' → logprob: -4.521592140197754
    6. 'current' → logprob: -4.896592140197754
    7. ' dx' → logprob: -4.896592140197754
    8. 'dir' → logprob: -5.021592140197754
    9. 'c' → logprob: -5.896592140197754
    10. ' if' → logprob: -6.021592140197754

Token 101: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07253643870353699
    2. ' (' → logprob: -2.8225364685058594
    3. 'x' → logprob: -5.197536468505859
    4. '(' → logprob: -5.572536468505859
    5. ' x' → logprob: -7.322536468505859
    6. '(room' → logprob: -8.82253646850586
    7. '(y' → logprob: -9.07253646850586
    8. ' not' → logprob: -9.57253646850586
    9. '(not' → logprob: -9.94753646850586
    10. 'not' → logprob: -10.44753646850586

Token 102: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009152670972980559
    2. ' x' → logprob: -7.500915050506592
    3. 'y' → logprob: -8.25091552734375
    4. '(x' → logprob: -9.25091552734375
    5. ' y' → logprob: -13.25091552734375
    6. ')' → logprob: -13.75091552734375
    7. ' (' → logprob: -14.00091552734375
    8. ')x' → logprob: -14.12591552734375
    9. '   ' → logprob: -15.00091552734375
    10. '(y' → logprob: -15.87591552734375

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016054781153798103
    2. ',y' → logprob: -4.141054630279541
    3. ',x' → logprob: -11.7660551071167
    4. ' ,' → logprob: -12.7660551071167
    5. '<|end|>' → logprob: -12.8910551071167
    6. 'y' → logprob: -13.7660551071167
    7. ',
' → logprob: -13.7660551071167
    8. '‌,' → logprob: -14.6410551071167
    9. ',w' → logprob: -14.8910551071167
    10. ',user' → logprob: -15.0160551071167

Token 104: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234832875430584
    2. ' y' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.505234718322754
    4. ')y' → logprob: -15.630234718322754
    5. '<|end|>' → logprob: -16.13023567199707
    6. '    ' → logprob: -16.13023567199707
    7. ')' → logprob: -16.25523567199707
    8. ' ' → logprob: -17.13023567199707
    9. '	y' → logprob: -17.38023567199707
    10. '  ' → logprob: -18.25523567199707

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014239625306800008
    2. 'in' → logprob: -9.625142097473145
    3. ' )' → logprob: -10.000142097473145
    4. ' in' → logprob: -10.500142097473145
    5. '   ' → logprob: -14.250142097473145
    6. ',' → logprob: -14.375142097473145
    7. ' ' → logprob: -14.875142097473145
    8. '    ' → logprob: -14.875142097473145
    9. '`)' → logprob: -15.500142097473145
    10. '<|end|>' → logprob: -15.625142097473145

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07018650323152542
    2. 'in' → logprob: -2.6951866149902344
    3. '<|end|>' → logprob: -8.945186614990234
    4. ' not' → logprob: -9.570186614990234
    5. ')' → logprob: -10.320186614990234
    6. ' ' → logprob: -11.570186614990234
    7. 'not' → logprob: -12.820186614990234
    8. '<|end|>' → logprob: -13.070186614990234
    9. '    ' → logprob: -14.195186614990234
    10. '   ' → logprob: -14.320186614990234

Token 107: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.112887904047966
    2. ' visited' → logprob: -2.2378878593444824
    3. '   ' → logprob: -9.73788833618164
    4. 'vis' → logprob: -12.73788833618164
    5. ' ' → logprob: -13.73788833618164
    6. '  ' → logprob: -14.73788833618164
    7. 'Visited' → logprob: -15.11288833618164
    8. '
' → logprob: -15.48788833618164
    9. 'seen' → logprob: -15.48788833618164
    10. '	' → logprob: -15.48788833618164

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09155690670013428
    2. ':
' → logprob: -2.466557025909424
    3. '       ' → logprob: -6.091557025909424
    4. ' or' → logprob: -8.591556549072266
    5. '<|end|>' → logprob: -10.216556549072266
    6. '           ' → logprob: -10.466556549072266
    7. ' and' → logprob: -10.466556549072266
    8. ':return' → logprob: -10.966556549072266
    9. '   ' → logprob: -11.216556549072266
    10. '):' → logprob: -11.341556549072266

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011181884910911322
    2. ':' → logprob: -7.376118183135986
    3. '       ' → logprob: -8.626118659973145
    4. '\n' → logprob: -9.376118659973145
    5. ':
' → logprob: -9.626118659973145
    6. ' break' → logprob: -10.251118659973145
    7. '```' → logprob: -10.751118659973145
    8. '\' → logprob: -10.876118659973145
    9. '               ' → logprob: -11.001118659973145
    10. 'break' → logprob: -11.001118659973145

Token 110: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5464632511138916
    2. '           ' → logprob: -1.2964632511138916
    3. 'print' (adapté à ' print') → logprob: -2.4214632511138916
    4. ' break' → logprob: -3.6714632511138916
    5. ' print' → logprob: -3.9214632511138916
    6. 'break' → logprob: -4.5464630126953125
    7. '   ' → logprob: -6.6714630126953125
    8. '               ' → logprob: -7.1714630126953125
    9. '```' → logprob: -7.4214630126953125
    10. '
' → logprob: -9.171463012695312

Token 111: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.633976399898529
    2. '('' → logprob: -1.0089764595031738
    3. '(' → logprob: -3.008976459503174
    4. '("#' → logprob: -3.633976459503174
    5. '(-' → logprob: -4.258976459503174
    6. '('#' → logprob: -4.883976459503174
    7. '("?' → logprob: -6.383976459503174
    8. '("*' → logprob: -6.758976459503174
    9. '('?' → logprob: -6.758976459503174
    10. '(x' → logprob: -7.508976459503174

Token 112: 'LO' (ID: 2699)
  Prédit: 'LO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LO' → logprob: -1.272305965423584
    2. '"' → logprob: -1.397305965423584
    3. 'Lost' → logprob: -1.522305965423584
    4. 'Loop' → logprob: -2.522305965423584
    5. 'Never' → logprob: -3.522305965423584
    6. 'Bug' → logprob: -3.772305965423584
    7. 'Impossible' → logprob: -4.272305965423584
    8. '0' → logprob: -4.522305965423584
    9. 'loop' → logprob: -4.522305965423584
    10. 'Cannot' → logprob: -4.772305965423584

Token 113: 'OP' (ID: 4164)
  Prédit: 'OP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OP' → logprob: -0.0007480407948605716
    2. 'P' → logprob: -7.875748157501221
    3. 'O' → logprob: -8.500747680664062
    4. 'ST' → logprob: -10.125747680664062
    5. 'OPS' → logprob: -11.125747680664062
    6. 'SE' → logprob: -11.375747680664062
    7. 'op' → logprob: -11.563247680664062
    8. '
' → logprob: -12.000747680664062
    9. 'OT' → logprob: -12.250747680664062
    10. '[' → logprob: -12.313247680664062

Token 114: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3547990918159485
    2. '")
' → logprob: -1.2297990322113037
    3. ')' → logprob: -5.354799270629883
    4. '")
' → logprob: -6.979799270629883
    5. ')
' → logprob: -7.479799270629883
    6. ')")' → logprob: -10.729799270629883
    7. ')")
' → logprob: -10.729799270629883
    8. ' detected' → logprob: -11.229799270629883
    9. 'S' → logprob: -11.729799270629883
    10. '')' → logprob: -11.854799270629883

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.143808109802194e-05
    2. '       ' → logprob: -10.750041007995605
    3. '
' → logprob: -12.000041007995605
    4. '               ' → logprob: -12.125041007995605
    5. '            
' → logprob: -12.750041007995605
    6. '<|end|>' → logprob: -13.250041007995605
    7. '		' → logprob: -14.375041007995605
    8. ')' → logprob: -14.500041007995605
    9. '   ' → logprob: -14.750041007995605
    10. ',' → logprob: -14.750041007995605

Token 116: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008395231561735272
    2. '       ' → logprob: -7.500839710235596
    3. 'break' (adapté à ' break') → logprob: -8.250839233398438
    4. ' break' → logprob: -11.375839233398438
    5. '               ' → logprob: -12.375839233398438
    6. '   ' → logprob: -13.000839233398438
    7. '            
' → logprob: -13.250839233398438
    8. '
' → logprob: -13.250839233398438
    9. '		' → logprob: -13.875839233398438
    10. '	break' → logprob: -14.000839233398438

Token 117: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017226938158273697
    2. '
' → logprob: -4.2672271728515625
    3. '        
' → logprob: -6.7672271728515625
    4. '<|end|>' → logprob: -6.7672271728515625
    5. '   ' → logprob: -8.642227172851562
    6. '\n' → logprob: -9.267227172851562
    7. 'newline' → logprob: -9.267227172851562
    8. '    
' → logprob: -9.392227172851562
    9. '  
' → logprob: -9.767227172851562
    10. ' 
' → logprob: -10.017227172851562

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002316549187526107
    2. '
' → logprob: -6.502316474914551
    3. '        
' → logprob: -7.502316474914551
    4. '   ' → logprob: -9.37731647491455
    5. '<|end|>' → logprob: -9.50231647491455
    6. '    
' → logprob: -10.62731647491455
    7. '```' → logprob: -11.37731647491455
    8. '  
' → logprob: -11.37731647491455
    9. '\n' → logprob: -12.12731647491455
    10. 'newline' → logprob: -12.12731647491455

Token 119: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20987540483474731
    2. 'visited' (adapté à ' visited') → logprob: -2.0848753452301025
    3. ' visited' → logprob: -3.0848753452301025
    4. '   ' → logprob: -3.9598753452301025
    5. '
' → logprob: -9.834875106811523
    6. '        
' → logprob: -10.584875106811523
    7. '	   ' → logprob: -10.834875106811523
    8. '	' → logprob: -10.959875106811523
    9. '<|end|>' → logprob: -10.959875106811523
    10. '           ' → logprob: -11.709875106811523

Token 120: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.003184959525242448
    2. '.' → logprob: -5.753184795379639
    3. '.update' → logprob: -12.878185272216797
    4. '.append' → logprob: -13.378185272216797
    5. '.setdefault' → logprob: -13.878185272216797
    6. ').' → logprob: -14.253185272216797
    7. '.insert' → logprob: -15.003185272216797
    8. '.remove' → logprob: -15.503185272216797
    9. '<|end|>' → logprob: -15.503185272216797
    10. '.Add' → logprob: -15.753185272216797

Token 121: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.003193516517058015
    2. '(' → logprob: -5.753193378448486
    3. '(x' → logprob: -11.503193855285645
    4. ' ((' → logprob: -12.878193855285645
    5. ' (' → logprob: -13.503193855285645
    6. ' ' → logprob: -13.503193855285645
    7. '(
' → logprob: -15.378193855285645
    8. '  ' → logprob: -17.628192901611328
    9. '(((' → logprob: -17.753192901611328
    10. '   ' → logprob: -17.878192901611328

Token 122: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.176947600673884e-05
    2. ' x' → logprob: -10.750021934509277
    3. ')x' → logprob: -15.500021934509277
    4. '   ' → logprob: -16.75002098083496
    5. '(x' → logprob: -16.75002098083496
    6. ' ' → logprob: -18.00002098083496
    7. ')' → logprob: -18.00002098083496
    8. '
' → logprob: -18.50002098083496
    9. '```' → logprob: -18.87502098083496
    10. '	x' → logprob: -19.12502098083496

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5941604690160602e-05
    2. ' ,' → logprob: -11.250025749206543
    3. ',y' → logprob: -11.500025749206543
    4. '```' → logprob: -13.625025749206543
    5. '<|end|>' → logprob: -14.375025749206543
    6. ',
' → logprob: -15.250025749206543
    7. ')' → logprob: -15.875025749206543
    8. '),' → logprob: -16.00002670288086
    9. 'y' → logprob: -16.37502670288086
    10. '
' → logprob: -16.37502670288086

Token 124: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47425806522369385
    2. ' y' → logprob: -0.9742580652236938
    3. 'x' → logprob: -9.349258422851562
    4. ' ' → logprob: -9.724258422851562
    5. ' x' → logprob: -10.974258422851562
    6. ')' → logprob: -11.599258422851562
    7. '
' → logprob: -13.099258422851562
    8. ',' → logprob: -13.474258422851562
    9. '0' → logprob: -13.724258422851562
    10. ')y' → logprob: -13.974258422851562

Token 125: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20446765422821045
    2. '))
' → logprob: -1.7044676542282104
    3. ')' → logprob: -5.9544677734375
    4. ')
' → logprob: -7.8294677734375
    5. '))

' → logprob: -10.2044677734375
    6. '))
' → logprob: -11.9544677734375
    7. '       ' → logprob: -12.4544677734375
    8. ' ))' → logprob: -12.8294677734375
    9. ' ))
' → logprob: -12.9544677734375
    10. '   ' → logprob: -13.2044677734375

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4274350702762604
    2. '
' → logprob: -2.1774351596832275
    3. 'dx' → logprob: -2.4274351596832275
    4. ' dx' → logprob: -2.5524351596832275
    5. ' direction' → logprob: -3.8024351596832275
    6. 'direction' → logprob: -4.177434921264648
    7. '        
' → logprob: -4.552434921264648
    8. '```' → logprob: -5.427434921264648
    9. ',' → logprob: -5.552434921264648
    10. '   ' → logprob: -6.427434921264648

Token 127: ' tile' (ID: 17664)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.36109623312950134
    2. 'if' → logprob: -1.6110962629318237
    3. '       ' → logprob: -2.361096143722534
    4. ' dx' → logprob: -6.236096382141113
    5. ' if' → logprob: -6.361096382141113
    6. 'direction' → logprob: -6.486096382141113
    7. 'c' → logprob: -7.361096382141113
    8. 'dir' → logprob: -7.486096382141113
    9. 'dy' → logprob: -7.611096382141113
    10. '           ' → logprob: -7.861096382141113

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020543284714221954
    2. '=' → logprob: -3.895543336868286
    3. ' ' → logprob: -14.895543098449707
    4. '   ' → logprob: -15.270543098449707
    5. '=line' → logprob: -15.645543098449707
    6. '_char' → logprob: -15.770543098449707
    7. ')' → logprob: -16.145544052124023
    8. ',' → logprob: -16.145544052124023
    9. '_' → logprob: -16.645544052124023
    10. 'symbol' → logprob: -16.770544052124023

Token 129: ' room' (ID: 3435)
  Prédit: ' room'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' room' → logprob: -0.2519426941871643
    2. 'room' → logprob: -1.5019426345825195
    3. '	room' → logprob: -11.75194263458252
    4. '(room' → logprob: -12.50194263458252
    5. '   ' → logprob: -13.75194263458252
    6. ' ' → logprob: -14.62694263458252
    7. ' ' → logprob: -16.126943588256836
    8. '.room' → logprob: -16.251943588256836
    9. '_room' → logprob: -16.751943588256836
    10. '-room' → logprob: -17.314443588256836

Token 130: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.875000953674316
    3. 'y' → logprob: -16.625
    4. ' [' → logprob: -16.875
    5. '```' → logprob: -17.0
    6. '[x' → logprob: -17.25
    7. '   ' → logprob: -18.625
    8. '[j' → logprob: -19.5
    9. '[t' → logprob: -20.375
    10. '[user' → logprob: -20.5

Token 131: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01610170677304268
    2. '[x' → logprob: -4.141101837158203
    3. ']' → logprob: -10.516101837158203
    4. '[' → logprob: -11.016101837158203
    5. ' ][' → logprob: -11.016101837158203
    6. '[y' → logprob: -12.766101837158203
    7. 'x' → logprob: -13.641101837158203
    8. ')[' → logprob: -14.266101837158203
    9. '"][' → logprob: -14.391101837158203
    10. ' [' → logprob: -14.891101837158203

Token 132: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6240566083070007e-06
    2. ' x' → logprob: -13.375001907348633
    3. '	x' → logprob: -20.125001907348633
    4. '"x' → logprob: -20.500001907348633
    5. ')x' → logprob: -20.750001907348633
    6. '%x' → logprob: -22.250001907348633
    7. ''x' → logprob: -22.375001907348633
    8. '>x' → logprob: -22.750001907348633
    9. '<x' → logprob: -23.500001907348633
    10. ' ' → logprob: -23.750001907348633

Token 133: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0457175113260746
    2. '])' → logprob: -3.670717477798462
    3. ')' → logprob: -4.420717716217041
    4. ')]' → logprob: -5.295717716217041
    5. ']
' → logprob: -6.170717716217041
    6. ')
' → logprob: -10.045717239379883
    7. '])
' → logprob: -10.545717239379883
    8. ')])' → logprob: -11.295717239379883
    9. ' ]' → logprob: -12.295717239379883
    10. '])]' → logprob: -12.420717239379883

Token 134: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34783223271369934
    2. '
' → logprob: -1.847832202911377
    3. '       ' → logprob: -2.847832202911377
    4. '<|end|>' → logprob: -3.597832202911377
    5. 'if' → logprob: -3.847832202911377
    6. ')' → logprob: -4.972832202911377
    7. '        
' → logprob: -5.347832202911377
    8. '\n' → logprob: -5.847832202911377
    9. ',' → logprob: -5.972832202911377
    10. '   ' → logprob: -6.097832202911377

Token 135: ' if' (ID: 538)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.8268094658851624
    2. 'if' (adapté à ' if') → logprob: -0.9518094658851624
    3. ' if' → logprob: -1.9518094062805176
    4. ' dx' → logprob: -3.4518094062805176
    5. '       ' → logprob: -6.201809406280518
    6. '        
' → logprob: -8.201809883117676
    7. '   ' → logprob: -9.076809883117676
    8. '```' → logprob: -9.076809883117676
    9. 'mx' → logprob: -9.701809883117676
    10. '    ' → logprob: -10.201809883117676

Token 136: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.10029756277799606
    2. 'tile' → logprob: -2.350297451019287
    3. '(tile' → logprob: -10.100297927856445
    4. ' ' → logprob: -10.850297927856445
    5. ' not' → logprob: -11.225297927856445
    6. '   ' → logprob: -13.162797927856445
    7. 't' → logprob: -13.350297927856445
    8. ' y' → logprob: -13.475297927856445
    9. 'x' → logprob: -13.537797927856445
    10. ' x' → logprob: -13.600297927856445

Token 137: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18352897465229034
    2. '==' → logprob: -1.808529019355774
    3. ' not' → logprob: -5.683528900146484
    4. 'not' → logprob: -8.683528900146484
    5. '=='' → logprob: -9.308528900146484
    6. ' in' → logprob: -9.683528900146484
    7. '=="' → logprob: -11.058528900146484
    8. ' ' → logprob: -11.683528900146484
    9. 'is' → logprob: -12.308528900146484
    10. ']==' → logprob: -12.433528900146484

Token 138: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.1905474066734314
    2. ''#' → logprob: -2.315547466278076
    3. ''*' → logprob: -3.440547466278076
    4. ''' → logprob: -3.815547466278076
    5. ''S' → logprob: -4.940547466278076
    6. ''E' → logprob: -5.690547466278076
    7. ''H' → logprob: -6.190547466278076
    8. ''I' → logprob: -6.690547466278076
    9. ''x' → logprob: -6.815547466278076
    10. ''T' → logprob: -6.815547466278076

Token 139: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7334287762641907
    2. '<|end|>' → logprob: -1.608428716659546
    3. ':
' → logprob: -2.483428716659546
    4. '       ' → logprob: -2.858428716659546
    5. ' or' → logprob: -2.858428716659546
    6. 'print' → logprob: -3.358428716659546
    7. '           ' → logprob: -4.233428955078125
    8. '   ' → logprob: -4.483428955078125
    9. ' break' → logprob: -4.733428955078125
    10. ' ' → logprob: -5.108428955078125

Token 140: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04235483333468437
    2. '           ' → logprob: -3.4173548221588135
    3. '       ' → logprob: -4.917355060577393
    4. ' print' → logprob: -6.792355060577393
    5. 'break' → logprob: -9.292354583740234
    6. '   ' → logprob: -9.417354583740234
    7. 'Print' → logprob: -11.667354583740234
    8. '            
' → logprob: -11.792354583740234
    9. '```' → logprob: -11.792354583740234
    10. ' ' → logprob: -11.917354583740234

Token 141: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.4192871175473556e-05
    2. ' print' → logprob: -10.250054359436035
    3. '       ' → logprob: -11.750054359436035
    4. 'break' → logprob: -12.000054359436035
    5. '           ' → logprob: -12.375054359436035
    6. 'x' → logprob: -16.12505340576172
    7. '   ' → logprob: -16.25005340576172
    8. 'for' → logprob: -16.87505340576172
    9. 'if' → logprob: -17.12505340576172
    10. '        
' → logprob: -17.50005340576172

Token 142: '(x' (ID: 4061)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6394007205963135
    2. '(x' → logprob: -1.1394007205963135
    3. '(len' → logprob: -2.3894007205963135
    4. '((' → logprob: -3.6394007205963135
    5. '(f' → logprob: -4.014400482177734
    6. '(' → logprob: -4.514400482177734
    7. '(y' → logprob: -6.389400482177734
    8. '("."' → logprob: -7.014400482177734
    9. '(".' → logprob: -7.264400482177734
    10. '('' → logprob: -7.639400482177734

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10681048035621643
    2. '+' → logprob: -2.9818105697631836
    3. ')' → logprob: -3.1068105697631836
    4. ',y' → logprob: -6.231810569763184
    5. ' +' → logprob: -6.356810569763184
    6. ' ,' → logprob: -6.856810569763184
    7. ',end' → logprob: -7.106810569763184
    8. ' )' → logprob: -8.981810569763184
    9. ',)' → logprob: -10.231810569763184
    10. '+y' → logprob: -11.106810569763184

Token 144: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04858759790658951
    2. ' y' → logprob: -3.0485875606536865
    3. '    ' → logprob: -15.798587799072266
    4. ',' → logprob: -17.423587799072266
    5. '   ' → logprob: -17.423587799072266
    6. '	y' → logprob: -17.423587799072266
    7. ',y' → logprob: -17.548587799072266
    8. '       ' → logprob: -17.923587799072266
    9. ' ' → logprob: -17.923587799072266
    10. ''y' → logprob: -18.673587799072266

Token 145: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0007386347278952599
    2. ')' → logprob: -7.250738620758057
    3. '           ' → logprob: -10.750739097595215
    4. ',' → logprob: -12.500739097595215
    5. ')
' → logprob: -13.500739097595215
    6. ' )
' → logprob: -14.625739097595215
    7. '       ' → logprob: -14.750739097595215
    8. '               ' → logprob: -14.750739097595215
    9. ')

' → logprob: -14.875739097595215
    10. ')`
' → logprob: -15.125739097595215

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.256334695033729e-05
    2. '       ' → logprob: -10.000082969665527
    3. '
' → logprob: -11.250082969665527
    4. '            
' → logprob: -12.000082969665527
    5. '               ' → logprob: -12.250082969665527
    6. '   ' → logprob: -12.625082969665527
    7. '    
' → logprob: -13.000082969665527
    8. '		' → logprob: -13.625082969665527
    9. 'break' → logprob: -13.875082969665527
    10. ',' → logprob: -14.000082969665527

Token 147: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0355423167347908
    2. '       ' → logprob: -4.0355424880981445
    3. '           ' → logprob: -4.1605424880981445
    4. ' break' → logprob: -6.5355424880981445
    5. '
' → logprob: -9.160542488098145
    6. '	break' → logprob: -9.910542488098145
    7. '   ' → logprob: -11.035542488098145
    8. '               ' → logprob: -11.660542488098145
    9. '        
' → logprob: -12.410542488098145
    10. '\n' → logprob: -12.910542488098145

Token 148: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02102164924144745
    2. '   ' → logprob: -4.521021842956543
    3. '        
' → logprob: -5.771021842956543
    4. '
' → logprob: -6.396021842956543
    5. ')' → logprob: -6.521021842956543
    6. '    
' → logprob: -6.771021842956543
    7. '  
' → logprob: -8.021021842956543
    8. 'x' → logprob: -8.271021842956543
    9. 'elif' → logprob: -8.271021842956543
    10. '\n' → logprob: -8.396021842956543

Token 149: '       ' (ID: 309)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.8830393552780151
    2. '       ' → logprob: -1.0080393552780151
    3. ' dx' → logprob: -1.7580393552780151
    4. '   ' → logprob: -3.6330394744873047
    5. '
' → logprob: -5.008039474487305
    6. '        
' → logprob: -5.508039474487305
    7. '    
' → logprob: -6.133039474487305
    8. 'nx' → logprob: -6.383039474487305
    9. ' nx' → logprob: -6.508039474487305
    10. '  
' → logprob: -7.133039474487305

Token 150: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -9.758300438988954e-05
    2. 'mx' → logprob: -10.125097274780273
    3. ' dx' → logprob: -10.125097274780273
    4. 'if' → logprob: -11.875097274780273
    5. 'move' → logprob: -12.500097274780273
    6. 'elif' → logprob: -13.000097274780273
    7. '    
' → logprob: -13.500097274780273
    8. '   ' → logprob: -13.500097274780273
    9. 'else' → logprob: -14.625097274780273
    10. '  
' → logprob: -15.375097274780273

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. '=' → logprob: -12.000008583068848
    3. ',y' → logprob: -13.500008583068848
    4. ',d' → logprob: -14.250008583068848
    5. ' ,' → logprob: -15.000008583068848
    6. 'dy' → logprob: -15.750008583068848
    7. '<|end|>' → logprob: -16.750009536743164
    8. ',
' → logprob: -16.875009536743164
    9. ')' → logprob: -17.125009536743164
    10. ',

' → logprob: -17.750009536743164

Token 152: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.5762194991111755
    2. 'dy' → logprob: -0.8262194991111755
    3. '<|end|>' → logprob: -8.20121955871582
    4. '<|end|>' → logprob: -13.32621955871582
    5. 'd' → logprob: -14.07621955871582
    6. 'Dy' → logprob: -14.07621955871582
    7. ' ' → logprob: -14.32621955871582
    8. '.dy' → logprob: -14.57621955871582
    9. ' 
' → logprob: -14.82621955871582
    10. ' Dy' → logprob: -15.32621955871582

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692873179912567
    2. ' =' → logprob: -2.1269288063049316
    3. ')' → logprob: -14.751928329467773
    4. '<|end|>' → logprob: -16.001928329467773
    5. ')=' → logprob: -16.876928329467773
    6. '=

' → logprob: -17.001928329467773
    7. ',' → logprob: -17.751928329467773
    8. ']' → logprob: -18.501928329467773
    9. ' ' → logprob: -18.626928329467773
    10. '=
' → logprob: -18.626928329467773

Token 154: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.25194215774536133
    2. 'moves' → logprob: -1.5019421577453613
    3. 'm' → logprob: -11.751941680908203
    4. '_moves' → logprob: -13.001941680908203
    5. '.moves' → logprob: -13.376941680908203
    6. 'Moves' → logprob: -15.376941680908203
    7. '   ' → logprob: -15.376941680908203
    8. ' ' → logprob: -15.626941680908203
    9. 'move' → logprob: -15.626941680908203
    10. ' move' → logprob: -16.126941680908203

Token 155: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.00010187433508690447
    2. '[' → logprob: -9.250102043151855
    3. ' [' → logprob: -13.000102043151855
    4. '[token' → logprob: -14.125102043151855
    5. 't' → logprob: -14.500102043151855
    6. '.get' → logprob: -14.750102043151855
    7. '[m' → logprob: -15.375102043151855
    8. '	t' → logprob: -15.375102043151855
    9. '[T' → logprob: -15.500102043151855
    10. 'tile' → logprob: -15.625102043151855

Token 156: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.00015109812375158072
    2. 'tile' → logprob: -9.125150680541992
    3. 'il' → logprob: -10.125150680541992
    4. 'itle' → logprob: -14.125150680541992
    5. '[' → logprob: -15.000150680541992
    6. '(tile' → logprob: -15.125150680541992
    7. 'iled' → logprob: -15.875150680541992
    8. 'le' → logprob: -16.000150680541992
    9. 'ilet' → logprob: -16.125150680541992
    10. 'iler' → logprob: -16.125150680541992

Token 157: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020076262298971415
    2. ']
' → logprob: -6.502007484436035
    3. ')' → logprob: -7.627007484436035
    4. ')]' → logprob: -12.002007484436035
    5. ' ]' → logprob: -12.252007484436035
    6. '])' → logprob: -13.002007484436035
    7. ']
' → logprob: -13.252007484436035
    8. ']

' → logprob: -13.252007484436035
    9. ')
' → logprob: -14.627007484436035
    10. '[' → logprob: -15.252007484436035

Token 158: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8262429237365723
    2. ' x' → logprob: -1.2012429237365723
    3. '
' → logprob: -1.9512429237365723
    4. 'x' → logprob: -2.7012429237365723
    5. ' ' → logprob: -3.7012429237365723
    6. '<|end|>' → logprob: -4.451242923736572
    7. '       ' → logprob: -4.951242923736572
    8. '	x' → logprob: -5.701242923736572
    9. ',' → logprob: -6.326242923736572
    10. '  
' → logprob: -6.951242923736572

Token 159: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.063657246530056
    2. ' x' → logprob: -2.813657283782959
    3. ' new' → logprob: -7.438657283782959
    4. ' nx' → logprob: -7.563657283782959
    5. 'nx' → logprob: -7.688657283782959
    6. 'new' → logprob: -9.0636568069458
    7. '       ' → logprob: -12.5636568069458
    8. '
' → logprob: -13.3136568069458
    9. '   ' → logprob: -13.9386568069458
    10. 'next' → logprob: -15.1886568069458

Token 160: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20281709730625153
    2. ' +=' → logprob: -1.7028170824050903
    3. '+' → logprob: -6.827816963195801
    4. '=' → logprob: -8.0778169631958
    5. ']+=' → logprob: -12.7028169631958
    6. ',' → logprob: -13.0778169631958
    7. '+x' → logprob: -13.8278169631958
    8. '+="' → logprob: -14.4528169631958
    9. '+='' → logprob: -14.4528169631958
    10. ' =' → logprob: -14.8278169631958

Token 161: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.002475777640938759
    2. ' dx' → logprob: -6.002475738525391
    3. '_dx' → logprob: -16.37747573852539
    4. '(dx' → logprob: -18.62747573852539
    5. 'Dx' → logprob: -19.50247573852539
    6. 'd' → logprob: -20.00247573852539
    7. '.dx' → logprob: -20.37747573852539
    8. 'DX' → logprob: -21.00247573852539
    9. 'x' → logprob: -22.00247573852539
    10. ' ' → logprob: -22.25247573852539

Token 162: '
' (ID: 198)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.024447457864880562
    2. 'y' → logprob: -4.149447441101074
    3. ',' → logprob: -5.774447441101074
    4. '
' → logprob: -6.274447441101074
    5. ' dy' → logprob: -6.649447441101074
    6. '<|end|>' → logprob: -7.274447441101074
    7. ',y' → logprob: -7.649447441101074
    8. '       ' → logprob: -7.649447441101074
    9. ' 
' → logprob: -8.899447441101074
    10. ' ,' → logprob: -9.024447441101074

Token 163: '       ' (ID: 309)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.02346651814877987
    2. 'y' → logprob: -3.7734665870666504
    3. ' dy' → logprob: -8.773466110229492
    4. '       ' → logprob: -10.648466110229492
    5. '<|end|>' → logprob: -11.023466110229492
    6. ',' → logprob: -11.398466110229492
    7. ',y' → logprob: -12.023466110229492
    8. '
' → logprob: -13.273466110229492
    9. '        ' → logprob: -13.398466110229492
    10. ' ,' → logprob: -13.773466110229492

Token 164: ' y' (ID: 342)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0389627069234848
    2. ' dy' → logprob: -3.2889626026153564
    3. 'y' (adapté à ' y') → logprob: -7.0389628410339355
    4. ' y' → logprob: -10.038962364196777
    5. 'Dy' → logprob: -17.413963317871094
    6. '0' → logprob: -17.538963317871094
    7. '.dy' → logprob: -17.538963317871094
    8. '   ' → logprob: -18.038963317871094
    9. '       ' → logprob: -18.538963317871094
    10. '    ' → logprob: -18.913963317871094

Token 165: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10439291596412659
    2. '+=' → logprob: -2.4793930053710938
    3. '+' → logprob: -4.229393005371094
    4. ' +' → logprob: -7.229393005371094
    5. '<|end|>' → logprob: -10.354393005371094
    6. ' ' → logprob: -12.604393005371094
    7. ')' → logprob: -12.604393005371094
    8. '```' → logprob: -13.229393005371094
    9. '*' → logprob: -13.479393005371094
    10. '<|end|>' → logprob: -13.604393005371094

Token 166: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0040785204619169235
    2. ' dy' → logprob: -5.504078388214111
    3. 'd' → logprob: -17.129077911376953
    4. '1' → logprob: -18.629077911376953
    5. '.dy' → logprob: -18.629077911376953
    6. 'dx' → logprob: -19.504077911376953
    7. 'dym' → logprob: -20.254077911376953
    8. ' ' → logprob: -20.379077911376953
    9. 'dj' → logprob: -20.879077911376953
    10. 'Dy' → logprob: -21.004077911376953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 164
Tokens correctement prédits (1ère position, stricte): 77
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 150
Précision stricte (1ère position): 46.95%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 91.46%
================================================================================
