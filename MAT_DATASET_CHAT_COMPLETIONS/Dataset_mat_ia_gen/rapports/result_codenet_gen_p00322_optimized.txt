================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import setrecursionlimit
setrecursionlimit(10**7)

A,B,C,D,E,F,G,H,I = map(int, input().split())

digits = [A,B,C,D,E,F,G,H,I]
used = [False]*10
for d in digits:
    if d != -1:
        used[d] = True

missing_indices = [i for i,d in enumerate(digits) if d == -1]
missing_digits = [i for i in range(1,10) if not used[i]]

count = 0
def dfs(pos):
    global count
    if pos == len(missing_indices):
        a,b,c,d,e,f,g,h,i = digits
        if a*100 + b*10 + c + d*100 + e*10 + f == g*100 + h*10 + i:
            count += 1
        return
    idx = missing_indices[pos]
    for md in missing_digits:
        if used[md]:
            continue
        digits[idx] = md
        used[md] = True
        dfs(pos+1)
        used[md] = False
        digits[idx] = -1

dfs(0)
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' set' (ID: 920)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.08520080149173737
    2. ' argv' → logprob: -2.710200786590576
    3. 'exit' → logprob: -4.585200786590576
    4. ' exit' → logprob: -5.835200786590576
    5. 'stdout' → logprob: -6.960200786590576
    6. 'path' → logprob: -7.710200786590576
    7. 'stdin' → logprob: -8.210201263427734
    8. 'version' → logprob: -9.085201263427734
    9. 'import' → logprob: -9.460201263427734
    10. ' path' → logprob: -10.085201263427734

Token 4: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.8196338415145874
    2. 'set' → logprob: -1.1946338415145874
    3. 'rec' → logprob: -1.4446338415145874
    4. 'encoding' → logprob: -5.569633960723877
    5. 'default' → logprob: -5.819633960723877
    6. 's' → logprob: -6.444633960723877
    7. 'execution' → logprob: -6.569633960723877
    8. 'profile' → logprob: -6.694633960723877
    9. 'switch' → logprob: -6.819633960723877
    10. 'tr' → logprob: -6.944633960723877

Token 5: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0024140614550560713
    2. 'ur' → logprob: -6.752414226531982
    3. 'urs' → logprob: -6.752414226531982
    4. 'ursive' → logprob: -10.002413749694824
    5. 'urse' → logprob: -11.252413749694824
    6. 'ursor' → logprob: -11.877413749694824
    7. 'u' → logprob: -12.627413749694824
    8. '_' → logprob: -13.377413749694824
    9. 'urst' → logprob: -13.377413749694824
    10. 'urf' → logprob: -14.127413749694824

Token 6: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -8.895480277715251e-06
    2. 'ursion' → logprob: -13.000008583068848
    3. '_limit' → logprob: -13.000008583068848
    4. 'lim' → logprob: -13.250008583068848
    5. 'l' → logprob: -13.750008583068848
    6. 'depth' → logprob: -14.250008583068848
    7. ' limit' → logprob: -15.000008583068848
    8. '-limit' → logprob: -16.000009536743164
    9. 'limits' → logprob: -16.625009536743164
    10. 'error' → logprob: -16.625009536743164

Token 7: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015102163888514042
    2. '(
' → logprob: -7.376510143280029
    3. '\(' → logprob: -7.876510143280029
    4. '\' → logprob: -8.501510620117188
    5. '\n' → logprob: -8.751510620117188
    6. '()' → logprob: -9.751510620117188
    7. 'newline' → logprob: -11.001510620117188
    8. '(\' → logprob: -11.001510620117188
    9. '40' → logprob: -11.251510620117188
    10. '```' → logprob: -12.001510620117188

Token 8: 'set' (ID: 977)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009420174174010754
    2. '(
' → logprob: -4.884420394897461
    3. '\(' → logprob: -7.384420394897461
    4. '\' → logprob: -7.884420394897461
    5. '\n' → logprob: -8.259420394897461
    6. '
' → logprob: -8.759420394897461
    7. '(set' → logprob: -8.759420394897461
    8. 'newline' → logprob: -10.259420394897461
    9. '()' → logprob: -10.384420394897461
    10. 'set' → logprob: -10.384420394897461

Token 9: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.004866192117333412
    2. 'rc' → logprob: -5.754866123199463
    3. 'cur' → logprob: -7.129866123199463
    4. '_rec' → logprob: -7.629866123199463
    5. 'c' → logprob: -8.879866600036621
    6. 're' → logprob: -9.254866600036621
    7. 'ursion' → logprob: -10.004866600036621
    8. 'erc' → logprob: -10.254866600036621
    9. '(rec' → logprob: -10.629866600036621
    10. 'set' → logprob: -11.879866600036621

Token 10: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.005335147492587566
    2. 'urs' → logprob: -5.380335330963135
    3. 'ursor' → logprob: -7.380335330963135
    4. 'ors' → logprob: -10.505334854125977
    5. 'ursive' → logprob: -10.630334854125977
    6. 'ur' → logprob: -11.130334854125977
    7. 'url' → logprob: -11.505334854125977
    8. 'ursors' → logprob: -12.380334854125977
    9. 'set' → logprob: -13.380334854125977
    10. 'rs' → logprob: -13.380334854125977

Token 11: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00012797261297237128
    2. 'lit' → logprob: -9.625127792358398
    3. '_limit' → logprob: -10.000127792358398
    4. 'lim' → logprob: -12.000127792358398
    5. 'li' → logprob: -12.625127792358398
    6. 'imit' → logprob: -12.625127792358398
    7. ' limit' → logprob: -13.500127792358398
    8. 'it' → logprob: -14.500127792358398
    9. '(limit' → logprob: -14.625127792358398
    10. '_l' → logprob: -15.125127792358398

Token 12: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.650518920039758e-06
    2. '(
' → logprob: -13.250003814697266
    3. ' (' → logprob: -13.625003814697266
    4. '(

' → logprob: -15.125003814697266
    5. '((' → logprob: -16.000003814697266
    6. '("("' → logprob: -16.125003814697266
    7. '()' → logprob: -17.000003814697266
    8. '(
' → logprob: -17.500003814697266
    9. '('' → logprob: -17.625003814697266
    10. '```' → logprob: -18.250003814697266

Token 13: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.13007403910160065
    2. '100' → logprob: -2.1300740242004395
    3. '300' → logprob: -6.2550740242004395
    4. '500' → logprob: -6.8800740242004395
    5. '250' → logprob: -9.130074501037598
    6. '1' → logprob: -10.755074501037598
    7. '200' → logprob: -10.880074501037598
    8. '150' → logprob: -11.255074501037598
    9. ' ' → logprob: -11.505074501037598
    10. '999' → logprob: -11.880074501037598

Token 14: '**' (ID: 410)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.13234636187553406
    2. '000' → logprob: -2.3823463916778564
    3. '0' → logprob: -3.5073463916778564
    4. '**' → logprob: -7.382346153259277
    5. '4' → logprob: -7.507346153259277
    6. '6' → logprob: -8.132346153259277
    7. '24' → logprob: -9.132346153259277
    8. '2' → logprob: -10.382346153259277
    9. '7' → logprob: -11.132346153259277
    10. '3' → logprob: -11.507346153259277

Token 15: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0033838648814707994
    2. '9' → logprob: -5.753383636474609
    3. '8' → logprob: -8.50338363647461
    4. '6' → logprob: -12.62838363647461
    5. ' ' → logprob: -17.62838363647461
    6. '```' → logprob: -18.50338363647461
    7. '

' → logprob: -20.87838363647461
    8. ')' → logprob: -21.00338363647461
    9. '**' → logprob: -21.00338363647461
    10. '}' → logprob: -21.00338363647461

Token 16: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. '))' → logprob: -12.500004768371582
    3. ')
' → logprob: -15.875004768371582
    4. '`)' → logprob: -16.250003814697266
    5. ' )' → logprob: -16.250003814697266
    6. ')))' → logprob: -16.500003814697266
    7. '),' → logprob: -16.750003814697266
    8. ')`' → logprob: -17.125003814697266
    9. '```' → logprob: -17.500003814697266
    10. ')}}' → logprob: -17.625003814697266

Token 17: 'A' (ID: 32)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5582754015922546
    2. '
' → logprob: -1.4332754611968994
    3. '\' → logprob: -2.4332754611968994
    4. '\n' → logprob: -2.9332754611968994
    5. '```' → logprob: -3.6832754611968994
    6. 'a' → logprob: -5.05827522277832
    7. 'n' → logprob: -5.30827522277832
    8. 'd' → logprob: -5.43327522277832
    9. '
' → logprob: -6.43327522277832
    10. '' → logprob: -6.55827522277832

Token 18: ',B' (ID: 19853)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6070533394813538
    2. 'n' → logprob: -1.357053279876709
    3. '=' → logprob: -2.982053279876709
    4. 'b' → logprob: -3.107053279876709
    5. 'r' → logprob: -3.357053279876709
    6. 's' → logprob: -3.482053279876709
    7. '_' → logprob: -4.357053279876709
    8. ' =' → logprob: -5.232053279876709
    9. ' ' → logprob: -5.982053279876709
    10. 'l' → logprob: -6.232053279876709

Token 19: ',C' (ID: 26924)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2422678917646408
    2. '=' → logprob: -1.6172678470611572
    3. ',' → logprob: -4.117268085479736
    4. ' ' → logprob: -9.117267608642578
    5. ' ,' → logprob: -9.742267608642578
    6. '.' → logprob: -9.742267608642578
    7. '[' → logprob: -9.867267608642578
    8. ')' → logprob: -9.867267608642578
    9. '_' → logprob: -10.367267608642578
    10. ' =
' → logprob: -11.742267608642578

Token 20: ',D' (ID: 61507)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47504982352256775
    2. '=' → logprob: -0.9750498533248901
    3. ',' → logprob: -6.97504997253418
    4. '.' → logprob: -11.60004997253418
    5. ')' → logprob: -12.60004997253418
    6. '=input' → logprob: -12.85004997253418
    7. '=int' → logprob: -12.97504997253418
    8. ' =)' → logprob: -13.35004997253418
    9. '<|end|>' → logprob: -13.47504997253418
    10. '=A' → logprob: -13.47504997253418

Token 21: ',E' (ID: 101576)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742710292339325
    2. '=' → logprob: -0.9742710590362549
    3. ',' → logprob: -8.724270820617676
    4. ' =
' → logprob: -12.099270820617676
    5. '=
' → logprob: -12.349270820617676
    6. '=

' → logprob: -12.974270820617676
    7. '=input' → logprob: -13.224270820617676
    8. '=int' → logprob: -13.224270820617676
    9. '.' → logprob: -13.724270820617676
    10. '=A' → logprob: -13.724270820617676

Token 22: ',F' (ID: 66678)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2898050844669342
    2. '=' → logprob: -1.4148050546646118
    3. ',' → logprob: -4.789804935455322
    4. ',F' → logprob: -9.03980541229248
    5. ')' → logprob: -10.28980541229248
    6. ',f' → logprob: -10.66480541229248
    7. ' =)' → logprob: -11.03980541229248
    8. ' ,' → logprob: -11.16480541229248
    9. '<|end|>' → logprob: -11.41480541229248
    10. '.' → logprob: -11.53980541229248

Token 23: ',G' (ID: 66991)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252286434173584
    2. '=' → logprob: -1.502286434173584
    3. ',' → logprob: -8.002286911010742
    4. ' ,' → logprob: -11.377286911010742
    5. '=input' → logprob: -12.877286911010742
    6. '=int' → logprob: -13.127286911010742
    7. ' =
' → logprob: -13.377286911010742
    8. ' ' → logprob: -13.627286911010742
    9. ' =
' → logprob: -14.752286911010742
    10. ' =)' → logprob: -15.002286911010742

Token 24: ',H' (ID: 94400)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3514339029788971
    2. ' =' → logprob: -1.2264338731765747
    3. ',' → logprob: -5.851433753967285
    4. ',H' → logprob: -10.226433753967285
    5. '.' → logprob: -11.601433753967285
    6. ')' → logprob: -11.976433753967285
    7. '=int' → logprob: -12.101433753967285
    8. ' =)' → logprob: -12.226433753967285
    9. ',a' → logprob: -12.476433753967285
    10. '=

' → logprob: -12.601433753967285

Token 25: ',I' (ID: 75570)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23163273930549622
    2. '=' → logprob: -1.6066327095031738
    3. ',' → logprob: -5.231632709503174
    4. '<|end|>' → logprob: -7.481632709503174
    5. ' ' → logprob: -9.356633186340332
    6. ' =
' → logprob: -10.231633186340332
    7. ')' → logprob: -10.356633186340332
    8. ' ,' → logprob: -10.731633186340332
    9. ',I' → logprob: -10.731633186340332
    10. 'I' → logprob: -11.356633186340332

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4176484942436218
    2. ' =' → logprob: -1.1676485538482666
    3. ',' → logprob: -3.5426485538482666
    4. '<|end|>' → logprob: -7.2926483154296875
    5. ',J' → logprob: -8.792648315429688
    6. ',j' → logprob: -9.042648315429688
    7. '.' → logprob: -9.292648315429688
    8. ')' → logprob: -9.417648315429688
    9. '```' → logprob: -10.667648315429688
    10. ' ' → logprob: -10.917648315429688

Token 27: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4916140139102936
    2. 'map' → logprob: -1.2416139841079712
    3. ' ' → logprob: -2.8666141033172607
    4. '0' → logprob: -3.8666141033172607
    5. '1' → logprob: -4.241613864898682
    6. ' input' → logprob: -6.116613864898682
    7. 'input' → logprob: -6.241613864898682
    8. ' list' → logprob: -7.491613864898682
    9. ' range' → logprob: -7.741613864898682
    10. '10' → logprob: -7.866613864898682

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04265964403748512
    2. '(' → logprob: -3.4176597595214844
    3. '(str' → logprob: -5.542659759521484
    4. '(lambda' → logprob: -6.042659759521484
    5. '(input' → logprob: -6.167659759521484
    6. '(eval' → logprob: -8.167659759521484
    7. 'int' → logprob: -9.417659759521484
    8. '<|end|>' → logprob: -9.542659759521484
    9. '(map' → logprob: -11.042659759521484
    10. '(list' → logprob: -11.042659759521484

Token 29: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1813848465681076
    2. '(' → logprob: -2.056384801864624
    3. ')' → logprob: -3.806384801864624
    4. '<|end|>' → logprob: -4.806385040283203
    5. 'input' → logprob: -5.306385040283203
    6. '(int' → logprob: -7.806385040283203
    7. ' input' → logprob: -8.056385040283203
    8. ')(' → logprob: -8.556385040283203
    9. '(stdin' → logprob: -8.681385040283203
    10. '<|end|>' → logprob: -8.681385040283203

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16027763485908508
    2. ' input' → logprob: -1.9102776050567627
    3. ')' → logprob: -9.910277366638184
    4. ',input' → logprob: -14.035277366638184
    5. ' ' → logprob: -14.160277366638184
    6. '(input' → logprob: -14.410277366638184
    7. '=input' → logprob: -14.535277366638184
    8. '	input' → logprob: -15.035277366638184
    9. ' )' → logprob: -15.035277366638184
    10. 'open' → logprob: -16.2852783203125

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0025880273897200823
    2. '()' → logprob: -6.002587795257568
    3. '())' → logprob: -9.627588272094727
    4. ')' → logprob: -10.752588272094727
    5. '(' → logprob: -11.127588272094727
    6. ' ().' → logprob: -12.127588272094727
    7. '('').' → logprob: -13.627588272094727
    8. '());' → logprob: -13.877588272094727
    9. '(.' → logprob: -15.252588272094727
    10. '("").' → logprob: -15.377588272094727

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007513784803450108
    2. 'strip' → logprob: -7.250751495361328
    3. 'rstrip' → logprob: -10.375751495361328
    4. ' split' → logprob: -11.875751495361328
    5. ')' → logprob: -13.250751495361328
    6. '(split' → logprob: -14.250751495361328
    7. '```' → logprob: -15.500751495361328
    8. 's' → logprob: -15.500751495361328
    9. 'spl' → logprob: -15.625751495361328
    10. '().' → logprob: -15.750751495361328

Token 33: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09409346431493759
    2. '()))' → logprob: -2.7190935611724854
    3. ')' → logprob: -4.219093322753906
    4. '))' → logprob: -5.344093322753906
    5. '()' → logprob: -5.469093322753906
    6. '(' → logprob: -9.719093322753906
    7. ' ())' → logprob: -10.719093322753906
    8. '()),' → logprob: -11.219093322753906
    9. '()));' → logprob: -11.219093322753906
    10. '(),' → logprob: -11.344093322753906

Token 34: 'digits' (ID: 135574)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0460901260375977
    2. 'n' → logprob: -1.6710901260375977
    3. 'x' → logprob: -2.4210901260375977
    4. 'a' → logprob: -2.5460901260375977
    5. 'max' → logprob: -2.6710901260375977
    6. 'if' → logprob: -2.9210901260375977
    7. 'result' → logprob: -3.4210901260375977
    8. 'def' → logprob: -3.5460901260375977
    9. 'DP' → logprob: -4.421090126037598
    10. 's' → logprob: -4.546090126037598

Token 35: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3020002245903015
    2. '[' → logprob: -2.4270002841949463
    3. '=' → logprob: -2.4270002841949463
    4. ' =' → logprob: -3.0520002841949463
    5. '_' → logprob: -3.6770002841949463
    6. '.' → logprob: -6.052000045776367
    7. '[:]' → logprob: -6.427000045776367
    8. '()' → logprob: -6.552000045776367
    9. ')' → logprob: -6.927000045776367
    10. '_count' → logprob: -7.177000045776367

Token 36: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.01796555519104
    2. '[' → logprob: -1.64296555519104
    3. ' [' → logprob: -1.76796555519104
    4. ' list' → logprob: -2.14296555519104
    5. '[list' → logprob: -2.64296555519104
    6. '[A' → logprob: -3.64296555519104
    7. '[int' → logprob: -4.267965316772461
    8. '[]' → logprob: -4.392965316772461
    9. '[input' → logprob: -4.517965316772461
    10. '[str' → logprob: -4.642965316772461

Token 37: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16798579692840576
    2. '0' → logprob: -1.9179857969284058
    3. '1' → logprob: -5.167985916137695
    4. 'int' → logprob: -7.417985916137695
    5. '9' → logprob: -7.917985916137695
    6. 'H' → logprob: -8.542985916137695
    7. 'I' → logprob: -8.667985916137695
    8. ' A' → logprob: -9.167985916137695
    9. 'G' → logprob: -9.417985916137695
    10. ']' → logprob: -9.542985916137695

Token 38: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026438351720571518
    2. ',B' → logprob: -3.6514382362365723
    3. ',A' → logprob: -10.40143871307373
    4. ' ,' → logprob: -10.40143871307373
    5. ',D' → logprob: -10.77643871307373
    6. ',
' → logprob: -11.27643871307373
    7. ',G' → logprob: -11.40143871307373
    8. ',F' → logprob: -11.65143871307373
    9. ',C' → logprob: -12.15143871307373
    10. ')' → logprob: -12.15143871307373

Token 39: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.00047773998812772334
    2. ',' → logprob: -7.7504777908325195
    3. ' ,' → logprob: -10.12547779083252
    4. 'C' → logprob: -12.50047779083252
    5. ',c' → logprob: -14.37547779083252
    6. ' ' → logprob: -14.75047779083252
    7. ',,' → logprob: -15.00047779083252
    8. ',G' → logprob: -15.25047779083252
    9. ',F' → logprob: -15.50047779083252
    10. ',
' → logprob: -15.75047779083252

Token 40: ',D' (ID: 61507)
  Prédit: ',C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.10190673172473907
    2. ',D' → logprob: -2.3519067764282227
    3. ',' → logprob: -6.601906776428223
    4. ' ,' → logprob: -8.351906776428223
    5. ',F' → logprob: -9.726906776428223
    6. ',G' → logprob: -11.226906776428223
    7. 'C' → logprob: -11.601906776428223
    8. ' ' → logprob: -12.226906776428223
    9. 'D' → logprob: -12.476906776428223
    10. ',d' → logprob: -12.726906776428223

Token 41: ',E' (ID: 101576)
  Prédit: ',E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',E' → logprob: -0.010277868248522282
    2. ',' → logprob: -4.88527774810791
    3. ',F' → logprob: -6.01027774810791
    4. ',C' → logprob: -9.13527774810791
    5. ' ,' → logprob: -9.51027774810791
    6. ',I' → logprob: -11.01027774810791
    7. 'E' → logprob: -12.01027774810791
    8. ',G' → logprob: -12.26027774810791
    9. ',,' → logprob: -14.13527774810791
    10. ',e' → logprob: -14.63527774810791

Token 42: ',F' (ID: 66678)
  Prédit: ',F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',F' → logprob: -0.0003357006062287837
    2. ',' → logprob: -8.250335693359375
    3. ' ,' → logprob: -10.125335693359375
    4. ',C' → logprob: -11.375335693359375
    5. 'F' → logprob: -11.500335693359375
    6. ',f' → logprob: -12.875335693359375
    7. ',I' → logprob: -13.000335693359375
    8. ',G' → logprob: -13.125335693359375
    9. ',,' → logprob: -13.750335693359375
    10. '```' → logprob: -14.125335693359375

Token 43: ',G' (ID: 66991)
  Prédit: ',G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',G' → logprob: -0.008717396296560764
    2. ',' → logprob: -4.7587175369262695
    3. ' ,' → logprob: -10.13371753692627
    4. ',I' → logprob: -10.63371753692627
    5. ',C' → logprob: -11.13371753692627
    6. ',g' → logprob: -12.13371753692627
    7. ']' → logprob: -12.50871753692627
    8. 'G' → logprob: -12.50871753692627
    9. ',J' → logprob: -12.88371753692627
    10. ',,' → logprob: -13.38371753692627

Token 44: ',H' (ID: 94400)
  Prédit: ',H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -0.04638836160302162
    2. ',I' → logprob: -3.2963883876800537
    3. ',' → logprob: -4.796388149261475
    4. ',G' → logprob: -11.171388626098633
    5. ' ,' → logprob: -11.296388626098633
    6. 'I' → logprob: -11.796388626098633
    7. 'H' → logprob: -12.296388626098633
    8. ',J' → logprob: -12.671388626098633
    9. ',K' → logprob: -12.796388626098633
    10. ',,' → logprob: -13.296388626098633

Token 45: ',I' (ID: 75570)
  Prédit: ',I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',I' → logprob: -0.0053387051448225975
    2. ',' → logprob: -5.255338668823242
    3. ' ,' → logprob: -9.505338668823242
    4. 'I' → logprob: -10.880338668823242
    5. ',i' → logprob: -12.130338668823242
    6. ',C' → logprob: -13.630338668823242
    7. ')' → logprob: -14.255338668823242
    8. '`,' → logprob: -14.380338668823242
    9. ',A' → logprob: -15.005338668823242
    10. '```' → logprob: -15.130338668823242

Token 46: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010975311510264874
    2. ')]' → logprob: -4.885975360870361
    3. ')' → logprob: -6.010975360870361
    4. ',' → logprob: -7.135975360870361
    5. '])' → logprob: -9.510974884033203
    6. ' ]' → logprob: -10.510974884033203
    7. '`]' → logprob: -12.510974884033203
    8. '])]' → logprob: -13.135974884033203
    9. '],' → logprob: -13.760974884033203
    10. ']
' → logprob: -13.885974884033203

Token 47: 'used' (ID: 4943)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.181654214859009
    2. 'count' → logprob: -2.181654214859009
    3. 'counts' → logprob: -2.431654214859009
    4. '
' → logprob: -2.556654214859009
    5. 's' → logprob: -2.556654214859009
    6. '_' → logprob: -2.931654214859009
    7. '\n' → logprob: -2.931654214859009
    8. 'for' → logprob: -3.056654214859009
    9. 'dp' → logprob: -3.431654214859009
    10. '.' → logprob: -3.556654214859009

Token 48: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30551087856292725
    2. ' =' → logprob: -1.5555108785629272
    3. '_' → logprob: -3.680510997772217
    4. '=' → logprob: -3.930510997772217
    5. '[:]' → logprob: -6.180510997772217
    6. '[]' → logprob: -6.930510997772217
    7. '.' → logprob: -7.180510997772217
    8. ' ' → logprob: -7.305510997772217
    9. ']' → logprob: -7.305510997772217
    10. 's' → logprob: -8.180510520935059

Token 49: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.055148106068372726
    2. ' [' → logprob: -2.930148124694824
    3. 'set' → logprob: -9.180148124694824
    4. '[]' → logprob: -9.305148124694824
    5. ' set' → logprob: -10.430148124694824
    6. ' []' → logprob: -11.430148124694824
    7. '{' → logprob: -11.430148124694824
    8. '{}' → logprob: -11.555148124694824
    9. ' ' → logprob: -12.430148124694824
    10. '[len' → logprob: -13.180148124694824

Token 50: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001007919549010694
    2. ' False' → logprob: -7.001008033752441
    3. '0' → logprob: -9.251008033752441
    4. ']' → logprob: -15.626008033752441
    5. '(False' → logprob: -15.751008033752441
    6. 'True' → logprob: -16.501007080078125
    7. '   ' → logprob: -16.876007080078125
    8. '9' → logprob: -17.876007080078125
    9. ' ' → logprob: -18.251007080078125
    10. '[' → logprob: -18.501007080078125

Token 51: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008009305456653237
    2. ',' → logprob: -7.250801086425781
    3. ' ]' → logprob: -9.750801086425781
    4. ']*' → logprob: -11.125801086425781
    5. ')' → logprob: -11.375801086425781
    6. ' for' → logprob: -12.625801086425781
    7. '']' → logprob: -14.875801086425781
    8. '`]' → logprob: -15.000801086425781
    9. '```' → logprob: -15.000801086425781
    10. ',
' → logprob: -15.125801086425781

Token 52: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.005962810944765806
    2. '10' → logprob: -5.13096284866333
    3. '(' → logprob: -11.380962371826172
    4. '11' → logprob: -12.130962371826172
    5. 'len' → logprob: -12.630962371826172
    6. ' ' → logprob: -12.880962371826172
    7. '18' → logprob: -13.693462371826172
    8. '19' → logprob: -13.693462371826172
    9. '81' → logprob: -13.755962371826172
    10. '```' → logprob: -13.818462371826172

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022169284522533417
    2. ' 
' → logprob: -4.64716911315918
    3. '\n' → logprob: -5.39716911315918
    4. '

' → logprob: -6.14716911315918
    5. '
' → logprob: -6.89716911315918
    6. 'def' → logprob: -6.89716911315918
    7. '<|end|>' → logprob: -7.02216911315918
    8. '' → logprob: -7.39716911315918
    9. 'for' → logprob: -8.02216911315918
    10. '  
' → logprob: -8.27216911315918

Token 54: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16909269988536835
    2. 'result' → logprob: -3.0440926551818848
    3. 'dp' → logprob: -3.1690926551818848
    4. 'count' → logprob: -3.6690926551818848
    5. 'ans' → logprob: -4.669092655181885
    6. 'res' → logprob: -4.794092655181885
    7. 'answer' → logprob: -5.044092655181885
    8. 'stack' → logprob: -5.419092655181885
    9. 'cnt' → logprob: -5.794092655181885
    10. '```' → logprob: -6.794092655181885

Token 55: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.44829171895980835
    2. 'd' → logprob: -1.3232917785644531
    3. ' i' → logprob: -3.073291778564453
    4. ' digit' → logprob: -3.448291778564453
    5. 'digit' → logprob: -4.823291778564453
    6. 'i' → logprob: -4.948291778564453
    7. ' x' → logprob: -7.323291778564453
    8. 'x' → logprob: -8.073291778564453
    9. ' num' → logprob: -8.573291778564453
    10. ' ' → logprob: -8.698291778564453

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007233412936329842
    2. 'in' → logprob: -5.132233619689941
    3. ' ' → logprob: -6.757233619689941
    4. 'n' → logprob: -10.257233619689941
    5. 'd' → logprob: -10.507233619689941
    6. '  ' → logprob: -10.632233619689941
    7. ' i' → logprob: -11.132233619689941
    8. 's' → logprob: -11.507233619689941
    9. ',' → logprob: -12.132233619689941
    10. ' ' → logprob: -12.257233619689941

Token 57: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.003939836751669645
    2. ' digits' → logprob: -5.878939628601074
    3. 'range' → logprob: -6.878939628601074
    4. ' range' → logprob: -9.878939628601074
    5. '[' → logprob: -10.003939628601074
    6. 'digit' → logprob: -13.253939628601074
    7. 'igits' → logprob: -13.378939628601074
    8. '```' → logprob: -13.628939628601074
    9. 'd' → logprob: -14.253939628601074
    10. '_digits' → logprob: -14.628939628601074

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004661642014980316
    2. ' :' → logprob: -5.379661560058594
    3. ':
' → logprob: -10.629661560058594
    4. ',' → logprob: -12.379661560058594
    5. ' if' → logprob: -13.129661560058594
    6. ' ' → logprob: -13.254661560058594
    7. ':**' → logprob: -13.379661560058594
    8. ' in' → logprob: -13.754661560058594
    9. ' :
' → logprob: -14.004661560058594
    10. '=' → logprob: -14.004661560058594

Token 59: '   ' (ID: 271)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.003378164954483509
    2. ' 
' → logprob: -6.253378391265869
    3. ' ' → logprob: -7.378378391265869
    4. '```' → logprob: -8.003377914428711
    5. '   ' → logprob: -8.753377914428711
    6. ' if' → logprob: -9.128377914428711
    7. 'used' → logprob: -9.503377914428711
    8. ' ```' → logprob: -9.878377914428711
    9. '    
' → logprob: -10.503377914428711
    10. '``' → logprob: -11.503377914428711

Token 60: ' if' (ID: 538)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.13193367421627045
    2. 'used' → logprob: -2.1319336891174316
    3. '   ' → logprob: -6.256933689117432
    4. ' if' → logprob: -6.256933689117432
    5. 'if' (adapté à ' if') → logprob: -7.131933689117432
    6. '```' → logprob: -8.381933212280273
    7. ' for' → logprob: -10.881933212280273
    8. 'print' → logprob: -11.069433212280273
    9. '``' → logprob: -11.319433212280273
    10. ' ' → logprob: -11.506933212280273

Token 61: ' d' (ID: 272)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.058778245002031326
    2. 'used' → logprob: -3.0587782859802246
    3. ' not' → logprob: -4.683778285980225
    4. ' d' → logprob: -7.933778285980225
    5. ' ' → logprob: -8.183777809143066
    6. '   ' → logprob: -9.308777809143066
    7. 'not' → logprob: -9.683777809143066
    8. 'd' → logprob: -9.808777809143066
    9. ' digits' → logprob: -10.808777809143066
    10. '0' → logprob: -11.683777809143066

Token 62: ' !=' (ID: 1666)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09349706023931503
    2. 'in' → logprob: -3.3434970378875732
    3. ' ==' → logprob: -3.4684970378875732
    4. '==' → logprob: -4.718497276306152
    5. ':' → logprob: -5.718497276306152
    6. '>' → logprob: -5.843497276306152
    7. '<|end|>' → logprob: -6.343497276306152
    8. ' >' → logprob: -6.593497276306152
    9. ' not' → logprob: -6.718497276306152
    10. ' !=' → logprob: -7.468497276306152

Token 63: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38695088028907776
    2. '0' → logprob: -1.1369508504867554
    3. '_' → logprob: -10.386950492858887
    4. ''' → logprob: -11.386950492858887
    5. '9' → logprob: -11.386950492858887
    6. '-' → logprob: -12.511950492858887
    7. '1' → logprob: -12.761950492858887
    8. ' -' → logprob: -12.824450492858887
    9. '7' → logprob: -12.886950492858887
    10. '2' → logprob: -13.386950492858887

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6776029699249193e-05
    2. ' ' → logprob: -10.62502670288086
    3. '2' → logprob: -14.68752670288086
    4. '9' → logprob: -15.12502670288086
    5. '```' → logprob: -15.75002670288086
    6. ',' → logprob: -16.12502670288086
    7. '<|end|>' → logprob: -16.25002670288086
    8. '<' → logprob: -16.56252670288086
    9. '  ' → logprob: -16.68752670288086
    10. '10' → logprob: -16.68752670288086

Token 65: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03896522894501686
    2. ':' → logprob: -3.5389652252197266
    3. 'and' → logprob: -5.288965225219727
    4. ' :' → logprob: -6.538965225219727
    5. ':
' → logprob: -6.663965225219727
    6. ' ' → logprob: -7.038965225219727
    7. ' :
' → logprob: -8.038965225219727
    8. '   ' → logprob: -8.663965225219727
    9. '    ' → logprob: -12.413965225219727
    10. ',' → logprob: -12.663965225219727

Token 66: '       ' (ID: 309)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.02140153758227825
    2. ' 
' → logprob: -5.146401405334473
    3. ' if' → logprob: -5.646401405334473
    4. '```' → logprob: -5.646401405334473
    5. ' ' → logprob: -5.896401405334473
    6. ' ```' → logprob: -6.646401405334473
    7. 'used' → logprob: -6.771401405334473
    8. '   ' → logprob: -7.396401405334473
    9. '    ' → logprob: -7.646401405334473
    10. '1' → logprob: -8.271401405334473

Token 67: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.09951570630073547
    2. 'used' (adapté à ' used') → logprob: -2.474515676498413
    3. '   ' → logprob: -4.599515914916992
    4. '```' → logprob: -8.224515914916992
    5. '       ' → logprob: -9.599515914916992
    6. '    
' → logprob: -10.474515914916992
    7. '
' → logprob: -10.599515914916992
    8. '``' → logprob: -10.849515914916992
    9. ' ' → logprob: -11.349515914916992
    10. '.used' → logprob: -11.974515914916992

Token 68: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0007117166533134878
    2. '[' → logprob: -7.250711917877197
    3. '```' → logprob: -14.625711441040039
    4. '[df' → logprob: -15.000711441040039
    5. '[D' → logprob: -15.375711441040039
    6. ' [' → logprob: -15.625711441040039
    7. '[int' → logprob: -15.750711441040039
    8. 'd' → logprob: -15.875711441040039
    9. '[
' → logprob: -16.62571144104004
    10. '[s' → logprob: -16.75071144104004

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004537873435765505
    2. ']=' → logprob: -5.754538059234619
    3. ' ]' → logprob: -7.004538059234619
    4. '=' → logprob: -8.254537582397461
    5. ' =' → logprob: -8.629537582397461
    6. '=True' → logprob: -11.629537582397461
    7. 'True' → logprob: -13.379537582397461
    8. ')' → logprob: -15.254537582397461
    9. '   ' → logprob: -15.379537582397461
    10. '`]' → logprob: -15.379537582397461

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016100885346531868
    2. ' =' → logprob: -4.141100883483887
    3. '=True' → logprob: -9.641100883483887
    4. ' ' → logprob: -14.641100883483887
    5. '=False' → logprob: -14.891100883483887
    6. '=true' → logprob: -14.891100883483887
    7. ']' → logprob: -15.641100883483887
    8. ']=' → logprob: -16.516101837158203
    9. '=
' → logprob: -16.516101837158203
    10. '=

' → logprob: -16.641101837158203

Token 71: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01814994215965271
    2. ' True' → logprob: -4.0181498527526855
    3. 'Tr' → logprob: -17.393150329589844
    4. '=True' → logprob: -17.518150329589844
    5. 'T' → logprob: -17.768150329589844
    6. '(True' → logprob: -17.893150329589844
    7. '1' → logprob: -18.393150329589844
    8. '.True' → logprob: -19.893150329589844
    9. ' Tru' → logprob: -20.143150329589844
    10. 'False' → logprob: -20.393150329589844

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2166203111410141
    2. ' 
' → logprob: -2.7166202068328857
    3. '\n' → logprob: -3.2166202068328857
    4. '#' → logprob: -3.9666202068328857
    5. ' ' → logprob: -4.466620445251465
    6. '<|end|>' → logprob: -4.591620445251465
    7. '\' → logprob: -5.341620445251465
    8. 'n' → logprob: -5.466620445251465
    9. '_' → logprob: -5.591620445251465
    10. '0' → logprob: -5.716620445251465

Token 73: 'missing' (ID: 68892)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4772531986236572
    2. '_' → logprob: -1.8522531986236572
    3. 'next' → logprob: -2.2272531986236572
    4. 'x' → logprob: -2.3522531986236572
    5. 'def' → logprob: -2.9772531986236572
    6. 'max' → logprob: -3.2272531986236572
    7. 'n' → logprob: -3.2272531986236572
    8. 'num' → logprob: -3.3522531986236572
    9. 'result' → logprob: -3.3522531986236572
    10. 'possible' → logprob: -3.3522531986236572

Token 74: '_indices' (ID: 43508)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.617460310459137
    2. '_digits' → logprob: -1.3674602508544922
    3. '_' → logprob: -2.742460250854492
    4. '=' → logprob: -2.992460250854492
    5. '_digit' → logprob: -3.617460250854492
    6. '_numbers' → logprob: -3.617460250854492
    7. '_indices' → logprob: -4.242460250854492
    8. '_number' → logprob: -5.242460250854492
    9. 's' → logprob: -5.617460250854492
    10. '_num' → logprob: -5.867460250854492

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036037517711520195
    2. '=' → logprob: -5.628603935241699
    3. ' ' → logprob: -13.6286039352417
    4. '<|end|>' → logprob: -14.2536039352417
    5. '_' → logprob: -14.5036039352417
    6. '=[]' → logprob: -14.6286039352417
    7. ')' → logprob: -15.1286039352417
    8. ' =[' → logprob: -15.7536039352417
    9. 's' → logprob: -16.003602981567383
    10. ' =)' → logprob: -16.503602981567383

Token 76: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4244705140590668
    2. '[d' → logprob: -1.4244705438613892
    3. '[]' → logprob: -2.5494704246520996
    4. '[i' → logprob: -3.7994704246520996
    5. ' [' → logprob: -6.2994704246521
    6. '[idx' → logprob: -7.9244704246521
    7. '[x' → logprob: -8.299470901489258
    8. '[int' → logprob: -8.424470901489258
    9. '[token' → logprob: -8.674470901489258
    10. '[index' → logprob: -8.799470901489258

Token 77: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002427025232464075
    2. 'idx' → logprob: -6.252427101135254
    3. ' i' → logprob: -8.252427101135254
    4. 'index' → logprob: -8.502427101135254
    5. ' idx' → logprob: -11.127427101135254
    6. '```' → logprob: -11.877427101135254
    7. '(i' → logprob: -13.127427101135254
    8. 'ix' → logprob: -13.377427101135254
    9. ' ' → logprob: -13.752427101135254
    10. '[i' → logprob: -14.002427101135254

Token 78: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06196959316730499
    2. 'for' → logprob: -2.811969518661499
    3. ' ' → logprob: -13.311969757080078
    4. '	for' → logprob: -16.061969757080078
    5. 'x' → logprob: -16.561969757080078
    6. '
' → logprob: -17.311969757080078
    7. 'd' → logprob: -17.436969757080078
    8. ' in' → logprob: -18.186969757080078
    9. '```' → logprob: -18.186969757080078
    10. ' 
' → logprob: -19.061969757080078

Token 79: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12811222672462463
    2. 'range' → logprob: -2.253112316131592
    3. ' i' → logprob: -4.378112316131592
    4. 'i' → logprob: -6.003112316131592
    5. ' in' → logprob: -9.378111839294434
    6. 'indices' → logprob: -11.253111839294434
    7. ' digits' → logprob: -11.628111839294434
    8. ' ' → logprob: -11.878111839294434
    9. '(range' → logprob: -11.878111839294434
    10. ' xrange' → logprob: -12.003111839294434

Token 80: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3401447534561157
    2. 'in' → logprob: -1.4651447534561157
    3. 'range' → logprob: -3.465144634246826
    4. ' in' → logprob: -3.840144634246826
    5. ',d' → logprob: -5.840144634246826
    6. ' range' → logprob: -7.215144634246826
    7. ',in' → logprob: -8.090145111083984
    8. ' ,' → logprob: -8.340145111083984
    9. ',i' → logprob: -9.840145111083984
    10. '(range' → logprob: -10.215145111083984

Token 81: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519976496696472
    2. ' in' → logprob: -1.501997709274292
    3. 'n' → logprob: -10.626997947692871
    4. 'enumer' → logprob: -10.626997947692871
    5. ',' → logprob: -11.626997947692871
    6. '<|end|>' → logprob: -12.626997947692871
    7. ' ' → logprob: -13.751997947692871
    8. 'x' → logprob: -14.001997947692871
    9. 'ex' → logprob: -14.251997947692871
    10. 's' → logprob: -14.501997947692871

Token 82: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.01816480979323387
    2. ' enumerate' → logprob: -4.01816463470459
    3. 'en' → logprob: -11.14316463470459
    4. 'enum' → logprob: -16.143165588378906
    5. '```' → logprob: -16.143165588378906
    6. 'e' → logprob: -17.143165588378906
    7. 'Enumer' → logprob: -18.143165588378906
    8. 'range' → logprob: -18.393165588378906
    9. ' enumer' → logprob: -18.643165588378906
    10. '(en' → logprob: -18.768165588378906

Token 83: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.011797028593719006
    2. 'digits' → logprob: -4.511796951293945
    3. ' digits' → logprob: -7.386796951293945
    4. ' (' → logprob: -9.386796951293945
    5. '(' → logprob: -10.386796951293945
    6. 'd' → logprob: -11.886796951293945
    7. ')' → logprob: -12.136796951293945
    8. ']' → logprob: -13.886796951293945
    9. '_digits' → logprob: -14.886796951293945
    10. ')d' → logprob: -14.886796951293945

Token 84: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0006677598576061428
    2. 'its' → logprob: -7.500667572021484
    3. 'digits' → logprob: -9.625667572021484
    4. 'igts' → logprob: -10.375667572021484
    5. 'ig' → logprob: -11.125667572021484
    6. 'igit' → logprob: -14.250667572021484
    7. '```' → logprob: -14.750667572021484
    8. 'i' → logprob: -14.750667572021484
    9. 'g' → logprob: -15.250667572021484
    10. 'it' → logprob: -15.750667572021484

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006869178730994463
    2. ' if' → logprob: -5.381869316101074
    3. 'if' → logprob: -6.131869316101074
    4. ' )' → logprob: -9.631869316101074
    5. ')
' → logprob: -12.756869316101074
    6. '   ' → logprob: -13.006869316101074
    7. ']' → logprob: -13.631869316101074
    8. ' ' → logprob: -15.131869316101074
    9. '
' → logprob: -15.256869316101074
    10. 'If' → logprob: -15.381869316101074

Token 86: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03804252669215202
    2. 'if' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.413042068481445
    4. '   ' → logprob: -15.288042068481445
    5. ')' → logprob: -15.788042068481445
    6. '	if' → logprob: -16.913042068481445
    7. ' in' → logprob: -17.788042068481445
    8. '    ' → logprob: -18.038042068481445
    9. '  ' → logprob: -18.038042068481445
    10. ',' → logprob: -18.538042068481445

Token 87: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2014138251543045
    2. 'd' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.076414108276367
    4. '   ' → logprob: -16.076414108276367
    5. '	d' → logprob: -16.576414108276367
    6. ')d' → logprob: -17.451414108276367
    7. ' ' → logprob: -18.076414108276367
    8. '    ' → logprob: -18.326414108276367
    9. '  ' → logprob: -18.576414108276367
    10. '```' → logprob: -18.701414108276367

Token 88: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4401244819164276
    2. ' ==' → logprob: -1.31512451171875
    3. '==-' → logprob: -2.44012451171875
    4. ']==' → logprob: -8.19012451171875
    5. '==
' → logprob: -9.81512451171875
    6. '<' → logprob: -10.56512451171875
    7. ')==' → logprob: -10.56512451171875
    8. '=' → logprob: -10.69012451171875
    9. ' ' → logprob: -11.44012451171875
    10. '```' → logprob: -11.56512451171875

Token 89: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12695257365703583
    2. '-' → logprob: -2.126952648162842
    3. ' ' → logprob: -10.626952171325684
    4. '−' → logprob: -17.126953125
    5. ' ' → logprob: -17.251953125
    6. '  ' → logprob: -17.501953125
    7. '```' → logprob: -17.501953125
    8. '   ' → logprob: -17.626953125
    9. ')' → logprob: -18.126953125
    10. '-m' → logprob: -18.126953125

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '<|end|>' → logprob: -17.125
    4. '```' → logprob: -18.375
    5. '１' → logprob: -19.1875
    6. '>' → logprob: -19.625
    7. '१' → logprob: -19.8125
    8. '...' → logprob: -20.0
    9. '۱' → logprob: -20.25
    10. '2' → logprob: -20.375

Token 91: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.273621405242011e-05
    2. ' ]' → logprob: -10.375032424926758
    3. ']
' → logprob: -14.375032424926758
    4. ')]' → logprob: -14.500032424926758
    5. ']

' → logprob: -15.500032424926758
    6. ')' → logprob: -15.875032424926758
    7. '`]' → logprob: -17.000032424926758
    8. '()]' → logprob: -18.000032424926758
    9. '']' → logprob: -18.125032424926758
    10. ',' → logprob: -18.125032424926758

Token 92: 'missing' (ID: 68892)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09428583830595016
    2. 'for' → logprob: -3.844285726547241
    3. 'result' → logprob: -3.844285726547241
    4. 'answers' → logprob: -4.09428596496582
    5. 'possible' → logprob: -5.21928596496582
    6. 'if' → logprob: -5.46928596496582
    7. 'results' → logprob: -5.46928596496582
    8. 'answer' → logprob: -5.59428596496582
    9. 'n' → logprob: -6.21928596496582
    10. '_' → logprob: -6.34428596496582

Token 93: '_digits' (ID: 108638)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.3568989038467407
    2. '_' → logprob: -1.9818989038467407
    3. '<|end|>' → logprob: -2.106898784637451
    4. 'indices' → logprob: -4.481898784637451
    5. '=' → logprob: -5.231898784637451
    6. ' =' → logprob: -5.231898784637451
    7. '<|end|>' → logprob: -5.981898784637451
    8. '_indexes' → logprob: -6.106898784637451
    9. '_digits' → logprob: -6.106898784637451
    10. '_values' → logprob: -6.481898784637451

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00219735992141068
    2. '=' → logprob: -6.127197265625
    3. '=[]' → logprob: -12.502197265625
    4. ' ' → logprob: -12.627197265625
    5. ')' → logprob: -13.377197265625
    6. ' =[' → logprob: -13.752197265625
    7. '<|end|>' → logprob: -14.252197265625
    8. '[' → logprob: -14.502197265625
    9. ']' → logprob: -15.127197265625
    10. ',' → logprob: -15.252197265625

Token 95: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0650988295674324
    2. ' [' → logprob: -2.940098762512207
    3. '[d' → logprob: -5.190098762512207
    4. '[i' → logprob: -5.815098762512207
    5. '[list' → logprob: -8.315098762512207
    6. '[num' → logprob: -8.690098762512207
    7. '[s' → logprob: -9.065098762512207
    8. '[int' → logprob: -9.065098762512207
    9. '[len' → logprob: -9.190098762512207
    10. '[k' → logprob: -9.440098762512207

Token 96: 'i' (ID: 72)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10232359915971756
    2. 'i' → logprob: -2.352323532104492
    3. 'x' → logprob: -6.727323532104492
    4. ' d' → logprob: -7.352323532104492
    5. ' i' → logprob: -8.852323532104492
    6. 'digit' → logprob: -10.102323532104492
    7. '   ' → logprob: -10.477323532104492
    8. 'str' → logprob: -11.352323532104492
    9. 'j' → logprob: -11.352323532104492
    10. ' ' → logprob: -11.477323532104492

Token 97: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014199352823197842
    2. 'for' → logprob: -4.264199256896973
    3. '+' → logprob: -11.014199256896973
    4. ' ' → logprob: -11.014199256896973
    5. '	for' → logprob: -14.139199256896973
    6. ' in' → logprob: -14.389199256896973
    7. '
' → logprob: -14.764199256896973
    8. '```' → logprob: -15.389199256896973
    9. 'd' → logprob: -15.639199256896973
    10. ' 
' → logprob: -16.13920021057129

Token 98: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164687134325504
    2. ' range' → logprob: -4.264164924621582
    3. 'digits' → logprob: -15.014164924621582
    4. '(range' → logprob: -15.264164924621582
    5. 'used' → logprob: -15.264164924621582
    6. '	range' → logprob: -16.014163970947266
    7. 'ran' → logprob: -16.514163970947266
    8. 'digit' → logprob: -16.639163970947266
    9. 'd' → logprob: -17.014163970947266
    10. ' ' → logprob: -17.514163970947266

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39698508381843567
    2. 'in' → logprob: -1.1469850540161133
    3. 'range' → logprob: -4.646985054016113
    4. ' range' → logprob: -7.896985054016113
    5. ' ' → logprob: -9.896985054016113
    6. '
' → logprob: -11.521985054016113
    7. ',' → logprob: -11.646985054016113
    8. 'd' → logprob: -11.771985054016113
    9. 'not' → logprob: -12.021985054016113
    10. '```' → logprob: -12.521985054016113

Token 100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029753385111689568
    2. ' range' → logprob: -3.5297534465789795
    3. 'set' → logprob: -13.279753684997559
    4. '[' → logprob: -15.279753684997559
    5. '	range' → logprob: -15.404753684997559
    6. 'digits' → logprob: -15.654753684997559
    7. 'used' → logprob: -15.654753684997559
    8. '(range' → logprob: -16.029752731323242
    9. ' ' → logprob: -16.279752731323242
    10. 'ran' → logprob: -16.779752731323242

Token 101: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015079115517437458
    2. '10' → logprob: -4.265079021453857
    3. '1' → logprob: -7.015079021453857
    4. '9' → logprob: -11.515079498291016
    5. ' (' → logprob: -12.515079498291016
    6. '0' → logprob: -13.390079498291016
    7. '(len' → logprob: -14.140079498291016
    8. ')' → logprob: -14.640079498291016
    9. '```' → logprob: -14.765079498291016
    10. '(
' → logprob: -17.015079498291016

Token 102: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.043010152876377106
    2. '1' → logprob: -3.1680102348327637
    3. '0' → logprob: -11.793009757995605
    4. ' ' → logprob: -13.543009757995605
    5. '(' → logprob: -13.668009757995605
    6. '9' → logprob: -14.168009757995605
    7. ')' → logprob: -15.918009757995605
    8. '```' → logprob: -16.418010711669922
    9. '１０' → logprob: -17.418010711669922
    10. 'len' → logprob: -17.418010711669922

Token 103: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.388850599527359
    2. ',' → logprob: -1.1388505697250366
    3. ' ,' → logprob: -6.263850688934326
    4. '10' → logprob: -9.888850212097168
    5. ' ' → logprob: -10.888850212097168
    6. '1' → logprob: -13.013850212097168
    7. '9' → logprob: -13.513850212097168
    8. '000' → logprob: -16.138851165771484
    9. ',len' → logprob: -16.513851165771484
    10. '00' → logprob: -16.638851165771484

Token 104: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -17.750001907348633
    4. '9' → logprob: -17.750001907348633
    5. '0' → logprob: -18.000001907348633
    6. '```' → logprob: -18.000001907348633
    7. '>' → logprob: -18.625001907348633
    8. '100' → logprob: -18.625001907348633
    9. '

' → logprob: -18.875001907348633
    10. '1' → logprob: -19.125001907348633

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001105762057704851
    2. ' )' → logprob: -10.125110626220703
    3. ' if' → logprob: -10.125110626220703
    4. 'if' → logprob: -11.000110626220703
    5. '10' → logprob: -12.250110626220703
    6. '0' → logprob: -12.250110626220703
    7. '+' → logprob: -13.375110626220703
    8. ')
' → logprob: -14.125110626220703
    9. ')]' → logprob: -14.250110626220703
    10. ']' → logprob: -14.625110626220703

Token 106: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08931946754455566
    2. 'if' → logprob: -2.4643194675445557
    3. ')' → logprob: -8.589319229125977
    4. '10' → logprob: -9.339319229125977
    5. ']' → logprob: -9.964319229125977
    6. '   ' → logprob: -10.714319229125977
    7. '+' → logprob: -11.464319229125977
    8. '
' → logprob: -11.589319229125977
    9. '```' → logprob: -12.214319229125977
    10. '1' → logprob: -12.839319229125977

Token 107: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7011232376098633
    2. 'not' → logprob: -0.7011232376098633
    3. 'i' → logprob: -4.951123237609863
    4. ' i' → logprob: -7.326123237609863
    5. ' used' → logprob: -9.201123237609863
    6. 'used' → logprob: -9.451123237609863
    7. '   ' → logprob: -11.576123237609863
    8. '	not' → logprob: -11.701123237609863
    9. '(not' → logprob: -12.201123237609863
    10. ' ' → logprob: -12.451123237609863

Token 108: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.1269282102584839
    2. ' used' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.501928329467773
    4. '   ' → logprob: -17.376928329467773
    5. '.used' → logprob: -18.126928329467773
    6. 'Used' → logprob: -18.251928329467773
    7. 'use' → logprob: -18.376928329467773
    8. '_used' → logprob: -18.751928329467773
    9. '
' → logprob: -19.126928329467773
    10. ' ' → logprob: -19.501928329467773

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012145215878263116
    2. ']' → logprob: -6.751214504241943
    3. '[' → logprob: -10.501214981079102
    4. '(i' → logprob: -11.376214981079102
    5. '[d' → logprob: -13.126214981079102
    6. ')]' → logprob: -13.251214981079102
    7. '])' → logprob: -14.376214981079102
    8. ' ]' → logprob: -14.626214981079102
    9. ')' → logprob: -15.626214981079102
    10. ' [' → logprob: -15.751214981079102

Token 110: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000499297515489161
    2. ' ]' → logprob: -7.625499248504639
    3. ')]' → logprob: -11.500499725341797
    4. ']
' → logprob: -15.125499725341797
    5. '`]' → logprob: -15.375499725341797
    6. ']

' → logprob: -16.000499725341797
    7. '()]' → logprob: -16.000499725341797
    8. ' and' → logprob: -16.625499725341797
    9. ')' → logprob: -16.625499725341797
    10. '}]' → logprob: -16.875499725341797

Token 111: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20348598062992096
    2. ':' → logprob: -2.3284859657287598
    3. 'def' → logprob: -3.4534859657287598
    4. ' for' → logprob: -4.07848596572876
    5. '#' → logprob: -4.82848596572876
    6. 'assert' → logprob: -5.20348596572876
    7. 'digits' → logprob: -5.70348596572876
    8. 'result' → logprob: -5.95348596572876
    9. 'possible' → logprob: -6.20348596572876
    10. ')' → logprob: -6.45348596572876

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09497176110744476
    2. '=' → logprob: -2.7199716567993164
    3. '(' → logprob: -4.094971656799316
    4. '<|end|>' → logprob: -5.219971656799316
    5. ')' → logprob: -6.719971656799316
    6. ' ' → logprob: -7.219971656799316
    7. '_' → logprob: -8.594971656799316
    8. ' +=' → logprob: -8.719971656799316
    9. ',' → logprob: -9.844971656799316
    10. '_tokens' → logprob: -9.969971656799316

Token 113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006378580583259463
    2. ' ' → logprob: -7.375638008117676
    3. '[' → logprob: -11.750638008117676
    4. '1' → logprob: -14.375638008117676
    5. 'sum' → logprob: -14.375638008117676
    6. 'len' → logprob: -14.500638008117676
    7. ' [' → logprob: -15.125638008117676
    8. '(' → logprob: -15.375638008117676
    9. '[]' → logprob: -16.06313705444336
    10. '   ' → logprob: -16.06313705444336

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00044949972652830184
    2. 'len' → logprob: -8.375449180603027
    3. '[' → logprob: -9.375449180603027
    4. ' ' → logprob: -9.500449180603027
    5. 'sum' → logprob: -10.375449180603027
    6. '1' → logprob: -11.250449180603027
    7. '[len' → logprob: -12.750449180603027
    8. 'int' → logprob: -13.000449180603027
    9. '   ' → logprob: -14.125449180603027
    10. ' len' → logprob: -14.500449180603027

Token 115: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06059017777442932
    2. 'for' → logprob: -3.4355902671813965
    3. 'from' → logprob: -4.0605902671813965
    4. 'import' → logprob: -5.4355902671813965
    5. '<|end|>' → logprob: -5.5605902671813965
    6. '
' → logprob: -7.1855902671813965
    7. ' for' → logprob: -8.935589790344238
    8. '```' → logprob: -9.810589790344238
    9. ' def' → logprob: -10.560589790344238
    10. ' from' → logprob: -10.560589790344238

Token 116: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04859452322125435
    2. 'for' → logprob: -3.5485944747924805
    3. '<|end|>' → logprob: -4.2985944747924805
    4. 'from' → logprob: -5.9235944747924805
    5. 'import' → logprob: -6.6735944747924805
    6. ' for' → logprob: -7.4235944747924805
    7. '
' → logprob: -8.92359447479248
    8. ')' → logprob: -9.17359447479248
    9. ' def' → logprob: -9.67359447479248
    10. '```' → logprob: -9.67359447479248

Token 117: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.16749891638755798
    2. ' back' → logprob: -1.9174989461898804
    3. ' solve' → logprob: -5.16749906539917
    4. 'dfs' → logprob: -6.79249906539917
    5. ' search' → logprob: -8.917498588562012
    6. ' count' → logprob: -9.167498588562012
    7. ' fill' → logprob: -9.417498588562012
    8. ' rec' → logprob: -10.417498588562012
    9. 'solve' → logprob: -10.792498588562012
    10. ' assign' → logprob: -11.417498588562012

Token 118: '(pos' (ID: 24566)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -1.0242841243743896
    2. '(depth' → logprob: -1.1492841243743896
    3. '(index' → logprob: -1.7742841243743896
    4. '(' → logprob: -2.1492841243743896
    5. '(pos' → logprob: -3.6492841243743896
    6. '(i' → logprob: -5.524284362792969
    7. ' (' → logprob: -5.774284362792969
    8. '(level' → logprob: -7.149284362792969
    9. '(k' → logprob: -7.149284362792969
    10. '(len' → logprob: -7.274284362792969

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01325187087059021
    2. ',' → logprob: -4.513251781463623
    3. ')' → logprob: -7.013251781463623
    4. ' ):' → logprob: -7.513251781463623
    5. '):
' → logprob: -7.888251781463623
    6. ',pos' → logprob: -8.263252258300781
    7. ':' → logprob: -10.138252258300781
    8. '+' → logprob: -10.763252258300781
    9. ' ,' → logprob: -11.263252258300781
    10. '=' → logprob: -12.138252258300781

Token 120: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31047993898391724
    2. '   ' → logprob: -1.5604798793792725
    3. '<|end|>' → logprob: -2.9354798793792725
    4. 'if' → logprob: -6.185480117797852
    5. ' ' → logprob: -7.560480117797852
    6. '<|end|>' → logprob: -8.685480117797852
    7. ' 
' → logprob: -8.935480117797852
    8. ' for' → logprob: -9.060480117797852
    9. '	if' → logprob: -9.060480117797852
    10. '    
' → logprob: -9.060480117797852

Token 121: ' global' (ID: 5466)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5332089066505432
    2. ' if' → logprob: -1.0332088470458984
    3. 'global' (adapté à ' global') → logprob: -3.4082088470458984
    4. '   ' → logprob: -3.7832088470458984
    5. ' global' → logprob: -6.533208847045898
    6. '	if' → logprob: -9.533208847045898
    7. ' ' → logprob: -10.908208847045898
    8. '	global' → logprob: -11.408208847045898
    9. 'for' → logprob: -12.908208847045898
    10. '
' → logprob: -13.033208847045898

Token 122: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.5577775128767826e-06
    2. ' count' → logprob: -12.125005722045898
    3. 'pos' → logprob: -18.1250057220459
    4. ' ' → logprob: -20.0000057220459
    5. 'counter' → logprob: -20.1250057220459
    6. '
' → logprob: -20.3750057220459
    7. 'c' → logprob: -22.0000057220459
    8. '_count' → logprob: -22.1250057220459
    9. '	count' → logprob: -22.2500057220459
    10. 'counts' → logprob: -22.2500057220459

Token 123: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10960191488265991
    2. '   ' → logprob: -2.8596019744873047
    3. '<|end|>' → logprob: -3.4846019744873047
    4. ' if' → logprob: -5.359601974487305
    5. ':
' → logprob: -5.859601974487305
    6. '):' → logprob: -6.484601974487305
    7. '
' → logprob: -6.734601974487305
    8. ' :' → logprob: -6.734601974487305
    9. ',' → logprob: -6.984601974487305
    10. ')' → logprob: -7.109601974487305

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6059204936027527
    2. ' if' → logprob: -0.8559204936027527
    3. '<|end|>' → logprob: -3.8559205532073975
    4. 'if' → logprob: -4.855920314788818
    5. '    
' → logprob: -8.730920791625977
    6. '    ' → logprob: -8.980920791625977
    7. ' ' → logprob: -9.480920791625977
    8. '	if' → logprob: -9.605920791625977
    9. ' 
' → logprob: -10.105920791625977
    10. ',' → logprob: -10.605920791625977

Token 125: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00019769940990954638
    2. ' if' → logprob: -8.625197410583496
    3. '   ' → logprob: -11.125197410583496
    4. 'for' → logprob: -13.125197410583496
    5. 'If' → logprob: -14.750197410583496
    6. '```' → logprob: -14.875197410583496
    7. '	if' → logprob: -15.500197410583496
    8. ' ' → logprob: -16.250198364257812
    9. 'i' → logprob: -16.500198364257812
    10. '<|end|>' → logprob: -16.625198364257812

Token 126: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.20141392946243286
    2. 'pos' → logprob: -1.701413869857788
    3. '	pos' → logprob: -14.701414108276367
    4. '(pos' → logprob: -16.701414108276367
    5. '   ' → logprob: -16.826414108276367
    6. ' ' → logprob: -17.201414108276367
    7. ' ' → logprob: -17.951414108276367
    8. '_pos' → logprob: -18.201414108276367
    9. ' len' → logprob: -18.326414108276367
    10. '[pos' → logprob: -18.576414108276367

Token 127: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28123044967651367
    2. ' ==' → logprob: -1.4062304496765137
    3. '>=' → logprob: -9.656230926513672
    4. ' >=' → logprob: -11.906230926513672
    5. '=' → logprob: -13.031230926513672
    6. '===' → logprob: -13.406230926513672
    7. ']==' → logprob: -13.656230926513672
    8. ')' → logprob: -14.031230926513672
    9. ')==' → logprob: -14.031230926513672
    10. '>' → logprob: -14.281230926513672

Token 128: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.7610454708337784e-05
    2. ' len' → logprob: -10.500027656555176
    3. '9' → logprob: -16.87502670288086
    4. '   ' → logprob: -17.37502670288086
    5. '(len' → logprob: -18.62502670288086
    6. '=len' → logprob: -18.62502670288086
    7. '	len' → logprob: -19.87502670288086
    8. '[len' → logprob: -19.87502670288086
    9. '10' → logprob: -21.12502670288086
    10. '<len' → logprob: -21.12502670288086

Token 129: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.5954712075181305e-05
    2. 'missing' → logprob: -10.250036239624023
    3. '(' → logprob: -14.625036239624023
    4. ' missing' → logprob: -16.750036239624023
    5. '_missing' → logprob: -19.000036239624023
    6. 'Missing' → logprob: -20.000036239624023
    7. '	m' → logprob: -20.875036239624023
    8. 'miss' → logprob: -21.125036239624023
    9. 'm' → logprob: -21.625036239624023
    10. ' (' → logprob: -21.875036239624023

Token 130: 'issing' (ID: 20125)
  Prédit: 'issing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issing' → logprob: -1.0802738870552275e-05
    2. 'missing' → logprob: -11.50001049041748
    3. 'iss' → logprob: -15.12501049041748
    4. 'ISSING' → logprob: -15.50001049041748
    5. '_missing' → logprob: -17.125011444091797
    6. 'issed' → logprob: -17.500011444091797
    7. '
' → logprob: -18.125011444091797
    8. '```' → logprob: -18.875011444091797
    9. 'is' → logprob: -19.250011444091797
    10. 'indices' → logprob: -19.375011444091797

Token 131: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.00020663968462031335
    2. 'indices' → logprob: -8.50020694732666
    3. 'Indices' → logprob: -13.62520694732666
    4. '_digits' → logprob: -14.75020694732666
    5. 'missing' → logprob: -14.75020694732666
    6. '_missing' → logprob: -15.25020694732666
    7. '_' → logprob: -15.37520694732666
    8. '"indices' → logprob: -15.62520694732666
    9. ' indices' → logprob: -15.75020694732666
    10. ')' → logprob: -16.750205993652344

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036311924923211336
    2. '):
' → logprob: -5.628631114959717
    3. ':' → logprob: -11.128631591796875
    4. ')' → logprob: -11.253631591796875
    5. ' ):' → logprob: -13.003631591796875
    6. '   ' → logprob: -15.253631591796875
    7. '):

' → logprob: -15.253631591796875
    8. '):
' → logprob: -15.378631591796875
    9. ''):' → logprob: -16.503631591796875
    10. ':
' → logprob: -16.753631591796875

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2354205995798111
    2. '   ' → logprob: -1.98542058467865
    3. '
' → logprob: -3.3604207038879395
    4. 'count' → logprob: -3.4854207038879395
    5. '    
' → logprob: -5.6104207038879395
    6. ' count' → logprob: -7.1104207038879395
    7. '        
' → logprob: -7.1104207038879395
    8. 'return' → logprob: -7.8604207038879395
    9. '	count' → logprob: -8.235420227050781
    10. '<|end|>' → logprob: -8.360420227050781

Token 134: ' a' (ID: 261)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06046326830983162
    2. '   ' → logprob: -2.9354631900787354
    3. '       ' → logprob: -5.9354634284973145
    4. ' count' → logprob: -6.1854634284973145
    5. '
' → logprob: -7.3104634284973145
    6. 'for' → logprob: -9.810462951660156
    7. 'if' → logprob: -10.435462951660156
    8. '	count' → logprob: -10.810462951660156
    9. ' ' → logprob: -10.935462951660156
    10. '#' → logprob: -10.935462951660156

Token 135: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4349193572998047
    2. '+=' → logprob: -2.1849193572998047
    3. '=' → logprob: -2.5599193572998047
    4. ' +=' → logprob: -2.6849193572998047
    5. ',b' → logprob: -3.3099193572998047
    6. ',' → logprob: -4.559919357299805
    7. '+' → logprob: -5.059919357299805
    8. '   ' → logprob: -5.059919357299805
    9. ' +' → logprob: -5.309919357299805
    10. ' ' → logprob: -5.434919357299805

Token 136: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.03639170899987221
    2. ' =' → logprob: -3.9113917350769043
    3. ',' → logprob: -5.161391735076904
    4. 'c' → logprob: -5.161391735076904
    5. ',b' → logprob: -6.286391735076904
    6. '=' → logprob: -7.286391735076904
    7. ' ,' → logprob: -7.911391735076904
    8. ',s' → logprob: -8.036391258239746
    9. ',a' → logprob: -8.036391258239746
    10. '+c' → logprob: -9.161391258239746

Token 137: ',d' (ID: 26159)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16071036458015442
    2. '=' → logprob: -2.785710334777832
    3. ',' → logprob: -3.035710334777832
    4. ',d' → logprob: -3.660710334777832
    5. ',c' → logprob: -5.285710334777832
    6. ',e' → logprob: -6.160710334777832
    7. ',a' → logprob: -6.660710334777832
    8. ',b' → logprob: -6.785710334777832
    9. ',s' → logprob: -6.785710334777832
    10. ',f' → logprob: -7.785710334777832

Token 138: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.05884938687086105
    2. ' =' → logprob: -3.183849334716797
    3. '=' → logprob: -4.558849334716797
    4. ',' → logprob: -5.558849334716797
    5. 'e' → logprob: -7.058849334716797
    6. '=e' → logprob: -8.808849334716797
    7. ',a' → logprob: -9.433849334716797
    8. '   ' → logprob: -10.183849334716797
    9. ',d' → logprob: -10.433849334716797
    10. ' ,' → logprob: -10.433849334716797

Token 139: ',f' (ID: 38733)
  Prédit: ',f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',f' → logprob: -0.10423461347818375
    2. ' =' → logprob: -3.1042346954345703
    3. '=' → logprob: -3.6042346954345703
    4. ',' → logprob: -3.7292346954345703
    5. 'f' → logprob: -6.47923469543457
    6. ' ,' → logprob: -7.97923469543457
    7. '```' → logprob: -8.85423469543457
    8. ',e' → logprob: -9.10423469543457
    9. '=f' → logprob: -9.35423469543457
    10. ',g' → logprob: -9.47923469543457

Token 140: ',g' (ID: 44461)
  Prédit: ',g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',g' → logprob: -0.1793576180934906
    2. ' =' → logprob: -2.6793575286865234
    3. ',' → logprob: -2.9293575286865234
    4. '=' → logprob: -3.3043575286865234
    5. 'g' → logprob: -5.804357528686523
    6. ' ,' → logprob: -6.554357528686523
    7. ',G' → logprob: -8.304357528686523
    8. '=g' → logprob: -8.679357528686523
    9. 'a' → logprob: -9.554357528686523
    10. ',a' → logprob: -9.679357528686523

Token 141: ',h' (ID: 42751)
  Prédit: ',h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',h' → logprob: -0.006370251532644033
    2. ',i' → logprob: -6.0063700675964355
    3. 'h' → logprob: -6.3813700675964355
    4. ',' → logprob: -6.8813700675964355
    5. ' =' → logprob: -7.2563700675964355
    6. '=' → logprob: -7.8813700675964355
    7. 'i' → logprob: -11.131370544433594
    8. ' ,' → logprob: -11.506370544433594
    9. ',g' → logprob: -11.506370544433594
    10. '```' → logprob: -11.756370544433594

Token 142: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.010122229345142841
    2. ',' → logprob: -5.385122299194336
    3. '=' → logprob: -5.635122299194336
    4. 'i' → logprob: -6.885122299194336
    5. ' =' → logprob: -7.385122299194336
    6. ',I' → logprob: -8.635122299194336
    7. ',j' → logprob: -11.010122299194336
    8. 'I' → logprob: -11.010122299194336
    9. ',c' → logprob: -11.635122299194336
    10. '=i' → logprob: -11.885122299194336

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2545537054538727
    2. '=' → logprob: -1.5045536756515503
    3. ',' → logprob: -6.50455379486084
    4. '[' → logprob: -7.50455379486084
    5. 's' → logprob: -9.00455379486084
    6. ')' → logprob: -10.00455379486084
    7. '=sum' → logprob: -10.12955379486084
    8. ' ' → logprob: -10.25455379486084
    9. '=[' → logprob: -10.37955379486084
    10. '<|end|>' → logprob: -10.50455379486084

Token 144: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.004127672873437405
    2. ' digits' → logprob: -5.504127502441406
    3. '[' → logprob: -10.129127502441406
    4. '   ' → logprob: -12.879127502441406
    5. 'digit' → logprob: -13.379127502441406
    6. 'map' → logprob: -13.504127502441406
    7. ' [' → logprob: -14.004127502441406
    8. 'dig' → logprob: -14.629127502441406
    9. 'tuple' → logprob: -14.629127502441406
    10. ' ' → logprob: -15.254127502441406

Token 145: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7102646231651306
    2. '       ' → logprob: -0.9602646231651306
    3. '<|end|>' → logprob: -2.3352646827697754
    4. '[' → logprob: -4.585264682769775
    5. '        
' → logprob: -5.835264682769775
    6. '[]' → logprob: -6.085264682769775
    7. '<|end|>' → logprob: -6.335264682769775
    8. ',' → logprob: -6.460264682769775
    9. '[]
' → logprob: -6.585264682769775
    10. '[
' → logprob: -6.585264682769775

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024839410558342934
    2. '
' → logprob: -4.524839401245117
    3. '<|end|>' → logprob: -5.024839401245117
    4. '        
' → logprob: -5.524839401245117
    5. ' if' → logprob: -7.274839401245117
    6. '   ' → logprob: -7.399839401245117
    7. 'if' → logprob: -7.524839401245117
    8. ' ' → logprob: -8.399839401245117
    9. ',' → logprob: -8.524839401245117
    10. '  
' → logprob: -9.024839401245117

Token 147: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.33940520882606506
    2. '       ' → logprob: -1.5894051790237427
    3. 'sum' → logprob: -3.8394052982330322
    4. ' if' → logprob: -3.8394052982330322
    5. 's' → logprob: -4.589405059814453
    6. 'x' → logprob: -4.839405059814453
    7. 'abc' → logprob: -5.464405059814453
    8. 'total' → logprob: -6.089405059814453
    9. 'for' → logprob: -6.214405059814453
    10. 'num' → logprob: -6.214405059814453

Token 148: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3420620262622833
    2. ' a' → logprob: -1.467061996459961
    3. ' (' → logprob: -3.592061996459961
    4. '(a' → logprob: -3.717061996459961
    5. '   ' → logprob: -5.842061996459961
    6. '(' → logprob: -6.342061996459961
    7. ' ' → logprob: -6.717061996459961
    8. '((' → logprob: -7.842061996459961
    9. '  ' → logprob: -8.592061996459961
    10. '(
' → logprob: -9.217061996459961

Token 149: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3192940056324005
    2. ' +' → logprob: -1.8192939758300781
    3. '+b' → logprob: -2.694293975830078
    4. '*' → logprob: -3.194293975830078
    5. ' *' → logprob: -7.569293975830078
    6. '+B' → logprob: -7.569293975830078
    7. '*b' → logprob: -7.694293975830078
    8. '-' → logprob: -8.069293975830078
    9. '!=' → logprob: -9.069293975830078
    10. '+d' → logprob: -9.444293975830078

Token 150: '100' (ID: 1353)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003367231460288167
    2. 'i' → logprob: -6.6283674240112305
    3. 'd' → logprob: -7.6283674240112305
    4. 'e' → logprob: -7.6283674240112305
    5. 'f' → logprob: -8.12836742401123
    6. 'c' → logprob: -8.37836742401123
    7. 'a' → logprob: -8.50336742401123
    8. 'h' → logprob: -9.00336742401123
    9. 'g' → logprob: -9.37836742401123
    10. '9' → logprob: -10.62836742401123

Token 151: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11718801409006119
    2. ' +' → logprob: -2.367187976837158
    3. '+b' → logprob: -4.242187976837158
    4. '+B' → logprob: -6.117187976837158
    5. '0' → logprob: -9.742188453674316
    6. 'b' → logprob: -9.742188453674316
    7. '+j' → logprob: -10.742188453674316
    8. ' ' → logprob: -11.117188453674316
    9. '<|end|>' → logprob: -11.242188453674316
    10. 'B' → logprob: -11.492188453674316

Token 152: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00031055594445206225
    2. ' b' → logprob: -8.125310897827148
    3. ' ' → logprob: -12.125310897827148
    4. 'g' → logprob: -12.875310897827148
    5. 'd' → logprob: -13.250310897827148
    6. '   ' → logprob: -13.875310897827148
    7. '  ' → logprob: -14.125310897827148
    8. 'c' → logprob: -14.250310897827148
    9. 'a' → logprob: -15.000310897827148
    10. '100' → logprob: -15.000310897827148

Token 153: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.001729921787045896
    2. ' *' → logprob: -6.626729965209961
    3. '100' → logprob: -8.501729965209961
    4. '>' → logprob: -10.626729965209961
    5. '+' → logprob: -10.626729965209961
    6. '<|end|>' → logprob: -10.626729965209961
    7. '00' → logprob: -10.751729965209961
    8. ')' → logprob: -10.751729965209961
    9. '*>' → logprob: -10.876729965209961
    10. ' ' → logprob: -11.001729965209961

Token 154: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0994090661406517
    2. 'a' → logprob: -2.9744091033935547
    3. '10' → logprob: -3.7244091033935547
    4. 'c' → logprob: -4.349409103393555
    5. 'd' → logprob: -6.099409103393555
    6. 'g' → logprob: -6.474409103393555
    7. 'i' → logprob: -6.474409103393555
    8. ' ' → logprob: -8.224409103393555
    9. 't' → logprob: -9.099409103393555
    10. 'e' → logprob: -9.099409103393555

Token 155: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0032070616725832224
    2. ' +' → logprob: -5.878207206726074
    3. '+c' → logprob: -8.003207206726074
    4. 'c' → logprob: -11.003207206726074
    5. '<|end|>' → logprob: -11.003207206726074
    6. '```' → logprob: -11.503207206726074
    7. '100' → logprob: -11.753207206726074
    8. '+C' → logprob: -12.753207206726074
    9. '+a' → logprob: -13.503207206726074
    10. ' ' → logprob: -13.503207206726074

Token 156: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014585316239390522
    2. ' c' → logprob: -8.87514591217041
    3. ' ' → logprob: -13.12514591217041
    4. 'a' → logprob: -13.75014591217041
    5. '   ' → logprob: -14.62514591217041
    6. '	c' → logprob: -14.62514591217041
    7. 'g' → logprob: -15.25014591217041
    8. '```' → logprob: -15.50014591217041
    9. 'e' → logprob: -15.62514591217041
    10. 'd' → logprob: -15.75014591217041

Token 157: ' +' (ID: 659)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39608919620513916
    2. ' ==' → logprob: -1.1460891962051392
    3. '+' → logprob: -5.02108907699585
    4. ' +' → logprob: -6.39608907699585
    5. '==
' → logprob: -7.89608907699585
    6. '<=' → logprob: -9.271089553833008
    7. ' ' → logprob: -9.646089553833008
    8. '>' → logprob: -9.771089553833008
    9. '*' → logprob: -9.896089553833008
    10. '<' → logprob: -10.021089553833008

Token 158: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.020974494516849518
    2. ' d' → logprob: -3.8959743976593018
    3. 'g' → logprob: -8.395974159240723
    4. ' ' → logprob: -10.020974159240723
    5. 'a' → logprob: -10.270974159240723
    6. 'def' → logprob: -10.895974159240723
    7. '   ' → logprob: -11.020974159240723
    8. 'c' → logprob: -11.270974159240723
    9. 'e' → logprob: -11.270974159240723
    10. '100' → logprob: -11.395974159240723

Token 159: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005336335860192776
    2. ' *' → logprob: -5.255336284637451
    3. '100' → logprob: -9.50533676147461
    4. ' ' → logprob: -11.50533676147461
    5. '<|end|>' → logprob: -12.00533676147461
    6. '**' → logprob: -12.38033676147461
    7. '()*' → logprob: -13.00533676147461
    8. '```' → logprob: -13.63033676147461
    9. '000' → logprob: -14.00533676147461
    10. '00' → logprob: -14.88033676147461

Token 160: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0007286362233571708
    2. ' ' → logprob: -7.750728607177734
    3. '10' → logprob: -8.125728607177734
    4. '```' → logprob: -14.375728607177734
    5. '
' → logprob: -14.875728607177734
    6. '110' → logprob: -15.250728607177734
    7. ' hundred' → logprob: -15.250728607177734
    8. '

' → logprob: -15.875728607177734
    9. '  ' → logprob: -15.938228607177734
    10. 'hund' → logprob: -16.125728607177734

Token 161: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760117769241333
    2. '+' → logprob: -0.8260117769241333
    3. '<|end|>' → logprob: -9.701011657714844
    4. ' ' → logprob: -12.326011657714844
    5. '100' → logprob: -13.701011657714844
    6. '```' → logprob: -13.826011657714844
    7. ' +
' → logprob: -13.951011657714844
    8. ')' → logprob: -14.326011657714844
    9. '<|end|>' → logprob: -14.576011657714844
    10. '[' → logprob: -14.951011657714844

Token 162: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14269137382507324
    2. ' e' → logprob: -2.0176913738250732
    3. ' ' → logprob: -11.892691612243652
    4. '	e' → logprob: -13.267691612243652
    5. 'f' → logprob: -13.517691612243652
    6. '<|end|>' → logprob: -13.517691612243652
    7. '100' → logprob: -13.767691612243652
    8. '   ' → logprob: -13.767691612243652
    9. '  ' → logprob: -13.892691612243652
    10. '
' → logprob: -14.392691612243652

Token 163: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00033510822686366737
    2. ' *' → logprob: -8.125334739685059
    3. '100' → logprob: -10.625334739685059
    4. ' ' → logprob: -11.625334739685059
    5. '10' → logprob: -12.625334739685059
    6. '+' → logprob: -13.250334739685059
    7. '```' → logprob: -15.250334739685059
    8. '**' → logprob: -15.875334739685059
    9. '00' → logprob: -16.250335693359375
    10. '0' → logprob: -16.625335693359375

Token 164: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.05499910004437e-05
    2. ' ' → logprob: -9.750090599060059
    3. 'f' → logprob: -11.375090599060059
    4. 'd' → logprob: -11.750090599060059
    5. '90' → logprob: -12.125090599060059
    6. '<|end|>' → logprob: -13.375090599060059
    7. '20' → logprob: -13.875090599060059
    8. '50' → logprob: -14.000090599060059
    9. '0' → logprob: -14.000090599060059
    10. ' f' → logprob: -14.750090599060059

Token 165: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759628415107727
    2. ' +' → logprob: -0.8259628415107727
    3. ' ' → logprob: -12.075963020324707
    4. '```' → logprob: -12.325963020324707
    5. 'f' → logprob: -13.638463020324707
    6. '<' → logprob: -13.638463020324707
    7. '<|end|>' → logprob: -13.825963020324707
    8. ' +
' → logprob: -14.138463020324707
    9. '=' → logprob: -14.200963020324707
    10. '+
' → logprob: -14.325963020324707

Token 166: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003806257154792547
    2. ' f' → logprob: -7.875380516052246
    3. 'g' → logprob: -16.125381469726562
    4. '	f' → logprob: -16.500381469726562
    5. '```' → logprob: -16.625381469726562
    6. ' ' → logprob: -16.625381469726562
    7. '   ' → logprob: -17.125381469726562
    8. '(f' → logprob: -17.750381469726562
    9. 'd' → logprob: -17.875381469726562
    10. '
' → logprob: -18.250381469726562

Token 167: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5760704874992371
    2. ' ==' → logprob: -0.8260704874992371
    3. '<=' → logprob: -10.451070785522461
    4. ' <=' → logprob: -10.701070785522461
    5. '=' → logprob: -10.951070785522461
    6. '+' → logprob: -11.076070785522461
    7. ')' → logprob: -11.451070785522461
    8. '===' → logprob: -11.701070785522461
    9. ' ' → logprob: -11.951070785522461
    10. '==
' → logprob: -12.576070785522461

Token 168: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.008250606246292591
    2. '   ' → logprob: -5.258250713348389
    3. ' g' → logprob: -6.758250713348389
    4. '       ' → logprob: -7.883250713348389
    5. '           ' → logprob: -8.00825023651123
    6. ' ' → logprob: -8.50825023651123
    7. '                   ' → logprob: -8.50825023651123
    8. '  ' → logprob: -9.13325023651123
    9. '               ' → logprob: -9.13325023651123
    10. '     ' → logprob: -9.38325023651123

Token 169: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -3.702754474943504e-05
    2. ' *' → logprob: -10.37503719329834
    3. '100' → logprob: -12.25003719329834
    4. '```' → logprob: -15.00003719329834
    5. ' ' → logprob: -15.37503719329834
    6. 'g' → logprob: -15.50003719329834
    7. '**' → logprob: -16.375036239624023
    8. ''*' → logprob: -17.250036239624023
    9. '*g' → logprob: -17.750036239624023
    10. '000' → logprob: -18.000036239624023

Token 170: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00018732868193183094
    2. ' ' → logprob: -8.625186920166016
    3. 'hund' → logprob: -12.625186920166016
    4. '10' → logprob: -13.500186920166016
    5. '
' → logprob: -14.000186920166016
    6. '```' → logprob: -14.375186920166016
    7. '(' → logprob: -14.500186920166016
    8. '1' → logprob: -15.125186920166016
    9. ' hundred' → logprob: -15.500186920166016
    10. 'h' → logprob: -16.000186920166016

Token 171: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931508779525757
    2. ' +' → logprob: -0.6931508779525757
    3. '<|end|>' → logprob: -13.693150520324707
    4. '+h' → logprob: -14.693150520324707
    5. ' plus' → logprob: -14.943150520324707
    6. '100' → logprob: -15.443150520324707
    7. ' ' → logprob: -15.568150520324707
    8. 's' → logprob: -15.693150520324707
    9. ' ' → logprob: -15.943150520324707
    10. '```' → logprob: -15.943150520324707

Token 172: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00408397801220417
    2. ' h' → logprob: -5.50408411026001
    3. '100' → logprob: -12.379083633422852
    4. '
' → logprob: -14.629083633422852
    5. ' ' → logprob: -15.129083633422852
    6. '(' → logprob: -15.879083633422852
    7. '   ' → logprob: -16.12908363342285
    8. '	h' → logprob: -16.87908363342285
    9. '  ' → logprob: -17.00408363342285
    10. 'a' → logprob: -17.00408363342285

Token 173: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0020386797841638327
    2. '10' → logprob: -6.377038478851318
    3. '*i' → logprob: -8.377038955688477
    4. 'i' → logprob: -9.627038955688477
    5. ' *' → logprob: -10.877038955688477
    6. '+' → logprob: -12.127038955688477
    7. '100' → logprob: -12.502038955688477
    8. 'g' → logprob: -13.002038955688477
    9. ' ' → logprob: -13.252038955688477
    10. '90' → logprob: -13.752038955688477

Token 174: '10' (ID: 702)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12697356939315796
    2. '10' → logprob: -2.1269736289978027
    3. ' ' → logprob: -10.251973152160645
    4. ' i' → logprob: -12.126973152160645
    5. 'I' → logprob: -12.751973152160645
    6. '(' → logprob: -14.501973152160645
    7. '
' → logprob: -14.751973152160645
    8. '```' → logprob: -15.251973152160645
    9. '100' → logprob: -16.00197410583496
    10. '   ' → logprob: -16.12697410583496

Token 175: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193214416503906
    2. '+' → logprob: -1.501932144165039
    3. ' ' → logprob: -14.001932144165039
    4. 'g' → logprob: -14.751932144165039
    5. '```' → logprob: -14.876932144165039
    6. '*' → logprob: -15.564432144165039
    7. ' ' → logprob: -15.626932144165039
    8. '+j' → logprob: -15.814432144165039
    9. ' +
' → logprob: -16.50193214416504
    10. '<|end|>' → logprob: -16.56443214416504

Token 176: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002980432182084769
    2. ' i' → logprob: -8.125298500061035
    3. ' ' → logprob: -13.375298500061035
    4. '  ' → logprob: -16.37529754638672
    5. 'I' → logprob: -16.50029754638672
    6. '   ' → logprob: -16.75029754638672
    7. '```' → logprob: -17.00029754638672
    8. '	i' → logprob: -17.25029754638672
    9. '
' → logprob: -17.37529754638672
    10. ' ' → logprob: -17.87529754638672

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006466432940214872
    2. ':
' → logprob: -5.256466388702393
    3. '):' → logprob: -7.631466388702393
    4. ':return' → logprob: -8.13146686553955
    5. ' and' → logprob: -8.25646686553955
    6. ' :' → logprob: -9.38146686553955
    7. 'and' → logprob: -9.63146686553955
    8. '   ' → logprob: -12.00646686553955
    9. '):
' → logprob: -12.13146686553955
    10. '       ' → logprob: -12.25646686553955

Token 178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0860573798418045
    2. '       ' → logprob: -2.586057424545288
    3. 'return' → logprob: -5.711057186126709
    4. '
' → logprob: -6.586057186126709
    5. ' return' → logprob: -7.211057186126709
    6. ':
' → logprob: -7.711057186126709
    7. '               ' → logprob: -7.711057186126709
    8. '   ' → logprob: -8.711057662963867
    9. '            
' → logprob: -9.086057662963867
    10. ':return' → logprob: -9.461057662963867

Token 179: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.014293259009718895
    2. '       ' → logprob: -4.264293193817139
    3. '   ' → logprob: -9.514293670654297
    4. ' count' → logprob: -10.514293670654297
    5. '               ' → logprob: -11.264293670654297
    6. '           ' → logprob: -11.514293670654297
    7. '
' → logprob: -12.764293670654297
    8. '	count' → logprob: -12.889293670654297
    9. '```' → logprob: -16.014293670654297
    10. '      ' → logprob: -16.639293670654297

Token 180: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023251304402947426
    2. ' +=' → logprob: -3.7732512950897217
    3. ']+=' → logprob: -12.7732515335083
    4. '+' → logprob: -12.8982515335083
    5. '=' → logprob: -16.148250579833984
    6. '+="' → logprob: -16.273250579833984
    7. '[' → logprob: -16.398250579833984
    8. '   ' → logprob: -16.648250579833984
    9. '+=(' → logprob: -16.773250579833984
    10. '```' → logprob: -17.148250579833984

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '１' → logprob: -19.625001907348633
    5. '```' → logprob: -20.125001907348633
    6. '
' → logprob: -20.750001907348633
    7. '۱' → logprob: -21.125001907348633
    8. 'int' → logprob: -21.875001907348633
    9. '१' → logprob: -22.000001907348633
    10. '  ' → logprob: -22.125001907348633

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -20.0
    5. '１' → logprob: -20.3125
    6. '
' → logprob: -20.6875
    7. 'int' → logprob: -21.3125
    8. '۱' → logprob: -22.0
    9. '१' → logprob: -22.125
    10. 'a' → logprob: -22.1875

Token 183: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02067291922867298
    2. '   ' → logprob: -4.020672798156738
    3. ' return' → logprob: -7.020672798156738
    4. '           ' → logprob: -7.145672798156738
    5. 'return' → logprob: -7.270672798156738
    6. '	return' → logprob: -10.270672798156738
    7. '
' → logprob: -10.395672798156738
    8. '	' → logprob: -10.520672798156738
    9. '<|end|>' → logprob: -11.395672798156738
    10. '    
' → logprob: -12.145672798156738

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2600085139274597
    2. '   ' → logprob: -1.5100085735321045
    3. ' return' → logprob: -5.510008335113525
    4. 'return' → logprob: -6.010008335113525
    5. '           ' → logprob: -6.510008335113525
    6. '	return' → logprob: -10.385008811950684
    7. ' ' → logprob: -11.510008811950684
    8. '     ' → logprob: -12.385008811950684
    9. '    ' → logprob: -12.510008811950684
    10. '```' → logprob: -13.135008811950684

Token 185: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6046953797340393
    2. 'return' (adapté à ' return') → logprob: -1.1046953201293945
    3. '   ' → logprob: -2.1046953201293945
    4. ' return' → logprob: -7.7296953201293945
    5. 'else' → logprob: -9.479695320129395
    6. ' ' → logprob: -10.604695320129395
    7. '	return' → logprob: -10.979695320129395
    8. '  ' → logprob: -12.604695320129395
    9. '           ' → logprob: -13.729695320129395
    10. '    ' → logprob: -14.229695320129395

Token 186: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12440840899944305
    2. '    
' → logprob: -2.999408483505249
    3. 'digits' → logprob: -3.249408483505249
    4. 'for' → logprob: -4.62440824508667
    5. ' for' → logprob: -4.74940824508667
    6. ' digits' → logprob: -5.99940824508667
    7. 'if' → logprob: -6.74940824508667
    8. '
' → logprob: -6.74940824508667
    9. 'digit' → logprob: -7.12440824508667
    10. ' if' → logprob: -7.37440824508667

Token 187: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.955568253993988
    2. '   ' → logprob: -1.0805683135986328
    3. ' for' → logprob: -2.205568313598633
    4. 'digits' → logprob: -2.830568313598633
    5. 'if' → logprob: -3.205568313598633
    6. '    
' → logprob: -3.955568313598633
    7. '_' → logprob: -4.205568313598633
    8. ' if' → logprob: -4.455568313598633
    9. '```' → logprob: -5.580568313598633
    10. 's' → logprob: -6.080568313598633

Token 188: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007811862044036388
    2. 'digits' → logprob: -5.007812023162842
    3. ' for' → logprob: -7.007812023162842
    4. 'idx' (adapté à ' idx') → logprob: -9.632811546325684
    5. 'd' → logprob: -9.757811546325684
    6. 'digit' → logprob: -10.882811546325684
    7. 'index' → logprob: -11.132811546325684
    8. 'next' → logprob: -11.882811546325684
    9. 'missing' → logprob: -12.007811546325684
    10. 'x' → logprob: -12.382811546325684

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10026565939188004
    2. '=' → logprob: -2.3502657413482666
    3. ']' → logprob: -10.100265502929688
    4. ')' → logprob: -11.725265502929688
    5. 'missing' → logprob: -12.350265502929688
    6. ' missing' → logprob: -13.600265502929688
    7. ' ' → logprob: -13.725265502929688
    8. '<|end|>' → logprob: -13.725265502929688
    9. ',' → logprob: -14.100265502929688
    10. ']=' → logprob: -15.225265502929688

Token 190: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.0011703446507453918
    2. ' missing' → logprob: -6.7511701583862305
    3. 'miss' → logprob: -16.001171112060547
    4. '_missing' → logprob: -18.626171112060547
    5. 'Missing' → logprob: -19.501171112060547
    6. 'm' → logprob: -19.501171112060547
    7. 'hidden' → logprob: -21.001171112060547
    8. '   ' → logprob: -21.251171112060547
    9. '0' → logprob: -21.501171112060547
    10. '```' → logprob: -21.876171112060547

Token 191: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.014180204831063747
    2. 'indices' → logprob: -4.2641801834106445
    3. 'Indices' → logprob: -12.014180183410645
    4. '_digits' → logprob: -12.639180183410645
    5. '"indices' → logprob: -12.764180183410645
    6. 'digits' → logprob: -13.139180183410645
    7. 'missing' → logprob: -14.139180183410645
    8. ' indices' → logprob: -14.514180183410645
    9. '_positions' → logprob: -15.014180183410645
    10. '_tokens' → logprob: -15.264180183410645

Token 192: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.6047699318733066e-05
    2. ']' → logprob: -12.000016212463379
    3. '[' → logprob: -12.250016212463379
    4. '[
' → logprob: -13.750016212463379
    5. '```' → logprob: -13.750016212463379
    6. 'pos' → logprob: -14.500016212463379
    7. '[token' → logprob: -14.500016212463379
    8. '[position' → logprob: -14.625016212463379
    9. '[idx' → logprob: -14.750016212463379
    10. '][' → logprob: -15.250016212463379

Token 193: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05888815596699715
    2. ')' → logprob: -2.9338881969451904
    3. ']
' → logprob: -5.683887958526611
    4. ')
' → logprob: -7.558887958526611
    5. ']

' → logprob: -10.80888843536377
    6. ' ]' → logprob: -11.05888843536377
    7. '<|end|>' → logprob: -11.68388843536377
    8. '   ' → logprob: -11.80888843536377
    9. '```' → logprob: -12.55888843536377
    10. '}' → logprob: -12.80888843536377

Token 194: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010766340419650078
    2. ' for' → logprob: -7.001076698303223
    3. 'digits' → logprob: -9.001076698303223
    4. '   ' → logprob: -10.251076698303223
    5. 'd' → logprob: -13.251076698303223
    6. 'digit' → logprob: -13.501076698303223
    7. '```' → logprob: -13.626076698303223
    8. '<|end|>' → logprob: -14.376076698303223
    9. '	for' → logprob: -14.751076698303223
    10. 'from' → logprob: -14.751076698303223

Token 195: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009194392478093505
    2. ' for' → logprob: -7.000919342041016
    3. '<|end|>' → logprob: -11.875919342041016
    4. '```' → logprob: -14.875919342041016
    5. '   ' → logprob: -15.250919342041016
    6. '	for' → logprob: -15.750919342041016
    7. '_for' → logprob: -16.875919342041016
    8. 'For' → logprob: -16.875919342041016
    9. 's' → logprob: -17.625919342041016
    10. '<|end|>' → logprob: -17.625919342041016

Token 196: ' md' (ID: 17280)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.20868873596191406
    2. 'd' → logprob: -1.833688735961914
    3. 'num' → logprob: -4.583688735961914
    4. 'dig' → logprob: -4.958688735961914
    5. 'x' → logprob: -5.208688735961914
    6. 'md' → logprob: -5.583688735961914
    7. ' digit' → logprob: -6.583688735961914
    8. 'nd' → logprob: -8.208688735961914
    9. ' d' → logprob: -9.208688735961914
    10. 'val' → logprob: -9.458688735961914

Token 197: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25203266739845276
    2. ' in' → logprob: -1.5020326375961304
    3. 'i' → logprob: -10.127032279968262
    4. ' ' → logprob: -10.752032279968262
    5. '   ' → logprob: -11.377032279968262
    6. '	in' → logprob: -12.502032279968262
    7. '_in' → logprob: -12.627032279968262
    8. '  ' → logprob: -13.002032279968262
    9. 's' → logprob: -13.127032279968262
    10. 'a' → logprob: -13.127032279968262

Token 198: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.03804333135485649
    2. ' missing' → logprob: -3.288043260574341
    3. 'miss' → logprob: -14.163043022155762
    4. ' ' → logprob: -14.288043022155762
    5. 'm' → logprob: -15.288043022155762
    6. '   ' → logprob: -15.788043022155762
    7. '_missing' → logprob: -17.413043975830078
    8. '  ' → logprob: -17.788043975830078
    9. 'mis' → logprob: -17.913043975830078
    10. '
' → logprob: -18.163043975830078

Token 199: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -3.7146746763028204e-05
    2. 'digits' → logprob: -10.25003719329834
    3. '_' → logprob: -13.50003719329834
    4. ' digits' → logprob: -15.87503719329834
    5. '_digit' → logprob: -16.375036239624023
    6. '```' → logprob: -17.000036239624023
    7. 's' → logprob: -17.000036239624023
    8. '
' → logprob: -17.375036239624023
    9. 'Digits' → logprob: -17.625036239624023
    10. 'igits' → logprob: -17.750036239624023

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14268197119235992
    2. ':
' → logprob: -2.0176820755004883
    3. ':
' → logprob: -13.267682075500488
    4. ':

' → logprob: -13.642682075500488
    5. '):
' → logprob: -14.017682075500488
    6. ' :' → logprob: -14.017682075500488
    7. '   ' → logprob: -14.142682075500488
    8. '):' → logprob: -14.892682075500488
    9. ' :
' → logprob: -15.017682075500488
    10. '       ' → logprob: -15.392682075500488

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007583912927657366
    2. ' if' → logprob: -5.632584095001221
    3. '<|end|>' → logprob: -5.632584095001221
    4. '   ' → logprob: -9.632583618164062
    5. '        
' → logprob: -9.632583618164062
    6. '    ' → logprob: -9.757583618164062
    7. 'if' → logprob: -10.007583618164062
    8. ' ' → logprob: -10.132583618164062
    9. ',' → logprob: -10.382583618164062
    10. '<|end|>' → logprob: -10.632583618164062

Token 202: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17979511618614197
    2. 'if' (adapté à ' if') → logprob: -2.929795026779175
    3. ' digits' → logprob: -2.929795026779175
    4. 'digits' → logprob: -3.554795026779175
    5. '   ' → logprob: -4.179795265197754
    6. '       ' → logprob: -4.304795265197754
    7. ' used' → logprob: -8.929795265197754
    8. '           ' → logprob: -9.554795265197754
    9. ' ' → logprob: -10.429795265197754
    10. '	if' → logprob: -10.554795265197754

Token 203: ' used' (ID: 2061)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9637686610221863
    2. 'not' → logprob: -0.9637686610221863
    3. 'md' → logprob: -1.588768720626831
    4. ' md' → logprob: -3.588768720626831
    5. 'used' → logprob: -5.463768482208252
    6. ' used' → logprob: -7.213768482208252
    7. '(md' → logprob: -9.71376895904541
    8. '	md' → logprob: -9.77626895904541
    9. '(not' → logprob: -9.77626895904541
    10. '	not' → logprob: -10.15126895904541

Token 204: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4736459888808895e-05
    2. 'not' → logprob: -11.750014305114746
    3. 'md' → logprob: -12.125014305114746
    4. ' not' → logprob: -14.750014305114746
    5. '```' → logprob: -15.125014305114746
    6. ' [' → logprob: -15.625014305114746
    7. '(md' → logprob: -16.375015258789062
    8. '[mem' → logprob: -16.750015258789062
    9. '[mid' → logprob: -16.875015258789062
    10. '

' → logprob: -17.125015258789062

Token 205: 'md' (ID: 3978)
  Prédit: 'md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -2.45848218582978e-06
    2. ' md' → logprob: -13.12500286102295
    3. '[' → logprob: -14.75000286102295
    4. '
' → logprob: -18.500001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '	md' → logprob: -19.000001907348633
    7. '```' → logprob: -19.375001907348633
    8. '(md' → logprob: -19.375001907348633
    9. '           ' → logprob: -19.625001907348633
    10. '       ' → logprob: -20.250001907348633

Token 206: ']:
' (ID: 22152)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.9279520511627197
    2. ']:' → logprob: -1.0529520511627197
    3. ']' → logprob: -1.8029520511627197
    4. '==' → logprob: -3.0529520511627197
    5. ']:
' → logprob: -3.1779520511627197
    6. ' ]' → logprob: -6.927951812744141
    7. ' ==' → logprob: -7.052951812744141
    8. ':' → logprob: -10.17795181274414
    9. '[' → logprob: -10.67795181274414
    10. ':
' → logprob: -10.80295181274414

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16308392584323883
    2. ' continue' → logprob: -1.9130839109420776
    3. 'continue' → logprob: -5.913084030151367
    4. '```' → logprob: -10.163084030151367
    5. ' 
' → logprob: -10.288084030151367
    6. '
' → logprob: -10.788084030151367
    7. '               ' → logprob: -11.538084030151367
    8. '       ' → logprob: -11.788084030151367
    9. '	continue' → logprob: -11.788084030151367
    10. ' continues' → logprob: -12.538084030151367

Token 208: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3161126971244812
    2. 'continue' (adapté à ' continue') → logprob: -1.316112756729126
    3. '           ' → logprob: -5.941112518310547
    4. '               ' → logprob: -8.816112518310547
    5. '	continue' → logprob: -9.941112518310547
    6. '
' → logprob: -11.816112518310547
    7. ' 
' → logprob: -12.066112518310547
    8. '       ' → logprob: -12.816112518310547
    9. '	       ' → logprob: -13.816112518310547
    10. '_continue' → logprob: -13.941112518310547

Token 209: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05040930211544037
    2. ' used' → logprob: -3.4254093170166016
    3. '        
' → logprob: -4.425409317016602
    4. '<|end|>' → logprob: -5.675409317016602
    5. ' 
' → logprob: -7.675409317016602
    6. '
' → logprob: -7.925409317016602
    7. '```' → logprob: -9.300409317016602
    8. '  
' → logprob: -9.800409317016602
    9. 'used' → logprob: -10.050409317016602
    10. '   ' → logprob: -10.425409317016602

Token 210: '       ' (ID: 309)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.5339881777763367
    2. '       ' → logprob: -0.9089881777763367
    3. ' digits' → logprob: -5.033987998962402
    4. '        
' → logprob: -5.658987998962402
    5. 'used' → logprob: -8.408987998962402
    6. 'digits' → logprob: -8.783987998962402
    7. '   ' → logprob: -9.033987998962402
    8. ' 
' → logprob: -9.158987998962402
    9. '
' → logprob: -9.658987998962402
    10. '```' → logprob: -9.908987998962402

Token 211: ' digits' (ID: 37806)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.2235766500234604
    2. 'digits' (adapté à ' digits') → logprob: -2.098576545715332
    3. ' used' → logprob: -2.848576545715332
    4. '       ' → logprob: -4.348576545715332
    5. ' digits' → logprob: -5.473576545715332
    6. '   ' → logprob: -5.973576545715332
    7. '        
' → logprob: -10.473576545715332
    8. '```' → logprob: -10.598576545715332
    9. ' ' → logprob: -10.723576545715332
    10. '           ' → logprob: -11.223576545715332

Token 212: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.273621405242011e-05
    2. '[' → logprob: -10.375032424926758
    3. 'idx' → logprob: -13.750032424926758
    4. '```' → logprob: -15.625032424926758
    5. ' [' → logprob: -17.250032424926758
    6. '	idx' → logprob: -17.500032424926758
    7. ' idx' → logprob: -17.875032424926758
    8. '[index' → logprob: -18.000032424926758
    9. '   ' → logprob: -18.250032424926758
    10. '[
' → logprob: -18.250032424926758

Token 213: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27225351333618164
    2. '=' → logprob: -1.5222535133361816
    3. ' =' → logprob: -4.022253513336182
    4. ']=' → logprob: -6.147253513336182
    5. ' ]' → logprob: -9.647253036499023
    6. ')' → logprob: -13.272253036499023
    7. ' ' → logprob: -15.772253036499023
    8. ',' → logprob: -15.897253036499023
    9. '=

' → logprob: -16.022253036499023
    10. ')=' → logprob: -16.147253036499023

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. '=
' → logprob: -16.761871337890625
    4. ' =
' → logprob: -17.761871337890625
    5. '=

' → logprob: -18.761871337890625
    6. '＝' → logprob: -18.886871337890625
    7. ' ' → logprob: -20.136871337890625
    8. ')' → logprob: -20.261871337890625
    9. '=}' → logprob: -20.261871337890625
    10. ',' → logprob: -20.386871337890625

Token 215: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.0788901224732399
    2. ' md' → logprob: -2.578890085220337
    3. '	md' → logprob: -15.328889846801758
    4. '(md' → logprob: -16.828889846801758
    5. '.md' → logprob: -18.328889846801758
    6. ' ' → logprob: -19.328889846801758
    7. '   ' → logprob: -19.453889846801758
    8. '
' → logprob: -19.453889846801758
    9. 'mc' → logprob: -19.703889846801758
    10. '_md' → logprob: -19.828889846801758

Token 216: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09894627332687378
    2. ' used' → logprob: -2.4739463329315186
    3. '
' → logprob: -5.0989460945129395
    4. 'used' → logprob: -5.5989460945129395
    5. '   ' → logprob: -9.973946571350098
    6. '        
' → logprob: -10.098946571350098
    7. '```' → logprob: -10.723946571350098
    8. '<|end|>' → logprob: -11.098946571350098
    9. '  
' → logprob: -12.473946571350098
    10. ',' → logprob: -12.598946571350098

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22594057023525238
    2. ' used' → logprob: -1.7259405851364136
    3. 'used' → logprob: -3.725940465927124
    4. '
' → logprob: -9.975940704345703
    5. '```' → logprob: -9.975940704345703
    6. '   ' → logprob: -10.850940704345703
    7. '        
' → logprob: -11.225940704345703
    8. '_used' → logprob: -12.975940704345703
    9. '<|end|>' → logprob: -12.975940704345703
    10. '  
' → logprob: -13.225940704345703

Token 218: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.004081009421497583
    2. ' used' → logprob: -5.504080772399902
    3. '       ' → logprob: -13.254080772399902
    4. '
' → logprob: -14.379080772399902
    5. '   ' → logprob: -15.379080772399902
    6. '.used' → logprob: -17.37908172607422
    7. '_used' → logprob: -19.00408172607422
    8. '```' → logprob: -19.12908172607422
    9. '           ' → logprob: -19.75408172607422
    10. 'Used' → logprob: -20.25408172607422

Token 219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.125000953674316
    3. 'md' → logprob: -15.375000953674316
    4. ' [' → logprob: -15.750000953674316
    5. '[idx' → logprob: -17.5
    6. '(md' → logprob: -18.0
    7. '   ' → logprob: -18.125
    8. '       ' → logprob: -18.625
    9. '[
' → logprob: -18.75
    10. '[mem' → logprob: -19.125

Token 220: 'md' (ID: 3978)
  Prédit: 'md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -9.088346359931165e-07
    2. ' md' → logprob: -14.000000953674316
    3. '[' → logprob: -18.375
    4. '	md' → logprob: -19.25
    5. '(md' → logprob: -19.75
    6. '   ' → logprob: -21.375
    7. '.md' → logprob: -21.75
    8. ' ' → logprob: -22.25
    9. 'mdi' → logprob: -22.25
    10. '
' → logprob: -22.375

Token 221: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010909045115113258
    2. '=' → logprob: -4.635909080505371
    3. ' =' → logprob: -7.260909080505371
    4. ']=' → logprob: -7.760909080505371
    5. '=True' → logprob: -11.635909080505371
    6. ' ]' → logprob: -12.010909080505371
    7. 'True' → logprob: -12.010909080505371
    8. ')' → logprob: -13.510909080505371
    9. '[' → logprob: -13.885909080505371
    10. 'true' → logprob: -16.510908126831055

Token 222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788988247513771
    2. ' =' → logprob: -2.5788989067077637
    3. '=True' → logprob: -11.703898429870605
    4. '[' → logprob: -14.578898429870605
    5. 'True' → logprob: -15.453898429870605
    6. '=
' → logprob: -16.453899383544922
    7. '=False' → logprob: -17.328899383544922
    8. ']' → logprob: -18.453899383544922
    9. ' True' → logprob: -18.578899383544922
    10. '```' → logprob: -18.578899383544922

Token 223: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0002613358374219388
    2. ' True' → logprob: -8.250261306762695
    3. '(True' → logprob: -19.000261306762695
    4. '=True' → logprob: -20.250261306762695
    5. 'true' → logprob: -21.375261306762695
    6. 'Tr' → logprob: -22.000261306762695
    7. '1' → logprob: -22.125261306762695
    8. 'False' → logprob: -22.625261306762695
    9. '   ' → logprob: -22.625261306762695
    10. ' ' → logprob: -22.875261306762695

Token 224: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03619500622153282
    2. '        
' → logprob: -3.6611950397491455
    3. ' dfs' → logprob: -5.536194801330566
    4. '
' → logprob: -5.911194801330566
    5. 'dfs' → logprob: -6.411194801330566
    6. ' 
' → logprob: -7.161194801330566
    7. '  
' → logprob: -8.036194801330566
    8. '\' → logprob: -9.411194801330566
    9. '    
' → logprob: -9.661194801330566
    10. '\n' → logprob: -9.661194801330566

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014171270653605461
    2. ' dfs' → logprob: -4.889171123504639
    3. 'dfs' → logprob: -5.139171123504639
    4. '   ' → logprob: -7.889171123504639
    5. '        
' → logprob: -8.389171600341797
    6. '```' → logprob: -10.639171600341797
    7. '
' → logprob: -11.014171600341797
    8. ' ' → logprob: -11.264171600341797
    9. '	' → logprob: -11.764171600341797
    10. '    
' → logprob: -12.389171600341797

Token 226: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.04874792322516441
    2. ' dfs' → logprob: -3.048748016357422
    3. '       ' → logprob: -8.798748016357422
    4. '   ' → logprob: -12.298748016357422
    5. '
' → logprob: -12.673748016357422
    6. 'df' → logprob: -13.923748016357422
    7. '        
' → logprob: -14.798748016357422
    8. '```' → logprob: -15.298748016357422
    9. '``' → logprob: -16.673748016357422
    10. ' DFS' → logprob: -16.798748016357422

Token 227: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.1160349458805285e-05
    2. '(' → logprob: -11.500011444091797
    3. 'pos' → logprob: -14.250011444091797
    4. ' (' → logprob: -15.875011444091797
    5. ' pos' → logprob: -16.625011444091797
    6. '(
' → logprob: -16.750011444091797
    7. '[pos' → logprob: -17.250011444091797
    8. ',pos' → logprob: -17.500011444091797
    9. '	pos' → logprob: -18.750011444091797
    10. '(idx' → logprob: -19.375011444091797

Token 228: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07888989895582199
    2. ' +' → logprob: -2.578889846801758
    3. '+
' → logprob: -17.578889846801758
    4. '(pos' → logprob: -17.953889846801758
    5. '1' → logprob: -18.203889846801758
    6. '＋' → logprob: -18.203889846801758
    7. ')' → logprob: -19.328889846801758
    8. ' ' → logprob: -19.328889846801758
    9. ' +
' → logprob: -19.453889846801758
    10. '
' → logprob: -19.703889846801758

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016837897419463843
    2. 'pos' → logprob: -8.875168800354004
    3. ' ' → logprob: -10.875168800354004
    4. '```' → logprob: -12.375168800354004
    5. ')' → logprob: -13.375168800354004
    6. '
' → logprob: -13.625168800354004
    7. '   ' → logprob: -13.750168800354004
    8. '``' → logprob: -15.375168800354004
    9. ')
' → logprob: -15.500168800354004
    10. 'count' → logprob: -15.750168800354004

Token 230: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014966385439038277
    2. ')' → logprob: -4.2649664878845215
    3. '       ' → logprob: -7.1399664878845215
    4. ' )
' → logprob: -12.264966011047363
    5. ')
' → logprob: -13.139966011047363
    6. '   ' → logprob: -13.389966011047363
    7. '
' → logprob: -14.139966011047363
    8. '```' → logprob: -15.014966011047363
    9. ')

' → logprob: -15.264966011047363
    10. ' )' → logprob: -17.13996696472168

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018356775864958763
    2. ' used' → logprob: -4.268356800079346
    3. 'used' → logprob: -5.518356800079346
    4. '```' → logprob: -8.893356323242188
    5. '   ' → logprob: -10.643356323242188
    6. '        
' → logprob: -12.018356323242188
    7. '``' → logprob: -13.018356323242188
    8. '
' → logprob: -14.143356323242188
    9. ' ' → logprob: -15.143356323242188
    10. '       
' → logprob: -15.393356323242188

Token 232: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.6957031488418579
    2. 'used' (adapté à ' used') → logprob: -0.6957031488418579
    3. '       ' → logprob: -6.195703029632568
    4. ' digits' → logprob: -8.320703506469727
    5. 'digits' → logprob: -8.445703506469727
    6. '   ' → logprob: -10.195703506469727
    7. ' ' → logprob: -12.195703506469727
    8. '
' → logprob: -12.570703506469727
    9. '        
' → logprob: -13.070703506469727
    10. '```' → logprob: -13.320703506469727

Token 233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.610702363715973e-06
    2. 'md' → logprob: -11.750009536743164
    3. '```' → logprob: -13.875009536743164
    4. ' [' → logprob: -14.750009536743164
    5. '	md' → logprob: -16.250009536743164
    6. '_md' → logprob: -16.750009536743164
    7. '(md' → logprob: -17.375009536743164
    8. '\[' → logprob: -17.500009536743164
    9. '[
' → logprob: -18.000009536743164
    10. '[mem' → logprob: -18.000009536743164

Token 234: 'md' (ID: 3978)
  Prédit: 'md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.75
    3. ' md' → logprob: -17.25
    4. '	md' → logprob: -18.375
    5. '```' → logprob: -19.625
    6. '(md' → logprob: -20.375
    7. '   ' → logprob: -21.125
    8. 'mdi' → logprob: -22.125
    9. ' ' → logprob: -22.125
    10. '.md' → logprob: -22.125

Token 235: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038927964866161346
    2. ']' → logprob: -3.4139280319213867
    3. '[idx' → logprob: -5.788928031921387
    4. '=' → logprob: -6.288928031921387
    5. ']=' → logprob: -8.288928031921387
    6. 'md' → logprob: -10.163928031921387
    7. ' =' → logprob: -10.163928031921387
    8. '```' → logprob: -12.288928031921387
    9. 'idx' → logprob: -12.413928031921387
    10. '=True' → logprob: -13.413928031921387

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0014061863766983151
    2. '[' → logprob: -6.751406192779541
    3. '=False' → logprob: -9.126405715942383
    4. ' =' → logprob: -9.376405715942383
    5. '[idx' → logprob: -10.501405715942383
    6. 'False' → logprob: -11.251405715942383
    7. '```' → logprob: -14.126405715942383
    8. ']' → logprob: -14.626405715942383
    9. '=True' → logprob: -15.501405715942383
    10. ']=' → logprob: -15.626405715942383

Token 237: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. '(False' → logprob: -18.750009536743164
    4. '=False' → logprob: -20.875009536743164
    5. '_false' → logprob: -21.125009536743164
    6. '.False' → logprob: -21.250009536743164
    7. 'True' → logprob: -21.625009536743164
    8. 'false' → logprob: -23.125009536743164
    9. '
' → logprob: -23.500009536743164
    10. 'F' → logprob: -23.625009536743164

Token 238: '
' (ID: 198)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.9422062039375305
    2. '       ' → logprob: -1.1922061443328857
    3. ' digits' → logprob: -1.1922061443328857
    4. '<|end|>' → logprob: -6.192206382751465
    5. '   ' → logprob: -7.692206382751465
    6. ')' → logprob: -8.817206382751465
    7. ',' → logprob: -9.442206382751465
    8. ' ' → logprob: -9.817206382751465
    9. '.' → logprob: -10.317206382751465
    10. ' missing' → logprob: -10.442206382751465

Token 239: '       ' (ID: 309)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.05774597451090813
    2. ' digits' → logprob: -2.932745933532715
    3. '<|end|>' → logprob: -6.182745933532715
    4. '       ' → logprob: -7.307745933532715
    5. '```' → logprob: -10.432745933532715
    6. '   ' → logprob: -10.557745933532715
    7. '#' → logprob: -11.307745933532715
    8. ')' → logprob: -11.682745933532715
    9. '_digits' → logprob: -11.932745933532715
    10. '[' → logprob: -12.057745933532715

Token 240: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.0005547016044147313
    2. ' digits' → logprob: -7.50055456161499
    3. '       ' → logprob: -15.000555038452148
    4. '   ' → logprob: -15.250555038452148
    5. '#' → logprob: -15.375555038452148
    6. '```' → logprob: -15.500555038452148
    7. '_digits' → logprob: -15.875555038452148
    8. '<|end|>' → logprob: -15.875555038452148
    9. 'digit' → logprob: -16.00055503845215
    10. '[' → logprob: -16.12555503845215

Token 241: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.0921942703134846e-05
    2. '[' → logprob: -12.00001049041748
    3. 'idx' → logprob: -12.62501049041748
    4. '	idx' → logprob: -14.50001049041748
    5. '```' → logprob: -14.75001049041748
    6. '[index' → logprob: -15.50001049041748
    7. '[...]' → logprob: -16.500011444091797
    8. ' idx' → logprob: -17.375011444091797
    9. '_idx' → logprob: -17.375011444091797
    10. '[pos' → logprob: -17.625011444091797

Token 242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024935701861977577
    2. '=' → logprob: -3.774935722351074
    3. ']=' → logprob: -6.399935722351074
    4. ' =' → logprob: -10.774935722351074
    5. '[' → logprob: -13.274935722351074
    6. 'idx' → logprob: -13.524935722351074
    7. '[idx' → logprob: -13.774935722351074
    8. ']=-' → logprob: -14.149935722351074
    9. ']==' → logprob: -15.149935722351074
    10. ')' → logprob: -15.274935722351074

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.061054359131958e-06
    2. ' =' → logprob: -12.000007629394531
    3. '=-' → logprob: -13.250007629394531
    4. '-' → logprob: -18.75000762939453
    5. '=
' → logprob: -18.87500762939453
    6. '=

' → logprob: -21.62500762939453
    7. '[-' → logprob: -21.75000762939453
    8. '-=' → logprob: -21.87500762939453
    9. '＝' → logprob: -21.87500762939453
    10. '==' → logprob: -22.25000762939453

Token 244: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9027791495318525e-05
    2. ' -' → logprob: -10.875019073486328
    3. '-m' → logprob: -21.000019073486328
    4. '-i' → logprob: -21.375019073486328
    5. '-int' → logprob: -21.875019073486328
    6. '−' → logprob: -22.125019073486328
    7. '-ħ' → logprob: -22.250019073486328
    8. '-value' → logprob: -22.250019073486328
    9. '-code' → logprob: -22.250019073486328
    10. '-ai' → logprob: -22.375019073486328

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -18.375
    4. '<|end|>' → logprob: -18.5
    5. '۱' → logprob: -19.375
    6. '१' → logprob: -20.0625
    7. '১' → logprob: -20.125
    8. '<|end|>' → logprob: -20.1875
    9. '   ' → logprob: -20.4375
    10. '１' → logprob: -20.6875

Token 246: '

' (ID: 279)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.008872182108461857
    2. 'for' → logprob: -5.258872032165527
    3. '
' → logprob: -6.133872032165527
    4. '<|end|>' → logprob: -8.133872032165527
    5. ')' → logprob: -8.383872032165527
    6. '```' → logprob: -8.633872032165527
    7. ' dfs' → logprob: -8.758872032165527
    8. '    
' → logprob: -9.508872032165527
    9. 'print' → logprob: -9.758872032165527
    10. 'missing' → logprob: -9.883872032165527

Token 247: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.000712670327629894
    2. 'print' → logprob: -7.250712871551514
    3. ' dfs' → logprob: -13.750712394714355
    4. '
' → logprob: -14.250712394714355
    5. '```' → logprob: -14.625712394714355
    6. 'for' → logprob: -15.000712394714355
    7. 'if' → logprob: -16.125713348388672
    8. 'missing' → logprob: -16.750713348388672
    9. '    
' → logprob: -18.125713348388672
    10. 'DFS' → logprob: -18.250713348388672

Token 248: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007650759653188288
    2. '(pos' → logprob: -7.375764846801758
    3. '()' → logprob: -9.875764846801758
    4. '(len' → logprob: -10.000764846801758
    5. '((' → logprob: -11.625764846801758
    6. '("("' → logprob: -11.750764846801758
    7. '(`' → logprob: -12.375764846801758
    8. '(
' → logprob: -12.625764846801758
    9. '('' → logprob: -12.875764846801758
    10. '(None' → logprob: -13.125764846801758

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. ')' → logprob: -20.75
    4. '```' → logprob: -21.875
    5. '۰' → logprob: -22.25
    6. '00' → logprob: -22.375
    7. '000' → logprob: -22.5
    8. '０' → logprob: -23.625
    9. '
' → logprob: -23.875
    10. 'missing' → logprob: -24.5625

Token 250: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.750001907348633
    3. ')
' → logprob: -15.250001907348633
    4. '))' → logprob: -16.875001907348633
    5. ')`' → logprob: -17.500001907348633
    6. '())' → logprob: -18.375001907348633
    7. '),' → logprob: -18.500001907348633
    8. ')#' → logprob: -18.750001907348633
    9. ')}' → logprob: -19.125001907348633
    10. ')

' → logprob: -19.125001907348633

Token 251: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.0
    3. ' print' → logprob: -16.875
    4. '#print' → logprob: -18.375
    5. '
' → logprob: -18.875
    6. '``' → logprob: -20.25
    7. '(print' → logprob: -20.625
    8. '-print' → logprob: -21.25
    9. 'Print' → logprob: -21.875
    10. 'pr' → logprob: -22.125

Token 252: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0001991298486245796
    2. '(' → logprob: -8.750199317932129
    3. 'count' → logprob: -10.125199317932129
    4. '()' → logprob: -15.000199317932129
    5. '(
' → logprob: -16.125198364257812
    6. '(c' → logprob: -17.250198364257812
    7. '(counter' → logprob: -17.625198364257812
    8. ' (' → logprob: -17.875198364257812
    9. '(cnt' → logprob: -18.125198364257812
    10. ' count' → logprob: -18.375198364257812

Token 253: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.023293538717553e-05
    2. '()' → logprob: -10.625030517578125
    3. '())' → logprob: -12.875030517578125
    4. '(' → logprob: -13.000030517578125
    5. ')
' → logprob: -14.750030517578125
    6. ' )' → logprob: -15.500030517578125
    7. ')`' → logprob: -15.500030517578125
    8. '))' → logprob: -16.125030517578125
    9. '```' → logprob: -17.625030517578125
    10. '`)' → logprob: -18.125030517578125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 251
Tokens correctement prédits (1ère position, stricte): 112
Tokens correctement prédits (1ère position, avec adaptation): 119
Tokens correctement prédits (top 10): 225
Précision stricte (1ère position): 44.62%
Précision adaptée (1ère position): 47.41%
Précision (top 10): 89.64%
================================================================================
