================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import log2
def entropy(arr):
    n=len(arr)
    if n==0:return 0
    freq=[0]*256
    for x in arr: freq[x]+=1
    h=0
    for c in freq:
        if c>0:
            p=c/n
            h-=p*log2(p)
    return h
while True:
    N=int(input())
    if N==0: break
    I=list(map(int,input().split()))
    M=256
    minH=float('inf')
    res=(0,0,0)
    for S in range(16):
        for A in range(16):
            for C in range(16):
                R=[0]*N
                R[0]=S
                for i in range(1,N): R[i]=(A*R[i-1]+C)%M
                O=[(I[i]^R[i]) for i in range(N)]
                h=entropy(O)
                if h<minH or (h==minH and (S,A,C)<res):
                    minH=h
                    res=(S,A,C)
    print(*res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' log' (ID: 2142)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.25210076570510864
    2. ' sqrt' → logprob: -1.7521007061004639
    3. 'pow' → logprob: -4.002100944519043
    4. 'pi' → logprob: -4.752100944519043
    5. 'sin' → logprob: -4.752100944519043
    6. ' pi' → logprob: -5.002100944519043
    7. 'import' → logprob: -6.252100944519043
    8. 'ceil' → logprob: -7.002100944519043
    9. ' sin' → logprob: -7.127100944519043
    10. 'log' → logprob: -7.627100944519043

Token 4: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001847062085289508
    2. ',' → logprob: -9.750185012817383
    3. '\(' → logprob: -10.125185012817383
    4. '```' → logprob: -10.375185012817383
    5. ' (' → logprob: -11.125185012817383
    6. '10' → logprob: -12.125185012817383
    7. '"' → logprob: -12.250185012817383
    8. '(
' → logprob: -12.250185012817383
    9. '_' → logprob: -12.625185012817383
    10. '1' → logprob: -12.625185012817383

Token 5: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003192578151356429
    2. '(
' → logprob: -9.250319480895996
    3. '\(' → logprob: -9.250319480895996
    4. '\n' → logprob: -10.250319480895996
    5. ' (' → logprob: -10.375319480895996
    6. ',' → logprob: -10.375319480895996
    7. '```' → logprob: -12.250319480895996
    8. '(open' → logprob: -12.875319480895996
    9. '(log' → logprob: -13.250319480895996
    10. '((' → logprob: -13.250319480895996

Token 6: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0239412784576416
    2. '(
' → logprob: -3.7739412784576416
    3. '
' → logprob: -8.648941040039062
    4. '\(' → logprob: -9.023941040039062
    5. 'def' → logprob: -9.648941040039062
    6. ',' → logprob: -9.898941040039062
    7. '(

' → logprob: -10.023941040039062
    8. '\n' → logprob: -10.023941040039062
    9. '#' → logprob: -10.273941040039062
    10. '```' → logprob: -10.648941040039062

Token 7: ' entropy' (ID: 104037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005086225923150778
    2. ' log' → logprob: -6.130086421966553
    3. '_' → logprob: -6.255086421966553
    4. ' space' → logprob: -8.630085945129395
    5. ' calculate' → logprob: -8.755085945129395
    6. ' my' → logprob: -9.130085945129395
    7. '_log' → logprob: -9.255085945129395
    8. ' f' → logprob: -9.380085945129395
    9. ' ' → logprob: -9.505085945129395
    10. ' factorial' → logprob: -9.630085945129395

Token 8: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018518301658332348
    2. '_entropy' → logprob: -9.500185012817383
    3. '_' → logprob: -10.125185012817383
    4. '(data' → logprob: -11.500185012817383
    5. '(
' → logprob: -12.000185012817383
    6. '(user' → logprob: -12.000185012817383
    7. '(value' → logprob: -12.500185012817383
    8. '(x' → logprob: -12.500185012817383
    9. '('' → logprob: -12.625185012817383
    10. 's' → logprob: -12.875185012817383

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19055745005607605
    2. ')' → logprob: -1.8155574798583984
    3. '[' → logprob: -4.565557479858398
    4. '[]):' → logprob: -8.565557479858398
    5. '):
' → logprob: -9.690557479858398
    6. '(' → logprob: -10.315557479858398
    7. ',' → logprob: -11.190557479858398
    8. ':' → logprob: -12.190557479858398
    9. '   ' → logprob: -12.315557479858398
    10. '[]' → logprob: -12.565557479858398

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8189562559127808
    2. '(' → logprob: -1.3189562559127808
    3. '   ' → logprob: -1.3189562559127808
    4. '```' → logprob: -4.94395637512207
    5. '[' → logprob: -5.69395637512207
    6. '(:' → logprob: -5.94395637512207
    7. '():' → logprob: -6.44395637512207
    8. ''' → logprob: -6.56895637512207
    9. '[:]' → logprob: -6.81895637512207
    10. '    
' → logprob: -6.94395637512207

Token 11: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7960294485092163
    2. ' if' → logprob: -1.6710294485092163
    3. ' import' → logprob: -2.171029567718506
    4. 'import' → logprob: -2.796029567718506
    5. '```' → logprob: -3.171029567718506
    6. ' ' → logprob: -3.546029567718506
    7. ' sum' → logprob: -3.796029567718506
    8. ' n' → logprob: -4.046029567718506
    9. ' return' → logprob: -4.296029567718506
    10. ' total' → logprob: -4.421029567718506

Token 12: '=len' (ID: 114011)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1448468267917633
    2. '=' → logprob: -2.7698469161987305
    3. '_' → logprob: -2.7698469161987305
    4. ' ' → logprob: -4.7698469161987305
    5. ')' → logprob: -8.26984691619873
    6. '   ' → logprob: -8.39484691619873
    7. '  ' → logprob: -8.89484691619873
    8. '=len' → logprob: -9.26984691619873
    9. '_space' → logprob: -10.01984691619873
    10. ',' → logprob: -10.39484691619873

Token 13: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0019301822176203132
    2. '(' → logprob: -6.251930236816406
    3. ' (' → logprob: -14.126930236816406
    4. 'arr' → logprob: -15.626930236816406
    5. '(array' → logprob: -15.876930236816406
    6. '<arr' → logprob: -16.126930236816406
    7. '(n' → logprob: -16.626930236816406
    8. '	arr' → logprob: -16.751930236816406
    9. '[arr' → logprob: -16.751930236816406
    10. '(ent' → logprob: -16.876930236816406

Token 14: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012213163427077234
    2. ')
' → logprob: -9.3751220703125
    3. ' )' → logprob: -11.2501220703125
    4. '   ' → logprob: -11.5001220703125
    5. '')' → logprob: -12.0001220703125
    6. '[' → logprob: -13.1251220703125
    7. '`)' → logprob: -13.5001220703125
    8. '))' → logprob: -14.1251220703125
    9. ')return' → logprob: -14.1251220703125
    10. '")' → logprob: -14.5001220703125

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3154248297214508
    2. ' ' → logprob: -1.6904247999191284
    3. ')' → logprob: -3.815424919128418
    4. '*' → logprob: -4.315424919128418
    5. '[' → logprob: -4.815424919128418
    6. '    
' → logprob: -5.190424919128418
    7. '
' → logprob: -5.315424919128418
    8. '    ' → logprob: -5.815424919128418
    9. '```' → logprob: -5.815424919128418
    10. ',' → logprob: -5.940424919128418

Token 16: ' if' (ID: 538)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.3882976770401
    2. ' counts' → logprob: -1.5132976770401
    3. 'counts' → logprob: -1.8882976770401
    4. ' freq' → logprob: -2.1382975578308105
    5. 'freq' → logprob: -2.5132975578308105
    6. 'from' → logprob: -2.7632975578308105
    7. ' frequencies' → logprob: -3.3882975578308105
    8. ' fre' → logprob: -3.6382975578308105
    9. ' if' → logprob: -4.7632975578308105
    10. '   ' → logprob: -5.1382975578308105

Token 17: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5963379740715027
    2. ' n' → logprob: -0.9713379740715027
    3. ' ' → logprob: -2.7213380336761475
    4. 'n' → logprob: -5.596337795257568
    5. 'not' → logprob: -7.471337795257568
    6. ' len' → logprob: -7.721337795257568
    7. ' arr' → logprob: -10.596338272094727
    8. 'len' → logprob: -11.346338272094727
    9. 'n't' → logprob: -11.471338272094727
    10. ')' → logprob: -11.721338272094727

Token 18: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28770384192466736
    2. ' ==' → logprob: -1.4127038717269897
    3. '>' → logprob: -5.912703990936279
    4. ' >' → logprob: -6.912703990936279
    5. ' <' → logprob: -7.162703990936279
    6. '=' → logprob: -7.412703990936279
    7. '<' → logprob: -7.537703990936279
    8. ' <=' → logprob: -7.912703990936279
    9. '<=' → logprob: -7.912703990936279
    10. ' ' → logprob: -9.662703514099121

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003368926409166306
    2. ' ' → logprob: -8.000336647033691
    3. '1' → logprob: -13.750336647033691
    4. '۰' → logprob: -16.125337600708008
    5. '=' → logprob: -16.875337600708008
    6. ')' → logprob: -17.562837600708008
    7. '   ' → logprob: -17.750337600708008
    8. '  ' → logprob: -17.875337600708008
    9. '```' → logprob: -17.937837600708008
    10. '０' → logprob: -18.187837600708008

Token 20: ':return' (ID: 188357)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002330693881958723
    2. ':return' → logprob: -6.752330780029297
    3. ' :' → logprob: -7.002330780029297
    4. ':
' → logprob: -8.627330780029297
    5. '   ' → logprob: -9.752330780029297
    6. '):' → logprob: -12.627330780029297
    7. ' :
' → logprob: -12.877330780029297
    8. '    ' → logprob: -13.502330780029297
    9. '       ' → logprob: -13.502330780029297
    10. ',' → logprob: -13.752330780029297

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02743329480290413
    2. '0' → logprob: -3.902433395385742
    3. ' None' → logprob: -5.902433395385742
    4. ' 
' → logprob: -6.402433395385742
    5. '  ' → logprob: -7.402433395385742
    6. '1' → logprob: -7.402433395385742
    7. '  
' → logprob: -7.777433395385742
    8. ' 
 
' → logprob: -8.652433395385742
    9. 'None' → logprob: -8.777433395385742
    10. '  
  
' → logprob: -9.527433395385742

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010513884481042624
    2. ' ' → logprob: -6.876051425933838
    3. 'None' → logprob: -11.87605094909668
    4. '{}' → logprob: -12.00105094909668
    5. ')' → logprob: -13.87605094909668
    6. '[]' → logprob: -13.87605094909668
    7. '  ' → logprob: -14.00105094909668
    8. ' None' → logprob: -14.37605094909668
    9. '1' → logprob: -14.50105094909668
    10. '-' → logprob: -14.87605094909668

Token 23: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5466797351837158
    2. '
' → logprob: -1.4216797351837158
    3. '    
' → logprob: -2.671679735183716
    4. '  
' → logprob: -3.046679735183716
    5. '\n' → logprob: -4.046679496765137
    6. '   
' → logprob: -4.046679496765137
    7. '\' → logprob: -4.546679496765137
    8. 'n' → logprob: -5.421679496765137
    9. '   ' → logprob: -6.046679496765137
    10. ' ' → logprob: -6.296679496765137

Token 24: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9241260886192322
    2. '
' → logprob: -1.174126148223877
    3. '    
' → logprob: -2.299126148223877
    4. ' ' → logprob: -2.924126148223877
    5. '   ' → logprob: -3.299126148223877
    6. '   
' → logprob: -3.549126148223877
    7. '  
' → logprob: -3.674126148223877
    8. ',' → logprob: -4.174126148223877
    9. '<|end|>' → logprob: -5.174126148223877
    10. 'd' → logprob: -5.299126148223877

Token 25: ' freq' (ID: 42078)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7360668778419495
    2. ' counts' → logprob: -2.1110668182373047
    3. ' 
' → logprob: -2.6110668182373047
    4. '   ' → logprob: -2.6110668182373047
    5. 'counts' → logprob: -2.8610668182373047
    6. ' from' → logprob: -3.3610668182373047
    7. 'from' → logprob: -3.8610668182373047
    8. ' frequencies' → logprob: -3.9860668182373047
    9. 'd' → logprob: -4.236066818237305
    10. ' counter' → logprob: -4.486066818237305

Token 26: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36399906873703003
    2. 's' → logprob: -1.4889991283416748
    3. ' =' → logprob: -2.863999128341675
    4. '={}' → logprob: -3.863999128341675
    5. '_' → logprob: -7.363998889923096
    6. ' ' → logprob: -9.113999366760254
    7. '={}
' → logprob: -9.363999366760254
    8. '={' → logprob: -9.488999366760254
    9. '_=' → logprob: -9.488999366760254
    10. '_counts' → logprob: -9.613999366760254

Token 27: '0' (ID: 15)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -8.804671233519912e-05
    2. ' arr' → logprob: -9.62508773803711
    3. '0' → logprob: -10.87508773803711
    4. '(arr' → logprob: -14.37508773803711
    5. '	arr' → logprob: -14.75008773803711
    6. '```' → logprob: -14.75008773803711
    7. '   ' → logprob: -14.87508773803711
    8. ']' → logprob: -15.12508773803711
    9. 'float' → logprob: -16.00008773803711
    10. '
' → logprob: -16.00008773803711

Token 28: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2970370054244995
    2. ']*' → logprob: -1.4220370054244995
    3. ' for' → logprob: -1.6720370054244995
    4. 'for' → logprob: -1.7970370054244995
    5. '/' → logprob: -2.047037124633789
    6. ']*(' → logprob: -6.922037124633789
    7. ')' → logprob: -7.672037124633789
    8. '	for' → logprob: -8.047037124633789
    9. '.' → logprob: -8.672037124633789
    10. ' ]' → logprob: -8.922037124633789

Token 29: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -0.02890171855688095
    2. 'n' → logprob: -3.9039018154144287
    3. 'len' → logprob: -5.27890157699585
    4. 'max' → logprob: -6.52890157699585
    5. '(' → logprob: -7.15390157699585
    6. '100' → logprob: -8.028902053833008
    7. '26' → logprob: -8.653902053833008
    8. '10' → logprob: -9.028902053833008
    9. '(n' → logprob: -9.653902053833008
    10. '(len' → logprob: -9.903902053833008

Token 30: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6292732357978821
    2. '<|end|>' → logprob: -1.7542731761932373
    3. ' for' → logprob: -2.1292731761932373
    4. ' ' → logprob: -2.6292731761932373
    5. 'for' → logprob: -2.7542731761932373
    6. ' 
' → logprob: -4.129273414611816
    7. '   ' → logprob: -4.379273414611816
    8. '  
' → logprob: -5.504273414611816
    9. '    
' → logprob: -6.379273414611816
    10. '<|end|>' → logprob: -6.629273414611816

Token 32: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5254442095756531
    2. 'for' (adapté à ' for') → logprob: -0.9004442095756531
    3. ' ' → logprob: -6.650444030761719
    4. '<|end|>' → logprob: -7.150444030761719
    5. '   ' → logprob: -9.025444030761719
    6. '```' → logprob: -10.275444030761719
    7. ')' → logprob: -10.525444030761719
    8. '  ' → logprob: -11.150444030761719
    9. ' 
' → logprob: -12.150444030761719
    10. '<|end|>' → logprob: -12.275444030761719

Token 33: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6790009140968323
    2. ' x' → logprob: -0.9290009140968323
    3. ' b' → logprob: -3.3040008544921875
    4. 'b' → logprob: -3.8040008544921875
    5. ' c' → logprob: -4.5540008544921875
    6. ' i' → logprob: -4.8040008544921875
    7. 'c' → logprob: -5.3040008544921875
    8. 'i' → logprob: -5.3040008544921875
    9. 'ch' → logprob: -5.8040008544921875
    10. 'byte' → logprob: -6.5540008544921875

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014312872663140297
    2. 'in' → logprob: -4.264312744140625
    3. ' ' → logprob: -8.889312744140625
    4. '  ' → logprob: -12.889312744140625
    5. '   ' → logprob: -13.264312744140625
    6. 's' → logprob: -13.389312744140625
    7. 'n' → logprob: -13.639312744140625
    8. '	in' → logprob: -13.889312744140625
    9. '<|end|>' → logprob: -14.576812744140625
    10. 'In' → logprob: -14.576812744140625

Token 35: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0028052295092493296
    2. ' arr' → logprob: -5.877805233001709
    3. 'range' → logprob: -15.62780475616455
    4. '	arr' → logprob: -16.877805709838867
    5. '(arr' → logprob: -17.627805709838867
    6. ' ' → logprob: -17.877805709838867
    7. '<arr' → logprob: -18.877805709838867
    8. ' range' → logprob: -19.127805709838867
    9. '$arr' → logprob: -19.252805709838867
    10. 'a' → logprob: -19.252805709838867

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032378386822529137
    2. ' :' → logprob: -8.375324249267578
    3. ':
' → logprob: -9.625324249267578
    4. '):' → logprob: -11.125324249267578
    5. '   ' → logprob: -12.375324249267578
    6. ':int' → logprob: -13.750324249267578
    7. ':**' → logprob: -14.000324249267578
    8. '<|end|>' → logprob: -14.000324249267578
    9. ',' → logprob: -14.375324249267578
    10. '.' → logprob: -14.500324249267578

Token 37: ' freq' (ID: 42078)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3648110032081604
    2. '       ' → logprob: -2.1148109436035156
    3. '
' → logprob: -2.4898109436035156
    4. ' ' → logprob: -3.7398109436035156
    5. ' freq' → logprob: -3.7398109436035156
    6. '<|end|>' → logprob: -4.364810943603516
    7. 'freq' → logprob: -4.364810943603516
    8. '    ' → logprob: -4.614810943603516
    9. '    
' → logprob: -4.989810943603516
    10. '        
' → logprob: -5.614810943603516

Token 38: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.006220282055437565
    2. '[' → logprob: -5.25622034072876
    3. '[f' → logprob: -7.63122034072876
    4. '[i' → logprob: -9.131219863891602
    5. '[q' → logprob: -9.506219863891602
    6. '[int' → logprob: -9.631219863891602
    7. '[ix' → logprob: -10.506219863891602
    8. '[]' → logprob: -10.631219863891602
    9. ']' → logprob: -10.756219863891602
    10. '_freq' → logprob: -10.881219863891602

Token 39: ']+=' (ID: 123635)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4753064215183258
    2. ']+=' → logprob: -0.9753063917160034
    3. ' ]' → logprob: -6.725306510925293
    4. ']+' → logprob: -11.975306510925293
    5. '']' → logprob: -12.350306510925293
    6. '   ' → logprob: -12.850306510925293
    7. '<|end|>' → logprob: -12.975306510925293
    8. '"]' → logprob: -13.225306510925293
    9. '+=' → logprob: -13.725306510925293
    10. '  ' → logprob: -13.850306510925293

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.750036239624023
    4. '<|end|>' → logprob: -19.250036239624023
    5. '```' → logprob: -19.625036239624023
    6. '۱' → logprob: -20.062536239624023
    7. '  ' → logprob: -20.500036239624023
    8. '１' → logprob: -20.687536239624023
    9. '>' → logprob: -20.875036239624023
    10. '१' → logprob: -21.250036239624023

Token 41: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.889032244682312
    2. ' 
' → logprob: -1.764032244682312
    3. '   ' → logprob: -1.889032244682312
    4. '  
' → logprob: -2.7640323638916016
    5. '    
' → logprob: -2.7640323638916016
    6. '
' → logprob: -3.3890323638916016
    7. '     
' → logprob: -3.5140323638916016
    8. '\n' → logprob: -3.7640323638916016
    9. '```' → logprob: -4.389032363891602
    10. '   
' → logprob: -4.764032363891602

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4551677703857422
    2. ' 
' → logprob: -1.5801677703857422
    3. ' ' → logprob: -1.7051677703857422
    4. '    
' → logprob: -2.080167770385742
    5. '  
' → logprob: -2.205167770385742
    6. '
' → logprob: -2.580167770385742
    7. '   
' → logprob: -3.955167770385742
    8. '```' → logprob: -4.705167770385742
    9. '[' → logprob: -5.080167770385742
    10. '     
' → logprob: -5.080167770385742

Token 43: ' h' (ID: 312)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30510470271110535
    2. 'entropy' → logprob: -2.3051047325134277
    3. ' e' → logprob: -2.4301047325134277
    4. 's' → logprob: -3.6801047325134277
    5. ' entropy' → logprob: -4.055104732513428
    6. 'import' → logprob: -4.680104732513428
    7. ' ' → logprob: -5.555104732513428
    8. 'ent' → logprob: -6.055104732513428
    9. ' total' → logprob: -6.180104732513428
    10. ' import' → logprob: -6.430104732513428

Token 44: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03376602753996849
    2. ' =' → logprob: -3.408766031265259
    3. ' ' → logprob: -10.28376579284668
    4. '+=' → logprob: -10.78376579284668
    5. '=sum' → logprob: -10.90876579284668
    6. ' +=' → logprob: -12.03376579284668
    7. '_' → logprob: -12.28376579284668
    8. '_=' → logprob: -12.40876579284668
    9. '/=' → logprob: -12.40876579284668
    10. '   ' → logprob: -12.53376579284668

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003657362540252507
    2. '-s' → logprob: -8.6253662109375
    3. '-' → logprob: -9.3753662109375
    4. ' ' → logprob: -9.6253662109375
    5. 'sum' → logprob: -10.5003662109375
    6. ' -' → logprob: -13.0003662109375
    7. '   ' → logprob: -13.1253662109375
    8. ' sum' → logprob: -14.0003662109375
    9. '```' → logprob: -15.0003662109375
    10. '-m' → logprob: -15.2503662109375

Token 46: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2321914434432983
    2. '
' → logprob: -1.4821914434432983
    3. 'for' → logprob: -1.4821914434432983
    4. '   ' → logprob: -1.6071914434432983
    5. '<|end|>' → logprob: -3.732191562652588
    6. '	for' → logprob: -5.232191562652588
    7. ' ' → logprob: -5.232191562652588
    8. '.' → logprob: -5.357191562652588
    9. '<|end|>' → logprob: -5.982191562652588
    10. '  ' → logprob: -5.982191562652588

Token 47: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6768879294395447
    2. 'for' → logprob: -1.3018879890441895
    3. '   ' → logprob: -2.0518879890441895
    4. '
' → logprob: -2.5518879890441895
    5. '	for' → logprob: -5.3018879890441895
    6. ' ' → logprob: -5.9268879890441895
    7. '<|end|>' → logprob: -6.1768879890441895
    8. '  ' → logprob: -7.0518879890441895
    9. '.' → logprob: -7.3018879890441895
    10. '' → logprob: -7.3018879890441895

Token 48: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29333579540252686
    2. ' for' → logprob: -1.4183357954025269
    3. '   ' → logprob: -4.918335914611816
    4. '
' → logprob: -5.418335914611816
    5. ' 
' → logprob: -8.793335914611816
    6. '	for' → logprob: -9.918335914611816
    7. ' ' → logprob: -10.043335914611816
    8. '    
' → logprob: -10.293335914611816
    9. '```' → logprob: -10.418335914611816
    10. '<|end|>' → logprob: -11.293335914611816

Token 49: ' c' (ID: 274)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4821056127548218
    2. ' f' → logprob: -1.1071056127548218
    3. 'i' → logprob: -3.3571057319641113
    4. ' i' → logprob: -4.107105731964111
    5. 'x' → logprob: -8.107105255126953
    6. ' x' → logprob: -9.607105255126953
    7. ' ' → logprob: -9.607105255126953
    8. 'v' → logprob: -9.857105255126953
    9. 'freq' → logprob: -9.857105255126953
    10. ' p' → logprob: -9.982105255126953

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0023303362540900707
    2. 'in' → logprob: -6.127330303192139
    3. ' ' → logprob: -9.002330780029297
    4. 'freq' → logprob: -11.752330780029297
    5. ' freq' → logprob: -12.752330780029297
    6. ',' → logprob: -12.752330780029297
    7. '  ' → logprob: -13.002330780029297
    8. 'range' → logprob: -13.127330780029297
    9. '   ' → logprob: -13.377330780029297
    10. ' range' → logprob: -14.127330780029297

Token 51: ' freq' (ID: 42078)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5834181904792786
    2. 'freq' → logprob: -0.8334181904792786
    3. ' range' → logprob: -5.083418369293213
    4. ' freq' → logprob: -6.833418369293213
    5. 'fre' → logprob: -10.083417892456055
    6. 'frequency' → logprob: -10.208417892456055
    7. 'set' → logprob: -10.583417892456055
    8. '(freq' → logprob: -10.708417892456055
    9. '[' → logprob: -11.708417892456055
    10. 'f' → logprob: -12.208417892456055

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008422649116255343
    2. ':
' → logprob: -7.125842094421387
    3. ' if' → logprob: -11.125842094421387
    4. ' :' → logprob: -11.125842094421387
    5. ':**' → logprob: -12.750842094421387
    6. 'if' → logprob: -13.500842094421387
    7. '):' → logprob: -13.625842094421387
    8. '>' → logprob: -14.875842094421387
    9. ':return' → logprob: -15.000842094421387
    10. '<|end|>' → logprob: -15.250842094421387

Token 53: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0852220058441162
    2. '       ' → logprob: -1.3352220058441162
    3. '    ' → logprob: -1.4602220058441162
    4. ' ' → logprob: -1.9602220058441162
    5. '<|end|>' → logprob: -3.960222005844116
    6. '   ' → logprob: -6.335222244262695
    7. '        ' → logprob: -6.460222244262695
    8. '     ' → logprob: -6.960222244262695
    9. 'if' → logprob: -7.460222244262695
    10. ' 
' → logprob: -7.835222244262695

Token 54: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04199346899986267
    2. 'if' (adapté à ' if') → logprob: -3.2919933795928955
    3. ' p' → logprob: -6.416993618011475
    4. '       ' → logprob: -6.916993618011475
    5. 'p' → logprob: -7.416993618011475
    6. '    ' → logprob: -7.916993618011475
    7. '        ' → logprob: -9.041993141174316
    8. 'prob' → logprob: -10.041993141174316
    9. ' ' → logprob: -10.166993141174316
    10. 's' → logprob: -10.541993141174316

Token 55: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.016046568751335144
    2. 'c' → logprob: -4.141046524047852
    3. ' ' → logprob: -12.016046524047852
    4. '   ' → logprob: -12.766046524047852
    5. '>' → logprob: -13.891046524047852
    6. '	c' → logprob: -14.016046524047852
    7. ')c' → logprob: -14.641046524047852
    8. '    ' → logprob: -15.016046524047852
    9. '  ' → logprob: -15.016046524047852
    10. '0' → logprob: -15.766046524047852

Token 56: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007110913284122944
    2. ' >' → logprob: -5.132111072540283
    3. '!=' → logprob: -7.882111072540283
    4. '==' → logprob: -8.132110595703125
    5. '0' → logprob: -8.382110595703125
    6. '<|end|>' → logprob: -9.007110595703125
    7. ':' → logprob: -10.257110595703125
    8. '/' → logprob: -10.882110595703125
    9. '<|end|>' → logprob: -10.882110595703125
    10. '">' → logprob: -11.632110595703125

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010354298865422606
    2. ' ' → logprob: -6.876035213470459
    3. '1' → logprob: -13.626035690307617
    4. '<|end|>' → logprob: -14.126035690307617
    5. '```' → logprob: -15.876035690307617
    6. '>' → logprob: -16.001035690307617
    7. '۰' → logprob: -16.126035690307617
    8. 'n' → logprob: -16.126035690307617
    9. '<|end|>' → logprob: -16.376035690307617
    10. '=' → logprob: -17.001035690307617

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024662634823471308
    2. ':
' → logprob: -6.502466201782227
    3. ':h' → logprob: -7.752466201782227
    4. ' :' → logprob: -7.877466201782227
    5. ':return' → logprob: -9.502466201782227
    6. '       ' → logprob: -10.502466201782227
    7. '           ' → logprob: -10.627466201782227
    8. ' and' → logprob: -11.877466201782227
    9. ' h' → logprob: -12.502466201782227
    10. ':

' → logprob: -12.627466201782227

Token 59: '           ' (ID: 352)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.1014380007982254
    2. '           ' → logprob: -2.851438045501709
    3. '        ' → logprob: -3.476438045501709
    4. 'h' → logprob: -5.351438045501709
    5. ' ' → logprob: -7.476438045501709
    6. '            ' → logprob: -7.476438045501709
    7. '       ' → logprob: -7.726438045501709
    8. ' s' → logprob: -7.726438045501709
    9. ' n' → logprob: -9.10143756866455
    10. '<|end|>' → logprob: -9.22643756866455

Token 60: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6032580137252808
    2. ' h' → logprob: -1.1032580137252808
    3. 'h' → logprob: -2.6032581329345703
    4. 'p' (adapté à ' p') → logprob: -3.1032581329345703
    5. '           ' → logprob: -6.72825813293457
    6. 'prob' → logprob: -7.47825813293457
    7. ' ' → logprob: -8.72825813293457
    8. ' prob' → logprob: -9.47825813293457
    9. '   ' → logprob: -9.85325813293457
    10. ' probability' → logprob: -9.97825813293457

Token 61: '=c' (ID: 43473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935672163963318
    2. ' =' → logprob: -0.6935672163963318
    3. '=p' → logprob: -7.943567276000977
    4. '=c' → logprob: -9.943567276000977
    5. '=n' → logprob: -12.318567276000977
    6. '=int' → logprob: -13.818567276000977
    7. '=f' → logprob: -13.818567276000977
    8. '=h' → logprob: -13.943567276000977
    9. ' ' → logprob: -14.068567276000977
    10. 'log' → logprob: -14.068567276000977

Token 62: '/n' (ID: 18292)
  Prédit: '/n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/n' → logprob: -0.01836860366165638
    2. '/' → logprob: -4.393368721008301
    3. ' /' → logprob: -5.143368721008301
    4. 'n' → logprob: -13.5183687210083
    5. '/log' → logprob: -13.7683687210083
    6. '/s' → logprob: -15.2683687210083
    7. '/ng' → logprob: -15.6433687210083
    8. '/h' → logprob: -16.143367767333984
    9. '/div' → logprob: -16.143367767333984
    10. '/
' → logprob: -16.393367767333984

Token 63: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3634617030620575
    2. '*' → logprob: -1.2384617328643799
    3. ' log' → logprob: -4.988461494445801
    4. '           ' → logprob: -5.488461494445801
    5. ')' → logprob: -7.113461494445801
    6. 'log' → logprob: -7.488461494445801
    7. ')*' → logprob: -7.738461494445801
    8. ' ' → logprob: -7.988461494445801
    9. '<|end|>' → logprob: -8.1134614944458
    10. '            
' → logprob: -8.2384614944458

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35175323486328125
    2. ' h' → logprob: -1.6017532348632812
    3. ' *' → logprob: -2.8517532348632812
    4. '*' → logprob: -3.8517532348632812
    5. 'h' → logprob: -5.101753234863281
    6. '*h' → logprob: -5.476753234863281
    7. '
' → logprob: -5.851753234863281
    8. '            
' → logprob: -6.851753234863281
    9. ' 
' → logprob: -7.976753234863281
    10. '               ' → logprob: -8.226753234863281

Token 65: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.00408528558909893
    2. ' h' → logprob: -5.504085063934326
    3. '           ' → logprob: -12.504085540771484
    4. 'import' → logprob: -13.879085540771484
    5. '   ' → logprob: -14.254085540771484
    6. '```' → logprob: -14.504085540771484
    7. '	h' → logprob: -15.129085540771484
    8. ' ' → logprob: -15.254085540771484
    9. '  ' → logprob: -16.254085540771484
    10. '
' → logprob: -16.879085540771484

Token 66: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.02609916590154171
    2. '+=' → logprob: -4.27609920501709
    3. '-' → logprob: -4.52609920501709
    4. ' -=' → logprob: -6.90109920501709
    5. '   ' → logprob: -10.65109920501709
    6. '+-' → logprob: -13.15109920501709
    7. ' +=' → logprob: -13.27609920501709
    8. ' -' → logprob: -13.27609920501709
    9. '  ' → logprob: -13.90109920501709
    10. '=-' → logprob: -14.15109920501709

Token 67: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005233882926404476
    2. ' p' → logprob: -5.2552337646484375
    3. 'log' → logprob: -17.255233764648438
    4. '(p' → logprob: -18.130233764648438
    5. '           ' → logprob: -18.255233764648438
    6. '*p' → logprob: -18.380233764648438
    7. '<p' → logprob: -19.130233764648438
    8. '	p' → logprob: -19.255233764648438
    9. ')p' → logprob: -19.380233764648438
    10. '   ' → logprob: -20.005233764648438

Token 68: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.001635428168810904
    2. 'log' → logprob: -6.626635551452637
    3. ' *' → logprob: -8.126635551452637
    4. ' log' → logprob: -11.251635551452637
    5. '*object' → logprob: -14.501635551452637
    6. '"log' → logprob: -16.25163459777832
    7. '*(' → logprob: -16.87663459777832
    8. '**' → logprob: -16.87663459777832
    9. '*out' → logprob: -17.12663459777832
    10. '*\' → logprob: -17.37663459777832

Token 69: 'log' (ID: 2133)
  Prédit: 'log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -4.56102097814437e-05
    2. ' log' → logprob: -10.000045776367188
    3. '(log' → logprob: -16.750045776367188
    4. '"log' → logprob: -17.750045776367188
    5. 'logen' → logprob: -18.750045776367188
    6. '	log' → logprob: -19.500045776367188
    7. 'loga' → logprob: -19.875045776367188
    8. '.log' → logprob: -20.000045776367188
    9. '<|end|>' → logprob: -20.250045776367188
    10. 'loge' → logprob: -20.875045776367188

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.75000286102295
    3. '₂' → logprob: -13.75000286102295
    4. '_' → logprob: -15.12500286102295
    5. '(' → logprob: -16.375001907348633
    6. '۲' → logprob: -16.875001907348633
    7. '２' → logprob: -17.375001907348633
    8. '٢' → logprob: -18.125001907348633
    9. '(p' → logprob: -18.250001907348633
    10. '```' → logprob: -18.250001907348633

Token 71: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0032749217934906483
    2. '(' → logprob: -5.753274917602539
    3. 'p' → logprob: -9.253274917602539
    4. '(
' → logprob: -14.628274917602539
    5. ' (' → logprob: -15.003274917602539
    6. '<|end|>' → logprob: -15.378274917602539
    7. ' p' → logprob: -15.753274917602539
    8. ')p' → logprob: -16.12827491760254
    9. ')' → logprob: -16.12827491760254
    10. '()' → logprob: -17.87827491760254

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011772511061280966
    2. ')
' → logprob: -6.7511773109436035
    3. ')
' → logprob: -12.501176834106445
    4. ')return' → logprob: -13.626176834106445
    5. '   ' → logprob: -14.501176834106445
    6. ')

' → logprob: -14.751176834106445
    7. ' )' → logprob: -14.751176834106445
    8. '))' → logprob: -15.751176834106445
    9. ')`' → logprob: -15.751176834106445
    10. ')**' → logprob: -16.126176834106445

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.594080924987793
    2. '
' → logprob: -0.844080924987793
    3. ' return' → logprob: -4.344080924987793
    4. 'return' → logprob: -6.469080924987793
    5. '	return' → logprob: -6.719080924987793
    6. '<|end|>' → logprob: -7.469080924987793
    7. '    
' → logprob: -7.594080924987793
    8. ' ' → logprob: -8.719080924987793
    9. ' 
' → logprob: -8.719080924987793
    10. '
' → logprob: -8.719080924987793

Token 74: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31135687232017517
    2. ' return' → logprob: -1.6863569021224976
    3. 'return' (adapté à ' return') → logprob: -3.061356782913208
    4. '	return' → logprob: -4.311357021331787
    5. '
' → logprob: -4.436357021331787
    6. '<|end|>' → logprob: -5.436357021331787
    7. ' ' → logprob: -5.686357021331787
    8. ':return' → logprob: -6.686357021331787
    9. ')' → logprob: -8.436356544494629
    10. '  ' → logprob: -8.561356544494629

Token 75: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0067170290276408195
    2. ' h' → logprob: -5.006717205047607
    3. '	h' → logprob: -13.63171672821045
    4. '(h' → logprob: -14.63171672821045
    5. '<h' → logprob: -18.381717681884766
    6. '<|end|>' → logprob: -18.506717681884766
    7. '"h' → logprob: -18.631717681884766
    8. '_h' → logprob: -18.631717681884766
    9. ',h' → logprob: -18.756717681884766
    10. ' ' → logprob: -18.756717681884766

Token 76: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.004657729994505644
    2. 'True' → logprob: -5.379657745361328
    3. '(True' → logprob: -10.504657745361328
    4. ' ' → logprob: -11.754657745361328
    5. '1' → logprob: -13.504657745361328
    6. '=True' → logprob: -15.129657745361328
    7. ' n' → logprob: -15.754657745361328
    8. '  ' → logprob: -15.879657745361328
    9. ' input' → logprob: -16.254657745361328
    10. '```' → logprob: -16.879657745361328

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012804759899154305
    2. ' :' → logprob: -7.126280307769775
    3. '():' → logprob: -7.876280307769775
    4. ':
' → logprob: -9.626280784606934
    5. ':**' → logprob: -11.501280784606934
    6. '<|end|>' → logprob: -12.251280784606934
    7. '):' → logprob: -12.501280784606934
    8. ',' → logprob: -13.126280784606934
    9. ':def' → logprob: -14.251280784606934
    10. ' ():' → logprob: -14.251280784606934

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41382071375846863
    2. ' input' → logprob: -1.163820743560791
    3. ' readline' → logprob: -5.663820743560791
    4. ' user' → logprob: -5.913820743560791
    5. ' inp' → logprob: -5.913820743560791
    6. ' x' → logprob: -5.913820743560791
    7. ' data' → logprob: -6.413820743560791
    8. ' print' → logprob: -6.413820743560791
    9. '<|end|>' → logprob: -6.538820743560791
    10. 'input' → logprob: -6.663820743560791

Token 81: ' N' (ID: 478)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.7477661371231079
    2. ' arr' → logprob: -1.122766137123108
    3. 'data' → logprob: -2.6227660179138184
    4. 'arr' → logprob: -2.9977660179138184
    5. ' True' → logprob: -3.7477660179138184
    6. ' inp' → logprob: -4.372766017913818
    7. ' try' → logprob: -4.497766017913818
    8. '   ' → logprob: -4.747766017913818
    9. 'try' → logprob: -5.622766017913818
    10. ' input' → logprob: -5.872766017913818

Token 82: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1485992819070816
    2. ' =' → logprob: -2.14859938621521
    3. '=int' → logprob: -4.273599147796631
    4. '=input' → logprob: -4.898599147796631
    5. ',' → logprob: -11.148599624633789
    6. '>' → logprob: -11.773599624633789
    7. ' ' → logprob: -11.773599624633789
    8. '=

' → logprob: -12.898599624633789
    9. ' >' → logprob: -13.148599624633789
    10. '=float' → logprob: -13.648599624633789

Token 83: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00675149355083704
    2. '(' → logprob: -5.006751537322998
    3. 'input' → logprob: -10.25675106048584
    4. '()' → logprob: -14.88175106048584
    5. '(
' → logprob: -15.38175106048584
    6. ' (' → logprob: -16.381752014160156
    7. ' input' → logprob: -16.631752014160156
    8. '=input' → logprob: -16.631752014160156
    9. '(

' → logprob: -16.756752014160156
    10. ' ' → logprob: -17.756752014160156

Token 84: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.056921765208244324
    2. '()' → logprob: -2.9319217205047607
    3. '(' → logprob: -6.43192195892334
    4. '()>' → logprob: -8.18192195892334
    5. ')' → logprob: -10.43192195892334
    6. '();)' → logprob: -10.68192195892334
    7. ' ())' → logprob: -11.30692195892334
    8. '());' → logprob: -11.30692195892334
    9. '())
' → logprob: -11.55692195892334
    10. '().' → logprob: -11.68192195892334

Token 85: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2585739195346832
    2. 'if' (adapté à ' if') → logprob: -2.6335740089416504
    3. ' data' → logprob: -2.6335740089416504
    4. 'data' → logprob: -3.1335740089416504
    5. 'arr' → logprob: -4.00857400894165
    6. '<|end|>' → logprob: -4.50857400894165
    7. ' arr' → logprob: -4.75857400894165
    8. ' ' → logprob: -7.25857400894165
    9. 'n' → logprob: -8.133573532104492
    10. 'a' → logprob: -8.258573532104492

Token 87: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.01857515051960945
    2. 'N' → logprob: -4.018575191497803
    3. ' not' → logprob: -7.768575191497803
    4. ' ' → logprob: -13.268574714660645
    5. 'not' → logprob: -14.518574714660645
    6. ' ' → logprob: -16.26857566833496
    7. '>N' → logprob: -17.14357566833496
    8. '	N' → logprob: -17.76857566833496
    9. '0' → logprob: -18.26857566833496
    10. '   ' → logprob: -18.39357566833496

Token 88: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7083642482757568
    2. ' ==' → logprob: -0.7083642482757568
    3. '<=' → logprob: -4.833364486694336
    4. ' <=' → logprob: -4.958364486694336
    5. ')==' → logprob: -10.458364486694336
    6. '=' → logprob: -10.833364486694336
    7. '<|end|>' → logprob: -10.833364486694336
    8. ')<=' → logprob: -11.583364486694336
    9. '>' → logprob: -11.958364486694336
    10. ' ' → logprob: -12.333364486694336

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010454319417476654
    2. ' ' → logprob: -6.876045227050781
    3. '-' → logprob: -11.501045227050781
    4. ')' → logprob: -14.626045227050781
    5. '   ' → logprob: -14.626045227050781
    6. '  ' → logprob: -14.751045227050781
    7. ' -' → logprob: -14.751045227050781
    8. '۰' → logprob: -15.001045227050781
    9. '    ' → logprob: -15.501045227050781
    10. '٠' → logprob: -16.75104522705078

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038682064041495323
    2. ':
' → logprob: -8.125387191772461
    3. '   ' → logprob: -10.000387191772461
    4. ' :' → logprob: -10.125387191772461
    5. ':return' → logprob: -13.250387191772461
    6. '):' → logprob: -14.125387191772461
    7. '       ' → logprob: -14.250387191772461
    8. '    ' → logprob: -15.000387191772461
    9. '	break' → logprob: -15.250387191772461
    10. '<|end|>' → logprob: -15.625387191772461

Token 91: ' break' (ID: 2338)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.834362804889679
    2. ' break' → logprob: -0.834362804889679
    3. '       ' → logprob: -2.084362745285034
    4. '	break' → logprob: -5.084362983703613
    5. 'break' → logprob: -7.584362983703613
    6. ' ' → logprob: -8.334362983703613
    7. '   ' → logprob: -9.459362983703613
    8. '    ' → logprob: -9.459362983703613
    9. ' ' → logprob: -10.084362983703613
    10. '    
' → logprob: -10.709362983703613

Token 92: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06864672899246216
    2. ' arr' → logprob: -3.6936466693878174
    3. 'arr' → logprob: -4.1936469078063965
    4. 'data' → logprob: -4.6936469078063965
    5. ' data' → logprob: -4.8186469078063965
    6. '    
' → logprob: -5.6936469078063965
    7. '
' → logprob: -6.9436469078063965
    8. '<|end|>' → logprob: -7.0686469078063965
    9. 'input' → logprob: -7.3186469078063965
    10. ' input' → logprob: -7.5686469078063965

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8217480778694153
    2. 'data' → logprob: -1.9467480182647705
    3. ' arr' → logprob: -2.1967480182647705
    4. 'arr' → logprob: -2.1967480182647705
    5. '<|end|>' → logprob: -2.3217480182647705
    6. ' data' → logprob: -3.6967480182647705
    7. '    
' → logprob: -4.44674825668335
    8. '
' → logprob: -4.69674825668335
    9. '	arr' → logprob: -4.94674825668335
    10. 'a' → logprob: -5.07174825668335

Token 94: ' I' (ID: 357)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.24416156113147736
    2. 'data' → logprob: -2.369161605834961
    3. ' arr' → logprob: -2.619161605834961
    4. ' data' → logprob: -3.369161605834961
    5. '   ' → logprob: -4.369161605834961
    6. 'a' → logprob: -6.369161605834961
    7. '    
' → logprob: -8.619161605834961
    8. 's' → logprob: -8.869161605834961
    9. 'array' → logprob: -8.994161605834961
    10. '```' → logprob: -8.994161605834961

Token 95: '=list' (ID: 93413)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7684341073036194
    2. 'n' → logprob: -0.8934341073036194
    3. '=' → logprob: -2.3934340476989746
    4. '=[]' → logprob: -4.018434047698975
    5. '=input' → logprob: -5.018434047698975
    6. 'm' → logprob: -5.643434047698975
    7. '=[]
' → logprob: -6.643434047698975
    8. '=np' → logprob: -6.768434047698975
    9. '_arr' → logprob: -6.768434047698975
    10. '=array' → logprob: -7.643434047698975

Token 96: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.08717777580022812
    2. '(' → logprob: -2.5871777534484863
    3. '(input' → logprob: -4.962177753448486
    4. '(int' → logprob: -6.837177753448486
    5. '(range' → logprob: -9.337178230285645
    6. '(list' → logprob: -10.337178230285645
    7. '(eval' → logprob: -10.712178230285645
    8. '([' → logprob: -11.087178230285645
    9. '(i' → logprob: -11.837178230285645
    10. '()' → logprob: -11.962178230285645

Token 97: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004159602802246809
    2. '(' → logprob: -5.629159450531006
    3. '(input' → logprob: -7.629159450531006
    4. 'int' → logprob: -11.129159927368164
    5. '[int' → logprob: -11.254159927368164
    6. '(str' → logprob: -11.379159927368164
    7. '<|end|>' → logprob: -11.504159927368164
    8. '<int' → logprob: -12.254159927368164
    9. '(lambda' → logprob: -12.379159927368164
    10. ')' → logprob: -12.379159927368164

Token 98: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5828744769096375
    2. '(input' → logprob: -0.8328744769096375
    3. ',' → logprob: -5.332874298095703
    4. 'input' → logprob: -6.332874298095703
    5. '(' → logprob: -8.457874298095703
    6. ' input' → logprob: -9.832874298095703
    7. '=input' → logprob: -11.332874298095703
    8. ' (' → logprob: -11.707874298095703
    9. ' ,' → logprob: -12.332874298095703
    10. ')' → logprob: -12.832874298095703

Token 99: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0564331205387134e-05
    2. '()' → logprob: -11.62501049041748
    3. ' ().' → logprob: -13.50001049041748
    4. '(' → logprob: -16.125011444091797
    5. ' .' → logprob: -17.625011444091797
    6. '.split' → logprob: -17.750011444091797
    7. '.' → logprob: -18.000011444091797
    8. '()[' → logprob: -18.125011444091797
    9. ')' → logprob: -18.500011444091797
    10. '('').' → logprob: -18.875011444091797

Token 100: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005552975926548243
    2. 'strip' → logprob: -7.500555515289307
    3. ' split' → logprob: -13.875555038452148
    4. 'rstrip' → logprob: -13.875555038452148
    5. '(split' → logprob: -15.000555038452148
    6. 'spl' → logprob: -16.62555503845215
    7. '.split' → logprob: -18.37555503845215
    8. 's' → logprob: -19.00055503845215
    9. 'plit' → logprob: -19.75055503845215
    10. ' strip' → logprob: -20.50055503845215

Token 101: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.021969538182020187
    2. '()' → logprob: -4.521969318389893
    3. '))' → logprob: -5.021969318389893
    4. '())' → logprob: -5.521969318389893
    5. '(' → logprob: -8.64696979522705
    6. '()))
' → logprob: -9.89696979522705
    7. ')' → logprob: -10.89696979522705
    8. '(),' → logprob: -11.77196979522705
    9. '()));' → logprob: -11.89696979522705
    10. '()))

' → logprob: -12.89696979522705

Token 102: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24221765995025635
    2. '   ' → logprob: -2.242217540740967
    3. '<|end|>' → logprob: -2.867217540740967
    4. ' print' → logprob: -3.242217540740967
    5. '
' → logprob: -4.617217540740967
    6. '<|end|>' → logprob: -7.242217540740967
    7. '    
' → logprob: -7.492217540740967
    8. '[' → logprob: -7.867217540740967
    9. ')' → logprob: -7.992217540740967
    10. '```' → logprob: -8.242218017578125

Token 103: ' M' (ID: 391)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0037528136745095253
    2. 'e' → logprob: -5.878752708435059
    3. ' print' → logprob: -7.378752708435059
    4. 'p' → logprob: -9.003752708435059
    5. 'h' → logprob: -9.753752708435059
    6. 'result' → logprob: -10.003752708435059
    7. '   ' → logprob: -10.253752708435059
    8. 'entropy' → logprob: -10.878752708435059
    9. '    
' → logprob: -11.878752708435059
    10. 'E' → logprob: -12.253752708435059

Token 104: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.397514283657074
    2. ' =' → logprob: -1.2725143432617188
    3. '=len' → logprob: -3.2725143432617188
    4. '=int' → logprob: -5.022514343261719
    5. '=[]' → logprob: -6.022514343261719
    6. '=list' → logprob: -8.272514343261719
    7. '=[' → logprob: -8.522514343261719
    8. '=input' → logprob: -8.522514343261719
    9. '=N' → logprob: -9.647514343261719
    10. '=sum' → logprob: -9.772514343261719

Token 105: '256' (ID: 5780)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.17491953074932098
    2. 'max' → logprob: -3.049919605255127
    3. '[' → logprob: -3.799919605255127
    4. '[N' → logprob: -3.924919605255127
    5. '[int' → logprob: -4.299919605255127
    6. 'int' → logprob: -4.424919605255127
    7. '0' → logprob: -4.674919605255127
    8. 'entropy' → logprob: -4.924919605255127
    9. '[max' → logprob: -5.299919605255127
    10. ' N' → logprob: -5.549919605255127

Token 106: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2807379961013794
    2. '<|end|>' → logprob: -1.6557379961013794
    3. 'entropy' → logprob: -1.9057379961013794
    4. '
' → logprob: -2.03073787689209
    5. '   ' → logprob: -2.90573787689209
    6. 'max' → logprob: -3.53073787689209
    7. 'freq' → logprob: -4.15573787689209
    8. 'result' → logprob: -4.28073787689209
    9. 'h' → logprob: -4.40573787689209
    10. 'frequency' → logprob: -4.78073787689209

Token 108: ' min' (ID: 1349)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16634178161621094
    2. 'freq' → logprob: -3.291341781616211
    3. 'max' → logprob: -4.166341781616211
    4. 'h' → logprob: -4.291341781616211
    5. 'counts' → logprob: -4.416341781616211
    6. 'res' → logprob: -4.541341781616211
    7. 'ans' → logprob: -5.041341781616211
    8. 'arr' → logprob: -5.291341781616211
    9. 'print' → logprob: -5.416341781616211
    10. 'best' → logprob: -5.541341781616211

Token 109: 'H' (ID: 39)
  Prédit: '_entropy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_entropy' → logprob: -0.015470759011805058
    2. '_' → logprob: -5.2654709815979
    3. '_val' → logprob: -5.6404709815979
    4. '_ent' → logprob: -5.6404709815979
    5. '_h' → logprob: -6.7654709815979
    6. '_e' → logprob: -6.8904709815979
    7. '_value' → logprob: -8.015470504760742
    8. 'entropy' → logprob: -9.515470504760742
    9. '_en' → logprob: -9.640470504760742
    10. '_cost' → logprob: -9.890470504760742

Token 110: '=float' (ID: 80332)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1132965087890625
    2. ' =' → logprob: -2.2382965087890625
    3. '=min' → logprob: -9.363296508789062
    4. ',' → logprob: -9.613296508789062
    5. '=float' → logprob: -9.613296508789062
    6. '=None' → logprob: -9.613296508789062
    7. '=_' → logprob: -10.363296508789062
    8. '_=' → logprob: -10.488296508789062
    9. '=-' → logprob: -10.613296508789062
    10. '={}' → logprob: -10.988296508789062

Token 111: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.5399065017700195
    2. '('' → logprob: -1.1649065017700195
    3. ''' → logprob: -2.4149065017700195
    4. 'inf' → logprob: -4.5399065017700195
    5. ''inc' → logprob: -7.1649065017700195
    6. ''e' → logprob: -7.4149065017700195
    7. ''a' → logprob: -8.16490650177002
    8. ''op' → logprob: -8.16490650177002
    9. ''s' → logprob: -8.28990650177002
    10. ''+' → logprob: -8.53990650177002

Token 112: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00024596223374828696
    2. ''in' → logprob: -9.000246047973633
    3. ''' → logprob: -9.125246047973633
    4. 'in' → logprob: -12.125246047973633
    5. '"' → logprob: -12.875246047973633
    6. '-inf' → logprob: -13.000246047973633
    7. ' inf' → logprob: -13.625246047973633
    8. '+' → logprob: -14.250246047973633
    9. 'info' → logprob: -14.750246047973633
    10. ''+' → logprob: -15.125246047973633

Token 113: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002923160558566451
    2. ' )' → logprob: -6.252923011779785
    3. '')' → logprob: -7.627923011779785
    4. ')
' → logprob: -7.627923011779785
    5. ' )
' → logprob: -11.252923011779785
    6. '')
' → logprob: -13.127923011779785
    7. '   ' → logprob: -13.252923011779785
    8. ')
' → logprob: -13.502923011779785
    9. '")' → logprob: -14.502923011779785
    10. ')

' → logprob: -14.877923011779785

Token 114: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.37606197595596313
    2. ' for' → logprob: -2.2510619163513184
    3. '<|end|>' → logprob: -2.6260619163513184
    4. '
' → logprob: -3.1260619163513184
    5. 'for' → logprob: -3.5010619163513184
    6. ' ' → logprob: -3.7510619163513184
    7. ' i' → logprob: -4.376061916351318
    8. 'i' → logprob: -4.626061916351318
    9. '    
' → logprob: -6.126061916351318
    10. '  
' → logprob: -6.751061916351318

Token 115: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4467184245586395
    2. 'start' → logprob: -2.571718454360962
    3. 'l' → logprob: -2.696718454360962
    4. 'best' → logprob: -2.821718454360962
    5. 'min' → logprob: -2.946718454360962
    6. 'i' → logprob: -3.696718454360962
    7. ' for' → logprob: -4.446718215942383
    8. 'segment' → logprob: -4.571718215942383
    9. 'left' → logprob: -5.071718215942383
    10. 'idx' → logprob: -5.196718215942383

Token 116: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11404184997081757
    2. ' =' → logprob: -2.239041805267334
    3. '=None' → logprob: -7.114041805267334
    4. '=[]' → logprob: -8.239042282104492
    5. ',' → logprob: -9.239042282104492
    6. '=int' → logprob: -11.864042282104492
    7. '={}' → logprob: -11.989042282104492
    8. '_=' → logprob: -12.364042282104492
    9. '_' → logprob: -12.614042282104492
    10. '=""' → logprob: -12.739042282104492

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06866052746772766
    2. 'None' → logprob: -3.4436604976654053
    3. ')' → logprob: -3.8186604976654053
    4. '-' → logprob: -4.443660736083984
    5. '[])' → logprob: -9.068660736083984
    6. '   ' → logprob: -9.193660736083984
    7. ' None' → logprob: -9.443660736083984
    8. '[]' → logprob: -9.568660736083984
    9. ' ' → logprob: -9.693660736083984
    10. 'float' → logprob: -9.693660736083984

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001965508796274662
    2. ',)' → logprob: -6.376965522766113
    3. ')' → logprob: -9.001965522766113
    4. ' ,' → logprob: -9.501965522766113
    5. ',len' → logprob: -11.126965522766113
    6. ',None' → logprob: -11.376965522766113
    7. ',
' → logprob: -11.626965522766113
    8. '<|end|>' → logprob: -12.376965522766113
    9. ',:)' → logprob: -12.876965522766113
    10. ',),' → logprob: -13.001965522766113

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019245869480073452
    2. ')' → logprob: -6.751924514770508
    3. ' ' → logprob: -7.376924514770508
    4. 'N' → logprob: -9.126924514770508
    5. '-' → logprob: -11.251924514770508
    6. ' N' → logprob: -13.626924514770508
    7. 'len' → logprob: -13.626924514770508
    8. '1' → logprob: -14.126924514770508
    9. ' )' → logprob: -14.501924514770508
    10. ' -' → logprob: -14.876924514770508

Token 120: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.301394023466855e-05
    2. ',' → logprob: -10.625062942504883
    3. ')
' → logprob: -10.625062942504883
    4. ' )' → logprob: -11.750062942504883
    5. '   ' → logprob: -13.500062942504883
    6. ',)' → logprob: -13.625062942504883
    7. '),' → logprob: -13.875062942504883
    8. ')

' → logprob: -14.125062942504883
    9. '<|end|>' → logprob: -14.375062942504883
    10. '))' → logprob: -15.250062942504883

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00681364256888628
    2. ')' → logprob: -5.1318135261535645
    3. 'None' → logprob: -7.2568135261535645
    4. '-' → logprob: -9.131814002990723
    5. ' ' → logprob: -10.381814002990723
    6. 'float' → logprob: -11.006814002990723
    7. ' None' → logprob: -12.131814002990723
    8. '[])' → logprob: -12.506814002990723
    9. '1' → logprob: -13.256814002990723
    10. '[]' → logprob: -13.631814002990723

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010593677870929241
    2. ')
' → logprob: -6.876059532165527
    3. ' )' → logprob: -11.001059532165527
    4. '   ' → logprob: -12.626059532165527
    5. ')

' → logprob: -12.751059532165527
    6. ')
' → logprob: -14.501059532165527
    7. '<|end|>' → logprob: -14.876059532165527
    8. '),' → logprob: -15.001059532165527
    9. ')#' → logprob: -15.001059532165527
    10. ')`' → logprob: -15.001059532165527

Token 123: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5584428906440735
    2. ' for' → logprob: -1.1834428310394287
    3. '
' → logprob: -2.5584428310394287
    4. '<|end|>' → logprob: -3.1834428310394287
    5. ' 
' → logprob: -6.308443069458008
    6. '  
' → logprob: -8.308443069458008
    7. ',' → logprob: -8.808443069458008
    8. ')' → logprob: -8.933443069458008
    9. ' ' → logprob: -9.183443069458008
    10. '```' → logprob: -9.683443069458008

Token 124: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000252160825766623
    2. ' for' → logprob: -8.375251770019531
    3. 'i' → logprob: -11.375251770019531
    4. 'l' → logprob: -12.000251770019531
    5. 'start' → logprob: -13.375251770019531
    6. '```' → logprob: -14.000251770019531
    7. '   ' → logprob: -14.625251770019531
    8. 'f' → logprob: -15.500251770019531
    9. 'length' → logprob: -15.625251770019531
    10. 's' → logprob: -15.875251770019531

Token 125: ' S' (ID: 336)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4941171407699585
    2. ' i' → logprob: -1.4941171407699585
    3. 'l' → logprob: -2.119117259979248
    4. ' l' → logprob: -4.119117259979248
    5. 'L' → logprob: -4.494117259979248
    6. 'start' → logprob: -5.369117259979248
    7. 's' → logprob: -5.869117259979248
    8. 'w' → logprob: -6.244117259979248
    9. 'length' → logprob: -6.244117259979248
    10. ' L' → logprob: -6.494117259979248

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016093846410512924
    2. 'in' → logprob: -4.141093730926514
    3. ' ' → logprob: -10.266094207763672
    4. 'range' → logprob: -11.766094207763672
    5. ' i' → logprob: -12.266094207763672
    6. ',' → logprob: -13.016094207763672
    7. 'n' → logprob: -13.141094207763672
    8. '```' → logprob: -13.891094207763672
    9. '1' → logprob: -14.016094207763672
    10. '0' → logprob: -14.266094207763672

Token 127: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031781906727701426
    2. ' range' → logprob: -5.753178119659424
    3. '(range' → logprob: -14.628178596496582
    4. '	range' → logprob: -17.628177642822266
    5. ' ' → logprob: -19.003177642822266
    6. '   ' → logprob: -20.128177642822266
    7. '```' → logprob: -20.128177642822266
    8. '  ' → logprob: -20.253177642822266
    9. '[' → logprob: -20.753177642822266
    10. '.range' → logprob: -21.378177642822266

Token 128: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04815121740102768
    2. '(' → logprob: -3.1731512546539307
    3. '(M' → logprob: -5.298151016235352
    4. '(len' → logprob: -9.048151016235352
    5. '(n' → logprob: -11.173151016235352
    6. 'N' → logprob: -13.423151016235352
    7. '((' → logprob: -14.173151016235352
    8. '(I' → logprob: -14.298151016235352
    9. '(S' → logprob: -14.423151016235352
    10. ' (' → logprob: -14.798151016235352

Token 129: '16' (ID: 1125)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007654334767721593
    2. ' N' → logprob: -7.500765323638916
    3. 'M' → logprob: -9.750765800476074
    4. '0' → logprob: -10.000765800476074
    5. '1' → logprob: -10.000765800476074
    6. '   ' → logprob: -10.125765800476074
    7. 'len' → logprob: -11.500765800476074
    8. '(N' → logprob: -11.875765800476074
    9. ' ' → logprob: -12.500765800476074
    10. '(' → logprob: -14.250765800476074

Token 130: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03856545686721802
    2. ',M' → logprob: -3.9135653972625732
    3. ' ,' → logprob: -4.913565635681152
    4. '):' → logprob: -5.413565635681152
    5. ',N' → logprob: -5.413565635681152
    6. ',S' → logprob: -7.288565635681152
    7. ',len' → logprob: -8.163565635681152
    8. ',n' → logprob: -9.038565635681152
    9. '+' → logprob: -9.413565635681152
    10. ')' → logprob: -9.413565635681152

Token 131: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18431706726551056
    2. ' for' → logprob: -2.184317111968994
    3. '   ' → logprob: -3.809317111968994
    4. ' :' → logprob: -4.059317111968994
    5. ' ' → logprob: -4.309317111968994
    6. '    ' → logprob: -7.434317111968994
    7. '       ' → logprob: -7.434317111968994
    8. ',' → logprob: -7.434317111968994
    9. 'for' → logprob: -8.809316635131836
    10. '):' → logprob: -8.934316635131836

Token 132: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007380281575024128
    2. ' ' → logprob: -5.257380485534668
    3. 'for' (adapté à ' for') → logprob: -6.757380485534668
    4. '   ' → logprob: -7.507380485534668
    5. '    ' → logprob: -8.382380485534668
    6. ' to' → logprob: -10.382380485534668
    7. ' L' → logprob: -10.632380485534668
    8. ' in' → logprob: -11.132380485534668
    9. ' 
' → logprob: -11.132380485534668
    10. ' length' → logprob: -11.257380485534668

Token 133: ' A' (ID: 355)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.22764438390731812
    2. 'E' → logprob: -1.852644443511963
    3. ' L' → logprob: -3.977644443511963
    4. 'T' → logprob: -4.852644443511963
    5. 'S' → logprob: -5.102644443511963
    6. ' E' → logprob: -5.352644443511963
    7. 'M' → logprob: -6.227644443511963
    8. 'W' → logprob: -6.977644443511963
    9. 's' → logprob: -7.227644443511963
    10. 'length' → logprob: -7.477644443511963

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10028204321861267
    2. 'in' → logprob: -2.3502819538116455
    3. 'range' → logprob: -9.975281715393066
    4. ' ' → logprob: -12.100281715393066
    5. '16' → logprob: -12.600281715393066
    6. '   ' → logprob: -12.725281715393066
    7. 'In' → logprob: -12.975281715393066
    8. '0' → logprob: -13.350281715393066
    9. 'from' → logprob: -13.475281715393066
    10. 'import' → logprob: -13.600281715393066

Token 135: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03808131441473961
    2. ' range' → logprob: -3.288081407546997
    3. '[' → logprob: -10.663081169128418
    4. '(range' → logprob: -11.538081169128418
    5. '   ' → logprob: -13.663081169128418
    6. ' ' → logprob: -13.788081169128418
    7. '	range' → logprob: -14.288081169128418
    8. ' [' → logprob: -14.413081169128418
    9. '256' → logprob: -14.663081169128418
    10. '[-' → logprob: -14.788081169128418

Token 136: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10836634039878845
    2. '16' → logprob: -2.6083662509918213
    3. '256' → logprob: -3.7333662509918213
    4. '(M' → logprob: -5.7333664894104
    5. '1' → logprob: -7.4833664894104
    6. ' ' → logprob: -8.233366012573242
    7. ' (' → logprob: -8.233366012573242
    8. '(-' → logprob: -8.483366012573242
    9. '0' → logprob: -8.858366012573242
    10. 'M' → logprob: -9.858366012573242

Token 137: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.6548319458961487
    2. '256' → logprob: -0.7798319458961487
    3. '1' → logprob: -4.529831886291504
    4. 'M' → logprob: -5.404831886291504
    5. '0' → logprob: -6.154831886291504
    6. ' ' → logprob: -7.029831886291504
    7. '8' → logprob: -7.654831886291504
    8. '4' → logprob: -7.779831886291504
    9. '17' → logprob: -7.904831886291504
    10. '2' → logprob: -8.029831886291504

Token 138: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2049836665391922
    2. '):' → logprob: -1.8299837112426758
    3. '16' → logprob: -4.454983711242676
    4. ',' → logprob: -5.329983711242676
    5. '       ' → logprob: -5.454983711242676
    6. '   ' → logprob: -6.704983711242676
    7. ':' → logprob: -7.204983711242676
    8. '):
' → logprob: -7.579983711242676
    9. '           ' → logprob: -7.704983711242676
    10. '+' → logprob: -7.954983711242676

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012517772847786546
    2. '<|end|>' → logprob: -7.876251697540283
    3. '               ' → logprob: -8.501252174377441
    4. ':' → logprob: -8.626252174377441
    5. ' for' → logprob: -9.001252174377441
    6. ' ' → logprob: -9.626252174377441
    7. '          ' → logprob: -10.251252174377441
    8. ' and' → logprob: -10.251252174377441
    9. '            ' → logprob: -10.376252174377441
    10. '        ' → logprob: -10.751252174377441

Token 140: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22215202450752258
    2. '               ' → logprob: -2.3471519947052
    3. 'for' (adapté à ' for') → logprob: -2.7221519947052
    4. '           ' → logprob: -3.5971519947052
    5. ' ' → logprob: -5.472152233123779
    6. ' B' → logprob: -5.847152233123779
    7. ' C' → logprob: -7.097152233123779
    8. '            ' → logprob: -7.722152233123779
    9. 'B' → logprob: -8.284651756286621
    10. ' D' → logprob: -8.909651756286621

Token 141: ' C' (ID: 363)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7274104356765747
    2. 'D' → logprob: -1.6024104356765747
    3. 'L' → logprob: -2.102410316467285
    4. 'M' → logprob: -2.852410316467285
    5. 'C' → logprob: -3.852410316467285
    6. 'R' → logprob: -4.102410316467285
    7. 'V' → logprob: -4.227410316467285
    8. 'T' → logprob: -4.477410316467285
    9. 'I' → logprob: -4.602410316467285
    10. 'X' → logprob: -4.602410316467285

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002509666606783867
    2. 'in' → logprob: -6.002509593963623
    3. '(' → logprob: -10.627510070800781
    4. 'range' → logprob: -12.627510070800781
    5. '(range' → logprob: -13.252510070800781
    6. '<|end|>' → logprob: -13.377510070800781
    7. ' ' → logprob: -14.377510070800781
    8. '```' → logprob: -14.877510070800781
    9. '16' → logprob: -15.252510070800781
    10. 'In' → logprob: -15.252510070800781

Token 143: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2520740032196045
    2. ' range' → logprob: -1.5020740032196045
    3. '(range' → logprob: -8.877074241638184
    4. '	range' → logprob: -13.502074241638184
    5. ' ' → logprob: -13.752074241638184
    6. '16' → logprob: -13.877074241638184
    7. '(' → logprob: -14.252074241638184
    8. '[' → logprob: -14.377074241638184
    9. 'ange' → logprob: -14.627074241638184
    10. '   ' → logprob: -16.502073287963867

Token 144: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028788186609745026
    2. '16' → logprob: -5.877878665924072
    3. ' (' → logprob: -9.87787914276123
    4. '(
' → logprob: -12.37787914276123
    5. ' ' → logprob: -12.62787914276123
    6. '(-' → logprob: -12.75287914276123
    7. '((' → logprob: -13.25287914276123
    8. '   ' → logprob: -13.50287914276123
    9. '(int' → logprob: -13.75287914276123
    10. '256' → logprob: -13.87787914276123

Token 145: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.004518415778875351
    2. '256' → logprob: -5.504518508911133
    3. ' ' → logprob: -9.129518508911133
    4. '64' → logprob: -9.754518508911133
    5. '32' → logprob: -10.067018508911133
    6. '8' → logprob: -10.379518508911133
    7. '4' → logprob: -10.504518508911133
    8. '1' → logprob: -10.567018508911133
    9. '0' → logprob: -10.629518508911133
    10. '15' → logprob: -11.379518508911133

Token 146: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3488638401031494
    2. '):
' → logprob: -1.2238638401031494
    3. ':' → logprob: -8.34886360168457
    4. '):
' → logprob: -9.59886360168457
    5. '):

' → logprob: -10.34886360168457
    6. '           ' → logprob: -10.47386360168457
    7. ')' → logprob: -10.72386360168457
    8. '+' → logprob: -11.34886360168457
    9. '               ' → logprob: -12.34886360168457
    10. ',' → logprob: -12.72386360168457

Token 147: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03983118385076523
    2. '               ' → logprob: -3.9148311614990234
    3. '<|end|>' → logprob: -4.539831161499023
    4. ':
' → logprob: -5.164831161499023
    5. ',' → logprob: -7.539831161499023
    6. '           ' → logprob: -7.539831161499023
    7. '):' → logprob: -8.164831161499023
    8. ' :' → logprob: -8.414831161499023
    9. '<|end|>' → logprob: -8.664831161499023
    10. '       ' → logprob: -8.914831161499023

Token 148: ' R' (ID: 460)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4843737781047821
    2. ' ' → logprob: -1.7343738079071045
    3. '                    
' → logprob: -2.2343738079071045
    4. '                ' → logprob: -3.6093738079071045
    5. ' 
' → logprob: -3.7343738079071045
    6. '                    ' → logprob: -4.109373569488525
    7. '                        
' → logprob: -5.734373569488525
    8. '                     
' → logprob: -5.734373569488525
    9. '#' → logprob: -5.984373569488525
    10. '               ' → logprob: -6.234373569488525

Token 149: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9799872040748596
    2. ' =' → logprob: -1.1049871444702148
    3. '=[]' → logprob: -1.8549871444702148
    4. '=[' → logprob: -2.229987144470215
    5. '=(' → logprob: -4.729987144470215
    6. '=[]
' → logprob: -4.979987144470215
    7. 'ange' → logprob: -5.479987144470215
    8. ' ' → logprob: -6.854987144470215
    9. ' =[' → logprob: -6.854987144470215
    10. '=list' → logprob: -7.104987144470215

Token 150: '0' (ID: 15)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.8407424688339233
    2. '((' → logprob: -1.4657424688339233
    3. '(' → logprob: -1.8407424688339233
    4. '(S' → logprob: -2.715742588043213
    5. '(A' → logprob: -3.340742588043213
    6. '(M' → logprob: -3.340742588043213
    7. '0' → logprob: -3.715742588043213
    8. '(C' → logprob: -5.465742588043213
    9. '(((' → logprob: -5.590742588043213
    10. '(i' → logprob: -5.715742588043213

Token 151: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.1987321674823761
    2. ']' → logprob: -1.8237321376800537
    3. ']*(' → logprob: -4.073732376098633
    4. ')]' → logprob: -7.073732376098633
    5. 'for' → logprob: -7.198732376098633
    6. ']+' → logprob: -9.823732376098633
    7. ' for' → logprob: -10.073732376098633
    8. ')' → logprob: -11.198732376098633
    9. ']]' → logprob: -11.323732376098633
    10. ')*' → logprob: -11.323732376098633

Token 152: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.4987974029500037e-05
    2. ' N' → logprob: -11.500024795532227
    3. '(N' → logprob: -11.500024795532227
    4. '256' → logprob: -13.750024795532227
    5. '16' → logprob: -14.125024795532227
    6. 'len' → logprob: -14.375024795532227
    7. '[N' → logprob: -14.875024795532227
    8. '   ' → logprob: -15.125024795532227
    9. '64' → logprob: -15.250024795532227
    10. '(' → logprob: -15.375024795532227

Token 153: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012373910285532475
    2. '<|end|>' → logprob: -4.512373924255371
    3. '       ' → logprob: -7.637373924255371
    4. '<|end|>' → logprob: -8.637373924255371
    5. '              ' → logprob: -9.012373924255371
    6. '
' → logprob: -9.262373924255371
    7. '			' → logprob: -9.762373924255371
    8. ' for' → logprob: -9.762373924255371
    9. ',' → logprob: -9.887373924255371
    10. '		       ' → logprob: -9.887373924255371

Token 154: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' R' (ID: 460)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4370364248752594
    2. ' for' → logprob: -1.187036395072937
    3. '               ' → logprob: -3.0620365142822266
    4. '	for' → logprob: -7.062036514282227
    5. 'i' → logprob: -7.687036514282227
    6. '                ' → logprob: -8.187036514282227
    7. ' i' → logprob: -8.812036514282227
    8. ' ' → logprob: -9.062036514282227
    9. '   ' → logprob: -9.562036514282227
    10. '       ' → logprob: -9.812036514282227

Token 156: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21817484498023987
    2. '=' → logprob: -1.7181748151779175
    3. '[:]' → logprob: -4.468174934387207
    4. '=[' → logprob: -6.093174934387207
    5. ' =' → logprob: -6.843174934387207
    6. '[i' → logprob: -8.218174934387207
    7. '[:' → logprob: -8.343174934387207
    8. 'for' → logprob: -8.468174934387207
    9. '[R' → logprob: -8.718174934387207
    10. ' [' → logprob: -9.343174934387207

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001514557225164026
    2. ' ' → logprob: -8.875151634216309
    3. '[' → logprob: -13.125151634216309
    4. '   ' → logprob: -13.500151634216309
    5. ']' → logprob: -13.812651634216309
    6. '1' → logprob: -13.875151634216309
    7. ')' → logprob: -14.000151634216309
    8. '<|end|>' → logprob: -14.625151634216309
    9. '
' → logprob: -14.687651634216309
    10. '۰' → logprob: -14.812651634216309

Token 158: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.4374895691871643
    2. ']' → logprob: -1.0624895095825195
    3. '=' → logprob: -5.1874895095825195
    4. ']=(' → logprob: -6.3124895095825195
    5. ' ]' → logprob: -7.1874895095825195
    6. ' =' → logprob: -8.43748950958252
    7. ')=' → logprob: -9.18748950958252
    8. '=S' → logprob: -10.06248950958252
    9. ']='' → logprob: -10.43748950958252
    10. ']+=' → logprob: -10.43748950958252

Token 159: 'S' (ID: 50)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.013428683392703533
    2. 'S' → logprob: -4.638428688049316
    3. '(I' → logprob: -6.138428688049316
    4. '(S' → logprob: -7.388428688049316
    5. '0' → logprob: -7.888428688049316
    6. '(' → logprob: -8.638428688049316
    7. '((' → logprob: -8.888428688049316
    8. ' I' → logprob: -10.263428688049316
    9. 'C' → logprob: -10.513428688049316
    10. 'A' → logprob: -10.513428688049316

Token 160: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012956562452018261
    2. '               ' → logprob: -5.387956619262695
    3. '<|end|>' → logprob: -5.512956619262695
    4. '
' → logprob: -6.137956619262695
    5. '                
' → logprob: -7.637956619262695
    6. '  
' → logprob: -8.137956619262695
    7. '<|end|>' → logprob: -8.387956619262695
    8. '				
' → logprob: -8.512956619262695
    9. '	
' → logprob: -8.637956619262695
    10. ' 
' → logprob: -9.012956619262695

Token 161: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19599682092666626
    2. '<|end|>' → logprob: -1.9459967613220215
    3. ' 
' → logprob: -4.4459967613220215
    4. ' for' → logprob: -5.0709967613220215
    5. '  
' → logprob: -5.1959967613220215
    6. '<|end|>' → logprob: -6.4459967613220215
    7. '+' → logprob: -6.4459967613220215
    8. '\n' → logprob: -6.6959967613220215
    9. '
' → logprob: -6.8209967613220215
    10. 'for' → logprob: -6.9459967613220215

Token 162: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029849998652935028
    2. 'for' (adapté à ' for') → logprob: -3.7798500061035156
    3. '
' → logprob: -5.529850006103516
    4. '	for' → logprob: -7.029850006103516
    5. ' 
' → logprob: -7.529850006103516
    6. '\n' → logprob: -7.654850006103516
    7. '<|end|>' → logprob: -8.654850006103516
    8. '\t' → logprob: -9.029850006103516
    9. ' ' → logprob: -9.279850006103516
    10. '   ' → logprob: -9.279850006103516

Token 163: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08899671584367752
    2. ' i' → logprob: -2.463996648788452
    3. 'k' → logprob: -11.088996887207031
    4. 'j' → logprob: -11.463996887207031
    5. '	i' → logprob: -11.588996887207031
    6. ' ' → logprob: -12.338996887207031
    7. 'n' → logprob: -12.463996887207031
    8. 'x' → logprob: -12.838996887207031
    9. 't' → logprob: -13.088996887207031
    10. ' j' → logprob: -13.588996887207031

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017168473452329636
    2. 'in' → logprob: -4.1421685218811035
    3. ' ' → logprob: -6.8921685218811035
    4. 'range' → logprob: -10.267168045043945
    5. ' range' → logprob: -10.392168045043945
    6. '1' → logprob: -10.392168045043945
    7. '<|end|>' → logprob: -12.392168045043945
    8. ' i' → logprob: -12.517168045043945
    9. '0' → logprob: -13.017168045043945
    10. '  ' → logprob: -13.142168045043945

Token 165: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0486145056784153
    2. ' range' → logprob: -3.048614501953125
    3. '1' → logprob: -10.673614501953125
    4. '(range' → logprob: -13.048614501953125
    5. ' ' → logprob: -14.173614501953125
    6. '	range' → logprob: -14.173614501953125
    7. '
' → logprob: -16.173614501953125
    8. '   ' → logprob: -16.173614501953125
    9. ' xrange' → logprob: -16.298614501953125
    10. '[' → logprob: -16.298614501953125

Token 166: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03374839946627617
    2. '(' → logprob: -3.4087483882904053
    3. ' ' → logprob: -9.283748626708984
    4. '   ' → logprob: -11.783748626708984
    5. ' (' → logprob: -14.158748626708984
    6. '0' → logprob: -15.033748626708984
    7. '[' → logprob: -15.283748626708984
    8. '                   ' → logprob: -15.783748626708984
    9. '(N' → logprob: -15.908748626708984
    10. 'i' → logprob: -16.158748626708984

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -13.000003814697266
    3. 'N' → logprob: -13.250003814697266
    4. '   ' → logprob: -15.875003814697266
    5. '(' → logprob: -17.000003814697266
    6. '0' → logprob: -18.500003814697266
    7. '
' → logprob: -19.125003814697266
    8. 'i' → logprob: -19.250003814697266
    9. '  ' → logprob: -19.750003814697266
    10. '    ' → logprob: -19.750003814697266

Token 168: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06007326766848564
    2. ',N' → logprob: -2.9350733757019043
    3. ',n' → logprob: -5.810073375701904
    4. 'N' → logprob: -6.560073375701904
    5. ',
' → logprob: -8.685072898864746
    6. ' ,' → logprob: -9.060072898864746
    7. '<|end|>' → logprob: -9.060072898864746
    8. ',i' → logprob: -9.560072898864746
    9. ' N' → logprob: -9.560072898864746
    10. '   ' → logprob: -9.810072898864746

Token 169: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22570450603961945
    2. '):' → logprob: -1.600704550743103
    3. '):
' → logprob: -8.475704193115234
    4. ')' → logprob: -10.475704193115234
    5. '):

' → logprob: -11.100704193115234
    6. '   ' → logprob: -11.350704193115234
    7. ':' → logprob: -11.600704193115234
    8. ' ):
' → logprob: -12.725704193115234
    9. ':
' → logprob: -13.100704193115234
    10. '():
' → logprob: -13.100704193115234

Token 170: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.710456371307373
    2. '                   ' → logprob: -0.960456371307373
    3. 'R' → logprob: -2.835456371307373
    4. '   ' → logprob: -3.960456371307373
    5. '
' → logprob: -4.210456371307373
    6. ' ' → logprob: -4.460456371307373
    7. '           ' → logprob: -5.460456371307373
    8. '<|end|>' → logprob: -5.585456371307373
    9. '               ' → logprob: -5.710456371307373
    10. '       ' → logprob: -6.335456371307373

Token 171: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.250006675720215
    3. '[I' → logprob: -13.250006675720215
    4. '[R' → logprob: -15.250006675720215
    5. '```' → logprob: -17.00000762939453
    6. ' [' → logprob: -17.37500762939453
    7. '[(' → logprob: -17.37500762939453
    8. ',i' → logprob: -18.00000762939453
    9. 'i' → logprob: -18.00000762939453
    10. '(i' → logprob: -18.12500762939453

Token 172: ']=(' (ID: 138510)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.6480695009231567
    2. ' =' → logprob: -1.6480695009231567
    3. '=' → logprob: -1.8980695009231567
    4. ']=(' → logprob: -2.523069381713867
    5. '=((' → logprob: -3.773069381713867
    6. ']=' → logprob: -4.023069381713867
    7. ' =(' → logprob: -4.898069381713867
    8. ']' → logprob: -5.773069381713867
    9. '=i' → logprob: -6.898069381713867
    10. '=A' → logprob: -7.398069381713867

Token 173: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5332385897636414
    2. '(A' → logprob: -1.1582386493682861
    3. 'R' → logprob: -3.033238649368286
    4. '(R' → logprob: -3.408238649368286
    5. ' (' → logprob: -4.658238410949707
    6. ' A' → logprob: -5.283238410949707
    7. '(' → logprob: -6.158238410949707
    8. ' R' → logprob: -7.533238410949707
    9. ' ' → logprob: -8.533238410949707
    10. '(I' → logprob: -8.908238410949707

Token 174: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01817581057548523
    2. ' *' → logprob: -4.0181756019592285
    3. '*(' → logprob: -11.143176078796387
    4. '*C' → logprob: -11.768176078796387
    5. '*i' → logprob: -13.643176078796387
    6. ' ' → logprob: -14.393176078796387
    7. ' ' → logprob: -15.268176078796387
    8. 'R' → logprob: -15.268176078796387
    9. '*((' → logprob: -15.518176078796387
    10. '＊' → logprob: -16.14317512512207

Token 175: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.003611474297940731
    2. ' R' → logprob: -5.6286115646362305
    3. '(R' → logprob: -12.37861156463623
    4. ' ' → logprob: -13.00361156463623
    5. '	R' → logprob: -13.25361156463623
    6. '   ' → logprob: -14.75361156463623
    7. '(' → logprob: -14.75361156463623
    8. ' ' → logprob: -15.00361156463623
    9. ')' → logprob: -15.25361156463623
    10. '_R' → logprob: -15.50361156463623

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. 'i' → logprob: -12.375004768371582
    3. '[' → logprob: -15.500004768371582
    4. '[I' → logprob: -15.500004768371582
    5. '[
' → logprob: -16.0000057220459
    6. '
' → logprob: -16.5000057220459
    7. 'I' → logprob: -17.6250057220459
    8. '(i' → logprob: -17.8750057220459
    9. '```' → logprob: -18.0000057220459
    10. '

' → logprob: -18.5000057220459

Token 177: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. 'i' → logprob: -13.750001907348633
    3. '[-' → logprob: -15.125001907348633
    4. '-' → logprob: -16.375001907348633
    5. '(i' → logprob: -16.500001907348633
    6. '[
' → logprob: -16.875001907348633
    7. '[I' → logprob: -17.000001907348633
    8. '[j' → logprob: -17.125001907348633
    9. '```' → logprob: -17.250001907348633
    10. '[' → logprob: -17.750001907348633

Token 178: '1' (ID: 16)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08259762823581696
    2. '1' → logprob: -3.4575977325439453
    3. 'i' → logprob: -3.5825977325439453
    4. '(i' → logprob: -3.9575977325439453
    5. '```' → logprob: -8.207597732543945
    6. '-' → logprob: -8.707597732543945
    7. '   ' → logprob: -9.082597732543945
    8. ' ' → logprob: -9.832597732543945
    9. '{i' → logprob: -9.832597732543945
    10. ')' → logprob: -10.957597732543945

Token 179: ']+' (ID: 15344)
  Prédit: '+C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+C' → logprob: -0.19280697405338287
    2. ' +' → logprob: -2.3178069591522217
    3. '+' → logprob: -2.5678069591522217
    4. ' C' → logprob: -10.6928071975708
    5. '+
' → logprob: -10.6928071975708
    6. '

' → logprob: -10.8178071975708
    7. 'C' → logprob: -11.0678071975708
    8. ' plus' → logprob: -11.1928071975708
    9. ' ' → logprob: -11.4428071975708
    10. '+B' → logprob: -11.8178071975708

Token 180: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.023259107023477554
    2. ' C' → logprob: -3.773259162902832
    3. ' ' → logprob: -12.523259162902832
    4. '	C' → logprob: -13.148259162902832
    5. ')' → logprob: -13.398259162902832
    6. '   ' → logprob: -14.398259162902832
    7. '(C' → logprob: -14.460759162902832
    8. 'B' → logprob: -14.460759162902832
    9. '
' → logprob: -14.523259162902832
    10. '```' → logprob: -14.585759162902832

Token 181: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11312810331583023
    2. ')%' → logprob: -2.238128185272217
    3. ' )' → logprob: -8.113127708435059
    4. '%' → logprob: -13.488127708435059
    5. ')&' → logprob: -13.863127708435059
    6. ')#' → logprob: -13.863127708435059
    7. ')>>' → logprob: -14.613127708435059
    8. '')' → logprob: -14.738127708435059
    9. '   ' → logprob: -15.363127708435059
    10. ')`' → logprob: -15.613127708435059

Token 182: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.010299931280314922
    2. '256' → logprob: -4.885300159454346
    3. '16' → logprob: -6.510300159454346
    4. ' M' → logprob: -6.760300159454346
    5. ' ' → logprob: -10.760299682617188
    6. '255' → logprob: -11.010299682617188
    7. '	M' → logprob: -13.760299682617188
    8. '   ' → logprob: -14.260299682617188
    9. '655' → logprob: -14.885299682617188
    10. '<M' → logprob: -15.135299682617188

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0524531826376915
    2. '               ' → logprob: -3.3024532794952393
    3. '<|end|>' → logprob: -5.17745304107666
    4. '                
' → logprob: -5.80245304107666
    5. '  
' → logprob: -6.17745304107666
    6. '
' → logprob: -6.67745304107666
    7. ' 
' → logprob: -7.30245304107666
    8. '    
' → logprob: -7.92745304107666
    9. '<|end|>' → logprob: -8.30245304107666
    10. '                ' → logprob: -8.67745304107666

Token 184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2965690493583679
    2. '
' → logprob: -1.7965691089630127
    3. '<|end|>' → logprob: -2.6715691089630127
    4. '                
' → logprob: -4.421568870544434
    5. '  
' → logprob: -5.796568870544434
    6. '
' → logprob: -6.546568870544434
    7. ' 
' → logprob: -6.671568870544434
    8. '<|end|>' → logprob: -6.921568870544434
    9. ' if' → logprob: -7.296568870544434
    10. '                ' → logprob: -7.546568870544434

Token 185: ' O' (ID: 532)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.7901768684387207
    2. 'h' → logprob: -1.1651768684387207
    3. ' if' → logprob: -3.1651768684387207
    4. 'entropy' → logprob: -3.1651768684387207
    5. 'if' → logprob: -3.4151768684387207
    6. ' H' → logprob: -3.5401768684387207
    7. ' h' → logprob: -3.9151768684387207
    8. '   ' → logprob: -4.040176868438721
    9. 'e' → logprob: -4.040176868438721
    10. ' entropy' → logprob: -4.790176868438721

Token 186: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3382055163383484
    2. '=' → logprob: -1.3382055759429932
    3. '[:]' → logprob: -4.588205337524414
    4. '[' → logprob: -5.838205337524414
    5. 'b' → logprob: -6.463205337524414
    6. '[i' → logprob: -7.088205337524414
    7. '<|end|>' → logprob: -7.213205337524414
    8. '   ' → logprob: -7.338205337524414
    9. '=[' → logprob: -7.338205337524414
    10. ' =[' → logprob: -7.588205337524414

Token 187: '(' (ID: 7)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.0920542478561401
    2. '(I' → logprob: -1.2170542478561401
    3. 'R' → logprob: -1.8420542478561401
    4. 'abs' → logprob: -2.3420543670654297
    5. '(R' → logprob: -2.7170543670654297
    6. '((' → logprob: -3.8420543670654297
    7. '(abs' → logprob: -4.34205436706543
    8. '(i' → logprob: -5.46705436706543
    9. 'i' → logprob: -6.46705436706543
    10. '0' → logprob: -6.71705436706543

Token 188: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.09057295322418213
    2. 'R' → logprob: -2.7155728340148926
    3. '(I' → logprob: -4.465572834014893
    4. 'x' → logprob: -5.965572834014893
    5. ' I' → logprob: -6.215572834014893
    6. '(R' → logprob: -6.840572834014893
    7. 'r' → logprob: -7.340572834014893
    8. 'a' → logprob: -7.590572834014893
    9. ' (' → logprob: -7.840572834014893
    10. 'O' → logprob: -8.09057331085205

Token 189: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.676981345459353e-06
    2. 'i' → logprob: -12.750005722045898
    3. '[' → logprob: -13.750005722045898
    4. ')' → logprob: -14.625005722045898
    5. '[j' → logprob: -15.250005722045898
    6. '[I' → logprob: -15.625005722045898
    7. '(i' → logprob: -16.2500057220459
    8. ' i' → logprob: -16.2500057220459
    9. ')i' → logprob: -16.2500057220459
    10. ' ' → logprob: -16.2500057220459

Token 190: ']^' (ID: 144683)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.4880177080631256
    2. '-' → logprob: -1.4880176782608032
    3. '+' → logprob: -2.9880177974700928
    4. ' -' → logprob: -2.9880177974700928
    5. ' ^' → logprob: -3.3630177974700928
    6. ')' → logprob: -4.238017559051514
    7. ')^' → logprob: -5.113017559051514
    8. ' +' → logprob: -6.613017559051514
    9. ' )' → logprob: -6.988017559051514
    10. '^(' → logprob: -7.363017559051514

Token 191: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.012521425262093544
    2. ' R' → logprob: -4.387521266937256
    3. ' ' → logprob: -12.012521743774414
    4. '   ' → logprob: -12.762521743774414
    5. '                   ' → logprob: -14.387521743774414
    6. '               ' → logprob: -14.762521743774414
    7. '	R' → logprob: -14.887521743774414
    8. '  ' → logprob: -15.012521743774414
    9. ')' → logprob: -15.137521743774414
    10. '           ' → logprob: -16.137521743774414

Token 192: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. 'i' → logprob: -13.625001907348633
    3. ')i' → logprob: -15.125001907348633
    4. ')' → logprob: -15.250001907348633
    5. '[' → logprob: -16.375001907348633
    6. '[I' → logprob: -17.375001907348633
    7. ' i' → logprob: -17.500001907348633
    8. '(i' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. '{i' → logprob: -18.250001907348633

Token 193: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016241183038800955
    2. ' )' → logprob: -7.25162410736084
    3. ')]' → logprob: -7.87662410736084
    4. '])' → logprob: -8.12662410736084
    5. ')^' → logprob: -9.12662410736084
    6. ')])' → logprob: -10.12662410736084
    7. ')
' → logprob: -10.75162410736084
    8. '))' → logprob: -11.00162410736084
    9. ')`' → logprob: -12.00162410736084
    10. ']' → logprob: -12.12662410736084

Token 194: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6933351755142212
    2. 'for' → logprob: -0.6933351755142212
    3. '	for' → logprob: -9.31833553314209
    4. ')' → logprob: -10.06833553314209
    5. '<|end|>' → logprob: -10.19333553314209
    6. ' ' → logprob: -11.56833553314209
    7. '   ' → logprob: -12.69333553314209
    8. '
' → logprob: -13.56833553314209
    9. '<|end|>' → logprob: -13.69333553314209
    10. '  ' → logprob: -13.94333553314209

Token 195: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15138277411460876
    2. ' i' → logprob: -2.0263826847076416
    3. ' range' → logprob: -4.901382923126221
    4. 'range' → logprob: -6.776382923126221
    5. ' in' → logprob: -9.526382446289062
    6. ' ' → logprob: -11.151382446289062
    7. 'in' → logprob: -12.526382446289062
    8. '  ' → logprob: -14.526382446289062
    9. '<|end|>' → logprob: -14.901382446289062
    10. 'I' → logprob: -15.276382446289062

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03214845806360245
    2. 'in' → logprob: -3.6571483612060547
    3. ' i' → logprob: -5.532148361206055
    4. ' range' → logprob: -6.657148361206055
    5. 'i' → logprob: -7.782148361206055
    6. 'range' → logprob: -8.782148361206055
    7. ' ' → logprob: -12.157148361206055
    8. '<|end|>' → logprob: -12.157148361206055
    9. '<|end|>' → logprob: -13.532148361206055
    10. '(range' → logprob: -13.657148361206055

Token 197: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326258182525635
    2. 'range' → logprob: -1.3132625818252563
    3. '(range' → logprob: -14.438262939453125
    4. ' ' → logprob: -15.563262939453125
    5. '	range' → logprob: -16.188262939453125
    6. '   ' → logprob: -17.188262939453125
    7. '  ' → logprob: -17.938262939453125
    8. 'Range' → logprob: -18.438262939453125
    9. ' xrange' → logprob: -18.813262939453125
    10. '.range' → logprob: -19.313262939453125

Token 198: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.09286672621965408
    2. '(N' → logprob: -2.5928666591644287
    3. ' N' → logprob: -4.967866897583008
    4. ' range' → logprob: -5.467866897583008
    5. 'range' → logprob: -5.967866897583008
    6. '(' → logprob: -9.342866897583008
    7. '   ' → logprob: -10.842866897583008
    8. ' ' → logprob: -11.592866897583008
    9. ')' → logprob: -12.592866897583008
    10. '	N' → logprob: -12.592866897583008

Token 199: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0079802880063653
    2. ')]' → logprob: -4.8829803466796875
    3. ' ]' → logprob: -8.257980346679688
    4. ')' → logprob: -10.132980346679688
    5. ']
' → logprob: -10.257980346679688
    6. '])' → logprob: -10.882980346679688
    7. ']
' → logprob: -12.007980346679688
    8. '()]' → logprob: -12.507980346679688
    9. '   ' → logprob: -12.882980346679688
    10. '])]' → logprob: -13.382980346679688

Token 200: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3243325650691986
    2. '               ' → logprob: -1.449332594871521
    3. '                
' → logprob: -3.8243324756622314
    4. '<|end|>' → logprob: -4.5743327140808105
    5. '
' → logprob: -6.0743327140808105
    6. '            
' → logprob: -6.3243327140808105
    7. ' 
' → logprob: -6.4493327140808105
    8. '  
' → logprob: -6.8243327140808105
    9. '           ' → logprob: -7.1993327140808105
    10. '    
' → logprob: -7.8243327140808105

Token 201: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.07078320533037186
    2. ' h' → logprob: -2.9457831382751465
    3. 'H' → logprob: -5.0707831382751465
    4. '               ' → logprob: -5.3207831382751465
    5. 'current' → logprob: -6.5707831382751465
    6. ' current' → logprob: -7.4457831382751465
    7. 'curr' → logprob: -7.4457831382751465
    8. 'entropy' → logprob: -7.6957831382751465
    9. ' H' → logprob: -7.8207831382751465
    10. 'cur' → logprob: -8.195783615112305

Token 202: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048815932124853134
    2. ' =' → logprob: -3.048815965652466
    3. '=h' → logprob: -9.298815727233887
    4. '=min' → logprob: -9.923815727233887
    5. '=max' → logprob: -10.423815727233887
    6. '=len' → logprob: -11.048815727233887
    7. '+=' → logprob: -11.548815727233887
    8. '=float' → logprob: -12.298815727233887
    9. '_=' → logprob: -12.673815727233887
    10. '=int' → logprob: -12.673815727233887

Token 203: 'entropy' (ID: 136272)
  Prédit: 'entropy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entropy' → logprob: -0.0006273718317970634
    2. ' entropy' → logprob: -7.375627517700195
    3. 'ent' → logprob: -14.500627517700195
    4. '_entropy' → logprob: -15.625627517700195
    5. '   ' → logprob: -17.000627517700195
    6. 'int' → logprob: -17.625627517700195
    7. 'Entropy' → logprob: -18.250627517700195
    8. '(ent' → logprob: -18.500627517700195
    9. '
' → logprob: -18.500627517700195
    10. ' ' → logprob: -18.500627517700195

Token 204: '(O' (ID: 49357)
  Prédit: '(O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(O' → logprob: -0.00029756641015410423
    2. '(' → logprob: -8.125297546386719
    3. '((' → logprob: -14.125297546386719
    4. '(o' → logprob: -15.375297546386719
    5. '(
' → logprob: -15.875297546386719
    6. ' (' → logprob: -15.875297546386719
    7. '(OP' → logprob: -16.12529754638672
    8. '```' → logprob: -16.75029754638672
    9. '(A' → logprob: -17.37529754638672
    10. '(Q' → logprob: -17.87529754638672

Token 205: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12723591923713684
    2. ')' → logprob: -2.1272358894348145
    3. ')
' → logprob: -8.127236366271973
    4. ')

' → logprob: -12.502236366271973
    5. ' )
' → logprob: -12.502236366271973
    6. '               ' → logprob: -12.877236366271973
    7. '   ' → logprob: -14.877236366271973
    8. '
' → logprob: -15.127236366271973
    9. '           ' → logprob: -15.127236366271973
    10. '())
' → logprob: -15.252236366271973

Token 206: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002705250633880496
    2. '
' → logprob: -6.502705097198486
    3. '                
' → logprob: -7.377705097198486
    4. ' if' → logprob: -8.627705574035645
    5. '           ' → logprob: -8.877705574035645
    6. 'if' → logprob: -9.377705574035645
    7. '                ' → logprob: -10.252705574035645
    8. '       ' → logprob: -10.627705574035645
    9. '              ' → logprob: -10.752705574035645
    10. '                   ' → logprob: -10.752705574035645

Token 207: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8136529326438904
    2. ' if' → logprob: -1.0636529922485352
    3. 'if' (adapté à ' if') → logprob: -1.5636529922485352
    4. '                ' → logprob: -6.938652992248535
    5. '                   ' → logprob: -6.938652992248535
    6. '```' → logprob: -10.063652992248535
    7. '           ' → logprob: -10.313652992248535
    8. ')' → logprob: -10.313652992248535
    9. '              ' → logprob: -10.563652992248535
    10. '                
' → logprob: -10.563652992248535

Token 208: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.34845778346061707
    2. 'h' → logprob: -1.2234578132629395
    3. '<h' → logprob: -12.098457336425781
    4. '	h' → logprob: -13.098457336425781
    5. ' ' → logprob: -13.223457336425781
    6. ' ' → logprob: -13.723457336425781
    7. '(h' → logprob: -13.848457336425781
    8. '   ' → logprob: -14.098457336425781
    9. '"h' → logprob: -15.285957336425781
    10. '  ' → logprob: -15.660957336425781

Token 209: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.029760440811514854
    2. ' <' → logprob: -3.5297603607177734
    3. '<m' → logprob: -12.154760360717773
    4. '<float' → logprob: -13.404760360717773
    5. ' ' → logprob: -14.279760360717773
    6. '<th' → logprob: -14.529760360717773
    7. '<n' → logprob: -15.154760360717773
    8. '<h' → logprob: -15.154760360717773
    9. '<int' → logprob: -15.279760360717773
    10. '<std' → logprob: -15.779760360717773

Token 210: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001584850688232109
    2. ' min' → logprob: -8.750158309936523
    3. '	min' → logprob: -17.875158309936523
    4. '
' → logprob: -18.375158309936523
    5. '   ' → logprob: -18.375158309936523
    6. '=min' → logprob: -20.000158309936523
    7. '_min' → logprob: -20.375158309936523
    8. '```' → logprob: -20.500158309936523
    9. 'mini' → logprob: -20.875158309936523
    10. ' ' → logprob: -21.250158309936523

Token 211: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -4.008129963040119e-06
    2. '<|end|>' → logprob: -13.250003814697266
    3. 'h' → logprob: -13.375003814697266
    4. ' H' → logprob: -14.375003814697266
    5. ')' → logprob: -18.375003814697266
    6. '   ' → logprob: -18.500003814697266
    7. '  ' → logprob: -18.625003814697266
    8. '[' → logprob: -18.750003814697266
    9. '<|end|>' → logprob: -18.875003814697266
    10. '.' → logprob: -19.250003814697266

Token 212: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014291146770119667
    2. ':
' → logprob: -4.264291286468506
    3. ':
' → logprob: -9.764290809631348
    4. '=' → logprob: -10.639290809631348
    5. '   ' → logprob: -11.264290809631348
    6. ' :' → logprob: -11.264290809631348
    7. ':h' → logprob: -12.389290809631348
    8. '       ' → logprob: -12.764290809631348
    9. ':return' → logprob: -13.014290809631348
    10. '):' → logprob: -13.014290809631348

Token 213: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.026031915098428726
    2. '(' → logprob: -4.026031970977783
    3. ' (' → logprob: -5.026031970977783
    4. 'h' → logprob: -7.276031970977783
    5. '(abs' → logprob: -7.776031970977783
    6. ' h' → logprob: -9.276031494140625
    7. '(
' → logprob: -10.401031494140625
    8. '(min' → logprob: -11.651031494140625
    9. '(i' → logprob: -12.276031494140625
    10. '(res' → logprob: -12.401031494140625

Token 214: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.005405815318226814
    2. ' h' → logprob: -5.255405902862549
    3. 'abs' → logprob: -8.88040542602539
    4. ' abs' → logprob: -10.50540542602539
    5. '(h' → logprob: -13.25540542602539
    6. '(abs' → logprob: -13.75540542602539
    7. '   ' → logprob: -14.25540542602539
    8. ' (' → logprob: -14.38040542602539
    9. '	h' → logprob: -14.63040542602539
    10. ' ' → logprob: -15.50540542602539

Token 215: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01922110840678215
    2. ' ==' → logprob: -4.019221305847168
    3. '=' → logprob: -6.894221305847168
    4. '<=' → logprob: -10.769221305847168
    5. 'h' → logprob: -11.769221305847168
    6. '===' → logprob: -12.019221305847168
    7. ')==' → logprob: -12.644221305847168
    8. '<' → logprob: -12.894221305847168
    9. '==
' → logprob: -12.894221305847168
    10. 'e' → logprob: -13.269221305847168

Token 216: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.5094070477061905e-05
    2. ' min' → logprob: -11.125015258789062
    3. '0' → logprob: -16.625015258789062
    4. '	min' → logprob: -16.875015258789062
    5. 'minimum' → logprob: -17.125015258789062
    6. '=min' → logprob: -17.125015258789062
    7. '(min' → logprob: -17.750015258789062
    8. 'minimal' → logprob: -18.625015258789062
    9. '[min' → logprob: -19.000015258789062
    10. '
' → logprob: -19.000015258789062

Token 217: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.8624639324116288e-06
    2. 'h' → logprob: -14.125001907348633
    3. ' H' → logprob: -14.750001907348633
    4. 'min' → logprob: -15.000001907348633
    5. '   ' → logprob: -15.500001907348633
    6. '       ' → logprob: -16.750001907348633
    7. '           ' → logprob: -17.375001907348633
    8. '               ' → logprob: -18.000001907348633
    9. '(min' → logprob: -18.375001907348633
    10. '  ' → logprob: -19.000001907348633

Token 218: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2254488617181778
    2. 'and' → logprob: -1.6004488468170166
    3. '   ' → logprob: -10.850448608398438
    4. '    ' → logprob: -12.350448608398438
    5. '       ' → logprob: -12.850448608398438
    6. '           ' → logprob: -13.225448608398438
    7. ' ' → logprob: -13.350448608398438
    8. '      ' → logprob: -13.850448608398438
    9. '  ' → logprob: -14.100448608398438
    10. 'a' → logprob: -14.225448608398438

Token 219: ' (' (ID: 350)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.043245237320661545
    2. ' (' → logprob: -4.543245315551758
    3. '(i' → logprob: -4.668245315551758
    4. '(A' → logprob: -4.918245315551758
    5. '(' → logprob: -5.168245315551758
    6. '(res' → logprob: -6.043245315551758
    7. '(s' → logprob: -6.168245315551758
    8. '(R' → logprob: -6.168245315551758
    9. '(C' → logprob: -7.168245315551758
    10. 'S' → logprob: -8.168245315551758

Token 220: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.23708799481391907
    2. '(S' → logprob: -1.6120879650115967
    3. '(A' → logprob: -5.237088203430176
    4. 'R' → logprob: -6.612088203430176
    5. 'A' → logprob: -6.862088203430176
    6. '(C' → logprob: -6.862088203430176
    7. '(R' → logprob: -7.362088203430176
    8. '   ' → logprob: -7.612088203430176
    9. 'C' → logprob: -7.862088203430176
    10. '(' → logprob: -7.987088203430176

Token 221: ',A' (ID: 59196)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2595927119255066
    2. ',<' → logprob: -1.7595927715301514
    3. ',S' → logprob: -3.3845927715301514
    4. '<' → logprob: -4.384592533111572
    5. ' ,' → logprob: -5.759592533111572
    6. ',res' → logprob: -6.384592533111572
    7. ',min' → logprob: -6.509592533111572
    8. '<S' → logprob: -7.634592533111572
    9. ',i' → logprob: -7.884592533111572
    10. ' <' → logprob: -7.884592533111572

Token 222: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.11405131220817566
    2. ',res' → logprob: -2.739051342010498
    3. ',A' → logprob: -3.864051342010498
    4. ',S' → logprob: -4.989051342010498
    5. ',<' → logprob: -4.989051342010498
    6. ',' → logprob: -5.114051342010498
    7. ')<' → logprob: -6.864051342010498
    8. ',O' → logprob: -7.614051342010498
    9. ',R' → logprob: -8.11405086517334
    10. ' ,' → logprob: -8.61405086517334

Token 223: ')<' (ID: 62287)
  Prédit: ')<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')<' → logprob: -0.058616138994693756
    2. ')' → logprob: -3.1836161613464355
    3. '<' → logprob: -4.4336161613464355
    4. '<(' → logprob: -6.1836161613464355
    5. ' <' → logprob: -8.183615684509277
    6. ')>' → logprob: -8.308615684509277
    7. 'res' → logprob: -8.683615684509277
    8. ' )' → logprob: -9.433615684509277
    9. ')>=' → logprob: -9.558615684509277
    10. '[' → logprob: -9.558615684509277

Token 224: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.002206401200965047
    2. ' res' → logprob: -6.127206325531006
    3. '(res' → logprob: -11.377206802368164
    4. '   ' → logprob: -12.252206802368164
    5. '(' → logprob: -12.752206802368164
    6. 'min' → logprob: -13.877206802368164
    7. '  ' → logprob: -15.127206802368164
    8. ' ' → logprob: -15.752206802368164
    9. '	res' → logprob: -15.877206802368164
    10. ' (' → logprob: -16.002206802368164

Token 225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03057320974767208
    2. '):' → logprob: -3.5305731296539307
    3. ':
' → logprob: -7.78057336807251
    4. '):
' → logprob: -8.655572891235352
    5. ':' → logprob: -8.780572891235352
    6. '   ' → logprob: -10.530572891235352
    7. ')' → logprob: -11.155572891235352
    8. ' ):
' → logprob: -11.155572891235352
    9. '):

' → logprob: -11.905572891235352
    10. '       ' → logprob: -12.030572891235352

Token 226: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005454904865473509
    2. '                       ' → logprob: -6.130455017089844
    3. ' res' → logprob: -6.630455017089844
    4. '               ' → logprob: -7.130455017089844
    5. 'res' → logprob: -7.880455017089844
    6. '                    
' → logprob: -8.005455017089844
    7. '           ' → logprob: -8.880455017089844
    8. ' min' → logprob: -9.880455017089844
    9. ':
' → logprob: -10.255455017089844
    10. '                           ' → logprob: -10.255455017089844

Token 227: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.1658201664686203
    2. 'min' (adapté à ' min') → logprob: -1.9158201217651367
    3. '                   ' → logprob: -5.415820121765137
    4. 'res' → logprob: -7.415820121765137
    5. '                       ' → logprob: -7.915820121765137
    6. ' res' → logprob: -9.040820121765137
    7. '
' → logprob: -11.040820121765137
    8. '                    ' → logprob: -11.540820121765137
    9. '       ' → logprob: -12.165820121765137
    10. '           ' → logprob: -12.415820121765137

Token 228: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -4.008129963040119e-06
    2. '<|end|>' → logprob: -12.625003814697266
    3. ' H' → logprob: -14.500003814697266
    4. '<|end|>' → logprob: -16.000003814697266
    5. '_H' → logprob: -17.375003814697266
    6. '(H' → logprob: -18.125003814697266
    7. '(' → logprob: -18.250003814697266
    8. '[' → logprob: -18.375003814697266
    9. '
' → logprob: -18.500003814697266
    10. '<H' → logprob: -18.875003814697266

Token 229: '=h' (ID: 126422)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010055196471512318
    2. ' =' → logprob: -5.260055065155029
    3. '=min' → logprob: -5.635055065155029
    4. '=(' → logprob: -7.135055065155029
    5. '=res' → logprob: -8.135055541992188
    6. '=S' → logprob: -9.635055541992188
    7. '=s' → logprob: -10.135055541992188
    8. '=
' → logprob: -11.760055541992188
    9. '=h' → logprob: -12.510055541992188
    10. '=max' → logprob: -12.510055541992188

Token 230: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0035877141635864973
    2. 'res' → logprob: -6.25358772277832
    3. ' res' → logprob: -6.50358772277832
    4. '               ' → logprob: -9.87858772277832
    5. '
' → logprob: -10.25358772277832
    6. '           ' → logprob: -10.62858772277832
    7. '   ' → logprob: -11.00358772277832
    8. '       ' → logprob: -11.37858772277832
    9. '                       ' → logprob: -11.62858772277832
    10. '                  ' → logprob: -12.00358772277832

Token 231: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2335149198770523
    2. 'res' → logprob: -1.6085149049758911
    3. ' res' → logprob: -4.858514785766602
    4. '   ' → logprob: -8.733514785766602
    5. '               ' → logprob: -9.608514785766602
    6. '           ' → logprob: -10.858514785766602
    7. '       ' → logprob: -10.858514785766602
    8. '                       ' → logprob: -11.233514785766602
    9. '                  ' → logprob: -11.733514785766602
    10. '
' → logprob: -11.983514785766602

Token 232: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -1.3856492842023727e-06
    2. ' res' → logprob: -14.000000953674316
    3. '                   ' → logprob: -14.500000953674316
    4. '   ' → logprob: -19.125001907348633
    5. '                       ' → logprob: -20.750001907348633
    6. '	res' → logprob: -21.625001907348633
    7. 'resi' → logprob: -21.875001907348633
    8. '               ' → logprob: -22.000001907348633
    9. '                  ' → logprob: -22.375001907348633
    10. 'ress' → logprob: -22.750001907348633

Token 233: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4196392893791199
    2. '=(' → logprob: -1.4196393489837646
    3. '=S' → logprob: -2.2946393489837646
    4. ' =' → logprob: -10.044639587402344
    5. '(S' → logprob: -11.044639587402344
    6. '=((' → logprob: -11.169639587402344
    7. '=
' → logprob: -11.544639587402344
    8. '=i' → logprob: -12.419639587402344
    9. '=s' → logprob: -12.419639587402344
    10. '=

' → logprob: -12.544639587402344

Token 234: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -6.2729995988775045e-06
    2. ' S' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.1250057220459
    4. '	S' → logprob: -19.6250057220459
    5. '_S' → logprob: -20.3750057220459
    6. '(S' → logprob: -21.0000057220459
    7. ',S' → logprob: -21.1250057220459
    8. ' ' → logprob: -21.5000057220459
    9. ')' → logprob: -21.6250057220459
    10. '[S' → logprob: -22.6250057220459

Token 235: ',A' (ID: 59196)
  Prédit: ',A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.004382655490189791
    2. ',' → logprob: -5.629382610321045
    3. 'A' → logprob: -7.254382610321045
    4. ',S' → logprob: -9.879383087158203
    5. ' ,' → logprob: -10.879383087158203
    6. ',C' → logprob: -13.004383087158203
    7. '   ' → logprob: -14.254383087158203
    8. '0' → logprob: -15.379383087158203
    9. '
' → logprob: -15.379383087158203
    10. 'S' → logprob: -15.504383087158203

Token 236: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.06586311012506485
    2. 'C' → logprob: -2.8158631324768066
    3. ',' → logprob: -5.565863132476807
    4. ' ,' → logprob: -10.565862655639648
    5. ',S' → logprob: -10.815862655639648
    6. ',A' → logprob: -12.190862655639648
    7. ' C' → logprob: -12.440862655639648
    8. ',c' → logprob: -12.565862655639648
    9. 'A' → logprob: -14.440862655639648
    10. ',
' → logprob: -14.565862655639648

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008073674980551004
    2. ')
' → logprob: -7.125807285308838
    3. ')
' → logprob: -14.250807762145996
    4. ' )' → logprob: -14.625807762145996
    5. ')

' → logprob: -14.750807762145996
    6. '               ' → logprob: -15.000807762145996
    7. '))' → logprob: -15.000807762145996
    8. '                   ' → logprob: -15.500807762145996
    9. ')))' → logprob: -16.50080680847168
    10. '           ' → logprob: -16.50080680847168

Token 238: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0021572799887508154
    2. '   ' → logprob: -6.502157211303711
    3. '
' → logprob: -7.877157211303711
    4. ' print' → logprob: -8.502157211303711
    5. '```' → logprob: -10.377157211303711
    6. '    
' → logprob: -11.002157211303711
    7. 'for' → logprob: -11.252157211303711
    8. '  
' → logprob: -12.877157211303711
    9. '\n' → logprob: -14.002157211303711
    10. 'p' → logprob: -14.002157211303711

Token 239: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.990154047845863e-05
    2. ' print' → logprob: -10.500049591064453
    3. '   ' → logprob: -10.750049591064453
    4. 'for' → logprob: -14.750049591064453
    5. '
' → logprob: -14.750049591064453
    6. '```' → logprob: -16.625049591064453
    7. '    
' → logprob: -17.500049591064453
    8. '#print' → logprob: -18.500049591064453
    9. '	print' → logprob: -19.000049591064453
    10. '  
' → logprob: -20.500049591064453

Token 240: '(*' (ID: 9000)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.38746845722198486
    2. '(*' → logprob: -1.1374684572219849
    3. '(f' → logprob: -7.637468338012695
    4. '(' → logprob: -9.262468338012695
    5. 'res' → logprob: -11.387468338012695
    6. '*' → logprob: -12.012468338012695
    7. 'f' → logprob: -14.512468338012695
    8. '("{}' → logprob: -14.512468338012695
    9. '((*' → logprob: -15.262468338012695
    10. '()' → logprob: -15.262468338012695

Token 241: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -6.704273118884885e-07
    2. ' res' → logprob: -14.250000953674316
    3. '(res' → logprob: -18.75
    4. '   ' → logprob: -21.875
    5. 're' → logprob: -22.5
    6. '	res' → logprob: -22.875
    7. 'list' → logprob: -23.0
    8. '
' → logprob: -23.25
    9. '$res' → logprob: -23.375
    10. 'r' → logprob: -23.875

Token 242: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -14.125001907348633
    4. '())' → logprob: -15.000001907348633
    5. '()' → logprob: -17.125001907348633
    6. '))' → logprob: -17.500001907348633
    7. ')`' → logprob: -17.625001907348633
    8. ')}' → logprob: -18.625001907348633
    9. '')' → logprob: -18.625001907348633
    10. '`)' → logprob: -18.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 240
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 121
Tokens correctement prédits (top 10): 198
Précision stricte (1ère position): 47.92%
Précision adaptée (1ère position): 50.42%
Précision (top 10): 82.50%
================================================================================
