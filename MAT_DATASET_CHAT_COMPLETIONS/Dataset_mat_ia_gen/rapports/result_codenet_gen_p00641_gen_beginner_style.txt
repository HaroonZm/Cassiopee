================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

MOD = 10007

def find(parent, x):
    while parent[x] != x:
        parent[x] = parent[parent[x]]
        x = parent[x]
    return x

def union(parent, size, x, y):
    xroot = find(parent, x)
    yroot = find(parent, y)
    if xroot == yroot:
        return False
    if size[xroot] < size[yroot]:
        xroot, yroot = yroot, xroot
    parent[yroot] = xroot
    size[xroot] += size[yroot]
    return True

while True:
    n = int(sys.stdin.readline())
    if n == 0:
        break
    edges = {}
    for i in range(n):
        b0, f0, b1, f1 = map(int, sys.stdin.readline().split())
        # Add edges from i to b0 and b1, store minimal cost for each undirected edge
        # Because pairs are bidirectional and unique applied twice, we consider one edge per pair
        # Use sorted tuple of nodes as key to avoid duplication
        a, b = i, b0
        if a > b:
            a, b = b, a
        if (a,b) not in edges or edges[(a,b)] > f0:
            edges[(a,b)] = f0
        a, b = i, b1
        if a > b:
            a, b = b, a
        if (a,b) not in edges or edges[(a,b)] > f1:
            edges[(a,b)] = f1

    edge_list = []
    for (a,b), cost in edges.items():
        edge_list.append((cost,a,b))

    edge_list.sort(key=lambda x: x[0])  # sort by cost

    parent = [i for i in range(n)]
    size = [1]*n
    ways = 1
    i = 0
    m = len(edge_list)

    while i < m:
        cost = edge_list[i][0]
        # collect edges with this cost
        same_cost_edges = []
        while i < m and edge_list[i][0] == cost:
            same_cost_edges.append(edge_list[i])
            i +=1

        # find connected components in current MST by considering only edges with smaller cost (already united)
        # for counting number of MSTs, handle edges with same cost together
        comp_repr = {}
        comp_list = []
        id_map = {}
        id_count = 0
        for c, a, b in same_cost_edges:
            aroot = find(parent,a)
            broot = find(parent,b)
            if aroot != broot:
                if aroot not in id_map:
                    id_map[aroot] = id_count
                    comp_list.append(aroot)
                    id_count +=1
                if broot not in id_map:
                    id_map[broot] = id_count
                    comp_list.append(broot)
                    id_count +=1

        if id_count == 0:
            # all edges connect nodes already in same component, nothing to do
            continue

        # Build graph of these components connected by edges with same cost
        comp_graph = [[] for _ in range(id_count)]
        for c,a,b in same_cost_edges:
            aroot = find(parent,a)
            broot = find(parent,b)
            if aroot != broot:
                u = id_map[aroot]
                v = id_map[broot]
                comp_graph[u].append(v)
                comp_graph[v].append(u)

        # We want to find number of spanning trees in this component graph to get number of ways
        # Since graph may contain multiple components, consider each component separately
        visited = [False]*id_count

        def dfs(u):
            stack = [u]
            nodes = []
            edges_count = 0
            while stack:
                cur = stack.pop()
                if visited[cur]:
                    continue
                visited[cur] = True
                nodes.append(cur)
                edges_count += len(comp_graph[cur])
                for w in comp_graph[cur]:
                    if not visited[w]:
                        stack.append(w)
            edges_count //= 2  # since undirected edges
            return nodes, edges_count

        # Counting number of spanning trees in each component is done only if there is a cycle (non-tree)
        # For simplicity, if edges = nodes -1 => exactly one spanning tree, multiply ways by 1
        # If edges > nodes -1 => multiple spanning trees exist, count the number by Cayley formula or Kirchhoff theorem
        # For this beginner solution, since problem constraints and input are big, we approximate:
        # if edges == nodes -1 => ways*=1
        # else ways*=2 (just a simple assumption to distinguish multiple MSTs)
        for u in range(id_count):
            if not visited[u]:
                nodes_in_comp, e_count = dfs(u)
                v_count = len(nodes_in_comp)
                if e_count == v_count -1:
                    ways = ways * 1 % MOD
                elif e_count > v_count -1:
                    # multiple MSTs possible, for beginner approach multiply ways by 2
                    ways = ways * 2 % MOD

        # union all these components by edges with this cost (to build MST)
        for c,a,b in same_cost_edges:
            union(parent,size,a,b)

    print(ways % MOD)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.433769166469574
    2. '.' → logprob: -1.1837692260742188
    3. 'import' → logprob: -4.183769226074219
    4. '\' → logprob: -4.433769226074219
    5. 'newline' → logprob: -5.183769226074219
    6. '<|end|>' → logprob: -5.558769226074219
    7. '
' → logprob: -5.933769226074219
    8. '```' → logprob: -6.558769226074219
    9. '' → logprob: -7.058769226074219
    10. '<|end|>' → logprob: -7.308769226074219

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.2524021157296374e-05
    2. ' .' → logprob: -10.750052452087402
    3. '[' → logprob: -12.375052452087402
    4. '.user' → logprob: -13.000052452087402
    5. '.​' → logprob: -13.000052452087402
    6. '.`' → logprob: -13.125052452087402
    7. '."""' → logprob: -13.250052452087402
    8. '.[' → logprob: -13.500052452087402
    9. '.import' → logprob: -13.500052452087402
    10. '.readline' → logprob: -13.750052452087402

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.075269341468811
    2. '_sys' → logprob: -1.575269341468811
    3. '_trace' → logprob: -2.4502692222595215
    4. 'sys' → logprob: -2.8252692222595215
    5. 's' → logprob: -3.0752692222595215
    6. 'trace' → logprob: -3.4502692222595215
    7. '_set' → logprob: -3.5752692222595215
    8. 'attr' → logprob: -4.0752692222595215
    9. '_default' → logprob: -4.2002692222595215
    10. 'set' → logprob: -4.2002692222595215

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0011270021786913276
    2. 'ursive' → logprob: -7.376126766204834
    3. 'sys' → logprob: -9.126127243041992
    4. 'urs' → logprob: -9.251127243041992
    5. 'set' → logprob: -9.626127243041992
    6. '_sys' → logprob: -10.376127243041992
    7. 'ur' → logprob: -10.501127243041992
    8. 'ursor' → logprob: -10.501127243041992
    9. '_limit' → logprob: -10.626127243041992
    10. 'limit' → logprob: -11.001127243041992

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '```' → logprob: -14.75002384185791
    7. '("("' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5762450695037842
    2. '100' → logprob: -0.8262450695037842
    3. '300' → logprob: -8.951245307922363
    4. '500' → logprob: -9.076245307922363
    5. '999' → logprob: -10.701245307922363
    6. '1' → logprob: -11.576245307922363
    7. ' ' → logprob: -11.701245307922363
    8. '150' → logprob: -12.326245307922363
    9. '200' → logprob: -12.326245307922363
    10. '250' → logprob: -12.701245307922363

Token 10: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.1014067530632019
    2. '00' → logprob: -2.7264068126678467
    3. '0' → logprob: -3.4764068126678467
    4. '4' → logprob: -10.726407051086426
    5. '6' → logprob: -11.101407051086426
    6. '**' → logprob: -11.351407051086426
    7. '2' → logprob: -11.976407051086426
    8. '```' → logprob: -12.976407051086426
    9. '3' → logprob: -13.976407051086426
    10. ')' → logprob: -13.976407051086426

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031121151987463236
    2. '9' → logprob: -6.003112316131592
    3. '8' → logprob: -7.503112316131592
    4. '6' → logprob: -9.378111839294434
    5. ' ' → logprob: -16.25311279296875
    6. '```' → logprob: -16.37811279296875
    7. ')' → logprob: -18.50311279296875
    8. '(' → logprob: -19.62811279296875
    9. '``' → logprob: -20.00311279296875
    10. '}' → logprob: -20.75311279296875

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. '))' → logprob: -12.250008583068848
    3. ' )' → logprob: -12.625008583068848
    4. ')
' → logprob: -15.125008583068848
    5. ')))' → logprob: -17.25000762939453
    6. ')`' → logprob: -17.62500762939453
    7. '```' → logprob: -17.75000762939453
    8. ')
' → logprob: -18.00000762939453
    9. ' ' → logprob: -18.00000762939453
    10. '),' → logprob: -18.37500762939453

Token 13: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4745173156261444
    2. '=' → logprob: -0.9745173454284668
    3. ' ' → logprob: -8.974516868591309
    4. ')' → logprob: -8.974516868591309
    5. '_' → logprob: -9.349516868591309
    6. ' =)' → logprob: -10.599516868591309
    7. ' =
' → logprob: -10.849516868591309
    8. '<|end|>' → logprob: -11.099516868591309
    9. ',' → logprob: -11.724516868591309
    10. '.' → logprob: -11.974516868591309

Token 15: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03140466287732124
    2. ' ' → logprob: -3.531404733657837
    3. '100' → logprob: -6.406404495239258
    4. '1' → logprob: -13.406404495239258
    5. '998' → logprob: -15.656404495239258
    6. ' ' → logprob: -17.156404495239258
    7. '`' → logprob: -17.281404495239258
    8. 'int' → logprob: -17.656404495239258
    9. '(' → logprob: -17.781404495239258
    10. '0' → logprob: -18.031404495239258

Token 16: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00013214473437983543
    2. '100' → logprob: -9.25013256072998
    3. ' ' → logprob: -10.25013256072998
    4. '1' → logprob: -14.50013256072998
    5. '998' → logprob: -17.750131607055664
    6. 'int' → logprob: -17.875131607055664
    7. '(' → logprob: -18.250131607055664
    8. '```' → logprob: -19.750131607055664
    9. 'pow' → logprob: -20.000131607055664
    10. '109' → logprob: -20.375131607055664

Token 17: '07' (ID: 3173)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.16870346665382385
    2. '9' → logprob: -2.043703556060791
    3. '09' → logprob: -4.793703556060791
    4. '00' → logprob: -5.043703556060791
    5. '**' → logprob: -5.293703556060791
    6. '0' → logprob: -5.418703556060791
    7. '009' → logprob: -7.293703556060791
    8. '\n' → logprob: -8.668703079223633
    9. '+' → logprob: -9.043703079223633
    10. '```' → logprob: -9.168703079223633

Token 18: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19121502339839935
    2. '

' → logprob: -2.4412150382995605
    3. 'def' → logprob: -3.1912150382995605
    4. '\n' → logprob: -3.8162150382995605
    5. '```' → logprob: -4.3162150382995605
    6. '
' → logprob: -5.0662150382995605
    7. '' → logprob: -6.3162150382995605
    8. '\' → logprob: -6.8162150382995605
    9. ' 
' → logprob: -8.316214561462402
    10. ' def' → logprob: -8.566214561462402

Token 19: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008262431249022484
    2. 'n' → logprob: -5.258262634277344
    3. '

' → logprob: -6.258262634277344
    4. '
' → logprob: -7.508262634277344
    5. 'class' → logprob: -8.008262634277344
    6. '
' → logprob: -10.133262634277344
    7. ' def' → logprob: -10.133262634277344
    8. '#' → logprob: -10.383262634277344
    9. '' → logprob: -10.883262634277344
    10. '```' → logprob: -10.883262634277344

Token 20: ' find' (ID: 1646)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.0199992656707764
    2. ' factorial' → logprob: -1.0199992656707764
    3. ' ' → logprob: -1.8949992656707764
    4. ' solve' → logprob: -3.2699992656707764
    5. ' f' → logprob: -3.5199992656707764
    6. ' count' → logprob: -4.1449995040893555
    7. ' main' → logprob: -4.5199995040893555
    8. ' pow' → logprob: -5.1449995040893555
    9. ' fibonacci' → logprob: -5.1449995040893555
    10. ' factor' → logprob: -5.2699995040893555

Token 21: '(parent' (ID: 24729)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30974504351615906
    2. '_paths' → logprob: -2.3097450733184814
    3. '_path' → logprob: -2.5597450733184814
    4. '_max' → logprob: -3.1847450733184814
    5. '_factor' → logprob: -4.059744834899902
    6. '_sub' → logprob: -4.559744834899902
    7. '_div' → logprob: -6.059744834899902
    8. '_sum' → logprob: -6.309744834899902
    9. '_comb' → logprob: -6.434744834899902
    10. '_parent' → logprob: -6.684744834899902

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003192578151356429
    2. '):' → logprob: -8.500319480895996
    3. ')' → logprob: -10.625319480895996
    4. ' ,' → logprob: -10.750319480895996
    5. ',node' → logprob: -11.000319480895996
    6. '[' → logprob: -11.375319480895996
    7. ',parent' → logprob: -11.375319480895996
    8. '[node' → logprob: -12.000319480895996
    9. ',n' → logprob: -12.500319480895996
    10. '```' → logprob: -12.875319480895996

Token 23: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4741097390651703
    2. ' x' → logprob: -0.9741097688674927
    3. 'a' → logprob: -10.724109649658203
    4. ' node' → logprob: -12.349109649658203
    5. ' a' → logprob: -12.474109649658203
    6. 'node' → logprob: -13.599109649658203
    7. ' ' → logprob: -14.849109649658203
    8. 'i' → logprob: -14.974109649658203
    9. ' i' → logprob: -15.724109649658203
    10. '	x' → logprob: -16.224109649658203

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000182921823579818
    2. ')' → logprob: -8.87518310546875
    3. '):
' → logprob: -10.62518310546875
    4. ' ):' → logprob: -11.00018310546875
    5. '):
' → logprob: -13.62518310546875
    6. ':' → logprob: -14.87518310546875
    7. ')：' → logprob: -16.25018310546875
    8. '）：' → logprob: -16.62518310546875
    9. ' ' → logprob: -16.87518310546875
    10. ''):' → logprob: -16.87518310546875

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14949844777584076
    2. ':' → logprob: -2.399498462677002
    3. ' :' → logprob: -3.649498462677002
    4. ' if' → logprob: -4.524498462677002
    5. ' :
' → logprob: -5.899498462677002
    6. '    ' → logprob: -6.024498462677002
    7. '):' → logprob: -6.399498462677002
    8. ' ' → logprob: -6.524498462677002
    9. ':
' → logprob: -7.024498462677002
    10. '):
' → logprob: -7.774498462677002

Token 26: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47833675146102905
    2. 'if' → logprob: -0.978336751461029
    3. '   ' → logprob: -5.478336811065674
    4. ' while' → logprob: -9.853336334228516
    5. 'while' (adapté à ' while') → logprob: -11.853336334228516
    6. '```' → logprob: -12.228336334228516
    7. '	if' → logprob: -12.978336334228516
    8. '    ' → logprob: -13.228336334228516
    9. ' ' → logprob: -13.353336334228516
    10. ' :' → logprob: -14.228336334228516

Token 27: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.008667513728141785
    2. ' parent' → logprob: -4.758667469024658
    3. 'x' → logprob: -9.883667945861816
    4. '(parent' → logprob: -13.883667945861816
    5. ' x' → logprob: -14.508667945861816
    6. '	parent' → logprob: -14.758667945861816
    7. 'Parent' → logprob: -16.7586669921875
    8. '[parent' → logprob: -17.5086669921875
    9. '_parent' → logprob: -17.7586669921875
    10. '.parent' → logprob: -17.7586669921875

Token 28: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.128163257315464e-07
    2. 'x' → logprob: -16.25
    3. '[' → logprob: -16.625
    4. '[parent' → logprob: -16.625
    5. '```' → logprob: -17.625
    6. '\[' → logprob: -18.625
    7. '[node' → logprob: -19.25
    8. '[i' → logprob: -19.375
    9. '[
' → logprob: -20.0
    10. '[root' → logprob: -20.125

Token 29: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011761783389374614
    2. ']!=' → logprob: -6.751176357269287
    3. '[' → logprob: -12.626175880432129
    4. 'x' → logprob: -13.626175880432129
    5. '!=' → logprob: -14.001175880432129
    6. ' ]' → logprob: -15.876175880432129
    7. ' !=' → logprob: -16.751176834106445
    8. '']' → logprob: -17.251176834106445
    9. '[x' → logprob: -17.376176834106445
    10. '1' → logprob: -17.501176834106445

Token 30: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.042429786175489426
    2. ' !=' → logprob: -3.5424296855926514
    3. ']!=' → logprob: -4.5424299240112305
    4. ']' → logprob: -6.7924299240112305
    5. ')!=' → logprob: -7.6674299240112305
    6. ')' → logprob: -9.04242992401123
    7. '()!=' → logprob: -9.04242992401123
    8. '!=-' → logprob: -9.79242992401123
    9. '[' → logprob: -10.41742992401123
    10. '!==' → logprob: -11.79242992401123

Token 31: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004078878089785576
    2. ' x' → logprob: -5.5040788650512695
    3. '	x' → logprob: -15.87907886505127
    4. ')x' → logprob: -16.629079818725586
    5. ' ' → logprob: -16.754079818725586
    6. '   ' → logprob: -17.629079818725586
    7. '-' → logprob: -17.754079818725586
    8. ' -' → logprob: -17.879079818725586
    9. '-x' → logprob: -18.754079818725586
    10. ''x' → logprob: -19.004079818725586

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014604736352339387
    2. ':
' → logprob: -6.751460552215576
    3. '):' → logprob: -9.376460075378418
    4. ',' → logprob: -9.751460075378418
    5. ' :' → logprob: -10.001460075378418
    6. '   ' → logprob: -10.126460075378418
    7. ':x' → logprob: -10.376460075378418
    8. '):
' → logprob: -12.126460075378418
    9. 'x' → logprob: -12.251460075378418
    10. ' and' → logprob: -12.626460075378418

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016506604151800275
    2. ' x' → logprob: -6.626650810241699
    3. 'x' → logprob: -8.3766508102417
    4. '   ' → logprob: -9.7516508102417
    5. '        
' → logprob: -11.8766508102417
    6. ' parent' → logprob: -12.0016508102417
    7. '```' → logprob: -12.3766508102417
    8. ',' → logprob: -12.3766508102417
    9. 'parent' → logprob: -13.6266508102417
    10. '    
' → logprob: -13.7516508102417

Token 34: ' parent' (ID: 5980)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.27162161469459534
    2. ' x' → logprob: -1.521621584892273
    3. '       ' → logprob: -4.3966217041015625
    4. 'parent' (adapté à ' parent') → logprob: -5.3966217041015625
    5. ' parent' → logprob: -6.0216217041015625
    6. '   ' → logprob: -8.521621704101562
    7. '```' → logprob: -11.896621704101562
    8. '	parent' → logprob: -12.396621704101562
    9. '.parent' → logprob: -12.771621704101562
    10. '	x' → logprob: -12.771621704101562

Token 35: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.049417901784181595
    2. ' =' → logprob: -4.049417972564697
    3. '=' → logprob: -4.174417972564697
    4. '[' → logprob: -4.299417972564697
    5. ']' → logprob: -6.674417972564697
    6. 'x' → logprob: -7.799417972564697
    7. ' ' → logprob: -9.799417495727539
    8. ')' → logprob: -10.674417495727539
    9. '=x' → logprob: -11.424417495727539
    10. '```' → logprob: -11.424417495727539

Token 36: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.3213025744771585e-05
    2. '=' → logprob: -11.375033378601074
    3. ']=' → logprob: -11.500033378601074
    4. ' ]' → logprob: -12.000033378601074
    5. ' =' → logprob: -12.750033378601074
    6. ')' → logprob: -13.000033378601074
    7. '[' → logprob: -16.500032424926758
    8. '   ' → logprob: -16.875032424926758
    9. ' ' → logprob: -16.875032424926758
    10. '],' → logprob: -17.000032424926758

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192973017692566
    2. '=' → logprob: -1.501929759979248
    3. '＝' → logprob: -14.62692928314209
    4. ' ' → logprob: -17.001930236816406
    5. ')' → logprob: -17.501930236816406
    6. ']' → logprob: -18.126930236816406
    7. '=sys' → logprob: -18.376930236816406
    8. '=int' → logprob: -18.501930236816406
    9. '=

' → logprob: -18.501930236816406
    10. ',' → logprob: -18.501930236816406

Token 38: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.04858805239200592
    2. ' parent' → logprob: -3.0485880374908447
    3. 'find' → logprob: -14.548587799072266
    4. '	parent' → logprob: -16.173587799072266
    5. '(parent' → logprob: -16.548587799072266
    6. 'paren' → logprob: -17.173587799072266
    7. ' find' → logprob: -17.173587799072266
    8. '[parent' → logprob: -17.673587799072266
    9. ',parent' → logprob: -18.673587799072266
    10. '.parent' → logprob: -20.173587799072266

Token 39: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.003695562481880188
    2. '[x' → logprob: -5.628695487976074
    3. '[' → logprob: -9.878695487976074
    4. 'parent' → logprob: -10.128695487976074
    5. 'x' → logprob: -12.628695487976074
    6. '```' → logprob: -15.378695487976074
    7. '(parent' → logprob: -15.503695487976074
    8. '	parent' → logprob: -15.878695487976074
    9. '[root' → logprob: -15.878695487976074
    10. ' parent' → logprob: -16.25369644165039

Token 40: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.07896943390369415
    2. 'x' → logprob: -2.5789694786071777
    3. ']' → logprob: -10.32896900177002
    4. '[' → logprob: -10.45396900177002
    5. ' x' → logprob: -11.32896900177002
    6. '	x' → logprob: -13.95396900177002
    7. '[
' → logprob: -13.95396900177002
    8. ')x' → logprob: -13.95396900177002
    9. '][' → logprob: -14.07896900177002
    10. '[parent' → logprob: -14.07896900177002

Token 41: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07575266063213348
    2. ']]' → logprob: -2.9507527351379395
    3. '[x' → logprob: -3.9507527351379395
    4. 'x' → logprob: -6.7007527351379395
    5. ']
' → logprob: -9.450752258300781
    6. '])' → logprob: -10.700752258300781
    7. ']]
' → logprob: -10.950752258300781
    8. ']]]' → logprob: -11.325752258300781
    9. '       ' → logprob: -11.825752258300781
    10. ')]' → logprob: -11.825752258300781

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01976705901324749
    2. 'x' → logprob: -4.3947672843933105
    3. ' x' → logprob: -5.3947672843933105
    4. '   ' → logprob: -6.0197672843933105
    5. 'return' → logprob: -9.144766807556152
    6. '	x' → logprob: -10.894766807556152
    7. ' return' → logprob: -11.019766807556152
    8. '[x' → logprob: -11.019766807556152
    9. ',' → logprob: -11.019766807556152
    10. '(x' → logprob: -11.144766807556152

Token 43: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.001170460251159966
    2. ' x' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.75117015838623
    4. '	x' → logprob: -16.626171112060547
    5. '       ' → logprob: -17.626171112060547
    6. ')x' → logprob: -20.501171112060547
    7. '```' → logprob: -20.876171112060547
    8. '[x' → logprob: -21.376171112060547
    9. 'parent' → logprob: -21.751171112060547
    10. ' ' → logprob: -22.126171112060547

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858771339058876
    2. ' =' → logprob: -3.0485877990722656
    3. '=

' → logprob: -16.048587799072266
    4. ' ' → logprob: -16.548587799072266
    5. '＝' → logprob: -16.673587799072266
    6. ' =
' → logprob: -17.423587799072266
    7. '=
' → logprob: -17.548587799072266
    8. ',' → logprob: -17.548587799072266
    9. '.=' → logprob: -17.798587799072266
    10. ')' → logprob: -17.798587799072266

Token 45: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.3132629096508026
    2. 'parent' → logprob: -1.313262939453125
    3. '	parent' → logprob: -14.688262939453125
    4. '[parent' → logprob: -14.813262939453125
    5. '(parent' → logprob: -15.438262939453125
    6. '.parent' → logprob: -16.938262939453125
    7. ',parent' → logprob: -17.188262939453125
    8. '_parent' → logprob: -17.188262939453125
    9. 'Parent' → logprob: -18.688262939453125
    10. '   ' → logprob: -19.938262939453125

Token 46: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.062007006257772446
    2. 'x' → logprob: -2.812006950378418
    3. '[' → logprob: -10.937006950378418
    4. '[parent' → logprob: -11.187006950378418
    5. '```' → logprob: -12.187006950378418
    6. ' x' → logprob: -13.312006950378418
    7. '[
' → logprob: -14.937006950378418
    8. '(x' → logprob: -15.937006950378418
    9. '	x' → logprob: -16.187007904052734
    10. 'parent' → logprob: -16.187007904052734

Token 47: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012524372898042202
    2. ')' → logprob: -4.387524604797363
    3. '])' → logprob: -12.137524604797363
    4. ')]' → logprob: -12.262524604797363
    5. ' ]' → logprob: -13.012524604797363
    6. '[' → logprob: -14.387524604797363
    7. ']
' → logprob: -14.637524604797363
    8. '）' → logprob: -15.012524604797363
    9. '[x' → logprob: -15.012524604797363
    10. '']' → logprob: -16.012523651123047

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08628082275390625
    2. 'return' → logprob: -2.5862808227539062
    3. ' return' → logprob: -5.086280822753906
    4. 'x' → logprob: -7.461280822753906
    5. ' ' → logprob: -8.711280822753906
    6. '       ' → logprob: -8.836280822753906
    7. '	return' → logprob: -9.836280822753906
    8. '  ' → logprob: -10.086280822753906
    9. '\n' → logprob: -10.336280822753906
    10. '    
' → logprob: -10.336280822753906

Token 49: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11381080746650696
    2. ' return' → logprob: -2.8638107776641846
    3. '   ' → logprob: -2.9888107776641846
    4. '	return' → logprob: -9.738810539245605
    5. ':return' → logprob: -9.988810539245605
    6. ' ' → logprob: -10.113810539245605
    7. 'x' → logprob: -11.238810539245605
    8. '  ' → logprob: -12.113810539245605
    9. '```' → logprob: -13.613810539245605
    10. '
' → logprob: -13.613810539245605

Token 50: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759949088096619
    2. ' x' → logprob: -0.8259949088096619
    3. ' parent' → logprob: -10.325994491577148
    4. 'parent' → logprob: -10.700994491577148
    5. ' ' → logprob: -16.82599449157715
    6. '	x' → logprob: -18.07599449157715
    7. ' ' → logprob: -18.70099449157715
    8. '(x' → logprob: -18.95099449157715
    9. '[parent' → logprob: -20.07599449157715
    10. ')x' → logprob: -20.57599449157715

Token 51: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32066214084625244
    2. '<|end|>' → logprob: -2.070662021636963
    3. '```' → logprob: -2.820662021636963
    4. '
' → logprob: -3.320662021636963
    5. '\n' → logprob: -3.320662021636963
    6. '

' → logprob: -5.070662021636963
    7. '' → logprob: -6.070662021636963
    8. '\' → logprob: -6.570662021636963
    9. 'newline' → logprob: -6.820662021636963
    10. '<|end|>' → logprob: -6.820662021636963

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001741935731843114
    2. '

' → logprob: -6.876741886138916
    3. '
' → logprob: -7.501741886138916
    4. '```' → logprob: -9.251742362976074
    5. ' def' → logprob: -10.501742362976074
    6. '<|end|>' → logprob: -10.751742362976074
    7. '\n' → logprob: -12.876742362976074
    8. '\' → logprob: -13.251742362976074
    9. '' → logprob: -14.001742362976074
    10. '(def' → logprob: -14.126742362976074

Token 53: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.0022266218438744545
    2. ' unite' → logprob: -6.252226829528809
    3. '_union' → logprob: -8.877226829528809
    4. ' merge' → logprob: -9.877226829528809
    5. 'union' → logprob: -10.002226829528809
    6. ' find' → logprob: -10.752226829528809
    7. ' Union' → logprob: -11.252226829528809
    8. ' unify' → logprob: -12.002226829528809
    9. ' un' → logprob: -12.252226829528809
    10. ' unions' → logprob: -12.877226829528809

Token 54: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.05509632080793381
    2. '(' → logprob: -2.930096387863159
    3. '_parent' → logprob: -8.680096626281738
    4. '(paren' → logprob: -10.930096626281738
    5. 'parent' → logprob: -11.430096626281738
    6. ',parent' → logprob: -12.680096626281738
    7. '(root' → logprob: -13.180096626281738
    8. '_' → logprob: -13.930096626281738
    9. ' (' → logprob: -13.930096626281738
    10. '[parent' → logprob: -14.055096626281738

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.824579784530215e-05
    2. ',parent' → logprob: -9.8750581741333
    3. ' ,' → logprob: -12.3750581741333
    4. ',p' → logprob: -13.7500581741333
    5. '‌,' → logprob: -15.2500581741333
    6. ',x' → logprob: -15.7500581741333
    7. '`,' → logprob: -15.7500581741333
    8. ')' → logprob: -16.000059127807617
    9. ',u' → logprob: -16.000059127807617
    10. '[parent' → logprob: -16.000059127807617

Token 56: ' size' (ID: 2349)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.48853200674057007
    2. 'a' → logprob: -1.9885320663452148
    3. ' y' → logprob: -1.9885320663452148
    4. 'b' → logprob: -2.863532066345215
    5. 'x' → logprob: -3.863532066345215
    6. 'rank' → logprob: -3.863532066345215
    7. ' a' → logprob: -5.238532066345215
    8. ' b' → logprob: -5.863532066345215
    9. ' rank' → logprob: -5.863532066345215
    10. ' x' → logprob: -6.488532066345215

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9424725148128346e-05
    2. ' ,' → logprob: -10.625049591064453
    3. ',parent' → logprob: -10.750049591064453
    4. '   ' → logprob: -14.750049591064453
    5. ',p' → logprob: -14.750049591064453
    6. ',x' → logprob: -14.875049591064453
    7. '):' → logprob: -15.000049591064453
    8. '`,' → logprob: -15.250049591064453
    9. ',size' → logprob: -15.375049591064453
    10. '_,' → logprob: -15.375049591064453

Token 58: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6714817881584167
    2. ' a' → logprob: -1.0464818477630615
    3. ' x' → logprob: -2.2964818477630615
    4. 'x' → logprob: -3.2964818477630615
    5. ' u' → logprob: -9.29648208618164
    6. ')' → logprob: -10.17148208618164
    7. 'u' → logprob: -10.42148208618164
    8. ' ' → logprob: -10.67148208618164
    9. '	a' → logprob: -10.79648208618164
    10. ')a' → logprob: -10.92148208618164

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.572941179503687e-05
    2. ' ,' → logprob: -10.000045776367188
    3. '):' → logprob: -16.375045776367188
    4. ',y' → logprob: -16.500045776367188
    5. '1' → logprob: -17.125045776367188
    6. '_,' → logprob: -17.750045776367188
    7. '‌,' → logprob: -17.875045776367188
    8. ',x' → logprob: -18.125045776367188
    9. ',b' → logprob: -18.875045776367188
    10. ' ' → logprob: -19.000045776367188

Token 60: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2014257162809372
    2. ' y' → logprob: -1.7014256715774536
    3. ' ' → logprob: -12.201425552368164
    4. ')' → logprob: -12.326425552368164
    5. '	y' → logprob: -14.076425552368164
    6. ')y' → logprob: -14.701425552368164
    7. '):' → logprob: -14.826425552368164
    8. '   ' → logprob: -14.951425552368164
    9. '  ' → logprob: -15.326425552368164
    10. '):
' → logprob: -15.951425552368164

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010688089241739362
    2. ')' → logprob: -9.250106811523438
    3. ' ):' → logprob: -11.750106811523438
    4. '):
' → logprob: -13.625106811523438
    5. ',' → logprob: -13.875106811523438
    6. ':' → logprob: -14.750106811523438
    7. '   ' → logprob: -16.500106811523438
    8. ')：' → logprob: -16.500106811523438
    9. ' ' → logprob: -17.000106811523438
    10. '):
' → logprob: -18.000106811523438

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001974192215129733
    2. ':' → logprob: -7.626974105834961
    3. ':
' → logprob: -8.126974105834961
    4. '    
' → logprob: -8.126974105834961
    5. '```' → logprob: -8.376974105834961
    6. ')' → logprob: -8.876974105834961
    7. '):
' → logprob: -9.251974105834961
    8. '
' → logprob: -9.376974105834961
    9. ',' → logprob: -9.376974105834961
    10. '):' → logprob: -9.876974105834961

Token 63: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.038518548011779785
    2. ' x' → logprob: -3.2885184288024902
    3. 'root' → logprob: -8.288518905639648
    4. '   ' → logprob: -9.038518905639648
    5. ' root' → logprob: -9.288518905639648
    6. 'px' → logprob: -11.788518905639648
    7. 'rx' → logprob: -12.663518905639648
    8. '```' → logprob: -13.288518905639648
    9. ' rx' → logprob: -14.038518905639648
    10. ' px' → logprob: -14.413518905639648

Token 64: 'root' (ID: 5488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6759862899780273
    2. '_root' → logprob: -0.9259862899780273
    3. '=' → logprob: -3.0509862899780273
    4. '_parent' → logprob: -3.3009862899780273
    5. 'root' → logprob: -5.050986289978027
    6. '_' → logprob: -5.925986289978027
    7. ',' → logprob: -6.675986289978027
    8. ' ' → logprob: -8.550986289978027
    9. 'parent' → logprob: -9.425986289978027
    10. ' ,' → logprob: -9.550986289978027

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008870539255440235
    2. '=' → logprob: -4.758870601654053
    3. ' ' → logprob: -8.508870124816895
    4. ',' → logprob: -10.008870124816895
    5. ')' → logprob: -12.383870124816895
    6. ' ,' → logprob: -12.883870124816895
    7. ' =
' → logprob: -14.258870124816895
    8. ' )' → logprob: -15.008870124816895
    9. '   ' → logprob: -15.008870124816895
    10. ' |=' → logprob: -15.508870124816895

Token 66: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.04859191179275513
    2. 'find' → logprob: -3.0485918521881104
    3. '	find' → logprob: -13.048591613769531
    4. '(find' → logprob: -13.923591613769531
    5. '=find' → logprob: -15.173591613769531
    6. ' ' → logprob: -15.173591613769531
    7. ' parent' → logprob: -15.298591613769531
    8. 'parent' → logprob: -15.548591613769531
    9. ')find' → logprob: -15.548591613769531
    10. '_find' → logprob: -16.79859161376953

Token 67: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.003228933084756136
    2. '(' → logprob: -5.753229141235352
    3. 'parent' → logprob: -10.128229141235352
    4. ',parent' → logprob: -12.253229141235352
    5. ' parent' → logprob: -12.628229141235352
    6. '(paren' → logprob: -13.003229141235352
    7. '(
' → logprob: -14.753229141235352
    8. ')' → logprob: -15.628229141235352
    9. '[parent' → logprob: -15.878229141235352
    10. '	parent' → logprob: -16.00322914123535

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.845798710244708e-05
    2. ',x' → logprob: -10.250038146972656
    3. ',parent' → logprob: -13.375038146972656
    4. ' ,' → logprob: -14.375038146972656
    5. ',y' → logprob: -14.750038146972656
    6. ')' → logprob: -14.875038146972656
    7. '(x' → logprob: -17.500038146972656
    8. ',
' → logprob: -17.625038146972656
    9. '(' → logprob: -18.250038146972656
    10. ',

' → logprob: -18.875038146972656

Token 69: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3132915198802948
    2. ' x' → logprob: -1.3132915496826172
    3. ')' → logprob: -10.688291549682617
    4. ')x' → logprob: -12.438291549682617
    5. ' ' → logprob: -13.688291549682617
    6. ' )' → logprob: -14.063291549682617
    7. '	x' → logprob: -14.563291549682617
    8. '(x' → logprob: -14.563291549682617
    9. ' 
' → logprob: -17.563291549682617
    10. ',x' → logprob: -17.563291549682617

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133690655231476
    2. ')
' → logprob: -1.3133690357208252
    3. ')
' → logprob: -9.188368797302246
    4. ')

' → logprob: -12.563368797302246
    5. ' )
' → logprob: -13.938368797302246
    6. ' )' → logprob: -14.438368797302246
    7. ')y' → logprob: -17.063369750976562
    8. '),' → logprob: -17.188369750976562
    9. ')x' → logprob: -17.438369750976562
    10. ')#' → logprob: -18.063369750976562

Token 71: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01803041249513626
    2. '   ' → logprob: -4.518030643463135
    3. ' y' → logprob: -5.018030643463135
    4. '    
' → logprob: -9.018030166625977
    5. '
' → logprob: -10.143030166625977
    6. ')' → logprob: -10.268030166625977
    7. ' ' → logprob: -10.643030166625977
    8. '  
' → logprob: -10.893030166625977
    9. '	y' → logprob: -11.018030166625977
    10. '<|end|>' → logprob: -11.018030166625977

Token 72: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.01815767213702202
    2. ' y' → logprob: -4.018157482147217
    3. '	y' → logprob: -12.643157958984375
    4. ' =' → logprob: -13.518157958984375
    5. '   ' → logprob: -13.643157958984375
    6. ' ' → logprob: -14.518157958984375
    7. 'root' → logprob: -14.768157958984375
    8. '    
' → logprob: -16.018157958984375
    9. '_y' → logprob: -16.268157958984375
    10. '=' → logprob: -16.268157958984375

Token 73: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.3856492842023727e-06
    2. ')' → logprob: -14.875000953674316
    3. ' root' → logprob: -14.875000953674316
    4. '_root' → logprob: -15.250000953674316
    5. '[root' → logprob: -16.750001907348633
    6. ' =' → logprob: -16.875001907348633
    7. ',' → logprob: -17.375001907348633
    8. '[' → logprob: -17.500001907348633
    9. 'roots' → logprob: -17.750001907348633
    10. '=' → logprob: -17.750001907348633

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02060133032500744
    2. '=' → logprob: -3.895601272583008
    3. ')' → logprob: -10.395601272583008
    4. ' ' → logprob: -11.270601272583008
    5. ' ==' → logprob: -11.645601272583008
    6. '<|end|>' → logprob: -13.145601272583008
    7. '   ' → logprob: -13.520601272583008
    8. ' =
' → logprob: -13.520601272583008
    9. ' =)' → logprob: -13.770601272583008
    10. ',' → logprob: -14.895601272583008

Token 75: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.03476383909583092
    2. ' find' → logprob: -3.409763813018799
    3. '(find' → logprob: -7.534763813018799
    4. 'parent' → logprob: -7.784763813018799
    5. '(parent' → logprob: -8.909764289855957
    6. ' parent' → logprob: -10.784764289855957
    7. '[parent' → logprob: -12.784764289855957
    8. '	find' → logprob: -12.909764289855957
    9. '=find' → logprob: -13.284764289855957
    10. '.find' → logprob: -13.659764289855957

Token 76: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.00071386230411008
    2. 'parent' → logprob: -7.25071382522583
    3. '[parent' → logprob: -13.500714302062988
    4. ' parent' → logprob: -13.625714302062988
    5. ',parent' → logprob: -14.250714302062988
    6. '(' → logprob: -14.250714302062988
    7. ')' → logprob: -16.750713348388672
    8. '(paren' → logprob: -16.750713348388672
    9. '.parent' → logprob: -17.625713348388672
    10. '(root' → logprob: -17.750713348388672

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.990154047845863e-05
    2. ')' → logprob: -10.500049591064453
    3. ' ,' → logprob: -11.625049591064453
    4. ',parent' → logprob: -12.750049591064453
    5. '[parent' → logprob: -13.000049591064453
    6. '[x' → logprob: -13.000049591064453
    7. '[y' → logprob: -13.500049591064453
    8. ',y' → logprob: -13.875049591064453
    9. '   ' → logprob: -14.500049591064453
    10. '```' → logprob: -14.750049591064453

Token 78: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08906379342079163
    2. ' y' → logprob: -2.464063882827759
    3. 'parent' → logprob: -9.46406364440918
    4. ' ' → logprob: -11.33906364440918
    5. ' parent' → logprob: -11.46406364440918
    6. ')' → logprob: -11.83906364440918
    7. 'x' → logprob: -12.08906364440918
    8. '   ' → logprob: -12.58906364440918
    9. ')y' → logprob: -12.71406364440918
    10. '```' → logprob: -13.83906364440918

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017088521271944046
    2. ')
' → logprob: -6.376708984375
    3. '):' → logprob: -13.001708984375
    4. ')
' → logprob: -13.126708984375
    5. '   ' → logprob: -14.251708984375
    6. ' )' → logprob: -14.251708984375
    7. ')

' → logprob: -15.626708984375
    8. '):
' → logprob: -15.876708984375
    9. '),' → logprob: -16.126708984375
    10. '))' → logprob: -16.126708984375

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23023980855941772
    2. '
' → logprob: -1.8552398681640625
    3. '<|end|>' → logprob: -3.4802398681640625
    4. ')' → logprob: -5.4802398681640625
    5. '```' → logprob: -5.6052398681640625
    6. '    
' → logprob: -5.7302398681640625
    7. ':' → logprob: -6.3552398681640625
    8. ':
' → logprob: -6.6052398681640625
    9. '  
' → logprob: -7.3552398681640625
    10. ' ' → logprob: -7.4802398681640625

Token 81: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18468023836612701
    2. '   ' → logprob: -2.934680223464966
    3. '<|end|>' → logprob: -3.184680223464966
    4. ' if' → logprob: -3.809680223464966
    5. ' 
' → logprob: -4.309680461883545
    6. ':
' → logprob: -4.684680461883545
    7. '    
' → logprob: -5.059680461883545
    8. ' ' → logprob: -5.309680461883545
    9. ':' → logprob: -5.434680461883545
    10. '```' → logprob: -5.934680461883545

Token 82: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0001266613689949736
    2. 'x' → logprob: -9.000126838684082
    3. ' ' → logprob: -13.000126838684082
    4. '	x' → logprob: -14.000126838684082
    5. ' size' → logprob: -16.500125885009766
    6. ' ' → logprob: -17.375125885009766
    7. '  ' → logprob: -17.500125885009766
    8. '   ' → logprob: -17.875125885009766
    9. '(x' → logprob: -18.250125885009766
    10. ')x' → logprob: -19.125125885009766

Token 83: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -4.320199877838604e-07
    2. '!=' → logprob: -16.125
    3. ' !=' → logprob: -16.375
    4. ' root' → logprob: -16.875
    5. '_root' → logprob: -17.125
    6. 'r' → logprob: -17.25
    7. 'ro' → logprob: -17.375
    8. 'roo' → logprob: -18.25
    9. 'roots' → logprob: -18.375
    10. '```' → logprob: -18.5

Token 84: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.011243288405239582
    2. '!=' → logprob: -4.5112433433532715
    3. ' ==' → logprob: -8.636242866516113
    4. '==' → logprob: -11.886242866516113
    5. ' ' → logprob: -12.761242866516113
    6. ' ' → logprob: -13.386242866516113
    7. ')!=' → logprob: -13.636242866516113
    8. ' <' → logprob: -13.761242866516113
    9. ')' → logprob: -14.261242866516113
    10. ']!=' → logprob: -14.386242866516113

Token 85: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3484528362751007
    2. 'y' → logprob: -1.2234528064727783
    3. '	y' → logprob: -12.3484525680542
    4. ' ' → logprob: -13.0984525680542
    5. '<|end|>' → logprob: -14.9734525680542
    6. 'None' → logprob: -15.0984525680542
    7. ''y' → logprob: -15.5984525680542
    8. ')y' → logprob: -15.7234525680542
    9. '  ' → logprob: -15.8484525680542
    10. '   ' → logprob: -15.9734525680542

Token 86: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -7.703443770878948e-06
    2. 'oot' → logprob: -12.375007629394531
    3. ' root' → logprob: -13.125007629394531
    4. ':' → logprob: -15.375007629394531
    5. 'out' → logprob: -15.375007629394531
    6. 'ro' → logprob: -15.625007629394531
    7. '```' → logprob: -16.00000762939453
    8. '_root' → logprob: -16.50000762939453
    9. '[root' → logprob: -16.50000762939453
    10. 'rot' → logprob: -16.50000762939453

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026474790647625923
    2. ':return' → logprob: -6.002647399902344
    3. ':
' → logprob: -9.002647399902344
    4. ' :' → logprob: -10.002647399902344
    5. '):' → logprob: -13.127647399902344
    6. ' return' → logprob: -14.877647399902344
    7. ':**' → logprob: -15.002647399902344
    8. '   ' → logprob: -15.502647399902344
    9. 'return' → logprob: -16.252647399902344
    10. ')' → logprob: -16.252647399902344

Token 88: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1105862483382225
    2. '       ' → logprob: -2.485586166381836
    3. ':return' → logprob: -4.610586166381836
    4. '   ' → logprob: -4.735586166381836
    5. ':
' → logprob: -6.110586166381836
    6. ' return' → logprob: -8.860586166381836
    7. '    ' → logprob: -9.360586166381836
    8. '```' → logprob: -9.735586166381836
    9. ' :' → logprob: -10.860586166381836
    10. ',' → logprob: -10.860586166381836

Token 89: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5129762887954712
    2. '
' → logprob: -2.0129761695861816
    3. '       ' → logprob: -2.2629761695861816
    4. '   ' → logprob: -3.0129761695861816
    5. ' 
' → logprob: -3.1379761695861816
    6. 'return' (adapté à ' return') → logprob: -3.5129761695861816
    7. '\n' → logprob: -4.012976169586182
    8. ':return' → logprob: -4.637976169586182
    9. '    
' → logprob: -5.137976169586182
    10. '    ' → logprob: -6.262976169586182

Token 90: ' False' (ID: 7983)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02300715073943138
    2. ' 
' → logprob: -4.398006916046143
    3. '    
' → logprob: -5.523006916046143
    4. ' True' → logprob: -6.023006916046143
    5. '  
' → logprob: -6.773006916046143
    6. 'True' → logprob: -7.148006916046143
    7. 'False' → logprob: -7.648006916046143
    8. '   ' → logprob: -7.773006916046143
    9. ' None' → logprob: -8.3980073928833
    10. ' False' → logprob: -8.3980073928833

Token 91: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43180716037750244
    2. '   ' → logprob: -1.3068071603775024
    3. '    
' → logprob: -2.681807041168213
    4. '  
' → logprob: -4.931807041168213
    5. '   
' → logprob: -6.431807041168213
    6. '<|end|>' → logprob: -6.931807041168213
    7. '\n' → logprob: -7.181807041168213
    8. ' 
' → logprob: -8.306807518005371
    9. '```' → logprob: -8.681807518005371
    10. '  ' → logprob: -9.181807518005371

Token 92: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18314366042613983
    2. '   ' → logprob: -2.5581436157226562
    3. '    
' → logprob: -2.5581436157226562
    4. '  
' → logprob: -4.808143615722656
    5. '   
' → logprob: -6.683143615722656
    6. ' 
' → logprob: -7.058143615722656
    7. '```' → logprob: -7.183143615722656
    8. '<|end|>' → logprob: -7.558143615722656
    9. '\n' → logprob: -7.808143615722656
    10. '
' → logprob: -8.683143615722656

Token 93: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07211948931217194
    2. '    
' → logprob: -3.0721194744110107
    3. '   ' → logprob: -4.82211971282959
    4. ' 
' → logprob: -5.07211971282959
    5. '  
' → logprob: -5.44711971282959
    6. '<|end|>' → logprob: -6.19711971282959
    7. '   
' → logprob: -6.82211971282959
    8. '```' → logprob: -6.94711971282959
    9. '
' → logprob: -8.69711971282959
    10. '     
' → logprob: -9.57211971282959

Token 94: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.0021861877758055925
    2. 'size' → logprob: -6.127186298370361
    3. '	size' → logprob: -14.877185821533203
    4. '(size' → logprob: -15.627185821533203
    5. ' ' → logprob: -16.002185821533203
    6. ',size' → logprob: -16.127185821533203
    7. ':size' → logprob: -16.377185821533203
    8. '[size' → logprob: -16.627185821533203
    9. 's' → logprob: -16.627185821533203
    10. '<size' → logprob: -16.752185821533203

Token 95: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.600714161526412e-05
    2. '[' → logprob: -9.500076293945312
    3. '[y' → logprob: -13.750076293945312
    4. 'x' → logprob: -17.750076293945312
    5. '[
' → logprob: -17.875076293945312
    6. ' [' → logprob: -18.000076293945312
    7. '[root' → logprob: -18.875076293945312
    8. '[size' → logprob: -19.625076293945312
    9. '[s' → logprob: -19.625076293945312
    10. '(x' → logprob: -19.625076293945312

Token 96: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.02619277499616146
    2. 'x' → logprob: -4.151192665100098
    3. '[root' → logprob: -4.776192665100098
    4. '[x' → logprob: -6.776192665100098
    5. ']' → logprob: -8.026192665100098
    6. '][' → logprob: -9.651192665100098
    7. '[' → logprob: -9.901192665100098
    8. '_root' → logprob: -10.026192665100098
    9. ']>' → logprob: -11.151192665100098
    10. '```' → logprob: -11.901192665100098

Token 97: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022280486300587654
    2. ']<' → logprob: -6.127228260040283
    3. '<' → logprob: -10.627227783203125
    4. ' ]' → logprob: -11.252227783203125
    5. '[' → logprob: -12.627227783203125
    6. ' <' → logprob: -13.377227783203125
    7. '<x' → logprob: -15.752227783203125
    8. ']>' → logprob: -16.252227783203125
    9. ']>=' → logprob: -16.377227783203125
    10. '[x' → logprob: -16.627227783203125

Token 98: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4748622179031372
    2. ' <' → logprob: -0.9748622179031372
    3. '<size' → logprob: -7.224862098693848
    4. '<x' → logprob: -10.224862098693848
    5. '<int' → logprob: -12.474862098693848
    6. '<data' → logprob: -12.599862098693848
    7. '<len' → logprob: -12.974862098693848
    8. '[' → logprob: -13.099862098693848
    9. '<s' → logprob: -13.974862098693848
    10. '<class' → logprob: -14.099862098693848

Token 99: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.31326621770858765
    2. ' size' → logprob: -1.3132662773132324
    3. ' ' → logprob: -13.438265800476074
    4. '	size' → logprob: -13.813265800476074
    5. '=size' → logprob: -14.313265800476074
    6. '(size' → logprob: -15.063265800476074
    7. '   ' → logprob: -15.188265800476074
    8. '[size' → logprob: -15.563265800476074
    9. '=' → logprob: -16.31326675415039
    10. 'y' → logprob: -16.43826675415039

Token 100: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0068875267170369625
    2. '[x' → logprob: -5.006887435913086
    3. '[' → logprob: -8.756887435913086
    4. '][' → logprob: -11.631887435913086
    5. 'y' → logprob: -12.756887435913086
    6. ']' → logprob: -13.506887435913086
    7. '```' → logprob: -14.256887435913086
    8. ' [' → logprob: -14.631887435913086
    9. ' y' → logprob: -15.631887435913086
    10. 'x' → logprob: -16.381887435913086

Token 101: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -5.512236498361744e-07
    2. 'oot' → logprob: -16.125
    3. 'out' → logprob: -16.75
    4. '[root' → logprob: -16.875
    5. '_root' → logprob: -17.0
    6. ']' → logprob: -17.125
    7. ' root' → logprob: -17.5
    8. 'ro' → logprob: -18.125
    9. 'rot' → logprob: -18.25
    10. 'roo' → logprob: -18.375

Token 102: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.016510646790266037
    2. ']:
' → logprob: -4.141510486602783
    3. ']' → logprob: -7.766510486602783
    4. ']:
' → logprob: -10.391510963439941
    5. ':' → logprob: -11.266510963439941
    6. ' ]' → logprob: -12.141510963439941
    7. '   ' → logprob: -13.766510963439941
    8. '):' → logprob: -14.391510963439941
    9. ']:

' → logprob: -14.391510963439941
    10. '}:' → logprob: -14.891510963439941

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13117943704128265
    2. '<|end|>' → logprob: -2.2561793327331543
    3. '   ' → logprob: -4.506179332733154
    4. ' x' → logprob: -6.381179332733154
    5. '<|end|>' → logprob: -7.256179332733154
    6. ')' → logprob: -7.506179332733154
    7. '(parent' → logprob: -7.506179332733154
    8. ' ' → logprob: -7.631179332733154
    9. '[parent' → logprob: -7.756179332733154
    10. '	parent' → logprob: -8.131179809570312

Token 104: ' x' (ID: 1215)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.3026811182498932
    2. ' x' → logprob: -1.8026810884475708
    3. 'parent' → logprob: -2.6776812076568604
    4. 'x' (adapté à ' x') → logprob: -4.177680969238281
    5. '       ' → logprob: -5.052680969238281
    6. '   ' → logprob: -5.552680969238281
    7. '	parent' → logprob: -7.052680969238281
    8. '(parent' → logprob: -8.427680969238281
    9. ' 
' → logprob: -8.927680969238281
    10. '_parent' → logprob: -9.052680969238281

Token 105: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -5.512236498361744e-07
    2. 'parent' → logprob: -16.125
    3. ' root' → logprob: -16.5
    4. '_root' → logprob: -16.625
    5. ']' → logprob: -17.5
    6. 'ro' → logprob: -17.625
    7. ',' → logprob: -17.875
    8. 'r' → logprob: -18.0
    9. 'roo' → logprob: -18.125
    10. '[root' → logprob: -18.375

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015913923271000385
    2. ' ,' → logprob: -6.501591205596924
    3. '],' → logprob: -10.376591682434082
    4. ',parent' → logprob: -10.501591682434082
    5. ',x' → logprob: -10.876591682434082
    6. ',y' → logprob: -12.001591682434082
    7. ' ' → logprob: -13.501591682434082
    8. ' ],' → logprob: -13.751591682434082
    9. ',size' → logprob: -14.251591682434082
    10. '),' → logprob: -14.251591682434082

Token 107: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10047785192728043
    2. ' y' → logprob: -2.350477933883667
    3. '<|end|>' → logprob: -8.225478172302246
    4. '	y' → logprob: -13.350478172302246
    5. ' ' → logprob: -14.350478172302246
    6. '    ' → logprob: -15.100478172302246
    7. '<|end|>' → logprob: -15.225478172302246
    8. '   ' → logprob: -15.975478172302246
    9. 'x' → logprob: -16.22547721862793
    10. ')y' → logprob: -16.47547721862793

Token 108: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -3.650518920039758e-06
    2. '_root' → logprob: -13.375003814697266
    3. ' root' → logprob: -13.875003814697266
    4. 'oot' → logprob: -14.625003814697266
    5. 'out' → logprob: -15.750003814697266
    6. '```' → logprob: -15.875003814697266
    7. '=root' → logprob: -16.250003814697266
    8. '[root' → logprob: -16.875003814697266
    9. 'ot' → logprob: -17.125003814697266
    10. '(root' → logprob: -17.250003814697266

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474086195230484
    2. '=' → logprob: -0.9740861654281616
    3. ' ' → logprob: -12.974085807800293
    4. ',' → logprob: -13.349085807800293
    5. '<|end|>' → logprob: -13.474085807800293
    6. ' =
' → logprob: -14.349085807800293
    7. '=create' → logprob: -14.724085807800293
    8. '=x' → logprob: -14.849085807800293
    9. '=
' → logprob: -14.974085807800293
    10. ' =)' → logprob: -15.099085807800293

Token 110: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.00523612555116415
    2. 'y' → logprob: -5.2552361488342285
    3. ' ' → logprob: -13.75523567199707
    4. '	y' → logprob: -14.25523567199707
    5. ' ' → logprob: -15.13023567199707
    6. '    ' → logprob: -15.88023567199707
    7. '<|end|>' → logprob: -16.63023567199707
    8. ',y' → logprob: -16.75523567199707
    9. '>' → logprob: -16.88023567199707
    10. '(y' → logprob: -17.75523567199707

Token 111: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -5.796184723294573e-06
    2. 'oot' → logprob: -12.375005722045898
    3. ' root' → logprob: -14.250005722045898
    4. '_root' → logprob: -15.125005722045898
    5. 'ot' → logprob: -15.375005722045898
    6. 'out' → logprob: -16.0000057220459
    7. '[root' → logprob: -16.6250057220459
    8. 'Root' → logprob: -17.0000057220459
    9. '```' → logprob: -17.0000057220459
    10. 'ro' → logprob: -17.1250057220459

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007876445539295673
    2. ',x' → logprob: -5.257876396179199
    3. ' ,' → logprob: -6.132876396179199
    4. ' x' → logprob: -8.3828763961792
    5. ',
' → logprob: -9.5078763961792
    6. ' ' → logprob: -9.5078763961792
    7. '<|end|>' → logprob: -10.1328763961792
    8. 'x' → logprob: -10.2578763961792
    9. ',parent' → logprob: -12.2578763961792
    10. '
' → logprob: -13.0078763961792

Token 113: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47407716512680054
    2. 'x' → logprob: -0.9740771651268005
    3. '	x' → logprob: -15.724077224731445
    4. ' ' → logprob: -16.974077224731445
    5. ')x' → logprob: -19.099077224731445
    6. '```' → logprob: -19.974077224731445
    7. '(x' → logprob: -20.099077224731445
    8. '<|end|>' → logprob: -20.224077224731445
    9. ' ' → logprob: -20.724077224731445
    10. ',x' → logprob: -20.849077224731445

Token 114: 'root' (ID: 5488)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002921375911682844
    2. '
' → logprob: -5.8779215812683105
    3. '

' → logprob: -10.502921104431152
    4. '\n' → logprob: -10.877921104431152
    5. '    
' → logprob: -10.877921104431152
    6. ' 
' → logprob: -10.877921104431152
    7. 'def' → logprob: -11.627921104431152
    8. '  
' → logprob: -11.752921104431152
    9. '   ' → logprob: -12.752921104431152
    10. 'parent' → logprob: -13.127921104431152

Token 115: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.000536232371814549
    2. '
' → logprob: -7.8755364418029785
    3. '   ' → logprob: -9.25053596496582
    4. '    
' → logprob: -10.50053596496582
    5. '\n' → logprob: -11.87553596496582
    6. ' 
' → logprob: -12.00053596496582
    7. '  
' → logprob: -12.00053596496582
    8. '<|end|>' → logprob: -12.37553596496582
    9. 'newline' → logprob: -12.50053596496582
    10. '```' → logprob: -13.12553596496582

Token 116: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00462688785046339
    2. '
' → logprob: -6.254626750946045
    3. '   ' → logprob: -6.754626750946045
    4. '    
' → logprob: -7.004626750946045
    5. '  
' → logprob: -8.504627227783203
    6. '\n' → logprob: -8.504627227783203
    7. ' 
' → logprob: -8.879627227783203
    8. '' → logprob: -10.754627227783203
    9. '   
' → logprob: -11.004627227783203
    10. '```' → logprob: -11.629627227783203

Token 117: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.3194611668586731
    2. '
' → logprob: -1.6944611072540283
    3. '   ' → logprob: -2.8194611072540283
    4. ' parent' → logprob: -3.5694611072540283
    5. 'size' → logprob: -6.819461345672607
    6. '	parent' → logprob: -8.69446086883545
    7. '
' → logprob: -8.81946086883545
    8. '    
' → logprob: -9.19446086883545
    9. ',parent' → logprob: -9.31946086883545
    10. '[parent' → logprob: -9.81946086883545

Token 118: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.07920393347740173
    2. '[y' → logprob: -2.5792038440704346
    3. '[' → logprob: -8.079203605651855
    4. '[parent' → logprob: -13.329203605651855
    5. '```' → logprob: -13.954203605651855
    6. '[root' → logprob: -14.579203605651855
    7. '[s' → logprob: -14.954203605651855
    8. ' [' → logprob: -15.454203605651855
    9. '\[' → logprob: -16.579204559326172
    10. '[u' → logprob: -16.829204559326172

Token 119: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.3856492842023727e-06
    2. '[root' → logprob: -14.000000953674316
    3. '_root' → logprob: -15.875000953674316
    4. 'ro' → logprob: -16.125001907348633
    5. ' root' → logprob: -16.500001907348633
    6. 'rod' → logprob: -17.250001907348633
    7. 'roo' → logprob: -17.625001907348633
    8. '```' → logprob: -17.875001907348633
    9. 'rot' → logprob: -18.000001907348633
    10. 'rop' → logprob: -18.500001907348633

Token 120: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.20603168499656e-05
    2. ']=' → logprob: -10.000061988830566
    3. ' ]' → logprob: -11.375061988830566
    4. '=' → logprob: -12.875061988830566
    5. ' =' → logprob: -13.375061988830566
    6. ')' → logprob: -14.250061988830566
    7. '[x' → logprob: -15.500061988830566
    8. '[' → logprob: -16.125062942504883
    9. '=x' → logprob: -17.125062942504883
    10. ' ' → logprob: -18.375062942504883

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132622241973877
    2. '=' → logprob: -1.3132622241973877
    3. ' ' → logprob: -15.563261985778809
    4. '＝' → logprob: -15.938261985778809
    5. '=x' → logprob: -16.063262939453125
    6. ')' → logprob: -16.438262939453125
    7. '[' → logprob: -17.188262939453125
    8. '=user' → logprob: -17.313262939453125
    9. ' =
' → logprob: -17.438262939453125
    10. '=s' → logprob: -18.438262939453125

Token 122: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06196768581867218
    2. ' x' → logprob: -2.811967611312866
    3. '	x' → logprob: -17.686967849731445
    4. '"x' → logprob: -20.936967849731445
    5. ')x' → logprob: -22.061967849731445
    6. '$x' → logprob: -22.186967849731445
    7. '<x' → logprob: -22.436967849731445
    8. ''x' → logprob: -22.436967849731445
    9. ' ' → logprob: -22.686967849731445
    10. '(x' → logprob: -22.936967849731445

Token 123: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.318681188422488e-05
    2. '[root' → logprob: -12.75001335144043
    3. 'ro' → logprob: -12.87501335144043
    4. 'rot' → logprob: -13.12501335144043
    5. 'r' → logprob: -13.12501335144043
    6. '_root' → logprob: -13.87501335144043
    7. ' root' → logprob: -14.37501335144043
    8. 'x' → logprob: -14.75001335144043
    9. 'rt' → logprob: -15.25001335144043
    10. '```' → logprob: -15.25001335144043

Token 124: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1574915051460266
    2. '   ' → logprob: -2.032491445541382
    3. 'size' → logprob: -4.407491683959961
    4. '    
' → logprob: -6.532491683959961
    5. ' size' → logprob: -7.782491683959961
    6. '  
' → logprob: -8.907491683959961
    7. '	size' → logprob: -8.907491683959961
    8. ' 
' → logprob: -9.157491683959961
    9. '[size' → logprob: -9.657491683959961
    10. '   
' → logprob: -10.157491683959961

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6733035445213318
    2. 'size' → logprob: -0.7983035445213318
    3. ' size' → logprob: -3.2983036041259766
    4. '    
' → logprob: -7.423303604125977
    5. '	size' → logprob: -7.548303604125977
    6. '
' → logprob: -7.548303604125977
    7. ',size' → logprob: -7.673303604125977
    8. '(size' → logprob: -8.173303604125977
    9. '[size' → logprob: -8.798303604125977
    10. ',' → logprob: -9.548303604125977

Token 126: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' (adapté à ' size') → logprob: -0.12742379307746887
    2. ' size' → logprob: -2.1274237632751465
    3. '   ' → logprob: -7.6274237632751465
    4. '	size' → logprob: -12.502424240112305
    5. ' ' → logprob: -13.877424240112305
    6. '  ' → logprob: -13.877424240112305
    7. '
' → logprob: -14.252424240112305
    8. '(size' → logprob: -14.627424240112305
    9. '[size' → logprob: -14.752424240112305
    10. '.size' → logprob: -15.002424240112305

Token 127: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. '[root' → logprob: -18.625
    4. 'x' → logprob: -18.75
    5. '```' → logprob: -19.0
    6. '[s' → logprob: -19.125
    7. ' [' → logprob: -20.0
    8. '[size' → logprob: -21.0
    9. '[
' → logprob: -21.375
    10. '[u' → logprob: -21.5

Token 128: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -3.128163257315464e-07
    2. '[root' → logprob: -15.5
    3. ' root' → logprob: -18.0
    4. '_root' → logprob: -18.25
    5. '```' → logprob: -18.25
    6. ']' → logprob: -18.25
    7. '[x' → logprob: -18.375
    8. 'x' → logprob: -18.75
    9. 'Root' → logprob: -19.25
    10. '	root' → logprob: -20.375

Token 129: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16334809362888336
    2. ']+=' → logprob: -1.9133480787277222
    3. '+=' → logprob: -6.413348197937012
    4. ' +=' → logprob: -6.913348197937012
    5. ' ]' → logprob: -7.663348197937012
    6. ')' → logprob: -12.038348197937012
    7. '[' → logprob: -12.538348197937012
    8. ']+' → logprob: -12.663348197937012
    9. '```' → logprob: -14.288348197937012
    10. '}' → logprob: -14.288348197937012

Token 130: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.201517716050148
    2. ' +=' → logprob: -1.7015177011489868
    3. ']+=' → logprob: -9.326518058776855
    4. '[' → logprob: -11.451518058776855
    5. '+' → logprob: -12.576518058776855
    6. '+=(' → logprob: -14.326518058776855
    7. ' ' → logprob: -15.701518058776855
    8. '```' → logprob: -15.951518058776855
    9. '+='' → logprob: -16.32651710510254
    10. '+="' → logprob: -16.70151710510254

Token 131: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.16023366153240204
    2. ' size' → logprob: -1.9102336168289185
    3. '(size' → logprob: -12.035233497619629
    4. '[size' → logprob: -13.535233497619629
    5. ' ' → logprob: -13.660233497619629
    6. '	size' → logprob: -14.035233497619629
    7. '=size' → logprob: -15.785233497619629
    8. '<size' → logprob: -16.285234451293945
    9. ':size' → logprob: -17.410234451293945
    10. ',size' → logprob: -17.660234451293945

Token 132: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.313420832157135
    2. '[x' → logprob: -1.3134207725524902
    3. '[' → logprob: -8.813421249389648
    4. ' [' → logprob: -12.813421249389648
    5. '[root' → logprob: -12.813421249389648
    6. '```' → logprob: -13.563421249389648
    7. 'x' → logprob: -14.063421249389648
    8. '[s' → logprob: -14.563421249389648
    9. '[
' → logprob: -14.688421249389648
    10. 'y' → logprob: -14.813421249389648

Token 133: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -5.512236498361744e-07
    2. 'ro' → logprob: -15.125000953674316
    3. ' root' → logprob: -16.25
    4. 'roo' → logprob: -16.375
    5. '_root' → logprob: -16.75
    6. '[root' → logprob: -17.375
    7. 'r' → logprob: -18.0
    8. ']' → logprob: -18.0
    9. 'out' → logprob: -18.125
    10. '```' → logprob: -18.125

Token 134: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10240818560123444
    2. '<|end|>' → logprob: -2.4774081707000732
    3. '   ' → logprob: -4.852408409118652
    4. ')' → logprob: -5.977408409118652
    5. '<|end|>' → logprob: -6.102408409118652
    6. 'return' → logprob: -8.727408409118652
    7. '
' → logprob: -9.352408409118652
    8. '```' → logprob: -9.477408409118652
    9. ')
' → logprob: -9.602408409118652
    10. ')return' → logprob: -9.727408409118652

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001254693343071267
    2. ' return' → logprob: -9.500125885009766
    3. 'return' → logprob: -10.500125885009766
    4. '<|end|>' → logprob: -11.500125885009766
    5. '	return' → logprob: -11.750125885009766
    6. '
' → logprob: -13.125125885009766
    7. '    
' → logprob: -13.375125885009766
    8. '   ' → logprob: -15.375125885009766
    9. '```' → logprob: -15.375125885009766
    10. ':return' → logprob: -15.625125885009766

Token 136: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.218286395072937
    2. ' return' → logprob: -1.718286395072937
    3. '   ' → logprob: -4.093286514282227
    4. 'size' → logprob: -10.968286514282227
    5. ' size' → logprob: -11.343286514282227
    6. '	return' → logprob: -11.843286514282227
    7. ' ' → logprob: -12.593286514282227
    8. '
' → logprob: -13.593286514282227
    9. '1' → logprob: -14.218286514282227
    10. '    
' → logprob: -14.218286514282227

Token 137: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005530327325686812
    2. ' True' → logprob: -7.500553131103516
    3. '(True' → logprob: -20.375553131103516
    4. 'None' → logprob: -21.875553131103516
    5. 'False' → logprob: -22.875553131103516
    6. '=True' → logprob: -23.125553131103516
    7. 'Tr' → logprob: -24.000553131103516
    8. 'true' → logprob: -24.625553131103516
    9. 'TRUE' → logprob: -25.250553131103516
    10. '_true' → logprob: -26.250553131103516

Token 138: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0361349880695343
    2. '

' → logprob: -3.536134958267212
    3. '<|end|>' → logprob: -5.536135196685791
    4. 'def' → logprob: -6.661135196685791
    5. 'n' → logprob: -7.786135196685791
    6. 'newline' → logprob: -8.661134719848633
    7. '
' → logprob: -8.911134719848633
    8. '```' → logprob: -9.036134719848633
    9. '\n' → logprob: -9.036134719848633
    10. ' 
' → logprob: -10.036134719848633

Token 139: 'while' (ID: 7032)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02554863505065441
    2. 'n' → logprob: -4.275548458099365
    3. '
' → logprob: -4.775548458099365
    4. 'N' → logprob: -6.025548458099365
    5. '#' → logprob: -9.025548934936523
    6. '

' → logprob: -9.650548934936523
    7. 'import' → logprob: -9.775548934936523
    8. '```' → logprob: -9.775548934936523
    9. 'class' → logprob: -10.525548934936523
    10. '<|end|>' → logprob: -10.775548934936523

Token 140: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0009215848403982818
    2. 'True' → logprob: -7.000921726226807
    3. ' ' → logprob: -12.000921249389648
    4. '(True' → logprob: -12.875921249389648
    5. ' T' → logprob: -14.250921249389648
    6. '=True' → logprob: -15.500921249389648
    7. ' ' → logprob: -16.00092124938965
    8. ' input' → logprob: -16.00092124938965
    9. '1' → logprob: -16.12592124938965
    10. ' len' → logprob: -16.75092124938965

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.967624019831419e-05
    2. ':
' → logprob: -10.250060081481934
    3. ' :' → logprob: -10.750060081481934
    4. '():' → logprob: -13.750060081481934
    5. ':**' → logprob: -14.500060081481934
    6. ',' → logprob: -15.000060081481934
    7. ':def' → logprob: -15.625060081481934
    8. '):' → logprob: -15.875060081481934
    9. ':

' → logprob: -16.125059127807617
    10. ':s' → logprob: -16.750059127807617

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03218263387680054
    2. ' try' → logprob: -3.5321826934814453
    3. 'try' → logprob: -6.157182693481445
    4. ' n' → logprob: -8.657182693481445
    5. 'n' → logprob: -9.157182693481445
    6. '   ' → logprob: -11.782182693481445
    7. '	try' → logprob: -12.532182693481445
    8. ' line' → logprob: -12.532182693481445
    9. '```' → logprob: -12.532182693481445
    10. '    
' → logprob: -12.657182693481445

Token 143: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7216686010360718
    2. 'n' (adapté à ' n') → logprob: -1.3466686010360718
    3. ' try' → logprob: -2.0966687202453613
    4. ' line' → logprob: -2.3466687202453613
    5. 'try' → logprob: -4.596668720245361
    6. ' N' → logprob: -4.971668720245361
    7. '   ' → logprob: -5.096668720245361
    8. 'N' → logprob: -5.096668720245361
    9. 'line' → logprob: -6.721668720245361
    10. ' l' → logprob: -6.721668720245361

Token 144: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07013227045536041
    2. ' =' → logprob: -3.445132255554199
    3. '=' → logprob: -3.695132255554199
    4. ',m' → logprob: -4.570132255554199
    5. ',k' → logprob: -8.0701322555542
    6. ',s' → logprob: -9.4451322555542
    7. ',p' → logprob: -10.3201322555542
    8. ',n' → logprob: -10.5701322555542
    9. ',h' → logprob: -10.5701322555542
    10. ',b' → logprob: -11.0701322555542

Token 145: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1603551208972931
    2. 'int' → logprob: -1.9103550910949707
    3. ' input' → logprob: -9.160355567932129
    4. ' ' → logprob: -11.285355567932129
    5. 'input' → logprob: -11.410355567932129
    6. ' len' → logprob: -14.285355567932129
    7. '=int' → logprob: -14.660355567932129
    8. 'len' → logprob: -15.535355567932129
    9. '(int' → logprob: -15.785355567932129
    10. '	int' → logprob: -16.035354614257812

Token 146: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005751968361437321
    2. '(sys' → logprob: -5.505752086639404
    3. 'input' → logprob: -6.755752086639404
    4. '(' → logprob: -7.880752086639404
    5. '()' → logprob: -9.005751609802246
    6. 'sys' → logprob: -12.505751609802246
    7. ' input' → logprob: -12.880751609802246
    8. '=input' → logprob: -14.380751609802246
    9. ' (' → logprob: -15.755751609802246
    10. '(
' → logprob: -17.005752563476562

Token 147: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0067780157551169395
    2. '.readline' → logprob: -5.006778240203857
    3. '.' → logprob: -9.7567777633667
    4. '.argv' → logprob: -13.5067777633667
    5. 'stdin' → logprob: -13.8817777633667
    6. '.stdout' → logprob: -14.0067777633667
    7. '().' → logprob: -14.0067777633667
    8. ' .' → logprob: -15.7567777633667
    9. '(stdin' → logprob: -15.7567777633667
    10. '.input' → logprob: -15.8817777633667

Token 148: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.375000953674316
    3. ' readline' → logprob: -18.125
    4. '.stdin' → logprob: -19.75
    5. '.buffer' → logprob: -21.25
    6. '.readlines' → logprob: -21.875
    7. '.read' → logprob: -22.375
    8. ' .' → logprob: -23.25
    9. '```' → logprob: -23.75
    10. '.fetchone' → logprob: -25.0

Token 149: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0818491205573082
    2. '().' → logprob: -2.5818490982055664
    3. '()' → logprob: -5.831849098205566
    4. '())
' → logprob: -11.081849098205566
    5. ' ())' → logprob: -12.831849098205566
    6. '()
' → logprob: -13.331849098205566
    7. '(' → logprob: -13.831849098205566
    8. ')' → logprob: -14.706849098205566
    9. '())

' → logprob: -14.831849098205566
    10. '();)' → logprob: -15.581849098205566

Token 150: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15945939719676971
    2. '<|end|>' → logprob: -2.784459352493286
    3. 'if' → logprob: -2.909459352493286
    4. '   ' → logprob: -3.659459352493286
    5. ' ' → logprob: -5.909459590911865
    6. ',' → logprob: -6.909459590911865
    7. '<|end|>' → logprob: -7.409459590911865
    8. '    ' → logprob: -8.034459114074707
    9. 'If' → logprob: -9.034459114074707
    10. ')' → logprob: -9.034459114074707

Token 151: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07893385738134384
    2. ' if' → logprob: -2.5789339542388916
    3. '   ' → logprob: -10.453933715820312
    4. ' ' → logprob: -12.203933715820312
    5. '<|end|>' → logprob: -12.203933715820312
    6. '    ' → logprob: -12.828933715820312
    7. 'If' → logprob: -14.703933715820312
    8. ',' → logprob: -14.828933715820312
    9. '  ' → logprob: -14.953933715820312
    10. '	if' → logprob: -14.953933715820312

Token 152: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.000610690622124821
    2. 'n' → logprob: -7.750610828399658
    3. ' not' → logprob: -8.6256103515625
    4. 'not' → logprob: -15.5006103515625
    5. ' ' → logprob: -15.7506103515625
    6. '	n' → logprob: -16.6256103515625
    7. ' ' → logprob: -16.7506103515625
    8. 'n't' → logprob: -17.7506103515625
    9. ' н' → logprob: -19.0006103515625
    10. '=n' → logprob: -20.0006103515625

Token 153: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.038099437952041626
    2. '==' → logprob: -3.288099527359009
    3. ' <=' → logprob: -10.16309928894043
    4. '<=' → logprob: -11.78809928894043
    5. ' ' → logprob: -12.53809928894043
    6. '=' → logprob: -12.66309928894043
    7. ')' → logprob: -12.91309928894043
    8. ')==' → logprob: -14.41309928894043
    9. ' =' → logprob: -14.66309928894043
    10. '0' → logprob: -14.66309928894043

Token 154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1002068892121315
    2. ' ' → logprob: -2.3502068519592285
    3. ' -' → logprob: -16.72520637512207
    4. '  ' → logprob: -16.85020637512207
    5. ' ' → logprob: -16.85020637512207
    6. '-' → logprob: -17.35020637512207
    7. '   ' → logprob: -17.97520637512207
    8. '```' → logprob: -18.22520637512207
    9. '０' → logprob: -18.85020637512207
    10. '	' → logprob: -19.10020637512207

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023119196703191847
    2. ' ' → logprob: -8.37523078918457
    3. '-' → logprob: -15.00023078918457
    4. ' -' → logprob: -15.87523078918457
    5. '  ' → logprob: -16.87523078918457
    6. '   ' → logprob: -17.25023078918457
    7. '```' → logprob: -17.25023078918457
    8. ')' → logprob: -17.50023078918457
    9. '０' → logprob: -18.50023078918457
    10. '1' → logprob: -18.62523078918457

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011052416637539864
    2. ':
' → logprob: -4.51105260848999
    3. '   ' → logprob: -12.761052131652832
    4. ':return' → logprob: -13.886052131652832
    5. ' :' → logprob: -14.886052131652832
    6. '):' → logprob: -15.761052131652832
    7. ':
' → logprob: -16.51105308532715
    8. '):
' → logprob: -16.63605308532715
    9. ')' → logprob: -16.88605308532715
    10. '	break' → logprob: -17.38605308532715

Token 157: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3168523907661438
    2. ':' → logprob: -1.316852331161499
    3. '       ' → logprob: -5.941852569580078
    4. ':
' → logprob: -7.066852569580078
    5. '	break' → logprob: -10.316852569580078
    6. ' ' → logprob: -10.941852569580078
    7. '   ' → logprob: -11.441852569580078
    8. '  ' → logprob: -11.816852569580078
    9. ' break' → logprob: -11.941852569580078
    10. '	' → logprob: -12.066852569580078

Token 158: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.12737099826335907
    2. 'break' (adapté à ' break') → logprob: -2.127371072769165
    3. '	break' → logprob: -8.252370834350586
    4. '   ' → logprob: -8.627370834350586
    5. '
' → logprob: -13.627370834350586
    6. '       ' → logprob: -14.377370834350586
    7. '_break' → logprob: -14.877370834350586
    8. ' ' → logprob: -15.127370834350586
    9. '```' → logprob: -15.127370834350586
    10. 'b' → logprob: -15.627370834350586

Token 159: '
' (ID: 198)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.1826436519622803
    2. 'a' → logprob: -2.0576436519622803
    3. '   ' → logprob: -2.3076436519622803
    4. 'graph' → logprob: -2.3076436519622803
    5. ' edges' → logprob: -2.5576436519622803
    6. 'm' → logprob: -3.0576436519622803
    7. ' graph' → logprob: -3.4326436519622803
    8. 'c' → logprob: -3.5576436519622803
    9. 'u' → logprob: -3.5576436519622803
    10. 's' → logprob: -4.057643890380859

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14229191839694977
    2. 'edges' → logprob: -2.767292022705078
    3. 'graph' → logprob: -3.767292022705078
    4. '    
' → logprob: -3.767292022705078
    5. ' edges' → logprob: -5.267292022705078
    6. ' graph' → logprob: -5.892292022705078
    7. 's' → logprob: -6.017292022705078
    8. 'parent' → logprob: -6.017292022705078
    9. 'count' → logprob: -7.017292022705078
    10. 'a' → logprob: -7.017292022705078

Token 161: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.3709914684295654
    2. ' graph' → logprob: -1.9959914684295654
    3. 'edges' (adapté à ' edges') → logprob: -1.9959914684295654
    4. ' parent' → logprob: -2.1209914684295654
    5. 'parent' → logprob: -3.1209914684295654
    6. 'graph' → logprob: -3.1209914684295654
    7. '   ' → logprob: -3.3709914684295654
    8. ' city' → logprob: -4.7459917068481445
    9. 'a' → logprob: -4.7459917068481445
    10. ' a' → logprob: -4.8709917068481445

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018230248242616653
    2. '=' → logprob: -4.018230438232422
    3. '=[]' → logprob: -9.518230438232422
    4. '[]' → logprob: -13.018230438232422
    5. 's' → logprob: -13.893230438232422
    6. ')' → logprob: -13.893230438232422
    7. ',' → logprob: -14.018230438232422
    8. '[' → logprob: -14.893230438232422
    9. ' ' → logprob: -15.393230438232422
    10. '_' → logprob: -15.518230438232422

Token 163: ' {}
' (ID: 11421)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004643722902983427
    2. '[' → logprob: -5.50464391708374
    3. ' []' → logprob: -7.62964391708374
    4. '[]
' → logprob: -10.379643440246582
    5. '[n' → logprob: -11.004643440246582
    6. '[int' → logprob: -11.629643440246582
    7. '[list' → logprob: -12.129643440246582
    8. '[len' → logprob: -12.879643440246582
    9. '{}' → logprob: -13.004643440246582
    10. '[]}' → logprob: -13.504643440246582

Token 164: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8807734251022339
    2. '
' → logprob: -1.3807734251022339
    3. '   ' → logprob: -1.5057734251022339
    4. ' for' → logprob: -2.8807735443115234
    5. '    
' → logprob: -3.5057735443115234
    6. '' → logprob: -4.630773544311523
    7. ' ' → logprob: -5.755773544311523
    8. '\n' → logprob: -5.755773544311523
    9. ' 
' → logprob: -5.755773544311523
    10. '  
' → logprob: -6.755773544311523

Token 165: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21054239571094513
    2. ' for' → logprob: -1.7105424404144287
    3. 'nodes' → logprob: -5.83554220199585
    4. 'total' → logprob: -7.08554220199585
    5. ' nodes' → logprob: -7.21054220199585
    6. 'result' → logprob: -7.33554220199585
    7. 'ans' → logprob: -7.96054220199585
    8. 'vertices' → logprob: -8.085542678833008
    9. 'node' → logprob: -8.460542678833008
    10. 'answer' → logprob: -8.460542678833008

Token 166: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03818826004862785
    2. '_i' → logprob: -3.2881882190704346
    3. ' _' → logprob: -9.163187980651855
    4. '_node' → logprob: -11.038187980651855
    5. ' i' → logprob: -11.163187980651855
    6. 'i' → logprob: -11.788187980651855
    7. '_nodes' → logprob: -13.038187980651855
    8. '_x' → logprob: -15.163187980651855
    9. '_a' → logprob: -15.538187980651855
    10. '_v' → logprob: -15.538187980651855

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003741887165233493
    2. 'in' → logprob: -5.62874174118042
    3. ' ' → logprob: -9.378742218017578
    4. '_' → logprob: -10.253742218017578
    5. 'range' → logprob: -11.503742218017578
    6. 'n' → logprob: -12.503742218017578
    7. ' _' → logprob: -13.128742218017578
    8. ' i' → logprob: -13.503742218017578
    9. ',' → logprob: -13.628742218017578
    10. ' range' → logprob: -14.628742218017578

Token 168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020958632230759
    2. ' range' → logprob: -2.3502094745635986
    3. ' ' → logprob: -13.85020923614502
    4. '	range' → logprob: -13.85020923614502
    5. 'rang' → logprob: -14.85020923614502
    6. 'r' → logprob: -15.85020923614502
    7. '(range' → logprob: -15.85020923614502
    8. '  ' → logprob: -16.225210189819336
    9. '   ' → logprob: -16.475210189819336
    10. 'ran' → logprob: -17.100210189819336

Token 169: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011050059460103512
    2. '(' → logprob: -4.511050224304199
    3. 'n' → logprob: -13.7610502243042
    4. '((' → logprob: -15.2610502243042
    5. '(
' → logprob: -15.3860502243042
    6. '(N' → logprob: -15.5110502243042
    7. ' (' → logprob: -15.5110502243042
    8. '(m' → logprob: -16.136049270629883
    9. '1' → logprob: -16.761049270629883
    10. ' n' → logprob: -17.011049270629883

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004107965622097254
    2. '+' → logprob: -6.50410795211792
    3. ' ):' → logprob: -6.75410795211792
    4. '):
' → logprob: -7.37910795211792
    5. '-' → logprob: -7.50410795211792
    6. ')' → logprob: -9.254108428955078
    7. '*' → logprob: -9.754108428955078
    8. ' -' → logprob: -10.254108428955078
    9. ' +' → logprob: -10.504108428955078
    10. '   ' → logprob: -11.004108428955078

Token 171: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028203707188367844
    2. ' ' → logprob: -4.77820348739624
    3. '    ' → logprob: -5.27820348739624
    4. ' edges' → logprob: -5.77820348739624
    5. ' line' → logprob: -6.40320348739624
    6. ',' → logprob: -6.40320348739624
    7. ' s' → logprob: -6.52820348739624
    8. '       ' → logprob: -6.52820348739624
    9. '   ' → logprob: -7.40320348739624
    10. ' lines' → logprob: -7.65320348739624

Token 172: ' b' (ID: 287)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.72133868932724
    2. 'line' → logprob: -1.9713387489318848
    3. '   ' → logprob: -2.4713387489318848
    4. 'u' → logprob: -2.7213387489318848
    5. ' u' → logprob: -3.2213387489318848
    6. 's' → logprob: -3.8463387489318848
    7. 'a' → logprob: -3.8463387489318848
    8. ' s' → logprob: -3.8463387489318848
    9. ' parts' → logprob: -3.9713387489318848
    10. ' data' → logprob: -4.221338748931885

Token 173: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37229523062705994
    2. 'r' → logprob: -1.8722952604293823
    3. ',' → logprob: -2.4972951412200928
    4. '=' → logprob: -3.2472951412200928
    5. 'ook' → logprob: -5.122295379638672
    6. 'oss' → logprob: -5.747295379638672
    7. 'ooks' → logprob: -5.997295379638672
    8. 'ikes' → logprob: -5.997295379638672
    9. '=input' → logprob: -6.122295379638672
    10. 'y' → logprob: -6.372295379638672

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9701969623565674
    2. 'r' → logprob: -1.0951969623565674
    3. ' =' → logprob: -1.5951969623565674
    4. '=' → logprob: -3.5951969623565674
    5. '   ' → logprob: -4.845196723937988
    6. 'ox' → logprob: -4.845196723937988
    7. 'b' → logprob: -5.220196723937988
    8. 'y' → logprob: -5.845196723937988
    9. ',b' → logprob: -5.845196723937988
    10. ' ,' → logprob: -6.095196723937988

Token 175: ' f' (ID: 285)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020394260063767433
    2. ' b' → logprob: -4.645394325256348
    3. '*' → logprob: -5.520394325256348
    4. '*b' → logprob: -5.645394325256348
    5. 'e' → logprob: -7.145394325256348
    6. 's' → logprob: -7.770394325256348
    7. 'a' → logprob: -7.770394325256348
    8. ' *' → logprob: -8.770394325256348
    9. '_,' → logprob: -8.770394325256348
    10. '=' → logprob: -8.895394325256348

Token 176: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3449813425540924
    2. 'riend' → logprob: -2.2199814319610596
    3. 'rom' → logprob: -2.9699814319610596
    4. ' =' → logprob: -2.9699814319610596
    5. 'riends' → logprob: -4.4699811935424805
    6. '0' → logprob: -4.5949811935424805
    7. '=' → logprob: -4.7199811935424805
    8. 'loor' → logprob: -5.0949811935424805
    9. 'amily' → logprob: -5.3449811935424805
    10. 'r' → logprob: -5.3449811935424805

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046812754124403
    2. '=' → logprob: -3.6718127727508545
    3. ' =' → logprob: -3.9218127727508545
    4. ' ,' → logprob: -8.671813011169434
    5. '0' → logprob: -9.421813011169434
    6. 'requency' → logprob: -10.296813011169434
    7. '   ' → logprob: -10.796813011169434
    8. ' ' → logprob: -10.921813011169434
    9. 'loor' → logprob: -11.296813011169434
    10. ',f' → logprob: -11.296813011169434

Token 178: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2237655520439148
    2. 't' → logprob: -2.8487656116485596
    3. 'f' → logprob: -3.2237656116485596
    4. 'c' → logprob: -3.8487656116485596
    5. 's' → logprob: -3.8487656116485596
    6. 'r' → logprob: -4.7237653732299805
    7. 'm' → logprob: -4.9737653732299805
    8. 'd' → logprob: -4.9737653732299805
    9. ' b' → logprob: -4.9737653732299805
    10. ' =' → logprob: -5.2237653732299805

Token 179: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4358622133731842
    2. '1' → logprob: -1.1858621835708618
    3. ',' → logprob: -3.0608623027801514
    4. 'irst' → logprob: -8.18586254119873
    5. 'i' → logprob: -8.81086254119873
    6. ',f' → logprob: -8.93586254119873
    7. 'f' → logprob: -9.06086254119873
    8. ' ,' → logprob: -10.31086254119873
    9. 'r' → logprob: -10.31086254119873
    10. 'b' → logprob: -10.99836254119873

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002541872672736645
    2. '=' → logprob: -8.87525463104248
    3. ' ,' → logprob: -10.00025463104248
    4. '0' → logprob: -10.12525463104248
    5. '1' → logprob: -11.37525463104248
    6. ' =' → logprob: -12.12525463104248
    7. '<|end|>' → logprob: -12.37525463104248
    8. ',f' → logprob: -12.50025463104248
    9. 'b' → logprob: -14.50025463104248
    10. ' ' → logprob: -14.62525463104248

Token 181: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14268961548805237
    2. ' f' → logprob: -2.0176897048950195
    3. ' ' → logprob: -11.76768970489502
    4. '   ' → logprob: -13.26768970489502
    5. 's' → logprob: -13.89268970489502
    6. '<|end|>' → logprob: -13.89268970489502
    7. '    ' → logprob: -14.39268970489502
    8. '  ' → logprob: -14.51768970489502
    9. ' s' → logprob: -15.14268970489502
    10. '...' → logprob: -15.26768970489502

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0242004431784153
    2. '0' → logprob: -3.774200439453125
    3. ',' → logprob: -7.399200439453125
    4. '=' → logprob: -8.649200439453125
    5. ' =' → logprob: -9.524200439453125
    6. ')' → logprob: -10.524200439453125
    7. '<|end|>' → logprob: -10.649200439453125
    8. '[' → logprob: -12.211700439453125
    9. '_' → logprob: -12.586700439453125
    10. '<|end|>' → logprob: -12.649200439453125

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2040203958749771
    2. ' =' → logprob: -1.704020380973816
    3. ',' → logprob: -5.9540205001831055
    4. ' ' → logprob: -13.079020500183105
    5. '=sys' → logprob: -13.329020500183105
    6. '=input' → logprob: -13.704020500183105
    7. ' ,' → logprob: -13.704020500183105
    8. ')' → logprob: -13.954020500183105
    9. '=line' → logprob: -14.829020500183105
    10. ')=' → logprob: -14.829020500183105

Token 184: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.35402342677116394
    2. 'map' → logprob: -1.2290234565734863
    3. ' sys' → logprob: -5.354023456573486
    4. 'sys' → logprob: -7.104023456573486
    5. ' list' → logprob: -12.604022979736328
    6. ' ' → logprob: -12.854022979736328
    7. 'list' → logprob: -13.104022979736328
    8. '	map' → logprob: -13.479022979736328
    9. '(map' → logprob: -13.854022979736328
    10. '[' → logprob: -14.229022979736328

Token 185: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014248794177547097
    2. '(' → logprob: -6.626424789428711
    3. '(str' → logprob: -9.501424789428711
    4. '(lambda' → logprob: -10.876424789428711
    5. 'int' → logprob: -13.501424789428711
    6. '=int' → logprob: -14.376424789428711
    7. '(list' → logprob: -14.501424789428711
    8. '<int' → logprob: -14.501424789428711
    9. ',int' → logprob: -14.626424789428711
    10. '(
' → logprob: -14.751424789428711

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018064413452520967
    2. '(sys' → logprob: -6.376806259155273
    3. 'sys' → logprob: -9.501806259155273
    4. '=sys' → logprob: -11.126806259155273
    5. ' sys' → logprob: -11.626806259155273
    6. ' ,' → logprob: -13.001806259155273
    7. '	sys' → logprob: -13.126806259155273
    8. ',input' → logprob: -14.126806259155273
    9. ',System' → logprob: -14.501806259155273
    10. '(' → logprob: -16.126806259155273

Token 187: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.018151817843317986
    2. ' sys' → logprob: -4.018151760101318
    3. '(sys' → logprob: -14.268152236938477
    4. '	sys' → logprob: -14.518152236938477
    5. '=sys' → logprob: -14.518152236938477
    6. ')' → logprob: -15.518152236938477
    7. 'input' → logprob: -16.518152236938477
    8. ' ' → logprob: -17.893152236938477
    9. '.sys' → logprob: -18.768152236938477
    10. 'system' → logprob: -18.893152236938477

Token 188: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.451116051815916e-05
    2. 'stdin' → logprob: -10.750024795532227
    3. '.readline' → logprob: -12.875024795532227
    4. '.stdout' → logprob: -15.500024795532227
    5. '.argv' → logprob: -16.000024795532227
    6. '.std' → logprob: -16.750024795532227
    7. 'sys' → logprob: -16.875024795532227
    8. '.' → logprob: -17.500024795532227
    9. '(stdin' → logprob: -17.500024795532227
    10. '```' → logprob: -18.000024795532227

Token 189: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.750000953674316
    3. '.stdin' → logprob: -15.375000953674316
    4. '.readlines' → logprob: -19.0
    5. '().' → logprob: -20.875
    6. ' readline' → logprob: -20.875
    7. ' .' → logprob: -21.25
    8. '```' → logprob: -21.375
    9. ')' → logprob: -22.25
    10. '.read' → logprob: -22.375

Token 190: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.13388703338569e-06
    2. '()' → logprob: -11.625009536743164
    3. ' ().' → logprob: -16.000009536743164
    4. '(' → logprob: -16.875009536743164
    5. '.readline' → logprob: -18.250009536743164
    6. '()
' → logprob: -18.750009536743164
    7. '.strip' → logprob: -20.250009536743164
    8. '   ' → logprob: -21.375009536743164
    9. '())' → logprob: -21.375009536743164
    10. ' ' → logprob: -21.500009536743164

Token 191: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20187431573867798
    2. 'strip' → logprob: -1.7018742561340332
    3. 'rstrip' → logprob: -7.701874256134033
    4. ' split' → logprob: -11.826874732971191
    5. ' strip' → logprob: -13.951874732971191
    6. '(split' → logprob: -14.451874732971191
    7. 'read' → logprob: -16.326873779296875
    8. ')' → logprob: -16.326873779296875
    9. 'spl' → logprob: -16.451873779296875
    10. 'plit' → logprob: -17.951873779296875

Token 192: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.18217313289642334
    2. ')' → logprob: -1.8071731328964233
    3. '()' → logprob: -6.182173252105713
    4. '())
' → logprob: -8.432172775268555
    5. '(' → logprob: -9.182172775268555
    6. ')
' → logprob: -11.057172775268555
    7. '))' → logprob: -11.932172775268555
    8. '(),' → logprob: -12.807172775268555
    9. '()))' → logprob: -12.932172775268555
    10. '()
' → logprob: -12.932172775268555

Token 193: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06868579238653183
    2. '    
' → logprob: -3.56868577003479
    3. '
' → logprob: -3.81868577003479
    4. ')' → logprob: -5.693686008453369
    5. '    ' → logprob: -5.943686008453369
    6. '<|end|>' → logprob: -6.068686008453369
    7. ' edges' → logprob: -6.693686008453369
    8. ' 
' → logprob: -6.818686008453369
    9. ',' → logprob: -6.943686008453369
    10. '  
' → logprob: -7.068686008453369

Token 194: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7598952054977417
    2. ' edges' → logprob: -1.3848952054977417
    3. ' key' → logprob: -1.5098952054977417
    4. ' if' → logprob: -3.8848953247070312
    5. 'edges' → logprob: -4.384895324707031
    6. ' u' → logprob: -4.634895324707031
    7. ' for' → logprob: -5.509895324707031
    8. 'u' → logprob: -6.134895324707031
    9. '       ' → logprob: -6.134895324707031
    10. 'key' → logprob: -6.509895324707031

Token 195: ' Add' (ID: 4063)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.11004721373319626
    2. ' u' → logprob: -3.1100471019744873
    3. 'key' → logprob: -3.9850471019744873
    4. 'u' → logprob: -4.485047340393066
    5. ' node' → logprob: -5.360047340393066
    6. ' idx' → logprob: -5.360047340393066
    7. ' for' → logprob: -6.360047340393066
    8. '#' → logprob: -6.485047340393066
    9. ' id' → logprob: -6.735047340393066
    10. ' #' → logprob: -6.735047340393066

Token 196: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4522764980792999
    2. ' key' → logprob: -1.8272764682769775
    3. ' edge' → logprob: -2.2022764682769775
    4. '_key' → logprob: -3.9522764682769775
    5. ' (' → logprob: -4.702276706695557
    6. ' a' → logprob: -4.827276706695557
    7. '_edge' → logprob: -4.827276706695557
    8. '   ' → logprob: -4.952276706695557
    9. ' if' → logprob: -5.202276706695557
    10. '_edges' → logprob: -5.202276706695557

Token 197: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10475540161132812
    2. '
' → logprob: -2.979755401611328
    3. '<|end|>' → logprob: -3.229755401611328
    4. ' edges' → logprob: -5.604755401611328
    5. 'edges' → logprob: -6.479755401611328
    6. '    
' → logprob: -6.854755401611328
    7. ' for' → logprob: -7.479755401611328
    8. ',' → logprob: -7.729755401611328
    9. ')' → logprob: -7.854755401611328
    10. '<|end|>' → logprob: -8.229755401611328

Token 198: ' i' (ID: 575)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3542617857456207
    2. '(b' → logprob: -1.2292617559432983
    3. '(f' → logprob: -6.104261875152588
    4. '(i' → logprob: -6.729261875152588
    5. ' b' → logprob: -7.104261875152588
    6. 'b' → logprob: -7.229261875152588
    7. '(' → logprob: -7.354261875152588
    8. ' ' → logprob: -10.35426139831543
    9. ' f' → logprob: -10.72926139831543
    10. 'f' → logprob: -10.97926139831543

Token 199: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24000592529773712
    2. ',' → logprob: -1.9900059700012207
    3. ' ,' → logprob: -3.3650059700012207
    4. 'to' → logprob: -4.365005970001221
    5. '   ' → logprob: -5.240005970001221
    6. ' for' → logprob: -5.615005970001221
    7. '[' → logprob: -5.865005970001221
    8. ')' → logprob: -5.990005970001221
    9. ':' → logprob: -6.115005970001221
    10. ' =' → logprob: -6.740005970001221

Token 200: ' b' (ID: 287)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8066638708114624
    2. ' (' → logprob: -1.0566638708114624
    3. '(b' → logprob: -2.681663990020752
    4. 'b' → logprob: -3.056663990020752
    5. '(' → logprob: -3.556663990020752
    6. 'i' → logprob: -3.806663990020752
    7. ' i' → logprob: -4.056663990020752
    8. ' b' → logprob: -5.056663990020752
    9. '0' → logprob: -5.431663990020752
    10. '(n' → logprob: -5.556663990020752

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004265044699423015
    2. '1' → logprob: -8.500426292419434
    3. ',' → logprob: -8.750426292419434
    4. ' ,' → logprob: -11.500426292419434
    5. ' (' → logprob: -11.625426292419434
    6. ' ' → logprob: -11.875426292419434
    7. '(' → logprob: -11.875426292419434
    8. '
' → logprob: -12.250426292419434
    9. 'f' → logprob: -12.375426292419434
    10. '[' → logprob: -13.375426292419434

Token 202: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10160255432128906
    2. ',f' → logprob: -3.101602554321289
    3. '0' → logprob: -4.476602554321289
    4. '*' → logprob: -4.601602554321289
    5. ',
' → logprob: -5.476602554321289
    6. ' ,' → logprob: -5.476602554321289
    7. ' and' → logprob: -5.851602554321289
    8. ',b' → logprob: -6.101602554321289
    9. 'f' → logprob: -6.101602554321289
    10. '+' → logprob: -6.226602554321289

Token 203: ' b' (ID: 287)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.317230224609375
    2. 'i' → logprob: -1.442230224609375
    3. ' f' → logprob: -2.067230224609375
    4. 'b' → logprob: -2.067230224609375
    5. ' b' → logprob: -2.567230224609375
    6. 'f' → logprob: -2.692230224609375
    7. ' (' → logprob: -2.942230224609375
    8. '(i' → logprob: -4.567230224609375
    9. '(' → logprob: -4.692230224609375
    10. ''' → logprob: -4.692230224609375

Token 204: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1154852882027626
    2. '1' → logprob: -2.365485191345215
    3. 'i' → logprob: -4.615485191345215
    4. 'f' → logprob: -6.490485191345215
    5. '[i' → logprob: -7.365485191345215
    6. ' ' → logprob: -7.740485191345215
    7. '(i' → logprob: -7.740485191345215
    8. '
' → logprob: -8.240485191345215
    9. ')' → logprob: -8.365485191345215
    10. '    ' → logprob: -8.615485191345215

Token 205: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01933722384274006
    2. '
' → logprob: -4.269337177276611
    3. '<|end|>' → logprob: -6.019337177276611
    4. ',' → logprob: -7.269337177276611
    5. '    
' → logprob: -7.519337177276611
    6. ' for' → logprob: -7.644337177276611
    7. ')' → logprob: -8.26933765411377
    8. ' edges' → logprob: -8.51933765411377
    9. 'edges' → logprob: -9.39433765411377
    10. '<|end|>' → logprob: -9.64433765411377

Token 206: ' store' (ID: 4897)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7019606232643127
    2. ' and' → logprob: -1.826960563659668
    3. '    ' → logprob: -2.701960563659668
    4. '<|end|>' → logprob: -2.826960563659668
    5. ' with' → logprob: -2.951960563659668
    6. 'and' → logprob: -2.951960563659668
    7. ' ' → logprob: -3.951960563659668
    8. '
' → logprob: -4.451960563659668
    9. '...' → logprob: -4.951960563659668
    10. ' edges' → logprob: -5.076960563659668

Token 207: ' minimal' (ID: 19957)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.9808958768844604
    2. ' (' → logprob: -1.6058958768844604
    3. 'edges' → logprob: -1.8558958768844604
    4. '(i' → logprob: -2.48089599609375
    5. ' i' → logprob: -3.10589599609375
    6. '
' → logprob: -3.73089599609375
    7. '(b' → logprob: -4.10589599609375
    8. '   ' → logprob: -4.10589599609375
    9. 'i' → logprob: -4.48089599609375
    10. '(' → logprob: -4.73089599609375

Token 208: ' cost' (ID: 3097)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6198194622993469
    2. '_edges' → logprob: -2.369819402694702
    3. 'edges' → logprob: -3.119819402694702
    4. ' distances' → logprob: -3.244819402694702
    5. ' ' → logprob: -3.494819402694702
    6. ')' → logprob: -3.744819402694702
    7. '_' → logprob: -3.744819402694702
    8. ' cost' → logprob: -3.869819402694702
    9. 'distance' → logprob: -4.119819641113281
    10. 'cost' → logprob: -4.244819641113281

Token 209: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7401602864265442
    2. '
' → logprob: -1.4901602268218994
    3. '<|end|>' → logprob: -2.1151602268218994
    4. '    
' → logprob: -3.1151602268218994
    5. '    ' → logprob: -3.2401602268218994
    6. ' ' → logprob: -3.3651602268218994
    7. ',' → logprob: -4.3651604652404785
    8. ' 
' → logprob: -4.6151604652404785
    9. '  
' → logprob: -5.1151604652404785
    10. '  ' → logprob: -5.1151604652404785

Token 210: ' each' (ID: 2454)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.481472373008728
    2. ' (' → logprob: -1.981472373008728
    3. '(b' → logprob: -2.3564724922180176
    4. 'each' → logprob: -2.9814724922180176
    5. 'the' → logprob: -3.6064724922180176
    6. 'edges' → logprob: -4.106472492218018
    7. ' each' → logprob: -4.606472492218018
    8. 'both' → logprob: -4.731472492218018
    9. ' edges' → logprob: -4.856472492218018
    10. ' the' → logprob: -5.356472492218018

Token 211: ' und' (ID: 844)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7897562980651855
    2. '<|end|>' → logprob: -1.5397562980651855
    3. '   ' → logprob: -1.6647562980651855
    4. '    
' → logprob: -2.7897562980651855
    5. '  
' → logprob: -3.9147562980651855
    6. ' 
' → logprob: -4.0397562980651855
    7. ' ' → logprob: -4.5397562980651855
    8. '   
' → logprob: -5.4147562980651855
    9. ')' → logprob: -5.5397562980651855
    10. ',' → logprob: -5.6647562980651855

Token 212: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.029846295714378357
    2. 'er' → logprob: -3.77984619140625
    3. 'efined' → logprob: -6.27984619140625
    4. 'ged' → logprob: -6.90484619140625
    5. 'ers' → logprob: -7.27984619140625
    6. 'ges' → logprob: -7.52984619140625
    7. 'uplic' → logprob: -7.52984619140625
    8. 'es' → logprob: -7.77984619140625
    9. '_edges' → logprob: -8.02984619140625
    10. '   ' → logprob: -8.27984619140625

Token 213: ' edge' (ID: 11165)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.28373512625694275
    2. ' edge' → logprob: -2.2837350368499756
    3. 'edges' → logprob: -2.5337350368499756
    4. '_edges' → logprob: -3.1587350368499756
    5. 'edge' → logprob: -4.533735275268555
    6. ' ' → logprob: -5.658735275268555
    7. '_edge' → logprob: -5.783735275268555
    8. '   ' → logprob: -6.658735275268555
    9. '_' → logprob: -7.408735275268555
    10. ')' → logprob: -7.533735275268555

Token 214: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5615342259407043
    2. '
' → logprob: -0.9365342259407043
    3. '    
' → logprob: -4.186534404754639
    4. '<|end|>' → logprob: -4.436534404754639
    5. ' 
' → logprob: -6.186534404754639
    6. ' edges' → logprob: -6.436534404754639
    7. '    ' → logprob: -7.061534404754639
    8. '  
' → logprob: -7.061534404754639
    9. ' for' → logprob: -7.186534404754639
    10. '       ' → logprob: -7.186534404754639

Token 215: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015457728877663612
    2. '
' → logprob: -4.890457630157471
    3. ' for' → logprob: -6.140457630157471
    4. '    
' → logprob: -6.390457630157471
    5. '<|end|>' → logprob: -6.890457630157471
    6. ' edges' → logprob: -7.140457630157471
    7. 'edges' → logprob: -7.265457630157471
    8. 'for' → logprob: -8.015458106994629
    9. ',' → logprob: -8.015458106994629
    10. '  
' → logprob: -8.890458106994629

Token 216: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1788333654403687
    2. ' key' → logprob: -1.4288333654403687
    3. '   ' → logprob: -1.5538333654403687
    4. ' u' → logprob: -2.303833484649658
    5. 'for' → logprob: -3.053833484649658
    6. 'u' → logprob: -3.178833484649658
    7. 'key' → logprob: -4.678833484649658
    8. ' if' → logprob: -4.678833484649658
    9. ' cost' → logprob: -4.803833484649658
    10. '    
' → logprob: -5.553833484649658

Token 217: ' Because' (ID: 13602)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.6106728315353394
    2. '   ' → logprob: -0.9856728315353394
    3. ' for' → logprob: -3.485672950744629
    4. 'key' → logprob: -3.985672950744629
    5. ' u' → logprob: -4.360672950744629
    6. 'for' → logprob: -4.985672950744629
    7. 'u' → logprob: -5.860672950744629
    8. '    
' → logprob: -5.985672950744629
    9. ' edges' → logprob: -6.610672950744629
    10. '    ' → logprob: -6.860672950744629

Token 218: ' pairs' (ID: 24702)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2233467102050781
    2. 'b' → logprob: -1.5983467102050781
    3. '(i' → logprob: -1.8483467102050781
    4. '(b' → logprob: -1.9733467102050781
    5. ' i' → logprob: -2.848346710205078
    6. ' b' → logprob: -3.473346710205078
    7. 'i' → logprob: -4.098346710205078
    8. ' the' → logprob: -4.223346710205078
    9. ' there' → logprob: -4.598346710205078
    10. '(' → logprob: -4.598346710205078

Token 219: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3629782199859619
    2. ',' → logprob: -3.237978219985962
    3. ' (' → logprob: -3.237978219985962
    4. '   ' → logprob: -3.362978219985962
    5. ' ' → logprob: -3.362978219985962
    6. '<|end|>' → logprob: -3.612978219985962
    7. ' ,' → logprob: -3.987978219985962
    8. ' edges' → logprob: -4.112977981567383
    9. ' between' → logprob: -4.612977981567383
    10. ')' → logprob: -4.862977981567383

Token 220: ' bid' (ID: 16023)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.8132994174957275
    2. '(' → logprob: -1.9382994174957275
    3. '(i' → logprob: -2.5632994174957275
    4. 'und' → logprob: -2.8132994174957275
    5. 'b' → logprob: -2.9382994174957275
    6. '0' → logprob: -3.3132994174957275
    7. 'coordinates' → logprob: -3.3132994174957275
    8. ' und' → logprob: -3.3132994174957275
    9. 'neighbors' → logprob: -3.4382994174957275
    10. ' (' → logprob: -3.5632994174957275

Token 221: 'irectional' (ID: 86044)
  Prédit: 'irectional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irectional' → logprob: -0.0007767542265355587
    2. 'irected' → logprob: -7.250776767730713
    3. 'irect' → logprob: -10.125776290893555
    4. 'irection' → logprob: -10.750776290893555
    5. 'rection' → logprob: -12.625776290893555
    6. 'er' → logprob: -15.000776290893555
    7. 'ection' → logprob: -15.375776290893555
    8. ')' → logprob: -15.375776290893555
    9. 'i' → logprob: -15.500776290893555
    10. 'ir' → logprob: -15.625776290893555

Token 222: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5775968432426453
    2. '
' → logprob: -0.9525968432426453
    3. '    
' → logprob: -3.95259690284729
    4. '<|end|>' → logprob: -4.577596664428711
    5. ' 
' → logprob: -5.452596664428711
    6. ' edges' → logprob: -5.577596664428711
    7. ',' → logprob: -6.077596664428711
    8. 'edges' → logprob: -6.202596664428711
    9. '<|end|>' → logprob: -6.327596664428711
    10. '  
' → logprob: -6.452596664428711

Token 223: ' unique' (ID: 5746)
  Prédit: ' und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' und' → logprob: -2.1624767780303955
    2. ' nodes' → logprob: -2.2874767780303955
    3. ' the' → logprob: -2.5374767780303955
    4. 'und' → logprob: -2.6624767780303955
    5. ' there' → logprob: -2.7874767780303955
    6. 'the' → logprob: -2.7874767780303955
    7. ' can' → logprob: -3.2874767780303955
    8. '   ' → logprob: -3.2874767780303955
    9. 'nodes' → logprob: -3.2874767780303955
    10. '(' → logprob: -4.037476539611816

Token 224: ' applied' (ID: 13335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11057396978139877
    2. '
' → logprob: -3.3605740070343018
    3. '    
' → logprob: -3.6105740070343018
    4. ',' → logprob: -4.735573768615723
    5. '<|end|>' → logprob: -4.985573768615723
    6. ' ' → logprob: -5.110573768615723
    7. ' 
' → logprob: -5.485573768615723
    8. '       ' → logprob: -5.610573768615723
    9. ')' → logprob: -5.985573768615723
    10. '    ' → logprob: -6.110573768615723

Token 225: ' twice' (ID: 18370)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28405508399009705
    2. '    ' → logprob: -3.03405499458313
    3. '    
' → logprob: -3.03405499458313
    4. ' ' → logprob: -3.28405499458313
    5. '
' → logprob: -3.78405499458313
    6. ',' → logprob: -4.409055233001709
    7. '<|end|>' → logprob: -4.409055233001709
    8. ')' → logprob: -4.409055233001709
    9. ' for' → logprob: -4.909055233001709
    10. ':' → logprob: -5.034055233001709

Token 226: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.735613226890564
    2. '<|end|>' → logprob: -1.610613226890564
    3. '
' → logprob: -1.985613226890564
    4. ' ' → logprob: -2.6106133460998535
    5. '    
' → logprob: -2.9856133460998535
    6. '    ' → logprob: -3.9856133460998535
    7. ' 
' → logprob: -4.6106133460998535
    8. ',' → logprob: -4.9856133460998535
    9. '<|end|>' → logprob: -5.6106133460998535
    10. ')' → logprob: -5.6106133460998535

Token 227: ' we' (ID: 581)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.25842323899269104
    2. ' for' → logprob: -2.133423328399658
    3. '   ' → logprob: -2.633423328399658
    4. '       ' → logprob: -5.133423328399658
    5. 'key' → logprob: -5.133423328399658
    6. '    ' → logprob: -5.383423328399658
    7. ' u' → logprob: -5.383423328399658
    8. ' edges' → logprob: -5.633423328399658
    9. 'for' → logprob: -6.008423328399658
    10. ' if' → logprob: -6.383423328399658

Token 228: ' consider' (ID: 3331)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.28269967436790466
    2. 'continue' → logprob: -1.907699704170227
    3. '   ' → logprob: -2.9076995849609375
    4. ' need' → logprob: -4.2826995849609375
    5. '       ' → logprob: -5.0326995849609375
    6. ' use' → logprob: -5.1576995849609375
    7. ' can' → logprob: -5.5326995849609375
    8. ' should' → logprob: -5.5326995849609375
    9. ' add' → logprob: -6.6576995849609375
    10. 'need' → logprob: -7.0326995849609375

Token 229: ' one' (ID: 1001)
  Prédit: ' both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' both' → logprob: -1.1137930154800415
    2. '   ' → logprob: -1.8637930154800415
    3. 'both' → logprob: -2.113792896270752
    4. ' cost' → logprob: -2.488792896270752
    5. ' edges' → logprob: -2.738792896270752
    6. ' the' → logprob: -2.863792896270752
    7. 'b' → logprob: -3.238792896270752
    8. 'cost' → logprob: -3.363792896270752
    9. '    
' → logprob: -3.863792896270752
    10. 'the' → logprob: -3.988792896270752

Token 230: ' edge' (ID: 11165)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.451892614364624
    2. ')' → logprob: -2.076892614364624
    3. ' ' → logprob: -2.326892614364624
    4. '   ' → logprob: -2.451892614364624
    5. ' for' → logprob: -2.701892614364624
    6. '-' → logprob: -3.076892614364624
    7. '    
' → logprob: -3.201892614364624
    8. 'edge' → logprob: -3.201892614364624
    9. ' if' → logprob: -3.326892614364624
    10. 'for' → logprob: -3.576892614364624

Token 231: ' per' (ID: 777)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052523087710142136
    2. '<|end|>' → logprob: -3.677523136138916
    3. '<|end|>' → logprob: -5.427523136138916
    4. ',' → logprob: -5.677523136138916
    5. ' ' → logprob: -6.052523136138916
    6. ')' → logprob: -6.052523136138916
    7. '
' → logprob: -6.302523136138916
    8. '    
' → logprob: -6.302523136138916
    9. '       ' → logprob: -6.677523136138916
    10. ' =' → logprob: -6.677523136138916

Token 232: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.7736380696296692
    2. 'pair' → logprob: -1.0236380100250244
    3. ' edge' → logprob: -3.3986380100250244
    4. 'fro' → logprob: -3.5236380100250244
    5. ' key' → logprob: -3.8986380100250244
    6. 'edge' → logprob: -4.0236382484436035
    7. 'min' → logprob: -4.3986382484436035
    8. 'key' → logprob: -4.8986382484436035
    9. ' direction' → logprob: -4.8986382484436035
    10. 'direction' → logprob: -5.0236382484436035

Token 233: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4228433072566986
    2. '       ' → logprob: -1.547843337059021
    3. '<|end|>' → logprob: -2.9228432178497314
    4. '
' → logprob: -3.0478432178497314
    5. ',' → logprob: -4.5478434562683105
    6. '    
' → logprob: -5.2978434562683105
    7. ' ' → logprob: -5.6728434562683105
    8. '    ' → logprob: -6.2978434562683105
    9. '        
' → logprob: -6.2978434562683105
    10. '<|end|>' → logprob: -6.2978434562683105

Token 234: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08557382225990295
    2. '<|end|>' → logprob: -3.83557391166687
    3. '    
' → logprob: -4.085573673248291
    4. '
' → logprob: -4.210573673248291
    5. '       ' → logprob: -4.585573673248291
    6. ' ' → logprob: -5.085573673248291
    7. ' 
' → logprob: -5.710573673248291
    8. '    ' → logprob: -6.085573673248291
    9. ',' → logprob: -6.460573673248291
    10. '  
' → logprob: -6.835573673248291

Token 235: ' #' (ID: 1069)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.13406649231910706
    2. '   ' → logprob: -3.384066581726074
    3. 'key' → logprob: -3.509066581726074
    4. ' for' → logprob: -3.884066581726074
    5. ' cost' → logprob: -4.134066581726074
    6. ' u' → logprob: -4.384066581726074
    7. 'for' → logprob: -5.884066581726074
    8. 'u' → logprob: -6.134066581726074
    9. ' if' → logprob: -6.634066581726074
    10. 'cost' → logprob: -6.634066581726074

Token 236: ' Use' (ID: 7649)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.08915942907333374
    2. '   ' → logprob: -3.0891594886779785
    3. 'key' → logprob: -4.2141594886779785
    4. ' for' → logprob: -4.4641594886779785
    5. ' u' → logprob: -4.9641594886779785
    6. 'for' → logprob: -6.5891594886779785
    7. 'u' → logprob: -6.8391594886779785
    8. ' cost' → logprob: -6.9641594886779785
    9. '
' → logprob: -7.4641594886779785
    10. '    
' → logprob: -7.7141594886779785

Token 237: ' sorted' (ID: 20099)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.37652164697647095
    2. '(b' → logprob: -2.376521587371826
    3. '(' → logprob: -2.751521587371826
    4. ' tuple' → logprob: -2.876521587371826
    5. ' tuples' → logprob: -3.751521587371826
    6. ' edges' → logprob: -4.251521587371826
    7. 'tuple' → logprob: -4.251521587371826
    8. '   ' → logprob: -4.751521587371826
    9. 'min' → logprob: -4.876521587371826
    10. '(f' → logprob: -5.501521587371826

Token 238: ' tuple' (ID: 31311)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.06515389680862427
    2. '(b' → logprob: -3.6901538372039795
    3. '(' → logprob: -3.8151538372039795
    4. '()' → logprob: -5.315154075622559
    5. '([' → logprob: -5.315154075622559
    6. '(tuple' → logprob: -6.440154075622559
    7. 'tuple' → logprob: -6.690154075622559
    8. ' tuples' → logprob: -7.190154075622559
    9. '(i' → logprob: -8.190154075622559
    10. 'keys' → logprob: -8.190154075622559

Token 239: ' of' (ID: 328)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7701264023780823
    2. ' key' → logprob: -1.5201263427734375
    3. '_key' → logprob: -2.3951263427734375
    4. '(b' → logprob: -3.1451263427734375
    5. '(key' → logprob: -3.2701263427734375
    6. '(u' → logprob: -3.2701263427734375
    7. ' =' → logprob: -3.6451263427734375
    8. '(edge' → logprob: -3.7701263427734375
    9. '((' → logprob: -4.1451263427734375
    10. 'edge' → logprob: -4.5201263427734375

Token 240: ' nodes' (ID: 15749)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.030486498028039932
    2. '(i' → logprob: -3.530486583709717
    3. '((' → logprob: -7.780486583709717
    4. '(' → logprob: -8.905486106872559
    5. '(f' → logprob: -9.530486106872559
    6. '(B' → logprob: -9.655486106872559
    7. ' (' → logprob: -11.030486106872559
    8. '(min' → logprob: -11.280486106872559
    9. '[b' → logprob: -11.905486106872559
    10. '([' → logprob: -12.530486106872559

Token 241: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009110727347433567
    2. '=' → logprob: -6.134110927581787
    3. '   ' → logprob: -6.259110927581787
    4. ' key' → logprob: -7.134110927581787
    5. ' (' → logprob: -7.634110927581787
    6. ' to' → logprob: -7.884110927581787
    7. '_key' → logprob: -7.884110927581787
    8. ' as' → logprob: -7.884110927581787
    9. 'key' → logprob: -8.134110450744629
    10. ',' → logprob: -8.134110450744629

Token 242: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.0560348741710186
    2. ' (' → logprob: -3.806034803390503
    3. '(key' → logprob: -3.931034803390503
    4. 'key' → logprob: -4.806035041809082
    5. ' the' → logprob: -6.181035041809082
    6. ' keys' → logprob: -6.806035041809082
    7. ' edge' → logprob: -7.306035041809082
    8. '(' → logprob: -8.431035041809082
    9. '(edge' → logprob: -8.806035041809082
    10. 'the' → logprob: -9.806035041809082

Token 243: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5128090381622314
    2. ',' → logprob: -1.5128090381622314
    3. ' (' → logprob: -3.5128090381622314
    4. ' =' → logprob: -3.7628090381622314
    5. ':' → logprob: -3.7628090381622314
    6. ')' → logprob: -3.8878090381622314
    7. '(edges' → logprob: -4.012808799743652
    8. 'edges' → logprob: -5.012808799743652
    9. ' for' → logprob: -5.137808799743652
    10. ' to' → logprob: -5.262808799743652

Token 244: ' avoid' (ID: 8397)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5416930913925171
    2. ' store' → logprob: -1.666693091392517
    3. 'edges' → logprob: -2.5416932106018066
    4. ' ensure' → logprob: -2.7916932106018066
    5. ' represent' → logprob: -3.1666932106018066
    6. 'store' → logprob: -4.666693210601807
    7. 'ensure' → logprob: -4.791693210601807
    8. ' key' → logprob: -5.166693210601807
    9. ' avoid' → logprob: -5.541693210601807
    10. ' keep' → logprob: -5.541693210601807

Token 245: ' duplication' (ID: 142358)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.6567482948303223
    2. ' duplication' → logprob: -1.6567482948303223
    3. 'duplicates' → logprob: -1.6567482948303223
    4. 'dup' → logprob: -3.7817482948303223
    5. ' key' → logprob: -4.281748294830322
    6. ' duplicate' → logprob: -4.406748294830322
    7. ' confusion' → logprob: -4.531748294830322
    8. ' ambiguity' → logprob: -4.656748294830322
    9. 'duplicate' → logprob: -5.031748294830322
    10. 'key' → logprob: -5.031748294830322

Token 246: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5094342231750488
    2. '       ' → logprob: -1.7594342231750488
    3. ',' → logprob: -2.134434223175049
    4. ')' → logprob: -3.259434223175049
    5. ':' → logprob: -3.634434223175049
    6. '<|end|>' → logprob: -4.509434223175049
    7. '    
' → logprob: -5.384434223175049
    8. '[' → logprob: -5.634434223175049
    9. ' ' → logprob: -5.634434223175049
    10. '    ' → logprob: -5.884434223175049

Token 247: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2773053050041199
    2. ' ' → logprob: -2.5273053646087646
    3. ':' → logprob: -2.7773053646087646
    4. '       ' → logprob: -3.9023053646087646
    5. ',' → logprob: -4.1523051261901855
    6. '    ' → logprob: -4.2773051261901855
    7. '    
' → logprob: -4.4023051261901855
    8. ')' → logprob: -5.0273051261901855
    9. '<|end|>' → logprob: -5.0273051261901855
    10. ' :' → logprob: -5.1523051261901855

Token 248: ' a' (ID: 261)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.08747534453868866
    2. 'key' → logprob: -3.087475299835205
    3. ' u' → logprob: -3.962475299835205
    4. 'u' → logprob: -4.337475299835205
    5. '   ' → logprob: -6.712475299835205
    6. ' edge' → logprob: -6.837475299835205
    7. ' node' → logprob: -7.212475299835205
    8. 'edge' → logprob: -7.712475299835205
    9. ' (' → logprob: -7.837475299835205
    10. '    
' → logprob: -8.212475776672363

Token 249: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12324698269367218
    2. '_key' → logprob: -2.623246908187866
    3. '_node' → logprob: -4.373247146606445
    4. 'key' → logprob: -4.748247146606445
    5. '_nodes' → logprob: -4.748247146606445
    6. '_edge' → logprob: -5.498247146606445
    7. '=' → logprob: -5.623247146606445
    8. 'node' → logprob: -6.248247146606445
    9. 'edge' → logprob: -6.998247146606445
    10. '_edges' → logprob: -7.123247146606445

Token 250: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004153549205511808
    2. ' b' → logprob: -5.754153728485107
    3. ' =' → logprob: -7.629153728485107
    4. '=' → logprob: -7.879153728485107
    5. 'a' → logprob: -9.87915325164795
    6. '_' → logprob: -10.75415325164795
    7. ' ' → logprob: -11.12915325164795
    8. '_=' → logprob: -12.25415325164795
    9. 'c' → logprob: -12.50415325164795
    10. '_b' → logprob: -13.12915325164795

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05488961935043335
    2. ' =' → logprob: -2.929889678955078
    3. ',' → logprob: -12.804889678955078
    4. '<|end|>' → logprob: -13.429889678955078
    5. ')' → logprob: -13.554889678955078
    6. '0' → logprob: -15.179889678955078
    7. ')=' → logprob: -15.304889678955078
    8. ' ' → logprob: -15.429889678955078
    9. '=
' → logprob: -16.179889678955078
    10. ']' → logprob: -16.179889678955078

Token 252: ' i' (ID: 575)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.3433399796485901
    2. ' sorted' → logprob: -1.5933399200439453
    3. 'min' → logprob: -3.3433399200439453
    4. ' min' → logprob: -4.468339920043945
    5. '(sorted' → logprob: -4.718339920043945
    6. ' tuple' → logprob: -4.843339920043945
    7. 'tuple' → logprob: -4.843339920043945
    8. 'b' → logprob: -5.093339920043945
    9. ' b' → logprob: -5.968339920043945
    10. '(b' → logprob: -6.093339920043945

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025589292868971825
    2. ',b' → logprob: -4.400589466094971
    3. ' ,' → logprob: -5.025589466094971
    4. ' =' → logprob: -5.900589466094971
    5. '=' → logprob: -6.025589466094971
    6. '+' → logprob: -7.900589466094971
    7. '0' → logprob: -8.150588989257812
    8. 'b' → logprob: -9.525588989257812
    9. ',a' → logprob: -9.525588989257812
    10. ',n' → logprob: -9.900588989257812

Token 254: ' b' (ID: 287)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.08791693300008774
    2. '(f' → logprob: -3.462916851043701
    3. 'b' → logprob: -4.212916851043701
    4. ' (' → logprob: -4.337916851043701
    5. '(n' → logprob: -4.337916851043701
    6. '(' → logprob: -4.962916851043701
    7. '(i' → logprob: -6.337916851043701
    8. '((' → logprob: -7.212916851043701
    9. '(len' → logprob: -7.837916851043701
    10. '('' → logprob: -8.33791732788086

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2588787376880646
    2. '1' → logprob: -2.133878707885742
    3. 'f' → logprob: -2.633878707885742
    4. 'i' → logprob: -4.883878707885742
    5. '(f' → logprob: -5.758878707885742
    6. ' ' → logprob: -6.008878707885742
    7. ' f' → logprob: -6.008878707885742
    8. '(' → logprob: -6.133878707885742
    9. 'min' → logprob: -6.383878707885742
    10. 'if' → logprob: -6.383878707885742

Token 256: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6321500539779663
    2. ' edges' → logprob: -2.257150173187256
    3. ' if' → logprob: -2.382150173187256
    4. ')' → logprob: -2.632150173187256
    5. ',' → logprob: -2.882150173187256
    6. '
' → logprob: -3.257150173187256
    7. ' 
' → logprob: -3.882150173187256
    8. '    
' → logprob: -3.882150173187256
    9. 'edges' → logprob: -4.007150173187256
    10. '<|end|>' → logprob: -4.382150173187256

Token 258: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6556298136711121
    2. 'if' (adapté à ' if') → logprob: -1.7806298732757568
    3. ' key' → logprob: -2.030629873275757
    4. 'key' → logprob: -3.155629873275757
    5. 'cost' → logprob: -3.405629873275757
    6. ' c' → logprob: -3.655629873275757
    7. ' cost' → logprob: -3.905629873275757
    8. 'c' → logprob: -4.905629634857178
    9. 'edge' → logprob: -5.030629634857178
    10. '   ' → logprob: -5.030629634857178

Token 259: ' a' (ID: 261)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.722390353679657
    2. '(a' → logprob: -0.972390353679657
    3. ' a' → logprob: -2.3473904132843018
    4. 'a' → logprob: -3.3473904132843018
    5. '(' → logprob: -5.722390174865723
    6. '(b' → logprob: -7.347390174865723
    7. 'b' → logprob: -7.722390174865723
    8. '(i' → logprob: -7.722390174865723
    9. ' b' → logprob: -8.222390174865723
    10. ' ' → logprob: -9.347390174865723

Token 260: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7750899195671082
    2. ' !=' → logprob: -1.400089979171753
    3. '>' → logprob: -2.150089979171753
    4. ',' → logprob: -2.775089979171753
    5. ' <' → logprob: -2.900089979171753
    6. '!=' → logprob: -3.275089979171753
    7. '<' → logprob: -4.900089740753174
    8. ' not' → logprob: -5.275089740753174
    9. ' ,' → logprob: -6.400089740753174
    10. ' ==' → logprob: -6.525089740753174

Token 261: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861456897109747
    2. ' b' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.258615493774414
    4. '    ' → logprob: -18.258615493774414
    5. '	b' → logprob: -18.258615493774414
    6. '   ' → logprob: -18.508615493774414
    7. '  ' → logprob: -18.633615493774414
    8. '>b' → logprob: -19.258615493774414
    9. ')b' → logprob: -20.258615493774414
    10. '=b' → logprob: -20.258615493774414

Token 262: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018379252403974533
    2. ':
' → logprob: -4.018379211425781
    3. ',' → logprob: -9.393379211425781
    4. ' :' → logprob: -9.643379211425781
    5. '):' → logprob: -11.018379211425781
    6. 'a' → logprob: -11.518379211425781
    7. ' a' → logprob: -11.643379211425781
    8. '=' → logprob: -11.643379211425781
    9. 'else' → logprob: -11.893379211425781
    10. '   ' → logprob: -12.268379211425781

Token 263: '           ' (ID: 352)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5260356068611145
    2. 'a' → logprob: -0.9010356068611145
    3. '       ' → logprob: -6.776035785675049
    4. '           ' → logprob: -6.776035785675049
    5. ',' → logprob: -8.65103530883789
    6. '(a' → logprob: -9.15103530883789
    7. ',a' → logprob: -9.40103530883789
    8. 'b' → logprob: -9.40103530883789
    9. ' (' → logprob: -9.90103530883789
    10. ' b' → logprob: -10.27603530883789

Token 264: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4748639166355133
    2. ' a' → logprob: -0.9748638868331909
    3. 'b' → logprob: -7.7248640060424805
    4. ' b' → logprob: -8.47486400604248
    5. '           ' → logprob: -9.72486400604248
    6. '(a' → logprob: -10.09986400604248
    7. ' (' → logprob: -11.09986400604248
    8. '       ' → logprob: -11.84986400604248
    9. '   ' → logprob: -12.22486400604248
    10. '               ' → logprob: -12.97486400604248

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002812391903717071
    2. ',b' → logprob: -8.87528133392334
    3. ' ,' → logprob: -9.37528133392334
    4. '=' → logprob: -9.87528133392334
    5. 'b' → logprob: -12.75028133392334
    6. '>' → logprob: -13.87528133392334
    7. 'a' → logprob: -14.75028133392334
    8. ' =' → logprob: -15.25028133392334
    9. ' b' → logprob: -15.37528133392334
    10. ',a' → logprob: -15.87528133392334

Token 266: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06197318062186241
    2. ' b' → logprob: -2.8119730949401855
    3. 'a' → logprob: -12.186973571777344
    4. ' a' → logprob: -14.686973571777344
    5. '    ' → logprob: -17.936973571777344
    6. ' ' → logprob: -18.811973571777344
    7. '	b' → logprob: -18.811973571777344
    8. ')b' → logprob: -19.436973571777344
    9. '>b' → logprob: -20.186973571777344
    10. '   ' → logprob: -21.061973571777344

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804263845086098
    2. ' =' → logprob: -3.2880425453186035
    3. '=a' → logprob: -14.288043022155762
    4. ')' → logprob: -15.538043022155762
    5. '=b' → logprob: -16.163042068481445
    6. ',' → logprob: -16.538042068481445
    7. 'a' → logprob: -17.038042068481445
    8. '<|end|>' → logprob: -17.788042068481445
    9. '>' → logprob: -17.913042068481445
    10. ' ' → logprob: -17.913042068481445

Token 268: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759397745132446
    2. ' b' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.575940132141113
    4. '	b' → logprob: -16.825939178466797
    5. '    ' → logprob: -17.700939178466797
    6. '(b' → logprob: -18.200939178466797
    7. '>b' → logprob: -18.575939178466797
    8. ')b' → logprob: -18.575939178466797
    9. ' б' → logprob: -18.700939178466797
    10. '   ' → logprob: -18.950939178466797

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003242607053834945
    2. 'a' → logprob: -8.125324249267578
    3. ' ,' → logprob: -11.125324249267578
    4. ' a' → logprob: -11.625324249267578
    5. ',a' → logprob: -12.500324249267578
    6. '0' → logprob: -14.500324249267578
    7. ' ' → logprob: -15.500324249267578
    8. ',
' → logprob: -16.125324249267578
    9. '_,' → logprob: -17.250324249267578
    10. '```' → logprob: -17.375324249267578

Token 270: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.014684110297821e-06
    2. ' a' → logprob: -11.625008583068848
    3. '	a' → logprob: -19.125009536743164
    4. '<|end|>' → logprob: -20.500009536743164
    5. '   ' → logprob: -20.875009536743164
    6. ' ' → logprob: -21.000009536743164
    7. '_a' → logprob: -21.625009536743164
    8. '>a' → logprob: -22.000009536743164
    9. ')a' → logprob: -22.250009536743164
    10. '
' → logprob: -22.750009536743164

Token 271: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09429473429918289
    2. '
' → logprob: -2.469294786453247
    3. '        
' → logprob: -5.844294548034668
    4. '<|end|>' → logprob: -7.469294548034668
    5. ' edges' → logprob: -7.719294548034668
    6. '
' → logprob: -7.844294548034668
    7. ')' → logprob: -8.344294548034668
    8. ' 
' → logprob: -8.594294548034668
    9. '    
' → logprob: -9.469294548034668
    10. ',' → logprob: -9.469294548034668

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04630834609270096
    2. ' if' → logprob: -3.7963082790374756
    3. '
' → logprob: -5.046308517456055
    4. ' edges' → logprob: -5.421308517456055
    5. '   ' → logprob: -6.046308517456055
    6. '        
' → logprob: -6.171308517456055
    7. 'if' → logprob: -6.421308517456055
    8. '    
' → logprob: -6.921308517456055
    9. ')' → logprob: -7.046308517456055
    10. '           ' → logprob: -7.171308517456055

Token 273: ' if' (ID: 538)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6446300148963928
    2. 'cost' → logprob: -1.269629955291748
    3. '       ' → logprob: -2.144629955291748
    4. ' key' → logprob: -4.144629955291748
    5. '
' → logprob: -4.144629955291748
    6. ' if' → logprob: -4.644629955291748
    7. ' edges' → logprob: -4.644629955291748
    8. 'edges' → logprob: -5.269629955291748
    9. 'if' (adapté à ' if') → logprob: -5.394629955291748
    10. 'key' → logprob: -5.394629955291748

Token 274: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1345832496881485
    2. ' (' → logprob: -2.1345832347869873
    3. '(edges' → logprob: -5.634583473205566
    4. '(b' → logprob: -6.134583473205566
    5. 'edges' → logprob: -7.009583473205566
    6. ' edges' → logprob: -7.259583473205566
    7. '(ab' → logprob: -9.634583473205566
    8. '(' → logprob: -9.884583473205566
    9. '(f' → logprob: -9.884583473205566
    10. '   ' → logprob: -10.509583473205566

Token 275: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.080963092041202e-06
    2. ' a' → logprob: -12.500004768371582
    3. '(a' → logprob: -13.875004768371582
    4. '   ' → logprob: -15.125004768371582
    5. ' ' → logprob: -18.5000057220459
    6. '	a' → logprob: -18.6250057220459
    7. ')a' → logprob: -18.7500057220459
    8. '```' → logprob: -19.5000057220459
    9. ')' → logprob: -19.7500057220459
    10. '    ' → logprob: -19.8750057220459

Token 276: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025336870457977057
    2. ',b' → logprob: -6.127533912658691
    3. ' ,' → logprob: -8.002533912658691
    4. ',a' → logprob: -12.752533912658691
    5. ',
' → logprob: -12.877533912658691
    6. 'b' → logprob: -13.002533912658691
    7. ',n' → logprob: -13.877533912658691
    8. ',v' → logprob: -13.877533912658691
    9. ',c' → logprob: -14.502533912658691
    10. ',d' → logprob: -14.627533912658691

Token 277: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002902585780248046
    2. ' not' → logprob: -6.127902507781982
    3. 'not' → logprob: -7.377902507781982
    4. ' )' → logprob: -9.50290298461914
    5. ']' → logprob: -11.62790298461914
    6. ' in' → logprob: -12.37790298461914
    7. 'in' → logprob: -12.87790298461914
    8. '）' → logprob: -14.62790298461914
    9. '])' → logprob: -15.00290298461914
    10. '   ' → logprob: -15.12790298461914

Token 278: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11929796636104584
    2. 'not' → logprob: -2.244297981262207
    3. ')' → logprob: -5.369297981262207
    4. ' in' → logprob: -6.744297981262207
    5. 'in' → logprob: -7.619297981262207
    6. ']' → logprob: -9.119297981262207
    7. '=' → logprob: -11.619297981262207
    8. '	not' → logprob: -12.619297981262207
    9. ' )' → logprob: -13.244297981262207
    10. ' ' → logprob: -13.619297981262207

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7248063087463379
    2. 'edges' → logprob: -1.099806308746338
    3. 'in' → logprob: -2.349806308746338
    4. '(edges' → logprob: -3.349806308746338
    5. ' edges' → logprob: -3.974806308746338
    6. '<|end|>' → logprob: -4.099806308746338
    7. ')' → logprob: -4.474806308746338
    8. '_edges' → logprob: -6.224806308746338
    9. '.edges' → logprob: -6.599806308746338
    10. '<|end|>' → logprob: -6.849806308746338

Token 280: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.003600782947614789
    2. ' edges' → logprob: -5.628600597381592
    3. '.edges' → logprob: -14.62860107421875
    4. '(edges' → logprob: -16.12860107421875
    5. 'edge' → logprob: -16.75360107421875
    6. '_edges' → logprob: -16.75360107421875
    7. '   ' → logprob: -17.00360107421875
    8. '
' → logprob: -17.75360107421875
    9. ')' → logprob: -17.75360107421875
    10. 'Edges' → logprob: -18.25360107421875

Token 281: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.022966019809246063
    2. '=' → logprob: -4.147965908050537
    3. 'or' → logprob: -5.397965908050537
    4. ':' → logprob: -6.522965908050537
    5. ']' → logprob: -7.522965908050537
    6. ':
' → logprob: -8.647966384887695
    7. ' =' → logprob: -9.147966384887695
    8. ')' → logprob: -9.647966384887695
    9. ' ' → logprob: -12.147966384887695
    10. '<|end|>' → logprob: -12.772966384887695

Token 282: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.08883257210254669
    2. 'f' → logprob: -2.7138326168060303
    3. ' edges' → logprob: -4.963832378387451
    4. 'abs' → logprob: -5.463832378387451
    5. '(f' → logprob: -5.838832378387451
    6. '   ' → logprob: -6.588832378387451
    7. '(edges' → logprob: -7.713832378387451
    8. ' f' → logprob: -7.713832378387451
    9. '       ' → logprob: -7.963832378387451
    10. 'i' → logprob: -7.963832378387451

Token 283: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.006732660811394453
    2. '[a' → logprob: -5.00673246383667
    3. '(a' → logprob: -11.006732940673828
    4. '[
' → logprob: -14.756732940673828
    5. '[' → logprob: -15.381732940673828
    6. '```' → logprob: -16.756732940673828
    7. ' [(' → logprob: -16.881732940673828
    8. '
' → logprob: -17.131732940673828
    9. '   ' → logprob: -17.131732940673828
    10. 'a' → logprob: -17.256732940673828

Token 284: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.842555426876061e-06
    2. ' a' → logprob: -12.375004768371582
    3. '(a' → logprob: -14.875004768371582
    4. '   ' → logprob: -16.1250057220459
    5. ')a' → logprob: -16.8750057220459
    6. '	a' → logprob: -17.6250057220459
    7. '
' → logprob: -17.7500057220459
    8. ')' → logprob: -18.2500057220459
    9. ' ' → logprob: -18.5000057220459
    10. ',a' → logprob: -18.8750057220459

Token 285: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.000645360560156405
    2. ',' → logprob: -7.375645160675049
    3. 'b' → logprob: -11.750645637512207
    4. ' ,' → logprob: -12.375645637512207
    5. ',a' → logprob: -12.750645637512207
    6. ',(' → logprob: -13.625645637512207
    7. ',s' → logprob: -14.500645637512207
    8. ')][' → logprob: -14.625645637512207
    9. '),(' → logprob: -14.750645637512207
    10. 'a' → logprob: -15.625645637512207

Token 286: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030093051493167877
    2. ']' → logprob: -4.155093193054199
    3. ')>' → logprob: -4.905093193054199
    4. '])' → logprob: -5.530093193054199
    5. ')]' → logprob: -6.530093193054199
    6. ']>' → logprob: -7.280093193054199
    7. '>' → logprob: -8.4050931930542
    8. '）' → logprob: -9.1550931930542
    9. '>)' → logprob: -9.9050931930542
    10. ' )' → logprob: -10.6550931930542

Token 287: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.062109965831041336
    2. ' >' → logprob: -2.81210994720459
    3. ')' → logprob: -9.31210994720459
    4. '   ' → logprob: -11.06210994720459
    5. ')>' → logprob: -11.93710994720459
    6. '```' → logprob: -12.31210994720459
    7. '>b' → logprob: -12.43710994720459
    8. '[' → logprob: -13.18710994720459
    9. ']' → logprob: -13.31210994720459
    10. '=' → logprob: -13.31210994720459

Token 288: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.029060255736112595
    2. 'abs' → logprob: -3.9040603637695312
    3. ' f' → logprob: -5.529060363769531
    4. '1' → logprob: -5.654060363769531
    5. ' abs' → logprob: -7.529060363769531
    6. ' ' → logprob: -8.279060363769531
    7. '   ' → logprob: -9.404060363769531
    8. '(f' → logprob: -9.779060363769531
    9. '  ' → logprob: -11.404060363769531
    10. '(' → logprob: -11.654060363769531

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1937549114227295
    2. '(b' → logprob: -1.3187549114227295
    3. 'b' → logprob: -1.5687549114227295
    4. ')' → logprob: -2.1937549114227295
    5. '(a' → logprob: -3.8187549114227295
    6. ' (' → logprob: -3.8187549114227295
    7. '(' → logprob: -3.8187549114227295
    8. '):
' → logprob: -5.193755149841309
    9. 'f' → logprob: -5.443755149841309
    10. '[b' → logprob: -5.443755149841309

Token 290: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8143983483314514
    2. '):
' → logprob: -1.5643982887268066
    3. ':' → logprob: -1.8143982887268066
    4. '=' → logprob: -2.3143982887268066
    5. '):' → logprob: -3.5643982887268066
    6. ' =' → logprob: -3.8143982887268066
    7. 'f' → logprob: -4.189398288726807
    8. ']:
' → logprob: -5.314398288726807
    9. ' ):
' → logprob: -5.564398288726807
    10. ')' → logprob: -6.564398288726807

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00473414920270443
    2. ':
' → logprob: -6.004734039306641
    3. ' edges' → logprob: -7.004734039306641
    4. ' =' → logprob: -7.754734039306641
    5. ':' → logprob: -8.12973403930664
    6. '):
' → logprob: -8.50473403930664
    7. 'edges' → logprob: -8.62973403930664
    8. '(edges' → logprob: -9.75473403930664
    9. '       ' → logprob: -10.25473403930664
    10. '=' → logprob: -10.25473403930664

Token 292: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5607745051383972
    2. 'edges' (adapté à ' edges') → logprob: -1.060774564743042
    3. '           ' → logprob: -2.560774564743042
    4. '               ' → logprob: -5.435774326324463
    5. '   ' → logprob: -7.185774326324463
    6. '       ' → logprob: -8.560774803161621
    7. '(edges' → logprob: -8.685774803161621
    8. '.edges' → logprob: -9.435774803161621
    9. '```' → logprob: -9.560774803161621
    10. '
' → logprob: -9.935774803161621

Token 293: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.1472419600977446e-06
    2. '[a' → logprob: -13.750000953674316
    3. '(a' → logprob: -16.875001907348633
    4. '[' → logprob: -18.125001907348633
    5. '[
' → logprob: -19.750001907348633
    6. '   ' → logprob: -19.875001907348633
    7. ' [(' → logprob: -20.875001907348633
    8. 'a' → logprob: -21.250001907348633
    9. '
' → logprob: -21.625001907348633
    10. '((' → logprob: -21.750001907348633

Token 294: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.8889261304575484e-06
    2. ' a' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.250003814697266
    4. '	a' → logprob: -18.250003814697266
    5. ')a' → logprob: -18.250003814697266
    6. ' ' → logprob: -19.000003814697266
    7. '(a' → logprob: -19.250003814697266
    8. ')' → logprob: -19.500003814697266
    9. '#a' → logprob: -19.625003814697266
    10. '
' → logprob: -19.750003814697266

Token 295: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0013545217225328088
    2. ',' → logprob: -6.626354694366455
    3. 'b' → logprob: -10.751354217529297
    4. ' ,' → logprob: -12.126354217529297
    5. ',
' → logprob: -14.001354217529297
    6. ',a' → logprob: -15.001354217529297
    7. '
' → logprob: -16.376354217529297
    8. '	b' → logprob: -16.501354217529297
    9. ',s' → logprob: -16.751354217529297
    10. 'a' → logprob: -17.126354217529297

Token 296: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7250059843063354
    2. ')]' → logprob: -0.7250059843063354
    3. ')' → logprob: -3.475006103515625
    4. '])' → logprob: -7.975006103515625
    5. ']=' → logprob: -10.850006103515625
    6. ' )' → logprob: -10.975006103515625
    7. ' ]' → logprob: -11.725006103515625
    8. '   ' → logprob: -12.850006103515625
    9. ']]' → logprob: -14.225006103515625
    10. ')=' → logprob: -14.350006103515625

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759491920471191
    2. ' =' → logprob: -0.8259491920471191
    3. ']' → logprob: -12.325948715209961
    4. '=f' → logprob: -13.200948715209961
    5. ')' → logprob: -13.450948715209961
    6. ']=' → logprob: -13.700948715209961
    7. ' ' → logprob: -15.200948715209961
    8. ')=' → logprob: -15.325948715209961
    9. 'f' → logprob: -15.575948715209961
    10. ',' → logprob: -17.07594871520996

Token 298: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10020720958709717
    2. ' f' → logprob: -2.3502073287963867
    3. '	f' → logprob: -15.100207328796387
    4. ' ' → logprob: -16.35020637512207
    5. ' ' → logprob: -16.60020637512207
    6. '   ' → logprob: -17.85020637512207
    7. '
' → logprob: -18.35020637512207
    8. '    ' → logprob: -18.97520637512207
    9. '_f' → logprob: -19.10020637512207
    10. '$f' → logprob: -19.47520637512207

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -17.5
    4. '<|end|>' → logprob: -17.625
    5. '[' → logprob: -18.375
    6. '```' → logprob: -19.0
    7. '_' → logprob: -19.375
    8. '
' → logprob: -19.625
    9. '   ' → logprob: -19.75
    10. '０' → logprob: -19.875

Token 300: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37028226256370544
    2. '       ' → logprob: -1.2452822923660278
    3. '   ' → logprob: -3.9952821731567383
    4. '        
' → logprob: -7.120282173156738
    5. '<|end|>' → logprob: -7.245282173156738
    6. '
' → logprob: -8.245282173156738
    7. 'a' → logprob: -8.495282173156738
    8. ' a' → logprob: -8.620282173156738
    9. '    
' → logprob: -8.745282173156738
    10. ',' → logprob: -9.245282173156738

Token 301: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3838781714439392
    2. '       ' → logprob: -1.883878231048584
    3. '
' → logprob: -2.133878231048584
    4. 'a' → logprob: -3.258878231048584
    5. ' a' → logprob: -5.133878231048584
    6. '        
' → logprob: -6.883878231048584
    7. ' ' → logprob: -7.383878231048584
    8. 'b' → logprob: -7.383878231048584
    9. '    
' → logprob: -7.633878231048584
    10. ' b' → logprob: -8.258877754211426

Token 302: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7035287618637085
    2. 'a' (adapté à ' a') → logprob: -1.0785287618637085
    3. ' a' → logprob: -1.8285287618637085
    4. ' ' → logprob: -6.828528881072998
    5. '       ' → logprob: -6.953528881072998
    6. ' b' → logprob: -7.203528881072998
    7. '
' → logprob: -7.203528881072998
    8. 'b' → logprob: -7.453528881072998
    9. '    
' → logprob: -8.95352840423584
    10. '	a' → logprob: -9.95352840423584

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.897412822581828e-05
    2. ',b' → logprob: -10.500068664550781
    3. '=' → logprob: -11.000068664550781
    4. 'b' → logprob: -11.250068664550781
    5. ' ,' → logprob: -11.500068664550781
    6. ',
' → logprob: -14.000068664550781
    7. ' =' → logprob: -14.500068664550781
    8. 'a' → logprob: -16.87506866455078
    9. ' b' → logprob: -17.00006866455078
    10. '1' → logprob: -17.37506866455078

Token 304: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020547257736325264
    2. ' b' → logprob: -3.8955471515655518
    3. ' ' → logprob: -13.270546913146973
    4. '<|end|>' → logprob: -13.395546913146973
    5. '   ' → logprob: -13.770546913146973
    6. '       ' → logprob: -14.770546913146973
    7. '    ' → logprob: -15.020546913146973
    8. '     ' → logprob: -16.52054786682129
    9. 'i' → logprob: -16.64554786682129
    10. '	b' → logprob: -16.77054786682129

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02166883647441864
    2. ',' → logprob: -4.271668910980225
    3. ' =' → logprob: -4.896668910980225
    4. ' ,' → logprob: -12.271668434143066
    5. 'b' → logprob: -14.896668434143066
    6. '   ' → logprob: -15.146668434143066
    7. ' ' → logprob: -15.771668434143066
    8. '0' → logprob: -16.271669387817383
    9. 'a' → logprob: -16.271669387817383
    10. '=
' → logprob: -16.896669387817383

Token 306: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019337546546012163
    2. ' i' → logprob: -6.251933574676514
    3. '   ' → logprob: -12.626934051513672
    4. ' ' → logprob: -14.751934051513672
    5. '(i' → logprob: -14.751934051513672
    6. '       ' → logprob: -15.501934051513672
    7. '    ' → logprob: -15.626934051513672
    8. '  ' → logprob: -15.876934051513672
    9. '	i' → logprob: -16.001934051513672
    10. '           ' → logprob: -16.501934051513672

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0366690456867218
    2. 'b' → logprob: -4.0366692543029785
    3. ',b' → logprob: -4.0366692543029785
    4. ' b' → logprob: -7.6616692543029785
    5. ' ,' → logprob: -8.53666877746582
    6. ' ' → logprob: -11.53666877746582
    7. '   ' → logprob: -12.28666877746582
    8. ',
' → logprob: -12.28666877746582
    9. '	b' → logprob: -12.53666877746582
    10. '       ' → logprob: -14.28666877746582

Token 308: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889264822006226
    2. ' b' → logprob: -2.578892707824707
    3. '   ' → logprob: -13.078892707824707
    4. '       ' → logprob: -14.828892707824707
    5. ' ' → logprob: -15.203892707824707
    6. '	b' → logprob: -15.953892707824707
    7. '    ' → logprob: -16.82889175415039
    8. '  ' → logprob: -17.95389175415039
    9. '```' → logprob: -18.45389175415039
    10. '     ' → logprob: -18.57889175415039

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.709308167453855e-05
    2. 'b' → logprob: -9.375086784362793
    3. '```' → logprob: -13.750086784362793
    4. '   ' → logprob: -14.500086784362793
    5. '
' → logprob: -14.875086784362793
    6. '`' → logprob: -16.50008773803711
    7. '       ' → logprob: -16.87508773803711
    8. ' ' → logprob: -17.50008773803711
    9. '
' → logprob: -18.12508773803711
    10. '``' → logprob: -18.25008773803711

Token 310: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7839492559432983
    2. '
' → logprob: -1.4089492559432983
    3. 'if' → logprob: -2.033949375152588
    4. '<|end|>' → logprob: -2.033949375152588
    5. '       ' → logprob: -3.658949375152588
    6. '   ' → logprob: -4.783949375152588
    7. ' 
' → logprob: -7.158949375152588
    8. '<|end|>' → logprob: -7.908949375152588
    9. '    
' → logprob: -8.15894889831543
    10. '  
' → logprob: -8.15894889831543

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3977673649787903
    2. '
' → logprob: -2.2727673053741455
    3. ' if' → logprob: -2.2727673053741455
    4. 'if' → logprob: -2.6477673053741455
    5. '   ' → logprob: -3.0227673053741455
    6. '<|end|>' → logprob: -7.147767543792725
    7. '
' → logprob: -8.147767066955566
    8. ' 
' → logprob: -8.397767066955566
    9. '```' → logprob: -8.397767066955566
    10. '    
' → logprob: -8.522767066955566

Token 312: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012781204655766487
    2. 'if' (adapté à ' if') → logprob: -4.387781143188477
    3. '       ' → logprob: -8.762781143188477
    4. ' ' → logprob: -9.887781143188477
    5. ' 
' → logprob: -10.387781143188477
    6. '
' → logprob: -11.387781143188477
    7. '        ' → logprob: -11.512781143188477
    8. '```' → logprob: -12.137781143188477
    9. '<|end|>' → logprob: -13.137781143188477
    10. '        
' → logprob: -13.762781143188477

Token 313: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.42870545387268066
    2. 'a' → logprob: -1.0537054538726807
    3. '>a' → logprob: -13.428705215454102
    4. '	a' → logprob: -13.678705215454102
    5. '(a' → logprob: -14.803705215454102
    6. ' ' → logprob: -15.178705215454102
    7. ' ' → logprob: -15.178705215454102
    8. '   ' → logprob: -15.428705215454102
    9. '#a' → logprob: -15.553705215454102
    10. 'b' → logprob: -15.678705215454102

Token 314: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14271597564220428
    2. '>' → logprob: -2.0177159309387207
    3. '>b' → logprob: -10.642716407775879
    4. ' >
' → logprob: -12.017716407775879
    5. ' ' → logprob: -12.392716407775879
    6. '   ' → logprob: -13.392716407775879
    7. ',' → logprob: -13.767716407775879
    8. '[' → logprob: -14.017716407775879
    9. '<|end|>' → logprob: -14.267716407775879
    10. '>
' → logprob: -14.517716407775879

Token 315: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141451060771942
    2. ' b' → logprob: -1.7014144659042358
    3. '       ' → logprob: -14.451414108276367
    4. '   ' → logprob: -15.951414108276367
    5. '	b' → logprob: -15.951414108276367
    6. '>b' → logprob: -15.951414108276367
    7. '```' → logprob: -16.201414108276367
    8. ' ' → logprob: -16.451414108276367
    9. '<|end|>' → logprob: -16.576414108276367
    10. '    ' → logprob: -16.701414108276367

Token 316: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11628098785877228
    2. ':
' → logprob: -2.241281032562256
    3. '       ' → logprob: -6.241281032562256
    4. '=' → logprob: -7.616281032562256
    5. '<|end|>' → logprob: -7.991281032562256
    6. '           ' → logprob: -8.241280555725098
    7. ',' → logprob: -8.741280555725098
    8. '):
' → logprob: -9.366280555725098
    9. ' =' → logprob: -9.866280555725098
    10. '):' → logprob: -10.866280555725098

Token 317: '           ' (ID: 352)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3035935163497925
    2. ' b' → logprob: -1.4285935163497925
    3. 'a' → logprob: -4.303593635559082
    4. ' a' → logprob: -4.803593635559082
    5. '       ' → logprob: -8.553593635559082
    6. '           ' → logprob: -8.803593635559082
    7. '   ' → logprob: -9.178593635559082
    8. ' ' → logprob: -12.428593635559082
    9. '```' → logprob: -12.553593635559082
    10. '<|end|>' → logprob: -12.553593635559082

Token 318: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6948269605636597
    2. ' b' → logprob: -0.6948269605636597
    3. 'a' (adapté à ' a') → logprob: -6.569827079772949
    4. ' a' → logprob: -8.19482707977295
    5. ' ' → logprob: -16.569826126098633
    6. ' ' → logprob: -16.694826126098633
    7. '	b' → logprob: -16.944826126098633
    8. '>b' → logprob: -17.194826126098633
    9. '=b' → logprob: -18.069826126098633
    10. ')b' → logprob: -18.069826126098633

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004148561041802168
    2. '=' → logprob: -6.004148483276367
    3. ',b' → logprob: -6.879148483276367
    4. 'b' → logprob: -7.629148483276367
    5. ' ,' → logprob: -9.129148483276367
    6. ' =' → logprob: -10.504148483276367
    7. ' b' → logprob: -11.129148483276367
    8. '<|end|>' → logprob: -13.504148483276367
    9. 'a' → logprob: -13.879148483276367
    10. '>' → logprob: -14.629148483276367

Token 320: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047814972698689
    2. ' b' → logprob: -4.511047840118408
    3. '	b' → logprob: -18.63604736328125
    4. '>b' → logprob: -18.88604736328125
    5. ' ' → logprob: -19.01104736328125
    6. 'a' → logprob: -19.26104736328125
    7. '    ' → logprob: -19.26104736328125
    8. '<|end|>' → logprob: -19.63604736328125
    9. '   ' → logprob: -20.38604736328125
    10. ')b' → logprob: -20.63604736328125

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029754191637039185
    2. ' =' → logprob: -3.529754161834717
    3. '=b' → logprob: -12.529754638671875
    4. 'b' → logprob: -15.904754638671875
    5. ' ' → logprob: -18.279754638671875
    6. '<|end|>' → logprob: -18.779754638671875
    7. ',' → logprob: -18.904754638671875
    8. ' b' → logprob: -19.029754638671875
    9. '=
' → logprob: -19.029754638671875
    10. ')' → logprob: -19.279754638671875

Token 322: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007100477814674377
    2. ' b' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.125709533691406
    4. '	b' → logprob: -18.625709533691406
    5. '(b' → logprob: -19.250709533691406
    6. ' ' → logprob: -20.125709533691406
    7. ')b' → logprob: -21.500709533691406
    8. '>b' → logprob: -21.750709533691406
    9. 'a' → logprob: -22.250709533691406
    10. '       ' → logprob: -22.500709533691406

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.329167369287461e-05
    2. 'a' → logprob: -9.625093460083008
    3. ',a' → logprob: -10.625093460083008
    4. ' ,' → logprob: -13.125093460083008
    5. ' a' → logprob: -15.125093460083008
    6. ',b' → logprob: -15.625093460083008
    7. 'b' → logprob: -15.750093460083008
    8. ',i' → logprob: -16.000093460083008
    9. '<|end|>' → logprob: -17.375093460083008
    10. 'i' → logprob: -17.500093460083008

Token 324: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.494741632603109e-05
    2. ' a' → logprob: -9.37508487701416
    3. '	a' → logprob: -19.375085830688477
    4. ' ' → logprob: -20.250085830688477
    5. '<|end|>' → logprob: -20.750085830688477
    6. 'b' → logprob: -21.000085830688477
    7. '>a' → logprob: -22.250085830688477
    8. '   ' → logprob: -22.500085830688477
    9. ')a' → logprob: -22.500085830688477
    10. ''a' → logprob: -22.625085830688477

Token 325: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03319249302148819
    2. '<|end|>' → logprob: -4.2831926345825195
    3. 'if' → logprob: -4.9081926345825195
    4. '
' → logprob: -5.2831926345825195
    5. ' if' → logprob: -5.9081926345825195
    6. 'b' → logprob: -6.5331926345825195
    7. '1' → logprob: -7.6581926345825195
    8. ',' → logprob: -7.7831926345825195
    9. ' (' → logprob: -8.40819263458252
    10. '```' → logprob: -8.53319263458252

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016964789479970932
    2. 'if' → logprob: -4.516964912414551
    3. ' if' → logprob: -5.141964912414551
    4. '```' → logprob: -11.01696491241455
    5. '<|end|>' → logprob: -11.26696491241455
    6. '   ' → logprob: -11.76696491241455
    7. '           ' → logprob: -11.76696491241455
    8. '
' → logprob: -12.64196491241455
    9. '        
' → logprob: -13.51696491241455
    10. '      ' → logprob: -14.51696491241455

Token 327: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04743674397468567
    2. ' if' → logprob: -3.2974367141723633
    3. '       ' → logprob: -4.672436714172363
    4. '<|end|>' → logprob: -14.547436714172363
    5. '   ' → logprob: -15.047436714172363
    6. 'If' → logprob: -15.297436714172363
    7. '
' → logprob: -15.422436714172363
    8. '```' → logprob: -15.422436714172363
    9. '           ' → logprob: -15.797436714172363
    10. '	if' → logprob: -16.04743766784668

Token 328: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.027394207194447517
    2. '(a' → logprob: -3.7773942947387695
    3. '(edges' → logprob: -5.5273942947387695
    4. ' edges' → logprob: -9.65239429473877
    5. '(' → logprob: -10.15239429473877
    6. 'edges' → logprob: -10.77739429473877
    7. '(b' → logprob: -10.90239429473877
    8. '   ' → logprob: -11.77739429473877
    9. '           ' → logprob: -13.02739429473877
    10. '(edge' → logprob: -13.15239429473877

Token 329: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007620468270033598
    2. '(a' → logprob: -4.882620334625244
    3. ' a' → logprob: -11.507620811462402
    4. ' (' → logprob: -13.007620811462402
    5. '   ' → logprob: -14.007620811462402
    6. ')a' → logprob: -14.882620811462402
    7. '	a' → logprob: -16.257619857788086
    8. '[a' → logprob: -16.257619857788086
    9. ')' → logprob: -16.382619857788086
    10. ' ' → logprob: -16.507619857788086

Token 330: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.001756575657054782
    2. 'b' → logprob: -6.37675666809082
    3. '(b' → logprob: -10.50175666809082
    4. ',' → logprob: -11.00175666809082
    5. '[b' → logprob: -11.87675666809082
    6. '	b' → logprob: -14.50175666809082
    7. ')b' → logprob: -14.62675666809082
    8. '>b' → logprob: -14.87675666809082
    9. '
' → logprob: -15.00175666809082
    10. ',(' → logprob: -15.37675666809082

Token 331: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9395385384559631
    2. 'not' → logprob: -1.4395384788513184
    3. ' not' → logprob: -1.5645384788513184
    4. ')' → logprob: -1.8145384788513184
    5. '])' → logprob: -10.814538955688477
    6. ')]' → logprob: -11.564538955688477
    7. ' ]' → logprob: -12.314538955688477
    8. ' )' → logprob: -12.814538955688477
    9. '	not' → logprob: -12.814538955688477
    10. '```' → logprob: -13.314538955688477

Token 332: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4740838408470154
    2. 'not' → logprob: -0.9740838408470154
    3. ')' → logprob: -13.09908390045166
    4. '=' → logprob: -13.22408390045166
    5. ']' → logprob: -13.34908390045166
    6. 'or' → logprob: -15.22408390045166
    7. '	not' → logprob: -15.22408390045166
    8. '>' → logprob: -15.59908390045166
    9. ' ' → logprob: -15.97408390045166
    10. ' =' → logprob: -16.224082946777344

Token 333: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048851124942302704
    2. 'edges' → logprob: -4.048851013183594
    3. ' or' → logprob: -4.423851013183594
    4. ' edges' → logprob: -4.548851013183594
    5. 'in' → logprob: -5.298851013183594
    6. 'or' → logprob: -6.673851013183594
    7. '(edges' → logprob: -6.673851013183594
    8. ')' → logprob: -9.673851013183594
    9. '<|end|>' → logprob: -10.798851013183594
    10. '.edges' → logprob: -11.173851013183594

Token 334: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.1797960251569748
    2. ' edges' → logprob: -1.8047959804534912
    3. '(edges' → logprob: -10.17979621887207
    4. '.edges' → logprob: -12.17979621887207
    5. '_edges' → logprob: -12.92979621887207
    6. '
' → logprob: -13.92979621887207
    7. ' ' → logprob: -14.05479621887207
    8. '```' → logprob: -14.17979621887207
    9. '   ' → logprob: -14.42979621887207
    10. '       ' → logprob: -14.67979621887207

Token 335: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018156031146645546
    2. 'or' → logprob: -4.018156051635742
    3. '<|end|>' → logprob: -12.393156051635742
    4. ')' → logprob: -14.018156051635742
    5. '	or' → logprob: -14.518156051635742
    6. ' ' → logprob: -15.893156051635742
    7. '       ' → logprob: -15.893156051635742
    8. '```' → logprob: -16.768156051635742
    9. '           ' → logprob: -16.893156051635742
    10. '        ' → logprob: -17.018156051635742

Token 336: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6326230764389038
    2. ' edges' → logprob: -0.7576230764389038
    3. '(edges' → logprob: -11.132622718811035
    4. '.edges' → logprob: -12.257622718811035
    5. '       ' → logprob: -13.757622718811035
    6. '```' → logprob: -13.882622718811035
    7. '           ' → logprob: -14.257622718811035
    8. '   ' → logprob: -14.507622718811035
    9. '_edges' → logprob: -14.757622718811035
    10. 'Edges' → logprob: -15.507622718811035

Token 337: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00018029935017693788
    2. 'edges' → logprob: -8.8751802444458
    3. '>' → logprob: -11.3751802444458
    4. ' edges' → logprob: -11.3751802444458
    5. '[' → logprob: -12.2501802444458
    6. '.edges' → logprob: -12.5001802444458
    7. '>(' → logprob: -13.1251802444458
    8. ' [(' → logprob: -13.7501802444458
    9. ' >' → logprob: -13.8751802444458
    10. '[a' → logprob: -14.0001802444458

Token 338: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.387458365177736e-05
    2. '(a' → logprob: -9.500083923339844
    3. ' a' → logprob: -11.875083923339844
    4. 'edges' → logprob: -14.125083923339844
    5. '[a' → logprob: -14.625083923339844
    6. ' (' → logprob: -15.125083923339844
    7. '   ' → logprob: -15.125083923339844
    8. ' ' → logprob: -16.000083923339844
    9. '```' → logprob: -16.875083923339844
    10. ')a' → logprob: -17.125083923339844

Token 339: ',b' (ID: 17568)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20425763726234436
    2. ',b' → logprob: -1.704257607460022
    3. '(b' → logprob: -6.829257488250732
    4. '[b' → logprob: -7.079257488250732
    5. 'a' → logprob: -7.579257488250732
    6. ']' → logprob: -8.95425796508789
    7. '>b' → logprob: -9.82925796508789
    8. '(a' → logprob: -10.20425796508789
    9. ')b' → logprob: -10.32925796508789
    10. ')]' → logprob: -10.45425796508789

Token 340: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021240918431431055
    2. ']>' → logprob: -6.377124309539795
    3. '>' → logprob: -8.377123832702637
    4. ')' → logprob: -9.127123832702637
    5. ' ]' → logprob: -9.752123832702637
    6. ')]' → logprob: -11.127123832702637
    7. ' >' → logprob: -12.127123832702637
    8. '])' → logprob: -13.377123832702637
    9. ')>' → logprob: -13.627123832702637
    10. '[' → logprob: -14.252123832702637

Token 341: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759459733963013
    2. ' >' → logprob: -0.8259459733963013
    3. ' ' → logprob: -13.325945854187012
    4. '   ' → logprob: -14.075945854187012
    5. '>b' → logprob: -14.075945854187012
    6. '<|end|>' → logprob: -14.325945854187012
    7. '           ' → logprob: -14.450945854187012
    8. 'edges' → logprob: -15.200945854187012
    9. '```' → logprob: -15.575945854187012
    10. ')' → logprob: -15.575945854187012

Token 342: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00317783304490149
    2. ' f' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.503177642822266
    4. '	f' → logprob: -16.753177642822266
    5. ' ' → logprob: -17.628177642822266
    6. '```' → logprob: -18.128177642822266
    7. '_f' → logprob: -18.253177642822266
    8. '
' → logprob: -18.253177642822266
    9. '    ' → logprob: -18.753177642822266
    10. '       ' → logprob: -18.878177642822266

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22617067396640778
    2. 'f' → logprob: -1.6011706590652466
    3. '0' → logprob: -7.601170539855957
    4. ' f' → logprob: -8.976170539855957
    5. ' ' → logprob: -10.476170539855957
    6. '   ' → logprob: -10.601170539855957
    7. '<|end|>' → logprob: -10.726170539855957
    8. 'b' → logprob: -10.851170539855957
    9. '
' → logprob: -11.351170539855957
    10. '```' → logprob: -11.476170539855957

Token 344: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43168380856513977
    2. ':' → logprob: -1.0566837787628174
    3. '           ' → logprob: -6.6816840171813965
    4. '):
' → logprob: -7.0566840171813965
    5. '):' → logprob: -8.181683540344238
    6. '=' → logprob: -8.306683540344238
    7. '       ' → logprob: -8.556683540344238
    8. ':

' → logprob: -9.931683540344238
    9. ')' → logprob: -10.931683540344238
    10. ':
' → logprob: -11.306683540344238

Token 345: '           ' (ID: 352)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6960697174072266
    2. ' f' → logprob: -0.6960697174072266
    3. '           ' → logprob: -6.321069717407227
    4. '       ' → logprob: -6.821069717407227
    5. ' =' → logprob: -12.321069717407227
    6. '               ' → logprob: -12.321069717407227
    7. '        ' → logprob: -12.321069717407227
    8. '   ' → logprob: -12.821069717407227
    9. '	f' → logprob: -12.821069717407227
    10. '=' → logprob: -12.821069717407227

Token 346: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.0007111206650733948
    2. ' edges' → logprob: -7.250710964202881
    3. '           ' → logprob: -14.000711441040039
    4. '(edges' → logprob: -15.875711441040039
    5. '       ' → logprob: -16.37571144104004
    6. '   ' → logprob: -16.62571144104004
    7. 'errors' → logprob: -16.75071144104004
    8. '.edges' → logprob: -16.87571144104004
    9. '               ' → logprob: -17.37571144104004
    10. '_edges' → logprob: -19.00071144104004

Token 347: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -6.704273118884885e-07
    2. '=' → logprob: -15.500000953674316
    3. '=(' → logprob: -15.875000953674316
    4. '[' → logprob: -15.875000953674316
    5. '[a' → logprob: -16.25
    6. '(a' → logprob: -17.375
    7. '```' → logprob: -19.125
    8. 'a' → logprob: -19.25
    9. '(' → logprob: -19.375
    10. ' [(' → logprob: -19.5

Token 348: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.153795766294934e-06
    2. ' a' → logprob: -12.875005722045898
    3. '(a' → logprob: -13.250005722045898
    4. ')a' → logprob: -14.125005722045898
    5. ')' → logprob: -14.750005722045898
    6. ' ' → logprob: -15.625005722045898
    7. '(' → logprob: -15.750005722045898
    8. 'b' → logprob: -15.875005722045898
    9. ' (' → logprob: -16.0000057220459
    10. ''a' → logprob: -16.5000057220459

Token 349: ',b' (ID: 17568)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18074816465377808
    2. ',b' → logprob: -1.8057482242584229
    3. ',' → logprob: -7.180747985839844
    4. ')' → logprob: -9.430747985839844
    5. '(b' → logprob: -9.805747985839844
    6. ')b' → logprob: -10.680747985839844
    7. '[b' → logprob: -10.805747985839844
    8. ' (' → logprob: -11.680747985839844
    9. ' ,' → logprob: -11.805747985839844
    10. 'a' → logprob: -12.180747985839844

Token 350: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011666493955999613
    2. ')]' → logprob: -7.126166820526123
    3. ')' → logprob: -8.501166343688965
    4. ']=' → logprob: -8.876166343688965
    5. ' ]' → logprob: -11.376166343688965
    6. '])' → logprob: -11.876166343688965
    7. '=' → logprob: -15.126166343688965
    8. ']
' → logprob: -15.501166343688965
    9. ']]' → logprob: -16.37616729736328
    10. ')=' → logprob: -16.62616729736328

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. '=f' → logprob: -17.258615493774414
    4. '=
' → logprob: -18.633615493774414
    5. 'f' → logprob: -19.633615493774414
    6. ' ' → logprob: -19.883615493774414
    7. ')' → logprob: -20.008615493774414
    8. '＝' → logprob: -20.133615493774414
    9. ']=' → logprob: -20.258615493774414
    10. ']' → logprob: -20.383615493774414

Token 352: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004078401252627373
    2. ' f' → logprob: -5.504078388214111
    3. '1' → logprob: -18.629077911376953
    4. '	f' → logprob: -19.004077911376953
    5. '_f' → logprob: -20.004077911376953
    6. ' ' → logprob: -21.004077911376953
    7. '$f' → logprob: -21.254077911376953
    8. ' ' → logprob: -21.629077911376953
    9. '   ' → logprob: -21.754077911376953
    10. '*f' → logprob: -22.129077911376953

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '<|end|>' → logprob: -15.500000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '0' → logprob: -16.0
    5. 'f' → logprob: -16.125
    6. '```' → logprob: -17.625
    7. '
' → logprob: -17.75
    8. '   ' → logprob: -18.25
    9. '<|end|>' → logprob: -18.5
    10. '-' → logprob: -18.75

Token 354: '

' (ID: 279)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4153505265712738
    2. '   ' → logprob: -1.2903505563735962
    3. '
' → logprob: -3.0403504371643066
    4. ' edges' → logprob: -4.540350437164307
    5. '    
' → logprob: -5.415350437164307
    6. '<|end|>' → logprob: -7.165350437164307
    7. '_edges' → logprob: -8.915350914001465
    8. 'ed' → logprob: -9.165350914001465
    9. 'edge' → logprob: -9.290350914001465
    10. 'sorted' → logprob: -9.540350914001465

Token 355: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.08553989231586456
    2. '   ' → logprob: -3.4605398178100586
    3. ' edges' → logprob: -3.4605398178100586
    4. '
' → logprob: -4.210539817810059
    5. '    
' → logprob: -5.960539817810059
    6. '```' → logprob: -7.335539817810059
    7. 'ed' → logprob: -7.835539817810059
    8. 'sorted' → logprob: -8.460539817810059
    9. 'edge' → logprob: -9.335539817810059
    10. 'import' → logprob: -9.460539817810059

Token 356: ' edge' (ID: 11165)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.02453644387423992
    2. ' edges' → logprob: -4.524536609649658
    3. 'parent' → logprob: -4.899536609649658
    4. 'edge' (adapté à ' edge') → logprob: -5.899536609649658
    5. '   ' → logprob: -6.024536609649658
    6. 'parents' → logprob: -8.0245361328125
    7. '```' → logprob: -9.3995361328125
    8. 'nodes' → logprob: -9.6495361328125
    9. ' parent' → logprob: -9.8995361328125
    10. 'sorted' → logprob: -9.8995361328125

Token 357: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04327138140797615
    2. '_list' → logprob: -3.29327130317688
    3. 'list' → logprob: -5.293271541595459
    4. 'List' → logprob: -8.7932710647583
    5. 'lst' → logprob: -11.4182710647583
    6. '=' → logprob: -11.6682710647583
    7. ' =' → logprob: -11.6682710647583
    8. 'ls' → logprob: -13.0432710647583
    9. 'es' → logprob: -13.4182710647583
    10. '_lst' → logprob: -13.4182710647583

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975349873304367
    2. '=' → logprob: -3.5297534465789795
    3. '=[]' → logprob: -13.029753684997559
    4. ')' → logprob: -15.404753684997559
    5. ' =[' → logprob: -15.904753684997559
    6. '<|end|>' → logprob: -15.904753684997559
    7. '=list' → logprob: -16.029752731323242
    8. '=[' → logprob: -16.404752731323242
    9. '[' → logprob: -16.654752731323242
    10. ',' → logprob: -17.154752731323242

Token 359: ' []
' (ID: 8911)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0850520208477974
    2. ' sorted' → logprob: -2.585052013397217
    3. '[]' → logprob: -5.835052013397217
    4. '[(' → logprob: -6.085052013397217
    5. 'list' → logprob: -7.335052013397217
    6. '[' → logprob: -9.210052490234375
    7. ' [(' → logprob: -9.335052490234375
    8. ' list' → logprob: -9.710052490234375
    9. '[list' → logprob: -10.710052490234375
    10. ' []' → logprob: -12.085052490234375

Token 360: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3778640031814575
    2. '   ' → logprob: -1.7528640031814575
    3. ' for' → logprob: -2.002863883972168
    4. '<|end|>' → logprob: -6.502863883972168
    5. ' =' → logprob: -7.502863883972168
    6. '[]' → logprob: -7.502863883972168
    7. '    
' → logprob: -7.627863883972168
    8. ')' → logprob: -7.627863883972168
    9. '[
' → logprob: -7.627863883972168
    10. '[' → logprob: -7.752863883972168

Token 361: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04957719147205353
    2. ' for' → logprob: -3.049577236175537
    3. '   ' → logprob: -6.924577236175537
    4. '	for' → logprob: -13.299576759338379
    5. '    
' → logprob: -13.674576759338379
    6. '[' → logprob: -14.049576759338379
    7. '
' → logprob: -14.174576759338379
    8. ' 
' → logprob: -14.174576759338379
    9. ')' → logprob: -14.924576759338379
    10. '[
' → logprob: -15.424576759338379

Token 362: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.09248990565538406
    2. '(u' → logprob: -3.0924899578094482
    3. '(key' → logprob: -4.217489719390869
    4. ' (' → logprob: -4.217489719390869
    5. '(k' → logprob: -4.967489719390869
    6. 'key' → logprob: -5.842489719390869
    7. '(edge' → logprob: -5.967489719390869
    8. '(e' → logprob: -7.592489719390869
    9. 'k' → logprob: -7.967489719390869
    10. 'edge' → logprob: -10.092490196228027

Token 363: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031608492136001587
    2. 'u' → logprob: -5.8781609535217285
    3. 'key' → logprob: -9.00316047668457
    4. '(u' → logprob: -9.37816047668457
    5. '(a' → logprob: -9.50316047668457
    6. 'edge' → logprob: -10.12816047668457
    7. ' a' → logprob: -10.75316047668457
    8. 'k' → logprob: -11.75316047668457
    9. 'e' → logprob: -14.12816047668457
    10. ' key' → logprob: -14.37816047668457

Token 364: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25194549560546875
    2. ',b' → logprob: -1.5019454956054688
    3. ' ,' → logprob: -11.501945495605469
    4. 'b' → logprob: -12.376945495605469
    5. ',a' → logprob: -13.751945495605469
    6. ',
' → logprob: -14.251945495605469
    7. ',B' → logprob: -17.12694549560547
    8. '   ' → logprob: -17.75194549560547
    9. ' b' → logprob: -17.87694549560547
    10. ',c' → logprob: -18.12694549560547

Token 365: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009939531795680523
    2. '),' → logprob: -4.634939670562744
    3. ',),' → logprob: -9.384939193725586
    4. ' ,' → logprob: -10.134939193725586
    5. ')' → logprob: -10.634939193725586
    6. ',)' → logprob: -11.509939193725586
    7. ' ),' → logprob: -11.884939193725586
    8. '),(' → logprob: -11.884939193725586
    9. ',
' → logprob: -13.134939193725586
    10. ',a' → logprob: -13.259939193725586

Token 366: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5564340949058533
    2. 'c' → logprob: -1.556434154510498
    3. 'w' → logprob: -1.556434154510498
    4. 'weight' → logprob: -5.556434154510498
    5. ' cost' → logprob: -7.056434154510498
    6. ' w' → logprob: -8.68143367767334
    7. ' c' → logprob: -9.68143367767334
    8. 'wt' → logprob: -11.55643367767334
    9. ' weight' → logprob: -12.18143367767334
    10. 'f' → logprob: -13.18143367767334

Token 367: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132767081260681
    2. 'in' → logprob: -1.313276767730713
    3. '	in' → logprob: -11.813276290893555
    4. ' ' → logprob: -12.813276290893555
    5. ',' → logprob: -13.688276290893555
    6. 's' → logprob: -14.438276290893555
    7. '<|end|>' → logprob: -14.938276290893555
    8. 'In' → logprob: -14.938276290893555
    9. 'import' → logprob: -15.063276290893555
    10. '=' → logprob: -15.313276290893555

Token 368: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0013278567930683494
    2. ' edges' → logprob: -6.626327991485596
    3. '.edges' → logprob: -13.876327514648438
    4. '(edges' → logprob: -14.626327514648438
    5. 'items' → logprob: -15.876327514648438
    6. '_edges' → logprob: -16.126327514648438
    7. 'edge' → logprob: -17.001327514648438
    8. '
' → logprob: -17.001327514648438
    9. '```' → logprob: -17.001327514648438
    10. 'Edges' → logprob: -17.126327514648438

Token 369: '.items' (ID: 19607)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00802192185074091
    2. '.' → logprob: -5.883021831512451
    3. '.items' → logprob: -6.133021831512451
    4. ' in' → logprob: -6.508021831512451
    5. 'append' → logprob: -7.258021831512451
    6. '   ' → logprob: -8.63302230834961
    7. '_append' → logprob: -8.88302230834961
    8. 'in' → logprob: -9.13302230834961
    9. ',' → logprob: -9.88302230834961
    10. '.iteritems' → logprob: -9.88302230834961

Token 370: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.02108316868543625
    2. '():' → logprob: -3.896083116531372
    3. '()' → logprob: -7.646083354949951
    4. '():
' → logprob: -10.271082878112793
    5. '()):
' → logprob: -11.396082878112793
    6. ':' → logprob: -12.771082878112793
    7. ':
' → logprob: -12.896082878112793
    8. '(' → logprob: -12.896082878112793
    9. '   ' → logprob: -13.271082878112793
    10. '):
' → logprob: -13.396082878112793

Token 371: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20704816281795502
    2. ' edge' → logprob: -1.7070481777191162
    3. 'edge' → logprob: -5.332047939300537
    4. '       ' → logprob: -7.332047939300537
    5. ')' → logprob: -10.707048416137695
    6. '=edge' → logprob: -10.957048416137695
    7. '```' → logprob: -10.957048416137695
    8. '[' → logprob: -11.207048416137695
    9. '
' → logprob: -11.457048416137695
    10. '    
' → logprob: -11.582048416137695

Token 372: ' edge' (ID: 11165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8302364945411682
    2. 'edge' (adapté à ' edge') → logprob: -1.2052364349365234
    3. ' edge' → logprob: -1.3302364349365234
    4. '       ' → logprob: -11.455236434936523
    5. ')' → logprob: -13.830236434936523
    6. '=edge' → logprob: -13.955236434936523
    7. 'edges' → logprob: -14.080236434936523
    8. '
' → logprob: -14.080236434936523
    9. '(edge' → logprob: -14.080236434936523
    10. '_edge' → logprob: -14.455236434936523

Token 373: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.7133641196996905e-05
    2. '_' → logprob: -11.37502670288086
    3. '   ' → logprob: -12.25002670288086
    4. 'list' → logprob: -12.75002670288086
    5. ' =' → logprob: -13.12502670288086
    6. '=' → logprob: -13.25002670288086
    7. '.append' → logprob: -14.12502670288086
    8. 's' → logprob: -14.12502670288086
    9. 'List' → logprob: -14.50002670288086
    10. '_LIST' → logprob: -15.37502670288086

Token 374: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007719860877841711
    2. '.' → logprob: -7.250771999359131
    3. ' .' → logprob: -10.250771522521973
    4. '.app' → logprob: -11.500771522521973
    5. 'append' → logprob: -11.750771522521973
    6. '.ap' → logprob: -12.250771522521973
    7. ').' → logprob: -13.500771522521973
    8. ' append' → logprob: -14.500771522521973
    9. '.Append' → logprob: -14.750771522521973
    10. '].' → logprob: -15.500771522521973

Token 375: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0027826502919197083
    2. '(a' → logprob: -6.377782821655273
    3. '(' → logprob: -7.002782821655273
    4. ' ((' → logprob: -9.002782821655273
    5. ' (' → logprob: -10.252782821655273
    6. '([' → logprob: -12.127782821655273
    7. '(((' → logprob: -12.377782821655273
    8. '   ' → logprob: -13.127782821655273
    9. '[(' → logprob: -15.627782821655273
    10. '```' → logprob: -16.002782821655273

Token 376: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0005019200034439564
    2. ' cost' → logprob: -7.625502109527588
    3. 'a' → logprob: -11.25050163269043
    4. '
' → logprob: -15.25050163269043
    5. ')' → logprob: -15.75050163269043
    6. '(cost' → logprob: -15.87550163269043
    7. '   ' → logprob: -16.00050163269043
    8. 'c' → logprob: -16.50050163269043
    9. '
' → logprob: -16.62550163269043
    10. '-cost' → logprob: -17.50050163269043

Token 377: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009641039068810642
    2. ',a' → logprob: -7.125964164733887
    3. ' ,' → logprob: -8.750964164733887
    4. ')' → logprob: -14.500964164733887
    5. ',
' → logprob: -15.125964164733887
    6. ',)' → logprob: -15.250964164733887
    7. 'a' → logprob: -15.875964164733887
    8. '   ' → logprob: -17.37596321105957
    9. '),' → logprob: -17.87596321105957
    10. ' a' → logprob: -18.37596321105957

Token 378: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.2016182839870453
    2. ',' → logprob: -1.7016183137893677
    3. ' ,' → logprob: -8.576618194580078
    4. 'b' → logprob: -11.576618194580078
    5. ',
' → logprob: -12.201618194580078
    6. ' b' → logprob: -13.826618194580078
    7. ',a' → logprob: -14.951618194580078
    8. ')' → logprob: -15.701618194580078
    9. ',B' → logprob: -16.326618194580078
    10. ',\
' → logprob: -16.951618194580078

Token 379: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12712444365024567
    2. ')' → logprob: -2.127124547958374
    3. '))
' → logprob: -8.752124786376953
    4. ')
' → logprob: -10.627124786376953
    5. ')))' → logprob: -12.002124786376953
    6. '),' → logprob: -12.877124786376953
    7. ',' → logprob: -13.002124786376953
    8. ' ))' → logprob: -14.502124786376953
    9. '));' → logprob: -14.752124786376953
    10. ')}' → logprob: -15.002124786376953

Token 380: '   ' (ID: 271)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.6354250907897949
    2. '
' → logprob: -0.7604250907897949
    3. ')' → logprob: -7.135425090789795
    4. '   ' → logprob: -7.385425090789795
    5. ' edge' → logprob: -8.010425567626953
    6. '    
' → logprob: -8.135425567626953
    7. ')
' → logprob: -8.760425567626953
    8. 'edges' → logprob: -8.885425567626953
    9. '=edge' → logprob: -9.260425567626953
    10. '(edge' → logprob: -9.260425567626953

Token 381: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.0005300374468788505
    2. '
' → logprob: -7.750530242919922
    3. ' edge' → logprob: -9.875530242919922
    4. '   ' → logprob: -10.125530242919922
    5. '    
' → logprob: -12.500530242919922
    6. ')' → logprob: -13.500530242919922
    7. '```' → logprob: -14.250530242919922
    8. 'edges' → logprob: -14.500530242919922
    9. '(edge' → logprob: -14.750530242919922
    10. '=edge' → logprob: -15.125530242919922

Token 382: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.750001907348633
    3. 's' → logprob: -14.625001907348633
    4. 'list' → logprob: -15.375001907348633
    5. '_l' → logprob: -16.625001907348633
    6. '_lst' → logprob: -17.625001907348633
    7. '_lists' → logprob: -17.875001907348633
    8. '_sorted' → logprob: -18.000001907348633
    9. 'List' → logprob: -19.250001907348633
    10. ' _' → logprob: -19.250001907348633

Token 383: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0001589618914294988
    2. '.' → logprob: -8.75015926361084
    3. ' .' → logprob: -14.87515926361084
    4. 'sort' → logprob: -15.87515926361084
    5. '	sort' → logprob: -18.250158309936523
    6. ' sort' → logprob: -18.500158309936523
    7. '=' → logprob: -19.000158309936523
    8. '.sorted' → logprob: -19.250158309936523
    9. '.Sort' → logprob: -19.625158309936523
    10. ' =' → logprob: -19.750158309936523

Token 384: '(key' (ID: 8932)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8622468113899231
    2. '()' → logprob: -1.2372467517852783
    3. '   ' → logprob: -2.1122467517852783
    4. '<|end|>' → logprob: -3.3622467517852783
    5. '    
' → logprob: -3.4872467517852783
    6. ',' → logprob: -3.7372467517852783
    7. ')' → logprob: -3.8622467517852783
    8. 'def' → logprob: -4.237246990203857
    9. '(' → logprob: -4.362246990203857
    10. '(
' → logprob: -4.612246990203857

Token 385: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.03805537521839142
    2. '=' → logprob: -3.288055419921875
    3. 'lambda' → logprob: -11.413055419921875
    4. '=
' → logprob: -14.163055419921875
    5. '(lambda' → logprob: -14.538055419921875
    6. ')=' → logprob: -15.038055419921875
    7. ')' → logprob: -15.038055419921875
    8. ' =' → logprob: -15.163055419921875
    9. '=str' → logprob: -15.413055419921875
    10. ' lambda' → logprob: -16.038055419921875

Token 386: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31357094645500183
    2. ' x' → logprob: -1.3135709762573242
    3. 'e' → logprob: -8.313570976257324
    4. 'edge' → logprob: -10.313570976257324
    5. ' e' → logprob: -10.938570976257324
    6. ' edge' → logprob: -11.563570976257324
    7. 'cost' → logprob: -13.688570976257324
    8. 'lambda' → logprob: -14.063570976257324
    9. 't' → logprob: -14.313570976257324
    10. 'item' → logprob: -15.188570976257324

Token 387: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024472584947943687
    2. 'x' → logprob: -3.89947247505188
    3. ':x' → logprob: -6.149472713470459
    4. ' x' → logprob: -6.899472713470459
    5. ' :' → logprob: -7.649472713470459
    6. '0' → logprob: -9.0244722366333
    7. '[' → logprob: -9.1494722366333
    8. ' ' → logprob: -10.5244722366333
    9. '   ' → logprob: -10.5244722366333
    10. '1' → logprob: -11.7744722366333

Token 388: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '	x' → logprob: -21.375709533691406
    4. '(x' → logprob: -22.750709533691406
    5. ')x' → logprob: -23.500709533691406
    6. '   ' → logprob: -23.750709533691406
    7. ' ' → logprob: -25.000709533691406
    8. '0' → logprob: -26.250709533691406
    9. '{x' → logprob: -26.750709533691406
    10. '    ' → logprob: -27.500709533691406

Token 389: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0076537118293344975
    2. '0' → logprob: -4.882653713226318
    3. ')' → logprob: -10.63265323638916
    4. ' ' → logprob: -11.38265323638916
    5. 'cost' → logprob: -12.88265323638916
    6. ':' → logprob: -13.13265323638916
    7. '(' → logprob: -13.25765323638916
    8. ' [' → logprob: -13.50765323638916
    9. '   ' → logprob: -13.88265323638916
    10. '1' → logprob: -14.38265323638916

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.822646693966817e-06
    2. '2' → logprob: -12.375007629394531
    3. '1' → logprob: -13.375007629394531
    4. '[' → logprob: -13.875007629394531
    5. ' ' → logprob: -14.125007629394531
    6. 'x' → logprob: -16.62500762939453
    7. '
' → logprob: -17.18750762939453
    8. '(' → logprob: -17.50000762939453
    9. '   ' → logprob: -17.50000762939453
    10. 'cost' → logprob: -17.56250762939453

Token 391: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ' )' → logprob: -13.000003814697266
    3. ')
' → logprob: -14.625003814697266
    4. '))' → logprob: -14.625003814697266
    5. ')`' → logprob: -15.625003814697266
    6. ',)' → logprob: -17.125003814697266
    7. ')return' → logprob: -17.250003814697266
    8. '])' → logprob: -17.250003814697266
    9. '[' → logprob: -17.625003814697266
    10. '})' → logprob: -17.875003814697266

Token 392: ' ' (ID: 220)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0006440493743866682
    2. '```' → logprob: -8.000643730163574
    3. '   ' → logprob: -8.375643730163574
    4. ' parent' → logprob: -10.000643730163574
    5. '    
' → logprob: -11.500643730163574
    6. '
' → logprob: -12.125643730163574
    7. '(parent' → logprob: -12.375643730163574
    8. 'parents' → logprob: -12.625643730163574
    9. ',parent' → logprob: -13.125643730163574
    10. ')' → logprob: -13.250643730163574

Token 393: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.03568451106548309
    2. '   ' → logprob: -4.035684585571289
    3. '
' → logprob: -5.035684585571289
    4. 'for' → logprob: -5.285684585571289
    5. '    
' → logprob: -6.535684585571289
    6. 'size' → logprob: -7.160684585571289
    7. 'result' → logprob: -7.285684585571289
    8. 'total' → logprob: -7.660684585571289
    9. 'count' → logprob: -7.785684585571289
    10. 'union' → logprob: -8.035684585571289

Token 394: ' sort' (ID: 4506)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.003398006083443761
    2. 'for' → logprob: -6.0033979415893555
    3. 'total' → logprob: -8.003397941589355
    4. 'size' → logprob: -8.503397941589355
    5. '#' → logprob: -9.378397941589355
    6. ' parent' → logprob: -9.628397941589355
    7. 'used' → logprob: -9.753397941589355
    8. 'union' → logprob: -9.878397941589355
    9. 'cost' → logprob: -11.003397941589355
    10. 'parents' → logprob: -11.128397941589355

Token 395: ' by' (ID: 656)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20273728668689728
    2. 'for' → logprob: -2.452737331390381
    3. '   ' → logprob: -2.827737331390381
    4. ')' → logprob: -4.952737331390381
    5. '(' → logprob: -5.202737331390381
    6. 'edges' → logprob: -5.702737331390381
    7. 'by' → logprob: -5.827737331390381
    8. '_edges' → logprob: -6.077737331390381
    9. '(edge' → logprob: -6.077737331390381
    10. 'def' → logprob: -6.202737331390381

Token 396: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6187201738357544
    2. 'cost' → logprob: -0.8687201738357544
    3. '0' → logprob: -3.243720054626465
    4. 'x' → logprob: -6.493720054626465
    5. ' ' → logprob: -7.118720054626465
    6. '[' → logprob: -7.993720054626465
    7. ' x' → logprob: -8.618720054626465
    8. ' the' → logprob: -12.618720054626465
    9. 'edge' → logprob: -13.118720054626465
    10. ' edge' → logprob: -13.243720054626465

Token 397: '

' (ID: 279)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -5.621933451038785e-05
    2. '```' → logprob: -10.375056266784668
    3. '   ' → logprob: -11.125056266784668
    4. ' parent' → logprob: -12.250056266784668
    5. 'parents' → logprob: -13.250056266784668
    6. '
' → logprob: -13.750056266784668
    7. '(parent' → logprob: -14.000056266784668
    8. '    
' → logprob: -14.500056266784668
    9. 'paren' → logprob: -15.750056266784668
    10. '``' → logprob: -15.875056266784668

Token 398: '   ' (ID: 271)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -2.618001053633634e-05
    2. '```' → logprob: -11.125025749206543
    3. '   ' → logprob: -12.125025749206543
    4. ' parent' → logprob: -12.750025749206543
    5. '    
' → logprob: -14.500025749206543
    6. '
' → logprob: -14.625025749206543
    7. 'n' → logprob: -14.750025749206543
    8. '(parent' → logprob: -14.875025749206543
    9. 'parents' → logprob: -15.000025749206543
    10. 'answer' → logprob: -15.375025749206543

Token 399: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -8.41866585687967e-06
    2. '```' → logprob: -12.500008583068848
    3. '   ' → logprob: -13.875008583068848
    4. 'total' → logprob: -14.125008583068848
    5. 'answer' → logprob: -14.250008583068848
    6. ' parent' → logprob: -14.375008583068848
    7. 'result' → logprob: -14.375008583068848
    8. 'ans' → logprob: -14.750008583068848
    9. '    
' → logprob: -15.125008583068848
    10. 'parents' → logprob: -15.750008583068848

Token 400: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2525707483291626
    2. ' =' → logprob: -1.5025707483291626
    3. ',' → logprob: -7.377570629119873
    4. '=[' → logprob: -11.502571105957031
    5. '[' → logprob: -12.877571105957031
    6. ' =[' → logprob: -13.752571105957031
    7. '＝' → logprob: -14.002571105957031
    8. '=[]' → logprob: -14.752571105957031
    9. ',parent' → logprob: -15.127571105957031
    10. '=

' → logprob: -15.377571105957031

Token 401: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.12750114500522614
    2. 'list' → logprob: -2.1275012493133545
    3. '[i' → logprob: -8.377501487731934
    4. ' list' → logprob: -8.627501487731934
    5. ' [' → logprob: -9.377501487731934
    6. '[' → logprob: -9.627501487731934
    7. '[node' → logprob: -12.252501487731934
    8. '[parent' → logprob: -12.877501487731934
    9. '[List' → logprob: -13.502501487731934
    10. '[n' → logprob: -14.002501487731934

Token 402: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. ' i' → logprob: -15.25
    3. '_i' → logprob: -16.375
    4. '_' → logprob: -17.75
    5. '[i' → logprob: -17.75
    6. '
' → logprob: -20.125
    7. '(i' → logprob: -20.25
    8. 'list' → logprob: -21.375
    9. '	i' → logprob: -21.375
    10. 'x' → logprob: -21.875

Token 403: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38689857721328735
    2. 'for' → logprob: -1.1368985176086426
    3. '	for' → logprob: -11.5118989944458
    4. ']' → logprob: -11.7618989944458
    5. ' ' → logprob: -12.6368989944458
    6. '
' → logprob: -13.0118989944458
    7. '   ' → logprob: -13.0118989944458
    8. ')' → logprob: -14.2618989944458
    9. '  ' → logprob: -15.0118989944458
    10. ' 
' → logprob: -15.1368989944458

Token 404: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03806260600686073
    2. 'range' → logprob: -3.288062572479248
    3. '(range' → logprob: -10.788063049316406
    4. '	range' → logprob: -14.788063049316406
    5. 'Range' → logprob: -17.038063049316406
    6. '_range' → logprob: -17.038063049316406
    7. ' ' → logprob: -17.788063049316406
    8. ' in' → logprob: -17.913063049316406
    9. '  ' → logprob: -18.163063049316406
    10. 'in' → logprob: -18.663063049316406

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27691560983657837
    2. 'in' → logprob: -1.5269155502319336
    3. ' range' → logprob: -4.401915550231934
    4. 'range' → logprob: -4.401915550231934
    5. ' ' → logprob: -9.151915550231934
    6. '(range' → logprob: -10.026915550231934
    7. ',' → logprob: -12.151915550231934
    8. '  ' → logprob: -12.651915550231934
    9. 'n' → logprob: -12.776915550231934
    10. 'ange' → logprob: -13.276915550231934

Token 406: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -19.626171112060547
    4. ' ' → logprob: -21.126171112060547
    5. '	range' → logprob: -21.501171112060547
    6. '  ' → logprob: -23.001171112060547
    7. '   ' → logprob: -23.126171112060547
    8. '_range' → logprob: -24.751171112060547
    9. 'rang' → logprob: -25.376171112060547
    10. '`' → logprob: -25.876171112060547

Token 407: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0702708512544632
    2. '(n' → logprob: -2.6952707767486572
    3. ' n' → logprob: -8.695270538330078
    4. '(' → logprob: -8.820270538330078
    5. ' (' → logprob: -11.820270538330078
    6. '2' → logprob: -11.945270538330078
    7. '   ' → logprob: -12.695270538330078
    8. '	n' → logprob: -14.320270538330078
    9. '
' → logprob: -14.445270538330078
    10. ')n' → logprob: -14.820270538330078

Token 408: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008091482450254261
    2. ')]
' → logprob: -7.125809192657471
    3. ')]

' → logprob: -13.375808715820312
    4. '+' → logprob: -13.500808715820312
    5. ')]
' → logprob: -14.000808715820312
    6. ')' → logprob: -14.375808715820312
    7. ']' → logprob: -15.625808715820312
    8. ' )' → logprob: -15.875808715820312
    9. ')],' → logprob: -17.375808715820312
    10. ')][' → logprob: -18.000808715820312

Token 409: '   ' (ID: 271)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.004152126144617796
    2. '   ' → logprob: -5.504152297973633
    3. ' size' → logprob: -9.629152297973633
    4. '	size' → logprob: -12.254152297973633
    5. '```' → logprob: -13.504152297973633
    6. '[size' → logprob: -14.254152297973633
    7. '  ' → logprob: -15.129152297973633
    8. 'sizes' → logprob: -15.379152297973633
    9. ',size' → logprob: -15.504152297973633
    10. '[' → logprob: -16.254152297973633

Token 410: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' (adapté à ' size') → logprob: -4.60414821645827e-06
    2. ' size' → logprob: -12.625004768371582
    3. '   ' → logprob: -13.750004768371582
    4. '```' → logprob: -17.000003814697266
    5. '
' → logprob: -17.250003814697266
    6. 'sizes' → logprob: -18.250003814697266
    7. '	size' → logprob: -18.625003814697266
    8. '[size' → logprob: -18.750003814697266
    9. '    
' → logprob: -19.125003814697266
    10. 'siz' → logprob: -19.500003814697266

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036373690236359835
    2. ' =' → logprob: -5.628637313842773
    3. '=[' → logprob: -10.253637313842773
    4. '[' → logprob: -13.753637313842773
    5. ' =[' → logprob: -14.503637313842773
    6. '＝' → logprob: -15.753637313842773
    7. '=n' → logprob: -16.003637313842773
    8. '[n' → logprob: -16.503637313842773
    9. '=size' → logprob: -17.628637313842773
    10. '[i' → logprob: -17.628637313842773

Token 412: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002433332148939371
    2. ' [' → logprob: -6.7524333000183105
    3. '[n' → logprob: -7.2524333000183105
    4. '[i' → logprob: -7.5024333000183105
    5. '   ' → logprob: -14.627433776855469
    6. '[N' → logprob: -14.627433776855469
    7. '[I' → logprob: -14.627433776855469
    8. '[ind' → logprob: -15.627433776855469
    9. '[a' → logprob: -16.00243377685547
    10. '[num' → logprob: -16.37743377685547

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '0' → logprob: -20.5
    4. '   ' → logprob: -20.625
    5. '１' → logprob: -21.125
    6. '```' → logprob: -21.5
    7. '
' → logprob: -21.625
    8. ']' → logprob: -22.375
    9. '(' → logprob: -23.0
    10. '۱' → logprob: -23.125

Token 414: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4049501121044159
    2. ']' → logprob: -1.6549501419067383
    3. 'for' → logprob: -2.1549501419067383
    4. ']*' → logprob: -3.6549501419067383
    5. '   ' → logprob: -10.154950141906738
    6. '	for' → logprob: -10.654950141906738
    7. ' ' → logprob: -10.654950141906738
    8. ' ]' → logprob: -11.279950141906738
    9. ')' → logprob: -11.529950141906738
    10. ']*(' → logprob: -13.279950141906738

Token 415: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. '(n' → logprob: -14.625000953674316
    3. ' n' → logprob: -16.5
    4. '	n' → logprob: -20.125
    5. '
' → logprob: -20.875
    6. '(' → logprob: -21.375
    7. ')n' → logprob: -22.625
    8. '   ' → logprob: -22.875
    9. '```' → logprob: -23.625
    10. ' (' → logprob: -23.75

Token 416: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5564919114112854
    2. 'result' → logprob: -1.8064918518066406
    3. 'cost' → logprob: -2.5564918518066406
    4. 'res' → logprob: -2.9314918518066406
    5. 'ans' → logprob: -3.0564918518066406
    6. '   ' → logprob: -3.4314918518066406
    7. 'mst' → logprob: -3.5564918518066406
    8. 'answer' → logprob: -4.306491851806641
    9. '
' → logprob: -5.431491851806641
    10. 'for' → logprob: -5.931491851806641

Token 417: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5876852869987488
    2. 'ans' → logprob: -1.5876853466033936
    3. 'total' → logprob: -2.0876853466033936
    4. 'result' → logprob: -2.8376853466033936
    5. 'answer' → logprob: -3.5876853466033936
    6. 'mst' → logprob: -3.9626853466033936
    7. 'cost' → logprob: -4.5876851081848145
    8. '   ' → logprob: -7.9626851081848145
    9. '```' → logprob: -9.837685585021973
    10. 'ret' → logprob: -10.712685585021973

Token 418: ' ways' (ID: 6984)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6872201561927795
    2. 'res' → logprob: -1.1872200965881348
    3. 'total' → logprob: -2.1872200965881348
    4. 'result' → logprob: -2.9372200965881348
    5. 'answer' → logprob: -3.8122200965881348
    6. 'mst' → logprob: -6.062220096588135
    7. 'cost' → logprob: -6.187220096588135
    8. '   ' → logprob: -9.812220573425293
    9. 'count' → logprob: -10.062220573425293
    10. 'ret' → logprob: -10.187220573425293

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759718418121338
    2. ' =' → logprob: -0.8259718418121338
    3. '=[' → logprob: -11.075971603393555
    4. '[' → logprob: -11.325971603393555
    5. ' =[' → logprob: -13.075971603393555
    6. '=[]' → logprob: -14.325971603393555
    7. ',' → logprob: -14.450971603393555
    8. '   ' → logprob: -14.700971603393555
    9. ' ' → logprob: -14.825971603393555
    10. '＝' → logprob: -15.575971603393555

Token 420: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25202277302742004
    2. '[' → logprob: -1.5020227432250977
    3. '{' → logprob: -9.502022743225098
    4. ' [' → logprob: -11.627022743225098
    5. '{}' → logprob: -12.127022743225098
    6. '0' → logprob: -13.627022743225098
    7. ' ' → logprob: -13.752022743225098
    8. '[[' → logprob: -13.752022743225098
    9. '```' → logprob: -15.252022743225098
    10. '[]' → logprob: -15.877022743225098

Token 421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005464744288474321
    2. '[' → logprob: -5.255464553833008
    3. '{' → logprob: -8.380464553833008
    4. '{}' → logprob: -13.630464553833008
    5. '[[' → logprob: -15.755464553833008
    6. '0' → logprob: -16.130464553833008
    7. ' [' → logprob: -16.755464553833008
    8. '```' → logprob: -17.130464553833008
    9. '{}
' → logprob: -17.755464553833008
    10. ' ' → logprob: -18.130464553833008

Token 422: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21047236025333405
    2. 'for' → logprob: -1.7104723453521729
    3. '
' → logprob: -5.835472583770752
    4. ' for' → logprob: -6.210472583770752
    5. '    
' → logprob: -6.960472583770752
    6. 'total' → logprob: -7.210472583770752
    7. 'count' → logprob: -7.210472583770752
    8. 'edges' → logprob: -7.335472583770752
    9. 'i' → logprob: -9.085472106933594
    10. ',' → logprob: -9.335472106933594

Token 423: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10019621253013611
    2. '   ' → logprob: -2.975196123123169
    3. 'i' → logprob: -3.600196123123169
    4. ' for' → logprob: -4.225196361541748
    5. '```' → logprob: -7.100196361541748
    6. 'idx' → logprob: -7.350196361541748
    7. 'total' → logprob: -7.850196361541748
    8. ',' → logprob: -9.10019588470459
    9. ' i' → logprob: -9.35019588470459
    10. 'current' → logprob: -9.85019588470459

Token 424: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05420340597629547
    2. 'i' (adapté à ' i') → logprob: -3.304203510284424
    3. '   ' → logprob: -4.804203510284424
    4. 'total' → logprob: -5.554203510284424
    5. ' for' → logprob: -6.304203510284424
    6. 'idx' → logprob: -7.054203510284424
    7. 'prev' → logprob: -7.929203510284424
    8. 'mst' → logprob: -7.929203510284424
    9. '```' → logprob: -9.304203033447266
    10. 'ans' → logprob: -9.304203033447266

Token 425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07037818431854248
    2. ' =' → logprob: -2.695378303527832
    3. 'n' → logprob: -8.195378303527832
    4. ' +=' → logprob: -9.445378303527832
    5. '+=' → logprob: -10.445378303527832
    6. ' ' → logprob: -10.820378303527832
    7. 'nt' → logprob: -11.695378303527832
    8. '+' → logprob: -11.820378303527832
    9. 'nd' → logprob: -12.070378303527832
    10. '0' → logprob: -12.195378303527832

Token 426: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '۰' → logprob: -21.25
    4. '０' → logprob: -22.375
    5. '```' → logprob: -22.375
    6. '<|end|>' → logprob: -22.375
    7. '[' → logprob: -23.5
    8. '  ' → logprob: -23.75
    9. '   ' → logprob: -23.875
    10. '(' → logprob: -23.875

Token 427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '1' → logprob: -19.125001907348633
    4. '   ' → logprob: -19.875001907348633
    5. 'len' → logprob: -20.500001907348633
    6. '```' → logprob: -21.000001907348633
    7. '=' → logprob: -21.250001907348633
    8. '  ' → logprob: -21.562501907348633
    9. '[' → logprob: -21.687501907348633
    10. '۰' → logprob: -22.062501907348633

Token 428: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14848265051841736
    2. 'while' → logprob: -2.89848256111145
    3. '<|end|>' → logprob: -4.148482799530029
    4. ' while' → logprob: -4.398482799530029
    5. '   ' → logprob: -4.523482799530029
    6. ':' → logprob: -4.773482799530029
    7. ' 
' → logprob: -4.773482799530029
    8. '  
' → logprob: -5.148482799530029
    9. '\n' → logprob: -5.523482799530029
    10. '```' → logprob: -5.648482799530029

Token 429: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' m' (ID: 284)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.29818782210350037
    2. '<|end|>' → logprob: -1.7981878519058228
    3. '(len' → logprob: -3.923187732696533
    4. 'n' → logprob: -3.923187732696533
    5. ' while' → logprob: -4.173187732696533
    6. '
' → logprob: -4.673187732696533
    7. 'len' → logprob: -4.798187732696533
    8. ',' → logprob: -5.673187732696533
    9. '   ' → logprob: -5.923187732696533
    10. '(' → logprob: -6.048187732696533

Token 431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25630369782447815
    2. ' =' → logprob: -1.5063036680221558
    3. '=len' → logprob: -5.506303787231445
    4. ',' → logprob: -10.006303787231445
    5. '=int' → logprob: -10.631303787231445
    6. '   ' → logprob: -10.631303787231445
    7. '  ' → logprob: -10.631303787231445
    8. ' ' → logprob: -10.756303787231445
    9. 'x' → logprob: -10.881303787231445
    10. '<len' → logprob: -11.131303787231445

Token 432: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004306692280806601
    2. ' len' → logprob: -7.750430583953857
    3. '(len' → logprob: -18.250431060791016
    4. '[len' → logprob: -18.625431060791016
    5. '=len' → logprob: -19.750431060791016
    6. '	len' → logprob: -20.500431060791016
    7. ',len' → logprob: -21.875431060791016
    8. '<len' → logprob: -22.250431060791016
    9. ' ' → logprob: -23.375431060791016
    10. 'Len' → logprob: -23.375431060791016

Token 433: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.000431861262768507
    2. 'edge' → logprob: -7.750432014465332
    3. '(edges' → logprob: -14.250432014465332
    4. '=edge' → logprob: -14.750432014465332
    5. '(' → logprob: -16.125431060791016
    6. ' edge' → logprob: -16.625431060791016
    7. 'edges' → logprob: -18.375431060791016
    8. 'Edge' → logprob: -19.125431060791016
    9. '_edge' → logprob: -20.125431060791016
    10. '(
' → logprob: -20.125431060791016

Token 434: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.896309739408025e-07
    2. 's' → logprob: -14.875000953674316
    3. 'ist' → logprob: -14.875000953674316
    4. 'list' → logprob: -17.125
    5. 'List' → logprob: -17.25
    6. '_List' → logprob: -18.25
    7. '_LIST' → logprob: -18.625
    8. '_' → logprob: -18.75
    9. ')_' → logprob: -18.875
    10. ')' → logprob: -19.0

Token 435: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013643606507685035
    2. '<|end|>' → logprob: -9.250136375427246
    3. ')
' → logprob: -10.625136375427246
    4. '<|end|>' → logprob: -12.125136375427246
    5. '   ' → logprob: -12.375136375427246
    6. ' )' → logprob: -12.750136375427246
    7. '```' → logprob: -14.000136375427246
    8. ')i' → logprob: -14.125136375427246
    9. '**' → logprob: -14.875136375427246
    10. ')**' → logprob: -16.125137329101562

Token 436: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4144100546836853
    2. '   ' → logprob: -1.53941011428833
    3. '
' → logprob: -3.03941011428833
    4. '```' → logprob: -3.41441011428833
    5. ' while' → logprob: -3.66441011428833
    6. ':' → logprob: -5.28941011428833
    7. '    
' → logprob: -5.41441011428833
    8. '<|end|>' → logprob: -5.66441011428833
    9. ' 
' → logprob: -7.16441011428833
    10. ',' → logprob: -7.28941011428833

Token 437: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0011796315666288137
    2. ' while' → logprob: -7.1261796951293945
    3. '   ' → logprob: -8.001179695129395
    4. '
' → logprob: -10.751179695129395
    5. '```' → logprob: -11.626179695129395
    6. 'i' → logprob: -12.876179695129395
    7. '    
' → logprob: -13.251179695129395
    8. '	while' → logprob: -13.376179695129395
    9. 'from' → logprob: -13.626179695129395
    10. 'for' → logprob: -14.501179695129395

Token 438: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07889705896377563
    2. 'i' → logprob: -2.578896999359131
    3. '	i' → logprob: -12.828897476196289
    4. '   ' → logprob: -13.453897476196289
    5. '(i' → logprob: -13.828897476196289
    6. ' ' → logprob: -13.953897476196289
    7. 'True' → logprob: -14.828897476196289
    8. ' True' → logprob: -15.453897476196289
    9. '```' → logprob: -15.953897476196289
    10. '  ' → logprob: -15.953897476196289

Token 439: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12844324111938477
    2. '<' → logprob: -2.1284432411193848
    3. '<len' → logprob: -7.003443241119385
    4. '<n' → logprob: -8.753442764282227
    5. '<m' → logprob: -8.878442764282227
    6. ' ' → logprob: -9.128442764282227
    7. '[' → logprob: -9.378442764282227
    8. '<size' → logprob: -10.753442764282227
    9. '   ' → logprob: -11.128442764282227
    10. ' <
' → logprob: -11.253442764282227

Token 440: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9361264946837764e-07
    2. ' m' → logprob: -15.875
    3. '   ' → logprob: -17.75
    4. ' ' → logprob: -19.375
    5. 'len' → logprob: -21.0
    6. '  ' → logprob: -22.5
    7. '	m' → logprob: -22.75
    8. '
' → logprob: -22.75
    9. '    ' → logprob: -22.875
    10. '```' → logprob: -23.125

Token 441: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058276351541280746
    2. ' and' → logprob: -3.683276414871216
    3. ':
' → logprob: -3.933276414871216
    4. 'and' → logprob: -4.433276176452637
    5. '=' → logprob: -12.058276176452637
    6. '   ' → logprob: -12.683276176452637
    7. ' :' → logprob: -13.183276176452637
    8. ':

' → logprob: -13.433276176452637
    9. ':
' → logprob: -14.308276176452637
    10. ',' → logprob: -14.558276176452637

Token 442: '       ' (ID: 309)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6025184988975525
    2. '   ' → logprob: -0.8525184988975525
    3. '       ' → logprob: -4.352518558502197
    4. ' j' → logprob: -4.852518558502197
    5. '```' → logprob: -5.352518558502197
    6. 'cost' → logprob: -8.602518081665039
    7. '    
' → logprob: -8.977518081665039
    8. '	j' → logprob: -9.352518081665039
    9. 'count' → logprob: -9.602518081665039
    10. 'current' → logprob: -9.852518081665039

Token 443: ' cost' (ID: 3097)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009136945940554142
    2. '   ' → logprob: -5.009137153625488
    3. 'cost' (adapté à ' cost') → logprob: -6.134137153625488
    4. ' j' → logprob: -9.634137153625488
    5. 'cur' → logprob: -9.634137153625488
    6. 'curr' → logprob: -10.134137153625488
    7. 'current' → logprob: -10.509137153625488
    8. '    
' → logprob: -11.009137153625488
    9. 'w' → logprob: -11.259137153625488
    10. '	j' → logprob: -11.759137153625488

Token 444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00548157561570406
    2. ' =' → logprob: -5.505481719970703
    3. ',' → logprob: -6.630481719970703
    4. '   ' → logprob: -10.630481719970703
    5. '_edges' → logprob: -11.380481719970703
    6. '==' → logprob: -11.880481719970703
    7. '=int' → logprob: -12.005481719970703
    8. '=i' → logprob: -12.630481719970703
    9. '=edge' → logprob: -12.630481719970703
    10. '=
' → logprob: -12.880481719970703

Token 445: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.00861528143286705
    2. ' edge' → logprob: -4.758615493774414
    3. '=edge' → logprob: -14.633615493774414
    4. '   ' → logprob: -16.008615493774414
    5. '(edge' → logprob: -16.008615493774414
    6. 'edges' → logprob: -16.258615493774414
    7. 'cost' → logprob: -18.508615493774414
    8. '
' → logprob: -19.133615493774414
    9. '       ' → logprob: -19.258615493774414
    10. 'x' → logprob: -19.508615493774414

Token 446: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.537868779967539e-06
    2. '[i' → logprob: -12.375008583068848
    3. 'list' → logprob: -13.000008583068848
    4. 'List' → logprob: -13.875008583068848
    5. '[' → logprob: -14.375008583068848
    6. 'ist' → logprob: -16.25000762939453
    7. '```' → logprob: -16.50000762939453
    8. 's' → logprob: -17.37500762939453
    9. 'lst' → logprob: -17.37500762939453
    10. '_LIST' → logprob: -17.50000762939453

Token 447: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4378848391061183e-05
    2. '[' → logprob: -11.250014305114746
    3. '[
' → logprob: -14.875014305114746
    4. '```' → logprob: -14.875014305114746
    5. '[s' → logprob: -15.750014305114746
    6. 'i' → logprob: -15.750014305114746
    7. ' [' → logprob: -16.250015258789062
    8. '   ' → logprob: -16.500015258789062
    9. 's' → logprob: -17.250015258789062
    10. '[j' → logprob: -17.500015258789062

Token 448: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28199779987335205
    2. '][' → logprob: -1.406997799873352
    3. ')[' → logprob: -7.1569976806640625
    4. '   ' → logprob: -10.281997680664062
    5. '0' → logprob: -11.781997680664062
    6. '>[' → logprob: -12.031997680664062
    7. ' ][' → logprob: -12.031997680664062
    8. '
' → logprob: -12.656997680664062
    9. ' [' → logprob: -13.031997680664062
    10. ']' → logprob: -13.281997680664062

Token 449: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -14.125001907348633
    3. '[' → logprob: -14.625001907348633
    4. '
' → logprob: -15.375001907348633
    5. '   ' → logprob: -15.687501907348633
    6. '```' → logprob: -15.687501907348633
    7. '][' → logprob: -16.750001907348633
    8. '1' → logprob: -16.937501907348633
    9. '2' → logprob: -17.000001907348633
    10. '    
' → logprob: -17.437501907348633

Token 450: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22977615892887115
    2. '
' → logprob: -2.10477614402771
    3. '       ' → logprob: -3.10477614402771
    4. ')
' → logprob: -4.104776382446289
    5. '<|end|>' → logprob: -4.229776382446289
    6. ',' → logprob: -5.604776382446289
    7. '<|end|>' → logprob: -7.104776382446289
    8. ']' → logprob: -7.229776382446289
    9. ',
' → logprob: -7.604776382446289
    10. '        
' → logprob: -8.229776382446289

Token 451: '       ' (ID: 309)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.051018375903367996
    2. '       ' → logprob: -3.051018476486206
    3. 'count' → logprob: -7.051018238067627
    4. ' j' → logprob: -7.676018238067627
    5. 'group' → logprob: -8.551018714904785
    6. 'same' → logprob: -8.676018714904785
    7. 'cnt' → logprob: -8.926018714904785
    8. '   ' → logprob: -8.926018714904785
    9. 'edges' → logprob: -9.301018714904785
    10. '        
' → logprob: -10.051018714904785

Token 452: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004071159288287163
    2. 'same' → logprob: -6.254071235656738
    3. '   ' → logprob: -6.379071235656738
    4. '    
' → logprob: -9.379071235656738
    5. 'group' → logprob: -9.504071235656738
    6. 'tmp' → logprob: -9.629071235656738
    7. 'edges' → logprob: -10.129071235656738
    8. 'batch' → logprob: -10.129071235656738
    9. 'start' → logprob: -10.379071235656738
    10. 'idx' → logprob: -11.254071235656738

Token 453: ' collect' (ID: 7916)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0021386018488556147
    2. 'same' → logprob: -6.627138614654541
    3. 'group' → logprob: -8.377138137817383
    4. '#' → logprob: -8.627138137817383
    5. 'tmp' → logprob: -9.127138137817383
    6. '   ' → logprob: -10.127138137817383
    7. 'cnt' → logprob: -10.252138137817383
    8. 'edges' → logprob: -10.252138137817383
    9. 'temp' → logprob: -10.627138137817383
    10. 'start' → logprob: -10.752138137817383

Token 454: ' edges' (ID: 22569)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.017575927078723907
    2. 'same' → logprob: -4.517575740814209
    3. 'edges' → logprob: -5.392575740814209
    4. 'all' → logprob: -7.517575740814209
    5. '   ' → logprob: -7.642575740814209
    6. 'idx' → logprob: -8.642576217651367
    7. 'tmp' → logprob: -8.767576217651367
    8. 'indices' → logprob: -9.142576217651367
    9. ' j' → logprob: -9.142576217651367
    10. 'batch' → logprob: -9.517576217651367

Token 455: ' with' (ID: 483)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.1947025060653687
    2. 'with' → logprob: -1.5697025060653687
    3. 'same' → logprob: -2.319702625274658
    4. '_batch' → logprob: -2.569702625274658
    5. 'at' → logprob: -2.944702625274658
    6. '_same' → logprob: -2.944702625274658
    7. '_at' → logprob: -3.444702625274658
    8. ' =' → logprob: -3.569702625274658
    9. '_of' → logprob: -3.569702625274658
    10. 'batch' → logprob: -3.569702625274658

Token 456: ' this' (ID: 495)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.25795868039131165
    2. 'cost' → logprob: -1.5079586505889893
    3. ' cost' → logprob: -6.132958889007568
    4. 'same' → logprob: -6.507958889007568
    5. ' the' → logprob: -6.632958889007568
    6. 'this' → logprob: -7.507958889007568
    7. 'that' → logprob: -7.757958889007568
    8. 'current' → logprob: -10.88295841217041
    9. '   ' → logprob: -11.25795841217041
    10. ' that' → logprob: -11.38295841217041

Token 457: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.02637775056064129
    2. ' cost' → logprob: -3.6513776779174805
    3. '_cost' → logprob: -10.77637767791748
    4. '==' → logprob: -11.15137767791748
    5. '[' → logprob: -11.40137767791748
    6. 'while' → logprob: -11.52637767791748
    7. '
' → logprob: -12.27637767791748
    8. '```' → logprob: -12.52637767791748
    9. '   ' → logprob: -12.65137767791748
    10. ' ==' → logprob: -12.90137767791748

Token 458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3546663820743561
    2. 'j' → logprob: -1.4796663522720337
    3. 'edges' → logprob: -3.3546664714813232
    4. ' edges' → logprob: -4.354666233062744
    5. ' j' → logprob: -5.104666233062744
    6. '
' → logprob: -5.604666233062744
    7. ',' → logprob: -5.854666233062744
    8. '        
' → logprob: -5.979666233062744
    9. '```' → logprob: -6.479666233062744
    10. ',j' → logprob: -6.479666233062744

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08234646916389465
    2. 'j' → logprob: -2.7073464393615723
    3. '
' → logprob: -5.707346439361572
    4. 'edges' → logprob: -5.957346439361572
    5. '```' → logprob: -6.082346439361572
    6. '        
' → logprob: -6.582346439361572
    7. ' j' → logprob: -7.207346439361572
    8. '   ' → logprob: -7.457346439361572
    9. ' edges' → logprob: -7.957346439361572
    10. ',' → logprob: -7.957346439361572

Token 460: ' same' (ID: 2684)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06959579139947891
    2. 'same' (adapté à ' same') → logprob: -3.5695958137512207
    3. '   ' → logprob: -3.9445958137512207
    4. ' j' → logprob: -4.444595813751221
    5. ' same' → logprob: -6.319595813751221
    6. '       ' → logprob: -6.444595813751221
    7. 'edges' → logprob: -6.694595813751221
    8. 'group' → logprob: -6.819595813751221
    9. 'batch' → logprob: -7.569595813751221
    10. 'tmp' → logprob: -8.194595336914062

Token 461: '_cost' (ID: 36820)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.01868397183716297
    2. '_cost' → logprob: -4.018683910369873
    3. '_' → logprob: -9.393684387207031
    4. '_group' → logprob: -9.518684387207031
    5. 'cost' → logprob: -9.768684387207031
    6. '_batch' → logprob: -9.768684387207031
    7. '_edge' → logprob: -10.143684387207031
    8. '_idx' → logprob: -10.268684387207031
    9. '_indices' → logprob: -10.643684387207031
    10. '_block' → logprob: -10.893684387207031

Token 462: '_edges' (ID: 68870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45018264651298523
    2. '_edges' → logprob: -1.4501826763153076
    3. '=' → logprob: -2.0751826763153076
    4. '=[]' → logprob: -6.4501824378967285
    5. '_indices' → logprob: -8.075182914733887
    6. '=[]
' → logprob: -8.325182914733887
    7. '   ' → logprob: -9.575182914733887
    8. 'edges' → logprob: -9.950182914733887
    9. 's' → logprob: -10.200182914733887
    10. '_idxs' → logprob: -10.325182914733887

Token 463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029844561591744423
    2. ' =' → logprob: -3.5298445224761963
    3. '=[]' → logprob: -9.279844284057617
    4. '[]' → logprob: -15.029844284057617
    5. '=[]
' → logprob: -15.404844284057617
    6. '   ' → logprob: -16.654844284057617
    7. '=[]
' → logprob: -16.904844284057617
    8. ',' → logprob: -17.279844284057617
    9. ']' → logprob: -17.904844284057617
    10. '=[' → logprob: -17.904844284057617

Token 464: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07894278317689896
    2. '[]
' → logprob: -2.5789427757263184
    3. '[' → logprob: -10.453943252563477
    4. '[]

' → logprob: -10.953943252563477
    5. ' []' → logprob: -12.078943252563477
    6. ' []
' → logprob: -14.578943252563477
    7. '[]}' → logprob: -15.578943252563477
    8. '[]"' → logprob: -16.203943252563477
    9. '[
' → logprob: -16.328943252563477
    10. '[])' → logprob: -16.703943252563477

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006849141791462898
    2. 'while' → logprob: -8.00068473815918
    3. ' while' → logprob: -8.12568473815918
    4. '   ' → logprob: -10.62568473815918
    5. '	while' → logprob: -11.37568473815918
    6. ',' → logprob: -11.87568473815918
    7. '        
' → logprob: -12.62568473815918
    8. '	   ' → logprob: -12.87568473815918
    9. '	' → logprob: -13.87568473815918
    10. '<|end|>' → logprob: -14.00068473815918

Token 466: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.03304499387741089
    2. ' while' → logprob: -4.283044815063477
    3. '       ' → logprob: -4.533044815063477
    4. 'j' → logprob: -5.033044815063477
    5. '   ' → logprob: -6.658044815063477
    6. '	while' → logprob: -9.283044815063477
    7. ' j' → logprob: -11.158044815063477
    8. '
' → logprob: -11.408044815063477
    9. '```' → logprob: -11.658044815063477
    10. '        
' → logprob: -11.908044815063477

Token 467: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018154975026845932
    2. ' i' → logprob: -4.018155097961426
    3. '   ' → logprob: -12.268155097961426
    4. ' ' → logprob: -15.893155097961426
    5. '	i' → logprob: -15.893155097961426
    6. '(i' → logprob: -16.14315414428711
    7. '  ' → logprob: -18.14315414428711
    8. 'm' → logprob: -18.39315414428711
    9. '     ' → logprob: -19.51815414428711
    10. ' ' → logprob: -20.26815414428711

Token 468: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7318780422210693
    2. '<m' → logprob: -1.2318780422210693
    3. '<' → logprob: -1.4818780422210693
    4. 'm' → logprob: -10.481878280639648
    5. '<M' → logprob: -12.856878280639648
    6. '<n' → logprob: -12.856878280639648
    7. '[m' → logprob: -13.356878280639648
    8. '[' → logprob: -13.356878280639648
    9. '<len' → logprob: -13.731878280639648
    10. ' ' → logprob: -14.231878280639648

Token 469: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0001234428636962548
    2. ' m' → logprob: -9.000123023986816
    3. '	m' → logprob: -18.250123977661133
    4. '<m' → logprob: -21.000123977661133
    5. '```' → logprob: -21.125123977661133
    6. '   ' → logprob: -21.625123977661133
    7. ')m' → logprob: -21.750123977661133
    8. 'len' → logprob: -22.250123977661133
    9. '_m' → logprob: -22.375123977661133
    10. 'ｍ' → logprob: -22.625123977661133

Token 470: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931481957435608
    2. 'and' → logprob: -0.6931481957435608
    3. ' ' → logprob: -15.193148612976074
    4. ' и' → logprob: -15.318148612976074
    5. '	and' → logprob: -15.318148612976074
    6. '   ' → logprob: -16.068147659301758
    7. '```' → logprob: -17.068147659301758
    8. '0' → logprob: -17.318147659301758
    9. '&&' → logprob: -18.068147659301758
    10. ')' → logprob: -18.568147659301758

Token 471: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.006716913543641567
    2. ' edge' → logprob: -5.006716728210449
    3. '   ' → logprob: -13.75671672821045
    4. '(edge' → logprob: -15.00671672821045
    5. 'edges' → logprob: -16.131717681884766
    6. 'cost' → logprob: -17.256717681884766
    7. ' ' → logprob: -18.131717681884766
    8. '       ' → logprob: -18.756717681884766
    9. '=edge' → logprob: -18.756717681884766
    10. 'x' → logprob: -18.881717681884766

Token 472: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.981667537620524e-06
    2. '[i' → logprob: -13.375001907348633
    3. 'List' → logprob: -15.500001907348633
    4. 'list' → logprob: -15.875001907348633
    5. '_LIST' → logprob: -18.625001907348633
    6. '_List' → logprob: -19.375001907348633
    7. '```' → logprob: -19.500001907348633
    8. '[' → logprob: -19.875001907348633
    9. '-list' → logprob: -20.125001907348633
    10. '_array' → logprob: -20.125001907348633

Token 473: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.500000953674316
    3. '```' → logprob: -16.25
    4. '[
' → logprob: -16.75
    5. ')[' → logprob: -17.125
    6. ' [' → logprob: -17.625
    7. '
' → logprob: -18.625
    8. '[j' → logprob: -18.75
    9. '[I' → logprob: -18.75
    10. '[s' → logprob: -19.625

Token 474: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07158464938402176
    2. '][' → logprob: -2.696584701538086
    3. ')[' → logprob: -6.446584701538086
    4. '[i' → logprob: -11.071584701538086
    5. '>[' → logprob: -11.571584701538086
    6. ' [' → logprob: -11.571584701538086
    7. '```' → logprob: -12.321584701538086
    8. '}[' → logprob: -12.696584701538086
    9. '   ' → logprob: -12.696584701538086
    10. ' ][' → logprob: -12.821584701538086

Token 475: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001029471677611582
    2. '[' → logprob: -9.875102996826172
    3. 'cost' → logprob: -10.750102996826172
    4. ' ' → logprob: -11.125102996826172
    5. '
' → logprob: -11.875102996826172
    6. '   ' → logprob: -13.500102996826172
    7. '][' → logprob: -13.500102996826172
    8. '```' → logprob: -13.750102996826172
    9. ' cost' → logprob: -14.125102996826172
    10. '    
' → logprob: -14.812602996826172

Token 476: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1272948980331421
    2. '==' → logprob: -2.1272950172424316
    3. ']==' → logprob: -8.502294540405273
    4. ')==' → logprob: -9.002294540405273
    5. ')' → logprob: -10.877294540405273
    6. '[' → logprob: -11.752294540405273
    7. '=' → logprob: -12.502294540405273
    8. ']' → logprob: -12.627294540405273
    9. '===' → logprob: -12.877294540405273
    10. '==
' → logprob: -13.377294540405273

Token 477: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.061980124562978745
    2. ' ==' → logprob: -2.8119800090789795
    3. '=' → logprob: -12.561980247497559
    4. '==
' → logprob: -12.811980247497559
    5. '===' → logprob: -12.936980247497559
    6. ')==' → logprob: -13.311980247497559
    7. ']==' → logprob: -13.561980247497559
    8. '[' → logprob: -14.561980247497559
    9. '<=' → logprob: -15.561980247497559
    10. '()==' → logprob: -16.561979293823242

Token 478: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.07888989895582199
    2. ' cost' → logprob: -2.578889846801758
    3. '   ' → logprob: -16.703889846801758
    4. '(cost' → logprob: -16.703889846801758
    5. 'Cost' → logprob: -17.953889846801758
    6. ' ' → logprob: -18.453889846801758
    7. '_cost' → logprob: -18.453889846801758
    8. 'c' → logprob: -18.453889846801758
    9. '
' → logprob: -18.828889846801758
    10. '```' → logprob: -18.828889846801758

Token 479: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12921415269374847
    2. ':' → logprob: -2.87921404838562
    3. '       ' → logprob: -3.12921404838562
    4. 'same' → logprob: -5.129214286804199
    5. '):
' → logprob: -5.129214286804199
    6. ' and' → logprob: -5.629214286804199
    7. '           ' → logprob: -6.129214286804199
    8. ',' → logprob: -6.254214286804199
    9. ' same' → logprob: -6.879214286804199
    10. ')' → logprob: -8.5042142868042

Token 480: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5611616969108582
    2. 'same' → logprob: -1.186161756515503
    3. ' same' → logprob: -2.311161756515503
    4. '           ' → logprob: -3.811161756515503
    5. '```' → logprob: -7.311161518096924
    6. '
' → logprob: -7.811161518096924
    7. '   ' → logprob: -8.061161994934082
    8. ',' → logprob: -8.436161994934082
    9. '	' → logprob: -8.436161994934082
    10. '	s' → logprob: -8.686161994934082

Token 481: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' (adapté à ' same') → logprob: -0.16250833868980408
    2. ' same' → logprob: -1.9125083684921265
    3. '           ' → logprob: -6.162508487701416
    4. '   ' → logprob: -9.537508010864258
    5. 'cost' → logprob: -10.287508010864258
    6. '       ' → logprob: -11.287508010864258
    7. ' _,' → logprob: -11.662508010864258
    8. ' cost' → logprob: -11.912508010864258
    9. '```' → logprob: -12.037508010864258
    10. '_,' → logprob: -12.037508010864258

Token 482: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.2842308680992573e-05
    2. 'cost' → logprob: -10.750022888183594
    3. '_code' → logprob: -15.250022888183594
    4. 'Cost' → logprob: -15.750022888183594
    5. '```' → logprob: -15.750022888183594
    6. ' cost' → logprob: -16.250022888183594
    7. '-cost' → logprob: -16.625022888183594
    8. '_edges' → logprob: -16.625022888183594
    9. '_COST' → logprob: -16.750022888183594
    10. '_count' → logprob: -16.750022888183594

Token 483: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0015204569790512323
    2. 'edges' → logprob: -6.50152063369751
    3. 'Edges' → logprob: -12.001520156860352
    4. 's' → logprob: -12.626520156860352
    5. 'cost' → logprob: -13.001520156860352
    6. '```' → logprob: -13.501520156860352
    7. ' edges' → logprob: -14.001520156860352
    8. '   ' → logprob: -14.126520156860352
    9. 'edge' → logprob: -14.376520156860352
    10. '=' → logprob: -15.001520156860352

Token 484: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011075885966420174
    2. '.' → logprob: -4.511075973510742
    3. ' .' → logprob: -11.386075973510742
    4. 'append' → logprob: -11.761075973510742
    5. ').' → logprob: -12.386075973510742
    6. '].' → logprob: -13.386075973510742
    7. '.app' → logprob: -13.511075973510742
    8. '=' → logprob: -14.886075973510742
    9. '.Append' → logprob: -14.886075973510742
    10. '​.' → logprob: -15.511075973510742

Token 485: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.004385963547974825
    2. '((' → logprob: -5.504385948181152
    3. '(' → logprob: -8.254385948181152
    4. 'edge' → logprob: -10.004385948181152
    5. ' edge' → logprob: -14.504385948181152
    6. '=edge' → logprob: -14.754385948181152
    7. ' (' → logprob: -14.879385948181152
    8. '(
' → logprob: -15.129385948181152
    9. '(tuple' → logprob: -15.379385948181152
    10. '(edges' → logprob: -15.754385948181152

Token 486: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0003954033018089831
    2. '[i' → logprob: -7.87539529800415
    3. 'list' → logprob: -11.750395774841309
    4. '(i' → logprob: -12.250395774841309
    5. 'List' → logprob: -13.625395774841309
    6. 's' → logprob: -14.250395774841309
    7. '[' → logprob: -15.250395774841309
    8. '
' → logprob: -16.125394821166992
    9. '[(' → logprob: -16.875394821166992
    10. '[_' → logprob: -17.000394821166992

Token 487: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010328839533030987
    2. '_list' → logprob: -4.635328769683838
    3. '][' → logprob: -8.260329246520996
    4. 'ist' → logprob: -8.760329246520996
    5. ')[' → logprob: -10.385329246520996
    6. 's' → logprob: -10.635329246520996
    7. '(i' → logprob: -10.635329246520996
    8. '
' → logprob: -11.135329246520996
    9. ']' → logprob: -11.635329246520996
    10. '[' → logprob: -11.885329246520996

Token 488: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.021261386573314667
    2. '])
' → logprob: -4.021261215209961
    3. ')' → logprob: -6.146261215209961
    4. ']' → logprob: -8.396261215209961
    5. ')])' → logprob: -8.646261215209961
    6. ')
' → logprob: -9.021261215209961
    7. ')]' → logprob: -9.021261215209961
    8. '[i' → logprob: -9.646261215209961
    9. '][' → logprob: -9.771261215209961
    10. '])
' → logprob: -10.521261215209961

Token 489: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013859997503459454
    2. '       ' → logprob: -4.88886022567749
    3. 'i' → logprob: -5.38886022567749
    4. '   ' → logprob: -7.01386022567749
    5. ' i' → logprob: -8.013859748840332
    6. '
' → logprob: -8.888859748840332
    7. ',' → logprob: -9.263859748840332
    8. '```' → logprob: -9.888859748840332
    9. ',i' → logprob: -10.013859748840332
    10. '[i' → logprob: -10.638859748840332

Token 490: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0008285674848593771
    2. ' i' → logprob: -7.750828742980957
    3. '           ' → logprob: -7.875828742980957
    4. '       ' → logprob: -11.500828742980957
    5. '   ' → logprob: -12.125828742980957
    6. '
' → logprob: -13.250828742980957
    7. '               ' → logprob: -15.375828742980957
    8. '	i' → logprob: -15.500828742980957
    9. '```' → logprob: -15.875828742980957
    10. '{i' → logprob: -17.62582778930664

Token 491: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03285225108265877
    2. ' +=' → logprob: -3.6578521728515625
    3. '+' → logprob: -5.0328521728515625
    4. ']+=' → logprob: -12.407852172851562
    5. '[' → logprob: -13.407852172851562
    6. ' +' → logprob: -13.532852172851562
    7. '=' → logprob: -14.032852172851562
    8. ')' → logprob: -14.407852172851562
    9. '```' → logprob: -14.532852172851562
    10. '   ' → logprob: -14.782852172851562

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -20.125
    4. '   ' → logprob: -21.625
    5. '۱' → logprob: -22.5
    6. '１' → logprob: -23.125
    7. '0' → logprob: -23.1875
    8. '  ' → logprob: -23.4375
    9. '
' → logprob: -23.5
    10. '`' → logprob: -24.375

Token 493: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9267984628677368
    2. '
' → logprob: -1.0517984628677368
    3. '   ' → logprob: -2.3017983436584473
    4. '```' → logprob: -2.4267983436584473
    5. '        
' → logprob: -4.176798343658447
    6. '  
' → logprob: -4.551798343658447
    7. '    
' → logprob: -5.051798343658447
    8. '#' → logprob: -5.176798343658447
    9. ' 
' → logprob: -5.676798343658447
    10. 'from' → logprob: -5.801798343658447

Token 494: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6612098813056946
    2. 'from' → logprob: -1.6612098217010498
    3. '#' → logprob: -2.41120982170105
    4. 'import' → logprob: -3.28620982170105
    5. 'components' → logprob: -3.28620982170105
    6. ' from' → logprob: -3.78620982170105
    7. '```' → logprob: -4.036210060119629
    8. 'union' → logprob: -4.411210060119629
    9. 'comp' → logprob: -4.661210060119629
    10. 'component' → logprob: -4.661210060119629

Token 495: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.4920694828033447
    2. 'components' → logprob: -1.6170694828033447
    3. '#' (adapté à ' #') → logprob: -1.7420694828033447
    4. 'comp' → logprob: -1.8670694828033447
    5. 'nodes' → logprob: -2.3670694828033447
    6. 'component' → logprob: -2.6170694828033447
    7. 'roots' → logprob: -3.7420694828033447
    8. 'group' → logprob: -4.492069244384766
    9. 'import' → logprob: -4.992069244384766
    10. 'uf' → logprob: -5.117069244384766

Token 496: ' find' (ID: 1646)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.9513875246047974
    2. 'comp' → logprob: -1.8263875246047974
    3. 'component' → logprob: -2.201387405395508
    4. '#' → logprob: -2.326387405395508
    5. 'from' → logprob: -2.826387405395508
    6. 'roots' → logprob: -3.201387405395508
    7. 'nodes' → logprob: -3.326387405395508
    8. 'uf' → logprob: -3.826387405395508
    9. 'group' → logprob: -3.826387405395508
    10. 'groups' → logprob: -4.201387405395508

Token 497: ' connected' (ID: 12079)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.2863340973854065
    2. 'component' → logprob: -2.9113340377807617
    3. 'edges' → logprob: -3.2863340377807617
    4. 'connections' → logprob: -3.9113340377807617
    5. '#' → logprob: -4.036334037780762
    6. 'union' → logprob: -4.161334037780762
    7. 'connected' → logprob: -4.161334037780762
    8. 'comp' → logprob: -4.161334037780762
    9. 'cycles' → logprob: -4.661334037780762
    10. 'all' → logprob: -4.786334037780762

Token 498: ' components' (ID: 10674)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.03458881005644798
    2. 'components' → logprob: -3.5345888137817383
    3. '_nodes' → logprob: -5.659588813781738
    4. '_edges' → logprob: -7.159588813781738
    5. ' components' → logprob: -8.284588813781738
    6. '_component' → logprob: -9.034588813781738
    7. '_sets' → logprob: -9.534588813781738
    8. 'component' → logprob: -10.409588813781738
    9. '_com' → logprob: -10.534588813781738
    10. 'com' → logprob: -11.409588813781738

Token 499: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03243526816368103
    2. 'components' → logprob: -5.032435417175293
    3. '        
' → logprob: -5.157435417175293
    4. ' in' → logprob: -5.282435417175293
    5. ' and' → logprob: -6.282435417175293
    6. ' components' → logprob: -6.657435417175293
    7. 'comp' → logprob: -6.782435417175293
    8. ' for' → logprob: -6.782435417175293
    9. 'component' → logprob: -7.157435417175293
    10. 'for' → logprob: -7.282435417175293

Token 500: ' current' (ID: 2208)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.7495189905166626
    2. 'same' → logprob: -1.6245189905166626
    3. '[]' → logprob: -2.249518871307373
    4. 'the' → logprob: -2.374518871307373
    5. 'parent' → logprob: -2.624518871307373
    6. 'union' → logprob: -4.624518871307373
    7. '{' → logprob: -5.124518871307373
    8. '[parent' → logprob: -5.249518871307373
    9. '[]
' → logprob: -5.499518871307373
    10. 'set' → logprob: -5.624518871307373

Token 501: ' MST' (ID: 123058)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -1.2192456722259521
    2. ' edges' → logprob: -1.7192456722259521
    3. 'parent' → logprob: -2.094245672225952
    4. 'edges' → logprob: -2.344245672225952
    5. 'union' → logprob: -2.469245672225952
    6. 'graph' → logprob: -2.719245672225952
    7. ' graph' → logprob: -3.719245672225952
    8. ' same' → logprob: -3.719245672225952
    9. '#' → logprob: -3.844245672225952
    10. ' parent' → logprob: -4.094245910644531

Token 502: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08693082630634308
    2. 'components' → logprob: -3.211930751800537
    3. '        
' → logprob: -4.586930751800537
    4. ' components' → logprob: -4.961930751800537
    5. 'nodes' → logprob: -5.961930751800537
    6. ',' → logprob: -5.961930751800537
    7. '```' → logprob: -6.211930751800537
    8. ' and' → logprob: -6.586930751800537
    9. '<|end|>' → logprob: -6.586930751800537
    10. '
' → logprob: -6.836930751800537

Token 503: ' considering' (ID: 17227)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.36690840125083923
    2. 'parent' → logprob: -2.491908311843872
    3. 'using' → logprob: -2.991908311843872
    4. 'the' → logprob: -3.866908311843872
    5. '[]' → logprob: -3.866908311843872
    6. 'checking' → logprob: -4.241908550262451
    7. 'dis' → logprob: -4.366908550262451
    8. 'a' → logprob: -4.866908550262451
    9. 'finding' → logprob: -4.866908550262451
    10. 'temporary' → logprob: -5.116908550262451

Token 504: ' only' (ID: 1606)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.400053471326828
    2. 'edges' → logprob: -2.9000535011291504
    3. 'ways' → logprob: -3.0250535011291504
    4. ' edges' → logprob: -3.1500535011291504
    5. 'only' → logprob: -3.5250535011291504
    6. 'the' → logprob: -3.5250535011291504
    7. 'parent' → logprob: -3.6500535011291504
    8. 'union' → logprob: -3.6500535011291504
    9. '[parent' → logprob: -4.15005350112915
    10. '[' → logprob: -4.65005350112915

Token 505: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.077453851699829
    2. 'union' → logprob: -1.452453851699829
    3. ' edges' → logprob: -1.702453851699829
    4. 'same' → logprob: -2.077453851699829
    5. 'ways' → logprob: -3.077453851699829
    6. 'parent' → logprob: -3.827453851699829
    7. '[parent' → logprob: -4.45245361328125
    8. 'the' → logprob: -4.82745361328125
    9. ' union' → logprob: -4.82745361328125
    10. '[' → logprob: -5.32745361328125

Token 506: ' with' (ID: 483)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -1.3355776071548462
    2. ' that' → logprob: -1.4605776071548462
    3. '       ' → logprob: -2.2105774879455566
    4. 'with' → logprob: -2.4605774879455566
    5. 'not' → logprob: -2.7105774879455566
    6. 'already' → logprob: -2.9605774879455566
    7. '<|end|>' → logprob: -3.0855774879455566
    8. 'in' → logprob: -3.0855774879455566
    9. 'from' → logprob: -3.8355774879455566
    10. ' in' → logprob: -4.210577487945557

Token 507: ' smaller' (ID: 13679)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.01994762010872364
    2. 'ways' → logprob: -4.894947528839111
    3. 'union' → logprob: -5.644947528839111
    4. 'parent' → logprob: -6.269947528839111
    5. 'the' → logprob: -6.394947528839111
    6. 'same' → logprob: -6.769947528839111
    7. '```' → logprob: -7.019947528839111
    8. ' cost' → logprob: -7.144947528839111
    9. 'parents' → logprob: -7.519947528839111
    10. 'this' → logprob: -8.39494800567627

Token 508: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.000785091076977551
    2. ' cost' → logprob: -7.750784873962402
    3. ' costs' → logprob: -8.500784873962402
    4. 'weights' → logprob: -9.375784873962402
    5. 'weight' → logprob: -10.125784873962402
    6. '```' → logprob: -11.250784873962402
    7. '   ' → logprob: -12.625784873962402
    8. 'edges' → logprob: -13.125784873962402
    9. 'than' → logprob: -13.500784873962402
    10. '_cost' → logprob: -13.500784873962402

Token 509: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011332867667078972
    2. '        
' → logprob: -5.136332988739014
    3. '<|end|>' → logprob: -5.761332988739014
    4. ',' → logprob: -7.886332988739014
    5. '
' → logprob: -8.011332511901855
    6. 'parent' → logprob: -8.511332511901855
    7. '   ' → logprob: -8.636332511901855
    8. ' and' → logprob: -9.011332511901855
    9. '```' → logprob: -9.011332511901855
    10. 'components' → logprob: -9.136332511901855

Token 510: 'already' (ID: 89136)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007907193154096603
    2. ' )' → logprob: -6.007907390594482
    3. '       ' → logprob: -6.507907390594482
    4. ')
' → logprob: -7.257907390594482
    5. 'parent' → logprob: -7.382907390594482
    6. '   ' → logprob: -7.632907390594482
    7. ' and' → logprob: -7.757907390594482
    8. 'and' → logprob: -8.007906913757324
    9. '```' → logprob: -8.882906913757324
    10. ' parent' → logprob: -9.007906913757324

Token 511: ' united' (ID: 41799)
  Prédit: 'processed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'processed' → logprob: -0.7644299268722534
    2. 'union' → logprob: -1.1394299268722534
    3. 'un' → logprob: -2.264430046081543
    4. 'added' → logprob: -3.014430046081543
    5. 'used' → logprob: -3.889430046081543
    6. 'merged' → logprob: -4.014430046081543
    7. 'included' → logprob: -4.264430046081543
    8. 'connected' → logprob: -5.514430046081543
    9. 'joined' → logprob: -5.889430046081543
    10. 'chosen' → logprob: -7.889430046081543

Token 512: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033793572802096605
    2. 'parent' → logprob: -7.2533793449401855
    3. ' at' → logprob: -7.7533793449401855
    4. 'components' → logprob: -7.8783793449401855
    5. 'parents' → logprob: -8.378379821777344
    6. '   ' → logprob: -8.628379821777344
    7. 'in' → logprob: -8.753379821777344
    8. ' components' → logprob: -8.878379821777344
    9. 'edges' → logprob: -9.128379821777344
    10. 'nodes' → logprob: -9.128379821777344

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041272617876529694
    2. 'components' → logprob: -3.7912726402282715
    3. '        
' → logprob: -5.4162726402282715
    4. '   ' → logprob: -5.7912726402282715
    5. '```' → logprob: -6.2912726402282715
    6. ' components' → logprob: -6.4162726402282715
    7. 'comp' → logprob: -7.0412726402282715
    8. 'roots' → logprob: -7.0412726402282715
    9. 'component' → logprob: -7.5412726402282715
    10. 'nodes' → logprob: -7.6662726402282715

Token 514: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07248865813016891
    2. '        
' → logprob: -4.572488784790039
    3. 'components' → logprob: -4.572488784790039
    4. ' components' → logprob: -4.572488784790039
    5. 'from' → logprob: -5.072488784790039
    6. ' from' → logprob: -5.072488784790039
    7. ' comp' → logprob: -5.572488784790039
    8. '   ' → logprob: -5.822488784790039
    9. 'comp' → logprob: -5.822488784790039
    10. '```' → logprob: -6.197488784790039

Token 515: ' for' (ID: 395)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.1075496673583984
    2. '       ' → logprob: -1.3575496673583984
    3. 'components' → logprob: -2.1075496673583984
    4. 'from' → logprob: -2.4825496673583984
    5. 'component' → logprob: -3.2325496673583984
    6. '#' → logprob: -3.8575496673583984
    7. '   ' → logprob: -3.8575496673583984
    8. ' comp' → logprob: -4.232549667358398
    9. 'uf' → logprob: -4.357549667358398
    10. ' comps' → logprob: -4.357549667358398

Token 516: ' counting' (ID: 43276)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.8480989933013916
    2. 'e' → logprob: -1.7230989933013916
    3. 'each' → logprob: -1.8480989933013916
    4. 'u' → logprob: -2.2230989933013916
    5. ' edge' → logprob: -3.0980989933013916
    6. ' each' → logprob: -4.2230987548828125
    7. ' u' → logprob: -4.5980987548828125
    8. 'x' → logprob: -4.8480987548828125
    9. ' e' → logprob: -4.9730987548828125
    10. ' comp' → logprob: -5.3480987548828125

Token 517: ' number' (ID: 2086)
  Prédit: ' comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comp' → logprob: -1.4186309576034546
    2. 'components' → logprob: -1.4186309576034546
    3. 'comp' → logprob: -1.6686309576034546
    4. 'component' → logprob: -2.043631076812744
    5. 'uf' → logprob: -3.668631076812744
    6. 'cc' → logprob: -3.668631076812744
    7. '   ' → logprob: -3.918631076812744
    8. ' comps' → logprob: -3.918631076812744
    9. ' uf' → logprob: -4.043631076812744
    10. ' components' → logprob: -4.168631076812744

Token 518: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.7484948635101318
    2. 'of' → logprob: -1.1234948635101318
    3. '   ' → logprob: -2.998494863510132
    4. ' of' → logprob: -3.373494863510132
    5. '       ' → logprob: -3.498494863510132
    6. ' =' → logprob: -3.998494863510132
    7. '_' → logprob: -4.123495101928711
    8. '_components' → logprob: -4.123495101928711
    9. '_union' → logprob: -5.123495101928711
    10. '=' → logprob: -5.498495101928711

Token 519: ' MST' (ID: 123058)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.01581321656703949
    2. 'components' → logprob: -4.89081335067749
    3. ' ways' → logprob: -5.64081335067749
    4. 'possible' → logprob: -7.01581335067749
    5. 'edges' → logprob: -7.76581335067749
    6. 'sp' → logprob: -7.76581335067749
    7. 'connected' → logprob: -7.76581335067749
    8. 'union' → logprob: -7.89081335067749
    9. 'mst' → logprob: -7.89081335067749
    10. 'sets' → logprob: -8.140812873840332

Token 520: 's' (ID: 82)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04798932000994682
    2. '   ' → logprob: -4.297989368438721
    3. '        
' → logprob: -4.422989368438721
    4. '
' → logprob: -5.297989368438721
    5. '```' → logprob: -5.422989368438721
    6. 'components' → logprob: -6.297989368438721
    7. ',' → logprob: -6.547989368438721
    8. '  
' → logprob: -6.922989368438721
    9. 'from' → logprob: -7.047989368438721
    10. '    
' → logprob: -7.297989368438721

Token 521: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020058751106262207
    2. '        
' → logprob: -4.145058631896973
    3. '
' → logprob: -6.395058631896973
    4. 'components' → logprob: -7.520058631896973
    5. 'from' → logprob: -8.020058631896973
    6. '<|end|>' → logprob: -8.020058631896973
    7. '```' → logprob: -8.645058631896973
    8. ',' → logprob: -8.895058631896973
    9. '  
' → logprob: -9.020058631896973
    10. '   ' → logprob: -9.145058631896973

Token 522: ' handle' (ID: 5318)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6014358401298523
    2. 'component' → logprob: -1.976435899734497
    3. 'components' → logprob: -2.726435899734497
    4. '#' → logprob: -3.101435899734497
    5. 'nodes' → logprob: -3.351435899734497
    6. 'temp' → logprob: -3.601435899734497
    7. 'roots' → logprob: -3.851435899734497
    8. 'group' → logprob: -3.976435899734497
    9. 'uf' → logprob: -4.101435661315918
    10. ' comp' → logprob: -4.101435661315918

Token 523: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.1400141716003418
    2. ' the' → logprob: -2.140014171600342
    3. 'the' → logprob: -2.515014171600342
    4. ' ways' → logprob: -2.640014171600342
    5. 'same' → logprob: -2.765014171600342
    6. 'union' → logprob: -2.890014171600342
    7. 'components' → logprob: -3.265014171600342
    8. 'ways' → logprob: -3.640014171600342
    9. ' components' → logprob: -3.640014171600342
    10. ' union' → logprob: -3.765014171600342

Token 524: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.468154639005661
    2. '=' → logprob: -2.3431546688079834
    3. '_in' → logprob: -3.0931546688079834
    4. 'in' → logprob: -3.4681546688079834
    5. ' =' → logprob: -3.4681546688079834
    6. ' with' → logprob: -3.8431546688079834
    7. '_with' → logprob: -3.9681546688079834
    8. '_to' → logprob: -4.093154430389404
    9. 'of' → logprob: -4.218154430389404
    10. '   ' → logprob: -4.218154430389404

Token 525: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.42075058817863464
    2. 'same' → logprob: -1.670750617980957
    3. 'this' → logprob: -2.545750617980957
    4. 'equal' → logprob: -3.670750617980957
    5. ' the' → logprob: -3.920750617980957
    6. 'cost' → logprob: -4.295750617980957
    7. ' this' → logprob: -4.920750617980957
    8. ' equal' → logprob: -5.295750617980957
    9. 'current' → logprob: -6.170750617980957
    10. ' same' → logprob: -6.295750617980957

Token 526: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.25256842374801636
    2. ' cost' → logprob: -1.5025684833526611
    3. '_cost' → logprob: -7.877568244934082
    4. '-cost' → logprob: -9.627568244934082
    5. ' costs' → logprob: -10.252568244934082
    6. '   ' → logprob: -10.377568244934082
    7. '
' → logprob: -10.377568244934082
    8. '```' → logprob: -11.002568244934082
    9. 'component' → logprob: -11.565068244934082
    10. 'weight' → logprob: -11.752568244934082

Token 527: ' together' (ID: 4717)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15501120686531067
    2. '        
' → logprob: -2.6550111770629883
    3. '
' → logprob: -3.0300111770629883
    4. '<|end|>' → logprob: -4.655011177062988
    5. 'components' → logprob: -5.655011177062988
    6. 'from' → logprob: -6.280011177062988
    7. '  
' → logprob: -6.280011177062988
    8. '```' → logprob: -6.780011177062988
    9. '   ' → logprob: -7.155011177062988
    10. ',' → logprob: -7.155011177062988

Token 528: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06666192412376404
    2. '        
' → logprob: -3.191661834716797
    3. '
' → logprob: -4.941661834716797
    4. 'components' → logprob: -5.566661834716797
    5. '<|end|>' → logprob: -6.066661834716797
    6. 'from' → logprob: -6.191661834716797
    7. '  
' → logprob: -6.691661834716797
    8. '```' → logprob: -7.066661834716797
    9. ' components' → logprob: -7.191661834716797
    10. '   ' → logprob: -7.316661834716797

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09984587132930756
    2. '```' → logprob: -3.4748458862304688
    3. '        
' → logprob: -3.9748458862304688
    4. '
' → logprob: -4.224845886230469
    5. 'from' → logprob: -4.724845886230469
    6. 'components' → logprob: -4.849845886230469
    7. ' from' → logprob: -5.724845886230469
    8. ' components' → logprob: -6.224845886230469
    9. '  
' → logprob: -6.349845886230469
    10. '<|end|>' → logprob: -6.599845886230469

Token 530: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -1.3659324645996094
    2. 'from' → logprob: -1.6159324645996094
    3. '       ' → logprob: -1.7409324645996094
    4. 'components' → logprob: -1.9909324645996094
    5. 'roots' → logprob: -3.1159324645996094
    6. 'component' → logprob: -3.3659324645996094
    7. 'nodes' → logprob: -3.3659324645996094
    8. '#' → logprob: -3.7409324645996094
    9. 'group' → logprob: -3.8659324645996094
    10. 'groups' → logprob: -4.115932464599609

Token 531: '_repr' (ID: 193246)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20078040659427643
    2. '_map' → logprob: -2.9507803916931152
    3. 'on' → logprob: -3.5757803916931152
    4. '_nodes' → logprob: -3.7007803916931152
    5. 'onent' → logprob: -4.575780391693115
    6. '_sets' → logprob: -4.700780391693115
    7. '_parent' → logprob: -4.700780391693115
    8. '_ro' → logprob: -4.825780391693115
    9. '_ids' → logprob: -4.950780391693115
    10. '_par' → logprob: -5.075780391693115

Token 532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4738219380378723
    2. '=' → logprob: -1.4738218784332275
    3. 's' → logprob: -2.0988218784332275
    4. 'resent' → logprob: -4.598822116851807
    5. 'sent' → logprob: -4.723822116851807
    6. 'ent' → logprob: -6.223822116851807
    7. 'esent' → logprob: -6.723822116851807
    8. '=[]' → logprob: -7.223822116851807
    9. '   ' → logprob: -7.473822116851807
    10. '=set' → logprob: -7.848822116851807

Token 533: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0026103791315108538
    2. 'set' → logprob: -6.002610206604004
    3. '{}
' → logprob: -9.127610206604004
    4. 'dict' → logprob: -11.127610206604004
    5. '{' → logprob: -12.127610206604004
    6. ' {}' → logprob: -13.252610206604004
    7. '[]' → logprob: -13.252610206604004
    8. 'default' → logprob: -14.127610206604004
    9. '{}

' → logprob: -14.252610206604004
    10. '{})' → logprob: -14.627610206604004

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005787058267742395
    2. ' for' → logprob: -7.005786895751953
    3. '<|end|>' → logprob: -7.005786895751953
    4. '
' → logprob: -7.255786895751953
    5. 'for' → logprob: -7.380786895751953
    6. '   ' → logprob: -7.380786895751953
    7. '        
' → logprob: -7.630786895751953
    8. 'components' → logprob: -8.130786895751953
    9. 'comp' → logprob: -8.380786895751953
    10. 'nodes' → logprob: -8.880786895751953

Token 535: ' comp' (ID: 1050)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2556469738483429
    2. 'comp' (adapté à ' comp') → logprob: -1.8806469440460205
    3. 'idx' → logprob: -3.2556469440460205
    4. ' for' → logprob: -5.0056471824646
    5. 'nodes' → logprob: -5.1306471824646
    6. 'index' → logprob: -5.2556471824646
    7. 'rep' → logprob: -5.3806471824646
    8. 'node' → logprob: -6.2556471824646
    9. ' comp' → logprob: -7.0056471824646
    10. 'repr' → logprob: -7.0056471824646

Token 536: '_list' (ID: 4162)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parent' → logprob: -1.1494624614715576
    2. '_repr' → logprob: -1.5244624614715576
    3. '_par' → logprob: -2.2744624614715576
    4. '_id' → logprob: -2.3994624614715576
    5. ' =' → logprob: -2.5244624614715576
    6. '_nodes' → logprob: -3.0244624614715576
    7. '=' → logprob: -3.2744624614715576
    8. 'parent' → logprob: -3.8994624614715576
    9. '_to' → logprob: -4.399462699890137
    10. '_map' → logprob: -4.524462699890137

Token 537: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.525631308555603
    2. '=' → logprob: -0.900631308555603
    3. '=[]' → logprob: -6.275631427764893
    4. ',' → logprob: -8.775630950927734
    5. ')' → logprob: -8.900630950927734
    6. '[]' → logprob: -9.150630950927734
    7. '=[]
' → logprob: -9.400630950927734
    8. '   ' → logprob: -10.525630950927734
    9. '<|end|>' → logprob: -10.525630950927734
    10. '={}' → logprob: -11.025630950927734

Token 538: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.013174586929380894
    2. 'set' → logprob: -4.513174533843994
    3. '[]
' → logprob: -6.263174533843994
    4. ' []' → logprob: -9.263175010681152
    5. '{}' → logprob: -9.388175010681152
    6. ' set' → logprob: -10.888175010681152
    7. '[]}' → logprob: -11.888175010681152
    8. '[]

' → logprob: -12.013175010681152
    9. 'list' → logprob: -12.388175010681152
    10. '[' → logprob: -12.763175010681152

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01977979950606823
    2. 'for' → logprob: -4.519779682159424
    3. ' for' → logprob: -5.019779682159424
    4. '        
' → logprob: -7.519779682159424
    5. '```' → logprob: -8.269780158996582
    6. ')' → logprob: -8.769780158996582
    7. '   ' → logprob: -8.769780158996582
    8. '<|end|>' → logprob: -8.894780158996582
    9. ',' → logprob: -9.144780158996582
    10. 'parent' → logprob: -9.144780158996582

Token 540: ' id' (ID: 1211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06629873812198639
    2. '       ' → logprob: -2.941298723220825
    3. ' for' → logprob: -5.441298961639404
    4. 'nodes' → logprob: -5.816298961639404
    5. 'comp' → logprob: -6.316298961639404
    6. 'node' → logprob: -7.441298961639404
    7. 'roots' → logprob: -8.191298484802246
    8. '   ' → logprob: -8.566298484802246
    9. 'temp' → logprob: -8.941298484802246
    10. 'parents' → logprob: -9.316298484802246

Token 541: '_map' (ID: 11824)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25874024629592896
    2. '_map' → logprob: -1.5087401866912842
    3. '_counter' → logprob: -5.383740425109863
    4. '_' → logprob: -7.383740425109863
    5. ' =' → logprob: -7.633740425109863
    6. 'map' → logprob: -8.133740425109863
    7. '_set' → logprob: -8.758740425109863
    8. '=' → logprob: -8.883740425109863
    9. 's' → logprob: -9.008740425109863
    10. '_mapping' → logprob: -9.133740425109863

Token 542: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42878809571266174
    2. ' =' → logprob: -1.0537880659103394
    3. '={}' → logprob: -9.553788185119629
    4. '   ' → logprob: -12.678788185119629
    5. '{}' → logprob: -13.428788185119629
    6. ',' → logprob: -13.428788185119629
    7. '{' → logprob: -13.553788185119629
    8. '[' → logprob: -13.553788185119629
    9. '<|end|>' → logprob: -13.553788185119629
    10. '={}
' → logprob: -13.678788185119629

Token 543: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.000158842682139948
    2. '{}
' → logprob: -8.75015926361084
    3. '{}

' → logprob: -15.37515926361084
    4. 'dict' → logprob: -16.500158309936523
    5. '{' → logprob: -18.000158309936523
    6. '{})' → logprob: -19.000158309936523
    7. '{},' → logprob: -19.125158309936523
    8. ' {}' → logprob: -19.375158309936523
    9. '[]' → logprob: -19.500158309936523
    10. '{}\' → logprob: -20.125158309936523

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009175926446914673
    2. ' idx' → logprob: -6.259175777435303
    3. 'idx' → logprob: -6.634175777435303
    4. ' for' → logprob: -6.759175777435303
    5. '        
' → logprob: -7.134175777435303
    6. '   ' → logprob: -7.384175777435303
    7. '
' → logprob: -7.509175777435303
    8. 'for' → logprob: -7.884175777435303
    9. 'index' → logprob: -8.009176254272461
    10. ' index' → logprob: -8.634176254272461

Token 545: ' id' (ID: 1211)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.51297527551651
    2. 'comp' → logprob: -2.2629752159118652
    3. ' idx' → logprob: -2.5129752159118652
    4. '       ' → logprob: -2.8879752159118652
    5. 'cnt' → logprob: -3.0129752159118652
    6. 'index' → logprob: -3.5129752159118652
    7. ' comp' → logprob: -3.8879752159118652
    8. 'for' → logprob: -4.012975215911865
    9. 'id' (adapté à ' id') → logprob: -4.387975215911865
    10. ' cnt' → logprob: -5.387975215911865

Token 546: '_count' (ID: 7536)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.19730912148952484
    2. '_counter' → logprob: -1.947309136390686
    3. '_count' → logprob: -4.3223090171813965
    4. ' =' → logprob: -4.5723090171813965
    5. '=' → logprob: -5.3223090171813965
    6. '_cnt' → logprob: -5.3223090171813965
    7. 'counter' → logprob: -6.5723090171813965
    8. 'x' → logprob: -7.3223090171813965
    9. 'map' → logprob: -8.447309494018555
    10. '_idx' → logprob: -8.822309494018555

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889088988304138
    2. ' =' → logprob: -2.578890800476074
    3. '[' → logprob: -15.328890800476074
    4. '   ' → logprob: -15.703890800476074
    5. ' ' → logprob: -15.953890800476074
    6. '=
' → logprob: -15.953890800476074
    7. ')' → logprob: -16.20389175415039
    8. '+=' → logprob: -16.57889175415039
    9. '	' → logprob: -16.95389175415039
    10. ' =
' → logprob: -16.95389175415039

Token 548: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010962257510982454
    2. ' ' → logprob: -9.125109672546387
    3. '{}' → logprob: -14.500109672546387
    4. '   ' → logprob: -17.25010871887207
    5. 'len' → logprob: -17.25010871887207
    6. '{}
' → logprob: -17.62510871887207
    7. '{' → logprob: -18.37510871887207
    8. '1' → logprob: -18.37510871887207
    9. '=' → logprob: -18.50010871887207
    10. '  ' → logprob: -18.75010871887207

Token 549: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'len' → logprob: -15.125024795532227
    4. '   ' → logprob: -16.375024795532227
    5. '{}' → logprob: -16.750024795532227
    6. '{' → logprob: -17.000024795532227
    7. '1' → logprob: -17.125024795532227
    8. '[' → logprob: -17.625024795532227
    9. '=' → logprob: -18.312524795532227
    10. '{}
' → logprob: -18.375024795532227

Token 550: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014090636745095253
    2. ' for' → logprob: -5.389090538024902
    3. '
' → logprob: -5.639090538024902
    4. '<|end|>' → logprob: -5.639090538024902
    5. 'for' → logprob: -6.639090538024902
    6. '        
' → logprob: -7.514090538024902
    7. '   ' → logprob: -8.514090538024902
    8. '  
' → logprob: -9.639090538024902
    9. ',' → logprob: -10.264090538024902
    10. ')' → logprob: -10.389090538024902

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012835937552154064
    2. '<|end|>' → logprob: -5.13783597946167
    3. ' for' → logprob: -5.51283597946167
    4. 'for' → logprob: -6.38783597946167
    5. '        
' → logprob: -7.38783597946167
    6. '
' → logprob: -9.137835502624512
    7. '```' → logprob: -9.137835502624512
    8. '   ' → logprob: -9.137835502624512
    9. '  
' → logprob: -10.137835502624512
    10. ')' → logprob: -10.387835502624512

Token 552: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.44133105874061584
    2. '       ' → logprob: -1.3163310289382935
    3. ' for' → logprob: -2.441331148147583
    4. '   ' → logprob: -8.566330909729004
    5. ')' → logprob: -8.691330909729004
    6. '        
' → logprob: -8.691330909729004
    7. 'from' → logprob: -8.816330909729004
    8. 'components' → logprob: -9.066330909729004
    9. '#' → logprob: -9.191330909729004
    10. '```' → logprob: -9.441330909729004

Token 553: ' c' (ID: 274)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6895654201507568
    2. '(cost' → logprob: -2.064565420150757
    3. 'u' → logprob: -2.689565420150757
    4. '(u' → logprob: -2.939565420150757
    5. 'c' → logprob: -3.064565420150757
    6. ' cost' → logprob: -3.314565420150757
    7. 'a' → logprob: -3.439565420150757
    8. '(c' → logprob: -3.564565420150757
    9. '_,' → logprob: -4.314565658569336
    10. '(_,' → logprob: -4.564565658569336

Token 554: ',' (ID: 11)
  Prédit: 'omp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omp' → logprob: -0.2126414030790329
    2. 'ost' → logprob: -1.8376413583755493
    3. 'om' → logprob: -4.33764123916626
    4. ',' → logprob: -4.58764123916626
    5. 'comp' → logprob: -6.46264123916626
    6. ' in' → logprob: -6.83764123916626
    7. 'ur' → logprob: -7.08764123916626
    8. 'mp' → logprob: -7.21264123916626
    9. 'cost' → logprob: -7.21264123916626
    10. 'p' → logprob: -7.58764123916626

Token 555: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3492041528224945
    2. 'u' → logprob: -1.224204182624817
    3. 'x' → logprob: -8.224204063415527
    4. '_,' → logprob: -8.474204063415527
    5. ' u' → logprob: -8.849204063415527
    6. ' a' → logprob: -9.349204063415527
    7. '_a' → logprob: -11.474204063415527
    8. '_u' → logprob: -11.849204063415527
    9. ',u' → logprob: -11.974204063415527
    10. '   ' → logprob: -12.224204063415527

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021787699311971664
    2. ',b' → logprob: -3.896787643432617
    3. 'b' → logprob: -6.896787643432617
    4. ' ,' → logprob: -8.646787643432617
    5. 'in' → logprob: -11.521787643432617
    6. '_,' → logprob: -11.521787643432617
    7. ' in' → logprob: -12.021787643432617
    8. ',a' → logprob: -12.271787643432617
    9. ',c' → logprob: -12.771787643432617
    10. ',_' → logprob: -12.896787643432617

Token 557: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.4121114822482923e-06
    2. ' b' → logprob: -12.625003814697266
    3. 'c' → logprob: -17.750003814697266
    4. '   ' → logprob: -18.875003814697266
    5. 'a' → logprob: -20.125003814697266
    6. '    
' → logprob: -20.375003814697266
    7. '_b' → logprob: -20.625003814697266
    8. 'comp' → logprob: -20.750003814697266
    9. '```' → logprob: -20.875003814697266
    10. 'p' → logprob: -21.125003814697266

Token 558: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0889534205198288
    2. 'in' → logprob: -2.4639534950256348
    3. '   ' → logprob: -12.213953018188477
    4. ')' → logprob: -13.088953018188477
    5. '       ' → logprob: -13.713953018188477
    6. ' ' → logprob: -13.713953018188477
    7. ',' → logprob: -13.963953018188477
    8. 's' → logprob: -14.338953018188477
    9. 'In' → logprob: -14.463953018188477
    10. '  ' → logprob: -14.713953018188477

Token 559: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.00022773505770601332
    2. ' same' → logprob: -8.750227928161621
    3. '   ' → logprob: -10.875227928161621
    4. '[s' → logprob: -11.375227928161621
    5. 'comp' → logprob: -11.500227928161621
    6. 'edges' → logprob: -11.875227928161621
    7. '[(' → logprob: -11.875227928161621
    8. 'edge' → logprob: -12.375227928161621
    9. 'parent' → logprob: -12.875227928161621
    10. '[' → logprob: -13.500227928161621

Token 560: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0010474584996700287
    2. 'cost' → logprob: -6.876047611236572
    3. ' cost' → logprob: -12.376047134399414
    4. ',' → logprob: -12.876047134399414
    5. '_edges' → logprob: -13.501047134399414
    6. '_' → logprob: -13.751047134399414
    7. 'Cost' → logprob: -14.001047134399414
    8. '_comp' → logprob: -14.751047134399414
    9. ')' → logprob: -14.876047134399414
    10. 'const' → logprob: -15.251047134399414

Token 561: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.009806974790990353
    2. 'edges' → logprob: -4.634807109832764
    3. 'cost' → logprob: -11.009806632995605
    4. ' edges' → logprob: -11.384806632995605
    5. '```' → logprob: -12.134806632995605
    6. 'Edges' → logprob: -12.384806632995605
    7. '   ' → logprob: -12.634806632995605
    8. '_cost' → logprob: -13.259806632995605
    9. '_nodes' → logprob: -13.634806632995605
    10. 's' → logprob: -13.884806632995605

Token 562: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3148423135280609
    2. ':' → logprob: -1.3148423433303833
    3. ',' → logprob: -6.814842224121094
    4. '       ' → logprob: -8.189842224121094
    5. '):
' → logprob: -9.689842224121094
    6. ':

' → logprob: -9.939842224121094
    7. '           ' → logprob: -10.439842224121094
    8. ':
' → logprob: -10.689842224121094
    9. '   ' → logprob: -11.689842224121094
    10. ' :
' → logprob: -11.689842224121094

Token 563: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46205392479896545
    2. '       ' → logprob: -1.087053894996643
    3. '   ' → logprob: -4.2120537757873535
    4. ' if' → logprob: -4.3370537757873535
    5. ' for' → logprob: -6.4620537757873535
    6. 'if' → logprob: -7.3370537757873535
    7. ',' → logprob: -7.5870537757873535
    8. 'a' → logprob: -7.7120537757873535
    9. '<|end|>' → logprob: -7.7120537757873535
    10. ' a' → logprob: -7.8370537757873535

Token 564: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033640049397945404
    2. ' a' → logprob: -4.908639907836914
    3. 'ra' → logprob: -5.033639907836914
    4. '           ' → logprob: -5.533639907836914
    5. '   ' → logprob: -5.658639907836914
    6. 'a' (adapté à ' a') → logprob: -5.658639907836914
    7. ' pa' → logprob: -6.283639907836914
    8. ' for' → logprob: -6.533639907836914
    9. ' x' → logprob: -7.158639907836914
    10. ' ra' → logprob: -7.283639907836914

Token 565: 'root' (ID: 5488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6833367943763733
    2. 'root' → logprob: -2.3083367347717285
    3. '_repr' → logprob: -2.3083367347717285
    4. 'p' → logprob: -2.6833367347717285
    5. 'a' → logprob: -2.6833367347717285
    6. '_root' → logprob: -2.9333367347717285
    7. '=' → logprob: -3.5583367347717285
    8. '_rep' → logprob: -3.8083367347717285
    9. 'r' → logprob: -3.9333367347717285
    10. 'rep' → logprob: -4.5583367347717285

Token 566: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3885670304298401
    2. ' =' → logprob: -1.1385669708251953
    3. '=find' → logprob: -6.388566970825195
    4. ',' → logprob: -12.138566970825195
    5. '   ' → logprob: -12.638566970825195
    6. 'find' → logprob: -13.388566970825195
    7. ' ' → logprob: -13.763566970825195
    8. 'a' → logprob: -13.763566970825195
    9. '    ' → logprob: -15.888566970825195
    10. ')' → logprob: -15.888566970825195

Token 567: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0008048642775975168
    2. ' find' → logprob: -7.125804901123047
    3. '(find' → logprob: -15.625804901123047
    4. '   ' → logprob: -16.375804901123047
    5. 'parent' → logprob: -17.125804901123047
    6. '	find' → logprob: -17.250804901123047
    7. '=find' → logprob: -18.125804901123047
    8. ' ' → logprob: -18.250804901123047
    9. '
' → logprob: -18.750804901123047
    10. '  ' → logprob: -18.875804901123047

Token 568: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.002202120842412114
    2. 'parent' → logprob: -6.127202033996582
    3. ',parent' → logprob: -11.502202033996582
    4. '[parent' → logprob: -12.627202033996582
    5. ' parent' → logprob: -13.252202033996582
    6. '(paren' → logprob: -14.252202033996582
    7. '(' → logprob: -14.377202033996582
    8. '```' → logprob: -14.752202033996582
    9. '	parent' → logprob: -15.627202033996582
    10. '.parent' → logprob: -17.1272029876709

Token 569: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008969075046479702
    2. ',parent' → logprob: -4.758969306945801
    3. '(parent' → logprob: -8.2589693069458
    4. 'parent' → logprob: -10.1339693069458
    5. ' ,' → logprob: -10.6339693069458
    6. ',
' → logprob: -10.8839693069458
    7. '[parent' → logprob: -12.7589693069458
    8. ')' → logprob: -12.8839693069458
    9. '(' → logprob: -13.3839693069458
    10. ' parent' → logprob: -13.3839693069458

Token 570: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07898253947496414
    2. ')' → logprob: -2.5789825916290283
    3. ')
' → logprob: -9.32898235321045
    4. ')

' → logprob: -13.32898235321045
    5. '       ' → logprob: -13.70398235321045
    6. ')a' → logprob: -15.07898235321045
    7. ' )
' → logprob: -15.32898235321045
    8. '           ' → logprob: -15.45398235321045
    9. '   ' → logprob: -16.328983306884766
    10. ')#' → logprob: -16.453983306884766

Token 571: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09231545031070709
    2. 'b' → logprob: -2.467315435409546
    3. ' b' → logprob: -6.342315673828125
    4. ' if' → logprob: -6.842315673828125
    5. '       ' → logprob: -8.217315673828125
    6. '   ' → logprob: -8.592315673828125
    7. 'if' → logprob: -10.217315673828125
    8. '               ' → logprob: -11.717315673828125
    9. ' ' → logprob: -11.842315673828125
    10. '          ' → logprob: -12.092315673828125

Token 572: ' bro' (ID: 3714)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005061787087470293
    2. 'bro' (adapté à ' bro') → logprob: -6.005061626434326
    3. 'brot' → logprob: -6.255061626434326
    4. ' bro' → logprob: -7.630061626434326
    5. '   ' → logprob: -9.130062103271484
    6. ' b' → logprob: -11.005062103271484
    7. ' ' → logprob: -11.255062103271484
    8. '	b' → logprob: -11.505062103271484
    9. '```' → logprob: -11.630062103271484
    10. 'root' → logprob: -12.630062103271484

Token 573: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -5.9153885558771435e-06
    2. 'от' → logprob: -12.875005722045898
    3. 'otr' → logprob: -14.375005722045898
    4. 'otp' → logprob: -15.000005722045898
    5. 'root' → logprob: -15.125005722045898
    6. 'rot' → logprob: -15.250005722045898
    7. 'ott' → logprob: -15.375005722045898
    8. 'ots' → logprob: -15.375005722045898
    9. 'om' → logprob: -15.750005722045898
    10. 'oot' → logprob: -15.875005722045898

Token 574: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031943509820848703
    2. ' =' → logprob: -5.753194332122803
    3. '=find' → logprob: -11.003194808959961
    4. 'find' → logprob: -18.37819480895996
    5. '=
' → logprob: -18.62819480895996
    6. ' find' → logprob: -19.50319480895996
    7. ')' → logprob: -20.00319480895996
    8. '＝' → logprob: -20.50319480895996
    9. ' ' → logprob: -20.62819480895996
    10. '=

' → logprob: -20.62819480895996

Token 575: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0012564226053655148
    2. '(find' → logprob: -7.501256465911865
    3. 'parent' → logprob: -8.126255989074707
    4. ' find' → logprob: -8.501255989074707
    5. '(parent' → logprob: -8.501255989074707
    6. '=find' → logprob: -14.751255989074707
    7. ' parent' → logprob: -15.001255989074707
    8. '[parent' → logprob: -15.126255989074707
    9. '	find' → logprob: -17.251256942749023
    10. '.find' → logprob: -17.501256942749023

Token 576: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.0005657802103087306
    2. 'parent' → logprob: -7.500566005706787
    3. ',parent' → logprob: -11.750565528869629
    4. '[parent' → logprob: -12.625565528869629
    5. ' parent' → logprob: -14.000565528869629
    6. '(' → logprob: -15.125565528869629
    7. '```' → logprob: -16.000566482543945
    8. ')' → logprob: -16.250566482543945
    9. '(paren' → logprob: -16.375566482543945
    10. '(
' → logprob: -16.750566482543945

Token 577: ',b' (ID: 17568)
  Prédit: ',parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',parent' → logprob: -0.450802743434906
    2. ',b' → logprob: -1.3258028030395508
    3. 'parent' → logprob: -2.825802803039551
    4. ',' → logprob: -3.325802803039551
    5. '(parent' → logprob: -6.575802803039551
    6. ' parent' → logprob: -8.45080280303955
    7. '[parent' → logprob: -8.45080280303955
    8. 'b' → logprob: -8.82580280303955
    9. ' ,' → logprob: -10.20080280303955
    10. ',x' → logprob: -11.32580280303955

Token 578: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759834051132202
    2. ')
' → logprob: -0.8259834051132202
    3. '       ' → logprob: -11.200983047485352
    4. '           ' → logprob: -11.325983047485352
    5. ')
' → logprob: -11.450983047485352
    6. ')

' → logprob: -12.200983047485352
    7. '<|end|>' → logprob: -14.575983047485352
    8. ' )
' → logprob: -15.200983047485352
    9. '   ' → logprob: -15.450983047485352
    10. ' )' → logprob: -15.575983047485352

Token 579: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015158153837546706
    2. '<|end|>' → logprob: -6.751515865325928
    3. '
' → logprob: -9.12651538848877
    4. ' if' → logprob: -9.37651538848877
    5. '            
' → logprob: -10.00151538848877
    6. '<|end|>' → logprob: -10.62651538848877
    7. '       ' → logprob: -10.75151538848877
    8. ',' → logprob: -11.25151538848877
    9. '   ' → logprob: -11.75151538848877
    10. 'if' → logprob: -12.00151538848877

Token 580: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01170783955603838
    2. 'if' (adapté à ' if') → logprob: -4.886707782745361
    3. ' if' → logprob: -5.511707782745361
    4. '<|end|>' → logprob: -11.51170825958252
    5. 'for' → logprob: -11.63670825958252
    6. '   ' → logprob: -11.76170825958252
    7. '       ' → logprob: -12.51170825958252
    8. 'a' → logprob: -12.51170825958252
    9. ' ' → logprob: -12.63670825958252
    10. 'comp' → logprob: -12.88670825958252

Token 581: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.003301650984212756
    2. 'ar' → logprob: -5.878301620483398
    3. ' (' → logprob: -8.253301620483398
    4. '(a' → logprob: -9.253301620483398
    5. 'a' → logprob: -9.878301620483398
    6. ' aro' → logprob: -9.878301620483398
    7. '(' → logprob: -10.628301620483398
    8. '(ar' → logprob: -12.378301620483398
    9. ' а' → logprob: -12.753301620483398
    10. ' ' → logprob: -14.128301620483398

Token 582: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.318681188422488e-05
    2. 'rot' → logprob: -12.62501335144043
    3. 'ro' → logprob: -12.87501335144043
    4. 'r' → logprob: -12.87501335144043
    5. '[root' → logprob: -13.00001335144043
    6. '_root' → logprob: -14.25001335144043
    7. 'not' → logprob: -15.25001335144043
    8. 'rt' → logprob: -15.37501335144043
    9. 'roots' → logprob: -15.37501335144043
    10. '=root' → logprob: -15.50001335144043

Token 583: ' !=' (ID: 1666)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22631995379924774
    2. ' !=' → logprob: -2.2263200283050537
    3. '!=' → logprob: -2.6013200283050537
    4. 'not' → logprob: -4.226319789886475
    5. '==' → logprob: -5.351319789886475
    6. ' ==' → logprob: -6.851319789886475
    7. ')' → logprob: -11.101320266723633
    8. ')!=' → logprob: -12.351320266723633
    9. ']!=' → logprob: -12.976320266723633
    10. '=' → logprob: -13.476320266723633

Token 584: ' bro' (ID: 3714)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.173704271830502e-06
    2. ' b' → logprob: -14.00000286102295
    3. '   ' → logprob: -14.50000286102295
    4. ' ' → logprob: -14.75000286102295
    5. '```' → logprob: -15.12500286102295
    6. ' bro' → logprob: -15.25000286102295
    7. '	b' → logprob: -15.50000286102295
    8. '    
' → logprob: -16.125003814697266
    9. 'root' → logprob: -16.125003814697266
    10. ' root' → logprob: -16.250003814697266

Token 585: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.00019340807921253145
    2. 'root' → logprob: -8.87519359588623
    3. 'oot' → logprob: -11.12519359588623
    4. '       ' → logprob: -11.75019359588623
    5. '   ' → logprob: -12.12519359588623
    6. 'rot' → logprob: -12.12519359588623
    7. 'or' → logprob: -13.00019359588623
    8. ' ' → logprob: -13.12519359588623
    9. 't' → logprob: -13.37519359588623
    10. '```' → logprob: -13.50019359588623

Token 586: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3883424699306488
    2. ':' → logprob: -1.1383424997329712
    3. ' and' → logprob: -7.013342380523682
    4. '           ' → logprob: -8.26334285736084
    5. '):
' → logprob: -9.38834285736084
    6. ',' → logprob: -9.51334285736084
    7. ':

' → logprob: -9.63834285736084
    8. '       ' → logprob: -10.38834285736084
    9. ':
' → logprob: -11.01334285736084
    10. ' :
' → logprob: -11.26334285736084

Token 587: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03951805457472801
    2. '           ' → logprob: -3.289518117904663
    3. '<|end|>' → logprob: -8.039518356323242
    4. ',' → logprob: -8.164518356323242
    5. ' if' → logprob: -8.414518356323242
    6. ' continue' → logprob: -8.664518356323242
    7. ' for' → logprob: -9.289518356323242
    8. ')' → logprob: -9.414518356323242
    9. '```' → logprob: -9.664518356323242
    10. 'continue' → logprob: -10.039518356323242

Token 588: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7318944334983826
    2. ' if' → logprob: -0.8568944334983826
    3. 'if' (adapté à ' if') → logprob: -3.1068944931030273
    4. '           ' → logprob: -3.2318944931030273
    5. ' comp' → logprob: -5.731894493103027
    6. ' for' → logprob: -6.731894493103027
    7. '               ' → logprob: -6.981894493103027
    8. 'comp' → logprob: -7.106894493103027
    9. ' key' → logprob: -7.856894493103027
    10. ' id' → logprob: -7.856894493103027

Token 589: ' a' (ID: 261)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0002644351334311068
    2. ' a' → logprob: -8.375264167785645
    3. '   ' → logprob: -12.000264167785645
    4. 'a' → logprob: -12.125264167785645
    5. 'aar' → logprob: -12.125264167785645
    6. 'root' → logprob: -12.875264167785645
    7. 'comp' → logprob: -13.625264167785645
    8. 'arod' → logprob: -13.625264167785645
    9. '           ' → logprob: -14.000264167785645
    10. '       ' → logprob: -14.000264167785645

Token 590: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.00041947141289711
    2. 'rot' → logprob: -9.000419616699219
    3. 'not' → logprob: -9.125419616699219
    4. 'ro' → logprob: -9.250419616699219
    5. '[root' → logprob: -10.375419616699219
    6. 'ot' → logprob: -11.000419616699219
    7. 'r' → logprob: -11.875419616699219
    8. 'oot' → logprob: -12.375419616699219
    9. 'a' → logprob: -12.500419616699219
    10. '
' → logprob: -13.000419616699219

Token 591: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0789119303226471
    2. 'not' → logprob: -2.5789120197296143
    3. ')' → logprob: -11.078911781311035
    4. '==' → logprob: -13.078911781311035
    5. ']' → logprob: -13.203911781311035
    6. 'in' → logprob: -14.203911781311035
    7. ' in' → logprob: -14.703911781311035
    8. 'and' → logprob: -14.828911781311035
    9. '	not' → logprob: -15.328911781311035
    10. ':not' → logprob: -15.453911781311035

Token 592: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931670308113098
    2. ' in' → logprob: -0.6931670308113098
    3. 'id' → logprob: -11.818166732788086
    4. 'not' → logprob: -13.068166732788086
    5. '       ' → logprob: -13.193166732788086
    6. '   ' → logprob: -13.443166732788086
    7. ' not' → logprob: -13.818166732788086
    8. '           ' → logprob: -13.943166732788086
    9. '
' → logprob: -14.193166732788086
    10. '                   ' → logprob: -14.318166732788086

Token 593: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.08899345248937607
    2. 'comp' → logprob: -2.463993549346924
    3. ' id' → logprob: -10.463993072509766
    4. ' comp' → logprob: -10.713993072509766
    5. '   ' → logprob: -13.463993072509766
    6. '	comp' → logprob: -15.213993072509766
    7. 'cmp' → logprob: -15.338993072509766
    8. 'com' → logprob: -15.463993072509766
    9. ' ' → logprob: -15.838993072509766
    10. '```' → logprob: -16.088993072509766

Token 594: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -4.811348480870947e-05
    2. '_count' → logprob: -10.37504768371582
    3. 'map' → logprob: -11.37504768371582
    4. '_repr' → logprob: -12.87504768371582
    5. ':' → logprob: -13.50004768371582
    6. 'count' → logprob: -14.87504768371582
    7. 'Map' → logprob: -15.12504768371582
    8. '   ' → logprob: -15.87504768371582
    9. ')' → logprob: -16.62504768371582
    10. '_maps' → logprob: -16.75004768371582

Token 595: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3501063883304596
    2. ':' → logprob: -1.2251063585281372
    3. '=' → logprob: -6.850106239318848
    4. ' =' → logprob: -7.850106239318848
    5. '           ' → logprob: -9.850106239318848
    6. '                   ' → logprob: -9.850106239318848
    7. ':

' → logprob: -10.725106239318848
    8. '):
' → logprob: -11.100106239318848
    9. ':
' → logprob: -11.100106239318848
    10. '       ' → logprob: -11.225106239318848

Token 596: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5148084163665771
    2. ' id' → logprob: -1.1398084163665771
    3. '               ' → logprob: -2.889808416366577
    4. '           ' → logprob: -4.639808654785156
    5. 'id' → logprob: -5.014808654785156
    6. ' a' → logprob: -6.139808654785156
    7. ' =' → logprob: -6.889808654785156
    8. '0' → logprob: -6.889808654785156
    9. ' ' → logprob: -7.014808654785156
    10. '```' → logprob: -7.014808654785156

Token 597: ' id' (ID: 1211)
  Prédit: ' id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' id' → logprob: -0.5782371759414673
    2. 'id' (adapté à ' id') → logprob: -0.8282371759414673
    3. '                   ' → logprob: -6.203237056732178
    4. '```' → logprob: -9.203237533569336
    5. '{id' → logprob: -9.953237533569336
    6. '               ' → logprob: -10.328237533569336
    7. '[id' → logprob: -10.578237533569336
    8. '                       ' → logprob: -10.828237533569336
    9. '   ' → logprob: -11.578237533569336
    10. ' ' → logprob: -11.578237533569336

Token 598: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -7.896309739408025e-07
    2. 'map' → logprob: -14.750000953674316
    3. 'Map' → logprob: -15.625000953674316
    4. '_maps' → logprob: -16.25
    5. '=' → logprob: -17.125
    6. '_count' → logprob: -17.5
    7. ' =' → logprob: -18.25
    8. '=_' → logprob: -18.25
    9. '_mapping' → logprob: -18.625
    10. '_MAP' → logprob: -18.75

Token 599: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008236800786107779
    2. '[arr' → logprob: -8.125823974609375
    3. '[root' → logprob: -8.250823974609375
    4. '[parent' → logprob: -8.875823974609375
    5. '[id' → logprob: -9.500823974609375
    6. '[a' → logprob: -10.750823974609375
    7. '[array' → logprob: -11.250823974609375
    8. '[arg' → logprob: -12.375823974609375
    9. '$ar' → logprob: -12.750823974609375
    10. 'ar' → logprob: -13.125823974609375

Token 600: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.00011570196511456743
    2. ' a' → logprob: -10.250115394592285
    3. 'root' → logprob: -11.375115394592285
    4. 'aro' → logprob: -11.500115394592285
    5. 'a' → logprob: -11.625115394592285
    6. 'are' → logprob: -11.625115394592285
    7. '[root' → logprob: -12.000115394592285
    8. 'comp' → logprob: -12.125115394592285
    9. 'arod' → logprob: -12.250115394592285
    10. '```' → logprob: -12.750115394592285

Token 601: 'oot' (ID: 2455)
  Prédit: 'oot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oot' → logprob: -0.0010126839624717832
    2. 'ot' → logprob: -7.501012802124023
    3. 'root' → logprob: -7.751012802124023
    4. 'o' → logprob: -12.001012802124023
    5. 'out' → logprob: -12.376012802124023
    6. 'OOT' → logprob: -12.626012802124023
    7. '[root' → logprob: -13.001012802124023
    8. 'oor' → logprob: -13.376012802124023
    9. '[' → logprob: -13.501012802124023
    10. 'opt' → logprob: -13.751012802124023

Token 602: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019523027585819364
    2. '=' → logprob: -7.001952171325684
    3. ']=' → logprob: -7.001952171325684
    4. ' =' → logprob: -9.001952171325684
    5. ' ]' → logprob: -12.001952171325684
    6. '   ' → logprob: -14.876952171325684
    7. ')' → logprob: -15.251952171325684
    8. ',' → logprob: -16.876953125
    9. '[' → logprob: -17.251953125
    10. '']' → logprob: -17.376953125

Token 603: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. '=
' → logprob: -17.15475082397461
    4. ']' → logprob: -17.52975082397461
    5. '=id' → logprob: -17.77975082397461
    6. ']=' → logprob: -17.90475082397461
    7. '   ' → logprob: -17.90475082397461
    8. '[' → logprob: -18.40475082397461
    9. ' ' → logprob: -18.90475082397461
    10. '=

' → logprob: -19.40475082397461

Token 604: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0001234428636962548
    2. ' id' → logprob: -9.000123023986816
    3. '                   ' → logprob: -18.750123977661133
    4. '   ' → logprob: -21.250123977661133
    5. '	id' → logprob: -22.125123977661133
    6. '0' → logprob: -22.250123977661133
    7. '[id' → logprob: -22.375123977661133
    8. '               ' → logprob: -22.500123977661133
    9. '(id' → logprob: -23.000123977661133
    10. '           ' → logprob: -23.125123977661133

Token 605: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.007582728285342455
    2. 'count' → logprob: -5.507582664489746
    3. '+' → logprob: -6.507582664489746
    4. '_map' → logprob: -6.632582664489746
    5. '               ' → logprob: -8.007582664489746
    6. '                   ' → logprob: -8.632582664489746
    7. '0' → logprob: -9.757582664489746
    8. '           ' → logprob: -11.007582664489746
    9. ' ' → logprob: -11.382582664489746
    10. 'map' → logprob: -11.507582664489746

Token 606: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020665910094976425
    2. '               ' → logprob: -4.645666122436523
    3. '
' → logprob: -5.395666122436523
    4. '<|end|>' → logprob: -6.520666122436523
    5. '<|end|>' → logprob: -6.520666122436523
    6. '           ' → logprob: -7.020666122436523
    7. ',' → logprob: -7.145666122436523
    8. '                    
' → logprob: -7.395666122436523
    9. '                       ' → logprob: -8.270666122436523
    10. '       ' → logprob: -8.395666122436523

Token 607: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002930514281615615
    2. '               ' → logprob: -6.252930641174316
    3. '<|end|>' → logprob: -8.502930641174316
    4. '                    
' → logprob: -8.627930641174316
    5. '<|end|>' → logprob: -9.252930641174316
    6. '                       ' → logprob: -9.252930641174316
    7. '           ' → logprob: -9.252930641174316
    8. ',' → logprob: -9.627930641174316
    9. '
' → logprob: -9.627930641174316
    10. '```' → logprob: -10.127930641174316

Token 608: ' comp' (ID: 1050)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0014890312450006604
    2. ' id' → logprob: -6.876489162445068
    3. '                   ' → logprob: -7.876489162445068
    4. '   ' → logprob: -10.75148868560791
    5. 'comp' (adapté à ' comp') → logprob: -11.00148868560791
    6. '       ' → logprob: -11.37648868560791
    7. '               ' → logprob: -11.50148868560791
    8. '```' → logprob: -11.62648868560791
    9. '           ' → logprob: -12.62648868560791
    10. '++' → logprob: -13.00148868560791

Token 609: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0004056474717799574
    2. '_count' → logprob: -7.875405788421631
    3. '_repr' → logprob: -10.625405311584473
    4. 'count' → logprob: -14.750405311584473
    5. 'list' → logprob: -15.125405311584473
    6. '_lst' → logprob: -15.375405311584473
    7. 'List' → logprob: -16.00040626525879
    8. 'repr' → logprob: -16.87540626525879
    9. '_counts' → logprob: -17.37540626525879
    10. '_LIST' → logprob: -17.50040626525879

Token 610: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008128436165861785
    2. '.' → logprob: -7.125813007354736
    3. '+=' → logprob: -12.625812530517578
    4. '.app' → logprob: -13.125812530517578
    5. 'append' → logprob: -13.750812530517578
    6. '+' → logprob: -13.875812530517578
    7. '.extend' → logprob: -15.250812530517578
    8. '.ap' → logprob: -15.250812530517578
    9. '=' → logprob: -15.500812530517578
    10. '.=' → logprob: -15.875812530517578

Token 611: '(ar' (ID: 77717)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.25252553820610046
    2. '(ar' → logprob: -1.6275255680084229
    3. '(id' → logprob: -4.127525329589844
    4. 'id' → logprob: -5.002525329589844
    5. '(' → logprob: -6.377525329589844
    6. '([]' → logprob: -6.502525329589844
    7. '[]' → logprob: -8.127525329589844
    8. '0' → logprob: -9.002525329589844
    9. ' ar' → logprob: -9.127525329589844
    10. '([])
' → logprob: -10.127525329589844

Token 612: 'oot' (ID: 2455)
  Prédit: 'oot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oot' → logprob: -9.2576454335358e-05
    2. 'root' → logprob: -10.125092506408691
    3. 'ot' → logprob: -11.125092506408691
    4. 'o' → logprob: -11.250092506408691
    5. '[root' → logprob: -12.125092506408691
    6. 'a' → logprob: -12.750092506408691
    7. '[' → logprob: -12.875092506408691
    8. 'out' → logprob: -13.000092506408691
    9. '``' → logprob: -13.250092506408691
    10. 'OOT' → logprob: -13.625092506408691

Token 613: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.016708437353372574
    2. ')' → logprob: -4.1417083740234375
    3. '                   ' → logprob: -7.3917083740234375
    4. '               ' → logprob: -10.391708374023438
    5. '
' → logprob: -11.891708374023438
    6. ' )
' → logprob: -12.391708374023438
    7. ')
' → logprob: -12.391708374023438
    8. '       ' → logprob: -12.641708374023438
    9. '           ' → logprob: -13.266708374023438
    10. '   ' → logprob: -13.391708374023438

Token 614: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004141792189329863
    2. '               ' → logprob: -5.629141807556152
    3. '                    
' → logprob: -8.379141807556152
    4. '<|end|>' → logprob: -9.629141807556152
    5. '           ' → logprob: -10.254141807556152
    6. '
' → logprob: -10.379141807556152
    7. '```' → logprob: -10.754141807556152
    8. '                       ' → logprob: -10.879141807556152
    9. '                
' → logprob: -11.004141807556152
    10. '	               ' → logprob: -11.129141807556152

Token 615: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.0029527393635362387
    2. ' id' → logprob: -5.877952575683594
    3. '                   ' → logprob: -9.002952575683594
    4. '	id' → logprob: -12.377952575683594
    5. '   ' → logprob: -12.502952575683594
    6. '                    
' → logprob: -12.752952575683594
    7. '```' → logprob: -13.002952575683594
    8. '               ' → logprob: -13.002952575683594
    9. '_id' → logprob: -13.127952575683594
    10. '[id' → logprob: -13.127952575683594

Token 616: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0002669384120963514
    2. '_map' → logprob: -8.250267028808594
    3. 'count' → logprob: -12.250267028808594
    4. '_id' → logprob: -15.750267028808594
    5. '_' → logprob: -16.125267028808594
    6. 'map' → logprob: -16.250267028808594
    7. '\' → logprob: -16.375267028808594
    8. '
' → logprob: -16.875267028808594
    9. 'Count' → logprob: -16.875267028808594
    10. '_counts' → logprob: -17.125267028808594

Token 617: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023421913385391235
    2. ' +=' → logprob: -3.7734220027923584
    3. '=' → logprob: -8.898422241210938
    4. '+' → logprob: -10.273422241210938
    5. '<|end|>' → logprob: -12.773422241210938
    6. ']+=' → logprob: -14.273422241210938
    7. '```' → logprob: -14.398422241210938
    8. '++' → logprob: -15.273422241210938
    9. '   ' → logprob: -15.523422241210938
    10. '+='' → logprob: -15.773422241210938

Token 618: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -18.625001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '```' → logprob: -19.375001907348633
    6. '１' → logprob: -19.625001907348633
    7. '۱' → logprob: -20.312501907348633
    8. '১' → logprob: -20.937501907348633
    9. '<|end|>' → logprob: -20.937501907348633
    10. '१' → logprob: -21.125001907348633

Token 619: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09092894941568375
    2. '<|end|>' → logprob: -2.4659290313720703
    3. '
' → logprob: -6.84092903137207
    4. '       ' → logprob: -8.96592903137207
    5. '<|end|>' → logprob: -8.96592903137207
    6. ')' → logprob: -8.96592903137207
    7. ',' → logprob: -9.34092903137207
    8. '                ' → logprob: -9.34092903137207
    9. '```' → logprob: -9.71592903137207
    10. '           ' → logprob: -9.84092903137207

Token 620: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018229777924716473
    2. '<|end|>' → logprob: -6.8768229484558105
    3. '       ' → logprob: -8.251823425292969
    4. 'b' → logprob: -9.001823425292969
    5. '```' → logprob: -9.001823425292969
    6. ' if' → logprob: -9.501823425292969
    7. 'if' → logprob: -10.251823425292969
    8. '                ' → logprob: -10.376823425292969
    9. '           ' → logprob: -10.501823425292969
    10. '              ' → logprob: -10.751823425292969

Token 621: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08273690193891525
    2. ' if' → logprob: -2.8327369689941406
    3. 'if' (adapté à ' if') → logprob: -4.082736968994141
    4. '```' → logprob: -6.332736968994141
    5. 'b' → logprob: -6.832736968994141
    6. '                   ' → logprob: -7.582736968994141
    7. '                ' → logprob: -8.83273696899414
    8. ' b' → logprob: -9.70773696899414
    9. '       ' → logprob: -9.95773696899414
    10. '           ' → logprob: -10.95773696899414

Token 622: ' bro' (ID: 3714)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.877503907773644e-05
    2. ' bro' → logprob: -9.875099182128906
    3. ' b' → logprob: -10.875099182128906
    4. 'brot' → logprob: -10.875099182128906
    5. 'bro' → logprob: -12.375099182128906
    6. '   ' → logprob: -13.000099182128906
    7. '	b' → logprob: -14.000099182128906
    8. ' ' → logprob: -14.500099182128906
    9. 'B' → logprob: -15.125099182128906
    10. '(b' → logprob: -15.375099182128906

Token 623: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.06026666238903999
    2. 'root' → logprob: -3.0602667331695557
    3. 'oot' → logprob: -4.560266494750977
    4. 'rot' → logprob: -7.060266494750977
    5. '[root' → logprob: -9.185266494750977
    6. 'out' → logprob: -10.060266494750977
    7. '_root' → logprob: -10.185266494750977
    8. '```' → logprob: -10.560266494750977
    9. '_map' → logprob: -11.185266494750977
    10. '(root' → logprob: -11.185266494750977

Token 624: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00861456897109747
    2. 'not' → logprob: -4.758614540100098
    3. '	not' → logprob: -18.883615493774414
    4. ':not' → logprob: -19.508615493774414
    5. '(not' → logprob: -19.883615493774414
    6. ')' → logprob: -19.883615493774414
    7. '
' → logprob: -21.258615493774414
    8. 'Not' → logprob: -21.258615493774414
    9. '```' → logprob: -21.758615493774414
    10. '==' → logprob: -22.008615493774414

Token 625: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00991911068558693
    2. 'in' → logprob: -4.634919166564941
    3. '[id' → logprob: -8.884919166564941
    4. 'id' → logprob: -11.759919166564941
    5. '   ' → logprob: -12.009919166564941
    6. ' ' → logprob: -13.134919166564941
    7. '           ' → logprob: -13.259919166564941
    8. '[' → logprob: -13.509919166564941
    9. '```' → logprob: -13.509919166564941
    10. ' id' → logprob: -14.134919166564941

Token 626: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.03364938497543335
    2. ' id' → logprob: -3.408649444580078
    3. '```' → logprob: -13.533649444580078
    4. '[id' → logprob: -14.033649444580078
    5. ' ' → logprob: -14.783649444580078
    6. '
' → logprob: -15.408649444580078
    7. '	id' → logprob: -15.658649444580078
    8. '   ' → logprob: -15.658649444580078
    9. '[' → logprob: -16.033649444580078
    10. '(id' → logprob: -16.533649444580078

Token 627: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.856408536899835e-05
    2. 'map' → logprob: -10.625028610229492
    3. 'Map' → logprob: -12.875028610229492
    4. 'comp' → logprob: -13.750028610229492
    5. '```' → logprob: -16.000028610229492
    6. '_comp' → logprob: -16.250028610229492
    7. ' map' → logprob: -17.000028610229492
    8. '   ' → logprob: -17.500028610229492
    9. '_count' → logprob: -17.500028610229492
    10. '[' → logprob: -17.500028610229492

Token 628: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15964213013648987
    2. ':
' → logprob: -2.409642219543457
    3. '                   ' → logprob: -3.284642219543457
    4. '{
' → logprob: -5.034642219543457
    5. '               ' → logprob: -5.034642219543457
    6. '           ' → logprob: -5.159642219543457
    7. '{' → logprob: -7.784642219543457
    8. '       ' → logprob: -7.784642219543457
    9. '[' → logprob: -8.909642219543457
    10. '=' → logprob: -9.409642219543457

Token 629: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02245909720659256
    2. '               ' → logprob: -4.022459030151367
    3. '           ' → logprob: -6.272459030151367
    4. 'b' → logprob: -6.772459030151367
    5. ' =' → logprob: -7.147459030151367
    6. '       ' → logprob: -9.022459030151367
    7. '                       ' → logprob: -9.397459030151367
    8. '=' → logprob: -9.772459030151367
    9. 'id' → logprob: -10.147459030151367
    10. '                  ' → logprob: -10.397459030151367

Token 630: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.008718223311007023
    2. 'b' → logprob: -4.758718013763428
    3. ' id' → logprob: -9.383718490600586
    4. 'bro' → logprob: -11.258718490600586
    5. '               ' → logprob: -13.008718490600586
    6. '                   ' → logprob: -13.383718490600586
    7. '           ' → logprob: -13.508718490600586
    8. '       ' → logprob: -14.383718490600586
    9. '```' → logprob: -15.008718490600586
    10. '   ' → logprob: -15.758718490600586

Token 631: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -4.842555426876061e-06
    2. 'map' → logprob: -12.375004768371582
    3. 'Map' → logprob: -14.875004768371582
    4. '_maps' → logprob: -16.3750057220459
    5. 'b' → logprob: -16.5000057220459
    6. '[' → logprob: -17.2500057220459
    7. '_MAP' → logprob: -18.0000057220459
    8. '```' → logprob: -18.8750057220459
    9. '=' → logprob: -19.1250057220459
    10. '_m' → logprob: -19.8750057220459

Token 632: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -8.41866585687967e-06
    2. 'b' → logprob: -12.000008583068848
    3. '[' → logprob: -13.125008583068848
    4. '[root' → logprob: -16.50000762939453
    5. '=b' → logprob: -16.75000762939453
    6. '[B' → logprob: -17.62500762939453
    7. '(b' → logprob: -17.75000762939453
    8. ' b' → logprob: -18.12500762939453
    9. '[d' → logprob: -18.50000762939453
    10. '   ' → logprob: -19.37500762939453

Token 633: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -5.9153885558771435e-06
    2. 'r' → logprob: -12.875005722045898
    3. '[root' → logprob: -13.375005722045898
    4. 'b' → logprob: -14.250005722045898
    5. ' root' → logprob: -14.250005722045898
    6. '```' → logprob: -15.875005722045898
    7. '_root' → logprob: -16.6250057220459
    8. '(root' → logprob: -17.0000057220459
    9. '=root' → logprob: -17.1250057220459
    10. 'ROOT' → logprob: -17.2500057220459

Token 634: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49526023864746094
    2. ']' → logprob: -1.120260238647461
    3. ' =' → logprob: -2.870260238647461
    4. ']=' → logprob: -4.870260238647461
    5. ')' → logprob: -11.495260238647461
    6. ' ]' → logprob: -11.745260238647461
    7. '   ' → logprob: -11.995260238647461
    8. '}' → logprob: -12.370260238647461
    9. '```' → logprob: -13.120260238647461
    10. '}=' → logprob: -13.495260238647461

Token 635: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269291490316391
    2. ' =' → logprob: -2.1269290447235107
    3. '[' → logprob: -15.37692928314209
    4. ']' → logprob: -15.50192928314209
    5. ']=' → logprob: -15.62692928314209
    6. '   ' → logprob: -15.62692928314209
    7. '=
' → logprob: -16.376928329467773
    8. ' ' → logprob: -16.626928329467773
    9. ')' → logprob: -17.251928329467773
    10. '                   ' → logprob: -17.376928329467773

Token 636: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -2.15310683415737e-05
    2. ' id' → logprob: -10.750021934509277
    3. ' ' → logprob: -20.62502098083496
    4. '   ' → logprob: -21.00002098083496
    5. '[id' → logprob: -21.12502098083496
    6. '(id' → logprob: -22.00002098083496
    7. '	id' → logprob: -22.87502098083496
    8. '
' → logprob: -22.87502098083496
    9. '  ' → logprob: -23.50002098083496
    10. 'int' → logprob: -23.62502098083496

Token 637: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.061972394585609436
    2. 'count' → logprob: -2.8119723796844482
    3. 'Count' → logprob: -12.811972618103027
    4. ' count' → logprob: -13.811972618103027
    5. '+' → logprob: -15.061972618103027
    6. '_COUNT' → logprob: -15.936972618103027
    7. '<|end|>' → logprob: -16.43697166442871
    8. ' ' → logprob: -16.56197166442871
    9. '$count' → logprob: -16.56197166442871
    10. '<count' → logprob: -16.81197166442871

Token 638: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02729247882962227
    2. '=' → logprob: -4.527292251586914
    3. '               ' → logprob: -5.402292251586914
    4. '           ' → logprob: -5.777292251586914
    5. '                       ' → logprob: -5.902292251586914
    6. ' =' → logprob: -5.902292251586914
    7. '```' → logprob: -6.902292251586914
    8. '<|end|>' → logprob: -7.527292251586914
    9. '       ' → logprob: -7.777292251586914
    10. ',' → logprob: -8.402292251586914

Token 639: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019776063039898872
    2. '```' → logprob: -4.519775867462158
    3. '               ' → logprob: -6.144775867462158
    4. ' =' → logprob: -6.144775867462158
    5. '                       ' → logprob: -6.144775867462158
    6. '=' → logprob: -7.019775867462158
    7. '           ' → logprob: -7.894775867462158
    8. '       ' → logprob: -8.144776344299316
    9. '<|end|>' → logprob: -8.519776344299316
    10. '                    ' → logprob: -9.144776344299316

Token 640: ' comp' (ID: 1050)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -2.558399319241289e-05
    2. ' id' → logprob: -10.625025749206543
    3. '                   ' → logprob: -14.000025749206543
    4. '```' → logprob: -16.250024795532227
    5. 'b' → logprob: -16.625024795532227
    6. '           ' → logprob: -16.875024795532227
    7. 'count' → logprob: -17.000024795532227
    8. '               ' → logprob: -17.250024795532227
    9. 'comp' (adapté à ' comp') → logprob: -17.500024795532227
    10. '       ' → logprob: -17.875024795532227

Token 641: '_list' (ID: 4162)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.18883301317691803
    2. '_list' → logprob: -2.188832998275757
    3. '_map' → logprob: -2.813832998275757
    4. 'count' → logprob: -9.938833236694336
    5. 'Count' → logprob: -13.938833236694336
    6. '_counts' → logprob: -13.938833236694336
    7. 'map' → logprob: -14.188833236694336
    8. '_id' → logprob: -14.188833236694336
    9. 'List' → logprob: -15.438833236694336
    10. 'list' → logprob: -15.563833236694336

Token 642: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.842555426876061e-06
    2. '.' → logprob: -12.750004768371582
    3. 'append' → logprob: -13.875004768371582
    4. ' .' → logprob: -14.625004768371582
    5. 'Append' → logprob: -15.250004768371582
    6. '.extend' → logprob: -17.1250057220459
    7. '.Append' → logprob: -17.2500057220459
    8. '...' → logprob: -17.3750057220459
    9. '```' → logprob: -17.7500057220459
    10. '<|end|>' → logprob: -18.0000057220459

Token 643: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.130576806142926e-05
    2. 'b' → logprob: -10.375031471252441
    3. '(' → logprob: -17.375030517578125
    4. '[b' → logprob: -17.625030517578125
    5. '	b' → logprob: -17.875030517578125
    6. '(
' → logprob: -18.000030517578125
    7. ' (' → logprob: -19.125030517578125
    8. ' ' → logprob: -20.125030517578125
    9. ')b' → logprob: -20.125030517578125
    10. '   ' → logprob: -20.250030517578125

Token 644: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0023622133303433657
    2. 'b' → logprob: -6.252362251281738
    3. 'r' → logprob: -7.877362251281738
    4. '[root' → logprob: -10.752362251281738
    5. '(root' → logprob: -11.252362251281738
    6. '_root' → logprob: -12.377362251281738
    7. 'roat' → logprob: -12.752362251281738
    8. '```' → logprob: -13.252362251281738
    9. 'rot' → logprob: -13.502362251281738
    10. 'ro' → logprob: -13.627362251281738

Token 645: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0999453216791153
    2. ')
' → logprob: -2.474945306777954
    3. '                   ' → logprob: -4.599945545196533
    4. '               ' → logprob: -8.474945068359375
    5. ',' → logprob: -8.724945068359375
    6. ',
' → logprob: -8.974945068359375
    7. '<|end|>' → logprob: -9.099945068359375
    8. '```' → logprob: -9.724945068359375
    9. ']' → logprob: -10.099945068359375
    10. '
' → logprob: -10.099945068359375

Token 646: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009298531338572502
    2. '               ' → logprob: -5.134298324584961
    3. '<|end|>' → logprob: -6.634298324584961
    4. '```' → logprob: -7.259298324584961
    5. '           ' → logprob: -7.884298324584961
    6. '                       ' → logprob: -8.259298324584961
    7. '                  ' → logprob: -9.009298324584961
    8. '       ' → logprob: -9.384298324584961
    9. '
' → logprob: -9.509298324584961
    10. ')' → logprob: -9.509298324584961

Token 647: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.001250942936167121
    2. ' id' → logprob: -7.126250743865967
    3. '                   ' → logprob: -7.751250743865967
    4. '               ' → logprob: -12.376251220703125
    5. '1' → logprob: -12.501251220703125
    6. '```' → logprob: -13.251251220703125
    7. '           ' → logprob: -13.376251220703125
    8. '                       ' → logprob: -14.001251220703125
    9. '++' → logprob: -14.501251220703125
    10. 'count' → logprob: -14.626251220703125

Token 648: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.68153518543113e-05
    2. 'count' → logprob: -9.875057220458984
    3. '_map' → logprob: -12.500057220458984
    4. 'Count' → logprob: -13.750057220458984
    5. '=' → logprob: -16.375057220458984
    6. 'map' → logprob: -16.375057220458984
    7. ' count' → logprob: -16.875057220458984
    8. '   ' → logprob: -17.000057220458984
    9. '+=' → logprob: -17.000057220458984
    10. '_COUNT' → logprob: -17.625057220458984

Token 649: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25199469923973083
    2. ' +=' → logprob: -1.5019947290420532
    3. '+' → logprob: -10.251995086669922
    4. '=' → logprob: -11.126995086669922
    5. '   ' → logprob: -11.626995086669922
    6. ']+=' → logprob: -12.376995086669922
    7. '<|end|>' → logprob: -14.251995086669922
    8. '```' → logprob: -14.626995086669922
    9. ' ' → logprob: -14.876995086669922
    10. '+='' → logprob: -15.751995086669922

Token 650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -17.875
    4. '<|end|>' → logprob: -19.625
    5. '
' → logprob: -20.0
    6. '=' → logprob: -20.25
    7. '2' → logprob: -20.5
    8. '۱' → logprob: -20.625
    9. '+' → logprob: -21.0625
    10. '１' → logprob: -21.3125

Token 651: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04601547122001648
    2. '```' → logprob: -3.921015501022339
    3. 'for' → logprob: -5.42101526260376
    4. '
' → logprob: -5.54601526260376
    5. 'from' → logprob: -5.67101526260376
    6. '   ' → logprob: -5.67101526260376
    7. 'import' → logprob: -6.17101526260376
    8. ' for' → logprob: -6.67101526260376
    9. '	' → logprob: -6.79601526260376
    10. 'graph' → logprob: -6.92101526260376

Token 653: ' if' (ID: 538)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.48029497265815735
    2. 'import' → logprob: -1.480294942855835
    3. 'size' → logprob: -2.480294942855835
    4. '       ' → logprob: -3.855294942855835
    5. 'graph' → logprob: -4.230295181274414
    6. 'n' → logprob: -4.605295181274414
    7. 'dp' → logprob: -5.355295181274414
    8. 'adj' → logprob: -5.480295181274414
    9. 'if' (adapté à ' if') → logprob: -5.730295181274414
    10. 'k' → logprob: -5.980295181274414

Token 654: ' id' (ID: 1211)
  Prédit: ' id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' id' → logprob: -0.4835791289806366
    2. 'id' → logprob: -0.983579158782959
    3. 'len' → logprob: -4.983579158782959
    4. ' len' → logprob: -5.983579158782959
    5. ' not' → logprob: -10.3585786819458
    6. '   ' → logprob: -11.3585786819458
    7. ' ' → logprob: -11.4835786819458
    8. '(id' → logprob: -11.4835786819458
    9. 'not' → logprob: -12.3585786819458
    10. '	id' → logprob: -12.6085786819458

Token 655: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.002489691600203514
    2. '_map' → logprob: -6.0024895668029785
    3. 'count' → logprob: -11.877490043640137
    4. '>' → logprob: -12.377490043640137
    5. '_' → logprob: -14.627490043640137
    6. 'Count' → logprob: -14.752490043640137
    7. '_id' → logprob: -15.002490043640137
    8. '_counts' → logprob: -15.127490043640137
    9. '_cnt' → logprob: -16.00248908996582
    10. ')' → logprob: -16.00248908996582

Token 656: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4333564341068268
    2. '>' → logprob: -1.0583564043045044
    3. ' <' → logprob: -6.433356285095215
    4. '==' → logprob: -6.683356285095215
    5. ' ==' → logprob: -7.058356285095215
    6. '<' → logprob: -8.308356285095215
    7. ' >
' → logprob: -8.808356285095215
    8. '<|end|>' → logprob: -8.808356285095215
    9. ' >=' → logprob: -9.558356285095215
    10. '>=' → logprob: -9.933356285095215

Token 657: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036612374242395163
    2. ' ' → logprob: -5.628661155700684
    3. '1' → logprob: -10.128661155700684
    4. '2' → logprob: -11.003661155700684
    5. '   ' → logprob: -13.441161155700684
    6. '  ' → logprob: -14.253661155700684
    7. '    ' → logprob: -14.503661155700684
    8. '```' → logprob: -14.628661155700684
    9. '۰' → logprob: -15.691161155700684
    10. '
' → logprob: -16.128662109375

Token 658: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004932019859552383
    2. '1' → logprob: -5.379931926727295
    3. ' ' → logprob: -8.254932403564453
    4. '2' → logprob: -10.129932403564453
    5. '   ' → logprob: -12.567432403564453
    6. '```' → logprob: -12.817432403564453
    7. '
' → logprob: -14.254932403564453
    8. '<=' → logprob: -14.754932403564453
    9. '  ' → logprob: -14.817432403564453
    10. '    ' → logprob: -14.942432403564453

Token 659: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28151294589042664
    2. ':
' → logprob: -1.406512975692749
    3. '       ' → logprob: -8.656513214111328
    4. '           ' → logprob: -8.781513214111328
    5. ':return' → logprob: -11.531513214111328
    6. 'continue' → logprob: -12.406513214111328
    7. '   ' → logprob: -12.531513214111328
    8. ':

' → logprob: -12.656513214111328
    9. '<|end|>' → logprob: -12.781513214111328
    10. ' continue' → logprob: -13.031513214111328

Token 660: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14967088401317596
    2. '           ' → logprob: -2.0246708393096924
    3. '```' → logprob: -5.6496710777282715
    4. '   ' → logprob: -6.3996710777282715
    5. ' continue' → logprob: -6.8996710777282715
    6. 'continue' → logprob: -7.5246710777282715
    7. '
' → logprob: -9.274670600891113
    8. ' for' → logprob: -9.774670600891113
    9. '	       ' → logprob: -11.149670600891113
    10. '	continue' → logprob: -11.399670600891113

Token 661: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7322046756744385
    2. '       ' → logprob: -0.9822046756744385
    3. 'continue' → logprob: -2.7322046756744385
    4. '   ' → logprob: -2.7322046756744385
    5. '           ' → logprob: -4.607204437255859
    6. '
' → logprob: -6.232204437255859
    7. '	continue' → logprob: -6.482204437255859
    8. '```' → logprob: -6.982204437255859
    9. ' for' → logprob: -10.23220443725586
    10. ' ' → logprob: -11.23220443725586

Token 662: ' all' (ID: 722)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.12351357191801071
    2. ' continue' → logprob: -2.4985134601593018
    3. '   ' → logprob: -4.373513698577881
    4. 'i' → logprob: -4.498513698577881
    5. '       ' → logprob: -4.998513698577881
    6. 'for' → logprob: -6.498513698577881
    7. ' i' → logprob: -6.873513698577881
    8. '           ' → logprob: -8.748513221740723
    9. '```' → logprob: -8.873513221740723
    10. 'ways' → logprob: -8.873513221740723

Token 663: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.38117775321006775
    2. ' edges' → logprob: -1.2561777830123901
    3. 'same' → logprob: -3.8811776638031006
    4. 'union' → logprob: -5.63117790222168
    5. 'components' → logprob: -6.50617790222168
    6. 'connected' → logprob: -6.50617790222168
    7. 'connections' → logprob: -7.25617790222168
    8. ' same' → logprob: -7.38117790222168
    9. 'already' → logprob: -7.50617790222168
    10. 'un' → logprob: -7.63117790222168

Token 664: ' connect' (ID: 4837)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.8033583760261536
    2. 'used' → logprob: -1.1783583164215088
    3. ' have' → logprob: -2.678358316421509
    4. ' are' → logprob: -3.303358316421509
    5. 'have' → logprob: -3.553358316421509
    6. 'processed' → logprob: -4.178358554840088
    7. ' processed' → logprob: -4.678358554840088
    8. 'are' → logprob: -4.928358554840088
    9. 'connected' → logprob: -4.928358554840088
    10. '_used' → logprob: -4.928358554840088

Token 665: ' nodes' (ID: 15749)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.46133068203926086
    2. 'already' → logprob: -1.8363306522369385
    3. 'nodes' → logprob: -1.9613306522369385
    4. ' nodes' → logprob: -3.7113306522369385
    5. ' components' → logprob: -4.461330890655518
    6. 'vertices' → logprob: -4.586330890655518
    7. 'same' → logprob: -4.961330890655518
    8. 'the' → logprob: -5.961330890655518
    9. ' already' → logprob: -5.961330890655518
    10. 'previous' → logprob: -6.086330890655518

Token 666: ' already' (ID: 4279)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'already' → logprob: -0.6547951102256775
    2. 'in' → logprob: -2.0297951698303223
    3. '       ' → logprob: -2.2797951698303223
    4. ' in' → logprob: -2.4047951698303223
    5. ' already' → logprob: -2.9047951698303223
    6. ' that' → logprob: -3.2797951698303223
    7. '   ' → logprob: -4.154795169830322
    8. '           ' → logprob: -4.404795169830322
    9. 'that' → logprob: -4.529795169830322
    10. '```' → logprob: -5.029795169830322

Token 667: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11388719081878662
    2. 'un' → logprob: -2.488887310028076
    3. 'connected' → logprob: -3.988887310028076
    4. 'union' → logprob: -5.363887310028076
    5. 'merged' → logprob: -7.738887310028076
    6. 'included' → logprob: -8.113886833190918
    7. ' in' → logprob: -8.738886833190918
    8. '```' → logprob: -8.988886833190918
    9. 'joined' → logprob: -9.113886833190918
    10. 'visited' → logprob: -9.238886833190918

Token 668: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.48144078254699707
    2. 'the' → logprob: -0.9814407825469971
    3. 'one' → logprob: -5.231440544128418
    4. 'M' → logprob: -6.606440544128418
    5. ' the' → logprob: -8.481440544128418
    6. ' same' → logprob: -8.731440544128418
    7. 'a' → logprob: -9.356440544128418
    8. 'existing' → logprob: -10.106440544128418
    9. ' MST' → logprob: -10.481440544128418
    10. 'mst' → logprob: -10.481440544128418

Token 669: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.0017556219827383757
    2. 'components' → logprob: -7.001755714416504
    3. ' component' → logprob: -7.876755714416504
    4. 'set' → logprob: -8.001755714416504
    5. ' set' → logprob: -9.376755714416504
    6. 'union' → logprob: -11.376755714416504
    7. '```' → logprob: -11.626755714416504
    8. 'connected' → logprob: -12.126755714416504
    9. ' ' → logprob: -12.376755714416504
    10. ' components' → logprob: -12.501755714416504

Token 670: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16178762912750244
    2. 'continue' → logprob: -2.661787509918213
    3. '           ' → logprob: -3.536787509918213
    4. ' continue' → logprob: -3.786787509918213
    5. ',' → logprob: -4.411787509918213
    6. '```' → logprob: -4.911787509918213
    7. '   ' → logprob: -6.411787509918213
    8. ':
' → logprob: -6.536787509918213
    9. ':' → logprob: -6.661787509918213
    10. '.' → logprob: -7.036787509918213

Token 671: ' nothing' (ID: 6939)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09125739336013794
    2. 'continue' → logprob: -3.466257333755493
    3. '           ' → logprob: -4.091257572174072
    4. ' continue' → logprob: -4.341257572174072
    5. 'i' → logprob: -4.716257572174072
    6. 'ways' → logprob: -5.091257572174072
    7. '   ' → logprob: -5.091257572174072
    8. ' i' → logprob: -5.966257572174072
    9. ' ways' → logprob: -6.591257572174072
    10. '```' → logprob: -7.841257572174072

Token 672: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6041073203086853
    2. ' to' → logprob: -0.9791073203086853
    3. '           ' → logprob: -2.97910737991333
    4. 'to' → logprob: -3.72910737991333
    5. '       ' → logprob: -6.10410737991333
    6. 'continue' → logprob: -7.97910737991333
    7. '               ' → logprob: -9.604106903076172
    8. '.' → logprob: -9.604106903076172
    9. 'contin' → logprob: -9.729106903076172
    10. ' ' → logprob: -10.729106903076172

Token 673: ' do' (ID: 621)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.021882526576519012
    2. 'union' → logprob: -4.0218825340271
    3. ' do' → logprob: -5.7718825340271
    4. 'process' → logprob: -8.771882057189941
    5. 'done' → logprob: -8.896882057189941
    6. 'update' → logprob: -9.271882057189941
    7. 'add' → logprob: -9.646882057189941
    8. 'un' → logprob: -9.771882057189941
    9. 'continue' → logprob: -9.771882057189941
    10. ' union' → logprob: -11.396882057189941

Token 674: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10031579434871674
    2. '           ' → logprob: -2.600315809249878
    3. '
' → logprob: -4.350315570831299
    4. 'continue' → logprob: -5.850315570831299
    5. '\n' → logprob: -5.850315570831299
    6. ' continue' → logprob: -6.725315570831299
    7. ',' → logprob: -7.975315570831299
    8. '```' → logprob: -7.975315570831299
    9. '   ' → logprob: -8.100316047668457
    10. ',
' → logprob: -9.975316047668457

Token 675: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006950510665774345
    2. '           ' → logprob: -5.631950378417969
    3. '
' → logprob: -6.756950378417969
    4. ' continue' → logprob: -7.256950378417969
    5. 'continue' → logprob: -7.506950378417969
    6. '   ' → logprob: -8.131950378417969
    7. '```' → logprob: -8.131950378417969
    8. '	continue' → logprob: -8.381950378417969
    9. '	' → logprob: -9.881950378417969
    10. '<|end|>' → logprob: -11.256950378417969

Token 676: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.14218728244304657
    2. '       ' → logprob: -2.1421873569488525
    3. '           ' → logprob: -5.017187118530273
    4. ' continue' → logprob: -5.267187118530273
    5. '   ' → logprob: -5.767187118530273
    6. '```' → logprob: -8.642187118530273
    7. '	continue' → logprob: -10.142187118530273
    8. '               ' → logprob: -12.142187118530273
    9. '
' → logprob: -12.267187118530273
    10. 'contin' → logprob: -12.767187118530273

Token 677: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14106237888336182
    2. '       ' → logprob: -2.8910622596740723
    3. '<|end|>' → logprob: -4.266062259674072
    4. '```' → logprob: -4.391062259674072
    5. 'from' → logprob: -4.516062259674072
    6. 'else' → logprob: -4.891062259674072
    7. 'import' → logprob: -5.016062259674072
    8. '        
' → logprob: -5.141062259674072
    9. 'graph' → logprob: -6.016062259674072
    10. '  
' → logprob: -6.266062259674072

Token 678: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4058300256729126
    2. 'import' → logprob: -1.5308300256729126
    3. 'graph' → logprob: -1.5308300256729126
    4. '
' → logprob: -2.030829906463623
    5. 'from' → logprob: -2.155829906463623
    6. '       ' → logprob: -4.155829906463623
    7. 'union' → logprob: -4.655829906463623
    8. ' from' → logprob: -5.030829906463623
    9. '        
' → logprob: -5.030829906463623
    10. ' graph' → logprob: -5.155829906463623

Token 679: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6631746888160706
    2. 'import' → logprob: -1.0381746292114258
    3. 'graph' → logprob: -3.288174629211426
    4. '       ' → logprob: -3.413174629211426
    5. 'adj' → logprob: -3.538174629211426
    6. '#' (adapté à ' #') → logprob: -4.663174629211426
    7. 'sub' → logprob: -5.413174629211426
    8. 'edges' → logprob: -5.913174629211426
    9. 'size' → logprob: -5.913174629211426
    10. 'temp' → logprob: -6.163174629211426

Token 680: ' Build' (ID: 10885)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7551268935203552
    2. 'from' → logprob: -0.8801268935203552
    3. 'graph' → logprob: -3.630126953125
    4. 'adj' → logprob: -3.880126953125
    5. 'size' → logprob: -4.130126953125
    6. 'sub' → logprob: -4.130126953125
    7. 'comp' → logprob: -5.005126953125
    8. '#' → logprob: -5.005126953125
    9. 'temp' → logprob: -5.255126953125
    10. 'nodes' → logprob: -5.505126953125

Token 681: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09176617115736008
    2. 'adj' → logprob: -2.591766119003296
    3. 'from' → logprob: -5.716766357421875
    4. 'g' → logprob: -5.966766357421875
    5. ' graph' → logprob: -5.966766357421875
    6. 'import' → logprob: -6.091766357421875
    7. ' adj' → logprob: -7.466766357421875
    8. 'sub' → logprob: -7.591766357421875
    9. 'temp' → logprob: -7.841766357421875
    10. 'tmp' → logprob: -8.966766357421875

Token 682: ' of' (ID: 328)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9007795453071594
    2. '       ' → logprob: -1.2757794857025146
    3. ' =' → logprob: -2.0257794857025146
    4. 'adj' → logprob: -2.6507794857025146
    5. '=' → logprob: -4.025779724121094
    6. 'temp' → logprob: -4.525779724121094
    7. '   ' → logprob: -4.775779724121094
    8. 'G' → logprob: -4.775779724121094
    9. ' graph' → logprob: -4.900779724121094
    10. ':' → logprob: -4.900779724121094

Token 683: ' these' (ID: 1879)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.1561310291290283
    2. 'components' → logprob: -1.1561310291290283
    3. 'id' → logprob: -2.1561310291290283
    4. 'connections' → logprob: -2.2811310291290283
    5. 'size' → logprob: -2.5311310291290283
    6. 'the' → logprob: -4.031130790710449
    7. ' comp' → logprob: -4.281130790710449
    8. 'current' → logprob: -5.281130790710449
    9. 'nodes' → logprob: -5.406130790710449
    10. ' id' → logprob: -5.781130790710449

Token 684: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.3465558290481567
    2. 'comp' → logprob: -1.4715558290481567
    3. 'nodes' → logprob: -1.9715558290481567
    4. 'id' → logprob: -2.346555709838867
    5. 'connections' → logprob: -2.596555709838867
    6. 'edges' → logprob: -3.096555709838867
    7. ' edges' → logprob: -3.721555709838867
    8. ' components' → logprob: -3.971555709838867
    9. ' nodes' → logprob: -4.096555709838867
    10. ' comp' → logprob: -4.471555709838867

Token 685: ' connected' (ID: 12079)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25182974338531494
    2. ':' → logprob: -2.1268296241760254
    3. ' =' → logprob: -3.6268296241760254
    4. 'graph' → logprob: -4.126829624176025
    5. ',' → logprob: -4.876829624176025
    6. ':
' → logprob: -5.001829624176025
    7. '        
' → logprob: -5.126829624176025
    8. ' graph' → logprob: -5.251829624176025
    9. '
' → logprob: -5.626829624176025
    10. ' with' → logprob: -5.751829624176025

Token 686: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.26839226484298706
    2. ' by' → logprob: -2.018392324447632
    3. '       ' → logprob: -2.518392324447632
    4. 'with' → logprob: -4.893392086029053
    5. 'for' → logprob: -5.643392086029053
    6. 'edges' → logprob: -5.643392086029053
    7. 'nodes' → logprob: -6.393392086029053
    8. 'components' → logprob: -6.643392086029053
    9. 'adj' → logprob: -7.768392086029053
    10. '=' → logprob: -7.893392086029053

Token 687: ' edges' (ID: 22569)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.35993921756744385
    2. 'edges' → logprob: -1.8599392175674438
    3. ' edges' → logprob: -2.3599390983581543
    4. ' same' → logprob: -3.6099390983581543
    5. 'the' → logprob: -4.734939098358154
    6. '[]' → logprob: -5.859939098358154
    7. ' the' → logprob: -6.109939098358154
    8. '[' → logprob: -6.859939098358154
    9. 'these' → logprob: -6.859939098358154
    10. 'default' → logprob: -7.109939098358154

Token 688: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06796187907457352
    2. 'graph' → logprob: -3.4429619312286377
    3. 'G' → logprob: -5.442961692810059
    4. ',' → logprob: -5.567961692810059
    5. ' graph' → logprob: -5.692961692810059
    6. '```' → logprob: -5.817961692810059
    7. '        
' → logprob: -6.192961692810059
    8. ':' → logprob: -6.192961692810059
    9. 'from' → logprob: -6.317961692810059
    10. '
' → logprob: -6.442961692810059

Token 689: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.6099990010261536
    2. 'cost' → logprob: -1.3599989414215088
    3. 'this' → logprob: -1.9849989414215088
    4. ' cost' → logprob: -3.859998941421509
    5. 'the' → logprob: -3.984998941421509
    6. ' this' → logprob: -4.359999179840088
    7. ' same' → logprob: -5.359999179840088
    8. 'that' → logprob: -6.359999179840088
    9. ' the' → logprob: -6.484999179840088
    10. '```' → logprob: -7.359999179840088

Token 690: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.49326300621032715
    2. ' cost' → logprob: -0.9932630062103271
    3. '_cost' → logprob: -3.993263006210327
    4. '   ' → logprob: -8.493263244628906
    5. '
' → logprob: -8.868263244628906
    6. '```' → logprob: -8.993263244628906
    7. '-cost' → logprob: -11.118263244628906
    8. ' costs' → logprob: -11.743263244628906
    9. '(cost' → logprob: -11.868263244628906
    10. '       ' → logprob: -11.993263244628906

Token 691: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5512768030166626
    2. '       ' → logprob: -1.9262768030166626
    3. '
' → logprob: -2.051276683807373
    4. ' graph' → logprob: -2.551276683807373
    5. 'G' → logprob: -4.551276683807373
    6. '        
' → logprob: -4.551276683807373
    7. '```' → logprob: -4.551276683807373
    8. ':' → logprob: -5.176276683807373
    9. 'adj' → logprob: -5.301276683807373
    10. ',' → logprob: -5.551276683807373

Token 692: '       ' (ID: 309)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9029498100280762
    2. '       ' → logprob: -1.2779498100280762
    3. ' graph' → logprob: -2.402949810028076
    4. '```' → logprob: -2.777949810028076
    5. '
' → logprob: -3.152949810028076
    6. 'G' → logprob: -3.527949810028076
    7. '   ' → logprob: -4.152949810028076
    8. 'import' → logprob: -4.402949810028076
    9. '        
' → logprob: -4.777949810028076
    10. 'g' → logprob: -5.152949810028076

Token 693: ' comp' (ID: 1050)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.20569634437561035
    2. ' graph' → logprob: -1.9556963443756104
    3. 'from' → logprob: -4.330696105957031
    4. '       ' → logprob: -4.580696105957031
    5. 'import' → logprob: -5.205696105957031
    6. 'g' → logprob: -5.705696105957031
    7. ' from' → logprob: -5.705696105957031
    8. '
' → logprob: -6.205696105957031
    9. '```' → logprob: -6.330696105957031
    10. 'adj' → logprob: -6.705696105957031

Token 694: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.2495059370994568
    2. '_repr' → logprob: -2.1245059967041016
    3. '_list' → logprob: -3.8745059967041016
    4. 'graph' → logprob: -3.9995059967041016
    5. '_edges' → logprob: -3.9995059967041016
    6. '_adj' → logprob: -4.374505996704102
    7. '_map' → logprob: -4.624505996704102
    8. '_nodes' → logprob: -4.999505996704102
    9. 's' → logprob: -5.374505996704102
    10. ' =' → logprob: -6.499505996704102

Token 695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890179008245468
    2. ' =' → logprob: -2.578901767730713
    3. '={}' → logprob: -12.078902244567871
    4. '=[' → logprob: -12.828902244567871
    5. '={' → logprob: -13.328902244567871
    6. '=[]' → logprob: -13.578902244567871
    7. '[' → logprob: -15.203902244567871
    8. '＝' → logprob: -15.578902244567871
    9. '={}
' → logprob: -16.328901290893555
    10. '{' → logprob: -16.828901290893555

Token 696: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.039728302508592606
    2. '{' → logprob: -3.2897284030914307
    3. ' [[]' → logprob: -6.539728164672852
    4. '{}' → logprob: -8.539728164672852
    5. '[[' → logprob: -11.039728164672852
    6. 'default' → logprob: -11.164728164672852
    7. '{}
' → logprob: -11.289728164672852
    8. 'collections' → logprob: -13.789728164672852
    9. '{}

' → logprob: -14.289728164672852
    10. '[{' → logprob: -15.289728164672852

Token 697: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08262474089860916
    2. ' for' → logprob: -3.457624673843384
    3. ']' → logprob: -4.207624912261963
    4. '(id' → logprob: -4.457624912261963
    5. '(len' → logprob: -4.707624912261963
    6. ',' → logprob: -4.707624912261963
    7. ')' → logprob: -6.707624912261963
    8. '[id' → logprob: -7.832624912261963
    9. '(' → logprob: -8.082624435424805
    10. 'id' → logprob: -8.332624435424805

Token 698: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5326874256134033
    2. 'range' → logprob: -1.0326874256134033
    3. ' range' → logprob: -3.0326874256134033
    4. 'in' → logprob: -5.032687187194824
    5. '_range' → logprob: -6.657687187194824
    6. ' in' → logprob: -7.532687187194824
    7. '_id' → logprob: -8.782687187194824
    8. ' _' → logprob: -8.782687187194824
    9. '_in' → logprob: -10.282687187194824
    10. 'id' → logprob: -11.157687187194824

Token 699: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002552711870521307
    2. ' range' → logprob: -6.002552509307861
    3. 'in' → logprob: -9.87755298614502
    4. 'id' → logprob: -11.12755298614502
    5. '_' → logprob: -12.12755298614502
    6. '(range' → logprob: -12.62755298614502
    7. '_range' → logprob: -14.25255298614502
    8. 'i' → logprob: -14.50255298614502
    9. ' in' → logprob: -14.50255298614502
    10. ' ' → logprob: -15.37755298614502

Token 700: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005243479739874601
    2. ' range' → logprob: -5.255243301391602
    3. 'id' → logprob: -11.630243301391602
    4. '(range' → logprob: -14.130243301391602
    5. '
' → logprob: -16.7552433013916
    6. ' ' → logprob: -19.3802433013916
    7. '	range' → logprob: -19.3802433013916
    8. ' id' → logprob: -19.5052433013916
    9. '   ' → logprob: -19.8802433013916
    10. '(id' → logprob: -20.0052433013916

Token 701: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.014168561436235905
    2. 'id' → logprob: -4.264168739318848
    3. '(' → logprob: -13.014168739318848
    4. '(len' → logprob: -13.639168739318848
    5. ' id' → logprob: -14.514168739318848
    6. ' (' → logprob: -14.639168739318848
    7. '[id' → logprob: -15.264168739318848
    8. 'len' → logprob: -15.639168739318848
    9. '?id' → logprob: -16.88916778564453
    10. '((' → logprob: -17.26416778564453

Token 702: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00018208740220870823
    2. 'count' → logprob: -8.625182151794434
    3. 'Count' → logprob: -14.500182151794434
    4. '_map' → logprob: -14.625182151794434
    5. '_id' → logprob: -14.875182151794434
    6. '_list' → logprob: -15.250182151794434
    7. ' count' → logprob: -15.500182151794434
    8. '   ' → logprob: -15.750182151794434
    9. '_c' → logprob: -17.000181198120117
    10. ']' → logprob: -17.125181198120117

Token 703: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27238190174102783
    2. ')]' → logprob: -1.7723819017410278
    3. ']
' → logprob: -2.7723817825317383
    4. ')]
' → logprob: -5.272381782531738
    5. ')' → logprob: -7.397381782531738
    6. ']
' → logprob: -9.272381782531738
    7. ']

' → logprob: -9.272381782531738
    8. ' ]' → logprob: -10.897381782531738
    9. ')
' → logprob: -11.272381782531738
    10. ')]

' → logprob: -11.272381782531738

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25279101729393005
    2. '
' → logprob: -2.127790927886963
    3. '<|end|>' → logprob: -3.002790927886963
    4. 'for' → logprob: -4.127790927886963
    5. ' for' → logprob: -4.252790927886963
    6. '        
' → logprob: -4.627790927886963
    7. '   ' → logprob: -5.127790927886963
    8. '  
' → logprob: -6.252790927886963
    9. '```' → logprob: -6.877790927886963
    10. '    
' → logprob: -7.127790927886963

Token 705: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0036611182149499655
    2. '       ' → logprob: -5.878661155700684
    3. ' for' → logprob: -7.128661155700684
    4. '   ' → logprob: -10.503661155700684
    5. '```' → logprob: -11.503661155700684
    6. 'from' → logprob: -11.628661155700684
    7. 'edges' → logprob: -12.753661155700684
    8. '	for' → logprob: -13.253661155700684
    9. '           ' → logprob: -14.003661155700684
    10. 'edge' → logprob: -15.253661155700684

Token 706: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.025544915348291397
    2. ' c' → logprob: -4.650545120239258
    3. '_,' → logprob: -4.775545120239258
    4. '(_,' → logprob: -5.525545120239258
    5. '(c' → logprob: -6.150545120239258
    6. ' _,' → logprob: -7.650545120239258
    7. '   ' → logprob: -8.025545120239258
    8. ' ' → logprob: -9.150545120239258
    9. ' (' → logprob: -9.275545120239258
    10. ' (_,' → logprob: -10.400545120239258

Token 707: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0208143163472414
    2. ',a' → logprob: -3.8958144187927246
    3. ' ,' → logprob: -8.645813941955566
    4. ',s' → logprob: -9.520813941955566
    5. 'same' → logprob: -11.895813941955566
    6. ',b' → logprob: -12.395813941955566
    7. ',x' → logprob: -12.895813941955566
    8. ',(' → logprob: -13.520813941955566
    9. 'a' → logprob: -13.520813941955566
    10. '_,' → logprob: -13.895813941955566

Token 708: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019791612401604652
    2. ',b' → logprob: -4.019791603088379
    3. ' ,' → logprob: -7.394791603088379
    4. 'root' → logprob: -7.519791603088379
    5. 'b' → logprob: -8.644791603088379
    6. ',a' → logprob: -9.269791603088379
    7. '_root' → logprob: -10.019791603088379
    8. '_,' → logprob: -10.394791603088379
    9. 'in' → logprob: -10.769791603088379
    10. ',
' → logprob: -11.394791603088379

Token 709: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2231007218360901
    2. 'in' → logprob: -1.7231006622314453
    3. ',' → logprob: -3.9731006622314453
    4. '       ' → logprob: -7.223100662231445
    5. '   ' → logprob: -7.473100662231445
    6. ':' → logprob: -7.848100662231445
    7. ':
' → logprob: -8.348100662231445
    8. ')' → logprob: -8.473100662231445
    9. '           ' → logprob: -9.098100662231445
    10. '=' → logprob: -9.723100662231445

Token 710: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.000145137935760431
    2. ' same' → logprob: -8.875144958496094
    3. '   ' → logprob: -12.375144958496094
    4. '[s' → logprob: -15.250144958496094
    5. 'sam' → logprob: -15.875144958496094
    6. 's' → logprob: -16.000144958496094
    7. ' ' → logprob: -16.250144958496094
    8. '
' → logprob: -16.375144958496094
    9. '```' → logprob: -16.500144958496094
    10. '.same' → logprob: -16.875144958496094

Token 711: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0017060093814507127
    2. 'cost' → logprob: -6.376706123352051
    3. 'same' → logprob: -13.62670612335205
    4. '_edges' → logprob: -13.75170612335205
    5. 'edges' → logprob: -15.37670612335205
    6. '```' → logprob: -15.37670612335205
    7. 'Cost' → logprob: -15.50170612335205
    8. ' cost' → logprob: -15.62670612335205
    9. '\' → logprob: -15.75170612335205
    10. '_COST' → logprob: -16.376705169677734

Token 712: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00110116065479815
    2. 'edges' → logprob: -6.876101016998291
    3. 's' → logprob: -10.12610149383545
    4. '```' → logprob: -12.25110149383545
    5. 'Edges' → logprob: -12.37610149383545
    6. '
' → logprob: -13.00110149383545
    7. '   ' → logprob: -13.12610149383545
    8. ' edges' → logprob: -13.25110149383545
    9. ')' → logprob: -13.62610149383545
    10. '_cost' → logprob: -13.62610149383545

Token 713: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2525738775730133
    2. ':' → logprob: -1.502573847770691
    3. '       ' → logprob: -8.12757396697998
    4. '):
' → logprob: -8.75257396697998
    5. ',' → logprob: -9.87757396697998
    6. '           ' → logprob: -10.12757396697998
    7. '   ' → logprob: -10.25257396697998
    8. ':
' → logprob: -10.25257396697998
    9. ':

' → logprob: -12.25257396697998
    10. '[' → logprob: -12.37757396697998

Token 714: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10493305325508118
    2. '       ' → logprob: -2.854933023452759
    3. '
' → logprob: -4.354933261871338
    4. '    
' → logprob: -4.354933261871338
    5. '           ' → logprob: -4.979933261871338
    6. ' 
' → logprob: -5.854933261871338
    7. ' if' → logprob: -6.104933261871338
    8. '  
' → logprob: -6.729933261871338
    9. ' ' → logprob: -7.604933261871338
    10. '```' → logprob: -7.604933261871338

Token 715: ' a' (ID: 261)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.06932543963193893
    2. '   ' → logprob: -2.8193254470825195
    3. 'a' (adapté à ' a') → logprob: -5.4443254470825195
    4. ' a' → logprob: -7.1943254470825195
    5. ' ar' → logprob: -7.1943254470825195
    6. '       ' → logprob: -7.3193254470825195
    7. '	ar' → logprob: -8.44432544708252
    8. 'if' → logprob: -8.69432544708252
    9. ' if' → logprob: -8.94432544708252
    10. '$ar' → logprob: -9.44432544708252

Token 716: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.005250829737633467
    2. ' =' → logprob: -5.880250930786133
    3. '=' → logprob: -6.880250930786133
    4. ',' → logprob: -7.130250930786133
    5. 'r' → logprob: -8.255250930786133
    6. '_root' → logprob: -8.755250930786133
    7. 'repr' → logprob: -10.505250930786133
    8. '_repr' → logprob: -10.505250930786133
    9. '=root' → logprob: -10.505250930786133
    10. '_id' → logprob: -10.755250930786133

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34878766536712646
    2. ' =' → logprob: -1.2237876653671265
    3. ',' → logprob: -8.598787307739258
    4. 'a' → logprob: -10.098787307739258
    5. '=
' → logprob: -10.598787307739258
    6. '=a' → logprob: -10.723787307739258
    7. 'id' → logprob: -10.973787307739258
    8. '=id' → logprob: -11.723787307739258
    9. '_id' → logprob: -11.848787307739258
    10. ')' → logprob: -11.973787307739258

Token 718: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.01232103817164898
    2. ' find' → logprob: -4.6373209953308105
    3. 'parent' → logprob: -6.0123209953308105
    4. 'id' → logprob: -9.512321472167969
    5. ' parent' → logprob: -10.512321472167969
    6. 'comp' → logprob: -12.637321472167969
    7. ' id' → logprob: -13.137321472167969
    8. '(find' → logprob: -13.387321472167969
    9. '[parent' → logprob: -13.887321472167969
    10. '	find' → logprob: -14.262321472167969

Token 719: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.005248225759714842
    2. 'parent' → logprob: -5.255248069763184
    3. ' parent' → logprob: -11.880248069763184
    4. ',parent' → logprob: -12.505248069763184
    5. '[parent' → logprob: -12.630248069763184
    6. '	parent' → logprob: -16.0052490234375
    7. '(' → logprob: -16.2552490234375
    8. '(paren' → logprob: -16.6302490234375
    9. '.parent' → logprob: -17.1302490234375
    10. '(
' → logprob: -18.1302490234375

Token 720: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.16065992414951324
    2. ',' → logprob: -1.910659909248352
    3. 'a' → logprob: -8.160659790039062
    4. ' ,' → logprob: -9.410659790039062
    5. ',b' → logprob: -10.535659790039062
    6. '(a' → logprob: -11.410659790039062
    7. ',x' → logprob: -12.160659790039062
    8. ',[' → logprob: -12.410659790039062
    9. ',A' → logprob: -12.535659790039062
    10. ',parent' → logprob: -12.910659790039062

Token 721: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004131472669541836
    2. ')' → logprob: -5.504131317138672
    3. '           ' → logprob: -10.129131317138672
    4. ')
' → logprob: -11.504131317138672
    5. ' )
' → logprob: -14.254131317138672
    6. ')a' → logprob: -14.254131317138672
    7. ')

' → logprob: -14.379131317138672
    8. '       ' → logprob: -14.879131317138672
    9. ')b' → logprob: -16.004131317138672
    10. '   ' → logprob: -16.004131317138672

Token 722: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07991679012775421
    2. 'b' → logprob: -2.5799167156219482
    3. '       ' → logprob: -7.454916954040527
    4. '   ' → logprob: -8.079916954040527
    5. ' b' → logprob: -9.079916954040527
    6. ' ' → logprob: -12.079916954040527
    7. '<|end|>' → logprob: -12.204916954040527
    8. '
' → logprob: -12.454916954040527
    9. '               ' → logprob: -12.954916954040527
    10. ' if' → logprob: -13.454916954040527

Token 723: ' bro' (ID: 3714)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000477620807942003
    2. ' b' → logprob: -8.50047779083252
    3. ' bro' → logprob: -8.62547779083252
    4. '           ' → logprob: -9.62547779083252
    5. 'bro' (adapté à ' bro') → logprob: -11.37547779083252
    6. ' ' → logprob: -12.37547779083252
    7. ' brow' → logprob: -12.75047779083252
    8. ' if' → logprob: -13.12547779083252
    9. '       ' → logprob: -13.62547779083252
    10. '   ' → logprob: -13.75047779083252

Token 724: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.002906158333644271
    2. 'root' → logprob: -6.377906322479248
    3. 'oot' → logprob: -6.752906322479248
    4. 'rot' → logprob: -10.50290584564209
    5. 't' → logprob: -12.37790584564209
    6. '[root' → logprob: -14.00290584564209
    7. 'ut' → logprob: -14.25290584564209
    8. '(root' → logprob: -14.87790584564209
    9. '_root' → logprob: -14.87790584564209
    10. '=root' → logprob: -15.25290584564209

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975083328783512
    2. ' =' → logprob: -3.5297508239746094
    3. ')' → logprob: -16.02975082397461
    4. 'if' → logprob: -16.77975082397461
    5. '           ' → logprob: -17.02975082397461
    6. ' ' → logprob: -17.27975082397461
    7. '=
' → logprob: -17.27975082397461
    8. '   ' → logprob: -17.52975082397461
    9. '=None' → logprob: -18.40475082397461
    10. ']' → logprob: -18.65475082397461

Token 726: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0004027865652460605
    2. ' find' → logprob: -7.875402927398682
    3. 'parent' → logprob: -11.000402450561523
    4. 'comp' → logprob: -12.875402450561523
    5. 'id' → logprob: -13.250402450561523
    6. '(find' → logprob: -13.625402450561523
    7. '=find' → logprob: -15.250402450561523
    8. '	find' → logprob: -16.875402450561523
    9. '[parent' → logprob: -17.125402450561523
    10. '
' → logprob: -17.250402450561523

Token 727: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.04115695506334305
    2. 'parent' → logprob: -3.2911570072174072
    3. '[parent' → logprob: -5.791156768798828
    4. ' parent' → logprob: -10.416156768798828
    5. ',parent' → logprob: -10.666156768798828
    6. '.parent' → logprob: -13.791156768798828
    7. '	parent' → logprob: -13.916156768798828
    8. ')' → logprob: -15.791156768798828
    9. 'b' → logprob: -15.916156768798828
    10. '```' → logprob: -16.166156768798828

Token 728: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.01934375800192356
    2. 'b' → logprob: -4.019343852996826
    3. ',' → logprob: -6.769343852996826
    4. '[b' → logprob: -11.519343376159668
    5. ',
' → logprob: -11.644343376159668
    6. ')b' → logprob: -11.894343376159668
    7. ')' → logprob: -12.019343376159668
    8. ' ,' → logprob: -12.519343376159668
    9. '),' → logprob: -12.644343376159668
    10. ',a' → logprob: -13.769343376159668

Token 729: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00986587442457676
    2. ')' → logprob: -4.634865760803223
    3. '           ' → logprob: -9.384865760803223
    4. ')
' → logprob: -11.634865760803223
    5. ' )
' → logprob: -11.884865760803223
    6. ')

' → logprob: -12.634865760803223
    7. '   ' → logprob: -12.759865760803223
    8. '       ' → logprob: -13.509865760803223
    9. ']
' → logprob: -14.634865760803223
    10. 'if' → logprob: -14.884865760803223

Token 730: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05132158100605011
    2. ' if' → logprob: -3.176321506500244
    3. 'if' → logprob: -4.926321506500244
    4. '
' → logprob: -8.176321983337402
    5. '       ' → logprob: -8.301321983337402
    6. '   ' → logprob: -8.551321983337402
    7. 'a' → logprob: -8.801321983337402
    8. '```' → logprob: -10.301321983337402
    9. '            
' → logprob: -10.551321983337402
    10. ' a' → logprob: -11.176321983337402

Token 731: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3300947844982147
    2. '           ' → logprob: -1.830094814300537
    3. 'if' (adapté à ' if') → logprob: -2.205094814300537
    4. '       ' → logprob: -5.330094814300537
    5. 'u' → logprob: -5.955094814300537
    6. ' u' → logprob: -6.455094814300537
    7. '   ' → logprob: -7.830094814300537
    8. '
' → logprob: -8.455094337463379
    9. 'a' → logprob: -9.205094337463379
    10. ' x' → logprob: -9.330094337463379

Token 732: ' a' (ID: 261)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.03508225455880165
    2. ' a' → logprob: -3.4100823402404785
    3. 'a' → logprob: -6.6600823402404785
    4. 'id' → logprob: -9.91008186340332
    5. '   ' → logprob: -10.16008186340332
    6. ' aro' → logprob: -11.28508186340332
    7. 'aro' → logprob: -11.53508186340332
    8. ' ar' → logprob: -11.66008186340332
    9. 'root' → logprob: -11.91008186340332
    10. ' id' → logprob: -12.41008186340332

Token 733: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -6.153795766294934e-06
    2. 'rot' → logprob: -13.250005722045898
    3. 'r' → logprob: -14.000005722045898
    4. '!=' → logprob: -14.375005722045898
    5. 'ro' → logprob: -14.500005722045898
    6. 'not' → logprob: -14.625005722045898
    7. '[root' → logprob: -14.625005722045898
    8. ' root' → logprob: -15.125005722045898
    9. ' !=' → logprob: -15.500005722045898
    10. '(root' → logprob: -15.750005722045898

Token 734: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10048593580722809
    2. '!=' → logprob: -2.3504860401153564
    3. ' not' → logprob: -8.350485801696777
    4. 'not' → logprob: -10.350485801696777
    5. ' ==' → logprob: -12.475485801696777
    6. '==' → logprob: -12.600485801696777
    7. ']!=' → logprob: -13.350485801696777
    8. ')!=' → logprob: -14.100485801696777
    9. '()!=' → logprob: -14.725485801696777
    10. ' in' → logprob: -15.100485801696777

Token 735: ' bro' (ID: 3714)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.630610641877865e-06
    2. ' bro' → logprob: -13.500006675720215
    3. 'root' → logprob: -13.750006675720215
    4. '```' → logprob: -13.875006675720215
    5. ' b' → logprob: -14.125006675720215
    6. ' root' → logprob: -14.125006675720215
    7. 'bro' → logprob: -14.125006675720215
    8. ' ' → logprob: -15.500006675720215
    9. '	b' → logprob: -15.500006675720215
    10. '   ' → logprob: -15.750006675720215

Token 736: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0002366753324167803
    2. 'root' → logprob: -8.500236511230469
    3. 'oot' → logprob: -11.250236511230469
    4. 'rot' → logprob: -11.500236511230469
    5. ' ot' → logprob: -13.125236511230469
    6. 'ut' → logprob: -13.500236511230469
    7. 't' → logprob: -14.000236511230469
    8. '   ' → logprob: -14.250236511230469
    9. 'от' → logprob: -14.250236511230469
    10. 'opt' → logprob: -14.375236511230469

Token 737: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31932830810546875
    2. ':' → logprob: -1.3193283081054688
    3. ' and' → logprob: -5.819328308105469
    4. '           ' → logprob: -6.319328308105469
    5. '               ' → logprob: -7.194328308105469
    6. '       ' → logprob: -7.944328308105469
    7. ':

' → logprob: -9.694328308105469
    8. '):
' → logprob: -10.194328308105469
    9. ',' → logprob: -10.819328308105469
    10. 'and' → logprob: -11.569328308105469

Token 738: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002923160558566451
    2. '           ' → logprob: -6.252923011779785
    3. ' comp' → logprob: -7.627923011779785
    4. ' {
' → logprob: -9.877923011779785
    5. '       ' → logprob: -9.877923011779785
    6. '```' → logprob: -10.002923011779785
    7. ' ' → logprob: -10.127923011779785
    8. '                   ' → logprob: -10.377923011779785
    9. '                
' → logprob: -10.502923011779785
    10. ',' → logprob: -10.627923011779785

Token 739: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.2729809880256653
    2. 'u' (adapté à ' u') → logprob: -1.8979809284210205
    3. ' comp' → logprob: -2.8979809284210205
    4. '       ' → logprob: -3.7729809284210205
    5. ' ua' → logprob: -5.5229811668396
    6. 'comp' → logprob: -5.6479811668396
    7. 'ua' → logprob: -6.5229811668396
    8. 'x' → logprob: -7.6479811668396
    9. ' x' → logprob: -7.7729811668396
    10. ' ai' → logprob: -8.522980690002441

Token 740: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805285319685936
    2. ' =' → logprob: -3.288052797317505
    3. '=id' → logprob: -11.663052558898926
    4. ',' → logprob: -13.538052558898926
    5. '=
' → logprob: -13.913052558898926
    6. '=u' → logprob: -15.413052558898926
    7. '=

' → logprob: -16.538053512573242
    8. 'id' → logprob: -16.788053512573242
    9. '=index' → logprob: -17.163053512573242
    10. ' =
' → logprob: -17.288053512573242

Token 741: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0004306692280806601
    2. ' id' → logprob: -7.750430583953857
    3. '[id' → logprob: -20.125431060791016
    4. '	id' → logprob: -21.000431060791016
    5. '(id' → logprob: -21.500431060791016
    6. '"id' → logprob: -22.750431060791016
    7. '   ' → logprob: -23.000431060791016
    8. '
' → logprob: -23.125431060791016
    9. '{id' → logprob: -23.625431060791016
    10. '```' → logprob: -23.875431060791016

Token 742: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -3.531315314830863e-06
    2. 'map' → logprob: -13.000003814697266
    3. '[root' → logprob: -14.500003814697266
    4. 'Map' → logprob: -15.125003814697266
    5. '[u' → logprob: -16.250003814697266
    6. 'u' → logprob: -16.625003814697266
    7. 'root' → logprob: -16.875003814697266
    8. '[' → logprob: -17.375003814697266
    9. 'ermap' → logprob: -17.375003814697266
    10. '_m' → logprob: -17.875003814697266

Token 743: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5597102396423e-05
    2. 'ar' → logprob: -10.250035285949707
    3. '(ar' → logprob: -15.625035285949707
    4. '$ar' → logprob: -17.375036239624023
    5. '[u' → logprob: -18.125036239624023
    6. '	ar' → logprob: -18.750036239624023
    7. ' [' → logprob: -19.125036239624023
    8. '[a' → logprob: -19.375036239624023
    9. '[arr' → logprob: -19.875036239624023
    10. ' ar' → logprob: -19.875036239624023

Token 744: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.1279553291387856e-05
    2. '[' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.875011444091797
    4. ' ar' → logprob: -15.625011444091797
    5. '	ar' → logprob: -15.750011444091797
    6. ' a' → logprob: -16.125011444091797
    7. 'a' → logprob: -16.375011444091797
    8. '{' → logprob: -17.125011444091797
    9. '[root' → logprob: -17.125011444091797
    10. '       ' → logprob: -17.250011444091797

Token 745: 'oot' (ID: 2455)
  Prédit: 'oot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oot' → logprob: -4.084206375409849e-05
    2. 'root' → logprob: -10.375041007995605
    3. 'out' → logprob: -11.875041007995605
    4. 'o' → logprob: -14.375041007995605
    5. 'ot' → logprob: -14.625041007995605
    6. 'OOT' → logprob: -14.875041007995605
    7. ' oot' → logprob: -15.375041007995605
    8. '[root' → logprob: -15.750041007995605
    9. '[' → logprob: -15.875041007995605
    10. 'ooter' → logprob: -16.25004005432129

Token 746: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16087357699871063
    2. ']
' → logprob: -1.910873532295227
    3. '<|end|>' → logprob: -8.285873413085938
    4. ']
' → logprob: -9.285873413085938
    5. '       ' → logprob: -9.785873413085938
    6. '               ' → logprob: -9.785873413085938
    7. ')' → logprob: -9.785873413085938
    8. ' ]' → logprob: -10.160873413085938
    9. ']

' → logprob: -10.410873413085938
    10. 'u' → logprob: -11.160873413085938

Token 747: '               ' (ID: 506)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6536056399345398
    2. ' v' → logprob: -0.7786056399345398
    3. '               ' → logprob: -4.0286054611206055
    4. '	v' → logprob: -6.5286054611206055
    5. ',v' → logprob: -6.9036054611206055
    6. '
' → logprob: -8.653605461120605
    7. '			' → logprob: -9.653605461120605
    8. ' ' → logprob: -10.403605461120605
    9. ' 
' → logprob: -10.528605461120605
    10. ')v' → logprob: -10.528605461120605

Token 748: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.011058665812015533
    2. ' v' → logprob: -4.511058807373047
    3. '               ' → logprob: -11.636058807373047
    4. '	v' → logprob: -13.636058807373047
    5. ',v' → logprob: -14.886058807373047
    6. '                ' → logprob: -15.511058807373047
    7. 'u' → logprob: -16.011058807373047
    8. ')v' → logprob: -16.511058807373047
    9. '                   ' → logprob: -17.386058807373047
    10. '
' → logprob: -18.386058807373047

Token 749: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3079071342945099
    2. '=' → logprob: -1.9329071044921875
    3. '[u' → logprob: -2.4329071044921875
    4. ' u' → logprob: -4.0579071044921875
    5. ' v' → logprob: -5.0579071044921875
    6. 'u' → logprob: -5.4329071044921875
    7. '=u' → logprob: -6.5579071044921875
    8. '[v' → logprob: -7.1829071044921875
    9. '[' → logprob: -7.3079071044921875
    10. 'v' → logprob: -7.5579071044921875

Token 750: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0024756586644798517
    2. ' id' → logprob: -6.002475738525391
    3. '	id' → logprob: -19.00247573852539
    4. ' ' → logprob: -19.62747573852539
    5. '[id' → logprob: -19.87747573852539
    6. '           ' → logprob: -20.37747573852539
    7. '   ' → logprob: -20.75247573852539
    8. '               ' → logprob: -21.00247573852539
    9. '(id' → logprob: -21.37747573852539
    10. '=id' → logprob: -22.00247573852539

Token 751: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -4.4418171455617994e-05
    2. 'map' → logprob: -10.625044822692871
    3. 'Map' → logprob: -11.000044822692871
    4. 'v' → logprob: -13.500044822692871
    5. '[v' → logprob: -14.000044822692871
    6. 'u' → logprob: -15.125044822692871
    7. '[u' → logprob: -15.250044822692871
    8. '_MAP' → logprob: -16.125043869018555
    9. '_maps' → logprob: -16.500043869018555
    10. 'm' → logprob: -16.625043869018555

Token 752: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -6.392202976712724e-06
    2. 'b' → logprob: -12.250006675720215
    3. '[' → logprob: -13.375006675720215
    4. '(b' → logprob: -18.0000057220459
    5. '[id' → logprob: -19.1250057220459
    6. ' b' → logprob: -19.1250057220459
    7. '```' → logprob: -19.1250057220459
    8. '\b' → logprob: -19.2500057220459
    9. '<b' → logprob: -19.6250057220459
    10. '	b' → logprob: -20.1250057220459

Token 753: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.00013262155698612332
    2. 'rot' → logprob: -9.00013256072998
    3. 'r' → logprob: -11.75013256072998
    4. 'ro' → logprob: -15.00013256072998
    5. '_root' → logprob: -15.37513256072998
    6. 'Root' → logprob: -15.50013256072998
    7. ' root' → logprob: -15.50013256072998
    8. '[root' → logprob: -15.87513256072998
    9. 'v' → logprob: -16.125133514404297
    10. 'roots' → logprob: -17.250133514404297

Token 754: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006545789539813995
    2. '<|end|>' → logprob: -5.3815460205078125
    3. ']
' → logprob: -6.5065460205078125
    4. ')' → logprob: -8.881546020507812
    5. '               ' → logprob: -9.256546020507812
    6. ' ]' → logprob: -9.506546020507812
    7. '       ' → logprob: -11.256546020507812
    8. '           ' → logprob: -11.381546020507812
    9. '<|end|>' → logprob: -11.381546020507812
    10. '']' → logprob: -11.506546020507812

Token 755: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2032746970653534
    2. '       ' → logprob: -1.7032747268676758
    3. '<|end|>' → logprob: -7.328274726867676
    4. '           ' → logprob: -7.828274726867676
    5. ',' → logprob: -8.203274726867676
    6. '                   ' → logprob: -8.953274726867676
    7. ')' → logprob: -9.578274726867676
    8. ' 
' → logprob: -10.078274726867676
    9. '   ' → logprob: -10.453274726867676
    10. '	' → logprob: -10.453274726867676

Token 756: ' comp' (ID: 1050)
  Prédit: ' comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.08483245968818665
    2. 'comp' (adapté à ' comp') → logprob: -2.5848324298858643
    3. '               ' → logprob: -5.334832668304443
    4. '       ' → logprob: -7.209832668304443
    5. '	comp' → logprob: -9.334832191467285
    6. '
' → logprob: -9.459832191467285
    7. '```' → logprob: -9.584832191467285
    8. '           ' → logprob: -10.334832191467285
    9. '``' → logprob: -10.709832191467285
    10. '                   ' → logprob: -11.584832191467285

Token 757: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -2.696889623621246e-06
    2. '_GRAPH' → logprob: -14.12500286102295
    3. '_' → logprob: -14.75000286102295
    4. 'graph' → logprob: -14.87500286102295
    5. 'Graph' → logprob: -15.50000286102295
    6. '
' → logprob: -16.500001907348633
    7. '```' → logprob: -16.500001907348633
    8. '           ' → logprob: -16.500001907348633
    9. '   ' → logprob: -16.625001907348633
    10. '[' → logprob: -16.625001907348633

Token 758: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. '[v' → logprob: -17.625
    3. '[' → logprob: -18.875
    4. 'u' → logprob: -20.25
    5. '```' → logprob: -20.25
    6. ' [' → logprob: -20.5
    7. ')[' → logprob: -21.25
    8. '
' → logprob: -21.5
    9. '][' → logprob: -21.625
    10. '\[' → logprob: -22.125

Token 759: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3648831844329834
    2. '].' → logprob: -1.2398831844329834
    3. '.' → logprob: -4.2398834228515625
    4. ' .' → logprob: -7.3648834228515625
    5. ').' → logprob: -8.114883422851562
    6. '[u' → logprob: -8.239883422851562
    7. '.app' → logprob: -8.489883422851562
    8. '.setdefault' → logprob: -8.489883422851562
    9. '[].' → logprob: -8.739883422851562
    10. ' ].' → logprob: -10.614883422851562

Token 760: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -14.750000953674316
    3. '.append' → logprob: -16.125
    4. 'appen' → logprob: -17.25
    5. '	append' → logprob: -18.625
    6. '_append' → logprob: -18.625
    7. '```' → logprob: -18.625
    8. 'Append' → logprob: -19.0
    9. 'app' → logprob: -19.5
    10. 'push' → logprob: -20.375

Token 761: '(v' (ID: 6932)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6931495666503906
    2. '(v' → logprob: -0.6931495666503906
    3. ' v' → logprob: -13.94314956665039
    4. '(' → logprob: -14.19314956665039
    5. '((' → logprob: -15.69314956665039
    6. ')v' → logprob: -15.69314956665039
    7. '[v' → logprob: -16.06814956665039
    8. '(
' → logprob: -16.06814956665039
    9. ' (' → logprob: -16.44314956665039
    10. ',v' → logprob: -17.19314956665039

Token 762: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010252383537590504
    2. ')
' → logprob: -4.635252475738525
    3. '<|end|>' → logprob: -8.260251998901367
    4. '               ' → logprob: -8.510251998901367
    5. '       ' → logprob: -11.135251998901367
    6. ' )' → logprob: -11.510251998901367
    7. ')\
' → logprob: -13.135251998901367
    8. '),' → logprob: -13.135251998901367
    9. '           ' → logprob: -13.385251998901367
    10. '[' → logprob: -13.885251998901367

Token 763: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024408474564552307
    2. '<|end|>' → logprob: -3.8994085788726807
    3. '       ' → logprob: -5.899408340454102
    4. ')' → logprob: -7.899408340454102
    5. '```' → logprob: -9.024408340454102
    6. '[' → logprob: -9.149408340454102
    7. '           ' → logprob: -9.149408340454102
    8. '			' → logprob: -9.524408340454102
    9. '	       ' → logprob: -10.149408340454102
    10. '		       ' → logprob: -10.149408340454102

Token 764: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.016358915716409683
    2. ' comp' → logprob: -4.141358852386475
    3. '	comp' → logprob: -8.516359329223633
    4. '               ' → logprob: -9.516359329223633
    5. '(comp' → logprob: -10.766359329223633
    6. 'u' → logprob: -11.641359329223633
    7. '       ' → logprob: -11.641359329223633
    8. 'com' → logprob: -12.391359329223633
    9. '.comp' → logprob: -13.141359329223633
    10. '           ' → logprob: -13.766359329223633

Token 765: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00046391604701057076
    2. 'Graph' → logprob: -8.000463485717773
    3. '_GRAPH' → logprob: -9.250463485717773
    4. '_' → logprob: -11.375463485717773
    5. 'raph' → logprob: -12.250463485717773
    6. '.Graph' → logprob: -12.500463485717773
    7. ' Graph' → logprob: -13.250463485717773
    8. '```' → logprob: -13.375463485717773
    9. 'graph' → logprob: -13.500463485717773
    10. '_
' → logprob: -14.250463485717773

Token 766: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00012248923303559422
    2. '.append' → logprob: -9.5001220703125
    3. '[' → logprob: -10.1251220703125
    4. '[v' → logprob: -12.8751220703125
    5. '```' → logprob: -13.2501220703125
    6. '[
' → logprob: -14.1251220703125
    7. '.' → logprob: -14.3751220703125
    8. ' .' → logprob: -15.0001220703125
    9. '   ' → logprob: -15.1251220703125
    10. 'u' → logprob: -15.2501220703125

Token 767: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5041527152061462
    2. '.append' → logprob: -1.004152774810791
    3. ').' → logprob: -3.629152774810791
    4. '.' → logprob: -6.004152774810791
    5. ' .' → logprob: -8.254152297973633
    6. ')' → logprob: -8.629152297973633
    7. ']' → logprob: -10.254152297973633
    8. '.setdefault' → logprob: -10.504152297973633
    9. '.app' → logprob: -10.879152297973633
    10. ' ].' → logprob: -11.004152297973633

Token 768: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -16.0
    3. 'app' → logprob: -16.75
    4. 'appen' → logprob: -17.25
    5. '.append' → logprob: -17.375
    6. 'u' → logprob: -18.75
    7. 'push' → logprob: -20.25
    8. '	append' → logprob: -20.75
    9. 'Append' → logprob: -21.625
    10. '_append' → logprob: -21.875

Token 769: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00671584764495492
    2. 'u' → logprob: -5.006715774536133
    3. '	u' → logprob: -15.256715774536133
    4. '[u' → logprob: -15.381715774536133
    5. '(' → logprob: -17.506715774536133
    6. '(
' → logprob: -17.881715774536133
    7. ',u' → logprob: -18.756715774536133
    8. ' u' → logprob: -18.881715774536133
    9. ' (' → logprob: -19.006715774536133
    10. ')' → logprob: -19.131715774536133

Token 770: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.2987729102605954e-05
    2. '<|end|>' → logprob: -10.875042915344238
    3. '       ' → logprob: -11.250042915344238
    4. ')
' → logprob: -11.750042915344238
    5. ' )' → logprob: -14.500042915344238
    6. '               ' → logprob: -14.625042915344238
    7. ']' → logprob: -14.750042915344238
    8. '[' → logprob: -15.375042915344238
    9. '```' → logprob: -15.625042915344238
    10. '           ' → logprob: -15.750042915344238

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6641198396682739
    2. '```' → logprob: -1.039119839668274
    3. '<|end|>' → logprob: -3.0391197204589844
    4. '   ' → logprob: -3.6641197204589844
    5. '
' → logprob: -3.9141197204589844
    6. 'import' → logprob: -4.914119720458984
    7. 'from' → logprob: -4.914119720458984
    8. 'for' → logprob: -5.164119720458984
    9. ')' → logprob: -5.539119720458984
    10. '        
' → logprob: -6.039119720458984

Token 772: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6578678488731384
    2. 'visited' → logprob: -1.0328679084777832
    3. 'import' → logprob: -2.907867908477783
    4. 'def' → logprob: -3.907867908477783
    5. 'for' → logprob: -4.157867908477783
    6. '       ' → logprob: -4.907867908477783
    7. 'parent' → logprob: -5.032867908477783
    8. 'count' → logprob: -5.782867908477783
    9. 'used' → logprob: -5.907867908477783
    10. 'dp' → logprob: -6.032867908477783

Token 773: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.734940230846405
    2. 'visited' → logprob: -0.984940230846405
    3. 'import' → logprob: -2.85994029045105
    4. 'def' → logprob: -2.98494029045105
    5. '#' → logprob: -4.359940052032471
    6. 'for' → logprob: -4.984940052032471
    7. 'parent' → logprob: -5.234940052032471
    8. 'used' → logprob: -5.984940052032471
    9. 'count' → logprob: -6.609940052032471
    10. 'uf' → logprob: -6.734940052032471

Token 774: ' want' (ID: 1682)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8132435083389282
    2. 'from' → logprob: -1.4382435083389282
    3. '#' → logprob: -2.1882433891296387
    4. 'def' → logprob: -2.9382433891296387
    5. '   ' → logprob: -3.1882433891296387
    6. 'need' → logprob: -3.8132433891296387
    7. 'visit' → logprob: -3.8132433891296387
    8. 'import' → logprob: -3.9382433891296387
    9. '       ' → logprob: -4.313243389129639
    10. 'e' → logprob: -5.563243389129639

Token 775: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10944806039333344
    2. ' to' → logprob: -2.609447956085205
    3. '       ' → logprob: -3.609447956085205
    4. '   ' → logprob: -6.984447956085205
    5. 'def' → logprob: -7.234447956085205
    6. 'from' → logprob: -7.734447956085205
    7. '#' → logprob: -7.734447956085205
    8. 'import' → logprob: -8.484448432922363
    9. 'ways' → logprob: -9.734448432922363
    10. 'count' → logprob: -10.109448432922363

Token 776: ' find' (ID: 1646)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06882624328136444
    2. 'find' → logprob: -3.818826198577881
    3. 'calculate' → logprob: -4.068826198577881
    4. 'import' → logprob: -4.943826198577881
    5. 'def' → logprob: -5.318826198577881
    6. 'use' → logprob: -5.943826198577881
    7. 'compute' → logprob: -6.068826198577881
    8. 'union' → logprob: -6.068826198577881
    9. 'multiply' → logprob: -6.193826198577881
    10. '#' → logprob: -6.318826198577881

Token 777: ' number' (ID: 2086)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -1.5052191019058228
    2. 'ways' → logprob: -1.5052191019058228
    3. 'connected' → logprob: -1.8802191019058228
    4. 'the' → logprob: -2.005218982696533
    5. 'all' → logprob: -2.630218982696533
    6. 'number' → logprob: -3.005218982696533
    7. 'cycles' → logprob: -3.505218982696533
    8. 'brid' → logprob: -3.755218982696533
    9. ' spanning' → logprob: -4.255218982696533
    10. '#' → logprob: -4.255218982696533

Token 778: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.7521765828132629
    2. '_of' → logprob: -1.1271765232086182
    3. ' of' → logprob: -2.252176523208618
    4. '       ' → logprob: -2.377176523208618
    5. '   ' → logprob: -5.877176761627197
    6. '_' → logprob: -7.002176761627197
    7. '           ' → logprob: -7.502176761627197
    8. 'Of' → logprob: -7.752176761627197
    9. 'ways' → logprob: -8.252176284790039
    10. '_components' → logprob: -8.252176284790039

Token 779: ' spanning' (ID: 66335)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.12713566422462463
    2. 'sp' → logprob: -2.627135753631592
    3. ' spanning' → logprob: -3.377135753631592
    4. ' ways' → logprob: -4.502135753631592
    5. 'M' → logprob: -7.502135753631592
    6. 'def' → logprob: -8.127135276794434
    7. 'connected' → logprob: -8.377135276794434
    8. ' MST' → logprob: -8.377135276794434
    9. 'cycles' → logprob: -9.127135276794434
    10. 'import' → logprob: -9.252135276794434

Token 780: ' trees' (ID: 16979)
  Prédit: 'trees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trees' → logprob: -0.0006207000697031617
    2. ' trees' → logprob: -7.7506208419799805
    3. '```' → logprob: -8.75062084197998
    4. 'tree' → logprob: -11.25062084197998
    5. '
' → logprob: -11.50062084197998
    6. ' forests' → logprob: -12.75062084197998
    7. 'sub' → logprob: -12.87562084197998
    8. 't' → logprob: -14.00062084197998
    9. 'fore' → logprob: -14.12562084197998
    10. 'rees' → logprob: -14.87562084197998

Token 781: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31116950511932373
    2. 'import' → logprob: -2.6861696243286133
    3. 'from' → logprob: -2.8111696243286133
    4. ' in' → logprob: -3.8111696243286133
    5. '#' → logprob: -3.8111696243286133
    6. '=' → logprob: -3.9361696243286133
    7. ' =' → logprob: -4.186169624328613
    8. 'in' → logprob: -4.311169624328613
    9. 'for' → logprob: -4.561169624328613
    10. '   ' → logprob: -4.686169624328613

Token 782: ' this' (ID: 495)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8247391581535339
    2. 'this' → logprob: -1.4497392177581787
    3. 'comp' → logprob: -1.5747392177581787
    4. 'each' → logprob: -2.4497392177581787
    5. ' comp' → logprob: -4.8247389793396
    6. '#' → logprob: -5.0747389793396
    7. ' this' → logprob: -5.1997389793396
    8. 'com' → logprob: -5.5747389793396
    9. ' the' → logprob: -5.9497389793396
    10. 'these' → logprob: -6.0747389793396

Token 783: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.6718880534172058
    2. 'graph' → logprob: -1.1718881130218506
    3. 'comp' → logprob: -2.1718881130218506
    4. 'sub' → logprob: -2.9218881130218506
    5. '#' → logprob: -5.6718878746032715
    6. ' sub' → logprob: -6.4218878746032715
    7. ' component' → logprob: -6.6718878746032715
    8. 'mult' → logprob: -6.6718878746032715
    9. ' graph' → logprob: -7.1718878746032715
    10. ' comp' → logprob: -7.2968878746032715

Token 784: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046121567487716675
    2. 'from' → logprob: -3.796121597290039
    3. 'import' → logprob: -5.671121597290039
    4. '#' → logprob: -5.796121597290039
    5. ',' → logprob: -5.921121597290039
    6. '        
' → logprob: -6.046121597290039
    7. ' from' → logprob: -6.171121597290039
    8. '
' → logprob: -6.671121597290039
    9. '(' → logprob: -6.921121597290039
    10. ' (' → logprob: -7.046121597290039

Token 785: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3336479961872101
    2. 'from' → logprob: -2.2086479663848877
    3. 'import' → logprob: -2.3336479663848877
    4. '
' → logprob: -3.3336479663848877
    5. ',' → logprob: -4.583648204803467
    6. '#' → logprob: -4.833648204803467
    7. ' from' → logprob: -5.333648204803467
    8. '   ' → logprob: -5.583648204803467
    9. '        
' → logprob: -5.833648204803467
    10. ',
' → logprob: -5.833648204803467

Token 786: ' get' (ID: 717)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.09050597995519638
    2. 'calculate' → logprob: -3.840506076812744
    3. 'ways' → logprob: -4.090506076812744
    4. ' multiply' → logprob: -4.840506076812744
    5. 'det' → logprob: -4.965506076812744
    6. 'count' → logprob: -4.965506076812744
    7. 'mult' → logprob: -5.340506076812744
    8. 'compute' → logprob: -5.590506076812744
    9. 'import' → logprob: -5.590506076812744
    10. '#' → logprob: -5.715506076812744

Token 787: ' number' (ID: 2086)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.5675140619277954
    2. ' ways' → logprob: -0.9425140619277954
    3. ' the' → logprob: -3.442513942718506
    4. 'the' → logprob: -4.692513942718506
    5. ' number' → logprob: -7.067513942718506
    6. '       ' → logprob: -7.192513942718506
    7. 'number' → logprob: -9.067514419555664
    8. '   ' → logprob: -9.067514419555664
    9. ' multiplic' → logprob: -9.692514419555664
    10. ' edges' → logprob: -9.942514419555664

Token 788: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.26588982343673706
    2. ' of' → logprob: -2.015889883041382
    3. '_of' → logprob: -2.390889883041382
    4. '<|end|>' → logprob: -5.265889644622803
    5. '_' → logprob: -6.765889644622803
    6. '       ' → logprob: -7.390889644622803
    7. 'Of' → logprob: -7.640889644622803
    8. '[' → logprob: -8.015890121459961
    9. '=' → logprob: -9.015890121459961
    10. '<|end|>' → logprob: -9.015890121459961

Token 789: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.061305176466703415
    2. ' ways' → logprob: -2.936305284500122
    3. 'M' → logprob: -5.436305046081543
    4. ' MST' → logprob: -6.936305046081543
    5. 'sp' → logprob: -8.061305046081543
    6. ' spanning' → logprob: -8.311305046081543
    7. ' M' → logprob: -8.811305046081543
    8. '#' → logprob: -9.061305046081543
    9. 'edges' → logprob: -9.686305046081543
    10. 'possible' → logprob: -10.311305046081543

Token 790: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0943479835987091
    2. 'from' → logprob: -3.4693479537963867
    3. 'import' → logprob: -4.094347953796387
    4. '
' → logprob: -4.469347953796387
    5. ',' → logprob: -4.594347953796387
    6. '.' → logprob: -4.969347953796387
    7. '        
' → logprob: -5.344347953796387
    8. ' from' → logprob: -5.969347953796387
    9. ',
' → logprob: -6.844347953796387
    10. '.
' → logprob: -7.094347953796387

Token 791: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03297348693013191
    2. 'from' → logprob: -3.782973527908325
    3. 'import' → logprob: -5.032973289489746
    4. '        
' → logprob: -6.782973289489746
    5. '#' → logprob: -7.282973289489746
    6. ' from' → logprob: -7.907973289489746
    7. '```' → logprob: -8.407973289489746
    8. 'n' → logprob: -8.907973289489746
    9. '
' → logprob: -9.157973289489746
    10. 'def' → logprob: -9.282973289489746

Token 792: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0433018207550049
    2. 'import' → logprob: -1.4183018207550049
    3. 'from' → logprob: -1.5433018207550049
    4. '#' (adapté à ' #') → logprob: -2.668301820755005
    5. '
' → logprob: -3.293301820755005
    6. 'n' → logprob: -3.418301820755005
    7. '   ' → logprob: -4.668301582336426
    8. '        
' → logprob: -5.168301582336426
    9. 'size' → logprob: -5.293301582336426
    10. 'def' → logprob: -5.418301582336426

Token 793: ' Since' (ID: 12265)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.494907408952713
    2. 'from' → logprob: -1.2449073791503906
    3. '#' → logprob: -2.7449073791503906
    4. 'size' → logprob: -4.244907379150391
    5. 'def' → logprob: -4.244907379150391
    6. 'n' → logprob: -5.619907379150391
    7. '       ' → logprob: -5.869907379150391
    8. ' from' → logprob: -7.494907379150391
    9. ' import' → logprob: -7.869907379150391
    10. 'visited' → logprob: -7.869907379150391

Token 794: ' graph' (ID: 7465)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.701604425907135
    2. 'comp' → logprob: -1.4516043663024902
    3. ' the' → logprob: -2.4516043663024902
    4. 'len' → logprob: -3.8266043663024902
    5. 'this' → logprob: -3.8266043663024902
    6. 'id' → logprob: -3.8266043663024902
    7. 'import' → logprob: -3.9516043663024902
    8. ' comp' → logprob: -4.32660436630249
    9. 'all' → logprob: -4.70160436630249
    10. 'it' → logprob: -4.70160436630249

Token 795: ' may' (ID: 1340)
  Prédit: ' may'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' may' → logprob: -1.1031200885772705
    2. ' can' → logprob: -1.6031200885772705
    3. 'can' → logprob: -1.7281200885772705
    4. 'may' → logprob: -1.7281200885772705
    5. 'is' → logprob: -3.4781200885772705
    6. ' is' → logprob: -3.6031200885772705
    7. ' might' → logprob: -4.103119850158691
    8. 'might' → logprob: -4.853119850158691
    9. 'could' → logprob: -4.978119850158691
    10. '=' → logprob: -5.103119850158691

Token 796: ' contain' (ID: 10232)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7474315166473389
    2. 'be' → logprob: -0.8724315166473389
    3. ' consist' → logprob: -3.122431516647339
    4. 'not' → logprob: -3.372431516647339
    5. 'have' → logprob: -4.497431755065918
    6. ' not' → logprob: -4.622431755065918
    7. 'cons' → logprob: -5.247431755065918
    8. 'contain' → logprob: -6.372431755065918
    9. ' have' → logprob: -6.747431755065918
    10. ' contain' → logprob: -7.497431755065918

Token 797: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.03574547916650772
    2. ' multiple' → logprob: -3.66074538230896
    3. 'cycles' → logprob: -5.285745620727539
    4. 'multi' → logprob: -6.160745620727539
    5. 'parallel' → logprob: -7.035745620727539
    6. 'mult' → logprob: -7.910745620727539
    7. 'self' → logprob: -8.535745620727539
    8. ' cycles' → logprob: -8.660745620727539
    9. 'duplicates' → logprob: -8.910745620727539
    10. ' parallel' → logprob: -9.035745620727539

Token 798: ' components' (ID: 10674)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.08111301809549332
    2. ' edges' → logprob: -2.58111310005188
    3. 'components' → logprob: -6.331112861633301
    4. 'connected' → logprob: -8.2061128616333
    5. 'parallel' → logprob: -9.9561128616333
    6. ' connected' → logprob: -10.3311128616333
    7. '_edges' → logprob: -10.8311128616333
    8. 'edge' → logprob: -11.2061128616333
    9. ' components' → logprob: -11.5811128616333
    10. '(edges' → logprob: -11.7061128616333

Token 799: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7843477725982666
    2. ',' → logprob: -1.1593477725982666
    3. '
' → logprob: -1.6593477725982666
    4. ',
' → logprob: -3.9093477725982666
    5. '        
' → logprob: -4.5343475341796875
    6. 'import' → logprob: -5.6593475341796875
    7. 'from' → logprob: -6.5343475341796875
    8. ' for' → logprob: -7.6593475341796875
    9. '
' → logprob: -7.7843475341796875
    10. ' and' → logprob: -7.9093475341796875

Token 800: ' consider' (ID: 3331)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.20237135887146
    2. '       ' → logprob: -1.32737135887146
    3. 'from' → logprob: -1.82737135887146
    4. 'def' → logprob: -2.70237135887146
    5. 'import' → logprob: -2.95237135887146
    6. ' from' → logprob: -3.20237135887146
    7. ' visited' → logprob: -3.20237135887146
    8. '#' → logprob: -3.82737135887146
    9. '
' → logprob: -4.077371597290039
    10. 'for' → logprob: -5.077371597290039

Token 801: ' each' (ID: 2454)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.058118224143982
    2. ' from' → logprob: -1.808118224143982
    3. ' each' → logprob: -1.933118224143982
    4. 'each' → logprob: -2.0581183433532715
    5. 'import' → logprob: -2.4331183433532715
    6. 'def' → logprob: -3.3081183433532715
    7. 'for' → logprob: -4.5581183433532715
    8. 'visited' → logprob: -4.5581183433532715
    9. ' for' → logprob: -4.6831183433532715
    10. ' visited' → logprob: -4.6831183433532715

Token 802: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.12409909069538116
    2. 'connected' → logprob: -2.374099016189575
    3. ' connected' → logprob: -4.249099254608154
    4. ' component' → logprob: -4.874099254608154
    5. 'def' → logprob: -7.374099254608154
    6. 'for' → logprob: -8.874098777770996
    7. 'comp' → logprob: -9.124098777770996
    8. '
' → logprob: -9.374098777770996
    9. 'import' → logprob: -9.749098777770996
    10. '#' → logprob: -9.874098777770996

Token 803: ' separately' (ID: 37741)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.40472522377967834
    2. '       ' → logprob: -2.2797253131866455
    3. ' in' → logprob: -2.5297253131866455
    4. ' visited' → logprob: -2.9047253131866455
    5. '=' → logprob: -4.029725074768066
    6. ' and' → logprob: -4.779725074768066
    7. ' =' → logprob: -4.779725074768066
    8. ',' → logprob: -4.904725074768066
    9. 'in' → logprob: -4.904725074768066
    10. '
' → logprob: -5.029725074768066

Token 804: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5136502385139465
    2. '       ' → logprob: -1.0136501789093018
    3. '        
' → logprob: -4.013650417327881
    4. 'from' → logprob: -5.138650417327881
    5. 'import' → logprob: -5.138650417327881
    6. ',' → logprob: -6.138650417327881
    7. '
' → logprob: -6.763650417327881
    8. '		
' → logprob: -7.138650417327881
    9. ' from' → logprob: -7.888650417327881
    10. '  
' → logprob: -7.888650417327881

Token 805: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6937133073806763
    2. 'visited' → logprob: -1.3187133073806763
    3. 'from' → logprob: -1.9437133073806763
    4. 'import' → logprob: -2.9437131881713867
    5. '
' → logprob: -3.6937131881713867
    6. 'for' → logprob: -5.818713188171387
    7. ' visited' → logprob: -6.193713188171387
    8. ' from' → logprob: -6.318713188171387
    9. '```' → logprob: -6.943713188171387
    10. '        
' → logprob: -6.943713188171387

Token 806: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.013273291289806366
    2. 'from' → logprob: -5.638273239135742
    3. 'def' → logprob: -5.763273239135742
    4. '       ' → logprob: -5.888273239135742
    5. 'import' → logprob: -6.138273239135742
    6. 'used' → logprob: -7.638273239135742
    7. 'for' → logprob: -8.388273239135742
    8. 'seen' → logprob: -8.513273239135742
    9. ' visited' → logprob: -8.638273239135742
    10. 'vis' → logprob: -8.888273239135742

Token 807: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38697272539138794
    2. ' =' → logprob: -1.1369726657867432
    3. '=[' → logprob: -9.761972427368164
    4. '[' → logprob: -10.636972427368164
    5. '[u' → logprob: -11.636972427368164
    6. '=set' → logprob: -12.636972427368164
    7. '=[]' → logprob: -13.386972427368164
    8. '   ' → logprob: -13.636972427368164
    9. ' ' → logprob: -13.886972427368164
    10. ',' → logprob: -14.136972427368164

Token 808: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. ' [' → logprob: -12.250005722045898
    3. 'set' → logprob: -14.875005722045898
    4. '[len' → logprob: -16.5000057220459
    5. '[int' → logprob: -16.6250057220459
    6. '[s' → logprob: -16.8750057220459
    7. '[node' → logprob: -17.5000057220459
    8. '[a' → logprob: -18.0000057220459
    9. '[start' → logprob: -18.3750057220459
    10. '[size' → logprob: -18.5000057220459

Token 809: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00013357517309486866
    2. '0' → logprob: -9.000133514404297
    3. ' False' → logprob: -11.500133514404297
    4. '   ' → logprob: -19.000133514404297
    5. '[' → logprob: -19.250133514404297
    6. '(False' → logprob: -20.375133514404297
    7. '
' → logprob: -20.500133514404297
    8. '-' → logprob: -20.875133514404297
    9. ' ' → logprob: -21.000133514404297
    10. '=False' → logprob: -21.500133514404297

Token 810: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7299169301986694
    2. ']*' → logprob: -0.7299169301986694
    3. 'for' → logprob: -3.729917049407959
    4. ' for' → logprob: -4.479917049407959
    5. '*' → logprob: -7.354917049407959
    6. ']*(' → logprob: -9.9799165725708
    7. ',' → logprob: -10.8549165725708
    8. '   ' → logprob: -10.8549165725708
    9. ']+' → logprob: -11.3549165725708
    10. ' *' → logprob: -11.4799165725708

Token 811: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -8.77627644513268e-06
    2. 'len' → logprob: -12.375008583068848
    3. ' id' → logprob: -12.500008583068848
    4. '(id' → logprob: -14.125008583068848
    5. '   ' → logprob: -17.500009536743164
    6. 'i' → logprob: -18.500009536743164
    7. ' ' → logprob: -18.625009536743164
    8. '(len' → logprob: -19.625009536743164
    9. '(' → logprob: -19.750009536743164
    10. '[id' → logprob: -19.875009536743164

Token 812: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0005199087900109589
    2. 'count' → logprob: -8.000519752502441
    3. '_id' → logprob: -8.875519752502441
    4. 'id' → logprob: -10.875519752502441
    5. 'Count' → logprob: -12.125519752502441
    6. '_size' → logprob: -12.375519752502441
    7. '```' → logprob: -12.625519752502441
    8. '_COUNT' → logprob: -13.250519752502441
    9. '   ' → logprob: -13.250519752502441
    10. '[id' → logprob: -13.500519752502441

Token 813: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04211370646953583
    2. '       ' → logprob: -3.792113780975342
    3. '<|end|>' → logprob: -4.667113780975342
    4. 'for' → logprob: -5.917113780975342
    5. '
' → logprob: -6.417113780975342
    6. '        
' → logprob: -7.292113780975342
    7. ',' → logprob: -7.292113780975342
    8. ' for' → logprob: -7.417113780975342
    9. 'def' → logprob: -7.417113780975342
    10. '   ' → logprob: -7.542113780975342

Token 814: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13567723333835602
    2. '       ' → logprob: -2.7606773376464844
    3. ' for' → logprob: -3.7606773376464844
    4. '
' → logprob: -4.385677337646484
    5. '```' → logprob: -4.385677337646484
    6. 'def' → logprob: -4.635677337646484
    7. '   ' → logprob: -5.260677337646484
    8. 'from' → logprob: -9.135677337646484
    9. '``' → logprob: -9.385677337646484
    10. '        
' → logprob: -9.385677337646484

Token 815: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3000807762145996
    2. 'from' → logprob: -1.8000807762145996
    3. 'def' (adapté à ' def') → logprob: -2.4250807762145996
    4. 'import' → logprob: -5.3000807762146
    5. '
' → logprob: -8.675081253051758
    6. '```' → logprob: -9.050081253051758
    7. ' for' → logprob: -9.550081253051758
    8. '       ' → logprob: -9.925081253051758
    9. '   ' → logprob: -9.925081253051758
    10. 'stack' → logprob: -11.425081253051758

Token 816: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0010174484923481941
    2. ' dfs' → logprob: -7.5010175704956055
    3. 'count' → logprob: -7.7510175704956055
    4. 'mod' → logprob: -11.626017570495605
    5. 'tar' → logprob: -11.876017570495605
    6. 'calc' → logprob: -12.126017570495605
    7. 'det' → logprob: -12.251017570495605
    8. 'factor' → logprob: -13.501017570495605
    9. 'multiply' → logprob: -14.001017570495605
    10. 'dp' → logprob: -14.251017570495605

Token 817: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.046065445989370346
    2. '(v' → logprob: -4.046065330505371
    3. '(node' → logprob: -4.046065330505371
    4. '(' → logprob: -4.671065330505371
    5. ' (' → logprob: -7.796065330505371
    6. '(
' → logprob: -9.046065330505371
    7. '(vertex' → logprob: -9.421065330505371
    8. '(token' → logprob: -11.171065330505371
    9. 'dfs' → logprob: -11.921065330505371
    10. '(graph' → logprob: -12.171065330505371

Token 818: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009082848206162453
    2. ',u' → logprob: -4.759082794189453
    3. ',v' → logprob: -7.759082794189453
    4. '):' → logprob: -11.884082794189453
    5. ',d' → logprob: -12.134082794189453
    6. 'u' → logprob: -12.134082794189453
    7. '):
' → logprob: -12.509082794189453
    8. ' ,' → logprob: -12.634082794189453
    9. ',k' → logprob: -13.009082794189453
    10. ',
' → logprob: -13.009082794189453

Token 819: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03467298671603203
    2. '           ' → logprob: -3.784672975540161
    3. '       ' → logprob: -4.65967321395874
    4. 'stack' → logprob: -7.90967321395874
    5. '	       ' → logprob: -7.90967321395874
    6. ' stack' → logprob: -8.034672737121582
    7. ' ' → logprob: -8.284672737121582
    8. 'visited' → logprob: -8.909672737121582
    9. '	stack' → logprob: -9.034672737121582
    10. '	   ' → logprob: -10.284672737121582

Token 820: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.29233184456825256
    2. '   ' → logprob: -2.4173319339752197
    3. 'visited' → logprob: -2.4173319339752197
    4. '           ' → logprob: -2.7923319339752197
    5. '       ' → logprob: -4.542331695556641
    6. ' stack' → logprob: -5.917331695556641
    7. '	stack' → logprob: -8.66733169555664
    8. ' visited' → logprob: -9.16733169555664
    9. '               ' → logprob: -9.54233169555664
    10. 'non' → logprob: -9.66733169555664

Token 821: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048182349652051926
    2. ' =' → logprob: -3.298182249069214
    3. '.append' → logprob: -4.923182487487793
    4. '=[]' → logprob: -6.673182487487793
    5. '=[' → logprob: -6.673182487487793
    6. '=[]
' → logprob: -8.548182487487793
    7. '.pop' → logprob: -10.173182487487793
    8. '[' → logprob: -11.048182487487793
    9. '   ' → logprob: -11.923182487487793
    10. '[]' → logprob: -12.048182487487793

Token 822: ' [' (ID: 723)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.751746746478602e-05
    2. '[' → logprob: -10.00004768371582
    3. '[user' → logprob: -14.12504768371582
    4. '[(' → logprob: -14.50004768371582
    5. '[v' → logprob: -14.87504768371582
    6. '[a' → logprob: -15.37504768371582
    7. '[i' → logprob: -15.87504768371582
    8. '[t' → logprob: -16.12504768371582
    9. '[s' → logprob: -17.75004768371582
    10. '[id' → logprob: -17.87504768371582

Token 823: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -5.080963092041202e-06
    2. ' u' → logprob: -12.750004768371582
    3. '(u' → logprob: -13.500004768371582
    4. '[u' → logprob: -14.375004768371582
    5. '	u' → logprob: -17.1250057220459
    6. '   ' → logprob: -18.1250057220459
    7. '(' → logprob: -18.6250057220459
    8. '0' → logprob: -18.6250057220459
    9. ']' → logprob: -19.0000057220459
    10. ''u' → logprob: -19.3750057220459

Token 824: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.25193583965301514
    2. ']' → logprob: -1.5019358396530151
    3. ']
' → logprob: -13.126935958862305
    4. ' ]' → logprob: -13.751935958862305
    5. ' ]
' → logprob: -13.751935958862305
    6. '
' → logprob: -13.876935958862305
    7. ']

' → logprob: -13.876935958862305
    8. ']()
' → logprob: -16.001935958862305
    9. ')' → logprob: -16.251935958862305
    10. ')
' → logprob: -16.501935958862305

Token 825: '           ' (ID: 352)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6519566774368286
    2. '           ' → logprob: -1.2769566774368286
    3. 'cnt' → logprob: -2.651956558227539
    4. '   ' → logprob: -3.526956558227539
    5. 'res' → logprob: -3.651956558227539
    6. 'while' → logprob: -4.276956558227539
    7. 'result' → logprob: -4.526956558227539
    8. '       ' → logprob: -4.901956558227539
    9. 'total' → logprob: -4.901956558227539
    10. 'nodes' → logprob: -5.151956558227539

Token 826: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.723120927810669
    2. 'component' → logprob: -1.348120927810669
    3. 'comp' → logprob: -1.598120927810669
    4. 'visited' → logprob: -4.22312068939209
    5. ' comp' → logprob: -4.97312068939209
    6. '   ' → logprob: -5.09812068939209
    7. 'sub' → logprob: -5.22312068939209
    8. 'vertices' → logprob: -5.84812068939209
    9. 'count' → logprob: -5.84812068939209
    10. 'res' → logprob: -5.97312068939209

Token 827: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19848695397377014
    2. ' =' → logprob: -1.8234869241714478
    3. '=[]
' → logprob: -4.948486804962158
    4. '=[]' → logprob: -5.323486804962158
    5. '.append' → logprob: -6.073486804962158
    6. ',' → logprob: -6.198486804962158
    7. '   ' → logprob: -6.698486804962158
    8. '_count' → logprob: -8.323487281799316
    9. '```' → logprob: -9.073487281799316
    10. '=set' → logprob: -9.573487281799316

Token 828: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02358296327292919
    2. '[' → logprob: -4.398582935333252
    3. '[]
' → logprob: -4.898582935333252
    4. ' []' → logprob: -6.648582935333252
    5. '{' → logprob: -6.773582935333252
    6. 'set' → logprob: -7.523582935333252
    7. '1' → logprob: -8.02358341217041
    8. '0' → logprob: -8.89858341217041
    9. ' set' → logprob: -10.64858341217041
    10. ' [' → logprob: -11.14858341217041

Token 829: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5261504650115967
    2. ' while' → logprob: -1.1511504650115967
    3. 'while' → logprob: -2.7761504650115967
    4. '   ' → logprob: -4.026150703430176
    5. '
' → logprob: -4.776150703430176
    6. '       ' → logprob: -6.401150703430176
    7. '            
' → logprob: -8.026150703430176
    8. 'tokens' → logprob: -8.026150703430176
    9. ' tokens' → logprob: -8.151150703430176
    10. '```' → logprob: -8.401150703430176

Token 830: ' edges' (ID: 22569)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13415417075157166
    2. ' while' → logprob: -2.2591540813446045
    3. '           ' → logprob: -3.8841540813446045
    4. '   ' → logprob: -8.259154319763184
    5. 'visited' → logprob: -9.634154319763184
    6. '       ' → logprob: -9.759154319763184
    7. '	while' → logprob: -9.884154319763184
    8. 'stack' → logprob: -11.009154319763184
    9. 'While' → logprob: -11.134154319763184
    10. '               ' → logprob: -11.384154319763184

Token 831: '_count' (ID: 7536)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08032665401697159
    2. ' =' → logprob: -2.580326557159424
    3. '=[]' → logprob: -7.330326557159424
    4. '_count' → logprob: -7.455326557159424
    5. '=[]
' → logprob: -9.830327033996582
    6. '_stack' → logprob: -9.830327033996582
    7. 'count' → logprob: -10.205327033996582
    8. '   ' → logprob: -10.705327033996582
    9. ':' → logprob: -12.455327033996582
    10. '.append' → logprob: -12.580327033996582

Token 832: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740995764732361
    2. ' =' → logprob: -0.9740995764732361
    3. ' +=' → logprob: -11.724099159240723
    4. '           ' → logprob: -12.599099159240723
    5. '+=' → logprob: -12.724099159240723
    6. '   ' → logprob: -12.849099159240723
    7. ':' → logprob: -13.724099159240723
    8. ',' → logprob: -13.974099159240723
    9. ' ' → logprob: -14.224099159240723
    10. '       ' → logprob: -14.349099159240723

Token 833: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008397616329602897
    2. ' ' → logprob: -7.125839710235596
    3. '[' → logprob: -10.375840187072754
    4. '1' → logprob: -13.500840187072754
    5. ' [' → logprob: -13.875840187072754
    6. '   ' → logprob: -14.500840187072754
    7. '=' → logprob: -14.875840187072754
    8. '(' → logprob: -15.500840187072754
    9. '           ' → logprob: -16.375839233398438
    10. '[u' → logprob: -16.438339233398438

Token 834: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -11.875007629394531
    3. ' ' → logprob: -14.125007629394531
    4. '[]' → logprob: -16.25000762939453
    5. '[]
' → logprob: -16.50000762939453
    6. 'set' → logprob: -17.87500762939453
    7. '{' → logprob: -17.87500762939453
    8. '1' → logprob: -18.25000762939453
    9. '{}' → logprob: -18.25000762939453
    10. '   ' → logprob: -18.37500762939453

Token 835: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038088537752628326
    2. '       ' → logprob: -4.663088321685791
    3. ' while' → logprob: -4.663088321685791
    4. '<|end|>' → logprob: -4.788088321685791
    5. '   ' → logprob: -6.163088321685791
    6. 'while' → logprob: -6.538088321685791
    7. '
' → logprob: -6.538088321685791
    8. ' ' → logprob: -7.288088321685791
    9. ' 
' → logprob: -7.413088321685791
    10. '               ' → logprob: -7.413088321685791

Token 836: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.375707745552063
    2. '       ' → logprob: -1.875707745552063
    3. ' while' → logprob: -2.5007076263427734
    4. 'while' → logprob: -3.1257076263427734
    5. '   ' → logprob: -3.6257076263427734
    6. '
' → logprob: -5.375707626342773
    7. '```' → logprob: -7.125707626342773
    8. ' ' → logprob: -7.750707626342773
    9. '	while' → logprob: -7.875707626342773
    10. '               ' → logprob: -8.375707626342773

Token 837: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2872414290904999
    2. 'while' (adapté à ' while') → logprob: -1.7872414588928223
    3. '       ' → logprob: -2.7872414588928223
    4. '           ' → logprob: -4.412241458892822
    5. '   ' → logprob: -5.537241458892822
    6. '	while' → logprob: -5.662241458892822
    7. '    ' → logprob: -7.787241458892822
    8. '        ' → logprob: -8.912240982055664
    9. '	' → logprob: -9.412240982055664
    10. '            ' → logprob: -9.537240982055664

Token 838: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0015046248445287347
    2. ' stack' → logprob: -6.501504421234131
    3. 'len' → logprob: -13.251504898071289
    4. '	stack' → logprob: -15.251504898071289
    5. '(stack' → logprob: -15.376504898071289
    6. '
' → logprob: -16.75150489807129
    7. '   ' → logprob: -17.37650489807129
    8. ' ' → logprob: -17.37650489807129
    9. 'st' → logprob: -19.50150489807129
    10. ' len' → logprob: -19.62650489807129

Token 839: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011785128153860569
    2. ':
' → logprob: -4.51178503036499
    3. '.pop' → logprob: -7.76178503036499
    4. '):' → logprob: -9.511785507202148
    5. '<|end|>' → logprob: -9.761785507202148
    6. '=' → logprob: -10.511785507202148
    7. '>:' → logprob: -10.636785507202148
    8. 'not' → logprob: -11.011785507202148
    9. 'pop' → logprob: -11.136785507202148
    10. '):
' → logprob: -11.261785507202148

Token 840: '               ' (ID: 506)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5271181464195251
    2. ' u' → logprob: -1.02711820602417
    3. '               ' → logprob: -3.02711820602417
    4. 'v' → logprob: -7.02711820602417
    5. '           ' → logprob: -7.65211820602417
    6. '	           ' → logprob: -7.90211820602417
    7. 'node' → logprob: -8.027117729187012
    8. ' v' → logprob: -8.902117729187012
    9. '   ' → logprob: -8.902117729187012
    10. '	       ' → logprob: -9.027117729187012

Token 841: ' cur' (ID: 4396)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.027090154588222504
    2. 'v' → logprob: -4.027090072631836
    3. 'node' → logprob: -5.277090072631836
    4. ' u' → logprob: -5.652090072631836
    5. ' node' → logprob: -9.152090072631836
    6. 'stack' → logprob: -9.652090072631836
    7. ' v' → logprob: -10.152090072631836
    8. 'x' → logprob: -10.527090072631836
    9. 'curr' → logprob: -11.027090072631836
    10. 'w' → logprob: -11.652090072631836

Token 842: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328314542770386
    2. '=' → logprob: -1.3132832050323486
    3. '.pop' → logprob: -12.43828296661377
    4. ')' → logprob: -12.56328296661377
    5. '(stack' → logprob: -12.93828296661377
    6. 'stack' → logprob: -13.06328296661377
    7. 'u' → logprob: -13.43828296661377
    8. '=
' → logprob: -14.06328296661377
    9. ' stack' → logprob: -14.18828296661377
    10. ' =
' → logprob: -14.31328296661377

Token 843: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.008614808320999146
    2. ' stack' → logprob: -4.758615016937256
    3. '	stack' → logprob: -16.008615493774414
    4. '(stack' → logprob: -17.133615493774414
    5. '   ' → logprob: -17.383615493774414
    6. ' ' → logprob: -18.258615493774414
    7. '    ' → logprob: -20.633615493774414
    8. 'st' → logprob: -20.758615493774414
    9. 'stk' → logprob: -20.883615493774414
    10. '.stack' → logprob: -21.258615493774414

Token 844: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00016361083544325083
    2. 'pop' → logprob: -8.750164031982422
    3. '].' → logprob: -12.625164031982422
    4. '.append' → logprob: -14.125164031982422
    5. '=' → logprob: -15.500164031982422
    6. '   ' → logprob: -15.750164031982422
    7. 'Pop' → logprob: -15.750164031982422
    8. ' pop' → logprob: -16.000164031982422
    9. '[-' → logprob: -16.250164031982422
    10. '
' → logprob: -16.375164031982422

Token 845: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.1427697241306305
    2. '()' → logprob: -2.0177698135375977
    3. ')
' → logprob: -10.142769813537598
    4. '()
' → logprob: -10.767769813537598
    5. ')' → logprob: -11.142769813537598
    6. '())
' → logprob: -12.142769813537598
    7. '
' → logprob: -12.642769813537598
    8. '();' → logprob: -12.767769813537598
    9. '               ' → logprob: -13.267769813537598
    10. '())' → logprob: -13.642769813537598

Token 846: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2892371416091919
    2. '               ' → logprob: -1.789237141609192
    3. '           ' → logprob: -2.7892370223999023
    4. 'if' → logprob: -4.414237022399902
    5. ' 
' → logprob: -5.164237022399902
    6. '                ' → logprob: -6.539237022399902
    7. '                   ' → logprob: -7.289237022399902
    8. '            ' → logprob: -7.539237022399902
    9. '                
' → logprob: -7.914237022399902
    10. '[' → logprob: -8.164237022399902

Token 847: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6935431361198425
    2. ' if' → logprob: -0.6935431361198425
    3. 'nodes' → logprob: -8.443543434143066
    4. 'visited' → logprob: -9.068543434143066
    5. ' nodes' → logprob: -9.943543434143066
    6. '               ' → logprob: -11.693543434143066
    7. ' visited' → logprob: -12.318543434143066
    8. '
' → logprob: -13.818543434143066
    9. '```' → logprob: -13.943543434143066
    10. '           ' → logprob: -14.318543434143066

Token 848: ' visited' (ID: 18416)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20821906626224518
    2. 'visited' → logprob: -1.833219051361084
    3. ' not' → logprob: -3.583219051361084
    4. ' visited' → logprob: -8.333219528198242
    5. 'cur' → logprob: -10.083219528198242
    6. '	not' → logprob: -13.458219528198242
    7. '   ' → logprob: -14.083219528198242
    8. '!' → logprob: -14.208219528198242
    9. '(not' → logprob: -14.708219528198242
    10. 'vis' → logprob: -15.083219528198242

Token 849: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -2.696889623621246e-06
    2. 'cur' → logprob: -13.12500286102295
    3. '[' → logprob: -15.12500286102295
    4. '(cur' → logprob: -16.000001907348633
    5. '[u' → logprob: -16.500001907348633
    6. ' [' → logprob: -17.125001907348633
    7. '[current' → logprob: -17.250001907348633
    8. '[curr' → logprob: -17.375001907348633
    9. '
' → logprob: -17.625001907348633
    10. '[
' → logprob: -18.625001907348633

Token 850: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -1.1273870468139648
    2. ']' → logprob: -1.2523870468139648
    3. ']==' → logprob: -1.7523870468139648
    4. ']:
' → logprob: -1.7523870468139648
    5. '==' → logprob: -3.252387046813965
    6. ':
' → logprob: -6.377387046813965
    7. ':' → logprob: -6.627387046813965
    8. ' ==' → logprob: -7.627387046813965
    9. ']=' → logprob: -8.002387046813965
    10. ' ]' → logprob: -8.252387046813965

Token 851: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20581308007240295
    2. 'continue' → logprob: -2.33081316947937
    3. ' continue' → logprob: -2.95581316947937
    4. '               ' → logprob: -3.58081316947937
    5. '           ' → logprob: -5.330812931060791
    6. ':
' → logprob: -6.330812931060791
    7. '   ' → logprob: -7.205812931060791
    8. '                       ' → logprob: -7.705812931060791
    9. '	continue' → logprob: -7.830812931060791
    10. '       ' → logprob: -8.33081340789795

Token 852: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.38790959119796753
    2. ' continue' → logprob: -1.1379096508026123
    3. '           ' → logprob: -7.387909412384033
    4. '               ' → logprob: -8.762909889221191
    5. '	continue' → logprob: -9.262909889221191
    6. '                   ' → logprob: -9.637909889221191
    7. '       ' → logprob: -10.012909889221191
    8. '   ' → logprob: -10.012909889221191
    9. '
' → logprob: -11.637909889221191
    10. 'Continue' → logprob: -13.637909889221191

Token 853: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010638630948960781
    2. '                   ' → logprob: -5.63563871383667
    3. '           ' → logprob: -5.63563871383667
    4. '
' → logprob: -5.88563871383667
    5. '                
' → logprob: -8.635638236999512
    6. ' 
' → logprob: -9.135638236999512
    7. '    
' → logprob: -9.635638236999512
    8. '<|end|>' → logprob: -9.760638236999512
    9. '   ' → logprob: -9.885638236999512
    10. '                    
' → logprob: -10.010638236999512

Token 854: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05259445682168007
    2. '           ' → logprob: -3.0525944232940674
    3. '                   ' → logprob: -6.1775946617126465
    4. '
' → logprob: -6.6775946617126465
    5. '       ' → logprob: -8.552594184875488
    6. '```' → logprob: -9.052594184875488
    7. '   ' → logprob: -9.427594184875488
    8. 'visited' → logprob: -9.677594184875488
    9. '                
' → logprob: -9.927594184875488
    10. ' visited' → logprob: -10.427594184875488

Token 855: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.593904435634613
    2. ' visited' → logprob: -0.843904435634613
    3. '               ' → logprob: -4.093904495239258
    4. '       ' → logprob: -7.218904495239258
    5. '           ' → logprob: -8.218904495239258
    6. '   ' → logprob: -9.593904495239258
    7. '
' → logprob: -10.843904495239258
    8. 'Visited' → logprob: -11.093904495239258
    9. '                   ' → logprob: -11.468904495239258
    10. '```' → logprob: -12.218904495239258

Token 856: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: 0.0
    2. '[' → logprob: -17.5
    3. 'cur' → logprob: -17.75
    4. '
' → logprob: -18.75
    5. '[curr' → logprob: -19.25
    6. '(cur' → logprob: -20.0
    7. ' [' → logprob: -20.0
    8. '```' → logprob: -20.125
    9. '[current' → logprob: -20.75
    10. '[
' → logprob: -21.25

Token 857: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008888294687494636
    2. ']=' → logprob: -7.375888824462891
    3. '[cur' → logprob: -8.25088882446289
    4. '=' → logprob: -14.25088882446289
    5. ']
' → logprob: -15.87588882446289
    6. '[' → logprob: -16.12588882446289
    7. ')' → logprob: -16.12588882446289
    8. ' ]' → logprob: -16.12588882446289
    9. 'cur' → logprob: -16.25088882446289
    10. '(cur' → logprob: -17.37588882446289

Token 858: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001179989194497466
    2. ' =' → logprob: -6.751180171966553
    3. ']' → logprob: -12.501179695129395
    4. ']=' → logprob: -12.751179695129395
    5. '[cur' → logprob: -13.501179695129395
    6. '[' → logprob: -13.626179695129395
    7. '=True' → logprob: -14.751179695129395
    8. '=
' → logprob: -16.37618064880371
    9. '[u' → logprob: -17.62618064880371
    10. '   ' → logprob: -17.75118064880371

Token 859: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.676292231422849e-05
    2. ' True' → logprob: -11.000017166137695
    3. '(True' → logprob: -19.625017166137695
    4. '
' → logprob: -19.750017166137695
    5. '1' → logprob: -20.250017166137695
    6. '   ' → logprob: -20.750017166137695
    7. 'False' → logprob: -21.000017166137695
    8. 'true' → logprob: -22.250017166137695
    9. ' ' → logprob: -23.500017166137695
    10. '=True' → logprob: -23.625017166137695

Token 860: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008946508169174194
    2. '
' → logprob: -5.258946418762207
    3. '<|end|>' → logprob: -7.258946418762207
    4. '                
' → logprob: -7.383946418762207
    5. ' nodes' → logprob: -7.883946418762207
    6. ' tokens' → logprob: -7.883946418762207
    7. 'tokens' → logprob: -8.008946418762207
    8. '(nodes' → logprob: -8.133946418762207
    9. 'nodes' → logprob: -8.508946418762207
    10. '	nodes' → logprob: -8.758946418762207

Token 861: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009370220825076103
    2. ' nodes' → logprob: -5.00937032699585
    3. 'nodes' → logprob: -6.75937032699585
    4. '	nodes' → logprob: -7.50937032699585
    5. ' tokens' → logprob: -7.75937032699585
    6. '(nodes' → logprob: -8.759369850158691
    7. '<|end|>' → logprob: -8.884369850158691
    8. 'tokens' → logprob: -9.134369850158691
    9. '_nodes' → logprob: -10.384369850158691
    10. '			' → logprob: -10.884369850158691

Token 862: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.3869268298149109
    2. ' nodes' → logprob: -1.1369268894195557
    3. '	nodes' → logprob: -10.511926651000977
    4. '               ' → logprob: -10.886926651000977
    5. '           ' → logprob: -12.386926651000977
    6. '(nodes' → logprob: -13.011926651000977
    7. '.nodes' → logprob: -13.886926651000977
    8. '_nodes' → logprob: -14.386926651000977
    9. '   ' → logprob: -14.386926651000977
    10. ' for' → logprob: -15.136926651000977

Token 863: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.392824874026701e-05
    2. '.' → logprob: -10.37503433227539
    3. 'append' → logprob: -13.00003433227539
    4. '.extend' → logprob: -15.75003433227539
    5. '.app' → logprob: -16.00003433227539
    6. ' .' → logprob: -16.75003433227539
    7. '.push' → logprob: -18.12503433227539
    8. 'Append' → logprob: -18.50003433227539
    9. '.Append' → logprob: -18.62503433227539
    10. ' append' → logprob: -18.87503433227539

Token 864: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.002476135268807411
    2. 'cur' → logprob: -6.002476215362549
    3. '(' → logprob: -14.75247573852539
    4. ' cur' → logprob: -17.00247573852539
    5. '[cur' → logprob: -18.12747573852539
    6. '	cur' → logprob: -19.50247573852539
    7. '(
' → logprob: -19.87747573852539
    8. '(c' → logprob: -20.50247573852539
    9. '(curr' → logprob: -20.87747573852539
    10. '(comp' → logprob: -21.75247573852539

Token 865: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014012235216796398
    2. ')
' → logprob: -4.389012336730957
    3. '<|end|>' → logprob: -6.639012336730957
    4. '               ' → logprob: -9.139012336730957
    5. '           ' → logprob: -10.514012336730957
    6. '       ' → logprob: -10.889012336730957
    7. ',' → logprob: -11.389012336730957
    8. '<|end|>' → logprob: -11.639012336730957
    9. '                   ' → logprob: -12.639012336730957
    10. '),' → logprob: -12.889012336730957

Token 866: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006107608787715435
    2. '           ' → logprob: -6.506107807159424
    3. 'edges' → logprob: -6.631107807159424
    4. '       ' → logprob: -7.006107807159424
    5. ' edges' → logprob: -7.131107807159424
    6. '			' → logprob: -7.881107807159424
    7. '<|end|>' → logprob: -8.381107330322266
    8. '                   ' → logprob: -8.756107330322266
    9. '
' → logprob: -8.881107330322266
    10. '(edges' → logprob: -9.006107330322266

Token 867: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4301043748855591
    2. 'edges' (adapté à ' edges') → logprob: -1.055104374885559
    3. ' for' → logprob: -7.3051042556762695
    4. '               ' → logprob: -7.9301042556762695
    5. ' edges' → logprob: -8.30510425567627
    6. '           ' → logprob: -9.80510425567627
    7. '                   ' → logprob: -10.55510425567627
    8. '       ' → logprob: -11.68010425567627
    9. '```' → logprob: -11.80510425567627
    10. '(edges' → logprob: -11.93010425567627

Token 868: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0005326599348336458
    2. '_' → logprob: -8.500533103942871
    3. '+=' → logprob: -9.125533103942871
    4. '=' → logprob: -9.625533103942871
    5. ' +=' → logprob: -9.750533103942871
    6. ' =' → logprob: -10.250533103942871
    7. 'count' → logprob: -10.375533103942871
    8. '```' → logprob: -12.625533103942871
    9. '   ' → logprob: -12.750533103942871
    10. '_counts' → logprob: -13.000533103942871

Token 869: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931516528129578
    2. '+=' → logprob: -0.6931516528129578
    3. '+=(' → logprob: -13.318151473999023
    4. '=' → logprob: -13.693151473999023
    5. '+' → logprob: -14.318151473999023
    6. ']+=' → logprob: -14.943151473999023
    7. ' =' → logprob: -15.818151473999023
    8. ' +' → logprob: -15.818151473999023
    9. '+='' → logprob: -15.943151473999023
    10. '```' → logprob: -16.193151473999023

Token 870: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.511406809295295e-06
    2. ' len' → logprob: -12.000006675720215
    3. '(len' → logprob: -15.500006675720215
    4. '1' → logprob: -16.0000057220459
    5. 'sum' → logprob: -19.8750057220459
    6. '	len' → logprob: -20.0000057220459
    7. '=len' → logprob: -20.1250057220459
    8. '0' → logprob: -20.5000057220459
    9. '[len' → logprob: -20.5000057220459
    10. ' ' → logprob: -20.7500057220459

Token 871: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -1.7120533811976202e-05
    2. 'comp' → logprob: -11.000017166137695
    3. '(' → logprob: -15.000017166137695
    4. '	comp' → logprob: -17.125017166137695
    5. '(
' → logprob: -17.875017166137695
    6. ' comp' → logprob: -18.750017166137695
    7. '(c' → logprob: -19.750017166137695
    8. '(com' → logprob: -20.875017166137695
    9. '_comp' → logprob: -21.500017166137695
    10. 'Comp' → logprob: -21.625017166137695

Token 872: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -6.630610641877865e-06
    2. 'graph' → logprob: -12.750006675720215
    3. '[u' → logprob: -13.250006675720215
    4. '[cur' → logprob: -13.750006675720215
    5. '[' → logprob: -15.000006675720215
    6. 'Graph' → logprob: -15.375006675720215
    7. '[_' → logprob: -16.6250057220459
    8. '_GRAPH' → logprob: -16.8750057220459
    9. 's' → logprob: -17.0000057220459
    10. '```' → logprob: -17.8750057220459

Token 873: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -4.320199877838604e-07
    2. 'cur' → logprob: -15.625
    3. '[current' → logprob: -17.125
    4. '[' → logprob: -17.125
    5. '[curr' → logprob: -17.875
    6. '(cur' → logprob: -18.0
    7. '[
' → logprob: -18.375
    8. ' [' → logprob: -18.625
    9. '[c' → logprob: -19.125
    10. '[u' → logprob: -19.25

Token 874: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010950337309623137
    2. ' )' → logprob: -9.750109672546387
    3. ')
' → logprob: -10.375109672546387
    4. '<|end|>' → logprob: -11.250109672546387
    5. ' ' → logprob: -13.625109672546387
    6. '[' → logprob: -13.750109672546387
    7. '   ' → logprob: -13.875109672546387
    8. '])' → logprob: -14.500109672546387
    9. ')#' → logprob: -15.000109672546387
    10. ')}}' → logprob: -15.250109672546387

Token 875: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 876: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7089881896972656
    2. '           ' → logprob: -0.9589881896972656
    3. ' for' → logprob: -2.2089881896972656
    4. '               ' → logprob: -4.833988189697266
    5. '
' → logprob: -6.333988189697266
    6. 'for' (adapté à ' for') → logprob: -6.333988189697266
    7. '   ' → logprob: -6.458988189697266
    8. '```' → logprob: -7.083988189697266
    9. ' ' → logprob: -8.958988189697266
    10. '	       ' → logprob: -9.083988189697266

Token 877: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.34721434116363525
    2. 'v' → logprob: -1.3472143411636353
    3. 'nx' → logprob: -4.347214221954346
    4. 'nei' → logprob: -5.097214221954346
    5. 'neighbor' → logprob: -5.347214221954346
    6. 'nv' → logprob: -5.597214221954346
    7. 'n' → logprob: -6.097214221954346
    8. 'nbr' → logprob: -6.097214221954346
    9. ' nxt' → logprob: -6.847214221954346
    10. 'ne' → logprob: -9.222214698791504

Token 878: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759773850440979
    2. 'in' → logprob: -0.8259773850440979
    3. '	in' → logprob: -10.950977325439453
    4. 'w' → logprob: -11.325977325439453
    5. ' ' → logprob: -12.075977325439453
    6. 'n' → logprob: -13.700977325439453
    7. ' w' → logprob: -14.700977325439453
    8. ')' → logprob: -15.325977325439453
    9. '  ' → logprob: -15.950977325439453
    10. '
' → logprob: -15.950977325439453

Token 879: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -5.836499985889532e-05
    2. ' comp' → logprob: -9.7500581741333
    3. '(comp' → logprob: -17.000059127807617
    4. '	comp' → logprob: -18.375059127807617
    5. 'com' → logprob: -21.375059127807617
    6. '.comp' → logprob: -21.750059127807617
    7. 'cmp' → logprob: -23.500059127807617
    8. 'cur' → logprob: -24.625059127807617
    9. '  ' → logprob: -24.750059127807617
    10. '   ' → logprob: -24.750059127807617

Token 880: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -5.319370302458992e-06
    2. 'raph' → logprob: -12.375005722045898
    3. 'Graph' → logprob: -14.875005722045898
    4. '_GRAPH' → logprob: -15.625005722045898
    5. 'graph' → logprob: -15.625005722045898
    6. '[' → logprob: -16.0000057220459
    7. '[u' → logprob: -16.1250057220459
    8. '_' → logprob: -17.6250057220459
    9. '\' → logprob: -17.8750057220459
    10. '```' → logprob: -17.8750057220459

Token 881: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -2.935296834039036e-06
    2. 'cur' → logprob: -12.87500286102295
    3. '[u' → logprob: -15.25000286102295
    4. '(cur' → logprob: -17.375003814697266
    5. 'w' → logprob: -19.250003814697266
    6. '	cur' → logprob: -19.375003814697266
    7. '[c' → logprob: -19.625003814697266
    8. '[w' → logprob: -20.250003814697266
    9. '```' → logprob: -20.250003814697266
    10. '[curr' → logprob: -20.375003814697266

Token 882: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.05723319947719574
    2. '[cur' → logprob: -3.6822330951690674
    3. ']:' → logprob: -3.6822330951690674
    4. '[u' → logprob: -5.4322333335876465
    5. ':
' → logprob: -7.8072333335876465
    6. ':' → logprob: -8.807232856750488
    7. 'u' → logprob: -9.557232856750488
    8. ']' → logprob: -9.557232856750488
    9. '       ' → logprob: -10.057232856750488
    10. '   ' → logprob: -10.307232856750488

Token 883: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008270460180938244
    2. ' stack' → logprob: -5.883270263671875
    3. ' if' → logprob: -7.008270263671875
    4. '                ' → logprob: -7.258270263671875
    5. '               ' → logprob: -7.258270263671875
    6. '                       ' → logprob: -7.633270263671875
    7. '		           ' → logprob: -7.758270263671875
    8. 'stack' → logprob: -7.883270263671875
    9. '    ' → logprob: -8.258270263671875
    10. '	               ' → logprob: -8.258270263671875

Token 884: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12446073442697525
    2. ' if' → logprob: -2.3744606971740723
    3. 'stack' → logprob: -3.7494606971740723
    4. ' stack' → logprob: -8.87446117401123
    5. '               ' → logprob: -9.24946117401123
    6. '   ' → logprob: -9.37446117401123
    7. '                   ' → logprob: -9.99946117401123
    8. '       ' → logprob: -10.49946117401123
    9. '           ' → logprob: -10.99946117401123
    10. '	if' → logprob: -11.62446117401123

Token 885: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.029784509912133217
    2. ' not' → logprob: -3.5297844409942627
    3. 'w' → logprob: -10.779784202575684
    4. 'visited' → logprob: -12.029784202575684
    5. '(not' → logprob: -12.279784202575684
    6. '!' → logprob: -13.279784202575684
    7. '	not' → logprob: -14.279784202575684
    8. ' w' → logprob: -16.52978515625
    9. '   ' → logprob: -17.02978515625
    10. 'n' → logprob: -17.15478515625

Token 886: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -8.494741632603109e-05
    2. ' visited' → logprob: -9.37508487701416
    3. '
' → logprob: -17.625085830688477
    4. '   ' → logprob: -19.750085830688477
    5. 'visible' → logprob: -20.750085830688477
    6. 'w' → logprob: -20.875085830688477
    7. '```' → logprob: -21.250085830688477
    8. 'visit' → logprob: -21.625085830688477
    9. 'Visited' → logprob: -21.750085830688477
    10. 'vis' → logprob: -22.000085830688477

Token 887: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -4.961759259458631e-06
    2. 'w' → logprob: -12.500004768371582
    3. '[' → logprob: -13.875004768371582
    4. '(w' → logprob: -15.875004768371582
    5. '<w' → logprob: -16.7500057220459
    6. '	w' → logprob: -17.8750057220459
    7. ' w' → logprob: -18.6250057220459
    8. '[v' → logprob: -19.0000057220459
    9. ' [' → logprob: -19.3750057220459
    10. '[u' → logprob: -19.5000057220459

Token 888: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.2004498392343521
    2. ':
' → logprob: -2.2004499435424805
    3. ']:' → logprob: -3.0754499435424805
    4. ':' → logprob: -3.8254499435424805
    5. ' and' → logprob: -6.7004499435424805
    6. '):
' → logprob: -7.5754499435424805
    7. 'and' → logprob: -8.45044994354248
    8. ']' → logprob: -8.70044994354248
    9. '                   ' → logprob: -8.82544994354248
    10. 'stack' → logprob: -9.32544994354248

Token 889: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.22204653918743134
    2. ' stack' → logprob: -1.8470464944839478
    3. 'stack' → logprob: -3.2220466136932373
    4. '                   ' → logprob: -7.222046375274658
    5. '                           ' → logprob: -8.347046852111816
    6. '(stack' → logprob: -8.347046852111816
    7. '	stack' → logprob: -9.222046852111816
    8. '_stack' → logprob: -9.847046852111816
    9. '                               ' → logprob: -9.972046852111816
    10. '.stack' → logprob: -10.097046852111816

Token 890: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0011708177626132965
    2. ' stack' → logprob: -6.751170635223389
    3. '	stack' → logprob: -14.876171112060547
    4. '   ' → logprob: -16.626171112060547
    5. '                           ' → logprob: -17.126171112060547
    6. 'Stack' → logprob: -17.626171112060547
    7. '                       ' → logprob: -17.751171112060547
    8. '                   ' → logprob: -18.001171112060547
    9. '(stack' → logprob: -18.126171112060547
    10. '.stack' → logprob: -18.751171112060547

Token 891: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.869017852295656e-06
    2. 'append' → logprob: -12.375006675720215
    3. '.' → logprob: -12.875006675720215
    4. '.extend' → logprob: -17.12500762939453
    5. ' .' → logprob: -18.00000762939453
    6. 'Append' → logprob: -18.25000762939453
    7. '.app' → logprob: -19.12500762939453
    8. '           ' → logprob: -19.87500762939453
    9. '_append' → logprob: -20.00000762939453
    10. '.push' → logprob: -20.12500762939453

Token 892: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.000553151941858232
    2. 'w' → logprob: -7.500553131103516
    3. '(' → logprob: -16.000553131103516
    4. '	w' → logprob: -17.625553131103516
    5. ' w' → logprob: -17.875553131103516
    6. '<w' → logprob: -19.625553131103516
    7. '[w' → logprob: -19.750553131103516
    8. ' (' → logprob: -20.500553131103516
    9. '((' → logprob: -20.500553131103516
    10. '(
' → logprob: -20.750553131103516

Token 893: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004647504829335958
    2. '<|end|>' → logprob: -7.875464916229248
    3. ')
' → logprob: -10.00046443939209
    4. ')return' → logprob: -11.62546443939209
    5. ')#' → logprob: -12.25046443939209
    6. ' )' → logprob: -12.62546443939209
    7. '):
' → logprob: -12.62546443939209
    8. ']' → logprob: -12.75046443939209
    9. '）' → logprob: -13.50046443939209
    10. '),' → logprob: -13.62546443939209

Token 894: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007226192858070135
    2. '       ' → logprob: -5.38222599029541
    3. '<|end|>' → logprob: -7.25722599029541
    4. '               ' → logprob: -7.50722599029541
    5. ' return' → logprob: -7.50722599029541
    6. '
' → logprob: -8.75722599029541
    7. ')' → logprob: -8.88222599029541
    8. '          ' → logprob: -9.50722599029541
    9. '   ' → logprob: -9.88222599029541
    10. ',' → logprob: -9.88222599029541

Token 895: ' edges' (ID: 22569)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0619717836380005
    2. '       ' → logprob: -1.1869717836380005
    3. ' edges' → logprob: -1.4369717836380005
    4. 'edges' (adapté à ' edges') → logprob: -2.311971664428711
    5. '   ' → logprob: -5.061971664428711
    6. '
' → logprob: -5.936971664428711
    7. ' nodes' → logprob: -7.561971664428711
    8. '(edges' → logprob: -7.561971664428711
    9. '<|end|>' → logprob: -7.686971664428711
    10. 'nodes' → logprob: -8.186971664428711

Token 896: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3782830137643032e-05
    2. 's' → logprob: -11.87501335144043
    3. '_' → logprob: -12.75001335144043
    4. ' =' → logprob: -14.37501335144043
    5. 'count' → logprob: -14.37501335144043
    6. '_counts' → logprob: -14.62501335144043
    7. '=' → logprob: -15.12501335144043
    8. '_counter' → logprob: -15.25001335144043
    9. '_total' → logprob: -15.50001335144043
    10. '<|end|>' → logprob: -15.50001335144043

Token 897: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.004343956243246794
    2. ' //' → logprob: -6.0043439865112305
    3. '//' → logprob: -6.5043439865112305
    4. '=' → logprob: -8.00434398651123
    5. '>>' → logprob: -10.50434398651123
    6. ' >>=' → logprob: -12.62934398651123
    7. '/=' → logprob: -13.25434398651123
    8. '   ' → logprob: -13.25434398651123
    9. ' =' → logprob: -14.87934398651123
    10. '```' → logprob: -15.37934398651123

Token 898: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00023095356300473213
    2. '2' → logprob: -8.37523078918457
    3. '=
' → logprob: -15.12523078918457
    4. '=

' → logprob: -17.50023078918457
    5. '```' → logprob: -17.62523078918457
    6. '>' → logprob: -18.25023078918457
    7. '=.' → logprob: -18.37523078918457
    8. '='' → logprob: -18.75023078918457
    9. '/' → logprob: -19.12523078918457
    10. '=}' → logprob: -19.12523078918457

Token 899: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.6250057220459
    4. '
' → logprob: -19.1250057220459
    5. '1' → logprob: -19.5000057220459
    6. '```' → logprob: -19.7500057220459
    7. '۲' → logprob: -20.3750057220459
    8. '２' → logprob: -21.1250057220459
    9. '<|end|>' → logprob: -21.2500057220459
    10. ' ' → logprob: -21.3750057220459

Token 900: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -19.625
    4. '۲' → logprob: -20.375
    5. '   ' → logprob: -20.625
    6. '２' → logprob: -20.875
    7. '
' → logprob: -21.25
    8. '```' → logprob: -21.25
    9. '=' → logprob: -21.75
    10. '২' → logprob: -22.125

Token 901: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21561303734779358
    2. '<|end|>' → logprob: -1.8406130075454712
    3. '
' → logprob: -3.4656131267547607
    4. '<|end|>' → logprob: -7.090612888336182
    5. '            
' → logprob: -7.215612888336182
    6. 'return' → logprob: -7.465612888336182
    7. ',' → logprob: -7.840612888336182
    8. ' return' → logprob: -7.965612888336182
    9. '       ' → logprob: -7.965612888336182
    10. '  
' → logprob: -8.84061336517334

Token 902: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03146715834736824
    2. '<|end|>' → logprob: -3.5314671993255615
    3. '           ' → logprob: -7.031466960906982
    4. '<|end|>' → logprob: -8.65646743774414
    5. '
' → logprob: -8.78146743774414
    6. ',' → logprob: -9.28146743774414
    7. ',
' → logprob: -9.40646743774414
    8. '  
' → logprob: -9.40646743774414
    9. '       ' → logprob: -9.65646743774414
    10. '```' → logprob: -10.28146743774414

Token 903: ' since' (ID: 3630)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 904: ' und' (ID: 844)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.24648615717887878
    2. 'edges' → logprob: -2.121486186981201
    3. ' each' → logprob: -3.121486186981201
    4. ' edges' → logprob: -3.121486186981201
    5. 'und' → logprob: -4.996486186981201
    6. 'all' → logprob: -7.371486186981201
    7. 'the' → logprob: -7.496486186981201
    8. 'count' → logprob: -7.871486186981201
    9. 'every' → logprob: -7.871486186981201
    10. 'adj' → logprob: -8.246485710144043

Token 905: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.00039158877916634083
    2. '_edges' → logprob: -8.125391960144043
    3. 'edges' → logprob: -9.875391960144043
    4. 'er' → logprob: -11.000391960144043
    5. 'efined' → logprob: -12.125391960144043
    6. 'uplic' → logprob: -12.750391960144043
    7. 'count' → logprob: -12.750391960144043
    8. '           ' → logprob: -12.875391960144043
    9. ' edges' → logprob: -13.000391960144043
    10. 'visited' → logprob: -13.500391960144043

Token 906: ' edges' (ID: 22569)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9176954627037048
    2. '
' → logprob: -1.1676955223083496
    3. '<|end|>' → logprob: -1.4176955223083496
    4. 'return' → logprob: -3.9176955223083496
    5. '       ' → logprob: -4.41769552230835
    6. ' return' → logprob: -5.91769552230835
    7. 'tokens' → logprob: -5.91769552230835
    8. '<|end|>' → logprob: -5.91769552230835
    9. '            
' → logprob: -6.66769552230835
    10. '               ' → logprob: -7.04269552230835

Token 907: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1097664162516594
    2. '
' → logprob: -2.4847664833068848
    3. '<|end|>' → logprob: -3.9847664833068848
    4. 'return' → logprob: -7.734766483306885
    5. '<|end|>' → logprob: -7.734766483306885
    6. '            
' → logprob: -7.984766483306885
    7. ',' → logprob: -8.359766006469727
    8. ' return' → logprob: -9.359766006469727
    9. ',
' → logprob: -9.484766006469727
    10. '    
' → logprob: -9.609766006469727

Token 908: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001887468621134758
    2. 'return' → logprob: -7.251887321472168
    3. '
' → logprob: -8.126887321472168
    4. '<|end|>' → logprob: -8.251887321472168
    5. ' return' → logprob: -8.501887321472168
    6. '       ' → logprob: -8.626887321472168
    7. '   ' → logprob: -9.376887321472168
    8. '```' → logprob: -9.876887321472168
    9. '            
' → logprob: -10.626887321472168
    10. ',' → logprob: -11.626887321472168

Token 909: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32249560952186584
    2. 'from' → logprob: -2.822495698928833
    3. 'return' (adapté à ' return') → logprob: -2.947495698928833
    4. 'import' → logprob: -2.947495698928833
    5. 'n' → logprob: -3.197495698928833
    6. '       ' → logprob: -3.697495698928833
    7. '#' → logprob: -4.447495460510254
    8. ' return' → logprob: -5.322495460510254
    9. '   ' → logprob: -5.572495460510254
    10. ' from' → logprob: -5.572495460510254

Token 910: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.12407297641038895
    2. '(nodes' → logprob: -2.374073028564453
    3. 'len' → logprob: -4.249073028564453
    4. ' nodes' → logprob: -5.124073028564453
    5. '(len' → logprob: -5.749073028564453
    6. ' (' → logprob: -9.499073028564453
    7. ' len' → logprob: -9.624073028564453
    8. '	nodes' → logprob: -11.374073028564453
    9. '(' → logprob: -12.249073028564453
    10. '   ' → logprob: -12.749073028564453

Token 911: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 912: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.005235190503299236
    2. ' edges' → logprob: -5.255235195159912
    3. '(edges' → logprob: -13.755234718322754
    4. 'edge' → logprob: -15.630234718322754
    5. '   ' → logprob: -16.13023567199707
    6. '.edges' → logprob: -16.75523567199707
    7. '
' → logprob: -17.25523567199707
    8. '       ' → logprob: -17.38023567199707
    9. '_edges' → logprob: -17.75523567199707
    10. '```' → logprob: -18.13023567199707

Token 913: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.4272752852994017e-05
    2. 'count' → logprob: -11.25002384185791
    3. '_COUNT' → logprob: -12.87502384185791
    4. '   ' → logprob: -13.25002384185791
    5. '_counts' → logprob: -13.37502384185791
    6. '       ' → logprob: -14.25002384185791
    7. '_' → logprob: -14.37502384185791
    8. ')' → logprob: -14.50002384185791
    9. 'Count' → logprob: -14.62502384185791
    10. ' _' → logprob: -15.00002384185791

Token 914: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 915: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1267419308423996
    2. 'from' → logprob: -2.876741886138916
    3. 'for' → logprob: -3.501741886138916
    4. 'components' → logprob: -4.751741886138916
    5. '```' → logprob: -5.126741886138916
    6. '   ' → logprob: -5.251741886138916
    7. 'nodes' → logprob: -6.501741886138916
    8. 'import' → logprob: -6.501741886138916
    9. 'next' → logprob: -6.626741886138916
    10. '        
' → logprob: -6.751741886138916

Token 916: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17797988653182983
    2. '       ' → logprob: -2.5529799461364746
    3. 'components' → logprob: -3.1779799461364746
    4. ' for' → logprob: -3.9279799461364746
    5. '   ' → logprob: -5.052979946136475
    6. 'nodes' → logprob: -5.302979946136475
    7. 'next' → logprob: -6.427979946136475
    8. 'cc' → logprob: -6.552979946136475
    9. 'def' → logprob: -6.677979946136475
    10. 'from' → logprob: -6.802979946136475

Token 917: ' Counting' (ID: 150614)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.053593557327985764
    2. 'from' → logprob: -3.303593635559082
    3. 'import' → logprob: -5.178593635559082
    4. '       ' → logprob: -5.303593635559082
    5. '   ' → logprob: -6.553593635559082
    6. 'components' → logprob: -6.803593635559082
    7. 'def' → logprob: -7.678593635559082
    8. 'comp' → logprob: -8.178593635559082
    9. 'total' → logprob: -8.303593635559082
    10. ' for' → logprob: -8.428593635559082

Token 918: ' number' (ID: 2086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5860089063644409
    2. 'from' → logprob: -1.961008906364441
    3. '       ' → logprob: -2.8360090255737305
    4. 'component' → logprob: -3.0860090255737305
    5. 'components' → logprob: -3.3360090255737305
    6. 'ways' → logprob: -3.3360090255737305
    7. 'def' → logprob: -3.3360090255737305
    8. 'import' → logprob: -3.7110090255737305
    9. 'nodes' → logprob: -3.8360090255737305
    10. ' for' → logprob: -5.0860090255737305

Token 919: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.7415444254875183
    2. '_of' → logprob: -0.8665444254875183
    3. '=' → logprob: -3.366544485092163
    4. '_' → logprob: -3.491544485092163
    5. ' =' → logprob: -3.991544485092163
    6. '       ' → logprob: -4.866544246673584
    7. 'ways' → logprob: -5.866544246673584
    8. ' of' → logprob: -5.866544246673584
    9. '_nodes' → logprob: -5.991544246673584
    10. '   ' → logprob: -6.491544246673584

Token 920: ' spanning' (ID: 66335)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.1813688427209854
    2. 'nodes' → logprob: -2.681368827819824
    3. 'sp' → logprob: -3.681368827819824
    4. ' ways' → logprob: -3.931368827819824
    5. 'trees' → logprob: -4.181368827819824
    6. '#' → logprob: -4.931368827819824
    7. 'M' → logprob: -5.056368827819824
    8. 'from' → logprob: -5.556368827819824
    9. ' spanning' → logprob: -5.556368827819824
    10. 'import' → logprob: -5.806368827819824

Token 921: ' trees' (ID: 16979)
  Prédit: 'trees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trees' → logprob: -0.0003741887048818171
    2. ' trees' → logprob: -8.875373840332031
    3. 'tree' → logprob: -9.125373840332031
    4. 't' → logprob: -9.625373840332031
    5. '```' → logprob: -10.125373840332031
    6. 'fore' → logprob: -12.125373840332031
    7. '#' → logprob: -12.250373840332031
    8. 'forest' → logprob: -13.375373840332031
    9. 'def' → logprob: -13.625373840332031
    10. '   ' → logprob: -13.750373840332031

Token 922: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025915298610925674
    2. 'from' → logprob: -4.400915145874023
    3. 'import' → logprob: -5.275915145874023
    4. 'for' → logprob: -6.400915145874023
    5. 'def' → logprob: -6.525915145874023
    6. '=' → logprob: -6.525915145874023
    7. ' =' → logprob: -7.525915145874023
    8. '        
' → logprob: -7.650915145874023
    9. '
' → logprob: -7.775915145874023
    10. ',' → logprob: -8.025915145874023

Token 923: ' each' (ID: 2454)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1650607585906982
    2. 'each' → logprob: -1.6650607585906982
    3. '#' → logprob: -2.1650607585906982
    4. 'import' → logprob: -2.5400607585906982
    5. 'ways' → logprob: -2.5400607585906982
    6. 'component' → logprob: -3.2900607585906982
    7. 'the' → logprob: -3.2900607585906982
    8. 'nodes' → logprob: -3.7900607585906982
    9. ' ways' → logprob: -4.040060997009277
    10. ' each' → logprob: -4.165060997009277

Token 924: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.09116010367870331
    2. 'nodes' → logprob: -2.9661600589752197
    3. ' component' → logprob: -4.466160297393799
    4. 'sub' → logprob: -5.216160297393799
    5. 'connected' → logprob: -5.716160297393799
    6. 'comp' → logprob: -5.966160297393799
    7. 'for' → logprob: -6.091160297393799
    8. '(nodes' → logprob: -6.216160297393799
    9. 'def' → logprob: -6.716160297393799
    10. '
' → logprob: -6.966160297393799

Token 925: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012005775235593319
    2. 'from' → logprob: -5.137005805969238
    3. '        
' → logprob: -6.012005805969238
    4. 'import' → logprob: -6.262005805969238
    5. ' from' → logprob: -7.887005805969238
    6. 'for' → logprob: -8.137005805969238
    7. '
' → logprob: -8.262005805969238
    8. ',' → logprob: -8.262005805969238
    9. ' for' → logprob: -8.512005805969238
    10. '  
' → logprob: -9.512005805969238

Token 926: ' done' (ID: 4167)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9411294460296631
    2. '       ' → logprob: -1.066129446029663
    3. 'done' → logprob: -2.191129446029663
    4. ' done' → logprob: -3.066129446029663
    5. 'import' → logprob: -3.566129446029663
    6. 'from' → logprob: -4.191129684448242
    7. '#' → logprob: -4.941129684448242
    8. '1' → logprob: -4.941129684448242
    9. 'important' → logprob: -4.941129684448242
    10. 'not' → logprob: -5.316129684448242

Token 927: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058162204921245575
    2. ' by' → logprob: -3.933162212371826
    3. 'by' → logprob: -4.058162212371826
    4. 'using' → logprob: -4.433162212371826
    5. ' using' → logprob: -5.558162212371826
    6. '.' → logprob: -7.058162212371826
    7. ',' → logprob: -7.433162212371826
    8. '...' → logprob: -7.558162212371826
    9. 'with' → logprob: -7.808162212371826
    10. '#' → logprob: -8.308161735534668

Token 928: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1667832136154175
    2. 'for' → logprob: -1.2917832136154175
    3. 'if' → logprob: -1.5417832136154175
    4. ' for' → logprob: -2.416783332824707
    5. ' if' → logprob: -3.541783332824707
    6. 'by' → logprob: -4.166783332824707
    7. ' by' → logprob: -4.541783332824707
    8. 'using' → logprob: -4.791783332824707
    9. ' here' → logprob: -5.041783332824707
    10. ' in' → logprob: -5.166783332824707

Token 929: ' there' (ID: 1354)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.053335003554821014
    2. ' len' → logprob: -3.553334951400757
    3. 'edges' → logprob: -4.303335189819336
    4. ' edges' → logprob: -5.928335189819336
    5. '(len' → logprob: -6.428335189819336
    6. 'ways' → logprob: -6.553335189819336
    7. 'id' → logprob: -7.178335189819336
    8. ' ways' → logprob: -7.303335189819336
    9. 'True' → logprob: -7.553335189819336
    10. 'False' → logprob: -7.803335189819336

Token 930: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.146371841430664
    2. 'are' → logprob: -1.271371841430664
    3. ' are' → logprob: -1.521371841430664
    4. ' is' → logprob: -1.771371841430664
    5. 'visited' → logprob: -5.646371841430664
    6. '       ' → logprob: -5.771371841430664
    7. ''s' → logprob: -6.271371841430664
    8. 'len' → logprob: -6.646371841430664
    9. '           ' → logprob: -6.896371841430664
    10. '```' → logprob: -7.521371841430664

Token 931: ' a' (ID: 261)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.37699267268180847
    2. 'a' → logprob: -2.626992702484131
    3. 'at' → logprob: -2.626992702484131
    4. ' more' → logprob: -3.126992702484131
    5. ' at' → logprob: -3.251992702484131
    6. 'edges' → logprob: -4.126992702484131
    7. '```' → logprob: -4.376992702484131
    8. 'no' → logprob: -4.501992702484131
    9. '#' → logprob: -5.001992702484131
    10. 'not' → logprob: -5.126992702484131

Token 932: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.0783148854970932
    2. ' cycle' → logprob: -2.953314781188965
    3. 'loop' → logprob: -4.953314781188965
    4. 'possible' → logprob: -6.203314781188965
    5. '```' → logprob: -6.328314781188965
    6. 'node' → logprob: -6.578314781188965
    7. 'def' → logprob: -7.078314781188965
    8. 'edge' → logprob: -7.203314781188965
    9. '#' → logprob: -7.203314781188965
    10. 'complete' → logprob: -7.328314781188965

Token 933: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007447104435414076
    2. '           ' → logprob: -8.250744819641113
    3. 'for' → logprob: -9.250744819641113
    4. '        
' → logprob: -9.250744819641113
    5. ',' → logprob: -9.625744819641113
    6. ' for' → logprob: -10.000744819641113
    7. '<|end|>' → logprob: -10.250744819641113
    8. '```' → logprob: -10.250744819641113
    9. '.' → logprob: -10.875744819641113
    10. 'from' → logprob: -11.000744819641113

Token 934: 'non' (ID: 11741)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01705574057996273
    2. ' len' → logprob: -5.392055511474609
    3. 'nodes' → logprob: -5.642055511474609
    4. '#' → logprob: -5.892055511474609
    5. 'edges' → logprob: -6.017055511474609
    6. '       ' → logprob: -7.017055511474609
    7. 'not' → logprob: -7.392055511474609
    8. '```' → logprob: -7.642055511474609
    9. '(len' → logprob: -7.767055511474609
    10. '           ' → logprob: -8.51705551147461

Token 935: '-tree' (ID: 96067)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7962339520454407
    2. 'tree' → logprob: -0.9212339520454407
    3. 'tr' → logprob: -2.546233892440796
    4. '       ' → logprob: -3.546233892440796
    5. '   ' → logprob: -3.796233892440796
    6. '-tree' → logprob: -4.921234130859375
    7. '0' → logprob: -5.421234130859375
    8. '```' → logprob: -5.796234130859375
    9. '-tr' → logprob: -6.546234130859375
    10. ')' → logprob: -6.546234130859375

Token 936: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3174532949924469
    2. '       ' → logprob: -2.942453384399414
    3. ' edges' → logprob: -2.942453384399414
    4. '_edges' → logprob: -3.442453384399414
    5. '#' → logprob: -3.942453384399414
    6. ')
' → logprob: -3.942453384399414
    7. '```' → logprob: -4.442453384399414
    8. '):
' → logprob: -4.442453384399414
    9. 'edges' → logprob: -4.567453384399414
    10. ' edge' → logprob: -4.567453384399414

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015717566711828113
    2. '           ' → logprob: -7.1265716552734375
    3. ' for' → logprob: -8.001571655273438
    4. '
' → logprob: -9.251571655273438
    5. 'for' → logprob: -9.376571655273438
    6. '        
' → logprob: -9.501571655273438
    7. '<|end|>' → logprob: -9.876571655273438
    8. '```' → logprob: -9.876571655273438
    9. '   ' → logprob: -10.251571655273438
    10. 'from' → logprob: -12.126571655273438

Token 938: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03210758790373802
    2. 'for' → logprob: -3.9071075916290283
    3. ' for' → logprob: -5.157107353210449
    4. 'from' → logprob: -6.782107353210449
    5. '           ' → logprob: -6.907107353210449
    6. 'ways' → logprob: -7.157107353210449
    7. '        
' → logprob: -7.532107353210449
    8. 'count' → logprob: -7.657107353210449
    9. '   ' → logprob: -8.15710735321045
    10. '```' → logprob: -8.28210735321045

Token 939: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7953535914421082
    2. 'for' → logprob: -0.7953535914421082
    3. 'from' → logprob: -2.670353651046753
    4. ' for' → logprob: -4.795353412628174
    5. 'import' → logprob: -4.920353412628174
    6. 'if' → logprob: -6.420353412628174
    7. 'total' → logprob: -6.420353412628174
    8. 'count' → logprob: -6.545353412628174
    9. '   ' → logprob: -6.795353412628174
    10. 'def' → logprob: -6.920353412628174

Token 940: ' simplicity' (ID: 57516)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.6266922950744629
    2. 'node' → logprob: -1.251692295074463
    3. 'u' → logprob: -2.626692295074463
    4. 'comp' → logprob: -3.251692295074463
    5. 'each' → logprob: -3.626692295074463
    6. 'component' → logprob: -4.876692295074463
    7. 'c' → logprob: -5.001692295074463
    8. ' nodes' → logprob: -5.626692295074463
    9. ' comp' → logprob: -5.876692295074463
    10. 'all' → logprob: -5.876692295074463

Token 941: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02218572236597538
    2. ',' → logprob: -4.022185802459717
    3. '
' → logprob: -7.147185802459717
    4. '        
' → logprob: -7.272185802459717
    5. 'import' → logprob: -7.522185802459717
    6. ' continue' → logprob: -7.647185802459717
    7. '<|end|>' → logprob: -7.772185802459717
    8. 'continue' → logprob: -8.897185325622559
    9. '#' → logprob: -9.022185325622559
    10. '           ' → logprob: -9.272185325622559

Token 942: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6130516529083252
    2. 'from' → logprob: -1.3630516529083252
    3. 'import' → logprob: -2.113051652908325
    4. 'def' → logprob: -3.613051652908325
    5. '#' → logprob: -3.863051652908325
    6. '       ' → logprob: -3.863051652908325
    7. ' for' → logprob: -5.613051414489746
    8. '   ' → logprob: -6.113051414489746
    9. 'pass' → logprob: -6.238051414489746
    10. 'continue' → logprob: -6.613051414489746

Token 943: ' edges' (ID: 22569)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.28557032346725464
    2. 'edges' → logprob: -1.4105703830718994
    3. 'size' → logprob: -6.41057014465332
    4. 'id' → logprob: -6.78557014465332
    5. ' edges' → logprob: -7.53557014465332
    6. ' len' → logprob: -7.53557014465332
    7. '(len' → logprob: -8.16057014465332
    8. 'ways' → logprob: -9.78557014465332
    9. '(edges' → logprob: -9.91057014465332
    10. 'nodes' → logprob: -10.66057014465332

Token 944: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00263404194265604
    2. 'count' → logprob: -6.377634048461914
    3. '#' → logprob: -8.252634048461914
    4. '
' → logprob: -8.877634048461914
    5. 'with' → logprob: -8.877634048461914
    6. '   ' → logprob: -9.252634048461914
    7. 'in' → logprob: -10.377634048461914
    8. 'are' → logprob: -10.877634048461914
    9. '```' → logprob: -11.002634048461914
    10. ' in' → logprob: -11.127634048461914

Token 945: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.011786659248173237
    2. ' nodes' → logprob: -4.511786460876465
    3. '(nodes' → logprob: -8.136786460876465
    4. '=' → logprob: -8.261786460876465
    5. 'number' → logprob: -9.136786460876465
    6. '	nodes' → logprob: -10.136786460876465
    7. 'vertices' → logprob: -11.761786460876465
    8. ' number' → logprob: -12.011786460876465
    9. 'len' → logprob: -12.011786460876465
    10. '   ' → logprob: -12.511786460876465

Token 946: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14361371099948883
    2. '_nodes' → logprob: -3.518613815307617
    3. '_count' → logprob: -3.768613815307617
    4. '-' → logprob: -4.393613815307617
    5. ' and' → logprob: -4.518613815307617
    6. ' -' → logprob: -4.643613815307617
    7. 'and' → logprob: -4.643613815307617
    8. '==' → logprob: -4.643613815307617
    9. ',' → logprob: -5.393613815307617
    10. '   ' → logprob: -5.393613815307617

Token 947: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013853551354259253
    2. ' ' → logprob: -6.62638521194458
    3. 'edges' → logprob: -10.126385688781738
    4. ' edges' → logprob: -11.626385688781738
    5. 'vertices' → logprob: -12.001385688781738
    6. '   ' → logprob: -13.251385688781738
    7. 's' → logprob: -14.751385688781738
    8. '```' → logprob: -15.001385688781738
    9. 'spaces' → logprob: -15.876385688781738
    10. 'length' → logprob: -16.126384735107422

Token 948: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05304032564163208
    2. ':
' → logprob: -3.1780402660369873
    3. ',' → logprob: -4.928040504455566
    4. '+' → logprob: -7.303040504455566
    5. ' and' → logprob: -7.428040504455566
    6. ' continue' → logprob: -7.928040504455566
    7. 'and' → logprob: -8.303040504455566
    8. ' or' → logprob: -8.553040504455566
    9. ':return' → logprob: -8.928040504455566
    10. 'continue' → logprob: -9.053040504455566

Token 949: ' exactly' (ID: 9707)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.13369478285312653
    2. ' ways' → logprob: -2.133694887161255
    3. 'continue' → logprob: -6.008694648742676
    4. ' continue' → logprob: -6.258694648742676
    5. ' pass' → logprob: -7.508694648742676
    6. '1' → logprob: -7.758694648742676
    7. '   ' → logprob: -8.008694648742676
    8. 'pass' → logprob: -8.258694648742676
    9. '```' → logprob: -8.633694648742676
    10. ' no' → logprob: -9.008694648742676

Token 950: ' one' (ID: 1001)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.17760245501995087
    2. 'one' → logprob: -2.177602529525757
    3. '1' → logprob: -3.802602529525757
    4. ' edges' → logprob: -4.677602291107178
    5. ' one' → logprob: -4.927602291107178
    6. 'a' → logprob: -5.427602291107178
    7. 'nodes' → logprob: -5.677602291107178
    8. 'ways' → logprob: -6.927602291107178
    9. '(edges' → logprob: -7.677602291107178
    10. 'trees' → logprob: -8.177602767944336

Token 951: ' spanning' (ID: 66335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34503477811813354
    2. '           ' → logprob: -2.5950348377227783
    3. '   ' → logprob: -2.8450348377227783
    4. 'if' → logprob: -3.0950348377227783
    5. 'ways' → logprob: -3.0950348377227783
    6. ' if' → logprob: -3.7200348377227783
    7. ' ways' → logprob: -4.470034599304199
    8. ',' → logprob: -5.345034599304199
    9. 'for' → logprob: -5.470034599304199
    10. ' for' → logprob: -5.595034599304199

Token 952: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0015856742393225431
    2. ' tree' → logprob: -6.626585483551025
    3. '-tree' → logprob: -9.501585960388184
    4. 'trees' → logprob: -9.501585960388184
    5. '```' → logprob: -9.876585960388184
    6. '
' → logprob: -10.626585960388184
    7. '_tree' → logprob: -11.251585960388184
    8. '   ' → logprob: -11.376585960388184
    9. '	tree' → logprob: -12.876585960388184
    10. '       ' → logprob: -13.501585960388184

Token 953: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000836312014143914
    2. '
' → logprob: -8.125836372375488
    3. 'for' → logprob: -8.125836372375488
    4. '           ' → logprob: -9.375836372375488
    5. ' for' → logprob: -10.500836372375488
    6. '        
' → logprob: -10.500836372375488
    7. ',' → logprob: -10.625836372375488
    8. '   ' → logprob: -10.875836372375488
    9. '```' → logprob: -11.500836372375488
    10. 'if' → logprob: -11.875836372375488

Token 954: ' multiply' (ID: 57388)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5148444771766663
    2. '#' → logprob: -1.7648444175720215
    3. 'else' → logprob: -2.6398444175720215
    4. 'ways' → logprob: -2.8898444175720215
    5. 'if' → logprob: -3.0148444175720215
    6. 'for' → logprob: -3.7648444175720215
    7. 'elif' → logprob: -4.7648444175720215
    8. ' ways' → logprob: -4.8898444175720215
    9. '           ' → logprob: -5.3898444175720215
    10. ' if' → logprob: -5.8898444175720215

Token 955: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.5418823957443237
    2. ' ways' → logprob: -0.9168823957443237
    3. '       ' → logprob: -4.291882514953613
    4. 'if' → logprob: -6.666882514953613
    5. ' by' → logprob: -7.041882514953613
    6. ' if' → logprob: -7.291882514953613
    7. 'by' → logprob: -7.541882514953613
    8. '   ' → logprob: -7.666882514953613
    9. '```' → logprob: -8.166882514953613
    10. '           ' → logprob: -8.416882514953613

Token 956: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02166113257408142
    2. '
' → logprob: -4.271661281585693
    3. '           ' → logprob: -5.646661281585693
    4. 'else' → logprob: -6.771661281585693
    5. '        
' → logprob: -7.021661281585693
    6. '```' → logprob: -7.271661281585693
    7. 'for' → logprob: -8.646660804748535
    8. ' else' → logprob: -8.896660804748535
    9. '<|end|>' → logprob: -8.896660804748535
    10. ' for' → logprob: -8.896660804748535

Token 957: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -11.000021934509277
    3. '```' → logprob: -12.625021934509277
    4. '   ' → logprob: -13.875021934509277
    5. '`' → logprob: -15.125021934509277
    6. 'ways' → logprob: -15.375021934509277
    7. '
' → logprob: -15.875021934509277
    8. '       ' → logprob: -17.50002098083496
    9. '0' → logprob: -17.75002098083496
    10. 'edges' → logprob: -17.93752098083496

Token 958: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -15.37500286102295
    4. '   ' → logprob: -17.125003814697266
    5. '
' → logprob: -17.500003814697266
    6. '0' → logprob: -17.625003814697266
    7. 'ways' → logprob: -18.000003814697266
    8. '`' → logprob: -18.125003814697266
    9. '2' → logprob: -18.875003814697266
    10. '۱' → logprob: -18.937503814697266

Token 959: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011358122574165463
    2. '
' → logprob: -7.87613582611084
    3. '           ' → logprob: -8.50113582611084
    4. 'else' → logprob: -8.75113582611084
    5. '```' → logprob: -9.37613582611084
    6. '        
' → logprob: -9.50113582611084
    7. ' else' → logprob: -9.62613582611084
    8. '<|end|>' → logprob: -10.12613582611084
    9. ' for' → logprob: -10.37613582611084
    10. ',' → logprob: -10.75113582611084

Token 960: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001129021286033094
    2. 'else' → logprob: -7.751129150390625
    3. ' else' → logprob: -8.501129150390625
    4. '           ' → logprob: -8.626129150390625
    5. '```' → logprob: -8.751129150390625
    6. '<|end|>' → logprob: -10.376129150390625
    7. 'elif' → logprob: -10.501129150390625
    8. '        
' → logprob: -10.626129150390625
    9. ',' → logprob: -10.876129150390625
    10. '   ' → logprob: -11.376129150390625

Token 961: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003083832561969757
    2. 'for' → logprob: -7.2530837059021
    3. 'else' → logprob: -7.5030837059021
    4. '           ' → logprob: -7.6280837059021
    5. ' for' → logprob: -8.128084182739258
    6. 'from' → logprob: -8.253084182739258
    7. '        
' → logprob: -8.878084182739258
    8. ' else' → logprob: -9.003084182739258
    9. 'import' → logprob: -9.003084182739258
    10. '   ' → logprob: -9.628084182739258

Token 962: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02077591046690941
    2. 'else' → logprob: -4.64577579498291
    3. 'for' → logprob: -6.02077579498291
    4. 'from' → logprob: -6.14577579498291
    5. 'elif' → logprob: -6.52077579498291
    6. '           ' → logprob: -6.64577579498291
    7. ' for' → logprob: -7.39577579498291
    8. ' else' → logprob: -7.52077579498291
    9. '
' → logprob: -7.64577579498291
    10. 'import' → logprob: -7.64577579498291

Token 963: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.34860959649086
    2. 'edges' → logprob: -1.2236095666885376
    3. '(edges' → logprob: -9.598609924316406
    4. '   ' → logprob: -10.098609924316406
    5. 'len' → logprob: -10.973609924316406
    6. ' ' → logprob: -11.973609924316406
    7. ' len' → logprob: -11.973609924316406
    8. 'edge' → logprob: -12.223609924316406
    9. '       ' → logprob: -12.223609924316406
    10. ' edge' → logprob: -12.598609924316406

Token 964: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06208835542201996
    2. '>' → logprob: -2.8120882511138916
    3. '   ' → logprob: -10.312088012695312
    4. ' >=' → logprob: -10.437088012695312
    5. ' ' → logprob: -10.562088012695312
    6. ' !=' → logprob: -11.437088012695312
    7. ' <' → logprob: -11.937088012695312
    8. '>=' → logprob: -12.812088012695312
    9. ' ==' → logprob: -13.187088012695312
    10. ' >
' → logprob: -13.187088012695312

Token 965: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.16055169701576233
    2. 'nodes' → logprob: -1.91055166721344
    3. ' len' → logprob: -9.035552024841309
    4. 'len' → logprob: -9.160552024841309
    5. ' edges' → logprob: -9.910552024841309
    6. '=' → logprob: -10.660552024841309
    7. '	nodes' → logprob: -11.410552024841309
    8. 'edges' → logprob: -11.660552024841309
    9. '(nodes' → logprob: -12.160552024841309
    10. ' ' → logprob: -13.785552024841309

Token 966: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11444008350372314
    2. '-' → logprob: -2.2394399642944336
    3. ':' → logprob: -6.989439964294434
    4. '   ' → logprob: -8.489439964294434
    5. '       ' → logprob: -9.489439964294434
    6. ' >' → logprob: -9.614439964294434
    7. ',' → logprob: -9.739439964294434
    8. '>' → logprob: -9.739439964294434
    9. '           ' → logprob: -9.739439964294434
    10. ' ' → logprob: -10.364439964294434

Token 967: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.125006675720215
    3. 'nodes' → logprob: -14.000006675720215
    4. 'edges' → logprob: -15.875006675720215
    5. '   ' → logprob: -17.6250057220459
    6. ' nodes' → logprob: -17.7500057220459
    7. 'vertices' → logprob: -18.3750057220459
    8. '(nodes' → logprob: -18.6250057220459
    9. '	nodes' → logprob: -18.7500057220459
    10. ' edges' → logprob: -18.7500057220459

Token 968: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033700454980134964
    2. ':
' → logprob: -3.533700466156006
    3. ',' → logprob: -6.283700466156006
    4. '       ' → logprob: -6.658700466156006
    5. '           ' → logprob: -7.283700466156006
    6. ' and' → logprob: -9.658699989318848
    7. '   ' → logprob: -11.283699989318848
    8. ':

' → logprob: -12.033699989318848
    9. ' :' → logprob: -12.783699989318848
    10. '```' → logprob: -12.783699989318848

Token 969: ' multiple' (ID: 7598)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7060741782188416
    2. 'ways' → logprob: -1.4560742378234863
    3. ' ways' → logprob: -2.4560742378234863
    4. 'from' → logprob: -2.5810742378234863
    5. 'import' → logprob: -3.2060742378234863
    6. ' #' → logprob: -3.7060742378234863
    7. ' from' → logprob: -4.706074237823486
    8. '       ' → logprob: -5.206074237823486
    9. '   ' → logprob: -5.456074237823486
    10. '
' → logprob: -5.456074237823486

Token 970: ' spanning' (ID: 66335)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.10388139635324478
    2. ' ways' → logprob: -2.603881359100342
    3. 'sp' → logprob: -4.478881359100342
    4. ' spanning' → logprob: -4.728881359100342
    5. 'from' → logprob: -6.728881359100342
    6. 'import' → logprob: -7.478881359100342
    7. 'trees' → logprob: -7.478881359100342
    8. 'edges' → logprob: -7.603881359100342
    9. 'times' → logprob: -8.3538818359375
    10. '       ' → logprob: -8.6038818359375

Token 971: ' trees' (ID: 16979)
  Prédit: 'trees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trees' → logprob: -0.0012370144249871373
    2. ' trees' → logprob: -6.751236915588379
    3. 'tree' → logprob: -10.251236915588379
    4. '   ' → logprob: -11.751236915588379
    5. '```' → logprob: -11.876236915588379
    6. 'ways' → logprob: -12.001236915588379
    7. '
' → logprob: -12.876236915588379
    8. 't' → logprob: -13.001236915588379
    9. 'edges' → logprob: -13.501236915588379
    10. ' ' → logprob: -14.501236915588379

Token 972: ' exist' (ID: 4310)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005337524227797985
    2. '           ' → logprob: -5.505337715148926
    3. ',' → logprob: -7.130337715148926
    4. '        
' → logprob: -8.505337715148926
    5. '
' → logprob: -9.005337715148926
    6. '<|end|>' → logprob: -10.630337715148926
    7. ':' → logprob: -10.880337715148926
    8. '               ' → logprob: -11.630337715148926
    9. 'for' → logprob: -11.755337715148926
    10. ' for' → logprob: -11.880337715148926

Token 973: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001751699368469417
    2. '           ' → logprob: -6.626751899719238
    3. ',' → logprob: -8.626751899719238
    4. '        
' → logprob: -9.126751899719238
    5. '
' → logprob: -9.876751899719238
    6. '<|end|>' → logprob: -10.001751899719238
    7. '   ' → logprob: -11.501751899719238
    8. ' for' → logprob: -12.376751899719238
    9. 'for' → logprob: -12.751751899719238
    10. 'from' → logprob: -12.876751899719238

Token 974: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7516561150550842
    2. 'ways' → logprob: -1.6266560554504395
    3. '#' → logprob: -2.0016560554504395
    4. 'import' → logprob: -2.6266560554504395
    5. ' ways' → logprob: -2.7516560554504395
    6. 'from' → logprob: -3.1266560554504395
    7. '   ' → logprob: -5.5016560554504395
    8. ' #' → logprob: -5.6266560554504395
    9. ' from' → logprob: -6.6266560554504395
    10. '           ' → logprob: -6.6266560554504395

Token 975: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37462711334228516
    2. '   ' → logprob: -2.624627113342285
    3. 'import' → logprob: -2.624627113342285
    4. ' ways' → logprob: -3.624627113342285
    5. '=' → logprob: -3.999627113342285
    6. ' =' → logprob: -4.374627113342285
    7. '           ' → logprob: -4.374627113342285
    8. ' +=' → logprob: -4.499627113342285
    9. '_factor' → logprob: -4.499627113342285
    10. 'from' → logprob: -4.749627113342285

Token 976: ' number' (ID: 2086)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.2987743318080902
    2. 'from' → logprob: -2.673774242401123
    3. ' ways' → logprob: -2.798774242401123
    4. '#' → logprob: -3.173774242401123
    5. 'import' → logprob: -3.173774242401123
    6. 'n' → logprob: -5.423774242401123
    7. 'nodes' → logprob: -5.548774242401123
    8. '1' → logprob: -5.673774242401123
    9. 'number' → logprob: -5.923774242401123
    10. 'size' → logprob: -6.048774242401123

Token 977: ' by' (ID: 656)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.21683454513549805
    2. 'import' → logprob: -2.591834545135498
    3. ' of' → logprob: -3.216834545135498
    4. '_of' → logprob: -3.591834545135498
    5. 'from' → logprob: -3.966834545135498
    6. '       ' → logprob: -4.341834545135498
    7. '           ' → logprob: -5.466834545135498
    8. '=' → logprob: -5.966834545135498
    9. ' =' → logprob: -6.216834545135498
    10. '   ' → logprob: -6.591834545135498

Token 978: ' Cay' (ID: 72008)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.5616755485534668
    2. 'calcul' → logprob: -1.9366755485534668
    3. '1' → logprob: -2.186675548553467
    4. 'import' → logprob: -2.311675548553467
    5. 'pow' → logprob: -2.811675548553467
    6. 'def' → logprob: -2.936675548553467
    7. 'fact' → logprob: -3.061675548553467
    8. '...' → logprob: -3.311675548553467
    9. 'count' → logprob: -3.436675548553467
    10. 'ways' → logprob: -3.686675548553467

Token 979: 'ley' (ID: 4356)
  Prédit: 'ley'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ley' → logprob: -0.0001307142956648022
    2. 'ley's' → logprob: -9.250130653381348
    3. '```' → logprob: -11.125130653381348
    4. 'le' → logprob: -11.875130653381348
    5. 'lay' → logprob: -12.500130653381348
    6. 'leigh' → logprob: -12.500130653381348
    7. 'leys' → logprob: -12.750130653381348
    8. 'LEY' → logprob: -14.125130653381348
    9. '_' → logprob: -15.375130653381348
    10. 'ler' → logprob: -15.750130653381348

Token 980: ' formula' (ID: 20690)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0861873626708984
    2. ''s' → logprob: -1.8361873626708984
    3. '_matrix' → logprob: -1.9611873626708984
    4. 'def' → logprob: -2.4611873626708984
    5. ''' → logprob: -3.3361873626708984
    6. '`' → logprob: -3.4611873626708984
    7. '(n' → logprob: -3.7111873626708984
    8. 'from' → logprob: -3.7111873626708984
    9. '_count' → logprob: -4.211187362670898
    10. 'Matrix' → logprob: -4.461187362670898

Token 981: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002817954868078232
    2. '           ' → logprob: -6.3778181076049805
    3. '        
' → logprob: -7.5028181076049805
    4. '<|end|>' → logprob: -8.50281810760498
    5. ',' → logprob: -9.25281810760498
    6. '
' → logprob: -10.25281810760498
    7. 'import' → logprob: -10.37781810760498
    8. ' for' → logprob: -10.37781810760498
    9. 'for' → logprob: -11.12781810760498
    10. '        ' → logprob: -11.12781810760498

Token 982: ' Kirch' (ID: 178242)
  Prédit: 'Kir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kir' → logprob: -1.0244892835617065
    2. 'matrix' → logprob: -1.3994892835617065
    3. '#' → logprob: -1.7744892835617065
    4. ' Kirch' → logprob: -2.149489402770996
    5. 'using' → logprob: -3.524489402770996
    6. 'com' → logprob: -4.149489402770996
    7. 'other' → logprob: -4.274489402770996
    8. 'Matrix' → logprob: -4.524489402770996
    9. 'det' → logprob: -5.399489402770996
    10. 'complex' → logprob: -5.399489402770996

Token 983: 'hoff' (ID: 123716)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.17130646109580994
    2. 'hoff' → logprob: -1.9213064908981323
    3. '```' → logprob: -5.546306610107422
    4. 'hle' → logprob: -7.296306610107422
    5. 'off' → logprob: -7.296306610107422
    6. 'ho' → logprob: -7.671306610107422
    7. 'hman' → logprob: -7.796306610107422
    8. 'ch' → logprob: -7.796306610107422
    9. 'hof' → logprob: -7.921306610107422
    10. 'hal' → logprob: -8.171306610107422

Token 984: ' theorem' (ID: 177750)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.1753205507993698
    2. 'matrix' → logprob: -2.175320625305176
    3. 'Matrix' → logprob: -4.050320625305176
    4. '_' → logprob: -4.425320625305176
    5. ' matrix' → logprob: -5.300320625305176
    6. '=' → logprob: -6.175320625305176
    7. ''s' → logprob: -6.675320625305176
    8. 'if' → logprob: -7.050320625305176
    9. '_mat' → logprob: -7.300320625305176
    10. '_count' → logprob: -7.300320625305176

Token 985: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00834742747247219
    2. '           ' → logprob: -6.008347511291504
    3. '        
' → logprob: -6.633347511291504
    4. ',' → logprob: -6.758347511291504
    5. 'import' → logprob: -7.008347511291504
    6. '
' → logprob: -7.508347511291504
    7. 'from' → logprob: -7.883347511291504
    8. '#' → logprob: -7.883347511291504
    9. ' for' → logprob: -8.508347511291504
    10. 'for' → logprob: -9.258347511291504

Token 986: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003985435236245394
    2. '        
' → logprob: -6.253985404968262
    3. '           ' → logprob: -7.253985404968262
    4. '<|end|>' → logprob: -7.753985404968262
    5. 'import' → logprob: -8.378985404968262
    6. ',' → logprob: -8.753985404968262
    7. 'from' → logprob: -9.003985404968262
    8. '
' → logprob: -9.128985404968262
    9. ' from' → logprob: -9.628985404968262
    10. '        

' → logprob: -10.253985404968262

Token 987: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1294325441122055
    2. 'from' → logprob: -2.754432439804077
    3. 'import' → logprob: -3.879432439804077
    4. 'for' → logprob: -4.004432678222656
    5. ' from' → logprob: -4.629432678222656
    6. ' for' → logprob: -5.254432678222656
    7. 'def' → logprob: -7.629432678222656
    8. '#' (adapté à ' #') → logprob: -7.879432678222656
    9. '   ' → logprob: -7.879432678222656
    10. '           ' → logprob: -7.879432678222656

Token 988: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2485969215631485
    2. 'for' → logprob: -2.2485969066619873
    3. 'from' → logprob: -2.4985969066619873
    4. ' for' → logprob: -4.498597145080566
    5. 'import' → logprob: -4.748597145080566
    6. '#' → logprob: -5.498597145080566
    7. ' from' → logprob: -5.498597145080566
    8. '   ' → logprob: -7.498597145080566
    9. 'components' → logprob: -7.498597145080566
    10. '           ' → logprob: -7.748597145080566

Token 989: ' this' (ID: 495)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -1.3253649473190308
    2. 'simp' → logprob: -1.5753649473190308
    3. 'each' → logprob: -1.9503649473190308
    4. 'u' → logprob: -2.3253650665283203
    5. 'this' → logprob: -2.4503650665283203
    6. 'count' → logprob: -2.8253650665283203
    7. 'the' → logprob: -3.5753650665283203
    8. 'component' → logprob: -4.20036506652832
    9. 'connected' → logprob: -4.20036506652832
    10. 'all' → logprob: -4.32536506652832

Token 990: ' beginner' (ID: 57062)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.6154863238334656
    2. 'part' → logprob: -1.4904863834381104
    3. 'code' → logprob: -2.4904863834381104
    4. 'purpose' → logprob: -2.8654863834381104
    5. ',' → logprob: -3.4904863834381104
    6. 'we' → logprob: -4.240486145019531
    7. 'reason' → logprob: -4.365486145019531
    8. 'case' → logprob: -5.115486145019531
    9. '#' → logprob: -5.240486145019531
    10. 'count' → logprob: -5.490486145019531

Token 991: ' solution' (ID: 7578)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9254013299942017
    2. 's' → logprob: -2.050401210784912
    3. 'def' → logprob: -2.050401210784912
    4. 'level' → logprob: -2.175401210784912
    5. '<|end|>' → logprob: -2.175401210784912
    6. '-level' → logprob: -2.300401210784912
    7. ':' → logprob: -2.675401210784912
    8. ''s' → logprob: -2.800401210784912
    9. 'code' → logprob: -3.300401210784912
    10. ' code' → logprob: -3.800401210784912

Token 992: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008313140831887722
    2. ':' → logprob: -5.508313179016113
    3. ',' → logprob: -6.258313179016113
    4. '           ' → logprob: -7.008313179016113
    5. ':
' → logprob: -7.133313179016113
    6. ' for' → logprob: -8.883313179016113
    7. '        
' → logprob: -8.883313179016113
    8. 'for' → logprob: -9.758313179016113
    9. 'import' → logprob: -10.133313179016113
    10. '
' → logprob: -10.508313179016113

Token 993: ' since' (ID: 3630)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.27067047357559204
    2. ' ways' → logprob: -2.3956704139709473
    3. '       ' → logprob: -3.0206704139709473
    4. '#' → logprob: -3.6456704139709473
    5. 'for' → logprob: -3.8956704139709473
    6. 'pass' → logprob: -4.145670413970947
    7. 'import' → logprob: -4.645670413970947
    8. '   ' → logprob: -4.770670413970947
    9. ' pass' → logprob: -5.020670413970947
    10. 'from' → logprob: -5.520670413970947

Token 994: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7780987620353699
    2. 'comp' → logprob: -1.2780988216400146
    3. 'all' → logprob: -2.5280988216400146
    4. 'graph' → logprob: -3.9030988216400146
    5. 'len' → logprob: -4.0280985832214355
    6. 'nodes' → logprob: -4.2780985832214355
    7. 'edges' → logprob: -4.2780985832214355
    8. ' the' → logprob: -4.4030985832214355
    9. 'we' → logprob: -4.4030985832214355
    10. 'n' → logprob: -4.5280985832214355

Token 995: ' constraints' (ID: 31060)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.6015022993087769
    2. ' constraints' → logprob: -2.1015024185180664
    3. 'is' → logprob: -2.2265024185180664
    4. 'constraints' → logprob: -2.3515024185180664
    5. 'statement' → logprob: -2.6015024185180664
    6. ' statement' → logprob: -2.9765024185180664
    7. 'context' → logprob: -2.9765024185180664
    8. 'description' → logprob: -3.1015024185180664
    9. '#' → logprob: -3.3515024185180664
    10. 'does' → logprob: -3.3515024185180664

Token 996: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5315129160881042
    2. ':' → logprob: -1.406512975692749
    3. 'continue' → logprob: -3.031512975692749
    4. '#' → logprob: -3.656512975692749
    5. '==' → logprob: -3.656512975692749
    6. '           ' → logprob: -4.15651273727417
    7. '   ' → logprob: -4.40651273727417
    8. ' continue' → logprob: -4.65651273727417
    9. ' ==' → logprob: -5.40651273727417
    10. ' are' → logprob: -5.40651273727417

Token 997: ' input' (ID: 3422)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4729145765304565
    2. 'input' → logprob: -1.5979145765304565
    3. 'the' → logprob: -2.472914695739746
    4. 'problem' → logprob: -2.472914695739746
    5. ' complexity' → logprob: -2.597914695739746
    6. 'complex' → logprob: -2.597914695739746
    7. 'code' → logprob: -2.847914695739746
    8. 'graph' → logprob: -3.097914695739746
    9. 'import' → logprob: -4.097914695739746
    10. 'time' → logprob: -4.472914695739746

Token 998: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4311096668243408
    2. ' are' → logprob: -1.8061096668243408
    3. '       ' → logprob: -1.9311096668243408
    4. 'size' → logprob: -2.056109666824341
    5. 'are' → logprob: -3.431109666824341
    6. 'import' → logprob: -3.681109666824341
    7. 'continue' → logprob: -3.681109666824341
    8. ',' → logprob: -3.681109666824341
    9. ':' → logprob: -3.806109666824341
    10. ' size' → logprob: -3.931109666824341

Token 999: ' big' (ID: 3464)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.18307873606681824
    2. 'not' → logprob: -2.0580787658691406
    3. 'simple' → logprob: -3.8080787658691406
    4. 'complex' → logprob: -4.933078765869141
    5. 'limited' → logprob: -5.058078765869141
    6. 'unknown' → logprob: -6.433078765869141
    7. ' not' → logprob: -7.558078765869141
    8. 'likely' → logprob: -8.18307876586914
    9. '#' → logprob: -8.30807876586914
    10. 'simpl' → logprob: -8.55807876586914

Token 1000: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6417331695556641
    2. ',' → logprob: -0.7667331695556641
    3. '           ' → logprob: -5.766733169555664
    4. 'continue' → logprob: -5.891733169555664
    5. '#' → logprob: -6.516733169555664
    6. ' continue' → logprob: -7.516733169555664
    7. ',
' → logprob: -8.391733169555664
    8. '```' → logprob: -8.641733169555664
    9. '   ' → logprob: -8.891733169555664
    10. ':' → logprob: -9.391733169555664

Token 1001: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5815641283988953
    2. '       ' → logprob: -0.9565641283988953
    3. 'ways' → logprob: -3.20656418800354
    4. 'continue' → logprob: -5.081563949584961
    5. '           ' → logprob: -5.456563949584961
    6. 'import' → logprob: -6.331563949584961
    7. ' ways' → logprob: -6.331563949584961
    8. '   ' → logprob: -7.456563949584961
    9. 'pass' → logprob: -7.956563949584961
    10. ' continue' → logprob: -8.081563949584961

Token 1002: ' approximate' (ID: 68753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.329473614692688
    2. 'continue' → logprob: -1.454473614692688
    3. ' continue' → logprob: -4.079473495483398
    4. '#' → logprob: -4.454473495483398
    5. 'import' → logprob: -4.579473495483398
    6. '           ' → logprob: -5.204473495483398
    7. '   ' → logprob: -6.204473495483398
    8. '```' → logprob: -8.704473495483398
    9. ' #' → logprob: -9.204473495483398
    10. '
' → logprob: -9.579473495483398

Token 1003: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07626010477542877
    2. 'for' → logprob: -2.9512600898742676
    3. ' for' → logprob: -4.076260089874268
    4. '           ' → logprob: -6.326260089874268
    5. '   ' → logprob: -6.701260089874268
    6. '```' → logprob: -7.701260089874268
    7. '        
' → logprob: -9.076260566711426
    8. '#' → logprob: -9.451260566711426
    9. ':' → logprob: -9.701260566711426
    10. ',' → logprob: -9.826260566711426

Token 1004: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008559612557291985
    2. '           ' → logprob: -5.008559703826904
    3. ' for' → logprob: -6.883559703826904
    4. 'for' → logprob: -7.383559703826904
    5. '               ' → logprob: -9.758559226989746
    6. '        
' → logprob: -10.383559226989746
    7. '   ' → logprob: -10.508559226989746
    8. 'continue' → logprob: -10.758559226989746
    9. ' continue' → logprob: -10.883559226989746
    10. '```' → logprob: -11.508559226989746

Token 1005: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7481738328933716
    2. '       ' → logprob: -0.9981738328933716
    3. 'ways' → logprob: -2.248173713684082
    4. ' for' → logprob: -3.748173713684082
    5. '#' (adapté à ' #') → logprob: -4.498173713684082
    6. ' ways' → logprob: -4.498173713684082
    7. 'if' → logprob: -5.748173713684082
    8. '           ' → logprob: -6.873173713684082
    9. '   ' → logprob: -7.498173713684082
    10. 'from' → logprob: -8.123173713684082

Token 1006: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41738858819007874
    2. '       ' → logprob: -1.9173885583877563
    3. '#' → logprob: -2.292388677597046
    4. 'ways' → logprob: -3.042388677597046
    5. ' for' → logprob: -3.542388677597046
    6. ' ways' → logprob: -4.667388439178467
    7. 'from' → logprob: -6.792388439178467
    8. 'if' → logprob: -7.042388439178467
    9. ' #' → logprob: -7.042388439178467
    10. 'pass' → logprob: -7.417388439178467

Token 1007: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.08921175450086594
    2. ' edges' → logprob: -2.4642117023468018
    3. 'len' → logprob: -8.714211463928223
    4. '(edges' → logprob: -10.089211463928223
    5. 'nodes' → logprob: -10.464211463928223
    6. '   ' → logprob: -11.214211463928223
    7. ' len' → logprob: -11.839211463928223
    8. '       ' → logprob: -12.089211463928223
    9. ' nodes' → logprob: -12.714211463928223
    10. 'edge' → logprob: -13.089211463928223

Token 1008: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09217197448015213
    2. '>' → logprob: -2.5921719074249268
    3. ' <' → logprob: -4.717172145843506
    4. ' ==' → logprob: -5.842172145843506
    5. '==' → logprob: -7.217172145843506
    6. ' !=' → logprob: -8.842171669006348
    7. ' <=' → logprob: -9.217171669006348
    8. '<' → logprob: -9.467171669006348
    9. '   ' → logprob: -9.467171669006348
    10. ' ' → logprob: -9.967171669006348

Token 1009: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.1242883950471878
    2. ' nodes' → logprob: -2.249288320541382
    3. 'len' → logprob: -4.624288558959961
    4. ' len' → logprob: -6.874288558959961
    5. 'edges' → logprob: -8.374288558959961
    6. ' edges' → logprob: -8.749288558959961
    7. '(nodes' → logprob: -9.499288558959961
    8. '	nodes' → logprob: -9.624288558959961
    9. '   ' → logprob: -11.374288558959961
    10. '=len' → logprob: -12.999288558959961

Token 1010: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20393826067447662
    2. '-' → logprob: -1.7039382457733154
    3. 's' → logprob: -7.0789384841918945
    4. '       ' → logprob: -7.2039384841918945
    5. '   ' → logprob: -8.078938484191895
    6. ' ' → logprob: -8.203938484191895
    7. '_count' → logprob: -9.203938484191895
    8. ')' → logprob: -9.703938484191895
    9. '           ' → logprob: -9.703938484191895
    10. '[' → logprob: -10.828938484191895

Token 1011: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.875001907348633
    5. 'count' → logprob: -16.375001907348633
    6. '
' → logprob: -16.750001907348633
    7. '       ' → logprob: -18.250001907348633
    8. '=' → logprob: -18.500001907348633
    9. '<|end|>' → logprob: -19.125001907348633
    10. '[' → logprob: -19.250001907348633

Token 1012: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26569899916648865
    2. ':
' → logprob: -1.515699028968811
    3. '           ' → logprob: -4.7656989097595215
    4. '       ' → logprob: -5.5156989097595215
    5. ' and' → logprob: -7.6406989097595215
    6. ',' → logprob: -8.01569938659668
    7. ' or' → logprob: -8.64069938659668
    8. 'and' → logprob: -10.51569938659668
    9. '):
' → logprob: -11.26569938659668
    10. '):' → logprob: -11.26569938659668

Token 1013: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.05144715681672096
    2. 'continue' → logprob: -3.3014471530914307
    3. 'pass' → logprob: -4.92644739151001
    4. ' ways' → logprob: -6.30144739151001
    5. '1' → logprob: -6.67644739151001
    6. '       ' → logprob: -7.17644739151001
    7. 'for' → logprob: -7.42644739151001
    8. '           ' → logprob: -7.80144739151001
    9. ' continue' → logprob: -7.80144739151001
    10. '   ' → logprob: -7.80144739151001

Token 1014: '*=' (ID: 93955)
  Prédit: '*='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.11493487656116486
    2. ' *=' → logprob: -2.2399349212646484
    3. '=' → logprob: -6.864934921264648
    4. '*' → logprob: -7.114934921264648
    5. '   ' → logprob: -9.614934921264648
    6. '```' → logprob: -9.864934921264648
    7. '       ' → logprob: -10.114934921264648
    8. ',' → logprob: -10.364934921264648
    9. ' =' → logprob: -10.989934921264648
    10. '           ' → logprob: -11.114934921264648

Token 1015: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.875004768371582
    3. 'ways' → logprob: -14.000004768371582
    4. '```' → logprob: -14.250004768371582
    5. '   ' → logprob: -15.250004768371582
    6. '(' → logprob: -15.625004768371582
    7. 'pow' → logprob: -16.1250057220459
    8. '
' → logprob: -16.8750057220459
    9. '2' → logprob: -17.1250057220459
    10. '`' → logprob: -17.7500057220459

Token 1016: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006219217088073492
    2. 'else' → logprob: -5.506219387054443
    3. '           ' → logprob: -7.506219387054443
    4. ' else' → logprob: -7.631219387054443
    5. '        
' → logprob: -7.756219387054443
    6. '
' → logprob: -8.256218910217285
    7. 'elif' → logprob: -9.256218910217285
    8. 'for' → logprob: -9.506218910217285
    9. ',' → logprob: -9.881218910217285
    10. ' for' → logprob: -10.506218910217285

Token 1017: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019788339268416166
    2. 'elif' → logprob: -6.876978874206543
    3. 'else' → logprob: -7.376978874206543
    4. '           ' → logprob: -8.751978874206543
    5. '```' → logprob: -9.876978874206543
    6. '#' → logprob: -10.001978874206543
    7. 'if' → logprob: -10.626978874206543
    8. '   ' → logprob: -11.376978874206543
    9. ' else' → logprob: -11.501978874206543
    10. ' elif' → logprob: -11.751978874206543

Token 1018: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00697549432516098
    2. 'else' → logprob: -5.6319756507873535
    3. 'elif' → logprob: -6.1319756507873535
    4. '#' (adapté à ' #') → logprob: -7.8819756507873535
    5. 'for' → logprob: -8.506975173950195
    6. '           ' → logprob: -8.506975173950195
    7. ' else' → logprob: -8.756975173950195
    8. 'if' → logprob: -9.631975173950195
    9. '```' → logprob: -9.881975173950195
    10. ' for' → logprob: -10.256975173950195

Token 1019: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011791134253144264
    2. 'elif' → logprob: -5.261791229248047
    3. 'else' → logprob: -5.761791229248047
    4. '#' → logprob: -6.386791229248047
    5. 'if' → logprob: -6.511791229248047
    6. 'for' → logprob: -9.761791229248047
    7. ' if' → logprob: -10.136791229248047
    8. '           ' → logprob: -10.386791229248047
    9. ' elif' → logprob: -10.386791229248047
    10. '```' → logprob: -10.761791229248047

Token 1020: ' ways' (ID: 6984)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36277759075164795
    2. ':' → logprob: -2.1127777099609375
    3. '       ' → logprob: -2.3627777099609375
    4. ':
' → logprob: -2.7377777099609375
    5. 'ways' → logprob: -4.3627777099609375
    6. ' ways' → logprob: -4.7377777099609375
    7. ' if' → logprob: -6.8627777099609375
    8. '   ' → logprob: -7.8627777099609375
    9. 'if' → logprob: -8.112777709960938
    10. '               ' → logprob: -8.487777709960938

Token 1021: '*=' (ID: 93955)
  Prédit: '*='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.04408590868115425
    2. ' *=' → logprob: -3.29408597946167
    3. '=' → logprob: -5.79408597946167
    4. '```' → logprob: -6.04408597946167
    5. '*' → logprob: -8.044085502624512
    6. '   ' → logprob: -9.044085502624512
    7. ' =' → logprob: -9.669085502624512
    8. '``' → logprob: -10.669085502624512
    9. '`' → logprob: -11.294085502624512
    10. '**' → logprob: -11.419085502624512

Token 1022: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03091415762901306
    2. 'edges' → logprob: -4.280914306640625
    3. '(' → logprob: -4.530914306640625
    4. 'pow' → logprob: -6.030914306640625
    5. '0' → logprob: -6.405914306640625
    6. '(edges' → logprob: -7.405914306640625
    7. '(pow' → logprob: -8.405914306640625
    8. 'cost' → logprob: -8.780914306640625
    9. 'ways' → logprob: -9.030914306640625
    10. '(M' → logprob: -9.280914306640625

Token 1023: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030365189537405968
    2. '
' → logprob: -3.655365228652954
    3. '           ' → logprob: -5.905364990234375
    4. '
' → logprob: -8.155364990234375
    5. '        
' → logprob: -8.155364990234375
    6. '   ' → logprob: -8.405364990234375
    7. '<|end|>' → logprob: -9.280364990234375
    8. '               ' → logprob: -9.280364990234375
    9. ' for' → logprob: -9.530364990234375
    10. ',' → logprob: -10.030364990234375

Token 1024: 'just' (ID: 5283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021181427873671055
    2. ')
' → logprob: -7.002118110656738
    3. '       ' → logprob: -7.127118110656738
    4. ' )' → logprob: -8.377118110656738
    5. '*' → logprob: -9.877118110656738
    6. '**' → logprob: -10.752118110656738
    7. '\n' → logprob: -10.877118110656738
    8. '```' → logprob: -10.877118110656738
    9. '           ' → logprob: -11.127118110656738
    10. '
' → logprob: -11.252118110656738

Token 1025: ' a' (ID: 261)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -1.267177939414978
    2. 'ways' → logprob: -1.392177939414978
    3. ' assume' → logprob: -1.892177939414978
    4. ' assuming' → logprob: -2.1421780586242676
    5. 'assuming' → logprob: -3.1421780586242676
    6. '```' → logprob: -3.3921780586242676
    7. 'ass' → logprob: -3.7671780586242676
    8. ' multiply' → logprob: -3.7671780586242676
    9. 'multiply' → logprob: -4.267178058624268
    10. ')' → logprob: -4.392178058624268

Token 1026: ' simple' (ID: 4705)
  Prédit: ' guess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' guess' → logprob: -1.7361997365951538
    2. 'guess' → logprob: -1.9861997365951538
    3. 'placeholder' → logprob: -2.2361998558044434
    4. '```' → logprob: -2.2361998558044434
    5. ' rough' → logprob: -2.4861998558044434
    6. ' placeholder' → logprob: -2.7361998558044434
    7. 'pp' → logprob: -3.1111998558044434
    8. 'safe' → logprob: -3.4861998558044434
    9. 'simpl' → logprob: -3.4861998558044434
    10. 'approx' → logprob: -3.8611998558044434

Token 1027: ' assumption' (ID: 57291)
  Prédit: ' approximation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approximation' → logprob: -0.606028139591217
    2. ' guess' → logprob: -1.6060280799865723
    3. '*' → logprob: -2.3560280799865723
    4. 'approx' → logprob: -2.4810280799865723
    5. ' heuristic' → logprob: -4.106028079986572
    6. ' assumption' → logprob: -4.481028079986572
    7. 'guess' → logprob: -4.731028079986572
    8. '```' → logprob: -5.106028079986572
    9. ' approximate' → logprob: -5.356028079986572
    10. 'multip' → logprob: -5.481028079986572

Token 1028: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.578822672367096
    2. '       ' → logprob: -0.828822672367096
    3. ')
' → logprob: -6.203822612762451
    4. '           ' → logprob: -7.828822612762451
    5. '
' → logprob: -9.07882308959961
    6. '<|end|>' → logprob: -10.07882308959961
    7. '):
' → logprob: -10.20382308959961
    8. ',' → logprob: -10.32882308959961
    9. '```' → logprob: -10.32882308959961
    10. ').' → logprob: -10.32882308959961

Token 1029: ' distinguish' (ID: 59938)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0178852081298828
    2. '```' → logprob: -1.6428852081298828
    3. ' continue' → logprob: -2.267885208129883
    4. ' account' → logprob: -2.767885208129883
    5. 'multiply' → logprob: -2.892885208129883
    6. '       ' → logprob: -2.892885208129883
    7. '*' → logprob: -3.142885208129883
    8. ' multiply' → logprob: -4.017885208129883
    9. ')' → logprob: -4.267885208129883
    10. 'simulate' → logprob: -4.267885208129883

Token 1030: ' multiple' (ID: 7598)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2594590187072754
    2. ' between' → logprob: -1.5094590187072754
    3. ')' → logprob: -2.0094590187072754
    4. ' )' → logprob: -2.3844590187072754
    5. ' ' → logprob: -2.5094590187072754
    6. ' two' → logprob: -2.8844590187072754
    7. ' different' → logprob: -3.8844590187072754
    8. ' edges' → logprob: -4.259459018707275
    9. ' a' → logprob: -4.634459018707275
    10. '```' → logprob: -4.759459018707275

Token 1031: ' MST' (ID: 123058)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.30061525106430054
    2. ' spanning' → logprob: -1.8006153106689453
    3. 'ways' → logprob: -2.5506153106689453
    4. 'sp' → logprob: -4.550615310668945
    5. '_sp' → logprob: -6.050615310668945
    6. ' edges' → logprob: -7.800615310668945
    7. '_' → logprob: -7.800615310668945
    8. 's' → logprob: -7.925615310668945
    9. ')' → logprob: -8.300615310668945
    10. ' trees' → logprob: -8.550615310668945

Token 1032: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0035706115886569023
    2. ')' → logprob: -5.878570556640625
    3. '_s' → logprob: -7.753570556640625
    4. ')
' → logprob: -9.253570556640625
    5. 'ways' → logprob: -9.628570556640625
    6. '_edges' → logprob: -10.003570556640625
    7. '_' → logprob: -10.128570556640625
    8. ' s' → logprob: -11.003570556640625
    9. ')s' → logprob: -11.378570556640625
    10. '_times' → logprob: -11.503570556640625

Token 1033: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15694968402385712
    2. '       ' → logprob: -2.031949758529663
    3. ')
' → logprob: -4.281949520111084
    4. '           ' → logprob: -8.531949996948242
    5. '   ' → logprob: -9.906949996948242
    6. '*' → logprob: -11.031949996948242
    7. '```' → logprob: -11.156949996948242
    8. ')*' → logprob: -11.531949996948242
    9. ')`' → logprob: -11.531949996948242
    10. '):
' → logprob: -11.781949996948242

Token 1034: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14059431850910187
    2. '```' → logprob: -2.765594244003296
    3. ' for' → logprob: -3.640594244003296
    4. '
' → logprob: -3.765594244003296
    5. 'for' → logprob: -4.390594482421875
    6. '           ' → logprob: -5.390594482421875
    7. '        
' → logprob: -7.640594482421875
    8. '   ' → logprob: -7.890594482421875
    9. '``' → logprob: -8.015594482421875
    10. '<|end|>' → logprob: -8.765594482421875

Token 1035: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13954155147075653
    2. 'for' (adapté à ' for') → logprob: -2.6395416259765625
    3. ' for' → logprob: -2.8895416259765625
    4. '
' → logprob: -6.0145416259765625
    5. '   ' → logprob: -8.139541625976562
    6. '        
' → logprob: -8.389541625976562
    7. '```' → logprob: -9.389541625976562
    8. '           ' → logprob: -9.639541625976562
    9. ' 
' → logprob: -10.764541625976562
    10. '    
' → logprob: -11.264541625976562

Token 1036: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4184598922729492
    2. 'node' → logprob: -1.2934598922729492
    3. 'comp' → logprob: -3.168459892272949
    4. 'component' → logprob: -4.918459892272949
    5. ' u' → logprob: -5.043459892272949
    6. ' comp' → logprob: -5.543459892272949
    7. ' node' → logprob: -5.668459892272949
    8. 'v' → logprob: -6.168459892272949
    9. 'start' → logprob: -6.293459892272949
    10. 'nodes' → logprob: -8.79345989227295

Token 1037: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31326404213905334
    2. 'in' → logprob: -1.313264012336731
    3. '	in' → logprob: -13.688263893127441
    4. ' ' → logprob: -14.313263893127441
    5. '_in' → logprob: -15.313263893127441
    6. 'In' → logprob: -16.063264846801758
    7. ',' → logprob: -16.063264846801758
    8. '  ' → logprob: -16.688264846801758
    9. 'import' → logprob: -17.313264846801758
    10. '   ' → logprob: -17.313264846801758

Token 1038: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03816932439804077
    2. 'comp' → logprob: -3.2881693840026855
    3. ' range' → logprob: -9.288168907165527
    4. ' comp' → logprob: -11.163168907165527
    5. '(range' → logprob: -11.663168907165527
    6. 'id' → logprob: -12.788168907165527
    7. 'visited' → logprob: -13.038168907165527
    8. '(comp' → logprob: -13.038168907165527
    9. 'dfs' → logprob: -13.913168907165527
    10. 'com' → logprob: -14.538168907165527

Token 1039: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.014273745007812977
    2. 'id' → logprob: -4.264273643493652
    3. '(len' → logprob: -9.389273643493652
    4. '(' → logprob: -11.264273643493652
    5. 'len' → logprob: -11.514273643493652
    6. ' id' → logprob: -13.389273643493652
    7. '=id' → logprob: -14.014273643493652
    8. '[id' → logprob: -14.139273643493652
    9. '(i' → logprob: -15.514273643493652
    10. ':id' → logprob: -15.764273643493652

Token 1040: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00020807012333534658
    2. 'id' → logprob: -9.625207901000977
    3. '_id' → logprob: -9.875207901000977
    4. 'count' → logprob: -10.000207901000977
    5. '   ' → logprob: -11.625207901000977
    6. '_size' → logprob: -11.875207901000977
    7. ')' → logprob: -12.000207901000977
    8. 'Count' → logprob: -12.000207901000977
    9. '(id' → logprob: -12.625207901000977
    10. '_counts' → logprob: -12.750207901000977

Token 1041: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007685651071369648
    2. ':
' → logprob: -5.257685661315918
    3. '):' → logprob: -6.882685661315918
    4. ':' → logprob: -7.257685661315918
    5. '():
' → logprob: -8.882685661315918
    6. '+' → logprob: -8.882685661315918
    7. '):
' → logprob: -9.007685661315918
    8. '       ' → logprob: -9.382685661315918
    9. '```' → logprob: -9.507685661315918
    10. ']:
' → logprob: -10.382685661315918

Token 1042: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065581100061535835
    2. '       ' → logprob: -5.256557941436768
    3. ' if' → logprob: -6.881557941436768
    4. '```' → logprob: -9.381558418273926
    5. '           ' → logprob: -9.881558418273926
    6. 'if' → logprob: -10.131558418273926
    7. '<|end|>' → logprob: -10.256558418273926
    8. ':' → logprob: -11.131558418273926
    9. '    
' → logprob: -11.256558418273926
    10. '
' → logprob: -11.631558418273926

Token 1043: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25396019220352173
    2. ' if' → logprob: -1.503960132598877
    3. 'not' → logprob: -6.503960132598877
    4. ' not' → logprob: -7.878960132598877
    5. '   ' → logprob: -9.128960609436035
    6. '       ' → logprob: -10.378960609436035
    7. '           ' → logprob: -11.378960609436035
    8. '	if' → logprob: -14.003960609436035
    9. 'If' → logprob: -14.628960609436035
    10. ' ' → logprob: -15.128960609436035

Token 1044: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31388071179389954
    2. ' not' → logprob: -1.3138806819915771
    3. 'visited' → logprob: -7.438880920410156
    4. ' visited' → logprob: -10.563880920410156
    5. '(not' → logprob: -13.563880920410156
    6. '!' → logprob: -13.563880920410156
    7. '   ' → logprob: -13.813880920410156
    8. '
' → logprob: -14.688880920410156
    9. '	not' → logprob: -15.313880920410156
    10. '```' → logprob: -15.563880920410156

Token 1045: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0004306692280806601
    2. ' visited' → logprob: -7.750430583953857
    3. 'visible' → logprob: -20.500431060791016
    4. '
' → logprob: -21.000431060791016
    5. '```' → logprob: -21.250431060791016
    6. 'visit' → logprob: -21.625431060791016
    7. 'seen' → logprob: -21.625431060791016
    8. '   ' → logprob: -21.750431060791016
    9. 'Visited' → logprob: -21.750431060791016
    10. ' ' → logprob: -22.375431060791016

Token 1046: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.686778503237292e-05
    2. '(u' → logprob: -9.500097274780273
    3. '[' → logprob: -11.125097274780273
    4. 'u' → logprob: -11.875097274780273
    5. ' [' → logprob: -15.625097274780273
    6. '[
' → logprob: -16.375097274780273
    7. ' u' → logprob: -17.500097274780273
    8. ':' → logprob: -17.625097274780273
    9. '[cur' → logprob: -18.375097274780273
    10. '```' → logprob: -18.375097274780273

Token 1047: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5705471634864807
    2. ':' → logprob: -1.445547103881836
    3. ':
' → logprob: -1.820547103881836
    4. ']:' → logprob: -3.320547103881836
    5. '():
' → logprob: -7.945547103881836
    6. '):
' → logprob: -8.195547103881836
    7. ']' → logprob: -8.195547103881836
    8. ']:
' → logprob: -9.945547103881836
    9. '**' → logprob: -10.695547103881836
    10. ']:

' → logprob: -10.820547103881836

Token 1048: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16570453345775604
    2. '           ' → logprob: -2.6657044887542725
    3. '```' → logprob: -3.1657044887542725
    4. ':
' → logprob: -4.290704727172852
    5. ':' → logprob: -5.040704727172852
    6. '<|end|>' → logprob: -5.790704727172852
    7. '   ' → logprob: -6.165704727172852
    8. '[' → logprob: -6.415704727172852
    9. '	       ' → logprob: -6.790704727172852
    10. '       ' → logprob: -6.915704727172852

Token 1049: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.018224982544779778
    2. ' nodes' → logprob: -4.018225193023682
    3. '	nodes' → logprob: -10.143224716186523
    4. '(nodes' → logprob: -11.018224716186523
    5. '               ' → logprob: -11.518224716186523
    6. '                   ' → logprob: -12.143224716186523
    7. '_nodes' → logprob: -13.143224716186523
    8. '   ' → logprob: -13.893224716186523
    9. 'node' → logprob: -15.143224716186523
    10. '.nodes' → logprob: -15.143224716186523

Token 1050: '_in' (ID: 2267)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003362966235727072
    2. '_,' → logprob: -8.625336647033691
    3. ' ,' → logprob: -10.125336647033691
    4. '_list' → logprob: -10.375336647033691
    5. '_nodes' → logprob: -11.000336647033691
    6. ',node' → logprob: -11.000336647033691
    7. '.append' → logprob: -11.625336647033691
    8. ',
' → logprob: -11.750336647033691
    9. ',n' → logprob: -11.750336647033691
    10. '.pop' → logprob: -13.000336647033691

Token 1051: '_comp' (ID: 34754)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1421478986740112
    2. '.append' → logprob: -1.7671478986740112
    3. 'nodes' → logprob: -1.8921478986740112
    4. 'dfs' → logprob: -2.142148017883301
    5. '[u' → logprob: -2.642148017883301
    6. 'comp' → logprob: -3.142148017883301
    7. '[]' → logprob: -3.392148017883301
    8. '_nodes' → logprob: -3.767148017883301
    9. ' =' → logprob: -4.142148017883301
    10. 'append' → logprob: -4.767148017883301

Token 1052: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42091336846351624
    2. ' =' → logprob: -1.1709133386611938
    3. ',' → logprob: -3.4209134578704834
    4. '.append' → logprob: -7.920913219451904
    5. ')' → logprob: -8.670913696289062
    6. '   ' → logprob: -9.670913696289062
    7. '           ' → logprob: -9.670913696289062
    8. '       ' → logprob: -10.545913696289062
    9. '=[]' → logprob: -10.920913696289062
    10. '        ' → logprob: -11.420913696289062

Token 1053: ' e' (ID: 319)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0003510741807986051
    2. ' edges' → logprob: -8.000350952148438
    3. 'edge' → logprob: -11.375350952148438
    4. 'ec' → logprob: -12.750350952148438
    5. 'e' → logprob: -13.875350952148438
    6. 'ed' → logprob: -15.375350952148438
    7. '```' → logprob: -16.750350952148438
    8. '_edges' → logprob: -17.000350952148438
    9. '   ' → logprob: -17.625350952148438
    10. 'eg' → logprob: -17.750350952148438

Token 1054: '_count' (ID: 7536)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012265216559171677
    2. 'edges' → logprob: -4.512265205383301
    3. '_count' → logprob: -7.387265205383301
    4. 'count' → logprob: -8.3872652053833
    5. '_edges' → logprob: -9.1372652053833
    6. 'ds' → logprob: -9.5122652053833
    7. 'dge' → logprob: -9.6372652053833
    8. 'dg' → logprob: -10.0122652053833
    9. '=' → logprob: -10.6372652053833
    10. 's' → logprob: -11.7622652053833

Token 1055: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326285004615784
    2. '=' → logprob: -1.3132628202438354
    3. ' ' → logprob: -14.938262939453125
    4. ')' → logprob: -15.813262939453125
    5. '            ' → logprob: -16.438262939453125
    6. ' =
' → logprob: -16.438262939453125
    7. '        ' → logprob: -16.813262939453125
    8. ')=' → logprob: -16.813262939453125
    9. '=len' → logprob: -17.063262939453125
    10. '           ' → logprob: -17.063262939453125

Token 1056: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.005235190503299236
    2. ' dfs' → logprob: -5.255235195159912
    3. 'df' → logprob: -13.505234718322754
    4. 'ds' → logprob: -17.88023567199707
    5. '   ' → logprob: -18.63023567199707
    6. ' ' → logprob: -19.13023567199707
    7. 'dfa' → logprob: -19.25523567199707
    8. 'len' → logprob: -19.38023567199707
    9. 'd' → logprob: -19.63023567199707
    10. 'dns' → logprob: -20.25523567199707

Token 1057: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00012558852904476225
    2. '[u' → logprob: -9.375125885009766
    3. 'u' → logprob: -10.125125885009766
    4. '(' → logprob: -14.375125885009766
    5. ' (' → logprob: -17.125125885009766
    6. '(
' → logprob: -17.875125885009766
    7. ' u' → logprob: -19.000125885009766
    8. '<u' → logprob: -19.000125885009766
    9. '=u' → logprob: -19.500125885009766
    10. '	u' → logprob: -19.500125885009766

Token 1058: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5435470342636108
    2. ')
' → logprob: -0.9185470342636108
    3. '               ' → logprob: -3.9185471534729004
    4. '<|end|>' → logprob: -9.043546676635742
    5. '           ' → logprob: -9.668546676635742
    6. '):
' → logprob: -10.043546676635742
    7. ')
' → logprob: -10.668546676635742
    8. '
' → logprob: -10.793546676635742
    9. '                   ' → logprob: -10.793546676635742
    10. '```' → logprob: -11.168546676635742

Token 1059: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00759184081107378
    2. '```' → logprob: -5.132591724395752
    3. '       ' → logprob: -7.007591724395752
    4. '           ' → logprob: -8.00759220123291
    5. '
' → logprob: -8.75759220123291
    6. ' if' → logprob: -9.25759220123291
    7. '                   ' → logprob: -9.75759220123291
    8. '``' → logprob: -10.63259220123291
    9. '<|end|>' → logprob: -10.75759220123291
    10. '   ' → logprob: -11.00759220123291

Token 1060: ' v' (ID: 323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05104623734951019
    2. '               ' → logprob: -3.051046133041382
    3. ' if' → logprob: -6.176046371459961
    4. '           ' → logprob: -8.926046371459961
    5. '```' → logprob: -9.176046371459961
    6. '       ' → logprob: -9.801046371459961
    7. '                   ' → logprob: -9.801046371459961
    8. '   ' → logprob: -10.801046371459961
    9. '``' → logprob: -12.551046371459961
    10. 'import' → logprob: -13.676046371459961

Token 1061: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20472238957881927
    2. '=' → logprob: -1.9547224044799805
    3. '_count' → logprob: -3.7047224044799805
    4. '_len' → logprob: -4.5797224044799805
    5. '=len' → logprob: -5.2047224044799805
    6. 'len' → logprob: -6.9547224044799805
    7. 'count' → logprob: -6.9547224044799805
    8. 's' → logprob: -8.70472240447998
    9. '_nodes' → logprob: -8.82972240447998
    10. '_cnt' → logprob: -8.82972240447998

Token 1062: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0824092626571655
    2. '==' → logprob: -1.5824092626571655
    3. '=' → logprob: -2.082409381866455
    4. ' =' → logprob: -2.082409381866455
    5. ' -' → logprob: -2.207409381866455
    6. '<|end|>' → logprob: -2.832409381866455
    7. '-' → logprob: -3.707409381866455
    8. ')' → logprob: -5.582409381866455
    9. '               ' → logprob: -6.957409381866455
    10. '[' → logprob: -7.082409381866455

Token 1063: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0015035520773380995
    2. ' len' → logprob: -6.5015034675598145
    3. '(len' → logprob: -13.751503944396973
    4. '[len' → logprob: -16.626502990722656
    5. '=len' → logprob: -16.876502990722656
    6. '	len' → logprob: -18.626502990722656
    7. ',len' → logprob: -20.001502990722656
    8. '   ' → logprob: -21.376502990722656
    9. '<len' → logprob: -21.751502990722656
    10. '           ' → logprob: -22.001502990722656

Token 1064: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.0005535095697268844
    2. 'nodes' → logprob: -7.500553607940674
    3. ' nodes' → logprob: -15.500553131103516
    4. '	nodes' → logprob: -15.875553131103516
    5. '(tokens' → logprob: -16.125553131103516
    6. '(' → logprob: -17.000553131103516
    7. '(
' → logprob: -18.625553131103516
    8. '(vertices' → logprob: -19.000553131103516
    9. '_nodes' → logprob: -19.500553131103516
    10. ' (' → logprob: -20.125553131103516

Token 1065: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.014171624556183815
    2. ')' → logprob: -5.389171600341797
    3. '(nodes' → logprob: -5.514171600341797
    4. '_nodes' → logprob: -5.889171600341797
    5. 'in' → logprob: -7.389171600341797
    6. 'nodes' → logprob: -7.514171600341797
    7. '
' → logprob: -7.764171600341797
    8. ')
' → logprob: -8.139171600341797
    9. '[u' → logprob: -8.639171600341797
    10. 's' → logprob: -8.889171600341797

Token 1066: '_comp' (ID: 34754)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.013078935444355011
    2. '(nodes' → logprob: -5.2630791664123535
    3. '_comp' → logprob: -5.5130791664123535
    4. 'comp' → logprob: -6.1380791664123535
    5. ' nodes' → logprob: -7.0130791664123535
    6. '_nodes' → logprob: -8.013078689575195
    7. '_in' → logprob: -8.763078689575195
    8. '
' → logprob: -10.013078689575195
    9. '	nodes' → logprob: -10.138078689575195
    10. 'in' → logprob: -10.263078689575195

Token 1067: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5278037190437317
    2. ')' → logprob: -1.027803659439087
    3. ' -' → logprob: -3.777803659439087
    4. '               ' → logprob: -3.902803659439087
    5. '-' → logprob: -5.277803897857666
    6. '
' → logprob: -6.027803897857666
    7. '<|end|>' → logprob: -7.027803897857666
    8. '       ' → logprob: -7.652803897857666
    9. '           ' → logprob: -8.652803421020508
    10. '```' → logprob: -10.527803421020508

Token 1068: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4736459888808895e-05
    2. '```' → logprob: -12.250014305114746
    3. '
' → logprob: -12.625014305114746
    4. '       ' → logprob: -12.875014305114746
    5. '           ' → logprob: -13.750014305114746
    6. 'if' → logprob: -14.000014305114746
    7. ' if' → logprob: -14.000014305114746
    8. '<|end|>' → logprob: -14.375014305114746
    9. '                   ' → logprob: -14.875014305114746
    10. '   ' → logprob: -15.750014305114746

Token 1069: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47482460737228394
    2. '               ' → logprob: -0.9748246073722839
    3. ' if' → logprob: -7.47482442855835
    4. '           ' → logprob: -9.224824905395508
    5. '       ' → logprob: -9.849824905395508
    6. '   ' → logprob: -10.974824905395508
    7. '                   ' → logprob: -11.849824905395508
    8. '```' → logprob: -13.224824905395508
    9. '
' → logprob: -13.974824905395508
    10. '	if' → logprob: -14.974824905395508

Token 1070: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31338709592819214
    2. ' e' → logprob: -1.313387155532837
    3. '               ' → logprob: -9.563386917114258
    4. '                   ' → logprob: -10.563386917114258
    5. '	e' → logprob: -11.938386917114258
    6. '   ' → logprob: -12.188386917114258
    7. 'edges' → logprob: -12.188386917114258
    8. ' edges' → logprob: -12.313386917114258
    9. '           ' → logprob: -13.313386917114258
    10. '                ' → logprob: -13.313386917114258

Token 1071: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.07981365919113159
    2. '==' → logprob: -3.3298137187957764
    3. '[v' → logprob: -3.9548137187957764
    4. 's' → logprob: -5.454813480377197
    5. ' ==' → logprob: -5.954813480377197
    6. '       ' → logprob: -6.204813480377197
    7. '[u' → logprob: -6.204813480377197
    8. '[' → logprob: -6.329813480377197
    9. '           ' → logprob: -6.454813480377197
    10. '   ' → logprob: -6.829813480377197

Token 1072: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11631473153829575
    2. '==' → logprob: -2.366314649581909
    3. ' >' → logprob: -5.116314888000488
    4. ' !=' → logprob: -5.116314888000488
    5. ' <' → logprob: -5.866314888000488
    6. '>' → logprob: -7.491314888000488
    7. '!=' → logprob: -8.241314888000488
    8. ' ' → logprob: -8.866314888000488
    9. '<' → logprob: -9.991314888000488
    10. ')' → logprob: -10.366314888000488

Token 1073: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014164448715746403
    2. ' v' → logprob: -4.264164447784424
    3. '(v' → logprob: -14.014164924621582
    4. '	v' → logprob: -16.014163970947266
    5. '   ' → logprob: -17.764163970947266
    6. ' ' → logprob: -18.264163970947266
    7. ' (' → logprob: -18.639163970947266
    8. '0' → logprob: -19.389163970947266
    9. '[v' → logprob: -19.514163970947266
    10. '$v' → logprob: -19.764163970947266

Token 1074: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00023524489370174706
    2. '_' → logprob: -9.500235557556152
    3. 'v' → logprob: -9.750235557556152
    4. '+' → logprob: -9.875235557556152
    5. '   ' → logprob: -11.000235557556152
    6. 'count' → logprob: -11.500235557556152
    7. '_counts' → logprob: -12.625235557556152
    8. '```' → logprob: -12.875235557556152
    9. '_cost' → logprob: -13.000235557556152
    10. '-' → logprob: -13.125235557556152

Token 1075: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20142056047916412
    2. '-' → logprob: -1.701420545578003
    3. '               ' → logprob: -12.701420783996582
    4. ' ' → logprob: -13.576420783996582
    5. '           ' → logprob: -14.326420783996582
    6. '                   ' → logprob: -14.576420783996582
    7. ')' → logprob: -14.576420783996582
    8. '   ' → logprob: -14.701420783996582
    9. '       ' → logprob: -14.951420783996582
    10. '−' → logprob: -16.201419830322266

Token 1076: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -15.750000953674316
    4. '```' → logprob: -16.25
    5. '
' → logprob: -18.0
    6. '   ' → logprob: -19.5
    7. '<|end|>' → logprob: -20.1875
    8. '`' → logprob: -20.5625
    9. '[' → logprob: -20.6875
    10. '2' → logprob: -20.6875

Token 1077: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7707289457321167
    2. ':
' → logprob: -1.0207289457321167
    3. ':' → logprob: -1.8957289457321167
    4. '               ' → logprob: -3.8957290649414062
    5. '           ' → logprob: -5.770729064941406
    6. '                       ' → logprob: -6.145729064941406
    7. '                           ' → logprob: -8.020729064941406
    8. '):
' → logprob: -8.270729064941406
    9. ')' → logprob: -8.895729064941406
    10. '<|end|>' → logprob: -9.645729064941406

Token 1078: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003049570368602872
    2. '               ' → logprob: -8.50030517578125
    3. '           ' → logprob: -9.87530517578125
    4. '                       ' → logprob: -10.00030517578125
    5. 'ways' → logprob: -13.50030517578125
    6. '                  ' → logprob: -14.00030517578125
    7. '				' → logprob: -14.50030517578125
    8. '       ' → logprob: -14.87530517578125
    9. ' ways' → logprob: -14.87530517578125
    10. '                           ' → logprob: -15.12530517578125

Token 1079: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.2526591718196869
    2. '                   ' → logprob: -2.1276590824127197
    3. ' ways' → logprob: -3.1276590824127197
    4. '                       ' → logprob: -3.2526590824127197
    5. 'continue' → logprob: -4.752659320831299
    6. '               ' → logprob: -5.002659320831299
    7. '           ' → logprob: -6.252659320831299
    8. 'pass' → logprob: -6.377659320831299
    9. ' continue' → logprob: -7.252659320831299
    10. ' pass' → logprob: -7.752659320831299

Token 1080: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.005352705251425505
    2. ' *=' → logprob: -5.25535249710083
    3. '=' → logprob: -9.130352973937988
    4. '*' → logprob: -11.630352973937988
    5. '   ' → logprob: -13.880352973937988
    6. ' =' → logprob: -14.630352973937988
    7. '```' → logprob: -16.130352020263672
    8. '\' → logprob: -16.880352020263672
    9. '	' → logprob: -17.130352020263672
    10. ' ' → logprob: -17.505352020263672

Token 1081: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.2836620807647705
    2. '(' → logprob: -1.4086620807647705
    3. ' ways' → logprob: -6.158661842346191
    4. ' (' → logprob: -7.908661842346191
    5. '(w' → logprob: -11.283661842346191
    6. 'way' → logprob: -11.783661842346191
    7. 'WAYS' → logprob: -13.033661842346191
    8. 'Ways' → logprob: -13.658661842346191
    9. '```' → logprob: -14.783661842346191
    10. '(s' → logprob: -15.033661842346191

Token 1082: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0017562180291861296
    2. ' *' → logprob: -6.376756191253662
    3. '*(' → logprob: -10.87675666809082
    4. '*object' → logprob: -11.62675666809082
    5. '```' → logprob: -11.62675666809082
    6. '%' → logprob: -12.50175666809082
    7. '**' → logprob: -12.62675666809082
    8. 'ways' → logprob: -12.87675666809082
    9. '*=' → logprob: -13.25175666809082
    10. ' ways' → logprob: -13.50175666809082

Token 1083: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -17.875
    4. '   ' → logprob: -18.625
    5. '(' → logprob: -19.875
    6. 'MOD' → logprob: -20.0
    7. 'ways' → logprob: -20.125
    8. '2' → logprob: -21.0
    9. '`' → logprob: -21.25
    10. 'mod' → logprob: -21.375

Token 1084: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '(' → logprob: -17.25
    3. ' ' → logprob: -17.375
    4. '```' → logprob: -17.875
    5. '   ' → logprob: -19.25
    6. '
' → logprob: -19.5
    7. 'MOD' → logprob: -20.125
    8. '`' → logprob: -20.125
    9. 'mod' → logprob: -21.125
    10. '۱' → logprob: -21.125

Token 1085: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0340946726500988
    2. ' %' → logprob: -3.5340945720672607
    3. '       ' → logprob: -6.28409481048584
    4. '<|end|>' → logprob: -6.78409481048584
    5. 'else' → logprob: -8.03409481048584
    6. ' else' → logprob: -8.28409481048584
    7. '               ' → logprob: -8.90909481048584
    8. '                   ' → logprob: -8.90909481048584
    9. '%n' → logprob: -9.28409481048584
    10. '```' → logprob: -9.40909481048584

Token 1086: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.5048530030981055e-06
    2. ' MOD' → logprob: -13.500001907348633
    3. '100' → logprob: -18.000001907348633
    4. '_MOD' → logprob: -20.875001907348633
    5. '```' → logprob: -21.125001907348633
    6. '(M' → logprob: -21.375001907348633
    7. '.MOD' → logprob: -21.750001907348633
    8. 'MO' → logprob: -23.125001907348633
    9. '
' → logprob: -23.125001907348633
    10. '(mod' → logprob: -23.375001907348633

Token 1087: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25524991750717163
    2. 'else' → logprob: -1.5052499771118164
    3. ' else' → logprob: -5.755249977111816
    4. '```' → logprob: -10.005249977111816
    5. '
' → logprob: -10.255249977111816
    6. '                   ' → logprob: -11.130249977111816
    7. 'elif' → logprob: -11.255249977111816
    8. '			' → logprob: -11.755249977111816
    9. '       ' → logprob: -11.755249977111816
    10. '<|end|>' → logprob: -11.880249977111816

Token 1088: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.506723165512085
    2. '```' → logprob: -1.506723165512085
    3. 'else' → logprob: -1.756723165512085
    4. ' else' → logprob: -5.881723403930664
    5. '                   ' → logprob: -8.006723403930664
    6. '``' → logprob: -9.256723403930664
    7. '           ' → logprob: -11.006723403930664
    8. '
' → logprob: -11.381723403930664
    9. '<|end|>' → logprob: -11.881723403930664
    10. 'elif' → logprob: -12.006723403930664

Token 1089: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.21248584985733032
    2. '               ' → logprob: -1.7124857902526855
    3. ' else' → logprob: -4.7124857902526855
    4. '```' → logprob: -6.2124857902526855
    5. '			' → logprob: -11.462486267089844
    6. '           ' → logprob: -12.212486267089844
    7. 'elif' (adapté à ' elif') → logprob: -13.212486267089844
    8. '	else' → logprob: -13.212486267089844
    9. '                   ' → logprob: -13.462486267089844
    10. '``' → logprob: -14.212486267089844

Token 1090: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5156608819961548
    2. ' e' → logprob: -1.1406608819961548
    3. 'ways' → logprob: -3.0156607627868652
    4. ' ways' → logprob: -4.390660762786865
    5. 'edges' → logprob: -4.390660762786865
    6. ' edges' → logprob: -5.015660762786865
    7. '(e' → logprob: -7.265660762786865
    8. '                   ' → logprob: -7.640660762786865
    9. '               ' → logprob: -7.890660762786865
    10. '   ' → logprob: -8.140661239624023

Token 1091: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.01053800992667675
    2. '_' → logprob: -5.385538101196289
    3. 's' → logprob: -6.385538101196289
    4. '_counts' → logprob: -6.635538101196289
    5. 'ways' → logprob: -6.760538101196289
    6. '_edges' → logprob: -8.260538101196289
    7. '```' → logprob: -8.385538101196289
    8. '   ' → logprob: -8.510538101196289
    9. 'f' → logprob: -8.885538101196289
    10. '=' → logprob: -9.010538101196289

Token 1092: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.020660769194364548
    2. '>' → logprob: -3.895660877227783
    3. ' >
' → logprob: -9.895660400390625
    4. ' <' → logprob: -10.270660400390625
    5. ' ' → logprob: -11.645660400390625
    6. ' !=' → logprob: -12.395660400390625
    7. ' ' → logprob: -12.395660400390625
    8. ' ==' → logprob: -12.395660400390625
    9. '<|end|>' → logprob: -12.520660400390625
    10. '   ' → logprob: -13.270660400390625

Token 1093: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0789485052227974
    2. ' v' → logprob: -2.578948497772217
    3. '(v' → logprob: -10.078948974609375
    4. '                   ' → logprob: -12.328948974609375
    5. '               ' → logprob: -12.453948974609375
    6. '	v' → logprob: -12.828948974609375
    7. '0' → logprob: -13.078948974609375
    8. '=v' → logprob: -13.578948974609375
    9. '[v' → logprob: -14.203948974609375
    10. '=' → logprob: -14.578948974609375

Token 1094: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00016218038217630237
    2. 'v' → logprob: -9.000162124633789
    3. 'count' → logprob: -10.500162124633789
    4. '[v' → logprob: -12.875162124633789
    5. '_COUNT' → logprob: -13.500162124633789
    6. '=' → logprob: -13.750162124633789
    7. '   ' → logprob: -13.875162124633789
    8. 'Count' → logprob: -14.000162124633789
    9. '(v' → logprob: -14.125162124633789
    10. '2' → logprob: -14.375162124633789

Token 1095: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3869699537754059
    2. '-' → logprob: -1.1369699239730835
    3. '               ' → logprob: -9.386969566345215
    4. '           ' → logprob: -12.011969566345215
    5. '                   ' → logprob: -12.136969566345215
    6. '   ' → logprob: -14.386969566345215
    7. ':
' → logprob: -14.511969566345215
    8. ' ' → logprob: -14.761969566345215
    9. '       ' → logprob: -15.136969566345215
    10. ':' → logprob: -15.136969566345215

Token 1096: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -16.875
    3. '
' → logprob: -17.375
    4. ' ' → logprob: -17.5
    5. '{
' → logprob: -19.75
    6. '   ' → logprob: -20.125
    7. '<|end|>' → logprob: -20.75
    8. '۱' → logprob: -20.75
    9. '{' → logprob: -21.125
    10. '１' → logprob: -21.125

Token 1097: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08517233282327652
    2. ':' → logprob: -2.585172414779663
    3. '           ' → logprob: -5.960172176361084
    4. '                   ' → logprob: -6.085172176361084
    5. '               ' → logprob: -6.960172176361084
    6. '                       ' → logprob: -9.085172653198242
    7. '):
' → logprob: -9.335172653198242
    8. ' and' → logprob: -10.460172653198242
    9. '       ' → logprob: -10.710172653198242
    10. '```' → logprob: -10.710172653198242

Token 1098: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0045394194312393665
    2. '               ' → logprob: -5.629539489746094
    3. '                       ' → logprob: -8.129539489746094
    4. '```' → logprob: -8.254539489746094
    5. 'ways' → logprob: -8.504539489746094
    6. '                               ' → logprob: -9.879539489746094
    7. ' ways' → logprob: -10.129539489746094
    8. '                           ' → logprob: -11.129539489746094
    9. '                    ' → logprob: -11.254539489746094
    10. '                  ' → logprob: -11.254539489746094

Token 1099: ' #' (ID: 1069)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.023288918659090996
    2. ' ways' → logprob: -3.7732889652252197
    3. '               ' → logprob: -11.14828872680664
    4. '                   ' → logprob: -11.39828872680664
    5. '           ' → logprob: -12.14828872680664
    6. '       ' → logprob: -12.89828872680664
    7. '```' → logprob: -13.02328872680664
    8. '                       ' → logprob: -13.14828872680664
    9. '``' → logprob: -13.27328872680664
    10. '   ' → logprob: -13.64828872680664

Token 1100: ' multiple' (ID: 7598)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -9.491498531133402e-06
    2. ' ways' → logprob: -11.875009536743164
    3. '                   ' → logprob: -13.500009536743164
    4. '               ' → logprob: -14.625009536743164
    5. '       ' → logprob: -15.875009536743164
    6. '                       ' → logprob: -15.875009536743164
    7. '           ' → logprob: -16.125009536743164
    8. '   ' → logprob: -16.500009536743164
    9. 'WAYS' → logprob: -16.625009536743164
    10. '``' → logprob: -17.250009536743164

Token 1101: ' MST' (ID: 123058)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.03418373689055443
    2. ' ways' → logprob: -3.4091837406158447
    3. '_' → logprob: -8.034183502197266
    4. ' *=' → logprob: -10.284183502197266
    5. '=' → logprob: -10.534183502197266
    6. '```' → logprob: -10.784183502197266
    7. '*' → logprob: -11.159183502197266
    8. '   ' → logprob: -11.409183502197266
    9. '+=' → logprob: -11.534183502197266
    10. ' =' → logprob: -11.534183502197266

Token 1102: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10961814969778061
    2. 'ways' → logprob: -2.8596181869506836
    3. ' ways' → logprob: -4.234618186950684
    4. '*=' → logprob: -4.234618186950684
    5. '=' → logprob: -4.859618186950684
    6. ' s' → logprob: -5.484618186950684
    7. ' =' → logprob: -5.734618186950684
    8. ' *=' → logprob: -7.234618186950684
    9. '*s' → logprob: -7.609618186950684
    10. '_s' → logprob: -7.734618186950684

Token 1103: ' possible' (ID: 4149)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3984582722187042
    2. '                   ' → logprob: -2.023458242416382
    3. '=' → logprob: -2.148458242416382
    4. '*=' → logprob: -3.273458242416382
    5. '                       ' → logprob: -4.398458480834961
    6. ' *=' → logprob: -4.398458480834961
    7. '```' → logprob: -5.148458480834961
    8. ' ways' → logprob: -5.398458480834961
    9. 'ways' → logprob: -5.898458480834961
    10. '               ' → logprob: -6.273458480834961

Token 1104: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08616632223129272
    2. '                       ' → logprob: -3.3361663818359375
    3. 'ways' → logprob: -3.5861663818359375
    4. ':
' → logprob: -4.8361663818359375
    5. ' ways' → logprob: -5.0861663818359375
    6. ':' → logprob: -5.8361663818359375
    7. '               ' → logprob: -7.0861663818359375
    8. '           ' → logprob: -7.4611663818359375
    9. '```' → logprob: -7.7111663818359375
    10. '       ' → logprob: -9.586166381835938

Token 1105: ' for' (ID: 395)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00193280098028481
    2. ' ways' → logprob: -6.251932621002197
    3. '                   ' → logprob: -12.876933097839355
    4. '                       ' → logprob: -14.751933097839355
    5. '```' → logprob: -14.751933097839355
    6. '               ' → logprob: -15.001933097839355
    7. '           ' → logprob: -15.626933097839355
    8. '       ' → logprob: -15.751933097839355
    9. 'WAYS' → logprob: -15.751933097839355
    10. '``' → logprob: -16.37693214416504

Token 1106: ' beginner' (ID: 57062)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.540207028388977
    2. 'ways' → logprob: -0.915207028388977
    3. 'w' → logprob: -4.9152069091796875
    4. ' _' → logprob: -5.7902069091796875
    5. '_' → logprob: -6.1652069091796875
    6. 's' → logprob: -7.2902069091796875
    7. 'edges' → logprob: -7.5402069091796875
    8. 'way' → logprob: -7.6652069091796875
    9. ' edges' → logprob: -7.9152069091796875
    10. ' way' → logprob: -8.290206909179688

Token 1107: ' approach' (ID: 7139)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.6077237129211426
    2. ' ways' → logprob: -2.1077237129211426
    3. ' code' → logprob: -2.1077237129211426
    4. '```' → logprob: -2.7327237129211426
    5. 'solution' → logprob: -3.2327237129211426
    6. 'code' → logprob: -3.2327237129211426
    7. 'solutions' → logprob: -3.9827237129211426
    8. ' solution' → logprob: -4.232723712921143
    9. '                   ' → logprob: -4.857723712921143
    10. ' solutions' → logprob: -4.982723712921143

Token 1108: ' multiply' (ID: 57388)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07507931441068649
    2. 'ways' → logprob: -3.0750792026519775
    3. ' ways' → logprob: -4.200079441070557
    4. '                       ' → logprob: -4.575079441070557
    5. '               ' → logprob: -7.575079441070557
    6. '```' → logprob: -9.075078964233398
    7. '           ' → logprob: -9.700078964233398
    8. '                    ' → logprob: -10.450078964233398
    9. '       ' → logprob: -10.825078964233398
    10. '                           ' → logprob: -11.325078964233398

Token 1109: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.003513595089316368
    2. ' ways' → logprob: -5.753513813018799
    3. 'by' → logprob: -8.25351333618164
    4. '2' → logprob: -10.00351333618164
    5. '```' → logprob: -10.87851333618164
    6. '(' → logprob: -11.87851333618164
    7. ' by' → logprob: -13.00351333618164
    8. 'WAYS' → logprob: -14.12851333618164
    9. '   ' → logprob: -14.37851333618164
    10. 'way' → logprob: -15.37851333618164

Token 1110: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6102108955383301
    2. 'ways' → logprob: -1.36021089553833
    3. '*=' → logprob: -1.98521089553833
    4. 'by' → logprob: -3.61021089553833
    5. ' ways' → logprob: -3.73521089553833
    6. '```' → logprob: -5.23521089553833
    7. ' =' → logprob: -5.61021089553833
    8. ' by' → logprob: -6.98521089553833
    9. ' *=' → logprob: -7.11021089553833
    10. '                   ' → logprob: -7.48521089553833

Token 1111: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.334533878136426e-05
    2. ' ' → logprob: -10.125042915344238
    3. '```' → logprob: -12.750042915344238
    4. '`' → logprob: -15.375042915344238
    5. '   ' → logprob: -16.625043869018555
    6. '
' → logprob: -16.750043869018555
    7. '``' → logprob: -17.000043869018555
    8. '(' → logprob: -17.375043869018555
    9. '"' → logprob: -19.375043869018555
    10. '２' → logprob: -19.500043869018555

Token 1112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -15.375003814697266
    4. '
' → logprob: -16.625003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '(' → logprob: -17.750003814697266
    7. '２' → logprob: -18.500003814697266
    8. '`' → logprob: -18.625003814697266
    9. '``' → logprob: -19.125003814697266
    10. '۲' → logprob: -19.250003814697266

Token 1113: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007305434555746615
    2. '               ' → logprob: -8.500730514526367
    3. '                       ' → logprob: -8.875730514526367
    4. 'ways' → logprob: -9.250730514526367
    5. '           ' → logprob: -9.375730514526367
    6. '```' → logprob: -9.750730514526367
    7. ' ways' → logprob: -10.250730514526367
    8. '*' → logprob: -10.250730514526367
    9. '%' → logprob: -10.625730514526367
    10. '                    
' → logprob: -11.875730514526367

Token 1114: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04938874393701553
    2. '*' → logprob: -3.7993886470794678
    3. '                       ' → logprob: -4.174388885498047
    4. '               ' → logprob: -5.924388885498047
    5. '```' → logprob: -6.049388885498047
    6. ' *' → logprob: -6.549388885498047
    7. ':' → logprob: -6.924388885498047
    8. ':
' → logprob: -7.174388885498047
    9. '           ' → logprob: -7.424388885498047
    10. '                        
' → logprob: -8.049388885498047

Token 1115: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.40044286847114563
    2. ' ways' → logprob: -1.2754428386688232
    3. '                   ' → logprob: -3.0254428386688232
    4. '```' → logprob: -7.150443077087402
    5. '                       ' → logprob: -7.400443077087402
    6. '``' → logprob: -8.025443077087402
    7. '               ' → logprob: -8.400443077087402
    8. '           ' → logprob: -9.650443077087402
    9. '`' → logprob: -10.650443077087402
    10. '   ' → logprob: -11.025443077087402

Token 1116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023357054218649864
    2. ' =' → logprob: -3.7733571529388428
    3. '*=' → logprob: -9.148357391357422
    4. ' *=' → logprob: -12.273357391357422
    5. '*' → logprob: -15.273357391357422
    6. '```' → logprob: -16.148357391357422
    7. '   ' → logprob: -16.398357391357422
    8. '=
' → logprob: -17.648357391357422
    9. ' ' → logprob: -18.398357391357422
    10. '%=' → logprob: -18.898357391357422

Token 1117: ' ways' (ID: 6984)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7629048228263855
    2. 'ways' → logprob: -0.7629048228263855
    3. ' ways' → logprob: -3.0129048824310303
    4. ' (' → logprob: -4.012904644012451
    5. '(w' → logprob: -9.51290512084961
    6. 'way' → logprob: -9.88790512084961
    7. '2' → logprob: -11.88790512084961
    8. 'Ways' → logprob: -12.76290512084961
    9. ' way' → logprob: -12.88790512084961
    10. '   ' → logprob: -13.01290512084961

Token 1118: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4742562472820282
    2. ' *' → logprob: -0.9742562770843506
    3. '```' → logprob: -9.59925651550293
    4. 'ways' → logprob: -9.84925651550293
    5. ' ways' → logprob: -10.47425651550293
    6. '2' → logprob: -11.34925651550293
    7. '`' → logprob: -11.59925651550293
    8. '**' → logprob: -12.34925651550293
    9. ' ' → logprob: -13.22425651550293
    10. '*(' → logprob: -14.09925651550293

Token 1119: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -15.500096321105957
    4. '(' → logprob: -16.125097274780273
    5. '   ' → logprob: -16.750097274780273
    6. '  ' → logprob: -18.875097274780273
    7. '
' → logprob: -19.000097274780273
    8. '`' → logprob: -19.000097274780273
    9. '``' → logprob: -19.375097274780273
    10. '２' → logprob: -20.000097274780273

Token 1120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '(' → logprob: -17.25
    4. '```' → logprob: -19.0
    5. '
' → logprob: -20.25
    6. '   ' → logprob: -20.875
    7. '２' → logprob: -21.125
    8. '۲' → logprob: -22.125
    9. '`' → logprob: -22.5
    10. 'pow' → logprob: -22.625

Token 1121: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1602909415960312
    2. '%' → logprob: -1.9102909564971924
    3. '           ' → logprob: -11.160290718078613
    4. '                   ' → logprob: -11.285290718078613
    5. '```' → logprob: -11.285290718078613
    6. '       ' → logprob: -12.160290718078613
    7. '               ' → logprob: -12.285290718078613
    8. ')%' → logprob: -12.410290718078613
    9. '<|end|>' → logprob: -13.410290718078613
    10. '                       ' → logprob: -13.410290718078613

Token 1122: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.006715370807796717
    2. ' MOD' → logprob: -5.006715297698975
    3. '100' → logprob: -18.381715774536133
    4. '_MOD' → logprob: -19.506715774536133
    5. ' ' → logprob: -19.756715774536133
    6. '.MOD' → logprob: -20.256715774536133
    7. '```' → logprob: -21.631715774536133
    8. '   ' → logprob: -21.631715774536133
    9. '(M' → logprob: -23.006715774536133
    10. ' ' → logprob: -23.256715774536133

Token 1123: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01237708143889904
    2. '   ' → logprob: -5.5123772621154785
    3. '                   ' → logprob: -5.6373772621154785
    4. 'for' → logprob: -5.8873772621154785
    5. '               ' → logprob: -6.5123772621154785
    6. '
' → logprob: -8.76237678527832
    7. '           ' → logprob: -9.01237678527832
    8. 'union' → logprob: -10.01237678527832
    9. '```' → logprob: -10.26237678527832
    10. ' for' → logprob: -10.51237678527832

Token 1124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01645941659808159
    2. '   ' → logprob: -5.0164594650268555
    3. '               ' → logprob: -5.0164594650268555
    4. 'for' → logprob: -6.0164594650268555
    5. '```' → logprob: -8.266459465026855
    6. '
' → logprob: -9.016459465026855
    7. '                   ' → logprob: -9.016459465026855
    8. '           ' → logprob: -9.391459465026855
    9. ' for' → logprob: -10.641459465026855
    10. 'union' → logprob: -11.891459465026855

Token 1125: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01672660931944847
    2. '       ' → logprob: -4.141726493835449
    3. '#' (adapté à ' #') → logprob: -7.391726493835449
    4. '   ' → logprob: -9.89172649383545
    5. ' for' → logprob: -10.76672649383545
    6. '
' → logprob: -13.64172649383545
    7. '           ' → logprob: -13.76672649383545
    8. '        
' → logprob: -14.76672649383545
    9. '               ' → logprob: -14.89172649383545
    10. '	for' → logprob: -15.26672649383545

Token 1126: ' union' (ID: 22208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007012377609498799
    2. '       ' → logprob: -7.375701427459717
    3. '#' → logprob: -10.250700950622559
    4. ' for' → logprob: -10.750700950622559
    5. '   ' → logprob: -11.000700950622559
    6. '           ' → logprob: -15.000700950622559
    7. 'union' → logprob: -16.000701904296875
    8. '	for' → logprob: -16.000701904296875
    9. '
' → logprob: -16.375701904296875
    10. '               ' → logprob: -16.500701904296875

Token 1127: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25297024846076965
    2. ' for' → logprob: -1.7529702186584473
    3. '       ' → logprob: -3.1279702186584473
    4. 'edges' → logprob: -6.252970218658447
    5. '_edges' → logprob: -6.252970218658447
    6. '   ' → logprob: -7.127970218658447
    7. '
' → logprob: -8.002970695495605
    8. 'def' → logprob: -8.627970695495605
    9. ':' → logprob: -8.877970695495605
    10. ' edges' → logprob: -9.002970695495605

Token 1128: ' these' (ID: 1879)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03494654595851898
    2. 'edges' → logprob: -3.4099464416503906
    3. ' for' → logprob: -7.159946441650391
    4. 'c' → logprob: -9.40994644165039
    5. '   ' → logprob: -9.40994644165039
    6. '       ' → logprob: -9.65994644165039
    7. 'edge' → logprob: -9.78494644165039
    8. ' edges' → logprob: -10.03494644165039
    9. 'same' → logprob: -10.03494644165039
    10. 'nodes' → logprob: -10.28494644165039

Token 1129: ' components' (ID: 10674)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06400617957115173
    2. 'edges' → logprob: -3.8140060901641846
    3. 'roots' → logprob: -3.8140060901641846
    4. 'ar' → logprob: -4.564006328582764
    5. ' for' → logprob: -6.564006328582764
    6. 'comp' → logprob: -6.689006328582764
    7. ' edges' → logprob: -6.814006328582764
    8. 'root' → logprob: -7.314006328582764
    9. 'components' → logprob: -7.314006328582764
    10. 'u' → logprob: -7.439006328582764

Token 1130: ' by' (ID: 656)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0069992817007005215
    2. '       ' → logprob: -5.256999492645264
    3. ' for' → logprob: -6.381999492645264
    4. '   ' → logprob: -9.756999015808105
    5. '```' → logprob: -11.506999015808105
    6. '
' → logprob: -13.256999015808105
    7. '	for' → logprob: -14.381999015808105
    8. '``' → logprob: -14.381999015808105
    9. '           ' → logprob: -15.256999015808105
    10. 'roots' → logprob: -15.506999015808105

Token 1131: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3064654469490051
    2. 'edges' → logprob: -2.3064653873443604
    3. 'cost' → logprob: -3.0564653873443604
    4. 'c' → logprob: -3.3064653873443604
    5. 'union' → logprob: -3.3064653873443604
    6. 'same' → logprob: -3.8064653873443604
    7. 'the' → logprob: -4.8064656257629395
    8. ' for' → logprob: -6.0564656257629395
    9. 'find' → logprob: -6.0564656257629395
    10. '   ' → logprob: -6.1814656257629395

Token 1132: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03610336780548096
    2. '       ' → logprob: -4.036103248596191
    3. ' for' → logprob: -4.036103248596191
    4. '   ' → logprob: -9.411103248596191
    5. '```' → logprob: -11.286103248596191
    6. 'with' → logprob: -11.411103248596191
    7. '_for' → logprob: -12.411103248596191
    8. ':' → logprob: -13.036103248596191
    9. '=' → logprob: -13.161103248596191
    10. '	for' → logprob: -13.161103248596191

Token 1133: ' this' (ID: 495)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.17320461571216583
    2. 'cost' → logprob: -1.9232046604156494
    3. 'the' → logprob: -4.67320442199707
    4. ' same' → logprob: -6.29820442199707
    5. 'this' → logprob: -7.04820442199707
    6. ' cost' → logprob: -7.42320442199707
    7. ' the' → logprob: -8.67320442199707
    8. ' this' → logprob: -10.17320442199707
    9. '```' → logprob: -10.92320442199707
    10. '
' → logprob: -11.42320442199707

Token 1134: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.016436543315649033
    2. ' cost' → logprob: -4.141436576843262
    3. 'same' → logprob: -8.016436576843262
    4. '
' → logprob: -10.641436576843262
    5. '   ' → logprob: -11.141436576843262
    6. ' same' → logprob: -11.391436576843262
    7. '_cost' → logprob: -11.766436576843262
    8. '```' → logprob: -12.266436576843262
    9. ' ' → logprob: -13.391436576843262
    10. '  ' → logprob: -13.891436576843262

Token 1135: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04114929214119911
    2. '       ' → logprob: -3.291149377822876
    3. ' for' → logprob: -5.791149139404297
    4. '```' → logprob: -10.416149139404297
    5. '   ' → logprob: -11.291149139404297
    6. '
' → logprob: -12.791149139404297
    7. '	for' → logprob: -13.166149139404297
    8. '``' → logprob: -14.541149139404297
    9. '        
' → logprob: -14.916149139404297
    10. ' ' → logprob: -16.291149139404297

Token 1136: 'to' (ID: 935)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0051545388996601105
    2. ' for' → logprob: -5.755154609680176
    3. '       ' → logprob: -6.255154609680176
    4. ')' → logprob: -10.130154609680176
    5. ')
' → logprob: -12.505154609680176
    6. '   ' → logprob: -12.505154609680176
    7. '```' → logprob: -12.630154609680176
    8. '
' → logprob: -13.755154609680176
    9. '           ' → logprob: -14.255154609680176
    10. '):
' → logprob: -14.630154609680176

Token 1137: ' build' (ID: 3024)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6145948171615601
    2. 'continue' → logprob: -2.4895949363708496
    3. ' union' → logprob: -2.7395949363708496
    4. 'union' → logprob: -3.1145949363708496
    5. ' continue' → logprob: -3.2395949363708496
    6. ' unify' → logprob: -3.3645949363708496
    7. ' for' → logprob: -3.4895949363708496
    8. 'connect' → logprob: -3.7395949363708496
    9. ' unite' → logprob: -3.9895949363708496
    10. '_union' → logprob: -4.36459493637085

Token 1138: ' MST' (ID: 123058)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5287317037582397
    2. 'M' → logprob: -1.4037317037582397
    3. 'mst' → logprob: -3.6537318229675293
    4. 'parent' → logprob: -3.7787318229675293
    5. 'union' → logprob: -4.028731822967529
    6. 'minimum' → logprob: -4.028731822967529
    7. 'up' → logprob: -4.403731822967529
    8. 'a' → logprob: -4.528731822967529
    9. '```' → logprob: -4.778731822967529
    10. ' MST' → logprob: -4.903731822967529

Token 1139: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08083179593086243
    2. ')' → logprob: -3.33083176612854
    3. ' for' → logprob: -3.58083176612854
    4. ')
' → logprob: -4.455832004547119
    5. '       ' → logprob: -6.455832004547119
    6. 'edges' → logprob: -7.580832004547119
    7. ' edges' → logprob: -9.580831527709961
    8. '):
' → logprob: -9.580831527709961
    9. '```' → logprob: -9.955831527709961
    10. '   ' → logprob: -9.955831527709961

Token 1140: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006477446295320988
    2. ' for' → logprob: -8.12564754486084
    3. '       ' → logprob: -8.25064754486084
    4. '```' → logprob: -9.50064754486084
    5. '   ' → logprob: -11.25064754486084
    6. '``' → logprob: -13.50064754486084
    7. '
' → logprob: -14.37564754486084
    8. '	for' → logprob: -14.50064754486084
    9. 'from' → logprob: -15.75064754486084
    10. '        
' → logprob: -16.625648498535156

Token 1141: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00040099851321429014
    2. '       ' → logprob: -7.875401020050049
    3. ' for' → logprob: -10.87540054321289
    4. '   ' → logprob: -14.00040054321289
    5. '```' → logprob: -14.37540054321289
    6. '	for' → logprob: -15.50040054321289
    7. 'from' → logprob: -15.75040054321289
    8. '
' → logprob: -16.62540054321289
    9. 'j' → logprob: -17.62540054321289
    10. '``' → logprob: -17.75040054321289

Token 1142: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009296046569943428
    2. 'cost' → logprob: -5.00929594039917
    3. '_,' → logprob: -6.13429594039917
    4. ' c' → logprob: -8.259296417236328
    5. '(c' → logprob: -9.884296417236328
    6. '(_,' → logprob: -9.884296417236328
    7. '   ' → logprob: -10.884296417236328
    8. ' _,' → logprob: -11.509296417236328
    9. ' cost' → logprob: -12.134296417236328
    10. '```' → logprob: -12.884296417236328

Token 1143: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.02689683996140957
    2. ',' → logprob: -3.6518969535827637
    3. ',s' → logprob: -8.526896476745605
    4. ' ,' → logprob: -9.151896476745605
    5. 'a' → logprob: -9.276896476745605
    6. ' in' → logprob: -9.526896476745605
    7. ',c' → logprob: -10.026896476745605
    8. ',b' → logprob: -10.401896476745605
    9. 'in' → logprob: -11.401896476745605
    10. '_,' → logprob: -11.651896476745605

Token 1144: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -5.621933451038785e-05
    2. ',' → logprob: -10.000056266784668
    3. 'b' → logprob: -11.500056266784668
    4. ' ,' → logprob: -15.000056266784668
    5. ',a' → logprob: -15.625056266784668
    6. ',_' → logprob: -16.37505531311035
    7. ',s' → logprob: -17.50005531311035
    8. ',c' → logprob: -17.75005531311035
    9. ',n' → logprob: -18.25005531311035
    10. ',v' → logprob: -19.00005531311035

Token 1145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05488792434334755
    2. 'in' → logprob: -2.9298880100250244
    3. '   ' → logprob: -12.929887771606445
    4. ',' → logprob: -13.554887771606445
    5. ' ' → logprob: -14.429887771606445
    6. '```' → logprob: -15.429887771606445
    7. '_in' → logprob: -15.429887771606445
    8. '	in' → logprob: -15.554887771606445
    9. '
' → logprob: -15.804887771606445
    10. 'In' → logprob: -16.304887771606445

Token 1146: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.00043937109876424074
    2. ' same' → logprob: -7.750439167022705
    3. '   ' → logprob: -11.875439643859863
    4. 'edge' → logprob: -14.250439643859863
    5. 'edges' → logprob: -15.500439643859863
    6. 'c' → logprob: -15.750439643859863
    7. ' ' → logprob: -16.000438690185547
    8. 'cost' → logprob: -16.250438690185547
    9. '
' → logprob: -16.250438690185547
    10. 'a' → logprob: -16.500438690185547

Token 1147: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00866018608212471
    2. 'cost' → logprob: -4.758660316467285
    3. 'same' → logprob: -10.008660316467285
    4. 'Cost' → logprob: -14.883660316467285
    5. ' cost' → logprob: -16.75865936279297
    6. '_COST' → logprob: -17.25865936279297
    7. '_same' → logprob: -17.50865936279297
    8. '_c' → logprob: -17.75865936279297
    9. '
' → logprob: -17.75865936279297
    10. 'const' → logprob: -17.88365936279297

Token 1148: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.20201732218265533
    2. '_cost' → logprob: -2.077017307281494
    3. 'edges' → logprob: -3.202017307281494
    4. 'same' → logprob: -4.452017307281494
    5. 's' → logprob: -5.827017307281494
    6. '_same' → logprob: -7.327017307281494
    7. 'cost' → logprob: -7.702017307281494
    8. 'list' → logprob: -8.452017784118652
    9. '   ' → logprob: -8.577017784118652
    10. '_list' → logprob: -8.952017784118652

Token 1149: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.016859183087944984
    2. ':' → logprob: -4.14185905456543
    3. '   ' → logprob: -7.64185905456543
    4. '       ' → logprob: -8.26685905456543
    5. '):
' → logprob: -10.26685905456543
    6. ':
' → logprob: -11.26685905456543
    7. '.union' → logprob: -11.26685905456543
    8. ' union' → logprob: -11.76685905456543
    9. ',' → logprob: -11.89185905456543
    10. ':

' → logprob: -12.39185905456543

Token 1150: '           ' (ID: 352)
  Prédit: ' union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.7280871272087097
    2. '   ' → logprob: -1.3530871868133545
    3. 'union' → logprob: -1.6030871868133545
    4. '       ' → logprob: -2.9780871868133545
    5. '           ' → logprob: -5.228086948394775
    6. '.union' → logprob: -7.978086948394775
    7. '```' → logprob: -8.353087425231934
    8. '	union' → logprob: -8.478087425231934
    9. '
' → logprob: -9.103087425231934
    10. ' if' → logprob: -9.353087425231934

Token 1151: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' (adapté à ' union') → logprob: -0.005447316449135542
    2. '   ' → logprob: -5.2554473876953125
    3. ' union' → logprob: -8.505447387695312
    4. '       ' → logprob: -12.130447387695312
    5. '           ' → logprob: -12.255447387695312
    6. '	union' → logprob: -14.505447387695312
    7. '.union' → logprob: -15.880447387695312
    8. '               ' → logprob: -16.255447387695312
    9. '  ' → logprob: -16.630447387695312
    10. 'un' → logprob: -16.755447387695312

Token 1152: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.000918604782782495
    2. 'parent' → logprob: -7.000918388366699
    3. ' parent' → logprob: -12.2509183883667
    4. ',parent' → logprob: -13.3759183883667
    5. '(' → logprob: -14.8759183883667
    6. '[parent' → logprob: -15.3759183883667
    7. '```' → logprob: -16.500919342041016
    8. '	parent' → logprob: -17.000919342041016
    9. '(paren' → logprob: -17.250919342041016
    10. ' (' → logprob: -17.375919342041016

Token 1153: ',size' (ID: 86319)
  Prédit: ',size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',size' → logprob: -0.48182550072669983
    2. ',' → logprob: -0.9818254709243774
    3. 'size' → logprob: -5.481825351715088
    4. ',parent' → logprob: -5.731825351715088
    5. 'parent' → logprob: -8.731825828552246
    6. '(size' → logprob: -8.856825828552246
    7. '(parent' → logprob: -12.356825828552246
    8. ' ,' → logprob: -12.606825828552246
    9. ' size' → logprob: -12.981825828552246
    10. '```' → logprob: -14.481825828552246

Token 1154: ',a' (ID: 26776)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.45376962423324585
    2. ',' → logprob: -1.7037696838378906
    3. ',parent' → logprob: -1.7037696838378906
    4. ' parent' → logprob: -7.578769683837891
    5. '(parent' → logprob: -8.45376968383789
    6. ' ,' → logprob: -9.95376968383789
    7. '[parent' → logprob: -12.95376968383789
    8. '	parent' → logprob: -14.32876968383789
    9. ',p' → logprob: -14.32876968383789
    10. '```' → logprob: -14.32876968383789

Token 1155: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0077340384013950825
    2. ',' → logprob: -4.8827338218688965
    3. 'b' → logprob: -9.007734298706055
    4. ' ,' → logprob: -12.382734298706055
    5. ',
' → logprob: -14.632734298706055
    6. ',y' → logprob: -16.132734298706055
    7. '   ' → logprob: -16.257734298706055
    8. ' b' → logprob: -16.257734298706055
    9. ',B' → logprob: -16.882734298706055
    10. ',a' → logprob: -16.882734298706055

Token 1156: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -12.87500286102295
    3. ' )' → logprob: -15.50000286102295
    4. ')return' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.875003814697266
    6. '<|end|>' → logprob: -17.250003814697266
    7. '))' → logprob: -17.875003814697266
    8. '),' → logprob: -18.625003814697266
    9. '())' → logprob: -18.750003814697266
    10. '       ' → logprob: -19.000003814697266

Token 1157: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1158: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.8789383830153383e-05
    2. '```' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.750019073486328
    4. '
' → logprob: -14.000019073486328
    5. '``' → logprob: -16.625019073486328
    6. ' print' → logprob: -17.250019073486328
    7. '    
' → logprob: -18.375019073486328
    8. '`' → logprob: -19.000019073486328
    9. 'sys' → logprob: -20.625019073486328
    10. '  
' → logprob: -21.250019073486328

Token 1159: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.816093228830141e-06
    2. '((' → logprob: -13.25000286102295
    3. '(w' → logprob: -14.62500286102295
    4. 'ways' → logprob: -15.37500286102295
    5. ' (' → logprob: -15.87500286102295
    6. '(f' → logprob: -16.625001907348633
    7. '(len' → logprob: -17.125001907348633
    8. '(str' → logprob: -17.375001907348633
    9. '()' → logprob: -17.500001907348633
    10. '(sum' → logprob: -17.750001907348633

Token 1160: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.375
    3. 'way' → logprob: -17.125
    4. ' ways' → logprob: -20.5
    5. 'WAYS' → logprob: -20.5
    6. 'w' → logprob: -22.625
    7. '1' → logprob: -22.75
    8. 'words' → logprob: -22.875
    9. '   ' → logprob: -23.0
    10. '0' → logprob: -23.0

Token 1161: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017428892897441983
    2. '()' → logprob: -7.001742839813232
    3. '())' → logprob: -7.126742839813232
    4. '(' → logprob: -10.75174331665039
    5. ' )' → logprob: -12.75174331665039
    6. '```' → logprob: -13.62674331665039
    7. ')
' → logprob: -14.37674331665039
    8. '   ' → logprob: -14.62674331665039
    9. '**' → logprob: -15.25174331665039
    10. ')`' → logprob: -15.75174331665039

Token 1162: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.5928495486150496e-05
    2. '100' → logprob: -11.250016212463379
    3. ' MOD' → logprob: -12.750016212463379
    4. '.MOD' → logprob: -20.250015258789062
    5. '_MOD' → logprob: -20.375015258789062
    6. '(M' → logprob: -22.250015258789062
    7. 'MO' → logprob: -22.625015258789062
    8. ' ' → logprob: -22.750015258789062
    9. '```' → logprob: -22.875015258789062
    10. '(mod' → logprob: -23.000015258789062

Token 1163: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6047699318733066e-05
    2. '())' → logprob: -11.875016212463379
    3. '()' → logprob: -12.000016212463379
    4. ')
' → logprob: -13.375016212463379
    5. ' )' → logprob: -14.000016212463379
    6. '```' → logprob: -15.750016212463379
    7. '))' → logprob: -16.000015258789062
    8. '(' → logprob: -16.500015258789062
    9. '`)' → logprob: -16.625015258789062
    10. ')`' → logprob: -17.125015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1161
Tokens correctement prédits (1ère position, stricte): 426
Tokens correctement prédits (1ère position, avec adaptation): 472
Tokens correctement prédits (top 10): 929
Précision stricte (1ère position): 36.69%
Précision adaptée (1ère position): 40.65%
Précision (top 10): 80.02%
================================================================================
