================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calc(expr):
    def precedence(op):
        if op in ('+', '-'): return 1
        if op in ('*', '/'): return 2
        return 0

    def apply_op(a, b, op):
        if op == '+': return a + b
        if op == '-': return a - b
        if op == '*': return a * b
        if op == '/': return int(a / b)  # truncate toward zero

    values, ops = [], []
    i, n = 0, len(expr)
    while i < n:
        c = expr[i]
        if c.isdigit():
            val = 0
            while i < n and expr[i].isdigit():
                val = val * 10 + int(expr[i])
                i += 1
            values.append(val)
            continue
        elif c == '(':
            ops.append(c)
        elif c == ')':
            while ops and ops[-1] != '(':
                b, a = values.pop(), values.pop()
                values.append(apply_op(a, b, ops.pop()))
            ops.pop()
        elif c in "+-*/":
            while ops and precedence(ops[-1]) >= precedence(c):
                b, a = values.pop(), values.pop()
                values.append(apply_op(a, b, ops.pop()))
            ops.append(c)
        elif c == '=':
            while ops:
                b, a = values.pop(), values.pop()
                values.append(apply_op(a, b, ops.pop()))
            return values[0]
        i += 1

n = int(input())
for _ in range(n):
    print(calc(input()))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calc' (ID: 25691)
  → Token d'amorce (pas de prédiction)

Token 2: '(expr' (ID: 78746)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2567250430583954
    2. ')' → logprob: -1.5067250728607178
    3. '[' → logprob: -6.256724834442139
    4. ':' → logprob: -6.506724834442139
    5. '(' → logprob: -7.506724834442139
    6. '):
' → logprob: -7.881724834442139
    7. '**' → logprob: -10.006725311279297
    8. '```' → logprob: -10.006725311279297
    9. ''):' → logprob: -10.256725311279297
    10. '.' → logprob: -10.256725311279297

Token 4: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.929334282875061
    2. '(' → logprob: -1.429334282875061
    3. ''' → logprob: -1.679334282875061
    4. ':' → logprob: -2.0543341636657715
    5. '```' → logprob: -3.8043341636657715
    6. '"' → logprob: -4.8043341636657715
    7. ' return' → logprob: -5.8043341636657715
    8. '    ' → logprob: -6.0543341636657715
    9. ''''' → logprob: -6.1793341636657715
    10. '\' → logprob: -6.4293341636657715

Token 5: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2828507125377655
    2. '   ' → logprob: -1.907850742340088
    3. ' return' → logprob: -3.282850742340088
    4. '(' → logprob: -3.657850742340088
    5. ''' → logprob: -4.782850742340088
    6. '    ' → logprob: -4.907850742340088
    7. 'return' → logprob: -5.282850742340088
    8. '`' → logprob: -6.157850742340088
    9. 'r' → logprob: -6.282850742340088
    10. '  ' → logprob: -6.282850742340088

Token 6: ' precedence' (ID: 120000)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0107621094211936
    2. '_' → logprob: -5.5107622146606445
    3. ' space' → logprob: -6.0107622146606445
    4. ' _' → logprob: -6.3857622146606445
    5. ' calculate' → logprob: -8.135762214660645
    6. '`' → logprob: -8.260762214660645
    7. ' a' → logprob: -8.260762214660645
    8. ' n' → logprob: -9.010762214660645
    9. ' result' → logprob: -9.010762214660645
    10. ''' → logprob: -9.135762214660645

Token 7: '(op' (ID: 34275)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01566430740058422
    2. '(token' → logprob: -4.390664100646973
    3. ' (' → logprob: -6.640664100646973
    4. '(tokens' → logprob: -8.890664100646973
    5. ' ' → logprob: -9.015664100646973
    6. '(Token' → logprob: -9.140664100646973
    7. '<|end|>' → logprob: -9.140664100646973
    8. '('' → logprob: -9.265664100646973
    9. '(x' → logprob: -9.390664100646973
    10. '_tokens' → logprob: -9.390664100646973

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005619212053716183
    2. ')' → logprob: -5.380619049072266
    3. '):
' → logprob: -7.630619049072266
    4. ':' → logprob: -8.505619049072266
    5. '_' → logprob: -8.880619049072266
    6. ' ):' → logprob: -9.380619049072266
    7. '():' → logprob: -10.880619049072266
    8. '   ' → logprob: -11.255619049072266
    9. ''):' → logprob: -11.505619049072266
    10. ' ' → logprob: -11.755619049072266

Token 9: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.580708384513855
    2. '):' → logprob: -1.455708384513855
    3. ':' → logprob: -2.4557085037231445
    4. '   ' → logprob: -3.3307085037231445
    5. ''' → logprob: -3.9557085037231445
    6. '       ' → logprob: -4.5807085037231445
    7. ')' → logprob: -4.7057085037231445
    8. ' ' → logprob: -4.8307085037231445
    9. ' :' → logprob: -4.8307085037231445
    10. '    ' → logprob: -4.9557085037231445

Token 10: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2465912401676178
    2. '   ' → logprob: -2.496591329574585
    3. ' ' → logprob: -2.621591329574585
    4. ' if' → logprob: -3.246591329574585
    5. '           ' → logprob: -4.496591091156006
    6. ' return' → logprob: -6.246591091156006
    7. 'if' (adapté à ' if') → logprob: -6.371591091156006
    8. '  ' → logprob: -6.496591091156006
    9. '```' → logprob: -6.746591091156006
    10. '    ' → logprob: -6.871591091156006

Token 11: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.0003420183784328401
    2. 'op' → logprob: -9.00034236907959
    3. ' not' → logprob: -9.25034236907959
    4. ' ' → logprob: -9.37534236907959
    5. '(op' → logprob: -10.75034236907959
    6. '	op' → logprob: -11.87534236907959
    7. ' (' → logprob: -12.87534236907959
    8. '  ' → logprob: -13.00034236907959
    9. ' ' → logprob: -13.37534236907959
    10. '_op' → logprob: -14.87534236907959

Token 12: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26590096950531006
    2. ' in' → logprob: -1.64090096950531
    3. '==' → logprob: -3.2659010887145996
    4. ' ' → logprob: -6.7659010887146
    5. 'in' → logprob: -9.515900611877441
    6. '[' → logprob: -9.515900611877441
    7. '=='' → logprob: -9.640900611877441
    8. ' =='' → logprob: -10.015900611877441
    9. '=' → logprob: -10.515900611877441
    10. ' =="' → logprob: -11.390900611877441

Token 13: ' ('' (ID: 9906)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.7767139673233032
    2. ''' → logprob: -1.4017139673233032
    3. '['' → logprob: -1.6517139673233032
    4. ' {'' → logprob: -3.5267138481140137
    5. ' ['' → logprob: -4.026713848114014
    6. '('' → logprob: -4.026713848114014
    7. ' ('' → logprob: -4.401713848114014
    8. '{'' → logprob: -4.526713848114014
    9. '"' → logprob: -5.401713848114014
    10. ' '+' → logprob: -5.651713848114014

Token 14: '+',' (ID: 141314)
  Prédit: '+-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+-' → logprob: -0.40632393956184387
    2. '+' → logprob: -1.1563239097595215
    3. ''+' → logprob: -4.0313239097595215
    4. '*' → logprob: -7.5313239097595215
    5. '+,' → logprob: -7.9063239097595215
    6. ''' → logprob: -8.28132438659668
    7. '+'' → logprob: -9.03132438659668
    8. '*/' → logprob: -9.53132438659668
    9. ''*' → logprob: -9.90632438659668
    10. '+',' → logprob: -9.90632438659668

Token 15: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.04218457266688347
    2. ''' → logprob: -4.167184352874756
    3. ' '-')' → logprob: -4.292184352874756
    4. ' '-' → logprob: -4.542184352874756
    5. '-' → logprob: -7.042184352874756
    6. ' '' → logprob: -8.167184829711914
    7. ' ' → logprob: -8.667184829711914
    8. ' '-'' → logprob: -10.042184829711914
    9. '   ' → logprob: -10.042184829711914
    10. '  ' → logprob: -10.917184829711914

Token 16: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.29569804668426514
    2. '):' → logprob: -1.9206980466842651
    3. ''):
' → logprob: -2.4206981658935547
    4. ')' → logprob: -4.795698165893555
    5. '):
' → logprob: -4.795698165893555
    6. '')' → logprob: -5.795698165893555
    7. ''):
' → logprob: -7.545698165893555
    8. ' '' → logprob: -9.045698165893555
    9. ':' → logprob: -9.420698165893555
    10. '   ' → logprob: -9.670698165893555

Token 17: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3859761655330658
    2. ' return' → logprob: -2.3859760761260986
    3. '1' → logprob: -3.1359760761260986
    4. ':return' → logprob: -3.2609760761260986
    5. '       ' → logprob: -3.5109760761260986
    6. ':' → logprob: -3.5109760761260986
    7. '<|end|>' → logprob: -3.5109760761260986
    8. 'return' → logprob: -4.135976314544678
    9. '0' → logprob: -4.760976314544678
    10. ' ' → logprob: -4.760976314544678

Token 18: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34846076369285583
    2. ' ' → logprob: -1.2234607934951782
    3. '0' → logprob: -11.598461151123047
    4. '2' → logprob: -12.973461151123047
    5. ''' → logprob: -13.223461151123047
    6. '10' → logprob: -14.223461151123047
    7. ' '' → logprob: -14.348461151123047
    8. '  ' → logprob: -14.973461151123047
    9. '   ' → logprob: -15.223461151123047
    10. '(' → logprob: -15.223461151123047

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.792751032160595e-05
    2. ' ' → logprob: -9.37508773803711
    3. ''' → logprob: -13.62508773803711
    4. '   ' → logprob: -14.12508773803711
    5. '0' → logprob: -15.00008773803711
    6. '2' → logprob: -15.37508773803711
    7. '  ' → logprob: -16.12508773803711
    8. '10' → logprob: -16.12508773803711
    9. '    ' → logprob: -16.62508773803711
    10. ' '' → logprob: -17.43758773803711

Token 20: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12583456933498383
    2. '
' → logprob: -2.3758344650268555
    3. '   ' → logprob: -4.5008344650268555
    4. '    
' → logprob: -5.5008344650268555
    5. '<|end|>' → logprob: -5.6258344650268555
    6. '        
' → logprob: -5.8758344650268555
    7. '  
' → logprob: -7.1258344650268555
    8. '    ' → logprob: -7.8758344650268555
    9. '        ' → logprob: -8.250834465026855
    10. ' ' → logprob: -8.250834465026855

Token 21: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.663115382194519
    2. '   ' → logprob: -1.663115382194519
    3. '       ' → logprob: -1.913115382194519
    4. '    
' → logprob: -2.5381155014038086
    5. '<|end|>' → logprob: -3.9131155014038086
    6. '  
' → logprob: -4.413115501403809
    7. '        
' → logprob: -4.913115501403809
    8. 'elif' → logprob: -5.413115501403809
    9. '\n' → logprob: -5.663115501403809
    10. ' ' → logprob: -5.663115501403809

Token 22: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022179778665304184
    2. '2' → logprob: -4.39717960357666
    3. '   ' → logprob: -5.52217960357666
    4. 'elif' → logprob: -6.27217960357666
    5. '4' → logprob: -6.52217960357666
    6. '
' → logprob: -7.39717960357666
    7. '        
' → logprob: -8.14717960357666
    8. ' ' → logprob: -8.14717960357666
    9. '1' → logprob: -8.89717960357666
    10. '    
' → logprob: -9.14717960357666

Token 23: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.028033798560500145
    2. 'op' → logprob: -3.77803373336792
    3. '(op' → logprob: -5.40303373336792
    4. ' (' → logprob: -9.278034210205078
    5. ' in' → logprob: -9.403034210205078
    6. ' ' → logprob: -9.653034210205078
    7. ' ('' → logprob: -12.403034210205078
    8. ' '*'' → logprob: -12.403034210205078
    9. '('*' → logprob: -12.528034210205078
    10. ''op' → logprob: -12.653034210205078

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016266733407974243
    2. 'in' → logprob: -4.141266822814941
    3. ' ' → logprob: -8.766266822814941
    4. '*' → logprob: -9.766266822814941
    5. '('*' → logprob: -12.891266822814941
    6. ' *' → logprob: -13.016266822814941
    7. ' ==' → logprob: -13.016266822814941
    8. '  ' → logprob: -13.516266822814941
    9. '['' → logprob: -13.641266822814941
    10. 'In' → logprob: -13.641266822814941

Token 25: ' ('' (ID: 9906)
  Prédit: ' (''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ('' → logprob: -0.638606071472168
    2. '('*' → logprob: -0.763606071472168
    3. '('' → logprob: -5.138606071472168
    4. '(' → logprob: -10.138606071472168
    5. ''*' → logprob: -10.263606071472168
    6. ' ' → logprob: -11.013606071472168
    7. '('/',' → logprob: -12.388606071472168
    8. '("*' → logprob: -12.763606071472168
    9. '{'' → logprob: -12.763606071472168
    10. '   ' → logprob: -12.888606071472168

Token 26: '*' (ID: 9)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -1.282920129597187e-05
    2. '*,' → logprob: -12.125012397766113
    3. '*' → logprob: -12.500012397766113
    4. ''' → logprob: -13.000012397766113
    5. ' '*' → logprob: -14.500012397766113
    6. '('*' → logprob: -14.875012397766113
    7. '"*' → logprob: -15.000012397766113
    8. ''',' → logprob: -16.75001335144043
    9. '',' → logprob: -17.37501335144043
    10. ''s' → logprob: -17.50001335144043

Token 27: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035898447036743164
    2. '',' → logprob: -3.660898447036743
    3. ' ,' → logprob: -4.660898208618164
    4. ' ',' → logprob: -9.535898208618164
    5. '','' → logprob: -11.785898208618164
    6. '*,' → logprob: -12.035898208618164
    7. ''*' → logprob: -12.785898208618164
    8. ''',' → logprob: -13.285898208618164
    9. ','' → logprob: -13.410898208618164
    10. '   ' → logprob: -14.910898208618164

Token 28: ' '/' (ID: 7041)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2631004750728607
    2. ''/' → logprob: -1.513100504875183
    3. ' '/')' → logprob: -4.763100624084473
    4. ' '' → logprob: -7.138100624084473
    5. ' '/',' → logprob: -7.388100624084473
    6. ' ' → logprob: -8.013100624084473
    7. ' '/' → logprob: -8.138100624084473
    8. '   ' → logprob: -8.763100624084473
    9. '/' → logprob: -9.013100624084473
    10. ' '/'' → logprob: -9.263100624084473

Token 29: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.0077332076616585255
    2. '):' → logprob: -4.882733345031738
    3. '')' → logprob: -10.257733345031738
    4. ''):
' → logprob: -10.757733345031738
    5. '*' → logprob: -10.882733345031738
    6. '   ' → logprob: -11.382733345031738
    7. ''' → logprob: -11.882733345031738
    8. ')' → logprob: -11.882733345031738
    9. ',' → logprob: -12.132733345031738
    10. ' '' → logprob: -12.257733345031738

Token 30: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14726030826568604
    2. '2' → logprob: -2.0222601890563965
    3. ' return' → logprob: -5.5222601890563965
    4. 'return' → logprob: -7.6472601890563965
    5. '       ' → logprob: -9.772260665893555
    6. '        ' → logprob: -11.022260665893555
    7. ' ' → logprob: -12.022260665893555
    8. '           ' → logprob: -12.147260665893555
    9. '   ' → logprob: -12.397260665893555
    10. '    ' → logprob: -12.647260665893555

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.251930296421051
    2. '2' → logprob: -1.5019302368164062
    3. '   ' → logprob: -14.626930236816406
    4. ' ' → logprob: -15.689430236816406
    5. '    ' → logprob: -16.189430236816406
    6. '1' → logprob: -16.376930236816406
    7. '```' → logprob: -17.189430236816406
    8. '10' → logprob: -17.314430236816406
    9. '        ' → logprob: -17.439430236816406
    10. '       ' → logprob: -17.626930236816406

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.75008487701416
    4. '1' → logprob: -18.750085830688477
    5. '۲' → logprob: -19.000085830688477
    6. '```' → logprob: -19.000085830688477
    7. '       ' → logprob: -19.125085830688477
    8. '    ' → logprob: -19.250085830688477
    9. '  ' → logprob: -19.250085830688477
    10. '*' → logprob: -19.625085830688477

Token 33: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01807197369635105
    2. '
' → logprob: -4.518072128295898
    3. '   ' → logprob: -5.143072128295898
    4. '<|end|>' → logprob: -7.768072128295898
    5. 'return' → logprob: -8.643072128295898
    6. '    
' → logprob: -9.268072128295898
    7. ' return' → logprob: -9.393072128295898
    8. '           ' → logprob: -9.643072128295898
    9. '    ' → logprob: -10.268072128295898
    10. '        
' → logprob: -10.268072128295898

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021782100200653076
    2. '
' → logprob: -3.896782159805298
    3. '   ' → logprob: -7.021781921386719
    4. 'return' → logprob: -9.521781921386719
    5. ' return' → logprob: -9.771781921386719
    6. '```' → logprob: -10.146781921386719
    7. '	' → logprob: -10.646781921386719
    8. '
' → logprob: -10.646781921386719
    9. '<|end|>' → logprob: -10.646781921386719
    10. '           ' → logprob: -10.771781921386719

Token 35: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03303254023194313
    2. '   ' → logprob: -3.9080326557159424
    3. 'return' (adapté à ' return') → logprob: -4.658032417297363
    4. ' return' → logprob: -7.033032417297363
    5. '0' → logprob: -7.408032417297363
    6. '4' → logprob: -8.283032417297363
    7. '           ' → logprob: -8.408032417297363
    8. '1' → logprob: -8.783032417297363
    9. '3' → logprob: -8.908032417297363
    10. ' ' → logprob: -9.158032417297363

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006548931705765426
    2. ' ' → logprob: -7.375654697418213
    3. '3' → logprob: -10.500655174255371
    4. ' -' → logprob: -15.250655174255371
    5. '-' → logprob: -15.750655174255371
    6. '   ' → logprob: -16.500654220581055
    7. 'float' → logprob: -16.500654220581055
    8. '  ' → logprob: -16.625654220581055
    9. '999' → logprob: -16.750654220581055
    10. 'None' → logprob: -17.625654220581055

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.869017852295656e-06
    2. '3' → logprob: -12.000006675720215
    3. '-' → logprob: -15.000006675720215
    4. ' ' → logprob: -15.625006675720215
    5. 'float' → logprob: -16.37500762939453
    6. '999' → logprob: -17.25000762939453
    7. 'None' → logprob: -19.00000762939453
    8. ' -' → logprob: -19.25000762939453
    9. '100' → logprob: -19.37500762939453
    10. '```' → logprob: -21.00000762939453

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05586332082748413
    2. '   ' → logprob: -3.930863380432129
    3. '    
' → logprob: -4.055863380432129
    4. '<|end|>' → logprob: -4.805863380432129
    5. '\n' → logprob: -5.930863380432129
    6. 'newline' → logprob: -6.555863380432129
    7. ' 
' → logprob: -6.680863380432129
    8. '' → logprob: -6.805863380432129
    9. '  
' → logprob: -7.055863380432129
    10. '

' → logprob: -7.680863380432129

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10436929017305374
    2. '    
' → logprob: -2.7293694019317627
    3. ' 
' → logprob: -4.354369163513184
    4. ' ' → logprob: -4.979369163513184
    5. '  
' → logprob: -5.854369163513184
    6. '\n' → logprob: -5.979369163513184
    7. '
' → logprob: -6.104369163513184
    8. '   
' → logprob: -6.229369163513184
    9. ' \' → logprob: -6.979369163513184
    10. '\' → logprob: -7.354369163513184

Token 40: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014620713889598846
    2. '       ' → logprob: -5.514620780944824
    3. 'stack' → logprob: -5.764620780944824
    4. '    ' → logprob: -6.389620780944824
    5. '    
' → logprob: -7.014620780944824
    6. ' stack' → logprob: -7.139620780944824
    7. ' ' → logprob: -7.139620780944824
    8. ' if' → logprob: -7.264620780944824
    9. 'if' → logprob: -8.139620780944824
    10. 'i' → logprob: -8.389620780944824

Token 41: ' apply' (ID: 6096)
  Prédit: ' apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apply' → logprob: -0.43777695298194885
    2. 'apply' → logprob: -1.1877769231796265
    3. ' evaluate' → logprob: -3.437777042388916
    4. 'evaluate' → logprob: -4.437777042388916
    5. ' tokenize' → logprob: -6.562777042388916
    6. ' calculate' → logprob: -6.562777042388916
    7. 'calculate' → logprob: -6.937777042388916
    8. ' is' → logprob: -7.812777042388916
    9. 'eval' → logprob: -8.187776565551758
    10. ' calc' → logprob: -8.562776565551758

Token 42: '_op' (ID: 20111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038288895040750504
    2. '(op' → logprob: -3.9132888317108154
    3. ' (' → logprob: -4.7882890701293945
    4. '_operator' → logprob: -5.5382890701293945
    5. '_op' → logprob: -5.9132890701293945
    6. '(operator' → logprob: -6.2882890701293945
    7. '_' → logprob: -8.663289070129395
    8. '(Op' → logprob: -8.663289070129395
    9. '<|end|>' → logprob: -9.413289070129395
    10. '_operation' → logprob: -9.663289070129395

Token 43: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2756887376308441
    2. ' (' → logprob: -1.5256887674331665
    3. '(op' → logprob: -3.775688648223877
    4. '(operator' → logprob: -7.525688648223877
    5. '(operation' → logprob: -12.400689125061035
    6. ' ' → logprob: -12.525689125061035
    7. '(Op' → logprob: -13.025689125061035
    8. '(
' → logprob: -13.650689125061035
    9. ')' → logprob: -13.900689125061035
    10. '(OP' → logprob: -14.025689125061035

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05489277467131615
    2. ' ,' → logprob: -2.9298927783966064
    3. ',b' → logprob: -12.429892539978027
    4. ',a' → logprob: -12.929892539978027
    5. ' ' → logprob: -13.679892539978027
    6. ',p' → logprob: -14.179892539978027
    7. ',u' → logprob: -15.554892539978027
    8. ',int' → logprob: -15.679892539978027
    9. ',user' → logprob: -15.679892539978027
    10. '<|end|>' → logprob: -15.804892539978027

Token 45: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16088393330574036
    2. ' b' → logprob: -1.910883903503418
    3. 'op' → logprob: -7.910883903503418
    4. ' op' → logprob: -8.160883903503418
    5. ' ' → logprob: -12.160883903503418
    6. 'o' → logprob: -15.160883903503418
    7. '>b' → logprob: -15.410883903503418
    8. '<|end|>' → logprob: -15.410883903503418
    9. '	op' → logprob: -15.535883903503418
    10. ')b' → logprob: -15.660883903503418

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5597102396423e-05
    2. ' ,' → logprob: -10.250035285949707
    3. '‌,' → logprob: -16.250036239624023
    4. '<|end|>' → logprob: -17.375036239624023
    5. ')' → logprob: -17.750036239624023
    6. ',

' → logprob: -17.875036239624023
    7. ' ' → logprob: -18.125036239624023
    8. '،' → logprob: -18.500036239624023
    9. '*,' → logprob: -18.625036239624023
    10. '，' → logprob: -19.000036239624023

Token 47: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.00674142362549901
    2. 'op' → logprob: -5.006741523742676
    3. '	op' → logprob: -11.131741523742676
    4. ' ' → logprob: -11.756741523742676
    5. '(op' → logprob: -13.506741523742676
    6. ')' → logprob: -13.756741523742676
    7. '_op' → logprob: -15.131741523742676
    8. '.op' → logprob: -15.631741523742676
    9. '  ' → logprob: -16.00674057006836
    10. ' ' → logprob: -16.13174057006836

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009217040496878326
    2. ')' → logprob: -7.000921726226807
    3. ' ):' → logprob: -12.375921249389648
    4. '):
' → logprob: -12.750921249389648
    5. ':' → logprob: -12.875921249389648
    6. ''):' → logprob: -15.875921249389648
    7. '   ' → logprob: -16.37592124938965
    8. ')：' → logprob: -16.62592124938965
    9. ' ' → logprob: -17.37592124938965
    10. '=' → logprob: -17.37592124938965

Token 49: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24182553589344025
    2. '       ' → logprob: -2.116825580596924
    3. '):' → logprob: -2.616825580596924
    4. '   ' → logprob: -4.616825580596924
    5. ' :' → logprob: -4.991825580596924
    6. ':return' → logprob: -6.491825580596924
    7. ')' → logprob: -6.741825580596924
    8. '<|end|>' → logprob: -7.616825580596924
    9. '#' → logprob: -8.616825103759766
    10. '      ' → logprob: -8.991825103759766

Token 50: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3076096177101135
    2. '   ' → logprob: -1.6826095581054688
    3. ' ' → logprob: -2.9326095581054688
    4. '    ' → logprob: -4.432609558105469
    5. ' if' → logprob: -5.057609558105469
    6. ':' → logprob: -6.182609558105469
    7. 'if' (adapté à ' if') → logprob: -6.682609558105469
    8. '  ' → logprob: -6.807609558105469
    9. '<|end|>' → logprob: -6.807609558105469
    10. ' :' → logprob: -7.932609558105469

Token 51: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.003219422185793519
    2. 'op' → logprob: -5.8782196044921875
    3. ' ' → logprob: -7.8782196044921875
    4. '	op' → logprob: -11.378219604492188
    5. '(op' → logprob: -11.378219604492188
    6. '  ' → logprob: -12.253219604492188
    7. ' ' → logprob: -12.378219604492188
    8. '<|end|>' → logprob: -14.128219604492188
    9. ' o' → logprob: -14.753219604492188
    10. '.op' → logprob: -14.753219604492188

Token 52: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016062406823039055
    2. '==' → logprob: -4.141062259674072
    3. ' =='' → logprob: -11.89106273651123
    4. '=='' → logprob: -12.14106273651123
    5. ' ' → logprob: -12.51606273651123
    6. ')' → logprob: -13.26606273651123
    7. ' ===' → logprob: -13.26606273651123
    8. '=' → logprob: -13.39106273651123
    9. '[' → logprob: -13.51606273651123
    10. '  ' → logprob: -13.51606273651123

Token 53: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003357728011906147
    2. ''+' → logprob: -5.878357887268066
    3. ' '+'' → logprob: -7.878357887268066
    4. '+' → logprob: -9.628357887268066
    5. '"' → logprob: -10.003357887268066
    6. ' '' → logprob: -10.378357887268066
    7. '"+"' → logprob: -12.003357887268066
    8. '(' → logprob: -12.753357887268066
    9. ''>' → logprob: -12.878357887268066
    10. ''a' → logprob: -12.878357887268066

Token 54: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11795985698699951
    2. '':' → logprob: -2.492959976196289
    3. ' ':' → logprob: -3.617959976196289
    4. ' :' → logprob: -6.617959976196289
    5. ''):' → logprob: -8.492959976196289
    6. '):' → logprob: -9.367959976196289
    7. 'a' → logprob: -9.992959976196289
    8. ' '' → logprob: -10.242959976196289
    9. ' ')' → logprob: -11.742959976196289
    10. '(':' → logprob: -11.867959976196289

Token 55: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05828309804201126
    2. 'return' → logprob: -3.4332830905914307
    3. ' a' → logprob: -4.18328332901001
    4. 'a' → logprob: -5.80828332901001
    5. '    ' → logprob: -6.18328332901001
    6. '       ' → logprob: -6.30828332901001
    7. '   ' → logprob: -7.55828332901001
    8. ' 
' → logprob: -7.55828332901001
    9. ' ' → logprob: -7.80828332901001
    10. '<|end|>' → logprob: -8.308282852172852

Token 56: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.474077433347702
    2. 'a' → logprob: -0.9740774631500244
    3. '	a' → logprob: -14.849077224731445
    4. ' ' → logprob: -16.849077224731445
    5. ' ' → logprob: -17.224077224731445
    6. '(a' → logprob: -19.849077224731445
    7. '>a' → logprob: -20.099077224731445
    8. '   ' → logprob: -20.224077224731445
    9. '    ' → logprob: -20.474077224731445
    10. '_a' → logprob: -20.599077224731445

Token 57: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.02975720353424549
    2. '+' → logprob: -3.529757261276245
    3. ' ' → logprob: -12.029757499694824
    4. ' ' → logprob: -14.654757499694824
    5. '+b' → logprob: -15.904757499694824
    6. ' plus' → logprob: -16.904756546020508
    7. ' +
' → logprob: -17.154756546020508
    8. '<|end|>' → logprob: -17.279756546020508
    9. '[' → logprob: -17.404756546020508
    10. '-' → logprob: -18.279756546020508

Token 58: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1274910569190979
    2. 'b' → logprob: -2.127490997314453
    3. ' ' → logprob: -7.627490997314453
    4. '<|end|>' → logprob: -9.502490997314453
    5. '	b' → logprob: -15.127490997314453
    6. ' б' → logprob: -15.377490997314453
    7. ' 
' → logprob: -15.377490997314453
    8. '<|end|>' → logprob: -16.002490997314453
    9. ' 

' → logprob: -16.502490997314453
    10. ')b' → logprob: -16.877490997314453

Token 59: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05939062684774399
    2. '
' → logprob: -3.1843905448913574
    3. '<|end|>' → logprob: -4.684390544891357
    4. '   ' → logprob: -6.309390544891357
    5. 'elif' → logprob: -6.809390544891357
    6. '        
' → logprob: -7.184390544891357
    7. '\n' → logprob: -7.309390544891357
    8. '    
' → logprob: -7.309390544891357
    9. '  
' → logprob: -7.434390544891357
    10. '```' → logprob: -7.934390544891357

Token 60: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8956345319747925
    2. '       ' → logprob: -0.8956345319747925
    3. '<|end|>' → logprob: -1.7706345319747925
    4. '    
' → logprob: -5.770634651184082
    5. '\n' → logprob: -6.270634651184082
    6. '   ' → logprob: -6.520634651184082
    7. '        
' → logprob: -6.520634651184082
    8. 'elif' → logprob: -6.895634651184082
    9. '  
' → logprob: -7.020634651184082
    10. '```' → logprob: -7.270634651184082

Token 61: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.13928073644638062
    2. ' ' → logprob: -2.6392807960510254
    3. 'op' → logprob: -3.0142807960510254
    4. '<|end|>' → logprob: -5.639280796051025
    5. ''' → logprob: -5.764280796051025
    6. '  ' → logprob: -6.639280796051025
    7. ' '' → logprob: -7.764280796051025
    8. '-' → logprob: -8.764280319213867
    9. '	op' → logprob: -8.764280319213867
    10. ''op' → logprob: -9.139280319213867

Token 63: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.002320106839761138
    2. '==' → logprob: -6.127320289611816
    3. ' ' → logprob: -9.752320289611816
    4. ' =' → logprob: -10.752320289611816
    5. '=' → logprob: -10.877320289611816
    6. '-' → logprob: -11.127320289611816
    7. '<|end|>' → logprob: -12.002320289611816
    8. ' -' → logprob: -12.127320289611816
    9. ' ===' → logprob: -13.252320289611816
    10. '*' → logprob: -13.752320289611816

Token 64: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.015424038283526897
    2. ''' → logprob: -4.3904242515563965
    3. '-' → logprob: -6.1404242515563965
    4. ''*' → logprob: -7.5154242515563965
    5. ' '-'' → logprob: -8.890423774719238
    6. '*' → logprob: -11.015423774719238
    7. ''>' → logprob: -11.265423774719238
    8. ' ' → logprob: -11.390423774719238
    9. '`' → logprob: -12.140423774719238
    10. '	' → logprob: -12.140423774719238

Token 65: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28676992654800415
    2. ' :' → logprob: -1.4117698669433594
    3. ' ' → logprob: -5.911769866943359
    4. ':return' → logprob: -7.036769866943359
    5. '<|end|>' → logprob: -7.286769866943359
    6. ' ):' → logprob: -8.16176986694336
    7. ')' → logprob: -8.53676986694336
    8. ' return' → logprob: -8.66176986694336
    9. ' >' → logprob: -8.78676986694336
    10. ' a' → logprob: -8.78676986694336

Token 66: ' return' (ID: 622)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.006888361647725105
    2. 'a' → logprob: -5.006888389587402
    3. ' ' → logprob: -9.756888389587402
    4. '<|end|>' → logprob: -10.256888389587402
    5. ' ' → logprob: -10.881888389587402
    6. '	a' → logprob: -10.881888389587402
    7. '    ' → logprob: -11.131888389587402
    8. ' return' → logprob: -11.631888389587402
    9. ')' → logprob: -12.506888389587402
    10. ' b' → logprob: -12.756888389587402

Token 67: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.02330627478659153
    2. 'a' → logprob: -3.773306369781494
    3. '	a' → logprob: -9.898305892944336
    4. ' ' → logprob: -12.273305892944336
    5. '<|end|>' → logprob: -12.773305892944336
    6. ' ' → logprob: -14.023305892944336
    7. '    ' → logprob: -14.148305892944336
    8. '>a' → logprob: -14.148305892944336
    9. '  ' → logprob: -15.398305892944336
    10. '   ' → logprob: -16.148305892944336

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.000205566844670102
    2. '-' → logprob: -8.500205993652344
    3. '<|end|>' → logprob: -13.750205993652344
    4. ' ' → logprob: -14.625205993652344
    5. ' ' → logprob: -14.625205993652344
    6. ' –' → logprob: -17.375205993652344
    7. '<|end|>' → logprob: -18.750205993652344
    8. ' -

' → logprob: -19.125205993652344
    9. ' -
' → logprob: -19.250205993652344
    10. ' −' → logprob: -19.375205993652344

Token 69: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.02324605919420719
    2. 'b' → logprob: -3.7732460498809814
    3. ' ' → logprob: -14.648245811462402
    4. '	b' → logprob: -16.52324676513672
    5. '<|end|>' → logprob: -17.52324676513672
    6. ' б' → logprob: -18.77324676513672
    7. ' ' → logprob: -19.64824676513672
    8. ')b' → logprob: -20.27324676513672
    9. '    ' → logprob: -20.39824676513672
    10. '   ' → logprob: -21.27324676513672

Token 70: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011558439582586288
    2. '
' → logprob: -4.636558532714844
    3. '	' → logprob: -7.136558532714844
    4. '<|end|>' → logprob: -7.761558532714844
    5. '   ' → logprob: -9.011558532714844
    6. '```' → logprob: -9.511558532714844
    7. '        
' → logprob: -10.011558532714844
    8. '    
' → logprob: -10.386558532714844
    9. '  
' → logprob: -10.511558532714844
    10. ' 
' → logprob: -10.511558532714844

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005435001221485436
    2. '	' → logprob: -9.000543594360352
    3. '<|end|>' → logprob: -9.000543594360352
    4. '
' → logprob: -9.500543594360352
    5. '   ' → logprob: -9.625543594360352
    6. '```' → logprob: -10.000543594360352
    7. ' ' → logprob: -11.250543594360352
    8. '        
' → logprob: -11.375543594360352
    9. '`' → logprob: -11.500543594360352
    10. ' if' → logprob: -11.625543594360352

Token 72: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42493516206741333
    2. 'if' (adapté à ' if') → logprob: -1.4249351024627686
    3. '       ' → logprob: -2.6749351024627686
    4. ' 
' → logprob: -3.9249351024627686
    5. ' ' → logprob: -5.549935340881348
    6. '*' → logprob: -5.924935340881348
    7. '`' → logprob: -6.424935340881348
    8. '        ' → logprob: -6.924935340881348
    9. '   ' → logprob: -7.049935340881348
    10. '  
' → logprob: -7.049935340881348

Token 73: ' op' (ID: 991)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.2038987874984741
    2. '*' → logprob: -1.4538987874984741
    3. ''' → logprob: -1.5788987874984741
    4. ' '' → logprob: -1.9538987874984741
    5. ' ' → logprob: -3.0788989067077637
    6. ' '*'' → logprob: -3.3288989067077637
    7. ''*' → logprob: -4.453898906707764
    8. 'op' → logprob: -4.578898906707764
    9. ' op' → logprob: -5.203898906707764
    10. '  ' → logprob: -6.078898906707764

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.002638556994497776
    2. '==' → logprob: -6.002638339996338
    3. ' ' → logprob: -9.877638816833496
    4. '<|end|>' → logprob: -10.877638816833496
    5. '*' → logprob: -11.002638816833496
    6. ' *' → logprob: -11.127638816833496
    7. '=='' → logprob: -11.127638816833496
    8. '  ' → logprob: -11.877638816833496
    9. ' '' → logprob: -11.877638816833496
    10. '	' → logprob: -12.377638816833496

Token 75: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.05527805909514427
    2. ''' → logprob: -3.0552780628204346
    3. ' '*'' → logprob: -5.5552778244018555
    4. '*' → logprob: -6.1802778244018555
    5. '"' → logprob: -7.9302778244018555
    6. ' '' → logprob: -8.180277824401855
    7. ' '*' → logprob: -10.055277824401855
    8. '"*' → logprob: -10.805277824401855
    9. '`' → logprob: -11.680277824401855
    10. ' ' → logprob: -12.305277824401855

Token 76: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13893821835517883
    2. '<|end|>' → logprob: -2.6389381885528564
    3. ' ' → logprob: -3.7639381885528564
    4. ')' → logprob: -4.0139384269714355
    5. ' :' → logprob: -4.3889384269714355
    6. ' a' → logprob: -6.3889384269714355
    7. '<|end|>' → logprob: -7.1389384269714355
    8. '):' → logprob: -7.8889384269714355
    9. '*' → logprob: -8.138937950134277
    10. ' )' → logprob: -8.388937950134277

Token 77: ' return' (ID: 622)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.15146926045417786
    2. 'a' → logprob: -2.1514692306518555
    3. ' ' → logprob: -3.7764692306518555
    4. '<|end|>' → logprob: -7.5264692306518555
    5. ')' → logprob: -8.401469230651855
    6. ' b' → logprob: -9.276469230651855
    7. ' *' → logprob: -9.901469230651855
    8. '*' → logprob: -10.026469230651855
    9. 's' → logprob: -10.151469230651855
    10. 'b' → logprob: -10.276469230651855

Token 78: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10021983087062836
    2. 'a' → logprob: -2.3502197265625
    3. ' ' → logprob: -11.6002197265625
    4. '	a' → logprob: -12.8502197265625
    5. ' ' → logprob: -14.1002197265625
    6. '  ' → logprob: -15.2252197265625
    7. '<|end|>' → logprob: -15.7252197265625
    8. '   ' → logprob: -16.3502197265625
    9. '    ' → logprob: -16.8502197265625
    10. ' (' → logprob: -16.9752197265625

Token 79: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31333157420158386
    2. '*' → logprob: -1.3133316040039062
    3. ' ' → logprob: -9.813331604003906
    4. '*b' → logprob: -11.563331604003906
    5. ' ' → logprob: -12.563331604003906
    6. '<|end|>' → logprob: -14.188331604003906
    7. ' **' → logprob: -14.438331604003906
    8. 'b' → logprob: -15.563331604003906
    9. '.' → logprob: -16.063331604003906
    10. ')' → logprob: -16.063331604003906

Token 80: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2519530951976776
    2. ' b' → logprob: -1.501953125
    3. '<|end|>' → logprob: -11.126953125
    4. ' ' → logprob: -11.626953125
    5. '	b' → logprob: -16.376953125
    6. ' б' → logprob: -16.876953125
    7. ')b' → logprob: -16.876953125
    8. 's' → logprob: -17.001953125
    9. '(b' → logprob: -17.501953125
    10. '<|end|>' → logprob: -17.751953125

Token 81: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7365418672561646
    2. '       ' → logprob: -0.9865418672561646
    3. '<|end|>' → logprob: -2.486541748046875
    4. '/' → logprob: -4.111541748046875
    5. ' /' → logprob: -4.361541748046875
    6. '        ' → logprob: -5.111541748046875
    7. '*' → logprob: -5.236541748046875
    8. '  ' → logprob: -5.736541748046875
    9. '    ' → logprob: -5.736541748046875
    10. ''' → logprob: -5.736541748046875

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020208412781357765
    2. ' ' → logprob: -5.145208358764648
    3. '        
' → logprob: -5.895208358764648
    4. ' 
' → logprob: -6.020208358764648
    5. '\' → logprob: -6.770208358764648
    6. '  
' → logprob: -6.895208358764648
    7. '
' → logprob: -6.895208358764648
    8. '   ' → logprob: -7.020208358764648
    9. '    
' → logprob: -7.395208358764648
    10. '<|end|>' → logprob: -7.520208358764648

Token 83: ' if' (ID: 538)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.18038223683834076
    2. '/
' → logprob: -1.930382251739502
    3. '       ' → logprob: -4.430382251739502
    4. 'if' (adapté à ' if') → logprob: -5.055382251739502
    5. ' if' → logprob: -7.180382251739502
    6. ' /
' → logprob: -8.055381774902344
    7. '   ' → logprob: -8.805381774902344
    8. '/
/' → logprob: -9.305381774902344
    9. '\
' → logprob: -9.805381774902344
    10. ' /' → logprob: -10.055381774902344

Token 84: ' op' (ID: 991)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.035229459404945374
    2. '/' → logprob: -4.035229682922363
    3. ' ' → logprob: -4.285229682922363
    4. ' '' → logprob: -6.535229682922363
    5. ' /' → logprob: -7.035229682922363
    6. ' '/'' → logprob: -7.535229682922363
    7. '  ' → logprob: -9.410229682922363
    8. '"' → logprob: -9.910229682922363
    9. ' op' → logprob: -10.035229682922363
    10. ''/' → logprob: -10.785229682922363

Token 85: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.002490641549229622
    2. '==' → logprob: -6.252490520477295
    3. ' ' → logprob: -8.502490997314453
    4. '<|end|>' → logprob: -9.502490997314453
    5. '/' → logprob: -9.627490997314453
    6. ' =='' → logprob: -10.377490997314453
    7. ''' → logprob: -10.627490997314453
    8. ' /' → logprob: -10.752490997314453
    9. ' ' → logprob: -10.752490997314453
    10. ' '/'' → logprob: -10.877490997314453

Token 86: ' '/' (ID: 7041)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.7822427749633789
    2. ''/' → logprob: -1.157242774963379
    3. ''' → logprob: -1.657242774963379
    4. ' '/'' → logprob: -3.532242774963379
    5. ' '/' → logprob: -5.157242774963379
    6. ' /' → logprob: -6.657242774963379
    7. '"/' → logprob: -7.032242774963379
    8. ' ' → logprob: -8.532242774963379
    9. ' '/')' → logprob: -9.157242774963379
    10. ''d' → logprob: -10.782242774963379

Token 87: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17045708000659943
    2. ' :' → logprob: -2.295457124710083
    3. '):' → logprob: -3.045457124710083
    4. ' ):' → logprob: -5.670456886291504
    5. ')' → logprob: -6.920456886291504
    6. ''):' → logprob: -6.920456886291504
    7. '':' → logprob: -7.295456886291504
    8. '>' → logprob: -7.420456886291504
    9. ' and' → logprob: -7.670456886291504
    10. ' a' → logprob: -8.045456886291504

Token 88: ' return' (ID: 622)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.009426552802324295
    2. 'a' → logprob: -4.884426593780518
    3. ' int' → logprob: -6.384426593780518
    4. 'int' → logprob: -9.75942611694336
    5. '    ' → logprob: -10.75942611694336
    6. '   ' → logprob: -10.88442611694336
    7. ' b' → logprob: -12.00942611694336
    8. ' float' → logprob: -12.00942611694336
    9. '0' → logprob: -12.50942611694336
    10. ' ' → logprob: -12.50942611694336

Token 89: ' int' (ID: 677)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07890751957893372
    2. 'a' → logprob: -2.5789074897766113
    3. ' int' → logprob: -11.95390796661377
    4. 'int' → logprob: -12.32890796661377
    5. ' ' → logprob: -13.07890796661377
    6. '	a' → logprob: -13.07890796661377
    7. '0' → logprob: -14.07890796661377
    8. 'b' → logprob: -14.20390796661377
    9. ' b' → logprob: -15.07890796661377
    10. '   ' → logprob: -15.76640796661377

Token 90: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.005261510610580444
    2. '(' → logprob: -5.255261421203613
    3. 'a' → logprob: -10.505261421203613
    4. '(
' → logprob: -16.00526237487793
    5. ' a' → logprob: -17.00526237487793
    6. '(float' → logprob: -17.00526237487793
    7. '/a' → logprob: -17.13026237487793
    8. ' (' → logprob: -17.38026237487793
    9. '((' → logprob: -17.88026237487793
    10. '(/' → logprob: -17.88026237487793

Token 91: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3172423839569092
    2. '/' → logprob: -1.3172423839569092
    3. '/b' → logprob: -5.567242622375488
    4. ' ' → logprob: -8.817242622375488
    5. ' ' → logprob: -13.192242622375488
    6. ' /
' → logprob: -14.567242622375488
    7. 'b' → logprob: -14.942242622375488
    8. ')' → logprob: -15.317242622375488
    9. ' b' → logprob: -15.442242622375488
    10. ' /

' → logprob: -15.817242622375488

Token 92: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04858805239200592
    2. ' b' → logprob: -3.0485880374908447
    3. ' ' → logprob: -14.173587799072266
    4. ')b' → logprob: -18.048587799072266
    5. '	b' → logprob: -18.798587799072266
    6. '>b' → logprob: -19.673587799072266
    7. '(b' → logprob: -20.173587799072266
    8. ' (' → logprob: -20.298587799072266
    9. '  ' → logprob: -21.048587799072266
    10. '```' → logprob: -21.298587799072266

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. '')' → logprob: -11.625011444091797
    3. ' )' → logprob: -13.875011444091797
    4. ')
' → logprob: -14.000011444091797
    5. ')`' → logprob: -16.000011444091797
    6. '   ' → logprob: -16.875011444091797
    7. ')**' → logprob: -17.250011444091797
    8. '       ' → logprob: -17.625011444091797
    9. '):' → logprob: -17.750011444091797
    10. ' ' → logprob: -17.875011444091797

Token 94: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9802813529968262
    2. ')' → logprob: -1.2302813529968262
    3. '<|end|>' → logprob: -2.230281352996826
    4. '   ' → logprob: -3.355281352996826
    5. ' 
' → logprob: -3.480281352996826
    6. '       ' → logprob: -3.730281352996826
    7. '    
' → logprob: -3.980281352996826
    8. ' return' → logprob: -3.980281352996826
    9. '
' → logprob: -4.105281352996826
    10. '\' → logprob: -4.355281352996826

Token 95: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.747740626335144
    2. '<|end|>' → logprob: -1.122740626335144
    3. '\n' → logprob: -1.622740626335144
    4. '<|end|>' → logprob: -6.872740745544434
    5. 'newline' → logprob: -7.372740745544434
    6. ')' → logprob: -7.747740745544434
    7. ' 
' → logprob: -8.497740745544434
    8. '\' → logprob: -8.497740745544434
    9. '    
' → logprob: -8.622740745544434
    10. '\r' → logprob: -8.622740745544434

Token 96: ' truncate' (ID: 126309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023970380425453186
    2. '  ' → logprob: -5.148970603942871
    3. '0' → logprob: -6.148970603942871
    4. '1' → logprob: -6.648970603942871
    5. '<|end|>' → logprob: -6.773970603942871
    6. ' (' → logprob: -7.023970603942871
    7. ''' → logprob: -7.148970603942871
    8. '    ' → logprob: -7.148970603942871
    9. ' raise' → logprob: -7.273970603942871
    10. ' return' → logprob: -7.398970603942871

Token 97: ' toward' (ID: 15256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0832352340221405
    2. ' zero' → logprob: -2.583235263824463
    3. 'zero' → logprob: -5.708235263824463
    4. ' ' → logprob: -7.208235263824463
    5. '<|end|>' → logprob: -8.583234786987305
    6. '_zero' → logprob: -9.458234786987305
    7. '-zero' → logprob: -12.458234786987305
    8. ' cero' → logprob: -13.333234786987305
    9. ' صفر' → logprob: -13.583234786987305
    10. 'Zero' → logprob: -13.833234786987305

Token 99: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008936106227338314
    2. '

' → logprob: -5.883935928344727
    3. '<|end|>' → logprob: -6.633935928344727
    4. '
' → logprob: -6.883935928344727
    5. '\n' → logprob: -6.883935928344727
    6. '    
' → logprob: -7.258935928344727
    7. 'newline' → logprob: -7.758935928344727
    8. '' → logprob: -7.883935928344727
    9. ' 
' → logprob: -7.883935928344727
    10. 'n' → logprob: -8.258935928344727

Token 100: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35933300852775574
    2. '   ' → logprob: -2.359333038330078
    3. '\n' → logprob: -2.484333038330078
    4. '    
' → logprob: -2.609333038330078
    5. '

' → logprob: -4.234333038330078
    6. ' 
' → logprob: -4.609333038330078
    7. '       ' → logprob: -4.984333038330078
    8. '  
' → logprob: -5.234333038330078
    9. '\' → logprob: -5.984333038330078
    10. '        
' → logprob: -6.359333038330078

Token 101: ' values' (ID: 4824)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1481883525848389
    2. '    
' → logprob: -1.1481883525848389
    3. '
' → logprob: -1.7731883525848389
    4. ' stacks' → logprob: -2.023188352584839
    5. ' 
' → logprob: -3.773188352584839
    6. '   
' → logprob: -4.773188591003418
    7. 'tokens' → logprob: -5.148188591003418
    8. ' tokens' → logprob: -5.273188591003418
    9. '  
' → logprob: -5.398188591003418
    10. 'stack' → logprob: -5.523188591003418

Token 102: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3964560329914093
    2. '[' → logprob: -1.646456003189087
    3. ' ' → logprob: -2.396456003189087
    4. '.append' → logprob: -4.271456241607666
    5. '=' → logprob: -4.771456241607666
    6. '[:]' → logprob: -4.896456241607666
    7. '.' → logprob: -5.896456241607666
    8. ',' → logprob: -5.896456241607666
    9. '<|end|>' → logprob: -6.521456241607666
    10. '.setdefault' → logprob: -6.771456241607666

Token 103: ' ops' (ID: 26973)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.7760022878646851
    2. ' operators' → logprob: -1.526002287864685
    3. ' ops' → logprob: -2.0260024070739746
    4. '<|end|>' → logprob: -2.5260024070739746
    5. 'ops' → logprob: -3.1510024070739746
    6. 'tokens' → logprob: -4.776002407073975
    7. '_ops' → logprob: -4.776002407073975
    8. ' tokens' → logprob: -4.901002407073975
    9. ' ' → logprob: -4.901002407073975
    10. ' []' → logprob: -5.026002407073975

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004423351492732763
    2. '=' → logprob: -5.504423141479492
    3. ' ' → logprob: -8.129423141479492
    4. '<|end|>' → logprob: -10.504423141479492
    5. '  ' → logprob: -12.129423141479492
    6. '=[]' → logprob: -12.754423141479492
    7. ')' → logprob: -12.754423141479492
    8. ' =
' → logprob: -12.754423141479492
    9. ' =)' → logprob: -12.879423141479492
    10. ' =[' → logprob: -13.754423141479492

Token 105: ' [],' (ID: 22188)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.28140103816986084
    2. '[]' → logprob: -1.5314010381698608
    3. ' [],' → logprob: -3.6564011573791504
    4. '[],' → logprob: -5.78140115737915
    5. '[' → logprob: -9.531400680541992
    6. ' ' → logprob: -10.406400680541992
    7. '[]}' → logprob: -11.281400680541992
    8. ' [' → logprob: -11.906400680541992
    9. ' []
' → logprob: -13.406400680541992
    10. ' [];' → logprob: -13.531400680541992

Token 106: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.038170937448740005
    2. '[]' → logprob: -3.2881710529327393
    3. ' ' → logprob: -9.53817081451416
    4. '<|end|>' → logprob: -10.66317081451416
    5. ' [];' → logprob: -11.53817081451416
    6. '[:]' → logprob: -12.16317081451416
    7. ' [],' → logprob: -12.66317081451416
    8. ' [])' → logprob: -12.91317081451416
    9. '[]}' → logprob: -12.91317081451416
    10. '[' → logprob: -13.16317081451416

Token 107: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.42764607071876526
    2. '   ' → logprob: -2.0526461601257324
    3. '    
' → logprob: -2.0526461601257324
    4. ' ' → logprob: -3.5526461601257324
    5. '  
' → logprob: -3.6776461601257324
    6. '     
' → logprob: -4.427646160125732
    7. '\' → logprob: -4.927646160125732
    8. '   
' → logprob: -5.427646160125732
    9. '    ' → logprob: -5.552646160125732
    10. '
' → logprob: -5.677646160125732

Token 108: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9898043870925903
    2. ' i' → logprob: -0.9898043870925903
    3. 'i' (adapté à ' i') → logprob: -1.8648043870925903
    4. 'for' → logprob: -2.364804267883301
    5. '   ' → logprob: -5.489804267883301
    6. ' ' → logprob: -6.739804267883301
    7. 'n' → logprob: -7.114804267883301
    8. ' n' → logprob: -7.489804267883301
    9. '    ' → logprob: -8.3648042678833
    10. ' 
' → logprob: -8.4898042678833

Token 109: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01674923673272133
    2. ' =' → logprob: -4.641749382019043
    3. '=' → logprob: -5.141749382019043
    4. ' +=' → logprob: -7.391749382019043
    5. '  ' → logprob: -9.391749382019043
    6. 'n' → logprob: -9.516749382019043
    7. '0' → logprob: -9.766749382019043
    8. 's' → logprob: -10.016749382019043
    9. '<|end|>' → logprob: -10.016749382019043
    10. ' n' → logprob: -10.141749382019043

Token 110: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2531243562698364
    2. '0' → logprob: -1.5031243562698364
    3. ' n' → logprob: -7.128124237060547
    4. '<|end|>' → logprob: -8.378124237060547
    5. 'n' → logprob: -9.253124237060547
    6. ' len' → logprob: -11.128124237060547
    7. '  ' → logprob: -11.253124237060547
    8. 's' → logprob: -11.503124237060547
    9. 'space' → logprob: -12.253124237060547
    10. ' ' → logprob: -12.503124237060547

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011273929849267006
    2. '=' → logprob: -4.5112738609313965
    3. ' ' → logprob: -8.511274337768555
    4. '<|end|>' → logprob: -10.761274337768555
    5. ' =)' → logprob: -13.136274337768555
    6. ' =
' → logprob: -14.511274337768555
    7. '  ' → logprob: -15.386274337768555
    8. ' ='' → logprob: -15.761274337768555
    9. '<|end|>' → logprob: -15.886274337768555
    10. '=len' → logprob: -16.386274337768555

Token 112: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993687897920609
    2. ' ' → logprob: -2.694936990737915
    3. '۰' → logprob: -15.069936752319336
    4. 'len' → logprob: -16.319936752319336
    5. ' len' → logprob: -17.257436752319336
    6. ' 
' → logprob: -17.382436752319336
    7. '０' → logprob: -17.882436752319336
    8. '<|end|>' → logprob: -17.882436752319336
    9. ' ' → logprob: -18.069936752319336
    10. '   ' → logprob: -18.507436752319336

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011065270751714706
    2. 'len' → logprob: -4.511065483093262
    3. ' ' → logprob: -11.386065483093262
    4. ' len' → logprob: -12.011065483093262
    5. '(len' → logprob: -16.386064529418945
    6. '<len' → logprob: -17.136064529418945
    7. 'l' → logprob: -17.886064529418945
    8. '[len' → logprob: -18.386064529418945
    9. '	len' → logprob: -18.636064529418945
    10. '
' → logprob: -18.886064529418945

Token 114: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.061969365924596786
    2. 'len' → logprob: -2.81196928024292
    3. '(len' → logprob: -14.436969757080078
    4. '	len' → logprob: -14.936969757080078
    5. '   ' → logprob: -15.561969757080078
    6. ' ' → logprob: -15.936969757080078
    7. '    ' → logprob: -15.936969757080078
    8. '[len' → logprob: -16.061969757080078
    9. '=len' → logprob: -16.061969757080078
    10. '<len' → logprob: -16.186969757080078

Token 116: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.0024808887392282486
    2. '(' → logprob: -6.002480983734131
    3. '(expression' → logprob: -12.502480506896973
    4. '(express' → logprob: -13.877480506896973
    5. '(EXPR' → logprob: -15.502480506896973
    6. '(
' → logprob: -15.752480506896973
    7. 'expr' → logprob: -16.37748146057129
    8. '(exp' → logprob: -16.37748146057129
    9. '(exc' → logprob: -17.50248146057129
    10. '(s' → logprob: -18.25248146057129

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6312321753939614e-05
    2. ' )' → logprob: -10.250036239624023
    3. ')
' → logprob: -14.625036239624023
    4. ' ' → logprob: -14.875036239624023
    5. ')

' → logprob: -18.375036239624023
    6. '')' → logprob: -18.750036239624023
    7. '()' → logprob: -19.250036239624023
    8. '))' → logprob: -19.375036239624023
    9. '),' → logprob: -19.500036239624023
    10. '}' → logprob: -19.625036239624023

Token 118: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.716051459312439
    2. ' ' → logprob: -0.841051459312439
    3. '   ' → logprob: -3.3410515785217285
    4. '<|end|>' → logprob: -4.0910515785217285
    5. '    
' → logprob: -4.3410515785217285
    6. '     
' → logprob: -5.5910515785217285
    7. '  
' → logprob: -5.9660515785217285
    8. ' while' → logprob: -5.9660515785217285
    9. '    ' → logprob: -7.0910515785217285
    10. '   
' → logprob: -7.2160515785217285

Token 119: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08889169991016388
    2. ' 
' → logprob: -2.9638917446136475
    3. ' while' → logprob: -3.5888917446136475
    4. '   ' → logprob: -6.588891506195068
    5. '     
' → logprob: -6.963891506195068
    6. 'while' (adapté à ' while') → logprob: -7.213891506195068
    7. '    ' → logprob: -7.213891506195068
    8. '    
' → logprob: -7.338891506195068
    9. '  
' → logprob: -7.463891506195068
    10. '<|end|>' → logprob: -8.213891983032227

Token 120: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0014369006967172027
    2. ' ' → logprob: -7.126436710357666
    3. 'i' → logprob: -7.376436710357666
    4. '	i' → logprob: -12.501437187194824
    5. ' ' → logprob: -13.376437187194824
    6. ' (' → logprob: -14.876437187194824
    7. ' ‌' → logprob: -15.501437187194824
    8. '    ' → logprob: -15.876437187194824
    9. '(i' → logprob: -16.126436233520508
    10. '  ' → logprob: -16.376436233520508

Token 121: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0015293825417757034
    2. ' ' → logprob: -7.126529216766357
    3. '<' → logprob: -7.251529216766357
    4. '<|end|>' → logprob: -11.876529693603516
    5. ' <=' → logprob: -13.251529693603516
    6. ' <
' → logprob: -13.376529693603516
    7. '<len' → logprob: -13.501529693603516
    8. '<n' → logprob: -13.876529693603516
    9. ' <",' → logprob: -14.376529693603516
    10. '  ' → logprob: -14.626529693603516

Token 122: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.048590436577796936
    2. 'n' → logprob: -3.0485904216766357
    3. ' ' → logprob: -13.173590660095215
    4. '	n' → logprob: -13.798590660095215
    5. '<n' → logprob: -17.0485897064209
    6. ' ' → logprob: -18.6735897064209
    7. '_n' → logprob: -18.7985897064209
    8. ' 
' → logprob: -19.1735897064209
    9. '(n' → logprob: -19.2985897064209
    10. ')n' → logprob: -19.2985897064209

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01825319416821003
    2. ' :' → logprob: -4.018253326416016
    3. ':
' → logprob: -9.393253326416016
    4. ' :
' → logprob: -11.393253326416016
    5. ' and' → logprob: -12.643253326416016
    6. '<|end|>' → logprob: -13.893253326416016
    7. '):' → logprob: -14.018253326416016
    8. ' ' → logprob: -14.143253326416016
    9. ':**' → logprob: -14.268253326416016
    10. ',' → logprob: -15.143253326416016

Token 124: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002398482523858547
    2. '       ' → logprob: -6.752398490905762
    3. '    ' → logprob: -7.502398490905762
    4. '  ' → logprob: -9.127398490905762
    5. ' 
' → logprob: -9.252398490905762
    6. '<|end|>' → logprob: -9.377398490905762
    7. '   ' → logprob: -9.502398490905762
    8. 's' → logprob: -9.627398490905762
    9. '     
' → logprob: -10.002398490905762
    10. '        ' → logprob: -10.002398490905762

Token 125: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -6.146429223008454e-05
    2. ' 
' → logprob: -10.87506103515625
    3. '  ' → logprob: -11.50006103515625
    4. 's' → logprob: -11.50006103515625
    5. ' if' → logprob: -11.87506103515625
    6. '<|end|>' → logprob: -12.25006103515625
    7. ' '' → logprob: -13.12506103515625
    8. '    ' → logprob: -13.25006103515625
    9. 'if' → logprob: -13.62506103515625
    10. '   ' → logprob: -14.25006103515625

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45261338353157043
    2. ' =' → logprob: -1.327613353729248
    3. ' ' → logprob: -2.452613353729248
    4. '   ' → logprob: -5.702613353729248
    5. '<|end|>' → logprob: -6.202613353729248
    6. ':' → logprob: -6.577613353729248
    7. '  ' → logprob: -6.702613353729248
    8. '       ' → logprob: -6.827613353729248
    9. ' if' → logprob: -7.327613353729248
    10. '<|end|>' → logprob: -7.452613353729248

Token 127: ' expr' (ID: 30206)
  Prédit: ' expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expr' → logprob: -0.10025487840175629
    2. 'expr' → logprob: -2.350254774093628
    3. ' ' → logprob: -10.350255012512207
    4. '(expr' → logprob: -11.475255012512207
    5. '.expr' → logprob: -13.975255012512207
    6. '  ' → logprob: -14.225255012512207
    7. ' '' → logprob: -14.225255012512207
    8. ' ' → logprob: -14.350255012512207
    9. ''' → logprob: -14.600255012512207
    10. 's' → logprob: -14.975255012512207

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.045823566731997e-05
    2. '[' → logprob: -10.875020027160645
    3. ' [' → logprob: -13.625020027160645
    4. '[
' → logprob: -16.25002098083496
    5. '[I' → logprob: -16.25002098083496
    6. '   ' → logprob: -18.37502098083496
    7. ' ' → logprob: -18.50002098083496
    8. 'i' → logprob: -19.25002098083496
    9. '[n' → logprob: -19.50002098083496
    10. '[s' → logprob: -19.50002098083496

Token 129: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45014017820358276
    2. ' )' → logprob: -1.0751402378082275
    3. ']' → logprob: -4.075139999389648
    4. ' ]' → logprob: -6.200139999389648
    5. '<|end|>' → logprob: -6.575139999389648
    6. ' ' → logprob: -8.700139999389648
    7. ' )
' → logprob: -9.200139999389648
    8. '])' → logprob: -9.325139999389648
    9. '')' → logprob: -9.450139999389648
    10. ' ])' → logprob: -9.575139999389648

Token 130: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013379508629441261
    2. ' 
' → logprob: -5.2633795738220215
    3. '<|end|>' → logprob: -5.2633795738220215
    4. '        ' → logprob: -6.7633795738220215
    5. '       ' → logprob: -7.3883795738220215
    6. '         
' → logprob: -8.138379096984863
    7. '        
' → logprob: -8.263379096984863
    8. '  ' → logprob: -8.513379096984863
    9. ' )' → logprob: -9.513379096984863
    10. '    ' → logprob: -9.638379096984863

Token 131: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008077251841314137
    2. ' if' → logprob: -7.750807762145996
    3. ' 
' → logprob: -8.625807762145996
    4. '<|end|>' → logprob: -9.500807762145996
    5. '        ' → logprob: -10.125807762145996
    6. 'if' (adapté à ' if') → logprob: -10.250807762145996
    7. '  ' → logprob: -11.125807762145996
    8. '         
' → logprob: -12.000807762145996
    9. '    ' → logprob: -12.125807762145996
    10. '       ' → logprob: -12.625807762145996

Token 132: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12821634113788605
    2. ' c' → logprob: -2.12821626663208
    3. 'c' → logprob: -6.75321626663208
    4. ' '' → logprob: -9.253216743469238
    5. '  ' → logprob: -11.378216743469238
    6. ' ' → logprob: -12.878216743469238
    7. ' "' → logprob: -13.253216743469238
    8. '	c' → logprob: -13.378216743469238
    9. ' (' → logprob: -13.378216743469238
    10. '    ' → logprob: -14.253216743469238

Token 133: '.is' (ID: 3109)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7262869477272034
    2. ' ' → logprob: -0.9762869477272034
    3. '.' → logprob: -2.7262868881225586
    4. 'isdigit' → logprob: -3.3512868881225586
    5. '<|end|>' → logprob: -3.8512868881225586
    6. '==' → logprob: -4.851286888122559
    7. '.is' → logprob: -6.101286888122559
    8. ' =='' → logprob: -6.226286888122559
    9. ' in' → logprob: -7.101286888122559
    10. ' .' → logprob: -7.226286888122559

Token 134: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -2.5776860184123507e-06
    2. ' digit' → logprob: -13.25000286102295
    3. 'space' → logprob: -14.87500286102295
    4. 'numeric' → logprob: -15.50000286102295
    5. 'decimal' → logprob: -15.62500286102295
    6. 'd' → logprob: -16.750001907348633
    7. 'digital' → logprob: -18.000001907348633
    8. '_digit' → logprob: -18.375001907348633
    9. 'dig' → logprob: -19.125001907348633
    10. 'al' → logprob: -19.750001907348633

Token 135: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.010098384693264961
    2. '()' → logprob: -4.635098457336426
    3. '():
' → logprob: -8.135098457336426
    4. '(' → logprob: -10.385098457336426
    5. ' ():' → logprob: -11.135098457336426
    6. ':' → logprob: -13.260098457336426
    7. ' ()' → logprob: -14.760098457336426
    8. '()==' → logprob: -14.885098457336426
    9. '()>' → logprob: -14.885098457336426
    10. '():
' → logprob: -15.135098457336426

Token 136: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04394196718931198
    2. ' :' → logprob: -4.043941974639893
    3. '<|end|>' → logprob: -4.793941974639893
    4. '       ' → logprob: -5.168941974639893
    5. ' ' → logprob: -5.418941974639893
    6. '        ' → logprob: -6.418941974639893
    7. ')' → logprob: -6.543941974639893
    8. ':
' → logprob: -6.793941974639893
    9. '):' → logprob: -7.043941974639893
    10. '    ' → logprob: -7.668941974639893

Token 137: ' val' (ID: 1459)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.3931750953197479
    2. ' val' → logprob: -1.2681751251220703
    3. ' j' → logprob: -3.2681751251220703
    4. 'num' → logprob: -5.51817512512207
    5. 'j' → logprob: -7.39317512512207
    6. ' value' → logprob: -8.39317512512207
    7. ' v' → logprob: -8.76817512512207
    8. ' ' → logprob: -8.76817512512207
    9. ' start' → logprob: -8.89317512512207
    10. 'val' (adapté à ' val') → logprob: -8.89317512512207

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08048418164253235
    2. '=' → logprob: -2.58048415184021
    3. ' ' → logprob: -6.580484390258789
    4. 'ue' → logprob: -9.705484390258789
    5. ',' → logprob: -10.080484390258789
    6. 's' → logprob: -10.205484390258789
    7. '  ' → logprob: -10.955484390258789
    8. 'ues' → logprob: -12.205484390258789
    9. '=""' → logprob: -12.205484390258789
    10. '0' → logprob: -12.705484390258789

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889022678136826
    2. ' ' → logprob: -2.578890323638916
    3. ' int' → logprob: -15.828889846801758
    4. ' 
' → logprob: -15.828889846801758
    5. 'c' → logprob: -16.578889846801758
    6. 'int' → logprob: -16.953889846801758
    7. ' ' → logprob: -17.453889846801758
    8. 'val' → logprob: -17.766389846801758
    9. ' val' → logprob: -18.328889846801758
    10. '1' → logprob: -18.391389846801758

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. 'int' → logprob: -17.375059127807617
    4. 'c' → logprob: -17.750059127807617
    5. '۰' → logprob: -19.000059127807617
    6. ' int' → logprob: -20.125059127807617
    7. '  ' → logprob: -20.250059127807617
    8. '   ' → logprob: -20.375059127807617
    9. 'val' → logprob: -20.375059127807617
    10. '"' → logprob: -20.500059127807617

Token 141: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10021950304508209
    2. 'i' → logprob: -2.350219488143921
    3. ' ' → logprob: -12.3502197265625
    4. '   ' → logprob: -12.7252197265625
    5. '	i' → logprob: -13.3502197265625
    6. '  ' → logprob: -14.3502197265625
    7. '(i' → logprob: -14.3502197265625
    8. '    ' → logprob: -14.4752197265625
    9. ' (' → logprob: -14.7252197265625
    10. 'True' → logprob: -14.8502197265625

Token 145: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07525535672903061
    2. '<' → logprob: -3.3252553939819336
    3. '<n' → logprob: -3.3252553939819336
    4. '<len' → logprob: -8.200255393981934
    5. '+' → logprob: -8.325255393981934
    6. ' ' → logprob: -10.450255393981934
    7. ' +' → logprob: -11.325255393981934
    8. '<size' → logprob: -13.200255393981934
    9. '<N' → logprob: -13.450255393981934
    10. '[' → logprob: -14.075255393981934

Token 146: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759404897689819
    2. ' n' → logprob: -0.8259404897689819
    3. '	n' → logprob: -14.325940132141113
    4. '<|end|>' → logprob: -15.575940132141113
    5. '<n' → logprob: -16.20094108581543
    6. ' ' → logprob: -16.57594108581543
    7. '
' → logprob: -16.95094108581543
    8. 'len' → logprob: -16.95094108581543
    9. ')n' → logprob: -17.95094108581543
    10. '_n' → logprob: -18.07594108581543

Token 147: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038042984902858734
    2. 'and' → logprob: -3.2880430221557617
    3. ' ' → logprob: -13.663043022155762
    4. '   ' → logprob: -16.288042068481445
    5. '	and' → logprob: -16.788042068481445
    6. 'a' → logprob: -17.288042068481445
    7. '    ' → logprob: -17.913042068481445
    8. ' a' → logprob: -18.288042068481445
    9. '  ' → logprob: -18.413042068481445
    10. ' и' → logprob: -18.538042068481445

Token 148: ' expr' (ID: 30206)
  Prédit: ' expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expr' → logprob: -0.2522570490837097
    2. 'expr' → logprob: -1.5022571086883545
    3. 'c' → logprob: -8.377257347106934
    4. '(expr' → logprob: -9.877257347106934
    5. ' c' → logprob: -10.127257347106934
    6. ' ' → logprob: -13.127257347106934
    7. ' expression' → logprob: -13.877257347106934
    8. 'isdigit' → logprob: -14.252257347106934
    9. '_expr' → logprob: -14.752257347106934
    10. '   ' → logprob: -14.752257347106934

Token 149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.941850526549388e-06
    2. '[' → logprob: -12.000007629394531
    3. '[
' → logprob: -13.750007629394531
    4. ' [' → logprob: -15.250007629394531
    5. '[I' → logprob: -15.750007629394531
    6. '```' → logprob: -16.37500762939453
    7. ' ' → logprob: -16.50000762939453
    8. '
' → logprob: -17.00000762939453
    9. 'i' → logprob: -17.25000762939453
    10. '   ' → logprob: -18.75000762939453

Token 150: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.3045327067375183
    2. '.' → logprob: -2.054532766342163
    3. '].' → logprob: -2.179532766342163
    4. 'isdigit' → logprob: -4.304532527923584
    5. ').' → logprob: -5.054532527923584
    6. ' .' → logprob: -6.804532527923584
    7. '>.' → logprob: -9.054533004760742
    8. '}.' → logprob: -9.929533004760742
    9. '   ' → logprob: -10.554533004760742
    10. '().' → logprob: -10.679533004760742

Token 151: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: 0.0
    2. 'isd' → logprob: -17.25
    3. 'digit' → logprob: -18.625
    4. ' is' → logprob: -19.25
    5. 'iss' → logprob: -22.625
    6. 'isal' → logprob: -22.75
    7. '   ' → logprob: -23.125
    8. '```' → logprob: -23.375
    9. 'strip' → logprob: -23.5
    10. ' ' → logprob: -23.875

Token 152: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00039373442996293306
    2. '():
' → logprob: -8.000393867492676
    3. '()' → logprob: -9.875393867492676
    4. ' ():' → logprob: -12.250393867492676
    5. '(' → logprob: -13.875393867492676
    6. ':' → logprob: -14.000393867492676
    7. '():

' → logprob: -15.375393867492676
    8. '():
' → logprob: -16.25039291381836
    9. '()>' → logprob: -17.50039291381836
    10. '()==' → logprob: -18.37539291381836

Token 153: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4609953463077545
    2. ' val' → logprob: -1.0859953165054321
    3. 'val' → logprob: -4.210995197296143
    4. '           ' → logprob: -4.335995197296143
    5. ',val' → logprob: -7.085995197296143
    6. '                
' → logprob: -7.585995197296143
    7. '	val' → logprob: -7.585995197296143
    8. '            ' → logprob: -8.0859956741333
    9. '(val' → logprob: -8.2109956741333
    10. '	           ' → logprob: -8.7109956741333

Token 154: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.030054541304707527
    2. 'val' (adapté à ' val') → logprob: -3.5300545692443848
    3. ' 
' → logprob: -8.905054092407227
    4. '            ' → logprob: -10.280054092407227
    5. '[val' → logprob: -10.405054092407227
    6. '	val' → logprob: -10.530054092407227
    7. ' ' → logprob: -11.030054092407227
    8. '
' → logprob: -11.655054092407227
    9. '_val' → logprob: -11.655054092407227
    10. '               ' → logprob: -11.905054092407227

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25232169032096863
    2. '=' → logprob: -1.502321720123291
    3. ' *=' → logprob: -8.002321243286133
    4. '*=' → logprob: -10.127321243286133
    5. ' ' → logprob: -11.377321243286133
    6. ' *' → logprob: -13.002321243286133
    7. '*' → logprob: -13.127321243286133
    8. ' +=' → logprob: -14.627321243286133
    9. ')' → logprob: -14.752321243286133
    10. '=
' → logprob: -14.877321243286133

Token 156: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.25195494294166565
    2. 'val' → logprob: -1.5019549131393433
    3. '	val' → logprob: -11.501955032348633
    4. ' ' → logprob: -12.376955032348633
    5. '(val' → logprob: -12.376955032348633
    6. '[val' → logprob: -12.626955032348633
    7. '10' → logprob: -14.126955032348633
    8. '   ' → logprob: -14.376955032348633
    9. '               ' → logprob: -14.626955032348633
    10. ',val' → logprob: -14.751955032348633

Token 157: ' *' (ID: 425)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.07119227200746536
    2. 'val' → logprob: -2.9461922645568848
    3. ' *' → logprob: -4.571192264556885
    4. '*' → logprob: -5.696192264556885
    5. ' ' → logprob: -6.071192264556885
    6. '[val' → logprob: -8.946192741394043
    7. '	val' → logprob: -11.446192741394043
    8. '10' → logprob: -12.321192741394043
    9. '(val' → logprob: -12.446192741394043
    10. '0' → logprob: -12.696192741394043

Token 158: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00020413640595506877
    2. ' ' → logprob: -8.500204086303711
    3. '1' → logprob: -15.125204086303711
    4. '0' → logprob: -15.625204086303711
    5. '   ' → logprob: -16.87520408630371
    6. '```' → logprob: -17.00020408630371
    7. '
' → logprob: -18.75020408630371
    8. '  ' → logprob: -19.37520408630371
    9. '

' → logprob: -19.68770408630371
    10. 'int' → logprob: -20.00020408630371

Token 159: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.625015258789062
    3. '0' → logprob: -12.375015258789062
    4. '1' → logprob: -13.375015258789062
    5. '```' → logprob: -16.750015258789062
    6. 'int' → logprob: -17.250015258789062
    7. '   ' → logprob: -17.375015258789062
    8. '`' → logprob: -18.437515258789062
    9. '۱۰' → logprob: -18.625015258789062
    10. '(' → logprob: -18.750015258789062

Token 160: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889099419116974
    2. ' +' → logprob: -2.5788910388946533
    3. '+c' → logprob: -15.078890800476074
    4. '+
' → logprob: -15.203890800476074
    5. ' ' → logprob: -15.328890800476074
    6. ' +
' → logprob: -15.828890800476074
    7. '+i' → logprob: -15.953890800476074
    8. ' plus' → logprob: -16.45389175415039
    9. '<|end|>' → logprob: -16.95389175415039
    10. '＋' → logprob: -18.07889175415039

Token 161: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1002177745103836
    2. ' int' → logprob: -2.350217819213867
    3. '(int' → logprob: -12.100217819213867
    4. 'ord' → logprob: -12.725217819213867
    5. ' ord' → logprob: -13.475217819213867
    6. '   ' → logprob: -14.475217819213867
    7. 'expr' → logprob: -15.350217819213867
    8. '<int' → logprob: -15.725217819213867
    9. '  ' → logprob: -16.725217819213867
    10. '[int' → logprob: -16.725217819213867

Token 162: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.00023929782037157565
    2. '(' → logprob: -8.500239372253418
    3. 'expr' → logprob: -10.250239372253418
    4. '(
' → logprob: -15.875239372253418
    5. ' expr' → logprob: -16.0002384185791
    6. '(express' → logprob: -16.8752384185791
    7. '(expression' → logprob: -17.0002384185791
    8. '(

' → logprob: -18.1252384185791
    9. '(EXPR' → logprob: -18.1252384185791
    10. '(chr' → logprob: -18.3752384185791

Token 163: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5762739181518555
    2. '[i' → logprob: -0.8262739181518555
    3. 'expr' → logprob: -8.326273918151855
    4. '(expr' → logprob: -9.701273918151855
    5. ' [' → logprob: -11.201273918151855
    6. '[
' → logprob: -11.701273918151855
    7. ' expr' → logprob: -13.201273918151855
    8. '[c' → logprob: -13.326273918151855
    9. '[idx' → logprob: -13.701273918151855
    10. '```' → logprob: -13.826273918151855

Token 164: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.009428679943084717
    2. ')' → logprob: -4.75942850112915
    3. '[i' → logprob: -7.75942850112915
    4. '])
' → logprob: -8.259428977966309
    5. ']' → logprob: -10.384428977966309
    6. ')]' → logprob: -10.509428977966309
    7. ')])' → logprob: -10.509428977966309
    8. ')
' → logprob: -11.384428977966309
    9. ''])' → logprob: -11.634428977966309
    10. ' ])' → logprob: -12.134428977966309

Token 165: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.408875048160553
    2. '               ' → logprob: -1.4088749885559082
    3. 'i' → logprob: -3.158874988555908
    4. '
' → logprob: -4.033874988555908
    5. '       ' → logprob: -4.408874988555908
    6. '   ' → logprob: -4.783874988555908
    7. ' i' → logprob: -4.908874988555908
    8. ' 
' → logprob: -7.783874988555908
    9. '            
' → logprob: -7.783874988555908
    10. '    
' → logprob: -7.908874988555908

Token 166: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2014346867799759
    2. ' i' → logprob: -1.7014347314834595
    3. '	i' → logprob: -11.701435089111328
    4. ' 
' → logprob: -11.951435089111328
    5. '   ' → logprob: -12.826435089111328
    6. '
' → logprob: -13.076435089111328
    7. ' ' → logprob: -13.576435089111328
    8. '    ' → logprob: -16.201435089111328
    9. '[i' → logprob: -16.326435089111328
    10. '               ' → logprob: -16.701435089111328

Token 167: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.39109912514686584
    2. ' +=' → logprob: -1.1410990953445435
    3. '+' → logprob: -5.516098976135254
    4. '=' → logprob: -8.891098976135254
    5. '<|end|>' → logprob: -10.891098976135254
    6. ' ' → logprob: -11.141098976135254
    7. '+='' → logprob: -11.766098976135254
    8. ')' → logprob: -12.391098976135254
    9. ' +' → logprob: -12.391098976135254
    10. '+="' → logprob: -12.391098976135254

Token 168: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -18.62603187561035
    4. '```' → logprob: -19.62603187561035
    5. ' ' → logprob: -20.25103187561035
    6. '  ' → logprob: -20.62603187561035
    7. '１' → logprob: -21.87603187561035
    8. '۱' → logprob: -21.87603187561035
    9. '<|end|>' → logprob: -22.56353187561035
    10. '
' → logprob: -22.87603187561035

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -19.750009536743164
    4. '   ' → logprob: -20.625009536743164
    5. '１' → logprob: -21.062509536743164
    6. '۱' → logprob: -21.312509536743164
    7. '  ' → logprob: -21.625009536743164
    8. '
' → logprob: -21.687509536743164
    9. ' ' → logprob: -21.875009536743164
    10. '`' → logprob: -22.125009536743164

Token 170: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014719270169734955
    2. '       ' → logprob: -5.264719486236572
    3. ' 
' → logprob: -5.514719486236572
    4. ' continue' → logprob: -6.014719486236572
    5. '
' → logprob: -7.389719486236572
    6. '               ' → logprob: -7.514719486236572
    7. ' ' → logprob: -7.764719486236572
    8. '            
' → logprob: -8.264719009399414
    9. '            ' → logprob: -8.764719009399414
    10. '          ' → logprob: -8.764719009399414

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005395018961280584
    2. ' continue' → logprob: -5.38039493560791
    3. '               ' → logprob: -8.25539493560791
    4. 'continue' → logprob: -8.50539493560791
    5. '       ' → logprob: -9.38039493560791
    6. ' 
' → logprob: -10.00539493560791
    7. '            
' → logprob: -10.25539493560791
    8. '		' → logprob: -10.63039493560791
    9. ' ' → logprob: -10.75539493560791
    10. '          ' → logprob: -10.88039493560791

Token 172: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.02156197279691696
    2. 'values' (adapté à ' values') → logprob: -3.896561861038208
    3. '           ' → logprob: -7.396562099456787
    4. '	values' → logprob: -8.396561622619629
    5. '       ' → logprob: -9.896561622619629
    6. '   ' → logprob: -10.396561622619629
    7. '_values' → logprob: -11.021561622619629
    8. '.values' → logprob: -11.146561622619629
    9. '               ' → logprob: -11.271561622619629
    10. '    ' → logprob: -11.396561622619629

Token 173: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01417714636772871
    2. '.' → logprob: -4.264177322387695
    3. '.push' → logprob: -11.639177322387695
    4. '.app' → logprob: -13.139177322387695
    5. '.pop' → logprob: -13.889177322387695
    6. '.Append' → logprob: -14.389177322387695
    7. '.ap' → logprob: -15.014177322387695
    8. 'append' → logprob: -15.264177322387695
    9. ' .' → logprob: -15.764177322387695
    10. '.insert' → logprob: -15.764177322387695

Token 174: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.038046084344387054
    2. '(' → logprob: -3.28804612159729
    3. ' (' → logprob: -12.538045883178711
    4. 'val' → logprob: -15.038045883178711
    5. '(value' → logprob: -15.163045883178711
    6. '(
' → logprob: -16.03804588317871
    7. '(valor' → logprob: -16.03804588317871
    8. '(vals' → logprob: -16.53804588317871
    9. '[val' → logprob: -16.66304588317871
    10. ' val' → logprob: -16.78804588317871

Token 175: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028049908578395844
    2. ')
' → logprob: -6.252804756164551
    3. ' )' → logprob: -7.252804756164551
    4. '<|end|>' → logprob: -8.87780475616455
    5. ' )
' → logprob: -11.87780475616455
    6. '           ' → logprob: -12.00280475616455
    7. '<|end|>' → logprob: -12.75280475616455
    8. '
' → logprob: -12.75280475616455
    9. ')return' → logprob: -12.87780475616455
    10. '       ' → logprob: -13.25280475616455

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44338950514793396
    2. '       ' → logprob: -1.0683895349502563
    3. ' continue' → logprob: -5.068389415740967
    4. 'continue' → logprob: -5.818389415740967
    5. '    ' → logprob: -6.943389415740967
    6. '   ' → logprob: -7.193389415740967
    7. '	continue' → logprob: -7.318389415740967
    8. '        ' → logprob: -8.068389892578125
    9. ' 
' → logprob: -8.193389892578125
    10. '<|end|>' → logprob: -8.318389892578125

Token 177: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.31478145718574524
    2. ' continue' → logprob: -1.3147814273834229
    3. '   ' → logprob: -7.689781665802002
    4. '	continue' → logprob: -7.689781665802002
    5. '           ' → logprob: -8.564781188964844
    6. 'contin' → logprob: -8.564781188964844
    7. 'continu' → logprob: -9.814781188964844
    8. 'i' → logprob: -9.814781188964844
    9. '       ' → logprob: -10.064781188964844
    10. 'cont' → logprob: -10.939781188964844

Token 178: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006860651075839996
    2. '<|end|>' → logprob: -5.881860733032227
    3. '        
' → logprob: -6.256860733032227
    4. ' 
' → logprob: -7.506860733032227
    5. ' ' → logprob: -7.631860733032227
    6. '   ' → logprob: -7.756860733032227
    7. '        ' → logprob: -9.006860733032227
    8. '\n' → logprob: -9.381860733032227
    9. '    ' → logprob: -9.631860733032227
    10. '      ' → logprob: -10.381860733032227

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035993559285998344
    2. '        
' → logprob: -6.003599166870117
    3. ' 
' → logprob: -7.878599166870117
    4. '   ' → logprob: -8.503599166870117
    5. '<|end|>' → logprob: -9.378599166870117
    6. '        ' → logprob: -9.753599166870117
    7. '\n' → logprob: -10.003599166870117
    8. '    ' → logprob: -10.128599166870117
    9. 'elif' → logprob: -10.128599166870117
    10. ' ' → logprob: -10.253599166870117

Token 180: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.38349512219429016
    2. 'elif' (adapté à ' elif') → logprob: -1.6334950923919678
    3. ' ' → logprob: -2.2584950923919678
    4. ' if' → logprob: -4.258495330810547
    5. '       ' → logprob: -6.508495330810547
    6. 'if' → logprob: -6.883495330810547
    7. '<|end|>' → logprob: -7.508495330810547
    8. '   ' → logprob: -7.758495330810547
    9. '    ' → logprob: -8.258495330810547
    10. ' )' → logprob: -8.258495330810547

Token 181: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38688984513282776
    2. ' c' → logprob: -1.1368898153305054
    3. '	c' → logprob: -11.886889457702637
    4. ' ' → logprob: -11.886889457702637
    5. '   ' → logprob: -13.136889457702637
    6. ' ' → logprob: -14.011889457702637
    7. '  ' → logprob: -14.136889457702637
    8. ')c' → logprob: -14.886889457702637
    9. '    ' → logprob: -15.011889457702637
    10. '(c' → logprob: -16.324390411376953

Token 182: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6546927690505981
    2. ' in' → logprob: -0.7796927690505981
    3. '==' → logprob: -4.154692649841309
    4. 'in' → logprob: -5.404692649841309
    5. ' ' → logprob: -7.279692649841309
    6. ' =='' → logprob: -7.779692649841309
    7. ' =' → logprob: -8.529692649841309
    8. '=='' → logprob: -8.654692649841309
    9. '  ' → logprob: -9.904692649841309
    10. '=' → logprob: -10.154692649841309

Token 183: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0016567325219511986
    2. '(' → logprob: -6.876656532287598
    3. ' '('' → logprob: -7.751656532287598
    4. '"' → logprob: -9.501656532287598
    5. ' '' → logprob: -9.751656532287598
    6. ''-' → logprob: -10.876656532287598
    7. '('' → logprob: -11.876656532287598
    8. ''t' → logprob: -11.876656532287598
    9. ''s' → logprob: -12.376656532287598
    10. ''(' → logprob: -12.501656532287598

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03628019616007805
    2. ':
' → logprob: -4.411280155181885
    3. ' :' → logprob: -4.661280155181885
    4. ')' → logprob: -4.911280155181885
    5. '       ' → logprob: -5.786280155181885
    6. '):' → logprob: -6.286280155181885
    7. ' :
' → logprob: -7.286280155181885
    8. '<|end|>' → logprob: -8.286280632019043
    9. ' )' → logprob: -8.411280632019043
    10. ' ' → logprob: -8.661280632019043

Token 185: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3614601492881775
    2. ' ops' → logprob: -1.2364602088928223
    3. 'ops' → logprob: -4.486460208892822
    4. '   ' → logprob: -6.736460208892822
    5. '           ' → logprob: -8.861459732055664
    6. '.ops' → logprob: -9.361459732055664
    7. '_ops' → logprob: -9.486459732055664
    8. '        
' → logprob: -9.736459732055664
    9. '    ' → logprob: -9.861459732055664
    10. ' ' → logprob: -11.486459732055664

Token 186: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.20156507194042206
    2. ' ops' → logprob: -1.7015650272369385
    3. '.ops' → logprob: -9.82656478881836
    4. '       ' → logprob: -9.95156478881836
    5. '_ops' → logprob: -11.20156478881836
    6. '   ' → logprob: -11.82656478881836
    7. '           ' → logprob: -11.95156478881836
    8. '    ' → logprob: -12.45156478881836
    9. ' ' → logprob: -12.57656478881836
    10. 'aps' → logprob: -13.32656478881836

Token 187: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0012245126999914646
    2. '.' → logprob: -6.751224517822266
    3. '.app' → logprob: -10.001224517822266
    4. 'append' → logprob: -12.751224517822266
    5. '.ap' → logprob: -13.001224517822266
    6. '.push' → logprob: -13.126224517822266
    7. ' .' → logprob: -13.876224517822266
    8. '.setdefault' → logprob: -15.251224517822266
    9. '.Append' → logprob: -15.751224517822266
    10. ').' → logprob: -16.251224517822266

Token 188: '(c' (ID: 2410)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5172040462493896
    2. ''' → logprob: -1.6422040462493896
    3. '(' → logprob: -1.6422040462493896
    4. ' '('' → logprob: -4.892204284667969
    5. '(c' → logprob: -5.142204284667969
    6. 'c' → logprob: -6.017204284667969
    7. '("("' → logprob: -8.142204284667969
    8. ' (' → logprob: -8.517204284667969
    9. ''(' → logprob: -8.892204284667969
    10. '(
' → logprob: -9.267204284667969

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022458923049271107
    2. ')
' → logprob: -6.127245903015137
    3. ' )' → logprob: -9.752245903015137
    4. ' )
' → logprob: -13.752245903015137
    5. '       ' → logprob: -14.252245903015137
    6. '<|end|>' → logprob: -15.252245903015137
    7. '   ' → logprob: -15.377245903015137
    8. ')return' → logprob: -16.75224494934082
    9. ')
' → logprob: -16.87724494934082
    10. ')

' → logprob: -17.00224494934082

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02853800356388092
    2. 'i' → logprob: -4.528538227081299
    3. 'elif' → logprob: -5.278538227081299
    4. ')' → logprob: -5.653538227081299
    5. '
' → logprob: -6.278538227081299
    6. '<|end|>' → logprob: -6.528538227081299
    7. ' 
' → logprob: -6.653538227081299
    8. '        
' → logprob: -6.778538227081299
    9. '    
' → logprob: -7.153538227081299
    10. '   ' → logprob: -7.528538227081299

Token 191: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.4325370192527771
    2. 'elif' (adapté à ' elif') → logprob: -1.0575370788574219
    3. '       ' → logprob: -6.307537078857422
    4. '	elif' → logprob: -7.432537078857422
    5. ' i' → logprob: -7.557537078857422
    6. ' else' → logprob: -8.307537078857422
    7. ' ' → logprob: -8.557537078857422
    8. '   ' → logprob: -8.682537078857422
    9. '    ' → logprob: -9.432537078857422
    10. 'i' → logprob: -9.682537078857422

Token 192: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.07917409390211105
    2. 'c' → logprob: -2.579174041748047
    3. '')' → logprob: -9.454174041748047
    4. ')c' → logprob: -9.704174041748047
    5. ''' → logprob: -10.079174041748047
    6. ')' → logprob: -10.204174041748047
    7. ' ')'' → logprob: -10.829174041748047
    8. ' ')' → logprob: -11.329174041748047
    9. ' ' → logprob: -11.579174041748047
    10. ' ' → logprob: -11.954174041748047

Token 193: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2017803192138672
    2. '==' → logprob: -1.7017803192138672
    3. ' in' → logprob: -8.701780319213867
    4. '=' → logprob: -9.201780319213867
    5. ' ' → logprob: -10.576780319213867
    6. ' =' → logprob: -10.701780319213867
    7. '=='' → logprob: -10.951780319213867
    8. '.' → logprob: -11.576780319213867
    9. ' .' → logprob: -11.826780319213867
    10. ')' → logprob: -12.326780319213867

Token 194: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6723800301551819
    2. ''' → logprob: -0.7973800301551819
    3. ' ')'' → logprob: -3.797379970550537
    4. ' '' → logprob: -4.797379970550537
    5. ' ')' → logprob: -5.422379970550537
    6. ' '+'' → logprob: -6.172379970550537
    7. ')' → logprob: -6.922379970550537
    8. ''+' → logprob: -7.672379970550537
    9. ''-' → logprob: -8.797380447387695
    10. ' '('' → logprob: -10.172380447387695

Token 195: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023344974033534527
    2. '):' → logprob: -6.5023345947265625
    3. ':
' → logprob: -7.3773345947265625
    4. ' :' → logprob: -8.627334594726562
    5. ')' → logprob: -10.877334594726562
    6. '       ' → logprob: -13.252334594726562
    7. '):
' → logprob: -13.627334594726562
    8. ':**' → logprob: -14.002334594726562
    9. '<|end|>' → logprob: -14.002334594726562
    10. '   ' → logprob: -14.127334594726562

Token 196: '           ' (ID: 352)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1435062140226364
    2. '       ' → logprob: -2.1435062885284424
    3. 'while' → logprob: -4.143506050109863
    4. '   ' → logprob: -8.518506050109863
    5. '	while' → logprob: -8.768506050109863
    6. '           ' → logprob: -9.518506050109863
    7. '    ' → logprob: -10.393506050109863
    8. 'While' → logprob: -10.518506050109863
    9. ' ' → logprob: -10.643506050109863
    10. '        
' → logprob: -11.393506050109863

Token 197: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.007506655994802713
    2. 'while' (adapté à ' while') → logprob: -5.257506847381592
    3. '       ' → logprob: -6.507506847381592
    4. '    ' → logprob: -7.632506847381592
    5. '   ' → logprob: -9.382506370544434
    6. 'While' → logprob: -10.007506370544434
    7. '	while' → logprob: -10.132506370544434
    8. ' 
' → logprob: -10.382506370544434
    9. '        ' → logprob: -10.882506370544434
    10. ' ' → logprob: -10.882506370544434

Token 198: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0337546207010746
    2. ' ops' → logprob: -3.408754587173462
    3. 'len' → logprob: -9.408754348754883
    4. ' ' → logprob: -12.033754348754883
    5. ' len' → logprob: -12.533754348754883
    6. '       ' → logprob: -12.533754348754883
    7. '   ' → logprob: -12.658754348754883
    8. '           ' → logprob: -13.658754348754883
    9. '.ops' → logprob: -13.908754348754883
    10. 'os' → logprob: -14.033754348754883

Token 199: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7081441879272461
    2. 'and' → logprob: -0.7081441879272461
    3. '[-' → logprob: -4.208144187927246
    4. '	and' → logprob: -12.458144187927246
    5. '.pop' → logprob: -13.458144187927246
    6. 'pop' → logprob: -13.708144187927246
    7. '[]' → logprob: -13.833144187927246
    8. '()' → logprob: -13.958144187927246
    9. ' ' → logprob: -14.333144187927246
    10. '   ' → logprob: -14.708144187927246

Token 200: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.03805262967944145
    2. ' ops' → logprob: -3.288052558898926
    3. '.ops' → logprob: -12.538052558898926
    4. '   ' → logprob: -13.038052558898926
    5. ' ' → logprob: -13.538052558898926
    6. 'op' → logprob: -14.538052558898926
    7. 'os' → logprob: -14.663052558898926
    8. '       ' → logprob: -14.788052558898926
    9. '```' → logprob: -15.163052558898926
    10. '    ' → logprob: -15.413052558898926

Token 201: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.088346359931165e-07
    2. '.pop' → logprob: -15.750000953674316
    3. '[]' → logprob: -16.125
    4. '```' → logprob: -16.125
    5. ' and' → logprob: -16.25
    6. '][-' → logprob: -16.625
    7. '[
' → logprob: -16.75
    8. '   ' → logprob: -16.875
    9. 'and' → logprob: -17.125
    10. '[' → logprob: -17.5

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44905975461006165
    2. '-' → logprob: -1.0740597248077393
    3. ']' → logprob: -4.824059963226318
    4. ' -' → logprob: -5.824059963226318
    5. '(-' → logprob: -6.324059963226318
    6. '(' → logprob: -6.449059963226318
    7. ' ' → logprob: -6.449059963226318
    8. '()' → logprob: -6.824059963226318
    9. ']!=' → logprob: -7.074059963226318
    10. '   ' → logprob: -7.699059963226318

Token 203: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.21083712577819824
    2. '!=' → logprob: -1.8358371257781982
    3. ']' → logprob: -4.460837364196777
    4. ']!=' → logprob: -4.585837364196777
    5. '!='' → logprob: -5.335837364196777
    6. '()!=' → logprob: -6.710837364196777
    7. ')!=' → logprob: -6.835837364196777
    8. ']!='' → logprob: -7.085837364196777
    9. ')' → logprob: -7.710837364196777
    10. ' ]' → logprob: -8.960837364196777

Token 204: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7345669865608215
    2. '!=' → logprob: -0.7345669865608215
    3. '!='' → logprob: -3.3595669269561768
    4. '()!=' → logprob: -5.359567165374756
    5. '(' → logprob: -7.984567165374756
    6. ' not' → logprob: -8.984566688537598
    7. ''' → logprob: -8.984566688537598
    8. ')!=' → logprob: -9.109566688537598
    9. ']!=' → logprob: -9.234566688537598
    10. ']!='' → logprob: -9.484566688537598

Token 205: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03521346300840378
    2. ' '('' → logprob: -3.4102134704589844
    3. ''(' → logprob: -6.535213470458984
    4. '(' → logprob: -9.285213470458984
    5. '"' → logprob: -11.410213470458984
    6. '('' → logprob: -11.785213470458984
    7. ' '' → logprob: -13.160213470458984
    8. ' ' → logprob: -14.660213470458984
    9. ' (' → logprob: -15.410213470458984
    10. '   ' → logprob: -15.660213470458984

Token 206: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2039000391960144
    2. ':' → logprob: -1.7039000988006592
    3. ' and' → logprob: -6.95389986038208
    4. ' :
' → logprob: -7.20389986038208
    5. '):
' → logprob: -8.078900337219238
    6. '       ' → logprob: -8.828900337219238
    7. ' :' → logprob: -9.203900337219238
    8. '           ' → logprob: -9.453900337219238
    9. 'and' → logprob: -10.328900337219238
    10. '):' → logprob: -10.453900337219238

Token 207: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.649604320526123
    2. ' ops' → logprob: -1.149604320526123
    3. '           ' → logprob: -1.899604320526123
    4. ' op' → logprob: -5.274604320526123
    5. 'ops' → logprob: -5.399604320526123
    6. '_ops' → logprob: -7.649604320526123
    7. 'op' → logprob: -8.524604797363281
    8. '{
' → logprob: -8.899604797363281
    9. '.ops' → logprob: -9.024604797363281
    10. '```' → logprob: -9.149604797363281

Token 208: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.9973630905151367
    2. ' b' → logprob: -1.4973630905151367
    3. ' op' → logprob: -1.4973630905151367
    4. 'op' → logprob: -2.2473630905151367
    5. ' val' → logprob: -3.2473630905151367
    6. 'val' → logprob: -3.7473630905151367
    7. 'v' → logprob: -4.747363090515137
    8. '               ' → logprob: -5.747363090515137
    9. ' v' → logprob: -6.622363090515137
    10. '   ' → logprob: -7.997363090515137

Token 209: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3496766984462738
    2. '=' → logprob: -1.2246767282485962
    3. ')' → logprob: -7.224676609039307
    4. ',' → logprob: -7.974676609039307
    5. ' ' → logprob: -9.349677085876465
    6. 'values' → logprob: -10.224677085876465
    7. '   ' → logprob: -12.224677085876465
    8. ')=' → logprob: -12.349677085876465
    9. '_values' → logprob: -12.349677085876465
    10. '<|end|>' → logprob: -12.474677085876465

Token 210: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48020806908607483
    2. 'values' → logprob: -0.9802080392837524
    3. ' values' → logprob: -5.230207920074463
    4. ' a' → logprob: -7.230207920074463
    5. ' ' → logprob: -11.230208396911621
    6. '	values' → logprob: -12.355208396911621
    7. 'b' → logprob: -12.730208396911621
    8. 'vals' → logprob: -12.730208396911621
    9. '<|end|>' → logprob: -12.980208396911621
    10. '(values' → logprob: -13.730208396911621

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693136930465698
    2. ' =' → logprob: -2.1269314289093018
    3. ',' → logprob: -12.876931190490723
    4. '=
' → logprob: -15.376931190490723
    5. ')' → logprob: -15.876931190490723
    6. ' ' → logprob: -16.00193214416504
    7. '=

' → logprob: -16.00193214416504
    8. 'values' → logprob: -16.87693214416504
    9. '   ' → logprob: -17.25193214416504
    10. ' =
' → logprob: -17.50193214416504

Token 212: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.47409588098526
    2. ' values' → logprob: -0.97409588098526
    3. '	values' → logprob: -11.599096298217773
    4. '(values' → logprob: -11.724096298217773
    5. '.values' → logprob: -14.224096298217773
    6. '<|end|>' → logprob: -15.099096298217773
    7. '_values' → logprob: -15.724096298217773
    8. ' ' → logprob: -16.099096298217773
    9. '
' → logprob: -16.349096298217773
    10. '   ' → logprob: -16.349096298217773

Token 213: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00026300468016415834
    2. '.' → logprob: -8.375263214111328
    3. 'pop' → logprob: -10.625263214111328
    4. ' .' → logprob: -12.500263214111328
    5. '.append' → logprob: -12.875263214111328
    6. '[-' → logprob: -14.375263214111328
    7. 'Pop' → logprob: -14.750263214111328
    8. '.Pop' → logprob: -15.125263214111328
    9. ' pop' → logprob: -15.625263214111328
    10. '_pop' → logprob: -15.875263214111328

Token 214: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.2520735263824463
    2. '()' → logprob: -1.5020735263824463
    3. '()
' → logprob: -9.002073287963867
    4. '(),
' → logprob: -11.752073287963867
    5. '()),' → logprob: -12.377073287963867
    6. '()

' → logprob: -12.877073287963867
    7. '()>' → logprob: -12.877073287963867
    8. '()},' → logprob: -14.127073287963867
    9. ' (),' → logprob: -14.377073287963867
    10. '(),

' → logprob: -15.127073287963867

Token 215: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.2519712448120117
    2. ' values' → logprob: -1.5019712448120117
    3. '<|end|>' → logprob: -10.751971244812012
    4. '	values' → logprob: -11.126971244812012
    5. '(values' → logprob: -12.626971244812012
    6. '.values' → logprob: -13.001971244812012
    7. '_values' → logprob: -15.376971244812012
    8. ' ' → logprob: -15.501971244812012
    9. ' valores' → logprob: -17.876972198486328
    10. '```' → logprob: -18.001972198486328

Token 216: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.690834273584187e-05
    2. 'pop' → logprob: -10.25003719329834
    3. ' pop' → logprob: -14.25003719329834
    4. '.' → logprob: -14.75003719329834
    5. '.Pop' → logprob: -15.75003719329834
    6. '<|end|>' → logprob: -16.125036239624023
    7. '	pop' → logprob: -16.375036239624023
    8. '_pop' → logprob: -16.500036239624023
    9. 'Pop' → logprob: -16.875036239624023
    10. ' .' → logprob: -17.375036239624023

Token 217: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001431114797014743
    2. '()
' → logprob: -8.875143051147461
    3. '()]' → logprob: -14.000143051147461
    4. ' ()' → logprob: -14.375143051147461
    5. '()

' → logprob: -14.625143051147461
    6. '(),' → logprob: -14.750143051147461
    7. '()>' → logprob: -15.375143051147461
    8. '();' → logprob: -15.750143051147461
    9. '()<' → logprob: -15.750143051147461
    10. '()
' → logprob: -15.875143051147461

Token 218: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00231143063865602
    2. ' op' → logprob: -7.0023112297058105
    3. '       ' → logprob: -7.6273112297058105
    4. 'op' → logprob: -8.377311706542969
    5. '
' → logprob: -9.002311706542969
    6. '                
' → logprob: -9.002311706542969
    7. '<|end|>' → logprob: -9.127311706542969
    8. ' ' → logprob: -9.252311706542969
    9. '           ' → logprob: -9.752311706542969
    10. ' 
' → logprob: -9.877311706542969

Token 219: ' values' (ID: 4824)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0067909169010818005
    2. ' op' → logprob: -5.006791114807129
    3. 'ops' → logprob: -9.756791114807129
    4. '               ' → logprob: -11.506791114807129
    5. '           ' → logprob: -12.381791114807129
    6. '       ' → logprob: -13.506791114807129
    7. '	op' → logprob: -14.006791114807129
    8. ' ops' → logprob: -15.131791114807129
    9. '   ' → logprob: -15.506791114807129
    10. '                
' → logprob: -16.006790161132812

Token 220: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0068147084675729275
    2. '.' → logprob: -5.006814479827881
    3. '<|end|>' → logprob: -10.506814956665039
    4. ' .' → logprob: -10.631814956665039
    5. 'append' → logprob: -10.881814956665039
    6. '.pop' → logprob: -11.006814956665039
    7. '.app' → logprob: -12.756814956665039
    8. '.push' → logprob: -13.006814956665039
    9. 'app' → logprob: -13.631814956665039
    10. 'Append' → logprob: -13.631814956665039

Token 221: '(app' (ID: 21667)
  Prédit: '(app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(app' → logprob: -0.0032195416279137135
    2. 'apply' → logprob: -5.7532196044921875
    3. 'app' → logprob: -10.253219604492188
    4. ' apply' → logprob: -12.003219604492188
    5. '(' → logprob: -15.378219604492188
    6. '(
' → logprob: -16.753219604492188
    7. ' (' → logprob: -17.253219604492188
    8. '.apply' → logprob: -18.128219604492188
    9. '```' → logprob: -18.503219604492188
    10. '/app' → logprob: -18.878219604492188

Token 222: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -1.318681188422488e-05
    2. 'y' → logprob: -11.25001335144043
    3. 'l' → logprob: -17.75001335144043
    4. '
' → logprob: -18.00001335144043
    5. '_' → logprob: -18.87501335144043
    6. '```' → logprob: -19.25001335144043
    7. 'lyt' → logprob: -20.25001335144043
    8. '

' → logprob: -20.37501335144043
    9. 'end' → logprob: -20.37501335144043
    10. '_y' → logprob: -20.50001335144043

Token 223: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.0036050593480467796
    2. '_ops' → logprob: -5.628604888916016
    3. '_' → logprob: -13.378604888916016
    4. 'ops' → logprob: -13.628604888916016
    5. '_os' → logprob: -14.378604888916016
    6. 'op' → logprob: -14.628604888916016
    7. '_oc' → logprob: -15.003604888916016
    8. ' _' → logprob: -15.628604888916016
    9. '_ot' → logprob: -16.378604888916016
    10. '   ' → logprob: -16.628604888916016

Token 224: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00018852073117159307
    2. 'a' → logprob: -8.750188827514648
    3. '(' → logprob: -10.625188827514648
    4. ' (' → logprob: -12.625188827514648
    5. '(
' → logprob: -13.250188827514648
    6. ' a' → logprob: -15.125188827514648
    7. '('' → logprob: -16.87518882751465
    8. ')' → logprob: -17.00018882751465
    9. '```' → logprob: -17.12518882751465
    10. '(b' → logprob: -17.25018882751465

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048751471331343055
    2. ',b' → logprob: -8.250487327575684
    3. ' ,' → logprob: -8.500487327575684
    4. 'values' → logprob: -11.750487327575684
    5. '(values' → logprob: -12.250487327575684
    6. ',
' → logprob: -12.750487327575684
    7. ',val' → logprob: -13.375487327575684
    8. ',v' → logprob: -13.750487327575684
    9. 'b' → logprob: -14.125487327575684
    10. ' values' → logprob: -14.250487327575684

Token 226: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002475777640938759
    2. ' b' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.00247573852539
    4. '       ' → logprob: -18.62747573852539
    5. '           ' → logprob: -19.00247573852539
    6. ' ' → logprob: -19.12747573852539
    7. '    ' → logprob: -19.25247573852539
    8. ')b' → logprob: -19.75247573852539
    9. '
' → logprob: -20.12747573852539
    10. '  ' → logprob: -20.37747573852539

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006834602914750576
    2. 'ops' → logprob: -5.006834506988525
    3. ' ,' → logprob: -9.881834983825684
    4. '           ' → logprob: -10.506834983825684
    5. '               ' → logprob: -11.006834983825684
    6. ' ops' → logprob: -12.006834983825684
    7. ')' → logprob: -12.756834983825684
    8. 'op' → logprob: -13.006834983825684
    9. '.ops' → logprob: -13.381834983825684
    10. '       ' → logprob: -13.631834983825684

Token 228: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.002812005812302232
    2. ' ops' → logprob: -5.877811908721924
    3. ' ' → logprob: -13.752812385559082
    4. '   ' → logprob: -13.752812385559082
    5. '.ops' → logprob: -13.752812385559082
    6. '       ' → logprob: -14.377812385559082
    7. 'op' → logprob: -14.502812385559082
    8. '           ' → logprob: -14.752812385559082
    9. 'aps' → logprob: -15.377812385559082
    10. '_ops' → logprob: -15.502812385559082

Token 229: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -6.980854959692806e-05
    2. 'pop' → logprob: -10.125069618225098
    3. '[-' → logprob: -10.625069618225098
    4. '.' → logprob: -12.500069618225098
    5. ' pop' → logprob: -14.500069618225098
    6. '   ' → logprob: -14.625069618225098
    7. '-pop' → logprob: -15.375069618225098
    8. ' .' → logprob: -15.750069618225098
    9. 'Pop' → logprob: -16.125070571899414
    10. '.append' → logprob: -16.500070571899414

Token 230: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01901373639702797
    2. '()))
' → logprob: -4.26901388168335
    3. '()' → logprob: -5.64401388168335
    4. '())' → logprob: -7.26901388168335
    5. '))' → logprob: -7.51901388168335
    6. '()))

' → logprob: -10.269013404846191
    7. '()));' → logprob: -12.019013404846191
    8. '(' → logprob: -12.269013404846191
    9. '()))
' → logprob: -12.519013404846191
    10. '()
' → logprob: -12.894013404846191

Token 231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012668977724388242
    2. '       ' → logprob: -6.751266956329346
    3. '               ' → logprob: -10.251266479492188
    4. ' ops' → logprob: -10.251266479492188
    5. 'ops' → logprob: -11.626266479492188
    6. '		' → logprob: -12.251266479492188
    7. '          ' → logprob: -13.126266479492188
    8. '            
' → logprob: -13.126266479492188
    9. '   ' → logprob: -13.376266479492188
    10. '_ops' → logprob: -13.376266479492188

Token 232: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.6971749663352966
    2. ' ops' → logprob: -0.6971749663352966
    3. '       ' → logprob: -5.572175025939941
    4. '           ' → logprob: -8.822175025939941
    5. '_ops' → logprob: -10.447175025939941
    6. '.ops' → logprob: -10.572175025939941
    7. '   ' → logprob: -11.572175025939941
    8. ' if' → logprob: -13.572175025939941
    9. 'if' → logprob: -14.447175025939941
    10. 'Ops' → logprob: -14.447175025939941

Token 233: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -1.2471589798224159e-05
    2. '.' → logprob: -11.625012397766113
    3. ' .' → logprob: -12.875012397766113
    4. 'pop' → logprob: -15.125012397766113
    5. '.p' → logprob: -15.750012397766113
    6. '_pop' → logprob: -15.875012397766113
    7. '	pop' → logprob: -15.875012397766113
    8. '.Pop' → logprob: -16.00001335144043
    9. '.remove' → logprob: -16.12501335144043
    10. ' pop' → logprob: -18.25001335144043

Token 234: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.061676347395405e-05
    2. '(' → logprob: -10.12505054473877
    3. '()
' → logprob: -11.50005054473877
    4. '();' → logprob: -16.250051498413086
    5. '()

' → logprob: -16.375051498413086
    6. ' ()' → logprob: -16.875051498413086
    7. '()\' → logprob: -16.875051498413086
    8. '()`' → logprob: -17.625051498413086
    9. '()"' → logprob: -17.625051498413086
    10. '()
' → logprob: -17.750051498413086

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015492603415623307
    2. '<|end|>' → logprob: -7.126549243927002
    3. ' else' → logprob: -8.12654972076416
    4. ' elif' → logprob: -8.50154972076416
    5. ' i' → logprob: -9.50154972076416
    6. 'elif' → logprob: -9.50154972076416
    7. 'else' → logprob: -10.37654972076416
    8. '        
' → logprob: -11.00154972076416
    9. '   ' → logprob: -11.75154972076416
    10. ' ' → logprob: -11.87654972076416

Token 236: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.3882213532924652
    2. 'elif' (adapté à ' elif') → logprob: -1.1382213830947876
    3. ' else' → logprob: -7.013221263885498
    4. ' i' → logprob: -8.638221740722656
    5. '       ' → logprob: -8.888221740722656
    6. 'else' → logprob: -9.388221740722656
    7. '   ' → logprob: -10.263221740722656
    8. '	elif' → logprob: -11.763221740722656
    9. 'i' → logprob: -13.013221740722656
    10. '    ' → logprob: -13.138221740722656

Token 237: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22543269395828247
    2. ' c' → logprob: -1.6004326343536377
    3. ' ' → logprob: -11.475432395935059
    4. '   ' → logprob: -12.600432395935059
    5. '	c' → logprob: -12.600432395935059
    6. ' ' → logprob: -14.475432395935059
    7. ')c' → logprob: -14.975432395935059
    8. '    ' → logprob: -14.975432395935059
    9. '  ' → logprob: -15.037932395935059
    10. '
' → logprob: -15.600432395935059

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012205826351419091
    2. ' ==' → logprob: -7.126220703125
    3. ' ' → logprob: -8.001220703125
    4. ' =='' → logprob: -10.376220703125
    5. 'in' → logprob: -11.501220703125
    6. '==' → logprob: -11.876220703125
    7. ' !=' → logprob: -12.126220703125
    8. ' .' → logprob: -12.376220703125
    9. ''' → logprob: -12.376220703125
    10. '.' → logprob: -12.376220703125

Token 239: ' "+' (ID: 10953)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5378299951553345
    2. ''+' → logprob: -1.7878299951553345
    3. ' ('' → logprob: -2.287829875946045
    4. '('' → logprob: -3.037829875946045
    5. '"' → logprob: -3.037829875946045
    6. ' '' → logprob: -3.287829875946045
    7. ' '+' → logprob: -4.787829875946045
    8. ' ' → logprob: -6.662829875946045
    9. '"+' → logprob: -6.912829875946045
    10. '['' → logprob: -7.162829875946045

Token 240: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005366091150790453
    2. ' -' → logprob: -5.255366325378418
    3. ' ' → logprob: -9.255366325378418
    4. '*/' → logprob: -10.380366325378418
    5. ' */' → logprob: -13.380366325378418
    6. '  ' → logprob: -13.630366325378418
    7. '*' → logprob: -14.130366325378418
    8. '   ' → logprob: -14.255366325378418
    9. ' -*-' → logprob: -15.005366325378418
    10. '*-' → logprob: -15.255366325378418

Token 241: '*/' (ID: 3680)
  Prédit: '*/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*/' → logprob: -0.00048167374916374683
    2. ' */' → logprob: -7.875481605529785
    3. '*/)' → logprob: -9.500481605529785
    4. '*/),' → logprob: -11.500481605529785
    5. '*/,' → logprob: -12.250481605529785
    6. '*' → logprob: -12.500481605529785
    7. '/*' → logprob: -12.750481605529785
    8. '=*/' → logprob: -13.125481605529785
    9. '*/)
' → logprob: -13.500481605529785
    10. ' ' → logprob: -13.625481605529785

Token 242: '":
' (ID: 9213)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.4144628942012787
    2. '":
' → logprob: -1.289462924003601
    3. '":' → logprob: -3.5394628047943115
    4. ' ":' → logprob: -3.7894628047943115
    5. ':
' → logprob: -5.539463043212891
    6. ' :
' → logprob: -5.789463043212891
    7. ':' → logprob: -6.414463043212891
    8. '"' → logprob: -6.664463043212891
    9. '       ' → logprob: -7.414463043212891
    10. ' :' → logprob: -7.539463043212891

Token 243: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12148399651050568
    2. ' while' → logprob: -2.2464840412139893
    3. ' ops' → logprob: -5.99648380279541
    4. ' ' → logprob: -6.49648380279541
    5. '           ' → logprob: -6.87148380279541
    6. '        
' → logprob: -7.12148380279541
    7. 'while' → logprob: -7.74648380279541
    8. ' 
' → logprob: -7.74648380279541
    9. ' ' → logprob: -7.87148380279541
    10. '   ' → logprob: -7.87148380279541

Token 244: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.0637245774269104
    2. 'while' (adapté à ' while') → logprob: -3.3137245178222656
    3. '       ' → logprob: -3.6887245178222656
    4. '	while' → logprob: -8.438724517822266
    5. 'While' → logprob: -9.563724517822266
    6. '        
' → logprob: -10.188724517822266
    7. '           ' → logprob: -12.188724517822266
    8. '   ' → logprob: -12.313724517822266
    9. ' 
' → logprob: -12.813724517822266
    10. '        ' → logprob: -13.063724517822266

Token 245: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.03365273401141167
    2. ' ops' → logprob: -3.4086527824401855
    3. ' ' → logprob: -12.908652305603027
    4. '   ' → logprob: -13.908652305603027
    5. '(' → logprob: -14.283652305603027
    6. '_ops' → logprob: -14.408652305603027
    7. ' (' → logprob: -14.408652305603027
    8. '.ops' → logprob: -14.908652305603027
    9. 'opts' → logprob: -15.158652305603027
    10. 'len' → logprob: -15.408652305603027

Token 246: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740999937057495
    2. 'and' → logprob: -0.9740999937057495
    3. '           ' → logprob: -11.724100112915039
    4. '   ' → logprob: -12.224100112915039
    5. ' ' → logprob: -12.974100112915039
    6. '          ' → logprob: -13.099100112915039
    7. '	and' → logprob: -13.349100112915039
    8. '       ' → logprob: -13.599100112915039
    9. '      ' → logprob: -14.349100112915039
    10. '    ' → logprob: -14.349100112915039

Token 247: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.08017615228891373
    2. 'ops' → logprob: -2.9551761150360107
    3. ' precedence' → logprob: -3.7051761150360107
    4. ' ops' → logprob: -8.83017635345459
    5. 'prec' → logprob: -9.20517635345459
    6. 'pre' → logprob: -9.83017635345459
    7. '   ' → logprob: -10.20517635345459
    8. ' ' → logprob: -11.70517635345459
    9. ' preced' → logprob: -12.08017635345459
    10. 'op' → logprob: -12.33017635345459

Token 248: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.668304245569743e-05
    2. 'ops' → logprob: -10.000046730041504
    3. ' ops' → logprob: -14.750046730041504
    4. '(op' → logprob: -15.125046730041504
    5. ' (' → logprob: -15.375046730041504
    6. '(
' → logprob: -15.750046730041504
    7. '(opts' → logprob: -16.625045776367188
    8. '_ops' → logprob: -17.125045776367188
    9. '(expr' → logprob: -17.250045776367188
    10. '(c' → logprob: -17.625045776367188

Token 249: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -8.685467764735222e-05
    2. ' ops' → logprob: -9.375086784362793
    3. '(' → logprob: -14.500086784362793
    4. 'op' → logprob: -14.625086784362793
    5. 'c' → logprob: -15.375086784362793
    6. '.ops' → logprob: -15.375086784362793
    7. '_ops' → logprob: -15.500086784362793
    8. ' ' → logprob: -16.50008773803711
    9. '   ' → logprob: -16.75008773803711
    10. 'Ops' → logprob: -16.87508773803711

Token 250: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -6.988221684878226e-06
    2. '()' → logprob: -12.500006675720215
    3. ')' → logprob: -13.375006675720215
    4. ' [-' → logprob: -15.125006675720215
    5. '(-' → logprob: -15.125006675720215
    6. '][-' → logprob: -15.250006675720215
    7. '```' → logprob: -15.875006675720215
    8. '[' → logprob: -16.12500762939453
    9. '[]' → logprob: -16.25000762939453
    10. '   ' → logprob: -16.37500762939453

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.618001053633634e-05
    2. '()' → logprob: -11.000025749206543
    3. '-' → logprob: -12.750025749206543
    4. '(' → logprob: -13.125025749206543
    5. ' ' → logprob: -13.375025749206543
    6. '(-' → logprob: -14.125025749206543
    7. ')' → logprob: -14.375025749206543
    8. ']' → logprob: -15.125025749206543
    9. '```' → logprob: -15.125025749206543
    10. '])' → logprob: -15.625025749206543

Token 252: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024727347772568464
    2. ' )' → logprob: -8.37524700164795
    3. '())' → logprob: -11.50024700164795
    4. ')>=' → logprob: -12.00024700164795
    5. '')' → logprob: -15.87524700164795
    6. ')>' → logprob: -16.375247955322266
    7. '）' → logprob: -16.375247955322266
    8. '()' → logprob: -16.875247955322266
    9. '")' → logprob: -17.125247955322266
    10. ')
' → logprob: -17.625247955322266

Token 253: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.38993510603904724
    2. ' >=' → logprob: -1.1399351358413696
    3. ')>=' → logprob: -6.63993501663208
    4. '(' → logprob: -7.26493501663208
    5. ']>=' → logprob: -7.63993501663208
    6. '(c' → logprob: -8.389935493469238
    7. '()' → logprob: -8.514935493469238
    8. ')' → logprob: -9.514935493469238
    9. '```' → logprob: -11.014935493469238
    10. '[' → logprob: -11.389935493469238

Token 254: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.0008087906171567738
    2. ' precedence' → logprob: -7.1258087158203125
    3. 'prec' → logprob: -13.125808715820312
    4. 'pre' → logprob: -14.000808715820312
    5. '   ' → logprob: -14.250808715820312
    6. '       ' → logprob: -14.875808715820312
    7. 'prefix' → logprob: -15.625808715820312
    8. '           ' → logprob: -16.125808715820312
    9. ' ' → logprob: -17.250808715820312
    10. '  ' → logprob: -17.750808715820312

Token 255: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.990154047845863e-05
    2. 'c' → logprob: -10.125049591064453
    3. '(' → logprob: -11.750049591064453
    4. ' c' → logprob: -14.625049591064453
    5. '           ' → logprob: -14.750049591064453
    6. ' (' → logprob: -14.875049591064453
    7. '(
' → logprob: -15.250049591064453
    8. '   ' → logprob: -16.375049591064453
    9. '	c' → logprob: -16.375049591064453
    10. '```' → logprob: -16.625049591064453

Token 256: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3390900194644928
    2. '):' → logprob: -1.5890899896621704
    3. ' ):
' → logprob: -2.96409010887146
    4. ')' → logprob: -3.96409010887146
    5. ' ):' → logprob: -4.464089870452881
    6. ' )' → logprob: -7.089089870452881
    7. ' and' → logprob: -8.214090347290039
    8. '           ' → logprob: -9.839090347290039
    9. ':
' → logprob: -9.964090347290039
    10. ':' → logprob: -10.089090347290039

Token 257: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02674759365618229
    2. ':
' → logprob: -4.526747703552246
    3. '):
' → logprob: -5.026747703552246
    4. ' and' → logprob: -5.901747703552246
    5. '           ' → logprob: -6.276747703552246
    6. '```' → logprob: -7.026747703552246
    7. ':' → logprob: -7.401747703552246
    8. ')' → logprob: -7.526747703552246
    9. '<|end|>' → logprob: -7.901747703552246
    10. ',' → logprob: -8.026747703552246

Token 258: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.12707434594631195
    2. ' b' → logprob: -2.1270742416381836
    3. '               ' → logprob: -9.252074241638184
    4. '           ' → logprob: -10.127074241638184
    5. '   ' → logprob: -12.627074241638184
    6. '```' → logprob: -13.627074241638184
    7. ' ' → logprob: -13.752074241638184
    8. '       ' → logprob: -13.752074241638184
    9. '
' → logprob: -14.252074241638184
    10. ',b' → logprob: -14.377074241638184

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011605957115534693
    2. ' ,' → logprob: -9.125116348266602
    3. '=' → logprob: -12.375116348266602
    4. ' =' → logprob: -13.125116348266602
    5. ',val' → logprob: -15.125116348266602
    6. ',
' → logprob: -15.625116348266602
    7. '<|end|>' → logprob: -16.0001163482666
    8. ',value' → logprob: -16.3751163482666
    9. ')' → logprob: -17.0001163482666
    10. ',b' → logprob: -17.1251163482666

Token 260: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.026722528040409088
    2. 'a' → logprob: -3.6517224311828613
    3. ' values' → logprob: -7.901722431182861
    4. 'values' → logprob: -10.52672290802002
    5. ' b' → logprob: -10.90172290802002
    6. 'b' → logprob: -13.02672290802002
    7. ' ' → logprob: -13.02672290802002
    8. '<|end|>' → logprob: -14.15172290802002
    9. ' ' → logprob: -14.40172290802002
    10. '	a' → logprob: -15.27672290802002

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023582033812999725
    2. '=' → logprob: -3.7735819816589355
    3. ',' → logprob: -8.023582458496094
    4. '<|end|>' → logprob: -12.148582458496094
    5. ')' → logprob: -13.523582458496094
    6. ' ,' → logprob: -13.648582458496094
    7. ' ' → logprob: -14.648582458496094
    8. ' values' → logprob: -15.773582458496094
    9. ' =
' → logprob: -15.898582458496094
    10. 'values' → logprob: -16.773582458496094

Token 262: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.20141801238059998
    2. 'values' → logprob: -1.7014180421829224
    3. '.values' → logprob: -13.326417922973633
    4. '(values' → logprob: -13.451417922973633
    5. '	values' → logprob: -13.951417922973633
    6. '_values' → logprob: -14.951417922973633
    7. 'Values' → logprob: -16.201417922973633
    8. '<|end|>' → logprob: -16.201417922973633
    9. 'value' → logprob: -16.451417922973633
    10. ' valores' → logprob: -16.701417922973633

Token 263: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.9160102712921798e-05
    2. 'pop' → logprob: -10.500029563903809
    3. '.' → logprob: -13.875029563903809
    4. ' pop' → logprob: -14.875029563903809
    5. ' .' → logprob: -15.250029563903809
    6. '	pop' → logprob: -18.375028610229492
    7. '_pop' → logprob: -19.375028610229492
    8. '-pop' → logprob: -19.500028610229492
    9. '.Pop' → logprob: -19.500028610229492
    10. 'Pop' → logprob: -19.625028610229492

Token 264: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.005248225759714842
    2. ',' → logprob: -5.255248069763184
    3. '),' → logprob: -11.505248069763184
    4. '()' → logprob: -12.505248069763184
    5. ' (),' → logprob: -14.755248069763184
    6. '()),' → logprob: -16.7552490234375
    7. ' ,' → logprob: -16.7552490234375
    8. '(),
' → logprob: -17.0052490234375
    9. '(' → logprob: -17.7552490234375
    10. '],' → logprob: -17.7552490234375

Token 265: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.12694260478019714
    2. 'values' → logprob: -2.1269426345825195
    3. '	values' → logprob: -12.25194263458252
    4. '(values' → logprob: -12.50194263458252
    5. '.values' → logprob: -13.00194263458252
    6. '_values' → logprob: -13.50194263458252
    7. 'Values' → logprob: -14.12694263458252
    8. '<|end|>' → logprob: -14.25194263458252
    9. ' valores' → logprob: -14.62694263458252
    10. 'value' → logprob: -15.50194263458252

Token 266: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.3869113624095917
    2. 'pop' → logprob: -1.136911392211914
    3. ' pop' → logprob: -10.136911392211914
    4. '(pop' → logprob: -15.011911392211914
    5. '	pop' → logprob: -15.261911392211914
    6. '.' → logprob: -16.761911392211914
    7. '_pop' → logprob: -17.136911392211914
    8. '-pop' → logprob: -17.261911392211914
    9. ' .' → logprob: -18.386911392211914
    10. 'Pop' → logprob: -18.636911392211914

Token 267: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15368914604187012
    2. '()
' → logprob: -2.15368914604187
    3. ',' → logprob: -4.278689384460449
    4. '(),' → logprob: -4.653689384460449
    5. ')' → logprob: -7.153689384460449
    6. '               ' → logprob: -7.653689384460449
    7. 'values' → logprob: -7.903689384460449
    8. '(values' → logprob: -8.02868938446045
    9. '();' → logprob: -8.40368938446045
    10. ' values' → logprob: -8.90368938446045

Token 268: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1824326068162918
    2. ' values' → logprob: -1.8074326515197754
    3. '           ' → logprob: -6.807432651519775
    4. 'values' → logprob: -7.057432651519775
    5. '       ' → logprob: -7.807432651519775
    6. '   ' → logprob: -8.807432174682617
    7. '                   ' → logprob: -10.182432174682617
    8. ' ' → logprob: -10.557432174682617
    9. '	values' → logprob: -10.682432174682617
    10. '(values' → logprob: -11.432432174682617

Token 269: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.2025359719991684
    2. ' values' → logprob: -1.7025359869003296
    3. '               ' → logprob: -6.827536106109619
    4. '           ' → logprob: -10.702535629272461
    5. '                   ' → logprob: -12.327535629272461
    6. '   ' → logprob: -12.702535629272461
    7. '       ' → logprob: -13.077535629272461
    8. '	values' → logprob: -13.077535629272461
    9. ' ' → logprob: -13.702535629272461
    10. '                ' → logprob: -14.327535629272461

Token 270: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.440506407059729e-05
    2. '.' → logprob: -10.62503433227539
    3. 'append' → logprob: -12.25003433227539
    4. '.app' → logprob: -12.87503433227539
    5. ' .' → logprob: -13.25003433227539
    6. '.Append' → logprob: -14.87503433227539
    7. 'app' → logprob: -15.37503433227539
    8. '<|end|>' → logprob: -16.00003433227539
    9. 'Append' → logprob: -16.75003433227539
    10. ' append' → logprob: -17.00003433227539

Token 271: '(app' (ID: 21667)
  Prédit: '(app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(app' → logprob: -5.8961017202818766e-05
    2. 'apply' → logprob: -9.750059127807617
    3. 'app' → logprob: -15.000059127807617
    4. '(
' → logprob: -15.875059127807617
    5. ' apply' → logprob: -16.125059127807617
    6. '(ap' → logprob: -16.750059127807617
    7. '.apply' → logprob: -18.125059127807617
    8. '(' → logprob: -18.875059127807617
    9. ' (' → logprob: -19.375059127807617
    10. '(application' → logprob: -19.875059127807617

Token 272: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.0024819616228342056
    2. 'y' → logprob: -6.002481937408447
    3. 'l' → logprob: -12.252482414245605
    4. 'ay' → logprob: -13.877482414245605
    5. '
' → logprob: -15.002482414245605
    6. '```' → logprob: -15.627482414245605
    7. '(y' → logprob: -16.87748146057129
    8. '_apply' → logprob: -17.37748146057129
    9. 'iy' → logprob: -17.87748146057129
    10. '_op' → logprob: -18.00248146057129

Token 273: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -1.981667537620524e-06
    2. '_ops' → logprob: -13.375001907348633
    3. '_' → logprob: -16.000001907348633
    4. ' _' → logprob: -17.000001907348633
    5. '_ap' → logprob: -17.625001907348633
    6. '_ot' → logprob: -17.750001907348633
    7. '_app' → logprob: -18.000001907348633
    8. '_o' → logprob: -18.125001907348633
    9. 'op' → logprob: -18.625001907348633
    10. '_val' → logprob: -19.000001907348633

Token 274: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.023260388523340225
    2. 'a' → logprob: -3.7732603549957275
    3. '(' → logprob: -11.148260116577148
    4. '(
' → logprob: -15.023260116577148
    5. ' a' → logprob: -16.39826011657715
    6. '   ' → logprob: -17.77326011657715
    7. ' (' → logprob: -18.27326011657715
    8. '	a' → logprob: -19.02326011657715
    9. '[a' → logprob: -19.14826011657715
    10. ')a' → logprob: -19.14826011657715

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4656579120783135e-05
    2. ',b' → logprob: -10.250044822692871
    3. ' ,' → logprob: -11.875044822692871
    4. 'b' → logprob: -13.375044822692871
    5. ')' → logprob: -15.125044822692871
    6. ',
' → logprob: -15.250044822692871
    7. ' b' → logprob: -15.875044822692871
    8. '(' → logprob: -17.375043869018555
    9. '，' → logprob: -17.750043869018555
    10. '[' → logprob: -18.125043869018555

Token 276: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.615255839889869e-05
    2. ' b' → logprob: -9.250096321105957
    3. ')b' → logprob: -19.50009536743164
    4. '   ' → logprob: -19.75009536743164
    5. '       ' → logprob: -20.62509536743164
    6. ' ' → logprob: -20.87509536743164
    7. '<|end|>' → logprob: -21.25009536743164
    8. '
' → logprob: -21.37509536743164
    9. '           ' → logprob: -21.37509536743164
    10. '    ' → logprob: -21.50009536743164

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ' ,' → logprob: -12.75000286102295
    3. ',
' → logprob: -15.75000286102295
    4. '(),' → logprob: -17.750003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '(' → logprob: -18.625003814697266
    7. '),' → logprob: -18.875003814697266
    8. ')' → logprob: -19.375003814697266
    9. '       ' → logprob: -20.500003814697266
    10. '           ' → logprob: -20.625003814697266

Token 278: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.004079112783074379
    2. ' ops' → logprob: -5.504079341888428
    3. '.ops' → logprob: -14.62907886505127
    4. 'op' → logprob: -16.379079818725586
    5. '_ops' → logprob: -16.504079818725586
    6. ')' → logprob: -17.254079818725586
    7. 'opts' → logprob: -17.504079818725586
    8. ' ' → logprob: -17.879079818725586
    9. '   ' → logprob: -18.254079818725586
    10. 'ots' → logprob: -18.629079818725586

Token 279: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -9.610702363715973e-06
    2. 'pop' → logprob: -12.250009536743164
    3. '.' → logprob: -12.375009536743164
    4. '[-' → logprob: -14.750009536743164
    5. ').' → logprob: -16.500009536743164
    6. ' .' → logprob: -17.000009536743164
    7. ' pop' → logprob: -18.000009536743164
    8. '.append' → logprob: -18.750009536743164
    9. '.Pop' → logprob: -19.125009536743164
    10. '	pop' → logprob: -19.375009536743164

Token 280: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.25389713048934937
    2. '()))
' → logprob: -1.5038971900939941
    3. '))' → logprob: -6.628897190093994
    4. '()' → logprob: -7.753897190093994
    5. '())' → logprob: -8.753896713256836
    6. '))
' → logprob: -10.503896713256836
    7. '()))

' → logprob: -11.253896713256836
    8. '()
' → logprob: -12.128896713256836
    9. '()))
' → logprob: -12.253896713256836
    10. '(' → logprob: -13.003896713256836

Token 281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018771719187498093
    2. '       ' → logprob: -4.018771648406982
    3. ' ops' → logprob: -7.893771648406982
    4. '
' → logprob: -9.51877212524414
    5. '        
' → logprob: -9.64377212524414
    6. ' 
' → logprob: -10.26877212524414
    7. '               ' → logprob: -10.76877212524414
    8. '            
' → logprob: -11.14377212524414
    9. '   ' → logprob: -11.51877212524414
    10. 'ops' → logprob: -11.64377212524414

Token 282: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.052243784070014954
    2. ' ops' → logprob: -3.052243709564209
    3. '       ' → logprob: -5.677243709564209
    4. '           ' → logprob: -8.927244186401367
    5. '_ops' → logprob: -10.302244186401367
    6. '.ops' → logprob: -10.427244186401367
    7. '   ' → logprob: -11.302244186401367
    8. ' ' → logprob: -12.552244186401367
    9. 'Ops' → logprob: -12.677244186401367
    10. '        ' → logprob: -13.052244186401367

Token 283: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004348413785919547
    2. '.' → logprob: -7.875434875488281
    3. '.app' → logprob: -10.250434875488281
    4. '.push' → logprob: -11.750434875488281
    5. '.pop' → logprob: -12.000434875488281
    6. ' .' → logprob: -12.750434875488281
    7. '.ap' → logprob: -14.000434875488281
    8. ').' → logprob: -14.625434875488281
    9. '.Append' → logprob: -14.875434875488281
    10. 'append' → logprob: -15.125434875488281

Token 284: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.005244072061032057
    2. '(' → logprob: -5.255244255065918
    3. '('' → logprob: -11.755244255065918
    4. 'c' → logprob: -13.130244255065918
    5. ' (' → logprob: -15.630244255065918
    6. '(
' → logprob: -15.755244255065918
    7. '((' → logprob: -16.8802433013916
    8. '(C' → logprob: -17.6302433013916
    9. '(s' → logprob: -17.7552433013916
    10. ')c' → logprob: -17.8802433013916

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025918271858245134
    2. ')
' → logprob: -6.127591609954834
    3. '       ' → logprob: -8.002592086791992
    4. ' )' → logprob: -10.252592086791992
    5. ')i' → logprob: -10.752592086791992
    6. ')\
' → logprob: -12.002592086791992
    7. ')n' → logprob: -12.877592086791992
    8. '   ' → logprob: -13.002592086791992
    9. ' )
' → logprob: -14.252592086791992
    10. '<|end|>' → logprob: -14.377592086791992

Token 286: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6052724719047546
    2. '       ' → logprob: -1.1052725315093994
    3. '   ' → logprob: -2.2302725315093994
    4. 'i' → logprob: -4.85527229309082
    5. ' 
' → logprob: -5.48027229309082
    6. '
' → logprob: -6.10527229309082
    7. '	i' → logprob: -7.85527229309082
    8. '    
' → logprob: -8.35527229309082
    9. '        
' → logprob: -8.60527229309082
    10. '  
' → logprob: -9.23027229309082

Token 287: ' elif' (ID: 9497)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005068198777735233
    2. 'i' → logprob: -5.755068302154541
    3. '   ' → logprob: -7.005068302154541
    4. '       ' → logprob: -7.005068302154541
    5. '	i' → logprob: -10.130067825317383
    6. ' 
' → logprob: -10.505067825317383
    7. '
' → logprob: -12.880067825317383
    8. '    ' → logprob: -13.630067825317383
    9. ' ' → logprob: -14.380067825317383
    10. '    
' → logprob: -14.505067825317383

Token 288: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1605224609375
    2. 'c' → logprob: -1.9105224609375
    3. ' ' → logprob: -8.1605224609375
    4. ' ' → logprob: -11.9105224609375
    5. ' not' → logprob: -13.5355224609375
    6. '  ' → logprob: -13.6605224609375
    7. ''' → logprob: -14.1605224609375
    8. 's' → logprob: -14.2855224609375
    9. '	c' → logprob: -14.5355224609375
    10. ')c' → logprob: -15.0355224609375

Token 289: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5662325024604797
    2. '.' → logprob: -0.9412325024604797
    3. '==' → logprob: -3.441232442855835
    4. ' =='' → logprob: -5.691232681274414
    5. ' ' → logprob: -5.941232681274414
    6. ' in' → logprob: -6.316232681274414
    7. '=='' → logprob: -6.566232681274414
    8. '=' → logprob: -7.691232681274414
    9. ' =="' → logprob: -8.816232681274414
    10. ' .' → logprob: -9.066232681274414

Token 290: ' '='' (ID: 98780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012511812383309007
    2. ' ' → logprob: -7.251251220703125
    3. ' '' → logprob: -7.751251220703125
    4. '"' → logprob: -9.251251220703125
    5. ''s' → logprob: -11.251251220703125
    6. ''t' → logprob: -14.876251220703125
    7. '  ' → logprob: -15.376251220703125
    8. '    ' → logprob: -15.501251220703125
    9. 'space' → logprob: -16.001251220703125
    10. '32' → logprob: -16.251251220703125

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1180773451924324
    2. ':
' → logprob: -2.243077278137207
    3. ' :' → logprob: -5.743077278137207
    4. ' :
' → logprob: -6.618077278137207
    5. '       ' → logprob: -7.993077278137207
    6. ':return' → logprob: -8.243077278137207
    7. '   ' → logprob: -10.368077278137207
    8. '           ' → logprob: -10.493077278137207
    9. ' ' → logprob: -11.618077278137207
    10. '    ' → logprob: -12.118077278137207

Token 292: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02830592356622219
    2. ' break' → logprob: -3.653306007385254
    3. '   ' → logprob: -6.903306007385254
    4. '           ' → logprob: -7.403306007385254
    5. 'break' → logprob: -8.778306007385254
    6. ' while' → logprob: -9.278306007385254
    7. ' return' → logprob: -9.903306007385254
    8. '	break' → logprob: -10.403306007385254
    9. ' i' → logprob: -10.903306007385254
    10. ' ' → logprob: -11.903306007385254

Token 293: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5099785923957825
    2. ' while' → logprob: -1.1349785327911377
    3. 'while' (adapté à ' while') → logprob: -3.0099785327911377
    4. ' break' → logprob: -4.009978771209717
    5. 'break' → logprob: -4.884978771209717
    6. '           ' → logprob: -6.509978771209717
    7. '   ' → logprob: -6.884978771209717
    8. '	while' → logprob: -8.509978294372559
    9. '	break' → logprob: -9.259978294372559
    10. ' ' → logprob: -10.009978294372559

Token 294: ' ops' (ID: 26973)
  Prédit: ' ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ops' → logprob: -0.31330353021621704
    2. 'ops' → logprob: -1.3133034706115723
    3. 'len' → logprob: -10.68830394744873
    4. '_ops' → logprob: -12.06330394744873
    5. '.ops' → logprob: -12.56330394744873
    6. ' len' → logprob: -12.68830394744873
    7. 's' → logprob: -13.06330394744873
    8. ' ' → logprob: -13.43830394744873
    9. '   ' → logprob: -13.81330394744873
    10. 'Ops' → logprob: -14.18830394744873

Token 295: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07960836589336395
    2. 'and' → logprob: -2.57960844039917
    3. ':' → logprob: -7.95460844039917
    4. ':
' → logprob: -8.704607963562012
    5. '<|end|>' → logprob: -8.829607963562012
    6. '   ' → logprob: -10.954607963562012
    7. '>' → logprob: -11.454607963562012
    8. ')' → logprob: -11.829607963562012
    9. '	and' → logprob: -12.329607963562012
    10. '<|end|>' → logprob: -12.829607963562012

Token 296: '               ' (ID: 506)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05452415719628334
    2. ' b' → logprob: -3.0545241832733154
    3. '       ' → logprob: -5.429523944854736
    4. '   ' → logprob: -7.054523944854736
    5. '               ' → logprob: -7.804523944854736
    6. '           ' → logprob: -8.304524421691895
    7. ' ' → logprob: -11.554524421691895
    8. '	b' → logprob: -12.679524421691895
    9. '     ' → logprob: -14.054524421691895
    10. '```' → logprob: -14.929524421691895

Token 297: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0789511501789093
    2. ' b' → logprob: -2.578951120376587
    3. '           ' → logprob: -10.578950881958008
    4. '               ' → logprob: -10.703950881958008
    5. '   ' → logprob: -11.703950881958008
    6. '       ' → logprob: -12.828950881958008
    7. ' ' → logprob: -14.203950881958008
    8. '	b' → logprob: -14.828950881958008
    9. '```' → logprob: -14.953950881958008
    10. '    ' → logprob: -15.328950881958008

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013321757433004677
    2. ' ,' → logprob: -9.375133514404297
    3. '=' → logprob: -10.000133514404297
    4. ' =' → logprob: -13.500133514404297
    5. '<|end|>' → logprob: -14.125133514404297
    6. ',a' → logprob: -15.250133514404297
    7. ',b' → logprob: -15.875133514404297
    8. ')' → logprob: -16.000133514404297
    9. ',val' → logprob: -16.250133514404297
    10. '‌,' → logprob: -16.875133514404297

Token 299: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.014164921827614307
    2. 'a' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.514164924621582
    4. ' ' → logprob: -14.639164924621582
    5. ' b' → logprob: -15.389164924621582
    6. '<|end|>' → logprob: -16.139163970947266
    7. '	a' → logprob: -16.889163970947266
    8. ',a' → logprob: -17.639163970947266
    9. 'b' → logprob: -18.014163970947266
    10. ',' → logprob: -18.139163970947266

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1271422803401947
    2. '=' → logprob: -2.1271421909332275
    3. ',' → logprob: -8.502141952514648
    4. 'values' → logprob: -12.627141952514648
    5. ' values' → logprob: -12.752141952514648
    6. ')' → logprob: -13.002141952514648
    7. ' ' → logprob: -14.002141952514648
    8. ' ,' → logprob: -14.127141952514648
    9. '<|end|>' → logprob: -15.127141952514648
    10. '(values' → logprob: -15.377141952514648

Token 301: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.03804171830415726
    2. 'values' → logprob: -3.288041830062866
    3. '	values' → logprob: -15.913042068481445
    4. '(values' → logprob: -16.163042068481445
    5. '_values' → logprob: -16.913042068481445
    6. ' valores' → logprob: -17.663042068481445
    7. '.values' → logprob: -17.663042068481445
    8. 'Values' → logprob: -17.913042068481445
    9. 'value' → logprob: -20.413042068481445
    10. ' valeurs' → logprob: -20.663042068481445

Token 302: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.857719275401905e-05
    2. 'pop' → logprob: -10.250038146972656
    3. '.' → logprob: -13.000038146972656
    4. ' pop' → logprob: -14.250038146972656
    5. ' .' → logprob: -16.000038146972656
    6. '	pop' → logprob: -16.375038146972656
    7. '_pop' → logprob: -18.500038146972656
    8. '.Pop' → logprob: -18.500038146972656
    9. '(pop' → logprob: -19.375038146972656
    10. '.p' → logprob: -19.625038146972656

Token 303: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0005543439765460789
    2. ',' → logprob: -7.75055456161499
    3. '()' → logprob: -9.000554084777832
    4. '),' → logprob: -16.12555503845215
    5. '(),
' → logprob: -16.12555503845215
    6. ' (),' → logprob: -16.62555503845215
    7. '(' → logprob: -17.25055503845215
    8. ' ,' → logprob: -17.37555503845215
    9. '();' → logprob: -18.75055503845215
    10. '()
' → logprob: -18.75055503845215

Token 304: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.3868767023086548
    2. 'values' → logprob: -1.1368767023086548
    3. '(values' → logprob: -12.761877059936523
    4. '	values' → logprob: -13.636877059936523
    5. '.values' → logprob: -13.886877059936523
    6. ' ' → logprob: -15.136877059936523
    7. '<|end|>' → logprob: -16.136877059936523
    8. ' valores' → logprob: -16.386877059936523
    9. '_values' → logprob: -16.636877059936523
    10. '```' → logprob: -17.511877059936523

Token 305: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0032059962395578623
    2. 'pop' → logprob: -5.7532057762146
    3. ' pop' → logprob: -10.503206253051758
    4. ' .' → logprob: -14.878206253051758
    5. '.' → logprob: -15.003206253051758
    6. '	pop' → logprob: -16.878206253051758
    7. '_pop' → logprob: -17.253206253051758
    8. '.append' → logprob: -17.628206253051758
    9. 'Pop' → logprob: -18.003206253051758
    10. '(pop' → logprob: -18.128206253051758

Token 306: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.20149169862270355
    2. '()' → logprob: -1.7014917135238647
    3. '()
' → logprob: -10.326491355895996
    4. '               ' → logprob: -10.951491355895996
    5. ')' → logprob: -11.576491355895996
    6. '(),' → logprob: -12.326491355895996
    7. '()

' → logprob: -12.701491355895996
    8. ')
' → logprob: -12.701491355895996
    9. ' ()
' → logprob: -13.451491355895996
    10. '           ' → logprob: -13.576491355895996

Token 307: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018723515793681145
    2. 'values' → logprob: -4.518723487854004
    3. ' values' → logprob: -5.018723487854004
    4. '       ' → logprob: -7.643723487854004
    5. '           ' → logprob: -7.643723487854004
    6. '   ' → logprob: -10.893723487854004
    7. '_values' → logprob: -11.143723487854004
    8. '	values' → logprob: -11.143723487854004
    9. '(values' → logprob: -11.393723487854004
    10. 'Values' → logprob: -12.643723487854004

Token 308: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.07998248189687729
    2. ' values' → logprob: -2.5799825191497803
    3. '               ' → logprob: -7.079982280731201
    4. '           ' → logprob: -8.57998275756836
    5. '       ' → logprob: -10.70498275756836
    6. '   ' → logprob: -10.95498275756836
    7. '                   ' → logprob: -11.57998275756836
    8. '	values' → logprob: -12.07998275756836
    9. '    ' → logprob: -13.45498275756836
    10. '            ' → logprob: -13.57998275756836

Token 309: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.500005722045898
    3. '.app' → logprob: -13.875005722045898
    4. ' .' → logprob: -15.125005722045898
    5. 'append' → logprob: -15.625005722045898
    6. '.Append' → logprob: -17.0000057220459
    7. '.extend' → logprob: -18.0000057220459
    8. '].' → logprob: -18.1250057220459
    9. 'app' → logprob: -18.2500057220459
    10. '<|end|>' → logprob: -18.2500057220459

Token 310: '(app' (ID: 21667)
  Prédit: '(app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(app' → logprob: -0.0007207724265754223
    2. 'apply' → logprob: -7.250720977783203
    3. 'app' → logprob: -11.500720977783203
    4. ' apply' → logprob: -15.000720977783203
    5. '(
' → logprob: -15.125720977783203
    6. '(' → logprob: -16.750720977783203
    7. '(ap' → logprob: -17.250720977783203
    8. '.apply' → logprob: -17.375720977783203
    9. ' (' → logprob: -18.125720977783203
    10. '_apply' → logprob: -19.750720977783203

Token 311: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.16033948957920074
    2. 'y' → logprob: -1.9103394746780396
    3. 'ay' → logprob: -9.16033935546875
    4. '(y' → logprob: -12.41033935546875
    5. '```' → logprob: -13.91033935546875
    6. 'apply' → logprob: -14.16033935546875
    7. 'l' → logprob: -14.28533935546875
    8. 'oy' → logprob: -14.41033935546875
    9. '[y' → logprob: -15.03533935546875
    10. '
' → logprob: -15.16033935546875

Token 312: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -2.935296834039036e-06
    2. 'op' → logprob: -13.62500286102295
    3. 'a' → logprob: -13.87500286102295
    4. '_ops' → logprob: -14.75000286102295
    5. '(a' → logprob: -15.75000286102295
    6. 'Op' → logprob: -16.750003814697266
    7. '_app' → logprob: -17.000003814697266
    8. '   ' → logprob: -17.000003814697266
    9. '-op' → logprob: -17.625003814697266
    10. '_OP' → logprob: -18.375003814697266

Token 313: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.7432603272027336e-06
    2. 'a' → logprob: -14.000001907348633
    3. '(' → logprob: -14.125001907348633
    4. '(
' → logprob: -16.000001907348633
    5. ' (' → logprob: -18.875001907348633
    6. '   ' → logprob: -20.625001907348633
    7. ')' → logprob: -22.125001907348633
    8. ')a' → logprob: -22.375001907348633
    9. ' a' → logprob: -22.625001907348633
    10. '           ' → logprob: -22.875001907348633

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3782830137643032e-05
    2. ' ,' → logprob: -11.75001335144043
    3. ',b' → logprob: -12.12501335144043
    4. ',
' → logprob: -15.62501335144043
    5. ',c' → logprob: -16.62501335144043
    6. ')' → logprob: -17.50001335144043
    7. 'b' → logprob: -17.50001335144043
    8. ' b' → logprob: -17.87501335144043
    9. ',

' → logprob: -18.25001335144043
    10. '(' → logprob: -18.75001335144043

Token 315: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. ')b' → logprob: -20.12520408630371
    4. '   ' → logprob: -21.62520408630371
    5. '	b' → logprob: -22.12520408630371
    6. ' ' → logprob: -22.37520408630371
    7. '<|end|>' → logprob: -22.37520408630371
    8. ',' → logprob: -23.25020408630371
    9. ',b' → logprob: -23.25020408630371
    10. '       ' → logprob: -23.50020408630371

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',
' → logprob: -15.125001907348633
    4. '(' → logprob: -16.500001907348633
    5. '),' → logprob: -16.750001907348633
    6. '(),' → logprob: -16.750001907348633
    7. 'ops' → logprob: -17.000001907348633
    8. '           ' → logprob: -18.625001907348633
    9. ' ops' → logprob: -18.625001907348633
    10. 'op' → logprob: -18.875001907348633

Token 317: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.00012403888104017824
    2. ' ops' → logprob: -9.000123977661133
    3. '.ops' → logprob: -15.500123977661133
    4. 'op' → logprob: -15.875123977661133
    5. ' ' → logprob: -16.875123977661133
    6. 'opts' → logprob: -17.000123977661133
    7. '   ' → logprob: -17.125123977661133
    8. 'ots' → logprob: -17.875123977661133
    9. 'os' → logprob: -17.875123977661133
    10. '_ops' → logprob: -18.125123977661133

Token 318: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -6.392202976712724e-06
    2. 'pop' → logprob: -12.625006675720215
    3. '.' → logprob: -12.750006675720215
    4. '[-' → logprob: -16.6250057220459
    5. ' .' → logprob: -18.5000057220459
    6. '	pop' → logprob: -19.8750057220459
    7. '.Pop' → logprob: -19.8750057220459
    8. ').' → logprob: -20.0000057220459
    9. ' pop' → logprob: -20.5000057220459
    10. '(pop' → logprob: -20.8750057220459

Token 319: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9307659864425659
    2. '()))' → logprob: -0.9307659864425659
    3. '()))
' → logprob: -1.680765986442566
    4. '))
' → logprob: -3.9307661056518555
    5. '())' → logprob: -5.9307661056518555
    6. '()' → logprob: -6.0557661056518555
    7. ')' → logprob: -7.9307661056518555
    8. '())
' → logprob: -8.680766105651855
    9. '()
' → logprob: -10.305766105651855
    10. '()))

' → logprob: -10.805766105651855

Token 320: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03497014194726944
    2. '   ' → logprob: -4.409970283508301
    3. ' i' → logprob: -4.659970283508301
    4. 'i' → logprob: -4.784970283508301
    5. '           ' → logprob: -6.159970283508301
    6. 'return' → logprob: -6.659970283508301
    7. ' return' → logprob: -7.159970283508301
    8. '        
' → logprob: -9.0349702835083
    9. '
' → logprob: -9.9099702835083
    10. '    
' → logprob: -10.4099702835083

Token 321: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007697006221860647
    2. ' return' → logprob: -5.007697105407715
    3. '   ' → logprob: -7.257697105407715
    4. '       ' → logprob: -8.382697105407715
    5. '           ' → logprob: -10.382697105407715
    6. '	return' → logprob: -11.882697105407715
    7. 'break' → logprob: -12.007697105407715
    8. '
' → logprob: -13.882697105407715
    9. '```' → logprob: -14.632697105407715
    10. 'i' → logprob: -14.757697105407715

Token 322: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.011049000546336174
    2. ' values' → logprob: -4.511048793792725
    3. '(values' → logprob: -13.636049270629883
    4. '	values' → logprob: -17.011049270629883
    5. 'value' → logprob: -19.011049270629883
    6. '.values' → logprob: -19.886049270629883
    7. '_values' → logprob: -21.261049270629883
    8. '-values' → logprob: -22.136049270629883
    9. 'Values' → logprob: -22.386049270629883
    10. ' ' → logprob: -22.511049270629883

Token 323: '[' (ID: 58)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.009339163079857826
    2. '[' → logprob: -5.134339332580566
    3. '.' → logprob: -6.134339332580566
    4. '[-' → logprob: -6.759339332580566
    5. 'pop' → logprob: -9.634339332580566
    6. '.Pop' → logprob: -12.884339332580566
    7. '```' → logprob: -12.884339332580566
    8. '	pop' → logprob: -13.509339332580566
    9. '.append' → logprob: -13.759339332580566
    10. '0' → logprob: -14.009339332580566

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04858839511871338
    2. '-' → logprob: -3.048588275909424
    3. ' -' → logprob: -14.673588752746582
    4. ' ' → logprob: -14.798588752746582
    5. '[-' → logprob: -16.423587799072266
    6. '[' → logprob: -17.423587799072266
    7. '   ' → logprob: -18.048587799072266
    8. '```' → logprob: -18.673587799072266
    9. '−' → logprob: -18.923587799072266
    10. '
' → logprob: -19.423587799072266

Token 325: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.306760805164231e-05
    2. ')
' → logprob: -12.00001335144043
    3. ' )' → logprob: -12.00001335144043
    4. '}' → logprob: -15.50001335144043
    5. ']' → logprob: -15.87501335144043
    6. ')}' → logprob: -17.00001335144043
    7. ')

' → logprob: -17.12501335144043
    8. '   ' → logprob: -17.25001335144043
    9. '<|end|>' → logprob: -17.25001335144043
    10. '')' → logprob: -17.87501335144043

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28397470712661743
    2. '   ' → logprob: -2.2839746475219727
    3. '        
' → logprob: -2.7839746475219727
    4. '    
' → logprob: -3.4089746475219727
    5. '
' → logprob: -3.5339746475219727
    6. ' 
' → logprob: -4.533974647521973
    7. '  
' → logprob: -5.783974647521973
    8. '\n' → logprob: -5.783974647521973
    9. '   
' → logprob: -7.033974647521973
    10. 'i' → logprob: -7.158974647521973

Token 327: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5430677533149719
    2. '   ' → logprob: -1.0430676937103271
    3. '
' → logprob: -3.668067693710327
    4. ' i' → logprob: -3.918067693710327
    5. '    
' → logprob: -4.793067932128906
    6. 'i' (adapté à ' i') → logprob: -4.918067932128906
    7. ' 
' → logprob: -5.918067932128906
    8. '        
' → logprob: -6.293067932128906
    9. '	i' → logprob: -8.668067932128906
    10. ' ' → logprob: -8.793067932128906

Token 328: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05552709475159645
    2. ' +=' → logprob: -3.3055272102355957
    3. '+' → logprob: -4.055527210235596
    4. '+='' → logprob: -12.805526733398438
    5. '+="' → logprob: -13.180526733398438
    6. '++' → logprob: -13.805526733398438
    7. ']+=' → logprob: -14.055526733398438
    8. '=' → logprob: -15.055526733398438
    9. '+++' → logprob: -15.930526733398438
    10. ' +' → logprob: -16.180526733398438

Token 329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '```' → logprob: -18.875804901123047
    4. '0' → logprob: -20.125804901123047
    5. '<|end|>' → logprob: -20.875804901123047
    6. '۱' → logprob: -21.188304901123047
    7. '   ' → logprob: -21.500804901123047
    8. '１' → logprob: -21.688304901123047
    9. '  ' → logprob: -21.813304901123047
    10. '+' → logprob: -22.500804901123047

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '0' → logprob: -17.5
    4. '```' → logprob: -19.0
    5. '   ' → logprob: -21.6875
    6. '`' → logprob: -21.75
    7. '１' → logprob: -21.8125
    8. '۱' → logprob: -22.125
    9. '  ' → logprob: -22.5625
    10. '+' → logprob: -22.625

Token 331: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031249387189745903
    2. ' =' → logprob: -3.7812492847442627
    3. ' ' → logprob: -6.031249523162842
    4. '()' → logprob: -6.656249523162842
    5. 'o' → logprob: -7.781249523162842
    6. 'um' → logprob: -7.781249523162842
    7. 'n' → logprob: -7.906249523162842
    8. 'def' → logprob: -8.156249046325684
    9. '    ' → logprob: -8.156249046325684
    10. '(' → logprob: -8.531249046325684

Token 334: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7414512634277344
    2. ' int' → logprob: -1.6164512634277344
    3. '10' → logprob: -2.3664512634277344
    4. ' ' → logprob: -2.6164512634277344
    5. '5' → logprob: -3.3664512634277344
    6. 'input' → logprob: -3.6164512634277344
    7. '"' → logprob: -3.6164512634277344
    8. '0' → logprob: -3.9914512634277344
    9. '20' → logprob: -5.116451263427734
    10. ' input' → logprob: -5.116451263427734

Token 335: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2893737256526947
    2. '(input' → logprob: -1.664373755455017
    3. '('' → logprob: -2.7893736362457275
    4. 'input' → logprob: -8.414373397827148
    5. '("' → logprob: -8.789373397827148
    6. '()' → logprob: -10.414373397827148
    7. ' (' → logprob: -10.539373397827148
    8. ''' → logprob: -11.039373397827148
    9. '(n' → logprob: -11.039373397827148
    10. '("("' → logprob: -11.664373397827148

Token 336: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.578917920589447
    2. '())' → logprob: -0.828917920589447
    3. '(' → logprob: -6.078917980194092
    4. '('' → logprob: -7.703917980194092
    5. '("("' → logprob: -9.328917503356934
    6. '()>' → logprob: -10.328917503356934
    7. '()
' → logprob: -10.828917503356934
    8. '("' → logprob: -10.828917503356934
    9. '()]' → logprob: -11.203917503356934
    10. '());' → logprob: -11.453917503356934

Token 337: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8550976164988242e-05
    2. ' for' → logprob: -11.375018119812012
    3. 'expr' → logprob: -12.250018119812012
    4. 'results' → logprob: -13.250018119812012
    5. 'result' → logprob: -14.750018119812012
    6. '```' → logprob: -17.000019073486328
    7. 'express' → logprob: -17.625019073486328
    8. 'expression' → logprob: -17.625019073486328
    9. 'print' → logprob: -17.875019073486328
    10. 'while' → logprob: -18.000019073486328

Token 338: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.01548073347657919
    2. '_' → logprob: -4.2654805183410645
    3. ' ' → logprob: -6.6404805183410645
    4. ' i' → logprob: -12.015480995178223
    5. ' ' → logprob: -13.265480995178223
    6. ' ‌' → logprob: -13.515480995178223
    7. ' ​' → logprob: -14.515480995178223
    8. ' ▁' → logprob: -15.890480995178223
    9. ' ﻿' → logprob: -15.890480995178223
    10. ' _
' → logprob: -16.265480041503906

Token 339: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09816647320985794
    2. ' in' → logprob: -2.4731664657592773
    3. '_' → logprob: -4.973166465759277
    4. 'range' → logprob: -6.473166465759277
    5. ' ' → logprob: -8.098166465759277
    6. 'n' → logprob: -8.348166465759277
    7. 'i' → logprob: -9.723166465759277
    8. ' range' → logprob: -9.848166465759277
    9. ' _' → logprob: -10.223166465759277
    10. ' n' → logprob: -11.848166465759277

Token 340: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132619559764862
    2. 'range' → logprob: -1.3132619857788086
    3. '	range' → logprob: -15.813261985778809
    4. '_' → logprob: -16.063261032104492
    5. ' ' → logprob: -17.313261032104492
    6. '_range' → logprob: -18.063261032104492
    7. '  ' → logprob: -18.688261032104492
    8. 'rang' → logprob: -18.938261032104492
    9. '(range' → logprob: -18.938261032104492
    10. 'n' → logprob: -19.313261032104492

Token 341: '(n' (ID: 2406)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8929778337478638
    2. '(' → logprob: -1.2679778337478638
    3. ' ' → logprob: -1.7679778337478638
    4. '(n' → logprob: -2.392977714538574
    5. ' (' → logprob: -3.142977714538574
    6. 'n' → logprob: -5.767977714538574
    7. '  ' → logprob: -8.517977714538574
    8. ' ' → logprob: -8.642977714538574
    9. ' )' → logprob: -8.767977714538574
    10. ' ()' → logprob: -8.892977714538574

Token 342: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032694894820451736
    2. '):
' → logprob: -3.5326948165893555
    3. ')' → logprob: -5.9076948165893555
    4. ':' → logprob: -9.157694816589355
    5. ' ):' → logprob: -9.782694816589355
    6. '():' → logprob: -10.782694816589355
    7. '():
' → logprob: -11.282694816589355
    8. '):
' → logprob: -12.032694816589355
    9. ',' → logprob: -12.532694816589355
    10. '   ' → logprob: -12.532694816589355

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08033622801303864
    2. ' expr' → logprob: -2.705336332321167
    3. 'expr' → logprob: -4.580336093902588
    4. ' s' → logprob: -10.205336570739746
    5. ' expression' → logprob: -10.330336570739746
    6. '   ' → logprob: -11.455336570739746
    7. ' line' → logprob: -12.455336570739746
    8. '(expr' → logprob: -13.205336570739746
    9. '_expr' → logprob: -13.330336570739746
    10. ' print' → logprob: -13.580336570739746

Token 344: ' print' (ID: 2123)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.01000007800757885
    2. ' expr' → logprob: -4.760000228881836
    3. 'print' (adapté à ' print') → logprob: -6.760000228881836
    4. 's' → logprob: -8.760000228881836
    5. 'expression' → logprob: -10.135000228881836
    6. ' expression' → logprob: -11.260000228881836
    7. ' s' → logprob: -12.260000228881836
    8. 'e' → logprob: -12.760000228881836
    9. ' print' → logprob: -12.760000228881836
    10. 'exp' → logprob: -13.510000228881836

Token 345: '(calc' (ID: 190074)
  Prédit: '(calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(calc' → logprob: -0.014246836304664612
    2. '(' → logprob: -4.264246940612793
    3. '(c' → logprob: -9.639246940612793
    4. '('' → logprob: -11.514246940612793
    5. '("' → logprob: -12.014246940612793
    6. '(cal' → logprob: -13.389246940612793
    7. 'calc' → logprob: -15.514246940612793
    8. '(eval' → logprob: -15.764246940612793
    9. '("("' → logprob: -16.639245986938477
    10. '(
' → logprob: -16.639245986938477

Token 346: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02900860458612442
    2. '("("' → logprob: -4.279008388519287
    3. '('' → logprob: -4.654008388519287
    4. '(' → logprob: -5.279008388519287
    5. 'input' → logprob: -9.654008865356445
    6. '("(' → logprob: -11.404008865356445
    7. '('(' → logprob: -11.529008865356445
    8. '(str' → logprob: -11.904008865356445
    9. '("' → logprob: -12.404008865356445
    10. '((' → logprob: -12.404008865356445

Token 347: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.26517581939697266
    2. '()' → logprob: -1.6401758193969727
    3. '())' → logprob: -3.2651758193969727
    4. '()+' → logprob: -8.390175819396973
    5. '().' → logprob: -8.640175819396973
    6. '())))' → logprob: -9.515175819396973
    7. '()));' → logprob: -9.765175819396973
    8. '()))
' → logprob: -10.140175819396973
    9. '()+"' → logprob: -10.265175819396973
    10. '(' → logprob: -10.390175819396973


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 345
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 174
Tokens correctement prédits (top 10): 306
Précision stricte (1ère position): 47.25%
Précision adaptée (1ère position): 50.43%
Précision (top 10): 88.70%
================================================================================
