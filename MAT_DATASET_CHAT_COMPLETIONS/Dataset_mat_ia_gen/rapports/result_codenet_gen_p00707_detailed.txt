================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

sys.setrecursionlimit(10**7)

def main():
    while True:
        # Lecture de la largeur (W) et de la hauteur (H) du matrix
        W, H = map(int, sys.stdin.readline().split())
        if W == 0 and H == 0:
            break  # Fin des données

        matrix = [list(sys.stdin.readline().strip()) for _ in range(H)]

        # Memoization pour stocker le plus grand nombre possible à partir de chaque position
        dp = [[None]*W for _ in range(H)]

        def is_digit(c):
            return '0' <= c <= '9'

        # Recherche du plus grand nombre qui peut débuter en (r, c)
        def dfs(r, c):
            if dp[r][c] is not None:
                return dp[r][c]

            current_char = matrix[r][c]
            # Par hypothèse, on appelle dfs seulement sur un caractère chiffre

            candidates = []

            # Vérifier si on peut aller à droite
            if c+1 < W and is_digit(matrix[r][c+1]):
                candidates.append(dfs(r, c+1))

            # Vérifier si on peut aller en bas
            if r+1 < H and is_digit(matrix[r+1][c]):
                candidates.append(dfs(r+1, c))

            # Si aucun mouvement possible, nombre maximal est juste le chiffre actuel
            if not candidates:
                dp[r][c] = current_char
                return dp[r][c]

            # Sinon, construire le plus grand nombre possible en concaténant ce chiffre au
            # plus grand parmi les suites possibles
            # On choisit la chaîne la plus grande en valeur numérique (en comparant string comme int)
            best_next = max(candidates, key=lambda x: int(x))
            dp[r][c] = current_char + best_next
            return dp[r][c]

        max_number = None
        # On parcourt toute la matrice et on lance dfs sur toutes les positions qui sont des chiffres
        for i in range(H):
            for j in range(W):
                if is_digit(matrix[i][j]):
                    candidate = dfs(i, j)
                    # Suppression des zéros en tête avant comparaison
                    candidate_int = int(candidate)
                    if max_number is None or candidate_int > max_number:
                        max_number = candidate_int

        print(max_number)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27994534373283386
    2. '\n' → logprob: -2.0299453735351562
    3. 'import' → logprob: -3.0299453735351562
    4. '<|end|>' → logprob: -3.1549453735351562
    5. 'newline' → logprob: -5.404945373535156
    6. '\' → logprob: -5.529945373535156
    7. '<|end|>' → logprob: -5.904945373535156
    8. '' → logprob: -6.154945373535156
    9. ',' → logprob: -6.779945373535156
    10. 'print' → logprob: -6.779945373535156

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2113979209971149e-05
    2. '.readline' → logprob: -13.500012397766113
    3. '."""' → logprob: -13.625012397766113
    4. ' .' → logprob: -14.000012397766113
    5. '[' → logprob: -14.125012397766113
    6. '.import' → logprob: -14.250012397766113
    7. '.)' → logprob: -14.250012397766113
    8. '.user' → logprob: -14.375012397766113
    9. '.​' → logprob: -14.375012397766113
    10. '.]' → logprob: -14.500012397766113

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04026559367775917
    2. 'sys' → logprob: -5.4152655601501465
    3. '_sys' → logprob: -5.6652655601501465
    4. ' _' → logprob: -5.6652655601501465
    5. 'attr' → logprob: -5.9152655601501465
    6. 'xt' → logprob: -5.9152655601501465
    7. '_trace' → logprob: -6.0402655601501465
    8. 's' → logprob: -6.1652655601501465
    9. '_xt' → logprob: -6.4152655601501465
    10. '_limit' → logprob: -6.5402655601501465

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.007006624713540077
    2. 'ursive' → logprob: -6.007006645202637
    3. 'limit' → logprob: -6.882006645202637
    4. 't' → logprob: -7.007006645202637
    5. 'urs' → logprob: -7.132006645202637
    6. 'ur' → logprob: -7.507006645202637
    7. 'ut' → logprob: -8.382006645202637
    8. 'set' → logprob: -8.507006645202637
    9. 'urf' → logprob: -8.882006645202637
    10. 'ursor' → logprob: -8.882006645202637

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.31369882822036743
    2. '_limit' → logprob: -1.3136987686157227
    3. '_depth' → logprob: -7.813698768615723
    4. 'lim' → logprob: -11.438698768615723
    5. 'depth' → logprob: -11.438698768615723
    6. 'Limit' → logprob: -13.188698768615723
    7. '_lim' → logprob: -13.188698768615723
    8. '-limit' → logprob: -13.188698768615723
    9. ' limit' → logprob: -13.313698768615723
    10. '_LIMIT' → logprob: -13.563698768615723

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.537868779967539e-06
    2. '(
' → logprob: -12.625008583068848
    3. ' (' → logprob: -12.875008583068848
    4. '("("' → logprob: -13.750008583068848
    5. '(

' → logprob: -14.500008583068848
    6. '((' → logprob: -15.125008583068848
    7. '('' → logprob: -15.375008583068848
    8. '```' → logprob: -16.12500762939453
    9. '()' → logprob: -16.50000762939453
    10. '(
' → logprob: -17.12500762939453

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4741780161857605
    2. '100' → logprob: -0.9741780161857605
    3. ' ' → logprob: -9.349178314208984
    4. '500' → logprob: -11.849178314208984
    5. '1' → logprob: -12.724178314208984
    6. '300' → logprob: -13.224178314208984
    7. '  ' → logprob: -14.474178314208984
    8. '   ' → logprob: -15.099178314208984
    9. '999' → logprob: -15.099178314208984
    10. '(' → logprob: -15.224178314208984

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18268229067325592
    2. '000' → logprob: -2.0576822757720947
    3. '00' → logprob: -3.3076822757720947
    4. '4' → logprob: -6.057682514190674
    5. '6' → logprob: -8.807682037353516
    6. '5' → logprob: -9.932682037353516
    7. '2' → logprob: -10.557682037353516
    8. ')' → logprob: -10.557682037353516
    9. '3' → logprob: -11.307682037353516
    10. '```' → logprob: -12.182682037353516

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0023091693874448538
    2. '8' → logprob: -6.752309322357178
    3. '9' → logprob: -7.252309322357178
    4. '6' → logprob: -7.752309322357178
    5. ')' → logprob: -17.752309799194336
    6. '```' → logprob: -18.877309799194336
    7. ' ' → logprob: -19.002309799194336
    8. '5' → logprob: -21.127309799194336
    9. '**' → logprob: -21.127309799194336
    10. '}' → logprob: -21.252309799194336

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. '))' → logprob: -13.375001907348633
    3. ' )' → logprob: -14.250001907348633
    4. ')
' → logprob: -17.500001907348633
    5. ')))' → logprob: -17.875001907348633
    6. '）' → logprob: -18.375001907348633
    7. '),' → logprob: -19.000001907348633
    8. ' ' → logprob: -19.000001907348633
    9. ')

' → logprob: -19.375001907348633
    10. ')`' → logprob: -19.375001907348633

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4696383476257324
    2. '
' → logprob: -1.4696383476257324
    3. '

' → logprob: -2.7196383476257324
    4. '\' → logprob: -3.0946383476257324
    5. '
' → logprob: -4.469638347625732
    6. '' → logprob: -4.594638347625732
    7. '```' → logprob: -5.594638347625732
    8. '\n' → logprob: -6.219638347625732
    9. '#' → logprob: -6.344638347625732
    10. ')' → logprob: -7.094638347625732

Token 14: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0310121588408947
    2. ' factorial' → logprob: -4.156012058258057
    3. ' dfs' → logprob: -4.781012058258057
    4. ' space' → logprob: -6.656012058258057
    5. ' main' → logprob: -7.156012058258057
    6. ' fibonacci' → logprob: -7.531012058258057
    7. ' process' → logprob: -7.656012058258057
    8. ' factor' → logprob: -7.781012058258057
    9. ' recursive' → logprob: -8.031012535095215
    10. '_' → logprob: -8.156012535095215

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004754751571454108
    2. ':' → logprob: -8.500475883483887
    3. ' (' → logprob: -9.500475883483887
    4. '(:' → logprob: -9.750475883483887
    5. '():' → logprob: -10.375475883483887
    6. '```' → logprob: -11.000475883483887
    7. '("("' → logprob: -11.125475883483887
    8. '(
' → logprob: -11.250475883483887
    9. ')' → logprob: -11.250475883483887
    10. '('' → logprob: -11.750475883483887

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1971154361963272
    2. '    ' → logprob: -2.072115421295166
    3. '\' → logprob: -3.947115421295166
    4. '\n' → logprob: -4.697115421295166
    5. '    
' → logprob: -4.822115421295166
    6. ' ' → logprob: -5.572115421295166
    7. ':' → logprob: -6.197115421295166
    8. 'n' → logprob: -6.447115421295166
    9. '```' → logprob: -6.697115421295166
    10. '(' → logprob: -6.697115421295166

Token 17: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11636736243963242
    2. '   ' → logprob: -2.8663673400878906
    3. 'pass' → logprob: -3.4913673400878906
    4. ' n' → logprob: -5.366367340087891
    5. 'i' → logprob: -5.491367340087891
    6. ' ' → logprob: -5.616367340087891
    7. 'a' → logprob: -5.991367340087891
    8. ' pass' → logprob: -6.366367340087891
    9. 'for' → logprob: -6.741367340087891
    10. 'print' → logprob: -7.241367340087891

Token 18: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0008764470112510026
    2. 'True' → logprob: -7.500876426696777
    3. ' ' → logprob: -8.125876426696777
    4. '    ' → logprob: -11.750876426696777
    5. ' not' → logprob: -11.875876426696777
    6. '(True' → logprob: -12.125876426696777
    7. '  ' → logprob: -12.250876426696777
    8. ' Tru' → logprob: -14.125876426696777
    9. ' true' → logprob: -14.750876426696777
    10. '   ' → logprob: -14.875876426696777

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0058645629324018955
    2. ' :' → logprob: -5.25586462020874
    3. '():' → logprob: -8.505864143371582
    4. '    ' → logprob: -9.130864143371582
    5. '):' → logprob: -9.130864143371582
    6. '       ' → logprob: -9.380864143371582
    7. ':
' → logprob: -10.130864143371582
    8. '   ' → logprob: -10.380864143371582
    9. ':**' → logprob: -11.130864143371582
    10. ' :
' → logprob: -12.255864143371582

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6770817041397095
    2. '    ' → logprob: -0.9270817041397095
    3. '   ' → logprob: -2.92708158493042
    4. ' ' → logprob: -3.55208158493042
    5. '        
' → logprob: -5.80208158493042
    6. '    
' → logprob: -6.30208158493042
    7. '<|end|>' → logprob: -6.30208158493042
    8. '     ' → logprob: -6.67708158493042
    9. '      ' → logprob: -7.05208158493042
    10. '        ' → logprob: -7.05208158493042

Token 21: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6273343563079834
    2. '    ' → logprob: -1.5023343563079834
    3. '   ' → logprob: -1.8773343563079834
    4. ' try' → logprob: -4.0023345947265625
    5. '       ' → logprob: -4.3773345947265625
    6. 'n' → logprob: -4.6273345947265625
    7. 's' → logprob: -4.8773345947265625
    8. 'input' → logprob: -5.3773345947265625
    9. '```' → logprob: -5.5023345947265625
    10. ' 
' → logprob: -5.5023345947265625

Token 22: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014221916906535625
    2. '    ' → logprob: -4.764222145080566
    3. ' )' → logprob: -6.514222145080566
    4. '<|end|>' → logprob: -6.889222145080566
    5. '  ' → logprob: -7.264222145080566
    6. '        ' → logprob: -7.389222145080566
    7. 'input' → logprob: -8.014222145080566
    8. '#' → logprob: -8.139222145080566
    9. '   ' → logprob: -8.389222145080566
    10. '<|end|>' → logprob: -8.514222145080566

Token 23: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33656787872314453
    2. '   ' → logprob: -1.9615678787231445
    3. '<|end|>' → logprob: -2.7115678787231445
    4. '<|end|>' → logprob: -3.9615678787231445
    5. '    ' → logprob: -4.2115678787231445
    6. '  ' → logprob: -4.8365678787231445
    7. ' input' → logprob: -5.0865678787231445
    8. ':' → logprob: -5.4615678787231445
    9. 'input' → logprob: -5.5865678787231445
    10. '       ' → logprob: -5.7115678787231445

Token 24: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2646405696868896
    2. ' input' → logprob: -1.2646405696868896
    3. ' l' → logprob: -1.7646405696868896
    4. ' la' → logprob: -2.3896405696868896
    5. 'l' → logprob: -2.5146405696868896
    6. 'input' → logprob: -3.6396405696868896
    7. '    ' → logprob: -3.7646405696868896
    8. '   ' → logprob: -3.7646405696868896
    9. 's' → logprob: -5.514640808105469
    10. ' line' → logprob: -5.639640808105469

Token 25: ' largeur' (ID: 180807)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.3248318135738373
    2. 'ligne' → logprob: -1.9498318433761597
    3. 'entrée' → logprob: -2.57483172416687
    4. 'l' → logprob: -3.44983172416687
    5. 's' → logprob: -5.199831962585449
    6. ' input' → logprob: -5.574831962585449
    7. ' ' → logprob: -5.574831962585449
    8. ' l' → logprob: -6.199831962585449
    9. ' lign' → logprob: -6.699831962585449
    10. '   ' → logprob: -6.824831962585449

Token 26: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33324915170669556
    2. '    ' → logprob: -2.208249092102051
    3. '       ' → logprob: -3.083249092102051
    4. '   ' → logprob: -3.208249092102051
    5. '        ' → logprob: -3.708249092102051
    6. ',' → logprob: -4.458249092102051
    7. '  ' → logprob: -4.583249092102051
    8. ' (' → logprob: -4.833249092102051
    9. '     ' → logprob: -5.083249092102051
    10. '      ' → logprob: -5.583249092102051

Token 27: 'W' (ID: 54)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4404217600822449
    2. ' )' → logprob: -1.3154218196868896
    3. ',' → logprob: -3.1904218196868896
    4. '),' → logprob: -4.6904215812683105
    5. 'l' → logprob: -5.0654215812683105
    6. ' la' → logprob: -5.1904215812683105
    7. ' ,' → logprob: -5.3154215812683105
    8. ' ),' → logprob: -5.3154215812683105
    9. 'la' → logprob: -5.5654215812683105
    10. 'width' → logprob: -6.1904215812683105

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06888298690319061
    2. ',' → logprob: -2.818882942199707
    3. '),' → logprob: -5.193882942199707
    4. ' )' → logprob: -7.443882942199707
    5. ',)' → logprob: -7.568882942199707
    6. '):' → logprob: -9.943882942199707
    7. ' ,' → logprob: -10.318882942199707
    8. '')' → logprob: -10.568882942199707
    9. '=' → logprob: -11.068882942199707
    10. ' et' → logprob: -11.193882942199707

Token 29: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2641296088695526
    2. '   ' → logprob: -2.764129638671875
    3. '    ' → logprob: -3.014129638671875
    4. '        ' → logprob: -3.139129638671875
    5. ' ' → logprob: -3.639129638671875
    6. ',' → logprob: -4.139129638671875
    7. ')' → logprob: -5.014129638671875
    8. ' ,' → logprob: -5.389129638671875
    9. '      ' → logprob: -5.514129638671875
    10. '  ' → logprob: -5.639129638671875

Token 30: ' de' (ID: 334)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4952279031276703
    2. 'ha' → logprob: -1.2452279329299927
    3. ' la' → logprob: -2.495227813720703
    4. ' hauteur' → logprob: -4.620227813720703
    5. 'l' → logprob: -4.745227813720703
    6. 'long' → logprob: -7.870227813720703
    7. 'height' → logprob: -8.495227813720703
    8. ' l' → logprob: -8.745227813720703
    9. '   ' → logprob: -8.745227813720703
    10. ' ' → logprob: -9.245227813720703

Token 31: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6918575167655945
    2. 'l' → logprob: -1.4418575763702393
    3. 'la' → logprob: -2.3168575763702393
    4. ' l' → logprob: -2.8168575763702393
    5. ' hauteur' → logprob: -2.9418575763702393
    6. 'ha' → logprob: -3.0668575763702393
    7. ' ' → logprob: -5.69185733795166
    8. ' ' → logprob: -7.31685733795166
    9. 'a' → logprob: -8.56685733795166
    10. 'Ha' → logprob: -9.31685733795166

Token 32: ' hauteur' (ID: 72987)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.020127562806010246
    2. ' hauteur' → logprob: -4.645127773284912
    3. 'pro' → logprob: -5.020127773284912
    4. '   ' → logprob: -6.395127773284912
    5. ' profondeur' → logprob: -7.395127773284912
    6. 'h' → logprob: -8.270127296447754
    7. ' ' → logprob: -8.520127296447754
    8. 'prof' → logprob: -8.520127296447754
    9. 'Ha' → logprob: -8.895127296447754
    10. 'large' → logprob: -9.145127296447754

Token 33: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4443913996219635
    2. ',' → logprob: -1.4443913698196411
    3. '(' → logprob: -2.8193914890289307
    4. ' ' → logprob: -3.4443914890289307
    5. '       ' → logprob: -4.694391250610352
    6. ' ,' → logprob: -5.194391250610352
    7. ' des' → logprob: -6.069391250610352
    8. ')' → logprob: -6.069391250610352
    9. '<|end|>' → logprob: -6.069391250610352
    10. '   ' → logprob: -6.444391250610352

Token 34: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.009727990254759789
    2. ' H' → logprob: -5.134727954864502
    3. ')' → logprob: -6.134727954864502
    4. 'L' → logprob: -7.259727954864502
    5. ',' → logprob: -8.50972843170166
    6. 'l' → logprob: -8.63472843170166
    7. ' ' → logprob: -8.88472843170166
    8. ' )' → logprob: -9.38472843170166
    9. '   ' → logprob: -9.50972843170166
    10. 'h' → logprob: -9.88472843170166

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03002249076962471
    2. '):' → logprob: -3.530022382736206
    3. '       ' → logprob: -8.780022621154785
    4. '   ' → logprob: -10.030022621154785
    5. ' )' → logprob: -10.530022621154785
    6. ')
' → logprob: -11.155022621154785
    7. '),' → logprob: -11.280022621154785
    8. '):
' → logprob: -11.780022621154785
    9. ',' → logprob: -13.030022621154785
    10. '```' → logprob: -13.280022621154785

Token 36: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15775981545448303
    2. '   ' → logprob: -2.28275990486145
    3. '    ' → logprob: -4.282759666442871
    4. '        
' → logprob: -4.407759666442871
    5. '    
' → logprob: -5.157759666442871
    6. ',' → logprob: -5.782759666442871
    7. ' ' → logprob: -6.532759666442871
    8. '  ' → logprob: -6.782759666442871
    9. '      ' → logprob: -6.907759666442871
    10. '     ' → logprob: -7.157759666442871

Token 37: ' matrix' (ID: 12248)
  Prédit: ' lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lab' → logprob: -0.48581987619400024
    2. 'lab' → logprob: -1.7358198165893555
    3. 'terrain' → logprob: -2.4858198165893555
    4. ' terrain' → logprob: -2.8608198165893555
    5. ' plateau' → logprob: -3.8608198165893555
    6. ' labyrinth' → logprob: -4.4858198165893555
    7. 'terr' → logprob: -4.9858198165893555
    8. 'plate' → logprob: -5.6108198165893555
    9. 'maze' → logprob: -5.7358198165893555
    10. 'gr' → logprob: -6.6108198165893555

Token 38: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45265769958496094
    2. '   ' → logprob: -1.202657699584961
    3. '        
' → logprob: -4.327657699584961
    4. '    ' → logprob: -4.452657699584961
    5. ',' → logprob: -4.577657699584961
    6. '    
' → logprob: -5.077657699584961
    7. '  ' → logprob: -5.452657699584961
    8. ' ' → logprob: -6.327657699584961
    9. '        ' → logprob: -6.327657699584961
    10. 'n' → logprob: -6.577657699584961

Token 39: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8367452621459961
    2. '       ' → logprob: -1.836745262145996
    3. '    
' → logprob: -2.211745262145996
    4. ' ' → logprob: -2.586745262145996
    5. '    ' → logprob: -2.711745262145996
    6. '  ' → logprob: -3.211745262145996
    7. '   
' → logprob: -3.711745262145996
    8. '        
' → logprob: -3.836745262145996
    9. ' 
' → logprob: -4.336745262145996
    10. '  
' → logprob: -4.711745262145996

Token 40: ' W' (ID: 486)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3413841724395752
    2. 'W' (adapté à ' W') → logprob: -2.341384172439575
    3. ' line' → logprob: -2.591384172439575
    4. ' W' → logprob: -2.841384172439575
    5. 'line' → logprob: -4.341383934020996
    6. '       ' → logprob: -4.466383934020996
    7. ' try' → logprob: -4.591383934020996
    8. 'try' → logprob: -4.841383934020996
    9. 'w' → logprob: -4.966383934020996
    10. ' w' → logprob: -5.966383934020996

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001224274281412363
    2. ' ,' → logprob: -6.751224040985107
    3. ',W' → logprob: -10.251224517822266
    4. '=' → logprob: -11.751224517822266
    5. ' =' → logprob: -12.001224517822266
    6. '   ' → logprob: -13.876224517822266
    7. ',H' → logprob: -14.251224517822266
    8. ')' → logprob: -14.626224517822266
    9. ',N' → logprob: -15.626224517822266
    10. '_,' → logprob: -16.001224517822266

Token 42: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.5252779126167297
    2. 'H' → logprob: -0.9002779126167297
    3. ' ' → logprob: -6.400278091430664
    4. '<|end|>' → logprob: -7.775278091430664
    5. '<|end|>' → logprob: -10.900278091430664
    6. '  ' → logprob: -10.900278091430664
    7. ' ' → logprob: -11.525278091430664
    8. 'space' → logprob: -11.775278091430664
    9. ',H' → logprob: -11.900278091430664
    10. ')' → logprob: -13.150278091430664

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488577485084534
    2. '=' → logprob: -2.9298858642578125
    3. '=input' → logprob: -13.054885864257812
    4. ',' → logprob: -15.054885864257812
    5. ' ' → logprob: -15.304885864257812
    6. '=int' → logprob: -15.554885864257812
    7. '=sys' → logprob: -16.054885864257812
    8. '=line' → logprob: -16.304885864257812
    9. ')' → logprob: -16.429885864257812
    10. '＝' → logprob: -16.929885864257812

Token 44: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.012544969096779823
    2. 'map' → logprob: -4.387545108795166
    3. '	map' → logprob: -11.637544631958008
    4. ' ' → logprob: -11.887544631958008
    5. ' [' → logprob: -11.887544631958008
    6. '[' → logprob: -12.012544631958008
    7. ' ' → logprob: -13.387544631958008
    8. '   ' → logprob: -13.512544631958008
    9. ' list' → logprob: -14.012544631958008
    10. '(map' → logprob: -14.262544631958008

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3875339925289154
    2. '(' → logprob: -1.1375340223312378
    3. '(input' → logprob: -7.887534141540527
    4. '(str' → logprob: -9.012534141540527
    5. '(lambda' → logprob: -9.137534141540527
    6. '(
' → logprob: -10.512534141540527
    7. '(list' → logprob: -11.762534141540527
    8. 'int' → logprob: -12.137534141540527
    9. '(eval' → logprob: -12.262534141540527
    10. '<int' → logprob: -12.512534141540527

Token 46: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1915808469057083
    2. 'input' → logprob: -2.0665807723999023
    3. ')' → logprob: -4.066580772399902
    4. '(' → logprob: -4.316580772399902
    5. '(sys' → logprob: -4.691580772399902
    6. ',input' → logprob: -5.191580772399902
    7. ',' → logprob: -6.441580772399902
    8. 'sys' → logprob: -7.691580772399902
    9. ' input' → logprob: -8.066580772399902
    10. '=input' → logprob: -10.316580772399902

Token 47: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2992032468318939
    2. ' input' → logprob: -1.4242032766342163
    3. 'sys' → logprob: -4.549203395843506
    4. ' sys' → logprob: -4.924203395843506
    5. ')' → logprob: -10.549202919006348
    6. '	input' → logprob: -12.299202919006348
    7. '=input' → logprob: -12.674202919006348
    8. ' ' → logprob: -13.174202919006348
    9. '(sys' → logprob: -13.174202919006348
    10. '   ' → logprob: -13.299202919006348

Token 48: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.4656579120783135e-05
    2. '.' → logprob: -10.625044822692871
    3. '.readline' → logprob: -11.000044822692871
    4. '.argv' → logprob: -13.250044822692871
    5. '.stdout' → logprob: -14.250044822692871
    6. '.std' → logprob: -14.625044822692871
    7. 'stdin' → logprob: -14.750044822692871
    8. '.input' → logprob: -15.625044822692871
    9. '(stdin' → logprob: -16.875043869018555
    10. '.st' → logprob: -17.500043869018555

Token 49: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.3544423381972592e-05
    2. '.read' → logprob: -11.62501335144043
    3. '.' → logprob: -12.50001335144043
    4. '.readlines' → logprob: -15.00001335144043
    5. '.stdin' → logprob: -15.00001335144043
    6. ').' → logprob: -16.37501335144043
    7. '().' → logprob: -16.62501335144043
    8. ')' → logprob: -18.50001335144043
    9. '.write' → logprob: -19.00001335144043
    10. ' readline' → logprob: -19.12501335144043

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023154958034865558
    2. '()' → logprob: -8.500231742858887
    3. '())' → logprob: -10.500231742858887
    4. ' ().' → logprob: -15.625231742858887
    5. '()))' → logprob: -16.25023078918457
    6. '(' → logprob: -16.87523078918457
    7. '().'' → logprob: -16.87523078918457
    8. '());' → logprob: -17.00023078918457
    9. '()).' → logprob: -17.25023078918457
    10. '()
' → logprob: -17.50023078918457

Token 51: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5890746116638184
    2. 'split' → logprob: -0.8390746116638184
    3. 'rstrip' → logprob: -4.339074611663818
    4. ' split' → logprob: -14.964075088500977
    5. ' strip' → logprob: -15.464075088500977
    6. '(split' → logprob: -17.089075088500977
    7. 's' → logprob: -17.464075088500977
    8. 'read' → logprob: -17.839075088500977
    9. '```' → logprob: -17.964075088500977
    10. ' ' → logprob: -18.089075088500977

Token 52: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.026488741859793663
    2. ')' → logprob: -4.026488780975342
    3. '()' → logprob: -4.901488780975342
    4. '()))' → logprob: -7.276488780975342
    5. '))' → logprob: -9.026488304138184
    6. '())
' → logprob: -10.151488304138184
    7. '()),' → logprob: -12.401488304138184
    8. '(' → logprob: -12.651488304138184
    9. ' ())' → logprob: -13.276488304138184
    10. '(),' → logprob: -13.651488304138184

Token 53: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4855470061302185
    2. '<|end|>' → logprob: -1.6105470657348633
    3. ')' → logprob: -3.1105470657348633
    4. ' ' → logprob: -3.2355470657348633
    5. '       ' → logprob: -3.2355470657348633
    6. '   ' → logprob: -3.4855470657348633
    7. '
' → logprob: -5.235547065734863
    8. ':
' → logprob: -5.610547065734863
    9. '):' → logprob: -5.985547065734863
    10. ' 
' → logprob: -5.985547065734863

Token 54: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.04862586408853531
    2. 'W' → logprob: -3.048625946044922
    3. ' ' → logprob: -10.923625946044922
    4. ' not' → logprob: -11.548625946044922
    5. ' (' → logprob: -11.798625946044922
    6. '(' → logprob: -13.673625946044922
    7. 'not' → logprob: -14.298625946044922
    8. '  ' → logprob: -14.423625946044922
    9. ' ' → logprob: -14.673625946044922
    10. '   ' → logprob: -15.173625946044922

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31328392028808594
    2. '==' → logprob: -1.313283920288086
    3. '=' → logprob: -11.563283920288086
    4. ' =' → logprob: -12.313283920288086
    5. ' ' → logprob: -12.688283920288086
    6. ')==' → logprob: -13.938283920288086
    7. ' <=' → logprob: -14.188283920288086
    8. '```' → logprob: -14.313283920288086
    9. '()==' → logprob: -14.313283920288086
    10. '===' → logprob: -14.688283920288086

Token 57: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326122283935547
    2. '0' → logprob: -0.7576122283935547
    3. ' H' → logprob: -12.695112228393555
    4. 'H' → logprob: -12.882612228393555
    5. ' ' → logprob: -13.132612228393555
    6. '  ' → logprob: -14.257612228393555
    7. '00' → logprob: -14.507612228393555
    8. '```' → logprob: -14.757612228393555
    9. '۰' → logprob: -14.820112228393555
    10. '=' → logprob: -14.882612228393555

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861528143286705
    2. ' ' → logprob: -4.758615493774414
    3. ' ' → logprob: -15.758615493774414
    4. '۰' → logprob: -15.758615493774414
    5. 'H' → logprob: -15.946115493774414
    6. '０' → logprob: -16.508615493774414
    7. '```' → logprob: -16.883615493774414
    8. ' and' → logprob: -17.446115493774414
    9. '  ' → logprob: -17.508615493774414
    10. '   ' → logprob: -17.633615493774414

Token 59: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.039138346910476685
    2. ' or' → logprob: -3.4141383171081543
    3. 'and' → logprob: -5.289138317108154
    4. ' ' → logprob: -7.789138317108154
    5. 'or' → logprob: -12.039138793945312
    6. ':' → logprob: -13.164138793945312
    7. '<|end|>' → logprob: -13.164138793945312
    8. '   ' → logprob: -13.539138793945312
    9. '	and' → logprob: -13.914138793945312
    10. '  ' → logprob: -14.164138793945312

Token 60: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.12693388760089874
    2. 'H' → logprob: -2.1269338130950928
    3. ' ' → logprob: -12.876934051513672
    4. '	H' → logprob: -13.501934051513672
    5. ' ' → logprob: -14.001934051513672
    6. '   ' → logprob: -15.001934051513672
    7. '<|end|>' → logprob: -15.251934051513672
    8. '       ' → logprob: -15.501934051513672
    9. '  ' → logprob: -15.626934051513672
    10. '    ' → logprob: -16.501934051513672

Token 61: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11455278098583221
    2. '==' → logprob: -2.2395527362823486
    3. ')' → logprob: -7.489552974700928
    4. '<|end|>' → logprob: -7.864552974700928
    5. ' ' → logprob: -8.48955249786377
    6. ')==' → logprob: -8.73955249786377
    7. ':' → logprob: -9.11455249786377
    8. '=' → logprob: -9.48955249786377
    9. '0' → logprob: -9.73955249786377
    10. '<|end|>' → logprob: -10.11455249786377

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740813374519348
    2. ' ' → logprob: -0.9740813374519348
    3. ' ' → logprob: -12.599081039428711
    4. '  ' → logprob: -15.224081039428711
    5. '<|end|>' → logprob: -15.224081039428711
    6. '   ' → logprob: -15.911581039428711
    7. '```' → logprob: -16.41158103942871
    8. '۰' → logprob: -16.78658103942871
    9. '<|end|>' → logprob: -16.97408103942871
    10. '	' → logprob: -17.91158103942871

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620591644197702
    2. ' ' → logprob: -5.379620552062988
    3. ' ' → logprob: -16.254621505737305
    4. '<|end|>' → logprob: -16.254621505737305
    5. '  ' → logprob: -16.379621505737305
    6. '   ' → logprob: -16.754621505737305
    7. '۰' → logprob: -17.254621505737305
    8. '<|end|>' → logprob: -17.879621505737305
    9. '```' → logprob: -18.317121505737305
    10. ')' → logprob: -18.567121505737305

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043972869752906263
    2. ':
' → logprob: -7.750439643859863
    3. ' :' → logprob: -12.500439643859863
    4. ':return' → logprob: -12.625439643859863
    5. '):' → logprob: -13.875439643859863
    6. '       ' → logprob: -14.375439643859863
    7. '   ' → logprob: -15.750439643859863
    8. '.' → logprob: -16.50044059753418
    9. ':
' → logprob: -16.62544059753418
    10. ',' → logprob: -17.00044059753418

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07912617921829224
    2. '       ' → logprob: -2.5791261196136475
    3. ':' → logprob: -9.454126358032227
    4. ' break' → logprob: -9.829126358032227
    5. '   ' → logprob: -9.954126358032227
    6. '               ' → logprob: -11.829126358032227
    7. '\n' → logprob: -11.954126358032227
    8. '	break' → logprob: -12.079126358032227
    9. '		' → logprob: -12.204126358032227
    10. '          ' → logprob: -12.454126358032227

Token 66: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46770232915878296
    2. ' break' → logprob: -1.3427023887634277
    3. 'break' (adapté à ' break') → logprob: -2.7177023887634277
    4. '       ' → logprob: -3.0927023887634277
    5. '	break' → logprob: -8.09270191192627
    6. '               ' → logprob: -8.46770191192627
    7. 'return' → logprob: -8.59270191192627
    8. ' return' → logprob: -9.09270191192627
    9. '   ' → logprob: -9.34270191192627
    10. '_break' → logprob: -10.71770191192627

Token 67: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.184607744216919
    2. '\n' → logprob: -1.184607744216919
    3. '       ' → logprob: -1.559607744216919
    4. '<|end|>' → logprob: -1.934607744216919
    5. ')' → logprob: -4.55960750579834
    6. '\' → logprob: -4.80960750579834
    7. 'newline' → logprob: -5.80960750579834
    8. '#' → logprob: -5.93460750579834
    9. '        
' → logprob: -6.30960750579834
    10. '   ' → logprob: -6.43460750579834

Token 69: ' Fin' (ID: 7772)
  Prédit: ' fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.22854986786842346
    2. '       ' → logprob: -3.4785499572753906
    3. ' stopper' → logprob: -3.4785499572753906
    4. ' program' → logprob: -3.7285499572753906
    5. ' quitter' → logprob: -3.8535499572753906
    6. ' return' → logprob: -4.603549957275391
    7. ' terminer' → logprob: -4.603549957275391
    8. ' exit' → logprob: -4.853549957275391
    9. 'fin' → logprob: -4.978549957275391
    10. ' ' → logprob: -5.103549957275391

Token 70: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.37535351514816284
    2. ' données' → logprob: -1.8753535747528076
    3. 'entr' → logprob: -2.6253535747528076
    4. ' entr' → logprob: -3.1253535747528076
    5. 'tests' → logprob: -3.7503535747528076
    6. 'entrée' → logprob: -5.1253533363342285
    7. ' tests' → logprob: -5.3753533363342285
    8. 'don' → logprob: -5.6253533363342285
    9. 'inputs' → logprob: -6.5003533363342285
    10. 'test' → logprob: -7.1253533363342285

Token 72: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4478813409805298
    2. '<|end|>' → logprob: -1.0728813409805298
    3. '
' → logprob: -4.82288122177124
    4. '<|end|>' → logprob: -5.32288122177124
    5. '        
' → logprob: -6.07288122177124
    6. '\n' → logprob: -6.94788122177124
    7. '        ' → logprob: -7.19788122177124
    8. '   ' → logprob: -8.072881698608398
    9. ')' → logprob: -8.322881698608398
    10. '      ' → logprob: -8.447881698608398

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16491182148456573
    2. '        
' → logprob: -2.7899117469787598
    3. '\n' → logprob: -3.5399117469787598
    4. '<|end|>' → logprob: -3.5399117469787598
    5. '
' → logprob: -4.16491174697876
    6. '   ' → logprob: -5.53991174697876
    7. '    
' → logprob: -5.66491174697876
    8. '        ' → logprob: -6.41491174697876
    9. '\' → logprob: -6.66491174697876
    10. '```' → logprob: -7.03991174697876

Token 74: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.42327606678009033
    2. '       ' → logprob: -1.7982760667800903
    3. 'grid' → logprob: -2.298275947570801
    4. ' matrix' → logprob: -3.173275947570801
    5. '   ' → logprob: -4.423275947570801
    6. ' grid' → logprob: -4.798275947570801
    7. 'mat' → logprob: -5.173275947570801
    8. 'm' → logprob: -5.673275947570801
    9. 'graph' → logprob: -6.048275947570801
    10. '        
' → logprob: -6.548275947570801

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011196012608706951
    2. '=' → logprob: -4.511196136474609
    3. '[' → logprob: -9.51119613647461
    4. '[]' → logprob: -11.26119613647461
    5. '   ' → logprob: -11.38619613647461
    6. ' ' → logprob: -11.63619613647461
    7. '=[]' → logprob: -11.63619613647461
    8. ')' → logprob: -11.76119613647461
    9. ' =
' → logprob: -12.38619613647461
    10. '<|end|>' → logprob: -12.76119613647461

Token 76: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1040598452091217
    2. ' [' → logprob: -2.604059934616089
    3. '[]' → logprob: -3.854059934616089
    4. ' []' → logprob: -6.35405969619751
    5. '[s' → logprob: -7.35405969619751
    6. '[list' → logprob: -8.479060173034668
    7. '[]
' → logprob: -8.729060173034668
    8. '[int' → logprob: -8.979060173034668
    9. '[str' → logprob: -8.979060173034668
    10. '[m' → logprob: -9.479060173034668

Token 77: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20165814459323883
    2. ' list' → logprob: -1.7016581296920776
    3. 'sys' → logprob: -9.201658248901367
    4. ' sys' → logprob: -9.451658248901367
    5. '[list' → logprob: -10.326658248901367
    6. ' [' → logprob: -11.076658248901367
    7. '   ' → logprob: -12.201658248901367
    8. '[' → logprob: -12.201658248901367
    9. 'tuple' → logprob: -13.451658248901367
    10. '	list' → logprob: -13.451658248901367

Token 78: '(sys' (ID: 41042)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00035155098885297775
    2. '(' → logprob: -8.250351905822754
    3. '(sys' → logprob: -9.625351905822754
    4. '()' → logprob: -11.250351905822754
    5. 'map' → logprob: -11.500351905822754
    6. '()]' → logprob: -14.750351905822754
    7. '(input' → logprob: -15.500351905822754
    8. '(range' → logprob: -15.625351905822754
    9. ' map' → logprob: -16.375350952148438
    10. '(
' → logprob: -16.875350952148438

Token 79: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.4736459888808895e-05
    2. '.readline' → logprob: -11.375014305114746
    3. 'stdin' → logprob: -13.500014305114746
    4. '.' → logprob: -14.000014305114746
    5. '.stdout' → logprob: -14.625014305114746
    6. '(stdin' → logprob: -15.125014305114746
    7. '.std' → logprob: -15.875014305114746
    8. '.argv' → logprob: -16.125015258789062
    9. ' stdin' → logprob: -17.750015258789062
    10. ').' → logprob: -18.000015258789062

Token 80: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.0683535037969705e-05
    2. '.' → logprob: -11.50001049041748
    3. '().' → logprob: -15.00001049041748
    4. '.stdin' → logprob: -16.000011444091797
    5. '.read' → logprob: -17.875011444091797
    6. '.readlines' → logprob: -18.125011444091797
    7. ').' → logprob: -18.125011444091797
    8. ' .' → logprob: -18.250011444091797
    9. '.)' → logprob: -20.750011444091797
    10. '.rstrip' → logprob: -21.125011444091797

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.070975071750581e-05
    2. '()' → logprob: -10.750030517578125
    3. '())' → logprob: -11.625030517578125
    4. 'rstrip' → logprob: -16.000030517578125
    5. ' ().' → logprob: -16.750030517578125
    6. '.rstrip' → logprob: -17.250030517578125
    7. '   ' → logprob: -17.750030517578125
    8. '(' → logprob: -18.125030517578125
    9. '.strip' → logprob: -18.625030517578125
    10. '()
' → logprob: -18.750030517578125

Token 82: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10020678490400314
    2. 'rstrip' → logprob: -2.3502068519592285
    3. ' strip' → logprob: -16.35020637512207
    4. 'split' → logprob: -16.85020637512207
    5. 'str' → logprob: -17.22520637512207
    6. '.rstrip' → logprob: -17.72520637512207
    7. '_strip' → logprob: -18.47520637512207
    8. '(strip' → logprob: -18.72520637512207
    9. '.strip' → logprob: -19.35020637512207
    10. '-strip' → logprob: -20.47520637512207

Token 83: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0026660270523279905
    2. '()' → logprob: -6.002665996551514
    3. '()))' → logprob: -9.627666473388672
    4. '())
' → logprob: -9.877666473388672
    5. ')' → logprob: -10.877666473388672
    6. '()]' → logprob: -10.877666473388672
    7. ' ())' → logprob: -11.252666473388672
    8. '(' → logprob: -11.627666473388672
    9. '('' → logprob: -12.127666473388672
    10. '().' → logprob: -13.377666473388672

Token 84: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35153892636299133
    2. ' for' → logprob: -1.476538896560669
    3. 'for' → logprob: -3.976538896560669
    4. '()' → logprob: -3.976538896560669
    5. ']' → logprob: -4.351539134979248
    6. ')]' → logprob: -4.601539134979248
    7. '       ' → logprob: -5.726539134979248
    8. '   ' → logprob: -6.601539134979248
    9. '(' → logprob: -6.976539134979248
    10. '	for' → logprob: -7.226539134979248

Token 85: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0379755012691021
    2. ' ' → logprob: -3.912975549697876
    3. ' range' → logprob: -4.412975311279297
    4. '_' → logprob: -5.287975311279297
    5. ' i' → logprob: -10.037975311279297
    6. 'range' → logprob: -10.037975311279297
    7. ' in' → logprob: -12.537975311279297
    8. '<|end|>' → logprob: -12.537975311279297
    9. ' xrange' → logprob: -12.662975311279297
    10. '	range' → logprob: -12.662975311279297

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20917609333992004
    2. 'range' → logprob: -2.3341760635375977
    3. ' range' → logprob: -2.7091760635375977
    4. 'in' → logprob: -3.7091760635375977
    5. ' ' → logprob: -7.334176063537598
    6. ' xrange' → logprob: -10.084176063537598
    7. '(range' → logprob: -10.459176063537598
    8. '	range' → logprob: -10.834176063537598
    9. '  ' → logprob: -11.584176063537598
    10. '<|end|>' → logprob: -11.959176063537598

Token 87: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011759399203583598
    2. ' range' → logprob: -6.751175880432129
    3. '(range' → logprob: -13.126175880432129
    4. '	range' → logprob: -13.501175880432129
    5. '   ' → logprob: -14.751175880432129
    6. 'rang' → logprob: -14.876175880432129
    7. 'ran' → logprob: -15.001175880432129
    8. ')' → logprob: -15.501175880432129
    9. ' ' → logprob: -15.501175880432129
    10. '```' → logprob: -16.001176834106445

Token 88: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00012606535165105015
    2. '(' → logprob: -9.000125885009766
    3. ' (' → logprob: -13.000125885009766
    4. 'H' → logprob: -15.125125885009766
    5. '	H' → logprob: -16.875125885009766
    6. '(
' → logprob: -18.000125885009766
    7. ' H' → logprob: -18.125125885009766
    8. '(h' → logprob: -20.375125885009766
    9. ')' → logprob: -20.750125885009766
    10. '   ' → logprob: -20.875125885009766

Token 89: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014392548240721226
    2. ')' → logprob: -4.264392375946045
    3. ']' → logprob: -8.514392852783203
    4. '       ' → logprob: -11.639392852783203
    5. '   ' → logprob: -11.764392852783203
    6. ')])' → logprob: -13.014392852783203
    7. ')
' → logprob: -13.264392852783203
    8. ')],' → logprob: -13.639392852783203
    9. ')}' → logprob: -13.639392852783203
    10. ' )' → logprob: -13.764392852783203

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.170119047164917
    2. '
' → logprob: -1.295119047164917
    3. '       ' → logprob: -1.420119047164917
    4. '<|end|>' → logprob: -2.170119047164917
    5. '    
' → logprob: -4.170119285583496
    6. '        
' → logprob: -4.920119285583496
    7. '    ' → logprob: -5.420119285583496
    8. '\n' → logprob: -5.420119285583496
    9. '' → logprob: -5.545119285583496
    10. 'n' → logprob: -5.545119285583496

Token 91: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1891659498214722
    2. 'def' → logprob: -1.1891659498214722
    3. 'for' → logprob: -2.0641660690307617
    4. 'visited' → logprob: -2.3141660690307617
    5. '   ' → logprob: -2.4391660690307617
    6. ' for' → logprob: -3.8141660690307617
    7. '#' (adapté à ' #') → logprob: -4.189166069030762
    8. '    ' → logprob: -4.814166069030762
    9. 's' → logprob: -5.439166069030762
    10. '        
' → logprob: -5.689166069030762

Token 92: ' Memo' (ID: 99417)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8472732305526733
    2. 'for' → logprob: -1.4722732305526733
    3. 'def' → logprob: -1.8472732305526733
    4. 'dire' → logprob: -2.972273349761963
    5. ' for' → logprob: -3.347273349761963
    6. '#' → logprob: -3.597273349761963
    7. ' visited' → logprob: -3.972273349761963
    8. '   ' → logprob: -4.847273349761963
    9. ' directions' → logprob: -5.097273349761963
    10. 'dx' → logprob: -5.347273349761963

Token 93: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.02972608059644699
    2. 'ize' → logprob: -4.404726028442383
    3. 'iz' → logprob: -4.779726028442383
    4. 'ized' → logprob: -5.654726028442383
    5. 'izer' → logprob: -6.654726028442383
    6. 'i' → logprob: -6.904726028442383
    7. ' =' → logprob: -7.404726028442383
    8. ':' → logprob: -7.904726028442383
    9. 'izing' → logprob: -7.904726028442383
    10. 'ry' → logprob: -8.154726028442383

Token 94: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2261184453964233
    2. 'def' → logprob: -1.4761184453964233
    3. 'dp' → logprob: -1.8511184453964233
    4. ':' → logprob: -2.476118564605713
    5. '       ' → logprob: -2.601118564605713
    6. ' ' → logprob: -3.226118564605713
    7. ' =' → logprob: -3.851118564605713
    8. '_' → logprob: -4.476118564605713
    9. '<|end|>' → logprob: -4.476118564605713
    10. ',' → logprob: -4.601118564605713

Token 95: ' stock' (ID: 6546)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9230620861053467
    2. ' la' → logprob: -1.2980620861053467
    3. ' the' → logprob: -2.9230620861053467
    4. ' ' → logprob: -2.9230620861053467
    5. 'def' → logprob: -3.2980620861053467
    6. ' le' → logprob: -3.2980620861053467
    7. ' dp' → logprob: -3.4230620861053467
    8. ' l' → logprob: -3.6730620861053467
    9. 'dp' → logprob: -3.6730620861053467
    10. ' dfs' → logprob: -4.173062324523926

Token 96: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.006554916966706514
    2. 'e' → logprob: -5.506555080413818
    3. 'a' → logprob: -7.756555080413818
    4. 'age' → logprob: -7.881555080413818
    5. '       ' → logprob: -8.13155460357666
    6. '   ' → logprob: -8.38155460357666
    7. 'ize' → logprob: -8.50655460357666
    8. 'ager' → logprob: -9.50655460357666
    9. '  ' → logprob: -9.63155460357666
    10. '    ' → logprob: -9.63155460357666

Token 97: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.677722156047821
    2. '<|end|>' → logprob: -0.802722156047821
    3. ' ' → logprob: -3.927722215652466
    4. ' la' → logprob: -5.052721977233887
    5. ' the' → logprob: -5.177721977233887
    6. ' l' → logprob: -5.552721977233887
    7. '  ' → logprob: -6.552721977233887
    8. ' le' → logprob: -6.802721977233887
    9. 'les' → logprob: -6.802721977233887
    10. '    ' → logprob: -7.177721977233887

Token 98: ' plus' (ID: 2932)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.3233431279659271
    2. 'count' → logprob: -2.69834303855896
    3. 'comp' → logprob: -2.82334303855896
    4. 'result' → logprob: -3.44834303855896
    5. ' nombre' → logprob: -3.94834303855896
    6. 'rés' → logprob: -3.94834303855896
    7. 'com' → logprob: -4.448343276977539
    8. 'che' → logprob: -4.573343276977539
    9. 'visited' → logprob: -4.948343276977539
    10. 'stat' → logprob: -5.073343276977539

Token 99: ' grand' (ID: 6363)
  Prédit: ' long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' long' → logprob: -0.6510339975357056
    2. 'long' → logprob: -0.9010339975357056
    3. '_' → logprob: -3.526033878326416
    4. '_long' → logprob: -3.901033878326416
    5. '<|end|>' → logprob: -4.901033878326416
    6. 'grand' → logprob: -6.401033878326416
    7. ' ' → logprob: -6.526033878326416
    8. 'court' → logprob: -6.651033878326416
    9. '	long' → logprob: -6.776033878326416
    10. '```' → logprob: -7.151033878326416

Token 100: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9653069376945496
    2. '<|end|>' → logprob: -1.3403069972991943
    3. '_' → logprob: -1.5903069972991943
    4. ' espace' → logprob: -2.9653069972991943
    5. 's' → logprob: -3.8403069972991943
    6. 'contin' → logprob: -4.715306758880615
    7. '  ' → logprob: -5.340306758880615
    8. 'area' → logprob: -5.465306758880615
    9. ' cluster' → logprob: -5.590306758880615
    10. ' "' → logprob: -5.715306758880615

Token 101: ' possible' (ID: 4149)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7902306914329529
    2. ' d' → logprob: -0.9152306914329529
    3. ' ' → logprob: -2.4152307510375977
    4. '<|end|>' → logprob: -4.040230751037598
    5. 'd' → logprob: -4.165230751037598
    6. 'de' → logprob: -4.665230751037598
    7. '   ' → logprob: -5.665230751037598
    8. '    ' → logprob: -5.790230751037598
    9. '_' → logprob: -6.040230751037598
    10. ' of' → logprob: -6.540230751037598

Token 103: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.6997998356819153
    2. 'part' → logprob: -0.8247998356819153
    3. ' chaque' → logprob: -3.6997997760772705
    4. 'tr' → logprob: -4.32480001449585
    5. 'expl' → logprob: -4.44980001449585
    6. 'cha' → logprob: -6.57480001449585
    7. 'atte' → logprob: -6.69980001449585
    8. 'from' → logprob: -7.07480001449585
    9. 'p' → logprob: -7.19980001449585
    10. 'par' → logprob: -7.19980001449585

Token 104: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5307658910751343
    2. ' de' → logprob: -0.9057658910751343
    3. 'd' → logprob: -6.030766010284424
    4. '       ' → logprob: -6.155766010284424
    5. ' du' → logprob: -6.780766010284424
    6. 'de' → logprob: -7.405766010284424
    7. '        ' → logprob: -8.155765533447266
    8. '    ' → logprob: -8.405765533447266
    9. '<|end|>' → logprob: -8.405765533447266
    10. ' des' → logprob: -8.530765533447266

Token 105: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.024232560768723488
    2. ' each' → logprob: -4.274232387542725
    3. '<|end|>' → logprob: -5.149232387542725
    4. 'each' → logprob: -6.024232387542725
    5. ' ' → logprob: -7.399232387542725
    6. ' chacune' → logprob: -7.649232387542725
    7. ' l' → logprob: -9.024232864379883
    8. ' i' → logprob: -9.399232864379883
    9. 'l' → logprob: -9.524232864379883
    10. ' cada' → logprob: -10.149232864379883

Token 106: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.2371691465377808
    2. '<|end|>' → logprob: -1.6121691465377808
    3. ' position' → logprob: -1.7371691465377808
    4. 'cell' → logprob: -1.9871691465377808
    5. 'point' → logprob: -3.2371692657470703
    6. ' cellule' → logprob: -3.3621692657470703
    7. ' point' → logprob: -3.3621692657470703
    8. ' cell' → logprob: -3.4871692657470703
    9. ' (' → logprob: -3.8621692657470703
    10. ' ' → logprob: -4.48716926574707

Token 107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009719611145555973
    2. '   ' → logprob: -5.1347198486328125
    3. '_' → logprob: -7.1347198486328125
    4. ',' → logprob: -7.6347198486328125
    5. '
' → logprob: -8.009719848632812
    6. '      ' → logprob: -8.009719848632812
    7. ' ' → logprob: -8.009719848632812
    8. '        
' → logprob: -8.134719848632812
    9. '    ' → logprob: -8.259719848632812
    10. '<|end|>' → logprob: -8.384719848632812

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014846821315586567
    2. '<|end|>' → logprob: -5.3898468017578125
    3. ' ' → logprob: -5.5148468017578125
    4. '   ' → logprob: -6.2648468017578125
    5. '    ' → logprob: -6.5148468017578125
    6. '        ' → logprob: -6.8898468017578125
    7. '      ' → logprob: -7.3898468017578125
    8. '        
' → logprob: -7.6398468017578125
    9. ',' → logprob: -8.889846801757812
    10. '_' → logprob: -9.014846801757812

Token 109: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6115143299102783
    2. 'dp' (adapté à ' dp') → logprob: -1.1115143299102783
    3. ' memo' → logprob: -2.4865143299102783
    4. 'memo' → logprob: -3.2365143299102783
    5. '   ' → logprob: -5.986514091491699
    6. ' cache' → logprob: -7.361514091491699
    7. ' visited' → logprob: -7.486514091491699
    8. ' max' → logprob: -7.486514091491699
    9. 'cache' → logprob: -7.986514091491699
    10. 'visited' → logprob: -8.1115140914917

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04310161620378494
    2. '=' → logprob: -3.1681015491485596
    3. ' ' → logprob: -9.91810131072998
    4. '[' → logprob: -10.04310131072998
    5. ',' → logprob: -13.29310131072998
    6. ']' → logprob: -13.66810131072998
    7. '=[]' → logprob: -13.91810131072998
    8. ')' → logprob: -13.91810131072998
    9. '   ' → logprob: -13.91810131072998
    10. '  ' → logprob: -14.29310131072998

Token 111: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.23746992647647858
    2. '{}' → logprob: -1.7374699115753174
    3. ' [[' → logprob: -3.7374699115753174
    4. '[' → logprob: -4.4874701499938965
    5. ' {}' → logprob: -8.237469673156738
    6. '[-' → logprob: -9.987469673156738
    7. ' [' → logprob: -11.362469673156738
    8. '{' → logprob: -11.362469673156738
    9. '[['' → logprob: -11.487469673156738
    10. 'dict' → logprob: -13.112469673156738

Token 112: 'None' (ID: 8505)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030708933249115944
    2. 'None' → logprob: -4.1557087898254395
    3. '0' → logprob: -4.2807087898254395
    4. ' -' → logprob: -8.280709266662598
    5. '[-' → logprob: -8.780709266662598
    6. ' None' → logprob: -9.280709266662598
    7. '[' → logprob: -9.405709266662598
    8. '""' → logprob: -10.280709266662598
    9. '[]' → logprob: -10.655709266662598
    10. '(-' → logprob: -10.780709266662598

Token 113: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005511214956641197
    2. 'for' → logprob: -5.255511283874512
    3. ']' → logprob: -8.755511283874512
    4. ')' → logprob: -10.005511283874512
    5. ']*' → logprob: -11.005511283874512
    6. ' ' → logprob: -11.130511283874512
    7. ' if' → logprob: -11.630511283874512
    8. '<|end|>' → logprob: -12.130511283874512
    9. ' ]' → logprob: -12.255511283874512
    10. ',' → logprob: -12.380511283874512

Token 114: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0024859998375177383
    2. ' W' → logprob: -6.002486228942871
    3. '(W' → logprob: -11.752486228942871
    4. '   ' → logprob: -13.877486228942871
    5. '(' → logprob: -14.627486228942871
    6. ' ' → logprob: -15.502486228942871
    7. '	W' → logprob: -15.627486228942871
    8. 'H' → logprob: -16.127485275268555
    9. ' (' → logprob: -16.252485275268555
    10. '    ' → logprob: -16.252485275268555

Token 115: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006744031794369221
    2. 'for' → logprob: -5.006743907928467
    3. ')' → logprob: -11.381744384765625
    4. ']' → logprob: -11.506744384765625
    5. '   ' → logprob: -12.756744384765625
    6. ' ]' → logprob: -13.506744384765625
    7. ' ' → logprob: -13.506744384765625
    8. '	for' → logprob: -14.006744384765625
    9. '    ' → logprob: -15.881744384765625
    10. '       ' → logprob: -16.006744384765625

Token 116: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06250277161598206
    2. ' _' → logprob: -3.437502861022949
    3. '_' → logprob: -4.062502861022949
    4. 'range' → logprob: -4.562502861022949
    5. '_range' → logprob: -7.687502861022949
    6. '_H' → logprob: -9.43750286102295
    7. ' H' → logprob: -9.43750286102295
    8. '<|end|>' → logprob: -9.43750286102295
    9. ' xrange' → logprob: -9.81250286102295
    10. ' ' → logprob: -10.68750286102295

Token 117: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014448046684265
    2. ' range' → logprob: -1.7014448642730713
    3. '	range' → logprob: -11.326444625854492
    4. '(range' → logprob: -11.576444625854492
    5. ' xrange' → logprob: -12.701444625854492
    6. '_range' → logprob: -13.201444625854492
    7. '[' → logprob: -13.576444625854492
    8. '   ' → logprob: -14.201444625854492
    9. ' ' → logprob: -14.576444625854492
    10. '.range' → logprob: -14.826444625854492

Token 118: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20144812762737274
    2. 'range' → logprob: -1.7014480829238892
    3. '	range' → logprob: -11.326448440551758
    4. ' xrange' → logprob: -11.701448440551758
    5. '(range' → logprob: -12.451448440551758
    6. ' ' → logprob: -12.701448440551758
    7. '   ' → logprob: -13.701448440551758
    8. ')' → logprob: -13.951448440551758
    9. ' rang' → logprob: -14.076448440551758
    10. '[' → logprob: -14.138948440551758

Token 119: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.006180710159242153
    2. '(' → logprob: -5.631180763244629
    3. ' (' → logprob: -6.006180763244629
    4. ' range' → logprob: -10.006180763244629
    5. 'range' → logprob: -10.631180763244629
    6. '(range' → logprob: -10.631180763244629
    7. ')' → logprob: -12.006180763244629
    8. '(
' → logprob: -12.881180763244629
    9. ' H' → logprob: -13.256180763244629
    10. 'H' → logprob: -13.256180763244629

Token 120: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0020879271905869246
    2. ']' → logprob: -6.6270880699157715
    3. ')' → logprob: -7.2520880699157715
    4. '])' → logprob: -11.252087593078613
    5. '   ' → logprob: -11.627087593078613
    6. ')])' → logprob: -11.752087593078613
    7. '])]' → logprob: -12.127087593078613
    8. ' )' → logprob: -12.627087593078613
    9. '       ' → logprob: -12.627087593078613
    10. ' ]' → logprob: -12.752087593078613

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5878888368606567
    2. '
' → logprob: -1.4628888368606567
    3. '   ' → logprob: -2.212888717651367
    4. '    
' → logprob: -3.337888717651367
    5. '        
' → logprob: -3.587888717651367
    6. ' 
' → logprob: -4.587888717651367
    7. '<|end|>' → logprob: -4.837888717651367
    8. '' → logprob: -5.587888717651367
    9. '  
' → logprob: -5.587888717651367
    10. ' ' → logprob: -5.587888717651367

Token 122: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17901042103767395
    2. '   ' → logprob: -2.1790103912353516
    3. '
' → logprob: -3.3040103912353516
    4. '       ' → logprob: -5.679010391235352
    5. ' for' → logprob: -6.054010391235352
    6. ' def' → logprob: -6.179010391235352
    7. '    
' → logprob: -6.304010391235352
    8. 'for' → logprob: -6.304010391235352
    9. '        
' → logprob: -7.054010391235352
    10. ' ' → logprob: -7.929010391235352

Token 123: ' is' (ID: 382)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.006372982170432806
    2. 'dfs' → logprob: -5.881372928619385
    3. ' find' → logprob: -6.631372928619385
    4. ' get' → logprob: -7.131372928619385
    5. ' dp' → logprob: -7.631372928619385
    6. ' valid' → logprob: -8.506373405456543
    7. ' max' → logprob: -8.756373405456543
    8. ' explore' → logprob: -9.131373405456543
    9. ' solve' → logprob: -9.256373405456543
    10. ' is' → logprob: -9.381373405456543

Token 124: '_digit' (ID: 119592)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.056329019367694855
    2. '_' → logprob: -3.3063290119171143
    3. '_inside' → logprob: -4.806329250335693
    4. '_safe' → logprob: -5.681329250335693
    5. '_in' → logprob: -6.181329250335693
    6. ' _' → logprob: -6.306329250335693
    7. ' valid' → logprob: -7.431329250335693
    8. '_val' → logprob: -7.681329250335693
    9. '_land' → logprob: -7.681329250335693
    10. '_pal' → logprob: -8.556328773498535

Token 125: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018378450768068433
    2. '(x' → logprob: -8.251837730407715
    3. '(s' → logprob: -8.251837730407715
    4. '<|end|>' → logprob: -8.876837730407715
    5. '(cell' → logprob: -8.876837730407715
    6. '(token' → logprob: -9.126837730407715
    7. '(i' → logprob: -9.251837730407715
    8. ' (' → logprob: -9.251837730407715
    9. '("("' → logprob: -9.251837730407715
    10. 's' → logprob: -9.376837730407715

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008938711136579514
    2. ')' → logprob: -4.758938789367676
    3. '):
' → logprob: -8.258938789367676
    4. '():' → logprob: -11.008938789367676
    5. ' ):' → logprob: -11.008938789367676
    6. ':' → logprob: -11.133938789367676
    7. '[' → logprob: -12.883938789367676
    8. 's' → logprob: -13.008938789367676
    9. '   ' → logprob: -13.133938789367676
    10. ',' → logprob: -13.508938789367676

Token 127: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1404745727777481
    2. '(c' → logprob: -2.390474557876587
    3. '<|end|>' → logprob: -4.640474796295166
    4. 'c' → logprob: -5.015474796295166
    5. ' c' → logprob: -5.140474796295166
    6. ':' → logprob: -5.265474796295166
    7. ' (' → logprob: -5.765474796295166
    8. ' ' → logprob: -6.265474796295166
    9. '(
' → logprob: -6.390474796295166
    10. ')' → logprob: -7.140474796295166

Token 128: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.42079246044158936
    2. ' return' → logprob: -1.1707924604415894
    3. ' c' → logprob: -3.795792579650879
    4. 'c' → logprob: -4.545792579650879
    5. ' ' → logprob: -8.420792579650879
    6. '0' → logprob: -10.295792579650879
    7. '   ' → logprob: -11.545792579650879
    8. 'r' → logprob: -12.920792579650879
    9. '  ' → logprob: -13.295792579650879
    10. '
' → logprob: -13.795792579650879

Token 129: ' '' (ID: 461)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6731522679328918
    2. ' c' → logprob: -0.9231522679328918
    3. ''' → logprob: -2.423152208328247
    4. ' '' → logprob: -5.548152446746826
    5. ' ' → logprob: -9.798151969909668
    6. '	c' → logprob: -11.048151969909668
    7. '48' → logprob: -11.673151969909668
    8. '0' → logprob: -12.048151969909668
    9. ' ' → logprob: -12.548151969909668
    10. '"' → logprob: -13.048151969909668

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0087516784551553e-05
    2. ''' → logprob: -11.62501049041748
    3. '012' → logprob: -14.37501049041748
    4. '9' → logprob: -15.50001049041748
    5. 'c' → logprob: -16.250009536743164
    6. '1' → logprob: -16.625009536743164
    7. 'isdigit' → logprob: -16.875009536743164
    8. ' ' → logprob: -17.375009536743164
    9. '000' → logprob: -17.937509536743164
    10. '2' → logprob: -18.562509536743164

Token 131: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -5.931863051955588e-05
    2. '<=' → logprob: -10.375059127807617
    3. '"' → logprob: -11.500059127807617
    4. ''''' → logprob: -12.375059127807617
    5. ''<' → logprob: -12.500059127807617
    6. ' <=' → logprob: -12.750059127807617
    7. '')' → logprob: -12.750059127807617
    8. ''>' → logprob: -13.375059127807617
    9. '']' → logprob: -14.500059127807617
    10. ''\' → logprob: -14.625059127807617

Token 132: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2816675901412964
    2. ' <=' → logprob: -1.4066675901412964
    3. '<' → logprob: -7.906667709350586
    4. ' ' → logprob: -9.406667709350586
    5. ''' → logprob: -10.781667709350586
    6. '[' → logprob: -11.281667709350586
    7. '=' → logprob: -12.531667709350586
    8. ')<=' → logprob: -12.531667709350586
    9. '<|end|>' → logprob: -12.906667709350586
    10. ']<=' → logprob: -13.156667709350586

Token 133: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00020354038861114532
    2. ' c' → logprob: -8.500203132629395
    3. '	c' → logprob: -18.37520408630371
    4. ')c' → logprob: -20.25020408630371
    5. ' ' → logprob: -21.00020408630371
    6. '_c' → logprob: -21.37520408630371
    7. '.c' → logprob: -22.50020408630371
    8. 'cation' → logprob: -22.87520408630371
    9. '%c' → logprob: -23.37520408630371
    10. 'ct' → logprob: -23.50020408630371

Token 134: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.13271336257457733
    2. ' <=' → logprob: -2.2577133178710938
    3. 'and' → logprob: -4.257713317871094
    4. ' and' → logprob: -5.257713317871094
    5. '<' → logprob: -9.007713317871094
    6. '<|end|>' → logprob: -9.257713317871094
    7. 'c' → logprob: -10.382713317871094
    8. ' c' → logprob: -10.632713317871094
    9. '[' → logprob: -10.757713317871094
    10. 'd' → logprob: -12.382713317871094

Token 135: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04363502934575081
    2. '9' → logprob: -3.168635129928589
    3. ' '' → logprob: -7.41863489151001
    4. ' ' → logprob: -10.418635368347168
    5. '"' → logprob: -13.293635368347168
    6. '`' → logprob: -13.418635368347168
    7. '   ' → logprob: -14.418635368347168
    8. '	' → logprob: -14.418635368347168
    9. '
' → logprob: -15.043635368347168
    10. '```' → logprob: -15.293635368347168

Token 136: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -8.566264295950532e-05
    2. ''' → logprob: -9.375085830688477
    3. '"' → logprob: -15.375085830688477
    4. ' ' → logprob: -15.375085830688477
    5. '```' → logprob: -16.375085830688477
    6. '
' → logprob: -17.000085830688477
    7. ''s' → logprob: -17.375085830688477
    8. '')' → logprob: -17.500085830688477
    9. '   ' → logprob: -17.500085830688477
    10. ' '' → logprob: -17.875085830688477

Token 137: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -7.822646693966817e-06
    2. '')' → logprob: -13.000007629394531
    3. ')' → logprob: -13.250007629394531
    4. ' '' → logprob: -13.750007629394531
    5. '<|end|>' → logprob: -14.000007629394531
    6. ''
' → logprob: -14.250007629394531
    7. ''''' → logprob: -15.000007629394531
    8. ')'' → logprob: -15.375007629394531
    9. '"' → logprob: -15.500007629394531
    10. '']' → logprob: -15.875007629394531

Token 138: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5353811979293823
    2. '<|end|>' → logprob: -1.0353811979293823
    3. '       ' → logprob: -3.035381317138672
    4. '   ' → logprob: -6.285381317138672
    5. '<|end|>' → logprob: -6.535381317138672
    6. ' 
' → logprob: -6.535381317138672
    7. ')' → logprob: -6.660381317138672
    8. ' ' → logprob: -6.910381317138672
    9. '    
' → logprob: -7.035381317138672
    10. '        
' → logprob: -7.160381317138672

Token 139: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03161869943141937
    2. 'def' → logprob: -3.906618595123291
    3. '
' → logprob: -5.531618595123291
    4. '<|end|>' → logprob: -5.656618595123291
    5. '        
' → logprob: -6.656618595123291
    6. '   ' → logprob: -6.906618595123291
    7. '    ' → logprob: -7.656618595123291
    8. '    
' → logprob: -8.90661907196045
    9. '      ' → logprob: -9.03161907196045
    10. '<|end|>' → logprob: -9.28161907196045

Token 140: ' Recherche' (ID: 114815)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010519958101212978
    2. ' def' → logprob: -4.760519981384277
    3. '   ' → logprob: -6.385519981384277
    4. '       ' → logprob: -8.885519981384277
    5. 'for' → logprob: -10.260519981384277
    6. ' for' → logprob: -10.885519981384277
    7. 'from' → logprob: -11.010519981384277
    8. ' ' → logprob: -13.260519981384277
    9. 'import' → logprob: -13.635519981384277
    10. 'd' → logprob: -13.760519981384277

Token 141: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9311437606811523
    2. '_' → logprob: -1.1811437606811523
    3. '   ' → logprob: -2.0561437606811523
    4. '       ' → logprob: -2.8061437606811523
    5. '_depth' → logprob: -3.1811437606811523
    6. ' de' → logprob: -4.181143760681152
    7. 'dfs' → logprob: -4.931143760681152
    8. '    ' → logprob: -5.306143760681152
    9. 'de' → logprob: -5.431143760681152
    10. '_de' → logprob: -5.681143760681152

Token 142: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8136357665061951
    2. ' plus' → logprob: -1.4386358261108398
    3. 'max' → logprob: -2.68863582611084
    4. ' next' → logprob: -3.31363582611084
    5. ' meilleur' → logprob: -3.43863582611084
    6. 'largest' → logprob: -3.56363582611084
    7. ' largest' → logprob: -3.68863582611084
    8. 'next' → logprob: -3.93863582611084
    9. ' voisin' → logprob: -4.43863582611084
    10. ' longest' → logprob: -4.43863582611084

Token 143: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.15229623019695282
    2. ' grand' → logprob: -2.027296304702759
    3. '_' → logprob: -5.02729606628418
    4. 'long' → logprob: -7.27729606628418
    5. 'large' → logprob: -7.90229606628418
    6. 'pro' → logprob: -8.15229606628418
    7. '_gr' → logprob: -8.15229606628418
    8. ' long' → logprob: -8.27729606628418
    9. '```' → logprob: -8.52729606628418
    10. ' large' → logprob: -9.02729606628418

Token 144: ' nombre' (ID: 9733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21385198831558228
    2. 'nombre' → logprob: -2.5888519287109375
    3. '_nombre' → logprob: -2.8388519287109375
    4. '<|end|>' → logprob: -3.0888519287109375
    5. ' nombre' → logprob: -5.3388519287109375
    6. 'token' → logprob: -6.2138519287109375
    7. '_token' → logprob: -6.9638519287109375
    8. ' ' → logprob: -7.0888519287109375
    9. '_number' → logprob: -7.2138519287109375
    10. 'possible' → logprob: -7.8388519287109375

Token 145: ' qui' (ID: 2780)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1981483697891235
    2. '<|end|>' → logprob: -1.3231483697891235
    3. 'possible' → logprob: -1.6981483697891235
    4. ' possible' → logprob: -2.073148250579834
    5. '_possible' → logprob: -2.573148250579834
    6. '<|end|>' → logprob: -5.198148250579834
    7. 'def' → logprob: -5.323148250579834
    8. 'from' → logprob: -5.573148250579834
    9. ' ' → logprob: -5.698148250579834
    10. 'max' → logprob: -5.698148250579834

Token 146: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.26349422335624695
    2. 'pe' → logprob: -1.6384942531585693
    3. ' peux' → logprob: -4.13849401473999
    4. ' commence' → logprob: -5.38849401473999
    5. ' can' → logprob: -6.01349401473999
    6. ' puisse' → logprob: -6.26349401473999
    7. 's' → logprob: -6.38849401473999
    8. ' pourrait' → logprob: -6.63849401473999
    9. 'p' → logprob: -6.88849401473999
    10. ' pe' → logprob: -7.01349401473999

Token 147: ' début' (ID: 29589)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.27072757482528687
    2. 'être' → logprob: -1.6457276344299316
    3. '<|end|>' → logprob: -3.8957276344299316
    4. ' be' → logprob: -4.145727634429932
    5. 's' → logprob: -6.270727634429932
    6. ' etre' → logprob: -6.520727634429932
    7. ''être' → logprob: -7.145727634429932
    8. 'êtres' → logprob: -7.270727634429932
    9. '-être' → logprob: -7.645727634429932
    10. 'contin' → logprob: -7.645727634429932

Token 148: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.000948737608268857
    2. 'e' → logprob: -7.125948905944824
    3. '#' → logprob: -10.250948905944824
    4. ' er' → logprob: -10.625948905944824
    5. 'é' → logprob: -10.750948905944824
    6. '```' → logprob: -10.875948905944824
    7. 'r' → logprob: -11.500948905944824
    8. 'from' → logprob: -12.625948905944824
    9. 'ent' → logprob: -13.125948905944824
    10. '   ' → logprob: -13.125948905944824

Token 149: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: 'r' (ID: 81)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0786943435668945
    2. 'x' → logprob: -1.2036943435668945
    3. 'r' → logprob: -1.4536943435668945
    4. 'i' → logprob: -2.3286943435668945
    5. ' y' → logprob: -4.4536943435668945
    6. ')' → logprob: -4.8286943435668945
    7. 'row' → logprob: -6.2036943435668945
    8. ' x' → logprob: -6.2036943435668945
    9. ' i' → logprob: -6.4536943435668945
    10. ' r' → logprob: -6.8286943435668945

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017011257587000728
    2. 'ow' → logprob: -7.126701354980469
    3. ' ,' → logprob: -7.376701354980469
    4. ',c' → logprob: -8.751701354980469
    5. ',r' → logprob: -10.626701354980469
    6. ')' → logprob: -10.876701354980469
    7. ',
' → logprob: -11.501701354980469
    8. '   ' → logprob: -11.876701354980469
    9. ',row' → logprob: -11.876701354980469
    10. ' ' → logprob: -12.376701354980469

Token 153: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5253421068191528
    2. ' c' → logprob: -0.9003421068191528
    3. ',' → logprob: -6.775341987609863
    4. ',c' → logprob: -7.025341987609863
    5. '	c' → logprob: -9.775341987609863
    6. ' ,' → logprob: -9.900341987609863
    7. ' ' → logprob: -10.400341987609863
    8. '<|end|>' → logprob: -10.650341987609863
    9. '   ' → logprob: -12.400341987609863
    10. ')c' → logprob: -12.525341987609863

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005610911641269922
    2. '):' → logprob: -5.255610942840576
    3. ' )' → logprob: -8.630610466003418
    4. ',' → logprob: -9.505610466003418
    5. ')
' → logprob: -9.755610466003418
    6. '):
' → logprob: -10.880610466003418
    7. '   ' → logprob: -11.630610466003418
    8. '),' → logprob: -11.755610466003418
    9. ')`' → logprob: -12.005610466003418
    10. ' ):' → logprob: -12.505610466003418

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04091794788837433
    2. ':' → logprob: -3.5409178733825684
    3. '   ' → logprob: -4.915917873382568
    4. '
' → logprob: -6.665917873382568
    5. ' :' → logprob: -7.415917873382568
    6. '<|end|>' → logprob: -7.540917873382568
    7. '        
' → logprob: -8.040918350219727
    8. '    ' → logprob: -8.415918350219727
    9. '      ' → logprob: -8.915918350219727
    10. '    
' → logprob: -9.290918350219727

Token 156: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5869287252426147
    2. 'def' (adapté à ' def') → logprob: -1.0869287252426147
    3. '   ' → logprob: -2.7119288444519043
    4. '       ' → logprob: -3.5869288444519043
    5. ' ' → logprob: -5.586928844451904
    6. ' 
' → logprob: -5.586928844451904
    7. '    ' → logprob: -5.586928844451904
    8. '    
' → logprob: -8.211928367614746
    9. '        
' → logprob: -8.586928367614746
    10. '  ' → logprob: -8.711928367614746

Token 157: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.017865322530269623
    2. 'dfs' → logprob: -4.392865180969238
    3. ' find' → logprob: -5.642865180969238
    4. ' max' → logprob: -7.767865180969238
    5. ' dp' → logprob: -7.892865180969238
    6. ' search' → logprob: -8.017865180969238
    7. ' get' → logprob: -8.017865180969238
    8. ' solve' → logprob: -8.892865180969238
    9. 'dp' → logprob: -10.142865180969238
    10. 'max' → logprob: -10.517865180969238

Token 158: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.011365278623998165
    2. '(' → logprob: -4.5113654136657715
    3. ' (' → logprob: -8.136364936828613
    4. '(row' → logprob: -10.761364936828613
    5. '(
' → logprob: -12.886364936828613
    6. ' ' → logprob: -15.636364936828613
    7. '   ' → logprob: -16.01136589050293
    8. '(rows' → logprob: -16.38636589050293
    9. '(rc' → logprob: -16.38636589050293
    10. ',' → logprob: -16.63636589050293

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023214559769257903
    2. ',c' → logprob: -8.625231742858887
    3. ' ,' → logprob: -10.125231742858887
    4. '<|end|>' → logprob: -12.500231742858887
    5. ',r' → logprob: -12.625231742858887
    6. ',
' → logprob: -14.375231742858887
    7. ',d' → logprob: -14.500231742858887
    8. ',next' → logprob: -14.750231742858887
    9. ',n' → logprob: -14.750231742858887
    10. ',j' → logprob: -14.875231742858887

Token 160: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12692904472351074
    2. ' c' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.50192928314209
    4. '   ' → logprob: -15.37692928314209
    5. ')c' → logprob: -16.251928329467773
    6. '	c' → logprob: -16.501928329467773
    7. '  ' → logprob: -17.126928329467773
    8. '    ' → logprob: -17.501928329467773
    9. ' ' → logprob: -18.001928329467773
    10. '
' → logprob: -18.126928329467773

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033220804762095213
    2. ')' → logprob: -6.003322124481201
    3. ',' → logprob: -7.378322124481201
    4. '):
' → logprob: -8.503321647644043
    5. ':' → logprob: -11.503321647644043
    6. ' ):' → logprob: -12.878321647644043
    7. '   ' → logprob: -13.003321647644043
    8. '),' → logprob: -13.878321647644043
    9. '**' → logprob: -14.503321647644043
    10. '):
' → logprob: -14.878321647644043

Token 162: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21039722859859467
    2. ' if' → logprob: -1.7103972434997559
    3. '           ' → logprob: -4.960397243499756
    4. '       ' → logprob: -6.460397243499756
    5. '   ' → logprob: -8.335396766662598
    6. '               ' → logprob: -10.460396766662598
    7. '        ' → logprob: -10.960396766662598
    8. '            
' → logprob: -11.335396766662598
    9. '    ' → logprob: -11.460396766662598
    10. 'dp' → logprob: -11.835396766662598

Token 164: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.15003550052642822
    2. 'dp' → logprob: -2.1500353813171387
    3. ' r' → logprob: -4.025035381317139
    4. 'r' → logprob: -5.525035381317139
    5. ' not' → logprob: -7.775035381317139
    6. ' ' → logprob: -8.025035858154297
    7. '0' → logprob: -8.650035858154297
    8. '(dp' → logprob: -10.400035858154297
    9. '	dp' → logprob: -11.337535858154297
    10. ' rp' → logprob: -12.650035858154297

Token 165: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. '][' → logprob: -17.375
    4. '[c' → logprob: -17.5
    5. ')[' → logprob: -18.75
    6. 'r' → logprob: -19.875
    7. '[d' → logprob: -20.125
    8. '[s' → logprob: -20.125
    9. '[row' → logprob: -20.25
    10. '}[' → logprob: -20.25

Token 166: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001370320824207738
    2. ']' → logprob: -9.250137329101562
    3. '[r' → logprob: -10.625137329101562
    4. '[c' → logprob: -11.250137329101562
    5. ' ][' → logprob: -13.000137329101562
    6. '[' → logprob: -14.625137329101562
    7. '"][' → logprob: -14.875137329101562
    8. ']][' → logprob: -15.500137329101562
    9. ''][' → logprob: -16.500137329101562
    10. '   ' → logprob: -16.625137329101562

Token 167: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.491498531133402e-06
    2. ' c' → logprob: -11.625009536743164
    3. ')c' → logprob: -15.000009536743164
    4. ' ' → logprob: -16.375009536743164
    5. '<|end|>' → logprob: -16.875009536743164
    6. ')' → logprob: -17.500009536743164
    7. '   ' → logprob: -17.750009536743164
    8. ']' → logprob: -18.875009536743164
    9. '	c' → logprob: -19.000009536743164
    10. '[c' → logprob: -19.250009536743164

Token 168: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03675511106848717
    2. ')' → logprob: -4.036755084991455
    3. 'is' → logprob: -4.161755084991455
    4. ']' → logprob: -5.911755084991455
    5. ')is' → logprob: -9.161755561828613
    6. ' ' → logprob: -10.786755561828613
    7. '[' → logprob: -12.411755561828613
    8. '):' → logprob: -12.661755561828613
    9. ' )' → logprob: -12.786755561828613
    10. '!=' → logprob: -12.911755561828613

Token 169: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.003671210026368499
    2. 'is' → logprob: -5.628671169281006
    3. ')' → logprob: -10.128671646118164
    4. '!=' → logprob: -10.878671646118164
    5. ':' → logprob: -11.878671646118164
    6. ']' → logprob: -13.503671646118164
    7. ' ' → logprob: -13.628671646118164
    8. ' !=' → logprob: -14.003671646118164
    9. ')is' → logprob: -14.753671646118164
    10. '[' → logprob: -15.253671646118164

Token 170: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11369036138057709
    2. ' not' → logprob: -2.2386903762817383
    3. 'n' → logprob: -7.988690376281738
    4. 'None' → logprob: -9.363690376281738
    5. '
' → logprob: -9.488690376281738
    6. ')' → logprob: -9.988690376281738
    7. '[' → logprob: -10.113690376281738
    8. '   ' → logprob: -10.113690376281738
    9. '!' → logprob: -10.863690376281738
    10. 'n't' → logprob: -11.113690376281738

Token 171: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.693200409412384
    2. 'None' → logprob: -0.693200409412384
    3. '=None' → logprob: -11.06820011138916
    4. ' ' → logprob: -11.44320011138916
    5. '_None' → logprob: -11.44320011138916
    6. '   ' → logprob: -12.19320011138916
    7. '(None' → logprob: -12.44320011138916
    8. '  ' → logprob: -13.19320011138916
    9. 'none' → logprob: -13.81820011138916
    10. '_none' → logprob: -13.94320011138916

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031235529109835625
    2. ':
' → logprob: -3.531235456466675
    3. ':return' → logprob: -6.656235694885254
    4. ' :' → logprob: -9.281235694885254
    5. '):' → logprob: -10.531235694885254
    6. '):
' → logprob: -10.781235694885254
    7. ' :
' → logprob: -11.031235694885254
    8. '       ' → logprob: -11.531235694885254
    9. '           ' → logprob: -11.781235694885254
    10. '   ' → logprob: -12.031235694885254

Token 173: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5147669315338135
    2. 'return' → logprob: -1.7647669315338135
    3. ' return' → logprob: -1.8897669315338135
    4. '               ' → logprob: -2.7647669315338135
    5. '       ' → logprob: -4.639766693115234
    6. '
' → logprob: -5.014766693115234
    7. ':return' → logprob: -8.514766693115234
    8. '	return' → logprob: -9.139766693115234
    9. '   ' → logprob: -9.139766693115234
    10. '```' → logprob: -9.889766693115234

Token 174: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07985702157020569
    2. 'return' (adapté à ' return') → logprob: -2.579857110977173
    3. ' dp' → logprob: -7.204856872558594
    4. ' 
' → logprob: -9.079856872558594
    5. 'dp' → logprob: -9.329856872558594
    6. ' ' → logprob: -11.579856872558594
    7. ' ' → logprob: -12.579856872558594
    8. '
' → logprob: -12.704856872558594
    9. 'ret' → logprob: -13.704856872558594
    10. ':return' → logprob: -13.954856872558594

Token 175: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10020796209573746
    2. ' dp' → logprob: -2.350208044052124
    3. '	dp' → logprob: -14.100208282470703
    4. '(dp' → logprob: -14.850208282470703
    5. ' ' → logprob: -16.475208282470703
    6. 'd' → logprob: -16.600208282470703
    7. '.dp' → logprob: -17.600208282470703
    8. '_dp' → logprob: -17.725208282470703
    9. 'int' → logprob: -17.850208282470703
    10. '
' → logprob: -17.975208282470703

Token 176: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -6.2729995988775045e-06
    2. 'r' → logprob: -12.125006675720215
    3. '[' → logprob: -14.250006675720215
    4. '][' → logprob: -16.5000057220459
    5. ' [' → logprob: -16.7500057220459
    6. '```' → logprob: -17.3750057220459
    7. '[
' → logprob: -18.0000057220459
    8. '[c' → logprob: -18.6250057220459
    9. '	r' → logprob: -18.7500057220459
    10. ' r' → logprob: -18.8750057220459

Token 177: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002481078845448792
    2. '[r' → logprob: -8.375247955322266
    3. ']' → logprob: -11.500247955322266
    4. ' ][' → logprob: -12.875247955322266
    5. '[c' → logprob: -13.375247955322266
    6. ']][' → logprob: -14.250247955322266
    7. '"][' → logprob: -14.375247955322266
    8. '[' → logprob: -14.625247955322266
    9. 'r' → logprob: -15.125247955322266
    10. '<|end|>' → logprob: -15.125247955322266

Token 178: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.518582762917504e-05
    2. '[c' → logprob: -9.62508487701416
    3. ']' → logprob: -12.37508487701416
    4. ')c' → logprob: -12.37508487701416
    5. '][' → logprob: -12.75008487701416
    6. '[' → logprob: -13.00008487701416
    7. ')' → logprob: -13.50008487701416
    8. ' c' → logprob: -13.75008487701416
    9. '```' → logprob: -14.62508487701416
    10. 'r' → logprob: -15.00008487701416

Token 179: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005474337958730757
    2. ']

' → logprob: -8.250547409057617
    3. ']
' → logprob: -8.375547409057617
    4. ' ]' → logprob: -10.250547409057617
    5. ')' → logprob: -11.625547409057617
    6. ']+' → logprob: -12.500547409057617
    7. '           ' → logprob: -13.125547409057617
    8. '       ' → logprob: -13.875547409057617
    9. '])' → logprob: -14.125547409057617
    10. '        ' → logprob: -14.625547409057617

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7519528269767761
    2. '
' → logprob: -0.8769528269767761
    3. '            
' → logprob: -3.376952886581421
    4. '       ' → logprob: -3.626952886581421
    5. '    
' → logprob: -4.251952648162842
    6. '   ' → logprob: -5.126952648162842
    7. '        
' → logprob: -5.126952648162842
    8. ' 
' → logprob: -5.501952648162842
    9. '\n' → logprob: -5.876952648162842
    10. '<|end|>' → logprob: -5.876952648162842

Token 181: ' current' (ID: 2208)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10406521707773209
    2. 'best' → logprob: -3.729065179824829
    3. 'num' → logprob: -3.854065179824829
    4. ' max' → logprob: -3.979065179824829
    5. 'current' (adapté à ' current') → logprob: -4.479065418243408
    6. 'res' → logprob: -4.479065418243408
    7. ' best' → logprob: -6.104065418243408
    8. 'curr' → logprob: -6.104065418243408
    9. ' res' → logprob: -6.354065418243408
    10. 'val' → logprob: -6.479065418243408

Token 182: '_char' (ID: 23398)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6290716528892517
    2. '_value' → logprob: -1.3790717124938965
    3. '_num' → logprob: -2.0040717124938965
    4. '_number' → logprob: -3.5040717124938965
    5. '_token' → logprob: -4.1290717124938965
    6. '_digit' → logprob: -4.3790717124938965
    7. '_char' → logprob: -4.5040717124938965
    8. ' =' → logprob: -5.8790717124938965
    9. '_' → logprob: -6.1290717124938965
    10. '_str' → logprob: -6.3790717124938965

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01400013454258442
    2. '=' → logprob: -4.388999938964844
    3. ' ' → logprob: -6.513999938964844
    4. 's' → logprob: -13.013999938964844
    5. '  ' → logprob: -13.513999938964844
    6. ')' → logprob: -14.638999938964844
    7. ' =
' → logprob: -14.826499938964844
    8. ' s' → logprob: -15.138999938964844
    9. '.' → logprob: -15.388999938964844
    10. ',' → logprob: -15.576499938964844

Token 184: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.28116053342819214
    2. ' matrix' → logprob: -1.406160593032837
    3. '	matrix' → logprob: -11.781160354614258
    4. ' ' → logprob: -14.281160354614258
    5. '(matrix' → logprob: -14.281160354614258
    6. 'm' → logprob: -14.656160354614258
    7. '   ' → logprob: -15.156160354614258
    8. '
' → logprob: -15.656160354614258
    9. '.matrix' → logprob: -15.906160354614258
    10. ' ' → logprob: -16.031160354614258

Token 185: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.1008713702030946e-06
    2. 'r' → logprob: -13.750001907348633
    3. '[' → logprob: -14.000001907348633
    4. '[row' → logprob: -17.500001907348633
    5. '```' → logprob: -17.875001907348633
    6. '[s' → logprob: -18.250001907348633
    7. ' [' → logprob: -18.500001907348633
    8. '[c' → logprob: -18.500001907348633
    9. '][' → logprob: -18.500001907348633
    10. '\[' → logprob: -18.625001907348633

Token 186: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002891066251322627
    2. ']' → logprob: -8.250288963317871
    3. ' ][' → logprob: -11.375288963317871
    4. '[c' → logprob: -11.750288963317871
    5. '[' → logprob: -11.875288963317871
    6. '"][' → logprob: -15.000288963317871
    7. ']][' → logprob: -15.500288963317871
    8. '[r' → logprob: -15.500288963317871
    9. ''][' → logprob: -16.125289916992188
    10. '   ' → logprob: -16.250289916992188

Token 187: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4498052223643754e-05
    2. ' c' → logprob: -11.625014305114746
    3. ')c' → logprob: -13.125014305114746
    4. '[c' → logprob: -13.250014305114746
    5. '][' → logprob: -13.625014305114746
    6. '   ' → logprob: -15.750014305114746
    7. '	c' → logprob: -16.000015258789062
    8. ' ' → logprob: -16.875015258789062
    9. '
' → logprob: -16.875015258789062
    10. ',c' → logprob: -17.250015258789062

Token 188: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08400244265794754
    2. ']' → logprob: -2.5840024948120117
    3. ')
' → logprob: -5.834002494812012
    4. '])' → logprob: -6.584002494812012
    5. ')]' → logprob: -8.459002494812012
    6. '')' → logprob: -8.709002494812012
    7. ']
' → logprob: -8.959002494812012
    8. ' )' → logprob: -9.084002494812012
    9. '']' → logprob: -10.084002494812012
    10. '）' → logprob: -10.709002494812012

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7129417657852173
    2. '
' → logprob: -1.0879417657852173
    3. 'if' → logprob: -2.7129416465759277
    4. ' if' → logprob: -2.7129416465759277
    5. '            
' → logprob: -3.4629416465759277
    6. '<|end|>' → logprob: -6.212941646575928
    7. ',' → logprob: -6.587941646575928
    8. '    
' → logprob: -7.587941646575928
    9. '

' → logprob: -7.712941646575928
    10. ')' → logprob: -7.712941646575928

Token 190: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9308086037635803
    2. 'best' → logprob: -1.3058085441589355
    3. 'current' → logprob: -1.8058085441589355
    4. 'result' → logprob: -3.0558085441589355
    5. 'if' → logprob: -3.4308085441589355
    6. ' max' → logprob: -3.6808085441589355
    7. ' best' → logprob: -3.8058085441589355
    8. ' current' → logprob: -4.5558085441589355
    9. 'res' → logprob: -4.9308085441589355
    10. ' if' → logprob: -5.0558085441589355

Token 191: ' Par' (ID: 3371)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.24880366027355194
    2. 'best' → logprob: -1.9988036155700684
    3. 'if' → logprob: -3.3738036155700684
    4. 'res' → logprob: -3.9988036155700684
    5. ' max' → logprob: -4.748803615570068
    6. ' best' → logprob: -4.873803615570068
    7. 'result' → logprob: -5.498803615570068
    8. 'current' → logprob: -5.498803615570068
    9. ' if' → logprob: -6.123803615570068
    10. 'dp' → logprob: -6.748803615570068

Token 192: ' hypoth' (ID: 37591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1026362180709839
    2. 'def' → logprob: -1.2276362180709839
    3. 't' → logprob: -2.1026363372802734
    4. ' if' → logprob: -2.3526363372802734
    5. ' def' → logprob: -3.3526363372802734
    6. 'fois' → logprob: -3.6026363372802734
    7. 'cour' → logprob: -4.477636337280273
    8. 'current' → logprob: -4.602636337280273
    9. 'cours' → logprob: -4.727636337280273
    10. 'else' → logprob: -4.852636337280273

Token 193: 'èse' (ID: 57778)
  Prédit: 'èse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èse' → logprob: -0.002102440921589732
    2. 'ese' → logprob: -6.252102375030518
    3. 'ése' → logprob: -9.877102851867676
    4. 'ose' → logprob: -10.252102851867676
    5. '`' → logprob: -10.752102851867676
    6. 'se' → logprob: -10.752102851867676
    7. 'èses' → logprob: -10.752102851867676
    8. 'è' → logprob: -12.127102851867676
    9. 'ès' → logprob: -12.502102851867676
    10. 'es' → logprob: -13.252102851867676

Token 194: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3264559507369995
    2. ',' → logprob: -1.9514559507369995
    3. ' if' → logprob: -2.201456069946289
    4. 'if' → logprob: -3.951456069946289
    5. ' ,' → logprob: -6.701456069946289
    6. ':' → logprob: -6.701456069946289
    7. '       ' → logprob: -7.701456069946289
    8. 'result' → logprob: -7.701456069946289
    9. '               ' → logprob: -8.326456069946289
    10. 'current' → logprob: -8.326456069946289

Token 195: ' on' (ID: 402)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.5565414428710938
    2. '           ' → logprob: -1.9315414428710938
    3. 'result' → logprob: -2.1815414428710938
    4. 'current' → logprob: -2.5565414428710938
    5. 'max' → logprob: -2.6815414428710938
    6. 'dp' → logprob: -2.8065414428710938
    7. ' max' → logprob: -2.9315414428710938
    8. ' result' → logprob: -2.9315414428710938
    9. ' dp' → logprob: -3.1815414428710938
    10. ' if' → logprob: -3.3065414428710938

Token 196: ' appelle' (ID: 111796)
  Prédit: ' assume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' assume' → logprob: -0.4415947496891022
    2. ' suppose' → logprob: -1.3165947198867798
    3. 'if' → logprob: -4.31659460067749
    4. ' considère' → logprob: -4.31659460067749
    5. ' assumes' → logprob: -4.69159460067749
    6. ' if' → logprob: -5.06659460067749
    7. 'ass' → logprob: -5.19159460067749
    8. 'return' → logprob: -5.19159460067749
    9. 'consider' → logprob: -5.56659460067749
    10. ' only' → logprob: -5.56659460067749

Token 197: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0681346133351326
    2. ' dfs' → logprob: -4.318134784698486
    3. 'max' → logprob: -4.693134784698486
    4. 'int' → logprob: -4.818134784698486
    5. 'str' → logprob: -4.818134784698486
    6. 'dp' → logprob: -5.068134784698486
    7. 'current' → logprob: -5.068134784698486
    8. 'next' → logprob: -5.693134784698486
    9. 'result' → logprob: -6.068134784698486
    10. '1' → logprob: -6.193134784698486

Token 198: ' seulement' (ID: 32072)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.03202689439058304
    2. '(' → logprob: -3.532027006149292
    3. '('' → logprob: -7.282026767730713
    4. '(
' → logprob: -7.907026767730713
    5. '((' → logprob: -8.532027244567871
    6. '   ' → logprob: -8.782027244567871
    7. ' ' → logprob: -9.282027244567871
    8. '(c' → logprob: -9.532027244567871
    9. ',' → logprob: -9.782027244567871
    10. ' (' → logprob: -9.907027244567871

Token 199: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.2053099274635315
    2. 'si' → logprob: -2.0803098678588867
    3. 'if' → logprob: -3.9553098678588867
    4. ' si' → logprob: -4.080309867858887
    5. 'pour' → logprob: -4.455309867858887
    6. ' sur' → logprob: -4.955309867858887
    7. ' if' → logprob: -5.955309867858887
    8. ' lorsque' → logprob: -6.830309867858887
    9. ' pour' → logprob: -7.455309867858887
    10. 'qu' → logprob: -7.580309867858887

Token 200: ' un' (ID: 537)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.4478415548801422
    2. 'les' → logprob: -2.0728416442871094
    3. 'une' → logprob: -2.0728416442871094
    4. 'positions' → logprob: -3.0728416442871094
    5. 'un' → logprob: -4.197841644287109
    6. 'digits' → logprob: -4.697841644287109
    7. ' des' → logprob: -4.822841644287109
    8. 'r' → logprob: -4.822841644287109
    9. 'digit' → logprob: -5.322841644287109
    10. 'cells' → logprob: -5.447841644287109

Token 201: ' caractère' (ID: 80509)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.6867650747299194
    2. 'ch' → logprob: -0.8117650747299194
    3. 'car' → logprob: -4.436765193939209
    4. 'em' → logprob: -4.561765193939209
    5. 'cell' → logprob: -4.811765193939209
    6. 'c' → logprob: -5.061765193939209
    7. 'r' → logprob: -5.561765193939209
    8. 'd' → logprob: -5.811765193939209
    9. 'position' → logprob: -6.561765193939209
    10. 'end' → logprob: -6.686765193939209

Token 202: ' chiffre' (ID: 107420)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.10591809451580048
    2. 'qui' → logprob: -3.2309181690216064
    3. 'digit' → logprob: -4.105917930603027
    4. 'num' → logprob: -4.605917930603027
    5. ' numérique' → logprob: -4.730917930603027
    6. ' qui' → logprob: -4.730917930603027
    7. '```' → logprob: -5.730917930603027
    8. ' chiffre' → logprob: -6.355917930603027
    9. ' ' → logprob: -6.480917930603027
    10. ' ' → logprob: -6.605917930603027

Token 203: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13825835287570953
    2. '
' → logprob: -2.888258457183838
    3. ' if' → logprob: -3.638258457183838
    4. 'if' → logprob: -4.013258457183838
    5. ',' → logprob: -4.888258457183838
    6. '            
' → logprob: -4.888258457183838
    7. '       ' → logprob: -5.138258457183838
    8. '.' → logprob: -6.388258457183838
    9. '<|end|>' → logprob: -6.763258457183838
    10. ')' → logprob: -7.013258457183838

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09819338470697403
    2. '
' → logprob: -3.598193407058716
    3. 'max' → logprob: -3.848193407058716
    4. '            
' → logprob: -4.223193168640137
    5. ' max' → logprob: -4.848193168640137
    6. ',' → logprob: -5.598193168640137
    7. 'result' → logprob: -5.848193168640137
    8. '   ' → logprob: -6.348193168640137
    9. 'next' → logprob: -6.473193168640137
    10. '       ' → logprob: -7.098193168640137

Token 205: ' candidates' (ID: 18116)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.15244168043136597
    2. ' max' → logprob: -2.5274417400360107
    3. 'best' → logprob: -3.5274417400360107
    4. '           ' → logprob: -3.7774417400360107
    5. ' best' → logprob: -5.402441501617432
    6. 'result' → logprob: -6.902441501617432
    7. 'res' → logprob: -6.902441501617432
    8. '   ' → logprob: -7.277441501617432
    9. 'current' → logprob: -7.527441501617432
    10. 'next' → logprob: -7.652441501617432

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602281779050827
    2. '=' → logprob: -1.9102281332015991
    3. '=[]' → logprob: -12.78522777557373
    4. ',' → logprob: -14.41022777557373
    5. ' ' → logprob: -15.53522777557373
    6. 's' → logprob: -16.160228729248047
    7. '=[]
' → logprob: -16.410228729248047
    8. ' ' → logprob: -16.785228729248047
    9. ')' → logprob: -16.910228729248047
    10. ':' → logprob: -17.035228729248047

Token 207: ' []

' (ID: 32833)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -1.0340218544006348
    2. '['' → logprob: -1.2840218544006348
    3. '[]' → logprob: -1.7840218544006348
    4. '[' → logprob: -2.0340218544006348
    5. '[c' → logprob: -2.7840218544006348
    6. '[]

' → logprob: -6.284021854400635
    7. '[current' → logprob: -6.659021854400635
    8. '[r' → logprob: -6.784021854400635
    9. '[]
' → logprob: -7.659021854400635
    10. '[str' → logprob: -8.159021377563477

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011997995898127556
    2. ' for' → logprob: -5.011998176574707
    3. '            
' → logprob: -6.011998176574707
    4. ' if' → logprob: -6.886998176574707
    5. 'for' → logprob: -7.261998176574707
    6. '            ' → logprob: -8.386998176574707
    7. ' ' → logprob: -8.761998176574707
    8. ',' → logprob: -8.761998176574707
    9. '<|end|>' → logprob: -8.886998176574707
    10. ')' → logprob: -10.136998176574707

Token 209: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33151713013648987
    2. ' for' → logprob: -2.456517219543457
    3. 'dire' → logprob: -2.581517219543457
    4. '           ' → logprob: -2.831517219543457
    5. 'if' → logprob: -3.206517219543457
    6. ' directions' → logprob: -4.706517219543457
    7. ' if' → logprob: -4.956517219543457
    8. 'dirs' → logprob: -6.206517219543457
    9. '#' (adapté à ' #') → logprob: -6.331517219543457
    10. 'd' → logprob: -8.081517219543457

Token 210: ' Vér' (ID: 159169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009714782238006592
    2. ' for' → logprob: -5.259714603424072
    3. '           ' → logprob: -6.134714603424072
    4. 'dire' → logprob: -6.259714603424072
    5. 'if' → logprob: -8.75971508026123
    6. ' directions' → logprob: -9.13471508026123
    7. '#' → logprob: -9.13471508026123
    8. 'dirs' → logprob: -11.50971508026123
    9. '
' → logprob: -13.00971508026123
    10. 'd' → logprob: -13.25971508026123

Token 211: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.1001959890127182
    2. 'ifie' → logprob: -2.47519588470459
    3. 'ifiez' → logprob: -4.97519588470459
    4. 'if' → logprob: -6.60019588470459
    5. 'ification' → logprob: -6.72519588470459
    6. '```' → logprob: -7.97519588470459
    7. 'ifer' → logprob: -8.22519588470459
    8. 'ifies' → logprob: -8.85019588470459
    9. 'f' → logprob: -8.85019588470459
    10. 'ifié' → logprob: -8.97519588470459

Token 212: ' si' (ID: 1784)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5658120512962341
    2. ' for' → logprob: -2.565812110900879
    3. '           ' → logprob: -2.940812110900879
    4. '[r' → logprob: -2.940812110900879
    5. 'for' → logprob: -3.065812110900879
    6. ' r' → logprob: -3.190812110900879
    7. '   ' → logprob: -3.315812110900879
    8. 'r' → logprob: -3.315812110900879
    9. ' les' → logprob: -3.565812110900879
    10. ' if' → logprob: -4.065812110900879

Token 213: ' on' (ID: 402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2137007862329483
    2. ' r' → logprob: -2.338700771331787
    3. 'c' → logprob: -2.588700771331787
    4. ' c' → logprob: -4.088700771331787
    5. ' is' → logprob: -6.213700771331787
    6. 'is' → logprob: -6.338700771331787
    7. '0' → logprob: -8.963701248168945
    8. ' ' → logprob: -9.963701248168945
    9. '   ' → logprob: -10.526201248168945
    10. '(r' → logprob: -11.276201248168945

Token 214: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.9282353520393372
    2. ' peut' → logprob: -1.1782352924346924
    3. ' peux' → logprob: -1.9282352924346924
    4. 'can' → logprob: -2.3032352924346924
    5. ' can' → logprob: -3.3032352924346924
    6. 'p' → logprob: -5.5532355308532715
    7. ' pe' → logprob: -6.1782355308532715
    8. 'a' → logprob: -6.3032355308532715
    9. 'r' → logprob: -6.5532355308532715
    10. '+' → logprob: -7.1782355308532715

Token 215: ' aller' (ID: 18383)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.48695340752601624
    2. 'r' → logprob: -0.9869533777236938
    3. ' ' → logprob: -5.861953258514404
    4. ' continuer' → logprob: -6.486953258514404
    5. '(r' → logprob: -6.736953258514404
    6. '   ' → logprob: -6.986953258514404
    7. 'c' → logprob: -6.986953258514404
    8. ' c' → logprob: -7.111953258514404
    9. ' aller' → logprob: -7.486953258514404
    10. 'contin' → logprob: -7.986953258514404

Token 216: ' à' (ID: 1221)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9219521880149841
    2. '(r' → logprob: -1.171952247619629
    3. ' r' → logprob: -2.171952247619629
    4. '[r' → logprob: -2.546952247619629
    5. 'down' → logprob: -3.546952247619629
    6. ' à' → logprob: -4.046952247619629
    7. ' dans' → logprob: -4.671952247619629
    8. ' up' → logprob: -4.671952247619629
    9. ' aux' → logprob: -5.296952247619629
    10. 'dans' → logprob: -5.421952247619629

Token 217: ' droite' (ID: 61428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15099158883094788
    2. '(r' → logprob: -2.400991678237915
    3. ' r' → logprob: -3.275991678237915
    4. '[r' → logprob: -4.650991439819336
    5. ' (' → logprob: -6.275991439819336
    6. '   ' → logprob: -9.900991439819336
    7. ' la' → logprob: -9.900991439819336
    8. 'l' → logprob: -10.150991439819336
    9. '	r' → logprob: -10.275991439819336
    10. '[(' → logprob: -10.900991439819336

Token 218: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016242217272520065
    2. ',' → logprob: -5.016242027282715
    3. ' if' → logprob: -5.141242027282715
    4. ' and' → logprob: -6.266242027282715
    5. 'if' → logprob: -7.266242027282715
    6. ' (' → logprob: -8.141242027282715
    7. '
' → logprob: -9.016242027282715
    8. '       ' → logprob: -9.266242027282715
    9. ' or' → logprob: -9.641242027282715
    10. ' =' → logprob: -9.891242027282715

Token 219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.046873610466718674
    2. ' and' → logprob: -3.6718735694885254
    3. ' if' → logprob: -4.546873569488525
    4. ',' → logprob: -5.421873569488525
    5. ' or' → logprob: -6.171873569488525
    6. ' (' → logprob: -6.921873569488525
    7. 'and' → logprob: -7.921873569488525
    8. '       ' → logprob: -7.921873569488525
    9. '<|end|>' → logprob: -8.046874046325684
    10. 'if' → logprob: -8.421874046325684

Token 220: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05617936700582504
    2. 'if' (adapté à ' if') → logprob: -3.1811792850494385
    3. ' r' → logprob: -5.056179523468018
    4. ' (' → logprob: -5.681179523468018
    5. '           ' → logprob: -6.431179523468018
    6. ' ' → logprob: -7.431179523468018
    7. ' c' → logprob: -8.18117904663086
    8. 'r' → logprob: -8.18117904663086
    9. '(r' → logprob: -8.43117904663086
    10. ' 
' → logprob: -9.68117904663086

Token 221: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20149365067481995
    2. ' c' → logprob: -1.7014936208724976
    3. '   ' → logprob: -9.951493263244629
    4. ' ' → logprob: -11.076493263244629
    5. 'r' → logprob: -12.513993263244629
    6. '	c' → logprob: -12.576493263244629
    7. '(c' → logprob: -13.263993263244629
    8. ')c' → logprob: -13.451493263244629
    9. '  ' → logprob: -14.076493263244629
    10. '    ' → logprob: -14.138993263244629

Token 222: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2862541377544403
    2. ' +' → logprob: -1.4112541675567627
    3. ' <' → logprob: -5.411253929138184
    4. '<' → logprob: -7.411253929138184
    5. ' ' → logprob: -11.661253929138184
    6. '[' → logprob: -13.286253929138184
    7. '1' → logprob: -13.661253929138184
    8. '0' → logprob: -14.036253929138184
    9. '   ' → logprob: -14.036253929138184
    10. '<len' → logprob: -14.161253929138184

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.375085830688477
    4. '+' → logprob: -16.125085830688477
    5. '```' → logprob: -16.625085830688477
    6. '       ' → logprob: -17.625085830688477
    7. '
' → logprob: -17.750085830688477
    8. '[' → logprob: -17.750085830688477
    9. '<|end|>' → logprob: -18.000085830688477
    10. '           ' → logprob: -18.125085830688477

Token 224: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47433891892433167
    2. ' <' → logprob: -0.9743388891220093
    3. '<W' → logprob: -8.34933853149414
    4. '<|end|>' → logprob: -11.97433853149414
    5. ' ' → logprob: -12.59933853149414
    6. ')' → logprob: -13.09933853149414
    7. '[' → logprob: -13.34933853149414
    8. ')<' → logprob: -13.47433853149414
    9. '<len' → logprob: -13.72433853149414
    10. '<num' → logprob: -14.22433853149414

Token 225: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.005237429868429899
    2. ' W' → logprob: -5.255237579345703
    3. '   ' → logprob: -12.755237579345703
    4. '	W' → logprob: -15.255237579345703
    5. '           ' → logprob: -15.880237579345703
    6. '       ' → logprob: -15.880237579345703
    7. ' ' → logprob: -16.505237579345703
    8. '=W' → logprob: -17.005237579345703
    9. '<W' → logprob: -17.130237579345703
    10. '    ' → logprob: -17.630237579345703

Token 226: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47426265478134155
    2. 'and' → logprob: -0.9742626547813416
    3. '           ' → logprob: -9.349262237548828
    4. ':
' → logprob: -9.599262237548828
    5. ':' → logprob: -11.099262237548828
    6. ' ' → logprob: -12.724262237548828
    7. '               ' → logprob: -12.849262237548828
    8. '   ' → logprob: -12.849262237548828
    9. '):
' → logprob: -13.599262237548828
    10. ')' → logprob: -13.849262237548828

Token 227: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0021914218086749315
    2. ' is' → logprob: -6.127191543579102
    3. 'matrix' → logprob: -13.002191543579102
    4. '   ' → logprob: -13.377191543579102
    5. '	is' → logprob: -14.127191543579102
    6. ' ' → logprob: -14.252191543579102
    7. '(is' → logprob: -14.752191543579102
    8. '  ' → logprob: -15.502191543579102
    9. 'isdigit' → logprob: -16.0021915435791
    10. 'i' → logprob: -16.8771915435791

Token 228: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.0007565005216747522
    2. '_' → logprob: -7.37575626373291
    3. 'digit' → logprob: -9.87575626373291
    4. '_d' → logprob: -10.50075626373291
    5. '_digits' → logprob: -11.25075626373291
    6. 'Digit' → logprob: -11.50075626373291
    7. '(matrix' → logprob: -11.87575626373291
    8. '-digit' → logprob: -12.50075626373291
    9. 'matrix' → logprob: -12.62575626373291
    10. '_(' → logprob: -12.87575626373291

Token 229: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -5.1928003813372925e-05
    2. '(' → logprob: -10.250051498413086
    3. 'matrix' → logprob: -11.125051498413086
    4. ' (' → logprob: -14.000051498413086
    5. '(
' → logprob: -15.375051498413086
    6. ' matrix' → logprob: -15.375051498413086
    7. '	matrix' → logprob: -16.250051498413086
    8. '((' → logprob: -16.500051498413086
    9. '(m' → logprob: -16.500051498413086
    10. '(mat' → logprob: -17.000051498413086

Token 230: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00037800322752445936
    2. '[' → logprob: -8.375377655029297
    3. 'r' → logprob: -9.500377655029297
    4. ' [' → logprob: -10.250377655029297
    5. ')' → logprob: -11.250377655029297
    6. ')[' → logprob: -11.375377655029297
    7. '[
' → logprob: -12.375377655029297
    8. '][' → logprob: -13.125377655029297
    9. '[row' → logprob: -13.875377655029297
    10. '(r' → logprob: -14.125377655029297

Token 231: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04039211943745613
    2. '[c' → logprob: -3.2903921604156494
    3. ' ][' → logprob: -6.91539192199707
    4. 'c' → logprob: -7.41539192199707
    5. ']' → logprob: -7.91539192199707
    6. '[' → logprob: -8.41539192199707
    7. '[r' → logprob: -10.16539192199707
    8. ' [' → logprob: -10.54039192199707
    9. '[
' → logprob: -11.04039192199707
    10. '   ' → logprob: -11.29039192199707

Token 232: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00017505438881926239
    2. ' c' → logprob: -9.250175476074219
    3. '   ' → logprob: -10.250175476074219
    4. '+' → logprob: -11.125175476074219
    5. ']' → logprob: -12.250175476074219
    6. '[c' → logprob: -12.375175476074219
    7. ')c' → logprob: -12.625175476074219
    8. '(c' → logprob: -12.750175476074219
    9. '][' → logprob: -13.000175476074219
    10. ' ' → logprob: -13.375175476074219

Token 233: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00022082125360611826
    2. ' +' → logprob: -8.625221252441406
    3. ']' → logprob: -11.250221252441406
    4. ']+' → logprob: -11.625221252441406
    5. '])' → logprob: -11.750221252441406
    6. '1' → logprob: -12.750221252441406
    7. '+
' → logprob: -13.250221252441406
    8. '[' → logprob: -13.500221252441406
    9. '+c' → logprob: -13.750221252441406
    10. '   ' → logprob: -14.250221252441406

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. 'c' → logprob: -11.875020027160645
    3. '   ' → logprob: -12.500020027160645
    4. '+' → logprob: -12.750020027160645
    5. ' ' → logprob: -12.750020027160645
    6. '])' → logprob: -13.375020027160645
    7. '```' → logprob: -14.625020027160645
    8. ']' → logprob: -15.250020027160645
    9. '`' → logprob: -16.12502098083496
    10. '       ' → logprob: -16.25002098083496

Token 235: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.46453624963760376
    2. '])' → logprob: -1.714536190032959
    3. ']):
' → logprob: -1.839536190032959
    4. ']' → logprob: -3.839536190032959
    5. ')' → logprob: -4.964536190032959
    6. '):' → logprob: -6.714536190032959
    7. '']):
' → logprob: -6.964536190032959
    8. ')]' → logprob: -7.464536190032959
    9. '):
' → logprob: -8.089536666870117
    10. ' ]' → logprob: -8.339536666870117

Token 236: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03627858683466911
    2. ':' → logprob: -4.28627872467041
    3. '):
' → logprob: -4.78627872467041
    4. ':
' → logprob: -4.91127872467041
    5. ' and' → logprob: -6.66127872467041
    6. '           ' → logprob: -6.66127872467041
    7. ')' → logprob: -6.78627872467041
    8. '):' → logprob: -6.78627872467041
    9. ',' → logprob: -7.41127872467041
    10. '                
' → logprob: -8.78627872467041

Token 237: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09479372948408127
    2. ' candidates' → logprob: -2.7197937965393066
    3. '               ' → logprob: -4.094793796539307
    4. 'cand' → logprob: -6.344793796539307
    5. ' c' → logprob: -6.469793796539307
    6. 'right' → logprob: -7.094793796539307
    7. 'next' → logprob: -7.219793796539307
    8. ' next' → logprob: -7.594793796539307
    9. 'candidate' → logprob: -7.719793796539307
    10. ' right' → logprob: -7.969793796539307

Token 238: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011103121563792229
    2. '.' → logprob: -4.51110315322876
    3. ' .' → logprob: -9.886102676391602
    4. '.ap' → logprob: -13.761102676391602
    5. '.extend' → logprob: -13.886102676391602
    6. '=' → logprob: -14.011102676391602
    7. '.app' → logprob: -14.636102676391602
    8. ').' → logprob: -15.136102676391602
    9. ' =' → logprob: -15.261102676391602
    10. 'append' → logprob: -15.511102676391602

Token 239: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.358787477016449
    2. '(str' → logprob: -1.9837875366210938
    3. '(current' → logprob: -2.7337875366210938
    4. '(int' → logprob: -2.9837875366210938
    5. '(' → logprob: -3.3587875366210938
    6. '(matrix' → logprob: -4.733787536621094
    7. '('' → logprob: -6.108787536621094
    8. '((' → logprob: -6.983787536621094
    9. 'dfs' → logprob: -7.733787536621094
    10. '(
' → logprob: -8.733787536621094

Token 240: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -7.839121826691553e-05
    2. 'f' → logprob: -10.375078201293945
    3. 'dfs' → logprob: -11.625078201293945
    4. '[' → logprob: -11.750078201293945
    5. '(fs' → logprob: -11.750078201293945
    6. ' fs' → logprob: -12.500078201293945
    7. 'ps' → logprob: -12.625078201293945
    8. '"' → logprob: -12.625078201293945
    9. 'fsp' → logprob: -13.000078201293945
    10. 'p' → logprob: -13.375078201293945

Token 241: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.580929347255733e-05
    2. '(' → logprob: -11.125016212463379
    3. ' (' → logprob: -14.250016212463379
    4. ')' → logprob: -15.750016212463379
    5. '(
' → logprob: -15.875016212463379
    6. 'r' → logprob: -17.875015258789062
    7. '   ' → logprob: -18.375015258789062
    8. ' ' → logprob: -19.375015258789062
    9. ')(' → logprob: -19.375015258789062
    10. ' r' → logprob: -19.500015258789062

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11601829528808594
    2. ',c' → logprob: -2.366018295288086
    3. ' ,' → logprob: -4.241018295288086
    4. 'c' → logprob: -7.741018295288086
    5. ' c' → logprob: -7.866018295288086
    6. '   ' → logprob: -7.991018295288086
    7. ' ' → logprob: -9.366018295288086
    8. '	c' → logprob: -10.366018295288086
    9. '  ' → logprob: -12.366018295288086
    10. '	' → logprob: -12.491018295288086

Token 243: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004096093121916056
    2. ' c' → logprob: -5.504096031188965
    3. '   ' → logprob: -12.004096031188965
    4. ')c' → logprob: -12.254096031188965
    5. '(c' → logprob: -13.004096031188965
    6. ' ' → logprob: -13.129096031188965
    7. '	c' → logprob: -14.504096031188965
    8. '    ' → logprob: -14.629096031188965
    9. '
' → logprob: -14.879096031188965
    10. '  ' → logprob: -14.879096031188965

Token 244: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002165299083571881
    2. ' +' → logprob: -8.500216484069824
    3. '+c' → logprob: -12.000216484069824
    4. '1' → logprob: -12.375216484069824
    5. '   ' → logprob: -13.875216484069824
    6. '+
' → logprob: -14.375216484069824
    7. ')+' → logprob: -14.875216484069824
    8. ' ' → logprob: -15.500216484069824
    9. '()+' → logprob: -15.625216484069824
    10. '```' → logprob: -16.25021743774414

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -13.000004768371582
    3. '   ' → logprob: -14.000004768371582
    4. '+' → logprob: -14.125004768371582
    5. '```' → logprob: -14.875004768371582
    6. '       ' → logprob: -16.500003814697266
    7. ')' → logprob: -16.687503814697266
    8. '2' → logprob: -16.875003814697266
    9. '           ' → logprob: -16.875003814697266
    10. '     ' → logprob: -17.250003814697266

Token 246: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12395124137401581
    2. '))' → logprob: -2.4989511966705322
    3. ')+' → logprob: -3.3739511966705322
    4. ' )' → logprob: -9.623950958251953
    5. '))
' → logprob: -10.748950958251953
    6. ')))' → logprob: -11.373950958251953
    7. ')+(' → logprob: -11.623950958251953
    8. ')[' → logprob: -11.748950958251953
    9. '))+' → logprob: -12.123950958251953
    10. ')+"' → logprob: -12.123950958251953

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36861342191696167
    2. '+' → logprob: -1.4936134815216064
    3. ' +' → logprob: -3.4936134815216064
    4. ')' → logprob: -3.6186134815216064
    5. ' ' → logprob: -5.368613243103027
    6. ' )' → logprob: -5.493613243103027
    7. '            
' → logprob: -6.243613243103027
    8. '+
' → logprob: -6.243613243103027
    9. '')' → logprob: -6.368613243103027
    10. ''' → logprob: -6.618613243103027

Token 248: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30408328771591187
    2. ' if' → logprob: -1.4290833473205566
    3. 'if' → logprob: -4.179083347320557
    4. ' candidates' → logprob: -6.054083347320557
    5. '#' (adapté à ' #') → logprob: -7.054083347320557
    6. ')
' → logprob: -7.179083347320557
    7. ')' → logprob: -7.179083347320557
    8. '+' → logprob: -7.429083347320557
    9. '
' → logprob: -7.429083347320557
    10. '```' → logprob: -8.429082870483398

Token 249: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5707941651344299
    2. ' if' → logprob: -1.3207941055297852
    3. '           ' → logprob: -1.8207941055297852
    4. '#' → logprob: -5.820794105529785
    5. '       ' → logprob: -6.820794105529785
    6. '   ' → logprob: -7.070794105529785
    7. 'for' → logprob: -8.320794105529785
    8. '               ' → logprob: -8.820794105529785
    9. ' #' → logprob: -8.820794105529785
    10. ' ' → logprob: -9.195794105529785

Token 250: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11471519619226456
    2. '   ' → logprob: -2.989715099334717
    3. '       ' → logprob: -4.864715099334717
    4. 'er' → logprob: -5.114715099334717
    5. '#' → logprob: -5.239715099334717
    6. 'iser' → logprob: -5.614715099334717
    7. 'ifie' → logprob: -5.614715099334717
    8. 'ifiez' → logprob: -5.614715099334717
    9. 'f' → logprob: -5.739715099334717
    10. 'e' → logprob: -5.739715099334717

Token 251: ' si' (ID: 1784)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5348017811775208
    2. 'if' → logprob: -1.409801721572876
    3. ' if' → logprob: -1.909801721572876
    4. '   ' → logprob: -4.159801959991455
    5. '(' → logprob: -6.409801959991455
    6. ' si' → logprob: -7.034801959991455
    7. '       ' → logprob: -7.534801959991455
    8. '(s' → logprob: -7.534801959991455
    9. 'si' → logprob: -7.534801959991455
    10. ' (' → logprob: -7.659801959991455

Token 252: ' on' (ID: 402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011262375861406326
    2. ' r' → logprob: -4.5112624168396
    3. 'c' → logprob: -9.261261940002441
    4. '(r' → logprob: -9.386261940002441
    5. 'H' → logprob: -11.636261940002441
    6. ' c' → logprob: -11.886261940002441
    7. ' ' → logprob: -11.886261940002441
    8. '0' → logprob: -12.511261940002441
    9. ' H' → logprob: -13.386261940002441
    10. ' (' → logprob: -13.511261940002441

Token 253: ' peut' (ID: 9216)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018794061616063118
    2. ' +' → logprob: -5.643794059753418
    3. ' peux' → logprob: -5.643794059753418
    4. ' peut' → logprob: -6.018794059753418
    5. ' can' → logprob: -6.018794059753418
    6. 'r' → logprob: -6.518794059753418
    7. ' ' → logprob: -6.643794059753418
    8. 'a' → logprob: -7.018794059753418
    9. ' a' → logprob: -7.268794059753418
    10. 'can' → logprob: -7.518794059753418

Token 254: ' aller' (ID: 18383)
  Prédit: ' aller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aller' → logprob: -0.38142940402030945
    2. 'aller' → logprob: -1.2564294338226318
    3. 'go' → logprob: -4.381429195404053
    4. 'r' → logprob: -4.881429195404053
    5. ' go' → logprob: -5.006429195404053
    6. 'all' → logprob: -6.506429195404053
    7. ''aller' → logprob: -7.131429195404053
    8. '’aller' → logprob: -7.381429195404053
    9. 'alle' → logprob: -7.506429195404053
    10. ' allez' → logprob: -7.881429195404053

Token 255: ' en' (ID: 469)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.3531345725059509
    2. 'down' → logprob: -1.7281346321105957
    3. 'à' → logprob: -2.4781346321105957
    4. 'r' → logprob: -4.728134632110596
    5. 'en' → logprob: -4.728134632110596
    6. 'au' → logprob: -5.353134632110596
    7. ' à' → logprob: -5.728134632110596
    8. ' en' → logprob: -6.103134632110596
    9. ' down' → logprob: -6.478134632110596
    10. 'below' → logprob: -6.478134632110596

Token 256: ' bas' (ID: 3222)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8494519591331482
    2. 'range' → logprob: -0.8494519591331482
    3. '(r' → logprob: -2.224452018737793
    4. 'down' → logprob: -4.849452018737793
    5. 'bas' → logprob: -4.849452018737793
    6. '   ' → logprob: -5.224452018737793
    7. ' r' → logprob: -5.724452018737793
    8. '[r' → logprob: -5.724452018737793
    9. ' bas' → logprob: -6.224452018737793
    10. 'b' → logprob: -6.474452018737793

Token 257: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00283210352063179
    2. '<|end|>' → logprob: -6.377831935882568
    3. '       ' → logprob: -7.502831935882568
    4. '          ' → logprob: -9.252832412719727
    5. ' if' → logprob: -9.502832412719727
    6. '		' → logprob: -9.502832412719727
    7. '   ' → logprob: -9.627832412719727
    8. ',' → logprob: -10.127832412719727
    9. '               ' → logprob: -10.377832412719727
    10. '(' → logprob: -10.752832412719727

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.1782583391759545e-05
    2. 'if' → logprob: -11.750031471252441
    3. ' if' → logprob: -12.375031471252441
    4. '       ' → logprob: -12.625031471252441
    5. '		' → logprob: -12.625031471252441
    6. '          ' → logprob: -12.750031471252441
    7. '<|end|>' → logprob: -12.750031471252441
    8. ',' → logprob: -13.000031471252441
    9. '```' → logprob: -13.250031471252441
    10. '   ' → logprob: -13.750031471252441

Token 259: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09604639559984207
    2. '           ' → logprob: -2.5960464477539062
    3. 'if' (adapté à ' if') → logprob: -4.096046447753906
    4. ' (' → logprob: -8.596046447753906
    5. '       ' → logprob: -9.596046447753906
    6. '   ' → logprob: -10.346046447753906
    7. '            ' → logprob: -10.471046447753906
    8. '    ' → logprob: -11.346046447753906
    9. '(' → logprob: -11.596046447753906
    10. ' ' → logprob: -11.721046447753906

Token 260: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5759522914886475
    2. 'r' → logprob: -0.8259522914886475
    3. '   ' → logprob: -12.075952529907227
    4. ' ' → logprob: -12.575952529907227
    5. '(r' → logprob: -13.575952529907227
    6. ' (' → logprob: -14.450952529907227
    7. '  ' → logprob: -14.575952529907227
    8. '	r' → logprob: -14.825952529907227
    9. ' ' → logprob: -15.075952529907227
    10. '    ' → logprob: -15.513452529907227

Token 261: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011722482740879059
    2. ' +' → logprob: -6.751172065734863
    3. '+
' → logprob: -13.251172065734863
    4. '<' → logprob: -16.12617301940918
    5. '+r' → logprob: -17.37617301940918
    6. '＋' → logprob: -17.50117301940918
    7. '1' → logprob: -17.50117301940918
    8. ' +
' → logprob: -17.87617301940918
    9. '+[' → logprob: -18.00117301940918
    10. '()+' → logprob: -18.00117301940918

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '<|end|>' → logprob: -19.375
    4. '```' → logprob: -20.75
    5. '
' → logprob: -20.75
    6. '+' → logprob: -20.875
    7. '[' → logprob: -22.25
    8. '   ' → logprob: -22.5
    9. '۱' → logprob: -22.875
    10. '１' → logprob: -23.5

Token 263: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.026306571438908577
    2. '<' → logprob: -3.651306629180908
    3. '<|end|>' → logprob: -13.27630615234375
    4. ',' → logprob: -13.52630615234375
    5. ' ' → logprob: -13.77630615234375
    6. ' <
' → logprob: -14.77630615234375
    7. '[' → logprob: -15.02630615234375
    8. ' ' → logprob: -15.15130615234375
    9. '<n' → logprob: -15.52630615234375
    10. ')' → logprob: -15.65130615234375

Token 264: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0013271415373310447
    2. ' H' → logprob: -6.626327037811279
    3. '<|end|>' → logprob: -14.251327514648438
    4. '   ' → logprob: -15.376327514648438
    5. ' ' → logprob: -15.626327514648438
    6. '	H' → logprob: -15.876327514648438
    7. '  ' → logprob: -17.251327514648438
    8. '
' → logprob: -17.751327514648438
    9. 'HBox' → logprob: -18.626327514648438
    10. '(H' → logprob: -18.626327514648438

Token 265: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12693870067596436
    2. 'and' → logprob: -2.126938819885254
    3. ',' → logprob: -11.626938819885254
    4. '           ' → logprob: -14.751938819885254
    5. ':
' → logprob: -15.126938819885254
    6. ' ' → logprob: -15.376938819885254
    7. '	and' → logprob: -15.501938819885254
    8. ')' → logprob: -16.251937866210938
    9. ' и' → logprob: -16.251937866210938
    10. '<|end|>' → logprob: -16.376937866210938

Token 266: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0067167943343520164
    2. ' is' → logprob: -5.006716728210449
    3. ' ' → logprob: -14.00671672821045
    4. 'matrix' → logprob: -15.38171672821045
    5. '(is' → logprob: -16.756717681884766
    6. '0' → logprob: -16.881717681884766
    7. '  ' → logprob: -17.006717681884766
    8. '<|end|>' → logprob: -17.131717681884766
    9. 'isdigit' → logprob: -17.381717681884766
    10. '
' → logprob: -17.381717681884766

Token 267: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.02664150856435299
    2. 'digit' → logprob: -3.651641607284546
    3. 'Digit' → logprob: -8.026641845703125
    4. '(r' → logprob: -11.776641845703125
    5. 'isdigit' → logprob: -13.026641845703125
    6. 'matrix' → logprob: -13.901641845703125
    7. 'r' → logprob: -14.526641845703125
    8. '(H' → logprob: -14.776641845703125
    9. ' digit' → logprob: -14.901641845703125
    10. '-digit' → logprob: -15.026641845703125

Token 268: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -8.537868779967539e-06
    2. 'matrix' → logprob: -11.750008583068848
    3. ' matrix' → logprob: -15.125008583068848
    4. '(' → logprob: -15.250008583068848
    5. '	matrix' → logprob: -16.87500762939453
    6. '(m' → logprob: -19.87500762939453
    7. '(mesh' → logprob: -20.00000762939453
    8. '(
' → logprob: -20.00000762939453
    9. '(module' → logprob: -20.12500762939453
    10. '(machine' → logprob: -20.12500762939453

Token 269: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.0259150157216936e-05
    2. 'r' → logprob: -10.00005054473877
    3. '[
' → logprob: -13.37505054473877
    4. '[' → logprob: -13.75005054473877
    5. '(r' → logprob: -14.12505054473877
    6. '[row' → logprob: -14.87505054473877
    7. '+' → logprob: -15.12505054473877
    8. ' [' → logprob: -15.37505054473877
    9. '][' → logprob: -15.75005054473877
    10. '   ' → logprob: -16.500049591064453

Token 270: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009242036612704396
    2. ' +' → logprob: -7.500924110412598
    3. '][' → logprob: -9.000924110412598
    4. '+c' → logprob: -9.125924110412598
    5. '[' → logprob: -9.750924110412598
    6. 'c' → logprob: -10.250924110412598
    7. '[c' → logprob: -11.000924110412598
    8. '+r' → logprob: -12.000924110412598
    9. '+
' → logprob: -12.500924110412598
    10. '[r' → logprob: -12.625924110412598

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00081963452976197
    2. 'c' → logprob: -7.250819683074951
    3. '+' → logprob: -9.750819206237793
    4. ' ' → logprob: -10.750819206237793
    5. '   ' → logprob: -10.750819206237793
    6. '       ' → logprob: -13.250819206237793
    7. '```' → logprob: -13.250819206237793
    8. '  ' → logprob: -14.000819206237793
    9. ' c' → logprob: -14.500819206237793
    10. '     ' → logprob: -14.625819206237793

Token 272: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5856285095214844
    2. '][' → logprob: -0.8356285095214844
    3. '[c' → logprob: -5.710628509521484
    4. ',c' → logprob: -6.085628509521484
    5. '],' → logprob: -6.585628509521484
    6. ' ,' → logprob: -6.835628509521484
    7. 'c' → logprob: -7.335628509521484
    8. '[' → logprob: -8.085628509521484
    9. '[r' → logprob: -8.585628509521484
    10. ']' → logprob: -8.585628509521484

Token 273: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.672236824873835e-05
    2. ' c' → logprob: -9.625076293945312
    3. ')c' → logprob: -12.375076293945312
    4. ')' → logprob: -13.125076293945312
    5. '   ' → logprob: -14.000076293945312
    6. ' ' → logprob: -14.125076293945312
    7. '[' → logprob: -14.250076293945312
    8. '[c' → logprob: -14.500076293945312
    9. '<|end|>' → logprob: -14.500076293945312
    10. '  ' → logprob: -15.375076293945312

Token 274: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.47918766736984253
    2. ']):
' → logprob: -0.9791876673698425
    3. ']' → logprob: -6.104187488555908
    4. '])' → logprob: -6.979187488555908
    5. '):' → logprob: -7.604187488555908
    6. '']):
' → logprob: -7.729187488555908
    7. '])):
' → logprob: -7.854187488555908
    8. '):
' → logprob: -8.354187965393066
    9. ')]' → logprob: -9.479187965393066
    10. ' ]' → logprob: -9.604187965393066

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.033540233969688416
    2. ' candidates' → logprob: -4.40854024887085
    3. '           ' → logprob: -4.65854024887085
    4. '):
' → logprob: -5.65854024887085
    5. 'c' → logprob: -6.15854024887085
    6. ':
' → logprob: -6.28354024887085
    7. ':' → logprob: -6.53354024887085
    8. 'andidates' → logprob: -7.40854024887085
    9. '_candidates' → logprob: -7.53354024887085
    10. '):' → logprob: -8.533539772033691

Token 276: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013917810283601284
    2. ' candidates' → logprob: -6.626391887664795
    3. '           ' → logprob: -10.001391410827637
    4. '               ' → logprob: -11.876391410827637
    5. '   ' → logprob: -12.751391410827637
    6. 'candidate' → logprob: -12.876391410827637
    7. ' c' → logprob: -13.376391410827637
    8. 'cand' → logprob: -14.001391410827637
    9. '_candidates' → logprob: -14.126391410827637
    10. '       ' → logprob: -14.251391410827637

Token 277: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00024156268045771867
    2. '.' → logprob: -8.37524127960205
    3. 'append' → logprob: -12.12524127960205
    4. ' .' → logprob: -13.25024127960205
    5. '.app' → logprob: -13.37524127960205
    6. ').' → logprob: -14.25024127960205
    7. '.add' → logprob: -15.00024127960205
    8. '].' → logprob: -15.25024127960205
    9. '           ' → logprob: -15.37524127960205
    10. '.setdefault' → logprob: -16.250242233276367

Token 278: '(d' (ID: 2572)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.4752233624458313
    2. '(d' → logprob: -1.2252233028411865
    3. 'd' → logprob: -2.4752233028411865
    4. ' dfs' → logprob: -7.975223541259766
    5. 'df' → logprob: -10.600223541259766
    6. '   ' → logprob: -10.850223541259766
    7. ' (' → logprob: -11.725223541259766
    8. '  ' → logprob: -12.350223541259766
    9. '(' → logprob: -12.350223541259766
    10. ' ' → logprob: -13.225223541259766

Token 279: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.004525415599346161
    2. '(r' → logprob: -5.629525184631348
    3. 'f' → logprob: -8.004525184631348
    4. 'dfs' → logprob: -8.129525184631348
    5. 's' → logprob: -9.379525184631348
    6. 'r' → logprob: -9.379525184631348
    7. 'sf' → logprob: -10.004525184631348
    8. '[r' → logprob: -10.879525184631348
    9. 'fsp' → logprob: -11.754525184631348
    10. '   ' → logprob: -11.879525184631348

Token 280: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -7.255023956531659e-05
    2. '(' → logprob: -9.625072479248047
    3. 'r' → logprob: -12.250072479248047
    4. '(
' → logprob: -14.125072479248047
    5. ' (' → logprob: -14.250072479248047
    6. ')' → logprob: -15.625072479248047
    7. ' r' → logprob: -18.000072479248047
    8. '   ' → logprob: -18.125072479248047
    9. '((' → logprob: -18.125072479248047
    10. ',' → logprob: -18.875072479248047

Token 281: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012584454379975796
    2. ' +' → logprob: -6.751258373260498
    3. ',' → logprob: -9.501258850097656
    4. '+,' → logprob: -12.126258850097656
    5. '+
' → logprob: -12.126258850097656
    6. '+c' → logprob: -13.876258850097656
    7. ' ' → logprob: -14.376258850097656
    8. '
' → logprob: -15.501258850097656
    9. ',c' → logprob: -15.501258850097656
    10. '   ' → logprob: -15.876258850097656

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2855416066013277e-05
    2. 'c' → logprob: -10.875032424926758
    3. ' ' → logprob: -11.625032424926758
    4. '+' → logprob: -13.125032424926758
    5. '```' → logprob: -14.000032424926758
    6. '   ' → logprob: -14.750032424926758
    7. ')' → logprob: -15.000032424926758
    8. '
' → logprob: -15.062532424926758
    9. '`' → logprob: -15.125032424926758
    10. 'r' → logprob: -16.187532424926758

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005989041528664529
    2. ',c' → logprob: -7.500598907470703
    3. ' ,' → logprob: -10.125598907470703
    4. '[' → logprob: -13.750598907470703
    5. '][' → logprob: -14.250598907470703
    6. '),' → logprob: -14.250598907470703
    7. 'c' → logprob: -14.375598907470703
    8. ')' → logprob: -14.750598907470703
    9. '`,' → logprob: -14.750598907470703
    10. ',
' → logprob: -15.000598907470703

Token 284: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001931970240548253
    2. ' c' → logprob: -6.251932144165039
    3. ')c' → logprob: -13.126932144165039
    4. '   ' → logprob: -14.501932144165039
    5. ' ' → logprob: -15.251932144165039
    6. '	c' → logprob: -15.751932144165039
    7. ')' → logprob: -16.25193214416504
    8. '    ' → logprob: -17.00193214416504
    9. '       ' → logprob: -17.00193214416504
    10. '
' → logprob: -17.12693214416504

Token 285: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.043228231370449066
    2. ')' → logprob: -3.1682281494140625
    3. '])' → logprob: -9.668228149414062
    4. ')+' → logprob: -9.918228149414062
    5. '))
' → logprob: -10.168228149414062
    6. ')))' → logprob: -11.043228149414062
    7. '+' → logprob: -11.168228149414062
    8. ' ))' → logprob: -11.168228149414062
    9. ')]' → logprob: -11.418228149414062
    10. ')])' → logprob: -12.043228149414062

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2945394217967987
    2. ')' → logprob: -1.919539451599121
    3. '+' → logprob: -3.044539451599121
    4. '   ' → logprob: -4.919539451599121
    5. ' tokens' → logprob: -4.919539451599121
    6. ' if' → logprob: -5.544539451599121
    7. ' current' → logprob: -5.544539451599121
    8. '[' → logprob: -5.669539451599121
    9. 'current' → logprob: -5.669539451599121
    10. 'tokens' → logprob: -5.669539451599121

Token 287: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9050825834274292
    2. 'c' → logprob: -1.0300825834274292
    3. 'max' → logprob: -1.6550825834274292
    4. 'best' → logprob: -3.2800827026367188
    5. 'current' → logprob: -5.155082702636719
    6. 'next' → logprob: -6.280082702636719
    7. 'result' → logprob: -7.155082702636719
    8. '#' (adapté à ' #') → logprob: -8.780082702636719
    9. 'candidate' → logprob: -8.905082702636719
    10. 'for' → logprob: -9.030082702636719

Token 288: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36291196942329407
    2. 'max' → logprob: -1.8629119396209717
    3. 'current' → logprob: -2.7379119396209717
    4. 'c' → logprob: -3.1129119396209717
    5. 'best' → logprob: -3.7379119396209717
    6. 'result' → logprob: -5.362912178039551
    7. 'curr' → logprob: -6.112912178039551
    8. ' if' → logprob: -6.237912178039551
    9. 'next' → logprob: -6.237912178039551
    10. 'res' → logprob: -7.237912178039551

Token 289: ' aucun' (ID: 41678)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.37732964754104614
    2. ' not' → logprob: -1.8773295879364014
    3. ' candidates' → logprob: -1.8773295879364014
    4. 'not' → logprob: -4.8773298263549805
    5. ' c' → logprob: -8.00232982635498
    6. ' current' → logprob: -8.87732982635498
    7. ' candidats' → logprob: -9.62732982635498
    8. 'current' → logprob: -10.00232982635498
    9. ' len' → logprob: -10.00232982635498
    10. 'len' → logprob: -10.50232982635498

Token 290: ' mouvement' (ID: 62236)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004964766092598438
    2. 'candidate' → logprob: -6.004964828491211
    3. ' candidates' → logprob: -6.754964828491211
    4. '=' → logprob: -6.879964828491211
    5. ' candidats' → logprob: -8.754964828491211
    6. ' =' → logprob: -10.129964828491211
    7. ' candidat' → logprob: -10.629964828491211
    8. '=c' → logprob: -11.504964828491211
    9. ' c' → logprob: -11.629964828491211
    10. ')c' → logprob: -11.879964828491211

Token 291: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.1905449479818344
    2. ' possible' → logprob: -2.565544843673706
    3. '=' → logprob: -3.315544843673706
    4. '_possible' → logprob: -3.565544843673706
    5. 's' → logprob: -4.565545082092285
    6. '==' → logprob: -4.690545082092285
    7. ':' → logprob: -5.440545082092285
    8. 'n' → logprob: -5.690545082092285
    9. ' ==' → logprob: -6.565545082092285
    10. ' =' → logprob: -6.690545082092285

Token 292: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43724972009658813
    2. ':' → logprob: -1.6872496604919434
    3. ',' → logprob: -2.1872496604919434
    4. ' and' → logprob: -3.6872496604919434
    5. ':
' → logprob: -4.437249660491943
    6. 'and' → logprob: -4.687249660491943
    7. ' or' → logprob: -4.812249660491943
    8. '               ' → logprob: -7.187249660491943
    9. ' if' → logprob: -8.437250137329102
    10. 'if' → logprob: -8.562250137329102

Token 293: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16782182455062866
    2. ' dp' → logprob: -2.5428218841552734
    3. 'return' → logprob: -2.7928218841552734
    4. '           ' → logprob: -4.917821884155273
    5. ' return' → logprob: -5.042821884155273
    6. 'result' → logprob: -8.042821884155273
    7. '               ' → logprob: -9.042821884155273
    8. 'ret' → logprob: -9.167821884155273
    9. 'current' → logprob: -10.167821884155273
    10. 'answer' → logprob: -10.667821884155273

Token 294: ' maximal' (ID: 65414)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5256362557411194
    2. ' =' → logprob: -0.9006362557411194
    3. '_possible' → logprob: -6.650636196136475
    4. 'possible' → logprob: -7.275636196136475
    5. '_current' → logprob: -9.150636672973633
    6. '_c' → logprob: -10.025636672973633
    7. ' possible' → logprob: -10.150636672973633
    8. '_act' → logprob: -10.150636672973633
    9. ' ' → logprob: -10.150636672973633
    10. '=current' → logprob: -10.400636672973633

Token 295: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25241053104400635
    2. ' =' → logprob: -1.5024105310440063
    3. '=current' → logprob: -7.877410411834717
    4. '           ' → logprob: -9.752410888671875
    5. 'current' → logprob: -11.252410888671875
    6. '=c' → logprob: -11.377410888671875
    7. '=
' → logprob: -12.627410888671875
    8. ' current' → logprob: -12.627410888671875
    9. 's' → logprob: -13.877410888671875
    10. '=[' → logprob: -14.002410888671875

Token 296: ' juste' (ID: 31553)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.005456678103655577
    2. 'int' → logprob: -5.880456447601318
    3. ' current' → logprob: -6.380456447601318
    4. '[current' → logprob: -7.755456447601318
    5. 'matrix' → logprob: -7.755456447601318
    6. '[int' → logprob: -10.380456924438477
    7. '[' → logprob: -10.380456924438477
    8. '(current' → logprob: -12.005456924438477
    9. 'c' → logprob: -12.380456924438477
    10. ' int' → logprob: -12.505456924438477

Token 297: ' le' (ID: 505)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.007619171869009733
    2. '[current' → logprob: -5.257619380950928
    3. ' current' → logprob: -6.257619380950928
    4. 'int' → logprob: -8.50761890411377
    5. '[int' → logprob: -8.75761890411377
    6. '[' → logprob: -9.25761890411377
    7. '   ' → logprob: -12.75761890411377
    8. ' [' → logprob: -13.50761890411377
    9. 'matrix' → logprob: -13.50761890411377
    10. '1' → logprob: -13.75761890411377

Token 298: ' chiffre' (ID: 107420)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.005794408731162548
    2. '[current' → logprob: -5.380794525146484
    3. ' current' → logprob: -6.880794525146484
    4. 'matrix' → logprob: -10.130794525146484
    5. '[' → logprob: -10.255794525146484
    6. 'int' → logprob: -10.380794525146484
    7. '[int' → logprob: -10.755794525146484
    8. 'curr' → logprob: -12.255794525146484
    9. '(current' → logprob: -12.880794525146484
    10. 'cur' → logprob: -13.005794525146484

Token 299: ' actuel' (ID: 113646)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07103117555379868
    2. ' current' → logprob: -3.696031093597412
    3. '[current' → logprob: -3.696031093597412
    4. ' actuel' → logprob: -4.321031093597412
    5. 'matrix' → logprob: -6.571031093597412
    6. ' actuelle' → logprob: -7.321031093597412
    7. '(current' → logprob: -7.321031093597412
    8. '[' → logprob: -7.321031093597412
    9. '.' → logprob: -7.821031093597412
    10. '.current' → logprob: -8.07103157043457

Token 300: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049208663403987885
    2. 'dp' → logprob: -4.174208641052246
    3. ' =' → logprob: -4.674208641052246
    4. ' dp' → logprob: -4.674208641052246
    5. ',' → logprob: -5.424208641052246
    6. '=' → logprob: -5.549208641052246
    7. '
' → logprob: -7.424208641052246
    8. 'current' → logprob: -7.674208641052246
    9. '            
' → logprob: -7.674208641052246
    10. ')' → logprob: -7.924208641052246

Token 301: '           ' (ID: 352)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.40460848808288574
    2. ' =' → logprob: -2.0296084880828857
    3. ' current' → logprob: -2.1546084880828857
    4. '=' → logprob: -3.0296084880828857
    5. '[current' → logprob: -4.029608726501465
    6. '=current' → logprob: -4.154608726501465
    7. '(current' → logprob: -7.279608726501465
    8. '[' → logprob: -7.529608726501465
    9. '.current' → logprob: -8.279608726501465
    10. 'return' → logprob: -8.279608726501465

Token 302: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.46899551153182983
    2. ' current' → logprob: -1.0939955711364746
    3. 'return' → logprob: -4.218995571136475
    4. 'matrix' → logprob: -4.468995571136475
    5. ' matrix' → logprob: -5.343995571136475
    6. ' return' → logprob: -5.593995571136475
    7. 'int' → logprob: -5.843995571136475
    8. 'dp' → logprob: -7.343995571136475
    9. ' dp' → logprob: -7.468995571136475
    10. ' int' → logprob: -7.843995571136475

Token 303: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.23863261938095093
    2. ' not' → logprob: -1.7386326789855957
    3. 'len' → logprob: -3.7386326789855957
    4. 'c' → logprob: -4.738632678985596
    5. 'current' → logprob: -6.238632678985596
    6. 'True' → logprob: -7.363632678985596
    7. ' len' → logprob: -7.363632678985596
    8. ')' → logprob: -8.988632202148438
    9. ' current' → logprob: -9.488632202148438
    10. ' True' → logprob: -9.738632202148438

Token 304: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005236598663032055
    2. ' candidates' → logprob: -5.255236625671387
    3. 'andidates' → logprob: -14.380236625671387
    4. 'current' → logprob: -15.005236625671387
    5. 'candidate' → logprob: -15.005236625671387
    6. ' candidats' → logprob: -15.005236625671387
    7. '_candidates' → logprob: -15.255236625671387
    8. ' c' → logprob: -15.255236625671387
    9. '	c' → logprob: -16.00523567199707
    10. 'is' → logprob: -16.13023567199707

Token 305: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10057434439659119
    2. ':
' → logprob: -2.350574254989624
    3. '=' → logprob: -8.600574493408203
    4. '.append' → logprob: -9.475574493408203
    5. ' =' → logprob: -9.600574493408203
    6. ':return' → logprob: -11.100574493408203
    7. '):
' → logprob: -11.850574493408203
    8. '):' → logprob: -12.350574493408203
    9. ' :' → logprob: -12.350574493408203
    10. '[' → logprob: -13.100574493408203

Token 306: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5781675577163696
    2. '               ' → logprob: -1.4531675577163696
    3. ' dp' → logprob: -1.8281675577163696
    4. '           ' → logprob: -3.20316743850708
    5. ':' → logprob: -6.95316743850708
    6. '):
' → logprob: -7.07816743850708
    7. ':
' → logprob: -7.45316743850708
    8. 'return' → logprob: -7.95316743850708
    9. '(dp' → logprob: -8.203167915344238
    10. ',' → logprob: -8.453167915344238

Token 307: ' dp' (ID: 21546)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.13985130190849304
    2. ' current' → logprob: -2.6398513317108154
    3. 'return' → logprob: -3.2648513317108154
    4. 'matrix' → logprob: -4.264851093292236
    5. ' return' → logprob: -5.889851093292236
    6. 'int' → logprob: -6.264851093292236
    7. ' matrix' → logprob: -6.764851093292236
    8. 'dp' (adapté à ' dp') → logprob: -7.639851093292236
    9. '   ' → logprob: -8.139851570129395
    10. ' dp' → logprob: -9.139851570129395

Token 308: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.750001907348633
    3. 'r' → logprob: -15.000001907348633
    4. '[s' → logprob: -16.625001907348633
    5. '[t' → logprob: -17.500001907348633
    6. '[u' → logprob: -17.500001907348633
    7. '][' → logprob: -17.750001907348633
    8. ' [' → logprob: -18.125001907348633
    9. '	r' → logprob: -18.250001907348633
    10. ')[' → logprob: -18.375001907348633

Token 309: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.5716304410016164e-05
    2. '[r' → logprob: -10.625035285949707
    3. ']' → logprob: -11.625035285949707
    4. ' ][' → logprob: -14.250035285949707
    5. '[' → logprob: -14.500035285949707
    6. '"][' → logprob: -14.500035285949707
    7. ''][' → logprob: -14.875035285949707
    8. ']][' → logprob: -16.250036239624023
    9. 'r' → logprob: -16.375036239624023
    10. '   ' → logprob: -17.000036239624023

Token 310: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.014684110297821e-06
    2. ' c' → logprob: -12.625008583068848
    3. '][' → logprob: -13.000008583068848
    4. '[c' → logprob: -13.750008583068848
    5. ')c' → logprob: -13.875008583068848
    6. ']' → logprob: -14.625008583068848
    7. ')' → logprob: -15.750008583068848
    8. '```' → logprob: -15.750008583068848
    9. '	c' → logprob: -16.000009536743164
    10. '   ' → logprob: -16.125009536743164

Token 311: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021641071361955255
    2. ']=' → logprob: -8.500216484069824
    3. ' ]' → logprob: -11.375216484069824
    4. '=' → logprob: -13.625216484069824
    5. ']=(' → logprob: -17.125215530395508
    6. ']='' → logprob: -17.375215530395508
    7. ')' → logprob: -17.625215530395508
    8. ']="' → logprob: -18.250215530395508
    9. ' =' → logprob: -18.375215530395508
    10. '']' → logprob: -18.375215530395508

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004307884373702109
    2. ' =' → logprob: -7.750430583953857
    3. '=
' → logprob: -17.000431060791016
    4. '=

' → logprob: -18.500431060791016
    5. '=str' → logprob: -19.375431060791016
    6. '=int' → logprob: -19.875431060791016
    7. '=current' → logprob: -20.250431060791016
    8. '=c' → logprob: -20.250431060791016
    9. ']=' → logprob: -20.375431060791016
    10. '=end' → logprob: -20.875431060791016

Token 313: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00794799905270338
    2. 'matrix' → logprob: -5.63294792175293
    3. 'int' → logprob: -5.88294792175293
    4. '[current' → logprob: -6.88294792175293
    5. '[int' → logprob: -8.75794792175293
    6. ' current' → logprob: -8.75794792175293
    7. '[' → logprob: -8.88294792175293
    8. '(current' → logprob: -9.88294792175293
    9. '{' → logprob: -11.50794792175293
    10. 'curr' → logprob: -12.88294792175293

Token 314: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.1472419600977446e-06
    2. 'char' → logprob: -14.000000953674316
    3. '_' → logprob: -16.125001907348633
    4. '_CHAR' → logprob: -16.875001907348633
    5. '<char' → logprob: -17.750001907348633
    6. '_chat' → logprob: -17.750001907348633
    7. '-char' → logprob: -18.250001907348633
    8. 'Char' → logprob: -18.375001907348633
    9. '_chars' → logprob: -18.500001907348633
    10. '_token' → logprob: -19.000001907348633

Token 315: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04430101439356804
    2. '+' → logprob: -3.7943010330200195
    3. '               ' → logprob: -4.7943010330200195
    4. '<|end|>' → logprob: -5.5443010330200195
    5. '
' → logprob: -5.6693010330200195
    6. 'return' → logprob: -6.0443010330200195
    7. '+
' → logprob: -6.6693010330200195
    8. '       ' → logprob: -7.4193010330200195
    9. '          ' → logprob: -8.91930103302002
    10. ' +' → logprob: -9.04430103302002

Token 316: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010102282278239727
    2. '               ' → logprob: -5.135102272033691
    3. 'return' → logprob: -6.010102272033691
    4. 'else' → logprob: -7.135102272033691
    5. '+' → logprob: -7.635102272033691
    6. '       ' → logprob: -8.510102272033691
    7. ' return' → logprob: -9.760102272033691
    8. '<|end|>' → logprob: -9.760102272033691
    9. ' else' → logprob: -10.385102272033691
    10. '   ' → logprob: -10.760102272033691

Token 317: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20497755706310272
    2. 'return' (adapté à ' return') → logprob: -2.329977512359619
    3. '               ' → logprob: -2.454977512359619
    4. ' return' → logprob: -6.329977512359619
    5. '       ' → logprob: -7.954977512359619
    6. '   ' → logprob: -10.829977989196777
    7. 'else' → logprob: -12.329977989196777
    8. '                   ' → logprob: -12.704977989196777
    9. '          ' → logprob: -13.454977989196777
    10. ':return' → logprob: -13.454977989196777

Token 318: ' dp' (ID: 21546)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.037477511912584305
    2. ' current' → logprob: -3.412477493286133
    3. 'dp' → logprob: -5.662477493286133
    4. ' dp' → logprob: -8.037477493286133
    5. 'curr' → logprob: -10.787477493286133
    6. 'cur' → logprob: -12.537477493286133
    7. ' ' → logprob: -14.162477493286133
    8. 'c' → logprob: -14.662477493286133
    9. '_current' → logprob: -14.912477493286133
    10. '$current' → logprob: -15.162477493286133

Token 319: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.5048530030981055e-06
    2. 'r' → logprob: -13.750001907348633
    3. '[c' → logprob: -14.750001907348633
    4. '[' → logprob: -16.875001907348633
    5. ' [' → logprob: -18.750001907348633
    6. ' r' → logprob: -19.375001907348633
    7. '[row' → logprob: -20.125001907348633
    8. '[p' → logprob: -20.375001907348633
    9. '```' → logprob: -20.625001907348633
    10. '   ' → logprob: -20.875001907348633

Token 320: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.661626634420827e-05
    2. '[c' → logprob: -10.000086784362793
    3. 'c' → logprob: -10.250086784362793
    4. ']' → logprob: -12.500086784362793
    5. ' ][' → logprob: -13.750086784362793
    6. '[' → logprob: -15.000086784362793
    7. ',c' → logprob: -15.750086784362793
    8. '	c' → logprob: -16.500085830688477
    9. ']][' → logprob: -16.500085830688477
    10. '"][' → logprob: -16.500085830688477

Token 321: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3856492842023727e-06
    2. ' c' → logprob: -14.500000953674316
    3. ')c' → logprob: -15.250000953674316
    4. '[c' → logprob: -16.000001907348633
    5. '	c' → logprob: -16.375001907348633
    6. '```' → logprob: -16.375001907348633
    7. ']' → logprob: -16.500001907348633
    8. ' ' → logprob: -16.625001907348633
    9. '[' → logprob: -17.250001907348633
    10. '<|end|>' → logprob: -17.500001907348633

Token 322: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0677434504032135
    2. '           ' → logprob: -2.8177435398101807
    3. '+' → logprob: -5.567743301391602
    4. ']' → logprob: -6.567743301391602
    5. '')' → logprob: -8.817743301391602
    6. '<|end|>' → logprob: -9.192743301391602
    7. '}' → logprob: -9.317743301391602
    8. '          ' → logprob: -10.442743301391602
    9. ' )' → logprob: -10.692743301391602
    10. '       ' → logprob: -11.192743301391602

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0175361055880785
    2. '            
' → logprob: -4.517536163330078
    3. '
' → logprob: -5.392536163330078
    4. '    
' → logprob: -7.017536163330078
    5. 'return' → logprob: -8.642536163330078
    6. ' 
' → logprob: -9.017536163330078
    7. 'current' → logprob: -9.017536163330078
    8. 'dp' → logprob: -9.142536163330078
    9. '  
' → logprob: -9.142536163330078
    10. 'else' → logprob: -9.642536163330078

Token 324: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28128138184547424
    2. 'best' → logprob: -1.5312813520431519
    3. ' max' → logprob: -4.406281471252441
    4. '           ' → logprob: -4.906281471252441
    5. ' best' → logprob: -5.781281471252441
    6. '#' (adapté à ' #') → logprob: -6.656281471252441
    7. 'c' → logprob: -6.781281471252441
    8. 'current' → logprob: -7.281281471252441
    9. 'candidate' → logprob: -7.281281471252441
    10. 'dp' → logprob: -7.531281471252441

Token 325: ' Sinon' (ID: 154924)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.112066350877285
    2. 'dp' → logprob: -2.3620662689208984
    3. 'best' → logprob: -4.862066268920898
    4. ' max' → logprob: -6.237066268920898
    5. 'c' → logprob: -6.737066268920898
    6. 'current' → logprob: -7.987066268920898
    7. 'candidate' → logprob: -8.987066268920898
    8. ' dp' → logprob: -9.112066268920898
    9. '#' → logprob: -9.362066268920898
    10. 'maximum' → logprob: -9.987066268920898

Token 326: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2490772008895874
    2. 'dp' → logprob: -1.3740772008895874
    3. ' dp' → logprob: -1.6240772008895874
    4. 'max' → logprob: -2.124077320098877
    5. 'best' → logprob: -3.124077320098877
    6. ' max' → logprob: -3.124077320098877
    7. ' =' → logprob: -3.624077320098877
    8. '=' → logprob: -4.499077320098877
    9. ' best' → logprob: -4.999077320098877
    10. 'current' → logprob: -5.999077320098877

Token 327: ' construire' (ID: 92473)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8425761461257935
    2. 'max' → logprob: -1.0925761461257935
    3. ' dp' → logprob: -2.342576026916504
    4. ' max' → logprob: -2.342576026916504
    5. 'best' → logprob: -4.092576026916504
    6. '           ' → logprob: -4.842576026916504
    7. 'current' → logprob: -5.467576026916504
    8. ' best' → logprob: -5.467576026916504
    9. 'next' → logprob: -5.967576026916504
    10. 'candidate' → logprob: -6.092576026916504

Token 328: ' le' (ID: 505)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3942234218120575
    2. 'max' → logprob: -1.2692234516143799
    3. ' current' → logprob: -3.51922345161438
    4. ' max' → logprob: -4.894223213195801
    5. 'the' → logprob: -6.144223213195801
    6. ' the' → logprob: -6.769223213195801
    7. 'str' → logprob: -6.769223213195801
    8. '[current' → logprob: -6.894223213195801
    9. '   ' → logprob: -7.144223213195801
    10. '[max' → logprob: -7.894223213195801

Token 329: ' plus' (ID: 2932)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.18228799104690552
    2. 'max' → logprob: -1.8072879314422607
    3. ' current' → logprob: -6.43228816986084
    4. 'curr' → logprob: -9.05728816986084
    5. 'number' → logprob: -9.05728816986084
    6. 'long' → logprob: -9.05728816986084
    7. 'cur' → logprob: -9.18228816986084
    8. 'candidate' → logprob: -9.18228816986084
    9. 'best' → logprob: -9.55728816986084
    10. ' max' → logprob: -9.55728816986084

Token 330: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.05152019113302231
    2. 'long' → logprob: -3.8015201091766357
    3. ' grand' → logprob: -4.051520347595215
    4. 'current' → logprob: -5.176520347595215
    5. ' long' → logprob: -5.926520347595215
    6. 'large' → logprob: -6.926520347595215
    7. '[current' → logprob: -8.051520347595215
    8. '_long' → logprob: -8.551520347595215
    9. ' current' → logprob: -9.051520347595215
    10. '+' → logprob: -9.801520347595215

Token 331: ' nombre' (ID: 9733)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.4527930021286011
    2. 'nombre' → logprob: -1.077793002128601
    3. 'dp' → logprob: -4.452793121337891
    4. ' nombre' → logprob: -5.202793121337891
    5. 'string' → logprob: -6.327793121337891
    6. 'num' → logprob: -6.452793121337891
    7. 'possible' → logprob: -7.327793121337891
    8. ' number' → logprob: -7.452793121337891
    9. 'str' → logprob: -8.20279312133789
    10. '_number' → logprob: -8.32779312133789

Token 332: ' possible' (ID: 4149)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20590536296367645
    2. '=' → logprob: -1.7059053182601929
    3. '           ' → logprob: -5.580905437469482
    4. '+' → logprob: -8.330904960632324
    5. ' +' → logprob: -9.330904960632324
    6. ' ' → logprob: -9.455904960632324
    7. ' +=' → logprob: -9.580904960632324
    8. ',' → logprob: -10.330904960632324
    9. '+=' → logprob: -10.455904960632324
    10. '            ' → logprob: -10.955904960632324

Token 333: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22219879925251007
    2. '           ' → logprob: -2.097198724746704
    3. '=' → logprob: -2.597198724746704
    4. ' dp' → logprob: -7.722198963165283
    5. ',' → logprob: -8.347198486328125
    6. '            
' → logprob: -8.597198486328125
    7. 'dp' → logprob: -8.597198486328125
    8. 'current' → logprob: -8.972198486328125
    9. 'tokens' → logprob: -8.972198486328125
    10. ' current' → logprob: -9.347198486328125

Token 334: ' concat' (ID: 73950)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1408858448266983
    2. ' concaten' → logprob: -2.640885829925537
    3. 'conc' → logprob: -3.390885829925537
    4. 'concat' → logprob: -4.515885829925537
    5. 'comb' → logprob: -5.390885829925537
    6. ' current' → logprob: -5.640885829925537
    7. 'con' → logprob: -6.265885829925537
    8. '           ' → logprob: -6.265885829925537
    9. 'com' → logprob: -7.015885829925537
    10. 'compar' → logprob: -7.265885829925537

Token 335: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.1946081817150116
    2. 'en' → logprob: -2.194608211517334
    3. 'at' → logprob: -4.194608211517334
    4. 'éné' → logprob: -4.194608211517334
    5. 'aten' → logprob: -4.444608211517334
    6. 'enant' → logprob: -5.194608211517334
    7. '+' → logprob: -5.694608211517334
    8. 'dp' → logprob: -5.694608211517334
    9. 'é' → logprob: -5.944608211517334
    10. 'èn' → logprob: -6.194608211517334

Token 336: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0020781708881258965
    2. 'ation' → logprob: -6.627078056335449
    3. 'ating' → logprob: -7.627078056335449
    4. 'er' → logprob: -9.87707805633545
    5. 'at' → logprob: -10.00207805633545
    6. 'e' → logprob: -10.87707805633545
    7. '[' → logprob: -11.12707805633545
    8. 'ent' → logprob: -11.25207805633545
    9. 'ing' → logprob: -11.25207805633545
    10. 'a' → logprob: -11.62707805633545

Token 337: ' ce' (ID: 2357)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.47412168979644775
    2. ' current' → logprob: -0.9741216897964478
    3. '(current' → logprob: -10.599122047424316
    4. '[current' → logprob: -12.599122047424316
    5. ' ' → logprob: -12.849122047424316
    6. '           ' → logprob: -12.849122047424316
    7. '   ' → logprob: -13.099122047424316
    8. 'matrix' → logprob: -13.724122047424316
    9. '=current' → logprob: -13.724122047424316
    10. '
' → logprob: -14.099122047424316

Token 338: ' chiffre' (ID: 107420)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10184171795845032
    2. ' current' → logprob: -2.726841688156128
    3. 'urrent' → logprob: -3.851841688156128
    4. 'token' → logprob: -5.726841926574707
    5. ' ' → logprob: -6.601841926574707
    6. '+' → logprob: -6.601841926574707
    7. '_current' → logprob: -6.726841926574707
    8. '[current' → logprob: -7.101841926574707
    9. ')' → logprob: -7.601841926574707
    10. ' +' → logprob: -7.976841926574707

Token 339: ' au' (ID: 2791)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133404850959778
    2. ' +' → logprob: -1.313340425491333
    3. 'current' → logprob: -10.438340187072754
    4. ',' → logprob: -11.563340187072754
    5. '+
' → logprob: -11.813340187072754
    6. '           ' → logprob: -11.813340187072754
    7. '+=' → logprob: -12.563340187072754
    8. ' +
' → logprob: -12.563340187072754
    9. ' current' → logprob: -12.688340187072754
    10. '[current' → logprob: -12.938340187072754

Token 340: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014910831116139889
    2. 'plus' → logprob: -4.764910697937012
    3. ' max' → logprob: -5.514910697937012
    4. 'maximum' → logprob: -6.889910697937012
    5. 'c' → logprob: -7.514910697937012
    6. ' plus' → logprob: -8.639910697937012
    7. '+' → logprob: -8.764910697937012
    8. ' maximum' → logprob: -9.014910697937012
    9. 'next' → logprob: -10.389910697937012
    10. 'min' → logprob: -10.639910697937012

Token 341: '           ' (ID: 352)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2696712613105774
    2. '+' → logprob: -2.2696712017059326
    3. 'plus' → logprob: -3.1446712017059326
    4. 'c' → logprob: -3.2696712017059326
    5. 'current' → logprob: -3.5196712017059326
    6. ' max' → logprob: -5.644671440124512
    7. 'candidate' → logprob: -5.894671440124512
    8. 'rest' → logprob: -6.019671440124512
    9. 'maximum' → logprob: -6.144671440124512
    10. ' +' → logprob: -6.769671440124512

Token 342: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02486557327210903
    2. 'plus' → logprob: -3.8998656272888184
    3. ' max' → logprob: -6.399865627288818
    4. 'maximum' → logprob: -7.024865627288818
    5. '+' → logprob: -7.649865627288818
    6. 'current' → logprob: -7.774865627288818
    7. ' plus' → logprob: -9.02486515045166
    8. '[max' → logprob: -9.27486515045166
    9. 'c' → logprob: -9.39986515045166
    10. '(max' → logprob: -9.77486515045166

Token 343: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.025064410641789436
    2. 'plus' → logprob: -3.775064468383789
    3. 'maximum' → logprob: -6.650064468383789
    4. ' max' → logprob: -8.025064468383789
    5. 'me' → logprob: -9.650064468383789
    6. '+' → logprob: -10.900064468383789
    7. ' plus' → logprob: -10.900064468383789
    8. 'min' → logprob: -11.150064468383789
    9. 'su' → logprob: -11.525064468383789
    10. '```' → logprob: -11.650064468383789

Token 344: ' grand' (ID: 6363)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.41461190581321716
    2. 'c' → logprob: -1.2896119356155396
    3. 'grand' → logprob: -3.66461181640625
    4. 'long' → logprob: -5.16461181640625
    5. '_candidates' → logprob: -5.41461181640625
    6. '...' → logprob: -5.78961181640625
    7. '```' → logprob: -5.78961181640625
    8. '+' → logprob: -6.16461181640625
    9. ' current' → logprob: -6.16461181640625
    10. ')' → logprob: -6.66461181640625

Token 345: ' parmi' (ID: 51713)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003347397781908512
    2. 'str' → logprob: -6.753347396850586
    3. 'candidate' → logprob: -7.003347396850586
    4. '_candidates' → logprob: -8.128347396850586
    5. 'max' → logprob: -8.503347396850586
    6. 'cand' → logprob: -8.628347396850586
    7. ' candidates' → logprob: -9.003347396850586
    8. '_str' → logprob: -9.628347396850586
    9. ' c' → logprob: -9.628347396850586
    10. '[c' → logprob: -10.128347396850586

Token 346: ' les' (ID: 1341)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00021688752167392522
    2. '[c' → logprob: -8.500216484069824
    3. ' candidates' → logprob: -11.875216484069824
    4. 'les' → logprob: -13.000216484069824
    5. 'candidate' → logprob: -13.750216484069824
    6. 'cand' → logprob: -13.750216484069824
    7. '   ' → logprob: -14.375216484069824
    8. '[' → logprob: -14.875216484069824
    9. ' candidats' → logprob: -15.000216484069824
    10. '(c' → logprob: -15.000216484069824

Token 347: ' suites' (ID: 59833)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003361774142831564
    2. '[c' → logprob: -8.250336647033691
    3. ' candidates' → logprob: -10.000336647033691
    4. ' candidats' → logprob: -11.125336647033691
    5. 'cand' → logprob: -11.625336647033691
    6. 'candidate' → logprob: -13.250336647033691
    7. '[' → logprob: -13.500336647033691
    8. '_candidates' → logprob: -13.625336647033691
    9. '[
' → logprob: -15.000336647033691
    10. ' c' → logprob: -15.375336647033691

Token 348: ' possibles' (ID: 97753)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.024604320526123
    2. '(c' → logprob: -1.899604320526123
    3. '[c' → logprob: -2.149604320526123
    4. ' candidates' → logprob: -2.274604320526123
    5. '_candidates' → logprob: -2.899604320526123
    6. 'max' → logprob: -3.274604320526123
    7. '[' → logprob: -3.399604320526123
    8. '+' → logprob: -3.524604320526123
    9. 's' → logprob: -4.399604320526123
    10. ' candidats' → logprob: -4.524604320526123

Token 349: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.040631651878357
    2. ' max' → logprob: -1.290631651878357
    3. 'current' → logprob: -1.790631651878357
    4. ' current' → logprob: -1.915631651878357
    5. ' dp' → logprob: -4.1656317710876465
    6. 'c' → logprob: -4.6656317710876465
    7. 'dp' → logprob: -5.0406317710876465
    8. ' candidates' → logprob: -5.4156317710876465
    9. '"' → logprob: -5.6656317710876465
    10. '   ' → logprob: -5.9156317710876465

Token 350: '           ' (ID: 352)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4138288199901581
    2. ' max' → logprob: -1.1638288497924805
    3. ' current' → logprob: -4.7888288497924805
    4. 'current' → logprob: -4.9138288497924805
    5. '   ' → logprob: -6.1638288497924805
    6. ' candidates' → logprob: -6.1638288497924805
    7. 'c' → logprob: -6.4138288497924805
    8. ''' → logprob: -7.1638288497924805
    9. ' c' → logprob: -7.4138288497924805
    10. '"' → logprob: -7.4138288497924805

Token 351: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9298239946365356
    2. 'current' → logprob: -1.0548239946365356
    3. ' current' → logprob: -1.6798239946365356
    4. ' max' → logprob: -2.679823875427246
    5. 'str' → logprob: -6.929823875427246
    6. '   ' → logprob: -7.804823875427246
    7. ' str' → logprob: -8.429823875427246
    8. ' ' → logprob: -8.554823875427246
    9. 'c' → logprob: -9.554823875427246
    10. '[max' → logprob: -10.179823875427246

Token 352: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6852207779884338
    2. 'max' → logprob: -0.8102207779884338
    3. 'best' → logprob: -3.435220718383789
    4. 'candidate' → logprob: -5.060220718383789
    5. 'next' → logprob: -5.435220718383789
    6. ' dp' → logprob: -6.185220718383789
    7. 'current' → logprob: -6.310220718383789
    8. ' max' → logprob: -6.435220718383789
    9. '   ' → logprob: -7.185220718383789
    10. 'c' → logprob: -7.310220718383789

Token 353: ' chois' (ID: 33475)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.5136035680770874
    2. 'dp' → logprob: -1.6386035680770874
    3. ' candidates' → logprob: -1.7636035680770874
    4. 'c' → logprob: -1.8886035680770874
    5. '           ' → logprob: -2.763603687286377
    6. ' candidats' → logprob: -3.638603687286377
    7. '       ' → logprob: -4.013603687286377
    8. '=' → logprob: -4.013603687286377
    9. 'continue' → logprob: -4.263603687286377
    10. '_candidates' → logprob: -4.263603687286377

Token 354: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4772918224334717
    2. 'it' → logprob: -0.9772918224334717
    3. 'ra' → logprob: -7.227292060852051
    4. 'd' → logprob: -7.352292060852051
    5. 'git' → logprob: -7.727292060852051
    6. 'rait' → logprob: -7.977292060852051
    7. 'ait' → logprob: -9.10229206085205
    8. 'ira' → logprob: -9.35229206085205
    9. 'agit' → logprob: -9.35229206085205
    10. 'a' → logprob: -9.60229206085205

Token 355: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0179377980530262
    2. ' max' → logprob: -4.142937660217285
    3. 'the' → logprob: -6.767937660217285
    4. ' the' → logprob: -7.517937660217285
    5. '=max' → logprob: -10.017937660217285
    6. '           ' → logprob: -10.142937660217285
    7. 'largest' → logprob: -10.642937660217285
    8. 'c' → logprob: -10.767937660217285
    9. '   ' → logprob: -11.267937660217285
    10. ',' → logprob: -11.642937660217285

Token 356: ' chaîne' (ID: 89288)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01253590453416109
    2. ' max' → logprob: -4.38753604888916
    3. 'maximum' → logprob: -11.38753604888916
    4. ' maximum' → logprob: -12.76253604888916
    5. '[max' → logprob: -13.38753604888916
    6. '(max' → logprob: -13.63753604888916
    7. 'candidate' → logprob: -13.63753604888916
    8. ' maximal' → logprob: -14.01253604888916
    9. '=max' → logprob: -14.01253604888916
    10. 'largest' → logprob: -14.01253604888916

Token 357: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.044493261724710464
    2. ' max' → logprob: -3.2944931983947754
    3. '(max' → logprob: -5.794493198394775
    4. ' maximale' → logprob: -7.294493198394775
    5. '=max' → logprob: -7.419493198394775
    6. '[max' → logprob: -7.669493198394775
    7. '           ' → logprob: -8.169493675231934
    8. '_max' → logprob: -8.544493675231934
    9. 's' → logprob: -8.919493675231934
    10. 'candidate' → logprob: -9.419493675231934

Token 358: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.05148973688483238
    2. ' plus' → logprob: -3.30148983001709
    3. '+' → logprob: -5.80148983001709
    4. '       ' → logprob: -5.80148983001709
    5. '   ' → logprob: -6.17648983001709
    6. 'pl' → logprob: -6.92648983001709
    7. '```' → logprob: -7.55148983001709
    8. 'nger' → logprob: -7.80148983001709
    9. '           ' → logprob: -7.92648983001709
    10. '        ' → logprob: -8.30148983001709

Token 359: ' grande' (ID: 10094)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.01929301954805851
    2. 'gr' → logprob: -4.144292831420898
    3. ' longue' → logprob: -5.894292831420898
    4. 'grand' → logprob: -8.019292831420898
    5. 'large' → logprob: -9.144292831420898
    6. '>' → logprob: -11.394292831420898
    7. 'lange' → logprob: -11.769292831420898
    8. 'gran' → logprob: -11.894292831420898
    9. '_long' → logprob: -12.269292831420898
    10. 'max' → logprob: -12.394292831420898

Token 360: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0609914064407349
    2. '=' → logprob: -1.5609914064407349
    3. 'max' → logprob: -1.5609914064407349
    4. '           ' → logprob: -2.4359912872314453
    5. '=max' → logprob: -2.9359912872314453
    6. ',' → logprob: -3.5609912872314453
    7. 'candidate' → logprob: -4.435991287231445
    8. 'dp' → logprob: -5.060991287231445
    9. ' candidats' → logprob: -5.185991287231445
    10. 'c' → logprob: -5.435991287231445

Token 361: ' valeur' (ID: 41664)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6869425773620605
    2. 'lex' → logprob: -0.8119425773620605
    3. 'lambda' → logprob: -3.4369425773620605
    4. 'reverse' → logprob: -5.0619425773620605
    5. 'terms' → logprob: -5.6869425773620605
    6. 'max' → logprob: -5.8119425773620605
    7. 'candidate' → logprob: -6.3119425773620605
    8. 'cmp' → logprob: -6.4369425773620605
    9. 'key' → logprob: -7.5619425773620605
    10. 'ter' → logprob: -7.8119425773620605

Token 362: ' numérique' (ID: 73962)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.31535005569458
    2. 'max' → logprob: -1.31535005569458
    3. ' =' → logprob: -1.44035005569458
    4. ',' → logprob: -2.69035005569458
    5. ' candidates' → logprob: -3.44035005569458
    6. '           ' → logprob: -3.56535005569458
    7. '
' → logprob: -3.94035005569458
    8. '=max' → logprob: -4.06535005569458
    9. ' candidats' → logprob: -4.44035005569458
    10. '=' → logprob: -4.69035005569458

Token 363: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5936710238456726
    2. ' max' → logprob: -1.5936710834503174
    3. ' =' → logprob: -2.5936710834503174
    4. '           ' → logprob: -3.0936710834503174
    5. ' candidates' → logprob: -3.0936710834503174
    6. '=' → logprob: -3.8436710834503174
    7. '   ' → logprob: -5.218670845031738
    8. '
' → logprob: -5.218670845031738
    9. ',' → logprob: -5.468670845031738
    10. '=max' → logprob: -5.468670845031738

Token 364: 'en' (ID: 262)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5028576850891113
    2. ' max' → logprob: -1.0028576850891113
    3. ' key' → logprob: -3.8778576850891113
    4. 'key' → logprob: -5.002857685089111
    5. '           ' → logprob: -7.877857685089111
    6. ')' → logprob: -8.877857208251953
    7. ',' → logprob: -8.877857208251953
    8. ')
' → logprob: -9.877857208251953
    9. ' reverse' → logprob: -9.877857208251953
    10. 'reverse' → logprob: -10.127857208251953

Token 365: ' compar' (ID: 8342)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.6206012964248657
    2. 'com' → logprob: -1.7456012964248657
    3. 'long' → logprob: -2.245601177215576
    4. 'nombre' → logprob: -2.495601177215576
    5. 'compar' → logprob: -2.745601177215576
    6. 'length' → logprob: -2.870601177215576
    7. 'key' → logprob: -3.245601177215576
    8. 'lex' → logprob: -3.370601177215576
    9. 'consider' → logprob: -3.495601177215576
    10. 'lambda' → logprob: -3.495601177215576

Token 366: 'ant' (ID: 493)
  Prédit: 'aison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aison' → logprob: -0.7395113706588745
    2. 'ison' → logprob: -1.3645113706588745
    3. 'isons' → logprob: -1.9895113706588745
    4. 'ant' → logprob: -3.239511489868164
    5. 'a' → logprob: -3.614511489868164
    6. 'e' → logprob: -4.114511489868164
    7. 'dp' → logprob: -4.364511489868164
    8. 'ing' → logprob: -4.989511489868164
    9. 'ons' → logprob: -5.364511489868164
    10. 'is' → logprob: -5.489511489868164

Token 367: ' string' (ID: 1621)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.31220078468322754
    2. 'len' → logprob: -1.5622007846832275
    3. 'key' → logprob: -3.0622007846832275
    4. ' lambda' → logprob: -5.062200546264648
    5. 'c' → logprob: -6.312200546264648
    6. ' key' → logprob: -7.187200546264648
    7. '   ' → logprob: -7.687200546264648
    8. ' candidates' → logprob: -7.812200546264648
    9. 'int' → logprob: -7.937200546264648
    10. 'as' → logprob: -8.312200546264648

Token 368: ' comme' (ID: 7971)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26831406354904175
    2. ')' → logprob: -2.1433141231536865
    3. ',' → logprob: -2.3933141231536865
    4. 'length' → logprob: -5.143313884735107
    5. 'key' → logprob: -5.518313884735107
    6. ' s' → logprob: -5.518313884735107
    7. 'len' → logprob: -5.643313884735107
    8. ',key' → logprob: -6.518313884735107
    9. '),' → logprob: -6.643313884735107
    10. ' ,' → logprob: -7.268313884735107

Token 369: ' int' (ID: 677)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.302849143743515
    2. 'str' → logprob: -2.177849054336548
    3. 'numbers' → logprob: -2.177849054336548
    4. 'int' → logprob: -4.177849292755127
    5. ' strings' → logprob: -5.677849292755127
    6. 'num' → logprob: -5.927849292755127
    7. 'inte' → logprob: -6.052849292755127
    8. ' numbers' → logprob: -6.177849292755127
    9. ' integers' → logprob: -6.802849292755127
    10. 'if' → logprob: -7.302849292755127

Token 370: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19449661672115326
    2. 's' → logprob: -1.8194966316223145
    3. 'eger' → logprob: -5.5694966316223145
    4. ' )' → logprob: -6.0694966316223145
    5. ' or' → logprob: -6.6944966316223145
    6. 'gers' → logprob: -6.8194966316223145
    7. ',' → logprob: -7.4444966316223145
    8. 'e' → logprob: -7.8194966316223145
    9. '()' → logprob: -8.069496154785156
    10. 'acters' → logprob: -8.069496154785156

Token 371: '           ' (ID: 352)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23002178966999054
    2. ' max' → logprob: -1.6050218343734741
    3. 'current' → logprob: -6.355021953582764
    4. ' current' → logprob: -6.980021953582764
    5. '   ' → logprob: -7.355021953582764
    6. '           ' → logprob: -7.855021953582764
    7. ' candidates' → logprob: -8.605021476745605
    8. 'best' → logprob: -8.855021476745605
    9. '
' → logprob: -9.605021476745605
    10. 'dp' → logprob: -10.105021476745605

Token 372: ' best' (ID: 1636)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16815608739852905
    2. ' max' → logprob: -1.9181561470031738
    3. 'current' → logprob: -5.418156147003174
    4. ' current' → logprob: -5.918156147003174
    5. '   ' → logprob: -7.418156147003174
    6. 'str' → logprob: -9.793155670166016
    7. ' ' → logprob: -10.918155670166016
    8. 'largest' → logprob: -10.918155670166016
    9. 'best' (adapté à ' best') → logprob: -11.543155670166016
    10. ' str' → logprob: -11.668155670166016

Token 373: '_next' (ID: 25436)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.6714730262756348
    2. ' =' → logprob: -1.5464730262756348
    3. '_str' → logprob: -2.0464730262756348
    4. '_candidate' → logprob: -2.2964730262756348
    5. '_number' → logprob: -3.7964730262756348
    6. '_' → logprob: -4.671473026275635
    7. '=' → logprob: -5.171473026275635
    8. '_value' → logprob: -5.546473026275635
    9. '_val' → logprob: -5.921473026275635
    10. '_s' → logprob: -7.421473026275635

Token 374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055547624826431274
    2. '=' → logprob: -3.5555477142333984
    3. '_num' → logprob: -4.305547714233398
    4. '_number' → logprob: -4.805547714233398
    5. '_str' → logprob: -5.930547714233398
    6. '_value' → logprob: -7.930547714233398
    7. '_val' → logprob: -8.055547714233398
    8. '_' → logprob: -8.430547714233398
    9. '_string' → logprob: -9.305547714233398
    10. '_token' → logprob: -9.805547714233398

Token 375: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.8961017202818766e-05
    2. ' max' → logprob: -9.875059127807617
    3. 'None' → logprob: -12.250059127807617
    4. '''' → logprob: -13.500059127807617
    5. ''' → logprob: -14.875059127807617
    6. '""' → logprob: -15.375059127807617
    7. '   ' → logprob: -15.625059127807617
    8. '(max' → logprob: -15.875059127807617
    9. '"' → logprob: -16.125059127807617
    10. ' ' → logprob: -16.375059127807617

Token 376: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -8.256334695033729e-05
    2. 'c' → logprob: -9.500082969665527
    3. '(' → logprob: -12.750082969665527
    4. '(int' → logprob: -13.250082969665527
    5. '(
' → logprob: -13.750082969665527
    6. '(map' → logprob: -14.875082969665527
    7. '([' → logprob: -14.875082969665527
    8. 'int' → logprob: -15.500082969665527
    9. '(candidate' → logprob: -15.500082969665527
    10. 'map' → logprob: -15.625082969665527

Token 377: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.002855755155906081
    2. 'c' → logprob: -6.1278557777404785
    3. 'and' → logprob: -7.8778557777404785
    4. 'andid' → logprob: -8.62785530090332
    5. '[c' → logprob: -10.00285530090332
    6. '_candidates' → logprob: -10.37785530090332
    7. '(c' → logprob: -11.00285530090332
    8. 'cand' → logprob: -11.50285530090332
    9. ' candidates' → logprob: -13.37785530090332
    10. 'andi' → logprob: -13.62785530090332

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2475420981645584
    2. ',key' → logprob: -1.747542142868042
    3. ')' → logprob: -3.122542142868042
    4. 'key' → logprob: -6.997541904449463
    5. ' ,' → logprob: -9.372542381286621
    6. ' key' → logprob: -10.622542381286621
    7. '(key' → logprob: -12.247542381286621
    8. '   ' → logprob: -13.497542381286621
    9. ' )' → logprob: -13.622542381286621
    10. '[key' → logprob: -13.872542381286621

Token 379: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.07889056205749512
    2. ' key' → logprob: -2.578890562057495
    3. ')' → logprob: -15.328890800476074
    4. '(key' → logprob: -15.328890800476074
    5. ',key' → logprob: -15.453890800476074
    6. '	key' → logprob: -17.203889846801758
    7. 'reverse' → logprob: -17.328889846801758
    8. '   ' → logprob: -17.453889846801758
    9. 'default' → logprob: -18.078889846801758
    10. '[key' → logprob: -18.328889846801758

Token 380: '=lambda' (ID: 64865)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.35378503799438477
    2. 'lambda' → logprob: -1.3537850379943848
    3. '=lambda' → logprob: -3.3537850379943848
    4. '=int' → logprob: -5.353785037994385
    5. '(lambda' → logprob: -11.228784561157227
    6. '   ' → logprob: -11.478784561157227
    7. ' lambda' → logprob: -12.478784561157227
    8. 'len' → logprob: -13.853784561157227
    9. 'lam' → logprob: -14.353784561157227
    10. 'λ' → logprob: -14.603784561157227

Token 381: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08041982352733612
    2. ' x' → logprob: -2.5804197788238525
    3. 's' → logprob: -6.580420017242432
    4. ' s' → logprob: -9.205419540405273
    5. 'num' → logprob: -11.080419540405273
    6. 'int' → logprob: -11.455419540405273
    7. 'v' → logprob: -12.330419540405273
    8. 'lambda' → logprob: -13.455419540405273
    9. 'n' → logprob: -13.705419540405273
    10. 'token' → logprob: -13.705419540405273

Token 382: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00260467198677361
    2. ':int' → logprob: -6.0026044845581055
    3. ' :' → logprob: -9.127604484558105
    4. 'int' → logprob: -10.877604484558105
    5. ':
' → logprob: -14.252604484558105
    6. '   ' → logprob: -15.752604484558105
    7. '[int' → logprob: -15.752604484558105
    8. '=int' → logprob: -15.877604484558105
    9. ',int' → logprob: -16.502605438232422
    10. ':x' → logprob: -16.752605438232422

Token 383: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023469313979148865
    2. 'lambda' → logprob: -3.7734692096710205
    3. ' int' → logprob: -8.898468971252441
    4. '(int' → logprob: -10.023468971252441
    5. '(lambda' → logprob: -10.773468971252441
    6. ' lambda' → logprob: -11.273468971252441
    7. '[int' → logprob: -12.523468971252441
    8. 'len' → logprob: -13.023468971252441
    9. '   ' → logprob: -13.773468971252441
    10. 'x' → logprob: -14.148468971252441

Token 384: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014189359731972218
    2. 'x' → logprob: -4.26418924331665
    3. '(' → logprob: -11.014189720153809
    4. ' x' → logprob: -12.014189720153809
    5. '(
' → logprob: -13.389189720153809
    6. ')x' → logprob: -14.264189720153809
    7. ')' → logprob: -14.514189720153809
    8. ' (' → logprob: -15.764189720153809
    9. '
' → logprob: -16.014188766479492
    10. '{x' → logprob: -16.264188766479492

Token 385: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00015717383939772844
    2. ')' → logprob: -9.375157356262207
    3. ' ))' → logprob: -9.875157356262207
    4. ')))' → logprob: -11.125157356262207
    5. '))
' → logprob: -13.375157356262207
    6. '[' → logprob: -13.750157356262207
    7. '()))' → logprob: -14.500157356262207
    8. '+' → logprob: -14.625157356262207
    9. '))+' → logprob: -14.625157356262207
    10. ' ' → logprob: -15.375157356262207

Token 386: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01130068488419056
    2. ')
' → logprob: -5.136300563812256
    3. 'dp' → logprob: -5.386300563812256
    4. ' )' → logprob: -8.011301040649414
    5. ' dp' → logprob: -8.761301040649414
    6. '(dp' → logprob: -9.511301040649414
    7. ' )
' → logprob: -10.261301040649414
    8. 'current' → logprob: -10.386301040649414
    9. '')' → logprob: -10.386301040649414
    10. '           ' → logprob: -10.636301040649414

Token 387: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.14186012744903564
    2. ' dp' → logprob: -2.266860008239746
    3. ')' → logprob: -4.516860008239746
    4. 'current' → logprob: -4.766860008239746
    5. ' current' → logprob: -5.516860008239746
    6. ')
' → logprob: -6.141860008239746
    7. '")' → logprob: -7.266860008239746
    8. '           ' → logprob: -7.891860008239746
    9. 'return' → logprob: -7.891860008239746
    10. ' 
' → logprob: -8.141860008239746

Token 388: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. 'r' → logprob: -16.125
    4. '[s' → logprob: -17.5
    5. '[c' → logprob: -18.375
    6. ' [' → logprob: -18.5
    7. '][' → logprob: -19.0
    8. ')[' → logprob: -19.125
    9. '[u' → logprob: -19.125
    10. '```' → logprob: -19.125

Token 389: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005747167742811143
    2. '[r' → logprob: -7.625574588775635
    3. '[' → logprob: -10.375575065612793
    4. '[c' → logprob: -10.750575065612793
    5. ']' → logprob: -11.750575065612793
    6. '"][' → logprob: -11.875575065612793
    7. ' ][' → logprob: -12.250575065612793
    8. ']][' → logprob: -12.875575065612793
    9. ''][' → logprob: -13.000575065612793
    10. 'c' → logprob: -13.250575065612793

Token 390: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0921942703134846e-05
    2. ' c' → logprob: -11.62501049041748
    3. '[c' → logprob: -13.62501049041748
    4. ')c' → logprob: -15.62501049041748
    5. '[' → logprob: -16.125011444091797
    6. '	c' → logprob: -16.750011444091797
    7. '   ' → logprob: -17.250011444091797
    8. 'r' → logprob: -17.500011444091797
    9. ',c' → logprob: -17.625011444091797
    10. '(c' → logprob: -17.812511444091797

Token 391: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17777831852436066
    2. '=' → logprob: -1.9277783632278442
    3. ']=' → logprob: -4.052778244018555
    4. ' =' → logprob: -10.927778244018555
    5. ')' → logprob: -12.177778244018555
    6. ' ]' → logprob: -13.052778244018555
    7. ')=' → logprob: -13.927778244018555
    8. ']+=' → logprob: -16.177778244018555
    9. ']=(' → logprob: -16.302778244018555
    10. '}' → logprob: -16.427778244018555

Token 392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715370807796717
    2. ' =' → logprob: -5.006715297698975
    3. '＝' → logprob: -18.506715774536133
    4. '='' → logprob: -20.006715774536133
    5. '=
' → logprob: -20.006715774536133
    6. '=int' → logprob: -20.131715774536133
    7. '.=' → logprob: -20.131715774536133
    8. '=f' → logprob: -20.256715774536133
    9. '=

' → logprob: -20.756715774536133
    10. '=s' → logprob: -21.131715774536133

Token 393: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0004360334132798016
    2. ' current' → logprob: -7.750435829162598
    3. 'str' → logprob: -12.500435829162598
    4. 'cur' → logprob: -14.250435829162598
    5. 'curr' → logprob: -14.500435829162598
    6. '   ' → logprob: -16.125436782836914
    7. ' ' → logprob: -16.500436782836914
    8. '(current' → logprob: -17.125436782836914
    9. 'int' → logprob: -17.250436782836914
    10. 'c' → logprob: -17.750436782836914

Token 394: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. 'char' → logprob: -18.625
    4. '_CHAR' → logprob: -19.0
    5. 'Char' → logprob: -20.625
    6. '_chat' → logprob: -20.75
    7. '_c' → logprob: -21.125
    8. '_chars' → logprob: -21.125
    9. '_token' → logprob: -21.25
    10. '_cat' → logprob: -21.5

Token 395: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0380457378923893
    2. ' +' → logprob: -3.288045644760132
    3. '+c' → logprob: -13.538045883178711
    4. '+p' → logprob: -14.038045883178711
    5. '+d' → logprob: -14.163045883178711
    6. '+x' → logprob: -14.163045883178711
    7. '+
' → logprob: -15.538045883178711
    8. '+r' → logprob: -15.538045883178711
    9. '＋' → logprob: -16.78804588317871
    10. '+xml' → logprob: -16.78804588317871

Token 396: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -7.493430894101039e-05
    2. ' best' → logprob: -9.500075340270996
    3. '(best' → logprob: -19.50007438659668
    4. '	best' → logprob: -21.00007438659668
    5. 'b' → logprob: -22.50007438659668
    6. '.best' → logprob: -23.25007438659668
    7. '_best' → logprob: -23.87507438659668
    8. 'Best' → logprob: -24.00007438659668
    9. '```' → logprob: -24.00007438659668
    10. 'beste' → logprob: -24.50007438659668

Token 397: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -7.541112427134067e-05
    2. 'next' → logprob: -9.500075340270996
    3. '[next' → logprob: -14.500075340270996
    4. ' next' → logprob: -17.500076293945312
    5. '(next' → logprob: -18.000076293945312
    6. '_NEXT' → logprob: -18.625076293945312
    7. '_' → logprob: -18.875076293945312
    8. 'Next' → logprob: -19.125076293945312
    9. '.next' → logprob: -19.500076293945312
    10. '-next' → logprob: -20.000076293945312

Token 398: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03380199149250984
    2. 'return' → logprob: -3.533802032470703
    3. ' return' → logprob: -6.283802032470703
    4. '       ' → logprob: -6.658802032470703
    5. '   ' → logprob: -7.283802032470703
    6. '
' → logprob: -9.408802032470703
    7. '<|end|>' → logprob: -9.783802032470703
    8. '	return' → logprob: -10.283802032470703
    9. '		' → logprob: -11.033802032470703
    10. '               ' → logprob: -12.283802032470703

Token 399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06489206105470657
    2. 'return' → logprob: -3.439892053604126
    3. '       ' → logprob: -3.939892053604126
    4. ' return' → logprob: -5.689892292022705
    5. '   ' → logprob: -5.939892292022705
    6. '	return' → logprob: -6.189892292022705
    7. '
' → logprob: -6.564892292022705
    8. '		' → logprob: -6.814892292022705
    9. '<|end|>' → logprob: -8.064891815185547
    10. '	' → logprob: -9.189891815185547

Token 400: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13610629737377167
    2. 'return' (adapté à ' return') → logprob: -2.136106252670288
    3. ' return' → logprob: -4.761106491088867
    4. '       ' → logprob: -8.136106491088867
    5. '   ' → logprob: -8.261106491088867
    6. '	return' → logprob: -11.261106491088867
    7. '		' → logprob: -11.761106491088867
    8. '               ' → logprob: -13.136106491088867
    9. '          ' → logprob: -13.636106491088867
    10. '
' → logprob: -14.136106491088867

Token 401: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001170225441455841
    2. ' dp' → logprob: -6.7511701583862305
    3. '	dp' → logprob: -17.376171112060547
    4. 'd' → logprob: -19.001171112060547
    5. '(dp' → logprob: -19.001171112060547
    6. '_dp' → logprob: -19.126171112060547
    7. '   ' → logprob: -20.376171112060547
    8. '.dp' → logprob: -20.626171112060547
    9. ' ' → logprob: -20.751171112060547
    10. 'dpi' → logprob: -21.001171112060547

Token 402: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.000725656165741384
    2. '(r' → logprob: -7.250725746154785
    3. 'r' → logprob: -11.125725746154785
    4. '[c' → logprob: -14.625725746154785
    5. '[' → logprob: -15.875725746154785
    6. ',r' → logprob: -16.25072479248047
    7. '_r' → logprob: -16.25072479248047
    8. '	r' → logprob: -16.62572479248047
    9. ' r' → logprob: -16.75072479248047
    10. 'dp' → logprob: -18.00072479248047

Token 403: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006480526644736528
    2. '[c' → logprob: -5.381480693817139
    3. ',' → logprob: -6.756480693817139
    4. '[r' → logprob: -8.38148021697998
    5. ',c' → logprob: -8.38148021697998
    6. 'c' → logprob: -8.63148021697998
    7. '[' → logprob: -10.63148021697998
    8. ')[' → logprob: -11.50648021697998
    9. ']' → logprob: -11.88148021697998
    10. ' ][' → logprob: -12.38148021697998

Token 404: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.9361264946837764e-07
    2. ')c' → logprob: -16.75
    3. ' c' → logprob: -17.125
    4. 'с' → logprob: -17.875
    5. '[c' → logprob: -18.0
    6. 'r' → logprob: -19.0
    7. '	c' → logprob: -19.25
    8. '```' → logprob: -20.75
    9. ')' → logprob: -20.875
    10. '[' → logprob: -21.125

Token 405: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024227796122431755
    2. '<|end|>' → logprob: -3.7742278575897217
    3. '}' → logprob: -7.274227619171143
    4. ']' → logprob: -9.1492280960083
    5. '<|end|>' → logprob: -9.7742280960083
    6. '       ' → logprob: -9.7742280960083
    7. ')return' → logprob: -10.2742280960083
    8. '   ' → logprob: -11.6492280960083
    9. '```' → logprob: -12.1492280960083
    10. ')
' → logprob: -12.6492280960083

Token 406: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10860582441091537
    2. '    
' → logprob: -3.3586058616638184
    3. 'max' → logprob: -3.3586058616638184
    4. '
' → logprob: -3.9836058616638184
    5. 'result' → logprob: -4.858605861663818
    6. 'results' → logprob: -5.483605861663818
    7. 'for' → logprob: -7.733605861663818
    8. '```' → logprob: -7.733605861663818
    9. '        
' → logprob: -7.858605861663818
    10. '       ' → logprob: -7.983605861663818

Token 407: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.03418339043855667
    2. 'result' → logprob: -3.7841835021972656
    3. 'results' → logprob: -5.034183502197266
    4. 'best' → logprob: -6.159183502197266
    5. 'answer' → logprob: -7.409183502197266
    6. 'res' → logprob: -7.909183502197266
    7. 'largest' → logprob: -7.909183502197266
    8. '   ' → logprob: -8.534183502197266
    9. 'ans' → logprob: -8.909183502197266
    10. 'answers' → logprob: -9.159183502197266

Token 408: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.27063900232315063
    2. '_num' → logprob: -1.5206389427185059
    3. '_value' → logprob: -4.020638942718506
    4. '_val' → logprob: -7.645638942718506
    5. 'num' → logprob: -9.895639419555664
    6. '_length' → logprob: -10.895639419555664
    7. 'number' → logprob: -11.395639419555664
    8. '_' → logprob: -11.770639419555664
    9. '_sum' → logprob: -12.145639419555664
    10. '_len' → logprob: -12.270639419555664

Token 409: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759462714195251
    2. ' =' → logprob: -0.8259462714195251
    3. '_' → logprob: -13.325945854187012
    4. ',' → logprob: -13.575945854187012
    5. 's' → logprob: -13.825945854187012
    6. ' ' → logprob: -14.575945854187012
    7. '_value' → logprob: -14.700945854187012
    8. '=""' → logprob: -15.200945854187012
    9. 'found' → logprob: -15.450945854187012
    10. '=None' → logprob: -15.575945854187012

Token 410: ' None' (ID: 4662)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.5183910131454468
    2. '''' → logprob: -1.2683910131454468
    3. '"' → logprob: -2.1433911323547363
    4. ''' → logprob: -5.143391132354736
    5. ' ""' → logprob: -9.393390655517578
    6. ' ''' → logprob: -10.643390655517578
    7. '''
' → logprob: -11.393390655517578
    8. '   ' → logprob: -12.018390655517578
    9. '"":' → logprob: -12.518390655517578
    10. '0' → logprob: -12.643390655517578

Token 411: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2820785343647003
    2. '
' → logprob: -1.407078504562378
    3. '        
' → logprob: -8.407078742980957
    4. ' for' → logprob: -8.657078742980957
    5. 'for' → logprob: -8.782078742980957
    6. '<|end|>' → logprob: -8.907078742980957
    7. '
' → logprob: -9.407078742980957
    8. '   ' → logprob: -10.282078742980957
    9. '  
' → logprob: -10.282078742980957
    10. '           ' → logprob: -10.282078742980957

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04695994779467583
    2. '
' → logprob: -3.17195987701416
    3. 'for' → logprob: -6.79695987701416
    4. '        
' → logprob: -6.79695987701416
    5. '<|end|>' → logprob: -7.54695987701416
    6. ' for' → logprob: -7.67195987701416
    7. '           ' → logprob: -8.04695987701416
    8. '  
' → logprob: -9.54695987701416
    9. '    
' → logprob: -9.54695987701416
    10. '   ' → logprob: -9.67195987701416

Token 413: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13629531860351562
    2. ' for' → logprob: -2.6362953186035156
    3. '       ' → logprob: -2.8862953186035156
    4. '   ' → logprob: -12.511295318603516
    5. '	for' → logprob: -13.511295318603516
    6. '
' → logprob: -14.136295318603516
    7. ' ' → logprob: -15.011295318603516
    8. '           ' → logprob: -15.886295318603516
    9. '     ' → logprob: -16.761295318603516
    10. '#' (adapté à ' #') → logprob: -16.886295318603516

Token 414: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000635235570371151
    2. ' for' → logprob: -7.750635147094727
    3. '       ' → logprob: -8.500635147094727
    4. '
' → logprob: -14.625635147094727
    5. '   ' → logprob: -14.750635147094727
    6. '           ' → logprob: -16.125635147094727
    7. '	for' → logprob: -16.750635147094727
    8. ' ' → logprob: -17.125635147094727
    9. '```' → logprob: -17.500635147094727
    10. '#' → logprob: -17.875635147094727

Token 415: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5464529395103455
    2. ' for' → logprob: -0.9214529395103455
    3. '       ' → logprob: -3.7964529991149902
    4. '   ' → logprob: -7.92145299911499
    5. '        ' → logprob: -10.421452522277832
    6. '    ' → logprob: -10.421452522277832
    7. '           ' → logprob: -10.671452522277832
    8. 'pour' → logprob: -10.796452522277832
    9. ' ' → logprob: -11.046452522277832
    10. '  ' → logprob: -11.171452522277832

Token 416: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.09241404384374619
    2. 'our' → logprob: -2.967414140701294
    3. 'ourt' → logprob: -3.592414140701294
    4. '_' → logprob: -5.467413902282715
    5. 'oure' → logprob: -6.467413902282715
    6. '
' → logprob: -7.217413902282715
    7. '       ' → logprob: -7.342413902282715
    8. '   ' → logprob: -7.592413902282715
    9. '```' → logprob: -7.717413902282715
    10. '

' → logprob: -9.092413902282715

Token 417: ' toute' (ID: 16825)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4482264816761017
    2. ' range' → logprob: -1.0732264518737793
    3. ' for' → logprob: -4.698226451873779
    4. 'for' → logprob: -4.823226451873779
    5. '       ' → logprob: -6.573226451873779
    6. '   ' → logprob: -8.073226928710938
    7. 'r' → logprob: -8.073226928710938
    8. ' la' → logprob: -10.198226928710938
    9. '(range' → logprob: -10.448226928710938
    10. ' r' → logprob: -10.698226928710938

Token 418: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7289995551109314
    2. 'la' → logprob: -1.7289996147155762
    3. 'range' → logprob: -2.603999614715576
    4. ' la' → logprob: -2.728999614715576
    5. '(H' → logprob: -2.728999614715576
    6. 'l' → logprob: -2.853999614715576
    7. 'H' → logprob: -4.103999614715576
    8. ' range' → logprob: -4.103999614715576
    9. ' le' → logprob: -4.228999614715576
    10. '   ' → logprob: -4.353999614715576

Token 419: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.7505459189414978
    2. 'matrix' → logprob: -0.8755459189414978
    3. 'range' → logprob: -2.3755459785461426
    4. 'pl' → logprob: -4.625545978546143
    5. 'gr' → logprob: -5.000545978546143
    6. 'for' → logprob: -7.625545978546143
    7. 'grid' → logprob: -8.500545501708984
    8. 'surface' → logprob: -8.625545501708984
    9. 'ligne' → logprob: -8.750545501708984
    10. 'rang' → logprob: -8.875545501708984

Token 420: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.00017994173686020076
    2. 'rice' → logprob: -8.7501802444458
    3. 'ix' → logprob: -11.0001802444458
    4. 'ce' → logprob: -13.5001802444458
    5. 'ices' → logprob: -14.3751802444458
    6. 'che' → logprob: -14.5001802444458
    7. 'ixe' → logprob: -15.1251802444458
    8. 'isse' → logprob: -15.2501802444458
    9. 'ICE' → logprob: -15.6251802444458
    10. 'i' → logprob: -15.6251802444458

Token 421: ' et' (ID: 859)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2696867287158966
    2. '       ' → logprob: -1.6446866989135742
    3. 'for' → logprob: -3.144686698913574
    4. '   ' → logprob: -8.644686698913574
    5. 'range' → logprob: -11.769686698913574
    6. '	for' → logprob: -12.019686698913574
    7. '           ' → logprob: -12.144686698913574
    8. 'r' → logprob: -12.269686698913574
    9. ' range' → logprob: -12.394686698913574
    10. ' (' → logprob: -12.519686698913574

Token 422: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04772362858057022
    2. ' for' → logprob: -3.2977235317230225
    3. '       ' → logprob: -5.047723770141602
    4. 'range' → logprob: -6.422723770141602
    5. '
' → logprob: -7.797723770141602
    6. 'pour' → logprob: -8.047723770141602
    7. '   ' → logprob: -9.172723770141602
    8. 'find' → logprob: -9.297723770141602
    9. '        
' → logprob: -9.797723770141602
    10. ' pour' → logprob: -9.797723770141602

Token 423: ' lance' (ID: 66715)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3232164680957794
    2. ' for' → logprob: -1.323216438293457
    3. '       ' → logprob: -4.698216438293457
    4. '   ' → logprob: -8.948216438293457
    5. 'find' → logprob: -9.198216438293457
    6. '           ' → logprob: -10.073216438293457
    7. '<|end|>' → logprob: -10.198216438293457
    8. 'startswith' → logprob: -10.448216438293457
    9. '	for' → logprob: -10.573216438293457
    10. '        ' → logprob: -10.823216438293457

Token 424: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.162645623087883
    2. ' dfs' → logprob: -2.2876455783843994
    3. 'for' → logprob: -4.4126458168029785
    4. '       ' → logprob: -4.5376458168029785
    5. '           ' → logprob: -5.5376458168029785
    6. '   ' → logprob: -5.5376458168029785
    7. ' for' → logprob: -5.6626458168029785
    8. 'la' → logprob: -5.9126458168029785
    9. ' la' → logprob: -6.0376458168029785
    10. 'le' → logprob: -6.2876458168029785

Token 425: ' sur' (ID: 1512)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8828548789024353
    2. '       ' → logprob: -1.13285493850708
    3. ' for' → logprob: -2.00785493850708
    4. '(r' → logprob: -2.63285493850708
    5. '(' → logprob: -4.00785493850708
    6. 'for' → logprob: -4.25785493850708
    7. ',' → logprob: -5.50785493850708
    8. '   ' → logprob: -5.63285493850708
    9. ' pour' → logprob: -5.63285493850708
    10. ' (' → logprob: -6.00785493850708

Token 426: ' toutes' (ID: 17502)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23384322226047516
    2. 'cells' → logprob: -2.3588433265686035
    3. 'range' → logprob: -3.2338433265686035
    4. '(r' → logprob: -3.4838433265686035
    5. 'positions' → logprob: -4.6088433265686035
    6. 'all' → logprob: -5.1088433265686035
    7. 'les' → logprob: -5.4838433265686035
    8. '   ' → logprob: -5.6088433265686035
    9. 'i' → logprob: -5.7338433265686035
    10. ' cells' → logprob: -5.7338433265686035

Token 427: ' les' (ID: 1341)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.24643418192863464
    2. 'r' → logprob: -2.371434211730957
    3. 'range' → logprob: -2.996434211730957
    4. '   ' → logprob: -4.121434211730957
    5. '(range' → logprob: -4.246434211730957
    6. '(' → logprob: -4.371434211730957
    7. ' range' → logprob: -4.621434211730957
    8. ' (' → logprob: -4.996434211730957
    9. '(i' → logprob: -5.246434211730957
    10. ' r' → logprob: -6.371434211730957

Token 428: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.2828633785247803
    2. 'r' → logprob: -2.1578633785247803
    3. 'range' → logprob: -2.5328633785247803
    4. 'cells' → logprob: -3.4078633785247803
    5. '(r' → logprob: -5.032863616943359
    6. '(range' → logprob: -5.907863616943359
    7. '   ' → logprob: -6.157863616943359
    8. '(' → logprob: -6.782863616943359
    9. 'ranges' → logprob: -7.032863616943359
    10. ' positions' → logprob: -7.032863616943359

Token 429: ' qui' (ID: 2780)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06855734437704086
    2. '           ' → logprob: -2.8185572624206543
    3. ' for' → logprob: -5.568557262420654
    4. 'for' → logprob: -7.193557262420654
    5. ',' → logprob: -7.318557262420654
    6. ' that' → logprob: -7.943557262420654
    7. ' where' → logprob: -8.943557739257812
    8. ' ' → logprob: -9.443557739257812
    9. ' (' → logprob: -9.693557739257812
    10. '        ' → logprob: -9.818557739257812

Token 430: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5494234561920166
    2. 'ont' → logprob: -1.9244234561920166
    3. 'are' → logprob: -2.0494234561920166
    4. ' are' → logprob: -2.1744234561920166
    5. 'contain' → logprob: -4.6744232177734375
    6. 'cont' → logprob: -5.0494232177734375
    7. ' sont' → logprob: -5.2994232177734375
    8. '<|end|>' → logprob: -5.9244232177734375
    9. '.' → logprob: -6.5494232177734375
    10. 'have' → logprob: -6.7994232177734375

Token 431: ' des' (ID: 731)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.12803879380226135
    2. 'des' → logprob: -2.2530388832092285
    3. 'is' → logprob: -5.2530388832092285
    4. 'ch' → logprob: -5.7530388832092285
    5. 'isdigit' → logprob: -6.2530388832092285
    6. ' digits' → logprob: -6.3780388832092285
    7. ' des' → logprob: -6.6280388832092285
    8. '0' → logprob: -7.5030388832092285
    9. 'digit' → logprob: -7.5030388832092285
    10. ' ' → logprob: -8.37803840637207

Token 432: ' chiffres' (ID: 105565)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.09552016109228134
    2. 'ch' → logprob: -2.720520257949829
    3. '0' → logprob: -4.59552001953125
    4. 'digit' → logprob: -4.84552001953125
    5. ' digits' → logprob: -5.47052001953125
    6. ' chiffres' → logprob: -6.84552001953125
    7. 'isdigit' → logprob: -7.34552001953125
    8. 'd' → logprob: -7.47052001953125
    9. 'car' → logprob: -8.84552001953125
    10. 'c' → logprob: -9.09552001953125

Token 433: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0696198120713234
    2. ' for' → logprob: -3.81961989402771
    3. 'for' → logprob: -4.069619655609131
    4. '        
' → logprob: -4.694619655609131
    5. '
' → logprob: -5.194619655609131
    6. '   ' → logprob: -5.444619655609131
    7. '           ' → logprob: -5.694619655609131
    8. '  
' → logprob: -6.194619655609131
    9. '    
' → logprob: -6.569619655609131
    10. '<|end|>' → logprob: -8.319620132446289

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02845296449959278
    2. 'for' → logprob: -4.1534528732299805
    3. ' for' → logprob: -4.4034528732299805
    4. '   ' → logprob: -9.90345287322998
    5. '           ' → logprob: -10.77845287322998
    6. '        
' → logprob: -11.02845287322998
    7. '<|end|>' → logprob: -12.02845287322998
    8. '
' → logprob: -12.52845287322998
    9. '	for' → logprob: -12.77845287322998
    10. '```' → logprob: -13.27845287322998

Token 435: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8696205019950867
    2. 'for' (adapté à ' for') → logprob: -1.1196205615997314
    3. ' for' → logprob: -1.3696205615997314
    4. '   ' → logprob: -8.244620323181152
    5. '
' → logprob: -12.119620323181152
    6. '        
' → logprob: -12.119620323181152
    7. '	for' → logprob: -12.994620323181152
    8. ' ' → logprob: -13.369620323181152
    9. '           ' → logprob: -13.619620323181152
    10. '    
' → logprob: -13.994620323181152

Token 436: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01417115144431591
    2. ' r' → logprob: -4.264171123504639
    3. 'i' → logprob: -12.014171600341797
    4. '   ' → logprob: -14.139171600341797
    5. ' i' → logprob: -15.014171600341797
    6. '	r' → logprob: -15.014171600341797
    7. 'row' → logprob: -16.139171600341797
    8. ' ' → logprob: -17.139171600341797
    9. 'h' → logprob: -17.764171600341797
    10. '  ' → logprob: -18.639171600341797

Token 437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023280886933207512
    2. 'in' → logprob: -3.7732808589935303
    3. ' ' → logprob: -10.77328109741211
    4. '	in' → logprob: -12.02328109741211
    5. ',' → logprob: -12.39828109741211
    6. '   ' → logprob: -13.64828109741211
    7. ' i' → logprob: -13.64828109741211
    8. '  ' → logprob: -14.77328109741211
    9. ' ' → logprob: -14.89828109741211
    10. '0' → logprob: -15.77328109741211

Token 438: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -16.256715774536133
    4. ' ' → logprob: -17.131715774536133
    5. '	range' → logprob: -17.131715774536133
    6. '   ' → logprob: -17.881715774536133
    7. 'r' → logprob: -17.881715774536133
    8. 'rang' → logprob: -18.256715774536133
    9. '
' → logprob: -18.631715774536133
    10. '0' → logprob: -18.631715774536133

Token 439: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.4140441635390744e-05
    2. 'H' → logprob: -11.500014305114746
    3. '(' → logprob: -12.500014305114746
    4. '   ' → logprob: -17.12501335144043
    5. '(
' → logprob: -17.37501335144043
    6. ' (' → logprob: -17.62501335144043
    7. '(len' → logprob: -17.75001335144043
    8. ')' → logprob: -18.62501335144043
    9. '       ' → logprob: -18.75001335144043
    10. '((' → logprob: -19.12501335144043

Token 440: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16031064093112946
    2. '):' → logprob: -1.9103106260299683
    3. '   ' → logprob: -9.785310745239258
    4. '):
' → logprob: -11.660310745239258
    5. ':' → logprob: -12.035310745239258
    6. '       ' → logprob: -12.160310745239258
    7. ')' → logprob: -12.785310745239258
    8. ':
' → logprob: -12.910310745239258
    9. '):

' → logprob: -13.660310745239258
    10. ' ):
' → logprob: -13.910310745239258

Token 441: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7378250956535339
    2. ' for' → logprob: -0.9878250956535339
    3. '   ' → logprob: -1.9878251552581787
    4. 'for' → logprob: -5.1128249168396
    5. ' in' → logprob: -5.9878249168396
    6. '           ' → logprob: -5.9878249168396
    7. ' range' → logprob: -7.3628249168396
    8. ' ' → logprob: -8.862825393676758
    9. '```' → logprob: -8.987825393676758
    10. '0' → logprob: -9.737825393676758

Token 442: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023426925763487816
    2. ' for' → logprob: -3.7734270095825195
    3. '   ' → logprob: -8.64842700958252
    4. '	for' → logprob: -12.52342700958252
    5. '       ' → logprob: -13.02342700958252
    6. 'range' → logprob: -15.64842700958252
    7. ' ' → logprob: -17.398426055908203
    8. '```' → logprob: -17.648426055908203
    9. '<|end|>' → logprob: -17.773426055908203
    10. '           ' → logprob: -18.148426055908203

Token 443: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008626393973827362
    2. ' j' → logprob: -4.758626461029053
    3. 'c' → logprob: -11.633625984191895
    4. '0' → logprob: -13.133625984191895
    5. '   ' → logprob: -14.633625984191895
    6. 'range' → logprob: -15.633625984191895
    7. ' c' → logprob: -15.633625984191895
    8. ' ' → logprob: -16.13362693786621
    9. ' range' → logprob: -17.13362693786621
    10. '	j' → logprob: -18.25862693786621

Token 444: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009824917651712894
    2. 'in' → logprob: -4.634824752807617
    3. ' ' → logprob: -9.759824752807617
    4. ')' → logprob: -12.884824752807617
    5. '   ' → logprob: -13.634824752807617
    6. 'import' → logprob: -14.259824752807617
    7. '  ' → logprob: -14.259824752807617
    8. '	in' → logprob: -14.259824752807617
    9. ',' → logprob: -14.384824752807617
    10. '+' → logprob: -14.384824752807617

Token 445: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269284337759018
    2. ' range' → logprob: -2.1269283294677734
    3. '(range' → logprob: -15.126928329467773
    4. '	range' → logprob: -20.251928329467773
    5. '   ' → logprob: -20.751928329467773
    6. ' ' → logprob: -20.751928329467773
    7. 'Range' → logprob: -21.126928329467773
    8. '    ' → logprob: -21.501928329467773
    9. '(' → logprob: -22.001928329467773
    10. 'rang' → logprob: -22.251928329467773

Token 446: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.00020020268857479095
    2. 'range' → logprob: -9.125200271606445
    3. 'W' → logprob: -9.500200271606445
    4. '(' → logprob: -12.000200271606445
    5. '(range' → logprob: -12.625200271606445
    6. ' range' → logprob: -12.625200271606445
    7. 'Range' → logprob: -12.875200271606445
    8. '(
' → logprob: -14.625200271606445
    9. ')' → logprob: -15.250200271606445
    10. '   ' → logprob: -16.375200271606445

Token 447: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030174370855093002
    2. '):' → logprob: -3.5301742553710938
    3. ')' → logprob: -8.280174255371094
    4. '           ' → logprob: -9.780174255371094
    5. '       ' → logprob: -10.655174255371094
    6. '):
' → logprob: -10.780174255371094
    7. ' ):
' → logprob: -11.030174255371094
    8. ':' → logprob: -11.155174255371094
    9. ':
' → logprob: -11.655174255371094
    10. 'if' → logprob: -11.780174255371094

Token 448: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6455468535423279
    2. '           ' → logprob: -0.7705468535423279
    3. ' if' → logprob: -4.645546913146973
    4. 'if' → logprob: -6.770546913146973
    5. '       ' → logprob: -7.020546913146973
    6. '   ' → logprob: -8.020546913146973
    7. '<|end|>' → logprob: -8.395546913146973
    8. ' ' → logprob: -9.520546913146973
    9. '	       ' → logprob: -9.770546913146973
    10. ' ' → logprob: -9.895546913146973

Token 449: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5775495767593384
    2. ' if' → logprob: -0.9525495767593384
    3. '           ' → logprob: -2.952549457550049
    4. '               ' → logprob: -7.702549457550049
    5. '                   ' → logprob: -8.327549934387207
    6. '   ' → logprob: -10.702549934387207
    7. 'If' → logprob: -11.827549934387207
    8. '	if' → logprob: -11.827549934387207
    9. '       ' → logprob: -12.077549934387207
    10. '	           ' → logprob: -12.077549934387207

Token 450: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.023249322548508644
    2. ' is' → logprob: -3.773249387741089
    3. 'matrix' → logprob: -13.648249626159668
    4. ' ' → logprob: -14.148249626159668
    5. '   ' → logprob: -14.398249626159668
    6. '(is' → logprob: -14.773249626159668
    7. 'isdigit' → logprob: -15.148249626159668
    8. '	is' → logprob: -15.273249626159668
    9. 'sys' → logprob: -16.14824867248535
    10. ' ' → logprob: -16.27324867248535

Token 451: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -2.868328920158092e-05
    2. '_' → logprob: -11.125028610229492
    3. 'digit' → logprob: -11.375028610229492
    4. '_digits' → logprob: -13.375028610229492
    5. '_d' → logprob: -14.375028610229492
    6. 'Digit' → logprob: -16.500028610229492
    7. '-digit' → logprob: -17.000028610229492
    8. '_DIG' → logprob: -17.375028610229492
    9. 'isdigit' → logprob: -17.375028610229492
    10. '_letter' → logprob: -18.500028610229492

Token 452: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -5.288163083605468e-05
    2. '(' → logprob: -9.875052452087402
    3. 'matrix' → logprob: -13.875052452087402
    4. '(
' → logprob: -15.875052452087402
    5. ' (' → logprob: -16.37505340576172
    6. ' matrix' → logprob: -16.62505340576172
    7. '(m' → logprob: -17.00005340576172
    8. '(mat' → logprob: -17.12505340576172
    9. '(Matrix' → logprob: -17.50005340576172
    10. '(module' → logprob: -17.62505340576172

Token 453: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017212345264852047
    2. '[r' → logprob: -6.876721382141113
    3. '[j' → logprob: -7.376721382141113
    4. '[' → logprob: -10.126721382141113
    5. ')[' → logprob: -12.126721382141113
    6. ')' → logprob: -12.501721382141113
    7. ' [' → logprob: -12.626721382141113
    8. '(i' → logprob: -12.626721382141113
    9. '[
' → logprob: -13.376721382141113
    10. '[s' → logprob: -14.251721382141113

Token 454: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.8609428405761719
    2. '[i' → logprob: -0.9859428405761719
    3. '[j' → logprob: -1.6109428405761719
    4. '[' → logprob: -6.110942840576172
    5. '[r' → logprob: -7.110942840576172
    6. ')[' → logprob: -7.235942840576172
    7. ']' → logprob: -8.360942840576172
    8. '[
' → logprob: -9.735942840576172
    9. ' ][' → logprob: -9.735942840576172
    10. ' [' → logprob: -9.860942840576172

Token 455: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.526570384972729e-05
    2. '[j' → logprob: -10.250055313110352
    3. '][' → logprob: -11.500055313110352
    4. ' j' → logprob: -12.500055313110352
    5. ')' → logprob: -12.625055313110352
    6. '   ' → logprob: -14.500055313110352
    7. ']' → logprob: -14.625055313110352
    8. '[' → logprob: -15.125055313110352
    9. 'i' → logprob: -15.125055313110352
    10. '```' → logprob: -15.250055313110352

Token 456: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01895994134247303
    2. ']):' → logprob: -5.018959999084473
    3. '):
' → logprob: -5.143959999084473
    4. ')' → logprob: -5.143959999084473
    5. ')):' → logprob: -8.143959999084473
    6. ']):
' → logprob: -9.143959999084473
    7. ']:' → logprob: -10.768959999084473
    8. ':' → logprob: -11.018959999084473
    9. ']' → logprob: -11.143959999084473
    10. ' ):' → logprob: -11.893959999084473

Token 457: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02954184263944626
    2. ':
' → logprob: -3.7795417308807373
    3. ':' → logprob: -5.404541969299316
    4. '):
' → logprob: -7.904541969299316
    5. '                    
' → logprob: -7.904541969299316
    6. '           ' → logprob: -8.529541969299316
    7. ',' → logprob: -8.779541969299316
    8. '               ' → logprob: -8.904541969299316
    9. '
' → logprob: -9.154541969299316
    10. ' :' → logprob: -9.779541969299316

Token 458: ' candidate' (ID: 17098)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.32816922664642334
    2. 'candidate' (adapté à ' candidate') → logprob: -2.578169345855713
    3. ' num' → logprob: -2.828169345855713
    4. 'current' → logprob: -2.953169345855713
    5. 'number' → logprob: -3.203169345855713
    6. '                   ' → logprob: -4.078169345855713
    7. ' current' → logprob: -4.453169345855713
    8. ' candidate' → logprob: -4.578169345855713
    9. ' number' → logprob: -5.078169345855713
    10. 'result' → logprob: -6.578169345855713

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048608485609292984
    2. ' =' → logprob: -3.0486085414886475
    3. '_' → logprob: -11.173608779907227
    4. '_candidate' → logprob: -12.798608779907227
    5. '_=' → logprob: -13.423608779907227
    6. '_value' → logprob: -13.673608779907227
    7. '_val' → logprob: -14.423608779907227
    8. '_number' → logprob: -14.548608779907227
    9. '_num' → logprob: -15.548608779907227
    10. ' ' → logprob: -16.173608779907227

Token 460: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0031853171531111
    2. ' dfs' → logprob: -5.753185272216797
    3. 'int' → logprob: -12.003185272216797
    4. 'df' → logprob: -13.878185272216797
    5. 'max' → logprob: -15.253185272216797
    6. '   ' → logprob: -15.878185272216797
    7. ' int' → logprob: -17.128185272216797
    8. ' ' → logprob: -17.878185272216797
    9. 'dp' → logprob: -18.253185272216797
    10. '  ' → logprob: -18.628185272216797

Token 461: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. ' (' → logprob: -16.875001907348633
    4. '(j' → logprob: -17.500001907348633
    5. '[i' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '(
' → logprob: -20.875001907348633
    8. ')' → logprob: -21.125001907348633
    9. 'i' → logprob: -21.625001907348633
    10. '
' → logprob: -22.500001907348633

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07893694192171097
    2. ',j' → logprob: -2.57893705368042
    3. ' ,' → logprob: -10.203936576843262
    4. ',
' → logprob: -12.203936576843262
    5. ')' → logprob: -13.203936576843262
    6. '(' → logprob: -13.578936576843262
    7. 'j' → logprob: -14.703936576843262
    8. ',i' → logprob: -14.828936576843262
    9. '(j' → logprob: -14.953936576843262
    10. '
' → logprob: -15.703936576843262

Token 463: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.306760805164231e-05
    2. ' j' → logprob: -11.25001335144043
    3. '	j' → logprob: -17.75001335144043
    4. '   ' → logprob: -18.12501335144043
    5. '    ' → logprob: -19.87501335144043
    6. '[j' → logprob: -19.87501335144043
    7. ',j' → logprob: -20.12501335144043
    8. ')' → logprob: -20.12501335144043
    9. '<|end|>' → logprob: -20.25001335144043
    10. '$j' → logprob: -20.50001335144043

Token 464: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20152735710144043
    2. ')' → logprob: -1.7015273571014404
    3. ')
' → logprob: -9.20152759552002
    4. '                   ' → logprob: -12.32652759552002
    5. ')

' → logprob: -12.32652759552002
    6. '               ' → logprob: -13.07652759552002
    7. '           ' → logprob: -13.82652759552002
    8. ' )
' → logprob: -14.32652759552002
    9. ')`
' → logprob: -15.45152759552002
    10. '       ' → logprob: -16.201526641845703

Token 465: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14676399528980255
    2. '
' → logprob: -2.021764039993286
    3. '               ' → logprob: -6.521763801574707
    4. '           ' → logprob: -6.896763801574707
    5. '                    
' → logprob: -7.271763801574707
    6. '<|end|>' → logprob: -7.771763801574707
    7. '
' → logprob: -9.521763801574707
    8. '       ' → logprob: -9.771763801574707
    9. ' 
' → logprob: -9.896763801574707
    10. '<|end|>' → logprob: -10.271763801574707

Token 466: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05352271348237991
    2. ' if' → logprob: -3.428522825241089
    3. '
' → logprob: -4.92852258682251
    4. '           ' → logprob: -5.55352258682251
    5. 'if' → logprob: -5.92852258682251
    6. '       ' → logprob: -5.92852258682251
    7. '               ' → logprob: -6.17852258682251
    8. ' 
' → logprob: -7.92852258682251
    9. '                    
' → logprob: -8.303523063659668
    10. '                       ' → logprob: -8.928523063659668

Token 467: ' Supp' (ID: 20631)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.028212858363986015
    2. '                   ' → logprob: -4.278213024139404
    3. ' if' → logprob: -4.278213024139404
    4. '               ' → logprob: -10.153212547302246
    5. '           ' → logprob: -11.028212547302246
    6. '
' → logprob: -11.528212547302246
    7. '       ' → logprob: -11.653212547302246
    8. '```' → logprob: -12.278212547302246
    9. '   ' → logprob: -13.153212547302246
    10. '                       ' → logprob: -13.403212547302246

Token 468: 'ression' (ID: 15210)
  Prédit: 'ose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ose' → logprob: -1.0105006694793701
    2. 'os' → logprob: -1.1355006694793701
    3. '                   ' → logprob: -2.51050066947937
    4. 'oser' → logprob: -2.63550066947937
    5. '               ' → logprob: -2.88550066947937
    6. '           ' → logprob: -3.38550066947937
    7. 'e' → logprob: -4.010500907897949
    8. 'é' → logprob: -4.385500907897949
    9. 'lement' → logprob: -4.760500907897949
    10. '       ' → logprob: -5.260500907897949

Token 469: ' des' (ID: 731)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05528832599520683
    2. ' if' → logprob: -3.680288314819336
    3. 'if' → logprob: -4.180288314819336
    4. '                    ' → logprob: -5.930288314819336
    5. '                    
' → logprob: -6.180288314819336
    6. '               ' → logprob: -6.180288314819336
    7. '		           ' → logprob: -7.180288314819336
    8. '                       ' → logprob: -7.555288314819336
    9. ' =' → logprob: -7.555288314819336
    10. '.' → logprob: -7.805288314819336

Token 470: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.17534177005290985
    2. 'leading' → logprob: -2.175341844558716
    3. '0' → logprob: -3.175341844558716
    4. 'zeros' → logprob: -5.800341606140137
    5. ' leading' → logprob: -6.550341606140137
    6. ' z' → logprob: -7.300341606140137
    7. '   ' → logprob: -9.425341606140137
    8. 'é' → logprob: -10.050341606140137
    9. 'import' → logprob: -10.175341606140137
    10. 'lead' → logprob: -10.425341606140137

Token 471: 'éros' (ID: 120888)
  Prédit: 'eros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eros' → logprob: -0.4317827820777893
    2. 'éros' → logprob: -1.6817827224731445
    3. 'ero' → logprob: -1.9317827224731445
    4. 'éro' → logprob: -4.1817827224731445
    5. 'é' → logprob: -5.9317827224731445
    6. 'e' → logprob: -7.4317827224731445
    7. 'er' → logprob: -7.6817827224731445
    8. 'erp' → logprob: -8.181782722473145
    9. 'è' → logprob: -9.431782722473145
    10. 'ér' → logprob: -9.681782722473145

Token 472: ' en' (ID: 469)
  Prédit: 'leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leading' → logprob: -0.9398245811462402
    2. '-leading' → logprob: -2.1898245811462402
    3. '.leading' → logprob: -2.4398245811462402
    4. 's' → logprob: -2.5648245811462402
    5. 'rstrip' → logprob: -2.8148245811462402
    6. '.rstrip' → logprob: -2.9398245811462402
    7. ' leading' → logprob: -3.3148245811462402
    8. 'import' → logprob: -3.6898245811462402
    9. 'if' → logprob: -4.06482458114624
    10. '.strip' → logprob: -4.18982458114624

Token 473: ' tête' (ID: 36447)
  Prédit: 'leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leading' → logprob: -0.14515194296836853
    2. 'lead' → logprob: -2.6451518535614014
    3. 'l' → logprob: -3.6451518535614014
    4. 'candidate' → logprob: -3.7701518535614014
    5. 'left' → logprob: -5.1451520919799805
    6. 't' → logprob: -6.1451520919799805
    7. 'head' → logprob: -6.3951520919799805
    8. ' leading' → logprob: -7.3951520919799805
    9. 'int' → logprob: -7.3951520919799805
    10. 'c' → logprob: -7.5201520919799805

Token 474: ' avant' (ID: 13339)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.041530072689056396
    2. '.rstrip' → logprob: -4.291530132293701
    3. '.strip' → logprob: -5.416530132293701
    4. 'candidate' → logprob: -5.541530132293701
    5. 'rstrip' → logprob: -5.916530132293701
    6. '.' → logprob: -5.916530132293701
    7. 'if' → logprob: -6.041530132293701
    8. '                    
' → logprob: -6.166530132293701
    9. ',' → logprob: -6.416530132293701
    10. '.replace' → logprob: -6.541530132293701

Token 475: ' comparaison' (ID: 170508)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3452398180961609
    2. 'int' → logprob: -1.3452398777008057
    3. 'candidate' → logprob: -3.8452398777008057
    4. '                   ' → logprob: -5.720239639282227
    5. ' if' → logprob: -5.845239639282227
    6. 'len' → logprob: -6.970239639282227
    7. '=int' → logprob: -7.345239639282227
    8. '(candidate' → logprob: -7.595239639282227
    9. ' int' → logprob: -7.970239639282227
    10. '```' → logprob: -8.220239639282227

Token 476: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016143927350640297
    2. '                    
' → logprob: -4.766143798828125
    3. '
' → logprob: -5.141143798828125
    4. '               ' → logprob: -7.516143798828125
    5. '                   
' → logprob: -8.891143798828125
    6. '                    ' → logprob: -9.016143798828125
    7. '           ' → logprob: -9.141143798828125
    8. 'if' → logprob: -9.266143798828125
    9. '                  ' → logprob: -9.391143798828125
    10. '<|end|>' → logprob: -9.391143798828125

Token 477: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0100857587531209
    2. '                    
' → logprob: -5.510085582733154
    3. '.strip' → logprob: -6.760085582733154
    4. '.rstrip' → logprob: -7.135085582733154
    5. '.replace' → logprob: -7.260085582733154
    6. '
' → logprob: -7.385085582733154
    7. 'if' → logprob: -7.510085582733154
    8. '               ' → logprob: -7.760085582733154
    9. '.' → logprob: -8.010086059570312
    10. 'candidate' → logprob: -8.260086059570312

Token 478: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' (adapté à ' candidate') → logprob: -0.02912972681224346
    2. ' candidate' → logprob: -3.77912974357605
    3. '                   ' → logprob: -5.279129505157471
    4. 'if' → logprob: -7.654129505157471
    5. ' if' → logprob: -9.779129981994629
    6. '
' → logprob: -10.029129981994629
    7. 'int' → logprob: -10.154129981994629
    8. '                    
' → logprob: -10.654129981994629
    9. '(candidate' → logprob: -10.779129981994629
    10. 'cand' → logprob: -11.279129981994629

Token 479: '_int' (ID: 12285)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11545597016811371
    2. '_str' → logprob: -2.7404558658599854
    3. ' =' → logprob: -3.3654558658599854
    4. '_int' → logprob: -5.2404561042785645
    5. '_l' → logprob: -6.4904561042785645
    6. '=l' → logprob: -7.4904561042785645
    7. 'str' → logprob: -7.7404561042785645
    8. '.l' → logprob: -7.8654561042785645
    9. '=int' → logprob: -7.8654561042785645
    10. '_strip' → logprob: -7.9904561042785645

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889914512634277
    2. ' =' → logprob: -2.5788991451263428
    3. '=int' → logprob: -11.703899383544922
    4. '＝' → logprob: -14.078899383544922
    5. ',' → logprob: -16.328899383544922
    6. '   ' → logprob: -16.453899383544922
    7. 'int' → logprob: -16.953899383544922
    8. ')' → logprob: -17.078899383544922
    9. ' ' → logprob: -17.203899383544922
    10. '  ' → logprob: -17.203899383544922

Token 481: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0206720617134124e-05
    2. ' int' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.750009536743164
    4. '0' → logprob: -19.250009536743164
    5. '(int' → logprob: -20.375009536743164
    6. '  ' → logprob: -20.500009536743164
    7. '=int' → logprob: -20.875009536743164
    8. '    ' → logprob: -21.250009536743164
    9. '	int' → logprob: -21.500009536743164
    10. '<int' → logprob: -21.625009536743164

Token 482: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -1.0087516784551553e-05
    2. '(' → logprob: -12.00001049041748
    3. 'candidate' → logprob: -12.50001049041748
    4. '(
' → logprob: -16.125009536743164
    5. ' (' → logprob: -17.500009536743164
    6. '(c' → logprob: -18.125009536743164
    7. '('' → logprob: -18.625009536743164
    8. ' candidate' → logprob: -18.875009536743164
    9. '(`' → logprob: -19.125009536743164
    10. ')' → logprob: -19.500009536743164

Token 483: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011737081513274461
    2. ')
' → logprob: -10.000117301940918
    3. 'if' → logprob: -10.125117301940918
    4. ' )' → logprob: -11.500117301940918
    5. '.strip' → logprob: -12.250117301940918
    6. '())' → logprob: -12.250117301940918
    7. ' if' → logprob: -12.625117301940918
    8. '.replace' → logprob: -13.000117301940918
    9. '))' → logprob: -13.500117301940918
    10. '   ' → logprob: -13.750117301940918

Token 484: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5694292783737183
    2. '                   ' → logprob: -1.4444292783737183
    3. ' 
' → logprob: -2.694429397583008
    4. '                    
' → logprob: -3.194429397583008
    5. '<|end|>' → logprob: -3.319429397583008
    6. '               ' → logprob: -4.194429397583008
    7. '           ' → logprob: -4.819429397583008
    8. '  
' → logprob: -5.069429397583008
    9. '       ' → logprob: -5.569429397583008
    10. ')' → logprob: -5.819429397583008

Token 485: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06956164538860321
    2. 'if' (adapté à ' if') → logprob: -3.694561719894409
    3. ' if' → logprob: -3.694561719894409
    4. '           ' → logprob: -4.94456148147583
    5. '
' → logprob: -5.31956148147583
    6. '       ' → logprob: -6.31956148147583
    7. '               ' → logprob: -6.44456148147583
    8. '                    
' → logprob: -6.94456148147583
    9. ' 
' → logprob: -8.069561958312988
    10. '   ' → logprob: -8.819561958312988

Token 486: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759856700897217
    2. ' max' → logprob: -0.8259856700897217
    3. '(max' → logprob: -10.0759859085083
    4. '                   ' → logprob: -12.7009859085083
    5. ' (' → logprob: -14.8259859085083
    6. '               ' → logprob: -15.7009859085083
    7. '	max' → logprob: -16.075984954833984
    8. '                    ' → logprob: -16.200984954833984
    9. '   ' → logprob: -16.450984954833984
    10. '[max' → logprob: -16.450984954833984

Token 487: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -4.751746746478602e-05
    2. '_' → logprob: -10.00004768371582
    3. 'number' → logprob: -13.75004768371582
    4. '_max' → logprob: -14.75004768371582
    5. '_num' → logprob: -15.12504768371582
    6. '_n' → logprob: -16.37504768371582
    7. 'max' → logprob: -16.50004768371582
    8. '_candidate' → logprob: -16.75004768371582
    9. '==' → logprob: -17.75004768371582
    10. '_NUMBER' → logprob: -18.00004768371582

Token 488: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16023053228855133
    2. 'is' → logprob: -1.9102305173873901
    3. '==' → logprob: -12.28523063659668
    4. '	is' → logprob: -14.53523063659668
    5. 'i' → logprob: -14.91023063659668
    6. '=' → logprob: -15.53523063659668
    7. ')' → logprob: -16.03523063659668
    8. '[' → logprob: -16.03523063659668
    9. '===' → logprob: -16.03523063659668
    10. '<|end|>' → logprob: -16.28523063659668

Token 489: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002036595979006961
    2. ' None' → logprob: -8.500204086303711
    3. 'none' → logprob: -15.875204086303711
    4. '=None' → logprob: -17.75020408630371
    5. 'not' → logprob: -19.37520408630371
    6. 'N' → logprob: -19.50020408630371
    7. '(None' → logprob: -19.50020408630371
    8. 'max' → logprob: -20.12520408630371
    9. '   ' → logprob: -20.62520408630371
    10. '_None' → logprob: -20.87520408630371

Token 490: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.026331765577197075
    2. 'or' → logprob: -3.651331663131714
    3. '                   ' → logprob: -11.276331901550293
    4. '               ' → logprob: -11.401331901550293
    5. '	or' → logprob: -12.651331901550293
    6. '           ' → logprob: -13.651331901550293
    7. '              ' → logprob: -13.776331901550293
    8. '                       ' → logprob: -14.651331901550293
    9. '            ' → logprob: -15.026331901550293
    10. '                ' → logprob: -15.151331901550293

Token 491: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.0019289902411401272
    2. ' candidate' → logprob: -6.251928806304932
    3. '                   ' → logprob: -15.37692928314209
    4. 'int' → logprob: -17.001928329467773
    5. '(candidate' → logprob: -17.126928329467773
    6. 'cand' → logprob: -18.626928329467773
    7. '_candidate' → logprob: -19.001928329467773
    8. '   ' → logprob: -19.251928329467773
    9. 'c' → logprob: -19.501928329467773
    10. '                    ' → logprob: -19.501928329467773

Token 492: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.07286775857210159
    2. '<int' → logprob: -2.8228678703308105
    3. 'int' → logprob: -4.9478678703308105
    4. '<' → logprob: -6.3228678703308105
    5. ' <' → logprob: -7.0728678703308105
    6. '>' → logprob: -7.6978678703308105
    7. 'Int' → logprob: -8.697867393493652
    8. '<Int' → logprob: -8.822867393493652
    9. '<_' → logprob: -10.322867393493652
    10. '_' → logprob: -10.572867393493652

Token 493: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04337640106678009
    2. ' >' → logprob: -3.1683764457702637
    3. '<' → logprob: -8.043375968933105
    4. ' <' → logprob: -9.918375968933105
    5. '><' → logprob: -12.918375968933105
    6. ' ' → logprob: -14.293375968933105
    7. '[' → logprob: -14.543375968933105
    8. '&gt' → logprob: -14.668375968933105
    9. '<int' → logprob: -14.918375968933105
    10. '>
' → logprob: -14.918375968933105

Token 494: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.000340945553034544
    2. ' max' → logprob: -8.000341415405273
    3. 'int' → logprob: -12.125341415405273
    4. 'candidate' → logprob: -16.875341415405273
    5. ' int' → logprob: -19.000341415405273
    6. '   ' → logprob: -19.625341415405273
    7. '	max' → logprob: -20.125341415405273
    8. '                   ' → logprob: -20.250341415405273
    9. '           ' → logprob: -20.500341415405273
    10. '(max' → logprob: -20.625341415405273

Token 495: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -8.65707261255011e-06
    2. 'number' → logprob: -12.625008583068848
    3. 'int' → logprob: -13.125008583068848
    4. '_int' → logprob: -13.250008583068848
    5. 'umber' → logprob: -13.875008583068848
    6. '_candidate' → logprob: -15.250008583068848
    7. 'candidate' → logprob: -15.250008583068848
    8. 'Number' → logprob: -17.750009536743164
    9. '_NUMBER' → logprob: -18.125009536743164
    10. '_' → logprob: -18.250009536743164

Token 496: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.525296688079834
    2. ':
' → logprob: -0.900296688079834
    3. '                       ' → logprob: -6.400296688079834
    4. '                   ' → logprob: -8.650297164916992
    5. '):
' → logprob: -9.025297164916992
    6. '       ' → logprob: -9.525297164916992
    7. ' :
' → logprob: -10.150297164916992
    8. ' :' → logprob: -10.650297164916992
    9. '):' → logprob: -10.900297164916992
    10. ':
' → logprob: -11.150297164916992

Token 497: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000253591249929741
    2. '                   ' → logprob: -8.500253677368164
    3. '               ' → logprob: -10.750253677368164
    4. '                      ' → logprob: -11.625253677368164
    5. '                           ' → logprob: -11.750253677368164
    6. '           ' → logprob: -12.875253677368164
    7. '                        ' → logprob: -13.000253677368164
    8. '                        
' → logprob: -13.625253677368164
    9. '                    ' → logprob: -13.875253677368164
    10. '       ' → logprob: -14.125253677368164

Token 498: ' max' (ID: 2999)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08296207338571548
    2. 'max' (adapté à ' max') → logprob: -2.8329620361328125
    3. ' max' → logprob: -3.9579620361328125
    4. '                   ' → logprob: -7.2079620361328125
    5. '                           ' → logprob: -7.5829620361328125
    6. '           ' → logprob: -8.707962036132812
    7. '               ' → logprob: -8.707962036132812
    8. '   ' → logprob: -9.832962036132812
    9. '       ' → logprob: -10.832962036132812
    10. '                        ' → logprob: -12.207962036132812

Token 499: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.125001907348633
    3. '_code' → logprob: -16.625001907348633
    4. '_numbers' → logprob: -16.625001907348633
    5. '_num' → logprob: -16.750001907348633
    6. ' _' → logprob: -17.500001907348633
    7. 'number' → logprob: -17.875001907348633
    8. '_n' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. '_value' → logprob: -19.375001907348633

Token 500: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '＝' → logprob: -17.663042068481445
    4. '=c' → logprob: -17.913042068481445
    5. '.=' → logprob: -18.913042068481445
    6. '=}' → logprob: -20.538042068481445
    7. '=int' → logprob: -20.788042068481445
    8. '=cut' → logprob: -20.788042068481445
    9. '=

' → logprob: -21.038042068481445
    10. '_=' → logprob: -21.163042068481445

Token 501: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.00033546582562848926
    2. ' candidate' → logprob: -8.000335693359375
    3. '(candidate' → logprob: -19.875335693359375
    4. 'c' → logprob: -20.125335693359375
    5. '_candidate' → logprob: -20.250335693359375
    6. ' candidat' → logprob: -20.375335693359375
    7. 'cand' → logprob: -21.750335693359375
    8. 'Candidate' → logprob: -22.000335693359375
    9. '候' → logprob: -22.875335693359375
    10. '   ' → logprob: -23.625335693359375

Token 502: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.939851037808694e-05
    2. 'int' → logprob: -10.625029563903809
    3. 'Int' → logprob: -13.250029563903809
    4. '_candidate' → logprob: -13.250029563903809
    5. 'candidate' → logprob: -13.625029563903809
    6. '_' → logprob: -16.000028610229492
    7. '_i' → logprob: -17.375028610229492
    8. ' candidate' → logprob: -17.375028610229492
    9. ' _' → logprob: -17.375028610229492
    10. '```' → logprob: -17.625028610229492

Token 503: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43323445320129395
    2. '   ' → logprob: -1.933234453201294
    3. '       ' → logprob: -2.183234453201294
    4. '    
' → logprob: -2.558234453201294
    5. '        
' → logprob: -4.558234214782715
    6. '<|end|>' → logprob: -6.183234214782715
    7. '  
' → logprob: -6.808234214782715
    8. '                        
' → logprob: -7.433234214782715
    9. ' 
' → logprob: -7.933234214782715
    10. '           ' → logprob: -8.183234214782715

Token 504: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02154458500444889
    2. 'print' → logprob: -4.271544456481934
    3. '
' → logprob: -5.646544456481934
    4. '```' → logprob: -6.021544456481934
    5. '    
' → logprob: -6.896544456481934
    6. '       ' → logprob: -8.021544456481934
    7. '        
' → logprob: -10.146544456481934
    8. '  
' → logprob: -11.521544456481934
    9. '
' → logprob: -13.021544456481934
    10. '``' → logprob: -13.146544456481934

Token 505: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05248858779668808
    2. '       ' → logprob: -3.0524885654449463
    3. '   ' → logprob: -5.552488803863525
    4. ' print' → logprob: -11.302488327026367
    5. '```' → logprob: -12.677488327026367
    6. ' ' → logprob: -16.677488327026367
    7. '	print' → logprob: -16.802488327026367
    8. 'sys' → logprob: -16.802488327026367
    9. '    
' → logprob: -17.427488327026367
    10. '        
' → logprob: -17.552488327026367

Token 506: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -7.52919222577475e-05
    2. '(' → logprob: -9.500075340270996
    3. '(f' → logprob: -15.500075340270996
    4. '()' → logprob: -16.62507438659668
    5. 'max' → logprob: -16.87507438659668
    6. '(str' → logprob: -17.25007438659668
    7. '(
' → logprob: -18.75007438659668
    8. '((' → logprob: -19.00007438659668
    9. '(ma' → logprob: -19.12507438659668
    10. '(Max' → logprob: -19.12507438659668

Token 507: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -2.939851037808694e-05
    2. 'number' → logprob: -10.500029563903809
    3. 'Number' → logprob: -13.750029563903809
    4. 'umber' → logprob: -15.500029563903809
    5. '_NUMBER' → logprob: -15.500029563903809
    6. '_' → logprob: -16.000028610229492
    7. '(max' → logprob: -16.500028610229492
    8. '(number' → logprob: -17.000028610229492
    9. '_Number' → logprob: -17.250028610229492
    10. 'int' → logprob: -18.375028610229492

Token 508: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -13.375004768371582
    3. ' )' → logprob: -13.625004768371582
    4. '())' → logprob: -14.000004768371582
    5. '`)' → logprob: -15.500004768371582
    6. '   ' → logprob: -15.875004768371582
    7. '```' → logprob: -16.0000057220459
    8. '()' → logprob: -16.1250057220459
    9. ')`' → logprob: -16.1250057220459
    10. '))' → logprob: -16.1250057220459

Token 509: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009361479431390762
    2. '<|end|>' → logprob: -5.259361267089844
    3. 'main' → logprob: -6.134361267089844
    4. '
' → logprob: -6.509361267089844
    5. '```' → logprob: -8.634361267089844
    6. ' if' → logprob: -9.009361267089844
    7. '  
' → logprob: -10.009361267089844
    8. '\n' → logprob: -10.009361267089844
    9. '    
' → logprob: -11.259361267089844
    10. '<|end|>' → logprob: -11.509361267089844

Token 510: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4744822084903717
    2. '__' → logprob: -0.9744821786880493
    3. '_' → logprob: -7.97448205947876
    4. '_name' → logprob: -10.224482536315918
    5. ' ' → logprob: -11.474482536315918
    6. '___' → logprob: -12.224482536315918
    7. ' _' → logprob: -12.974482536315918
    8. 'name' → logprob: -13.474482536315918
    9. ' ' → logprob: -13.599482536315918
    10. ' ' → logprob: -13.974482536315918

Token 511: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011430807411670685
    2. '==' → logprob: -4.886430740356445
    3. ' ==' → logprob: -6.761430740356445
    4. '.__' → logprob: -7.011430740356445
    5. '.' → logprob: -7.261430740356445
    6. '__.__' → logprob: -7.386430740356445
    7. '__.' → logprob: -8.386430740356445
    8. '_' → logprob: -9.886430740356445
    9. ' __' → logprob: -10.261430740356445
    10. '__[' → logprob: -10.886430740356445

Token 512: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0032253677491098642
    2. '__.__' → logprob: -5.753225326538086
    3. '==' → logprob: -10.878225326538086
    4. '__.' → logprob: -11.003225326538086
    5. '__["' → logprob: -11.878225326538086
    6. '__('' → logprob: -13.503225326538086
    7. '___' → logprob: -14.003225326538086
    8. '__("' → logprob: -14.128225326538086
    9. '=="' → logprob: -14.753225326538086
    10. '__[' → logprob: -15.128225326538086

Token 513: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007460380904376507
    2. '==' → logprob: -5.132460594177246
    3. ' ==' → logprob: -6.632460594177246
    4. '=="' → logprob: -9.007460594177246
    5. '__.__' → logprob: -10.382460594177246
    6. '=='' → logprob: -10.882460594177246
    7. '_' → logprob: -11.007460594177246
    8. '___' → logprob: -11.757460594177246
    9. '.__' → logprob: -12.257460594177246
    10. '__.' → logprob: -12.757460594177246

Token 514: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048595547676086426
    2. ''' → logprob: -3.048595428466797
    3. ' "__' → logprob: -12.298595428466797
    4. '__' → logprob: -12.673595428466797
    5. '"user' → logprob: -15.673595428466797
    6. ' '__' → logprob: -16.048595428466797
    7. '"name' → logprob: -17.173595428466797
    8. ''"' → logprob: -17.548595428466797
    9. '"class' → logprob: -17.548595428466797
    10. '("__' → logprob: -17.798595428466797

Token 515: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0019627707079052925
    2. '__' → logprob: -6.251962661743164
    3. 'name' → logprob: -10.751962661743164
    4. '_main' → logprob: -11.376962661743164
    5. ' main' → logprob: -14.876962661743164
    6. 'm' → logprob: -15.251962661743164
    7. '__':
' → logprob: -15.876962661743164
    8. ''' → logprob: -16.001962661743164
    9. 'ma' → logprob: -16.126962661743164
    10. ' '__' → logprob: -16.626962661743164

Token 516: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.1003308817744255
    2. '__' → logprob: -2.3503308296203613
    3. '__":
' → logprob: -9.85033130645752
    4. '__:' → logprob: -9.97533130645752
    5. '':' → logprob: -11.35033130645752
    6. '_' → logprob: -11.72533130645752
    7. ':' → logprob: -13.22533130645752
    8. '('__' → logprob: -14.22533130645752
    9. ''' → logprob: -14.35033130645752
    10. '__.' → logprob: -14.60033130645752

Token 517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2190144658088684
    2. '	main' → logprob: -2.2190144062042236
    3. 'main' → logprob: -2.4690144062042236
    4. ' main' → logprob: -5.719014644622803
    5. ' ' → logprob: -11.469014167785645
    6. '   ' → logprob: -12.594014167785645
    7. '_main' → logprob: -12.844014167785645
    8. '  ' → logprob: -13.469014167785645
    9. '(main' → logprob: -13.594014167785645
    10. '	Main' → logprob: -13.719014167785645

Token 518: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.8624639324116288e-06
    2. ' main' → logprob: -13.500001907348633
    3. '	main' → logprob: -15.250001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '_main' → logprob: -20.125001907348633
    6. '(main' → logprob: -21.750001907348633
    7. '.main' → logprob: -22.000001907348633
    8. '  ' → logprob: -22.375001907348633
    9. 'ma' → logprob: -23.125001907348633
    10. 'mainwindow' → logprob: -23.250001907348633

Token 519: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 517
Tokens correctement prédits (1ère position, stricte): 195
Tokens correctement prédits (1ère position, avec adaptation): 206
Tokens correctement prédits (top 10): 375
Précision stricte (1ère position): 37.72%
Précision adaptée (1ère position): 39.85%
Précision (top 10): 72.53%
================================================================================
