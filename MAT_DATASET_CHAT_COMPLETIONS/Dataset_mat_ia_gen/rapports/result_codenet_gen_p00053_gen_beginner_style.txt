================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_prime(num):
    if num < 2:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

while True:
    n = int(input())
    if n == 0:
        break
    count = 0
    sum_primes = 0
    num = 2
    while count < n:
        if is_prime(num):
            sum_primes += num
            count += 1
        num += 1
    print(sum_primes)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_prime' (ID: 98616)
  → Token d'amorce (pas de prédiction)

Token 3: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10704518109560013
    2. '_' → logprob: -2.3570451736450195
    3. '(_' → logprob: -6.2320451736450195
    4. '_(' → logprob: -6.4820451736450195
    5. '(_:' → logprob: -6.4820451736450195
    6. '```' → logprob: -6.9820451736450195
    7. '_:' → logprob: -8.98204517364502
    8. '(_)' → logprob: -8.98204517364502
    9. '(x' → logprob: -9.48204517364502
    10. ' (' → logprob: -9.60704517364502

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17999716103076935
    2. ')' → logprob: -1.804997205734253
    3. ':' → logprob: -8.554997444152832
    4. '):
' → logprob: -10.554997444152832
    5. '```' → logprob: -11.929997444152832
    6. '(' → logprob: -12.179997444152832
    7. ')：' → logprob: -12.429997444152832
    8. ')**' → logprob: -13.429997444152832
    9. '():' → logprob: -13.679997444152832
    10. ')>' → logprob: -13.804997444152832

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018376067746430635
    2. '```' → logprob: -7.126837730407715
    3. '   ' → logprob: -7.876837730407715
    4. ':
' → logprob: -8.001837730407715
    5. '':' → logprob: -9.126837730407715
    6. '():' → logprob: -9.751837730407715
    7. '":' → logprob: -9.876837730407715
    8. '):' → logprob: -10.376837730407715
    9. '`:' → logprob: -10.501837730407715
    10. '':'' → logprob: -12.251837730407715

Token 6: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4374653398990631
    2. '```' → logprob: -1.8124653100967407
    3. ' if' → logprob: -2.6874654293060303
    4. ' 
' → logprob: -2.9374654293060303
    5. ':' → logprob: -4.187465190887451
    6. ' ' → logprob: -4.312465190887451
    7. '\' → logprob: -4.687465190887451
    8. '    
' → logprob: -4.687465190887451
    9. '    ' → logprob: -5.187465190887451
    10. '\n' → logprob: -5.937465190887451

Token 7: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.04124699905514717
    2. ' ' → logprob: -3.4162468910217285
    3. 'num' → logprob: -4.9162468910217285
    4. ' not' → logprob: -8.416247367858887
    5. ' ' → logprob: -11.791247367858887
    6. '  ' → logprob: -12.541247367858887
    7. '	num' → logprob: -12.666247367858887
    8. ' n' → logprob: -12.791247367858887
    9. '<num' → logprob: -13.166247367858887
    10. '   ' → logprob: -13.291247367858887

Token 8: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2863670289516449
    2. ' <' → logprob: -1.5363670587539673
    3. ' ' → logprob: -3.5363669395446777
    4. ' ==' → logprob: -6.286366939544678
    5. ' %' → logprob: -6.786366939544678
    6. '<=' → logprob: -7.286366939544678
    7. '<' → logprob: -7.661366939544678
    8. ' >' → logprob: -8.786367416381836
    9. '   ' → logprob: -9.411367416381836
    10. '==' → logprob: -9.786367416381836

Token 9: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5231413245201111
    2. ' ' → logprob: -0.8981413245201111
    3. '```' → logprob: -11.398140907287598
    4. ' ' → logprob: -13.273140907287598
    5. '   ' → logprob: -13.523140907287598
    6. '=' → logprob: -13.773140907287598
    7. '    ' → logprob: -14.398140907287598
    8. '_' → logprob: -14.648140907287598
    9. '(' → logprob: -15.023140907287598
    10. '3' → logprob: -15.773140907287598

Token 10: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.739826181321405e-05
    2. ' ' → logprob: -10.00004768371582
    3. '```' → logprob: -13.37504768371582
    4. '   ' → logprob: -16.75004768371582
    5. '3' → logprob: -17.62504768371582
    6. '２' → logprob: -17.75004768371582
    7. '۲' → logprob: -17.75004768371582
    8. '(' → logprob: -18.00004768371582
    9. '``' → logprob: -18.00004768371582
    10. '"' → logprob: -18.25004768371582

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036605261266231537
    2. ':
' → logprob: -6.253660678863525
    3. ':return' → logprob: -6.878660678863525
    4. ' :' → logprob: -7.753660678863525
    5. '   ' → logprob: -9.003660202026367
    6. '       ' → logprob: -9.753660202026367
    7. '    ' → logprob: -10.628660202026367
    8. ':\' → logprob: -10.878660202026367
    9. ' :
' → logprob: -11.003660202026367
    10. '):' → logprob: -11.378660202026367

Token 12: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.126327633857727
    2. '       ' → logprob: -1.126327633857727
    3. ' return' → logprob: -2.3763275146484375
    4. ':' → logprob: -2.5013275146484375
    5. '    ' → logprob: -3.0013275146484375
    6. ':return' → logprob: -3.1263275146484375
    7. ':
' → logprob: -3.3763275146484375
    8. '\n' → logprob: -3.7513275146484375
    9. 'return' → logprob: -4.6263275146484375
    10. '\' → logprob: -5.2513275146484375

Token 13: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7293785810470581
    2. 'return' (adapté à ' return') → logprob: -0.8543785810470581
    3. '   ' → logprob: -2.4793787002563477
    4. '       ' → logprob: -4.854378700256348
    5. '    ' → logprob: -7.854378700256348
    6. ':return' → logprob: -9.229378700256348
    7. ' 
' → logprob: -9.479378700256348
    8. '```' → logprob: -10.729378700256348
    9. '	return' → logprob: -11.229378700256348
    10. '
' → logprob: -11.604378700256348

Token 14: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.0040818434208631516
    2. 'False' → logprob: -5.504081726074219
    3. ' True' → logprob: -12.629081726074219
    4. ' ' → logprob: -15.879081726074219
    5. ' None' → logprob: -18.75408172607422
    6. ' false' → logprob: -19.00408172607422
    7. 'True' → logprob: -19.00408172607422
    8. '(False' → logprob: -19.25408172607422
    9. ' ' → logprob: -19.37908172607422
    10. '   ' → logprob: -21.00408172607422

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8015813827514648
    2. '\n' → logprob: -1.4265813827514648
    3. ':' → logprob: -2.176581382751465
    4. '```' → logprob: -2.801581382751465
    5. '    
' → logprob: -3.051581382751465
    6. ':
' → logprob: -3.426581382751465
    7. '
' → logprob: -3.551581382751465
    8. '  
' → logprob: -4.676581382751465
    9. '\' → logprob: -5.176581382751465
    10. ')' → logprob: -5.926581382751465

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.977729082107544
    2. '   ' → logprob: -1.227729082107544
    3. ':
' → logprob: -1.852729082107544
    4. '\n' → logprob: -2.727729082107544
    5. '    
' → logprob: -3.227729082107544
    6. '```' → logprob: -3.227729082107544
    7. '
' → logprob: -4.352728843688965
    8. '  
' → logprob: -5.102728843688965
    9. '\' → logprob: -5.852728843688965
    10. '   
' → logprob: -6.352728843688965

Token 17: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8287390470504761
    2. '   ' → logprob: -1.078739047050476
    3. '    
' → logprob: -2.9537391662597656
    4. '\n' → logprob: -3.2037391662597656
    5. '```' → logprob: -3.4537391662597656
    6. '  
' → logprob: -3.7037391662597656
    7. ' 
' → logprob: -3.9537391662597656
    8. ' for' → logprob: -3.9537391662597656
    9. 'for' (adapté à ' for') → logprob: -4.203739166259766
    10. ':
' → logprob: -5.203739166259766

Token 18: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014469388872385025
    2. ' ' → logprob: -4.264469623565674
    3. 'i' → logprob: -8.264469146728516
    4. ' in' → logprob: -11.014469146728516
    5. ' n' → logprob: -11.139469146728516
    6. 'n' → logprob: -12.264469146728516
    7. '_' → logprob: -12.389469146728516
    8. ' _' → logprob: -12.889469146728516
    9. ' range' → logprob: -13.639469146728516
    10. ' ' → logprob: -13.889469146728516

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008728709071874619
    2. ' ' → logprob: -7.37587308883667
    3. 'in' → logprob: -8.375872611999512
    4. ' i' → logprob: -12.000872611999512
    5. '  ' → logprob: -12.625872611999512
    6. '<|end|>' → logprob: -13.125872611999512
    7. '   ' → logprob: -13.500872611999512
    8. '    ' → logprob: -14.625872611999512
    9. 'space' → logprob: -15.000872611999512
    10. ' range' → logprob: -15.125872611999512

Token 20: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0004950098809786141
    2. ' ' → logprob: -8.250494956970215
    3. 'range' → logprob: -8.375494956970215
    4. '	range' → logprob: -13.500494956970215
    5. ' xrange' → logprob: -13.750494956970215
    6. ' in' → logprob: -15.500494956970215
    7. ' ra' → logprob: -15.625494956970215
    8. ' space' → logprob: -15.875494956970215
    9. ' ' → logprob: -16.25049591064453
    10. '2' → logprob: -16.25049591064453

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002631238894537091
    2. ' (' → logprob: -8.250263214111328
    3. '<|end|>' → logprob: -14.250263214111328
    4. '(
' → logprob: -14.375263214111328
    5. ' ' → logprob: -15.625263214111328
    6. '2' → logprob: -15.750263214111328
    7. '(i' → logprob: -16.500263214111328
    8. '1' → logprob: -16.500263214111328
    9. '(

' → logprob: -17.000263214111328
    10. '(space' → logprob: -17.000263214111328

Token 22: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000204851632588543
    2. ' ' → logprob: -8.500205039978027
    3. '   ' → logprob: -13.750205039978027
    4. '(' → logprob: -15.125205039978027
    5. ')' → logprob: -17.25020408630371
    6. '    ' → logprob: -17.50020408630371
    7. '```' → logprob: -18.00020408630371
    8. '  ' → logprob: -19.37520408630371
    9. '       ' → logprob: -19.75020408630371
    10. '２' → logprob: -20.50020408630371

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07172878086566925
    2. ' ,' → logprob: -2.6967287063598633
    3. ',num' → logprob: -6.571728706359863
    4. ' ' → logprob: -7.946728706359863
    5. ',
' → logprob: -11.571728706359863
    6. ',int' → logprob: -12.446728706359863
    7. ',i' → logprob: -12.446728706359863
    8. '*num' → logprob: -12.446728706359863
    9. '   ' → logprob: -12.696728706359863
    10. '  ' → logprob: -12.946728706359863

Token 24: ' num' (ID: 2269)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6028994917869568
    2. ' int' → logprob: -0.8528994917869568
    3. 'num' → logprob: -4.102899551391602
    4. ' num' → logprob: -4.602899551391602
    5. '   ' → logprob: -10.352899551391602
    6. '    ' → logprob: -11.852899551391602
    7. '(int' → logprob: -12.852899551391602
    8. ' ' → logprob: -12.852899551391602
    9. '	int' → logprob: -13.227899551391602
    10. ')' → logprob: -13.727899551391602

Token 25: '):
' (ID: 1883)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5154755115509033
    2. '):' → logprob: -1.1404755115509033
    3. ' ):' → logprob: -3.0154755115509033
    4. ' **' → logprob: -3.7654755115509033
    5. ')' → logprob: -5.390475273132324
    6. ' ' → logprob: -5.765475273132324
    7. '):
' → logprob: -7.015475273132324
    8. '   ' → logprob: -7.390475273132324
    9. ')**' → logprob: -8.140475273132324
    10. ',' → logprob: -8.140475273132324

Token 26: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2723027467727661
    2. '   ' → logprob: -1.3973027467727661
    3. '       ' → logprob: -1.6473027467727661
    4. '    ' → logprob: -2.0223026275634766
    5. ' :' → logprob: -2.1473026275634766
    6. '):' → logprob: -3.8973026275634766
    7. ' ):' → logprob: -5.897302627563477
    8. ' ' → logprob: -6.647302627563477
    9. '():' → logprob: -6.772302627563477
    10. ' if' → logprob: -6.772302627563477

Token 27: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6650094389915466
    2. ' if' → logprob: -1.6650094985961914
    3. ' ' → logprob: -2.0400094985961914
    4. '   ' → logprob: -2.7900094985961914
    5. ' :' → logprob: -3.2900094985961914
    6. '    ' → logprob: -3.6650094985961914
    7. ' ):' → logprob: -3.9150094985961914
    8. ' )' → logprob: -4.915009498596191
    9. ':' → logprob: -5.040009498596191
    10. ' i' → logprob: -5.915009498596191

Token 28: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.013086585327982903
    2. ' ' → logprob: -4.388086795806885
    3. 'num' → logprob: -7.513086795806885
    4. ' ' → logprob: -10.638086318969727
    5. '	num' → logprob: -13.388086318969727
    6. '(num' → logprob: -13.388086318969727
    7. ' n' → logprob: -13.388086318969727
    8. ' (' → logprob: -14.388086318969727
    9. '<num' → logprob: -14.638086318969727
    10. ' nums' → logprob: -15.763086318969727

Token 29: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.005061076022684574
    2. '%' → logprob: -5.380061149597168
    3. ' ' → logprob: -7.755061149597168
    4. '%i' → logprob: -11.755061149597168
    5. ' ' → logprob: -12.505061149597168
    6. '	' → logprob: -16.13006019592285
    7. ' %
' → logprob: -16.13006019592285
    8. '  ' → logprob: -16.25506019592285
    9. '   ' → logprob: -16.38006019592285
    10. '  ' → logprob: -17.13006019592285

Token 30: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4740881323814392
    2. ' i' → logprob: -0.9740881323814392
    3. ' ' → logprob: -11.724087715148926
    4. '	i' → logprob: -12.849087715148926
    5. '   ' → logprob: -15.599087715148926
    6. '2' → logprob: -16.474088668823242
    7. ' ' → logprob: -16.724088668823242
    8. '  ' → logprob: -17.099088668823242
    9. '<|end|>' → logprob: -18.224088668823242
    10. '1' → logprob: -18.849088668823242

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011060673743486404
    2. '==' → logprob: -4.51106071472168
    3. '=' → logprob: -12.13606071472168
    4. ' ' → logprob: -12.26106071472168
    5. ' =' → logprob: -13.38606071472168
    6. ')==' → logprob: -14.76106071472168
    7. ' ' → logprob: -15.01106071472168
    8. '===' → logprob: -15.88606071472168
    9. ' ===' → logprob: -16.01106071472168
    10. '0' → logprob: -16.01106071472168

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12692831456661224
    2. '0' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.626928329467773
    4. '```' → logprob: -19.126928329467773
    5. '  ' → logprob: -20.126928329467773
    6. ' 
' → logprob: -20.376928329467773
    7. '   ' → logprob: -20.626928329467773
    8. '=' → logprob: -21.626928329467773
    9. '	' → logprob: -21.876928329467773
    10. '۰' → logprob: -22.189428329467773

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -20.000085830688477
    4. '۰' → logprob: -20.125085830688477
    5. '00' → logprob: -21.000085830688477
    6. '  ' → logprob: -21.375085830688477
    7. ' ' → logprob: -21.500085830688477
    8. '   ' → logprob: -21.625085830688477
    9. '٠' → logprob: -22.250085830688477
    10. '０' → logprob: -22.437585830688477

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007843759376555681
    2. ':
' → logprob: -7.625784397125244
    3. ':return' → logprob: -8.250783920288086
    4. '       ' → logprob: -11.500783920288086
    5. '           ' → logprob: -11.625783920288086
    6. ' :' → logprob: -11.750783920288086
    7. '):' → logprob: -11.875783920288086
    8. '   ' → logprob: -15.125783920288086
    9. ':**' → logprob: -15.375783920288086
    10. ' :
' → logprob: -15.625783920288086

Token 35: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036710865795612335
    2. '       ' → logprob: -3.7867109775543213
    3. ' return' → logprob: -4.411710739135742
    4. 'return' → logprob: -6.786710739135742
    5. '   ' → logprob: -10.161710739135742
    6. ' 
' → logprob: -10.661710739135742
    7. ' ' → logprob: -11.036710739135742
    8. '```' → logprob: -11.536710739135742
    9. '               ' → logprob: -11.661710739135742
    10. ' ' → logprob: -13.286710739135742

Token 36: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1495455652475357
    2. 'return' (adapté à ' return') → logprob: -2.399545669555664
    3. '               ' → logprob: -3.399545669555664
    4. ' 
' → logprob: -4.774545669555664
    5. '           ' → logprob: -5.274545669555664
    6. ' ' → logprob: -7.149545669555664
    7. ' ' → logprob: -8.899545669555664
    8. '   ' → logprob: -9.399545669555664
    9. '       ' → logprob: -9.899545669555664
    10. '                
' → logprob: -10.899545669555664

Token 37: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.16026455163955688
    2. 'False' → logprob: -1.910264492034912
    3. ' True' → logprob: -10.16026496887207
    4. 'True' → logprob: -13.28526496887207
    5. ' ' → logprob: -17.28526496887207
    6. ' ' → logprob: -19.16026496887207
    7. ' false' → logprob: -19.41026496887207
    8. '(False' → logprob: -19.53526496887207
    9. 'F' → logprob: -19.78526496887207
    10. ' F' → logprob: -20.28526496887207

Token 38: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009158923290669918
    2. '
' → logprob: -4.884159088134766
    3. '    
' → logprob: -6.884159088134766
    4. '  
' → logprob: -8.634159088134766
    5. '\n' → logprob: -9.134159088134766
    6. ' 
' → logprob: -9.634159088134766
    7. ' return' → logprob: -10.009159088134766
    8. '       ' → logprob: -10.134159088134766
    9. '   
' → logprob: -10.509159088134766
    10. '```' → logprob: -10.634159088134766

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07281378656625748
    2. '
' → logprob: -2.6978137493133545
    3. '    
' → logprob: -6.072813987731934
    4. '  
' → logprob: -8.447813987731934
    5. ' 
' → logprob: -8.572813987731934
    6. '```' → logprob: -9.572813987731934
    7. 'return' → logprob: -10.322813987731934
    8. '   
' → logprob: -11.072813987731934
    9. ' return' → logprob: -11.322813987731934
    10. '       ' → logprob: -11.322813987731934

Token 40: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20829932391643524
    2. '   ' → logprob: -1.9582992792129517
    3. ' return' → logprob: -3.083299398422241
    4. '    
' → logprob: -7.708299160003662
    5. '
' → logprob: -8.45829963684082
    6. ' ' → logprob: -8.45829963684082
    7. ' 
' → logprob: -9.33329963684082
    8. '  ' → logprob: -10.45829963684082
    9. 'r' → logprob: -10.45829963684082
    10. '```' → logprob: -10.45829963684082

Token 41: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03804149478673935
    2. 'True' → logprob: -3.288041591644287
    3. '(True' → logprob: -19.288042068481445
    4. ' ' → logprob: -19.413042068481445
    5. ' Tru' → logprob: -19.663042068481445
    6. '   ' → logprob: -20.788042068481445
    7. '=True' → logprob: -20.788042068481445
    8. ' ' → logprob: -21.163042068481445
    9. ' Tr' → logprob: -23.413042068481445
    10. '.True' → logprob: -23.538042068481445

Token 42: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6010274291038513
    2. '<|end|>' → logprob: -1.101027488708496
    3. '(' → logprob: -3.726027488708496
    4. '```' → logprob: -3.976027488708496
    5. ' ' → logprob: -4.101027488708496
    6. '

' → logprob: -4.726027488708496
    7. '' → logprob: -4.726027488708496
    8. '#' → logprob: -4.726027488708496
    9. '\n' → logprob: -5.101027488708496
    10. ')' → logprob: -5.226027488708496

Token 44: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033898673951625824
    2. ' True' → logprob: -3.4088985919952393
    3. ' space' → logprob: -9.28389835357666
    4. ' not' → logprob: -9.90889835357666
    5. '  ' → logprob: -10.03389835357666
    6. ' (' → logprob: -11.40889835357666
    7. ' i' → logprob: -11.65889835357666
    8. ' a' → logprob: -11.78389835357666
    9. ' ‌' → logprob: -12.03389835357666
    10. ' n' → logprob: -12.15889835357666

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010243061929941177
    2. ' :' → logprob: -4.885242938995361
    3. '():' → logprob: -6.010242938995361
    4. '(' → logprob: -9.88524341583252
    5. '):' → logprob: -10.76024341583252
    6. '   ' → logprob: -10.88524341583252
    7. ':
' → logprob: -11.26024341583252
    8. ':**' → logprob: -11.38524341583252
    9. '(:' → logprob: -11.38524341583252
    10. ' ():' → logprob: -12.01024341583252

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12921257317066193
    2. ' input' → logprob: -2.7542126178741455
    3. ' ' → logprob: -4.254212379455566
    4. ' 
' → logprob: -4.754212379455566
    5. '    
' → logprob: -4.879212379455566
    6. ' )' → logprob: -5.004212379455566
    7. 'input' → logprob: -5.754212379455566
    8. '    ' → logprob: -5.879212379455566
    9. 'n' → logprob: -6.004212379455566
    10. ' n' → logprob: -6.254212379455566

Token 47: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2539564371109009
    2. ' user' → logprob: -1.7539564371109009
    3. ' num' → logprob: -2.0039563179016113
    4. 'n' (adapté à ' n') → logprob: -2.0039563179016113
    5. ' inp' → logprob: -2.3789563179016113
    6. ' try' → logprob: -2.7539563179016113
    7. 'num' → logprob: -3.5039563179016113
    8. 'user' → logprob: -4.003956317901611
    9. ' number' → logprob: -4.378956317901611
    10. ' ' → logprob: -4.378956317901611

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03307267650961876
    2. ' ' → logprob: -3.5330727100372314
    3. '=' → logprob: -6.158072471618652
    4. '  ' → logprob: -7.533072471618652
    5. 'o' → logprob: -8.158072471618652
    6. 'u' → logprob: -8.658072471618652
    7. '   ' → logprob: -9.158072471618652
    8. 'um' → logprob: -9.908072471618652
    9. 'umber' → logprob: -11.408072471618652
    10. '_' → logprob: -12.158072471618652

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.43900561332702637
    2. ' input' → logprob: -1.0640056133270264
    3. 'int' → logprob: -4.9390058517456055
    4. 'input' → logprob: -5.8140058517456055
    5. ' ' → logprob: -9.814005851745605
    6. ' in' → logprob: -10.064005851745605
    7. ' inp' → logprob: -13.064005851745605
    8. ' 
' → logprob: -13.314005851745605
    9. '=int' → logprob: -14.189005851745605
    10. ' ' → logprob: -14.689005851745605

Token 50: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4741227924823761
    2. '(' → logprob: -0.9741227626800537
    3. 'input' → logprob: -10.349123001098633
    4. '()' → logprob: -11.724123001098633
    5. ' (' → logprob: -13.474123001098633
    6. ' input' → logprob: -13.849123001098633
    7. '(
' → logprob: -14.224123001098633
    8. '=input' → logprob: -14.724123001098633
    9. '(inp' → logprob: -14.974123001098633
    10. '(raw' → logprob: -15.224123001098633

Token 51: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36157408356666565
    2. '(' → logprob: -1.4865740537643433
    3. '('' → logprob: -2.736574172973633
    4. '("("' → logprob: -4.861574172973633
    5. '("' → logprob: -5.986574172973633
    6. '("")' → logprob: -6.736574172973633
    7. '())' → logprob: -7.236574172973633
    8. '(">' → logprob: -8.861574172973633
    9. '(""))' → logprob: -9.861574172973633
    10. ')' → logprob: -10.611574172973633

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5917230248451233
    2. ' ' → logprob: -1.4667229652404785
    3. ' if' → logprob: -1.9667229652404785
    4. '    ' → logprob: -3.0917229652404785
    5. ':' → logprob: -4.3417229652404785
    6. '<|end|>' → logprob: -4.7167229652404785
    7. ')' → logprob: -6.3417229652404785
    8. '  ' → logprob: -6.8417229652404785
    9. ' 
' → logprob: -6.9667229652404785
    10. 'if' → logprob: -7.0917229652404785

Token 53: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1143966093659401
    2. ' if' → logprob: -2.239396572113037
    3. 'if' (adapté à ' if') → logprob: -7.614396572113037
    4. '    ' → logprob: -7.864396572113037
    5. ' )' → logprob: -8.739397048950195
    6. '<|end|>' → logprob: -9.239397048950195
    7. '   ' → logprob: -9.489397048950195
    8. '  ' → logprob: -9.489397048950195
    9. ' 
' → logprob: -9.614397048950195
    10. ' ,' → logprob: -9.989397048950195

Token 54: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.002387898974120617
    2. ' ' → logprob: -6.127388000488281
    3. ' not' → logprob: -8.752388000488281
    4. 'n' → logprob: -10.127388000488281
    5. ' ' → logprob: -12.377388000488281
    6. '	n' → logprob: -15.377388000488281
    7. 'not' → logprob: -16.62738800048828
    8. '  ' → logprob: -17.00238800048828
    9. ' (' → logprob: -18.12738800048828
    10. '<|end|>' → logprob: -18.12738800048828

Token 55: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.37251874804496765
    2. ' <=' → logprob: -1.24751877784729
    3. ' <' → logprob: -3.99751877784729
    4. '==' → logprob: -5.997518539428711
    5. ' ' → logprob: -6.122518539428711
    6. '<=' → logprob: -7.497518539428711
    7. '<' → logprob: -9.747518539428711
    8. ' >' → logprob: -9.872518539428711
    9. ' %' → logprob: -10.372518539428711
    10. '%' → logprob: -11.247518539428711

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001033999491482973
    2. '0' → logprob: -6.876033782958984
    3. ' -' → logprob: -13.626033782958984
    4. '  ' → logprob: -18.376033782958984
    5. '-' → logprob: -18.376033782958984
    6. ' ' → logprob: -18.813533782958984
    7. ' break' → logprob: -19.563533782958984
    8. ' 
' → logprob: -19.563533782958984
    9. '<|end|>' → logprob: -19.938533782958984
    10. ' )' → logprob: -20.063533782958984

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0041020275093615055
    2. '-' → logprob: -5.6291022300720215
    3. ' ' → logprob: -7.6291022300720215
    4. ' -' → logprob: -11.254101753234863
    5. '42' → logprob: -13.879101753234863
    6. '```' → logprob: -14.004101753234863
    7. '   ' → logprob: -15.379101753234863
    8. '1' → logprob: -15.941601753234863
    9. '  ' → logprob: -16.06660270690918
    10. '999' → logprob: -16.37910270690918

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008846574346534908
    2. ':
' → logprob: -7.250884532928467
    3. ' :' → logprob: -8.750885009765625
    4. '   ' → logprob: -11.375885009765625
    5. ' :
' → logprob: -12.625885009765625
    6. '       ' → logprob: -14.250885009765625
    7. ':return' → logprob: -14.625885009765625
    8. '    ' → logprob: -15.375885009765625
    9. '):' → logprob: -16.375885009765625
    10. '():' → logprob: -17.250885009765625

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005742399953305721
    2. '   ' → logprob: -7.750574111938477
    3. ' break' → logprob: -9.625574111938477
    4. ':' → logprob: -10.875574111938477
    5. ' ' → logprob: -11.750574111938477
    6. '	break' → logprob: -11.750574111938477
    7. '    ' → logprob: -11.875574111938477
    8. ' ' → logprob: -12.000574111938477
    9. '      ' → logprob: -12.000574111938477
    10. '     ' → logprob: -12.250574111938477

Token 60: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2678773105144501
    2. '       ' → logprob: -2.2678773403167725
    3. 'break' (adapté à ' break') → logprob: -2.2678773403167725
    4. '   ' → logprob: -3.6428773403167725
    5. '	break' → logprob: -6.392877101898193
    6. '```' → logprob: -10.642877578735352
    7. ' ' → logprob: -11.017877578735352
    8. '
' → logprob: -11.392877578735352
    9. '_break' → logprob: -11.767877578735352
    10. '           ' → logprob: -11.892877578735352

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9119519591331482
    2. ':' → logprob: -1.411952018737793
    3. ' 
' → logprob: -1.661952018737793
    4. '   ' → logprob: -2.786952018737793
    5. '    
' → logprob: -3.661952018737793
    6. '<|end|>' → logprob: -3.661952018737793
    7. ':
' → logprob: -4.286952018737793
    8. '  
' → logprob: -4.411952018737793
    9. ' ' → logprob: -4.786952018737793
    10. '\n' → logprob: -5.536952018737793

Token 62: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8594968318939209
    2. '
' → logprob: -1.109496831893921
    3. '    
' → logprob: -2.234496831893921
    4. '   ' → logprob: -2.359496831893921
    5. '  
' → logprob: -3.609496831893921
    6. '   
' → logprob: -4.9844970703125
    7. ' if' → logprob: -5.1094970703125
    8. '     
' → logprob: -5.9844970703125
    9. '    ' → logprob: -7.6094970703125
    10. '<|end|>' → logprob: -7.7344970703125

Token 63: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7318392395973206
    2. ' 
' → logprob: -0.7318392395973206
    3. '  
' → logprob: -4.106839179992676
    4. ' if' → logprob: -5.106839179992676
    5. '     
' → logprob: -5.231839179992676
    6. '    ' → logprob: -5.731839179992676
    7. '    
' → logprob: -6.356839179992676
    8. '   
' → logprob: -6.731839179992676
    9. '
' → logprob: -7.606839179992676
    10. '   ' → logprob: -7.856839179992676

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32891538739204407
    2. ' ' → logprob: -1.9539153575897217
    3. '_' → logprob: -2.8289153575897217
    4. '(' → logprob: -3.0789153575897217
    5. '=' → logprob: -3.5789153575897217
    6. ' +=' → logprob: -5.703915596008301
    7. '_space' → logprob: -7.578915596008301
    8. ')' → logprob: -7.953915596008301
    9. ',' → logprob: -8.3289155960083
    10. ' _' → logprob: -8.7039155960083

Token 65: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03816944360733032
    2. '0' → logprob: -3.2881693840026855
    3. ' sum' → logprob: -9.163169860839844
    4. '1' → logprob: -11.288169860839844
    5. 'sum' → logprob: -11.663169860839844
    6. ' ' → logprob: -14.288169860839844
    7. '20' → logprob: -15.288169860839844
    8. '2' → logprob: -15.288169860839844
    9. 's' → logprob: -16.163169860839844
    10. ' n' → logprob: -16.288169860839844

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006533435662277043
    2. ' ' → logprob: -7.625653266906738
    3. 'sum' → logprob: -8.750653266906738
    4. ' sum' → logprob: -12.625653266906738
    5. '1' → logprob: -13.500653266906738
    6. '2' → logprob: -14.500653266906738
    7. '   ' → logprob: -14.625653266906738
    8. '  ' → logprob: -15.563153266906738
    9. '=' → logprob: -16.063154220581055
    10. '```' → logprob: -16.313154220581055

Token 67: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7048283815383911
    2. '<|end|>' → logprob: -0.7048283815383911
    3. '    ' → logprob: -5.579828262329102
    4. '<|end|>' → logprob: -5.829828262329102
    5. '   ' → logprob: -5.954828262329102
    6. ' 
' → logprob: -6.829828262329102
    7. '  ' → logprob: -7.829828262329102
    8. ' for' → logprob: -8.079828262329102
    9. ' ,' → logprob: -9.329828262329102
    10. ')' → logprob: -9.579828262329102

Token 68: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' sum' (ID: 4215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10055709630250931
    2. ' for' → logprob: -2.3505570888519287
    3. '   ' → logprob: -8.350557327270508
    4. 'i' → logprob: -10.100557327270508
    5. ' i' → logprob: -11.225557327270508
    6. '    ' → logprob: -11.225557327270508
    7. '  ' → logprob: -11.350557327270508
    8. 'current' → logprob: -11.475557327270508
    9. ' ' → logprob: -12.475557327270508
    10. 'start' → logprob: -12.475557327270508

Token 70: '_pr' (ID: 18177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3226323127746582
    2. ' =' → logprob: -1.6976323127746582
    3. '=' → logprob: -2.447632312774658
    4. '_=' → logprob: -6.072632312774658
    5. '_of' → logprob: -6.947632312774658
    6. '_prime' → logprob: -7.947632312774658
    7. '   ' → logprob: -7.947632312774658
    8. '_num' → logprob: -8.0726318359375
    9. '(' → logprob: -8.1976318359375
    10. 's' → logprob: -8.5726318359375

Token 71: 'imes' (ID: 2332)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.14595964550971985
    2. 'imes' → logprob: -2.0209596157073975
    3. '   ' → logprob: -6.895959854125977
    4. 'im' → logprob: -7.645959854125977
    5. 'i' → logprob: -8.270959854125977
    6. '```' → logprob: -8.645959854125977
    7. ' ' → logprob: -9.020959854125977
    8. '    ' → logprob: -9.458459854125977
    9. 'omes' → logprob: -9.520959854125977
    10. '>' → logprob: -9.708459854125977

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020894760265946388
    2. '=' → logprob: -3.895894765853882
    3. ' +=' → logprob: -8.020895004272461
    4. ' ' → logprob: -10.895895004272461
    5. '+=' → logprob: -13.020895004272461
    6. '  ' → logprob: -14.020895004272461
    7. ',' → logprob: -14.520895004272461
    8. ' ,' → logprob: -14.645895004272461
    9. '_' → logprob: -15.270895004272461
    10. '+' → logprob: -15.395895004272461

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1128234788775444
    2. ' ' → logprob: -2.237823486328125
    3. '   ' → logprob: -14.237823486328125
    4. '  ' → logprob: -15.612823486328125
    5. ' ' → logprob: -16.362823486328125
    6. '<|end|>' → logprob: -16.987823486328125
    7. '1' → logprob: -17.112823486328125
    8. '+' → logprob: -18.175323486328125
    9. '    ' → logprob: -18.362823486328125
    10. '=' → logprob: -18.487823486328125

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017027945723384619
    2. ' ' → logprob: -6.376702785491943
    3. '   ' → logprob: -15.376703262329102
    4. '1' → logprob: -16.0017032623291
    5. '  ' → logprob: -16.8767032623291
    6. '=' → logprob: -16.9392032623291
    7. '+' → logprob: -17.1892032623291
    8. 'sum' → logprob: -17.1892032623291
    9. '۰' → logprob: -18.1267032623291
    10. '>' → logprob: -18.1892032623291

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37864089012145996
    2. '<|end|>' → logprob: -2.12864089012146
    3. '
' → logprob: -2.25364089012146
    4. ' 
' → logprob: -3.25364089012146
    5. '    
' → logprob: -3.37864089012146
    6. ' ' → logprob: -4.378641128540039
    7. '<|end|>' → logprob: -6.253641128540039
    8. '    ' → logprob: -6.503641128540039
    9. ' for' → logprob: -7.378641128540039
    10. '  
' → logprob: -7.753641128540039

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9299749732017517
    2. '
' → logprob: -1.0549750328063965
    3. '<|end|>' → logprob: -1.5549750328063965
    4. ' ' → logprob: -4.1799750328063965
    5. ' 
' → logprob: -4.4299750328063965
    6. ' for' → logprob: -5.1799750328063965
    7. '    
' → logprob: -5.4299750328063965
    8. '  
' → logprob: -6.1799750328063965
    9. '    ' → logprob: -6.1799750328063965
    10. '<|end|>' → logprob: -6.5549750328063965

Token 77: ' num' (ID: 2269)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5802937150001526
    2. '   ' → logprob: -0.8302937150001526
    3. ' for' → logprob: -5.455293655395508
    4. 'i' → logprob: -11.080293655395508
    5. '  ' → logprob: -11.080293655395508
    6. 'while' → logprob: -11.330293655395508
    7. '    
' → logprob: -11.455293655395508
    8. '    ' → logprob: -12.205293655395508
    9. '	for' → logprob: -12.455293655395508
    10. ' ' → logprob: -12.705293655395508

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2823581099510193
    2. '=' → logprob: -1.407358169555664
    3. 's' → logprob: -6.782358169555664
    4. '_' → logprob: -10.407358169555664
    5. ' ' → logprob: -10.907358169555664
    6. '1' → logprob: -12.032358169555664
    7. '    ' → logprob: -13.282358169555664
    8. '  ' → logprob: -13.282358169555664
    9. ')' → logprob: -13.407358169555664
    10. '   ' → logprob: -13.407358169555664

Token 79: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0584030151367188
    2. '1' → logprob: -1.1834030151367188
    3. ' ' → logprob: -1.4334030151367188
    4. '2' → logprob: -2.8084030151367188
    5. 'n' → logprob: -3.0584030151367188
    6. '0' → logprob: -7.683403015136719
    7. '   ' → logprob: -8.058403015136719
    8. '10' → logprob: -10.058403015136719
    9. '100' → logprob: -10.870903015136719
    10. '    ' → logprob: -11.495903015136719

Token 80: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24673236906528473
    2. '1' → logprob: -1.8717323541641235
    3. 'n' → logprob: -2.746732473373413
    4. '0' → logprob: -7.621732234954834
    5. ' ' → logprob: -10.371732711791992
    6. ' n' → logprob: -10.621732711791992
    7. '3' → logprob: -10.621732711791992
    8. '10' → logprob: -10.996732711791992
    9. '100' → logprob: -11.121732711791992
    10. '   ' → logprob: -11.371732711791992

Token 81: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9688196182250977
    2. ' ' → logprob: -1.4688196182250977
    3. '
' → logprob: -1.7188196182250977
    4. '<|end|>' → logprob: -1.8438196182250977
    5. '  
' → logprob: -4.093819618225098
    6. ':' → logprob: -4.593819618225098
    7. ',' → logprob: -5.468819618225098
    8. '<|end|>' → logprob: -5.593819618225098
    9. ' while' → logprob: -5.718819618225098
    10. ' ,' → logprob: -5.843819618225098

Token 82: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06095496565103531
    2. ' 
' → logprob: -3.310955047607422
    3. '<|end|>' → logprob: -4.560955047607422
    4. '  
' → logprob: -5.560955047607422
    5. ':' → logprob: -5.810955047607422
    6. ' while' → logprob: -6.560955047607422
    7. '   ' → logprob: -6.810955047607422
    8. '   
' → logprob: -7.310955047607422
    9. ' ' → logprob: -7.310955047607422
    10. 'while' → logprob: -7.685955047607422

Token 83: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.22931107878684998
    2. '   ' → logprob: -2.854310989379883
    3. ' 
' → logprob: -2.854310989379883
    4. ' ' → logprob: -2.979310989379883
    5. 'while' (adapté à ' while') → logprob: -3.354310989379883
    6. '    ' → logprob: -6.729310989379883
    7. '    
' → logprob: -7.354310989379883
    8. '	while' → logprob: -7.479310989379883
    9. '  ' → logprob: -7.729310989379883
    10. '   
' → logprob: -8.229310989379883

Token 84: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6205119490623474
    2. ' sum' → logprob: -1.6205120086669922
    3. ' num' → logprob: -1.6205120086669922
    4. 'count' → logprob: -3.245512008666992
    5. 'num' → logprob: -4.245512008666992
    6. 'sum' → logprob: -4.745512008666992
    7. ' True' → logprob: -5.620512008666992
    8. 'True' → logprob: -7.495512008666992
    9. ' n' → logprob: -8.620512008666992
    10. ' ' → logprob: -9.245512008666992

Token 85: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00332802627235651
    2. '<' → logprob: -5.7533278465271
    3. ' <=' → logprob: -9.378328323364258
    4. ' ' → logprob: -9.753328323364258
    5. '<n' → logprob: -12.753328323364258
    6. '<num' → logprob: -13.503328323364258
    7. '<=' → logprob: -14.253328323364258
    8. '<len' → logprob: -14.378328323364258
    9. '<count' → logprob: -14.503328323364258
    10. '   ' → logprob: -15.128328323364258

Token 86: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0486256368458271
    2. 'n' → logprob: -3.0486257076263428
    3. '<|end|>' → logprob: -10.923625946044922
    4. '	n' → logprob: -11.298625946044922
    5. '<|end|>' → logprob: -13.173625946044922
    6. ' ' → logprob: -13.173625946044922
    7. '2' → logprob: -14.798625946044922
    8. '<n' → logprob: -14.923625946044922
    9. ' ' → logprob: -14.923625946044922
    10. ' н' → logprob: -15.298625946044922

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006151011912152171
    2. ':
' → logprob: -8.250615119934082
    3. ' and' → logprob: -8.500615119934082
    4. ' :' → logprob: -8.875615119934082
    5. 'and' → logprob: -11.875615119934082
    6. '):' → logprob: -14.125615119934082
    7. ' or' → logprob: -14.500615119934082
    8. '   ' → logprob: -14.750615119934082
    9. ' :
' → logprob: -14.875615119934082
    10. ':

' → logprob: -15.000615119934082

Token 88: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5450111627578735
    2. '       ' → logprob: -1.0450111627578735
    3. '<|end|>' → logprob: -3.170011043548584
    4. ' :' → logprob: -4.795011043548584
    5. ' ' → logprob: -5.045011043548584
    6. ':
' → logprob: -5.795011043548584
    7. '   ' → logprob: -5.920011043548584
    8. ' 
' → logprob: -6.670011043548584
    9. '<|end|>' → logprob: -6.795011043548584
    10. ',' → logprob: -7.170011043548584

Token 89: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.307265043258667
    2. ' 
' → logprob: -2.057265043258667
    3. ' if' → logprob: -2.432265043258667
    4. '<|end|>' → logprob: -3.432265043258667
    5. 'if' (adapté à ' if') → logprob: -4.682265281677246
    6. '       ' → logprob: -6.182265281677246
    7. '    ' → logprob: -6.432265281677246
    8. '   ' → logprob: -6.682265281677246
    9. '<|end|>' → logprob: -8.307265281677246
    10. '  
' → logprob: -8.307265281677246

Token 90: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00042686203960329294
    2. ' ' → logprob: -8.00042724609375
    3. 'is' → logprob: -9.75042724609375
    4. ' ' → logprob: -10.37542724609375
    5. ' 
' → logprob: -14.50042724609375
    6. ' not' → logprob: -15.25042724609375
    7. '<|end|>' → logprob: -15.25042724609375
    8. ' (' → logprob: -15.37542724609375
    9. '	is' → logprob: -15.75042724609375
    10. '  ' → logprob: -16.12542724609375

Token 91: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.05451919510960579
    2. '_' → logprob: -3.0545191764831543
    3. '_pr' → logprob: -5.429519176483154
    4. ' _' → logprob: -6.554519176483154
    5. '_p' → logprob: -9.554519653320312
    6. '_Pr' → logprob: -11.804519653320312
    7. ''_' → logprob: -12.179519653320312
    8. ' ' → logprob: -12.679519653320312
    9. '_pal' → logprob: -12.804519653320312
    10. '_pi' → logprob: -12.929519653320312

Token 92: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.048594068735837936
    2. '(' → logprob: -3.0485939979553223
    3. '(n' → logprob: -12.67359447479248
    4. ' (' → logprob: -12.92359447479248
    5. '(number' → logprob: -14.92359447479248
    6. '(nums' → logprob: -15.04859447479248
    7. '<num' → logprob: -15.79859447479248
    8. '(
' → logprob: -16.173593521118164
    9. '(numero' → logprob: -16.298593521118164
    10. ' num' → logprob: -17.173593521118164

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006148627726361156
    2. ':' → logprob: -8.250615119934082
    3. ')' → logprob: -8.750615119934082
    4. ' ):' → logprob: -8.875615119934082
    5. '):
' → logprob: -9.875615119934082
    6. '():' → logprob: -13.750615119934082
    7. '   ' → logprob: -14.125615119934082
    8. '):

' → logprob: -15.000615119934082
    9. ' and' → logprob: -15.250615119934082
    10. ' ' → logprob: -15.375615119934082

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7372680902481079
    2. '       ' → logprob: -1.237268090248108
    3. '<|end|>' → logprob: -1.987268090248108
    4. ' ' → logprob: -2.8622679710388184
    5. ' 
' → logprob: -4.487267971038818
    6. '```' → logprob: -5.237267971038818
    7. '        ' → logprob: -5.487267971038818
    8. '        
' → logprob: -5.862267971038818
    9. '
' → logprob: -6.112267971038818
    10. ':' → logprob: -6.362267971038818

Token 95: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.30513086915016174
    2. ' 
' → logprob: -2.180130958557129
    3. 'sum' (adapté à ' sum') → logprob: -2.680130958557129
    4. '       ' → logprob: -3.180130958557129
    5. ' ' → logprob: -4.930130958557129
    6. ' count' → logprob: -4.930130958557129
    7. '   ' → logprob: -4.930130958557129
    8. '           ' → logprob: -5.055130958557129
    9. 'count' → logprob: -5.930130958557129
    10. ' ' → logprob: -6.180130958557129

Token 96: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.08973309397697449
    2. '_' → logprob: -2.464733123779297
    3. ' _' → logprob: -7.339733123779297
    4. '_p' → logprob: -9.714733123779297
    5. '_Pr' → logprob: -10.964733123779297
    6. '+' → logprob: -11.464733123779297
    7. ' +=' → logprob: -11.464733123779297
    8. '_pro' → logprob: -12.214733123779297
    9. '_prime' → logprob: -12.339733123779297
    10. ' ' → logprob: -12.964733123779297

Token 97: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.003563846228644252
    2. 'ime' → logprob: -7.00356388092041
    3. 'im' → logprob: -7.50356388092041
    4. 'mes' → logprob: -7.62856388092041
    5. 'i' → logprob: -7.75356388092041
    6. '   ' → logprob: -8.25356388092041
    7. 'omes' → logprob: -8.37856388092041
    8. '#' → logprob: -9.37856388092041
    9. '+' → logprob: -10.06606388092041
    10. 'es' → logprob: -10.56606388092041

Token 98: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.003179259831085801
    2. '+=' → logprob: -5.75317907333374
    3. '+' → logprob: -14.003179550170898
    4. ' +' → logprob: -14.753179550170898
    5. '    ' → logprob: -16.0031795501709
    6. ']+=' → logprob: -16.1281795501709
    7. '   ' → logprob: -16.8781795501709
    8. ' ' → logprob: -17.6281795501709
    9. '+=(' → logprob: -17.6281795501709
    10. ' -=' → logprob: -17.6281795501709

Token 99: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.004078878089785576
    2. 'num' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.12907886505127
    4. '	num' → logprob: -16.754079818725586
    5. '(num' → logprob: -17.129079818725586
    6. '<num' → logprob: -17.629079818725586
    7. ' ' → logprob: -17.754079818725586
    8. '1' → logprob: -19.379079818725586
    9. '=num' → logprob: -19.629079818725586
    10. 'n' → logprob: -19.629079818725586

Token 100: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38745689392089844
    2. '
' → logprob: -1.1374568939208984
    3. ' 
' → logprob: -8.762456893920898
    4. '            
' → logprob: -8.887456893920898
    5. '
' → logprob: -9.262456893920898
    6. '       ' → logprob: -9.637456893920898
    7. '  
' → logprob: -10.262456893920898
    8. '    
' → logprob: -10.387456893920898
    9. '<|end|>' → logprob: -11.012456893920898
    10. '        
' → logprob: -11.637456893920898

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05837778002023697
    2. '
' → logprob: -3.058377742767334
    3. '            
' → logprob: -5.058377742767334
    4. ' 
' → logprob: -6.058377742767334
    5. '        
' → logprob: -7.683377742767334
    6. '    
' → logprob: -8.933378219604492
    7. '       ' → logprob: -9.308378219604492
    8. '           
' → logprob: -9.308378219604492
    9. '   
' → logprob: -9.808378219604492
    10. '  
' → logprob: -10.058378219604492

Token 102: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.20220480859279633
    2. ' count' → logprob: -1.7022048234939575
    3. '           ' → logprob: -7.202204704284668
    4. '       ' → logprob: -11.077204704284668
    5. '   ' → logprob: -11.327204704284668
    6. '	count' → logprob: -11.452204704284668
    7. ' ' → logprob: -12.702204704284668
    8. '
' → logprob: -13.202204704284668
    9. '_count' → logprob: -14.452204704284668
    10. '.count' → logprob: -14.952204704284668

Token 103: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0027040657587349415
    2. '+=' → logprob: -6.00270414352417
    3. '+' → logprob: -9.002703666687012
    4. ' ' → logprob: -9.627703666687012
    5. '<|end|>' → logprob: -10.377703666687012
    6. ' +' → logprob: -11.877703666687012
    7. '  ' → logprob: -15.877703666687012
    8. '++' → logprob: -15.877703666687012
    9. '```' → logprob: -15.877703666687012
    10. '<|end|>' → logprob: -16.002704620361328

Token 104: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3868711292743683
    2. '1' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.511871337890625
    4. '<|end|>' → logprob: -17.886871337890625
    5. '```' → logprob: -19.886871337890625
    6. ' one' → logprob: -20.511871337890625
    7. '۱' → logprob: -20.886871337890625
    8. '１' → logprob: -21.949371337890625
    9. ' 
' → logprob: -21.949371337890625
    10. ')' → logprob: -22.324371337890625

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -21.125036239624023
    4. '```' → logprob: -22.625036239624023
    5. '  ' → logprob: -23.250036239624023
    6. ' ' → logprob: -24.125036239624023
    7. '۱' → logprob: -24.375036239624023
    8. '<|end|>' → logprob: -24.500036239624023
    9. '2' → logprob: -24.625036239624023
    10. '１' → logprob: -24.750036239624023

Token 106: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11389132589101791
    2. '
' → logprob: -2.238891363143921
    3. '   ' → logprob: -7.238891124725342
    4. '        
' → logprob: -8.9888916015625
    5. ' 
' → logprob: -9.2388916015625
    6. '    
' → logprob: -9.6138916015625
    7. '
' → logprob: -10.6138916015625
    8. '  
' → logprob: -11.6138916015625
    9. '           ' → logprob: -11.9888916015625
    10. '\n' → logprob: -12.1138916015625

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00988263264298439
    2. '
' → logprob: -4.75988245010376
    3. '   ' → logprob: -6.75988245010376
    4. '        
' → logprob: -10.384882926940918
    5. '           ' → logprob: -10.509882926940918
    6. ' 
' → logprob: -10.884882926940918
    7. '    
' → logprob: -10.884882926940918
    8. '
' → logprob: -13.009882926940918
    9. '\n' → logprob: -13.134882926940918
    10. '' → logprob: -13.634882926940918

Token 108: ' num' (ID: 2269)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38760140538215637
    2. '   ' → logprob: -1.137601375579834
    3. 'num' (adapté à ' num') → logprob: -7.762601375579834
    4. '
' → logprob: -8.887601852416992
    5. ' num' → logprob: -8.887601852416992
    6. ' ' → logprob: -11.887601852416992
    7. '	num' → logprob: -12.262601852416992
    8. '    
' → logprob: -13.012601852416992
    9. '	' → logprob: -13.012601852416992
    10. 'n' → logprob: -13.262601852416992

Token 109: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7002615332603455
    2. '+=' → logprob: -0.7002615332603455
    3. '+' → logprob: -4.95026159286499
    4. ' ' → logprob: -12.700261116027832
    5. '+="' → logprob: -13.575261116027832
    6. '+='' → logprob: -13.700261116027832
    7. '<|end|>' → logprob: -14.450261116027832
    8. '=' → logprob: -14.450261116027832
    9. ' +' → logprob: -14.950261116027832
    10. '++' → logprob: -15.325261116027832

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '```' → logprob: -17.625553131103516
    4. '  ' → logprob: -18.750553131103516
    5. '   ' → logprob: -18.750553131103516
    6. '2' → logprob: -18.875553131103516
    7. ' ' → logprob: -19.000553131103516
    8. '<|end|>' → logprob: -19.250553131103516
    9. '１' → logprob: -20.438053131103516
    10. '3' → logprob: -20.563053131103516

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -17.7500057220459
    4. '```' → logprob: -18.4375057220459
    5. '  ' → logprob: -19.8125057220459
    6. '   ' → logprob: -19.8750057220459
    7. '2' → logprob: -19.9375057220459
    8. '१' → logprob: -20.0625057220459
    9. '۱' → logprob: -20.3125057220459
    10. '１' → logprob: -20.3125057220459

Token 112: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1366669088602066
    2. '   ' → logprob: -2.136667013168335
    3. '    
' → logprob: -5.261666774749756
    4. 'print' → logprob: -5.511666774749756
    5. '<|end|>' → logprob: -8.386667251586914
    6. '  
' → logprob: -9.261667251586914
    7. ' print' → logprob: -10.511667251586914
    8. '
' → logprob: -10.886667251586914
    9. '   
' → logprob: -11.011667251586914
    10. '\n' → logprob: -11.136667251586914

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16609817743301392
    2. 'print' → logprob: -2.166098117828369
    3. '
' → logprob: -3.291098117828369
    4. '    
' → logprob: -6.916098117828369
    5. '```' → logprob: -9.291098594665527
    6. ' print' → logprob: -9.541098594665527
    7. '<|end|>' → logprob: -11.291098594665527
    8. '  
' → logprob: -11.791098594665527
    9. '        
' → logprob: -12.166098594665527
    10. '	print' → logprob: -12.791098594665527

Token 114: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04967372864484787
    2. '   ' → logprob: -3.0496737957000732
    3. ' print' → logprob: -7.549673557281494
    4. '
' → logprob: -7.549673557281494
    5. '```' → logprob: -10.674674034118652
    6. '    
' → logprob: -11.799674034118652
    7. '

' → logprob: -13.924674034118652
    8. '
' → logprob: -14.424674034118652
    9. '	print' → logprob: -15.424674034118652
    10. '`' → logprob: -15.799674034118652

Token 115: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.20157073438167572
    2. '(' → logprob: -1.701570749282837
    3. '()' → logprob: -9.951570510864258
    4. '('' → logprob: -10.451570510864258
    5. '(f' → logprob: -10.701570510864258
    6. '(s' → logprob: -10.701570510864258
    7. ' (' → logprob: -10.826570510864258
    8. 'sum' → logprob: -12.076570510864258
    9. '("' → logprob: -12.576570510864258
    10. '((' → logprob: -13.201570510864258

Token 116: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.00016027313540689647
    2. '_' → logprob: -8.750160217285156
    3. ' _' → logprob: -14.875160217285156
    4. '_p' → logprob: -15.000160217285156
    5. '_Pr' → logprob: -15.250160217285156
    6. '(_' → logprob: -15.375160217285156
    7. '(' → logprob: -15.625160217285156
    8. '(pr' → logprob: -16.000160217285156
    9. '_)' → logprob: -16.125160217285156
    10. ')' → logprob: -16.500160217285156

Token 117: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.16347536444664001
    2. 'mes' → logprob: -1.9134753942489624
    3. 'ime' → logprob: -7.038475513458252
    4. '_' → logprob: -7.538475513458252
    5. '_mes' → logprob: -8.038475036621094
    6. 'im' → logprob: -8.163475036621094
    7. 'es' → logprob: -8.538475036621094
    8. 'me' → logprob: -8.663475036621094
    9. 'omes' → logprob: -9.600975036621094
    10. '   ' → logprob: -9.913475036621094

Token 118: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.250001907348633
    3. ')
' → logprob: -14.625001907348633
    4. ')`' → logprob: -18.250001907348633
    5. '))' → logprob: -18.875001907348633
    6. '')' → logprob: -19.125001907348633
    7. '`)' → logprob: -19.875001907348633
    8. '()' → logprob: -20.000001907348633
    9. ')

' → logprob: -20.500001907348633
    10. '")' → logprob: -20.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 116
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 71
Tokens correctement prédits (top 10): 106
Précision stricte (1ère position): 57.76%
Précision adaptée (1ère position): 61.21%
Précision (top 10): 91.38%
================================================================================
