================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = list(map(int, input().split()))

for dice_faces in range(1, N + 2):
    pos = 0
    visited = [False] * (N + 2)
    while pos < N + 1:
        pos += dice_faces
        if pos <= N and A[pos - 1] == 1:
            break
    else:
        print(dice_faces)
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.346993088722229
    2. ')' → logprob: -1.346993088722229
    3. '()' → logprob: -3.5969929695129395
    4. '())' → logprob: -5.3469929695129395
    5. '(
' → logprob: -8.096993446350098
    6. '```' → logprob: -9.221993446350098
    7. '))' → logprob: -9.346993446350098
    8. '")' → logprob: -9.596993446350098
    9. '('' → logprob: -9.721993446350098
    10. '(

' → logprob: -9.971993446350098

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.716027557849884
    2. 'if' → logprob: -1.2160274982452393
    3. '\n' → logprob: -2.5910274982452393
    4. 's' → logprob: -3.7160274982452393
    5. 'i' → logprob: -3.8410274982452393
    6. 'x' → logprob: -4.216027736663818
    7. '```' → logprob: -4.341027736663818
    8. '`' → logprob: -4.716027736663818
    9. 'a' → logprob: -4.716027736663818
    10. ')' → logprob: -4.966027736663818

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007823493797332048
    2. '[]' → logprob: -8.500782012939453
    3. '\[' → logprob: -9.125782012939453
    4. '.' → logprob: -9.250782012939453
    5. '[A' → logprob: -9.375782012939453
    6. '[i' → logprob: -9.500782012939453
    7. '[:]' → logprob: -9.750782012939453
    8. '+' → logprob: -10.250782012939453
    9. '=' → logprob: -10.750782012939453
    10. '[a' → logprob: -11.500782012939453

Token 7: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5184847712516785
    2. 'list' → logprob: -1.5184848308563232
    3. ' []' → logprob: -2.2684848308563232
    4. '[]' → logprob: -2.8934848308563232
    5. ' [' → logprob: -3.8934848308563232
    6. '[' → logprob: -5.518484592437744
    7. '[input' → logprob: -7.018484592437744
    8. '[list' → logprob: -7.518484592437744
    9. '[int' → logprob: -7.643484592437744
    10. 'input' → logprob: -8.643485069274902

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012844942102674395
    2. '(range' → logprob: -9.500128746032715
    3. '(input' → logprob: -11.375128746032715
    4. '(
' → logprob: -11.750128746032715
    5. '()' → logprob: -12.250128746032715
    6. ' (' → logprob: -12.500128746032715
    7. '[' → logprob: -13.000128746032715
    8. ')' → logprob: -13.000128746032715
    9. '(

' → logprob: -13.125128746032715
    10. '(A' → logprob: -13.125128746032715

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10335484147071838
    2. '(' → logprob: -2.6033549308776855
    3. '(str' → logprob: -3.9783549308776855
    4. '(input' → logprob: -5.7283549308776855
    5. '(lambda' → logprob: -6.9783549308776855
    6. ')' → logprob: -7.9783549308776855
    7. 'int' → logprob: -8.478354454040527
    8. '```' → logprob: -8.478354454040527
    9. '(eval' → logprob: -9.103354454040527
    10. '(
' → logprob: -9.478354454040527

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01914321444928646
    2. '(' → logprob: -4.394143104553223
    3. ',input' → logprob: -5.269143104553223
    4. ',' → logprob: -7.144143104553223
    5. ')' → logprob: -8.644143104553223
    6. '))' → logprob: -9.519143104553223
    7. '(int' → logprob: -9.769143104553223
    8. '=input' → logprob: -9.769143104553223
    9. 'input' → logprob: -10.019143104553223
    10. '<input' → logprob: -10.144143104553223

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0789729580283165
    2. ' input' → logprob: -2.5789730548858643
    3. '(input' → logprob: -9.453972816467285
    4. ',input' → logprob: -12.578972816467285
    5. ')' → logprob: -14.828972816467285
    6. '=input' → logprob: -14.953972816467285
    7. '<input' → logprob: -15.453972816467285
    8. ' ' → logprob: -15.703972816467285
    9. '	input' → logprob: -15.953972816467285
    10. '```' → logprob: -15.953972816467285

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.27297863364219666
    2. '()' → logprob: -1.772978663444519
    3. '())' → logprob: -3.0229785442352295
    4. '().' → logprob: -4.522978782653809
    5. '(' → logprob: -5.272978782653809
    6. '()));' → logprob: -6.022978782653809
    7. '))' → logprob: -7.522978782653809
    8. '())))' → logprob: -8.272978782653809
    9. '()>' → logprob: -8.397978782653809
    10. ')' → logprob: -8.522978782653809

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026979928952641785
    2. 'strip' → logprob: -8.250269889831543
    3. 'rstrip' → logprob: -12.125269889831543
    4. ' split' → logprob: -12.875269889831543
    5. '(split' → logprob: -15.125269889831543
    6. ')' → logprob: -16.375268936157227
    7. 'spl' → logprob: -17.125268936157227
    8. '```' → logprob: -19.125268936157227
    9. 'read' → logprob: -19.250268936157227
    10. 's' → logprob: -19.500268936157227

Token 14: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5542117953300476
    2. '()))' → logprob: -1.0542118549346924
    3. ')' → logprob: -2.9292118549346924
    4. '())' → logprob: -4.054211616516113
    5. '()' → logprob: -5.929211616516113
    6. '(' → logprob: -6.054211616516113
    7. '('' → logprob: -7.804211616516113
    8. ''))' → logprob: -7.804211616516113
    9. ')))' → logprob: -8.679211616516113
    10. '())))' → logprob: -9.929211616516113

Token 15: 'for' (ID: 1938)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5546284914016724
    2. 'max' → logprob: -1.8046284914016724
    3. 'count' → logprob: -2.054628372192383
    4. 'for' → logprob: -2.304628372192383
    5. 'A' → logprob: -2.804628372192383
    6. 'result' → logprob: -2.929628372192383
    7. 'sum' → logprob: -3.054628372192383
    8. 'dp' → logprob: -3.054628372192383
    9. 'c' → logprob: -3.929628372192383
    10. 'd' → logprob: -4.054628372192383

Token 16: ' dice' (ID: 22078)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005875702016055584
    2. '_' → logprob: -6.130875587463379
    3. 'i' → logprob: -6.380875587463379
    4. ' ' → logprob: -6.505875587463379
    5. ' _' → logprob: -7.755875587463379
    6. ' x' → logprob: -10.880875587463379
    7. ' a' → logprob: -11.880875587463379
    8. ' in' → logprob: -12.255875587463379
    9. '  ' → logprob: -12.255875587463379
    10. ' I' → logprob: -12.505875587463379

Token 17: '_faces' (ID: 158689)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43282851576805115
    2. 'in' → logprob: -1.0578285455703735
    3. 's' → logprob: -6.557828426361084
    4. '_' → logprob: -7.057828426361084
    5. ':' → logprob: -7.432828426361084
    6. ' ' → logprob: -8.057828903198242
    7. '_in' → logprob: -8.307828903198242
    8. ',' → logprob: -9.307828903198242
    9. '[' → logprob: -9.432828903198242
    10. '1' → logprob: -9.432828903198242

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5767369866371155
    2. 'in' → logprob: -0.8267369866371155
    3. ' ' → logprob: -7.826736927032471
    4. '_in' → logprob: -8.951737403869629
    5. '_' → logprob: -9.826737403869629
    6. 'i' → logprob: -10.326737403869629
    7. 's' → logprob: -10.576737403869629
    8. '  ' → logprob: -10.701737403869629
    9. '```' → logprob: -10.951737403869629
    10. '[' → logprob: -11.076737403869629

Token 19: ' range' (ID: 3352)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03422462195158005
    2. ' A' → logprob: -4.034224510192871
    3. 'range' → logprob: -4.284224510192871
    4. ' range' → logprob: -6.159224510192871
    5. '[' → logprob: -10.284224510192871
    6. '[A' → logprob: -12.534224510192871
    7. 'dice' → logprob: -12.784224510192871
    8. ' ' → logprob: -12.784224510192871
    9. ' [' → logprob: -13.659224510192871
    10. '(range' → logprob: -14.534224510192871

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. ' (' → logprob: -13.875001907348633
    3. '1' → logprob: -14.000001907348633
    4. '(
' → logprob: -16.500001907348633
    5. '(len' → logprob: -17.875001907348633
    6. '((' → logprob: -18.625001907348633
    7. 's' → logprob: -18.750001907348633
    8. '2' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.500001907348633
    10. '(i' → logprob: -19.750001907348633

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001550332992337644
    2. '6' → logprob: -6.751550197601318
    3. ' ' → logprob: -8.376550674438477
    4. '   ' → logprob: -10.001550674438477
    5. '2' → logprob: -10.126550674438477
    6. '(' → logprob: -11.751550674438477
    7. '3' → logprob: -11.876550674438477
    8. '4' → logprob: -12.126550674438477
    9. 'A' → logprob: -12.126550674438477
    10. '0' → logprob: -12.376550674438477

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007633008528500795
    2. ' ,' → logprob: -4.882633209228516
    3. ',N' → logprob: -11.882633209228516
    4. '1' → logprob: -11.882633209228516
    5. ' ' → logprob: -12.507633209228516
    6. '6' → logprob: -12.757633209228516
    7. ',len' → logprob: -13.382633209228516
    8. '7' → logprob: -14.257633209228516
    9. '4' → logprob: -14.507633209228516
    10. '0' → logprob: -14.632633209228516

Token 23: ' N' (ID: 478)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00013321757433004677
    2. ' ' → logprob: -9.375133514404297
    3. '100' → logprob: -11.000133514404297
    4. 'max' → logprob: -11.250133514404297
    5. '101' → logprob: -12.125133514404297
    6. '```' → logprob: -12.625133514404297
    7. '11' → logprob: -13.250133514404297
    8. 'M' → logprob: -13.375133514404297
    9. '6' → logprob: -13.625133514404297
    10. '8' → logprob: -14.000133514404297

Token 24: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42870771884918213
    2. ' +' → logprob: -1.0537077188491821
    3. ' ' → logprob: -12.55370807647705
    4. '*' → logprob: -15.05370807647705
    5. '1' → logprob: -15.05370807647705
    6. '6' → logprob: -15.42870807647705
    7. '):
' → logprob: -15.42870807647705
    8. ')+' → logprob: -15.42870807647705
    9. '2' → logprob: -15.55370807647705
    10. '):' → logprob: -15.55370807647705

Token 25: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011335576884448528
    2. ' ' → logprob: -4.511335372924805
    3. '2' → logprob: -8.261335372924805
    4. '7' → logprob: -11.261335372924805
    5. '6' → logprob: -11.386335372924805
    6. '+' → logprob: -13.136335372924805
    7. ')' → logprob: -13.636335372924805
    8. '11' → logprob: -14.761335372924805
    9. '  ' → logprob: -15.261335372924805
    10. '   ' → logprob: -15.386335372924805

Token 26: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019531534053385258
    2. ' ' → logprob: -8.625195503234863
    3. '2' → logprob: -11.375195503234863
    4. ')' → logprob: -13.937695503234863
    5. '   ' → logprob: -14.000195503234863
    6. '6' → logprob: -14.687695503234863
    7. '  ' → logprob: -15.062695503234863
    8. '```' → logprob: -15.062695503234863
    9. '+' → logprob: -15.437695503234863
    10. '    ' → logprob: -16.062694549560547

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007516168989241123
    2. ' ):' → logprob: -7.875751495361328
    3. ')' → logprob: -8.625751495361328
    4. ':' → logprob: -8.625751495361328
    5. '):
' → logprob: -12.250751495361328
    6. ',' → logprob: -12.875751495361328
    7. '+' → logprob: -13.750751495361328
    8. ' :' → logprob: -14.000751495361328
    9. ')):' → logprob: -14.625751495361328
    10. '():' → logprob: -14.750751495361328

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2915543019771576
    2. ':' → logprob: -1.54155433177948
    3. '    ' → logprob: -4.0415544509887695
    4. ' ' → logprob: -4.6665544509887695
    5. '):' → logprob: -5.7915544509887695
    6. ' :' → logprob: -5.9165544509887695
    7. '```' → logprob: -6.7915544509887695
    8. '    
' → logprob: -7.1665544509887695
    9. ')' → logprob: -7.4165544509887695
    10. '  ' → logprob: -7.5415544509887695

Token 29: ' pos' (ID: 1253)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.166441798210144
    2. ' total' → logprob: -1.166441798210144
    3. '    ' → logprob: -1.916441798210144
    4. ' sum' → logprob: -3.1664419174194336
    5. ' dp' → logprob: -3.4164419174194336
    6. ' if' → logprob: -3.7914419174194336
    7. ' max' → logprob: -4.041441917419434
    8. 'total' → logprob: -4.291441917419434
    9. ' count' → logprob: -4.666441917419434
    10. 'sum' → logprob: -4.791441917419434

Token 30: ' =' (ID: 314)
  Prédit: 'sible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.7228813767433167
    2. 's' → logprob: -1.5978813171386719
    3. 'ition' → logprob: -2.097881317138672
    4. ' =' → logprob: -2.222881317138672
    5. '=' → logprob: -3.347881317138672
    6. 'itional' → logprob: -4.097881317138672
    7. 't' → logprob: -4.347881317138672
    8. 'itions' → logprob: -5.222881317138672
    9. '_' → logprob: -6.097881317138672
    10. 'i' → logprob: -6.722881317138672

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19630621373653412
    2. 'dice' → logprob: -2.8213062286376953
    3. ' ' → logprob: -3.3213062286376953
    4. '-' → logprob: -3.8213062286376953
    5. ' dice' → logprob: -4.071306228637695
    6. '1' → logprob: -4.071306228637695
    7. 'N' → logprob: -4.946306228637695
    8. 'A' → logprob: -4.946306228637695
    9. ' -' → logprob: -5.821306228637695
    10. ' N' → logprob: -5.946306228637695

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32874515652656555
    2. 'dice' → logprob: -1.8287451267242432
    3. '-' → logprob: -3.203745126724243
    4. '1' → logprob: -3.328745126724243
    5. 'N' → logprob: -4.203745365142822
    6. 'A' → logprob: -4.203745365142822
    7. 'sum' → logprob: -5.328745365142822
    8. 'len' → logprob: -6.203745365142822
    9. ' dice' → logprob: -6.953745365142822
    10. ' ' → logprob: -6.953745365142822

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3626168370246887
    2. '<|end|>' → logprob: -1.487616777420044
    3. ' ' → logprob: -3.237616777420044
    4. ' if' → logprob: -4.987617015838623
    5. ' while' → logprob: -5.237617015838623
    6. '    ' → logprob: -5.362617015838623
    7. '	while' → logprob: -5.487617015838623
    8. '    
' → logprob: -5.487617015838623
    9. '
' → logprob: -5.987617015838623
    10. '<|end|>' → logprob: -6.487617015838623

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04088350757956505
    2. '	while' → logprob: -4.165883541107178
    3. '<|end|>' → logprob: -4.415883541107178
    4. ' while' → logprob: -5.415883541107178
    5. '    
' → logprob: -6.290883541107178
    6. ' ' → logprob: -6.665883541107178
    7. '    ' → logprob: -6.915883541107178
    8. '	for' → logprob: -7.165883541107178
    9. '
' → logprob: -7.540883541107178
    10. '	if' → logprob: -7.665883541107178

Token 35: ' visited' (ID: 18416)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.45283129811286926
    2. 'while' → logprob: -1.5778312683105469
    3. '   ' → logprob: -2.952831268310547
    4. ' if' → logprob: -3.577831268310547
    5. ' for' → logprob: -3.952831268310547
    6. 'for' → logprob: -4.327831268310547
    7. 'pos' → logprob: -4.577831268310547
    8. 'count' → logprob: -4.577831268310547
    9. 'if' → logprob: -4.827831268310547
    10. ' count' → logprob: -5.952831268310547

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021784083917737007
    2. '=' → logprob: -4.02178430557251
    3. '[' → logprob: -5.64678430557251
    4. '.add' → logprob: -10.146783828735352
    5. ' ' → logprob: -11.146783828735352
    6. 's' → logprob: -11.271783828735352
    7. '<|end|>' → logprob: -12.021783828735352
    8. ')' → logprob: -12.396783828735352
    9. '```' → logprob: -12.396783828735352
    10. 'add' → logprob: -12.771783828735352

Token 37: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6965728402137756
    2. ' set' → logprob: -1.0715727806091309
    3. '[' → logprob: -2.446572780609131
    4. ' [' → logprob: -3.071572780609131
    5. '{' → logprob: -4.071572780609131
    6. ' {' → logprob: -5.446572780609131
    7. '{}' → logprob: -5.946572780609131
    8. ' ' → logprob: -7.196572780609131
    9. ' []' → logprob: -7.196572780609131
    10. '[]' → logprob: -7.571572780609131

Token 38: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0018904341850429773
    2. ' False' → logprob: -6.376890659332275
    3. '0' → logprob: -8.626890182495117
    4. 'True' → logprob: -12.126890182495117
    5. '   ' → logprob: -13.126890182495117
    6. '(False' → logprob: -14.376890182495117
    7. '-' → logprob: -14.751890182495117
    8. ']' → logprob: -15.376890182495117
    9. ' ' → logprob: -16.501890182495117
    10. 'F' → logprob: -16.876890182495117

Token 39: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010403135092929006
    2. ']*' → logprob: -8.0010404586792
    3. ')' → logprob: -8.2510404586792
    4. '])' → logprob: -8.7510404586792
    5. '(' → logprob: -9.2510404586792
    6. ' ]' → logprob: -9.3760404586792
    7. ' for' → logprob: -9.8760404586792
    8. '   ' → logprob: -11.5010404586792
    9. 'for' → logprob: -11.8760404586792
    10. ']*(' → logprob: -12.0010404586792

Token 40: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.015203799121081829
    2. '(' → logprob: -4.765203952789307
    3. 'N' → logprob: -5.765203952789307
    4. ' (' → logprob: -6.890203952789307
    5. '(d' → logprob: -7.140203952789307
    6. '(len' → logprob: -7.265203952789307
    7. '(n' → logprob: -7.890203952789307
    8. 'dice' → logprob: -8.015203475952148
    9. 'len' → logprob: -10.015203475952148
    10. 'd' → logprob: -10.640203475952148

Token 42: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.019231386482715607
    2. '(N' → logprob: -5.14423131942749
    3. 'dice' → logprob: -5.26923131942749
    4. ' N' → logprob: -5.39423131942749
    5. 'len' → logprob: -6.26923131942749
    6. '(' → logprob: -7.39423131942749
    7. ' (' → logprob: -8.019231796264648
    8. 'pos' → logprob: -8.894231796264648
    9. '(len' → logprob: -9.519231796264648
    10. ' dice' → logprob: -9.519231796264648

Token 43: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04544007405638695
    2. ' +' → logprob: -3.2954399585723877
    3. ')' → logprob: -4.920440196990967
    4. ' )' → logprob: -10.545439720153809
    5. '+)' → logprob: -11.045439720153809
    6. '   ' → logprob: -11.795439720153809
    7. ')
' → logprob: -12.420439720153809
    8. '))' → logprob: -12.420439720153809
    9. '+
' → logprob: -12.545439720153809
    10. '1' → logprob: -12.795439720153809

Token 44: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1195843294262886
    2. '1' → logprob: -2.244584321975708
    3. '3' → logprob: -5.119584560394287
    4. ' ' → logprob: -7.244584560394287
    5. '   ' → logprob: -10.369584083557129
    6. '4' → logprob: -12.744584083557129
    7. '  ' → logprob: -13.307084083557129
    8. '```' → logprob: -13.494584083557129
    9. '    ' → logprob: -13.744584083557129
    10. '+' → logprob: -14.119584083557129

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09225556999444962
    2. '1' → logprob: -2.4672555923461914
    3. '3' → logprob: -5.717255592346191
    4. ' ' → logprob: -10.967255592346191
    5. '   ' → logprob: -13.654755592346191
    6. '  ' → logprob: -14.842255592346191
    7. '4' → logprob: -14.904755592346191
    8. '```' → logprob: -14.967255592346191
    9. '２' → logprob: -15.092255592346191
    10. '+' → logprob: -16.029754638671875

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001407613162882626
    2. ')
' → logprob: -6.626407623291016
    3. '   ' → logprob: -10.001407623291016
    4. ' )' → logprob: -10.626407623291016
    5. ')
' → logprob: -12.626407623291016
    6. '```' → logprob: -13.376407623291016
    7. '))' → logprob: -13.501407623291016
    8. '<|end|>' → logprob: -13.626407623291016
    9. ')

' → logprob: -13.876407623291016
    10. '[' → logprob: -14.751407623291016

Token 47: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.31675201654434204
    2. ' pos' → logprob: -1.3167519569396973
    3. ' not' → logprob: -6.066751956939697
    4. 'not' → logprob: -7.066751956939697
    5. 'dice' → logprob: -9.441752433776855
    6. ' True' → logprob: -9.566752433776855
    7. 'True' → logprob: -9.566752433776855
    8. '(pos' → logprob: -10.691752433776855
    9. ' dice' → logprob: -10.691752433776855
    10. 'visited' → logprob: -11.316752433776855

Token 50: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08309658616781235
    2. '<' → logprob: -3.083096504211426
    3. ' <=' → logprob: -3.833096504211426
    4. '+' → logprob: -4.958096504211426
    5. ' +' → logprob: -6.083096504211426
    6. '<=' → logprob: -6.083096504211426
    7. ' !=' → logprob: -8.208096504211426
    8. ' ' → logprob: -8.833096504211426
    9. '<len' → logprob: -9.708096504211426
    10. ' ==' → logprob: -9.833096504211426

Token 51: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16453196108341217
    2. ' N' → logprob: -2.039531946182251
    3. 'len' → logprob: -4.28953218460083
    4. ' len' → logprob: -5.41453218460083
    5. 'dice' → logprob: -5.91453218460083
    6. ' dice' → logprob: -7.91453218460083
    7. ' ' → logprob: -8.539531707763672
    8. 'n' → logprob: -9.539531707763672
    9. '=' → logprob: -11.227031707763672
    10. 'A' → logprob: -11.664531707763672

Token 52: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18028579652309418
    2. 'and' → logprob: -1.8052858114242554
    3. '+' → logprob: -7.555285930633545
    4. ' ' → logprob: -12.055285453796387
    5. ':' → logprob: -12.430285453796387
    6. ' +' → logprob: -13.430285453796387
    7. '	and' → logprob: -13.555285453796387
    8. ':
' → logprob: -13.680285453796387
    9. ')' → logprob: -14.305285453796387
    10. '1' → logprob: -14.430285453796387

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009989694692194462
    2. '2' → logprob: -4.6349897384643555
    3. ' ' → logprob: -8.384989738464355
    4. '   ' → logprob: -12.634989738464355
    5. '+' → logprob: -13.509989738464355
    6. '  ' → logprob: -15.572489738464355
    7. '0' → logprob: -15.822489738464355
    8. '3' → logprob: -16.19748878479004
    9. '    ' → logprob: -16.75998878479004
    10. '１' → logprob: -17.00998878479004

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006278486107476056
    2. '2' → logprob: -7.3756279945373535
    3. ' ' → logprob: -14.000627517700195
    4. '   ' → logprob: -16.313127517700195
    5. '+' → logprob: -16.438127517700195
    6. '0' → logprob: -16.500627517700195
    7. '۱' → logprob: -16.938127517700195
    8. '१' → logprob: -17.000627517700195
    9. '１' → logprob: -17.125627517700195
    10. '১' → logprob: -17.438127517700195

Token 55: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.031111199408769608
    2. 'and' → logprob: -3.906111240386963
    3. ':' → logprob: -4.656111240386963
    4. '   ' → logprob: -7.656111240386963
    5. ':
' → logprob: -7.906111240386963
    6. '       ' → logprob: -9.531110763549805
    7. ' ' → logprob: -10.406110763549805
    8. '<|end|>' → logprob: -11.156110763549805
    9. '	and' → logprob: -11.156110763549805
    10. ' :' → logprob: -11.781110763549805

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013954048044979572
    2. '   ' → logprob: -5.263954162597656
    3. ' if' → logprob: -5.638954162597656
    4. ' and' → logprob: -6.388954162597656
    5. '```' → logprob: -7.388954162597656
    6. '[' → logprob: -7.638954162597656
    7. '    ' → logprob: -7.638954162597656
    8. 'if' → logprob: -7.888954162597656
    9. ' ' → logprob: -8.138954162597656
    10. '<|end|>' → logprob: -8.513954162597656

Token 57: ' pos' (ID: 1253)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14184348285198212
    2. 'if' → logprob: -2.391843557357788
    3. '       ' → logprob: -3.516843557357788
    4. 'pos' (adapté à ' pos') → logprob: -5.016843318939209
    5. ' pos' → logprob: -7.266843318939209
    6. ' and' → logprob: -7.266843318939209
    7. 'next' → logprob: -7.516843318939209
    8. 'visited' → logprob: -7.766843318939209
    9. '```' → logprob: -7.766843318939209
    10. '   ' → logprob: -8.016843795776367

Token 58: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5415261387825012
    2. ' +=' → logprob: -1.0415260791778564
    3. '=' → logprob: -3.0415260791778564
    4. ' =' → logprob: -4.1665263175964355
    5. '+' → logprob: -6.2915263175964355
    6. ' +' → logprob: -10.166525840759277
    7. ']+=' → logprob: -10.416525840759277
    8. '+=(' → logprob: -11.541525840759277
    9. '++' → logprob: -11.666525840759277
    10. ')' → logprob: -12.416525840759277

Token 59: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.47845908999443054
    2. 'A' → logprob: -0.9784591197967529
    3. ' dice' → logprob: -6.103458881378174
    4. ' A' → logprob: -6.978458881378174
    5. '1' → logprob: -7.353458881378174
    6. '   ' → logprob: -8.853459358215332
    7. 'a' → logprob: -9.228459358215332
    8. ' ' → logprob: -9.478459358215332
    9. 'dic' → logprob: -9.853459358215332
    10. 'd' → logprob: -9.978459358215332

Token 60: '_faces' (ID: 158689)
  Prédit: '_faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_faces' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -12.875003814697266
    3. '_face' → logprob: -14.875003814697266
    4. ' _' → logprob: -15.500003814697266
    5. '_fac' → logprob: -16.500003814697266
    6. '```' → logprob: -17.500003814697266
    7. '_f' → logprob: -17.625003814697266
    8. '_heads' → logprob: -18.000003814697266
    9. '_positions' → logprob: -18.750003814697266
    10. 'faces' → logprob: -18.875003814697266

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.604091465473175
    2. '+' → logprob: -1.7290914058685303
    3. 'if' → logprob: -2.3540914058685303
    4. ' if' → logprob: -2.7290914058685303
    5. '       ' → logprob: -3.3540914058685303
    6. '<|end|>' → logprob: -3.4790914058685303
    7. ' and' → logprob: -4.229091644287109
    8. 'and' → logprob: -4.229091644287109
    9. ' +' → logprob: -4.854091644287109
    10. ' or' → logprob: -5.979091644287109

Token 62: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03037375397980213
    2. '<|end|>' → logprob: -4.405373573303223
    3. ' if' → logprob: -4.905373573303223
    4. '[' → logprob: -6.655373573303223
    5. '    
' → logprob: -7.030373573303223
    6. ' ' → logprob: -7.030373573303223
    7. '+' → logprob: -7.030373573303223
    8. '       ' → logprob: -7.155373573303223
    9. ' and' → logprob: -7.280373573303223
    10. '   ' → logprob: -7.280373573303223

Token 63: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0709850937128067
    2. ' if' → logprob: -2.6959850788116455
    3. '       ' → logprob: -7.820985317230225
    4. 'while' → logprob: -8.320984840393066
    5. 'visited' → logprob: -8.570984840393066
    6. '```' → logprob: -8.945984840393066
    7. '   ' → logprob: -9.945984840393066
    8. ' while' → logprob: -11.445984840393066
    9. '
' → logprob: -11.570984840393066
    10. ' visited' → logprob: -12.445984840393066

Token 64: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6938605308532715
    2. ' pos' → logprob: -0.6938605308532715
    3. 'visited' → logprob: -8.19386100769043
    4. ' visited' → logprob: -8.31886100769043
    5. ' not' → logprob: -9.31886100769043
    6. 'A' → logprob: -10.69386100769043
    7. 'not' → logprob: -11.06886100769043
    8. ' A' → logprob: -11.19386100769043
    9. ' ' → logprob: -11.31886100769043
    10. '0' → logprob: -11.56886100769043

Token 65: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.0607281923294067
    2. ' >=' → logprob: -1.0607281923294067
    3. '>=' → logprob: -1.6857281923294067
    4. '>' → logprob: -2.685728073120117
    5. ' <' → logprob: -3.810728073120117
    6. ' ==' → logprob: -4.810728073120117
    7. '<' → logprob: -5.060728073120117
    8. ' <=' → logprob: -5.060728073120117
    9. '<=' → logprob: -5.185728073120117
    10. '==' → logprob: -5.310728073120117

Token 66: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023248739540576935
    2. ' N' → logprob: -3.7732486724853516
    3. ' ' → logprob: -13.148248672485352
    4. 'n' → logprob: -15.023248672485352
    5. '<|end|>' → logprob: -15.273248672485352
    6. '   ' → logprob: -15.523248672485352
    7. '>N' → logprob: -15.898248672485352
    8. '0' → logprob: -16.02324867248535
    9. '	N' → logprob: -16.64824867248535
    10. '  ' → logprob: -17.02324867248535

Token 67: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18207089602947235
    2. 'and' → logprob: -1.9320708513259888
    3. '+' → logprob: -4.432070732116699
    4. ':' → logprob: -4.807070732116699
    5. ':
' → logprob: -6.682070732116699
    6. ' +' → logprob: -8.9320707321167
    7. ' ' → logprob: -9.3070707321167
    8. '<|end|>' → logprob: -10.6820707321167
    9. '   ' → logprob: -11.0570707321167
    10. ':

' → logprob: -11.5570707321167

Token 68: ' A' (ID: 355)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.2292795181274414
    2. 'A' → logprob: -1.6042795181274414
    3. ' not' → logprob: -1.7292795181274414
    4. ' visited' → logprob: -1.9792795181274414
    5. ' A' → logprob: -1.9792795181274414
    6. 'not' → logprob: -2.9792795181274414
    7. ' ' → logprob: -7.791779518127441
    8. '   ' → logprob: -8.541779518127441
    9. '(not' → logprob: -8.604279518127441
    10. ' (' → logprob: -8.916779518127441

Token 69: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0001705246395431459
    2. '[' → logprob: -8.750170707702637
    3. '[position' → logprob: -12.875170707702637
    4. 'pos' → logprob: -13.000170707702637
    5. ' [' → logprob: -13.125170707702637
    6. '```' → logprob: -14.375170707702637
    7. '[idx' → logprob: -14.750170707702637
    8. '\[' → logprob: -14.875170707702637
    9. '[int' → logprob: -15.000170707702637
    10. '[val' → logprob: -15.250170707702637

Token 70: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028698796406388283
    2. ' ]' → logprob: -4.153698921203613
    3. ']==' → logprob: -5.278698921203613
    4. '[' → logprob: -5.903698921203613
    5. '-' → logprob: -6.653698921203613
    6. ' -' → logprob: -6.653698921203613
    7. ']!=' → logprob: -6.903698921203613
    8. ']>' → logprob: -8.278698921203613
    9. ']>=' → logprob: -8.653698921203613
    10. ')' → logprob: -8.903698921203613

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002084277366520837
    2. ' ' → logprob: -8.875208854675293
    3. '<|end|>' → logprob: -11.187708854675293
    4. ']' → logprob: -11.250208854675293
    5. ')' → logprob: -11.875208854675293
    6. '2' → logprob: -12.000208854675293
    7. '   ' → logprob: -12.125208854675293
    8. '<|end|>' → logprob: -12.875208854675293
    9. '0' → logprob: -12.937708854675293
    10. '...' → logprob: -13.312708854675293

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.23917081207037e-05
    2. '2' → logprob: -11.250041961669922
    3. ' ' → logprob: -11.250041961669922
    4. '<|end|>' → logprob: -12.437541961669922
    5. '0' → logprob: -13.250041961669922
    6. ')' → logprob: -13.312541961669922
    7. '   ' → logprob: -13.437541961669922
    8. '```' → logprob: -14.312541961669922
    9. '<|end|>' → logprob: -14.500041961669922
    10. '...' → logprob: -14.750041961669922

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19779694080352783
    2. ']==' → logprob: -2.9477968215942383
    3. ' ==' → logprob: -3.0727968215942383
    4. ' ]' → logprob: -3.3227968215942383
    5. ' !=' → logprob: -3.8227968215942383
    6. '==' → logprob: -4.697796821594238
    7. ']!=' → logprob: -5.322796821594238
    8. '!=' → logprob: -6.322796821594238
    9. ')' → logprob: -6.322796821594238
    10. '>' → logprob: -6.447796821594238

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25040048360824585
    2. '==' → logprob: -1.7504005432128906
    3. ' !=' → logprob: -3.6254005432128906
    4. ' >' → logprob: -5.000400543212891
    5. '>' → logprob: -5.375400543212891
    6. '!=' → logprob: -5.375400543212891
    7. ' <=' → logprob: -6.875400543212891
    8. ' <' → logprob: -7.125400543212891
    9. ':' → logprob: -7.125400543212891
    10. '<' → logprob: -7.875400543212891

Token 75: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6959657073020935
    2. '0' → logprob: -1.0709657669067383
    3. '1' → logprob: -2.3209657669067383
    4. 'pos' → logprob: -3.5709657669067383
    5. ' pos' → logprob: -4.695965766906738
    6. '-' → logprob: -4.945965766906738
    7. 'dice' → logprob: -4.945965766906738
    8. ' -' → logprob: -5.695965766906738
    9. ' dice' → logprob: -5.820965766906738
    10. '2' → logprob: -7.133465766906738

Token 76: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47148555517196655
    2. 'pos' → logprob: -1.8464856147766113
    3. 'dice' → logprob: -2.0964856147766113
    4. '1' → logprob: -2.7214856147766113
    5. '-' → logprob: -4.096485614776611
    6. ' ' → logprob: -4.971485614776611
    7. '2' → logprob: -6.596485614776611
    8. 'd' → logprob: -7.346485614776611
    9. ' dice' → logprob: -7.471485614776611
    10. 'A' → logprob: -7.721485614776611

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010130131617188454
    2. ' and' → logprob: -4.885129928588867
    3. ' :' → logprob: -6.260129928588867
    4. 'and' → logprob: -7.885129928588867
    5. ':
' → logprob: -8.885129928588867
    6. '):' → logprob: -9.885129928588867
    7. ')' → logprob: -11.510129928588867
    8. ' or' → logprob: -11.635129928588867
    9. ':return' → logprob: -12.385129928588867
    10. '.' → logprob: -12.760129928588867

Token 78: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8919072151184082
    2. '    ' → logprob: -1.3919072151184082
    3. ':' → logprob: -1.8919072151184082
    4. '\' → logprob: -3.516907215118408
    5. '           ' → logprob: -3.641907215118408
    6. '   ' → logprob: -3.766907215118408
    7. '\n' → logprob: -4.141907215118408
    8. '        ' → logprob: -4.141907215118408
    9. ':
' → logprob: -4.641907215118408
    10. '     
' → logprob: -4.766907215118408

Token 79: ' break' (ID: 2338)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.2939184010028839
    2. 'pos' → logprob: -1.7939183712005615
    3. ' break' → logprob: -3.1689183712005615
    4. 'break' (adapté à ' break') → logprob: -3.5439183712005615
    5. '    ' → logprob: -4.418918609619141
    6. '+' → logprob: -6.793918609619141
    7. '   ' → logprob: -7.043918609619141
    8. '       ' → logprob: -8.16891860961914
    9. ' continue' → logprob: -8.16891860961914
    10. '```' → logprob: -8.16891860961914

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.798032283782959
    2. '<|end|>' → logprob: -1.548032283782959
    3. '
' → logprob: -2.173032283782959
    4. '\n' → logprob: -2.673032283782959
    5. '```' → logprob: -3.548032283782959
    6. 'else' → logprob: -3.673032283782959
    7. ' else' → logprob: -4.048032283782959
    8. '    
' → logprob: -4.298032283782959
    9. '\' → logprob: -4.423032283782959
    10. ')' → logprob: -4.548032283782959

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5580914616584778
    2. '
' → logprob: -2.058091402053833
    3. '\n' → logprob: -2.808091402053833
    4. 'else' → logprob: -2.933091402053833
    5. '<|end|>' → logprob: -3.058091402053833
    6. ' ' → logprob: -3.558091402053833
    7. ' else' → logprob: -3.558091402053833
    8. ')' → logprob: -4.058091640472412
    9. '```' → logprob: -4.183091640472412
    10. '    ' → logprob: -4.933091640472412

Token 82: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07099175453186035
    2. ' else' → logprob: -2.8209917545318604
    3. '   ' → logprob: -5.320991516113281
    4. ':' → logprob: -6.570991516113281
    5. '```' → logprob: -7.820991516113281
    6. 'print' → logprob: -8.070991516113281
    7. ')' → logprob: -8.070991516113281
    8. '.' → logprob: -8.320991516113281
    9. 'if' → logprob: -8.945991516113281
    10. '
' → logprob: -8.945991516113281

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024144348572008312
    2. ' :' → logprob: -8.37524127960205
    3. ':
' → logprob: -11.75024127960205
    4. '<|end|>' → logprob: -13.87524127960205
    5. '   ' → logprob: -14.75024127960205
    6. ',' → logprob: -15.12524127960205
    7. ':**' → logprob: -15.25024127960205
    8. ':return' → logprob: -15.37524127960205
    9. '：' → logprob: -15.50024127960205
    10. ':

' → logprob: -16.500242233276367

Token 84: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18917909264564514
    2. 'print' → logprob: -2.0641791820526123
    3. ' print' → logprob: -3.4391791820526123
    4. '       ' → logprob: -4.689178943634033
    5. '```' → logprob: -5.564178943634033
    6. ' continue' → logprob: -9.564179420471191
    7. '``' → logprob: -9.564179420471191
    8. 'continue' → logprob: -9.689179420471191
    9. '    
' → logprob: -10.314179420471191
    10. '    ' → logprob: -11.189179420471191

Token 85: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07005580514669418
    2. ' print' → logprob: -2.6950557231903076
    3. '   ' → logprob: -9.070055961608887
    4. '```' → logprob: -13.445055961608887
    5. 'break' → logprob: -13.570055961608887
    6. ' break' → logprob: -14.695055961608887
    7. '	print' → logprob: -15.070055961608887
    8. '    ' → logprob: -15.070055961608887
    9. '
' → logprob: -15.320055961608887
    10. ' ' → logprob: -15.570055961608887

Token 86: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.02339443936944008
    2. '(' → logprob: -3.7733943462371826
    3. '('' → logprob: -9.273394584655762
    4. '("' → logprob: -10.398394584655762
    5. '("("' → logprob: -11.398394584655762
    6. '(dic' → logprob: -12.898394584655762
    7. 'dice' → logprob: -13.148394584655762
    8. '(f' → logprob: -13.273394584655762
    9. ' (' → logprob: -13.273394584655762
    10. '(
' → logprob: -13.773394584655762

Token 87: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.11346828937530518
    2. 'ce' → logprob: -2.2384681701660156
    3. 'dice' → logprob: -8.738468170166016
    4. 'c' → logprob: -9.113468170166016
    5. 'oce' → logprob: -9.238468170166016
    6. 'ces' → logprob: -9.363468170166016
    7. 'i' → logprob: -9.738468170166016
    8. 'cie' → logprob: -10.738468170166016
    9. 'ic' → logprob: -11.488468170166016
    10. 's' → logprob: -11.613468170166016

Token 88: '_faces' (ID: 158689)
  Prédit: '_faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_faces' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.625000953674316
    3. '_f' → logprob: -16.375
    4. 'faces' → logprob: -17.25
    5. '_face' → logprob: -17.5
    6. 's' → logprob: -17.875
    7. '_fac' → logprob: -18.375
    8. '.faces' → logprob: -19.0
    9. '_heads' → logprob: -19.125
    10. 'Faces' → logprob: -19.125

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8908587662735954e-05
    2. ' )' → logprob: -11.500019073486328
    3. ')
' → logprob: -12.250019073486328
    4. '))' → logprob: -13.000019073486328
    5. ')`' → logprob: -14.125019073486328
    6. '()' → logprob: -15.625019073486328
    7. '）' → logprob: -15.875019073486328
    8. '(' → logprob: -16.125019073486328
    9. '#' → logprob: -16.375019073486328
    10. ')")' → logprob: -16.750019073486328

Token 90: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5447891354560852
    2. 'break' (adapté à ' break') → logprob: -0.9197891354560852
    3. '   ' → logprob: -3.9197890758514404
    4. '	break' → logprob: -6.9197893142700195
    5. '```' → logprob: -8.16978931427002
    6. 'exit' → logprob: -9.29478931427002
    7. '       ' → logprob: -9.66978931427002
    8. ' ' → logprob: -9.66978931427002
    9. ' exit' → logprob: -10.16978931427002
    10. '_break' → logprob: -11.66978931427002


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 34.83%
Précision adaptée (1ère position): 38.20%
Précision (top 10): 84.27%
================================================================================
