================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Tuple

class MenuItem(ABC):
    def __init__(self, price: int):
        if not (100 <= price <= 2000):
            raise ValueError("Price must be between 100 and 2000 yen.")
        self.price = price

    @abstractmethod
    def get_price(self) -> int:
        pass

class Pasta(MenuItem):
    def get_price(self) -> int:
        return self.price

class Juice(MenuItem):
    def get_price(self) -> int:
        return self.price

class SetMenuCombination:
    def __init__(self, pasta: Pasta, juice: Juice, discount: int):
        self.pasta = pasta
        self.juice = juice
        self.discount = discount

    def total_price(self) -> int:
        return self.pasta.get_price() + self.juice.get_price() - self.discount

class Menu:
    def __init__(self, pastas: List[Pasta], juices: List[Juice], discount: int = 50):
        if len(pastas) != 3:
            raise ValueError("There must be exactly 3 pastas.")
        if len(juices) != 2:
            raise ValueError("There must be exactly 2 juices.")
        self.pastas = pastas
        self.juices = juices
        self.discount = discount

    def all_combinations(self) -> List[SetMenuCombination]:
        return [SetMenuCombination(pasta, juice, self.discount) for pasta in self.pastas for juice in self.juices]

    def find_min_price(self) -> int:
        combinations = self.all_combinations()
        min_price = min(c.total_price() for c in combinations)
        return min_price

class InputReader:
    @staticmethod
    def read_prices(num: int) -> List[int]:
        prices = []
        for _ in range(num):
            raw = input()
            # Defensive conversion
            try:
                val = int(raw.strip())
            except ValueError:
                raise ValueError(f"Invalid integer input: {raw}")
            prices.append(val)
        return prices

class LunchSetCalculator:
    def __init__(self, pasta_prices: List[int], juice_prices: List[int], discount: int = 50):
        self.menu = Menu([Pasta(p) for p in pasta_prices], [Juice(j) for j in juice_prices], discount)

    def calculate_min_set_price(self) -> int:
        return self.menu.find_min_price()

def main():
    pasta_prices = InputReader.read_prices(3)
    juice_prices = InputReader.read_prices(2)
    calculator = LunchSetCalculator(pasta_prices, juice_prices)
    print(calculator.calculate_min_set_price())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1604270040988922
    2. 'ABC' → logprob: -1.9104269742965698
    3. ' A' → logprob: -9.53542709350586
    4. 'AB' → logprob: -9.53542709350586
    5. 'A' → logprob: -11.03542709350586
    6. 'ABCDE' → logprob: -11.16042709350586
    7. 'abc' → logprob: -11.28542709350586
    8. 'abstract' → logprob: -12.41042709350586
    9. ' ' → logprob: -13.16042709350586
    10. '_AB' → logprob: -13.41042709350586

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44743484258651733
    2. ',' → logprob: -1.072434902191162
    3. 'import' → logprob: -4.822434902191162
    4. '<|end|>' → logprob: -5.822434902191162
    5. ':' → logprob: -6.072434902191162
    6. '```' → logprob: -6.322434902191162
    7. ' ,' → logprob: -7.197434902191162
    8. ' .' → logprob: -7.697434902191162
    9. ' import' → logprob: -8.322434425354004
    10. '.I' → logprob: -8.572434425354004

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.5760498642921448
    2. ' abstract' → logprob: -0.8260498642921448
    3. 'Abstract' → logprob: -9.2010498046875
    4. ' ' → logprob: -12.5760498046875
    5. '.abstract' → logprob: -13.2010498046875
    6. ' Abstract' → logprob: -13.4510498046875
    7. ' ABC' → logprob: -14.5760498046875
    8. 'abc' → logprob: -14.8260498046875
    9. ' A' → logprob: -14.9510498046875
    10. '123' → logprob: -15.2010498046875

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00019889144459739327
    2. 'classmethod' → logprob: -9.000199317932129
    3. 'm' → logprob: -10.000199317932129
    4. '_method' → logprob: -11.250199317932129
    5. 'staticmethod' → logprob: -11.750199317932129
    6. 'meth' → logprob: -12.375199317932129
    7. ' method' → logprob: -13.750199317932129
    8. '```' → logprob: -13.875199317932129
    9. 'ethod' → logprob: -14.125199317932129
    10. 'abstract' → logprob: -14.375199317932129

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2890145778656006
    2. '```' → logprob: -1.9140145778656006
    3. '\n' → logprob: -3.4140145778656006
    4. 'class' → logprob: -4.16401481628418
    5. '

' → logprob: -4.28901481628418
    6. '' → logprob: -4.66401481628418
    7. '<|end|>' → logprob: -4.66401481628418
    8. '
' → logprob: -5.03901481628418
    9. '\' → logprob: -5.16401481628418
    10. '  
' → logprob: -6.03901481628418

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1726326197385788
    2. '

' → logprob: -2.1726326942443848
    3. '```' → logprob: -3.5476326942443848
    4. 'class' → logprob: -4.422632694244385
    5. '' → logprob: -7.047632694244385
    6. '
' → logprob: -7.047632694244385
    7. '\n' → logprob: -7.672632694244385
    8. '``' → logprob: -7.672632694244385
    9. ' 

' → logprob: -8.297632217407227
    10. '
 
' → logprob: -8.672632217407227

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06249941512942314
    2. 'import' → logprob: -2.812499523162842
    3. '.' → logprob: -9.062499046325684
    4. '```' → logprob: -9.187499046325684
    5. '<|end|>' → logprob: -9.562499046325684
    6. ' ' → logprob: -9.812499046325684
    7. '_import' → logprob: -10.062499046325684
    8. ' as' → logprob: -10.437499046325684
    9. '.import' → logprob: -10.687499046325684
    10. '	import' → logprob: -10.937499046325684

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.7048139572143555
    2. 'Any' → logprob: -0.8298139572143555
    3. ' List' → logprob: -4.0798139572143555
    4. ' Protocol' → logprob: -4.3298139572143555
    5. ' Union' → logprob: -4.5798139572143555
    6. ' Callable' → logprob: -4.8298139572143555
    7. 'Protocol' → logprob: -5.0798139572143555
    8. 'List' → logprob: -5.2048139572143555
    9. 'Union' → logprob: -5.5798139572143555
    10. 'Callable' → logprob: -6.2048139572143555

Token 12: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9252783060073853
    2. '

' → logprob: -1.0502783060073853
    3. 'class' → logprob: -1.4252783060073853
    4. '```' → logprob: -4.675278186798096
    5. '
' → logprob: -6.800278186798096
    6. '\n' → logprob: -7.050278186798096
    7. '


' → logprob: -7.425278186798096
    8. '``' → logprob: -7.675278186798096
    9. ' class' → logprob: -8.175278663635254
    10. '<|end|>' → logprob: -8.925278663635254

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4103957414627075
    2. ' Union' → logprob: -1.5353957414627075
    3. ' Any' → logprob: -1.7853957414627075
    4. ' Callable' → logprob: -2.035395622253418
    5. 'Any' → logprob: -2.410395622253418
    6. 'Optional' → logprob: -2.535395622253418
    7. 'Union' → logprob: -4.160395622253418
    8. ' Tuple' → logprob: -4.160395622253418
    9. 'Callable' → logprob: -4.535395622253418
    10. 'Tuple' → logprob: -4.785395622253418

Token 14: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.39141327142715454
    2. '
' → logprob: -1.6414132118225098
    3. '

' → logprob: -2.1414132118225098
    4. '```' → logprob: -4.64141321182251
    5. '\n' → logprob: -6.26641321182251
    6. '


' → logprob: -8.266413688659668
    7. ' class' → logprob: -8.266413688659668
    8. '``' → logprob: -8.266413688659668
    9. '
' → logprob: -8.891413688659668
    10. '<class' → logprob: -9.266413688659668

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00043805985478684306
    2. '
' → logprob: -8.00043773651123
    3. '```' → logprob: -9.37543773651123
    4. '\n' → logprob: -12.50043773651123
    5. ' class' → logprob: -12.62543773651123
    6. '``' → logprob: -12.75043773651123
    7. '"class' → logprob: -12.87543773651123
    8. '<class' → logprob: -13.75043773651123
    9. '

' → logprob: -14.12543773651123
    10. 'c' → logprob: -14.12543773651123

Token 16: ' Menu' (ID: 16352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07254774123430252
    2. ' Abstract' → logprob: -2.947547674179077
    3. ' Shape' → logprob: -5.322547912597656
    4. ' Base' → logprob: -5.947547912597656
    5. ' My' → logprob: -6.197547912597656
    6. ' Space' → logprob: -6.447547912597656
    7. ' Serializer' → logprob: -6.697547912597656
    8. ' ABC' → logprob: -7.447547912597656
    9. ' Basic' → logprob: -7.572547912597656
    10. ' Object' → logprob: -7.822547912597656

Token 17: 'Item' (ID: 1590)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20157618820667267
    2. ':' → logprob: -1.7015762329101562
    3. '(Abstract' → logprob: -9.701576232910156
    4. '(:' → logprob: -10.701576232910156
    5. '():' → logprob: -10.826576232910156
    6. '(Menu' → logprob: -11.076576232910156
    7. ' :' → logprob: -11.451576232910156
    8. '```' → logprob: -11.951576232910156
    9. '(
' → logprob: -12.701576232910156
    10. ':
' → logprob: -12.826576232910156

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018971169367432594
    2. ':' → logprob: -4.018970966339111
    3. '(Abstract' → logprob: -7.143970966339111
    4. '(object' → logprob: -12.39397144317627
    5. '():' → logprob: -12.64397144317627
    6. ' :' → logprob: -12.89397144317627
    7. '(QWidget' → logprob: -13.01897144317627
    8. '<|end|>' → logprob: -13.01897144317627
    9. '```' → logprob: -13.01897144317627
    10. ' (' → logprob: -13.26897144317627

Token 19: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0009030037908814847
    2. ' ABC' → logprob: -7.125903129577637
    3. ')' → logprob: -10.000903129577637
    4. 'abc' → logprob: -11.000903129577637
    5. 'Abstract' → logprob: -11.500903129577637
    6. 'AB' → logprob: -11.625903129577637
    7. 'ABCDE' → logprob: -12.125903129577637
    8. '):' → logprob: -12.250903129577637
    9. 'object' → logprob: -13.000903129577637
    10. 'A' → logprob: -13.500903129577637

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032105150166898966
    2. ')' → logprob: -5.753210544586182
    3. ':' → logprob: -11.003210067749023
    4. '):
' → logprob: -11.628210067749023
    5. ' ):' → logprob: -12.878210067749023
    6. ',' → logprob: -14.003210067749023
    7. ')>' → logprob: -14.253210067749023
    8. '>):' → logprob: -14.503210067749023
    9. '):

' → logprob: -14.628210067749023
    10. ')：' → logprob: -15.003210067749023

Token 21: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004206852056086063
    2. '   ' → logprob: -5.754206657409668
    3. ':
' → logprob: -7.129206657409668
    4. ' :' → logprob: -9.504206657409668
    5. '    
' → logprob: -10.504206657409668
    6. '```' → logprob: -10.879206657409668
    7. '):' → logprob: -11.004206657409668
    8. ',' → logprob: -11.504206657409668
    9. '    ' → logprob: -11.754206657409668
    10. '
' → logprob: -11.754206657409668

Token 22: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.45391255617141724
    2. '   ' → logprob: -1.3289124965667725
    3. 'def' (adapté à ' def') → logprob: -3.3289124965667725
    4. ' @' → logprob: -3.7039124965667725
    5. ' def' → logprob: -4.203912734985352
    6. '    
' → logprob: -4.953912734985352
    7. '    ' → logprob: -4.953912734985352
    8. '
' → logprob: -5.328912734985352
    9. ' 
' → logprob: -5.578912734985352
    10. '@property' → logprob: -7.078912734985352

Token 23: ' __' (ID: 2516)
  Prédit: 'itialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'itialize' → logprob: -0.5379711985588074
    2. 'it' → logprob: -1.6629712581634521
    3. 'inition' → logprob: -2.912971258163452
    4. 'italize' → logprob: -3.412971258163452
    5. ' abstract' → logprob: -3.662971258163452
    6. 'itate' → logprob: -4.162971019744873
    7. 'ialize' → logprob: -4.162971019744873
    8. 'ine' → logprob: -4.662971019744873
    9. 'abstract' → logprob: -4.787971019744873
    10. 'ab' → logprob: -5.287971019744873

Token 24: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'call' → logprob: -16.0
    3. 'abstract' → logprob: -17.125
    4. ' init' → logprob: -18.0
    5. 'int' → logprob: -18.625
    6. 'ini' → logprob: -18.875
    7. '_init' → logprob: -19.625
    8. 'new' → logprob: -19.75
    9. 'abc' → logprob: -19.875
    10. 'is' → logprob: -20.25

Token 25: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37075355648994446
    2. ' (' → logprob: -1.870753526687622
    3. '(self' → logprob: -2.370753526687622
    4. '__(' → logprob: -3.495753526687622
    5. '<|end|>' → logprob: -3.620753526687622
    6. 'self' → logprob: -6.870753765106201
    7. '<|end|>' → logprob: -6.995753765106201
    8. '_' → logprob: -7.620753765106201
    9. '__(
' → logprob: -7.870753765106201
    10. '(s' → logprob: -8.245753288269043

Token 26: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024762547109276056
    2. ' self' → logprob: -6.002476215362549
    3. ')' → logprob: -15.627476692199707
    4. 'name' → logprob: -15.627476692199707
    5. ' ' → logprob: -16.25247573852539
    6. '   ' → logprob: -16.37747573852539
    7. '(self' → logprob: -17.00247573852539
    8. '	self' → logprob: -17.12747573852539
    9. '       ' → logprob: -18.00247573852539
    10. ',' → logprob: -18.12747573852539

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14350032806396484
    2. ' ,' → logprob: -2.018500328063965
    3. 'self' → logprob: -7.768500328063965
    4. ')' → logprob: -9.018500328063965
    5. ' self' → logprob: -9.268500328063965
    6. ' )' → logprob: -9.768500328063965
    7. ',name' → logprob: -10.768500328063965
    8. '<|end|>' → logprob: -10.768500328063965
    9. '   ' → logprob: -10.893500328063965
    10. ' ' → logprob: -10.893500328063965

Token 28: ' price' (ID: 3911)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.20819759368896484
    2. 'name' → logprob: -1.8331975936889648
    3. ' self' → logprob: -4.208197593688965
    4. 'self' → logprob: -4.333197593688965
    5. '    ' → logprob: -11.333197593688965
    6. ' ' → logprob: -11.458197593688965
    7. '   ' → logprob: -11.708197593688965
    8. '       ' → logprob: -12.083197593688965
    9. ' title' → logprob: -12.208197593688965
    10. '	name' → logprob: -12.583197593688965

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011403346434235573
    2. '):' → logprob: -6.876140117645264
    3. ',' → logprob: -9.376140594482422
    4. ':int' → logprob: -11.126140594482422
    5. ')' → logprob: -12.126140594482422
    6. '=' → logprob: -14.126140594482422
    7. ' :' → logprob: -14.376140594482422
    8. ' ):' → logprob: -14.626140594482422
    9. ':str' → logprob: -15.126140594482422
    10. ':,' → logprob: -16.501140594482422

Token 30: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.009861035272479057
    2. 'float' → logprob: -4.634860992431641
    3. ' int' → logprob: -10.25986099243164
    4. 'flo' → logprob: -10.75986099243164
    5. ')' → logprob: -11.25986099243164
    6. ' flo' → logprob: -11.63486099243164
    7. 'int' → logprob: -12.13486099243164
    8. '	float' → logprob: -12.13486099243164
    9. '=float' → logprob: -12.13486099243164
    10. ',float' → logprob: -12.25986099243164

Token 31: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22060388326644897
    2. '):' → logprob: -1.7206039428710938
    3. ')' → logprob: -3.9706039428710938
    4. ' ,' → logprob: -9.470603942871094
    5. '   ' → logprob: -10.845603942871094
    6. ':' → logprob: -11.095603942871094
    7. '):
' → logprob: -11.220603942871094
    8. ' ):' → logprob: -11.970603942871094
    9. '),' → logprob: -12.345603942871094
    10. ' )' → logprob: -12.595603942871094

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002661039761733264
    2. 'self' → logprob: -9.000266075134277
    3. '   ' → logprob: -10.375266075134277
    4. '<|end|>' → logprob: -10.500266075134277
    5. '\n' → logprob: -11.125266075134277
    6. ')' → logprob: -11.625266075134277
    7. 'newline' → logprob: -11.875266075134277
    8. '\' → logprob: -11.875266075134277
    9. ' ' → logprob: -12.000266075134277
    10. '      ' → logprob: -12.000266075134277

Token 33: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33564695715904236
    2. ' self' → logprob: -1.3356469869613647
    3. '       ' → logprob: -3.835646867752075
    4. 'super' → logprob: -7.960647106170654
    5. ' super' → logprob: -8.585646629333496
    6. '   ' → logprob: -12.210646629333496
    7. ' ' → logprob: -12.335646629333496
    8. ' ' → logprob: -13.085646629333496
    9. '	self' → logprob: -14.585646629333496
    10. 'price' → logprob: -14.835646629333496

Token 34: ' not' (ID: 625)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.00161555758677423
    2. ' not' → logprob: -6.501615524291992
    3. 'price' → logprob: -9.126615524291992
    4. ' ' → logprob: -13.376615524291992
    5. ' self' → logprob: -14.251615524291992
    6. ' ' → logprob: -14.376615524291992
    7. 'not' → logprob: -14.376615524291992
    8. '	price' → logprob: -14.626615524291992
    9. '(price' → logprob: -15.251615524291992
    10. ' isinstance' → logprob: -15.626615524291992

Token 35: ' (' (ID: 350)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0001696902181720361
    2. ' price' → logprob: -9.25016975402832
    3. 'is' → logprob: -9.62516975402832
    4. 'price' → logprob: -12.00016975402832
    5. '0' → logprob: -15.12516975402832
    6. ' (' → logprob: -15.25016975402832
    7. ' hasattr' → logprob: -15.37516975402832
    8. ' self' → logprob: -16.62516975402832
    9. '(price' → logprob: -16.62516975402832
    10. ' ' → logprob: -16.75016975402832

Token 36: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05502614751458168
    2. ' isinstance' → logprob: -4.055026054382324
    3. ' ' → logprob: -4.180026054382324
    4. 'is' → logprob: -4.305026054382324
    5. '100' → logprob: -5.805026054382324
    6. '1' → logprob: -5.930026054382324
    7. 'price' → logprob: -7.055026054382324
    8. '10' → logprob: -7.430026054382324
    9. ' price' → logprob: -9.180026054382324
    10. '   ' → logprob: -9.680026054382324

Token 37: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0202171690762043
    2. '<=' → logprob: -4.145216941833496
    3. '0' → logprob: -5.520216941833496
    4. ' ' → logprob: -9.145216941833496
    5. ' <' → logprob: -10.770216941833496
    6. '00' → logprob: -10.895216941833496
    7. '000' → logprob: -12.270216941833496
    8. '```' → logprob: -12.770216941833496
    9. '<' → logprob: -12.895216941833496
    10. ' and' → logprob: -12.895216941833496

Token 38: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.10020710527896881
    2. ' price' → logprob: -2.3502070903778076
    3. '	price' → logprob: -14.850207328796387
    4. '_price' → logprob: -16.72520637512207
    5. 'Price' → logprob: -18.10020637512207
    6. '(price' → logprob: -18.72520637512207
    7. '価格' → logprob: -18.85020637512207
    8. '   ' → logprob: -18.85020637512207
    9. '.price' → logprob: -18.97520637512207
    10. ' ' → logprob: -18.97520637512207

Token 39: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.011063974350690842
    2. '<=' → logprob: -4.511064052581787
    3. '<|end|>' → logprob: -11.386063575744629
    4. '<|end|>' → logprob: -13.511063575744629
    5. ' ' → logprob: -13.636063575744629
    6. ' and' → logprob: -14.761063575744629
    7. ')<=' → logprob: -15.011063575744629
    8. ')' → logprob: -15.136063575744629
    9. ' ≤' → logprob: -15.511063575744629
    10. '```' → logprob: -16.011064529418945

Token 40: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.007628281135112047
    2. '500' → logprob: -5.257628440856934
    3. ' ' → logprob: -7.132628440856934
    4. '999' → logprob: -7.257628440856934
    5. '200' → logprob: -7.632628440856934
    6. '10' → logprob: -8.257628440856934
    7. '300' → logprob: -9.882628440856934
    8. '150' → logprob: -10.507628440856934
    9. '900' → logprob: -10.757628440856934
    10. '1' → logprob: -11.507628440856934

Token 41: '200' (ID: 1179)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.007347731851041317
    2. '500' → logprob: -5.257347583770752
    3. '999' → logprob: -6.757347583770752
    4. '200' → logprob: -7.382347583770752
    5. '10' → logprob: -9.00734806060791
    6. '300' → logprob: -9.25734806060791
    7. '150' → logprob: -10.13234806060791
    8. ' ' → logprob: -10.88234806060791
    9. '900' → logprob: -11.50734806060791
    10. '1' → logprob: -11.63234806060791

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.300548255443573
    2. '):' → logprob: -1.6755483150482178
    3. '):
' → logprob: -2.6755483150482178
    4. '00' → logprob: -6.050548076629639
    5. ')' → logprob: -7.550548076629639
    6. '):
' → logprob: -7.925548076629639
    7. '000' → logprob: -9.175548553466797
    8. '):

' → logprob: -9.550548553466797
    9. ' ):' → logprob: -9.925548553466797
    10. ' ):
' → logprob: -11.050548553466797

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028733668848872185
    2. '):
' → logprob: -3.778733730316162
    3. ' ):' → logprob: -5.778733730316162
    4. ' and' → logprob: -6.778733730316162
    5. ')' → logprob: -7.028733730316162
    6. ' ):
' → logprob: -8.528733253479004
    7. '):
' → logprob: -9.403733253479004
    8. ':' → logprob: -10.028733253479004
    9. ' )' → logprob: -11.278733253479004
    10. 'and' → logprob: -12.153733253479004

Token 44: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5893515944480896
    2. ' :' → logprob: -1.3393516540527344
    3. '           ' → logprob: -2.0893516540527344
    4. ' :
' → logprob: -3.7143516540527344
    5. ':
' → logprob: -4.589351654052734
    6. '            ' → logprob: -5.089351654052734
    7. '):' → logprob: -5.214351654052734
    8. ' raise' → logprob: -5.339351654052734
    9. '       ' → logprob: -6.089351654052734
    10. ' ' → logprob: -6.464351654052734

Token 45: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.04687793180346489
    2. 'raise' (adapté à ' raise') → logprob: -3.171877861022949
    3. '           ' → logprob: -6.171877861022949
    4. '            ' → logprob: -6.421877861022949
    5. ' ' → logprob: -10.17187786102295
    6. ' ' → logprob: -10.54687786102295
    7. '_raise' → logprob: -10.67187786102295
    8. '	raise' → logprob: -10.67187786102295
    9. ' 
' → logprob: -11.42187786102295
    10. '        ' → logprob: -11.67187786102295

Token 46: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.008618354797363281
    2. 'Value' → logprob: -4.758618354797363
    3. ' ' → logprob: -12.883618354797363
    4. '	Value' → logprob: -14.133618354797363
    5. ' ' → logprob: -15.008618354797363
    6. ' value' → logprob: -16.758617401123047
    7. ' Val' → logprob: -16.758617401123047
    8. '_value' → logprob: -17.008617401123047
    9. '  ' → logprob: -17.133617401123047
    10. '_Value' → logprob: -17.258617401123047

Token 47: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0005611348897218704
    2. 'rror' → logprob: -7.500561237335205
    3. 'Value' → logprob: -12.000560760498047
    4. 'r' → logprob: -13.875560760498047
    5. 'ror' → logprob: -14.500560760498047
    6. 'alue' → logprob: -14.625560760498047
    7. 'l' → logprob: -16.250560760498047
    8. 'n' → logprob: -17.750560760498047
    9. 'error' → logprob: -18.250560760498047
    10. 'SError' → logprob: -18.500560760498047

Token 48: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10073979943990707
    2. '(' → logprob: -2.3507397174835205
    3. '('' → logprob: -7.6007399559021
    4. '(
' → logprob: -10.475739479064941
    5. '(f' → logprob: -12.850739479064941
    6. '()' → logprob: -14.100739479064941
    7. '(

' → logprob: -14.350739479064941
    8. '(
' → logprob: -15.225739479064941
    9. '("")' → logprob: -15.850739479064941
    10. '"' → logprob: -15.975739479064941

Token 49: 'Price' (ID: 7417)
  Prédit: 'Price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Price' → logprob: -0.005393126513808966
    2. 'price' → logprob: -6.005393028259277
    3. ' Price' → logprob: -6.380393028259277
    4. 'Invalid' → logprob: -7.130393028259277
    5. ' price' → logprob: -8.130393028259277
    6. '価格' → logprob: -10.005393028259277
    7. 'The' → logprob: -10.755393028259277
    8. '价格' → logprob: -11.005393028259277
    9. 'Цена' → logprob: -11.755393028259277
    10. '"' → logprob: -11.880393028259277

Token 50: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0005084725562483072
    2. ' should' → logprob: -7.7505083084106445
    3. 'must' → logprob: -9.500508308410645
    4. ' out' → logprob: -12.750508308410645
    5. 'should' → logprob: -16.87550926208496
    6. ' должен' → logprob: -17.12550926208496
    7. ' has' → logprob: -17.12550926208496
    8. ' not' → logprob: -17.87550926208496
    9. ' debe' → logprob: -18.00050926208496
    10. ' needs' → logprob: -18.12550926208496

Token 51: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -9.245724504580721e-05
    2. '<|end|>' → logprob: -10.125092506408691
    3. 'be' → logprob: -10.500092506408691
    4. ' not' → logprob: -11.250092506408691
    5. ' between' → logprob: -11.875092506408691
    6. ' ' → logprob: -14.250092506408691
    7. 'not' → logprob: -14.375092506408691
    8. ')' → logprob: -14.375092506408691
    9. ' range' → logprob: -14.750092506408691
    10. ' to' → logprob: -14.750092506408691

Token 52: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.01108153723180294
    2. 'between' → logprob: -4.511081695556641
    3. ' ' → logprob: -11.01108169555664
    4. '100' → logprob: -11.13608169555664
    5. ' within' → logprob: -13.38608169555664
    6. ' in' → logprob: -15.13608169555664
    7. '```' → logprob: -15.13608169555664
    8. ' at' → logprob: -15.51108169555664
    9. ' an' → logprob: -16.51108169555664
    10. 'Between' → logprob: -16.88608169555664

Token 53: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6931498050689697
    2. '100' → logprob: -0.6931498050689697
    3. '```' → logprob: -13.19314956665039
    4. ' ' → logprob: -15.56814956665039
    5. '   ' → logprob: -16.00564956665039
    6. '  ' → logprob: -16.25564956665039
    7. '1' → logprob: -16.38064956665039
    8. '101' → logprob: -16.75564956665039
    9. '110' → logprob: -17.25564956665039
    10. '150' → logprob: -17.38064956665039

Token 54: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -16.125001907348633
    4. '１００' → logprob: -17.625001907348633
    5. '1' → logprob: -19.375001907348633
    6. '

' → logprob: -21.125001907348633
    7. '   ' → logprob: -21.250001907348633
    8. '10' → logprob: -21.437501907348633
    9. '101' → logprob: -21.500001907348633
    10. '0' → logprob: -21.687501907348633

Token 55: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00010020548506872728
    2. 'and' → logprob: -9.500100135803223
    3. ' ' → logprob: -10.625100135803223
    4. ',' → logprob: -14.875100135803223
    5. ' и' → logprob: -15.625100135803223
    6. '   ' → logprob: -15.875100135803223
    7. ' ,' → logprob: -16.25010108947754
    8. '```' → logprob: -17.00010108947754
    9. ')' → logprob: -17.37510108947754
    10. ' to' → logprob: -17.62510108947754

Token 56: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.07889562100172043
    2. ' ' → logprob: -2.5788955688476562
    3. '```' → logprob: -12.953895568847656
    4. '2' → logprob: -14.141395568847656
    5. '   ' → logprob: -14.516395568847656
    6. ' ' → logprob: -14.703895568847656
    7. '  ' → logprob: -14.766395568847656
    8. '199' → logprob: -15.516395568847656
    9. '300' → logprob: -15.828895568847656
    10. '100' → logprob: -16.141395568847656

Token 57: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -16.000001907348633
    4. '2' → logprob: -17.625001907348633
    5. '２００' → logprob: -18.250001907348633
    6. '20' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.562501907348633
    8. '300' → logprob: -20.062501907348633
    9. '  ' → logprob: -20.437501907348633
    10. '-' → logprob: -20.687501907348633

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.484132169745862e-05
    2. '00' → logprob: -9.625094413757324
    3. '000' → logprob: -10.500094413757324
    4. '```' → logprob: -14.750094413757324
    5. ')' → logprob: -15.000094413757324
    6. ' ' → logprob: -16.12509536743164
    7. '})' → logprob: -16.25009536743164
    8. '۰' → logprob: -16.87509536743164
    9. '٠' → logprob: -17.56259536743164
    10. '０' → logprob: -17.62509536743164

Token 59: ' yen' (ID: 34890)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12468912452459335
    2. '")
' → logprob: -2.6246891021728516
    3. '.")' → logprob: -3.3746891021728516
    4. '.")
' → logprob: -4.624689102172852
    5. '")
' → logprob: -8.124689102172852
    6. ')")' → logprob: -8.624689102172852
    7. ')' → logprob: -8.999689102172852
    8. '.")
' → logprob: -9.749689102172852
    9. ')")
' → logprob: -10.499689102172852
    10. '"' → logprob: -11.499689102172852

Token 60: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2712305188179016
    2. '")
' → logprob: -1.5212304592132568
    3. '.")' → logprob: -4.521230697631836
    4. '.")
' → logprob: -4.896230697631836
    5. '")
' → logprob: -7.396230697631836
    6. '.")
' → logprob: -9.896230697631836
    7. ')' → logprob: -10.146230697631836
    8. ')")' → logprob: -10.396230697631836
    9. ')")
' → logprob: -11.521230697631836
    10. '"' → logprob: -11.896230697631836

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002767094410955906
    2. '        
' → logprob: -9.250276565551758
    3. '   ' → logprob: -9.500276565551758
    4. '<|end|>' → logprob: -10.375276565551758
    5. ' ' → logprob: -11.250276565551758
    6. 'self' → logprob: -11.500276565551758
    7. '    
' → logprob: -11.625276565551758
    8. ' 
' → logprob: -11.750276565551758
    9. '        ' → logprob: -12.000276565551758
    10. '    ' → logprob: -12.625276565551758

Token 62: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021922526881098747
    2. ' self' → logprob: -4.146922588348389
    3. 'self' (adapté à ' self') → logprob: -5.146922588348389
    4. '   ' → logprob: -11.02192211151123
    5. '        
' → logprob: -11.14692211151123
    6. ' ' → logprob: -11.39692211151123
    7. '        ' → logprob: -12.89692211151123
    8. ' ' → logprob: -13.14692211151123
    9. '	self' → logprob: -13.39692211151123
    10. '
' → logprob: -13.52192211151123

Token 63: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.00868749525398016
    2. '.' → logprob: -4.758687496185303
    3. '._' → logprob: -10.133687019348145
    4. ' .' → logprob: -10.883687019348145
    5. 'price' → logprob: -11.633687019348145
    6. '.Price' → logprob: -13.258687019348145
    7. '	price' → logprob: -13.508687019348145
    8. '_price' → logprob: -13.633687019348145
    9. ' price' → logprob: -14.633687019348145
    10. '.pr' → logprob: -16.13368797302246

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759400725364685
    2. '=' → logprob: -0.8259400725364685
    3. ' ' → logprob: -15.200940132141113
    4. '.' → logprob: -16.575939178466797
    5. '_' → logprob: -16.575939178466797
    6. '=int' → logprob: -16.700939178466797
    7. '＝' → logprob: -17.200939178466797
    8. ' =)' → logprob: -17.200939178466797
    9. '   ' → logprob: -17.325939178466797
    10. '_=' → logprob: -17.575939178466797

Token 65: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.10020990669727325
    2. 'price' → logprob: -2.350209951400757
    3. '	price' → logprob: -12.850210189819336
    4. ' ' → logprob: -15.725210189819336
    5. '(price' → logprob: -15.975210189819336
    6. ' ' → logprob: -16.475210189819336
    7. '    ' → logprob: -16.600210189819336
    8. 'Price' → logprob: -17.100210189819336
    9. '_price' → logprob: -17.225210189819336
    10. '.price' → logprob: -17.600210189819336

Token 66: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024336811155080795
    2. '<|end|>' → logprob: -4.774336814880371
    3. '

' → logprob: -5.024336814880371
    4. '   ' → logprob: -5.399336814880371
    5. '    
' → logprob: -5.899336814880371
    6. '<|end|>' → logprob: -7.524336814880371
    7. ' 
' → logprob: -7.774336814880371
    8. '  
' → logprob: -8.024336814880371
    9. '\n' → logprob: -9.399336814880371
    10. ' ' → logprob: -9.524336814880371

Token 67: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3149286210536957
    2. '   ' → logprob: -1.439928650856018
    3. '    
' → logprob: -4.0649285316467285
    4. '<|end|>' → logprob: -4.6899285316467285
    5. ' 
' → logprob: -6.0649285316467285
    6. '@' → logprob: -6.4399285316467285
    7. '  
' → logprob: -6.5649285316467285
    8. '<|end|>' → logprob: -8.189929008483887
    9. ' ' → logprob: -8.814929008483887
    10. '' → logprob: -9.064929008483887

Token 68: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06751872599124908
    2. '@' (adapté à ' @') → logprob: -2.817518711090088
    3. '    
' → logprob: -5.817518711090088
    4. '
' → logprob: -6.442518711090088
    5. '@property' → logprob: -7.192518711090088
    6. ' @' → logprob: -8.942519187927246
    7. '@index' → logprob: -10.942519187927246
    8. ' 
' → logprob: -11.567519187927246
    9. '        
' → logprob: -11.692519187927246
    10. '@click' → logprob: -12.067519187927246

Token 69: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -9.65101717156358e-05
    2. 'property' → logprob: -9.250096321105957
    3. 'abs' → logprob: -15.500096321105957
    4. 'staticmethod' → logprob: -15.875096321105957
    5. 'ab' → logprob: -16.375097274780273
    6. 'abc' → logprob: -16.875097274780273
    7. ' abstract' → logprob: -17.375097274780273
    8. '.abstract' → logprob: -17.750097274780273
    9. 'classmethod' → logprob: -18.500097274780273
    10. '@property' → logprob: -21.000097274780273

Token 70: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00011105302110081539
    2. '_method' → logprob: -9.125110626220703
    3. 'classmethod' → logprob: -13.625110626220703
    4. 'staticmethod' → logprob: -15.250110626220703
    5. 'meth' → logprob: -15.250110626220703
    6. '.method' → logprob: -16.125110626220703
    7. 'def' → logprob: -16.500110626220703
    8. '	method' → logprob: -16.750110626220703
    9. 'property' → logprob: -16.875110626220703
    10. 'ethod' → logprob: -17.000110626220703

Token 71: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12693335115909576
    2. 'method' → logprob: -2.7519333362579346
    3. ' def' → logprob: -3.3769333362579346
    4. '<|end|>' → logprob: -4.251933574676514
    5. '
' → logprob: -6.376933574676514
    6. '    
' → logprob: -6.751933574676514
    7. 'classmethod' → logprob: -7.501933574676514
    8. ' ' → logprob: -7.626933574676514
    9. '_method' → logprob: -7.626933574676514
    10. '\' → logprob: -8.001933097839355

Token 72: '   ' (ID: 271)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.5100249648094177
    2. 'def' → logprob: -1.0100250244140625
    3. ' def' → logprob: -4.1350250244140625
    4. '
' → logprob: -4.5100250244140625
    5. '_method' → logprob: -5.8850250244140625
    6. '<|end|>' → logprob: -6.6350250244140625
    7. '    
' → logprob: -6.7600250244140625
    8. 'classmethod' → logprob: -6.8850250244140625
    9. '   ' → logprob: -7.2600250244140625
    10. '\' → logprob: -8.135025024414062

Token 73: ' def' (ID: 1056)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.13900649547576904
    2. 'classmethod' → logprob: -2.3890066146850586
    3. 'property' → logprob: -4.139006614685059
    4. 'def' (adapté à ' def') → logprob: -4.264006614685059
    5. 'abstract' → logprob: -4.889006614685059
    6. 'staticmethod' → logprob: -8.389006614685059
    7. 'abc' → logprob: -8.514006614685059
    8. ' def' → logprob: -10.889006614685059
    9. '```' → logprob: -11.264006614685059
    10. '
' → logprob: -11.264006614685059

Token 74: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.033693648874759674
    2. ' display' → logprob: -4.158693790435791
    3. ' describe' → logprob: -4.783693790435791
    4. 'get' → logprob: -5.533693790435791
    5. ' calculate' → logprob: -5.658693790435791
    6. ' description' → logprob: -7.158693790435791
    7. 'describe' → logprob: -8.283693313598633
    8. ' def' → logprob: -8.283693313598633
    9. ' ' → logprob: -9.283693313598633
    10. 'calculate' → logprob: -9.908693313598633

Token 75: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.40223929286003113
    2. '_name' → logprob: -1.2772393226623535
    3. '_description' → logprob: -3.0272393226623535
    4. '_menu' → logprob: -6.0272393226623535
    5. '_info' → logprob: -7.6522393226623535
    6. '_details' → logprob: -7.9022393226623535
    7. '_item' → logprob: -8.402238845825195
    8. '_' → logprob: -8.902238845825195
    9. '_cost' → logprob: -9.902238845825195
    10. '_title' → logprob: -10.027238845825195

Token 76: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006967439316213131
    2. '(' → logprob: -5.256967544555664
    3. 'self' → logprob: -6.631967544555664
    4. '()' → logprob: -7.881967544555664
    5. '_self' → logprob: -11.131967544555664
    6. ')' → logprob: -11.631967544555664
    7. 's' → logprob: -12.881967544555664
    8. '```' → logprob: -13.256967544555664
    9. ' self' → logprob: -13.506967544555664
    10. '   ' → logprob: -13.631967544555664

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020568605395965278
    2. '):' → logprob: -8.625205993652344
    3. ')->' → logprob: -11.250205993652344
    4. 'self' → logprob: -12.125205993652344
    5. '):
' → logprob: -12.375205993652344
    6. ' )' → logprob: -12.875205993652344
    7. ',)' → logprob: -15.625205993652344
    8. ',' → logprob: -15.625205993652344
    9. '):

' → logprob: -15.625205993652344
    10. '),' → logprob: -16.250205993652344

Token 78: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0035170409828424454
    2. '(' → logprob: -6.878517150878906
    3. 'self' → logprob: -7.128517150878906
    4. '():' → logprob: -7.128517150878906
    5. '()' → logprob: -7.753517150878906
    6. '->' → logprob: -8.378517150878906
    7. ' ->' → logprob: -9.253517150878906
    8. ':' → logprob: -10.003517150878906
    9. '   ' → logprob: -10.753517150878906
    10. '()->' → logprob: -10.878517150878906

Token 79: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804550692439079
    2. ' int' → logprob: -3.2880454063415527
    3. '   ' → logprob: -13.288045883178711
    4. ' ' → logprob: -13.663045883178711
    5. '[int' → logprob: -14.538045883178711
    6. ':int' → logprob: -15.538045883178711
    7. '```' → logprob: -15.788045883178711
    8. '	int' → logprob: -15.788045883178711
    9. '  ' → logprob: -15.913045883178711
    10. '<int' → logprob: -17.03804588317871

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1569487750530243
    2. '():' → logprob: -2.0319488048553467
    3. '<|end|>' → logprob: -4.656948566436768
    4. '()' → logprob: -5.781948566436768
    5. ':return' → logprob: -7.781948566436768
    6. '   ' → logprob: -8.406949043273926
    7. '<|end|>' → logprob: -8.656949043273926
    8. '(self' → logprob: -8.906949043273926
    9. '():
' → logprob: -9.031949043273926
    10. '```' → logprob: -9.156949043273926

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34009310603141785
    2. '<|end|>' → logprob: -1.7150931358337402
    3. '\n' → logprob: -3.0900931358337402
    4. ':' → logprob: -3.9650931358337402
    5. '
' → logprob: -4.34009313583374
    6. '\' → logprob: -4.46509313583374
    7. '   ' → logprob: -4.71509313583374
    8. ':return' → logprob: -5.21509313583374
    9. '    ' → logprob: -6.71509313583374
    10. '<|end|>' → logprob: -7.59009313583374

Token 82: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.13873912394046783
    2. 'pass' (adapté à ' pass') → logprob: -2.1387391090393066
    3. '       ' → logprob: -4.513739109039307
    4. '...' → logprob: -7.888739109039307
    5. '   ' → logprob: -8.513739585876465
    6. 'return' → logprob: -9.638739585876465
    7. '	pass' → logprob: -10.013739585876465
    8. '    ' → logprob: -10.388739585876465
    9. '\n' → logprob: -11.263739585876465
    10. ' return' → logprob: -11.263739585876465

Token 83: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05978383123874664
    2. '<|end|>' → logprob: -3.684783935546875
    3. '

' → logprob: -4.059783935546875
    4. '   ' → logprob: -5.434783935546875
    5. '\n' → logprob: -5.559783935546875
    6. '    
' → logprob: -6.309783935546875
    7. ' 
' → logprob: -6.684783935546875
    8. '


' → logprob: -6.809783935546875
    9. '<|end|>' → logprob: -7.309783935546875
    10. 'class' → logprob: -7.309783935546875

Token 84: 'class' (ID: 1444)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.23574893176555634
    2. '   ' → logprob: -2.6107490062713623
    3. '
' → logprob: -2.9857490062713623
    4. '\' → logprob: -3.6107490062713623
    5. ' 
' → logprob: -3.9857490062713623
    6. '    
' → logprob: -4.360748767852783
    7. '<|end|>' → logprob: -4.860748767852783
    8. 'newline' → logprob: -5.110748767852783
    9. '```' → logprob: -5.735748767852783
    10. '  
' → logprob: -6.235748767852783

Token 85: ' Pasta' (ID: 123886)
  Prédit: ' Burger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Burger' → logprob: -0.828370988368988
    2. ' Drink' → logprob: -1.5783710479736328
    3. ' Food' → logprob: -2.578371047973633
    4. ' Pizza' → logprob: -2.828371047973633
    5. ' Beverage' → logprob: -2.828371047973633
    6. ' Coffee' → logprob: -3.203371047973633
    7. ' Menu' → logprob: -3.578371047973633
    8. ' Hamburger' → logprob: -3.578371047973633
    9. ' Side' → logprob: -4.328371047973633
    10. ' Dish' → logprob: -4.453371047973633

Token 86: '(Menu' (ID: 57206)
  Prédit: '(Menu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Menu' → logprob: -0.014314873144030571
    2. '(' → logprob: -4.264314651489258
    3. 'Menu' → logprob: -9.639314651489258
    4. 'Item' → logprob: -10.764314651489258
    5. '(Item' → logprob: -10.764314651489258
    6. 'Dish' → logprob: -11.014314651489258
    7. '(Me' → logprob: -11.639314651489258
    8. '(menu' → logprob: -12.014314651489258
    9. '(D' → logprob: -12.514314651489258
    10. '<Menu' → logprob: -13.764314651489258

Token 87: 'Item' (ID: 1590)
  Prédit: 'Item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Item' → logprob: -5.5577775128767826e-06
    2. ')' → logprob: -12.750005722045898
    3. 'I' → logprob: -13.375005722045898
    4. 'item' → logprob: -14.500005722045898
    5. ' Item' → logprob: -15.375005722045898
    6. '	Item' → logprob: -16.1250057220459
    7. 'It' → logprob: -16.2500057220459
    8. '_Item' → logprob: -16.6250057220459
    9. '_ITEM' → logprob: -17.5000057220459
    10. '_item' → logprob: -17.7500057220459

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013483305228874087
    2. ')' → logprob: -6.626348495483398
    3. ',' → logprob: -11.376348495483398
    4. ':' → logprob: -12.501348495483398
    5. '):
' → logprob: -12.501348495483398
    6. ' ):' → logprob: -13.126348495483398
    7. '   ' → logprob: -13.751348495483398
    8. '[' → logprob: -16.3763484954834
    9. '),' → logprob: -16.6263484954834
    10. ']:' → logprob: -17.3763484954834

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01469190139323473
    2. '    
' → logprob: -5.3896918296813965
    3. ' def' → logprob: -5.7646918296813965
    4. '    ' → logprob: -6.0146918296813965
    5. 'def' → logprob: -6.0146918296813965
    6. '
' → logprob: -7.5146918296813965
    7. ' 
' → logprob: -8.014692306518555
    8. '<|end|>' → logprob: -8.014692306518555
    9. ':' → logprob: -8.389692306518555
    10. ')' → logprob: -9.139692306518555

Token 90: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6941187381744385
    2. ' def' → logprob: -0.9441187381744385
    3. '   ' → logprob: -2.1941187381744385
    4. '    ' → logprob: -13.19411849975586
    5. '	def' → logprob: -13.31911849975586
    6. ' ' → logprob: -13.44411849975586
    7. '```' → logprob: -14.56911849975586
    8. '    
' → logprob: -14.69411849975586
    9. '  ' → logprob: -15.19411849975586
    10. '
' → logprob: -15.56911849975586

Token 91: ' get' (ID: 717)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6312457323074341
    2. ' get' → logprob: -0.8812457323074341
    3. ' __' → logprob: -3.1312456130981445
    4. ' ' → logprob: -4.7562456130981445
    5. 'def' → logprob: -7.3812456130981445
    6. '__' → logprob: -7.7562456130981445
    7. 'get' → logprob: -9.006245613098145
    8. ' _' → logprob: -9.131245613098145
    9. '_get' → logprob: -9.256245613098145
    10. '  ' → logprob: -9.506245613098145

Token 92: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -5.44312788406387e-05
    2. '_' → logprob: -10.000054359436035
    3. '_p' → logprob: -12.625054359436035
    4. ' _' → logprob: -12.625054359436035
    5. '_prices' → logprob: -14.375054359436035
    6. '_value' → logprob: -14.750054359436035
    7. '_
' → logprob: -15.125054359436035
    8. '_score' → logprob: -15.750054359436035
    9. '```' → logprob: -16.25005531311035
    10. '_amount' → logprob: -16.25005531311035

Token 93: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.051672808825969696
    2. '(' → logprob: -3.0516726970672607
    3. '()' → logprob: -5.80167293548584
    4. ' (' → logprob: -10.67667293548584
    5. '(
' → logprob: -10.92667293548584
    6. '(s' → logprob: -11.55167293548584
    7. 'self' → logprob: -12.80167293548584
    8. '(

' → logprob: -13.92667293548584
    9. ' ' → logprob: -14.17667293548584
    10. '   ' → logprob: -14.55167293548584

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003567959647625685
    2. '):' → logprob: -8.375356674194336
    3. ' )' → logprob: -9.125356674194336
    4. 'self' → logprob: -12.125356674194336
    5. '()' → logprob: -12.625356674194336
    6. '())' → logprob: -13.125356674194336
    7. ' ' → logprob: -13.500356674194336
    8. ')return' → logprob: -13.500356674194336
    9. '   ' → logprob: -14.125356674194336
    10. '):
' → logprob: -14.250356674194336

Token 95: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5314419269561768
    2. ' ->' → logprob: -1.6564419269561768
    3. '(' → logprob: -1.9064419269561768
    4. '       ' → logprob: -4.031441688537598
    5. ')' → logprob: -4.156441688537598
    6. ' :' → logprob: -4.531441688537598
    7. '   ' → logprob: -4.781441688537598
    8. ' ' → logprob: -5.156441688537598
    9. '(self' → logprob: -5.906441688537598
    10. '->' → logprob: -5.906441688537598

Token 96: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47408467531204224
    2. 'int' → logprob: -0.9740846753120422
    3. ' 
' → logprob: -12.349084854125977
    4. ' ' → logprob: -12.849084854125977
    5. '   ' → logprob: -15.724084854125977
    6. '[int' → logprob: -15.724084854125977
    7. '    ' → logprob: -16.599084854125977
    8. '(int' → logprob: -16.724084854125977
    9. ':int' → logprob: -16.974084854125977
    10. '<int' → logprob: -17.474084854125977

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013234536163508892
    2. ':
' → logprob: -6.751323223114014
    3. ':return' → logprob: -9.751323699951172
    4. '       ' → logprob: -9.876323699951172
    5. '   ' → logprob: -11.001323699951172
    6. '):' → logprob: -11.376323699951172
    7. ' :' → logprob: -12.251323699951172
    8. '():' → logprob: -12.626323699951172
    9. '{' → logprob: -13.751323699951172
    10. '<|end|>' → logprob: -14.126323699951172

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009139192290604115
    2. 'return' → logprob: -5.134139060974121
    3. ' return' → logprob: -6.384139060974121
    4. '
' → logprob: -7.009139060974121
    5. '        
' → logprob: -8.009139060974121
    6. ' 
' → logprob: -9.009139060974121
    7. '```' → logprob: -9.884139060974121
    8. '    
' → logprob: -10.134139060974121
    9. '   ' → logprob: -10.259139060974121
    10. '    ' → logprob: -12.384139060974121

Token 99: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25606194138526917
    2. ' return' → logprob: -1.5060619115829468
    3. '       ' → logprob: -5.506062030792236
    4. '        
' → logprob: -10.756061553955078
    5. '
' → logprob: -11.381061553955078
    6. '   ' → logprob: -11.631061553955078
    7. ' 
' → logprob: -12.006061553955078
    8. 'self' → logprob: -12.631061553955078
    9. '```' → logprob: -13.006061553955078
    10. ':return' → logprob: -13.131061553955078

Token 100: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.00671584764495492
    2. 'self' → logprob: -5.006715774536133
    3. ' super' → logprob: -15.381715774536133
    4. ' ' → logprob: -16.256715774536133
    5. '       ' → logprob: -16.756715774536133
    6. ' ' → logprob: -17.256715774536133
    7. '   ' → logprob: -18.131715774536133
    8. '	self' → logprob: -18.506715774536133
    9. '(self' → logprob: -19.506715774536133
    10. 'super' → logprob: -19.631715774536133

Token 101: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.061985280364751816
    2. '.' → logprob: -2.8119852542877197
    3. 'price' → logprob: -11.81198501586914
    4. ' .' → logprob: -11.93698501586914
    5. '.Price' → logprob: -13.93698501586914
    6. '.p' → logprob: -14.18698501586914
    7. '.
' → logprob: -14.93698501586914
    8. '._' → logprob: -15.06198501586914
    9. '.payment' → logprob: -15.68698501586914
    10. '.pr' → logprob: -15.93698501586914

Token 102: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09872101247310638
    2. '<|end|>' → logprob: -2.4737210273742676
    3. '

' → logprob: -5.723721027374268
    4. ' 
' → logprob: -6.473721027374268
    5. '\n' → logprob: -6.473721027374268
    6. '<|end|>' → logprob: -6.973721027374268
    7. '    
' → logprob: -7.348721027374268
    8. '  
' → logprob: -7.723721027374268
    9. 'class' → logprob: -7.723721027374268
    10. '```' → logprob: -8.34872055053711

Token 103: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020998310297727585
    2. '<|end|>' → logprob: -4.145998477935791
    3. '    
' → logprob: -6.895998477935791
    4. '\n' → logprob: -7.145998477935791
    5. 'class' → logprob: -7.270998477935791
    6. '  
' → logprob: -7.770998477935791
    7. '   ' → logprob: -7.770998477935791
    8. '

' → logprob: -7.895998477935791
    9. ' 
' → logprob: -8.145998001098633
    10. '```' → logprob: -8.395998001098633

Token 104: ' Juice' (ID: 99085)
  Prédit: ' Pizza'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Pizza' → logprob: -1.2887383699417114
    2. ' Salad' → logprob: -1.2887383699417114
    3. 'Pizza' → logprob: -1.2887383699417114
    4. ' Burger' → logprob: -3.163738250732422
    5. 'Sal' → logprob: -3.413738250732422
    6. ' Sushi' → logprob: -3.663738250732422
    7. 'Burger' → logprob: -3.913738250732422
    8. ' Curry' → logprob: -5.038738250732422
    9. 'S' → logprob: -5.163738250732422
    10. ' Hamburger' → logprob: -5.288738250732422

Token 105: '(Menu' (ID: 57206)
  Prédit: '(Menu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Menu' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -10.75002670288086
    3. ' (' → logprob: -12.50002670288086
    4. '(Me' → logprob: -14.12502670288086
    5. '(menu' → logprob: -15.87502670288086
    6. '(
' → logprob: -16.37502670288086
    7. '<Menu' → logprob: -17.00002670288086
    8. '(Movie' → logprob: -17.25002670288086
    9. '/Menu' → logprob: -17.37502670288086
    10. ' ' → logprob: -17.50002670288086

Token 106: 'Item' (ID: 1590)
  Prédit: 'Item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Item' → logprob: -1.3782830137643032e-05
    2. 'I' → logprob: -11.37501335144043
    3. ')' → logprob: -14.37501335144043
    4. 'It' → logprob: -14.75001335144043
    5. 'item' → logprob: -14.87501335144043
    6. '	Item' → logprob: -15.00001335144043
    7. ' Item' → logprob: -15.50001335144043
    8. '_Item' → logprob: -16.37501335144043
    9. '):' → logprob: -17.00001335144043
    10. '(Item' → logprob: -17.00001335144043

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000330220878822729
    2. ')' → logprob: -8.250329971313477
    3. '):
' → logprob: -9.625329971313477
    4. ':' → logprob: -13.125329971313477
    5. ' ):' → logprob: -15.125329971313477
    6. '):
' → logprob: -15.250329971313477
    7. '   ' → logprob: -15.500329971313477
    8. '):

' → logprob: -16.625329971313477
    9. ',' → logprob: -16.875329971313477
    10. '}:' → logprob: -18.125329971313477

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003398726985324174
    2. ' def' → logprob: -8.00033950805664
    3. '
' → logprob: -13.12533950805664
    4. 'def' → logprob: -13.37533950805664
    5. '    
' → logprob: -14.50033950805664
    6. ' ' → logprob: -15.75033950805664
    7. '   ' → logprob: -16.75033950805664
    8. ' indentation' → logprob: -16.75033950805664
    9. '```' → logprob: -17.25033950805664
    10. '  ' → logprob: -17.50033950805664

Token 109: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00022523177904076874
    2. ' def' → logprob: -8.875225067138672
    3. '   ' → logprob: -9.375225067138672
    4. 'get' → logprob: -15.500225067138672
    5. '	def' → logprob: -16.125225067138672
    6. 'class' → logprob: -16.250225067138672
    7. '@' → logprob: -16.625225067138672
    8. 'from' → logprob: -17.750225067138672
    9. ' ' → logprob: -17.875225067138672
    10. '  ' → logprob: -18.250225067138672

Token 110: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.10078980773687363
    2. 'get' → logprob: -2.350789785385132
    3. '_get' → logprob: -8.100790023803711
    4. ' def' → logprob: -8.600790023803711
    5. 'def' → logprob: -10.225790023803711
    6. ' ' → logprob: -10.225790023803711
    7. ' __' → logprob: -11.350790023803711
    8. '__' → logprob: -12.600790023803711
    9. '.get' → logprob: -12.850790023803711
    10. ' _' → logprob: -13.600790023803711

Token 111: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.50000286102295
    3. 'price' → logprob: -14.62500286102295
    4. '_code' → logprob: -16.125001907348633
    5. '_value' → logprob: -16.250001907348633
    6. '_amount' → logprob: -16.750001907348633
    7. '_prices' → logprob: -16.875001907348633
    8. 'Price' → logprob: -17.125001907348633
    9. '_PRICE' → logprob: -17.250001907348633
    10. '   ' → logprob: -18.000001907348633

Token 112: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019523106515407562
    2. '(' → logprob: -4.3945231437683105
    3. '(self' → logprob: -5.2695231437683105
    4. ' ()' → logprob: -6.5195231437683105
    5. '())' → logprob: -9.394522666931152
    6. '()
' → logprob: -9.394522666931152
    7. '()+' → logprob: -9.644522666931152
    8. '       ' → logprob: -10.144522666931152
    9. '(
' → logprob: -10.644522666931152
    10. '   ' → logprob: -11.269522666931152

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023202260490506887
    2. ' )' → logprob: -6.127320289611816
    3. '):' → logprob: -10.627320289611816
    4. '   ' → logprob: -10.877320289611816
    5. ')return' → logprob: -10.877320289611816
    6. '-' → logprob: -11.002320289611816
    7. '    ' → logprob: -11.502320289611816
    8. ' -' → logprob: -11.877320289611816
    9. ' ' → logprob: -11.877320289611816
    10. 'return' → logprob: -12.627320289611816

Token 114: ' ->' (ID: 2747)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.723599910736084
    2. '       ' → logprob: -1.473599910736084
    3. ' return' → logprob: -2.848599910736084
    4. '+' → logprob: -3.223599910736084
    5. ' ' → logprob: -3.223599910736084
    6. ':' → logprob: -3.223599910736084
    7. ' *' → logprob: -3.723599910736084
    8. '        ' → logprob: -4.098599910736084
    9. '()' → logprob: -4.223599910736084
    10. 'return' → logprob: -4.348599910736084

Token 115: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005929393693804741
    2. ' int' → logprob: -5.130929470062256
    3. ' ' → logprob: -14.630928993225098
    4. '   ' → logprob: -16.255929946899414
    5. 'self' → logprob: -17.005929946899414
    6. '[int' → logprob: -17.005929946899414
    7. '(int' → logprob: -17.505929946899414
    8. '<int' → logprob: -17.630929946899414
    9. '100' → logprob: -17.630929946899414
    10. ':int' → logprob: -17.880929946899414

Token 116: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6345838904380798
    2. ':' → logprob: -0.8845838904380798
    3. ':
' → logprob: -3.2595839500427246
    4. '+' → logprob: -5.509583950042725
    5. ' +' → logprob: -5.634583950042725
    6. ' return' → logprob: -6.009583950042725
    7. ')' → logprob: -6.134583950042725
    8. 'return' → logprob: -6.509583950042725
    9. ':return' → logprob: -6.634583950042725
    10. '()' → logprob: -7.384583950042725

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02130795083940029
    2. 'return' → logprob: -4.146307945251465
    3. ' return' → logprob: -5.271307945251465
    4. '   ' → logprob: -9.771307945251465
    5. 'self' → logprob: -9.896307945251465
    6. ' self' → logprob: -12.021307945251465
    7. '0' → logprob: -12.521307945251465
    8. '```' → logprob: -13.396307945251465
    9. '	return' → logprob: -14.021307945251465
    10. '      ' → logprob: -14.021307945251465

Token 118: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12056763470172882
    2. ' return' → logprob: -2.245567560195923
    3. '       ' → logprob: -4.870567798614502
    4. '   ' → logprob: -10.495567321777344
    5. '```' → logprob: -12.620567321777344
    6. ' ' → logprob: -12.745567321777344
    7. '0' → logprob: -13.120567321777344
    8. '	return' → logprob: -13.370567321777344
    9. 'self' → logprob: -13.620567321777344
    10. '           ' → logprob: -13.870567321777344

Token 119: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.693198025226593
    2. 'self' → logprob: -0.693198025226593
    3. '       ' → logprob: -10.818198204040527
    4. '   ' → logprob: -11.818198204040527
    5. ' ' → logprob: -12.068198204040527
    6. '0' → logprob: -12.568198204040527
    7. '100' → logprob: -12.818198204040527
    8. '10' → logprob: -13.193198204040527
    9. '20' → logprob: -13.443198204040527
    10. '	self' → logprob: -13.568198204040527

Token 120: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.018233058974146843
    2. '.' → logprob: -4.018232822418213
    3. 'price' → logprob: -9.518233299255371
    4. ' .' → logprob: -11.768233299255371
    5. '.
' → logprob: -15.143233299255371
    6. '.user' → logprob: -15.268233299255371
    7. '.p' → logprob: -15.768233299255371
    8. '.score' → logprob: -15.768233299255371
    9. '.password' → logprob: -15.893233299255371
    10. '.pr' → logprob: -16.143232345581055

Token 121: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09622398018836975
    2. 'class' → logprob: -2.596224069595337
    3. '

' → logprob: -4.346223831176758
    4. '<|end|>' → logprob: -5.596223831176758
    5. ' class' → logprob: -8.221223831176758
    6. '```' → logprob: -9.346223831176758
    7. '
' → logprob: -9.971223831176758
    8. '<|end|>' → logprob: -10.471223831176758
    9. '


' → logprob: -10.846223831176758
    10. '  
' → logprob: -11.346223831176758

Token 122: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004771634005010128
    2. '
' → logprob: -5.379771709442139
    3. '

' → logprob: -9.87977123260498
    4. 'from' → logprob: -10.25477123260498
    5. 'def' → logprob: -10.25477123260498
    6. ' class' → logprob: -11.37977123260498
    7. '  
' → logprob: -12.87977123260498
    8. 'c' → logprob: -13.00477123260498
    9. '```' → logprob: -13.00477123260498
    10. '<|end|>' → logprob: -13.12977123260498

Token 123: ' Set' (ID: 3957)
  Prédit: ' Salad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Salad' → logprob: -1.4992060661315918
    2. ' Combo' → logprob: -2.249206066131592
    3. ' Burger' → logprob: -2.249206066131592
    4. ' Menu' → logprob: -2.749206066131592
    5. 'Combo' → logprob: -2.999206066131592
    6. ' Set' → logprob: -2.999206066131592
    7. ' Dessert' → logprob: -3.249206066131592
    8. 'Set' → logprob: -3.374206066131592
    9. 'Burger' → logprob: -3.624206066131592
    10. 'Menu' → logprob: -3.624206066131592

Token 124: 'Menu' (ID: 4337)
  Prédit: 'Menu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Menu' → logprob: -0.1648567169904709
    2. 'Meal' → logprob: -1.9148566722869873
    3. '(Menu' → logprob: -5.539856910705566
    4. '<Menu' → logprob: -8.164856910705566
    5. 'Item' → logprob: -8.414856910705566
    6. '(' → logprob: -10.289856910705566
    7. '	Menu' → logprob: -11.039856910705566
    8. 'Price' → logprob: -11.164856910705566
    9. 'Meals' → logprob: -11.289856910705566
    10. 'Product' → logprob: -11.539856910705566

Token 125: 'Combination' (ID: 114627)
  Prédit: '(Menu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Menu' → logprob: -0.10024603456258774
    2. '(' → logprob: -2.350245952606201
    3. ':' → logprob: -10.60024642944336
    4. '(menu' → logprob: -11.97524642944336
    5. '(Item' → logprob: -13.10024642944336
    6. ' (' → logprob: -13.47524642944336
    7. '<Menu' → logprob: -13.85024642944336
    8. ' :' → logprob: -14.60024642944336
    9. '(Me' → logprob: -14.72524642944336
    10. '(
' → logprob: -14.85024642944336

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13393013179302216
    2. '(' → logprob: -2.258930206298828
    3. '(Menu' → logprob: -3.883930206298828
    4. '():' → logprob: -8.883930206298828
    5. '(List' → logprob: -9.758930206298828
    6. ' :' → logprob: -10.008930206298828
    7. '(Abstract' → logprob: -11.508930206298828
    8. 'Menu' → logprob: -11.508930206298828
    9. '(object' → logprob: -11.508930206298828
    10. '<Menu' → logprob: -11.883930206298828

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3303775191307068
    2. ' def' → logprob: -1.3303775787353516
    3. 'def' → logprob: -4.080377578735352
    4. '    ' → logprob: -10.080377578735352
    5. '    
' → logprob: -11.080377578735352
    6. ' ' → logprob: -12.580377578735352
    7. '```' → logprob: -12.830377578735352
    8. '	def' → logprob: -13.330377578735352
    9. 'class' → logprob: -13.455377578735352
    10. '  ' → logprob: -13.955377578735352

Token 128: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.31351354718208313
    2. 'def' (adapté à ' def') → logprob: -1.3135135173797607
    3. '   ' → logprob: -8.31351375579834
    4. ' ' → logprob: -12.56351375579834
    5. 'class' → logprob: -14.56351375579834
    6. ' items' → logprob: -14.93851375579834
    7. 'from' → logprob: -14.93851375579834
    8. '	def' → logprob: -15.43851375579834
    9. ' MAX' → logprob: -15.81351375579834
    10. 'de' → logprob: -15.81351375579834

Token 129: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0005562512087635696
    2. ' def' → logprob: -7.625556468963623
    3. '__' → logprob: -10.125555992126465
    4. ' init' → logprob: -10.875555992126465
    5. 'def' → logprob: -12.750555992126465
    6. '_init' → logprob: -12.875555992126465
    7. 'init' → logprob: -13.250555992126465
    8. ' _' → logprob: -13.625555992126465
    9. ' ' → logprob: -14.875555992126465
    10. ' ___' → logprob: -15.000555992126465

Token 130: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'in' → logprob: -16.125
    3. 'ini' → logprob: -16.375
    4. 'i' → logprob: -16.625
    5. '```' → logprob: -17.5
    6. 'int' → logprob: -17.75
    7. '   ' → logprob: -18.875
    8. '
' → logprob: -19.0
    9. ' init' → logprob: -19.125
    10. 'def' → logprob: -19.25

Token 131: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00040695868665352464
    2. '__' → logprob: -8.000407218933105
    3. '__(
' → logprob: -9.625407218933105
    4. '(self' → logprob: -12.375407218933105
    5. '__((' → logprob: -14.125407218933105
    6. '_(' → logprob: -15.500407218933105
    7. '__('' → logprob: -15.750407218933105
    8. '(' → logprob: -16.75040626525879
    9. '__(*' → logprob: -17.37540626525879
    10. '__("' → logprob: -17.50040626525879

Token 132: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010366239439463243
    2. ' self' → logprob: -9.250103950500488
    3. '
' → logprob: -12.125103950500488
    4. '(self' → logprob: -15.000103950500488
    5. '	self' → logprob: -15.250103950500488
    6. 's' → logprob: -15.375103950500488
    7. '0' → logprob: -15.375103950500488
    8. ',' → logprob: -15.375103950500488
    9. '       ' → logprob: -15.500103950500488
    10. ')' → logprob: -15.625103950500488

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019425487145781517
    2. 'self' → logprob: -4.644425392150879
    3. ' ,' → logprob: -5.019425392150879
    4. '(self' → logprob: -6.144425392150879
    5. ' (' → logprob: -8.394425392150879
    6. '__(' → logprob: -8.644425392150879
    7. ')' → logprob: -8.644425392150879
    8. ' self' → logprob: -9.519425392150879
    9. ',self' → logprob: -9.644425392150879
    10. '_items' → logprob: -10.519425392150879

Token 134: ' pasta' (ID: 33847)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.8607330918312073
    2. ' main' → logprob: -1.6107330322265625
    3. ' menu' → logprob: -2.3607330322265625
    4. 'p' → logprob: -2.6107330322265625
    5. ' pasta' → logprob: -2.7357330322265625
    6. 'items' → logprob: -3.1107330322265625
    7. ' self' → logprob: -3.6107330322265625
    8. 'menu' → logprob: -3.9857330322265625
    9. ' menus' → logprob: -4.7357330322265625
    10. 'self' → logprob: -4.7357330322265625

Token 135: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030109355226159096
    2. 's' → logprob: -3.530109405517578
    3. '_items' → logprob: -8.530109405517578
    4. ',' → logprob: -9.280109405517578
    5. ' :' → logprob: -10.655109405517578
    6. '_price' → logprob: -11.155109405517578
    7. '_list' → logprob: -11.905109405517578
    8. 'items' → logprob: -11.905109405517578
    9. 'es' → logprob: -12.655109405517578
    10. '1' → logprob: -12.905109405517578

Token 136: ' Pasta' (ID: 123886)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.43256765604019165
    2. ' Pasta' → logprob: -1.1825675964355469
    3. ' Menu' → logprob: -3.307567596435547
    4. 'Menu' → logprob: -4.932567596435547
    5. ' P' → logprob: -7.807567596435547
    6. '	P' → logprob: -8.932567596435547
    7. ' List' → logprob: -9.182567596435547
    8. ' ' → logprob: -9.307567596435547
    9. 'List' → logprob: -9.557567596435547
    10. '   ' → logprob: -11.807567596435547

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.028536492725834e-05
    2. ' ,' → logprob: -9.625070571899414
    3. '   ' → logprob: -13.500070571899414
    4. ')' → logprob: -14.000070571899414
    5. ',
' → logprob: -14.250070571899414
    6. '):' → logprob: -14.875070571899414
    7. ' ' → logprob: -15.250070571899414
    8. '‌,' → logprob: -15.625070571899414
    9. '  ' → logprob: -16.312570571899414
    10. '       ' → logprob: -16.312570571899414

Token 138: ' juice' (ID: 29915)
  Prédit: ' juice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' juice' → logprob: -0.39266857504844666
    2. 'juice' → logprob: -1.142668604850769
    3. 'ju' → logprob: -5.267668724060059
    4. ' ju' → logprob: -8.642668724060059
    5. ' ' → logprob: -8.767668724060059
    6. ' juices' → logprob: -9.642668724060059
    7. '   ' → logprob: -9.767668724060059
    8. '    ' → logprob: -10.642668724060059
    9. ' 
' → logprob: -10.892668724060059
    10. '  ' → logprob: -11.142668724060059

Token 139: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016074994346126914
    2. '):' → logprob: -9.000161170959473
    3. ')' → logprob: -10.500161170959473
    4. ' :' → logprob: -12.125161170959473
    5. ' ):' → logprob: -13.250161170959473
    6. '):
' → logprob: -13.500161170959473
    7. ' )' → logprob: -14.875161170959473
    8. '```' → logprob: -16.000160217285156
    9. 'Ju' → logprob: -16.250160217285156
    10. '1' → logprob: -16.375160217285156

Token 140: ' Juice' (ID: 99085)
  Prédit: ' Juice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Juice' → logprob: -0.5234094858169556
    2. 'Ju' → logprob: -0.8984094858169556
    3. ' Ju' → logprob: -8.523409843444824
    4. ' juice' → logprob: -9.773409843444824
    5. ' ' → logprob: -11.523409843444824
    6. ')' → logprob: -11.648409843444824
    7. 'juice' → logprob: -12.648409843444824
    8. ' )' → logprob: -12.773409843444824
    9. ' ' → logprob: -13.148409843444824
    10. 'J' → logprob: -13.898409843444824

Token 141: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1344173401594162
    2. '):
' → logprob: -2.1344172954559326
    3. ')' → logprob: -5.384417533874512
    4. ',' → logprob: -5.884417533874512
    5. ' ):' → logprob: -10.509417533874512
    6. '   ' → logprob: -10.759417533874512
    7. '):
' → logprob: -10.884417533874512
    8. ':' → logprob: -11.509417533874512
    9. ' ):
' → logprob: -12.134417533874512
    10. '       ' → logprob: -13.634417533874512

Token 142: ' discount' (ID: 11522)
  Prédit: ' discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' discount' → logprob: -0.20636864006519318
    2. 'discount' → logprob: -1.7063686847686768
    3. ' set' → logprob: -6.706368446350098
    4. ' combo' → logprob: -7.206368446350098
    5. 'set' → logprob: -7.331368446350098
    6. ' ' → logprob: -7.831368446350098
    7. '   ' → logprob: -8.206368446350098
    8. ' price' → logprob: -8.581368446350098
    9. ' menu' → logprob: -8.706368446350098
    10. 'combo' → logprob: -8.956368446350098

Token 143: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009712420403957367
    2. ':int' → logprob: -4.884712219238281
    3. '_percentage' → logprob: -6.884712219238281
    4. '_percent' → logprob: -7.509712219238281
    5. '_rate' → logprob: -8.134712219238281
    6. ' :' → logprob: -9.884712219238281
    7. '_:' → logprob: -10.009712219238281
    8. '_amount' → logprob: -10.009712219238281
    9. '_ratio' → logprob: -10.384712219238281
    10. '_price' → logprob: -11.009712219238281

Token 144: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0038222908042371273
    2. ' int' → logprob: -5.628822326660156
    3. 'float' → logprob: -9.003822326660156
    4. ':int' → logprob: -10.253822326660156
    5. '100' → logprob: -10.878822326660156
    6. '[int' → logprob: -11.378822326660156
    7. ')' → logprob: -11.878822326660156
    8. '	int' → logprob: -12.253822326660156
    9. '10' → logprob: -12.503822326660156
    10. '20' → logprob: -12.628822326660156

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01724240556359291
    2. '):
' → logprob: -4.142242431640625
    3. ':' → logprob: -7.517242431640625
    4. '=' → logprob: -7.767242431640625
    5. ')' → logprob: -9.017242431640625
    6. '):
' → logprob: -9.642242431640625
    7. ' ):' → logprob: -10.642242431640625
    8. '   ' → logprob: -10.892242431640625
    9. ' ' → logprob: -12.392242431640625
    10. ',' → logprob: -13.142242431640625

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03081463649868965
    2. ':' → logprob: -3.5308146476745605
    3. '):' → logprob: -8.155814170837402
    4. ':
' → logprob: -8.280814170837402
    5. '
' → logprob: -8.905814170837402
    6. ')' → logprob: -9.155814170837402
    7. '):
' → logprob: -9.405814170837402
    8. '<|end|>' → logprob: -9.405814170837402
    9. '   ' → logprob: -10.030814170837402
    10. ',' → logprob: -10.405814170837402

Token 147: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3692239820957184
    2. '       ' → logprob: -1.869223952293396
    3. ' self' → logprob: -1.869223952293396
    4. '   ' → logprob: -8.744223594665527
    5. ' ' → logprob: -10.244223594665527
    6. '	self' → logprob: -10.619223594665527
    7. '      ' → logprob: -12.119223594665527
    8. '     ' → logprob: -12.244223594665527
    9. '    ' → logprob: -12.744223594665527
    10. ' if' → logprob: -12.869223594665527

Token 148: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.47419440746307373
    2. '.' → logprob: -0.9741944074630737
    3. ' .' → logprob: -9.349194526672363
    4. 'p' → logprob: -11.099194526672363
    5. '=p' → logprob: -13.224194526672363
    6. '=' → logprob: -13.474194526672363
    7. ' =' → logprob: -13.599194526672363
    8. '.P' → logprob: -13.849194526672363
    9. '.pkl' → logprob: -13.849194526672363
    10. '._' → logprob: -14.099194526672363

Token 149: 'asta' (ID: 6307)
  Prédit: 'asta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asta' → logprob: -1.3856492842023727e-06
    2. 'ast' → logprob: -14.875000953674316
    3. 'asti' → logprob: -15.375000953674316
    4. 'p' → logprob: -15.625000953674316
    5. 'a' → logprob: -16.500001907348633
    6. 'astas' → logprob: -16.500001907348633
    7. 'аста' → logprob: -16.500001907348633
    8. 'ata' → logprob: -16.750001907348633
    9. 'ro' → logprob: -17.500001907348633
    10. '```' → logprob: -17.875001907348633

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47416990995407104
    2. ' =' → logprob: -0.974169909954071
    3. ',' → logprob: -9.474169731140137
    4. '=p' → logprob: -11.599169731140137
    5. ':' → logprob: -13.224169731140137
    6. ' ' → logprob: -13.599169731140137
    7. '_price' → logprob: -13.974169731140137
    8. '.' → logprob: -14.224169731140137
    9. ')' → logprob: -14.849169731140137
    10. '.price' → logprob: -15.474169731140137

Token 151: ' pasta' (ID: 33847)
  Prédit: ' pasta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pasta' → logprob: -0.22546467185020447
    2. 'p' → logprob: -1.6004647016525269
    3. ' paste' → logprob: -11.100464820861816
    4. ' p' → logprob: -11.100464820861816
    5. ' pâ' → logprob: -11.850464820861816
    6. '_p' → logprob: -12.600464820861816
    7. 'paste' → logprob: -12.725464820861816
    8. '	p' → logprob: -13.225464820861816
    9. ' past' → logprob: -13.850464820861816
    10. 'pas' → logprob: -13.975464820861816

Token 152: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021288490388542414
    2. 'self' → logprob: -6.252129077911377
    3. '
' → logprob: -9.502128601074219
    4. ' self' → logprob: -9.627128601074219
    5. ',' → logprob: -9.877128601074219
    6. '        
' → logprob: -12.752128601074219
    7. '   ' → logprob: -13.252128601074219
    8. ' ' → logprob: -14.502128601074219
    9. ',
' → logprob: -14.502128601074219
    10. '<|end|>' → logprob: -14.877128601074219

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012485992163419724
    2. 'self' → logprob: -4.512485980987549
    3. ' self' → logprob: -7.137485980987549
    4. ',' → logprob: -7.512485980987549
    5. '        
' → logprob: -10.262486457824707
    6. ' ' → logprob: -11.262486457824707
    7. '
' → logprob: -11.387486457824707
    8. '        ' → logprob: -11.762486457824707
    9. ' ,' → logprob: -11.887486457824707
    10. '   ' → logprob: -12.512486457824707

Token 154: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07035151869058609
    2. 'juice' → logprob: -3.5703516006469727
    3. '       ' → logprob: -3.8203516006469727
    4. ' self' → logprob: -4.070351600646973
    5. ' juice' → logprob: -8.070351600646973
    6. '   ' → logprob: -8.195351600646973
    7. 'ju' → logprob: -8.695351600646973
    8. '	self' → logprob: -11.570351600646973
    9. ' ' → logprob: -12.195351600646973
    10. '(self' → logprob: -12.695351600646973

Token 155: '.j' (ID: 1760)
  Prédit: '.j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.j' → logprob: -0.10146201401948929
    2. '.' → logprob: -2.4764621257781982
    3. '.p' → logprob: -4.601461887359619
    4. 'juice' → logprob: -6.601461887359619
    5. ' .' → logprob: -7.101461887359619
    6. 'p' → logprob: -10.101462364196777
    7. '.just' → logprob: -10.226462364196777
    8. 'ju' → logprob: -10.726462364196777
    9. '   ' → logprob: -11.101462364196777
    10. '```' → logprob: -11.226462364196777

Token 156: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.1008713702030946e-06
    2. ' u' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.625001907348633
    4. 'ui' → logprob: -16.750001907348633
    5. 'uce' → logprob: -17.125001907348633
    6. '(u' → logprob: -17.500001907348633
    7. 'uisce' → logprob: -17.500001907348633
    8. 'uc' → logprob: -18.375001907348633
    9. 'juice' → logprob: -18.500001907348633
    10. '```' → logprob: -18.500001907348633

Token 157: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -5.0259150157216936e-05
    2. ' ice' → logprob: -10.75005054473877
    3. 'ic' → logprob: -11.75005054473877
    4. '```' → logprob: -12.50005054473877
    5. '   ' → logprob: -12.75005054473877
    6. 'i' → logprob: -13.37505054473877
    7. 'ices' → logprob: -13.62505054473877
    8. 'ce' → logprob: -13.62505054473877
    9. 'Ice' → logprob: -13.75005054473877
    10. '
' → logprob: -13.75005054473877

Token 158: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8813080191612244
    2. '<|end|>' → logprob: -0.8813080191612244
    3. '.' → logprob: -2.256308078765869
    4. '=' → logprob: -3.881308078765869
    5. ' ' → logprob: -4.506308078765869
    6. ' ,' → logprob: -4.631308078765869
    7. ' =' → logprob: -5.006308078765869
    8. '<|end|>' → logprob: -5.256308078765869
    9. ')' → logprob: -5.381308078765869
    10. ' .' → logprob: -5.756308078765869

Token 159: ' juice' (ID: 29915)
  Prédit: 'juice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'juice' → logprob: -0.2520800232887268
    2. ' juice' → logprob: -1.502079963684082
    3. 'ju' → logprob: -9.002079963684082
    4. ' ju' → logprob: -11.377079963684082
    5. ' Juice' → logprob: -12.752079963684082
    6. 'jug' → logprob: -13.002079963684082
    7. 'Ju' → logprob: -13.127079963684082
    8. ' ' → logprob: -13.252079963684082
    9. '```' → logprob: -13.502079963684082
    10. 'jus' → logprob: -14.314579963684082

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005031120381318033
    2. 'self' → logprob: -7.875503063201904
    3. '
' → logprob: -9.500503540039062
    4. ' self' → logprob: -10.250503540039062
    5. '        
' → logprob: -12.250503540039062
    6. '   ' → logprob: -12.625503540039062
    7. ',' → logprob: -13.500503540039062
    8. '<|end|>' → logprob: -13.750503540039062
    9. '           ' → logprob: -14.625503540039062
    10. '      ' → logprob: -15.375503540039062

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020903039257973433
    2. 'self' → logprob: -6.2520904541015625
    3. '   ' → logprob: -8.877090454101562
    4. ' self' → logprob: -11.002090454101562
    5. '
' → logprob: -12.627090454101562
    6. '	self' → logprob: -14.377090454101562
    7. '      ' → logprob: -14.752090454101562
    8. '     ' → logprob: -14.877090454101562
    9. '        
' → logprob: -15.002090454101562
    10. ',self' → logprob: -16.002090454101562

Token 162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.183501293184236e-05
    2. ' self' → logprob: -10.00007152557373
    3. '       ' → logprob: -10.75007152557373
    4. 'discount' → logprob: -12.75007152557373
    5. 'if' → logprob: -13.25007152557373
    6. '
' → logprob: -16.375072479248047
    7. '   ' → logprob: -16.375072479248047
    8. '	self' → logprob: -18.375072479248047
    9. ' if' → logprob: -18.875072479248047
    10. '           ' → logprob: -19.000072479248047

Token 163: '.discount' (ID: 138755)
  Prédit: '.discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.discount' → logprob: -0.0014573780354112387
    2. '.' → logprob: -7.001457214355469
    3. '.dis' → logprob: -8.626457214355469
    4. 'discount' → logprob: -8.876457214355469
    5. ' .' → logprob: -9.001457214355469
    6. '.price' → logprob: -9.251457214355469
    7. ' discount' → logprob: -13.376457214355469
    8. '.damage' → logprob: -14.001457214355469
    9. '_discount' → logprob: -14.376457214355469
    10. '
' → logprob: -14.626457214355469

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931955814361572
    2. ' =' → logprob: -0.6931955814361572
    3. ' ' → logprob: -9.943195343017578
    4. ' =
' → logprob: -16.193195343017578
    5. '=int' → logprob: -16.443195343017578
    6. '   ' → logprob: -16.818195343017578
    7. ' ' → logprob: -17.068195343017578
    8. '    ' → logprob: -17.443195343017578
    9. '.' → logprob: -17.943195343017578
    10. '<|end|>' → logprob: -17.943195343017578

Token 165: ' discount' (ID: 11522)
  Prédit: 'discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.06198595091700554
    2. ' discount' → logprob: -2.811985969543457
    3. 'dis' → logprob: -11.061985969543457
    4. ' ' → logprob: -14.561985969543457
    5. 'disc' → logprob: -15.061985969543457
    6. 'int' → logprob: -15.186985969543457
    7. '0' → logprob: -15.436985969543457
    8. '_discount' → logprob: -15.686985969543457
    9. '.discount' → logprob: -15.686985969543457
    10. '   ' → logprob: -15.811985969543457

Token 166: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.498823881149292
    2. '   ' → logprob: -0.998823881149292
    3. '<|end|>' → logprob: -3.998823881149292
    4. '    
' → logprob: -6.248824119567871
    5. 'def' → logprob: -6.498824119567871
    6. ' def' → logprob: -6.623824119567871
    7. '

' → logprob: -7.623824119567871
    8. '  
' → logprob: -8.248824119567871
    9. '<|end|>' → logprob: -8.373824119567871
    10. ' ' → logprob: -9.373824119567871

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19561810791492462
    2. '
' → logprob: -1.9456181526184082
    3. 'def' → logprob: -4.195618152618408
    4. '<|end|>' → logprob: -4.320618152618408
    5. ' def' → logprob: -5.570618152618408
    6. '    
' → logprob: -6.320618152618408
    7. ' ' → logprob: -8.57061767578125
    8. '  ' → logprob: -8.94561767578125
    9. '<|end|>' → logprob: -8.94561767578125
    10. '  
' → logprob: -9.07061767578125

Token 168: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.763666947837919e-05
    2. ' def' → logprob: -10.00004768371582
    3. '@property' → logprob: -13.25004768371582
    4. '   ' → logprob: -14.87504768371582
    5. '@' → logprob: -17.62504768371582
    6. ' ' → logprob: -20.00004768371582
    7. '    
' → logprob: -20.25004768371582
    8. 'class' → logprob: -20.50004768371582
    9. '	def' → logprob: -21.12504768371582
    10. '  ' → logprob: -22.00004768371582

Token 169: ' total' (ID: 3609)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.2648659348487854
    2. 'get' → logprob: -1.5148658752441406
    3. ' calculate' → logprob: -5.264865875244141
    4. ' total' → logprob: -5.764865875244141
    5. 'calculate' → logprob: -5.889865875244141
    6. 'total' → logprob: -6.889865875244141
    7. ' ' → logprob: -8.26486587524414
    8. 'def' → logprob: -8.88986587524414
    9. ' apply' → logprob: -9.51486587524414
    10. ' def' → logprob: -9.51486587524414

Token 170: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0007356545538641512
    2. '_' → logprob: -7.375735759735107
    3. '_cost' → logprob: -9.50073528289795
    4. '_amount' → logprob: -11.12573528289795
    5. '(self' → logprob: -11.87573528289795
    6. '()' → logprob: -12.00073528289795
    7. '(' → logprob: -13.50073528289795
    8. '_prices' → logprob: -13.87573528289795
    9. ' _' → logprob: -14.12573528289795
    10. '_p' → logprob: -14.75073528289795

Token 171: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033593899570405483
    2. '(' → logprob: -8.125335693359375
    3. ' (' → logprob: -10.250335693359375
    4. '()' → logprob: -12.625335693359375
    5. 'self' → logprob: -14.625335693359375
    6. '(
' → logprob: -15.125335693359375
    7. '   ' → logprob: -15.125335693359375
    8. '(s' → logprob: -15.875335693359375
    9. '(sel' → logprob: -17.250335693359375
    10. ' self' → logprob: -17.750335693359375

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007908966392278671
    2. '):' → logprob: -5.132908821105957
    3. 'self' → logprob: -7.007908821105957
    4. '(self' → logprob: -7.132908821105957
    5. '):
' → logprob: -8.757908821105957
    6. '   ' → logprob: -9.757908821105957
    7. ')->' → logprob: -10.757908821105957
    8. ' )' → logprob: -11.382908821105957
    9. '()' → logprob: -11.632908821105957
    10. '       ' → logprob: -12.007908821105957

Token 173: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005770223215222359
    2. '(' → logprob: -6.130770206451416
    3. '->' → logprob: -6.380770206451416
    4. ' ->' → logprob: -7.130770206451416
    5. ')' → logprob: -7.505770206451416
    6. 'self' → logprob: -9.005770683288574
    7. ')->' → logprob: -9.130770683288574
    8. ' (' → logprob: -9.380770683288574
    9. '()' → logprob: -9.505770683288574
    10. '(
' → logprob: -9.755770683288574

Token 174: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519315779209137
    2. ' int' → logprob: -1.5019315481185913
    3. '   ' → logprob: -13.126931190490723
    4. ' ' → logprob: -15.126931190490723
    5. '(int' → logprob: -16.50193214416504
    6. '	int' → logprob: -16.75193214416504
    7. 'self' → logprob: -16.87693214416504
    8. '  ' → logprob: -17.62693214416504
    9. ' self' → logprob: -17.75193214416504
    10. 'max' → logprob: -17.87693214416504

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007953437976539135
    2. '(self' → logprob: -5.382953643798828
    3. ':
' → logprob: -6.382953643798828
    4. '():' → logprob: -7.757953643798828
    5. '(' → logprob: -7.882953643798828
    6. '       ' → logprob: -8.007953643798828
    7. '):' → logprob: -8.132953643798828
    8. 'self' → logprob: -9.882953643798828
    9. '   ' → logprob: -10.257953643798828
    10. ':self' → logprob: -10.507953643798828

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005429040757007897
    2. ' return' → logprob: -7.875543117523193
    3. 'return' → logprob: -8.750542640686035
    4. '   ' → logprob: -13.750542640686035
    5. '        
' → logprob: -14.625542640686035
    6. '      ' → logprob: -14.750542640686035
    7. '{return' → logprob: -14.750542640686035
    8. '```' → logprob: -15.375542640686035
    9. '        ' → logprob: -15.500542640686035
    10. ')' → logprob: -15.500542640686035

Token 177: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.016246795654296875
    2. '       ' → logprob: -4.516246795654297
    3. ' return' → logprob: -5.266246795654297
    4. 'price' → logprob: -11.516246795654297
    5. 'total' → logprob: -11.641246795654297
    6. 'result' → logprob: -12.766246795654297
    7. 'base' → logprob: -14.891246795654297
    8. '```' → logprob: -15.891246795654297
    9. '	return' → logprob: -16.266246795654297
    10. '   ' → logprob: -16.391246795654297

Token 178: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931562423706055
    2. 'self' → logprob: -0.6931562423706055
    3. '       ' → logprob: -12.568156242370605
    4. '(self' → logprob: -12.693156242370605
    5. ' max' → logprob: -13.943156242370605
    6. '   ' → logprob: -14.693156242370605
    7. 'max' → logprob: -14.943156242370605
    8. '	self' → logprob: -14.943156242370605
    9. ' ' → logprob: -15.193156242370605
    10. ' (' → logprob: -17.193157196044922

Token 179: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0011852304451167583
    2. '.' → logprob: -6.751185417175293
    3. 'p' → logprob: -11.876185417175293
    4. '.price' → logprob: -12.376185417175293
    5. ' .' → logprob: -12.751185417175293
    6. '​.' → logprob: -15.501185417175293
    7. '..' → logprob: -15.751185417175293
    8. ').' → logprob: -15.876185417175293
    9. '   ' → logprob: -17.126184463500977
    10. '.s' → logprob: -17.126184463500977

Token 180: 'asta' (ID: 6307)
  Prédit: 'asta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asta' → logprob: -8.65707261255011e-06
    2. 'self' → logprob: -12.875008583068848
    3. 'ast' → logprob: -13.125008583068848
    4. 'ro' → logprob: -13.750008583068848
    5. 'izza' → logprob: -14.625008583068848
    6. 'aste' → logprob: -14.625008583068848
    7. 'asti' → logprob: -14.875008583068848
    8. '   ' → logprob: -15.375008583068848
    9. 'sta' → logprob: -15.375008583068848
    10. 'p' → logprob: -15.625008583068848

Token 181: '.get' (ID: 775)
  Prédit: '.price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.029790299013257027
    2. '.get' → logprob: -3.5297904014587402
    3. ' .' → logprob: -10.654789924621582
    4. '.' → logprob: -11.154789924621582
    5. '.cost' → logprob: -14.779789924621582
    6. '.value' → logprob: -14.904789924621582
    7. 'price' → logprob: -15.154789924621582
    8. ').' → logprob: -15.904789924621582
    9. '.payment' → logprob: -16.0297908782959
    10. '.amount' → logprob: -16.1547908782959

Token 182: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. '_pr' → logprob: -19.375
    4. '_p' → logprob: -19.375
    5. ' _' → logprob: -20.0
    6. '_cost' → logprob: -20.0
    7. '_prices' → logprob: -20.25
    8. 'price' → logprob: -20.375
    9. '_score' → logprob: -20.5
    10. '_value' → logprob: -20.875

Token 183: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009262301027774811
    2. '()+' → logprob: -7.0009260177612305
    3. '(' → logprob: -11.37592601776123
    4. ' ()' → logprob: -12.75092601776123
    5. '())' → logprob: -16.625926971435547
    6. '()
' → logprob: -17.125926971435547
    7. '+' → logprob: -17.375926971435547
    8. '()]' → logprob: -17.625926971435547
    9. '()*' → logprob: -17.625926971435547
    10. '（）' → logprob: -17.750926971435547

Token 184: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014198292046785355
    2. '+' → logprob: -4.264198303222656
    3. ' ' → logprob: -10.389198303222656
    4. '+self' → logprob: -12.514198303222656
    5. ' ' → logprob: -16.264198303222656
    6. ' +
' → logprob: -16.264198303222656
    7. ' plus' → logprob: -17.514198303222656
    8. '()+' → logprob: -17.639198303222656
    9. '  ' → logprob: -17.889198303222656
    10. '   ' → logprob: -18.389198303222656

Token 185: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20141489803791046
    2. 'self' → logprob: -1.701414942741394
    3. ' ' → logprob: -14.826415061950684
    4. '(self' → logprob: -15.076415061950684
    5. '	self' → logprob: -15.576415061950684
    6. ' ' → logprob: -15.701415061950684
    7. '       ' → logprob: -15.826415061950684
    8. '   ' → logprob: -16.201414108276367
    9. ' +' → logprob: -16.201414108276367
    10. '
' → logprob: -16.826414108276367

Token 186: '.j' (ID: 1760)
  Prédit: '.j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.j' → logprob: -0.0004137496289331466
    2. ' .' → logprob: -7.87541389465332
    3. '.' → logprob: -10.50041389465332
    4. '```' → logprob: -13.12541389465332
    5. '​.' → logprob: -13.62541389465332
    6. '.J' → logprob: -14.75041389465332
    7. '.just' → logprob: -14.87541389465332
    8. '   ' → logprob: -15.12541389465332
    9. '.je' → logprob: -15.25041389465332
    10. '
' → logprob: -15.62541389465332

Token 187: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.246537173457909e-06
    2. 'uce' → logprob: -12.625003814697266
    3. 'juice' → logprob: -15.000003814697266
    4. ' u' → logprob: -15.750003814697266
    5. '.u' → logprob: -16.000003814697266
    6. 'ice' → logprob: -16.000003814697266
    7. 'uisce' → logprob: -16.375003814697266
    8. 'у' → logprob: -16.750003814697266
    9. '.' → logprob: -16.875003814697266
    10. '
' → logprob: -17.250003814697266

Token 188: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -4.060365608893335e-05
    2. 'ce' → logprob: -10.125041007995605
    3. ' ice' → logprob: -15.375041007995605
    4. 'ic' → logprob: -15.625041007995605
    5. 'i' → logprob: -17.62504005432129
    6. '
' → logprob: -17.87504005432129
    7. 'ices' → logprob: -18.25004005432129
    8. '```' → logprob: -18.25004005432129
    9. 'iced' → logprob: -18.37504005432129
    10. 'Ice' → logprob: -18.50004005432129

Token 189: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0003473825636319816
    2. '.' → logprob: -8.000347137451172
    3. ' .' → logprob: -11.375347137451172
    4. '.
' → logprob: -16.125347137451172
    5. '().' → logprob: -16.125347137451172
    6. 'get' → logprob: -16.375347137451172
    7. '
' → logprob: -17.000347137451172
    8. '​.' → logprob: -17.750347137451172
    9. ').' → logprob: -18.000347137451172
    10. ' ' → logprob: -18.000347137451172

Token 190: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -1.0445127372804563e-05
    2. 'price' → logprob: -12.62501049041748
    3. ' _' → logprob: -12.87501049041748
    4. '_' → logprob: -13.00001049041748
    5. '._' → logprob: -13.50001049041748
    6. '_code' → logprob: -15.62501049041748
    7. '_p' → logprob: -16.125009536743164
    8. '.price' → logprob: -16.250009536743164
    9. '().' → logprob: -16.500009536743164
    10. '_PRICE' → logprob: -16.625009536743164

Token 191: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.9054008084349334e-05
    2. ' ()' → logprob: -11.500039100646973
    3. '()+' → logprob: -11.500039100646973
    4. '(' → logprob: -11.625039100646973
    5. '()
' → logprob: -12.375039100646973
    6. '()

' → logprob: -14.000039100646973
    7. '()*' → logprob: -14.500039100646973
    8. '())' → logprob: -14.500039100646973
    9. '`()' → logprob: -14.500039100646973
    10. '().' → logprob: -14.625039100646973

Token 192: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018158724531531334
    2. '-' → logprob: -4.018158912658691
    3. ' ' → logprob: -12.143158912658691
    4. '-self' → logprob: -12.643158912658691
    5. ' ' → logprob: -15.893158912658691
    6. ' self' → logprob: -17.143157958984375
    7. '       ' → logprob: -17.268157958984375
    8. '−' → logprob: -17.893157958984375
    9. 'self' → logprob: -18.018157958984375
    10. '   ' → logprob: -18.018157958984375

Token 193: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416350994259119
    2. ' self' → logprob: -4.264163494110107
    3. '       ' → logprob: -18.514163970947266
    4. '	self' → logprob: -18.764163970947266
    5. '(self' → logprob: -19.264163970947266
    6. ' ' → logprob: -22.139163970947266
    7. '   ' → logprob: -22.139163970947266
    8. '0' → logprob: -22.264163970947266
    9. ' ' → logprob: -22.389163970947266
    10. '```' → logprob: -22.389163970947266

Token 194: '.discount' (ID: 138755)
  Prédit: '.discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.discount' → logprob: -3.762356209335849e-05
    2. 'discount' → logprob: -10.25003719329834
    3. '.dis' → logprob: -13.62503719329834
    4. '.' → logprob: -14.75003719329834
    5. ' .' → logprob: -14.75003719329834
    6. ' discount' → logprob: -16.000038146972656
    7. '_discount' → logprob: -16.375038146972656
    8. '.discord' → logprob: -17.250038146972656
    9. 'Discount' → logprob: -18.625038146972656
    10. '.discovery' → logprob: -19.750038146972656

Token 195: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19846388697624207
    2. '

' → logprob: -2.0734639167785645
    3. 'def' → logprob: -3.5734639167785645
    4. '<|end|>' → logprob: -3.8234639167785645
    5. 'class' → logprob: -5.6984639167785645
    6. '<|end|>' → logprob: -7.8234639167785645
    7. 'from' → logprob: -8.448463439941406
    8. '
    
' → logprob: -9.448463439941406
    9. '  
' → logprob: -9.448463439941406
    10. '
' → logprob: -9.573463439941406

Token 196: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0036013787612318993
    2. '
' → logprob: -5.753601551055908
    3. 'def' → logprob: -8.50360107421875
    4. 'from' → logprob: -8.62860107421875
    5. '<|end|>' → logprob: -10.87860107421875
    6. ' class' → logprob: -11.25360107421875
    7. '

' → logprob: -12.50360107421875
    8. '```' → logprob: -13.50360107421875
    9. '  
' → logprob: -13.75360107421875
    10. '[
' → logprob: -14.12860107421875

Token 197: ' Menu' (ID: 16352)
  Prédit: ' Menu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Menu' → logprob: -0.42349082231521606
    2. 'Menu' → logprob: -1.4234907627105713
    3. ' Set' → logprob: -3.1734907627105713
    4. ' Restaurant' → logprob: -3.7984907627105713
    5. 'Set' → logprob: -4.04849100112915
    6. ' Order' → logprob: -5.42349100112915
    7. 'Restaurant' → logprob: -5.67349100112915
    8. 'Order' → logprob: -5.92349100112915
    9. ' Caf' → logprob: -5.92349100112915
    10. ' Cafe' → logprob: -6.04849100112915

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11115600913763046
    2. 'Manager' → logprob: -2.6111559867858887
    3. 'Item' → logprob: -4.361155986785889
    4. 'List' → logprob: -4.986155986785889
    5. ':
' → logprob: -5.736155986785889
    6. 'Builder' → logprob: -5.736155986785889
    7. '(' → logprob: -6.361155986785889
    8. 'Optimizer' → logprob: -7.361155986785889
    9. 'Planner' → logprob: -7.611155986785889
    10. 'Selector' → logprob: -7.611155986785889

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038443657103925943
    2. ' def' → logprob: -8.125384330749512
    3. 'def' → logprob: -9.375384330749512
    4. '    
' → logprob: -13.125384330749512
    5. '   ' → logprob: -14.375384330749512
    6. '	def' → logprob: -15.000384330749512
    7. 'class' → logprob: -15.375384330749512
    8. '```' → logprob: -16.375385284423828
    9. ',' → logprob: -16.500385284423828
    10. ')' → logprob: -16.750385284423828

Token 200: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04341395944356918
    2. 'def' (adapté à ' def') → logprob: -3.1684138774871826
    3. '   ' → logprob: -7.793414115905762
    4. ' ' → logprob: -14.293414115905762
    5. '    ' → logprob: -14.668414115905762
    6. 'class' → logprob: -15.168414115905762
    7. 'de' → logprob: -15.293414115905762
    8. '  ' → logprob: -15.668414115905762
    9. '	def' → logprob: -15.668414115905762
    10. ' de' → logprob: -15.793414115905762

Token 201: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.028258178383111954
    2. '__' → logprob: -3.6532580852508545
    3. ' def' → logprob: -7.153258323669434
    4. '   ' → logprob: -7.778258323669434
    5. 'def' → logprob: -8.153258323669434
    6. '  ' → logprob: -8.903258323669434
    7. '_init' → logprob: -9.028258323669434
    8. ' ' → logprob: -9.528258323669434
    9. 'init' → logprob: -9.778258323669434
    10. '```' → logprob: -10.403258323669434

Token 202: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. 'new' → logprob: -15.375000953674316
    3. 'ini' → logprob: -15.625000953674316
    4. 'in' → logprob: -16.125
    5. 'int' → logprob: -16.625
    6. 'iter' → logprob: -17.5
    7. 'innit' → logprob: -18.125
    8. '   ' → logprob: -19.125
    9. 'getitem' → logprob: -19.375
    10. 'nit' → logprob: -19.5

Token 203: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02633989416062832
    2. '(self' → logprob: -3.6513400077819824
    3. '__' → logprob: -11.151339530944824
    4. '__(
' → logprob: -11.526339530944824
    5. '(' → logprob: -11.901339530944824
    6. 'self' → logprob: -12.401339530944824
    7. '_(' → logprob: -13.026339530944824
    8. ' (' → logprob: -14.026339530944824
    9. ')(' → logprob: -15.151339530944824
    10. '   ' → logprob: -15.151339530944824

Token 204: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001410850090906024
    2. ' self' → logprob: -9.000141143798828
    3. '
' → logprob: -11.375141143798828
    4. ')' → logprob: -12.750141143798828
    5. '   ' → logprob: -13.250141143798828
    6. '):
' → logprob: -14.250141143798828
    7. '       ' → logprob: -15.375141143798828
    8. ' ' → logprob: -15.375141143798828
    9. '	self' → logprob: -15.750141143798828
    10. '  ' → logprob: -16.875141143798828

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45221737027168274
    2. '):
' → logprob: -1.7022173404693604
    3. 'self' → logprob: -1.9522173404693604
    4. '):' → logprob: -3.8272173404693604
    5. '(self' → logprob: -4.7022175788879395
    6. '   ' → logprob: -5.4522175788879395
    7. '       ' → logprob: -5.8272175788879395
    8. ',self' → logprob: -7.7022175788879395
    9. '):
' → logprob: -8.077217102050781
    10. ')' → logprob: -8.077217102050781

Token 206: ' past' (ID: 4241)
  Prédit: 'past'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'past' → logprob: -1.070088505744934
    2. 'p' → logprob: -1.445088505744934
    3. ' past' → logprob: -1.570088505744934
    4. ' pasta' → logprob: -2.6950883865356445
    5. 'set' → logprob: -3.1950883865356445
    6. ' items' → logprob: -3.8200883865356445
    7. 'items' → logprob: -3.9450883865356445
    8. ' set' → logprob: -4.1950883865356445
    9. ' combinations' → logprob: -4.3200883865356445
    10. 'menu' → logprob: -4.5700883865356445

Token 207: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.632750391960144
    2. 'a' → logprob: -0.757750391960144
    3. 'ae' → logprob: -9.007750511169434
    4. '   ' → logprob: -12.132750511169434
    5. 'а' → logprob: -12.882750511169434
    6. 'e' → logprob: -13.132750511169434
    7. '
' → logprob: -13.257750511169434
    8. 'ar' → logprob: -13.257750511169434
    9. 'es' → logprob: -13.382750511169434
    10. 'aes' → logprob: -13.382750511169434

Token 208: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.696889623621246e-06
    2. ',' → logprob: -13.00000286102295
    3. ' :' → logprob: -15.37500286102295
    4. '_:' → logprob: -16.875001907348633
    5. '```' → logprob: -17.375001907348633
    6. '=' → logprob: -17.500001907348633
    7. ':list' → logprob: -18.250001907348633
    8. 'List' → logprob: -18.750001907348633
    9. '   ' → logprob: -18.875001907348633
    10. ':,' → logprob: -19.250001907348633

Token 209: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.4740806519985199
    2. 'List' → logprob: -0.9740806818008423
    3. '[List' → logprob: -13.099081039428711
    4. '	List' → logprob: -14.599081039428711
    5. '   ' → logprob: -15.224081039428711
    6. ' list' → logprob: -15.474081039428711
    7. ' ' → logprob: -15.849081039428711
    8. '(List' → logprob: -15.849081039428711
    9. '       ' → logprob: -15.974081039428711
    10. 'list' → logprob: -16.22408103942871

Token 210: '[P' (ID: 132164)
  Prédit: '[P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[P' → logprob: -0.029751179739832878
    2. '[' → logprob: -3.5297510623931885
    3. '[
' → logprob: -14.77975082397461
    4. 'P' → logprob: -16.40475082397461
    5. '<P' → logprob: -17.02975082397461
    6. '[str' → logprob: -17.52975082397461
    7. '[List' → logprob: -17.52975082397461
    8. '[int' → logprob: -18.27975082397461
    9. ' [' → logprob: -18.65475082397461
    10. ',P' → logprob: -19.52975082397461

Token 211: 'asta' (ID: 6307)
  Prédit: 'asta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asta' → logprob: -2.5776860184123507e-06
    2. 'P' → logprob: -13.87500286102295
    3. 'a' → logprob: -15.25000286102295
    4. 'аста' → logprob: -15.37500286102295
    5. '```' → logprob: -15.37500286102295
    6. 'ast' → logprob: -15.62500286102295
    7. 'sta' → logprob: -15.87500286102295
    8. 'Menu' → logprob: -16.000001907348633
    9. 'asti' → logprob: -16.250001907348633
    10. 'aste' → logprob: -16.500001907348633

Token 212: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0010482928482815623
    2. ',' → logprob: -6.8760480880737305
    3. ']' → logprob: -11.37604808807373
    4. ' ],' → logprob: -12.62604808807373
    5. '),' → logprob: -15.62604808807373
    6. '],
' → logprob: -15.87604808807373
    7. ''],' → logprob: -16.251049041748047
    8. ' ' → logprob: -16.626049041748047
    9. '   ' → logprob: -16.751049041748047
    10. '>,' → logprob: -16.876049041748047

Token 213: ' juices' (ID: 94384)
  Prédit: 'ju'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ju' → logprob: -0.010060982778668404
    2. ' juices' → logprob: -4.635060787200928
    3. ' ju' → logprob: -8.760061264038086
    4. 'jus' → logprob: -9.635061264038086
    5. 'juice' → logprob: -10.760061264038086
    6. 'j' → logprob: -11.135061264038086
    7. 'jug' → logprob: -11.260061264038086
    8. ' ' → logprob: -11.510061264038086
    9. '   ' → logprob: -12.635061264038086
    10. 'je' → logprob: -13.010061264038086

Token 214: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.2842308680992573e-05
    2. ']:' → logprob: -11.500022888183594
    3. ' :' → logprob: -12.375022888183594
    4. ']' → logprob: -12.375022888183594
    5. ':]' → logprob: -13.000022888183594
    6. '[List' → logprob: -14.625022888183594
    7. 'List' → logprob: -14.875022888183594
    8. '   ' → logprob: -14.875022888183594
    9. '```' → logprob: -15.875022888183594
    10. '       ' → logprob: -16.125022888183594

Token 215: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.001170225441455841
    2. ' List' → logprob: -6.7511701583862305
    3. '[List' → logprob: -17.126171112060547
    4. '	List' → logprob: -18.126171112060547
    5. '   ' → logprob: -21.001171112060547
    6. ' ' → logprob: -21.626171112060547
    7. '       ' → logprob: -21.876171112060547
    8. '(List' → logprob: -22.126171112060547
    9. ')' → logprob: -22.501171112060547
    10. '
' → logprob: -23.376171112060547

Token 216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.968312951968983e-06
    2. '[J' → logprob: -11.625009536743164
    3. '
' → logprob: -14.875009536743164
    4. '[
' → logprob: -15.625009536743164
    5. '```' → logprob: -16.375009536743164
    6. ')' → logprob: -16.375009536743164
    7. ' [' → logprob: -16.750009536743164
    8. 'Ju' → logprob: -17.000009536743164
    9. ']' → logprob: -17.125009536743164
    10. '[P' → logprob: -17.125009536743164

Token 217: 'Ju' (ID: 66412)
  Prédit: 'Ju'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ju' → logprob: -7.52919222577475e-05
    2. ' Juice' → logprob: -9.500075340270996
    3. 'J' → logprob: -15.875075340270996
    4. 'JU' → logprob: -16.37507438659668
    5. '[' → logprob: -16.75007438659668
    6. 'juice' → logprob: -16.87507438659668
    7. ']' → logprob: -17.12507438659668
    8. '
' → logprob: -17.62507438659668
    9. '   ' → logprob: -17.75007438659668
    10. ' Ju' → logprob: -17.75007438659668

Token 218: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -6.12258882028982e-05
    2. 'ce' → logprob: -9.75006103515625
    3. 'Ice' → logprob: -13.12506103515625
    4. 'ices' → logprob: -14.37506103515625
    5. ' ice' → logprob: -16.62506103515625
    6. '```' → logprob: -16.87506103515625
    7. 'ICE' → logprob: -17.62506103515625
    8. '>' → logprob: -17.87506103515625
    9. 'ic' → logprob: -17.87506103515625
    10. '``' → logprob: -18.00006103515625

Token 219: '],' (ID: 2155)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.09429516643285751
    2. ']):
' → logprob: -2.9692952632904053
    3. ']' → logprob: -3.9692952632904053
    4. '])' → logprob: -4.469295024871826
    5. '],' → logprob: -5.094295024871826
    6. ',' → logprob: -6.344295024871826
    7. '):' → logprob: -8.594295501708984
    8. ')' → logprob: -8.844295501708984
    9. ']:' → logprob: -10.219295501708984
    10. ' ]' → logprob: -10.844295501708984

Token 220: ' discount' (ID: 11522)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -1.0020523071289062
    2. 'set' → logprob: -1.1270523071289062
    3. 'com' → logprob: -1.8770523071289062
    4. ' set' → logprob: -2.1270523071289062
    5. 'discount' → logprob: -4.502052307128906
    6. ' discounts' → logprob: -4.877052307128906
    7. ' combos' → logprob: -5.127052307128906
    8. '   ' → logprob: -5.502052307128906
    9. 'comb' → logprob: -6.002052307128906
    10. ' discount' → logprob: -6.502052307128906

Token 221: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004446124075911939
    2. ':int' → logprob: -7.750444412231445
    3. 's' → logprob: -11.625444412231445
    4. ' :' → logprob: -12.875444412231445
    5. '_:' → logprob: -13.875444412231445
    6. 'int' → logprob: -14.250444412231445
    7. ')' → logprob: -15.125444412231445
    8. '=' → logprob: -16.250444412231445
    9. '):' → logprob: -16.500444412231445
    10. '[int' → logprob: -17.000444412231445

Token 222: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07948484271764755
    2. ' int' → logprob: -3.2044849395751953
    3. '100' → logprob: -3.4544849395751953
    4. '50' → logprob: -6.079484939575195
    5. ' ' → logprob: -7.329484939575195
    6. '200' → logprob: -8.204484939575195
    7. '20' → logprob: -8.454484939575195
    8. '30' → logprob: -8.829484939575195
    9. '10' → logprob: -8.954484939575195
    10. '150' → logprob: -8.954484939575195

Token 223: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04890879616141319
    2. '):
' → logprob: -3.0489087104797363
    3. '):
' → logprob: -8.548909187316895
    4. ')' → logprob: -9.548909187316895
    5. ':' → logprob: -10.423909187316895
    6. '   ' → logprob: -10.798909187316895
    7. ' ):' → logprob: -12.548909187316895
    8. '=' → logprob: -13.298909187316895
    9. ' ' → logprob: -14.923909187316895
    10. ' ):
' → logprob: -15.048909187316895

Token 224: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8794766664505005
    2. '200' → logprob: -1.1294766664505005
    3. '300' → logprob: -1.8794766664505005
    4. '0' → logprob: -3.629476547241211
    5. '500' → logprob: -3.754476547241211
    6. ' ' → logprob: -4.004476547241211
    7. '50' → logprob: -4.129476547241211
    8. '10' → logprob: -4.754476547241211
    9. '150' → logprob: -4.879476547241211
    10. '250' → logprob: -5.879476547241211

Token 225: '50' (ID: 1434)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.676254153251648
    2. '100' → logprob: -1.176254153251648
    3. '300' → logprob: -2.1762542724609375
    4. '500' → logprob: -3.3012542724609375
    5. '50' → logprob: -4.8012542724609375
    6. '150' → logprob: -4.8012542724609375
    7. '0' → logprob: -4.9262542724609375
    8. '250' → logprob: -5.9262542724609375
    9. '10' → logprob: -6.1762542724609375
    10. ' ' → logprob: -6.3012542724609375

Token 226: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06214715912938118
    2. '):
' → logprob: -2.8121471405029297
    3. '):
' → logprob: -8.93714714050293
    4. ')' → logprob: -10.68714714050293
    5. '   ' → logprob: -10.81214714050293
    6. ' ):' → logprob: -12.43714714050293
    7. ' ' → logprob: -14.81214714050293
    8. ' ):
' → logprob: -15.43714714050293
    9. '):

' → logprob: -15.56214714050293
    10. ':' → logprob: -15.81214714050293

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.590104698669165e-05
    2. ' self' → logprob: -9.750085830688477
    3. 'self' → logprob: -10.875085830688477
    4. '   ' → logprob: -12.000085830688477
    5. ',' → logprob: -13.875085830688477
    6. '      ' → logprob: -15.375085830688477
    7. '```' → logprob: -15.500085830688477
    8. '	self' → logprob: -15.625085830688477
    9. '        
' → logprob: -15.875085830688477
    10. '
' → logprob: -16.125085830688477

Token 228: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07695693522691727
    2. ' self' → logprob: -3.0769569873809814
    3. '       ' → logprob: -3.5769569873809814
    4. '   ' → logprob: -12.201956748962402
    5. ' ' → logprob: -12.826956748962402
    6. '	self' → logprob: -13.076956748962402
    7. 'super' → logprob: -16.07695770263672
    8. '      ' → logprob: -16.70195770263672
    9. '     ' → logprob: -16.70195770263672
    10. '
' → logprob: -17.32695770263672

Token 229: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04889415204524994
    2. ' discount' → logprob: -4.048893928527832
    3. 'not' → logprob: -4.423893928527832
    4. ' len' → logprob: -4.548893928527832
    5. 'discount' → logprob: -5.173893928527832
    6. ' any' → logprob: -6.423893928527832
    7. 'len' → logprob: -8.298893928527832
    8. ' ' → logprob: -9.173893928527832
    9. 'any' → logprob: -10.423893928527832
    10. ' past' → logprob: -10.673893928527832

Token 230: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0007298283162526786
    2. '(' → logprob: -7.250730037689209
    3. 'past' → logprob: -11.37572956085205
    4. ' (' → logprob: -12.75072956085205
    5. ' past' → logprob: -12.87572956085205
    6. 'p' → logprob: -13.37572956085205
    7. '(self' → logprob: -14.87572956085205
    8. '(pr' → logprob: -15.87572956085205
    9. '()' → logprob: -16.125730514526367
    10. 's' → logprob: -16.250730514526367

Token 231: 'astas' (ID: 115456)
  Prédit: 'past'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'past' → logprob: -0.37772995233535767
    2. 'ast' → logprob: -1.252729892730713
    3. ' past' → logprob: -3.877729892730713
    4. 'astas' → logprob: -4.877729892730713
    5. ' ast' → logprob: -8.627730369567871
    6. 'p' → logprob: -8.752730369567871
    7. '_p' → logprob: -9.752730369567871
    8. '   ' → logprob: -10.502730369567871
    9. '(ast' → logprob: -10.502730369567871
    10. '_ast' → logprob: -10.502730369567871

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06844870746135712
    2. ' ==' → logprob: -3.318448781967163
    3. ' <' → logprob: -3.818448781967163
    4. ' )' → logprob: -5.193448543548584
    5. '==' → logprob: -6.443448543548584
    6. ')==' → logprob: -7.568448543548584
    7. '<' → logprob: -8.818449020385742
    8. ')<' → logprob: -9.193449020385742
    9. ' ' → logprob: -9.693449020385742
    10. '   ' → logprob: -11.443449020385742

Token 233: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12310637533664703
    2. '==' → logprob: -2.2481064796447754
    3. ' <' → logprob: -4.748106479644775
    4. '<' → logprob: -6.498106479644775
    5. ' ' → logprob: -10.248106002807617
    6. '=' → logprob: -11.873106002807617
    7. ')' → logprob: -12.373106002807617
    8. '   ' → logprob: -12.873106002807617
    9. '0' → logprob: -13.123106002807617
    10. ')==' → logprob: -13.373106002807617

Token 234: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1548587679862976
    2. ' len' → logprob: -2.0298588275909424
    3. '3' → logprob: -5.029858589172363
    4. ' ' → logprob: -6.029858589172363
    5. '4' → logprob: -7.154858589172363
    6. '5' → logprob: -7.154858589172363
    7. '2' → logprob: -7.279858589172363
    8. '0' → logprob: -8.404858589172363
    9. '10' → logprob: -8.529858589172363
    10. '1' → logprob: -8.529858589172363

Token 235: '3' (ID: 18)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0032731371466070414
    2. ' len' → logprob: -6.128273010253906
    3. '3' → logprob: -7.253273010253906
    4. '2' → logprob: -8.628273010253906
    5. '4' → logprob: -9.503273010253906
    6. '1' → logprob: -9.878273010253906
    7. '5' → logprob: -10.128273010253906
    8. ' ' → logprob: -11.628273010253906
    9. '10' → logprob: -12.253273010253906
    10. '6' → logprob: -12.378273010253906

Token 236: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.009316250681877136
    2. ':' → logprob: -4.759316444396973
    3. ':
' → logprob: -7.384316444396973
    4. 'or' → logprob: -9.634316444396973
    5. ' and' → logprob: -11.509316444396973
    6. ' ' → logprob: -12.884316444396973
    7. ' :' → logprob: -14.384316444396973
    8. ')' → logprob: -14.634316444396973
    9. '       ' → logprob: -15.134316444396973
    10. '):' → logprob: -15.259316444396973

Token 237: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08118776232004166
    2. '           ' → logprob: -2.5811877250671387
    3. ':' → logprob: -6.831187725067139
    4. ':
' → logprob: -7.581187725067139
    5. ' and' → logprob: -7.956187725067139
    6. '       ' → logprob: -8.581188201904297
    7. ' raise' → logprob: -9.706188201904297
    8. 'or' → logprob: -10.581188201904297
    9. '            ' → logprob: -10.831188201904297
    10. '               ' → logprob: -11.206188201904297

Token 238: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.07934940606355667
    2. 'raise' (adapté à ' raise') → logprob: -2.5793495178222656
    3. '           ' → logprob: -7.704349517822266
    4. '	raise' → logprob: -11.829349517822266
    5. 'Raise' → logprob: -14.454349517822266
    6. '            ' → logprob: -14.829349517822266
    7. '_raise' → logprob: -14.954349517822266
    8. '               ' → logprob: -17.079349517822266
    9. '       ' → logprob: -17.204349517822266
    10. '   ' → logprob: -17.329349517822266

Token 239: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.12692862749099731
    2. ' Value' → logprob: -2.1269285678863525
    3. '	Value' → logprob: -15.501928329467773
    4. '(Value' → logprob: -16.126928329467773
    5. '_value' → logprob: -16.126928329467773
    6. '_Value' → logprob: -17.126928329467773
    7. '.Value' → logprob: -17.126928329467773
    8. 'Type' → logprob: -17.376928329467773
    9. 'value' → logprob: -18.001928329467773
    10. 'Index' → logprob: -18.251928329467773

Token 240: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -7.541112427134067e-05
    2. 'rror' → logprob: -9.500075340270996
    3. 'Value' → logprob: -14.500075340270996
    4. 'error' → logprob: -19.000076293945312
    5. 'SError' → logprob: -19.500076293945312
    6. 'LError' → logprob: -19.875076293945312
    7. 'ror' → logprob: -20.375076293945312
    8. 'n' → logprob: -20.375076293945312
    9. 'alue' → logprob: -20.500076293945312
    10. ' Error' → logprob: -20.750076293945312

Token 241: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.250035285949707
    3. '(
' → logprob: -17.125036239624023
    4. '("'' → logprob: -17.875036239624023
    5. '(f' → logprob: -18.125036239624023
    6. '('' → logprob: -18.125036239624023
    7. ' ("' → logprob: -19.750036239624023
    8. '(",' → logprob: -20.250036239624023
    9. '"' → logprob: -20.500036239624023
    10. '(

' → logprob: -21.250036239624023

Token 242: 'There' (ID: 5632)
  Prédit: 'There'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'There' → logprob: -1.096675992012024
    2. ' past' → logprob: -1.221675992012024
    3. 'Exactly' → logprob: -2.0966758728027344
    4. 'past' → logprob: -2.8466758728027344
    5. ' There' → logprob: -3.2216758728027344
    6. 'Past' → logprob: -3.2216758728027344
    7. ' Menu' → logprob: -3.5966758728027344
    8. 'Menu' → logprob: -3.7216758728027344
    9. ' Exactly' → logprob: -3.9716758728027344
    10. 'The' → logprob: -4.721675872802734

Token 243: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.002331170719116926
    2. 'must' → logprob: -6.127331256866455
    3. ' should' → logprob: -9.252330780029297
    4. ' are' → logprob: -10.002330780029297
    5. ' need' → logprob: -13.127330780029297
    6. ' ' → logprob: -14.252330780029297
    7. 'should' → logprob: -14.627330780029297
    8. '   ' → logprob: -15.377330780029297
    9. 'm' → logprob: -15.377330780029297
    10. '
' → logprob: -15.627330780029297

Token 244: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0011222377652302384
    2. ' to' → logprob: -8.25112247467041
    3. ' exactly' → logprob: -8.50112247467041
    4. '<|end|>' → logprob: -8.75112247467041
    5. ' three' → logprob: -9.12612247467041
    6. ' are' → logprob: -9.50112247467041
    7. ' must' → logprob: -9.87612247467041
    8. ' not' → logprob: -9.87612247467041
    9. ' have' → logprob: -10.25112247467041
    10. '    ' → logprob: -10.37612247467041

Token 245: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.0004878723411820829
    2. 'exact' → logprob: -7.750487804412842
    3. ' ' → logprob: -10.37548828125
    4. ' three' → logprob: -10.75048828125
    5. ' exact' → logprob: -13.00048828125
    6. '3' → logprob: -13.00048828125
    7. ' precisely' → logprob: -17.12548828125
    8. ' exactamente' → logprob: -17.62548828125
    9. ' exactement' → logprob: -18.12548828125
    10. ' Exactly' → logprob: -18.62548828125

Token 246: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0670616552233696
    2. ' three' → logprob: -3.06706166267395
    3. '3' → logprob: -4.067061424255371
    4. ' exactly' → logprob: -6.817061424255371
    5. 'three' → logprob: -9.442061424255371
    6. ' ' → logprob: -13.567061424255371
    7. 'exact' → logprob: -14.442061424255371
    8. '  ' → logprob: -14.692061424255371
    9. '_three' → logprob: -15.942061424255371
    10. '1' → logprob: -16.692062377929688

Token 247: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.015822017565369606
    2. ' ' → logprob: -4.390821933746338
    3. ' three' → logprob: -5.765821933746338
    4. 'three' → logprob: -8.890822410583496
    5. ' exactly' → logprob: -10.390822410583496
    6. 'exact' → logprob: -12.140822410583496
    7. '   ' → logprob: -15.640822410583496
    8. '  ' → logprob: -16.14082145690918
    9. '```' → logprob: -16.64082145690918
    10. ' ' → logprob: -17.39082145690918

Token 248: ' past' (ID: 4241)
  Prédit: ' past'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' past' → logprob: -0.14643897116184235
    2. ' pasta' → logprob: -2.1464390754699707
    3. ' Pasta' → logprob: -5.271439075469971
    4. ' paste' → logprob: -5.396439075469971
    5. ' types' → logprob: -5.646439075469971
    6. ' Past' → logprob: -6.021439075469971
    7. ' different' → logprob: -6.646439075469971
    8. ' items' → logprob: -7.021439075469971
    9. 'past' → logprob: -8.146438598632812
    10. ' pastel' → logprob: -8.521438598632812

Token 249: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -8.65707261255011e-06
    2. 'a' → logprob: -12.250008583068848
    3. '   ' → logprob: -13.250008583068848
    4. ' as' → logprob: -13.625008583068848
    5. '	as' → logprob: -15.375008583068848
    6. 's' → logprob: -16.500009536743164
    7. 'pas' → logprob: -16.500009536743164
    8. '       ' → logprob: -16.625009536743164
    9. 'As' → logprob: -16.750009536743164
    10. '(as' → logprob: -16.750009536743164

Token 250: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6644424796104431
    2. ' provided' → logprob: -1.539442539215088
    3. '.")' → logprob: -1.789442539215088
    4. '.' → logprob: -2.664442539215088
    5. ' in' → logprob: -3.914442539215088
    6. '.")
' → logprob: -5.664442539215088
    7. '")
' → logprob: -6.164442539215088
    8. 'provided' → logprob: -6.164442539215088
    9. ' and' → logprob: -6.289442539215088
    10. ' ")' → logprob: -6.539442539215088

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028386167832650244
    2. ' if' → logprob: -8.250284194946289
    3. 'self' → logprob: -12.375284194946289
    4. 'if' → logprob: -12.500284194946289
    5. '<|end|>' → logprob: -12.500284194946289
    6. ' self' → logprob: -12.875284194946289
    7. '           ' → logprob: -13.250284194946289
    8. '        
' → logprob: -13.500284194946289
    9. '      ' → logprob: -13.750284194946289
    10. '```' → logprob: -13.750284194946289

Token 252: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10809695720672607
    2. '       ' → logprob: -2.8580970764160156
    3. ' if' → logprob: -3.1080970764160156
    4. 'self' → logprob: -7.858097076416016
    5. ' self' → logprob: -12.108097076416016
    6. '   ' → logprob: -13.483097076416016
    7. '	if' → logprob: -14.358097076416016
    8. ' ' → logprob: -14.608097076416016
    9. 'for' → logprob: -15.108097076416016
    10. '      ' → logprob: -15.733097076416016

Token 253: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08898461610078812
    2. ' len' → logprob: -2.463984727859497
    3. '   ' → logprob: -10.963984489440918
    4. '       ' → logprob: -11.213984489440918
    5. '    ' → logprob: -12.713984489440918
    6. '(len' → logprob: -12.713984489440918
    7. 'not' → logprob: -13.213984489440918
    8. ' ' → logprob: -13.338984489440918
    9. '	len' → logprob: -13.338984489440918
    10. '  ' → logprob: -13.963984489440918

Token 254: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.869017852295656e-06
    2. '(j' → logprob: -12.500006675720215
    3. ' (' → logprob: -12.875006675720215
    4. 'ju' → logprob: -15.125006675720215
    5. '(
' → logprob: -16.37500762939453
    6. ' ' → logprob: -16.62500762939453
    7. '```' → logprob: -16.75000762939453
    8. '(J' → logprob: -18.62500762939453
    9. '   ' → logprob: -18.75000762939453
    10. 's' → logprob: -19.00000762939453

Token 255: 'ju' (ID: 4734)
  Prédit: 'ju'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ju' → logprob: -0.00023154958034865558
    2. ' juices' → logprob: -8.500231742858887
    3. 'juice' → logprob: -11.625231742858887
    4. 'jus' → logprob: -12.500231742858887
    5. ' ju' → logprob: -12.625231742858887
    6. '(' → logprob: -12.750231742858887
    7. '   ' → logprob: -13.125231742858887
    8. 'Ju' → logprob: -13.750231742858887
    9. 'jo' → logprob: -13.750231742858887
    10. 'j' → logprob: -13.875231742858887

Token 256: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.00011999329581158236
    2. 'ces' → logprob: -9.750120162963867
    3. '>' → logprob: -11.500120162963867
    4. '
' → logprob: -11.750120162963867
    5. 'ic' → logprob: -12.000120162963867
    6. ' ' → logprob: -12.125120162963867
    7. 'ice' → logprob: -12.625120162963867
    8. '[' → logprob: -12.625120162963867
    9. '```' → logprob: -12.875120162963867
    10. '

' → logprob: -13.000120162963867

Token 257: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6696149840718135e-05
    2. ')!=' → logprob: -10.000056266784668
    3. ' )' → logprob: -11.750056266784668
    4. '()' → logprob: -13.500056266784668
    5. '!=' → logprob: -14.000056266784668
    6. '   ' → logprob: -14.750056266784668
    7. ' !=' → logprob: -15.375056266784668
    8. '）' → logprob: -15.500056266784668
    9. '())' → logprob: -16.500057220458984
    10. '`)' → logprob: -16.875057220458984

Token 258: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4747275412082672
    2. '!=' → logprob: -0.9747275114059448
    3. '()!=' → logprob: -8.224727630615234
    4. ')' → logprob: -9.099727630615234
    5. ')!=' → logprob: -9.099727630615234
    6. ' ' → logprob: -9.474727630615234
    7. '()' → logprob: -10.474727630615234
    8. ' not' → logprob: -10.474727630615234
    9. '   ' → logprob: -11.849727630615234
    10. ']!=' → logprob: -12.724727630615234

Token 259: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1271500587463379
    2. ' ' → logprob: -2.127150058746338
    3. '   ' → logprob: -9.00214958190918
    4. '       ' → logprob: -10.75214958190918
    5. '  ' → logprob: -11.12714958190918
    6. '4' → logprob: -11.25214958190918
    7. '    ' → logprob: -11.25214958190918
    8. '1' → logprob: -11.62714958190918
    9. '2' → logprob: -12.00214958190918
    10. '           ' → logprob: -12.68964958190918

Token 260: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008206968195736408
    2. ' ' → logprob: -4.883206844329834
    3. '2' → logprob: -7.508206844329834
    4. '1' → logprob: -10.758207321166992
    5. '4' → logprob: -10.758207321166992
    6. '5' → logprob: -12.758207321166992
    7. '   ' → logprob: -12.758207321166992
    8. '  ' → logprob: -13.508207321166992
    9. '
' → logprob: -14.445707321166992
    10. '    ' → logprob: -15.195707321166992

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042450472712516785
    2. ':
' → logprob: -3.292450428009033
    3. '):' → logprob: -6.042450428009033
    4. '):
' → logprob: -7.292450428009033
    5. '           ' → logprob: -7.792450428009033
    6. '       ' → logprob: -8.542450904846191
    7. ')' → logprob: -8.792450904846191
    8. ' not' → logprob: -9.042450904846191
    9. 'not' → logprob: -9.417450904846191
    10. ':not' → logprob: -9.667450904846191

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06976757943630219
    2. ':' → logprob: -3.319767475128174
    3. ':
' → logprob: -3.569767475128174
    4. ' raise' → logprob: -6.444767475128174
    5. '       ' → logprob: -7.569767475128174
    6. 'raise' → logprob: -8.069767951965332
    7. '          ' → logprob: -8.194767951965332
    8. ' or' → logprob: -9.569767951965332
    9. '               ' → logprob: -9.569767951965332
    10. ' raises' → logprob: -10.194767951965332

Token 263: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.004114138428121805
    2. 'raise' (adapté à ' raise') → logprob: -5.504114151000977
    3. '           ' → logprob: -10.379114151000977
    4. '	raise' → logprob: -12.879114151000977
    5. '            ' → logprob: -13.504114151000977
    6. 'Raise' → logprob: -15.629114151000977
    7. '               ' → logprob: -16.129114151000977
    8. ' ' → logprob: -16.754114151000977
    9. '_raise' → logprob: -16.754114151000977
    10. '          ' → logprob: -17.004114151000977

Token 264: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0052342405542731285
    2. ' Value' → logprob: -5.255234241485596
    3. '_value' → logprob: -14.880233764648438
    4. '	Value' → logprob: -16.130233764648438
    5. '_Value' → logprob: -16.630233764648438
    6. ' ' → logprob: -18.130233764648438
    7. ' value' → logprob: -18.505233764648438
    8. 'value' → logprob: -18.880233764648438
    9. '.Value' → logprob: -19.380233764648438
    10. '(Value' → logprob: -20.005233764648438

Token 265: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.300083648762666e-05
    2. 'Value' → logprob: -10.375053405761719
    3. 'rror' → logprob: -10.750053405761719
    4. 'alue' → logprob: -16.50005340576172
    5. ' Error' → logprob: -16.87505340576172
    6. 'error' → logprob: -17.25005340576172
    7. '(Value' → logprob: -17.25005340576172
    8. 'LError' → logprob: -17.75005340576172
    9. '	Error' → logprob: -17.75005340576172
    10. '(Error' → logprob: -17.87505340576172

Token 266: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. '(
' → logprob: -16.375059127807617
    4. ' ("' → logprob: -17.625059127807617
    5. '('' → logprob: -18.875059127807617
    6. '("("' → logprob: -20.125059127807617
    7. '(f' → logprob: -20.375059127807617
    8. '("(' → logprob: -21.500059127807617
    9. '(("' → logprob: -21.750059127807617
    10. '("'' → logprob: -21.750059127807617

Token 267: 'There' (ID: 5632)
  Prédit: 'There'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'There' → logprob: -0.039692223072052
    2. ' There' → logprob: -3.2896921634674072
    3. '"There' → logprob: -6.414692401885986
    4. ' there' → logprob: -11.789691925048828
    5. '"' → logprob: -13.039691925048828
    6. ' f' → logprob: -13.164691925048828
    7. 'The' → logprob: -15.664691925048828
    8. ' ' → logprob: -15.914691925048828
    9. 'You' → logprob: -16.539691925048828
    10. ' "' → logprob: -17.414691925048828

Token 268: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0052342405542731285
    2. 'must' → logprob: -5.255234241485596
    3. '       ' → logprob: -16.380233764648438
    4. ' ' → logprob: -16.755233764648438
    5. '   ' → logprob: -16.755233764648438
    6. ' be' → logprob: -17.005233764648438
    7. '.must' → logprob: -17.005233764648438
    8. '
' → logprob: -17.255233764648438
    9. ' should' → logprob: -17.255233764648438
    10. '<|end|>' → logprob: -17.380233764648438

Token 269: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0006324975984171033
    2. 'be' → logprob: -7.375632286071777
    3. ' to' → logprob: -12.875632286071777
    4. ' not' → logprob: -13.000632286071777
    5. '<|end|>' → logprob: -15.000632286071777
    6. '	be' → logprob: -15.250632286071777
    7. 'not' → logprob: -15.750632286071777
    8. 'to' → logprob: -16.000633239746094
    9. ' ' → logprob: -16.375633239746094
    10. '_be' → logprob: -16.375633239746094

Token 270: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.038044244050979614
    2. 'exact' → logprob: -3.2880442142486572
    3. ' exact' → logprob: -13.288043975830078
    4. ' ' → logprob: -13.913043975830078
    5. '2' → logprob: -16.413043975830078
    6. 'Exactly' → logprob: -16.663043975830078
    7. ' exactamente' → logprob: -17.038043975830078
    8. ' exactement' → logprob: -17.288043975830078
    9. ' exatamente' → logprob: -18.038043975830078
    10. '_exact' → logprob: -18.163043975830078

Token 271: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16022737324237823
    2. '2' → logprob: -1.9102274179458618
    3. ' two' → logprob: -13.41022777557373
    4. '  ' → logprob: -14.78522777557373
    5. 'two' → logprob: -15.16022777557373
    6. '   ' → logprob: -15.78522777557373
    7. '3' → logprob: -15.84772777557373
    8. '5' → logprob: -15.97272777557373
    9. ' ' → logprob: -16.035226821899414
    10. '```' → logprob: -16.347726821899414

Token 272: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17981135845184326
    2. ' ' → logprob: -1.8048113584518433
    3. 'ju' → logprob: -9.804811477661133
    4. ' two' → logprob: -12.054811477661133
    5. '3' → logprob: -12.929811477661133
    6. 'two' → logprob: -13.554811477661133
    7. ' ju' → logprob: -14.554811477661133
    8. ' juices' → logprob: -14.804811477661133
    9. '  ' → logprob: -15.054811477661133
    10. '   ' → logprob: -15.554811477661133

Token 273: ' juices' (ID: 94384)
  Prédit: ' juices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' juices' → logprob: -0.000498701527249068
    2. 'ju' → logprob: -8.12549877166748
    3. ' ' → logprob: -9.12549877166748
    4. ' ju' → logprob: -9.62549877166748
    5. ' juice' → logprob: -11.12549877166748
    6. 'juice' → logprob: -12.62549877166748
    7. ' Ju' → logprob: -13.12549877166748
    8. 'Ju' → logprob: -13.37549877166748
    9. ' drinks' → logprob: -13.50049877166748
    10. ' ' → logprob: -13.62549877166748

Token 274: '.")
' (ID: 27834)
  Prédit: '.")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")' → logprob: -0.20162373781204224
    2. '.")
' → logprob: -1.7016236782073975
    3. '")' → logprob: -9.326623916625977
    4. '.")
' → logprob: -9.701623916625977
    5. '.")

' → logprob: -10.576623916625977
    6. '.' → logprob: -10.576623916625977
    7. '")
' → logprob: -12.701623916625977
    8. '."' → logprob: -13.326623916625977
    9. '.");' → logprob: -13.326623916625977
    10. '       ' → logprob: -14.451623916625977

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002187022240832448
    2. 'self' → logprob: -6.252187252044678
    3. ' self' → logprob: -8.50218677520752
    4. '   ' → logprob: -10.00218677520752
    5. '        
' → logprob: -12.50218677520752
    6. '
' → logprob: -12.75218677520752
    7. '           ' → logprob: -13.75218677520752
    8. '      ' → logprob: -14.37718677520752
    9. ' ' → logprob: -14.62718677520752
    10. '     ' → logprob: -15.00218677520752

Token 276: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.027260227128863335
    2. '       ' → logprob: -3.9022603034973145
    3. ' self' → logprob: -5.0272603034973145
    4. '   ' → logprob: -9.527259826660156
    5. '
' → logprob: -10.152259826660156
    6. 'if' → logprob: -11.402259826660156
    7. '        
' → logprob: -11.527259826660156
    8. ' ' → logprob: -13.277259826660156
    9. '	self' → logprob: -13.402259826660156
    10. '      ' → logprob: -14.527259826660156

Token 277: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.923874702304602e-05
    2. ' .' → logprob: -9.500089645385742
    3. 'past' → logprob: -11.625089645385742
    4. '.' → logprob: -12.500089645385742
    5. ' past' → logprob: -14.375089645385742
    6. '._' → logprob: -15.250089645385742
    7. '.pa' → logprob: -15.875089645385742
    8. '.P' → logprob: -16.750089645385742
    9. '.pos' → logprob: -17.500089645385742
    10. '.discount' → logprob: -17.500089645385742

Token 278: 'astas' (ID: 115456)
  Prédit: 'astas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'astas' → logprob: -3.500108141452074e-05
    2. 'ast' → logprob: -10.375035285949707
    3. 'asta' → logprob: -12.875035285949707
    4. 'past' → logprob: -14.375035285949707
    5. 'Past' → logprob: -15.500035285949707
    6. 'аст' → logprob: -16.50003433227539
    7. ' past' → logprob: -16.75003433227539
    8. 'h' → logprob: -17.00003433227539
    9. 'atas' → logprob: -17.25003433227539
    10. 'istas' → logprob: -17.75003433227539

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.063261032104492
    4. ',' → logprob: -17.688261032104492
    5. ' =
' → logprob: -17.813261032104492
    6. ')' → logprob: -18.938261032104492
    7. '＝' → logprob: -19.188261032104492
    8. '=

' → logprob: -19.188261032104492
    9. '   ' → logprob: -19.563261032104492
    10. '=p' → logprob: -19.563261032104492

Token 280: ' past' (ID: 4241)
  Prédit: ' past'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' past' → logprob: -0.693233847618103
    2. 'past' → logprob: -0.693233847618103
    3. 'pas' → logprob: -9.568233489990234
    4. 'p' → logprob: -11.818233489990234
    5. ' pasta' → logprob: -12.943233489990234
    6. ' ' → logprob: -13.068233489990234
    7. ' pas' → logprob: -13.193233489990234
    8. 'pat' → logprob: -13.818233489990234
    9. 'paste' → logprob: -14.943233489990234
    10. 'Past' → logprob: -15.318233489990234

Token 281: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -5.319370302458992e-06
    2. 'pas' → logprob: -13.000005722045898
    3. '[' → logprob: -13.875005722045898
    4. '(as' → logprob: -14.875005722045898
    5. 'a' → logprob: -15.000005722045898
    6. ' as' → logprob: -15.125005722045898
    7. '	as' → logprob: -15.125005722045898
    8. 's' → logprob: -15.375005722045898
    9. '
' → logprob: -16.0000057220459
    10. '   ' → logprob: -16.2500057220459

Token 282: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016586360288783908
    2. 'self' → logprob: -6.5016584396362305
    3. '<|end|>' → logprob: -10.00165843963623
    4. ' self' → logprob: -10.25165843963623
    5. '
' → logprob: -10.25165843963623
    6. ',' → logprob: -10.62665843963623
    7. '        
' → logprob: -12.25165843963623
    8. '   ' → logprob: -12.62665843963623
    9. '           ' → logprob: -13.87665843963623
    10. '```' → logprob: -14.00165843963623

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016948968172073364
    2. 'self' → logprob: -4.14194917678833
    3. ' self' → logprob: -7.01694917678833
    4. '   ' → logprob: -11.391948699951172
    5. '
' → logprob: -13.266948699951172
    6. ',' → logprob: -13.641948699951172
    7. '```' → logprob: -14.016948699951172
    8. '           ' → logprob: -14.266948699951172
    9. ',self' → logprob: -14.891948699951172
    10. '<|end|>' → logprob: -15.016948699951172

Token 284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.022217312827706337
    2. ' self' → logprob: -3.897217273712158
    3. '       ' → logprob: -6.397217273712158
    4. 'ju' → logprob: -12.647217750549316
    5. '   ' → logprob: -12.772217750549316
    6. '	self' → logprob: -14.522217750549316
    7. ' ' → logprob: -14.522217750549316
    8. '      ' → logprob: -15.897217750549316
    9. '(self' → logprob: -16.147216796875
    10. ' ju' → logprob: -16.522216796875

Token 285: '.j' (ID: 1760)
  Prédit: '.j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.j' → logprob: -0.0009823163272812963
    2. 'ju' → logprob: -7.250982284545898
    3. ' .' → logprob: -8.625982284545898
    4. '.je' → logprob: -10.625982284545898
    5. '.just' → logprob: -11.000982284545898
    6. '   ' → logprob: -11.000982284545898
    7. ' ' → logprob: -12.000982284545898
    8. '.' → logprob: -12.000982284545898
    9. 'Ju' → logprob: -13.000982284545898
    10. 'jus' → logprob: -13.250982284545898

Token 286: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.176947600673884e-05
    2. 'uces' → logprob: -11.125021934509277
    3. 'ices' → logprob: -12.000021934509277
    4. 'uc' → logprob: -15.000021934509277
    5. '_u' → logprob: -15.250021934509277
    6. 'uis' → logprob: -16.12502098083496
    7. 'uí' → logprob: -17.00002098083496
    8. 'uentes' → logprob: -17.37502098083496
    9. ' u' → logprob: -17.75002098083496
    10. 'ui' → logprob: -18.12502098083496

Token 287: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -7.97024549683556e-05
    2. 'ces' → logprob: -9.625080108642578
    3. ' ' → logprob: -12.750080108642578
    4. '
' → logprob: -13.000080108642578
    5. 'ice' → logprob: -13.375080108642578
    6. '   ' → logprob: -13.625080108642578
    7. '_' → logprob: -13.750080108642578
    8. 'ic' → logprob: -13.875080108642578
    9. 'i' → logprob: -14.375080108642578
    10. '-' → logprob: -14.625080108642578

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868744373321533
    2. '=' → logprob: -1.1368744373321533
    3. '<|end|>' → logprob: -13.511874198913574
    4. '[' → logprob: -14.011874198913574
    5. ' =
' → logprob: -15.011874198913574
    6. ')' → logprob: -15.011874198913574
    7. ' ' → logprob: -15.011874198913574
    8. ',' → logprob: -16.38687515258789
    9. ']' → logprob: -16.63687515258789
    10. ' =[' → logprob: -17.26187515258789

Token 289: ' juices' (ID: 94384)
  Prédit: 'ju'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ju' → logprob: -0.020638585090637207
    2. ' juices' → logprob: -3.8956384658813477
    3. ' ju' → logprob: -9.645638465881348
    4. 'juice' → logprob: -10.520638465881348
    5. ' ' → logprob: -14.020638465881348
    6. ' juice' → logprob: -14.270638465881348
    7. 'jus' → logprob: -14.270638465881348
    8. 'jo' → logprob: -14.270638465881348
    9. 'jug' → logprob: -14.395638465881348
    10. 'je' → logprob: -14.770638465881348

Token 290: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008289250545203686
    2. 'self' → logprob: -7.125828742980957
    3. ' self' → logprob: -11.000828742980957
    4. ',' → logprob: -12.500828742980957
    5. '
' → logprob: -13.250828742980957
    6. '   ' → logprob: -13.625828742980957
    7. '        
' → logprob: -15.375828742980957
    8. '           ' → logprob: -15.625828742980957
    9. ',self' → logprob: -15.625828742980957
    10. '<|end|>' → logprob: -15.875828742980957

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.088138227118179e-05
    2. 'self' → logprob: -9.625070571899414
    3. ' self' → logprob: -12.625070571899414
    4. '   ' → logprob: -14.000070571899414
    5. '
' → logprob: -15.375070571899414
    6. '<|end|>' → logprob: -15.375070571899414
    7. '        
' → logprob: -16.250070571899414
    8. '	self' → logprob: -16.500070571899414
    9. '           ' → logprob: -16.750070571899414
    10. '	' → logprob: -17.375070571899414

Token 292: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00016396844875998795
    2. '       ' → logprob: -9.125164031982422
    3. ' self' → logprob: -9.875164031982422
    4. '
' → logprob: -12.625164031982422
    5. '   ' → logprob: -16.375164031982422
    6. '        
' → logprob: -17.125164031982422
    7. '	self' → logprob: -18.000164031982422
    8. '           ' → logprob: -19.125164031982422
    9. 's' → logprob: -19.875164031982422
    10. '        ' → logprob: -20.125164031982422

Token 293: '.discount' (ID: 138755)
  Prédit: '.discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.discount' → logprob: -0.00014573395310435444
    2. '.dis' → logprob: -9.25014591217041
    3. 'discount' → logprob: -10.50014591217041
    4. '.' → logprob: -10.87514591217041
    5. ' .' → logprob: -13.00014591217041
    6. '.price' → logprob: -15.75014591217041
    7. '.Dis' → logprob: -15.87514591217041
    8. ' discount' → logprob: -15.87514591217041
    9. '._' → logprob: -16.000144958496094
    10. '.damage' → logprob: -16.500144958496094

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740772247314453
    2. ' =' → logprob: -0.9740772247314453
    3. ' ' → logprob: -15.474077224731445
    4. '   ' → logprob: -18.349077224731445
    5. '	' → logprob: -18.849077224731445
    6. '=int' → logprob: -19.099077224731445
    7. ')' → logprob: -19.349077224731445
    8. ' =
' → logprob: -19.849077224731445
    9. ',' → logprob: -20.099077224731445
    10. '＝' → logprob: -20.224077224731445

Token 295: ' discount' (ID: 11522)
  Prédit: 'discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.4743466377258301
    2. ' discount' → logprob: -0.9743466377258301
    3. '50' → logprob: -8.224346160888672
    4. 'dis' → logprob: -14.599346160888672
    5. ' ' → logprob: -15.099346160888672
    6. '
' → logprob: -15.099346160888672
    7. ' ' → logprob: -16.099346160888672
    8. '_discount' → logprob: -16.224346160888672
    9. '   ' → logprob: -16.349346160888672
    10. '.discount' → logprob: -17.224346160888672

Token 296: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041864294558763504
    2. '
' → logprob: -3.5418643951416016
    3. 'def' → logprob: -5.041864395141602
    4. '    
' → logprob: -5.291864395141602
    5. ' def' → logprob: -8.291864395141602
    6. '        
' → logprob: -8.916864395141602
    7. '<|end|>' → logprob: -9.291864395141602
    8. '  
' → logprob: -10.166864395141602
    9. '       ' → logprob: -12.041864395141602
    10. ' 
' → logprob: -12.041864395141602

Token 297: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25882187485694885
    2. '   ' → logprob: -1.6338218450546265
    3. ' def' → logprob: -3.508821964263916
    4. '
' → logprob: -6.008821964263916
    5. '    
' → logprob: -8.508821487426758
    6. '<|end|>' → logprob: -9.383821487426758
    7. ' ' → logprob: -10.008821487426758
    8. '	def' → logprob: -10.133821487426758
    9. '  
' → logprob: -10.258821487426758
    10. '<|end|>' → logprob: -11.258821487426758

Token 298: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.981667537620524e-06
    2. ' def' → logprob: -13.375001907348633
    3. '   ' → logprob: -14.875001907348633
    4. 'from' → logprob: -18.000001907348633
    5. '@property' → logprob: -18.875001907348633
    6. '    
' → logprob: -19.000001907348633
    7. 'class' → logprob: -19.125001907348633
    8. '@' → logprob: -19.500001907348633
    9. 'de' → logprob: -20.375001907348633
    10. 'self' → logprob: -20.500001907348633

Token 299: ' all' (ID: 722)
  Prédit: ' generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.8367249369621277
    2. ' create' → logprob: -1.3367249965667725
    3. ' get' → logprob: -1.7117249965667725
    4. 'generate' → logprob: -2.9617249965667725
    5. ' find' → logprob: -3.5867249965667725
    6. 'get' → logprob: -4.211724758148193
    7. 'create' → logprob: -4.211724758148193
    8. ' calculate' → logprob: -4.961724758148193
    9. ' make' → logprob: -6.586724758148193
    10. 'calculate' → logprob: -6.711724758148193

Token 300: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.31369560956954956
    2. '_set' → logprob: -1.3136956691741943
    3. '_comb' → logprob: -8.563695907592773
    4. '_possible' → logprob: -9.063695907592773
    5. '_' → logprob: -9.688695907592773
    6. '_menu' → logprob: -10.813695907592773
    7. '_pos' → logprob: -10.938695907592773
    8. '_combo' → logprob: -11.563695907592773
    9. '_sets' → logprob: -12.063695907592773
    10. '_options' → logprob: -12.313695907592773

Token 301: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -5.319370302458992e-06
    2. 'b' → logprob: -12.750005722045898
    3. 'inations' → logprob: -13.250005722045898
    4. 'bination' → logprob: -15.250005722045898
    5. 'bin' → logprob: -16.5000057220459
    6. '_b' → logprob: -16.6250057220459
    7. 'bine' → logprob: -17.8750057220459
    8. 'positions' → logprob: -17.8750057220459
    9. '```' → logprob: -17.8750057220459
    10. 'bn' → logprob: -18.2500057220459

Token 302: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -14.000001907348633
    3. ' (' → logprob: -14.125001907348633
    4. '()' → logprob: -17.250001907348633
    5. '(s' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.375001907348633
    7. 'self' → logprob: -18.625001907348633
    8. '(sel' → logprob: -19.375001907348633
    9. '(se' → logprob: -20.000001907348633
    10. '       ' → logprob: -20.000001907348633

Token 303: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017278951418120414
    2. 'self' → logprob: -9.50017261505127
    3. '):' → logprob: -9.50017261505127
    4. '):
' → logprob: -12.00017261505127
    5. ' )' → logprob: -12.12517261505127
    6. '(self' → logprob: -12.37517261505127
    7. '   ' → logprob: -12.37517261505127
    8. '):
' → logprob: -13.62517261505127
    9. '       ' → logprob: -14.25017261505127
    10. ')->' → logprob: -14.75017261505127

Token 304: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7992616891860962
    2. ' ->' → logprob: -1.2992616891860962
    3. ')' → logprob: -1.6742616891860962
    4. '->' → logprob: -2.4242615699768066
    5. '   ' → logprob: -7.049261569976807
    6. '       ' → logprob: -8.049262046813965
    7. ' ' → logprob: -8.799262046813965
    8. ')->' → logprob: -9.674262046813965
    9. 'self' → logprob: -9.799262046813965
    10. '(' → logprob: -9.799262046813965

Token 305: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.16022758185863495
    2. 'List' → logprob: -1.9102275371551514
    3. '[List' → logprob: -13.41022777557373
    4. ' ' → logprob: -14.28522777557373
    5. '   ' → logprob: -14.41022777557373
    6. '	List' → logprob: -14.53522777557373
    7. ' list' → logprob: -16.660226821899414
    8. 'list' → logprob: -17.535226821899414
    9. 'Iterator' → logprob: -17.785226821899414
    10. '  ' → logprob: -17.910226821899414

Token 306: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5213274309644476e-05
    2. '[List' → logprob: -11.500015258789062
    3. ' [' → logprob: -12.375015258789062
    4. '   ' → logprob: -15.250015258789062
    5. '[
' → logprob: -15.500015258789062
    6. '[(' → logprob: -16.125015258789062
    7. '[[' → logprob: -16.125015258789062
    8. '\[' → logprob: -16.750015258789062
    9. '       ' → logprob: -17.125015258789062
    10. ' ' → logprob: -18.000015258789062

Token 307: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0002819544170051813
    2. ' Set' → logprob: -8.750282287597656
    3. 'Tuple' → logprob: -9.000282287597656
    4. 'Menu' → logprob: -16.125282287597656
    5. ' Tuple' → logprob: -17.625282287597656
    6. '	Set' → logprob: -18.000282287597656
    7. '_Set' → logprob: -18.500282287597656
    8. 'List' → logprob: -19.625282287597656
    9. 'set' → logprob: -19.875282287597656
    10. '   ' → logprob: -20.000282287597656

Token 308: 'Menu' (ID: 4337)
  Prédit: 'Menu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Menu' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. '<Menu' → logprob: -16.375
    4. '[int' → logprob: -19.5
    5. '	Menu' → logprob: -19.625
    6. ' Menu' → logprob: -20.5
    7. 'menu' → logprob: -20.625
    8. '```' → logprob: -21.25
    9. '[str' → logprob: -21.625
    10. '_menu' → logprob: -21.75

Token 309: 'Combination' (ID: 114627)
  Prédit: 'Combination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Combination' → logprob: -3.128163257315464e-07
    2. 'Com' → logprob: -15.5
    3. 'Comb' → logprob: -17.125
    4. '[' → logprob: -18.125
    5. ']' → logprob: -18.375
    6. 'Combo' → logprob: -18.625
    7. ' Combination' → logprob: -19.0
    8. 'C' → logprob: -19.75
    9. 'Completion' → logprob: -20.0
    10. 'Composition' → logprob: -20.875

Token 310: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.48067501187324524
    2. ']:
' → logprob: -0.9806749820709229
    3. ']:
' → logprob: -5.230675220489502
    4. ':' → logprob: -7.730675220489502
    5. ']' → logprob: -7.855675220489502
    6. ':
' → logprob: -9.355674743652344
    7. '[' → logprob: -9.480674743652344
    8. '():
' → logprob: -9.855674743652344
    9. ']:

' → logprob: -10.105674743652344
    10. '):
' → logprob: -10.480674743652344

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.698698704596609e-05
    2. 'result' → logprob: -9.625097274780273
    3. 'com' → logprob: -11.625097274780273
    4. '   ' → logprob: -11.875097274780273
    5. '[' → logprob: -12.125097274780273
    6. '```' → logprob: -12.875097274780273
    7. ' result' → logprob: -14.000097274780273
    8. '      ' → logprob: -14.125097274780273
    9. 'results' → logprob: -14.250097274780273
    10. 'return' → logprob: -14.375097274780273

Token 312: ' return' (ID: 622)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0229562446475029
    2. 'result' → logprob: -4.272956371307373
    3. '       ' → logprob: -5.022956371307373
    4. 'comb' → logprob: -6.522956371307373
    5. ' combinations' → logprob: -7.897956371307373
    6. 'results' → logprob: -8.272955894470215
    7. 'return' (adapté à ' return') → logprob: -9.772955894470215
    8. 'all' → logprob: -11.522955894470215
    9. ' result' → logprob: -12.522955894470215
    10. 'combo' → logprob: -13.772955894470215

Token 313: ' [' (ID: 723)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5767163038253784
    2. '[' → logprob: -0.8267163038253784
    3. ' [
' → logprob: -7.826716423034668
    4. ' [' → logprob: -8.326716423034668
    5. '[self' → logprob: -9.701716423034668
    6. '[List' → logprob: -9.951716423034668
    7. '[Test' → logprob: -11.951716423034668
    8. '[Index' → logprob: -12.451716423034668
    9. '[new' → logprob: -13.076716423034668
    10. '[int' → logprob: -13.076716423034668

Token 314: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -7.147740689106286e-05
    2. '           ' → logprob: -9.75007152557373
    3. ' Set' → logprob: -11.25007152557373
    4. '               ' → logprob: -16.250070571899414
    5. '       ' → logprob: -16.500070571899414
    6. '	Set' → logprob: -17.625070571899414
    7. '   ' → logprob: -18.125070571899414
    8. '(Set' → logprob: -18.875070571899414
    9. '_Set' → logprob: -19.125070571899414
    10. '         ' → logprob: -20.250070571899414

Token 315: 'Menu' (ID: 4337)
  Prédit: 'Menu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Menu' → logprob: 0.0
    2. 'menu' → logprob: -18.5
    3. '<Menu' → logprob: -18.625
    4. 'Men' → logprob: -19.25
    5. ' Menu' → logprob: -19.625
    6. 'Set' → logprob: -19.75
    7. '	Menu' → logprob: -19.75
    8. '[' → logprob: -20.25
    9. 'MENU' → logprob: -20.625
    10. 'Menus' → logprob: -21.0

Token 316: 'Combination' (ID: 114627)
  Prédit: 'Combination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Combination' → logprob: -4.723352049040841e-06
    2. 'Combo' → logprob: -12.625004768371582
    3. 'Com' → logprob: -13.875004768371582
    4. 'Comb' → logprob: -15.750004768371582
    5. 'r' → logprob: -16.125003814697266
    6. 'Menu' → logprob: -17.250003814697266
    7. ' Combination' → logprob: -18.000003814697266
    8. 'Comparison' → logprob: -18.125003814697266
    9. 'Choice' → logprob: -18.125003814697266
    10. '组合' → logprob: -18.250003814697266

Token 317: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.006169336382299662
    2. '(' → logprob: -5.381169319152832
    3. '(self' → logprob: -6.631169319152832
    4. '(P' → logprob: -8.631169319152832
    5. '(
' → logprob: -10.006169319152832
    6. ' (' → logprob: -12.631169319152832
    7. '((' → logprob: -13.881169319152832
    8. '(pa' → logprob: -14.381169319152832
    9. '(

' → logprob: -15.756169319152832
    10. '(x' → logprob: -15.881169319152832

Token 318: 'asta' (ID: 6307)
  Prédit: 'asta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asta' → logprob: -0.2762008607387543
    2. 'p' → logprob: -1.5262008905410767
    3. ',' → logprob: -4.026200771331787
    4. ',p' → logprob: -6.151200771331787
    5. 'a' → logprob: -6.651200771331787
    6. 'pa' → logprob: -8.151201248168945
    7. 'sta' → logprob: -8.401201248168945
    8. '   ' → logprob: -8.401201248168945
    9. '_p' → logprob: -8.401201248168945
    10. ' pasta' → logprob: -8.651201248168945

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000990295666269958
    2. ',p' → logprob: -7.250990390777588
    3. ' ,' → logprob: -8.25098991394043
    4. ',
' → logprob: -11.75098991394043
    5. 'p' → logprob: -12.00098991394043
    6. ',j' → logprob: -13.12598991394043
    7. '=' → logprob: -14.00098991394043
    8. '(p' → logprob: -14.50098991394043
    9. ',

' → logprob: -15.12598991394043
    10. ' p' → logprob: -15.12598991394043

Token 320: ' juice' (ID: 29915)
  Prédit: 'juice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'juice' → logprob: -0.25270527601242065
    2. ' juice' → logprob: -1.5027053356170654
    3. 'ju' → logprob: -7.252705097198486
    4. ' ju' → logprob: -10.377705574035645
    5. ' ' → logprob: -11.627705574035645
    6. 'Ju' → logprob: -12.127705574035645
    7. 'j' → logprob: -12.627705574035645
    8. '   ' → logprob: -13.127705574035645
    9. ' Juice' → logprob: -13.127705574035645
    10. ' ' → logprob: -13.252705574035645

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022530299611389637
    2. ' for' → logprob: -6.25225305557251
    3. ' ,' → logprob: -8.752252578735352
    4. ')' → logprob: -9.877252578735352
    5. 'for' → logprob: -9.877252578735352
    6. '           ' → logprob: -10.377252578735352
    7. '       ' → logprob: -10.877252578735352
    8. '               ' → logprob: -12.502252578735352
    9. ',
' → logprob: -13.002252578735352
    10. '        ' → logprob: -13.502252578735352

Token 322: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47409260272979736
    2. ' self' → logprob: -0.9740926027297974
    3. '       ' → logprob: -11.974092483520508
    4. '           ' → logprob: -12.349092483520508
    5. '               ' → logprob: -13.599092483520508
    6. '	self' → logprob: -14.349092483520508
    7. ' ' → logprob: -14.349092483520508
    8. '(self' → logprob: -14.599092483520508
    9. ' ' → logprob: -14.724092483520508
    10. '        ' → logprob: -14.849092483520508

Token 323: '.discount' (ID: 138755)
  Prédit: '.discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.discount' → logprob: -0.00017946491425391287
    2. '.dis' → logprob: -8.750179290771484
    3. '.' → logprob: -11.000179290771484
    4. ' .' → logprob: -12.875179290771484
    5. 'discount' → logprob: -13.500179290771484
    6. '.discord' → logprob: -15.750179290771484
    7. '.damage' → logprob: -17.375179290771484
    8. ' discount' → logprob: -17.500179290771484
    9. '.d' → logprob: -17.500179290771484
    10. '.dec' → logprob: -17.750179290771484

Token 324: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08036823570728302
    2. 'for' → logprob: -2.5803682804107666
    3. '       ' → logprob: -7.3303680419921875
    4. '           ' → logprob: -7.5803680419921875
    5. '        ' → logprob: -8.330368041992188
    6. '               ' → logprob: -10.330368041992188
    7. ')' → logprob: -11.455368041992188
    8. '            ' → logprob: -11.830368041992188
    9. '         ' → logprob: -12.205368041992188
    10. '	for' → logprob: -12.705368041992188

Token 325: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1275651454925537
    2. 'for' → logprob: -2.1275651454925537
    3. '       ' → logprob: -8.002565383911133
    4. '           ' → logprob: -8.752565383911133
    5. '        ' → logprob: -9.377565383911133
    6. '	for' → logprob: -10.252565383911133
    7. '               ' → logprob: -11.502565383911133
    8. '   ' → logprob: -12.752565383911133
    9. ' ' → logprob: -13.002565383911133
    10. '		' → logprob: -13.127565383911133

Token 326: ' pasta' (ID: 33847)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6937529444694519
    2. ' pasta' → logprob: -0.6937529444694519
    3. '	p' → logprob: -8.443753242492676
    4. 'paste' → logprob: -8.943753242492676
    5. 'past' → logprob: -9.068753242492676
    6. 'pizza' → logprob: -10.193753242492676
    7. 'pa' → logprob: -10.568753242492676
    8. ' paste' → logprob: -11.068753242492676
    9. 'pas' → logprob: -11.193753242492676
    10. ' p' → logprob: -11.193753242492676

Token 327: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001930420519784093
    2. 'in' → logprob: -6.251930236816406
    3. '	in' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.251930236816406
    5. ' ' → logprob: -15.876930236816406
    6. 'import' → logprob: -16.501930236816406
    7. 'p' → logprob: -16.751930236816406
    8. ',' → logprob: -17.376930236816406
    9. '<|end|>' → logprob: -17.751930236816406
    10. 's' → logprob: -17.876930236816406

Token 328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061967797577381134
    2. ' self' → logprob: -2.8119678497314453
    3. '(self' → logprob: -16.936967849731445
    4. '	self' → logprob: -17.436967849731445
    5. '
' → logprob: -18.561967849731445
    6. '[self' → logprob: -18.561967849731445
    7. '=self' → logprob: -19.561967849731445
    8. '   ' → logprob: -20.436967849731445
    9. '       ' → logprob: -20.811967849731445
    10. ' ' → logprob: -21.061967849731445

Token 329: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -9.491498531133402e-06
    2. 'past' → logprob: -12.125009536743164
    3. '.' → logprob: -12.875009536743164
    4. 'p' → logprob: -14.125009536743164
    5. ' .' → logprob: -14.375009536743164
    6. ' past' → logprob: -16.250009536743164
    7. 'Past' → logprob: -18.250009536743164
    8. '.
' → logprob: -19.000009536743164
    9. 'self' → logprob: -19.125009536743164
    10. '
' → logprob: -19.250009536743164

Token 330: 'astas' (ID: 115456)
  Prédit: 'astas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'astas' → logprob: -0.00023178798437584192
    2. 'asta' → logprob: -9.000231742858887
    3. 'past' → logprob: -9.750231742858887
    4. 'self' → logprob: -10.500231742858887
    5. 'ast' → logprob: -11.125231742858887
    6. 'stas' → logprob: -12.250231742858887
    7. 'antas' → logprob: -14.250231742858887
    8. 'andas' → logprob: -14.875231742858887
    9. 'ostas' → logprob: -15.375231742858887
    10. 'atas' → logprob: -15.625231742858887

Token 331: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023282751441001892
    2. 'for' → logprob: -3.773282766342163
    3. '       ' → logprob: -10.773283004760742
    4. '           ' → logprob: -12.023283004760742
    5. '        ' → logprob: -12.023283004760742
    6. '	for' → logprob: -13.648283004760742
    7. '    ' → logprob: -13.898283004760742
    8. '   ' → logprob: -14.023283004760742
    9. '            ' → logprob: -14.898283004760742
    10. '         ' → logprob: -15.273283004760742

Token 332: ' juice' (ID: 29915)
  Prédit: ' juice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' juice' → logprob: -0.08923540264368057
    2. 'juice' → logprob: -2.464235305786133
    3. 'ju' → logprob: -8.589235305786133
    4. ' self' → logprob: -10.089235305786133
    5. ' ju' → logprob: -10.964235305786133
    6. 'self' → logprob: -11.089235305786133
    7. ' ' → logprob: -11.214235305786133
    8. ' ' → logprob: -12.089235305786133
    9. '   ' → logprob: -12.089235305786133
    10. ' juices' → logprob: -12.839235305786133

Token 333: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031880477908998728
    2. 'in' → logprob: -5.753188133239746
    3. ' ' → logprob: -12.128188133239746
    4. 'self' → logprob: -12.753188133239746
    5. 's' → logprob: -14.503188133239746
    6. ' i' → logprob: -14.753188133239746
    7. ' ' → logprob: -14.878188133239746
    8. ' self' → logprob: -15.503188133239746
    9. '	in' → logprob: -15.628188133239746
    10. 'import' → logprob: -15.753188133239746

Token 334: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47407862544059753
    2. ' self' → logprob: -0.9740786552429199
    3. ' ' → logprob: -13.849078178405762
    4. '	self' → logprob: -15.349078178405762
    5. '(self' → logprob: -15.349078178405762
    6. '[self' → logprob: -16.474079132080078
    7. '=self' → logprob: -16.724079132080078
    8. '   ' → logprob: -16.974079132080078
    9. ' ' → logprob: -17.599079132080078
    10. '    ' → logprob: -18.224079132080078

Token 335: '.j' (ID: 1760)
  Prédit: '.j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.j' → logprob: -4.7755875129951164e-05
    2. 'ju' → logprob: -10.00004768371582
    3. '.' → logprob: -14.50004768371582
    4. ' .' → logprob: -14.62504768371582
    5. 'Ju' → logprob: -14.62504768371582
    6. '.just' → logprob: -16.00004768371582
    7. '_' → logprob: -16.12504768371582
    8. ' ' → logprob: -16.25004768371582
    9. '.je' → logprob: -16.37504768371582
    10. '```' → logprob: -16.50004768371582

Token 336: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00015229015843942761
    2. 'uces' → logprob: -9.125152587890625
    3. 'ices' → logprob: -10.125152587890625
    4. 'uc' → logprob: -13.125152587890625
    5. ' u' → logprob: -14.750152587890625
    6. 'uis' → logprob: -15.125152587890625
    7. 'ui' → logprob: -16.000152587890625
    8. 'uves' → logprob: -16.000152587890625
    9. 'uí' → logprob: -16.375152587890625
    10. '```' → logprob: -16.500152587890625

Token 337: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.0004242395516484976
    2. 'ces' → logprob: -7.875424385070801
    3. 'ice' → logprob: -11.0004243850708
    4. '
' → logprob: -11.8754243850708
    5. 'ic' → logprob: -12.6254243850708
    6. 's' → logprob: -13.1254243850708
    7. '``' → logprob: -13.2504243850708
    8. '_' → logprob: -13.6254243850708
    9. '```' → logprob: -13.6254243850708
    10. '>' → logprob: -14.0004243850708

Token 338: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007119550718925893
    2. ' ]' → logprob: -7.250711917877197
    3. '       ' → logprob: -13.875712394714355
    4. ']
' → logprob: -14.125712394714355
    5. ')]' → logprob: -15.750712394714355
    6. '()]' → logprob: -16.25071144104004
    7. '   ' → logprob: -16.50071144104004
    8. ']
' → logprob: -17.50071144104004
    9. '`]' → logprob: -18.25071144104004
    10. ']

' → logprob: -18.75071144104004

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20465661585330963
    2. 'def' → logprob: -1.7046566009521484
    3. '<|end|>' → logprob: -6.079656600952148
    4. ' def' → logprob: -7.829656600952148
    5. ' ' → logprob: -8.454656600952148
    6. '```' → logprob: -8.704656600952148
    7. '<|end|>' → logprob: -9.704656600952148
    8. '    
' → logprob: -10.579656600952148
    9. '	def' → logprob: -10.704656600952148
    10. '  ' → logprob: -10.704656600952148

Token 340: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005246769287623465
    2. '   ' → logprob: -7.625524520874023
    3. ' def' → logprob: -10.250524520874023
    4. '	def' → logprob: -14.500524520874023
    5. ' ' → logprob: -14.625524520874023
    6. '  ' → logprob: -15.625524520874023
    7. '    
' → logprob: -16.375524520874023
    8. 'class' → logprob: -16.750524520874023
    9. '#' → logprob: -16.875524520874023
    10. '```' → logprob: -17.375524520874023

Token 341: ' find' (ID: 1646)
  Prédit: ' cheapest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cheapest' → logprob: -0.6409207582473755
    2. ' find' → logprob: -1.2659207582473755
    3. 'che' → logprob: -2.515920639038086
    4. ' get' → logprob: -3.765920639038086
    5. 'lowest' → logprob: -3.765920639038086
    6. ' lowest' → logprob: -3.890920639038086
    7. ' best' → logprob: -4.265920639038086
    8. 'find' → logprob: -4.390920639038086
    9. 'get' → logprob: -5.265920639038086
    10. 'best' → logprob: -5.515920639038086

Token 342: '_min' (ID: 15950)
  Prédit: '_best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_best' → logprob: -0.32213738560676575
    2. '_che' → logprob: -2.0721373558044434
    3. '_min' → logprob: -3.0721373558044434
    4. '_' → logprob: -3.3221373558044434
    5. '_m' → logprob: -3.6971373558044434
    6. '_low' → logprob: -3.9471373558044434
    7. '_opt' → logprob: -4.697137355804443
    8. '_max' → logprob: -5.197137355804443
    9. '_set' → logprob: -5.447137355804443
    10. '_aff' → logprob: -6.322137355804443

Token 343: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.7569558024406433
    2. '_set' → logprob: -0.8819558024406433
    3. '_total' → logprob: -2.631955862045288
    4. 'imum' → logprob: -3.631955862045288
    5. '_comb' → logprob: -4.256955623626709
    6. '_cost' → logprob: -6.631955623626709
    7. 'imal' → logprob: -6.756955623626709
    8. '_com' → logprob: -7.506955623626709
    9. '_combo' → logprob: -7.631955623626709
    10. '_' → logprob: -7.631955623626709

Token 344: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012785682454705238
    2. '_comb' → logprob: -4.887785911560059
    3. '_set' → logprob: -5.887785911560059
    4. '_com' → logprob: -6.387785911560059
    5. ' (' → logprob: -8.012785911560059
    6. '_combo' → logprob: -8.637785911560059
    7. '(' → logprob: -9.387785911560059
    8. '   ' → logprob: -10.262785911560059
    9. '_(' → logprob: -11.387785911560059
    10. 's' → logprob: -11.512785911560059

Token 345: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014102623797953129
    2. '(self' → logprob: -5.264102458953857
    3. ' )' → logprob: -5.514102458953857
    4. ')_' → logprob: -6.264102458953857
    5. '_com' → logprob: -7.014102458953857
    6. 'self' → logprob: -7.639102458953857
    7. '_)' → logprob: -7.889102458953857
    8. '_' → logprob: -8.389102935791016
    9. '_set' → logprob: -8.389102935791016
    10. '   ' → logprob: -8.514102935791016

Token 346: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008134396048262715
    2. ' (' → logprob: -7.5008134841918945
    3. '(' → logprob: -9.000813484191895
    4. ' ->' → logprob: -9.375813484191895
    5. ')' → logprob: -10.875813484191895
    6. '->' → logprob: -11.125813484191895
    7. '   ' → logprob: -11.625813484191895
    8. 'self' → logprob: -12.625813484191895
    9. '       ' → logprob: -13.375813484191895
    10. ' ' → logprob: -13.375813484191895

Token 347: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3658185601234436
    2. ' int' → logprob: -1.2408185005187988
    3. ' Tuple' → logprob: -4.615818500518799
    4. 'Tuple' → logprob: -4.990818500518799
    5. 'Set' → logprob: -9.115818977355957
    6. 'Optional' → logprob: -9.365818977355957
    7. ' Optional' → logprob: -9.740818977355957
    8. '   ' → logprob: -9.740818977355957
    9. 'List' → logprob: -9.865818977355957
    10. ' Set' → logprob: -9.865818977355957

Token 348: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.15122835338115692
    2. ':
' → logprob: -3.026228427886963
    3. ':' → logprob: -3.151228427886963
    4. '       ' → logprob: -3.651228427886963
    5. '():
' → logprob: -4.526228427886963
    6. '(' → logprob: -5.276228427886963
    7. '():' → logprob: -5.276228427886963
    8. '   ' → logprob: -6.651228427886963
    9. '(
' → logprob: -7.901228427886963
    10. 'self' → logprob: -9.026227951049805

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006497674621641636
    2. 'min' → logprob: -8.125649452209473
    3. 'prices' → logprob: -8.875649452209473
    4. '   ' → logprob: -9.875649452209473
    5. 'return' → logprob: -10.000649452209473
    6. 'price' → logprob: -10.375649452209473
    7. ' min' → logprob: -10.500649452209473
    8. '```' → logprob: -11.125649452209473
    9. ' return' → logprob: -11.250649452209473
    10. ' price' → logprob: -12.250649452209473

Token 350: ' combinations' (ID: 43835)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09782341867685318
    2. '       ' → logprob: -2.72282338142395
    3. 'min' → logprob: -4.097823619842529
    4. 'com' → logprob: -5.347823619842529
    5. ' return' → logprob: -5.472823619842529
    6. 'prices' → logprob: -6.847823619842529
    7. 'comb' → logprob: -7.972823619842529
    8. 'all' → logprob: -8.347823143005371
    9. ' min' → logprob: -8.597823143005371
    10. ' combinations' → logprob: -9.847823143005371

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861529543995857
    2. '=' → logprob: -3.0486152172088623
    3. '()' → logprob: -10.673615455627441
    4. 's' → logprob: -13.423615455627441
    5. '   ' → logprob: -13.673615455627441
    6. ' ' → logprob: -13.923615455627441
    7. '(' → logprob: -14.423615455627441
    8. ')' → logprob: -15.298615455627441
    9. '[' → logprob: -16.173614501953125
    10. '    ' → logprob: -16.548614501953125

Token 352: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.474087119102478
    2. ' self' → logprob: -0.974087119102478
    3. '[self' → logprob: -11.72408676147461
    4. '       ' → logprob: -13.97408676147461
    5. ' [' → logprob: -14.59908676147461
    6. '(self' → logprob: -14.72408676147461
    7. '	self' → logprob: -16.09908676147461
    8. '[' → logprob: -16.22408676147461
    9. '=self' → logprob: -17.09908676147461
    10. '   ' → logprob: -17.09908676147461

Token 353: '.all' (ID: 14045)
  Prédit: '.all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.all' → logprob: -2.570319702499546e-05
    2. '.' → logprob: -10.625025749206543
    3. 'all' → logprob: -14.000025749206543
    4. ' .' → logprob: -14.875025749206543
    5. '   ' → logprob: -15.625025749206543
    6. '.All' → logprob: -18.250024795532227
    7. ' all' → logprob: -18.250024795532227
    8. '       ' → logprob: -18.625024795532227
    9. '	all' → logprob: -18.750024795532227
    10. '_all' → logprob: -20.250024795532227

Token 354: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.9361264946837764e-07
    2. 'com' → logprob: -16.125
    3. '_comb' → logprob: -17.5
    4. '_' → logprob: -19.25
    5. ' combinations' → logprob: -21.125
    6. '__' → logprob: -21.625
    7. '_co' → logprob: -21.75
    8. '\' → logprob: -21.875
    9. '_con' → logprob: -23.5
    10. '_COM' → logprob: -23.625

Token 355: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.019120991230010986
    2. '_com' → logprob: -4.019121170043945
    3. 'com' → logprob: -7.269121170043945
    4. 'b' → logprob: -8.519121170043945
    5. 'inations' → logprob: -10.144121170043945
    6. ' combinations' → logprob: -11.144121170043945
    7. 'bin' → logprob: -12.269121170043945
    8. 'bination' → logprob: -12.894121170043945
    9. 'utations' → logprob: -13.019121170043945
    10. 'om' → logprob: -13.144121170043945

Token 356: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.38234803080558777
    2. '
' → logprob: -1.5073480606079102
    3. '       ' → logprob: -2.50734806060791
    4. '()' → logprob: -4.38234806060791
    5. '        
' → logprob: -6.38234806060791
    6. '[' → logprob: -9.00734806060791
    7. '
' → logprob: -9.25734806060791
    8. 'return' → logprob: -9.50734806060791
    9. '()
' → logprob: -9.50734806060791
    10. '<|end|>' → logprob: -10.38234806060791

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006761667784303427
    2. 'return' → logprob: -5.25676155090332
    3. 'min' → logprob: -7.00676155090332
    4. 'prices' → logprob: -8.13176155090332
    5. ' return' → logprob: -8.38176155090332
    6. 'price' → logprob: -9.88176155090332
    7. ' min' → logprob: -10.75676155090332
    8. '   ' → logprob: -12.00676155090332
    9. ' prices' → logprob: -12.00676155090332
    10. '        
' → logprob: -12.63176155090332

Token 358: ' min' (ID: 1349)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04551559314131737
    2. 'min' (adapté à ' min') → logprob: -3.545515537261963
    3. '       ' → logprob: -4.920515537261963
    4. 'prices' → logprob: -5.170515537261963
    5. ' return' → logprob: -6.045515537261963
    6. ' min' → logprob: -8.670516014099121
    7. 'if' → logprob: -9.420516014099121
    8. ' prices' → logprob: -10.295516014099121
    9. 'minimum' → logprob: -12.795516014099121
    10. 'price' → logprob: -13.420516014099121

Token 359: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0006903939065523446
    2. '([' → logprob: -8.250690460205078
    3. '(com' → logprob: -8.375690460205078
    4. '(' → logprob: -10.000690460205078
    5. '_comb' → logprob: -10.000690460205078
    6. 'price' → logprob: -10.375690460205078
    7. '_combo' → logprob: -10.875690460205078
    8. '_' → logprob: -11.000690460205078
    9. '(
' → logprob: -11.625690460205078
    10. 'Price' → logprob: -12.000690460205078

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967797577381134
    2. '=' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.436967849731445
    4. ' ' → logprob: -17.936967849731445
    5. ',' → logprob: -18.811967849731445
    6. '＝' → logprob: -18.936967849731445
    7. '_' → logprob: -19.186967849731445
    8. ':' → logprob: -19.311967849731445
    9. 's' → logprob: -19.311967849731445
    10. '    ' → logprob: -19.561967849731445

Token 361: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.005684291943907738
    2. ' min' → logprob: -5.7556843757629395
    3. 'float' → logprob: -6.0056843757629395
    4. 'com' → logprob: -10.255683898925781
    5. ' float' → logprob: -13.005683898925781
    6. 'comb' → logprob: -14.630683898925781
    7. '   ' → logprob: -14.630683898925781
    8. ' combinations' → logprob: -15.755683898925781
    9. '	min' → logprob: -16.00568389892578
    10. '100' → logprob: -16.75568389892578

Token 362: '(c' (ID: 2410)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.6349100470542908
    2. '(combo' → logprob: -0.8849100470542908
    3. '(c' → logprob: -2.8849101066589355
    4. '([' → logprob: -6.8849101066589355
    5. 'combo' → logprob: -8.009909629821777
    6. 'comb' → logprob: -10.134909629821777
    7. ' combo' → logprob: -12.259909629821777
    8. '((' → logprob: -13.259909629821777
    9. '(' → logprob: -13.509909629821777
    10. '(comp' → logprob: -14.009909629821777

Token 363: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.006584516726434231
    2. 'om' → logprob: -5.756584644317627
    3. 'total' → logprob: -6.006584644317627
    4. 'omb' → logprob: -7.006584644317627
    5. 'otal' → logprob: -11.881584167480469
    6. 'omp' → logprob: -12.131584167480469
    7. ' total' → logprob: -12.381584167480469
    8. '.' → logprob: -12.506584167480469
    9. 'o' → logprob: -12.506584167480469
    10. '(total' → logprob: -13.256584167480469

Token 364: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -3.128163257315464e-07
    2. 'price' → logprob: -15.375
    3. '_' → logprob: -17.25
    4. '_pr' → logprob: -18.625
    5. '_PRICE' → logprob: -18.75
    6. '._' → logprob: -19.625
    7. ' _' → logprob: -19.75
    8. '_
' → logprob: -20.125
    9. '_score' → logprob: -20.5
    10. '_.' → logprob: -20.625

Token 365: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.5776860184123507e-06
    2. '())' → logprob: -13.75000286102295
    3. '(' → logprob: -13.87500286102295
    4. ' ()' → logprob: -15.37500286102295
    5. ')' → logprob: -15.62500286102295
    6. '()
' → logprob: -16.250001907348633
    7. 'for' → logprob: -17.000001907348633
    8. '()`' → logprob: -17.500001907348633
    9. '()]' → logprob: -18.000001907348633
    10. '（）' → logprob: -18.500001907348633

Token 366: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.274932143744081e-05
    2. ')' → logprob: -10.500042915344238
    3. 'for' → logprob: -12.125042915344238
    4. '())' → logprob: -12.250042915344238
    5. ' for' → logprob: -12.625042915344238
    6. ' ()' → logprob: -14.250042915344238
    7. '(' → logprob: -14.250042915344238
    8. '()
' → logprob: -15.125042915344238
    9. '   ' → logprob: -16.750041961669922
    10. '```' → logprob: -17.250041961669922

Token 367: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.31326186656951904
    2. 'c' → logprob: -1.313261866569519
    3. '	c' → logprob: -15.938261985778809
    4. ' ' → logprob: -17.688261032104492
    5. 'comb' → logprob: -18.188261032104492
    6. ')c' → logprob: -18.188261032104492
    7. ' ' → logprob: -19.063261032104492
    8. 'cation' → logprob: -19.688261032104492
    9. '_c' → logprob: -20.063261032104492
    10. ' combinations' → logprob: -20.188261032104492

Token 368: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005245733540505171
    2. 'in' → logprob: -5.255245685577393
    3. 'c' → logprob: -11.50524616241455
    4. ' ' → logprob: -13.75524616241455
    5. 's' → logprob: -14.25524616241455
    6. ' c' → logprob: -15.88024616241455
    7. 'n' → logprob: -16.630245208740234
    8. '  ' → logprob: -18.755245208740234
    9. '	in' → logprob: -18.755245208740234
    10. ' ' → logprob: -19.380245208740234

Token 369: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0019294669618830085
    2. ' combinations' → logprob: -6.25192928314209
    3. 'comb' → logprob: -14.12692928314209
    4. '(com' → logprob: -16.376930236816406
    5. ' com' → logprob: -17.001930236816406
    6. '	com' → logprob: -17.626930236816406
    7. '_com' → logprob: -18.876930236816406
    8. 'c' → logprob: -19.001930236816406
    9. '=com' → logprob: -19.876930236816406
    10. ' ' → logprob: -20.126930236816406

Token 370: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6072354912757874
    2. ')' → logprob: -0.8572354912757874
    3. '       ' → logprob: -3.4822354316711426
    4. ' )
' → logprob: -10.3572359085083
    5. ')
' → logprob: -10.9822359085083
    6. ' if' → logprob: -11.4822359085083
    7. ' )' → logprob: -11.9822359085083
    8. ')return' → logprob: -12.6072359085083
    9. ')

' → logprob: -13.7322359085083
    10. '
' → logprob: -14.9822359085083

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.478889215737581e-05
    2. 'return' → logprob: -9.875054359436035
    3. ' return' → logprob: -13.375054359436035
    4. '   ' → logprob: -13.500054359436035
    5. '
' → logprob: -16.25005531311035
    6. '```' → logprob: -16.62505531311035
    7. '           ' → logprob: -17.00005531311035
    8. '	return' → logprob: -17.50005531311035
    9. '	' → logprob: -18.00005531311035
    10. '      ' → logprob: -18.87505531311035

Token 372: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005262695252895355
    2. '       ' → logprob: -5.255262851715088
    3. ' return' → logprob: -10.50526237487793
    4. '   ' → logprob: -13.88026237487793
    5. '
' → logprob: -14.50526237487793
    6. '	return' → logprob: -16.38026237487793
    7. '        
' → logprob: -19.50526237487793
    8. '      ' → logprob: -19.75526237487793
    9. '     ' → logprob: -20.00526237487793
    10. ' ' → logprob: -20.13026237487793

Token 373: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2014133334159851
    2. 'min' → logprob: -1.7014133930206299
    3. '	min' → logprob: -18.576414108276367
    4. '_min' → logprob: -20.076414108276367
    5. '(min' → logprob: -20.076414108276367
    6. ' ' → logprob: -20.951414108276367
    7. '[min' → logprob: -21.326414108276367
    8. 'm' → logprob: -22.451414108276367
    9. '
' → logprob: -22.451414108276367
    10. ',min' → logprob: -22.951414108276367

Token 374: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -3.128163257315464e-07
    2. 'price' → logprob: -16.125
    3. '_' → logprob: -16.5
    4. '_prices' → logprob: -17.375
    5. '_pr' → logprob: -17.625
    6. ' _' → logprob: -17.75
    7. '_PRICE' → logprob: -18.75
    8. '_p' → logprob: -18.75
    9. '_score' → logprob: -18.875
    10. '_min' → logprob: -19.0

Token 375: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: ' Input' (ID: 10090)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -1.6708770990371704
    2. ' Solution' → logprob: -1.7958770990371704
    3. 'Order' → logprob: -2.045876979827881
    4. 'Menu' → logprob: -2.545876979827881
    5. ' Menu' → logprob: -2.795876979827881
    6. ' Order' → logprob: -2.920876979827881
    7. 'Customer' → logprob: -2.920876979827881
    8. 'Test' → logprob: -3.045876979827881
    9. 'Main' → logprob: -3.420876979827881
    10. ' Test' → logprob: -3.920876979827881

Token 378: 'Reader' (ID: 7171)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.35086265206336975
    2. 'Data' → logprob: -1.6008626222610474
    3. 'Reader' → logprob: -3.100862741470337
    4. 'Parser' → logprob: -4.100862503051758
    5. 'Processor' → logprob: -4.350862503051758
    6. 'Menu' → logprob: -4.975862503051758
    7. 'Error' → logprob: -6.100862503051758
    8. 'Form' → logprob: -6.225862503051758
    9. 'Output' → logprob: -6.350862503051758
    10. 'View' → logprob: -6.600862503051758

Token 379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036206236109137535
    2. ':
' → logprob: -5.628620624542236
    3. ' :' → logprob: -12.128620147705078
    4. '<|end|>' → logprob: -12.628620147705078
    5. '():' → logprob: -13.003620147705078
    6. '：' → logprob: -13.128620147705078
    7. '):' → logprob: -13.253620147705078
    8. ':

' → logprob: -13.878620147705078
    9. '(object' → logprob: -14.003620147705078
    10. ':def' → logprob: -14.503620147705078

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.015305552864447e-05
    2. ' def' → logprob: -9.750060081481934
    3. 'def' → logprob: -13.625060081481934
    4. '```' → logprob: -15.625060081481934
    5. '    
' → logprob: -15.750060081481934
    6. '<|end|>' → logprob: -16.37506103515625
    7. ' @' → logprob: -17.00006103515625
    8. '‌' → logprob: -17.12506103515625
    9. '  ' → logprob: -17.25006103515625
    10. '@' → logprob: -17.37506103515625

Token 381: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.18653231859207153
    2. 'def' → logprob: -2.4365322589874268
    3. ' def' → logprob: -3.1865322589874268
    4. ' @' → logprob: -3.1865322589874268
    5. '   ' → logprob: -9.561532020568848
    6. 'import' → logprob: -12.686532020568848
    7. 'from' → logprob: -14.686532020568848
    8. 'staticmethod' → logprob: -15.061532020568848
    9. '@property' → logprob: -15.311532020568848
    10. '
' → logprob: -15.436532020568848

Token 382: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -5.56233171664644e-05
    2. 'classmethod' → logprob: -10.000055313110352
    3. 'static' → logprob: -11.500055313110352
    4. 'st' → logprob: -17.62505531311035
    5. 'stat' → logprob: -17.87505531311035
    6. 'sta' → logprob: -19.12505531311035
    7. ' static' → logprob: -19.50005531311035
    8. 'dat' → logprob: -20.25005531311035
    9. 'abstract' → logprob: -20.75005531311035
    10. 'property' → logprob: -20.75005531311035

Token 383: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29327189922332764
    2. '   ' → logprob: -1.5432718992233276
    3. ' def' → logprob: -3.668272018432617
    4. '
' → logprob: -4.418272018432617
    5. '()' → logprob: -6.043272018432617
    6. '()
' → logprob: -8.668272018432617
    7. '	def' → logprob: -9.168272018432617
    8. '(' → logprob: -10.043272018432617
    9. '```' → logprob: -10.418272018432617
    10. '<|end|>' → logprob: -10.543272018432617

Token 384: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03250844031572342
    2. ' def' → logprob: -3.532508373260498
    3. '   ' → logprob: -5.907508373260498
    4. '
' → logprob: -10.407508850097656
    5. '	def' → logprob: -12.657508850097656
    6. ' ' → logprob: -14.657508850097656
    7. ':def' → logprob: -14.782508850097656
    8. '  ' → logprob: -15.157508850097656
    9. '(def' → logprob: -15.532508850097656
    10. '```' → logprob: -16.282508850097656

Token 385: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.875
    4. '
' → logprob: -21.25
    5. 'from' → logprob: -21.5
    6. 'de' → logprob: -22.875
    7. '	def' → logprob: -23.75
    8. '@' → logprob: -24.5
    9. 'read' → logprob: -24.5
    10. 'classmethod' → logprob: -24.625

Token 386: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.06200768053531647
    2. ' read' → logprob: -2.8120076656341553
    3. ' readline' → logprob: -10.937007904052734
    4. 'def' → logprob: -11.312007904052734
    5. 'parse' → logprob: -12.937007904052734
    6. ' def' → logprob: -13.062007904052734
    7. '.read' → logprob: -13.812007904052734
    8. '	read' → logprob: -13.937007904052734
    9. 'input' → logprob: -14.062007904052734
    10. ' input' → logprob: -14.312007904052734

Token 387: '_prices' (ID: 172132)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01666494645178318
    2. '():' → logprob: -5.016664981842041
    3. '_lines' → logprob: -5.641664981842041
    4. '():
' → logprob: -6.016664981842041
    5. '_menu' → logprob: -6.266664981842041
    6. '_list' → logprob: -7.891664981842041
    7. 'lines' → logprob: -8.141664505004883
    8. 'int' → logprob: -8.141664505004883
    9. '_input' → logprob: -8.641664505004883
    10. '()
' → logprob: -8.891664505004883

Token 388: '(num' (ID: 15828)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000543857691809535
    2. '():' → logprob: -7.62554407119751
    3. '():
' → logprob: -11.000543594360352
    4. ' ()' → logprob: -11.500543594360352
    5. '(' → logprob: -11.500543594360352
    6. '(prompt' → logprob: -12.500543594360352
    7. '(num' → logprob: -12.875543594360352
    8. '(lines' → logprob: -13.125543594360352
    9. '()->' → logprob: -13.500543594360352
    10. '(line' → logprob: -13.500543594360352

Token 389: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13709533214569092
    2. '=' → logprob: -2.6370954513549805
    3. ')' → logprob: -3.1370954513549805
    4. '):' → logprob: -5.5120954513549805
    5. ':int' → logprob: -6.0120954513549805
    6. ' =' → logprob: -6.0120954513549805
    7. '=int' → logprob: -6.5120954513549805
    8. '(' → logprob: -7.3870954513549805
    9. '_tokens' → logprob: -7.7620954513549805
    10. '_items' → logprob: -8.26209545135498

Token 390: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020771251001860946
    2. ' int' → logprob: -9.000207901000977
    3. '(int' → logprob: -10.000207901000977
    4. '=int' → logprob: -10.625207901000977
    5. ')' → logprob: -11.625207901000977
    6. ']int' → logprob: -12.500207901000977
    7. '[int' → logprob: -14.375207901000977
    8. ' ' → logprob: -15.125207901000977
    9. ':int' → logprob: -15.375207901000977
    10. ',int' → logprob: -15.375207901000977

Token 391: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3795937522663735e-05
    2. ',' → logprob: -11.00002384185791
    3. '):' → logprob: -12.75002384185791
    4. ' )' → logprob: -13.37502384185791
    5. '   ' → logprob: -13.62502384185791
    6. '()' → logprob: -14.62502384185791
    7. ',)' → logprob: -15.12502384185791
    8. ')->' → logprob: -16.250022888183594
    9. ':' → logprob: -16.500022888183594
    10. '):
' → logprob: -16.500022888183594

Token 392: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003612901084125042
    2. '()->' → logprob: -6.128612995147705
    3. '->' → logprob: -6.628612995147705
    4. ' ->' → logprob: -9.753612518310547
    5. ')' → logprob: -10.628612518310547
    6. '():' → logprob: -11.003612518310547
    7. '(' → logprob: -12.628612518310547
    8. '   ' → logprob: -13.878612518310547
    9. ':' → logprob: -15.128612518310547
    10. '(lines' → logprob: -15.128612518310547

Token 393: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.024362172931432724
    2. '[List' → logprob: -3.774362087249756
    3. ' List' → logprob: -7.274362087249756
    4. 'list' → logprob: -7.774362087249756
    5. '[' → logprob: -13.774362564086914
    6. ' list' → logprob: -14.149362564086914
    7. '[int' → logprob: -14.274362564086914
    8. '[list' → logprob: -15.899362564086914
    9. '_list' → logprob: -16.649362564086914
    10. '[str' → logprob: -17.149362564086914

Token 394: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.8624639324116288e-06
    2. 'int' → logprob: -14.000001907348633
    3. '[' → logprob: -14.500001907348633
    4. '[in' → logprob: -15.250001907348633
    5. '<int' → logprob: -15.500001907348633
    6. '[Int' → logprob: -17.500001907348633
    7. '[
' → logprob: -18.000001907348633
    8. '[List' → logprob: -18.500001907348633
    9. '(int' → logprob: -19.125001907348633
    10. '[i' → logprob: -19.125001907348633

Token 395: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10279396176338196
    2. '):
' → logprob: -2.3527939319610596
    3. '():' → logprob: -6.852794170379639
    4. ')' → logprob: -7.352794170379639
    5. '():
' → logprob: -7.477794170379639
    6. '):
' → logprob: -8.85279369354248
    7. '   ' → logprob: -9.47779369354248
    8. ':' → logprob: -9.97779369354248
    9. ']:' → logprob: -10.72779369354248
    10. '()' → logprob: -11.10279369354248

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010386446956545115
    2. 'prices' → logprob: -7.501038551330566
    3. ' prices' → logprob: -7.751038551330566
    4. '   ' → logprob: -11.251038551330566
    5. ' lines' → logprob: -11.876038551330566
    6. 'return' → logprob: -12.001038551330566
    7. ' return' → logprob: -12.126038551330566
    8. 'result' → logprob: -12.126038551330566
    9. '	' → logprob: -12.876038551330566
    10. '      ' → logprob: -13.126038551330566

Token 397: ' prices' (ID: 8451)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' (adapté à ' prices') → logprob: -0.6864104866981506
    2. 'return' → logprob: -1.0614104270935059
    3. '[' → logprob: -2.436410427093506
    4. '[int' → logprob: -3.436410427093506
    5. ' prices' → logprob: -4.061410427093506
    6. ' return' → logprob: -4.686410427093506
    7. '       ' → logprob: -6.311410427093506
    8. 'result' → logprob: -7.186410427093506
    9. ' [' → logprob: -7.311410427093506
    10. '[i' → logprob: -7.686410427093506

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194400548934937
    2. ' =' → logprob: -1.5019440650939941
    3. '=[]
' → logprob: -12.126943588256836
    4. '   ' → logprob: -12.376943588256836
    5. '=[]' → logprob: -12.626943588256836
    6. ':' → logprob: -14.251943588256836
    7. '       ' → logprob: -14.376943588256836
    8. '()' → logprob: -15.501943588256836
    9. ' ' → logprob: -16.251943588256836
    10. '=
' → logprob: -16.376943588256836

Token 399: ' []
' (ID: 8911)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.4186946451663971
    2. '[]' → logprob: -1.1686946153640747
    3. '[' → logprob: -3.9186947345733643
    4. 'list' → logprob: -5.168694496154785
    5. '[]
' → logprob: -5.668694496154785
    6. '[input' → logprob: -6.918694496154785
    7. '[int' → logprob: -7.668694496154785
    8. '[List' → logprob: -8.543694496154785
    9. '[line' → logprob: -8.918694496154785
    10. '[str' → logprob: -9.418694496154785

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04133187606930733
    2. ' for' → logprob: -3.2913317680358887
    3. 'for' → logprob: -5.916331768035889
    4. '   ' → logprob: -7.916331768035889
    5. '	for' → logprob: -9.166332244873047
    6. '	' → logprob: -9.666332244873047
    7. '	   ' → logprob: -10.416332244873047
    8. '<|end|>' → logprob: -11.166332244873047
    9. ',' → logprob: -12.791332244873047
    10. '    ' → logprob: -13.291332244873047

Token 401: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.062064483761787415
    2. ' for' → logprob: -2.8120644092559814
    3. '       ' → logprob: -9.312064170837402
    4. 'while' → logprob: -12.937064170837402
    5. '   ' → logprob: -13.062064170837402
    6. '	for' → logprob: -13.187064170837402
    7. ' while' → logprob: -16.68706512451172
    8. '
' → logprob: -17.93706512451172
    9. ' ' → logprob: -17.93706512451172
    10. '	' → logprob: -18.31206512451172

Token 402: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00021319588995538652
    2. '_i' → logprob: -8.500213623046875
    3. ' _' → logprob: -12.250213623046875
    4. '_price' → logprob: -13.250213623046875
    5. '_in' → logprob: -13.500213623046875
    6. '_range' → logprob: -14.750213623046875
    7. '_index' → logprob: -15.625213623046875
    8. '_input' → logprob: -15.750213623046875
    9. '_value' → logprob: -16.000213623046875
    10. 'i' → logprob: -16.125213623046875

Token 403: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00020711649267468601
    2. 'in' → logprob: -8.50020694732666
    3. ' ' → logprob: -13.00020694732666
    4. 'i' → logprob: -14.75020694732666
    5. ' i' → logprob: -15.12520694732666
    6. '  ' → logprob: -15.37520694732666
    7. 'range' → logprob: -16.250207901000977
    8. '<|end|>' → logprob: -16.250207901000977
    9. 'input' → logprob: -16.750207901000977
    10. '	in' → logprob: -17.375207901000977

Token 404: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476016292348504
    2. ' range' → logprob: -6.002476215362549
    3. 'input' → logprob: -15.75247573852539
    4. '	range' → logprob: -16.62747573852539
    5. 'rang' → logprob: -16.62747573852539
    6. '   ' → logprob: -17.25247573852539
    7. ' ' → logprob: -17.62747573852539
    8. '_range' → logprob: -17.62747573852539
    9. 'ran' → logprob: -18.00247573852539
    10. '  ' → logprob: -18.00247573852539

Token 405: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0010038702748715878
    2. '(' → logprob: -7.876003742218018
    3. 'num' → logprob: -8.126004219055176
    4. '(range' → logprob: -8.626004219055176
    5. 'range' → logprob: -9.001004219055176
    6. ' num' → logprob: -11.751004219055176
    7. ' (' → logprob: -11.876004219055176
    8. ' range' → logprob: -11.876004219055176
    9. '(n' → logprob: -13.751004219055176
    10. '(
' → logprob: -13.876004219055176

Token 406: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02663581632077694
    2. '):' → logprob: -3.6516358852386475
    3. '   ' → logprob: -8.651636123657227
    4. '):
' → logprob: -9.651636123657227
    5. '       ' → logprob: -10.526636123657227
    6. ':
' → logprob: -11.151636123657227
    7. ':' → logprob: -11.151636123657227
    8. ')' → logprob: -11.276636123657227
    9. '():
' → logprob: -11.276636123657227
    10. ' ):
' → logprob: -11.401636123657227

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.110668618930504e-05
    2. ' prices' → logprob: -10.37506103515625
    3. 'prices' → logprob: -11.12506103515625
    4. '   ' → logprob: -12.50006103515625
    5. '```' → logprob: -12.75006103515625
    6. '            
' → logprob: -13.00006103515625
    7. '       ' → logprob: -13.37506103515625
    8. '          ' → logprob: -14.37506103515625
    9. '               ' → logprob: -14.62506103515625
    10. ' input' → logprob: -15.00006103515625

Token 408: ' raw' (ID: 11428)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prices' → logprob: -0.2592822313308716
    2. 'price' → logprob: -1.8842822313308716
    3. ' prices' → logprob: -2.634282112121582
    4. ' price' → logprob: -5.509282112121582
    5. '           ' → logprob: -7.884282112121582
    6. 'value' → logprob: -9.509282112121582
    7. 'p' → logprob: -9.509282112121582
    8. 'line' → logprob: -10.259282112121582
    9. '_prices' → logprob: -11.134282112121582
    10. '   ' → logprob: -11.384282112121582

Token 409: ' =' (ID: 314)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.5661571025848389
    2. '=' → logprob: -1.1911571025848389
    3. '_price' → logprob: -2.316157102584839
    4. ' =' → logprob: -4.066157341003418
    5. '_' → logprob: -4.941157341003418
    6. 'input' → logprob: -6.316157341003418
    7. '=input' → logprob: -6.691157341003418
    8. 'price' → logprob: -6.941157341003418
    9. '_=' → logprob: -7.691157341003418
    10. '_in' → logprob: -8.316157341003418

Token 410: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019561098888516426
    2. ' input' → logprob: -6.251955986022949
    3. 'int' → logprob: -10.50195598602295
    4. ' int' → logprob: -17.626956939697266
    5. '	input' → logprob: -18.751956939697266
    6. '   ' → logprob: -18.751956939697266
    7. '=input' → logprob: -19.626956939697266
    8. '(input' → logprob: -20.126956939697266
    9. '<input' → logprob: -20.376956939697266
    10. '
' → logprob: -21.376956939697266

Token 411: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12746712565422058
    2. '().' → logprob: -2.127467155456543
    3. '()
' → logprob: -7.627467155456543
    4. '(' → logprob: -10.252467155456543
    5. '())' → logprob: -12.002467155456543
    6. '()

' → logprob: -13.002467155456543
    7. '();' → logprob: -13.377467155456543
    8. ' ()' → logprob: -13.502467155456543
    9. '()`' → logprob: -14.002467155456543
    10. '()
' → logprob: -14.252467155456543

Token 412: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2647193968296051
    2. '.strip' → logprob: -2.3897194862365723
    3. '       ' → logprob: -3.1397194862365723
    4. 'prices' → logprob: -3.5147194862365723
    5. '.' → logprob: -3.7647194862365723
    6. '            
' → logprob: -4.889719486236572
    7. '        
' → logprob: -5.264719486236572
    8. ',' → logprob: -5.389719486236572
    9. '_prices' → logprob: -5.514719486236572
    10. 'price' → logprob: -5.514719486236572

Token 413: ' #' (ID: 1069)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prices' → logprob: -0.6214336156845093
    2. 'price' → logprob: -0.9964336156845093
    3. ' prices' → logprob: -2.746433734893799
    4. ' price' → logprob: -3.871433734893799
    5. '           ' → logprob: -5.246433734893799
    6. 'p' → logprob: -6.246433734893799
    7. 'try' → logprob: -7.496433734893799
    8. 'value' → logprob: -8.12143325805664
    9. ' p' → logprob: -8.37143325805664
    10. 'pr' → logprob: -8.87143325805664

Token 414: ' Defensive' (ID: 194572)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.10728197544813156
    2. 'try' → logprob: -3.1072819232940674
    3. 'prices' → logprob: -3.6072819232940674
    4. 'value' → logprob: -3.7322819232940674
    5. 'raw' → logprob: -6.4822821617126465
    6. 'if' → logprob: -6.6072821617126465
    7. '           ' → logprob: -6.6072821617126465
    8. ' price' → logprob: -7.2322821617126465
    9. 'val' → logprob: -7.9822821617126465
    10. 'while' → logprob: -8.607281684875488

Token 415: ' conversion' (ID: 22165)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.05740071088075638
    2. ' try' → logprob: -3.557400703430176
    3. 'if' → logprob: -3.932400703430176
    4. ' if' → logprob: -5.182400703430176
    5. 'strip' → logprob: -6.807400703430176
    6. '           ' → logprob: -7.807400703430176
    7. 'price' → logprob: -8.307400703430176
    8. 'token' → logprob: -9.682400703430176
    9. ' price' → logprob: -10.182400703430176
    10. 'prices' → logprob: -10.432400703430176

Token 416: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042399968951940536
    2. 'try' → logprob: -3.9173998832702637
    3. '       ' → logprob: -4.042399883270264
    4. ' try' → logprob: -5.542399883270264
    5. 'price' → logprob: -9.792400360107422
    6. ' price' → logprob: -10.542400360107422
    7. '   ' → logprob: -11.042400360107422
    8. ',' → logprob: -11.417400360107422
    9. '               ' → logprob: -11.917400360107422
    10. '            
' → logprob: -12.292400360107422

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10275062173604965
    2. 'try' → logprob: -2.602750539779663
    3. ' try' → logprob: -4.477750778198242
    4. '       ' → logprob: -5.102750778198242
    5. 'price' → logprob: -5.477750778198242
    6. ' price' → logprob: -7.102750778198242
    7. 'prices' → logprob: -7.977750778198242
    8. '            
' → logprob: -8.227750778198242
    9. ',' → logprob: -8.727750778198242
    10. ' prices' → logprob: -9.852750778198242

Token 418: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.61397385597229
    2. 'price' → logprob: -1.11397385597229
    3. 'prices' → logprob: -2.36397385597229
    4. ' try' → logprob: -3.98897385597229
    5. ' price' → logprob: -5.113973617553711
    6. '           ' → logprob: -5.613973617553711
    7. ' prices' → logprob: -5.613973617553711
    8. 'p' → logprob: -6.613973617553711
    9. 'raw' → logprob: -6.613973617553711
    10. 'value' → logprob: -6.863973617553711

Token 419: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10164250433444977
    2. ':
' → logprob: -2.726642608642578
    3. '               ' → logprob: -3.476642608642578
    4. '           ' → logprob: -8.351642608642578
    5. '   ' → logprob: -11.226642608642578
    6. '):
' → logprob: -11.351642608642578
    7. '       ' → logprob: -11.726642608642578
    8. '<|end|>' → logprob: -12.351642608642578
    9. '              ' → logprob: -12.851642608642578
    10. ':
' → logprob: -12.851642608642578

Token 420: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004556983185466379
    2. 'price' → logprob: -9.125455856323242
    3. 'prices' → logprob: -9.250455856323242
    4. ' price' → logprob: -9.500455856323242
    5. ':
' → logprob: -9.500455856323242
    6. '   ' → logprob: -10.375455856323242
    7. ':' → logprob: -10.500455856323242
    8. '           ' → logprob: -11.000455856323242
    9. '	           ' → logprob: -12.875455856323242
    10. ' prices' → logprob: -13.000455856323242

Token 421: ' val' (ID: 1459)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.39684054255485535
    2. 'price' → logprob: -1.1468405723571777
    3. ' p' → logprob: -5.646840572357178
    4. 'value' → logprob: -6.521840572357178
    5. 'p' → logprob: -6.646840572357178
    6. ' value' → logprob: -6.771840572357178
    7. '               ' → logprob: -7.021840572357178
    8. ' val' → logprob: -7.271840572357178
    9. 'val' (adapté à ' val') → logprob: -8.64684009552002
    10. '	price' → logprob: -8.77184009552002

Token 422: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933138370513916
    2. ' =' → logprob: -0.6933138370513916
    3. ':' → logprob: -9.193313598632812
    4. '=int' → logprob: -10.443313598632812
    5. ' ' → logprob: -11.318313598632812
    6. '=
' → logprob: -11.693313598632812
    7. ':
' → logprob: -12.568313598632812
    8. '               ' → logprob: -12.693313598632812
    9. ' =
' → logprob: -13.318313598632812
    10. '<|end|>' → logprob: -13.818313598632812

Token 423: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002613358374219388
    2. ' int' → logprob: -8.250261306762695
    3. '(int' → logprob: -21.125261306762695
    4. '	int' → logprob: -21.500261306762695
    5. '=int' → logprob: -21.625261306762695
    6. '   ' → logprob: -21.625261306762695
    7. '[int' → logprob: -22.000261306762695
    8. '<int' → logprob: -22.250261306762695
    9. ':int' → logprob: -23.625261306762695
    10. 'intval' → logprob: -24.375261306762695

Token 424: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.0001612267515156418
    2. '(' → logprob: -8.750161170959473
    3. 'raw' → logprob: -13.250161170959473
    4. ' raw' → logprob: -14.625161170959473
    5. '(
' → logprob: -15.000161170959473
    6. '
' → logprob: -16.37516212463379
    7. '	raw' → logprob: -16.62516212463379
    8. ' (' → logprob: -18.87516212463379
    9. '/raw' → logprob: -19.25016212463379
    10. '(

' → logprob: -19.25016212463379

Token 425: '.strip' (ID: 40613)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25220751762390137
    2. ')' → logprob: -1.5022075176239014
    3. '               ' → logprob: -9.12720775604248
    4. '           ' → logprob: -9.75220775604248
    5. ' )
' → logprob: -9.75220775604248
    6. ')
' → logprob: -10.25220775604248
    7. ')`
' → logprob: -12.62720775604248
    8. '       ' → logprob: -12.75220775604248
    9. '.strip' → logprob: -12.75220775604248
    10. ' )' → logprob: -12.75220775604248

Token 426: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.20285670459270477
    2. '())' → logprob: -2.2028567790985107
    3. ')
' → logprob: -3.2028567790985107
    4. ')' → logprob: -3.4528567790985107
    5. '()' → logprob: -7.202856540679932
    6. '()
' → logprob: -9.95285701751709
    7. '())
' → logprob: -11.32785701751709
    8. ' )
' → logprob: -12.45285701751709
    9. '())

' → logprob: -13.07785701751709
    10. '(' → logprob: -13.32785701751709

Token 427: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09492123872041702
    2. '               ' → logprob: -2.594921350479126
    3. 'except' → logprob: -4.719921112060547
    4. ' except' → logprob: -4.969921112060547
    5. '	       ' → logprob: -11.219921112060547
    6. '	except' → logprob: -11.469921112060547
    7. '                
' → logprob: -12.219921112060547
    8. '       ' → logprob: -12.719921112060547
    9. '<|end|>' → logprob: -12.719921112060547
    10. '	           ' → logprob: -12.844921112060547

Token 428: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3154013752937317
    2. 'except' (adapté à ' except') → logprob: -1.565401315689087
    3. ' except' → logprob: -2.815401315689087
    4. '               ' → logprob: -6.440401554107666
    5. '	except' → logprob: -11.065401077270508
    6. '       ' → logprob: -12.190401077270508
    7. ',' → logprob: -14.190401077270508
    8. '	       ' → logprob: -14.565401077270508
    9. '_except' → logprob: -14.815401077270508
    10. 'Except' → logprob: -15.065401077270508

Token 429: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00869209598749876
    2. ' Value' → logprob: -4.758692264556885
    3. '(Value' → logprob: -10.258691787719727
    4. '	Value' → logprob: -10.383691787719727
    5. '_value' → logprob: -12.383691787719727
    6. '<Value' → logprob: -12.758691787719727
    7. '_Value' → logprob: -13.258691787719727
    8. '
' → logprob: -14.008691787719727
    9. '<|end|>' → logprob: -14.258691787719727
    10. '.Value' → logprob: -14.383691787719727

Token 430: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00029625516617670655
    2. 'rror' → logprob: -8.125296592712402
    3. 'Value' → logprob: -17.500295639038086
    4. 'error' → logprob: -17.750295639038086
    5. 'SError' → logprob: -17.875295639038086
    6. '    
' → logprob: -18.000295639038086
    7. '   ' → logprob: -18.125295639038086
    8. 'LError' → logprob: -18.500295639038086
    9. '	Error' → logprob: -18.500295639038086
    10. '    ' → logprob: -19.000295639038086

Token 431: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49351269006729126
    2. ':
' → logprob: -0.9935126900672913
    3. '               ' → logprob: -3.9935126304626465
    4. '           ' → logprob: -7.4935126304626465
    5. '):
' → logprob: -9.243513107299805
    6. ',' → logprob: -10.243513107299805
    7. ' as' → logprob: -10.243513107299805
    8. '       ' → logprob: -11.243513107299805
    9. ')' → logprob: -11.243513107299805
    10. '<|end|>' → logprob: -11.368513107299805

Token 432: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001989778596907854
    2. '           ' → logprob: -6.751989841461182
    3. 'val' → logprob: -7.626989841461182
    4. 'raise' → logprob: -8.876989364624023
    5. 'continue' → logprob: -9.501989364624023
    6. ' raise' → logprob: -10.126989364624023
    7. 'return' → logprob: -10.876989364624023
    8. 'print' → logprob: -11.126989364624023
    9. ' val' → logprob: -11.376989364624023
    10. ' continue' → logprob: -11.626989364624023

Token 433: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.42625242471694946
    2. 'val' → logprob: -1.1762523651123047
    3. 'continue' → logprob: -4.176252365112305
    4. '               ' → logprob: -4.301252365112305
    5. 'print' → logprob: -5.051252365112305
    6. ' raise' → logprob: -5.801252365112305
    7. '                   ' → logprob: -9.176252365112305
    8. '           ' → logprob: -9.301252365112305
    9. 'return' → logprob: -10.051252365112305
    10. ' val' → logprob: -10.801252365112305

Token 434: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.006715370807796717
    2. ' Value' → logprob: -5.006715297698975
    3. 'Runtime' → logprob: -18.131715774536133
    4. '	Value' → logprob: -19.381715774536133
    5. 'Input' → logprob: -19.506715774536133
    6. '(Value' → logprob: -19.756715774536133
    7. '
' → logprob: -20.256715774536133
    8. '_value' → logprob: -20.256715774536133
    9. 'value' → logprob: -20.256715774536133
    10. '<Value' → logprob: -20.506715774536133

Token 435: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.8444881536415778e-05
    2. 'rror' → logprob: -10.500028610229492
    3. 'Value' → logprob: -14.000028610229492
    4. 'alue' → logprob: -18.625028610229492
    5. 'SError' → logprob: -19.875028610229492
    6. 'Input' → logprob: -20.750028610229492
    7. 'LError' → logprob: -20.750028610229492
    8. '   ' → logprob: -21.125028610229492
    9. ' Error' → logprob: -21.125028610229492
    10. 'Format' → logprob: -21.375028610229492

Token 436: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -6.456358823925257e-05
    2. '(f' → logprob: -9.750064849853516
    3. '(' → logprob: -12.125064849853516
    4. '('' → logprob: -14.625064849853516
    5. '(
' → logprob: -16.250064849853516
    6. '("'' → logprob: -16.500064849853516
    7. '           ' → logprob: -17.125064849853516
    8. '               ' → logprob: -17.125064849853516
    9. 'f' → logprob: -18.500064849853516
    10. '   ' → logprob: -19.125064849853516

Token 437: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0003664404503069818
    2. 'f' → logprob: -8.2503662109375
    3. ''' → logprob: -10.6253662109375
    4. ' f' → logprob: -10.6253662109375
    5. 'Invalid' → logprob: -10.8753662109375
    6. '("' → logprob: -11.0003662109375
    7. '(f' → logprob: -11.6253662109375
    8. ' "' → logprob: -12.0003662109375
    9. '"In' → logprob: -13.8753662109375
    10. 'invalid' → logprob: -13.8753662109375

Token 438: 'Invalid' (ID: 12278)
  Prédit: 'Invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.4289581775665283
    2. '"' → logprob: -1.0539581775665283
    3. ''' → logprob: -9.17895793914795
    4. 'Input' → logprob: -9.42895793914795
    5. 'f' → logprob: -10.80395793914795
    6. 'Price' → logprob: -10.92895793914795
    7. '"{' → logprob: -11.30395793914795
    8. 'invalid' → logprob: -12.30395793914795
    9. 'Prices' → logprob: -12.55395793914795
    10. '`' → logprob: -13.17895793914795

Token 439: ' integer' (ID: 16336)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03721131011843681
    2. 'input' → logprob: -3.4122114181518555
    3. ' price' → logprob: -5.7872114181518555
    4. ' integer' → logprob: -8.287211418151855
    5. 'price' → logprob: -8.662211418151855
    6. 'integer' → logprob: -10.287211418151855
    7. ' value' → logprob: -11.662211418151855
    8. '入力' → logprob: -11.662211418151855
    9. 'Input' → logprob: -12.287211418151855
    10. 'value' → logprob: -12.412211418151855

Token 440: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.37217608094215393
    2. 'input' → logprob: -1.7471760511398315
    3. ' value' → logprob: -2.622176170349121
    4. 'value' → logprob: -3.622176170349121
    5. ' price' → logprob: -3.622176170349121
    6. 'price' → logprob: -4.872176170349121
    7. ':' → logprob: -5.997176170349121
    8. ' for' → logprob: -9.497176170349121
    9. '(input' → logprob: -10.372176170349121
    10. 'for' → logprob: -10.497176170349121

Token 441: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.123899558791891e-05
    2. '")
' → logprob: -10.37507152557373
    3. ' for' → logprob: -10.87507152557373
    4. '")' → logprob: -11.62507152557373
    5. '{' → logprob: -12.50007152557373
    6. 'for' → logprob: -13.12507152557373
    7. '           ' → logprob: -13.25007152557373
    8. ' provided' → logprob: -13.62507152557373
    9. '                   ' → logprob: -14.75007152557373
    10. 'value' → logprob: -15.00007152557373

Token 442: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.17425347864627838
    2. ' {' → logprob: -2.049253463745117
    3. ' raw' → logprob: -3.799253463745117
    4. 'raw' → logprob: -4.799253463745117
    5. ''{' → logprob: -8.174253463745117
    6. ' '{' → logprob: -8.674253463745117
    7. '"{' → logprob: -12.924253463745117
    8. '(raw' → logprob: -13.174253463745117
    9. '{return' → logprob: -14.299253463745117
    10. '	raw' → logprob: -14.549253463745117

Token 443: 'raw' (ID: 1618)
  Prédit: 'raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.038048144429922104
    2. '{' → logprob: -3.288048028945923
    3. ' raw' → logprob: -12.163047790527344
    4. '	raw' → logprob: -13.788047790527344
    5. '(raw' → logprob: -15.163047790527344
    6. ' {' → logprob: -16.538047790527344
    7. '.raw' → logprob: -17.163047790527344
    8. '/raw' → logprob: -17.538047790527344
    9. 'repr' → logprob: -17.663047790527344
    10. '{
' → logprob: -17.663047790527344

Token 444: '}")
' (ID: 23577)
  Prédit: '}")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")
' → logprob: -0.38789916038513184
    2. '}")' → logprob: -1.1378991603851318
    3. ' }' → logprob: -7.637899398803711
    4. '")' → logprob: -7.762899398803711
    5. '.strip' → logprob: -9.762899398803711
    6. '")
' → logprob: -10.637899398803711
    7. '}")
' → logprob: -11.262899398803711
    8. '       ' → logprob: -11.512899398803711
    9. '}' → logprob: -11.762899398803711
    10. '}")

' → logprob: -13.387899398803711

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.88418151892256e-05
    2. '       ' → logprob: -11.375059127807617
    3. '          ' → logprob: -11.375059127807617
    4. '            
' → logprob: -11.375059127807617
    5. '<|end|>' → logprob: -12.125059127807617
    6. 'else' → logprob: -12.375059127807617
    7. '               ' → logprob: -12.500059127807617
    8. '
' → logprob: -12.875059127807617
    9. ' else' → logprob: -13.000059127807617
    10. '		' → logprob: -13.875059127807617

Token 446: ' prices' (ID: 8451)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08078627288341522
    2. 'if' → logprob: -2.5807862281799316
    3. 'prices' (adapté à ' prices') → logprob: -6.830786228179932
    4. ' if' → logprob: -7.205786228179932
    5. ' prices' → logprob: -9.83078670501709
    6. '       ' → logprob: -11.83078670501709
    7. '   ' → logprob: -12.20578670501709
    8. '            
' → logprob: -12.70578670501709
    9. '               ' → logprob: -13.95578670501709
    10. 'price' → logprob: -14.08078670501709

Token 447: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.6550729419104755e-05
    2. '.' → logprob: -10.250036239624023
    3. 'append' → logprob: -14.625036239624023
    4. '.app' → logprob: -15.000036239624023
    5. '.ap' → logprob: -15.125036239624023
    6. '.Append' → logprob: -16.500036239624023
    7. '.extend' → logprob: -17.250036239624023
    8. '.add' → logprob: -18.000036239624023
    9. '.push' → logprob: -18.500036239624023
    10. '_append' → logprob: -18.750036239624023

Token 448: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.04859713837504387
    2. 'val' → logprob: -3.0485970973968506
    3. ' val' → logprob: -11.54859733581543
    4. '[val' → logprob: -17.17359733581543
    5. '	val' → logprob: -17.29859733581543
    6. '(' → logprob: -17.42359733581543
    7. ',val' → logprob: -17.54859733581543
    8. '(
' → logprob: -19.29859733581543
    9. '_val' → logprob: -20.04859733581543
    10. 'Val' → logprob: -20.67359733581543

Token 449: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016667762771248817
    2. ')
' → logprob: -4.76666784286499
    3. '       ' → logprob: -4.89166784286499
    4. ')return' → logprob: -7.76666784286499
    5. '<|end|>' → logprob: -9.891667366027832
    6. 'return' → logprob: -10.516667366027832
    7. ')
' → logprob: -13.391667366027832
    8. ' return' → logprob: -13.391667366027832
    9. ' )' → logprob: -13.641667366027832
    10. '<|end|>' → logprob: -13.766667366027832

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007606726721860468
    2. 'return' → logprob: -7.250760555267334
    3. ' return' → logprob: -10.500761032104492
    4. '   ' → logprob: -11.000761032104492
    5. '	' → logprob: -13.500761032104492
    6. '           ' → logprob: -13.500761032104492
    7. '
' → logprob: -13.625761032104492
    8. '	return' → logprob: -14.000761032104492
    9. '<|end|>' → logprob: -14.000761032104492
    10. '      ' → logprob: -15.125761032104492

Token 451: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10187174379825592
    2. 'return' (adapté à ' return') → logprob: -2.3518717288970947
    3. ' return' → logprob: -6.726871967315674
    4. '   ' → logprob: -7.851871967315674
    5. '	return' → logprob: -9.726871490478516
    6. '	' → logprob: -11.726871490478516
    7. ' ' → logprob: -13.101871490478516
    8. '<|end|>' → logprob: -13.226871490478516
    9. '           ' → logprob: -13.351871490478516
    10. '
' → logprob: -14.101871490478516

Token 452: ' prices' (ID: 8451)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' → logprob: -0.0011703446507453918
    2. ' prices' → logprob: -6.7511701583862305
    3. 'pr' → logprob: -16.251171112060547
    4. 'price' → logprob: -17.001171112060547
    5. 'Prices' → logprob: -20.126171112060547
    6. '_prices' → logprob: -20.376171112060547
    7. '   ' → logprob: -20.501171112060547
    8. 'pricing' → logprob: -20.626171112060547
    9. 'values' → logprob: -20.751171112060547
    10. 'priced' → logprob: -21.001171112060547

Token 453: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37867534160614014
    2. 'if' → logprob: -1.6286753416061401
    3. 'class' → logprob: -2.1286754608154297
    4. '```' → logprob: -10.37867546081543
    5. 'from' → logprob: -11.25367546081543
    6. ' if' → logprob: -13.50367546081543
    7. '#' → logprob: -13.62867546081543
    8. ' def' → logprob: -14.62867546081543
    9. 'import' → logprob: -14.75367546081543
    10. ' class' → logprob: -15.00367546081543

Token 455: ' Lunch' (ID: 73557)
  Prédit: 'Main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Main' → logprob: -0.6960198283195496
    2. 'Solution' → logprob: -1.1960198879241943
    3. ' Solution' → logprob: -2.9460198879241943
    4. 'Menu' → logprob: -3.0710198879241943
    5. ' Main' → logprob: -3.1960198879241943
    6. 'Price' → logprob: -4.696019649505615
    7. 'Program' → logprob: -4.821019649505615
    8. 'Solver' → logprob: -4.946019649505615
    9. ' Menu' → logprob: -5.071019649505615
    10. 'Order' → logprob: -5.446019649505615

Token 456: 'Set' (ID: 1984)
  Prédit: 'Menu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Menu' → logprob: -0.00870368629693985
    2. ':' → logprob: -5.633703708648682
    3. 'Manager' → logprob: -6.383703708648682
    4. 'Set' → logprob: -6.758703708648682
    5. 'Planner' → logprob: -7.508703708648682
    6. 'Builder' → logprob: -8.008703231811523
    7. '():' → logprob: -8.133703231811523
    8. '(Menu' → logprob: -8.508703231811523
    9. 'Chooser' → logprob: -9.008703231811523
    10. 'Selector' → logprob: -9.258703231811523

Token 457: 'Calculator' (ID: 50159)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45480769872665405
    2. 'Menu' → logprob: -1.7048077583312988
    3. ':
' → logprob: -1.9548077583312988
    4. '(Menu' → logprob: -3.704807758331299
    5. 'Planner' → logprob: -5.579807758331299
    6. 'Chooser' → logprob: -5.704807758331299
    7. 'Selector' → logprob: -5.704807758331299
    8. 'Calculator' → logprob: -6.204807758331299
    9. 'Optimizer' → logprob: -6.454807758331299
    10. 'Manager' → logprob: -7.329807758331299

Token 458: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009768838994204998
    2. ':
' → logprob: -4.634768962860107
    3. ':def' → logprob: -12.13476848602295
    4. '   ' → logprob: -13.50976848602295
    5. ':

' → logprob: -13.75976848602295
    6. ' :' → logprob: -14.00976848602295
    7. '):' → logprob: -14.00976848602295
    8. '<|end|>' → logprob: -14.25976848602295
    9. '(' → logprob: -14.63476848602295
    10. '():' → logprob: -14.75976848602295

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010700009443098679
    2. ' def' → logprob: -9.500106811523438
    3. 'def' → logprob: -10.375106811523438
    4. '@' → logprob: -14.125106811523438
    5. '   ' → logprob: -17.500106811523438
    6. ' @' → logprob: -17.500106811523438
    7. '	def' → logprob: -17.625106811523438
    8. '```' → logprob: -17.875106811523438
    9. 'staticmethod' → logprob: -18.750106811523438
    10. '       ' → logprob: -19.375106811523438

Token 460: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.31654059886932373
    2. '@' → logprob: -2.0665407180786133
    3. 'def' (adapté à ' def') → logprob: -2.5665407180786133
    4. '   ' → logprob: -2.8165407180786133
    5. ' @' → logprob: -4.816540718078613
    6. ' ' → logprob: -14.066540718078613
    7. 'DEFAULT' → logprob: -14.066540718078613
    8. '	def' → logprob: -14.191540718078613
    9. 'staticmethod' → logprob: -14.566540718078613
    10. '```' → logprob: -15.316540718078613

Token 461: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0645294189453125
    2. ' __' → logprob: -1.1895294189453125
    3. 'staticmethod' → logprob: -1.4395294189453125
    4. '__' → logprob: -2.3145294189453125
    5. ' def' → logprob: -4.6895294189453125
    6. 'def' → logprob: -5.9395294189453125
    7. ' init' → logprob: -6.4395294189453125
    8. 'classmethod' → logprob: -7.1895294189453125
    9. '_init' → logprob: -7.6895294189453125
    10. 'static' → logprob: -8.939529418945312

Token 462: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -17.125
    3. 'new' → logprob: -17.625
    4. ' init' → logprob: -18.75
    5. '_init' → logprob: -19.0
    6. 'int' → logprob: -19.375
    7. 'call' → logprob: -19.75
    8. '```' → logprob: -19.75
    9. '(init' → logprob: -20.625
    10. 'inite' → logprob: -20.75

Token 463: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0030511466320604086
    2. '__' → logprob: -6.128051280975342
    3. '__(
' → logprob: -7.503051280975342
    4. '(self' → logprob: -8.128050804138184
    5. '_(' → logprob: -11.378050804138184
    6. '__((' → logprob: -13.253050804138184
    7. '(' → logprob: -13.253050804138184
    8. ' (' → logprob: -14.003050804138184
    9. '_' → logprob: -14.253050804138184
    10. 'self' → logprob: -14.503050804138184

Token 464: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.845798710244708e-05
    2. ' self' → logprob: -10.500038146972656
    3. '       ' → logprob: -12.750038146972656
    4. ')' → logprob: -13.125038146972656
    5. '
' → logprob: -13.250038146972656
    6. '(self' → logprob: -13.500038146972656
    7. '   ' → logprob: -13.750038146972656
    8. ',' → logprob: -13.750038146972656
    9. ',self' → logprob: -15.000038146972656
    10. '):
' → logprob: -15.750038146972656

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041148843592964113
    2. 'self' → logprob: -8.375411033630371
    3. ' ,' → logprob: -8.750411033630371
    4. ',self' → logprob: -11.625411033630371
    5. ',p' → logprob: -12.000411033630371
    6. ',
' → logprob: -13.000411033630371
    7. ')' → logprob: -13.000411033630371
    8. '__,' → logprob: -13.750411033630371
    9. ' self' → logprob: -15.125411033630371
    10. '   ' → logprob: -15.375411033630371

Token 466: ' pasta' (ID: 33847)
  Prédit: 'menu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'menu' → logprob: -0.9163456559181213
    2. 'past' → logprob: -0.9163456559181213
    3. ' menu' → logprob: -2.1663455963134766
    4. ' past' → logprob: -3.0413455963134766
    5. 'p' → logprob: -3.5413455963134766
    6. '):
' → logprob: -5.791345596313477
    7. ')' → logprob: -6.166345596313477
    8. ' pasta' → logprob: -7.041345596313477
    9. 'pas' → logprob: -7.916345596313477
    10. '):' → logprob: -7.916345596313477

Token 467: '_prices' (ID: 172132)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11524767428636551
    2. '_prices' → logprob: -2.2402477264404297
    3. '_list' → logprob: -6.36524772644043
    4. 'prices' → logprob: -7.74024772644043
    5. ':' → logprob: -8.49024772644043
    6. 'Prices' → logprob: -11.36524772644043
    7. '_pr' → logprob: -11.36524772644043
    8. '_price' → logprob: -12.11524772644043
    9. '_s' → logprob: -12.24024772644043
    10. '_items' → logprob: -12.49024772644043

Token 468: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018203090876340866
    2. ',' → logprob: -4.018203258514404
    3. ' :' → logprob: -10.393202781677246
    4. ' ,' → logprob: -11.893202781677246
    5. ':list' → logprob: -12.643202781677246
    6. '   ' → logprob: -12.893202781677246
    7. ',List' → logprob: -13.143202781677246
    8. '_:' → logprob: -13.268202781677246
    9. '=' → logprob: -13.518202781677246
    10. '):' → logprob: -13.643202781677246

Token 469: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.006732303183525801
    2. ' List' → logprob: -5.00673246383667
    3. 'list' → logprob: -11.381731986999512
    4. ',List' → logprob: -13.131731986999512
    5. '[List' → logprob: -13.381731986999512
    6. '   ' → logprob: -14.756731986999512
    7. 'Input' → logprob: -14.756731986999512
    8. '(List' → logprob: -15.131731986999512
    9. ',' → logprob: -15.381731986999512
    10. '	List' → logprob: -15.506731986999512

Token 470: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.961759259458631e-06
    2. 'int' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.8750057220459
    4. '[Int' → logprob: -18.5000057220459
    5. '[' → logprob: -18.7500057220459
    6. '[in' → logprob: -19.8750057220459
    7. ' [' → logprob: -20.0000057220459
    8. '```' → logprob: -20.1250057220459
    9. '<int' → logprob: -20.3750057220459
    10. '[P' → logprob: -20.7500057220459

Token 471: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006468802224844694
    2. '],' → logprob: -5.131468772888184
    3. ' ,' → logprob: -8.131468772888184
    4. '),' → logprob: -8.506468772888184
    5. '},' → logprob: -10.756468772888184
    6. '>,' → logprob: -11.006468772888184
    7. '   ' → logprob: -12.756468772888184
    8. '‌,' → logprob: -14.131468772888184
    9. ' ' → logprob: -14.381468772888184
    10. ',
' → logprob: -15.131468772888184

Token 472: ' juice' (ID: 29915)
  Prédit: 'juice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'juice' → logprob: -0.002251603174954653
    2. ' juice' → logprob: -6.127251625061035
    3. 'ju' → logprob: -9.627251625061035
    4. 'Ju' → logprob: -15.127251625061035
    5. '   ' → logprob: -15.877251625061035
    6. '
' → logprob: -16.87725067138672
    7. 'jo' → logprob: -17.00225067138672
    8. 'jug' → logprob: -17.37725067138672
    9. '```' → logprob: -17.62725067138672
    10. '       ' → logprob: -17.62725067138672

Token 473: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: -3.786196975852363e-05
    2. '_' → logprob: -10.750038146972656
    3. ' _' → logprob: -12.250038146972656
    4. 's' → logprob: -12.875038146972656
    5. '
' → logprob: -12.875038146972656
    6. 'prices' → logprob: -13.875038146972656
    7. '_scores' → logprob: -14.125038146972656
    8. '_pr' → logprob: -14.125038146972656
    9. '```' → logprob: -14.250038146972656
    10. ')_' → logprob: -14.750038146972656

Token 474: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.73446003627032e-05
    2. '   ' → logprob: -9.625097274780273
    3. ',' → logprob: -11.750097274780273
    4. ')' → logprob: -12.250097274780273
    5. ' :' → logprob: -12.250097274780273
    6. '       ' → logprob: -12.375097274780273
    7. '):' → logprob: -12.875097274780273
    8. '```' → logprob: -13.250097274780273
    9. '[List' → logprob: -13.500097274780273
    10. '):
' → logprob: -13.500097274780273

Token 475: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.02324652671813965
    2. ' List' → logprob: -3.7732465267181396
    3. '[List' → logprob: -14.148246765136719
    4. 'int' → logprob: -15.773246765136719
    5. '       ' → logprob: -16.77324676513672
    6. ')' → logprob: -17.14824676513672
    7. '   ' → logprob: -17.27324676513672
    8. '	List' → logprob: -17.64824676513672
    9. ' ' → logprob: -18.14824676513672
    10. 'list' → logprob: -19.14824676513672

Token 476: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.465036105713807e-06
    2. 'int' → logprob: -11.875007629394531
    3. '<int' → logprob: -15.125007629394531
    4. '=int' → logprob: -16.62500762939453
    5. '   ' → logprob: -17.75000762939453
    6. '[Int' → logprob: -18.00000762939453
    7. '```' → logprob: -18.25000762939453
    8. ']int' → logprob: -18.25000762939453
    9. ':int' → logprob: -18.37500762939453
    10. '[' → logprob: -18.62500762939453

Token 477: '],' (ID: 2155)
  Prédit: ']):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.185090571641922
    2. ']):' → logprob: -2.0600905418395996
    3. '])' → logprob: -3.9350905418395996
    4. ']' → logprob: -4.5600905418396
    5. '):
' → logprob: -5.0600905418396
    6. '):' → logprob: -5.6850905418396
    7. ')' → logprob: -7.4350905418396
    8. '   ' → logprob: -7.9350905418396
    9. '],' → logprob: -8.310091018676758
    10. ' ' → logprob: -8.310091018676758

Token 478: ' discount' (ID: 11522)
  Prédit: 'discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.38696664571762085
    2. ' discount' → logprob: -1.1369667053222656
    3. '   ' → logprob: -10.511966705322266
    4. '):
' → logprob: -10.761966705322266
    5. ')' → logprob: -11.136966705322266
    6. 'dis' → logprob: -11.636966705322266
    7. '       ' → logprob: -12.511966705322266
    8. '):' → logprob: -12.886966705322266
    9. 'default' → logprob: -13.011966705322266
    10. 'price' → logprob: -13.136966705322266

Token 479: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16141106188297272
    2. '=' → logprob: -1.9114110469818115
    3. ':int' → logprob: -6.786411285400391
    4. '):' → logprob: -10.66141128540039
    5. ' :' → logprob: -11.53641128540039
    6. ' =' → logprob: -11.78641128540039
    7. '50' → logprob: -11.91141128540039
    8. ')' → logprob: -12.41141128540039
    9. '):
' → logprob: -13.16141128540039
    10. 'int' → logprob: -13.53641128540039

Token 480: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2321176379919052
    2. '50' → logprob: -1.6071176528930664
    3. ' int' → logprob: -5.107117652893066
    4. ' ' → logprob: -7.482117652893066
    5. '[int' → logprob: -10.607117652893066
    6. '   ' → logprob: -11.107117652893066
    7. ')' → logprob: -11.607117652893066
    8. '(int' → logprob: -12.607117652893066
    9. '=int' → logprob: -12.732117652893066
    10. '<int' → logprob: -12.732117652893066

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012633290607482195
    2. ' =' → logprob: -6.75126314163208
    3. '):' → logprob: -9.376263618469238
    4. '):
' → logprob: -11.751263618469238
    5. ':' → logprob: -15.751263618469238
    6. ')' → logprob: -15.876263618469238
    7. '   ' → logprob: -16.376262664794922
    8. ' ' → logprob: -16.376262664794922
    9. ' ):' → logprob: -17.126262664794922
    10. '50' → logprob: -18.251262664794922

Token 482: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.0013295256067067385
    2. ' ' → logprob: -6.62632942199707
    3. '   ' → logprob: -13.00132942199707
    4. ')' → logprob: -14.87632942199707
    5. '
' → logprob: -14.87632942199707
    6. '５０' → logprob: -15.75132942199707
    7. '```' → logprob: -16.75132942199707
    8. '  ' → logprob: -16.75132942199707
    9. '100' → logprob: -16.93882942199707
    10. '5' → logprob: -17.00132942199707

Token 483: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '
' → logprob: -17.375003814697266
    4. '5' → logprob: -17.375003814697266
    5. '   ' → logprob: -17.375003814697266
    6. '５０' → logprob: -17.750003814697266
    7. '0' → logprob: -19.250003814697266
    8. '  ' → logprob: -19.375003814697266
    9. '100' → logprob: -19.500003814697266
    10. ')' → logprob: -19.500003814697266

Token 484: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3871074914932251
    2. '):
' → logprob: -1.137107491493225
    3. '):
' → logprob: -9.012107849121094
    4. ')' → logprob: -9.262107849121094
    5. '   ' → logprob: -11.012107849121094
    6. ' ):' → logprob: -14.137107849121094
    7. ' ):
' → logprob: -14.387107849121094
    8. ' ' → logprob: -14.637107849121094
    9. '):

' → logprob: -14.762107849121094
    10. '       ' → logprob: -15.137107849121094

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001581993536092341
    2. '   ' → logprob: -6.501582145690918
    3. 'self' → logprob: -10.626582145690918
    4. ' self' → logprob: -11.501582145690918
    5. ',' → logprob: -11.626582145690918
    6. 'def' → logprob: -11.751582145690918
    7. ')' → logprob: -11.876582145690918
    8. ':' → logprob: -12.376582145690918
    9. '        
' → logprob: -12.626582145690918
    10. '<|end|>' → logprob: -12.751582145690918

Token 486: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.013507121242582798
    2. '       ' → logprob: -4.513506889343262
    3. ' self' → logprob: -6.013506889343262
    4. 'try' → logprob: -12.138506889343262
    5. '   ' → logprob: -12.263506889343262
    6. '```' → logprob: -15.138506889343262
    7. 'def' → logprob: -15.638506889343262
    8. '	self' → logprob: -16.263507843017578
    9. '
' → logprob: -16.888507843017578
    10. 'p' → logprob: -17.013507843017578

Token 487: '.menu' (ID: 27584)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.002858843421563506
    2. '.' → logprob: -7.002858638763428
    3. 'past' → logprob: -7.252858638763428
    4. 'p' → logprob: -7.502858638763428
    5. ' .' → logprob: -7.877858638763428
    6. ' =' → logprob: -9.627859115600586
    7. '   ' → logprob: -9.877859115600586
    8. '_p' → logprob: -9.877859115600586
    9. '=' → logprob: -9.877859115600586
    10. 'def' → logprob: -11.502859115600586

Token 488: ' =' (ID: 314)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.0205039978027344
    2. ' =' → logprob: -1.5205039978027344
    3. '       ' → logprob: -1.7705039978027344
    4. '   ' → logprob: -2.3955039978027344
    5. '=' → logprob: -2.7705039978027344
    6. '_items' → logprob: -2.8955039978027344
    7. '.p' → logprob: -4.395503997802734
    8. 's' → logprob: -4.895503997802734
    9. '_prices' → logprob: -5.270503997802734
    10. 'p' → logprob: -6.270503997802734

Token 489: ' Menu' (ID: 16352)
  Prédit: 'Menu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Menu' → logprob: -0.061967913061380386
    2. ' Menu' → logprob: -2.8119678497314453
    3. '	Menu' → logprob: -15.311967849731445
    4. '<Menu' → logprob: -18.561967849731445
    5. '(Menu' → logprob: -18.686967849731445
    6. 'Men' → logprob: -18.811967849731445
    7. '   ' → logprob: -19.186967849731445
    8. ' ' → logprob: -19.561967849731445
    9. '.Menu' → logprob: -19.936967849731445
    10. 'menu' → logprob: -20.186967849731445

Token 490: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0402710884809494
    2. '(
' → logprob: -3.290271043777466
    3. '[' → logprob: -6.665271282196045
    4. '[P' → logprob: -7.540271282196045
    5. '[p' → logprob: -8.290270805358887
    6. '(' → logprob: -10.040270805358887
    7. '[
' → logprob: -10.290270805358887
    8. '(p' → logprob: -10.290270805358887
    9. '([
' → logprob: -10.665270805358887
    10. '       ' → logprob: -11.790270805358887

Token 491: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: 0.0
    2. '	P' → logprob: -18.75
    3. ' Pasta' → logprob: -19.375
    4. '   ' → logprob: -19.75
    5. '(P' → logprob: -20.625
    6. '_P' → logprob: -22.5
    7. 'Paste' → logprob: -22.625
    8. 'Past' → logprob: -22.75
    9. ':P' → logprob: -23.25
    10. '[P' → logprob: -23.25

Token 492: 'asta' (ID: 6307)
  Prédit: 'asta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asta' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -16.875
    3. 'аста' → logprob: -16.875
    4. 'P' → logprob: -17.0
    5. 'sta' → logprob: -19.75
    6. 'ast' → logprob: -20.0
    7. 'osta' → logprob: -20.5
    8. 'aste' → logprob: -20.5
    9. '<' → logprob: -20.75
    10. 'astas' → logprob: -20.75

Token 493: '(p' (ID: 2407)
  Prédit: '(price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(price' → logprob: -0.03804757073521614
    2. '(p' → logprob: -3.2880475521087646
    3. 'price' → logprob: -12.913047790527344
    4. '(' → logprob: -13.038047790527344
    5. '(pp' → logprob: -13.788047790527344
    6. 'p' → logprob: -15.413047790527344
    7. '(x' → logprob: -16.663047790527344
    8. '](' → logprob: -16.788047790527344
    9. '(px' → logprob: -16.913047790527344
    10. '(pid' → logprob: -17.038047790527344

Token 494: ')' (ID: 8)
  Prédit: 'rice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rice' → logprob: -0.13357284665107727
    2. 'price' → logprob: -2.383572816848755
    3. 'p' → logprob: -3.633572816848755
    4. ')' → logprob: -5.258573055267334
    5. 'ice' → logprob: -7.383573055267334
    6. '   ' → logprob: -8.758572578430176
    7. ')p' → logprob: -9.383572578430176
    8. ' price' → logprob: -9.883572578430176
    9. '(price' → logprob: -10.133572578430176
    10. ' p' → logprob: -10.633572578430176

Token 495: ' for' (ID: 395)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.3249281346797943
    2. ')' → logprob: -1.3249281644821167
    3. '),' → logprob: -4.824928283691406
    4. ' for' → logprob: -6.074928283691406
    5. 'for' → logprob: -7.574928283691406
    6. '(price' → logprob: -7.574928283691406
    7. '(' → logprob: -9.074928283691406
    8. 'price' → logprob: -10.199928283691406
    9. ' )' → logprob: -10.699928283691406
    10. ']' → logprob: -11.324928283691406

Token 496: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06846317648887634
    2. ' p' → logprob: -2.943463087081909
    3. ' pasta' → logprob: -4.318463325500488
    4. '	p' → logprob: -8.818463325500488
    5. '_p' → logprob: -11.193463325500488
    6. '(p' → logprob: -13.318463325500488
    7. ' pâ' → logprob: -13.318463325500488
    8. 'P' → logprob: -13.818463325500488
    9. ' paste' → logprob: -14.568463325500488
    10. '   ' → logprob: -14.693463325500488

Token 497: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07341066747903824
    2. 'in' → logprob: -2.698410749435425
    3. 'p' → logprob: -5.698410511016846
    4. ' p' → logprob: -9.073410987854004
    5. '_p' → logprob: -14.573410987854004
    6. ']' → logprob: -15.323410987854004
    7. ' ' → logprob: -15.698410987854004
    8. 'range' → logprob: -15.698410987854004
    9. ',p' → logprob: -15.823410987854004
    10. 'import' → logprob: -15.948410987854004

Token 498: ' pasta' (ID: 33847)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011751054553315043
    2. ' pasta' → logprob: -6.7511749267578125
    3. 'paste' → logprob: -12.501174926757812
    4. 'past' → logprob: -13.876174926757812
    5. 'pizza' → logprob: -17.126174926757812
    6. ' paste' → logprob: -17.251174926757812
    7. 'pas' → logprob: -17.251174926757812
    8. '	p' → logprob: -17.751174926757812
    9. '_p' → logprob: -17.876174926757812
    10. 'pa' → logprob: -18.126174926757812

Token 499: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: -1.1517960956552997e-05
    2. '_p' → logprob: -12.125011444091797
    3. 'prices' → logprob: -12.750011444091797
    4. 'p' → logprob: -13.750011444091797
    5. '_scores' → logprob: -14.500011444091797
    6. 's' → logprob: -14.500011444091797
    7. '_' → logprob: -14.750011444091797
    8. ']' → logprob: -15.750011444091797
    9. ')' → logprob: -16.250011444091797
    10. ' _' → logprob: -16.250011444091797

Token 500: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0003397535183466971
    2. ' ],' → logprob: -8.25033950805664
    3. '],[' → logprob: -9.75033950805664
    4. '],
' → logprob: -11.50033950805664
    5. ',' → logprob: -12.00033950805664
    6. '       ' → logprob: -13.37533950805664
    7. ']' → logprob: -13.75033950805664
    8. '   ' → logprob: -13.87533950805664
    9. '        ' → logprob: -16.37533950805664
    10. '    ' → logprob: -16.50033950805664

Token 501: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009005343541502953
    2. ' [' → logprob: -4.759005546569824
    3. '[J' → logprob: -7.884005546569824
    4. '       ' → logprob: -12.009005546569824
    5. '   ' → logprob: -12.759005546569824
    6. '           ' → logprob: -13.509005546569824
    7. 'Ju' → logprob: -13.634005546569824
    8. '[j' → logprob: -14.384005546569824
    9. ' Juice' → logprob: -15.009005546569824
    10. '               ' → logprob: -15.134005546569824

Token 502: 'Ju' (ID: 66412)
  Prédit: 'Ju'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ju' → logprob: -3.054500666621607e-06
    2. ' Juice' → logprob: -12.75000286102295
    3. '
' → logprob: -15.87500286102295
    4. '   ' → logprob: -17.000003814697266
    5. 'juice' → logprob: -18.375003814697266
    6. 'JU' → logprob: -18.875003814697266
    7. 'J' → logprob: -19.125003814697266
    8. '       ' → logprob: -19.125003814697266
    9. '```' → logprob: -19.375003814697266
    10. ' juice' → logprob: -20.250003814697266

Token 503: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -1.2233183042553719e-05
    2. 'i' → logprob: -12.625012397766113
    3. 'ices' → logprob: -13.000012397766113
    4. 'ic' → logprob: -13.750012397766113
    5. 'ce' → logprob: -14.000012397766113
    6. '
' → logprob: -14.000012397766113
    7. 'Ice' → logprob: -14.125012397766113
    8. 'icer' → logprob: -14.625012397766113
    9. '```' → logprob: -14.750012397766113
    10. 'icy' → logprob: -14.875012397766113

Token 504: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0007141007808968425
    2. '(p' → logprob: -7.250714302062988
    3. '(q' → logprob: -12.750714302062988
    4. '(' → logprob: -13.750714302062988
    5. ' (' → logprob: -16.750713348388672
    6. '(v' → logprob: -17.625713348388672
    7. '(J' → logprob: -17.875713348388672
    8. '[j' → logprob: -18.125713348388672
    9. '(k' → logprob: -18.250713348388672
    10. '(i' → logprob: -18.500713348388672

Token 505: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22719120979309082
    2. ' for' → logprob: -2.227191209793091
    3. ')' → logprob: -2.352191209793091
    4. 'u' → logprob: -9.602190971374512
    5. 'j' → logprob: -9.852190971374512
    6. '   ' → logprob: -9.977190971374512
    7. 'or' → logprob: -10.602190971374512
    8. '),' → logprob: -11.602190971374512
    9. 'juice' → logprob: -12.102190971374512
    10. ']' → logprob: -12.227190971374512

Token 506: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759515166282654
    2. ' for' → logprob: -0.8259515166282654
    3. ')' → logprob: -11.82595157623291
    4. '[j' → logprob: -12.82595157623291
    5. ' in' → logprob: -14.95095157623291
    6. '        ' → logprob: -15.32595157623291
    7. '       ' → logprob: -15.45095157623291
    8. ']' → logprob: -15.45095157623291
    9. '   ' → logprob: -15.70095157623291
    10. '[' → logprob: -15.70095157623291

Token 507: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03147917613387108
    2. ' j' → logprob: -3.5314791202545166
    3. 'juice' → logprob: -6.656479358673096
    4. ' juice' → logprob: -8.031478881835938
    5. 'ju' → logprob: -9.656478881835938
    6. '	j' → logprob: -10.156478881835938
    7. '   ' → logprob: -12.406478881835938
    8. ' ' → logprob: -13.031478881835938
    9. '_j' → logprob: -13.531478881835938
    10. ' ju' → logprob: -13.906478881835938

Token 508: ' in' (ID: 306)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.198928952217102
    2. ' in' → logprob: -1.198928952217102
    3. 'juice' → logprob: -1.448928952217102
    4. 'in' → logprob: -2.3239288330078125
    5. ' juice' → logprob: -3.0739288330078125
    6. ' j' → logprob: -4.3239288330078125
    7. 'ju' → logprob: -6.1989288330078125
    8. 'u' → logprob: -6.5739288330078125
    9. 'ice' → logprob: -8.573928833007812
    10. ' ' → logprob: -8.573928833007812

Token 509: ' juice' (ID: 29915)
  Prédit: 'juice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'juice' → logprob: -0.01262112520635128
    2. ' juice' → logprob: -4.38762092590332
    3. 'ju' → logprob: -9.13762092590332
    4. 'j' → logprob: -13.38762092590332
    5. '```' → logprob: -14.26262092590332
    6. '   ' → logprob: -14.63762092590332
    7. 'jug' → logprob: -15.26262092590332
    8. '
' → logprob: -15.51262092590332
    9. 'joy' → logprob: -15.51262092590332
    10. 'jo' → logprob: -16.13762092590332

Token 510: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: -0.03648434206843376
    2. 'ices' → logprob: -4.036484241485596
    3. 'u' → logprob: -4.786484241485596
    4. 'ice' → logprob: -5.036484241485596
    5. 'ce' → logprob: -6.786484241485596
    6. 'ces' → logprob: -7.036484241485596
    7. 'prices' → logprob: -7.161484241485596
    8. 'rices' → logprob: -9.036484718322754
    9. 'e' → logprob: -9.911484718322754
    10. 'x' → logprob: -10.161484718322754

Token 511: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -5.157039049663581e-05
    2. ' ],' → logprob: -10.375051498413086
    3. ',' → logprob: -11.750051498413086
    4. ']' → logprob: -11.875051498413086
    5. '])' → logprob: -13.000051498413086
    6. '       ' → logprob: -13.125051498413086
    7. '),' → logprob: -13.875051498413086
    8. '   ' → logprob: -16.375051498413086
    9. '],
' → logprob: -16.750051498413086
    10. '           ' → logprob: -17.250051498413086

Token 512: ' discount' (ID: 11522)
  Prédit: ' discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' discount' → logprob: -0.07892085611820221
    2. 'discount' → logprob: -2.578920841217041
    3. ' self' → logprob: -10.7039213180542
    4. 'self' → logprob: -11.9539213180542
    5. '_discount' → logprob: -14.5789213180542
    6. '           ' → logprob: -14.8289213180542
    7. 'dis' → logprob: -15.8289213180542
    8. '                        ' → logprob: -15.8289213180542
    9. '               ' → logprob: -16.203920364379883
    10. '            ' → logprob: -16.203920364379883

Token 513: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -16.0
    4. '       ' → logprob: -16.5
    5. '   ' → logprob: -16.75
    6. '<|end|>' → logprob: -17.5
    7. '))' → logprob: -18.625
    8. '}' → logprob: -19.125
    9. ')}' → logprob: -19.75
    10. ' ' → logprob: -20.25

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007753437850624323
    2. 'def' → logprob: -4.882753372192383
    3. ' def' → logprob: -9.632753372192383
    4. '<|end|>' → logprob: -9.757753372192383
    5. '
' → logprob: -10.882753372192383
    6. '<|end|>' → logprob: -13.382753372192383
    7. '```' → logprob: -13.632753372192383
    8. '    
' → logprob: -13.757753372192383
    9. '	def' → logprob: -14.382753372192383
    10. ')' → logprob: -15.507753372192383

Token 515: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010044389637187123
    2. ' def' → logprob: -9.250100135803223
    3. '   ' → logprob: -12.375100135803223
    4. '	def' → logprob: -16.50010108947754
    5. '
' → logprob: -18.87510108947754
    6. '<|end|>' → logprob: -19.37510108947754
    7. ' ' → logprob: -20.37510108947754
    8. '<|end|>' → logprob: -20.62510108947754
    9. '```' → logprob: -21.37510108947754
    10. '    
' → logprob: -21.62510108947754

Token 516: ' calculate' (ID: 17950)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.28973710536956787
    2. 'find' → logprob: -2.1647372245788574
    3. ' get' → logprob: -2.5397372245788574
    4. 'get' → logprob: -3.5397372245788574
    5. 'calculate' → logprob: -4.039737224578857
    6. ' calculate' → logprob: -4.664737224578857
    7. ' compute' → logprob: -7.039737224578857
    8. 'compute' → logprob: -7.539737224578857
    9. 'def' → logprob: -9.0397367477417
    10. 'min' → logprob: -9.2897367477417

Token 517: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.02846907079219818
    2. '()' → logprob: -4.153469085693359
    3. '_total' → logprob: -5.153469085693359
    4. '_price' → logprob: -5.278469085693359
    5. '_' → logprob: -7.653469085693359
    6. '_max' → logprob: -7.903469085693359
    7. '_best' → logprob: -8.77846908569336
    8. '_final' → logprob: -9.02846908569336
    9. '(self' → logprob: -9.27846908569336
    10. '_low' → logprob: -9.52846908569336

Token 518: '_set' (ID: 5451)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.00023929782037157565
    2. '_' → logprob: -8.500239372253418
    3. '_menu' → logprob: -10.625239372253418
    4. '_set' → logprob: -12.375239372253418
    5. ' _' → logprob: -12.750239372253418
    6. '_cost' → logprob: -14.000239372253418
    7. '_prices' → logprob: -14.250239372253418
    8. '_total' → logprob: -14.375239372253418
    9. '_score' → logprob: -15.125239372253418
    10. '_value' → logprob: -15.500239372253418

Token 519: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0033162652980536222
    2. 'price' → logprob: -5.753316402435303
    3. '_menu' → logprob: -9.003315925598145
    4. 'menu' → logprob: -11.503315925598145
    5. '_' → logprob: -12.503315925598145
    6. ' price' → logprob: -13.628315925598145
    7. 'Price' → logprob: -15.628315925598145
    8. '_prices' → logprob: -16.12831687927246
    9. '   ' → logprob: -16.37831687927246
    10. '__' → logprob: -17.12831687927246

Token 520: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016277639952022582
    2. '(' → logprob: -9.375163078308105
    3. '()' → logprob: -9.500163078308105
    4. ' (' → logprob: -13.125163078308105
    5. 'self' → logprob: -14.750163078308105
    6. '(s' → logprob: -15.375163078308105
    7. '(sel' → logprob: -15.750163078308105
    8. '():' → logprob: -16.62516212463379
    9. '(se' → logprob: -16.75016212463379
    10. '()(' → logprob: -17.00016212463379

Token 521: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024512779782526195
    2. '):' → logprob: -8.500245094299316
    3. '):
' → logprob: -10.375245094299316
    4. ' )' → logprob: -12.500245094299316
    5. ')->' → logprob: -13.250245094299316
    6. 'self' → logprob: -13.625245094299316
    7. '())' → logprob: -13.875245094299316
    8. '()' → logprob: -13.875245094299316
    9. '   ' → logprob: -14.250245094299316
    10. '):
' → logprob: -14.250245094299316

Token 522: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017256340943276882
    2. ' ->' → logprob: -7.001725673675537
    3. '(' → logprob: -7.626725673675537
    4. '->' → logprob: -8.251725196838379
    5. ')' → logprob: -10.251725196838379
    6. '()->' → logprob: -11.876725196838379
    7. '()' → logprob: -11.876725196838379
    8. '   ' → logprob: -12.251725196838379
    9. '       ' → logprob: -12.501725196838379
    10. 'self' → logprob: -12.626725196838379

Token 523: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00268373335711658
    2. 'self' → logprob: -6.002683639526367
    3. ' int' → logprob: -8.502683639526367
    4. ' self' → logprob: -12.252683639526367
    5. '   ' → logprob: -15.502683639526367
    6. '(int' → logprob: -16.127683639526367
    7. '<int' → logprob: -18.627683639526367
    8. '[int' → logprob: -18.627683639526367
    9. '```' → logprob: -19.002683639526367
    10. '(self' → logprob: -19.002683639526367

Token 524: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.37685850262641907
    2. ':' → logprob: -1.7518584728240967
    3. '(' → logprob: -2.8768584728240967
    4. '       ' → logprob: -3.2518584728240967
    5. ':
' → logprob: -3.3768584728240967
    6. '(
' → logprob: -4.876858711242676
    7. '():' → logprob: -6.501858711242676
    8. '   ' → logprob: -6.876858711242676
    9. '():
' → logprob: -7.251858711242676
    10. 'self' → logprob: -8.126858711242676

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004944138927385211
    2. 'return' → logprob: -8.000494003295898
    3. ' return' → logprob: -8.750494003295898
    4. '   ' → logprob: -15.500494003295898
    5. '```' → logprob: -15.875494003295898
    6. '	return' → logprob: -16.1254940032959
    7. '{return' → logprob: -18.0004940032959
    8. '           ' → logprob: -18.5004940032959
    9. '	' → logprob: -18.6254940032959
    10. '
' → logprob: -18.7504940032959

Token 526: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02513067051768303
    2. '       ' → logprob: -3.7751307487487793
    3. ' return' → logprob: -6.275130748748779
    4. '	return' → logprob: -14.275130271911621
    5. '   ' → logprob: -16.400131225585938
    6. '```' → logprob: -17.775131225585938
    7. '{return' → logprob: -18.650131225585938
    8. '	' → logprob: -18.900131225585938
    9. '
' → logprob: -18.900131225585938
    10. 'result' → logprob: -19.650131225585938

Token 527: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3868711292743683
    2. ' self' → logprob: -1.136871099472046
    3. '       ' → logprob: -17.511871337890625
    4. '   ' → logprob: -18.511871337890625
    5. '	self' → logprob: -19.261871337890625
    6. '(self' → logprob: -19.636871337890625
    7. '[self' → logprob: -21.636871337890625
    8. ' ' → logprob: -22.886871337890625
    9. '=self' → logprob: -22.886871337890625
    10. ' ' → logprob: -23.011871337890625

Token 528: '.menu' (ID: 27584)
  Prédit: '.menu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.menu' → logprob: -4.320199877838604e-07
    2. 'menu' → logprob: -15.125
    3. '.' → logprob: -16.25
    4. ' .' → logprob: -19.0
    5. '	menu' → logprob: -19.5
    6. '.m' → logprob: -19.75
    7. ' menu' → logprob: -20.0
    8. '.Menu' → logprob: -20.625
    9. '.message' → logprob: -21.625
    10. '(menu' → logprob: -21.75

Token 529: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.125000953674316
    3. 'find' → logprob: -15.000000953674316
    4. ' .' → logprob: -15.750000953674316
    5. '.findall' → logprob: -17.875001907348633
    6. '.get' → logprob: -19.125001907348633
    7. '.Find' → logprob: -20.875001907348633
    8. '.calculate' → logprob: -21.000001907348633
    9. '   ' → logprob: -21.125001907348633
    10. ' find' → logprob: -22.125001907348633

Token 530: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9361264946837764e-07
    2. '_max' → logprob: -15.75
    3. '_m' → logprob: -19.5
    4. 'min' → logprob: -20.125
    5. '_' → logprob: -20.75
    6. ' _' → logprob: -21.0
    7. '__' → logprob: -21.375
    8. '```' → logprob: -22.125
    9. '\' → logprob: -22.5
    10. '_
' → logprob: -22.625

Token 531: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.125
    3. '_pr' → logprob: -16.625
    4. 'price' → logprob: -18.25
    5. ' _' → logprob: -19.375
    6. '__' → logprob: -19.5
    7. '\' → logprob: -19.5
    8. '_value' → logprob: -19.625
    9. '_com' → logprob: -19.625
    10. '_prices' → logprob: -19.625

Token 532: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1041145626222715e-05
    2. '()
' → logprob: -11.625011444091797
    3. '()`' → logprob: -14.625011444091797
    4. '()

' → logprob: -14.875011444091797
    5. ' ()' → logprob: -15.125011444091797
    6. '()<' → logprob: -15.625011444091797
    7. '()"' → logprob: -15.750011444091797
    8. '()]' → logprob: -15.875011444091797
    9. '()+' → logprob: -16.000011444091797
    10. '()?' → logprob: -16.250011444091797

Token 533: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005332182161509991
    2. 'def' → logprob: -5.255331993103027
    3. '```' → logprob: -9.630331993103027
    4. ' if' → logprob: -10.755331993103027
    5. '#' → logprob: -11.880331993103027
    6. 'import' → logprob: -13.130331993103027
    7. '<|end|>' → logprob: -13.130331993103027
    8. 'from' → logprob: -16.005332946777344
    9. '
' → logprob: -16.130332946777344
    10. 'If' → logprob: -16.505332946777344

Token 534: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0004957250785082579
    2. 'main' → logprob: -7.625495910644531
    3. ' run' → logprob: -12.625495910644531
    4. '_main' → logprob: -13.000495910644531
    5. ' solve' → logprob: -14.750495910644531
    6. ' _' → logprob: -14.875495910644531
    7. '
' → logprob: -15.125495910644531
    8. '	main' → logprob: -15.250495910644531
    9. ' def' → logprob: -15.375495910644531
    10. '_' → logprob: -15.750495910644531

Token 535: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.6776029699249193e-05
    2. '():
' → logprob: -11.12502670288086
    3. ' ():' → logprob: -11.75002670288086
    4. '()' → logprob: -12.50002670288086
    5. '()>' → logprob: -16.12502670288086
    6. '():
' → logprob: -16.37502670288086
    7. '(' → logprob: -16.75002670288086
    8. '().' → logprob: -18.12502670288086
    9. '_' → logprob: -18.50002670288086
    10. '()">' → logprob: -18.87502670288086

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018613664724398404
    2. 'p' → logprob: -8.6251859664917
    3. '   ' → logprob: -12.3751859664917
    4. ' pasta' → logprob: -13.7501859664917
    5. '	p' → logprob: -15.0001859664917
    6. 'import' → logprob: -15.0001859664917
    7. '       ' → logprob: -15.6251859664917
    8. 'past' → logprob: -16.625186920166016
    9. '```' → logprob: -16.625186920166016
    10. 'paste' → logprob: -16.875186920166016

Token 537: ' pasta' (ID: 33847)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10060840845108032
    2. ' pasta' → logprob: -2.9756083488464355
    3. '   ' → logprob: -3.2256083488464355
    4. 'past' → logprob: -5.9756083488464355
    5. 'try' → logprob: -6.2256083488464355
    6. ' try' → logprob: -8.350608825683594
    7. 'paste' → logprob: -9.225608825683594
    8. ' p' → logprob: -9.975608825683594
    9. ' past' → logprob: -10.350608825683594
    10. '#' → logprob: -11.600608825683594

Token 538: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.375000953674316
    3. 'prices' → logprob: -17.125
    4. '_p' → logprob: -17.125
    5. '_price' → logprob: -17.625
    6. '_sizes' → logprob: -17.875
    7. '
' → logprob: -18.0
    8. '_
' → logprob: -18.5
    9. '_scores' → logprob: -18.625
    10. '_numbers' → logprob: -18.75

Token 539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234832875430584
    2. '=' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.130234718322754
    4. ' =
' → logprob: -16.38023567199707
    5. ' =[' → logprob: -16.38023567199707
    6. ' ' → logprob: -16.63023567199707
    7. ':' → logprob: -17.75523567199707
    8. ' ' → logprob: -18.00523567199707
    9. '＝' → logprob: -18.13023567199707
    10. '=[]' → logprob: -18.75523567199707

Token 540: ' Input' (ID: 10090)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6079988479614258
    2. 'Input' → logprob: -0.8579988479614258
    3. ' [' → logprob: -4.107998847961426
    4. ' Input' → logprob: -4.357998847961426
    5. '[input' → logprob: -6.857998847961426
    6. '[]' → logprob: -7.732998847961426
    7. '[]
' → logprob: -8.107998847961426
    8. '[List' → logprob: -9.357998847961426
    9. '[int' → logprob: -9.482998847961426
    10. '[Index' → logprob: -9.607998847961426

Token 541: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -1.2664456789934775e-06
    2. '().' → logprob: -13.875000953674316
    3. '.Reader' → logprob: -16.750001907348633
    4. '.read' → logprob: -16.875001907348633
    5. '.' → logprob: -16.875001907348633
    6. 'reader' → logprob: -17.250001907348633
    7. '_reader' → logprob: -17.625001907348633
    8. '.reader' → logprob: -19.250001907348633
    9. ' Reader' → logprob: -19.500001907348633
    10. ' reader' → logprob: -21.250001907348633

Token 542: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -4.320199877838604e-07
    2. ' .' → logprob: -15.25
    3. '.' → logprob: -16.125
    4. '.readline' → logprob: -17.25
    5. 'read' → logprob: -18.5
    6. '.readlines' → logprob: -19.875
    7. '.Read' → logprob: -20.125
    8. '   ' → logprob: -21.0
    9. '().' → logprob: -21.125
    10. '_read' → logprob: -21.75

Token 543: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: 0.0
    2. '_price' → logprob: -18.75
    3. 'prices' → logprob: -19.0
    4. '_sizes' → logprob: -19.0
    5. '_scores' → logprob: -19.125
    6. '_' → logprob: -19.375
    7. 'Prices' → logprob: -19.875
    8. '_pr' → logprob: -20.375
    9. '_rates' → logprob: -21.0
    10. '_p' → logprob: -21.25

Token 544: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031777136027812958
    2. '3' → logprob: -5.753177642822266
    3. ' (' → logprob: -17.253177642822266
    4. '(
' → logprob: -20.753177642822266
    5. ' ' → logprob: -21.003177642822266
    6. '```' → logprob: -21.753177642822266
    7. '​' → logprob: -23.378177642822266
    8. '((' → logprob: -23.628177642822266
    9. '﻿' → logprob: -24.003177642822266
    10. '   ' → logprob: -24.253177642822266

Token 545: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. ')' → logprob: -18.375001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '(' → logprob: -20.250001907348633
    6. '```' → logprob: -20.500001907348633
    7. '３' → logprob: -22.125001907348633
    8. '  ' → logprob: -22.625001907348633
    9. '
' → logprob: -22.750001907348633
    10. '۳' → logprob: -22.875001907348633

Token 546: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02978995256125927
    2. ')
' → logprob: -3.529789924621582
    3. '   ' → logprob: -10.154789924621582
    4. ')
' → logprob: -14.279789924621582
    5. ')

' → logprob: -17.6547908782959
    6. ' )' → logprob: -17.6547908782959
    7. ' ' → logprob: -17.7797908782959
    8. '),' → logprob: -17.9047908782959
    9. ')p' → logprob: -18.0297908782959
    10. ').' → logprob: -19.1547908782959

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.6656825866666622e-05
    2. 'juice' → logprob: -10.87502670288086
    3. '```' → logprob: -12.12502670288086
    4. 'ju' → logprob: -13.75002670288086
    5. ' juice' → logprob: -14.00002670288086
    6. '    
' → logprob: -15.87502670288086
    7. '   ' → logprob: -16.25002670288086
    8. '
' → logprob: -17.00002670288086
    9. 'juju' → logprob: -18.50002670288086
    10. 'Ju' → logprob: -18.62502670288086

Token 548: ' juice' (ID: 29915)
  Prédit: 'juice'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'juice' (adapté à ' juice') → logprob: -0.08098077774047852
    2. '   ' → logprob: -2.5809807777404785
    3. 'ju' → logprob: -6.4559807777404785
    4. ' juice' → logprob: -7.5809807777404785
    5. '```' → logprob: -12.58098030090332
    6. 'jug' → logprob: -13.70598030090332
    7. 'jo' → logprob: -14.08098030090332
    8. 'juju' → logprob: -14.20598030090332
    9. 'Ju' → logprob: -14.83098030090332
    10. '    
' → logprob: -15.08098030090332

Token 549: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.25
    3. '_scores' → logprob: -17.0
    4. ' _' → logprob: -17.75
    5. '_price' → logprob: -18.125
    6. '_pr' → logprob: -18.375
    7. 'prices' → logprob: -18.625
    8. '_sizes' → logprob: -18.875
    9. '\' → logprob: -18.875
    10. '_p' → logprob: -19.125

Token 550: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715370807796717
    2. '=' → logprob: -5.006715297698975
    3. ' ' → logprob: -19.131715774536133
    4. '   ' → logprob: -20.131715774536133
    5. ' =
' → logprob: -21.131715774536133
    6. '＝' → logprob: -22.381715774536133
    7. ' ' → logprob: -22.506715774536133
    8. ' =[' → logprob: -23.131715774536133
    9. ':' → logprob: -23.631715774536133
    10. ')' → logprob: -23.756715774536133

Token 551: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.048587486147880554
    2. ' Input' → logprob: -3.0485875606536865
    3. '	Input' → logprob: -16.423587799072266
    4. '   ' → logprob: -17.798587799072266
    5. ' input' → logprob: -18.048587799072266
    6. '_input' → logprob: -18.673587799072266
    7. 'input' → logprob: -18.673587799072266
    8. '(Input' → logprob: -18.798587799072266
    9. '_Input' → logprob: -19.173587799072266
    10. '<Input' → logprob: -19.173587799072266

Token 552: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -3.128163257315464e-07
    2. 'reader' → logprob: -16.0
    3. '_reader' → logprob: -16.25
    4. 'Writer' → logprob: -18.25
    5. '.Reader' → logprob: -18.875
    6. 'Readers' → logprob: -19.375
    7. 'Receiver' → logprob: -19.625
    8. '(' → logprob: -19.75
    9. ' Reader' → logprob: -19.75
    10. '   ' → logprob: -20.125

Token 553: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.500001907348633
    3. 'read' → logprob: -14.250001907348633
    4. ' .' → logprob: -17.875001907348633
    5. '.readline' → logprob: -20.750001907348633
    6. '.write' → logprob: -21.000001907348633
    7. '().' → logprob: -21.375001907348633
    8. '(read' → logprob: -21.500001907348633
    9. ' read' → logprob: -21.625001907348633
    10. '	read' → logprob: -22.000001907348633

Token 554: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: -5.512236498361744e-07
    2. '_scores' → logprob: -15.375000953674316
    3. 'Prices' → logprob: -15.750000953674316
    4. 'prices' → logprob: -16.75
    5. '_rates' → logprob: -16.75
    6. '(' → logprob: -18.25
    7. '_values' → logprob: -18.625
    8. '_' → logprob: -19.375
    9. '_sizes' → logprob: -19.5
    10. '_pr' → logprob: -19.625

Token 555: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002475777640938759
    2. '2' → logprob: -6.002475738525391
    3. ' (' → logprob: -16.62747573852539
    4. '(
' → logprob: -17.50247573852539
    5. ' ' → logprob: -18.25247573852539
    6. '   ' → logprob: -19.75247573852539
    7. '3' → logprob: -21.25247573852539
    8. '```' → logprob: -21.37747573852539
    9. '
' → logprob: -21.62747573852539
    10. '[' → logprob: -22.50247573852539

Token 556: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.125
    4. ')' → logprob: -20.875
    5. '
' → logprob: -21.0
    6. '２' → logprob: -21.375
    7. '(' → logprob: -22.0
    8. '  ' → logprob: -22.0
    9. '```' → logprob: -22.5
    10. '۲' → logprob: -22.875

Token 557: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056014712899923325
    2. '   ' → logprob: -2.9310147762298584
    3. ')
' → logprob: -6.806014537811279
    4. '()' → logprob: -11.306015014648438
    5. '
' → logprob: -11.806015014648438
    6. ' )' → logprob: -13.306015014648438
    7. ' ' → logprob: -14.431015014648438
    8. ')
' → logprob: -14.806015014648438
    9. '    
' → logprob: -14.806015014648438
    10. '())' → logprob: -14.931015014648438

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02736625261604786
    2. 'calculator' → logprob: -3.9023661613464355
    3. ' calculator' → logprob: -5.6523661613464355
    4. 'calc' → logprob: -6.7773661613464355
    5. 'l' → logprob: -7.1523661613464355
    6. '
' → logprob: -7.5273661613464355
    7. 'cal' → logprob: -8.402366638183594
    8. ' lunch' → logprob: -8.652366638183594
    9. ' calc' → logprob: -8.652366638183594
    10. 'lc' → logprob: -9.402366638183594

Token 559: ' calculator' (ID: 44484)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' (adapté à ' calculator') → logprob: -0.09116511791944504
    2. '   ' → logprob: -2.591165065765381
    3. ' calculator' → logprob: -4.841165065765381
    4. 'calc' → logprob: -5.591165065765381
    5. 'l' → logprob: -7.716165065765381
    6. 'cal' → logprob: -9.591165542602539
    7. 'lc' → logprob: -10.591165542602539
    8. ' calc' → logprob: -10.966165542602539
    9. 'lcd' → logprob: -12.966165542602539
    10. '```' → logprob: -13.466165542602539

Token 560: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245712742209435
    2. '=' → logprob: -3.7732458114624023
    3. ' =
' → logprob: -16.648244857788086
    4. ' ' → logprob: -17.148244857788086
    5. '	' → logprob: -17.523244857788086
    6. '＝' → logprob: -17.523244857788086
    7. '=create' → logprob: -17.523244857788086
    8. '<|end|>' → logprob: -17.898244857788086
    9. ' =
' → logprob: -18.148244857788086
    10. ' ' → logprob: -18.773244857788086

Token 561: ' Lunch' (ID: 73557)
  Prédit: 'Lunch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lunch' → logprob: -0.3868727385997772
    2. ' Lunch' → logprob: -1.1368727684020996
    3. ' Lun' → logprob: -14.261872291564941
    4. ' lunch' → logprob: -14.386872291564941
    5. 'L' → logprob: -15.386872291564941
    6. '   ' → logprob: -16.136873245239258
    7. 'Laptop' → logprob: -16.511873245239258
    8. ' ' → logprob: -17.261873245239258
    9. '	L' → logprob: -17.761873245239258
    10. ' ' → logprob: -18.011873245239258

Token 562: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: 0.0
    2. ' Set' → logprob: -17.625
    3. 'set' → logprob: -18.125
    4. 'Calculator' → logprob: -19.875
    5. '_set' → logprob: -19.875
    6. '	Set' → logprob: -20.25
    7. '_Set' → logprob: -21.375
    8. '_SET' → logprob: -22.125
    9. ' set' → logprob: -22.875
    10. '   ' → logprob: -23.5

Token 563: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: 0.0
    2. 'calculator' → logprob: -16.875
    3. 'Calcul' → logprob: -17.625
    4. 'Cal' → logprob: -18.0
    5. ' Calculator' → logprob: -18.0
    6. 'Calc' → logprob: -19.0
    7. 'Calculate' → logprob: -19.25
    8. ' calculator' → logprob: -21.0
    9. 'C' → logprob: -21.375
    10. 'culator' → logprob: -22.0

Token 564: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.002951793372631073
    2. '(' → logprob: -5.877951622009277
    3. '(
' → logprob: -8.877951622009277
    4. ' (' → logprob: -12.252951622009277
    5. '(P' → logprob: -13.127951622009277
    6. '   ' → logprob: -15.252951622009277
    7. '(
' → logprob: -15.752951622009277
    8. '(c' → logprob: -16.377952575683594
    9. '(t' → logprob: -16.752952575683594
    10. '(

' → logprob: -16.752952575683594

Token 565: 'asta' (ID: 6307)
  Prédit: 'asta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asta' → logprob: -1.9981420336989686e-05
    2. 'p' → logprob: -11.125020027160645
    3. '(' → logprob: -13.125020027160645
    4. 'a' → logprob: -14.000020027160645
    5. '```' → logprob: -14.875020027160645
    6. 'sta' → logprob: -15.125020027160645
    7. '[' → logprob: -15.125020027160645
    8. 'ast' → logprob: -15.250020027160645
    9. 'аста' → logprob: -15.875020027160645
    10. '(p' → logprob: -16.000019073486328

Token 566: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: -0.000275040598353371
    2. '(p' → logprob: -9.125274658203125
    3. 'prices' → logprob: -10.000274658203125
    4. '_p' → logprob: -10.000274658203125
    5. ')' → logprob: -10.375274658203125
    6. 'p' → logprob: -11.375274658203125
    7. '_pr' → logprob: -11.875274658203125
    8. '   ' → logprob: -12.125274658203125
    9. ',' → logprob: -12.125274658203125
    10. 'Prices' → logprob: -12.375274658203125

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.659005157416686e-05
    2. ' ,' → logprob: -9.625066757202148
    3. ',
' → logprob: -15.250066757202148
    4. ')' → logprob: -16.50006675720215
    5. '   ' → logprob: -16.62506675720215
    6. '‌,' → logprob: -16.75006675720215
    7. ',

' → logprob: -19.00006675720215
    8. '[],' → logprob: -19.25006675720215
    9. 'juice' → logprob: -19.37506675720215
    10. ',
' → logprob: -19.37506675720215

Token 568: ' juice' (ID: 29915)
  Prédit: 'juice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'juice' → logprob: -0.2257205694913864
    2. ' juice' → logprob: -1.6007205247879028
    3. 'ju' → logprob: -8.100720405578613
    4. ' ju' → logprob: -13.600720405578613
    5. 'Ju' → logprob: -14.350720405578613
    6. '   ' → logprob: -14.850720405578613
    7. ' juices' → logprob: -14.975720405578613
    8. 'jug' → logprob: -15.100720405578613
    9. 'jo' → logprob: -15.100720405578613
    10. '```' → logprob: -15.225720405578613

Token 569: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: -0.00010247035970678553
    2. 'prices' → logprob: -9.875102043151855
    3. ',' → logprob: -11.000102043151855
    4. 's' → logprob: -11.625102043151855
    5. '   ' → logprob: -11.875102043151855
    6. '_' → logprob: -12.250102043151855
    7. ')' → logprob: -13.125102043151855
    8. '_scores' → logprob: -13.875102043151855
    9. 'y' → logprob: -14.000102043151855
    10. '_,' → logprob: -14.000102043151855

Token 570: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06214279308915138
    2. ')
' → logprob: -2.812142848968506
    3. '   ' → logprob: -8.687142372131348
    4. ')
' → logprob: -12.937142372131348
    5. '()' → logprob: -13.437142372131348
    6. '())
' → logprob: -14.812142372131348
    7. ')

' → logprob: -14.937142372131348
    8. '())' → logprob: -15.062142372131348
    9. '```' → logprob: -15.187142372131348
    10. ' ' → logprob: -15.312142372131348

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003319472773000598
    2. 'print' → logprob: -5.753319263458252
    3. 'result' → logprob: -9.00331974029541
    4. ' print' → logprob: -11.25331974029541
    5. 'price' → logprob: -12.87831974029541
    6. ' result' → logprob: -13.25331974029541
    7. '```' → logprob: -14.50331974029541
    8. '
' → logprob: -14.75331974029541
    9. 'min' → logprob: -14.87831974029541
    10. '    
' → logprob: -15.62831974029541

Token 572: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.012117081321775913
    2. 'result' → logprob: -5.0121169090271
    3. 'min' → logprob: -5.2621169090271
    4. ' print' → logprob: -8.762117385864258
    5. '   ' → logprob: -10.137117385864258
    6. ' result' → logprob: -12.637117385864258
    7. ' min' → logprob: -13.887117385864258
    8. 'price' → logprob: -14.012117385864258
    9. 'minimum' → logprob: -14.262117385864258
    10. 'answer' → logprob: -15.262117385864258

Token 573: '(cal' (ID: 92785)
  Prédit: '(cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cal' → logprob: -0.0005893715424463153
    2. '(' → logprob: -7.500589370727539
    3. '(calc' → logprob: -10.250589370727539
    4. '(
' → logprob: -14.625589370727539
    5. '(calendar' → logprob: -14.875589370727539
    6. '(f' → logprob: -15.500589370727539
    7. '()' → logprob: -16.87558937072754
    8. '(car' → logprob: -17.50058937072754
    9. '(

' → logprob: -18.12558937072754
    10. '(call' → logprob: -18.37558937072754

Token 574: 'culator' (ID: 23033)
  Prédit: 'culator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culator' → logprob: -0.0069925421848893166
    2. 'ulator' → logprob: -5.256992340087891
    3. 'culate' → logprob: -6.506992340087891
    4. 'c' → logprob: -9.00699234008789
    5. 'ator' → logprob: -9.13199234008789
    6. 'calculator' → logprob: -11.00699234008789
    7. 'cul' → logprob: -11.63199234008789
    8. 'ulate' → logprob: -12.38199234008789
    9. 'lator' → logprob: -13.88199234008789
    10. 'ate' → logprob: -14.50699234008789

Token 575: '.calculate' (ID: 67851)
  Prédit: '.calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calculate' → logprob: -9.329167369287461e-05
    2. '.' → logprob: -9.375093460083008
    3. ').' → logprob: -12.375093460083008
    4. ' .' → logprob: -12.875093460083008
    5. '.calc' → logprob: -14.625093460083008
    6. '.compute' → logprob: -14.875093460083008
    7. '.cal' → logprob: -15.375093460083008
    8. '.)' → logprob: -15.625093460083008
    9. ')' → logprob: -16.250093460083008
    10. 'calculate' → logprob: -16.625093460083008

Token 576: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: 0.0
    2. '_max' → logprob: -18.375
    3. '_' → logprob: -19.625
    4. 'min' → logprob: -20.125
    5. '_set' → logprob: -21.625
    6. '
' → logprob: -21.625
    7. ' _' → logprob: -21.75
    8. '_
' → logprob: -22.5
    9. '```' → logprob: -22.5
    10. '_MIN' → logprob: -23.5

Token 577: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: 0.0
    2. '_' → logprob: -17.5
    3. '_
' → logprob: -19.5
    4. '__' → logprob: -20.5
    5. '\' → logprob: -21.75
    6. 'set' → logprob: -21.75
    7. '_min' → logprob: -22.375
    8. ' set' → logprob: -22.625
    9. '_price' → logprob: -23.0
    10. '_Set' → logprob: -23.0

Token 578: '_price' (ID: 18814)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: 0.0
    2. '_price' → logprob: -17.5
    3. 'set' → logprob: -18.0
    4. ' set' → logprob: -21.0
    5. '_' → logprob: -21.125
    6. 'et' → logprob: -21.25
    7. 'Set' → logprob: -21.5
    8. '.set' → logprob: -21.75
    9. '_SET' → logprob: -22.375
    10. '__' → logprob: -23.25

Token 579: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00020735491125378758
    2. '()' → logprob: -8.50020694732666
    3. '())
' → logprob: -12.62520694732666
    4. ')' → logprob: -14.50020694732666
    5. ' ())' → logprob: -17.250207901000977
    6. '()
' → logprob: -17.500207901000977
    7. '())
' → logprob: -18.000207901000977
    8. '())

' → logprob: -18.250207901000977
    9. '();)' → logprob: -19.125207901000977
    10. '()}' → logprob: -19.250207901000977

Token 580: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0015644963132217526
    2. '
' → logprob: -6.5015645027160645
    3. ' if' → logprob: -10.251564025878906
    4. '```' → logprob: -11.001564025878906
    5. '<|end|>' → logprob: -11.876564025878906
    6. '\n' → logprob: -13.626564025878906
    7. '  
' → logprob: -14.501564025878906
    8. '\' → logprob: -14.751564025878906
    9. '\
' → logprob: -15.126564025878906
    10. '

' → logprob: -15.501564025878906

Token 581: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0700385794043541
    2. '__' → logprob: -2.6950385570526123
    3. ' ' → logprob: -10.070038795471191
    4. '_name' → logprob: -10.320038795471191
    5. 'name' → logprob: -11.070038795471191
    6. '_' → logprob: -11.945038795471191
    7. ' ' → logprob: -13.695038795471191
    8. '___' → logprob: -14.070038795471191
    9. ' ' → logprob: -14.320038795471191
    10. '```' → logprob: -14.695038795471191

Token 582: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04048725217580795
    2. '==' → logprob: -3.290487289428711
    3. ' ==' → logprob: -6.290487289428711
    4. '=="' → logprob: -8.540487289428711
    5. '__.__' → logprob: -8.540487289428711
    6. '.__' → logprob: -9.665487289428711
    7. '=='' → logprob: -9.790487289428711
    8. '__.' → logprob: -10.665487289428711
    9. ' __' → logprob: -10.665487289428711
    10. 'name' → logprob: -11.290487289428711

Token 583: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.2200749754119897e-06
    2. '__.__' → logprob: -13.375001907348633
    3. '==' → logprob: -14.875001907348633
    4. '__.' → logprob: -15.500001907348633
    5. '__
' → logprob: -17.125001907348633
    6. '___' → logprob: -18.125001907348633
    7. ' ==' → logprob: -18.375001907348633
    8. '____' → logprob: -18.500001907348633
    9. '__('' → logprob: -19.125001907348633
    10. '__["' → logprob: -19.250001907348633

Token 584: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.22732703387737274
    2. '==' → logprob: -1.6023269891738892
    3. ' ==' → logprob: -6.7273268699646
    4. '=="' → logprob: -7.3523268699646
    5. '=='' → logprob: -9.852327346801758
    6. '=' → logprob: -11.727327346801758
    7. '__.__' → logprob: -12.227327346801758
    8. '==
' → logprob: -12.727327346801758
    9. '===' → logprob: -14.227327346801758
    10. '__
' → logprob: -14.602327346801758

Token 585: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02331186644732952
    2. ''' → logprob: -3.7733118534088135
    3. ' "__' → logprob: -9.648311614990234
    4. ' '__' → logprob: -13.898311614990234
    5. '__' → logprob: -14.023311614990234
    6. '"user' → logprob: -15.898311614990234
    7. ''"' → logprob: -17.648311614990234
    8. '"name' → logprob: -17.773311614990234
    9. '"class' → logprob: -18.023311614990234
    10. '("__' → logprob: -18.148311614990234

Token 586: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001171056181192398
    2. '__' → logprob: -6.751171112060547
    3. 'name' → logprob: -14.376171112060547
    4. ' main' → logprob: -15.501171112060547
    5. '_main' → logprob: -16.126171112060547
    6. 'built' → logprob: -17.001171112060547
    7. 'ma' → logprob: -18.876171112060547
    8. 'python' → logprob: -19.126171112060547
    9. '__":
' → logprob: -19.376171112060547
    10. '-main' → logprob: -19.626171112060547

Token 587: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.02335565723478794
    2. '__' → logprob: -3.773355722427368
    3. '__':
' → logprob: -9.273355484008789
    4. '__.' → logprob: -11.398355484008789
    5. '__.__' → logprob: -12.648355484008789
    6. '__["' → logprob: -13.648355484008789
    7. '_' → logprob: -15.648355484008789
    8. '__
' → logprob: -16.02335548400879
    9. '.' → logprob: -17.02335548400879
    10. '__:' → logprob: -17.14835548400879

Token 588: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0034176050685346127
    2. ''' → logprob: -5.753417491912842
    3. '   ' → logprob: -8.50341796875
    4. '__' → logprob: -10.37841796875
    5. 'main' → logprob: -12.50341796875
    6. ' "__' → logprob: -13.25341796875
    7. ' ' → logprob: -16.12841796875
    8. ' main' → logprob: -16.62841796875
    9. '("__' → logprob: -16.87841796875
    10. '    
' → logprob: -17.25341796875

Token 589: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.5
    3. '	main' → logprob: -22.25
    4. '   ' → logprob: -25.875
    5. '.main' → logprob: -26.375
    6. '_main' → logprob: -26.625
    7. 'import' → logprob: -27.25
    8. '(main' → logprob: -27.75
    9. '
' → logprob: -29.375
    10. 'mai' → logprob: -30.0

Token 590: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6646072268486023
    2. '<|end|>' → logprob: -0.7896072268486023
    3. '
' → logprob: -3.914607286453247
    4. ')' → logprob: -5.664607048034668
    5. '\n' → logprob: -6.164607048034668
    6. '(' → logprob: -6.164607048034668
    7. '```' → logprob: -6.539607048034668
    8. '()
' → logprob: -7.039607048034668
    9. '<|end|>' → logprob: -7.789607048034668
    10. '#' → logprob: -7.914607048034668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 588
Tokens correctement prédits (1ère position, stricte): 324
Tokens correctement prédits (1ère position, avec adaptation): 353
Tokens correctement prédits (top 10): 553
Précision stricte (1ère position): 55.10%
Précision adaptée (1ère position): 60.03%
Précision (top 10): 94.05%
================================================================================
