================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter
from math import factorial
from functools import lru_cache
from typing import Dict, Tuple

class PalindromicAnagramCounter:
    """
    A highly abstracted class to count the number of palindromic anagrams of a given string.
    This class anticipates future extensions such as multi-lingual support, different palindrome
    definitions, or partial palindrome matching.
    """

    def __init__(self, input_string: str):
        self.original_string = input_string
        self.char_counter = Counter(input_string)
        self.length = len(input_string)
        self.alphabet = tuple(sorted(self.char_counter.keys()))
    
    def _factorial_cache(self):
        # For memoizing factorial calls up to length
        cache = [1] * (self.length + 1)
        for i in range(2, self.length + 1):
            cache[i] = cache[i-1] * i
        return cache
    
    def _count_half_anagrams(self, half_counts: Tuple[int, ...], fact_cache) -> int:
        """
        Compute the number of distinct anagrams given counts of half the palindrome part.
        half_counts is a tuple of counts of each character for half the string.
        """
        total_half = sum(half_counts)
        numerator = fact_cache[total_half]
        denominator = 1
        for count in half_counts:
            denominator *= fact_cache[count]
        return numerator // denominator
    
    def _can_form_palindrome(self) -> Tuple[bool, int]:
        """
        Determine if palindrome formation is possible.
        Return (True, odd_char_index) if possible,
        where odd_char_index = index in alphabet of the character with odd count or -1 if none.
        """
        odd_count = 0
        odd_char_index = -1
        for idx, ch in enumerate(self.alphabet):
            if self.char_counter[ch] % 2 != 0:
                odd_count += 1
                odd_char_index = idx
                if odd_count > 1:
                    return False, -1
        return True, odd_char_index
    
    def count_palindromic_anagrams(self) -> int:
        allowed, odd_char_index = self._can_form_palindrome()
        if not allowed:
            return 0
        
        half_counts = []
        for ch in self.alphabet:
            half_counts.append(self.char_counter[ch] // 2)

        fact_cache = self._factorial_cache()
        
        return self._count_half_anagrams(tuple(half_counts), fact_cache)


def main():
    import sys
    input_string = sys.stdin.readline().strip()
    counter = PalindromicAnagramCounter(input_string)
    print(counter.count_palindromic_anagrams())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.086537480354309
    2. 'deque' → logprob: -1.086537480354309
    3. 'abc' → logprob: -1.836537480354309
    4. 'Counter' → logprob: -2.4615373611450195
    5. ' defaultdict' → logprob: -2.7115373611450195
    6. 'named' → logprob: -5.4615373611450195
    7. ' Counter' → logprob: -5.5865373611450195
    8. ' abc' → logprob: -6.0865373611450195
    9. ' deque' → logprob: -6.4615373611450195
    10. '```' → logprob: -6.8365373611450195

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.8961017202818766e-05
    2. '\(' → logprob: -10.375059127807617
    3. ' (' → logprob: -11.500059127807617
    4. '()' → logprob: -12.625059127807617
    5. '\' → logprob: -12.875059127807617
    6. '(
' → logprob: -12.875059127807617
    7. 'a' → logprob: -12.875059127807617
    8. '\n' → logprob: -14.000059127807617
    9. '```' → logprob: -14.000059127807617
    10. '.' → logprob: -14.250059127807617

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02560567855834961
    2. 'a' → logprob: -5.02560567855835
    3. '\n' → logprob: -5.27560567855835
    4. '\' → logprob: -6.15060567855835
    5. 'import' → logprob: -6.15060567855835
    6. 'newline' → logprob: -6.77560567855835
    7. 'c' → logprob: -6.90060567855835
    8. '.' → logprob: -7.02560567855835
    9. '(
' → logprob: -7.15060567855835
    10. '
' → logprob: -7.40060567855835

Token 6: ' math' (ID: 13324)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.13632704317569733
    2. ' itertools' → logprob: -2.636327028274536
    3. ' os' → logprob: -3.636327028274536
    4. ' math' → logprob: -4.761327266693115
    5. ' re' → logprob: -5.386327266693115
    6. ' ' → logprob: -5.386327266693115
    7. ' sys' → logprob: -6.011327266693115
    8. ' typing' → logprob: -6.386327266693115
    9. ' space' → logprob: -7.011327266693115
    10. ' string' → logprob: -7.011327266693115

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.33181682229042053
    2. '.' → logprob: -1.3318167924880981
    3. 'import' → logprob: -4.081816673278809
    4. ' ' → logprob: -7.081816673278809
    5. '```' → logprob: -9.206816673278809
    6. ' im' → logprob: -9.581816673278809
    7. '.import' → logprob: -9.706816673278809
    8. ' .' → logprob: -9.706816673278809
    9. 's' → logprob: -9.956816673278809
    10. '	import' → logprob: -10.081816673278809

Token 8: ' factorial' (ID: 111204)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.5356947779655457
    2. 'sqrt' → logprob: -1.1606948375701904
    3. 'log' → logprob: -3.5356948375701904
    4. ' ceil' → logprob: -3.7856948375701904
    5. ' inf' → logprob: -4.160694599151611
    6. ' factorial' → logprob: -4.285694599151611
    7. ' log' → logprob: -4.410694599151611
    8. 'ceil' → logprob: -5.910694599151611
    9. '```' → logprob: -6.535694599151611
    10. 'import' → logprob: -7.410694599151611

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04093122109770775
    2. '(
' → logprob: -3.415931224822998
    3. 'def' → logprob: -6.290931224822998
    4. '\n' → logprob: -6.665931224822998
    5. '\' → logprob: -6.790931224822998
    6. '
' → logprob: -7.040931224822998
    7. ',' → logprob: -7.665931224822998
    8. '`' → logprob: -8.04093074798584
    9. '#' → logprob: -8.41593074798584
    10. '(

' → logprob: -8.66593074798584

Token 10: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7912926077842712
    2. '(' → logprob: -1.166292667388916
    3. '

' → logprob: -2.166292667388916
    4. '(
' → logprob: -3.041292667388916
    5. 'def' → logprob: -3.541292667388916
    6. '\n' → logprob: -4.291292667388916
    7. '\' → logprob: -4.666292667388916
    8. '' → logprob: -5.791292667388916
    9. '(

' → logprob: -5.916292667388916
    10. '
' → logprob: -5.916292667388916

Token 11: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.34594976902008057
    2. ' fractions' → logprob: -2.220949649810791
    3. ' sym' → logprob: -2.470949649810791
    4. ' operator' → logprob: -3.345949649810791
    5. ' collections' → logprob: -3.595949649810791
    6. ' math' → logprob: -4.095949649810791
    7. ' functools' → logprob: -4.470949649810791
    8. ' ' → logprob: -5.845949649810791
    9. ' random' → logprob: -5.970949649810791
    10. 'operator' → logprob: -6.970949649810791

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.17519550025463104
    2. 'import' → logprob: -2.0501954555511475
    3. '.' → logprob: -3.6751954555511475
    4. '.import' → logprob: -6.175195693969727
    5. '_import' → logprob: -6.300195693969727
    6. '._' → logprob: -6.800195693969727
    7. ' .' → logprob: -6.925195693969727
    8. '_' → logprob: -8.550195693969727
    9. '	import' → logprob: -8.675195693969727
    10. '```' → logprob: -9.550195693969727

Token 13: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5419232845306396
    2. 'l' → logprob: -1.0419232845306396
    3. 'reduce' → logprob: -3.0419232845306396
    4. ' reduce' → logprob: -4.041923522949219
    5. 'cache' → logprob: -8.791923522949219
    6. ' cache' → logprob: -9.791923522949219
    7. 'partial' → logprob: -10.666923522949219
    8. 'cached' → logprob: -11.041923522949219
    9. 'wrap' → logprob: -11.541923522949219
    10. ' wraps' → logprob: -11.791923522949219

Token 14: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.0802738870552275e-05
    2. 'r' → logprob: -11.75001049041748
    3. 'ruz' → logprob: -13.87501049041748
    4. 'rup' → logprob: -14.75001049041748
    5. 'ruh' → logprob: -14.75001049041748
    6. 'ruff' → logprob: -15.50001049041748
    7. '_ru' → logprob: -15.50001049041748
    8. 'reduce' → logprob: -15.87501049041748
    9. 'RU' → logprob: -16.375011444091797
    10. '```' → logprob: -16.625011444091797

Token 15: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.07176006585359573
    2. 'cache' → logprob: -2.6967601776123047
    3. 'c' → logprob: -6.571760177612305
    4. 't' → logprob: -8.946760177612305
    5. '_c' → logprob: -9.196760177612305
    6. 'cached' → logprob: -9.446760177612305
    7. '_cached' → logprob: -10.446760177612305
    8. '_counter' → logprob: -11.071760177612305
    9. '```' → logprob: -11.321760177612305
    10. 'Cache' → logprob: -12.446760177612305

Token 16: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6452245712280273
    2. '\' → logprob: -1.8952245712280273
    3. '@' → logprob: -2.5202245712280273
    4. '
' → logprob: -2.7702245712280273
    5. '\n' → logprob: -3.0202245712280273
    6. '(' → logprob: -3.2702245712280273
    7. '```' → logprob: -3.3952245712280273
    8. '#' → logprob: -3.6452245712280273
    9. '

' → logprob: -4.895224571228027
    10. 'd' → logprob: -4.895224571228027

Token 17: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6206415295600891
    2. '@' → logprob: -1.8706414699554443
    3. 'def' → logprob: -2.1206414699554443
    4. '

' → logprob: -2.6206414699554443
    5. 'd' → logprob: -3.4956414699554443
    6. '\n' → logprob: -3.6206414699554443
    7. '\' → logprob: -3.6206414699554443
    8. '@
' → logprob: -4.870641708374023
    9. '```' → logprob: -5.495641708374023
    10. '@

' → logprob: -5.620641708374023

Token 18: ' typing' (ID: 34152)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.08223557472229004
    2. ' math' → logprob: -3.45723557472229
    3. ' operator' → logprob: -3.70723557472229
    4. ' typing' → logprob: -4.457235336303711
    5. ' random' → logprob: -5.957235336303711
    6. ' sym' → logprob: -6.207235336303711
    7. ' collections' → logprob: -6.457235336303711
    8. ' ' → logprob: -7.082235336303711
    9. 'operator' → logprob: -7.207235336303711
    10. ' heap' → logprob: -7.207235336303711

Token 19: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.14454996585845947
    2. 'import' → logprob: -2.01954984664917
    3. '.' → logprob: -6.76954984664917
    4. '<|end|>' → logprob: -7.89454984664917
    5. ' ' → logprob: -9.269550323486328
    6. '_import' → logprob: -10.144550323486328
    7. '.import' → logprob: -10.144550323486328
    8. '	import' → logprob: -10.519550323486328
    9. ')' → logprob: -10.644550323486328
    10. '_' → logprob: -10.894550323486328

Token 20: ' Dict' (ID: 55179)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.1850285679101944
    2. 'List' → logprob: -1.8100285530090332
    3. 'Counter' → logprob: -6.810028553009033
    4. ' Generator' → logprob: -7.060028553009033
    5. ' Counter' → logprob: -7.310028553009033
    6. ' Callable' → logprob: -7.810028553009033
    7. ' Optional' → logprob: -7.935028553009033
    8. ' Union' → logprob: -8.185029029846191
    9. ' Tuple' → logprob: -8.310029029846191
    10. 'Any' → logprob: -8.435029029846191

Token 21: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7453513741493225
    2. '\' → logprob: -1.3703513145446777
    3. ',' → logprob: -2.6203513145446777
    4. ':' → logprob: -3.3703513145446777
    5. '```' → logprob: -3.3703513145446777
    6. '
' → logprob: -3.7453513145446777
    7. '\n' → logprob: -4.120351314544678
    8. '

' → logprob: -4.620351314544678
    9. '(' → logprob: -4.620351314544678
    10. '' → logprob: -4.995351314544678

Token 22: ' Tuple' (ID: 50841)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.41289758682250977
    2. 'List' → logprob: -1.1628975868225098
    3. 'Counter' → logprob: -5.16289758682251
    4. 'Set' → logprob: -5.78789758682251
    5. ' Tuple' → logprob: -5.78789758682251
    6. ' Counter' → logprob: -5.78789758682251
    7. 'Tuple' → logprob: -6.03789758682251
    8. ' Set' → logprob: -6.41289758682251
    9. 'Iterable' → logprob: -6.41289758682251
    10. 'Any' → logprob: -7.28789758682251

Token 23: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5133616328239441
    2. '
' → logprob: -1.1383616924285889
    3. 'def' → logprob: -2.888361692428589
    4. '\n' → logprob: -5.13836145401001
    5. '```' → logprob: -5.26336145401001
    6. '\' → logprob: -5.76336145401001
    7. '
' → logprob: -6.13836145401001
    8. ',' → logprob: -6.13836145401001
    9. 'import' → logprob: -6.38836145401001
    10. '


' → logprob: -6.63836145401001

Token 24: 'class' (ID: 1444)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.041272275149822235
    2. 'def' → logprob: -3.5412721633911133
    3. '@
' → logprob: -5.291272163391113
    4. '```' → logprob: -5.916272163391113
    5. 'd' → logprob: -6.416272163391113
    6. '\' → logprob: -6.791272163391113
    7. 'class' → logprob: -8.666272163391113
    8. '`' → logprob: -8.916272163391113
    9. '\n' → logprob: -9.041272163391113
    10. '
' → logprob: -9.166272163391113

Token 25: ' Pal' (ID: 8392)
  Prédit: ' Mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Mult' → logprob: -0.2668761909008026
    2. ' An' → logprob: -2.266876220703125
    3. ' Perm' → logprob: -3.266876220703125
    4. ' Pal' → logprob: -3.391876220703125
    5. ' ' → logprob: -3.641876220703125
    6. ' Factor' → logprob: -4.516876220703125
    7. ' String' → logprob: -4.641876220703125
    8. ' Word' → logprob: -6.266876220703125
    9. ' Counter' → logprob: -6.266876220703125
    10. ' Com' → logprob: -7.141876220703125

Token 26: 'ind' (ID: 521)
  Prédit: 'indrome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0007231564959511161
    2. 'ind' → logprob: -7.250723361968994
    3. 'in' → logprob: -12.250722885131836
    4. '```' → logprob: -12.500722885131836
    5. 'ndrome' → logprob: -12.750722885131836
    6. '``' → logprob: -14.750722885131836
    7. 'Palindrome' → logprob: -15.000722885131836
    8. 'i' → logprob: -15.625722885131836
    9. 'e' → logprob: -15.750722885131836
    10. 'id' → logprob: -16.250722885131836

Token 27: 'rom' (ID: 511)
  Prédit: 'rome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rome' → logprob: -0.0003971839905716479
    2. 'rom' → logprob: -8.125396728515625
    3. 'd' → logprob: -10.250396728515625
    4. 'ndrome' → logprob: -11.250396728515625
    5. '

' → logprob: -11.875396728515625
    6. 'indrome' → logprob: -12.000396728515625
    7. 'Rome' → logprob: -12.000396728515625
    8. '-' → logprob: -12.375396728515625
    9. '_' → logprob: -12.625396728515625
    10. 'r' → logprob: -12.750396728515625

Token 28: 'ic' (ID: 291)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00013119110371917486
    2. 'rome' → logprob: -9.625131607055664
    3. 'es' → logprob: -10.625131607055664
    4. 'um' → logprob: -11.125131607055664
    5. 'ic' → logprob: -11.625131607055664
    6. 'ome' → logprob: -12.250131607055664
    7. 'class' → logprob: -12.375131607055664
    8. 'ogram' → logprob: -13.250131607055664
    9. '```' → logprob: -13.750131607055664
    10. 'rom' → logprob: -14.125131607055664

Token 29: 'An' (ID: 2223)
  Prédit: 'Permutation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Permutation' → logprob: -0.09890589863061905
    2. 'Perm' → logprob: -3.0989058017730713
    3. 'Substring' → logprob: -3.4739058017730713
    4. 'String' → logprob: -4.84890604019165
    5. 'Sub' → logprob: -4.97390604019165
    6. 'Palindrome' → logprob: -6.59890604019165
    7. 'Word' → logprob: -7.84890604019165
    8. 'Sequence' → logprob: -8.348905563354492
    9. 'An' → logprob: -8.473905563354492
    10. 'Strings' → logprob: -8.473905563354492

Token 30: 'agram' (ID: 7632)
  Prédit: 'agram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agram' → logprob: -0.004255881067365408
    2. 'agrams' → logprob: -5.754255771636963
    3. 'a' → logprob: -7.004255771636963
    4. 'al' → logprob: -9.754256248474121
    5. 'alyzer' → logprob: -9.879256248474121
    6. 'agr' → logprob: -10.879256248474121
    7. 'd' → logprob: -11.129256248474121
    8. 'g' → logprob: -12.004256248474121
    9. 'gram' → logprob: -12.629256248474121
    10. 'swer' → logprob: -12.629256248474121

Token 31: 'Counter' (ID: 16263)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01164740789681673
    2. '(' → logprob: -4.5116472244262695
    3. '():' → logprob: -8.38664722442627
    4. '):' → logprob: -9.38664722442627
    5. 'Colon' → logprob: -10.38664722442627
    6. ':
' → logprob: -10.51164722442627
    7. '(:' → logprob: -10.51164722442627
    8. 'Palindrome' → logprob: -10.63664722442627
    9. 'Generator' → logprob: -10.76164722442627
    10. 'Predict' → logprob: -10.88664722442627

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016516048344783485
    2. '(' → logprob: -9.000164985656738
    3. '():' → logprob: -11.000164985656738
    4. ' :' → logprob: -11.750164985656738
    5. '<|end|>' → logprob: -12.375164985656738
    6. ':def' → logprob: -12.500164985656738
    7. ':
' → logprob: -12.625164985656738
    8. '):' → logprob: -13.125164985656738
    9. '```' → logprob: -14.000164985656738
    10. ':**' → logprob: -14.375164985656738

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03468484804034233
    2. '    
' → logprob: -4.284684658050537
    3. '<|end|>' → logprob: -4.909684658050537
    4. ' def' → logprob: -5.159684658050537
    5. '```' → logprob: -5.909684658050537
    6. ' 
' → logprob: -7.159684658050537
    7. '    ' → logprob: -7.409684658050537
    8. '
' → logprob: -7.784684658050537
    9. 'def' → logprob: -7.909684658050537
    10. ':' → logprob: -8.159685134887695

Token 34: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03279630467295647
    2. 'def' → logprob: -3.9077963829040527
    3. '   ' → logprob: -4.907796382904053
    4. ' 
' → logprob: -5.907796382904053
    5. '    
' → logprob: -6.782796382904053
    6. ' ' → logprob: -7.782796382904053
    7. '    ' → logprob: -8.157795906066895
    8. '     
' → logprob: -9.782795906066895
    9. '   
' → logprob: -9.782795906066895
    10. '  
' → logprob: -10.532795906066895

Token 35: '   ' (ID: 271)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -1.1538699865341187
    2. 'def' → logprob: -1.2788699865341187
    3. '   ' → logprob: -1.7788699865341187
    4. '"""
' → logprob: -2.528870105743408
    5. 'Calcul' → logprob: -2.778870105743408
    6. '"""' → logprob: -3.403870105743408
    7. 'd' → logprob: -4.903870105743408
    8. 'class' → logprob: -4.903870105743408
    9. ' def' → logprob: -4.903870105743408
    10. 'Counting' → logprob: -5.778870105743408

Token 36: ' A' (ID: 355)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.3201192617416382
    2. 'Calculate' → logprob: -1.4451192617416382
    3. 'Calcul' → logprob: -2.1951193809509277
    4. 'Count' → logprob: -2.3201193809509277
    5. 'Counts' → logprob: -2.8201193809509277
    6. 'A' (adapté à ' A') → logprob: -2.8201193809509277
    7. 'C' → logprob: -3.4451193809509277
    8. 'Returns' → logprob: -3.6951193809509277
    9. 'Class' → logprob: -3.8201193809509277
    10. '   ' → logprob: -4.320119380950928

Token 37: ' highly' (ID: 8916)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.6207917332649231
    2. 'n' → logprob: -1.4957916736602783
    3. ' n' → logprob: -2.4957916736602783
    4. ' ' → logprob: -2.6207916736602783
    5. ' counter' → logprob: -3.3707916736602783
    6. ' method' → logprob: -4.245791912078857
    7. 'class' → logprob: -5.120791912078857
    8. ' palindrome' → logprob: -5.245791912078857
    9. ' pal' → logprob: -5.370791912078857
    10. ' Pal' → logprob: -5.870791912078857

Token 38: ' abstract' (ID: 13004)
  Prédit: 'efficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'efficient' → logprob: -0.32686731219291687
    2. ' efficient' → logprob: -2.0768673419952393
    3. 'optimized' → logprob: -2.0768673419952393
    4. ' optimized' → logprob: -3.8268673419952393
    5. 'special' → logprob: -6.70186710357666
    6. ' specialized' → logprob: -6.95186710357666
    7. 'optim' → logprob: -7.07686710357666
    8. '   ' → logprob: -7.57686710357666
    9. 'perform' → logprob: -7.70186710357666
    10. ' performant' → logprob: -8.07686710357666

Token 39: 'ed' (ID: 295)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.11921977251768112
    2. ' base' → logprob: -2.7442197799682617
    3. 'ed' → logprob: -3.7442197799682617
    4. 'class' → logprob: -3.8692197799682617
    5. ' concept' → logprob: -6.744219779968262
    6. ' representation' → logprob: -7.369219779968262
    7. ' ' → logprob: -7.994219779968262
    8. ' method' → logprob: -8.244219779968262
    9. ' data' → logprob: -8.494219779968262
    10. ' and' → logprob: -8.869219779968262

Token 40: ' class' (ID: 744)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.576278030872345
    2. ' class' → logprob: -1.3262779712677002
    3. ' method' → logprob: -3.3262779712677
    4. ' description' → logprob: -3.4512779712677
    5. ' explanation' → logprob: -3.5762779712677
    6. ' approach' → logprob: -3.9512779712677
    7. '  ' → logprob: -4.076278209686279
    8. ' token' → logprob: -4.826278209686279
    9. ' solution' → logprob: -5.576278209686279
    10. ' continuation' → logprob: -5.701278209686279

Token 41: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9390777945518494
    2. ' to' → logprob: -1.4390778541564941
    3. ' that' → logprob: -1.6890778541564941
    4. '<|end|>' → logprob: -2.189077854156494
    5. '<|end|>' → logprob: -3.314077854156494
    6. '   ' → logprob: -3.814077854156494
    7. '  ' → logprob: -5.189077854156494
    8. '    ' → logprob: -5.814077854156494
    9. ' ' → logprob: -6.439077854156494
    10. ' designed' → logprob: -6.564077854156494

Token 42: ' count' (ID: 3605)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.6371843814849854
    2. ' count' → logprob: -0.8871843814849854
    3. 'count' → logprob: -3.6371843814849854
    4. ' compute' → logprob: -3.8871843814849854
    5. 'calculate' → logprob: -4.637184143066406
    6. ' enumerate' → logprob: -6.512184143066406
    7. ' counter' → logprob: -8.137184143066406
    8. 'compute' → logprob: -8.762184143066406
    9. ' predict' → logprob: -9.012184143066406
    10. ' generate' → logprob: -9.262184143066406

Token 43: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5344462394714355
    2. ' ' → logprob: -1.5344462394714355
    3. '<|end|>' → logprob: -1.9094462394714355
    4. 'the' → logprob: -3.9094462394714355
    5. '<|end|>' → logprob: -4.0344462394714355
    6. ' pal' → logprob: -5.0344462394714355
    7. ' tokens' → logprob: -6.2844462394714355
    8. '_pal' → logprob: -7.4094462394714355
    9. ' token' → logprob: -7.6594462394714355
    10. ' Pal' → logprob: -7.7844462394714355

Token 44: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.00958030391484499
    2. ' ' → logprob: -5.259580135345459
    3. 'number' → logprob: -6.384580135345459
    4. ' pal' → logprob: -7.259580135345459
    5. ' maximum' → logprob: -7.509580135345459
    6. ' possible' → logprob: -7.884580135345459
    7. ' next' → logprob: -7.884580135345459
    8. ' total' → logprob: -8.259580612182617
    9. 'n' → logprob: -9.259580612182617
    10. ' n' → logprob: -9.509580612182617

Token 45: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2625424861907959
    2. 's' → logprob: -1.887542486190796
    3. 'of' → logprob: -2.887542486190796
    4. ' ' → logprob: -5.012542724609375
    5. '_token' → logprob: -5.637542724609375
    6. '_tokens' → logprob: -5.762542724609375
    7. '<|end|>' → logprob: -6.512542724609375
    8. ')' → logprob: -6.637542724609375
    9. '  ' → logprob: -6.637542724609375
    10. '_of' → logprob: -6.762542724609375

Token 46: ' pal' (ID: 5337)
  Prédit: ' pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pal' → logprob: -0.0044539738446474075
    2. ' possible' → logprob: -6.379454135894775
    3. 'pal' → logprob: -6.879454135894775
    4. ' ' → logprob: -7.254454135894775
    5. ' distinct' → logprob: -8.254453659057617
    6. '_pal' → logprob: -8.379453659057617
    7. ' palindrome' → logprob: -8.504453659057617
    8. ' unique' → logprob: -8.504453659057617
    9. ' valid' → logprob: -9.754453659057617
    10. 'possible' → logprob: -11.379453659057617

Token 47: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.04064144939184189
    2. 'i' → logprob: -3.2906415462493896
    3. 'indrome' → logprob: -7.0406413078308105
    4. '```' → logprob: -7.1656413078308105
    5. 'in' → logprob: -7.5406413078308105
    6. '   ' → logprob: -9.540641784667969
    7. 'a' → logprob: -9.915641784667969
    8. 'í' → logprob: -10.415641784667969
    9. '``' → logprob: -10.665641784667969
    10. ')' → logprob: -10.978141784667969

Token 48: 'rom' (ID: 511)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13835448026657104
    2. 'ind' → logprob: -2.138354539871216
    3. 'i' → logprob: -4.513354301452637
    4. 'rom' → logprob: -8.513354301452637
    5. 'indrome' → logprob: -9.263354301452637
    6. 'd' → logprob: -10.888354301452637
    7. 'e' → logprob: -11.013354301452637
    8. 'in' → logprob: -11.388354301452637
    9. 'a' → logprob: -11.888354301452637
    10. 'ro' → logprob: -12.138354301452637

Token 49: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.008543652482330799
    2. 'rom' → logprob: -4.883543491363525
    3. 'e' → logprob: -7.508543491363525
    4. 'ric' → logprob: -8.508543968200684
    5. 'r' → logprob: -9.508543968200684
    6. 'ro' → logprob: -10.258543968200684
    7. 'es' → logprob: -11.008543968200684
    8. 's' → logprob: -11.758543968200684
    9. 'ronic' → logprob: -11.758543968200684
    10. '#' → logprob: -12.508543968200684

Token 50: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.049264729022979736
    2. ' ' → logprob: -3.049264669418335
    3. '_an' → logprob: -8.549264907836914
    4. 'an' → logprob: -9.049264907836914
    5. '_' → logprob: -9.174264907836914
    6. '	an' → logprob: -9.424264907836914
    7. ' subse' → logprob: -10.424264907836914
    8. ' sub' → logprob: -10.924264907836914
    9. ' sequences' → logprob: -11.049264907836914
    10. ' An' → logprob: -11.299264907836914

Token 51: 'agrams' (ID: 54218)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8447561264038086
    2. 'agrams' → logprob: -1.0947561264038086
    3. 'g' → logprob: -2.4697561264038086
    4. 'n' → logprob: -2.7197561264038086
    5. 's' → logprob: -3.2197561264038086
    6. 'agram' → logprob: -3.4697561264038086
    7. 't' → logprob: -5.844756126403809
    8. ' ' → logprob: -6.344756126403809
    9. ' a' → logprob: -6.719756126403809
    10. 'igrams' → logprob: -7.094756126403809

Token 52: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8937068581581116
    2. ' that' → logprob: -1.3937067985534668
    3. ' possible' → logprob: -1.6437067985534668
    4. '.' → logprob: -3.018706798553467
    5. '"""' → logprob: -3.893706798553467
    6. '   ' → logprob: -4.018706798553467
    7. ' ' → logprob: -4.143706798553467
    8. ' """' → logprob: -4.893706798553467
    9. '  ' → logprob: -5.018706798553467
    10. 's' → logprob: -5.018706798553467

Token 53: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.011121630668640137
    2. 'a' → logprob: -5.26112174987793
    3. ' the' → logprob: -6.26112174987793
    4. ' given' → logprob: -6.38612174987793
    5. ' strings' → logprob: -6.76112174987793
    6. ' an' → logprob: -7.38612174987793
    7. ' input' → logprob: -8.88612174987793
    8. ' text' → logprob: -9.01112174987793
    9. ' words' → logprob: -10.26112174987793
    10. ' string' → logprob: -10.38612174987793

Token 54: ' given' (ID: 4335)
  Prédit: ' given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.007262531667947769
    2. ' string' → logprob: -5.382262706756592
    3. 'given' → logprob: -6.007262706756592
    4. 'string' → logprob: -8.882262229919434
    5. ' word' → logprob: -10.507262229919434
    6. '_given' → logprob: -12.257262229919434
    7. ' ' → logprob: -12.757262229919434
    8. ' text' → logprob: -14.132262229919434
    9. ' space' → logprob: -14.757262229919434
    10. ' Given' → logprob: -14.882262229919434

Token 55: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.08539421111345291
    2. 'string' → logprob: -2.7103941440582275
    3. ' word' → logprob: -4.210394382476807
    4. 'word' → logprob: -8.460393905639648
    5. ' strings' → logprob: -10.085393905639648
    6. ' text' → logprob: -10.210393905639648
    7. 'pal' → logprob: -10.710393905639648
    8. ' input' → logprob: -10.960393905639648
    9. ' token' → logprob: -11.085393905639648
    10. 'str' → logprob: -11.335393905639648

Token 56: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33450666069984436
    2. '   ' → logprob: -1.834506630897522
    3. '"""' → logprob: -2.3345067501068115
    4. '```' → logprob: -4.834506511688232
    5. '\n' → logprob: -5.084506511688232
    6. '"' → logprob: -6.084506511688232
    7. ':' → logprob: -6.209506511688232
    8. '"""
' → logprob: -6.709506511688232
    9. 's' → logprob: -6.709506511688232
    10. ',' → logprob: -6.709506511688232

Token 57: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.17296679317951202
    2. '   ' → logprob: -2.297966718673706
    3. '\n' → logprob: -3.797966718673706
    4. '"""
' → logprob: -3.797966718673706
    5. '"' → logprob: -5.547966957092285
    6. ' """' → logprob: -5.672966957092285
    7. '```' → logprob: -5.672966957092285
    8. ' """
' → logprob: -6.672966957092285
    9. '\' → logprob: -8.422966957092285
    10. '""' → logprob: -8.547966957092285

Token 58: ' This' (ID: 1328)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.013642242178320885
    2. '   ' → logprob: -5.138642311096191
    3. '\n' → logprob: -6.013642311096191
    4. '"""
' → logprob: -6.013642311096191
    5. '```' → logprob: -6.263642311096191
    6. ' """' → logprob: -8.263642311096191
    7. '""' → logprob: -8.888642311096191
    8. '
' → logprob: -9.138642311096191
    9. '"' → logprob: -9.388642311096191
    10. '`' → logprob: -9.763642311096191

Token 59: ' class' (ID: 744)
  Prédit: ' class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.026812713593244553
    2. ' can' → logprob: -4.776812553405762
    3. ' code' → logprob: -4.776812553405762
    4. ' is' → logprob: -5.526812553405762
    5. 'class' → logprob: -6.026812553405762
    6. ' method' → logprob: -7.651812553405762
    7. ' """' → logprob: -7.776812553405762
    8. ' could' → logprob: -8.151812553405762
    9. ' ' → logprob: -8.401812553405762
    10. '  ' → logprob: -9.026812553405762

Token 60: ' anticip' (ID: 20155)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.1646112203598022
    2. ' can' → logprob: -1.4146112203598022
    3. '   ' → logprob: -2.289611339569092
    4. ' :' → logprob: -2.914611339569092
    5. ':' → logprob: -3.289611339569092
    6. ' continues' → logprob: -3.289611339569092
    7. ' is' → logprob: -3.539611339569092
    8. ' def' → logprob: -3.664611339569092
    9. ' provides' → logprob: -3.789611339569092
    10. ' completes' → logprob: -3.914611339569092

Token 61: 'ates' (ID: 1381)
  Prédit: 'ates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.010299931280314922
    2. 'ate' → logprob: -4.760300159454346
    3. 'ated' → logprob: -6.760300159454346
    4. 'e' → logprob: -9.135299682617188
    5. 's' → logprob: -9.135299682617188
    6. 'a' → logprob: -9.385299682617188
    7. 'es' → logprob: -10.010299682617188
    8. 'at' → logprob: -10.635299682617188
    9. '```' → logprob: -11.135299682617188
    10. 'ating' → logprob: -11.135299682617188

Token 62: ' future' (ID: 5277)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4395350217819214
    2. ' that' → logprob: -1.6895350217819214
    3. '    ' → logprob: -2.939535140991211
    4. ' a' → logprob: -3.189535140991211
    5. ' an' → logprob: -3.939535140991211
    6. '   ' → logprob: -4.189535140991211
    7. ' strings' → logprob: -4.439535140991211
    8. ' possible' → logprob: -5.189535140991211
    9. ' ' → logprob: -5.564535140991211
    10. ' input' → logprob: -5.939535140991211

Token 63: ' extensions' (ID: 34511)
  Prédit: ' enhancements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enhancements' → logprob: -0.7449228763580322
    2. ' use' → logprob: -1.7449228763580322
    3. ' expansions' → logprob: -2.2449228763580322
    4. ' improvements' → logprob: -2.8699228763580322
    5. ' extensions' → logprob: -3.1199228763580322
    6. ' uses' → logprob: -3.1199228763580322
    7. ' needs' → logprob: -3.9949228763580322
    8. ' developments' → logprob: -4.244922637939453
    9. ' functionality' → logprob: -4.619922637939453
    10. ' additions' → logprob: -4.744922637939453

Token 64: ' such' (ID: 2238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10503705590963364
    2. '.' → logprob: -3.230036973953247
    3. ' to' → logprob: -3.480036973953247
    4. ' and' → logprob: -4.230037212371826
    5. ',' → logprob: -4.730037212371826
    6. ':' → logprob: -6.480037212371826
    7. ' for' → logprob: -6.980037212371826
    8. ' by' → logprob: -7.355037212371826
    9. 'and' → logprob: -7.730037212371826
    10. '"""' → logprob: -7.980037212371826

Token 65: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.09399864077568054
    2. 'as' → logprob: -2.843998670578003
    3. ' that' → logprob: -4.343998432159424
    4. '<|end|>' → logprob: -4.718998432159424
    5. ')' → logprob: -5.843998432159424
    6. 'that' → logprob: -5.968998432159424
    7. '<|end|>' → logprob: -6.843998432159424
    8. '   ' → logprob: -7.093998432159424
    9. '.' → logprob: -7.093998432159424
    10. ' than' → logprob: -8.093998908996582

Token 66: ' multi' (ID: 12151)
  Prédit: ' handling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' handling' → logprob: -1.0791096687316895
    2. ' adding' → logprob: -1.4541096687316895
    3. ' counting' → logprob: -1.9541096687316895
    4. ' additional' → logprob: -3.2041096687316895
    5. ' dynamic' → logprob: -3.3291096687316895
    6. ' different' → logprob: -3.4541096687316895
    7. ' mult' → logprob: -3.8291096687316895
    8. ' caching' → logprob: -3.9541096687316895
    9. ' calculating' → logprob: -4.3291096687316895
    10. ' multiprocessing' → logprob: -4.4541096687316895

Token 67: '-l' (ID: 2887)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.149457335472107
    2. 'ple' → logprob: -1.524457335472107
    3. '-line' → logprob: -1.524457335472107
    4. 'ling' → logprob: -3.1494574546813965
    5. 'thread' → logprob: -3.5244574546813965
    6. ' line' → logprob: -3.6494574546813965
    7. 'p' → logprob: -3.8994574546813965
    8. 'word' → logprob: -4.5244574546813965
    9. '-thread' → logprob: -4.6494574546813965
    10. 'language' → logprob: -4.7744574546813965

Token 68: 'ing' (ID: 289)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.7150282263755798
    2. 'e' → logprob: -0.8400282263755798
    3. 'anguage' → logprob: -3.0900282859802246
    4. 'ength' → logprob: -4.590028285980225
    5. 'ing' → logprob: -4.715028285980225
    6. 'ines' → logprob: -5.215028285980225
    7. 'ayer' → logprob: -5.965028285980225
    8. 'inear' → logprob: -7.090028285980225
    9. 'in' → logprob: -7.465028285980225
    10. 'line' → logprob: -7.715028285980225

Token 69: 'ual' (ID: 850)
  Prédit: 'ual'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ual' → logprob: -0.003620743053033948
    2. 'u' → logprob: -5.628620624542236
    3. '```' → logprob: -12.378621101379395
    4. 'al' → logprob: -13.003621101379395
    5. 'uis' → logprob: -13.128621101379395
    6. 'ua' → logprob: -13.128621101379395
    7. 'uale' → logprob: -13.628621101379395
    8. '\' → logprob: -13.878621101379395
    9. '1' → logprob: -13.878621101379395
    10. 'ust' → logprob: -14.128621101379395

Token 70: ' support' (ID: 2498)
  Prédit: ' support'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' support' → logprob: -0.007349985186010599
    2. ' strings' → logprob: -5.257349967956543
    3. ' text' → logprob: -7.007349967956543
    4. ' and' → logprob: -8.132349967956543
    5. ' capabilities' → logprob: -8.257349967956543
    6. 'support' → logprob: -8.882349967956543
    7. ' string' → logprob: -9.257349967956543
    8. ' supports' → logprob: -9.257349967956543
    9. 's' → logprob: -10.007349967956543
    10. ' """' → logprob: -10.257349967956543

Token 71: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5080021619796753
    2. ',' → logprob: -1.2580021619796753
    3. ' and' → logprob: -2.758002281188965
    4. '.' → logprob: -3.133002281188965
    5. '"""' → logprob: -5.383002281188965
    6. 'and' → logprob: -7.508002281188965
    7. ')' → logprob: -7.633002281188965
    8. '```' → logprob: -8.133002281188965
    9. '."""' → logprob: -8.883002281188965
    10. ' or' → logprob: -9.008002281188965

Token 72: ' different' (ID: 2647)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6028084754943848
    2. ' dynamic' → logprob: -1.7278084754943848
    3. ' custom' → logprob: -2.4778084754943848
    4. ' case' → logprob: -2.7278084754943848
    5. ' caching' → logprob: -2.7278084754943848
    6. ' localization' → logprob: -2.9778084754943848
    7. ' customizable' → logprob: -2.9778084754943848
    8. ' modular' → logprob: -3.1028084754943848
    9. ' multi' → logprob: -3.8528084754943848
    10. ' complex' → logprob: -3.8528084754943848

Token 73: ' palindrome' (ID: 160469)
  Prédit: ' alph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' alph' → logprob: -0.45232099294662476
    2. ' character' → logprob: -1.9523210525512695
    3. ' types' → logprob: -2.4523210525512695
    4. ' approaches' → logprob: -4.4523210525512695
    5. ' cases' → logprob: -4.7023210525512695
    6. ' languages' → logprob: -4.7023210525512695
    7. 'pal' → logprob: -4.8273210525512695
    8. ' pal' → logprob: -4.9523210525512695
    9. ' kinds' → logprob: -4.9523210525512695
    10. ' ways' → logprob: -5.3273210525512695

Token 74: '
' (ID: 198)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -1.575261116027832
    2. ' counting' → logprob: -1.700261116027832
    3. 's' → logprob: -1.950261116027832
    4. ' generation' → logprob: -2.200261116027832
    5. ' detection' → logprob: -2.450261116027832
    6. ' formation' → logprob: -2.700261116027832
    7. ' strategies' → logprob: -3.825261116027832
    8. ' s' → logprob: -3.950261116027832
    9. ' criteria' → logprob: -4.200261116027832
    10. ' support' → logprob: -4.325261116027832

Token 75: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19848871231079102
    2. ' counting' → logprob: -2.073488712310791
    3. ' generation' → logprob: -4.948488712310791
    4. ' formation' → logprob: -5.198488712310791
    5. ' detection' → logprob: -5.573488712310791
    6. ' support' → logprob: -5.573488712310791
    7. ' forms' → logprob: -5.698488712310791
    8. ' types' → logprob: -5.698488712310791
    9. ' variations' → logprob: -5.823488712310791
    10. ' counts' → logprob: -6.073488712310791

Token 76: ' definitions' (ID: 35428)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -1.8373757600784302
    2. ' types' → logprob: -1.9623757600784302
    3. ' styles' → logprob: -2.7123756408691406
    4. ' forms' → logprob: -2.9623756408691406
    5. ' definitions' → logprob: -3.0873756408691406
    6. ' checking' → logprob: -3.0873756408691406
    7. 'formats' → logprob: -3.0873756408691406
    8. ' criteria' → logprob: -3.2123756408691406
    9. ' lengths' → logprob: -3.2123756408691406
    10. ' checks' → logprob: -3.4623756408691406

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014201148878782988
    2. ' and' → logprob: -7.626420021057129
    3. '   ' → logprob: -8.001420021057129
    4. ')' → logprob: -8.376420021057129
    5. 's' → logprob: -9.251420021057129
    6. 'and' → logprob: -9.626420021057129
    7. ' ,' → logprob: -9.751420021057129
    8. '}' → logprob: -10.126420021057129
    9. '"""' → logprob: -10.501420021057129
    10. '.' → logprob: -10.876420021057129

Token 78: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07218404114246368
    2. 'and' → logprob: -2.9471840858459473
    3. ' custom' → logprob: -4.947184085845947
    4. '   ' → logprob: -5.697184085845947
    5. ' different' → logprob: -6.572184085845947
    6. ' or' → logprob: -7.197184085845947
    7. ' dynamic' → logprob: -7.322184085845947
    8. ' variable' → logprob: -7.322184085845947
    9. ' special' → logprob: -7.822184085845947
    10. ' modular' → logprob: -7.947184085845947

Token 79: ' partial' (ID: 13664)
  Prédit: ' custom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' custom' → logprob: -0.3894707262516022
    2. ' additional' → logprob: -2.5144708156585693
    3. ' customizable' → logprob: -2.6394708156585693
    4. ' customized' → logprob: -4.13947057723999
    5. ' alternative' → logprob: -4.13947057723999
    6. ' specialized' → logprob: -4.13947057723999
    7. ' dynamic' → logprob: -4.26447057723999
    8. ' different' → logprob: -4.63947057723999
    9. ' domain' → logprob: -4.63947057723999
    10. ' more' → logprob: -4.63947057723999

Token 80: ' palindrome' (ID: 160469)
  Prédit: ' pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pal' → logprob: -0.893657922744751
    2. '_pal' → logprob: -1.393657922744751
    3. 'pal' → logprob: -2.143657922744751
    4. '<|end|>' → logprob: -2.768657922744751
    5. ' an' → logprob: -3.643657922744751
    6. ' permutations' → logprob: -4.018657684326172
    7. '_an' → logprob: -4.393657684326172
    8. ' support' → logprob: -4.393657684326172
    9. ' strings' → logprob: -4.393657684326172
    10. ' constraints' → logprob: -5.018657684326172

Token 81: ' matching' (ID: 20238)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21367621421813965
    2. ' counting' → logprob: -1.9636762142181396
    3. ' support' → logprob: -3.9636762142181396
    4. ' constraints' → logprob: -4.963676452636719
    5. ' counts' → logprob: -5.338676452636719
    6. ' generation' → logprob: -6.088676452636719
    7. ' formation' → logprob: -6.213676452636719
    8. ' s' → logprob: -6.338676452636719
    9. ' checking' → logprob: -6.588676452636719
    10. 'count' → logprob: -6.588676452636719

Token 82: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18650215864181519
    2. '   ' → logprob: -2.81150221824646
    3. 's' → logprob: -3.56150221824646
    4. '"""' → logprob: -3.56150221824646
    5. ',' → logprob: -3.68650221824646
    6. '."""' → logprob: -4.311501979827881
    7. ' capabilities' → logprob: -5.186501979827881
    8. ' possibilities' → logprob: -6.936501979827881
    9. '<|end|>' → logprob: -7.186501979827881
    10. ')' → logprob: -7.186501979827881

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32401928305625916
    2. '"""' → logprob: -1.3240193128585815
    3. '```' → logprob: -4.949019432067871
    4. '\n' → logprob: -6.824019432067871
    5. '"""
' → logprob: -6.949019432067871
    6. '""' → logprob: -8.324019432067871
    7. '    
' → logprob: -8.324019432067871
    8. '"' → logprob: -8.574019432067871
    9. ' """' → logprob: -8.574019432067871
    10. '    ' → logprob: -8.574019432067871

Token 84: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13192687928676605
    2. '"""' → logprob: -2.2569267749786377
    3. '```' → logprob: -4.381927013397217
    4. '\n' → logprob: -6.006927013397217
    5. '"""
' → logprob: -6.381927013397217
    6. '
' → logprob: -7.131927013397217
    7. '    
' → logprob: -8.006926536560059
    8. '`' → logprob: -8.506926536560059
    9. '    ' → logprob: -8.631926536560059
    10. '"' → logprob: -8.881926536560059

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10161418467760086
    2. 'def' → logprob: -2.851614236831665
    3. ' def' → logprob: -3.726614236831665
    4. '    
' → logprob: -4.726613998413086
    5. '    ' → logprob: -5.476613998413086
    6. '
' → logprob: -7.601613998413086
    7. ' 
' → logprob: -7.726613998413086
    8. ' ' → logprob: -8.726613998413086
    9. ' indentation' → logprob: -8.976613998413086
    10. '4' → logprob: -9.351613998413086

Token 86: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.015069718472659588
    2. '@' → logprob: -4.265069484710693
    3. '   ' → logprob: -7.140069484710693
    4. ' def' → logprob: -9.140069961547852
    5. 'de' → logprob: -13.265069961547852
    6. '__' → logprob: -13.890069961547852
    7. ' @' → logprob: -14.265069961547852
    8. '_' → logprob: -14.515069961547852
    9. 'l' → logprob: -14.890069961547852
    10. '_def' → logprob: -15.140069961547852

Token 87: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5955111384391785
    2. 'n' → logprob: -1.8455111980438232
    3. ' ' → logprob: -2.3455111980438232
    4. ' __' → logprob: -2.7205111980438232
    5. ' _' → logprob: -2.8455111980438232
    6. '_' → logprob: -3.3455111980438232
    7. 'x' → logprob: -4.720510959625244
    8. '  ' → logprob: -4.970510959625244
    9. 'nit' → logprob: -5.470510959625244
    10. 'def' → logprob: -5.595510959625244

Token 88: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0003473825636319816
    2. 'i' → logprob: -8.000347137451172
    3. ' init' → logprob: -11.750347137451172
    4. 'ini' → logprob: -12.875347137451172
    5. 'in' → logprob: -13.625347137451172
    6. ' i' → logprob: -15.500347137451172
    7. '_init' → logprob: -17.375347137451172
    8. 'int' → logprob: -17.500347137451172
    9. ' ' → logprob: -17.625347137451172
    10. '  ' → logprob: -17.750347137451172

Token 89: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018886012956500053
    2. '_' → logprob: -4.893886089324951
    3. ' (' → logprob: -5.768886089324951
    4. '<|end|>' → logprob: -5.768886089324951
    5. '__(' → logprob: -6.143886089324951
    6. '(self' → logprob: -7.018886089324951
    7. '__' → logprob: -7.268886089324951
    8. '```' → logprob: -8.643885612487793
    9. 'self' → logprob: -8.893885612487793
    10. '<|end|>' → logprob: -9.143885612487793

Token 90: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018198171630501747
    2. ' self' → logprob: -4.018198013305664
    3. ')' → logprob: -10.518198013305664
    4. ' ' → logprob: -11.018198013305664
    5. '_self' → logprob: -13.893198013305664
    6. '
' → logprob: -14.018198013305664
    7. '(self' → logprob: -14.268198013305664
    8. '  ' → logprob: -14.518198013305664
    9. '   ' → logprob: -14.643198013305664
    10. ' )' → logprob: -14.893198013305664

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014485134743154049
    2. ' ,' → logprob: -5.2644853591918945
    3. 'self' → logprob: -5.3894853591918945
    4. ',self' → logprob: -6.3894853591918945
    5. '(self' → logprob: -6.7644853591918945
    6. ')' → logprob: -6.7644853591918945
    7. ' self' → logprob: -8.139485359191895
    8. '_self' → logprob: -8.889485359191895
    9. '(' → logprob: -9.639485359191895
    10. ' )' → logprob: -10.264485359191895

Token 92: ' input' (ID: 3422)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04854535683989525
    2. 'self' → logprob: -3.2985453605651855
    3. ' s' → logprob: -4.6735453605651855
    4. ' text' → logprob: -7.5485453605651855
    5. 's' → logprob: -7.6735453605651855
    6. ' string' → logprob: -9.923544883728027
    7. 'text' → logprob: -10.298544883728027
    8. ' )' → logprob: -11.298544883728027
    9. ' input' → logprob: -11.673544883728027
    10. ' ' → logprob: -13.048544883728027

Token 93: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6275448799133301
    2. '_string' → logprob: -0.8775448799133301
    3. ' _' → logprob: -3.12754487991333
    4. '_str' → logprob: -6.25254487991333
    5. '_text' → logprob: -6.50254487991333
    6. ')_' → logprob: -6.50254487991333
    7. '_s' → logprob: -7.00254487991333
    8. ' )' → logprob: -8.127544403076172
    9. ')' → logprob: -8.752544403076172
    10. '_)' → logprob: -9.252544403076172

Token 94: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47536593675613403
    2. ':' → logprob: -0.975365936756134
    3. ')' → logprob: -7.100366115570068
    4. ' ):' → logprob: -8.35036563873291
    5. ' :' → logprob: -9.10036563873291
    6. '=' → logprob: -9.97536563873291
    7. ':str' → logprob: -10.47536563873291
    8. '   ' → logprob: -11.10036563873291
    9. '=None' → logprob: -12.22536563873291
    10. '):
' → logprob: -12.47536563873291

Token 95: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.31350865960121155
    2. 'str' → logprob: -1.3135086297988892
    3. ')' → logprob: -8.438508987426758
    4. ' ' → logprob: -11.063508987426758
    5. '	str' → logprob: -12.438508987426758
    6. '   ' → logprob: -12.688508987426758
    7. ' )' → logprob: -12.813508987426758
    8. '[str' → logprob: -13.563508987426758
    9. ':str' → logprob: -14.063508987426758
    10. 'stri' → logprob: -14.188508987426758

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02063823863863945
    2. ')' → logprob: -3.8956382274627686
    3. ':' → logprob: -9.770638465881348
    4. '):
' → logprob: -11.020638465881348
    5. ' ):' → logprob: -11.270638465881348
    6. ',' → logprob: -12.395638465881348
    7. '   ' → logprob: -12.770638465881348
    8. ' ' → logprob: -13.645638465881348
    9. ' )' → logprob: -14.645638465881348
    10. '=' → logprob: -15.270638465881348

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018506382184568793
    2. 'self' → logprob: -10.125185012817383
    3. '      ' → logprob: -10.125185012817383
    4. '        ' → logprob: -10.250185012817383
    5. '   ' → logprob: -10.875185012817383
    6. ')' → logprob: -11.500185012817383
    7. '     ' → logprob: -11.625185012817383
    8. ' ' → logprob: -12.000185012817383
    9. '    ' → logprob: -12.125185012817383
    10. ',' → logprob: -12.250185012817383

Token 98: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01747753471136093
    2. 'self' (adapté à ' self') → logprob: -4.767477512359619
    3. ' self' → logprob: -4.767477512359619
    4. '        ' → logprob: -8.267477989196777
    5. ' ' → logprob: -11.017477989196777
    6. '   ' → logprob: -11.392477989196777
    7. '    ' → logprob: -11.517477989196777
    8. '      ' → logprob: -12.017477989196777
    9. '     ' → logprob: -12.642477989196777
    10. '           ' → logprob: -12.767477989196777

Token 99: '.original' (ID: 65193)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3909895420074463
    2. '._' → logprob: -1.5159895420074463
    3. '_' → logprob: -1.8909895420074463
    4. '_input' → logprob: -2.0159895420074463
    5. ' .' → logprob: -2.2659895420074463
    6. ' _' → logprob: -3.0159895420074463
    7. '_string' → logprob: -3.1409895420074463
    8. ' ' → logprob: -3.6409895420074463
    9. '.input' → logprob: -4.140989303588867
    10. '_text' → logprob: -6.265989303588867

Token 100: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.2015610933303833
    2. '_' → logprob: -1.7015610933303833
    3. ' _' → logprob: -9.701560974121094
    4. '_text' → logprob: -10.576560974121094
    5. '_str' → logprob: -10.826560974121094
    6. '_input' → logprob: -11.201560974121094
    7. '_s' → logprob: -11.451560974121094
    8. '_strings' → logprob: -11.576560974121094
    9. '_name' → logprob: -13.451560974121094
    10. '_token' → logprob: -14.076560974121094

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198359653353691
    2. '=' → logprob: -2.811983585357666
    3. ' ' → logprob: -11.311984062194824
    4. '_' → logprob: -13.686984062194824
    5. '  ' → logprob: -13.936984062194824
    6. ':' → logprob: -14.561984062194824
    7. '=input' → logprob: -14.686984062194824
    8. '   ' → logprob: -15.686984062194824
    9. ')' → logprob: -15.936984062194824
    10. ' =
' → logprob: -16.436983108520508

Token 102: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.061967913061380386
    2. 'input' → logprob: -2.8119678497314453
    3. '=input' → logprob: -16.311967849731445
    4. '(input' → logprob: -16.686967849731445
    5. '	input' → logprob: -17.061967849731445
    6. '_input' → logprob: -17.811967849731445
    7. ' ' → logprob: -18.311967849731445
    8. '    ' → logprob: -18.686967849731445
    9. ',input' → logprob: -19.311967849731445
    10. '<input' → logprob: -19.311967849731445

Token 103: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31330546736717224
    2. '_string' → logprob: -1.3133054971694946
    3. '_str' → logprob: -11.313305854797363
    4. ' _' → logprob: -11.313305854797363
    5. '_s' → logprob: -12.688305854797363
    6. '_
' → logprob: -13.063305854797363
    7. 'string' → logprob: -13.063305854797363
    8. '_token' → logprob: -13.438305854797363
    9. '_String' → logprob: -13.563305854797363
    10. ')' → logprob: -13.688305854797363

Token 104: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13870134949684143
    2. '<|end|>' → logprob: -2.2637014389038086
    3. '
' → logprob: -4.138701438903809
    4. ' ' → logprob: -5.638701438903809
    5. '        ' → logprob: -6.388701438903809
    6. '    
' → logprob: -7.263701438903809
    7. '   ' → logprob: -7.388701438903809
    8. '        
' → logprob: -7.513701438903809
    9. '<|end|>' → logprob: -7.513701438903809
    10. '  
' → logprob: -7.763701438903809

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005751033313572407
    2. '<|end|>' → logprob: -5.630751132965088
    3. '
' → logprob: -6.755751132965088
    4. '        
' → logprob: -7.880751132965088
    5. '        ' → logprob: -8.25575065612793
    6. ' ' → logprob: -9.88075065612793
    7. '    
' → logprob: -9.88075065612793
    8. ',' → logprob: -10.25575065612793
    9. 'self' → logprob: -10.38075065612793
    10. '   ' → logprob: -10.38075065612793

Token 106: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34134775400161743
    2. 'self' (adapté à ' self') → logprob: -1.5913476943969727
    3. ' self' → logprob: -2.4663476943969727
    4. '
' → logprob: -8.591347694396973
    5. '   ' → logprob: -8.591347694396973
    6. '      ' → logprob: -9.466347694396973
    7. ' ' → logprob: -9.591347694396973
    8. '	self' → logprob: -10.716347694396973
    9. 'Counter' → logprob: -11.091347694396973
    10. '        
' → logprob: -11.091347694396973

Token 107: '.char' (ID: 18508)
  Prédit: '_counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.28098806738853455
    2. '_counts' → logprob: -1.780988097190857
    3. '._' → logprob: -3.9059879779815674
    4. '_chars' → logprob: -4.0309882164001465
    5. '.' → logprob: -4.1559882164001465
    6. '_char' → logprob: -4.6559882164001465
    7. '_c' → logprob: -5.7809882164001465
    8. '_count' → logprob: -6.0309882164001465
    9. '.counter' → logprob: -6.2809882164001465
    10. '.Counter' → logprob: -6.2809882164001465

Token 108: '_counter' (ID: 35419)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.010608195327222347
    2. '_counter' → logprob: -4.760608196258545
    3. '_count' → logprob: -6.260608196258545
    4. 'acters' → logprob: -10.135607719421387
    5. '_freq' → logprob: -11.010607719421387
    6. 's' → logprob: -11.510607719421387
    7. '_' → logprob: -12.010607719421387
    8. '_c' → logprob: -12.885607719421387
    9. '_frequency' → logprob: -13.010607719421387
    10. '_f' → logprob: -13.135607719421387

Token 109: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142163336277008
    2. ' =' → logprob: -1.7014216184616089
    3. 's' → logprob: -12.701421737670898
    4. '[' → logprob: -13.326421737670898
    5. '.' → logprob: -14.576421737670898
    6. 'space' → logprob: -14.701421737670898
    7. ')' → logprob: -14.826421737670898
    8. '   ' → logprob: -14.951421737670898
    9. '_' → logprob: -15.201421737670898
    10. '[:]' → logprob: -15.201421737670898

Token 110: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.07889485359191895
    2. 'Counter' → logprob: -2.578894853591919
    3. ' counter' → logprob: -13.20389461517334
    4. '.Counter' → logprob: -13.32889461517334
    5. '_counter' → logprob: -14.20389461517334
    6. ' ' → logprob: -15.07889461517334
    7. ' ' → logprob: -15.32889461517334
    8. ' Coun' → logprob: -16.078895568847656
    9. 'counter' → logprob: -16.703895568847656
    10. '	C' → logprob: -17.453895568847656

Token 111: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.011349123902618885
    2. '(' → logprob: -4.511349201202393
    3. '(self' → logprob: -8.136348724365234
    4. ' (' → logprob: -12.761348724365234
    5. '()' → logprob: -13.011348724365234
    6. '(in' → logprob: -13.886348724365234
    7. '(original' → logprob: -14.886348724365234
    8. '(
' → logprob: -15.011348724365234
    9. '(object' → logprob: -15.136348724365234
    10. '(import' → logprob: -15.886348724365234

Token 112: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.664371848164592e-05
    2. 'string' → logprob: -11.500016212463379
    3. 'String' → logprob: -12.750016212463379
    4. ')' → logprob: -13.000016212463379
    5. '_strings' → logprob: -15.250016212463379
    6. '_' → logprob: -15.500016212463379
    7. '(' → logprob: -15.875016212463379
    8. 's' → logprob: -16.250017166137695
    9. '(self' → logprob: -16.250017166137695
    10. '_STRING' → logprob: -16.375017166137695

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011450992315076292
    2. ' )' → logprob: -9.125114440917969
    3. ')
' → logprob: -13.125114440917969
    4. '   ' → logprob: -13.125114440917969
    5. '       ' → logprob: -14.250114440917969
    6. ' ' → logprob: -14.750114440917969
    7. '}' → logprob: -15.250114440917969
    8. ')}' → logprob: -17.25011444091797
    9. '))' → logprob: -17.50011444091797
    10. '),' → logprob: -17.75011444091797

Token 114: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.8620906472206116
    2. '       ' → logprob: -0.9870906472206116
    3. ' self' → logprob: -1.7370905876159668
    4. '        ' → logprob: -4.737090587615967
    5. '<|end|>' → logprob: -4.862090587615967
    6. '    ' → logprob: -5.487090587615967
    7. '   ' → logprob: -5.987090587615967
    8. 'def' → logprob: -6.737090587615967
    9. ' ' → logprob: -6.737090587615967
    10. '      ' → logprob: -7.237090587615967

Token 116: '.length' (ID: 3116)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7530330419540405
    2. '.unique' → logprob: -2.25303316116333
    3. '.is' → logprob: -2.50303316116333
    4. '.n' → logprob: -3.00303316116333
    5. '.max' → logprob: -3.37803316116333
    6. '.num' → logprob: -3.37803316116333
    7. '.has' → logprob: -3.62803316116333
    8. '.allowed' → logprob: -3.75303316116333
    9. '.total' → logprob: -4.25303316116333
    10. '.valid' → logprob: -4.37803316116333

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11750879138708115
    2. '=' → logprob: -2.492508888244629
    3. '_' → logprob: -3.617508888244629
    4. ' ' → logprob: -7.367508888244629
    5. '<|end|>' → logprob: -7.992508888244629
    6. '_space' → logprob: -9.742508888244629
    7. '    ' → logprob: -9.742508888244629
    8. '_=' → logprob: -10.117508888244629
    9. ' _' → logprob: -10.242508888244629
    10. ')' → logprob: -10.367508888244629

Token 118: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.014164221473038197
    2. 'len' → logprob: -4.264164447784424
    3. '(len' → logprob: -14.889163970947266
    4. ' ' → logprob: -15.764163970947266
    5. '=len' → logprob: -16.514163970947266
    6. '	len' → logprob: -17.139163970947266
    7. '[len' → logprob: -17.764163970947266
    8. '   ' → logprob: -19.264163970947266
    9. ',len' → logprob: -19.264163970947266
    10. '<len' → logprob: -20.389163970947266

Token 119: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12790673971176147
    2. '(' → logprob: -2.1279067993164062
    3. '(self' → logprob: -7.002906799316406
    4. '(
' → logprob: -9.752906799316406
    5. '(original' → logprob: -12.752906799316406
    6. '(s' → logprob: -13.002906799316406
    7. '(object' → logprob: -13.627906799316406
    8. ' (' → logprob: -13.877906799316406
    9. '(in' → logprob: -14.002906799316406
    10. '(

' → logprob: -14.127906799316406

Token 120: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.00013405199570115656
    2. 'string' → logprob: -9.750134468078613
    3. ')' → logprob: -10.250134468078613
    4. '_' → logprob: -10.250134468078613
    5. '(' → logprob: -14.250134468078613
    6. '_)' → logprob: -14.375134468078613
    7. ' _' → logprob: -14.500134468078613
    8. 'String' → logprob: -14.750134468078613
    9. ' )' → logprob: -14.750134468078613
    10. '```' → logprob: -15.000134468078613

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.837811088189483e-05
    2. ' )' → logprob: -9.750068664550781
    3. ')
' → logprob: -12.000068664550781
    4. '<|end|>' → logprob: -13.500068664550781
    5. ' ' → logprob: -14.125068664550781
    6. '   ' → logprob: -14.125068664550781
    7. '}' → logprob: -15.000068664550781
    8. '
' → logprob: -16.00006866455078
    9. '<|end|>' → logprob: -16.12506866455078
    10. '       ' → logprob: -16.50006866455078

Token 122: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1698249727487564
    2. '<|end|>' → logprob: -2.0448250770568848
    3. '   ' → logprob: -4.669825077056885
    4. '    
' → logprob: -4.919825077056885
    5. '<|end|>' → logprob: -6.294825077056885
    6. '

' → logprob: -6.419825077056885
    7. ' 
' → logprob: -6.794825077056885
    8. ' ' → logprob: -6.794825077056885
    9. '       ' → logprob: -7.044825077056885
    10. '  
' → logprob: -7.169825077056885

Token 123: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5153287649154663
    2. '   ' → logprob: -2.015328884124756
    3. 'def' → logprob: -2.140328884124756
    4. '<|end|>' → logprob: -2.890328884124756
    5. 'self' (adapté à ' self') → logprob: -3.015328884124756
    6. '
' → logprob: -3.640328884124756
    7. '    
' → logprob: -5.265328884124756
    8. '    ' → logprob: -5.640328884124756
    9. ' self' → logprob: -6.140328884124756
    10. ')' → logprob: -6.640328884124756

Token 124: '.al' (ID: 19517)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25239673256874084
    2. '.is' → logprob: -2.627396821975708
    3. '._' → logprob: -2.877396821975708
    4. ' .' → logprob: -3.377396821975708
    5. '.has' → logprob: -4.002396583557129
    6. '.num' → logprob: -4.877396583557129
    7. '.unique' → logprob: -5.252396583557129
    8. '.count' → logprob: -5.377396583557129
    9. '.can' → logprob: -5.502396583557129
    10. '.char' → logprob: -6.377396583557129

Token 125: 'phabet' (ID: 29466)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.003369850106537342
    2. 'l' → logprob: -5.8783698081970215
    3. 'ready' → logprob: -8.50337028503418
    4. 'phabet' → logprob: -9.00337028503418
    5. 'pha' → logprob: -10.00337028503418
    6. 'lo' → logprob: -10.00337028503418
    7. 'most' → logprob: -10.87837028503418
    8. 'LOWED' → logprob: -10.87837028503418
    9. '_low' → logprob: -11.12837028503418
    10. 'ph' → logprob: -11.37837028503418

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46162816882133484
    2. '=' → logprob: -1.5866281986236572
    3. '_' → logprob: -2.3366281986236572
    4. '_counter' → logprob: -3.5866281986236572
    5. 'ic' → logprob: -3.9616281986236572
    6. '_set' → logprob: -5.211627960205078
    7. '=set' → logprob: -5.211627960205078
    8. '_chars' → logprob: -5.836627960205078
    9. 'ical' → logprob: -6.586627960205078
    10. '_counts' → logprob: -6.711627960205078

Token 127: ' tuple' (ID: 31311)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.05885578691959381
    2. 'set' → logprob: -2.9338557720184326
    3. ' sorted' → logprob: -5.933856010437012
    4. ' list' → logprob: -7.058856010437012
    5. 'sorted' → logprob: -8.558856010437012
    6. ' ' → logprob: -9.683856010437012
    7. ' tuple' → logprob: -9.808856010437012
    8. 'list' → logprob: -10.683856010437012
    9. ' {' → logprob: -10.808856010437012
    10. '{' → logprob: -10.933856010437012

Token 128: '(sorted' (ID: 92488)
  Prédit: '(set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.7398101091384888
    2. '(self' → logprob: -1.3648101091384888
    3. '(sorted' → logprob: -1.3648101091384888
    4. '(' → logprob: -4.864809989929199
    5. 'set' → logprob: -6.364809989929199
    6. '(s' → logprob: -7.239809989929199
    7. 'sorted' → logprob: -7.739809989929199
    8. 'self' → logprob: -7.739809989929199
    9. '(char' → logprob: -8.2398099899292
    10. '(c' → logprob: -8.2398099899292

Token 129: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2606290876865387
    2. '(set' → logprob: -1.5106290578842163
    3. '(' → logprob: -4.885629177093506
    4. '({' → logprob: -7.635629177093506
    5. 'self' → logprob: -8.260628700256348
    6. '(s' → logprob: -8.635628700256348
    7. '(
' → logprob: -9.760628700256348
    8. 'set' → logprob: -10.260628700256348
    9. '((' → logprob: -10.510628700256348
    10. '{' → logprob: -11.385628700256348

Token 130: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.0029588043689727783
    2. '.' → logprob: -5.87795877456665
    3. ' .' → logprob: -9.377959251403809
    4. 'char' → logprob: -10.377959251403809
    5. '<char' → logprob: -11.502959251403809
    6. ' char' → logprob: -11.752959251403809
    7. ' ' → logprob: -12.752959251403809
    8. ')' → logprob: -13.002959251403809
    9. '	char' → logprob: -13.252959251403809
    10. '.charset' → logprob: -13.502959251403809

Token 131: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.0010426939697936177
    2. 'acters' → logprob: -7.37604284286499
    3. 'acter' → logprob: -7.87604284286499
    4. '_counts' → logprob: -11.876042366027832
    5. '_' → logprob: -12.001042366027832
    6. 's' → logprob: -12.251042366027832
    7. 'counter' → logprob: -12.376042366027832
    8. ')_' → logprob: -12.751042366027832
    9. 'cter' → logprob: -13.126042366027832
    10. '_set' → logprob: -13.876042366027832

Token 132: '.keys' (ID: 18392)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5787655115127563
    2. '.keys' → logprob: -1.2037655115127563
    3. '().' → logprob: -2.328765392303467
    4. '))' → logprob: -3.703765392303467
    5. '()' → logprob: -4.328765392303467
    6. 'keys' → logprob: -6.578765392303467
    7. '())' → logprob: -7.328765392303467
    8. '.' → logprob: -7.453765392303467
    9. '.elements' → logprob: -7.703765392303467
    10. '()))
' → logprob: -8.578765869140625

Token 133: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.003150027245283127
    2. '())' → logprob: -6.25314998626709
    3. '()' → logprob: -7.00314998626709
    4. '))' → logprob: -8.50314998626709
    5. '()))
' → logprob: -9.50314998626709
    6. '()));' → logprob: -11.50314998626709
    7. '(' → logprob: -11.62814998626709
    8. '())).' → logprob: -12.62814998626709
    9. ')' → logprob: -13.00314998626709
    10. '())))' → logprob: -13.25314998626709

Token 134: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05036168918013573
    2. '@' → logprob: -3.0503616333007812
    3. 'def' → logprob: -6.425361633300781
    4. '    
' → logprob: -9.175361633300781
    5. ' @' → logprob: -11.300361633300781
    6. '@property' → logprob: -11.675361633300781
    7. '       ' → logprob: -11.800361633300781
    8. ' def' → logprob: -12.550361633300781
    9. '
' → logprob: -12.925361633300781
    10. '        
' → logprob: -12.925361633300781

Token 136: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0006271334132179618
    2. '   ' → logprob: -7.625627040863037
    3. '@property' → logprob: -9.125627517700195
    4. 'def' (adapté à ' def') → logprob: -11.000627517700195
    5. '@n' → logprob: -11.875627517700195
    6. '    
' → logprob: -12.875627517700195
    7. '```' → logprob: -13.875627517700195
    8. '@m' → logprob: -13.875627517700195
    9. ' @' → logprob: -14.750627517700195
    10. '@index' → logprob: -15.625627517700195

Token 137: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0434524230659008
    2. '_' → logprob: -3.543452501296997
    3. ' ' → logprob: -5.668452262878418
    4. ' def' → logprob: -6.168452262878418
    5. ' calculate' → logprob: -6.168452262878418
    6. ' space' → logprob: -6.668452262878418
    7. '_count' → logprob: -7.168452262878418
    8. ' compute' → logprob: -7.293452262878418
    9. ' count' → logprob: -7.418452262878418
    10. 'n' → logprob: -7.418452262878418

Token 138: 'factor' (ID: 73174)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2608082890510559
    2. 'half' → logprob: -2.760808229446411
    3. 'calculate' → logprob: -3.385808229446411
    4. 'num' → logprob: -3.385808229446411
    5. 'compute' → logprob: -4.13580846786499
    6. 'factor' → logprob: -4.26080846786499
    7. '_count' → logprob: -4.76080846786499
    8. 'can' → logprob: -4.88580846786499
    9. 'generate' → logprob: -5.01080846786499
    10. 'prepare' → logprob: -5.13580846786499

Token 139: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.37241584062576294
    2. 'ialize' → logprob: -1.4974157810211182
    3. 'orial' → logprob: -3.122415781021118
    4. 'o' → logprob: -4.122416019439697
    5. '```' → logprob: -5.372416019439697
    6. '       ' → logprob: -5.372416019439697
    7. 'or' → logprob: -5.997416019439697
    8. 'ize' → logprob: -6.122416019439697
    9. '   ' → logprob: -6.247416019439697
    10. '    ' → logprob: -6.622416019439697

Token 140: '_cache' (ID: 27045)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011277819983661175
    2. ' (' → logprob: -5.261277675628662
    3. '(self' → logprob: -5.636277675628662
    4. '_' → logprob: -7.261277675628662
    5. '(n' → logprob: -7.261277675628662
    6. '_factor' → logprob: -8.51127815246582
    7. 's' → logprob: -8.76127815246582
    8. ' ' → logprob: -9.63627815246582
    9. '_helper' → logprob: -9.76127815246582
    10. '(
' → logprob: -9.76127815246582

Token 141: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.26235589385032654
    2. '(' → logprob: -1.512355923652649
    3. ':' → logprob: -5.387355804443359
    4. '_' → logprob: -6.887355804443359
    5. ' (' → logprob: -7.387355804443359
    6. '()' → logprob: -7.387355804443359
    7. ' ' → logprob: -7.387355804443359
    8. ')' → logprob: -7.512355804443359
    9. '():' → logprob: -7.637355804443359
    10. '   ' → logprob: -7.887355804443359

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05564301460981369
    2. ')' → logprob: -3.055643081665039
    3. ',' → logprob: -5.430643081665039
    4. ' ):' → logprob: -7.180643081665039
    5. ':' → logprob: -7.555643081665039
    6. '=' → logprob: -8.055643081665039
    7. '(' → logprob: -8.680643081665039
    8. '):
' → logprob: -8.805643081665039
    9. ' ' → logprob: -9.055643081665039
    10. '_' → logprob: -9.180643081665039

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2956041097640991
    2. '   ' → logprob: -1.6706041097640991
    3. '(self' → logprob: -3.2956042289733887
    4. ':' → logprob: -4.170604228973389
    5. '_' → logprob: -5.920604228973389
    6. '(' → logprob: -5.920604228973389
    7. '():' → logprob: -6.545604228973389
    8. ')' → logprob: -6.670604228973389
    9. '()' → logprob: -6.795604228973389
    10. ' ' → logprob: -6.920604228973389

Token 144: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020386086776852608
    2. '@' → logprob: -4.395386219024658
    3. 'return' → logprob: -6.020386219024658
    4. ' @' → logprob: -6.520386219024658
    5. '   ' → logprob: -6.770386219024658
    6. ' return' → logprob: -6.895386219024658
    7. '    ' → logprob: -7.395386219024658
    8. ' pass' → logprob: -8.3953857421875
    9. '        ' → logprob: -8.8953857421875
    10. ' ' → logprob: -9.1453857421875

Token 145: ' For' (ID: 2214)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2978758215904236
    2. 'return' → logprob: -1.7978758811950684
    3. '   ' → logprob: -4.047875881195068
    4. '       ' → logprob: -4.047875881195068
    5. ' return' → logprob: -4.172875881195068
    6. ' @' → logprob: -4.422875881195068
    7. 'pass' → logprob: -4.422875881195068
    8. ' pass' → logprob: -5.172875881195068
    9. 'self' → logprob: -5.297875881195068
    10. 'if' → logprob: -6.672875881195068

Token 146: ' memo' (ID: 46393)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7709927558898926
    2. ' self' → logprob: -1.0209927558898926
    3. 'factor' → logprob: -3.3959927558898926
    4. ' ' → logprob: -3.7709927558898926
    5. ' factorial' → logprob: -3.7709927558898926
    6. 'n' → logprob: -4.020992755889893
    7. '@' → logprob: -4.520992755889893
    8. ' n' → logprob: -4.770992755889893
    9. ' l' → logprob: -4.895992755889893
    10. 'l' → logprob: -4.895992755889893

Token 147: 'izing' (ID: 6396)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3549005389213562
    2. 'ized' → logprob: -1.729900598526001
    3. 'ize' → logprob: -2.479900598526001
    4. 'z' → logprob: -3.979900598526001
    5. 'ization' → logprob: -5.229900360107422
    6. ':' → logprob: -5.729900360107422
    7. 'zed' → logprob: -6.229900360107422
    8. ' ' → logprob: -6.604900360107422
    9. '=' → logprob: -6.979900360107422
    10. 'iz' → logprob: -7.229900360107422

Token 148: ' factorial' (ID: 111204)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' calls' (ID: 11666)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19500170648097992
    2. ')' → logprob: -2.1950016021728516
    3. '<|end|>' → logprob: -4.070001602172852
    4. '(' → logprob: -4.570001602172852
    5. '   ' → logprob: -4.695001602172852
    6. '}' → logprob: -4.945001602172852
    7. 'self' → logprob: -5.320001602172852
    8. '()' → logprob: -5.820001602172852
    9. '(
' → logprob: -6.320001602172852
    10. '
' → logprob: -6.320001602172852

Token 150: ' up' (ID: 869)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1830466985702515
    2. '   ' → logprob: -1.1830466985702515
    3. '
' → logprob: -1.8080466985702515
    4. '):' → logprob: -2.808046817779541
    5. ')' → logprob: -3.183046817779541
    6. '       ' → logprob: -3.558046817779541
    7. '@' → logprob: -4.058046817779541
    8. '():' → logprob: -4.433046817779541
    9. '<|end|>' → logprob: -4.683046817779541
    10. ':
' → logprob: -4.683046817779541

Token 151: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.16573674976825714
    2. 'ntil' → logprob: -3.040736675262451
    3. '_to' → logprob: -3.165736675262451
    4. ' to' → logprob: -3.540736675262451
    5. '@' → logprob: -4.165736675262451
    6. 'p' → logprob: -6.415736675262451
    7. 'def' → logprob: -6.415736675262451
    8. 'date' → logprob: -6.540736675262451
    9. 'til' → logprob: -6.665736675262451
    10. ' until' → logprob: -6.665736675262451

Token 152: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5722412467002869
    2. ' self' → logprob: -1.4472413063049316
    3. ' ' → logprob: -2.1972413063049316
    4. 'max' → logprob: -3.0722413063049316
    5. ' max' → logprob: -3.4472413063049316
    6. '100' → logprob: -5.447241306304932
    7. '20' → logprob: -6.947241306304932
    8. 'n' → logprob: -6.947241306304932
    9. ')' → logprob: -7.322241306304932
    10. ' n' → logprob: -7.697241306304932

Token 153: '
' (ID: 198)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0612894743680954
    2. '(' → logprob: -3.4362895488739014
    3. '(max' → logprob: -5.311289310455322
    4. '   ' → logprob: -6.061289310455322
    5. '_' → logprob: -6.186289310455322
    6. ')' → logprob: -6.186289310455322
    7. ' =' → logprob: -6.186289310455322
    8. '=' → logprob: -6.186289310455322
    9. '<|end|>' → logprob: -6.436289310455322
    10. 'self' → logprob: -6.686289310455322

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6950319409370422
    2. '   ' → logprob: -0.9450319409370422
    3. '
' → logprob: -2.4450318813323975
    4. '(self' → logprob: -4.320032119750977
    5. ')' → logprob: -6.195032119750977
    6. ':' → logprob: -6.320032119750977
    7. '    
' → logprob: -6.570032119750977
    8. ' ' → logprob: -6.695032119750977
    9. 'self' → logprob: -6.945032119750977
    10. '@' → logprob: -7.195032119750977

Token 155: ' cache' (ID: 11956)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09973862767219543
    2. '@' → logprob: -2.599738597869873
    3. 'return' → logprob: -4.849738597869873
    4. ' @' → logprob: -5.099738597869873
    5. '   ' → logprob: -6.349738597869873
    6. ' return' → logprob: -6.724738597869873
    7. 'self' → logprob: -6.724738597869873
    8. 'pass' → logprob: -7.599738597869873
    9. 'if' → logprob: -7.724738597869873
    10. ' self' → logprob: -7.849738597869873

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18417370319366455
    2. '=' → logprob: -1.8091737031936646
    3. ':' → logprob: -5.809173583984375
    4. ' ' → logprob: -8.059173583984375
    5. '   ' → logprob: -8.309173583984375
    6. '={' → logprob: -8.434173583984375
    7. '={}' → logprob: -8.559173583984375
    8. '_' → logprob: -8.809173583984375
    9. '[' → logprob: -9.934173583984375
    10. '={}
' → logprob: -10.434173583984375

Token 157: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.05328064039349556
    2. ' {}' → logprob: -3.4282805919647217
    3. '{' → logprob: -4.303280830383301
    4. ' [' → logprob: -5.928280830383301
    5. '[' → logprob: -6.178280830383301
    6. ' {' → logprob: -6.928280830383301
    7. 'dict' → logprob: -9.8032808303833
    8. '[self' → logprob: -10.3032808303833
    9. '[l' → logprob: -10.6782808303833
    10. '{}
' → logprob: -10.6782808303833

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005367091507650912
    2. ' ' → logprob: -7.750536918640137
    3. 'factor' → logprob: -9.250536918640137
    4. ' factorial' → logprob: -12.375536918640137
    5. 'self' → logprob: -13.250536918640137
    6. 'fact' → logprob: -13.875536918640137
    7. 'None' → logprob: -14.500536918640137
    8. '   ' → logprob: -14.750536918640137
    9. '  ' → logprob: -14.875536918640137
    10. '
' → logprob: -15.688036918640137

Token 159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015878336504101753
    2. ']
' → logprob: -4.515878200531006
    3. ',' → logprob: -5.390878200531006
    4. ' ]' → logprob: -9.640878677368164
    5. ']*(' → logprob: -10.015878677368164
    6. ']+' → logprob: -10.140878677368164
    7. ']

' → logprob: -10.265878677368164
    8. ',
' → logprob: -10.765878677368164
    9. ']*' → logprob: -10.890878677368164
    10. ' for' → logprob: -11.265878677368164

Token 160: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5035353302955627
    2. ',' → logprob: -1.253535270690918
    3. '
' → logprob: -2.503535270690918
    4. ']+' → logprob: -4.378535270690918
    5. ',
' → logprob: -4.503535270690918
    6. ']
' → logprob: -6.503535270690918
    7. '<|end|>' → logprob: -6.628535270690918
    8. 'for' → logprob: -8.128535270690918
    9. ']*(' → logprob: -8.503535270690918
    10. ' ]' → logprob: -8.628535270690918

Token 161: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008899023523554206
    2. '(max' → logprob: -7.625889778137207
    3. ' (' → logprob: -8.000889778137207
    4. '(' → logprob: -9.875889778137207
    5. 'self' → logprob: -12.125889778137207
    6. '((' → logprob: -13.125889778137207
    7. '(n' → logprob: -13.125889778137207
    8. '(
' → logprob: -13.125889778137207
    9. '(len' → logprob: -13.625889778137207
    10. '(this' → logprob: -14.375889778137207

Token 162: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004231547005474567
    2. '
' → logprob: -6.1292314529418945
    3. '(self' → logprob: -6.7542314529418945
    4. ' self' → logprob: -7.3792314529418945
    5. '[self' → logprob: -8.754231452941895
    6. '{' → logprob: -10.754231452941895
    7. '   ' → logprob: -11.004231452941895
    8. 's' → logprob: -11.254231452941895
    9. ' ' → logprob: -11.754231452941895
    10. '=self' → logprob: -11.754231452941895

Token 163: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.6023277044296265
    2. 'length' → logprob: -0.8523277044296265
    3. '_length' → logprob: -4.602327823638916
    4. '+' → logprob: -5.477327823638916
    5. 'self' → logprob: -5.727327823638916
    6. 'ength' → logprob: -6.102327823638916
    7. ' length' → logprob: -6.227327823638916
    8. 'len' → logprob: -7.102327823638916
    9. '   ' → logprob: -7.352327823638916
    10. '[length' → logprob: -7.477327823638916

Token 164: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023251881822943687
    2. ' +' → logprob: -3.77325177192688
    3. '+
' → logprob: -12.2732515335083
    4. ')' → logprob: -14.2732515335083
    5. ' +
' → logprob: -14.5232515335083
    6. ' ' → logprob: -15.0232515335083
    7. ' plus' → logprob: -15.7732515335083
    8. '+)' → logprob: -16.648252487182617
    9. '
' → logprob: -17.273252487182617
    10. '1' → logprob: -17.398252487182617

Token 165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009148012613877654
    2. ' ' → logprob: -7.250914573669434
    3. '2' → logprob: -8.500914573669434
    4. '   ' → logprob: -13.625914573669434
    5. '  ' → logprob: -16.12591552734375
    6. '10' → logprob: -16.37591552734375
    7. '
' → logprob: -17.50091552734375
    8. '    ' → logprob: -17.62591552734375
    9. '```' → logprob: -17.87591552734375
    10. '20' → logprob: -18.25091552734375

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022046364028938115
    2. ' ' → logprob: -9.00022029876709
    3. '2' → logprob: -9.25022029876709
    4. '10' → logprob: -15.25022029876709
    5. '   ' → logprob: -15.50022029876709
    6. '  ' → logprob: -16.312721252441406
    7. '```' → logprob: -16.375221252441406
    8. '11' → logprob: -16.562721252441406
    9. '
' → logprob: -16.937721252441406
    10. '１' → logprob: -17.500221252441406

Token 167: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.026921208947896957
    2. ')' → logprob: -3.651921272277832
    3. ' )
' → logprob: -8.276921272277832
    4. ')
' → logprob: -8.651921272277832
    5. '       ' → logprob: -9.151921272277832
    6. '   ' → logprob: -10.151921272277832
    7. ')

' → logprob: -10.401921272277832
    8. '
' → logprob: -11.776921272277832
    9. ' )' → logprob: -12.651921272277832
    10. 'for' → logprob: -13.151921272277832

Token 168: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1853550374507904
    2. '       ' → logprob: -1.9353550672531128
    3. ' for' → logprob: -3.9353549480438232
    4. 'for' → logprob: -6.185355186462402
    5. '        
' → logprob: -7.685355186462402
    6. '   ' → logprob: -7.810355186462402
    7. '<|end|>' → logprob: -7.810355186462402
    8. '    
' → logprob: -7.935355186462402
    9. '\n' → logprob: -8.060355186462402
    10. '
' → logprob: -8.060355186462402

Token 169: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4148173928260803
    2. 'for' (adapté à ' for') → logprob: -1.7898173332214355
    3. '       ' → logprob: -1.9148173332214355
    4. '
' → logprob: -3.7898173332214355
    5. '	for' → logprob: -6.2898173332214355
    6. ' 
' → logprob: -8.664817810058594
    7. '   ' → logprob: -9.039817810058594
    8. '\n' → logprob: -9.164817810058594
    9. '    
' → logprob: -9.289817810058594
    10. '        
' → logprob: -9.539817810058594

Token 170: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868723213672638
    2. 'i' → logprob: -1.1368722915649414
    3. '	i' → logprob: -14.261872291564941
    4. '   ' → logprob: -14.386872291564941
    5. ' ' → logprob: -16.386873245239258
    6. 'n' → logprob: -17.886873245239258
    7. ' n' → logprob: -17.886873245239258
    8. '    ' → logprob: -18.636873245239258
    9. '  ' → logprob: -18.761873245239258
    10. 'x' → logprob: -19.511873245239258

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004715514834970236
    2. 'in' → logprob: -5.379715442657471
    3. ' ' → logprob: -9.379715919494629
    4. '	in' → logprob: -12.254715919494629
    5. ' i' → logprob: -12.879715919494629
    6. '1' → logprob: -13.379715919494629
    7. 'range' → logprob: -14.879715919494629
    8. ' 
' → logprob: -15.379715919494629
    9. ',' → logprob: -15.379715919494629
    10. 'n' → logprob: -15.754715919494629

Token 172: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142114162445068
    2. 'range' → logprob: -1.7014211416244507
    3. ' ' → logprob: -12.701420783996582
    4. '	range' → logprob: -12.951420783996582
    5. '(range' → logprob: -13.201420783996582
    6. '   ' → logprob: -15.451420783996582
    7. '
' → logprob: -15.826420783996582
    8. ' xrange' → logprob: -16.0764217376709
    9. '1' → logprob: -16.4514217376709
    10. '_range' → logprob: -17.2014217376709

Token 173: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006822285708039999
    2. '1' → logprob: -5.006822109222412
    3. '2' → logprob: -10.13182258605957
    4. ' ' → logprob: -10.25682258605957
    5. '   ' → logprob: -10.63182258605957
    6. ' (' → logprob: -12.13182258605957
    7. '(
' → logprob: -13.00682258605957
    8. '    ' → logprob: -16.50682258605957
    9. ',' → logprob: -17.25682258605957
    10. '[' → logprob: -17.38182258605957

Token 174: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005647066980600357
    2. ' ' → logprob: -5.7556471824646
    3. '2' → logprob: -6.0056471824646
    4. '   ' → logprob: -13.755646705627441
    5. 'self' → logprob: -15.255646705627441
    6. '
' → logprob: -17.005647659301758
    7. ')' → logprob: -17.130647659301758
    8. '    ' → logprob: -17.130647659301758
    9. '  ' → logprob: -17.380647659301758
    10. '(' → logprob: -18.130647659301758

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02441592328250408
    2. ' ,' → logprob: -3.774415969848633
    3. ')' → logprob: -7.649415969848633
    4. ' )' → logprob: -8.524415969848633
    5. '):' → logprob: -8.649415969848633
    6. ' ' → logprob: -9.274415969848633
    7. ' ):' → logprob: -9.524415969848633
    8. ',i' → logprob: -10.274415969848633
    9. '<|end|>' → logprob: -10.274415969848633
    10. ',len' → logprob: -11.024415969848633

Token 176: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25193649530410767
    2. ' self' → logprob: -1.501936435699463
    3. '    ' → logprob: -12.751936912536621
    4. '(self' → logprob: -13.626936912536621
    5. '	self' → logprob: -14.001936912536621
    6. '   ' → logprob: -14.126936912536621
    7. 'len' → logprob: -14.626936912536621
    8. '[self' → logprob: -14.876936912536621
    9. ' ' → logprob: -15.126936912536621
    10. '
' → logprob: -15.626936912536621

Token 177: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0024902839213609695
    2. 'length' → logprob: -6.002490520477295
    3. '.' → logprob: -12.252490043640137
    4. ' length' → logprob: -12.502490043640137
    5. 'ength' → logprob: -13.127490043640137
    6. ' .' → logprob: -13.502490043640137
    7. '	length' → logprob: -14.502490043640137
    8. '   ' → logprob: -14.627490043640137
    9. '_length' → logprob: -14.877490043640137
    10. '+' → logprob: -15.252490043640137

Token 178: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740884304046631
    2. '+' → logprob: -0.9740884304046631
    3. '):
' → logprob: -12.599088668823242
    4. '   ' → logprob: -13.099088668823242
    5. ' ' → logprob: -13.349088668823242
    6. ')' → logprob: -13.474088668823242
    7. ' +
' → logprob: -13.849088668823242
    8. '    ' → logprob: -14.349088668823242
    9. ' )' → logprob: -14.974088668823242
    10. '+
' → logprob: -15.224088668823242

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018151231110095978
    2. ' ' → logprob: -4.01815128326416
    3. '   ' → logprob: -14.14315128326416
    4. '    ' → logprob: -15.76815128326416
    5. '+' → logprob: -15.89315128326416
    6. '
' → logprob: -16.643150329589844
    7. 'self' → logprob: -16.768150329589844
    8. '  ' → logprob: -16.893150329589844
    9. '     ' → logprob: -16.893150329589844
    10. '       ' → logprob: -17.643150329589844

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014072739577386528
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.500141143798828
    4. '+' → logprob: -15.625141143798828
    5. '  ' → logprob: -16.375141143798828
    6. '
' → logprob: -17.000141143798828
    7. '    ' → logprob: -17.375141143798828
    8. '2' → logprob: -17.500141143798828
    9. '     ' → logprob: -18.125141143798828
    10. ')' → logprob: -18.625141143798828

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3882639408111572
    2. '):
' → logprob: -1.1382639408111572
    3. ' ):' → logprob: -7.638263702392578
    4. ')' → logprob: -7.763263702392578
    5. ' ):
' → logprob: -8.013263702392578
    6. '):
' → logprob: -9.013263702392578
    7. ':' → logprob: -10.638263702392578
    8. ' )' → logprob: -12.513263702392578
    9. ']:' → logprob: -13.513263702392578
    10. ':
' → logprob: -13.763263702392578

Token 182: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013313403353095055
    2. ' cache' → logprob: -5.138313293457031
    3. '       ' → logprob: -5.763313293457031
    4. '        ' → logprob: -6.638313293457031
    5. '            ' → logprob: -7.138313293457031
    6. '            
' → logprob: -7.763313293457031
    7. 'cache' → logprob: -7.763313293457031
    8. ',' → logprob: -8.763313293457031
    9. '   ' → logprob: -8.763313293457031
    10. '        
' → logprob: -8.888313293457031

Token 183: ' cache' (ID: 11956)
  Prédit: ' cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cache' → logprob: -0.036931704729795456
    2. 'cache' (adapté à ' cache') → logprob: -3.4119317531585693
    3. '        ' → logprob: -6.41193151473999
    4. '       ' → logprob: -6.66193151473999
    5. '    ' → logprob: -8.536931991577148
    6. '	cache' → logprob: -9.536931991577148
    7. '   ' → logprob: -10.411931991577148
    8. ' ' → logprob: -11.036931991577148
    9. '.cache' → logprob: -11.411931991577148
    10. '_cache' → logprob: -11.661931991577148

Token 184: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001935065840370953
    2. '[' → logprob: -6.251935005187988
    3. ' [' → logprob: -12.126935005187988
    4. '[
' → logprob: -14.751935005187988
    5. '[I' → logprob: -16.126935958862305
    6. '[j' → logprob: -16.626935958862305
    7. '\[' → logprob: -16.876935958862305
    8. '[index' → logprob: -17.001935958862305
    9. '   ' → logprob: -17.126935958862305
    10. '
' → logprob: -17.251935958862305

Token 185: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1114785373210907
    2. ']=' → logprob: -2.361478567123413
    3. '=' → logprob: -4.611478328704834
    4. ' =' → logprob: -7.111478328704834
    5. ' ]' → logprob: -7.861478328704834
    6. ']+=' → logprob: -10.736478805541992
    7. '=i' → logprob: -11.736478805541992
    8. ')' → logprob: -11.986478805541992
    9. ')=' → logprob: -12.111478805541992
    10. ' ' → logprob: -12.111478805541992

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4745651185512543
    2. '=' → logprob: -0.9745651483535767
    3. ' *=' → logprob: -7.724565029144287
    4. '*=' → logprob: -10.224565505981445
    5. '=i' → logprob: -12.974565505981445
    6. ' ' → logprob: -13.224565505981445
    7. ']=' → logprob: -13.724565505981445
    8. ']' → logprob: -13.849565505981445
    9. '	' → logprob: -14.099565505981445
    10. ' =
' → logprob: -14.349565505981445

Token 187: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.10021109133958817
    2. ' cache' → logprob: -2.3502111434936523
    3. 'i' → logprob: -12.975211143493652
    4. '	cache' → logprob: -13.725211143493652
    5. '.cache' → logprob: -14.600211143493652
    6. '(cache' → logprob: -15.600211143493652
    7. ' i' → logprob: -15.600211143493652
    8. '_cache' → logprob: -16.350210189819336
    9. 'c' → logprob: -18.850210189819336
    10. '/cache' → logprob: -18.975210189819336

Token 188: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. '[-' → logprob: -17.875001907348633
    4. '[
' → logprob: -17.875001907348633
    5. ' [' → logprob: -18.250001907348633
    6. 'i' → logprob: -18.250001907348633
    7. '(i' → logprob: -19.000001907348633
    8. '[I' → logprob: -19.000001907348633
    9. 'cache' → logprob: -19.375001907348633
    10. '
' → logprob: -20.000001907348633

Token 189: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0036838091909885406
    2. ' -' → logprob: -6.003684043884277
    3. ']' → logprob: -6.878684043884277
    4. '*' → logprob: -9.128684043884277
    5. '[i' → logprob: -10.753684043884277
    6. ' *' → logprob: -11.003684043884277
    7. '*i' → logprob: -11.378684043884277
    8. ']*' → logprob: -11.503684043884277
    9. 'i' → logprob: -12.503684043884277
    10. '-i' → logprob: -12.628684043884277

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. ']' → logprob: -16.2500057220459
    4. '```' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.5000057220459
    6. 'factor' → logprob: -18.0000057220459
    7. 'i' → logprob: -18.1250057220459
    8. '
' → logprob: -18.5000057220459
    9. ')' → logprob: -18.9375057220459
    10. '    ' → logprob: -19.1875057220459

Token 191: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5770584940910339
    2. '*' → logprob: -0.8270584940910339
    3. '*i' → logprob: -6.8270583152771
    4. ')' → logprob: -11.577058792114258
    5. ' ' → logprob: -11.952058792114258
    6. ')*' → logprob: -12.077058792114258
    7. ']' → logprob: -12.202058792114258
    8. ' ' → logprob: -12.452058792114258
    9. ']*' → logprob: -13.702058792114258
    10. '**' → logprob: -13.952058792114258

Token 192: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03283621743321419
    2. ' *' → logprob: -3.5328361988067627
    3. '*i' → logprob: -5.782836437225342
    4. ' ' → logprob: -14.782835960388184
    5. ' ' → logprob: -15.032835960388184
    6. '*
' → logprob: -15.782835960388184
    7. '**' → logprob: -16.0328369140625
    8. '*object' → logprob: -16.0328369140625
    9. '*

' → logprob: -18.0328369140625
    10. '*j' → logprob: -18.0328369140625

Token 193: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02975083328783512
    2. ' i' → logprob: -3.5297508239746094
    3. '	i' → logprob: -15.65475082397461
    4. ' ' → logprob: -15.90475082397461
    5. '   ' → logprob: -17.77975082397461
    6. '    ' → logprob: -18.90475082397461
    7. '  ' → logprob: -19.40475082397461
    8. '
' → logprob: -20.15475082397461
    9. ' ' → logprob: -20.15475082397461
    10. '(i' → logprob: -21.52975082397461

Token 194: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041014183312654495
    2. '
' → logprob: -3.2910141944885254
    3. 'return' → logprob: -6.041014194488525
    4. '    
' → logprob: -8.541013717651367
    5. '   ' → logprob: -9.416013717651367
    6. '        
' → logprob: -9.416013717651367
    7. ' return' → logprob: -9.541013717651367
    8. '
' → logprob: -10.291013717651367
    9. '  
' → logprob: -10.291013717651367
    10. ' ' → logprob: -11.541013717651367

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005947356694377959
    2. 'return' → logprob: -8.250595092773438
    3. '
' → logprob: -8.375595092773438
    4. '   ' → logprob: -10.000595092773438
    5. ' return' → logprob: -10.500595092773438
    6. '    
' → logprob: -12.000595092773438
    7. '        
' → logprob: -12.750595092773438
    8. '      ' → logprob: -12.875595092773438
    9. '    ' → logprob: -13.000595092773438
    10. ' ' → logprob: -13.250595092773438

Token 196: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1856580525636673
    2. ' return' → logprob: -2.1856579780578613
    3. '       ' → logprob: -2.9356579780578613
    4. '   ' → logprob: -6.060657978057861
    5. '
' → logprob: -6.560657978057861
    6. ' ' → logprob: -9.43565845489502
    7. '        
' → logprob: -10.06065845489502
    8. '    ' → logprob: -10.93565845489502
    9. '    
' → logprob: -11.56065845489502
    10. '  ' → logprob: -11.93565845489502

Token 197: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.0019286326132714748
    2. ' cache' → logprob: -6.251928806304932
    3. 'c' → logprob: -17.501928329467773
    4. '	cache' → logprob: -18.001928329467773
    5. 'cached' → logprob: -18.626928329467773
    6. '(cache' → logprob: -18.876928329467773
    7. '.cache' → logprob: -19.626928329467773
    8. 'cash' → logprob: -20.126928329467773
    9. ' cach' → logprob: -20.876928329467773
    10. 'Cache' → logprob: -21.376928329467773

Token 198: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20504328608512878
    2. '<|end|>' → logprob: -2.205043315887451
    3. '   ' → logprob: -3.205043315887451
    4. '    
' → logprob: -3.580043315887451
    5. '<|end|>' → logprob: -5.955043315887451
    6. '

' → logprob: -5.955043315887451
    7. '  
' → logprob: -7.955043315887451
    8. '\n' → logprob: -8.080042839050293
    9. '
    
' → logprob: -8.455042839050293
    10. ' 
' → logprob: -9.080042839050293

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4726759195327759
    2. '    
' → logprob: -1.0976759195327759
    3. 'def' → logprob: -3.2226758003234863
    4. '  
' → logprob: -7.472675800323486
    5. ' def' → logprob: -7.597675800323486
    6. '
' → logprob: -7.847675800323486
    7. '@' → logprob: -7.972675800323486
    8. ' 
' → logprob: -8.097676277160645
    9. '<|end|>' → logprob: -8.597676277160645
    10. '    
    
' → logprob: -8.847676277160645

Token 200: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.059114035218954086
    2. '@' → logprob: -3.0591139793395996
    3. ' def' → logprob: -5.0591139793396
    4. '@property' → logprob: -6.9341139793396
    5. '_factor' → logprob: -7.3091139793396
    6. '_cached' → logprob: -7.4341139793396
    7. '_cache' → logprob: -7.8091139793396
    8. '    
' → logprob: -7.9341139793396
    9. '   ' → logprob: -8.059114456176758
    10. 'factor' → logprob: -8.684114456176758

Token 201: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.32676878571510315
    2. ' count' → logprob: -1.3267687559127808
    3. '_count' → logprob: -5.45176887512207
    4. '_' → logprob: -5.95176887512207
    5. ' calculate' → logprob: -6.07676887512207
    6. 'count' → logprob: -6.45176887512207
    7. ' number' → logprob: -6.95176887512207
    8. ' compute' → logprob: -7.70176887512207
    9. ' get' → logprob: -7.82676887512207
    10. ' num' → logprob: -8.07676887512207

Token 202: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9827149510383606
    2. 'half' → logprob: -1.1077148914337158
    3. 'calculate' → logprob: -2.107714891433716
    4. 'pal' → logprob: -2.857714891433716
    5. 'num' → logprob: -3.482714891433716
    6. 'compute' → logprob: -3.607714891433716
    7. 'factor' → logprob: -3.607714891433716
    8. 'can' → logprob: -5.232715129852295
    9. 'possible' → logprob: -5.232715129852295
    10. 'calc' → logprob: -5.232715129852295

Token 203: '_half' (ID: 105284)
  Prédit: '_pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.2004919797182083
    2. '_' → logprob: -1.825492024421692
    3. '_factor' → logprob: -4.200491905212402
    4. '_tokens' → logprob: -6.450491905212402
    5. '_token' → logprob: -6.700491905212402
    6. '_per' → logprob: -6.950491905212402
    7. '_possible' → logprob: -7.700491905212402
    8. '_f' → logprob: -8.950491905212402
    9. '_sub' → logprob: -9.075491905212402
    10. '_occ' → logprob: -9.200491905212402

Token 204: '_an' (ID: 47921)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1616959571838379
    2. '_pal' → logprob: -1.911695957183838
    3. '_chars' → logprob: -8.03669548034668
    4. '_per' → logprob: -8.41169548034668
    5. '_factor' → logprob: -8.91169548034668
    6. '_part' → logprob: -9.16169548034668
    7. '_tokens' → logprob: -9.16169548034668
    8. '_string' → logprob: -9.16169548034668
    9. '_occ' → logprob: -9.28669548034668
    10. '_p' → logprob: -9.66169548034668

Token 205: 'agrams' (ID: 54218)
  Prédit: 'agrams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agrams' → logprob: -0.25929585099220276
    2. 'agram' → logprob: -2.00929594039917
    3. 'a' → logprob: -2.38429594039917
    4. 'al' → logprob: -7.50929594039917
    5. '_pal' → logprob: -8.259295463562012
    6. '_' → logprob: -8.509295463562012
    7. 'agr' → logprob: -8.884295463562012
    8. '_a' → logprob: -8.884295463562012
    9. 's' → logprob: -9.134295463562012
    10. 'grams' → logprob: -9.634295463562012

Token 206: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0031989887356758118
    2. '(' → logprob: -5.753199100494385
    3. ' (' → logprob: -10.878198623657227
    4. '(
' → logprob: -13.878198623657227
    5. '(s' → logprob: -14.253198623657227
    6. 'self' → logprob: -14.628198623657227
    7. '   ' → logprob: -16.253198623657227
    8. '(Self' → logprob: -17.253198623657227
    9. '(

' → logprob: -17.378198623657227
    10. '(sel' → logprob: -17.503198623657227

Token 207: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3572826385498047
    2. '(' → logprob: -2.7322826385498047
    3. 'self' → logprob: -2.8572826385498047
    4. '_' → logprob: -3.1072826385498047
    5. ')' → logprob: -3.2322826385498047
    6. ')(' → logprob: -3.3572826385498047
    7. '):' → logprob: -3.6072826385498047
    8. ')_' → logprob: -4.732282638549805
    9. '   ' → logprob: -5.357282638549805
    10. '_(' → logprob: -5.732282638549805

Token 208: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.22964322566986084
    2. ' half' → logprob: -1.6046432256698608
    3. 'char' → logprob: -6.60464334487915
    4. ')' → logprob: -7.10464334487915
    5. ' char' → logprob: -7.35464334487915
    6. 'chars' → logprob: -8.229642868041992
    7. 'counts' → logprob: -8.354642868041992
    8. ' counts' → logprob: -8.729642868041992
    9. ' chars' → logprob: -8.979642868041992
    10. 'self' → logprob: -8.979642868041992

Token 209: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.6242046356201172
    2. '):' → logprob: -1.6242046356201172
    3. '_counter' → logprob: -1.7492046356201172
    4. '_' → logprob: -3.124204635620117
    5. '_chars' → logprob: -3.374204635620117
    6. '_freq' → logprob: -5.624204635620117
    7. ')' → logprob: -5.999204635620117
    8. ':' → logprob: -6.124204635620117
    9. '_count' → logprob: -6.999204635620117
    10. '_mult' → logprob: -7.124204635620117

Token 210: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10314367711544037
    2. '):' → logprob: -2.3531436920166016
    3. ')' → logprob: -6.103143692016602
    4. '):
' → logprob: -8.478143692016602
    5. ' ):' → logprob: -8.603143692016602
    6. ' :' → logprob: -8.853143692016602
    7. '   ' → logprob: -9.478143692016602
    8. '       ' → logprob: -10.353143692016602
    9. '}:' → logprob: -11.478143692016602
    10. ' )' → logprob: -11.478143692016602

Token 211: ' Tuple' (ID: 50841)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.013357741758227348
    2. 'Tuple' → logprob: -4.638357639312744
    3. ')' → logprob: -6.138357639312744
    4. 'Counter' → logprob: -7.138357639312744
    5. '):' → logprob: -8.513358116149902
    6. ' Dict' → logprob: -8.638358116149902
    7. 'dict' → logprob: -9.263358116149902
    8. '   ' → logprob: -9.638358116149902
    9. '):
' → logprob: -10.263358116149902
    10. 'List' → logprob: -10.763358116149902

Token 212: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.3856492842023727e-06
    2. 'int' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.125000953674316
    4. '[' → logprob: -15.625000953674316
    5. '[Int' → logprob: -15.625000953674316
    6. '):' → logprob: -16.500001907348633
    7. ',int' → logprob: -16.625001907348633
    8. ')' → logprob: -16.625001907348633
    9. ']):' → logprob: -17.625001907348633
    10. '])' → logprob: -17.625001907348633

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6777083277702332
    2. ']):' → logprob: -0.9277083277702332
    3. '])' → logprob: -2.927708387374878
    4. ']):
' → logprob: -3.302708387374878
    5. '],' → logprob: -5.552708148956299
    6. ']' → logprob: -6.802708148956299
    7. ',...' → logprob: -6.927708148956299
    8. '[' → logprob: -9.052708625793457
    9. '):' → logprob: -9.427708625793457
    10. ']:' → logprob: -10.052708625793457

Token 214: ' ...' (ID: 2550)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.08759810030460358
    2. '])' → logprob: -3.2125980854034424
    3. ']):' → logprob: -3.5875980854034424
    4. ']' → logprob: -5.3375983238220215
    5. ' ...' → logprob: -5.4625983238220215
    6. ']):
' → logprob: -5.8375983238220215
    7. '],' → logprob: -6.0875983238220215
    8. 'int' → logprob: -7.3375983238220215
    9. '...]' → logprob: -7.3375983238220215
    10. ')' → logprob: -9.087597846984863

Token 215: '],' (ID: 2155)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']):' → logprob: -1.0113914012908936
    2. ')' → logprob: -1.1363914012908936
    3. '])' → logprob: -1.6363914012908936
    4. ']):
' → logprob: -2.5113914012908936
    5. '):' → logprob: -3.6363914012908936
    6. ']' → logprob: -4.636391639709473
    7. '):
' → logprob: -6.011391639709473
    8. '>):' → logprob: -8.636391639709473
    9. ')]' → logprob: -8.886391639709473
    10. '   ' → logprob: -8.886391639709473

Token 216: ' fact' (ID: 2840)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1243863105773926
    2. ' cache' → logprob: -1.4993863105773926
    3. ' memo' → logprob: -1.9993863105773926
    4. ' factorial' → logprob: -2.2493863105773926
    5. ' )' → logprob: -2.3743863105773926
    6. 'cache' → logprob: -3.2493863105773926
    7. 'memo' → logprob: -4.624386310577393
    8. ' depth' → logprob: -4.749386310577393
    9. ' pos' → logprob: -4.874386310577393
    10. 'factor' → logprob: -4.874386310577393

Token 217: '_cache' (ID: 27045)
  Prédit: 'orial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orial' → logprob: -0.32260847091674805
    2. 'or' → logprob: -1.572608470916748
    3. '_cache' → logprob: -3.572608470916748
    4. 'ory' → logprob: -3.822608470916748
    5. '[' → logprob: -5.322608470916748
    6. ')' → logprob: -5.447608470916748
    7. 's' → logprob: -5.947608470916748
    8. ']' → logprob: -6.572608470916748
    9. 'orical' → logprob: -6.697608470916748
    10. 'oral' → logprob: -7.072608470916748

Token 218: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019825728610157967
    2. ')' → logprob: -4.8948259353637695
    3. ':' → logprob: -4.8948259353637695
    4. ',' → logprob: -5.6448259353637695
    5. ' ):' → logprob: -7.0198259353637695
    6. '):
' → logprob: -8.64482593536377
    7. ' )' → logprob: -11.64482593536377
    8. ' :' → logprob: -11.76982593536377
    9. '):
' → logprob: -12.14482593536377
    10. '   ' → logprob: -12.14482593536377

Token 219: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018367081880569458
    2. '->' → logprob: -4.143367290496826
    3. ' ->' → logprob: -6.393367290496826
    4. '):' → logprob: -8.518366813659668
    5. '       ' → logprob: -8.893366813659668
    6. '   ' → logprob: -9.018366813659668
    7. ':
' → logprob: -9.768366813659668
    8. ')' → logprob: -9.893366813659668
    9. ')->' → logprob: -10.143366813659668
    10. '():' → logprob: -10.143366813659668

Token 220: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020520923135336488
    2. ' int' → logprob: -8.500205039978027
    3. '   ' → logprob: -13.750205039978027
    4. '[int' → logprob: -14.875205039978027
    5. '(int' → logprob: -16.750205993652344
    6. '    ' → logprob: -17.250205993652344
    7. '       ' → logprob: -17.250205993652344
    8. '  ' → logprob: -17.375205993652344
    9. ':int' → logprob: -17.625205993652344
    10. '<int' → logprob: -18.125205993652344

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010385256027802825
    2. ':
' → logprob: -7.251038551330566
    3. '):' → logprob: -8.501038551330566
    4. '       ' → logprob: -9.376038551330566
    5. '():' → logprob: -10.626038551330566
    6. '   ' → logprob: -11.501038551330566
    7. '):
' → logprob: -13.876038551330566
    8. ']:' → logprob: -14.126038551330566
    9. ' :' → logprob: -14.251038551330566
    10. ')' → logprob: -14.251038551330566

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007803229382261634
    2. ':' → logprob: -7.75078010559082
    3. '        
' → logprob: -9.37578010559082
    4. ')' → logprob: -9.50078010559082
    5. '
' → logprob: -10.37578010559082
    6. '   ' → logprob: -10.75078010559082
    7. '    
' → logprob: -11.00078010559082
    8. '    ' → logprob: -11.25078010559082
    9. '[' → logprob: -11.25078010559082
    10. '       
' → logprob: -11.50078010559082

Token 223: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18979299068450928
    2. 'numer' → logprob: -2.064793109893799
    3. 'den' → logprob: -3.689793109893799
    4. ' numerator' → logprob: -4.189793109893799
    5. 'total' → logprob: -6.564793109893799
    6. ' denom' → logprob: -6.814793109893799
    7. ' denominator' → logprob: -6.814793109893799
    8. 'half' → logprob: -7.439793109893799
    9. 'result' → logprob: -7.564793109893799
    10. 'n' → logprob: -8.06479263305664

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08614630997180939
    2. 'numer' → logprob: -2.711146354675293
    3. 'den' → logprob: -4.961146354675293
    4. ' numerator' → logprob: -5.086146354675293
    5. 'n' → logprob: -7.211146354675293
    6. 'if' → logprob: -7.336146354675293
    7. 'num' → logprob: -7.961146354675293
    8. 'total' → logprob: -8.211146354675293
    9. ' denom' → logprob: -8.586146354675293
    10. ' if' → logprob: -8.836146354675293

Token 225: ' Compute' (ID: 45438)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.8680280447006226
    2. 'den' → logprob: -1.2430280447006226
    3. '       ' → logprob: -1.8680280447006226
    4. ' numerator' → logprob: -2.743028163909912
    5. 'total' → logprob: -3.118028163909912
    6. ' denominator' → logprob: -4.368028163909912
    7. 'result' → logprob: -5.993028163909912
    8. 'n' → logprob: -6.118028163909912
    9. ' denom' → logprob: -6.118028163909912
    10. 'num' → logprob: -6.118028163909912

Token 226: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4821392297744751
    2. ' numerator' → logprob: -1.857139229774475
    3. '       ' → logprob: -2.2321391105651855
    4. 'the' → logprob: -2.4821391105651855
    5. 'numer' → logprob: -3.8571391105651855
    6. ' denominator' → logprob: -5.8571391105651855
    7. ' total' → logprob: -6.3571391105651855
    8. ' factorial' → logprob: -6.6071391105651855
    9. ' ways' → logprob: -6.7321391105651855
    10. 'half' → logprob: -6.9821391105651855

Token 227: ' number' (ID: 2086)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.862568736076355
    2. ' numerator' → logprob: -0.862568736076355
    3. 'total' → logprob: -2.3625688552856445
    4. ' total' → logprob: -3.2375688552856445
    5. 'result' → logprob: -4.7375688552856445
    6. 'den' → logprob: -5.4875688552856445
    7. 'half' → logprob: -5.9875688552856445
    8. 'num' → logprob: -6.2375688552856445
    9. ' denominator' → logprob: -6.4875688552856445
    10. ' result' → logprob: -6.9875688552856445

Token 228: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.1132664829492569
    2. ' of' → logprob: -2.2382664680480957
    3. '    ' → logprob: -8.988266944885254
    4. '  ' → logprob: -9.988266944885254
    5. '"' → logprob: -10.113266944885254
    6. 'tokens' → logprob: -10.363266944885254
    7. ' ' → logprob: -10.613266944885254
    8. '[' → logprob: -10.613266944885254
    9. 'token' → logprob: -11.113266944885254
    10. '      ' → logprob: -11.238266944885254

Token 229: ' distinct' (ID: 16913)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -1.214668869972229
    2. ' half' → logprob: -1.339668869972229
    3. 'half' → logprob: -1.589668869972229
    4. ' pal' → logprob: -1.964668869972229
    5. 'unique' → logprob: -3.2146687507629395
    6. 'pal' → logprob: -3.9646687507629395
    7. ' distinct' → logprob: -4.4646687507629395
    8. ' ways' → logprob: -4.8396687507629395
    9. 'distinct' → logprob: -5.0896687507629395
    10. ' possible' → logprob: -5.2146687507629395

Token 230: ' an' (ID: 448)
  Prédit: ' pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pal' → logprob: -0.231469988822937
    2. 'pal' → logprob: -2.2314701080322266
    3. ' half' → logprob: -3.2314701080322266
    4. ' permutations' → logprob: -3.6064701080322266
    5. ' an' → logprob: -4.356470108032227
    6. 'half' → logprob: -4.481470108032227
    7. 'an' → logprob: -5.481470108032227
    8. ' arrangements' → logprob: -6.481470108032227
    9. ' palindrome' → logprob: -6.481470108032227
    10. ' ways' → logprob: -6.981470108032227

Token 231: 'agrams' (ID: 54218)
  Prédit: 'agrams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agrams' → logprob: -0.006992773152887821
    2. 'a' → logprob: -5.131992816925049
    3. 'agram' → logprob: -7.131992816925049
    4. 'al' → logprob: -9.25699234008789
    5. '```' → logprob: -9.88199234008789
    6. 'agr' → logprob: -10.25699234008789
    7. 's' → logprob: -10.88199234008789
    8. 'grams' → logprob: -11.25699234008789
    9. '   ' → logprob: -11.88199234008789
    10. 'AGRAM' → logprob: -12.25699234008789

Token 232: ' given' (ID: 4335)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8878101706504822
    2. '<|end|>' → logprob: -1.262810230255127
    3. ' possible' → logprob: -1.512810230255127
    4. ' that' → logprob: -3.262810230255127
    5. ' for' → logprob: -3.887810230255127
    6. '       ' → logprob: -4.762810230255127
    7. 'possible' → logprob: -5.012810230255127
    8. '<|end|>' → logprob: -5.637810230255127
    9. 'of' → logprob: -7.137810230255127
    10. 'for' → logprob: -7.262810230255127

Token 233: ' counts' (ID: 28991)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03003024496138096
    2. ' half' → logprob: -4.155030250549316
    3. 'the' → logprob: -4.530030250549316
    4. ' that' → logprob: -6.905030250549316
    5. ' self' → logprob: -7.155030250549316
    6. 'half' → logprob: -7.155030250549316
    7. 'self' → logprob: -9.280030250549316
    8. ' a' → logprob: -9.405030250549316
    9. ' their' → logprob: -10.030030250549316
    10. ' only' → logprob: -10.280030250549316

Token 234: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.11951568722724915
    2. '<|end|>' → logprob: -2.2445156574249268
    3. 'of' → logprob: -5.244515895843506
    4. '<|end|>' → logprob: -7.244515895843506
    5. ',' → logprob: -9.119515419006348
    6. ')' → logprob: -9.119515419006348
    7. '   ' → logprob: -9.494515419006348
    8. ' ' → logprob: -9.744515419006348
    9. ' for' → logprob: -10.119515419006348
    10. ' in' → logprob: -10.494515419006348

Token 235: ' half' (ID: 6375)
  Prédit: ' characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -1.4222365617752075
    2. 'characters' → logprob: -1.9222365617752075
    3. ' the' → logprob: -2.172236442565918
    4. 'each' → logprob: -2.297236442565918
    5. ' tokens' → logprob: -2.672236442565918
    6. ' each' → logprob: -2.672236442565918
    7. 'tokens' → logprob: -2.672236442565918
    8. 'the' → logprob: -3.047236442565918
    9. ' half' → logprob: -3.047236442565918
    10. '<|end|>' → logprob: -3.047236442565918

Token 236: ' the' (ID: 290)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.049271538853645325
    2. '<|end|>' → logprob: -3.549271583557129
    3. '_tokens' → logprob: -5.424271583557129
    4. ')' → logprob: -5.424271583557129
    5. ' of' → logprob: -6.299271583557129
    6. '_chars' → logprob: -6.299271583557129
    7. ' _' → logprob: -6.299271583557129
    8. '_token' → logprob: -6.924271583557129
    9. '   ' → logprob: -7.424271583557129
    10. 'tokens' → logprob: -7.549271583557129

Token 237: ' palindrome' (ID: 160469)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.1693926453590393
    2. ' characters' → logprob: -2.2943925857543945
    3. 'chars' → logprob: -3.5443925857543945
    4. '<|end|>' → logprob: -4.1693925857543945
    5. 'tokens' → logprob: -5.6693925857543945
    6. 'letters' → logprob: -5.9193925857543945
    7. 'alphabet' → logprob: -6.1693925857543945
    8. ' letters' → logprob: -6.7943925857543945
    9. ' chars' → logprob: -8.294392585754395
    10. 'token' → logprob: -8.544392585754395

Token 238: ' part' (ID: 997)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1352155208587646
    2. ' characters' → logprob: -1.2602155208587646
    3. 's' → logprob: -1.7602155208587646
    4. ' parts' → logprob: -2.7602155208587646
    5. '       ' → logprob: -3.5102155208587646
    6. 'characters' → logprob: -3.6352155208587646
    7. ' of' → logprob: -3.8852155208587646
    8. ' tokens' → logprob: -4.260215759277344
    9. 'tokens' → logprob: -4.260215759277344
    10. ' letters' → logprob: -4.385215759277344

Token 239: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04787103459239006
    2. ',' → logprob: -4.422871112823486
    3. '.' → logprob: -4.672871112823486
    4. '<|end|>' → logprob: -5.047871112823486
    5. ')' → logprob: -5.172871112823486
    6. ' of' → logprob: -5.422871112823486
    7. 'tokens' → logprob: -6.047871112823486
    8. ':' → logprob: -6.797871112823486
    9. ' tokens' → logprob: -7.297871112823486
    10. '...' → logprob: -7.547871112823486

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01188939530402422
    2. ')' → logprob: -4.511889457702637
    3. '   ' → logprob: -8.761889457702637
    4. '        
' → logprob: -9.136889457702637
    5. '#' → logprob: -9.386889457702637
    6. '    ' → logprob: -9.511889457702637
    7. ' 
' → logprob: -9.511889457702637
    8. '):' → logprob: -10.011889457702637
    9. ':' → logprob: -10.136889457702637
    10. ' )' → logprob: -10.261889457702637

Token 241: ' half' (ID: 6375)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01690947450697422
    2. ' numerator' → logprob: -5.141909599304199
    3. 'numer' → logprob: -5.891909599304199
    4. ')' → logprob: -5.891909599304199
    5. ' denominator' → logprob: -6.766909599304199
    6. 'result' → logprob: -6.891909599304199
    7. 'n' → logprob: -7.266909599304199
    8. 'div' → logprob: -7.766909599304199
    9. '   ' → logprob: -8.1419095993042
    10. '        
' → logprob: -8.3919095993042

Token 242: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.00010902655776590109
    2. '_' → logprob: -9.25010871887207
    3. ' _' → logprob: -12.62510871887207
    4. ')' → logprob: -13.00010871887207
    5. ')_' → logprob: -13.00010871887207
    6. ''_' → logprob: -14.12510871887207
    7. '_c' → logprob: -14.25010871887207
    8. '_count' → logprob: -14.37510871887207
    9. '_s' → logprob: -14.62510871887207
    10. 's' → logprob: -15.25010871887207

Token 243: ' is' (ID: 382)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11875834316015244
    2. ':' → logprob: -2.2437584400177
    3. ')' → logprob: -5.868758201599121
    4. ',' → logprob: -6.618758201599121
    5. '):
' → logprob: -6.618758201599121
    6. ' ):' → logprob: -8.493758201599121
    7. '=' → logprob: -9.368758201599121
    8. ')=' → logprob: -10.868758201599121
    9. '<|end|>' → logprob: -10.868758201599121
    10. ' =' → logprob: -11.118758201599121

Token 244: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3449062705039978
    2. 'a' → logprob: -1.7199063301086426
    3. ' the' → logprob: -2.9699063301086426
    4. 'the' → logprob: -2.9699063301086426
    5. 'tuple' → logprob: -5.594906330108643
    6. ' tuple' → logprob: -5.719906330108643
    7. '...' → logprob: -7.719906330108643
    8. 'Tuple' → logprob: -7.844906330108643
    9. ' Tuple' → logprob: -7.969906330108643
    10. '   ' → logprob: -8.219905853271484

Token 245: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.006604764610528946
    2. ' tuple' → logprob: -5.1316046714782715
    3. 'Tuple' → logprob: -7.5066046714782715
    4. 'sequence' → logprob: -9.63160514831543
    5. 'Counter' → logprob: -10.88160514831543
    6. 'counter' → logprob: -11.13160514831543
    7. '(tuple' → logprob: -12.13160514831543
    8. '   ' → logprob: -12.38160514831543
    9. 'list' → logprob: -12.75660514831543
    10. 'mult' → logprob: -12.88160514831543

Token 246: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6607033014297485
    2. '<|end|>' → logprob: -0.9107033014297485
    3. ')' → logprob: -2.785703182220459
    4. '[int' → logprob: -4.660703182220459
    5. '<|end|>' → logprob: -6.035703182220459
    6. ',' → logprob: -6.160703182220459
    7. 'of' → logprob: -6.160703182220459
    8. '   ' → logprob: -6.285703182220459
    9. '[' → logprob: -7.285703182220459
    10. ' )' → logprob: -8.785703659057617

Token 247: ' counts' (ID: 28991)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.5790690183639526
    2. 'int' → logprob: -1.3290690183639526
    3. 'ints' → logprob: -2.204069137573242
    4. 'counts' → logprob: -3.204069137573242
    5. ' integers' → logprob: -3.829069137573242
    6. 'integer' → logprob: -6.829069137573242
    7. ' counts' → logprob: -7.329069137573242
    8. ' int' → logprob: -8.704069137573242
    9. ' ints' → logprob: -9.704069137573242
    10. '[int' → logprob: -9.954069137573242

Token 248: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26470670104026794
    2. '):' → logprob: -2.014706611633301
    3. '<|end|>' → logprob: -2.889706611633301
    4. ',' → logprob: -3.514706611633301
    5. ' )' → logprob: -5.764706611633301
    6. '   ' → logprob: -5.764706611633301
    7. ' of' → logprob: -6.514706611633301
    8. ' for' → logprob: -7.014706611633301
    9. '),' → logprob: -7.014706611633301
    10. ' ,' → logprob: -7.014706611633301

Token 249: ' each' (ID: 2454)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.9807423949241638
    2. 'each' → logprob: -1.2307424545288086
    3. ' characters' → logprob: -1.6057424545288086
    4. ' each' → logprob: -2.8557424545288086
    5. 'the' → logprob: -3.2307424545288086
    6. ' the' → logprob: -3.6057424545288086
    7. 'chars' → logprob: -5.480742454528809
    8. 'letters' → logprob: -6.480742454528809
    9. ' letters' → logprob: -7.480742454528809
    10. 'elements' → logprob: -8.105742454528809

Token 250: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.5783127546310425
    2. ' character' → logprob: -0.9533127546310425
    3. 'token' → logprob: -3.703312873840332
    4. 'char' → logprob: -4.078312873840332
    5. '<|end|>' → logprob: -5.953312873840332
    6. 'alphabet' → logprob: -6.078312873840332
    7. ' token' → logprob: -6.328312873840332
    8. ' element' → logprob: -6.328312873840332
    9. 'element' → logprob: -7.078312873840332
    10. 'characters' → logprob: -7.453312873840332

Token 251: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7698378562927246
    2. '<|end|>' → logprob: -1.0198378562927246
    3. ',' → logprob: -1.8948378562927246
    4. ' in' → logprob: -5.269837856292725
    5. '<|end|>' → logprob: -5.269837856292725
    6. '   ' → logprob: -5.644837856292725
    7. '.' → logprob: -6.019837856292725
    8. ' )' → logprob: -6.269837856292725
    9. ' ,' → logprob: -7.019837856292725
    10. '),' → logprob: -7.144837856292725

Token 252: ' half' (ID: 6375)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14077462255954742
    2. ' half' → logprob: -2.515774726867676
    3. 'the' → logprob: -3.015774726867676
    4. 'half' → logprob: -6.765774726867676
    5. ' that' → logprob: -9.265774726867676
    6. '<|end|>' → logprob: -9.390774726867676
    7. ' ' → logprob: -10.140774726867676
    8. ' one' → logprob: -10.265774726867676
    9. ' their' → logprob: -11.015774726867676
    10. ' a' → logprob: -11.140774726867676

Token 253: ' the' (ID: 290)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0650438070297241
    2. ')' → logprob: -1.1900438070297241
    3. ' the' → logprob: -1.3150438070297241
    4. '   ' → logprob: -2.6900439262390137
    5. 'the' → logprob: -5.065043926239014
    6. ' )' → logprob: -6.190043926239014
    7. '):' → logprob: -6.565043926239014
    8. '_pal' → logprob: -6.815043926239014
    9. '_' → logprob: -7.190043926239014
    10. '<|end|>' → logprob: -7.315043926239014

Token 254: ' string' (ID: 1621)
  Prédit: ' palindrome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' palindrome' → logprob: -0.10651227831840515
    2. 'pal' → logprob: -2.6065123081207275
    3. ' string' → logprob: -4.106512069702148
    4. 'string' → logprob: -4.981512069702148
    5. ' length' → logprob: -6.606512069702148
    6. 'length' → logprob: -6.856512069702148
    7. ' pal' → logprob: -8.106512069702148
    8. 'substring' → logprob: -8.856512069702148
    9. ' input' → logprob: -9.356512069702148
    10. '       ' → logprob: -9.481512069702148

Token 255: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21960684657096863
    2. '):' → logprob: -1.719606876373291
    3. '   ' → logprob: -4.469606876373291
    4. '       ' → logprob: -6.594606876373291
    5. '):
' → logprob: -6.594606876373291
    6. '<|end|>' → logprob: -6.719606876373291
    7. 's' → logprob: -7.719606876373291
    8. '.' → logprob: -7.719606876373291
    9. ':' → logprob: -8.094606399536133
    10. ')
' → logprob: -8.219606399536133

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037575671449303627
    2. ')' → logprob: -6.003757476806641
    3. '        
' → logprob: -8.50375747680664
    4. 'num' → logprob: -8.62875747680664
    5. 'n' → logprob: -8.87875747680664
    6. '   ' → logprob: -9.00375747680664
    7. '<|end|>' → logprob: -9.12875747680664
    8. 'result' → logprob: -9.25375747680664
    9. 'return' → logprob: -10.50375747680664
    10. '        ' → logprob: -10.75375747680664

Token 257: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03321947529911995
    2. ')' → logprob: -3.783219575881958
    3. ' numerator' → logprob: -6.283219337463379
    4. '   ' → logprob: -6.783219337463379
    5. '\n' → logprob: -6.783219337463379
    6. ' denominator' → logprob: -7.033219337463379
    7. '):
' → logprob: -7.158219337463379
    8. 'result' → logprob: -7.158219337463379
    9. '        
' → logprob: -7.783219337463379
    10. '):' → logprob: -7.908219337463379

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00437885569408536
    2. 'numer' → logprob: -6.129378795623779
    3. 'total' → logprob: -7.129378795623779
    4. ' numerator' → logprob: -7.504378795623779
    5. ' total' → logprob: -8.754379272460938
    6. 'den' → logprob: -9.254379272460938
    7. 'num' → logprob: -9.379379272460938
    8. '   ' → logprob: -9.754379272460938
    9. 'count' → logprob: -9.879379272460938
    10. 'fact' → logprob: -10.004379272460938

Token 259: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.4110718071460724
    2. 'numer' → logprob: -1.66107177734375
    3. 'half' → logprob: -2.28607177734375
    4. ' numerator' → logprob: -4.03607177734375
    5. 'result' → logprob: -4.53607177734375
    6. ' total' → logprob: -5.53607177734375
    7. 'n' → logprob: -5.78607177734375
    8. 'num' → logprob: -5.78607177734375
    9. '       ' → logprob: -5.91107177734375
    10. 'den' → logprob: -6.66107177734375

Token 260: '_half' (ID: 105284)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.9694452881813049
    2. '=' → logprob: -1.7194452285766602
    3. '_len' → logprob: -1.9694452285766602
    4. '_count' → logprob: -2.21944522857666
    5. '_length' → logprob: -2.34444522857666
    6. '_' → logprob: -2.96944522857666
    7. ' =' → logprob: -3.46944522857666
    8. '_half' → logprob: -4.71944522857666
    9. '_factor' → logprob: -5.84444522857666
    10. '_letters' → logprob: -7.46944522857666

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1312874555587769
    2. '=' → logprob: -1.3812874555587769
    3. '_len' → logprob: -1.5062874555587769
    4. '_length' → logprob: -1.8812874555587769
    5. '_chars' → logprob: -3.2562875747680664
    6. '_count' → logprob: -4.756287574768066
    7. '_' → logprob: -5.631287574768066
    8. '=len' → logprob: -7.381287574768066
    9. '_letters' → logprob: -8.131287574768066
    10. 'length' → logprob: -9.256287574768066

Token 262: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20145894587039948
    2. ' sum' → logprob: -1.7014589309692383
    3. '(sum' → logprob: -11.326458930969238
    4. 'fact' → logprob: -11.451458930969238
    5. '   ' → logprob: -11.951458930969238
    6. 'factor' → logprob: -12.076458930969238
    7. '       ' → logprob: -12.951458930969238
    8. '    ' → logprob: -13.076458930969238
    9. '	sum' → logprob: -13.701458930969238
    10. ' ' → logprob: -13.701458930969238

Token 263: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003907543432433158
    2. 'half' → logprob: -7.875390529632568
    3. '(
' → logprob: -11.875391006469727
    4. '(count' → logprob: -13.625391006469727
    5. '()' → logprob: -14.375391006469727
    6. '(i' → logprob: -14.375391006469727
    7. '_half' → logprob: -14.625391006469727
    8. 'hal' → logprob: -15.125391006469727
    9. ' half' → logprob: -15.750391006469727
    10. '(h' → logprob: -15.875391006469727

Token 264: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0002762326330412179
    2. ' half' → logprob: -8.625276565551758
    3. ')' → logprob: -10.000276565551758
    4. 'hal' → logprob: -10.125276565551758
    5. '(i' → logprob: -12.875276565551758
    6. '(' → logprob: -13.250276565551758
    7. 'h' → logprob: -13.375276565551758
    8. 'i' → logprob: -13.500276565551758
    9. 'count' → logprob: -13.625276565551758
    10. '_half' → logprob: -14.375276565551758

Token 265: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -6.749814019713085e-06
    2. '_' → logprob: -12.625006675720215
    3. ')_' → logprob: -13.250006675720215
    4. ')' → logprob: -13.750006675720215
    5. 'counts' → logprob: -16.37500762939453
    6. '_count' → logprob: -16.62500762939453
    7. '_chars' → logprob: -16.75000762939453
    8. '_)' → logprob: -16.75000762939453
    9. '_c' → logprob: -17.00000762939453
    10. ' _' → logprob: -17.25000762939453

Token 266: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0058105322532355785
    2. ')
' → logprob: -5.255810737609863
    3. ' )' → logprob: -7.505810737609863
    4. ' )
' → logprob: -10.880810737609863
    5. ')

' → logprob: -12.380810737609863
    6. ')
' → logprob: -14.005810737609863
    7. '<|end|>' → logprob: -14.130810737609863
    8. '       ' → logprob: -15.005810737609863
    9. '   ' → logprob: -15.380810737609863
    10. '
' → logprob: -15.380810737609863

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025515396147966385
    2. ')' → logprob: -4.025515556335449
    3. '
' → logprob: -6.025515556335449
    4. 'factor' → logprob: -6.275515556335449
    5. 'fact' → logprob: -7.525515556335449
    6. '        
' → logprob: -7.650515556335449
    7. '<|end|>' → logprob: -7.775515556335449
    8. 'result' → logprob: -8.15051555633545
    9. ' factorial' → logprob: -8.27551555633545
    10. 'return' → logprob: -8.77551555633545

Token 268: ' numerator' (ID: 149054)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1950879096984863
    2. ' numerator' → logprob: -1.3200879096984863
    3. 'numer' → logprob: -1.4450879096984863
    4. 'res' → logprob: -2.4450879096984863
    5. ' result' → logprob: -3.1950879096984863
    6. 'num' → logprob: -3.5700879096984863
    7. ' res' → logprob: -3.9450879096984863
    8. 'den' → logprob: -4.820087909698486
    9. '       ' → logprob: -6.195087909698486
    10. ' num' → logprob: -6.320087909698486

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407791018486023
    2. '=' → logprob: -0.9740779399871826
    3. '=f' → logprob: -13.974078178405762
    4. ' =
' → logprob: -17.724077224731445
    5. '=

' → logprob: -17.974077224731445
    6. 'factor' → logprob: -18.724077224731445
    7. ' ' → logprob: -18.724077224731445
    8. '=
' → logprob: -18.724077224731445
    9. '=int' → logprob: -18.974077224731445
    10. '=}' → logprob: -19.349077224731445

Token 270: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0007115975022315979
    2. ' fact' → logprob: -7.250711441040039
    3. 'factor' → logprob: -13.875711441040039
    4. '_fact' → logprob: -14.625711441040039
    5. '.fact' → logprob: -15.875711441040039
    6. '   ' → logprob: -17.00071144104004
    7. 'Fact' → logprob: -17.25071144104004
    8. 'fac' → logprob: -17.50071144104004
    9. ' ' → logprob: -18.62571144104004
    10. ' factorial' → logprob: -18.87571144104004

Token 271: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -6.704273118884885e-07
    2. 'cache' → logprob: -15.250000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_factor' → logprob: -16.5
    5. ' _' → logprob: -16.875
    6. '[_' → logprob: -17.5
    7. '_c' → logprob: -18.0
    8. '_CACHE' → logprob: -18.125
    9. 't' → logprob: -18.5
    10. ')_' → logprob: -18.75

Token 272: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.3458322731312364e-06
    2. 'total' → logprob: -11.875007629394531
    3. '(total' → logprob: -15.875007629394531
    4. '[
' → logprob: -16.87500762939453
    5. ' [' → logprob: -17.12500762939453
    6. ' total' → logprob: -18.00000762939453
    7. '```' → logprob: -19.00000762939453
    8. '[int' → logprob: -19.12500762939453
    9. '   ' → logprob: -19.25000762939453
    10. '	total' → logprob: -20.00000762939453

Token 273: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.688212614681106e-05
    2. ' total' → logprob: -11.000017166137695
    3. '
' → logprob: -16.875017166137695
    4. '(total' → logprob: -17.625017166137695
    5. '   ' → logprob: -18.125017166137695
    6. '[' → logprob: -18.125017166137695
    7. ' ' → logprob: -19.125017166137695
    8. '	total' → logprob: -19.375017166137695
    9. 'to' → logprob: -20.625017166137695
    10. ']' → logprob: -21.125017166137695

Token 274: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -7.703443770878948e-06
    2. '_hal' → logprob: -12.625007629394531
    3. '_' → logprob: -13.000007629394531
    4. 'half' → logprob: -14.125007629394531
    5. '_total' → logprob: -14.625007629394531
    6. '_HALF' → logprob: -15.375007629394531
    7. ']' → logprob: -15.500007629394531
    8. ']_' → logprob: -16.37500762939453
    9. '```' → logprob: -16.62500762939453
    10. '_]' → logprob: -16.62500762939453

Token 275: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011152983643114567
    2. ' ]' → logprob: -9.75011157989502
    3. ']
' → logprob: -10.00011157989502
    4. '])' → logprob: -12.62511157989502
    5. ']

' → logprob: -13.37511157989502
    6. ')]' → logprob: -13.87511157989502
    7. ']*' → logprob: -15.00011157989502
    8. '[' → logprob: -15.37511157989502
    9. ']]' → logprob: -15.37511157989502
    10. '],' → logprob: -15.50011157989502

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00749540887773037
    2. 'den' → logprob: -5.757495403289795
    3. ' denominator' → logprob: -6.132495403289795
    4. '
' → logprob: -6.757495403289795
    5. '        
' → logprob: -8.257495880126953
    6. '   ' → logprob: -9.007495880126953
    7. '    
' → logprob: -9.007495880126953
    8. '      ' → logprob: -9.257495880126953
    9. ')' → logprob: -9.382495880126953
    10. '<|end|>' → logprob: -10.132495880126953

Token 277: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0022392317187041044
    2. ' denominator' → logprob: -6.252239227294922
    3. '   ' → logprob: -8.127239227294922
    4. '       ' → logprob: -11.377239227294922
    5. 'def' → logprob: -13.502239227294922
    6. '    
' → logprob: -14.877239227294922
    7. '    ' → logprob: -15.252239227294922
    8. '  ' → logprob: -15.377239227294922
    9. '_den' → logprob: -15.502239227294922
    10. '           ' → logprob: -15.502239227294922

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931476593017578
    2. ' =' → logprob: -0.6931476593017578
    3. '=int' → logprob: -15.693147659301758
    4. '=sum' → logprob: -16.193147659301758
    5. ' ' → logprob: -16.443147659301758
    6. ' =
' → logprob: -16.943147659301758
    7. 'import' → logprob: -17.318147659301758
    8. ' =[' → logprob: -17.443147659301758
    9. '=

' → logprob: -18.193147659301758
    10. ' *=' → logprob: -18.318147659301758

Token 279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -13.875022888183594
    4. 'factor' → logprob: -15.875022888183594
    5. '  ' → logprob: -17.250022888183594
    6. '=' → logprob: -17.250022888183594
    7. '```' → logprob: -17.250022888183594
    8. 'fact' → logprob: -17.500022888183594
    9. '    ' → logprob: -17.687522888183594
    10. '       ' → logprob: -17.812522888183594

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. 'factor' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.250001907348633
    5. 'fact' → logprob: -18.000001907348633
    6. 'product' → logprob: -18.000001907348633
    7. '```' → logprob: -18.250001907348633
    8. 'prod' → logprob: -18.500001907348633
    9. '
' → logprob: -19.437501907348633
    10. '=' → logprob: -19.625001907348633

Token 281: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008222936652600765
    2. 'for' → logprob: -4.883223056793213
    3. '<|end|>' → logprob: -8.258222579956055
    4. ' for' → logprob: -8.633222579956055
    5. '    
' → logprob: -10.008222579956055
    6. '
' → logprob: -10.133222579956055
    7. ' 
' → logprob: -10.258222579956055
    8. '   ' → logprob: -11.383222579956055
    9. '  
' → logprob: -11.633222579956055
    10. '<|end|>' → logprob: -11.758222579956055

Token 282: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29437533020973206
    2. '
' → logprob: -1.5443753004074097
    3. '       ' → logprob: -3.544375419616699
    4. ' for' → logprob: -4.544375419616699
    5. '   ' → logprob: -7.044375419616699
    6. '    
' → logprob: -7.669375419616699
    7. '	for' → logprob: -8.2943754196167
    8. '<|end|>' → logprob: -8.5443754196167
    9. '    ' → logprob: -10.4193754196167
    10. ')' → logprob: -10.6693754196167

Token 283: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009436474181711674
    2. ' for' → logprob: -4.75943660736084
    3. '       ' → logprob: -7.13443660736084
    4. '	for' → logprob: -11.25943660736084
    5. '   ' → logprob: -11.50943660736084
    6. '*' → logprob: -15.00943660736084
    7. ' ' → logprob: -15.25943660736084
    8. '           ' → logprob: -15.38443660736084
    9. '    ' → logprob: -15.50943660736084
    10. '        ' → logprob: -16.009435653686523

Token 284: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.014445539563894272
    2. 'c' → logprob: -4.6394453048706055
    3. 'cnt' → logprob: -5.7644453048706055
    4. ' count' → logprob: -6.5144453048706055
    5. ' c' → logprob: -10.514445304870605
    6. 'freq' → logprob: -11.264445304870605
    7. 'fc' → logprob: -12.014445304870605
    8. ' cnt' → logprob: -12.389445304870605
    9. 'i' → logprob: -12.764445304870605
    10. '   ' → logprob: -13.514445304870605

Token 285: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061976201832294464
    2. 'in' → logprob: -2.811976194381714
    3. '	in' → logprob: -12.686976432800293
    4. ' ' → logprob: -13.186976432800293
    5. '_in' → logprob: -13.686976432800293
    6. ',' → logprob: -14.436976432800293
    7. 'In' → logprob: -14.561976432800293
    8. 'count' → logprob: -14.936976432800293
    9. '<|end|>' → logprob: -15.686976432800293
    10. '  ' → logprob: -15.811976432800293

Token 286: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.31327372789382935
    2. ' half' → logprob: -1.3132736682891846
    3. 'hal' → logprob: -11.688273429870605
    4. '_half' → logprob: -13.063273429870605
    5. ' ' → logprob: -13.938273429870605
    6. '   ' → logprob: -15.938273429870605
    7. 'Half' → logprob: -16.313274383544922
    8. ' hal' → logprob: -16.438274383544922
    9. 'halve' → logprob: -16.688274383544922
    10. '-half' → logprob: -16.875774383544922

Token 287: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -12.250007629394531
    3. 'counts' → logprob: -13.375007629394531
    4. '_c' → logprob: -15.125007629394531
    5. '_count' → logprob: -15.625007629394531
    6. '_cache' → logprob: -16.00000762939453
    7. 's' → logprob: -16.25000762939453
    8. 'Counts' → logprob: -16.75000762939453
    9. ' counts' → logprob: -16.75000762939453
    10. '   ' → logprob: -17.37500762939453

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012540494091808796
    2. ':
' → logprob: -4.387540340423584
    3. ' :' → logprob: -12.012540817260742
    4. '   ' → logprob: -12.012540817260742
    5. '):' → logprob: -12.137540817260742
    6. '):
' → logprob: -12.262540817260742
    7. ',' → logprob: -12.637540817260742
    8. '       ' → logprob: -13.762540817260742
    9. ':
' → logprob: -14.137540817260742
    10. ')' → logprob: -14.262540817260742

Token 289: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011140844784677029
    2. ' denominator' → logprob: -4.511140823364258
    3. 'den' → logprob: -10.136140823364258
    4. '          ' → logprob: -10.886140823364258
    5. '            
' → logprob: -12.136140823364258
    6. '            ' → logprob: -12.261140823364258
    7. '```' → logprob: -13.011140823364258
    8. '*' → logprob: -13.136140823364258
    9. '_den' → logprob: -13.261140823364258
    10. ' if' → logprob: -13.261140823364258

Token 290: ' denominator' (ID: 101279)
  Prédit: ' denominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denominator' → logprob: -0.10403084009885788
    2. 'den' → logprob: -2.4790308475494385
    3. '           ' → logprob: -4.729030609130859
    4. '               ' → logprob: -5.104030609130859
    5. 'if' → logprob: -10.35403060913086
    6. ' if' → logprob: -11.10403060913086
    7. '_den' → logprob: -11.85403060913086
    8. ' den' → logprob: -12.35403060913086
    9. '.den' → logprob: -13.10403060913086
    10. '
' → logprob: -13.22903060913086

Token 291: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.47409334778785706
    2. ' *=' → logprob: -0.9740933179855347
    3. '*' → logprob: -11.224093437194824
    4. '   ' → logprob: -13.599093437194824
    5. '=' → logprob: -13.974093437194824
    6. '	' → logprob: -14.849093437194824
    7. ' ' → logprob: -15.349093437194824
    8. ' ' → logprob: -15.849093437194824
    9. '```' → logprob: -16.349092483520508
    10. '  ' → logprob: -16.724092483520508

Token 292: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -3.03521392197581e-05
    2. ' fact' → logprob: -10.500030517578125
    3. 'factor' → logprob: -12.875030517578125
    4. '_fact' → logprob: -16.125030517578125
    5. '.fact' → logprob: -16.875030517578125
    6. ' ' → logprob: -19.125030517578125
    7. '   ' → logprob: -19.500030517578125
    8. ' factorial' → logprob: -19.625030517578125
    9. 'fac' → logprob: -19.625030517578125
    10. 'Fact' → logprob: -19.625030517578125

Token 293: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -3.619311974034645e-05
    2. 'cache' → logprob: -10.375036239624023
    3. 'or' → logprob: -12.375036239624023
    4. 'ory' → logprob: -15.375036239624023
    5. 'Cache' → logprob: -16.250036239624023
    6. '_CACHE' → logprob: -16.250036239624023
    7. 'orial' → logprob: -17.125036239624023
    8. 'er' → logprob: -17.125036239624023
    9. ' cache' → logprob: -17.125036239624023
    10. '[' → logprob: -17.375036239624023

Token 294: '[count' (ID: 62384)
  Prédit: '[count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[count' → logprob: -6.704273118884885e-07
    2. '(count' → logprob: -14.500000953674316
    3. '[' → logprob: -17.0
    4. '[int' → logprob: -17.125
    5. '[
' → logprob: -17.25
    6. 'count' → logprob: -17.75
    7. '<count' → logprob: -19.5
    8. ' [' → logprob: -21.0
    9. '=count' → logprob: -21.5
    10. '[(' → logprob: -21.625

Token 295: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004546254931483418
    2. ']
' → logprob: -8.375454902648926
    3. '       ' → logprob: -8.625454902648926
    4. '<|end|>' → logprob: -11.125454902648926
    5. '<|end|>' → logprob: -11.750454902648926
    6. ')' → logprob: -11.750454902648926
    7. ' ]' → logprob: -11.875454902648926
    8. '           ' → logprob: -12.375454902648926
    9. '   ' → logprob: -15.000454902648926
    10. ']>' → logprob: -15.250454902648926

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.538490950129926e-05
    2. 'return' → logprob: -10.875055313110352
    3. '   ' → logprob: -11.125055313110352
    4. '        
' → logprob: -11.750055313110352
    5. '    
' → logprob: -12.250055313110352
    6. '
' → logprob: -12.500055313110352
    7. ' return' → logprob: -13.000055313110352
    8. '```' → logprob: -13.750055313110352
    9. '      ' → logprob: -14.875055313110352
    10. '           ' → logprob: -15.500055313110352

Token 297: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5806273818016052
    2. 'return' (adapté à ' return') → logprob: -0.8306273818016052
    3. ' return' → logprob: -5.58062744140625
    4. '
' → logprob: -7.20562744140625
    5. '   ' → logprob: -9.58062744140625
    6. '        
' → logprob: -10.20562744140625
    7. '```' → logprob: -10.83062744140625
    8. 'result' → logprob: -11.08062744140625
    9. '	return' → logprob: -11.58062744140625
    10. '    
' → logprob: -12.33062744140625

Token 298: ' numerator' (ID: 149054)
  Prédit: ' numerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numerator' → logprob: -0.0485982745885849
    2. 'numer' → logprob: -3.048598289489746
    3. ' numer' → logprob: -12.173598289489746
    4. 'n' → logprob: -13.298598289489746
    5. 'int' → logprob: -13.673598289489746
    6. '(n' → logprob: -14.173598289489746
    7. ' int' → logprob: -14.923598289489746
    8. ' numeral' → logprob: -15.048598289489746
    9. ' integer' → logprob: -15.298598289489746
    10. 'umerator' → logprob: -15.548598289489746

Token 299: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.07889077812433243
    2. '//' → logprob: -2.578890800476074
    3. ' ' → logprob: -14.578890800476074
    4. '   ' → logprob: -15.703890800476074
    5. ' ' → logprob: -15.828890800476074
    6. '//=' → logprob: -17.078889846801758
    7. '
' → logprob: -17.203889846801758
    8. '`' → logprob: -17.203889846801758
    9. ')' → logprob: -17.328889846801758
    10. '    ' → logprob: -17.453889846801758

Token 300: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0005530327325686812
    2. ' denominator' → logprob: -7.500553131103516
    3. ' den' → logprob: -18.125553131103516
    4. '   ' → logprob: -19.500553131103516
    5. '_den' → logprob: -20.250553131103516
    6. 'deny' → logprob: -21.000553131103516
    7. '```' → logprob: -21.125553131103516
    8. '.den' → logprob: -21.250553131103516
    9. 'det' → logprob: -21.250553131103516
    10. ' ' → logprob: -21.375553131103516

Token 301: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47201958298683167
    2. '    
' → logprob: -1.0970195531845093
    3. '
' → logprob: -4.222019672393799
    4. ' 
' → logprob: -4.347019672393799
    5. '  
' → logprob: -4.972019672393799
    6. 'def' → logprob: -5.472019672393799
    7. '   
' → logprob: -6.847019672393799
    8. '<|end|>' → logprob: -6.847019672393799
    9. ' def' → logprob: -8.09701919555664
    10. ' ' → logprob: -8.22201919555664

Token 303: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.8444881536415778e-05
    2. ' def' → logprob: -10.750028610229492
    3. '    
' → logprob: -12.500028610229492
    4. '@' → logprob: -13.125028610229492
    5. '   ' → logprob: -13.750028610229492
    6. '
' → logprob: -17.000028610229492
    7. '        
' → logprob: -17.625028610229492
    8. '  
' → logprob: -17.625028610229492
    9. '	def' → logprob: -18.625028610229492
    10. ' 
' → logprob: -18.750028610229492

Token 304: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6593341827392578
    2. ' count' → logprob: -1.6593341827392578
    3. ' def' → logprob: -2.034334182739258
    4. ' is' → logprob: -2.784334182739258
    5. ' can' → logprob: -3.034334182739258
    6. ' calculate' → logprob: -4.034334182739258
    7. ' get' → logprob: -4.284334182739258
    8. ' has' → logprob: -4.659334182739258
    9. ' compute' → logprob: -6.409334182739258
    10. '_' → logprob: -6.409334182739258

Token 305: 'can' (ID: 6929)
  Prédit: 'can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.04550807178020477
    2. 'is' → logprob: -3.7955081462860107
    3. 'count' → logprob: -4.545507907867432
    4. 'get' → logprob: -5.795507907867432
    5. 'generate' → logprob: -6.170507907867432
    6. 'possible' → logprob: -6.420507907867432
    7. 'has' → logprob: -6.545507907867432
    8. 'valid' → logprob: -7.420507907867432
    9. 'check' → logprob: -7.420507907867432
    10. 'compute' → logprob: -7.920507907867432

Token 306: '_form' (ID: 18664)
  Prédit: '_form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -0.8490834832191467
    2. '_' → logprob: -1.224083423614502
    3. '_construct' → logprob: -2.349083423614502
    4. '_make' → logprob: -2.599083423614502
    5. ' _' → logprob: -3.974083423614502
    6. '_create' → logprob: -4.224083423614502
    7. '_build' → logprob: -4.349083423614502
    8. '_use' → logprob: -4.349083423614502
    9. '_have' → logprob: -4.349083423614502
    10. '_continue' → logprob: -4.599083423614502

Token 307: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.00840050633996725
    2. '_' → logprob: -5.1334004402160645
    3. '_p' → logprob: -6.1334004402160645
    4. '_a' → logprob: -9.508400917053223
    5. 'pal' → logprob: -9.508400917053223
    6. 'Palindrome' → logprob: -9.633400917053223
    7. '<|end|>' → logprob: -10.633400917053223
    8. 'a' → logprob: -11.383400917053223
    9. '_half' → logprob: -11.383400917053223
    10. '_any' → logprob: -12.133400917053223

Token 308: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.022119030356407166
    2. 'ind' → logprob: -3.8971190452575684
    3. 'in' → logprob: -6.772119045257568
    4. '_' → logprob: -8.02211856842041
    5. '```' → logprob: -11.02211856842041
    6. 'ndrome' → logprob: -11.14711856842041
    7. 'i' → logprob: -11.64711856842041
    8. '_ind' → logprob: -11.77211856842041
    9. 'id' → logprob: -12.14711856842041
    10. '``' → logprob: -12.27211856842041

Token 309: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002870801545213908
    2. '(' → logprob: -8.375287055969238
    3. ' (' → logprob: -10.125287055969238
    4. 'self' → logprob: -11.375287055969238
    5. '(s' → logprob: -13.125287055969238
    6. '_(' → logprob: -13.750287055969238
    7. '(
' → logprob: -14.750287055969238
    8. '_' → logprob: -15.000287055969238
    9. '   ' → logprob: -15.125287055969238
    10. ' self' → logprob: -15.375287055969238

Token 310: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33967721462249756
    2. 'self' → logprob: -1.5896772146224976
    3. '):
' → logprob: -3.714677333831787
    4. '):' → logprob: -3.839677333831787
    5. ')' → logprob: -4.089677333831787
    6. ' ,' → logprob: -4.464677333831787
    7. '       ' → logprob: -5.839677333831787
    8. '_counts' → logprob: -6.214677333831787
    9. '(self' → logprob: -6.589677333831787
    10. ' self' → logprob: -7.214677333831787

Token 311: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0059290360659360886
    2. '(' → logprob: -5.755928993225098
    3. 'self' → logprob: -6.005928993225098
    4. ':' → logprob: -9.005928993225098
    5. ' (' → logprob: -9.880928993225098
    6. '(
' → logprob: -10.255928993225098
    7. '   ' → logprob: -10.380928993225098
    8. '       ' → logprob: -11.005928993225098
    9. ' self' → logprob: -11.255928993225098
    10. ':
' → logprob: -13.005928993225098

Token 312: ' Tuple' (ID: 50841)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.3871883749961853
    2. ' bool' → logprob: -1.13718843460083
    3. 'int' → logprob: -8.762187957763672
    4. 'True' → logprob: -9.387187957763672
    5. ' True' → logprob: -10.387187957763672
    6. ' int' → logprob: -10.762187957763672
    7. ' ' → logprob: -11.387187957763672
    8. '(bool' → logprob: -12.387187957763672
    9. 'Bool' → logprob: -13.012187957763672
    10. '   ' → logprob: -13.262187957763672

Token 313: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010342379100620747
    2. '[int' → logprob: -7.001034259796143
    3. 'bool' → logprob: -9.876033782958984
    4. '   ' → logprob: -10.376033782958984
    5. ',bool' → logprob: -10.876033782958984
    6. '[
' → logprob: -11.626033782958984
    7. '(bool' → logprob: -11.751033782958984
    8. '
' → logprob: -13.376033782958984
    9. '    
' → logprob: -14.751033782958984
    10. ',' → logprob: -15.126033782958984

Token 314: 'bool' (ID: 9037)
  Prédit: 'bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00018661346985027194
    2. 'int' → logprob: -9.250186920166016
    3. '[' → logprob: -9.500186920166016
    4. ' bool' → logprob: -12.250186920166016
    5. '   ' → logprob: -12.375186920166016
    6. '
' → logprob: -12.625186920166016
    7. ')' → logprob: -14.875186920166016
    8. '[int' → logprob: -15.125186920166016
    9. '(bool' → logprob: -15.250186920166016
    10. ']' → logprob: -15.250186920166016

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000215457082958892
    2. ',int' → logprob: -8.500215530395508
    3. ' ,' → logprob: -12.125215530395508
    4. ',
' → logprob: -12.875215530395508
    5. ',bool' → logprob: -12.875215530395508
    6. '   ' → logprob: -14.000215530395508
    7. '[int' → logprob: -16.000215530395508
    8. 'int' → logprob: -16.125215530395508
    9. ',

' → logprob: -16.375215530395508
    10. ',List' → logprob: -17.000215530395508

Token 316: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009670860134065151
    2. 'str' → logprob: -5.134670734405518
    3. ' int' → logprob: -6.259670734405518
    4. 'Dict' → logprob: -6.384670734405518
    5. ' str' → logprob: -10.259671211242676
    6. '[int' → logprob: -10.384671211242676
    7. '   ' → logprob: -11.134671211242676
    8. '...' → logprob: -11.259671211242676
    9. ' ' → logprob: -12.009671211242676
    10. 'Counter' → logprob: -12.134671211242676

Token 317: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0317518524825573
    2. ']:' → logprob: -3.656751871109009
    3. ']:
' → logprob: -5.40675163269043
    4. '   ' → logprob: -7.78175163269043
    5. ']' → logprob: -8.40675163269043
    6. ' ,' → logprob: -8.90675163269043
    7. ' ]' → logprob: -9.40675163269043
    8. ']:
' → logprob: -10.40675163269043
    9. '):' → logprob: -10.78175163269043
    10. '       ' → logprob: -11.90675163269043

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011915886716451496
    2. '        
' → logprob: -9.87511920928955
    3. '<|end|>' → logprob: -10.50011920928955
    4. '   ' → logprob: -11.25011920928955
    5. '      ' → logprob: -12.87511920928955
    6. '#' → logprob: -13.00011920928955
    7. '
' → logprob: -13.25011920928955
    8. ' ' → logprob: -13.37511920928955
    9. '    
' → logprob: -13.37511920928955
    10. '```' → logprob: -13.50011920928955

Token 319: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07807092368602753
    2. 'odd' → logprob: -3.328070878982544
    3. 'count' → logprob: -3.453070878982544
    4. ' count' → logprob: -5.703071117401123
    5. ' odd' → logprob: -5.828071117401123
    6. '   ' → logprob: -8.203070640563965
    7. '        
' → logprob: -8.703070640563965
    8. '"""
' (adapté à ' """
') → logprob: -8.703070640563965
    9. '
' → logprob: -9.078070640563965
    10. 'even' → logprob: -9.203070640563965

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6046884059906006
    2. 'odd' → logprob: -1.7296884059906006
    3. ' odd' → logprob: -1.7296884059906006
    4. 'count' → logprob: -2.6046884059906006
    5. ' count' → logprob: -3.9796884059906006
    6. '        ' → logprob: -5.97968864440918
    7. '"""
' → logprob: -6.47968864440918
    8. 'num' → logprob: -7.72968864440918
    9. ' """
' → logprob: -7.72968864440918
    10. 'even' → logprob: -7.97968864440918

Token 321: ' Determine' (ID: 57076)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.041896987706422806
    2. ' odd' → logprob: -3.7918970584869385
    3. 'count' → logprob: -4.291896820068359
    4. '       ' → logprob: -6.416896820068359
    5. ' count' → logprob: -7.291896820068359
    6. '   ' → logprob: -7.291896820068359
    7. '#' → logprob: -7.541896820068359
    8. 'counts' → logprob: -7.791896820068359
    9. 'num' → logprob: -8.41689682006836
    10. 'od' → logprob: -9.04189682006836

Token 322: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1394163370132446
    2. ' the' → logprob: -2.014416217803955
    3. ' (' → logprob: -2.639416217803955
    4. ' whether' → logprob: -2.639416217803955
    5. 'if' → logprob: -2.889416217803955
    6. '       ' → logprob: -2.889416217803955
    7. 'the' → logprob: -2.889416217803955
    8. 'whether' → logprob: -3.014416217803955
    9. 'odd' → logprob: -3.389416217803955
    10. '(' → logprob: -3.389416217803955

Token 323: ' palindrome' (ID: 160469)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.15982985496521
    2. 'odd' → logprob: -1.40982985496521
    3. 'sum' → logprob: -1.78482985496521
    4. ' odd' → logprob: -2.53482985496521
    5. 'the' → logprob: -2.65982985496521
    6. ' sum' → logprob: -3.40982985496521
    7. 'self' → logprob: -3.53482985496521
    8. '       ' → logprob: -4.534830093383789
    9. ' self' → logprob: -4.659830093383789
    10. 'True' → logprob: -4.784830093383789

Token 324: ' formation' (ID: 18704)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7147718667984009
    2. ' formation' → logprob: -0.7147718667984009
    3. ' is' → logprob: -4.464771747589111
    4. 'formation' → logprob: -5.089771747589111
    5. 'can' → logprob: -6.214771747589111
    6. ' possible' → logprob: -7.839771747589111
    7. ' forming' → logprob: -8.21477222442627
    8. '   ' → logprob: -8.33977222442627
    9. '
' → logprob: -8.58977222442627
    10. ' ' → logprob: -8.71477222442627

Token 325: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07910843938589096
    2. 'is' → logprob: -2.579108476638794
    3. ' possible' → logprob: -9.579108238220215
    4. 'from' → logprob: -9.829108238220215
    5. 'possible' → logprob: -9.829108238220215
    6. ' from' → logprob: -10.704108238220215
    7. '_possible' → logprob: -11.829108238220215
    8. '   ' → logprob: -12.579108238220215
    9. ' can' → logprob: -13.079108238220215
    10. ' ' → logprob: -13.204108238220215

Token 326: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.31341856718063354
    2. ' possible' → logprob: -1.3134186267852783
    3. '_possible' → logprob: -8.9384183883667
    4. ' feasible' → logprob: -11.3134183883667
    5. 'allowed' → logprob: -12.8134183883667
    6. '```' → logprob: -13.0634183883667
    7. 'fe' → logprob: -13.1884183883667
    8. 'Possible' → logprob: -13.3134183883667
    9. '   ' → logprob: -13.5634183883667
    10. ' allowed' → logprob: -14.6884183883667

Token 327: '.
' (ID: 558)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2778576910495758
    2. '       ' → logprob: -2.402857780456543
    3. ',' → logprob: -2.527857780456543
    4. 'and' → logprob: -2.902857780456543
    5. ' based' → logprob: -4.902857780456543
    6. ' with' → logprob: -5.402857780456543
    7. ' by' → logprob: -6.152857780456543
    8. ' at' → logprob: -7.027857780456543
    9. '.' → logprob: -7.277857780456543
    10. ' for' → logprob: -7.777857780456543

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15325294435024261
    2. ' count' → logprob: -2.9032528400421143
    3. 'count' → logprob: -3.2782528400421143
    4. ' and' → logprob: -4.028253078460693
    5. ' odd' → logprob: -5.278253078460693
    6. '   ' → logprob: -5.653253078460693
    7. '
' → logprob: -5.653253078460693
    8. ' Odd' → logprob: -6.278253078460693
    9. '        
' → logprob: -6.528253078460693
    10. '"""
' → logprob: -6.653253078460693

Token 329: ' Return' (ID: 6318)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34002867341041565
    2. ' odd' → logprob: -2.215028762817383
    3. 'odd' → logprob: -2.715028762817383
    4. ' count' → logprob: -2.965028762817383
    5. 'count' → logprob: -2.965028762817383
    6. 'even' → logprob: -6.715028762817383
    7. 'Odd' → logprob: -6.840028762817383
    8. '"""
' → logprob: -7.090028762817383
    9. ' Odd' → logprob: -7.215028762817383
    10. '   ' → logprob: -7.340028762817383

Token 330: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6221931576728821
    2. ' True' → logprob: -0.9971931576728821
    3. '(True' → logprob: -2.7471930980682373
    4. '(False' → logprob: -3.9971930980682373
    5. ' False' → logprob: -4.747193336486816
    6. 'True' → logprob: -6.247193336486816
    7. 'False' → logprob: -8.247193336486816
    8. ' self' → logprob: -8.622193336486816
    9. ' len' → logprob: -8.747193336486816
    10. '(self' → logprob: -9.122193336486816

Token 331: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03920035436749458
    2. ' True' → logprob: -3.2892003059387207
    3. 'any' → logprob: -7.789200305938721
    4. '   ' → logprob: -8.789200782775879
    5. ')' → logprob: -8.914200782775879
    6. 'False' → logprob: -8.914200782775879
    7. '
' → logprob: -9.664200782775879
    8. 'len' → logprob: -9.789200782775879
    9. '(True' → logprob: -10.414200782775879
    10. 'can' → logprob: -10.414200782775879

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4736459888808895e-05
    2. ' ,' → logprob: -11.375014305114746
    3. ',
' → logprob: -13.250014305114746
    4. '<|end|>' → logprob: -14.500014305114746
    5. ',)' → logprob: -15.500014305114746
    6. ')' → logprob: -15.750014305114746
    7. '
' → logprob: -16.125015258789062
    8. ',

' → logprob: -16.125015258789062
    9. '),' → logprob: -16.250015258789062
    10. '‌,' → logprob: -16.375015258789062

Token 333: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.2725125253200531
    2. ' odd' → logprob: -2.897512435913086
    3. 'index' → logprob: -3.022512435913086
    4. 'sum' → logprob: -3.397512435913086
    5. 'count' → logprob: -4.147512435913086
    6. ')' → logprob: -4.147512435913086
    7. 'num' → logprob: -4.522512435913086
    8. 'middle' → logprob: -4.647512435913086
    9. '[' → logprob: -5.022512435913086
    10. '1' → logprob: -5.022512435913086

Token 334: '_char' (ID: 23398)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0008726324886083603
    2. '_char' → logprob: -7.125872611999512
    3. 'count' → logprob: -10.500872611999512
    4. '_counts' → logprob: -10.750872611999512
    5. '_index' → logprob: -11.625872611999512
    6. '_pos' → logprob: -12.750872611999512
    7. '_chars' → logprob: -13.125872611999512
    8. 'Count' → logprob: -13.375872611999512
    9. 's' → logprob: -13.625872611999512
    10. ')' → logprob: -13.625872611999512

Token 335: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.5778734683990479
    2. '_count' → logprob: -0.8278734683990479
    3. '_idx' → logprob: -6.827873229980469
    4. ')' → logprob: -7.952873229980469
    5. 's' → logprob: -7.952873229980469
    6. 'count' → logprob: -9.827873229980469
    7. '_pos' → logprob: -10.202873229980469
    8. 'acters' → logprob: -10.952873229980469
    9. 'index' → logprob: -11.577873229980469
    10. '_counts' → logprob: -11.577873229980469

Token 336: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25405627489089966
    2. ',' → logprob: -1.5040562152862549
    3. ',
' → logprob: -6.879056453704834
    4. '),' → logprob: -7.879056453704834
    5. ')
' → logprob: -8.754055976867676
    6. ',)' → logprob: -8.754055976867676
    7. ' )' → logprob: -9.004055976867676
    8. '   ' → logprob: -9.254055976867676
    9. ' if' → logprob: -10.379055976867676
    10. '
' → logprob: -10.504055976867676

Token 337: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1450335830450058
    2. ' if' → logprob: -2.020033597946167
    3. 'if' → logprob: -6.645033359527588
    4. '       ' → logprob: -8.145033836364746
    5. ' ,' → logprob: -8.270033836364746
    6. ',
' → logprob: -8.520033836364746
    7. '   ' → logprob: -9.145033836364746
    8. ' or' → logprob: -9.395033836364746
    9. '    ' → logprob: -10.770033836364746
    10. ')' → logprob: -11.020033836364746

Token 338: ' possible' (ID: 4149)
  Prédit: ' there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' there' → logprob: -0.8787612915039062
    2. ' True' → logprob: -2.3787612915039062
    3. ' exactly' → logprob: -2.5037612915039062
    4. 'True' → logprob: -2.7537612915039062
    5. ' sum' → logprob: -3.0037612915039062
    6. ' self' → logprob: -3.0037612915039062
    7. 'possible' → logprob: -3.1287612915039062
    8. ' the' → logprob: -3.2537612915039062
    9. ' possible' → logprob: -3.5037612915039062
    10. 'there' → logprob: -3.7537612915039062

Token 339: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01824558526277542
    2. ' or' → logprob: -4.143245697021484
    3. ',
' → logprob: -6.518245697021484
    4. ' ,' → logprob: -8.393245697021484
    5. ' else' → logprob: -9.143245697021484
    6. '   ' → logprob: -9.393245697021484
    7. ';' → logprob: -9.643245697021484
    8. '<|end|>' → logprob: -9.643245697021484
    9. 'or' → logprob: -9.893245697021484
    10. '
' → logprob: -10.143245697021484

Token 340: '       ' (ID: 309)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.24816182255744934
    2. '       ' → logprob: -2.623161792755127
    3. ' otherwise' → logprob: -2.748161792755127
    4. 'else' → logprob: -3.373161792755127
    5. '(False' → logprob: -3.873161792755127
    6. 'otherwise' → logprob: -4.748161792755127
    7. ' False' → logprob: -5.373161792755127
    8. 'False' → logprob: -5.373161792755127
    9. '   ' → logprob: -5.873161792755127
    10. ' (' → logprob: -6.123161792755127

Token 341: ' where' (ID: 1919)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6523739695549011
    2. '(False' → logprob: -1.152374029159546
    3. ' (' → logprob: -2.277374029159546
    4. 'else' → logprob: -3.652374029159546
    5. ' otherwise' → logprob: -4.652373790740967
    6. ' False' → logprob: -4.652373790740967
    7. 'False' → logprob: -5.152373790740967
    8. '(' → logprob: -5.527373790740967
    9. '       ' → logprob: -6.027373790740967
    10. 'otherwise' → logprob: -6.402373790740967

Token 342: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.009968681260943413
    2. ' odd' → logprob: -4.6349687576293945
    3. 'False' → logprob: -10.009968757629395
    4. 'any' → logprob: -10.384968757629395
    5. '   ' → logprob: -10.509968757629395
    6. 'True' → logprob: -10.634968757629395
    7. '-' → logprob: -10.634968757629395
    8. 'od' → logprob: -11.509968757629395
    9. '       ' → logprob: -11.884968757629395
    10. '[' → logprob: -12.134968757629395

Token 343: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.12814326584339142
    2. '_count' → logprob: -2.378143310546875
    3. '_chars' → logprob: -4.753143310546875
    4. '_' → logprob: -5.378143310546875
    5. '_index' → logprob: -5.503143310546875
    6. ' _' → logprob: -5.628143310546875
    7. '_counts' → logprob: -5.753143310546875
    8. 'char' → logprob: -6.878143310546875
    9. '_counter' → logprob: -7.753143310546875
    10. '_idx' → logprob: -8.128143310546875

Token 344: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.017168119549751282
    2. 's' → logprob: -4.767168045043945
    3. '_idx' → logprob: -5.267168045043945
    4. '_count' → logprob: -6.517168045043945
    5. '_indices' → logprob: -6.642168045043945
    6. '_indexes' → logprob: -8.392168045043945
    7. '_s' → logprob: -9.392168045043945
    8. ' _' → logprob: -9.892168045043945
    9. '_ind' → logprob: -9.892168045043945
    10. '_' → logprob: -10.267168045043945

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18286031484603882
    2. ' =' → logprob: -2.4328603744506836
    3. ' is' → logprob: -2.5578603744506836
    4. '=None' → logprob: -6.932860374450684
    5. 'is' → logprob: -8.432860374450684
    6. ')' → logprob: -8.807860374450684
    7. '=-' → logprob: -8.932860374450684
    8. ' ==' → logprob: -9.432860374450684
    9. ',' → logprob: -9.682860374450684
    10. '=is' → logprob: -10.182860374450684

Token 346: ' index' (ID: 3472)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5574893951416016
    2. 'next' → logprob: -1.6824893951416016
    3. ' next' → logprob: -2.0574893951416016
    4. ' -' → logprob: -2.8074893951416016
    5. ' the' → logprob: -4.307489395141602
    6. 'the' → logprob: -4.432489395141602
    7. 'None' → logprob: -4.682489395141602
    8. '[' → logprob: -5.182489395141602
    9. ' None' → logprob: -5.682489395141602
    10. 'self' → logprob: -6.182489395141602

Token 347: ' in' (ID: 306)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.4081711769104004
    2. ' of' → logprob: -1.9081711769104004
    3. '=' → logprob: -2.6581711769104004
    4. 'in' → logprob: -3.7831711769104004
    5. ' or' → logprob: -4.1581711769104
    6. ' in' → logprob: -4.1581711769104
    7. ' =' → logprob: -4.1581711769104
    8. ' if' → logprob: -4.5331711769104
    9. 'or' → logprob: -4.7831711769104
    10. '(
' → logprob: -4.9081711769104

Token 348: ' alphabet' (ID: 47840)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001684981834841892
    2. ' self' → logprob: -9.125168800354004
    3. 'the' → logprob: -10.625168800354004
    4. '[self' → logprob: -11.250168800354004
    5. '
' → logprob: -11.500168800354004
    6. '```' → logprob: -12.375168800354004
    7. '       ' → logprob: -12.750168800354004
    8. '   ' → logprob: -13.625168800354004
    9. '`' → logprob: -13.750168800354004
    10. '(self' → logprob: -13.875168800354004

Token 349: ' of' (ID: 328)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4604261815547943
    2. ' or' → logprob: -1.7104262113571167
    3. 'or' → logprob: -2.960426092147827
    4. 'of' → logprob: -2.960426092147827
    5. 'if' → logprob: -3.335426092147827
    6. ' of' → logprob: -3.585426092147827
    7. '       ' → logprob: -4.710426330566406
    8. ',' → logprob: -5.335426330566406
    9. '   ' → logprob: -5.585426330566406
    10. '           ' → logprob: -7.585426330566406

Token 350: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5995655059814453
    2. 'char' → logprob: -1.5995655059814453
    3. '[' → logprob: -2.8495655059814453
    4. ' the' → logprob: -2.8495655059814453
    5. 'next' → logprob: -3.0995655059814453
    6. 'character' → logprob: -3.7245655059814453
    7. '[next' → logprob: -4.349565505981445
    8. ' next' → logprob: -4.849565505981445
    9. ' [' → logprob: -4.849565505981445
    10. '[c' → logprob: -4.974565505981445

Token 351: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -1.052216649055481
    2. 'char' → logprob: -1.552216649055481
    3. 'odd' → logprob: -1.552216649055481
    4. 'next' → logprob: -2.3022165298461914
    5. ' character' → logprob: -3.3022165298461914
    6. '[next' → logprob: -3.8022165298461914
    7. '[' → logprob: -3.9272165298461914
    8. ' next' → logprob: -3.9272165298461914
    9. 'first' → logprob: -4.802216529846191
    10. ' odd' → logprob: -5.177216529846191

Token 352: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.4769538640975952
    2. ' that' → logprob: -1.2269538640975952
    3. ' if' → logprob: -2.9769539833068848
    4. ' or' → logprob: -4.226953983306885
    5. 'with' → logprob: -4.601953983306885
    6. 'that' → logprob: -5.351953983306885
    7. '       ' → logprob: -5.726953983306885
    8. ' of' → logprob: -7.851953983306885
    9. '           ' → logprob: -7.976953983306885
    10. '   ' → logprob: -8.226953506469727

Token 353: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.5412052869796753
    2. 'an' → logprob: -1.2912052869796753
    3. ' odd' → logprob: -3.166205406188965
    4. 'count' → logprob: -3.166205406188965
    5. ' an' → logprob: -3.416205406188965
    6. 'a' → logprob: -4.791205406188965
    7. ' count' → logprob: -4.791205406188965
    8. 'self' → logprob: -5.916205406188965
    9. ' a' → logprob: -6.416205406188965
    10. '1' → logprob: -6.541205406188965

Token 354: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.4522048234939575
    2. '_count' → logprob: -1.2022048234939575
    3. 'count' → logprob: -2.827204704284668
    4. '_counts' → logprob: -5.827204704284668
    5. ' ' → logprob: -7.952204704284668
    6. '   ' → logprob: -8.577204704284668
    7. ' counts' → logprob: -8.827204704284668
    8. ' _' → logprob: -8.827204704284668
    9. '_occ' → logprob: -9.452204704284668
    10. '<|end|>' → logprob: -9.702204704284668

Token 355: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4514492452144623
    2. ' or' → logprob: -1.4514492750167847
    3. ',' → logprob: -3.076449155807495
    4. ' if' → logprob: -3.576449155807495
    5. '   ' → logprob: -3.701449155807495
    6. '       ' → logprob: -3.826449155807495
    7. '),' → logprob: -6.076449394226074
    8. 's' → logprob: -6.826449394226074
    9. '()' → logprob: -7.076449394226074
    10. ' else' → logprob: -7.076449394226074

Token 356: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011698764748871326
    2. ' -' → logprob: -4.8866987228393555
    3. 'None' → logprob: -5.6366987228393555
    4. ' None' → logprob: -7.6366987228393555
    5. '   ' → logprob: -10.386698722839355
    6. ' ' → logprob: -13.011698722839355
    7. '  ' → logprob: -13.636698722839355
    8. '
' → logprob: -13.886698722839355
    9. '-none' → logprob: -14.011698722839355
    10. '_None' → logprob: -15.636698722839355

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.289473822107539e-05
    2. ' ' → logprob: -9.750062942504883
    3. '-' → logprob: -13.375062942504883
    4. ' -' → logprob: -13.625062942504883
    5. '2' → logprob: -14.250062942504883
    6. '   ' → logprob: -14.625062942504883
    7. ',' → logprob: -16.062562942504883
    8. '<|end|>' → logprob: -16.125062942504883
    9. '```' → logprob: -16.437562942504883
    10. '۱' → logprob: -16.812562942504883

Token 358: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08731761574745178
    2. ' if' → logprob: -3.212317705154419
    3. ',' → logprob: -3.712317705154419
    4. '       ' → logprob: -4.33731746673584
    5. '   ' → logprob: -5.83731746673584
    6. ' for' → logprob: -6.71231746673584
    7. '.' → logprob: -7.83731746673584
    8. '),' → logprob: -7.96231746673584
    9. '<|end|>' → logprob: -8.71231746673584
    10. ' to' → logprob: -8.71231746673584

Token 359: ' none' (ID: 12698)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3187834918498993
    2. ' no' → logprob: -2.3187835216522217
    3. ' -' → logprob: -2.4437835216522217
    4. ' none' → logprob: -3.0687835216522217
    5. 'none' → logprob: -4.193783283233643
    6. 'no' → logprob: -4.193783283233643
    7. 'None' → logprob: -4.818783283233643
    8. ' all' → logprob: -6.568783283233643
    9. 'all' → logprob: -7.443783283233643
    10. ' there' → logprob: -8.0687837600708

Token 360: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44391757249832153
    2. '       ' → logprob: -1.1939175128936768
    3. '.' → logprob: -3.0689175128936768
    4. ').' → logprob: -5.693917751312256
    5. ',' → logprob: -6.193917751312256
    6. '<|end|>' → logprob: -6.318917751312256
    7. ')
' → logprob: -7.818917751312256
    8. '   ' → logprob: -7.943917751312256
    9. '),' → logprob: -8.068917274475098
    10. '
' → logprob: -8.818917274475098

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024441517889499664
    2. ')' → logprob: -4.524441719055176
    3. '   ' → logprob: -4.524441719055176
    4. '):' → logprob: -6.524441719055176
    5. '):
' → logprob: -7.524441719055176
    6. '<|end|>' → logprob: -8.649441719055176
    7. '```' → logprob: -9.524441719055176
    8. ':' → logprob: -9.899441719055176
    9. ',' → logprob: -10.399441719055176
    10. '"""' → logprob: -11.024441719055176

Token 362: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0074762445874512196
    2. '
' → logprob: -5.632476329803467
    3. ')' → logprob: -6.257476329803467
    4. ')
' → logprob: -7.757476329803467
    5. '   ' → logprob: -7.882476329803467
    6. '        
' → logprob: -7.882476329803467
    7. '):
' → logprob: -8.507475852966309
    8. '"""' → logprob: -8.632475852966309
    9. '```' → logprob: -8.882475852966309
    10. '"""
' (adapté à ' """
') → logprob: -9.507475852966309

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004699614830315113
    2. 'odd' → logprob: -5.75469970703125
    3. 'count' → logprob: -6.62969970703125
    4. '   ' → logprob: -8.87969970703125
    5. ' odd' → logprob: -10.25469970703125
    6. ' count' → logprob: -11.12969970703125
    7. '        
' → logprob: -12.37969970703125
    8. '      ' → logprob: -13.25469970703125
    9. '           ' → logprob: -13.75469970703125
    10. 'counts' → logprob: -13.87969970703125

Token 364: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.0006729974993504584
    2. '       ' → logprob: -7.625672817230225
    3. ' odd' → logprob: -9.375673294067383
    4. 'od' → logprob: -9.375673294067383
    5. 'count' → logprob: -11.250673294067383
    6. '   ' → logprob: -13.125673294067383
    7. 'num' → logprob: -15.875673294067383
    8. '        
' → logprob: -16.875673294067383
    9. ' odds' → logprob: -17.375673294067383
    10. '           ' → logprob: -17.625673294067383

Token 365: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.02523680403828621
    2. '_counts' → logprob: -3.9002368450164795
    3. '_chars' → logprob: -6.0252366065979
    4. '_char' → logprob: -6.1502366065979
    5. '_indices' → logprob: -10.025237083435059
    6. 'count' → logprob: -10.525237083435059
    7. '_cnt' → logprob: -10.650237083435059
    8. '_' → logprob: -11.275237083435059
    9. 's' → logprob: -12.275237083435059
    10. '_index' → logprob: -12.525237083435059

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4996427893638611
    2. ' =' → logprob: -1.2496428489685059
    3. 's' → logprob: -2.249642848968506
    4. '_chars' → logprob: -6.749642848968506
    5. '_char' → logprob: -11.374642372131348
    6. '_indices' → logprob: -11.874642372131348
    7. '_count' → logprob: -12.124642372131348
    8. '   ' → logprob: -12.624642372131348
    9. ' ' → logprob: -13.124642372131348
    10. '=s' → logprob: -13.749642372131348

Token 367: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022956127300858498
    2. 'sum' → logprob: -4.522955894470215
    3. ' ' → logprob: -4.647955894470215
    4. ' sum' → logprob: -6.397955894470215
    5. '[' → logprob: -7.772955894470215
    6. ' [' → logprob: -9.272955894470215
    7. '   ' → logprob: -10.022955894470215
    8. '[]
' → logprob: -11.897955894470215
    9. '[s' → logprob: -12.647955894470215
    10. '[
' → logprob: -12.835455894470215

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01283182017505169
    2. 'sum' → logprob: -4.387831687927246
    3. '[' → logprob: -8.512831687927246
    4. ' ' → logprob: -9.387831687927246
    5. ' sum' → logprob: -11.012831687927246
    6. '[]
' → logprob: -11.762831687927246
    7. '[
' → logprob: -12.887831687927246
    8. '[]' → logprob: -13.262831687927246
    9. '[s' → logprob: -13.262831687927246
    10. ' [' → logprob: -13.637831687927246

Token 369: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6370959877967834
    2. '       ' → logprob: -0.7620959877967834
    3. ',' → logprob: -6.387095928192139
    4. ',
' → logprob: -7.137095928192139
    5. '<|end|>' → logprob: -7.387095928192139
    6. '    
' → logprob: -8.137096405029297
    7. '        
' → logprob: -8.137096405029297
    8. ' 
' → logprob: -9.012096405029297
    9. '   ' → logprob: -9.137096405029297
    10. '  
' → logprob: -9.262096405029297

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03412485122680664
    2. '
' → logprob: -3.5341248512268066
    3. ',' → logprob: -6.159124851226807
    4. 'odd' → logprob: -6.534124851226807
    5. ' odd' → logprob: -7.909124851226807
    6. ' for' → logprob: -9.409124374389648
    7. '   ' → logprob: -9.784124374389648
    8. 'index' → logprob: -10.284124374389648
    9. 'for' → logprob: -10.284124374389648
    10. '        
' → logprob: -10.409124374389648

Token 371: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.002530833473429084
    2. '       ' → logprob: -6.252531051635742
    3. ' odd' → logprob: -7.502531051635742
    4. 'for' → logprob: -11.127531051635742
    5. 'od' → logprob: -11.252531051635742
    6. 'index' → logprob: -11.502531051635742
    7. 'self' → logprob: -12.252531051635742
    8. '   ' → logprob: -12.877531051635742
    9. '           ' → logprob: -13.127531051635742
    10. 'idx' → logprob: -13.752531051635742

Token 372: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.2534370422363281
    2. '_index' → logprob: -1.5034370422363281
    3. '_' → logprob: -7.503437042236328
    4. '_idx' → logprob: -7.878437042236328
    5. '_chars' → logprob: -8.628437042236328
    6. 'char' → logprob: -9.128437042236328
    7. '_token' → logprob: -9.878437042236328
    8. '_indices' → logprob: -10.003437042236328
    9. '_character' → logprob: -10.128437042236328
    10. '```' → logprob: -10.253437042236328

Token 373: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0009376663947477937
    2. '_' → logprob: -7.125937461853027
    3. '_idx' → logprob: -9.250937461853027
    4. '_i' → logprob: -11.375937461853027
    5. ' _' → logprob: -12.000937461853027
    6. '_indices' → logprob: -12.375937461853027
    7. '_indexes' → logprob: -12.875937461853027
    8. '=_' → logprob: -13.125937461853027
    9. '_ind' → logprob: -13.250937461853027
    10. '=' → logprob: -13.500937461853027

Token 374: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313262403011322
    2. ' =' → logprob: -1.3132624626159668
    3. '=-' → logprob: -14.813261985778809
    4. ' ' → logprob: -15.063261985778809
    5. '=
' → logprob: -16.938262939453125
    6. '=

' → logprob: -17.188262939453125
    7. ',' → logprob: -17.313262939453125
    8. '=None' → logprob: -17.563262939453125
    9. ' =
' → logprob: -17.938262939453125
    10. ':' → logprob: -19.438262939453125

Token 375: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004078401252627373
    2. ' -' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.879077911376953
    4. ' ' → logprob: -17.504077911376953
    5. '−' → logprob: -20.129077911376953
    6. '  ' → logprob: -20.254077911376953
    7. '
' → logprob: -20.754077911376953
    8. '`' → logprob: -22.254077911376953
    9. '\-' → logprob: -22.629077911376953
    10. '       ' → logprob: -22.879077911376953

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.312501907348633
    5. '۱' → logprob: -17.625001907348633
    6. '<|end|>' → logprob: -17.937501907348633
    7. '```' → logprob: -18.125001907348633
    8. '
' → logprob: -18.375001907348633
    9. '  ' → logprob: -18.875001907348633
    10. '

' → logprob: -19.000001907348633

Token 377: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2071358561515808
    2. '       ' → logprob: -1.7071359157562256
    3. ' for' → logprob: -5.7071356773376465
    4. 'for' → logprob: -6.5821356773376465
    5. '        
' → logprob: -8.332136154174805
    6. '    
' → logprob: -8.582136154174805
    7. '  
' → logprob: -8.582136154174805
    8. '
' → logprob: -8.957136154174805
    9. ' 
' → logprob: -9.457136154174805
    10. ',
' → logprob: -10.207136154174805

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2118460088968277
    2. '
' → logprob: -1.7118459939956665
    3. ' for' → logprob: -4.836845874786377
    4. 'for' → logprob: -7.211845874786377
    5. '        
' → logprob: -7.711845874786377
    6. '  
' → logprob: -8.086846351623535
    7. '    
' → logprob: -8.211846351623535
    8. '   ' → logprob: -8.461846351623535
    9. '	' → logprob: -9.086846351623535
    10. ' 
' → logprob: -9.336846351623535

Token 379: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28426775336265564
    2. 'for' (adapté à ' for') → logprob: -2.0342676639556885
    3. ' for' → logprob: -2.1592676639556885
    4. '
' → logprob: -6.784267902374268
    5. '        
' → logprob: -9.78426742553711
    6. '   ' → logprob: -10.78426742553711
    7. ' 
' → logprob: -11.15926742553711
    8. '	for' → logprob: -11.53426742553711
    9. '
' → logprob: -12.78426742553711
    10. '    
' → logprob: -12.78426742553711

Token 380: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13438774645328522
    2. 'idx' → logprob: -2.384387731552124
    3. ' i' → logprob: -3.884387731552124
    4. ' idx' → logprob: -4.634387969970703
    5. 'index' → logprob: -5.759387969970703
    6. ' index' → logprob: -8.759387969970703
    7. '   ' → logprob: -11.009387969970703
    8. ' ' → logprob: -14.134387969970703
    9. ',' → logprob: -14.509387969970703
    10. 'indx' → logprob: -14.509387969970703

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008909751777537167
    2. 'in' → logprob: -8.000890731811523
    3. ' ,' → logprob: -8.125890731811523
    4. ' in' → logprob: -8.375890731811523
    5. ',char' → logprob: -10.625890731811523
    6. ',in' → logprob: -13.625890731811523
    7. ',c' → logprob: -13.875890731811523
    8. '‌,' → logprob: -14.625890731811523
    9. ',value' → logprob: -14.750890731811523
    10. ' ' → logprob: -14.750890731811523

Token 382: ' ch' (ID: 549)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.022289134562015533
    2. ' count' → logprob: -4.647289276123047
    3. 'char' → logprob: -4.772289276123047
    4. 'cnt' → logprob: -6.147289276123047
    5. 'ch' → logprob: -6.897289276123047
    6. '(count' → logprob: -8.397289276123047
    7. 'c' → logprob: -8.522289276123047
    8. ' char' → logprob: -8.897289276123047
    9. 'key' → logprob: -9.522289276123047
    10. ' (' → logprob: -10.022289276123047

Token 383: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33659136295318604
    2. ' in' → logprob: -1.336591362953186
    3. 'in' → logprob: -3.8365912437438965
    4. ' ,' → logprob: -6.7115912437438965
    5. ' ' → logprob: -9.086591720581055
    6. 's' → logprob: -9.961591720581055
    7. ',char' → logprob: -10.711591720581055
    8. ',count' → logprob: -10.961591720581055
    9. '_in' → logprob: -11.586591720581055
    10. '  ' → logprob: -11.711591720581055

Token 384: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0007135047344490886
    2. ' enumerate' → logprob: -7.250713348388672
    3. 'umer' → logprob: -12.875713348388672
    4. 'enum' → logprob: -14.000713348388672
    5. 'en' → logprob: -16.000713348388672
    6. 'self' → logprob: -16.000713348388672
    7. '```' → logprob: -17.375713348388672
    8. '.enumer' → logprob: -17.750713348388672
    9. '`' → logprob: -18.500713348388672
    10. '
' → logprob: -18.625713348388672

Token 385: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004538942594081163
    2. 'self' → logprob: -5.5045390129089355
    3. ' (' → logprob: -8.504538536071777
    4. ' self' → logprob: -8.629538536071777
    5. '(' → logprob: -10.379538536071777
    6. '       ' → logprob: -10.754538536071777
    7. ')' → logprob: -11.379538536071777
    8. '           ' → logprob: -12.504538536071777
    9. '   ' → logprob: -12.879538536071777
    10. ',' → logprob: -12.879538536071777

Token 386: '.al' (ID: 19517)
  Prédit: '.char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.04943504184484482
    2. '.al' → logprob: -3.2994351387023926
    3. '.original' → logprob: -4.549435138702393
    4. 'char' → logprob: -8.174434661865234
    5. ' .' → logprob: -8.424434661865234
    6. '.' → logprob: -8.924434661865234
    7. '.counter' → logprob: -10.424434661865234
    8. '.character' → logprob: -11.049434661865234
    9. '   ' → logprob: -11.549434661865234
    10. '.alpha' → logprob: -11.674434661865234

Token 387: 'phabet' (ID: 29466)
  Prédit: 'phabet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phabet' → logprob: -0.00031699295504949987
    2. 'ph' → logprob: -8.750316619873047
    3. 'pha' → logprob: -8.875316619873047
    4. 'p' → logprob: -11.500316619873047
    5. 'h' → logprob: -12.875316619873047
    6. 'alphabet' → logprob: -13.750316619873047
    7. '_' → logprob: -14.000316619873047
    8. '_ph' → logprob: -14.500316619873047
    9. '```' → logprob: -14.625316619873047
    10. '`' → logprob: -15.000316619873047

Token 388: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5762912034988403
    2. '):' → logprob: -0.8262912034988403
    3. '):
' → logprob: -8.07629108428955
    4. '       ' → logprob: -10.32629108428955
    5. '   ' → logprob: -12.95129108428955
    6. ' ):' → logprob: -13.45129108428955
    7. '           ' → logprob: -13.82629108428955
    8. ':' → logprob: -13.95129108428955
    9. '):

' → logprob: -13.95129108428955
    10. ' ):
' → logprob: -13.95129108428955

Token 389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04656894505023956
    2. ':' → logprob: -4.046568870544434
    3. '       ' → logprob: -4.046568870544434
    4. '<|end|>' → logprob: -5.546568870544434
    5. ' if' → logprob: -6.921568870544434
    6. '            ' → logprob: -6.921568870544434
    7. '   ' → logprob: -6.921568870544434
    8. '        ' → logprob: -7.296568870544434
    9. '<|end|>' → logprob: -7.671568870544434
    10. ':
' → logprob: -8.046568870544434

Token 390: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12328492105007172
    2. '           ' → logprob: -3.1232848167419434
    3. '<|end|>' → logprob: -3.3732848167419434
    4. 'if' (adapté à ' if') → logprob: -4.373284816741943
    5. ' count' → logprob: -4.748284816741943
    6. 'count' → logprob: -5.248284816741943
    7. ' ' → logprob: -5.373284816741943
    8. '   ' → logprob: -6.498284816741943
    9. ' counts' → logprob: -6.748284816741943
    10. '       ' → logprob: -6.998284816741943

Token 391: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23931720852851868
    2. ' self' → logprob: -1.6143171787261963
    3. '           ' → logprob: -4.364317417144775
    4. '(self' → logprob: -7.739317417144775
    5. '   ' → logprob: -7.989317417144775
    6. '               ' → logprob: -8.489316940307617
    7. ' (' → logprob: -10.364316940307617
    8. ' ' → logprob: -10.864316940307617
    9. '  ' → logprob: -11.364316940307617
    10. '       ' → logprob: -11.739316940307617

Token 392: '.char' (ID: 18508)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.2051728218793869
    2. '.char' → logprob: -1.7051727771759033
    3. '_char' → logprob: -6.080173015594482
    4. ' char' → logprob: -6.580173015594482
    5. '   ' → logprob: -10.455172538757324
    6. '<char' → logprob: -10.955172538757324
    7. '.' → logprob: -11.580172538757324
    8. '	char' → logprob: -12.705172538757324
    9. '._' → logprob: -13.080172538757324
    10. ' .' → logprob: -13.205172538757324

Token 393: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -14.00000286102295
    3. 'counter' → logprob: -14.25000286102295
    4. '_counts' → logprob: -14.87500286102295
    5. '_c' → logprob: -15.00000286102295
    6. 'Counter' → logprob: -15.62500286102295
    7. ' _' → logprob: -15.62500286102295
    8. ')_' → logprob: -15.75000286102295
    9. '_count' → logprob: -15.87500286102295
    10. ']_' → logprob: -16.375003814697266

Token 394: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.500001907348633
    3. ' [' → logprob: -16.250001907348633
    4. '[
' → logprob: -16.750001907348633
    5. '[c' → logprob: -16.750001907348633
    6. '[get' → logprob: -18.000001907348633
    7. '.get' → logprob: -18.875001907348633
    8. '[count' → logprob: -19.000001907348633
    9. '[cur' → logprob: -19.875001907348633
    10. 'ch' → logprob: -20.125001907348633

Token 395: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011328381486237049
    2. '%' → logprob: -4.886328220367432
    3. ']%' → logprob: -5.636328220367432
    4. '}' → logprob: -9.26132869720459
    5. ')' → logprob: -10.26132869720459
    6. ' %' → logprob: -11.13632869720459
    7. ')%' → logprob: -13.88632869720459
    8. ' ]' → logprob: -14.01132869720459
    9. '```' → logprob: -14.51132869720459
    10. '']' → logprob: -14.51132869720459

Token 396: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3132677972316742
    2. '%' → logprob: -1.3132678270339966
    3. ' &' → logprob: -13.688267707824707
    4. ' ' → logprob: -13.813267707824707
    5. '&' → logprob: -14.313267707824707
    6. '[' → logprob: -14.563267707824707
    7. ' ' → logprob: -14.688267707824707
    8. ')' → logprob: -14.938267707824707
    9. ' %
' → logprob: -15.063267707824707
    10. '   ' → logprob: -15.063267707824707

Token 397: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.000028610229492
    4. '```' → logprob: -16.000028610229492
    5. '
' → logprob: -17.000028610229492
    6. '  ' → logprob: -18.625028610229492
    7. '{' → logprob: -19.500028610229492
    8. '۲' → logprob: -19.875028610229492
    9. '`' → logprob: -20.125028610229492
    10. '

' → logprob: -20.500028610229492

Token 398: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -16.375001907348633
    4. '```' → logprob: -16.625001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '{' → logprob: -20.125001907348633
    7. '{
' → logprob: -20.375001907348633
    8. '۲' → logprob: -20.375001907348633
    9. '

' → logprob: -20.500001907348633
    10. '  ' → logprob: -21.375001907348633

Token 399: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4488722085952759
    2. '==' → logprob: -1.0738722085952759
    3. ' !=' → logprob: -4.198872089385986
    4. '1' → logprob: -5.823872089385986
    5. ' ==' → logprob: -6.323872089385986
    6. ':' → logprob: -9.073872566223145
    7. '!==' → logprob: -10.448872566223145
    8. ')!=' → logprob: -11.448872566223145
    9. '()!=' → logprob: -11.823872566223145
    10. '>' → logprob: -11.823872566223145

Token 400: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006748058367520571
    2. ' ' → logprob: -5.006748199462891
    3. '1' → logprob: -10.38174819946289
    4. '
' → logprob: -14.00674819946289
    5. '=' → logprob: -15.00674819946289
    6. '  ' → logprob: -16.25674819946289
    7. '```' → logprob: -16.38174819946289
    8. '   ' → logprob: -16.50674819946289
    9. ' 
' → logprob: -16.63174819946289
    10. '
' → logprob: -16.88174819946289

Token 401: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '1' → logprob: -15.000085830688477
    4. '
' → logprob: -15.750085830688477
    5. '```' → logprob: -17.687585830688477
    6. '۰' → logprob: -18.187585830688477
    7. '

' → logprob: -18.937585830688477
    8. '00' → logprob: -19.000085830688477
    9. '<|end|>' → logprob: -19.000085830688477
    10. '=' → logprob: -19.062585830688477

Token 402: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5760487914085388
    2. ':
' → logprob: -0.8260487914085388
    3. '           ' → logprob: -9.826048851013184
    4. '):
' → logprob: -10.701048851013184
    5. '       ' → logprob: -12.076048851013184
    6. ':
' → logprob: -12.076048851013184
    7. ',' → logprob: -12.201048851013184
    8. ':

' → logprob: -12.326048851013184
    9. '               ' → logprob: -12.451048851013184
    10. ' :
' → logprob: -12.826048851013184

Token 403: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01864488422870636
    2. '           ' → logprob: -4.5186448097229
    3. ' ' → logprob: -5.5186448097229
    4. '                   ' → logprob: -7.2686448097229
    5. '                
' → logprob: -7.2686448097229
    6. '                ' → logprob: -7.6436448097229
    7. '            ' → logprob: -7.6436448097229
    8. '            
' → logprob: -8.518645286560059
    9. ' 
' → logprob: -8.768645286560059
    10. '<|end|>' → logprob: -8.893645286560059

Token 404: ' odd' (ID: 14210)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7195503115653992
    2. 'odd' (adapté à ' odd') → logprob: -1.344550371170044
    3. ' odd' → logprob: -1.594550371170044
    4. '                   ' → logprob: -4.094550132751465
    5. '                ' → logprob: -4.344550132751465
    6. '                
' → logprob: -5.094550132751465
    7. ' 
' → logprob: -5.219550132751465
    8. '           ' → logprob: -5.969550132751465
    9. '
' → logprob: -5.969550132751465
    10. ' ' → logprob: -6.969550132751465

Token 405: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.07889848947525024
    2. '_char' → logprob: -2.5788984298706055
    3. 'char' → logprob: -13.328898429870605
    4. '_character' → logprob: -13.453898429870605
    5. 'count' → logprob: -13.578898429870605
    6. '_counter' → logprob: -14.453898429870605
    7. '_token' → logprob: -14.453898429870605
    8. 'Char' → logprob: -14.703898429870605
    9. '_code' → logprob: -14.703898429870605
    10. ' _' → logprob: -15.078898429870605

Token 406: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06197473779320717
    2. '+=' → logprob: -2.8119747638702393
    3. ']+=' → logprob: -12.43697452545166
    4. '   ' → logprob: -13.68697452545166
    5. '    ' → logprob: -13.81197452545166
    6. '1' → logprob: -15.18697452545166
    7. '```' → logprob: -15.68697452545166
    8. '=' → logprob: -15.93697452545166
    9. '+' → logprob: -15.93697452545166
    10. ',' → logprob: -16.186975479125977

Token 407: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028052295092493296
    2. ' ' → logprob: -5.877805233001709
    3. '   ' → logprob: -15.25280475616455
    4. '```' → logprob: -17.127805709838867
    5. '  ' → logprob: -18.002805709838867
    6. '<|end|>' → logprob: -18.315305709838867
    7. '`' → logprob: -18.565305709838867
    8. '    ' → logprob: -19.502805709838867
    9. '       ' → logprob: -19.565305709838867
    10. '
' → logprob: -19.627805709838867

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '
' → logprob: -17.8750057220459
    4. '   ' → logprob: -18.3750057220459
    5. '```' → logprob: -19.0000057220459
    6. '<|end|>' → logprob: -20.0000057220459
    7. '

' → logprob: -20.9375057220459
    8. '-' → logprob: -21.0625057220459
    9. '2' → logprob: -21.1250057220459
    10. '۱' → logprob: -21.1250057220459

Token 409: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021926850080490112
    2. '
' → logprob: -3.8969268798828125
    3. '           ' → logprob: -7.1469268798828125
    4. '<|end|>' → logprob: -8.271926879882812
    5. ' if' → logprob: -9.146926879882812
    6. ' and' → logprob: -10.271926879882812
    7. ' ' → logprob: -10.271926879882812
    8. '  
' → logprob: -10.396926879882812
    9. ',' → logprob: -10.646926879882812
    10. '
' → logprob: -10.771926879882812

Token 410: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015474741347134113
    2. '           ' → logprob: -4.390474796295166
    3. ' if' → logprob: -6.890474796295166
    4. ' ' → logprob: -7.015474796295166
    5. '       ' → logprob: -7.765474796295166
    6. '
' → logprob: -8.765474319458008
    7. '<|end|>' → logprob: -9.265474319458008
    8. '                   ' → logprob: -10.015474319458008
    9. '  
' → logprob: -10.140474319458008
    10. '                ' → logprob: -10.265474319458008

Token 411: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.05603701248764992
    2. ' odd' → logprob: -3.056036949157715
    3. '               ' → logprob: -4.931036949157715
    4. 'if' → logprob: -9.056036949157715
    5. ' if' → logprob: -10.056036949157715
    6. '                   ' → logprob: -11.431036949157715
    7. '           ' → logprob: -11.556036949157715
    8. 'od' → logprob: -12.181036949157715
    9. '```' → logprob: -12.306036949157715
    10. '   ' → logprob: -12.556036949157715

Token 412: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -5.200166469876422e-06
    2. 'char' → logprob: -12.375004768371582
    3. '               ' → logprob: -14.500004768371582
    4. 'Char' → logprob: -15.750004768371582
    5. '           ' → logprob: -16.2500057220459
    6. ' _' → logprob: -16.7500057220459
    7. '```' → logprob: -17.1250057220459
    8. '_character' → logprob: -17.7500057220459
    9. '_CHAR' → logprob: -17.8750057220459
    10. '_' → logprob: -18.1250057220459

Token 413: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.7697225252486533e-06
    2. 'Index' → logprob: -13.250003814697266
    3. 'index' → logprob: -14.250003814697266
    4. '_' → logprob: -14.875003814697266
    5. '_idx' → logprob: -15.250003814697266
    6. '_INDEX' → logprob: -15.375003814697266
    7. ' _' → logprob: -16.250003814697266
    8. '=_' → logprob: -16.375003814697266
    9. ')_' → logprob: -18.000003814697266
    10. '_indices' → logprob: -18.000003814697266

Token 414: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740777611732483
    2. ' =' → logprob: -0.9740777611732483
    3. ' =
' → logprob: -15.724078178405762
    4. ' ' → logprob: -15.724078178405762
    5. '=
' → logprob: -15.974078178405762
    6. '=

' → logprob: -16.724077224731445
    7. '＝' → logprob: -16.974077224731445
    8. '=index' → logprob: -16.974077224731445
    9. '=int' → logprob: -17.474077224731445
    10. '=i' → logprob: -17.724077224731445

Token 415: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0040785204619169235
    2. ' idx' → logprob: -5.504078388214111
    3. '	idx' → logprob: -17.129077911376953
    4. '(idx' → logprob: -17.879077911376953
    5. 'index' → logprob: -18.254077911376953
    6. '[idx' → logprob: -18.379077911376953
    7. '_idx' → logprob: -18.879077911376953
    8. '   ' → logprob: -19.504077911376953
    9. 'id' → logprob: -19.629077911376953
    10. '           ' → logprob: -20.129077911376953

Token 416: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09896258264780045
    2. '
' → logprob: -2.9739625453948975
    3. '<|end|>' → logprob: -3.8489625453948975
    4. '       ' → logprob: -4.223962783813477
    5. '           ' → logprob: -5.098962783813477
    6. '  
' → logprob: -8.348962783813477
    7. '              ' → logprob: -9.098962783813477
    8. ' if' → logprob: -9.223962783813477
    9. '                ' → logprob: -9.348962783813477
    10. '<|end|>' → logprob: -9.598962783813477

Token 417: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006186283193528652
    2. '       ' → logprob: -5.756186485290527
    3. '
' → logprob: -6.506186485290527
    4. '           ' → logprob: -6.881186485290527
    5. '<|end|>' → logprob: -7.756186485290527
    6. ' if' → logprob: -11.631186485290527
    7. '              ' → logprob: -11.881186485290527
    8. '		       ' → logprob: -12.256186485290527
    9. '  
' → logprob: -12.506186485290527
    10. '<|end|>' → logprob: -12.631186485290527

Token 418: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0064217825420200825
    2. ' if' → logprob: -5.7564215660095215
    3. '               ' → logprob: -5.7564215660095215
    4. '           ' → logprob: -9.63142204284668
    5. '
' → logprob: -11.63142204284668
    6. '```' → logprob: -13.88142204284668
    7. '                   ' → logprob: -14.88142204284668
    8. '   ' → logprob: -15.38142204284668
    9. '       ' → logprob: -16.00642204284668
    10. '                
' → logprob: -16.13142204284668

Token 419: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.00861468818038702
    2. ' odd' → logprob: -4.758614540100098
    3. 'od' → logprob: -15.883614540100098
    4. '   ' → logprob: -18.883615493774414
    5. '
' → logprob: -20.133615493774414
    6. '               ' → logprob: -21.008615493774414
    7. '           ' → logprob: -21.133615493774414
    8. ' ' → logprob: -21.633615493774414
    9. ' ' → logprob: -21.883615493774414
    10. 'old' → logprob: -22.508615493774414

Token 420: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.531315314830863e-06
    2. 'count' → logprob: -12.625003814697266
    3. '>' → logprob: -16.000003814697266
    4. '   ' → logprob: -17.875003814697266
    5. ' count' → logprob: -18.000003814697266
    6. '_char' → logprob: -18.375003814697266
    7. '               ' → logprob: -18.875003814697266
    8. '	count' → logprob: -19.250003814697266
    9. '_token' → logprob: -20.000003814697266
    10. '_' → logprob: -20.000003814697266

Token 421: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01105300523340702
    2. ' >' → logprob: -4.511053085327148
    3. '()>' → logprob: -13.136053085327148
    4. '>
' → logprob: -13.386053085327148
    5. '   ' → logprob: -14.511053085327148
    6. '>

' → logprob: -15.386053085327148
    7. '&gt' → logprob: -15.386053085327148
    8. ')>' → logprob: -15.511053085327148
    9. '1' → logprob: -16.13605308532715
    10. ' ' → logprob: -16.38605308532715

Token 422: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001706247916445136
    2. ' ' → logprob: -6.376706123352051
    3. '   ' → logprob: -12.50170612335205
    4. '  ' → logprob: -16.376707077026367
    5. '```' → logprob: -16.501707077026367
    6. '0' → logprob: -16.626707077026367
    7. '           ' → logprob: -18.001707077026367
    8. '       ' → logprob: -18.064207077026367
    9. '<|end|>' → logprob: -18.501707077026367
    10. '
' → logprob: -18.689207077026367

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.500001907348633
    4. '```' → logprob: -18.375001907348633
    5. '
' → logprob: -19.250001907348633
    6. '  ' → logprob: -19.375001907348633
    7. '0' → logprob: -20.125001907348633
    8. '<|end|>' → logprob: -20.625001907348633
    9. '۱' → logprob: -20.687501907348633
    10. '2' → logprob: -21.000001907348633

Token 424: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5097433924674988
    2. ':' → logprob: -1.2597434520721436
    3. ':
' → logprob: -2.2597434520721436
    4. '               ' → logprob: -4.6347432136535645
    5. '           ' → logprob: -7.1347432136535645
    6. '                       ' → logprob: -7.6347432136535645
    7. '                  ' → logprob: -9.759743690490723
    8. ':return' → logprob: -9.759743690490723
    9. '       ' → logprob: -10.634743690490723
    10. ',' → logprob: -11.259743690490723

Token 425: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001438266917830333
    2. '               ' → logprob: -9.250144004821777
    3. 'break' → logprob: -11.125144004821777
    4. '                       ' → logprob: -11.250144004821777
    5. ' break' → logprob: -12.125144004821777
    6. '           ' → logprob: -12.750144004821777
    7. 'return' → logprob: -12.750144004821777
    8. '                  ' → logprob: -12.875144004821777
    9. '                    
' → logprob: -13.250144004821777
    10. '
' → logprob: -13.625144004821777

Token 426: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6942680478096008
    2. 'break' → logprob: -0.6942680478096008
    3. '                   ' → logprob: -7.194268226623535
    4. ' break' → logprob: -8.569268226623535
    5. ' return' → logprob: -9.069268226623535
    6. '
' → logprob: -10.194268226623535
    7. '                       ' → logprob: -11.194268226623535
    8. '                    
' → logprob: -12.444268226623535
    9. '               ' → logprob: -12.569268226623535
    10. '```' → logprob: -13.319268226623535

Token 427: ' False' (ID: 7983)
  Prédit: '(False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.018493937328457832
    2. 'False' → logprob: -4.018494129180908
    3. ' False' → logprob: -8.01849365234375
    4. ' (' → logprob: -11.14349365234375
    5. '(True' → logprob: -16.26849365234375
    6. '   ' → logprob: -17.01849365234375
    7. '(F' → logprob: -17.14349365234375
    8. '=False' → logprob: -18.26849365234375
    9. '(FALSE' → logprob: -18.76849365234375
    10. '(' → logprob: -19.01849365234375

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008067715098150074
    2. ',None' → logprob: -7.25080680847168
    3. ',
' → logprob: -9.87580680847168
    4. ' ,' → logprob: -10.50080680847168
    5. 'None' → logprob: -11.62580680847168
    6. '   ' → logprob: -13.00080680847168
    7. '               ' → logprob: -13.75080680847168
    8. '                   ' → logprob: -13.75080680847168
    9. 'False' → logprob: -14.25080680847168
    10. ',n' → logprob: -14.50080680847168

Token 429: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.246537173457909e-06
    2. ' -' → logprob: -12.375003814697266
    3. 'None' → logprob: -19.625003814697266
    4. '   ' → logprob: -20.250003814697266
    5. ' ' → logprob: -20.250003814697266
    6. '0' → logprob: -20.250003814697266
    7. '  ' → logprob: -21.000003814697266
    8. '
' → logprob: -21.125003814697266
    9. '-
' → logprob: -21.500003814697266
    10. '<|end|>' → logprob: -22.500003814697266

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.375
    3. ' ' → logprob: -17.0
    4. '۱' → logprob: -18.375
    5. '```' → logprob: -18.5
    6. '<|end|>' → logprob: -18.75
    7. '१' → logprob: -19.25
    8. '১' → logprob: -19.375
    9. '   ' → logprob: -19.375
    10. '１' → logprob: -20.3125

Token 431: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049955908209085464
    2. '
' → logprob: -3.5499558448791504
    3. '        
' → logprob: -4.67495584487915
    4. '<|end|>' → logprob: -4.79995584487915
    5. 'return' → logprob: -7.67495584487915
    6. '  
' → logprob: -8.174956321716309
    7. '    
' → logprob: -8.174956321716309
    8. '           ' → logprob: -8.424956321716309
    9. '\n' → logprob: -8.549956321716309
    10. '               ' → logprob: -8.549956321716309

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043376852408982813
    2. '
' → logprob: -9.125433921813965
    3. 'return' → logprob: -9.125433921813965
    4. '        
' → logprob: -9.500433921813965
    5. '	' → logprob: -10.500433921813965
    6. ' return' → logprob: -10.625433921813965
    7. '	return' → logprob: -10.750433921813965
    8. '<|end|>' → logprob: -10.875433921813965
    9. '           ' → logprob: -11.750433921813965
    10. '   ' → logprob: -11.750433921813965

Token 433: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006226073601283133
    2. 'return' (adapté à ' return') → logprob: -8.000622749328613
    3. '   ' → logprob: -9.000622749328613
    4. ' return' → logprob: -9.125622749328613
    5. '
' → logprob: -10.375622749328613
    6. '	return' → logprob: -11.625622749328613
    7. '        
' → logprob: -12.250622749328613
    8. '           ' → logprob: -13.000622749328613
    9. '```' → logprob: -13.000622749328613
    10. '	' → logprob: -14.000622749328613

Token 434: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00864187441766262
    2. ' True' → logprob: -4.758641719818115
    3. '(True' → logprob: -10.508642196655273
    4. '   ' → logprob: -19.008642196655273
    5. 'Tr' → logprob: -21.258642196655273
    6. '=True' → logprob: -21.383642196655273
    7. '(' → logprob: -22.883642196655273
    8. 'true' → logprob: -23.008642196655273
    9. '.True' → logprob: -23.258642196655273
    10. '
' → logprob: -23.258642196655273

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.990154047845863e-05
    2. ',
' → logprob: -10.375049591064453
    3. ' ,' → logprob: -11.250049591064453
    4. '       ' → logprob: -12.750049591064453
    5. '   ' → logprob: -13.500049591064453
    6. ',\
' → logprob: -14.750049591064453
    7. ',int' → logprob: -15.250049591064453
    8. ',self' → logprob: -16.250049591064453
    9. '```' → logprob: -16.375049591064453
    10. 'odd' → logprob: -16.500049591064453

Token 436: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.03806111589074135
    2. ' odd' → logprob: -3.2880611419677734
    3. 'od' → logprob: -10.913061141967773
    4. '   ' → logprob: -14.663061141967773
    5. 'ood' → logprob: -15.163061141967773
    6. 'old' → logprob: -15.288061141967773
    7. '       ' → logprob: -16.038061141967773
    8. ' od' → logprob: -16.663061141967773
    9. '           ' → logprob: -16.788061141967773
    10. ' ' → logprob: -17.413061141967773

Token 437: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -7.896309739408025e-07
    2. 'char' → logprob: -14.125000953674316
    3. '_count' → logprob: -18.25
    4. 'Char' → logprob: -18.375
    5. '_index' → logprob: -18.5
    6. '_CHAR' → logprob: -19.0
    7. '-char' → logprob: -19.375
    8. ' char' → logprob: -20.0
    9. '_' → logprob: -20.125
    10. '
' → logprob: -20.625

Token 438: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.1398757123970427e-05
    2. 'index' → logprob: -11.625011444091797
    3. '_idx' → logprob: -13.000011444091797
    4. 'ex' → logprob: -17.875011444091797
    5. 'dex' → logprob: -17.875011444091797
    6. 'Index' → logprob: -18.125011444091797
    7. ' index' → logprob: -18.125011444091797
    8. '_INDEX' → logprob: -18.500011444091797
    9. '_' → logprob: -18.625011444091797
    10. '_ind' → logprob: -19.000011444091797

Token 439: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6246557831764221
    2. '    
' → logprob: -0.9996557831764221
    3. '<|end|>' → logprob: -2.4996557235717773
    4. '
' → logprob: -5.124655723571777
    5. '  
' → logprob: -5.499655723571777
    6. '<|end|>' → logprob: -6.374655723571777
    7. 'def' → logprob: -7.124655723571777
    8. '        
' → logprob: -7.374655723571777
    9. '   
' → logprob: -7.624655723571777
    10. '```' → logprob: -7.624655723571777

Token 440: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2523846924304962
    2. '   ' → logprob: -1.5023846626281738
    3. '    
' → logprob: -7.752384662628174
    4. ' def' → logprob: -10.877385139465332
    5. '  
' → logprob: -12.877385139465332
    6. '        
' → logprob: -13.377385139465332
    7. '   
' → logprob: -13.752385139465332
    8. '
' → logprob: -14.127385139465332
    9. '  ' → logprob: -14.627385139465332
    10. '	def' → logprob: -15.502385139465332

Token 441: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.584861744660884e-05
    2. ' def' → logprob: -10.250045776367188
    3. '   ' → logprob: -11.500045776367188
    4. '    
' → logprob: -15.500045776367188
    5. '	def' → logprob: -17.625045776367188
    6. '
' → logprob: -19.125045776367188
    7. '@' → logprob: -19.375045776367188
    8. ' ' → logprob: -19.500045776367188
    9. '  
' → logprob: -19.750045776367188
    10. '  ' → logprob: -19.750045776367188

Token 442: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.44821032881736755
    2. ' def' → logprob: -1.19821035861969
    3. 'count' → logprob: -3.8232102394104004
    4. 'def' → logprob: -3.8232102394104004
    5. ' calculate' → logprob: -5.1982102394104
    6. '_count' → logprob: -5.3232102394104
    7. ' get' → logprob: -5.8232102394104
    8. ' compute' → logprob: -6.5732102394104
    9. ' _' → logprob: -7.8232102394104
    10. 'calculate' → logprob: -8.323210716247559

Token 443: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.17703238129615784
    2. '(' → logprob: -2.052032470703125
    3. '(self' → logprob: -4.302032470703125
    4. '_' → logprob: -4.427032470703125
    5. '()' → logprob: -5.677032470703125
    6. '_self' → logprob: -6.427032470703125
    7. '_possible' → logprob: -6.802032470703125
    8. '_an' → logprob: -7.677032470703125
    9. '_p' → logprob: -8.302032470703125
    10. '_tokens' → logprob: -9.052032470703125

Token 444: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0010778261348605156
    2. 'indrome' → logprob: -6.876077651977539
    3. '_' → logprob: -10.501077651977539
    4. '_ind' → logprob: -12.126077651977539
    5. 'in' → logprob: -13.001077651977539
    6. '[' → logprob: -13.876077651977539
    7. '
' → logprob: -13.876077651977539
    8. '```' → logprob: -14.126077651977539
    9. '[ind' → logprob: -14.251077651977539
    10. '``' → logprob: -14.501077651977539

Token 445: 'rom' (ID: 511)
  Prédit: 'rom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rom' → logprob: -0.00019781860464718193
    2. '_rom' → logprob: -9.500197410583496
    3. '_' → logprob: -10.125197410583496
    4. 'r' → logprob: -10.875197410583496
    5. ' rom' → logprob: -11.375197410583496
    6. 'ro' → logprob: -11.750197410583496
    7. 'rome' → logprob: -11.875197410583496
    8. 'romatic' → logprob: -11.875197410583496
    9. 'romes' → logprob: -12.125197410583496
    10. 'ром' → logprob: -12.375197410583496

Token 446: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0005545823951251805
    2. 'es' → logprob: -8.000555038452148
    3. 'e' → logprob: -8.750555038452148
    4. '
' → logprob: -11.500555038452148
    5. '   ' → logprob: -11.875555038452148
    6. '#' → logprob: -12.125555038452148
    7. '[' → logprob: -12.625555038452148
    8. 'ics' → logprob: -12.625555038452148
    9. '{' → logprob: -12.750555038452148
    10. '_' → logprob: -13.000555038452148

Token 447: '_an' (ID: 47921)
  Prédit: '_an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_an' → logprob: -0.0019856137223541737
    2. '_' → logprob: -6.251985549926758
    3. 'an' → logprob: -10.876985549926758
    4. '_sub' → logprob: -11.376985549926758
    5. '_per' → logprob: -11.876985549926758
    6. 's' → logprob: -12.501985549926758
    7. ' _' → logprob: -13.251985549926758
    8. '_in' → logprob: -13.376985549926758
    9. '_count' → logprob: -13.751985549926758
    10. '_a' → logprob: -13.876985549926758

Token 448: 'agrams' (ID: 54218)
  Prédit: 'agrams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agrams' → logprob: -0.001980260480195284
    2. 'a' → logprob: -6.751980304718018
    3. 'agram' → logprob: -7.126980304718018
    4. 'agr' → logprob: -13.00197982788086
    5. 'ar' → logprob: -13.37697982788086
    6. 'al' → logprob: -14.00197982788086
    7. 's' → logprob: -15.75197982788086
    8. '_' → logprob: -15.75197982788086
    9. 'agra' → logprob: -15.75197982788086
    10. 'AGRAM' → logprob: -15.75197982788086

Token 449: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024838652461767197
    2. '(' → logprob: -6.00248384475708
    3. ' (' → logprob: -12.252484321594238
    4. 'self' → logprob: -13.502484321594238
    5. '(
' → logprob: -13.877484321594238
    6. '   ' → logprob: -14.377484321594238
    7. '(s' → logprob: -15.627484321594238
    8. '()' → logprob: -15.752484321594238
    9. ' ' → logprob: -16.752483367919922
    10. '       ' → logprob: -16.752483367919922

Token 450: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5343890190124512
    2. '):' → logprob: -1.4093890190124512
    3. ')' → logprob: -1.9093890190124512
    4. '):
' → logprob: -4.284389019012451
    5. 'self' → logprob: -5.659389019012451
    6. ')(' → logprob: -6.409389019012451
    7. '   ' → logprob: -7.159389019012451
    8. '():' → logprob: -7.409389019012451
    9. '()' → logprob: -8.28438949584961
    10. '       ' → logprob: -8.28438949584961

Token 451: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004232377745211124
    2. '(' → logprob: -5.629232406616211
    3. 'self' → logprob: -7.879232406616211
    4. ':' → logprob: -9.379232406616211
    5. '(
' → logprob: -9.754232406616211
    6. '   ' → logprob: -9.879232406616211
    7. '():' → logprob: -11.129232406616211
    8. '       ' → logprob: -11.254232406616211
    9. ' (' → logprob: -11.629232406616211
    10. '->' → logprob: -11.879232406616211

Token 452: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023249788209795952
    2. ' int' → logprob: -3.773249864578247
    3. '(int' → logprob: -12.523249626159668
    4. '   ' → logprob: -14.648249626159668
    5. '[int' → logprob: -16.273250579833984
    6. ':int' → logprob: -16.398250579833984
    7. 'Int' → logprob: -16.773250579833984
    8. ' ' → logprob: -17.773250579833984
    9. ' (' → logprob: -18.148250579833984
    10. ')' → logprob: -18.273250579833984

Token 453: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6570138931274414
    2. '       ' → logprob: -1.2820138931274414
    3. ':' → logprob: -1.7820138931274414
    4. '(' → logprob: -3.9070138931274414
    5. '   ' → logprob: -5.282013893127441
    6. '(
' → logprob: -5.407013893127441
    7. ':
' → logprob: -5.782013893127441
    8. '():' → logprob: -7.032013893127441
    9. '{' → logprob: -7.407013893127441
    10. 'self' → logprob: -7.532013893127441

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017200425500050187
    2. ':' → logprob: -6.876719951629639
    3. '
' → logprob: -8.876720428466797
    4. ':
' → logprob: -9.001720428466797
    5. '    
' → logprob: -9.251720428466797
    6. '   ' → logprob: -9.376720428466797
    7. '```' → logprob: -9.501720428466797
    8. '():' → logprob: -10.251720428466797
    9. '        
' → logprob: -10.376720428466797
    10. '(self' → logprob: -10.501720428466797

Token 455: ' allowed' (ID: 9279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18555963039398193
    2. 'fact' → logprob: -1.810559630393982
    3. '
' → logprob: -5.5605597496032715
    4. ' fact' → logprob: -6.4355597496032715
    5. 'factor' → logprob: -8.560559272766113
    6. 'self' → logprob: -9.935559272766113
    7. '```' → logprob: -10.560559272766113
    8. 'cache' → logprob: -11.185559272766113
    9. '        
' → logprob: -11.560559272766113
    10. 'count' → logprob: -11.810559272766113

Token 456: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9679079651832581
    2. '_chars' → logprob: -1.3429079055786133
    3. ' =' → logprob: -2.2179079055786133
    4. '_char' → logprob: -2.7179079055786133
    5. '()' → logprob: -2.8429079055786133
    6. '_space' → logprob: -3.4679079055786133
    7. '_spaces' → logprob: -3.8429079055786133
    8. '_tokens' → logprob: -4.717907905578613
    9. '_string' → logprob: -4.967907905578613
    10. '_count' → logprob: -5.092907905578613

Token 457: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.4294756054878235
    2. ' odd' → logprob: -1.0544755458831787
    3. 'mid' → logprob: -8.054475784301758
    4. 'middle' → logprob: -8.179475784301758
    5. ' mid' → logprob: -10.054475784301758
    6. ' middle' → logprob: -10.429475784301758
    7. 'index' → logprob: -10.554475784301758
    8. 'idx' → logprob: -10.679475784301758
    9. 'od' → logprob: -10.804475784301758
    10. 'center' → logprob: -11.429475784301758

Token 458: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.000918604782782495
    2. '_' → logprob: -7.375918388366699
    3. '_index' → logprob: -9.0009183883667
    4. '_token' → logprob: -9.1259183883667
    5. '_chars' → logprob: -11.2509183883667
    6. 'char' → logprob: -11.3759183883667
    7. '_count' → logprob: -11.5009183883667
    8. ' _' → logprob: -12.2509183883667
    9. '_idx' → logprob: -12.2509183883667
    10. 'Char' → logprob: -12.6259183883667

Token 459: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.1756367712223437e-05
    2. 'index' → logprob: -12.125011444091797
    3. '_idx' → logprob: -12.500011444091797
    4. 'Index' → logprob: -14.000011444091797
    5. ' =' → logprob: -14.875011444091797
    6. ' index' → logprob: -15.000011444091797
    7. '_ind' → logprob: -15.375011444091797
    8. '_' → logprob: -15.750011444091797
    9. '=_' → logprob: -16.125011444091797
    10. '_INDEX' → logprob: -16.125011444091797

Token 460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192990899086
    2. '=' → logprob: -1.5019298791885376
    3. ')' → logprob: -15.251930236816406
    4. ',' → logprob: -15.501930236816406
    5. ' ' → logprob: -15.876930236816406
    6. '   ' → logprob: -16.376930236816406
    7. '    ' → logprob: -16.626930236816406
    8. '        ' → logprob: -17.751930236816406
    9. ' =
' → logprob: -17.751930236816406
    10. '=self' → logprob: -17.751930236816406

Token 461: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4741223454475403
    2. ' self' → logprob: -0.9741223454475403
    3. '       ' → logprob: -10.099122047424316
    4. '(self' → logprob: -12.724122047424316
    5. ' ' → logprob: -15.599122047424316
    6. '<|end|>' → logprob: -15.599122047424316
    7. '        ' → logprob: -15.724122047424316
    8. '	self' → logprob: -15.849122047424316
    9. '_self' → logprob: -16.099123001098633
    10. '=self' → logprob: -16.224123001098633

Token 462: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.011605920270085335
    2. '_can' → logprob: -4.511605739593506
    3. '.' → logprob: -7.886605739593506
    4. '.can' → logprob: -9.136606216430664
    5. ' .' → logprob: -10.011606216430664
    6. '.\' → logprob: -11.761606216430664
    7. ' _' → logprob: -12.011606216430664
    8. '.
' → logprob: -12.386606216430664
    9. '.__' → logprob: -12.636606216430664
    10. '   ' → logprob: -12.636606216430664

Token 463: 'can' (ID: 6929)
  Prédit: 'can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.0280383548888494e-06
    2. '_can' → logprob: -13.875000953674316
    3. '.can' → logprob: -17.250001907348633
    4. ' can' → logprob: -17.250001907348633
    5. '	can' → logprob: -17.375001907348633
    6. '
' → logprob: -18.250001907348633
    7. '(can' → logprob: -18.250001907348633
    8. '```' → logprob: -18.625001907348633
    9. '   ' → logprob: -19.625001907348633
    10. 'could' → logprob: -20.000001907348633

Token 464: '_form' (ID: 18664)
  Prédit: '_form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -12.750003814697266
    3. ' _' → logprob: -14.875003814697266
    4. '_f' → logprob: -16.000003814697266
    5. 'form' → logprob: -17.000003814697266
    6. '_format' → logprob: -17.125003814697266
    7. '_forms' → logprob: -17.250003814697266
    8. '_
' → logprob: -17.625003814697266
    9. '_use' → logprob: -17.750003814697266
    10. '_Form' → logprob: -18.125003814697266

Token 465: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.0011898684315383434
    2. 'pal' → logprob: -6.876189708709717
    3. '_form' → logprob: -9.251190185546875
    4. '_' → logprob: -10.126190185546875
    5. '_palette' → logprob: -12.626190185546875
    6. '```' → logprob: -12.626190185546875
    7. '_p' → logprob: -12.751190185546875
    8. ' palindrome' → logprob: -13.126190185546875
    9. '_pat' → logprob: -13.251190185546875
    10. 'form' → logprob: -14.001190185546875

Token 466: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.011686278507113457
    2. 'd' → logprob: -4.636686325073242
    3. 'ind' → logprob: -6.636686325073242
    4. 'ndrome' → logprob: -8.511686325073242
    5. 'id' → logprob: -8.636686325073242
    6. 'in' → logprob: -10.011686325073242
    7. '_' → logprob: -10.886686325073242
    8. 'e' → logprob: -11.261686325073242
    9. '
' → logprob: -11.386686325073242
    10. 'i' → logprob: -11.636686325073242

Token 467: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011992932297289371
    2. '       ' → logprob: -4.761992931365967
    3. '        
' → logprob: -6.011992931365967
    4. '    
' → logprob: -8.386993408203125
    5. ' 
' → logprob: -8.761993408203125
    6. '  
' → logprob: -8.886993408203125
    7. '
' → logprob: -9.386993408203125
    8. '()
' → logprob: -9.636993408203125
    9. ')' → logprob: -9.761993408203125
    10. '()' → logprob: -10.136993408203125

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013277375837787986
    2. '        
' → logprob: -7.6263275146484375
    3. '
' → logprob: -8.126327514648438
    4. '<|end|>' → logprob: -8.876327514648438
    5. '   ' → logprob: -9.126327514648438
    6. '    
' → logprob: -9.876327514648438
    7. '  
' → logprob: -10.251327514648438
    8. '```' → logprob: -10.501327514648438
    9. '[' → logprob: -10.751327514648438
    10. ')' → logprob: -10.876327514648438

Token 469: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5130071640014648
    2. '       ' → logprob: -1.1380071640014648
    3. ' if' → logprob: -3.513007164001465
    4. 'fact' → logprob: -3.513007164001465
    5. '
' → logprob: -3.888007164001465
    6. ' fact' → logprob: -8.138007164001465
    7. '   ' → logprob: -9.263007164001465
    8. '        
' → logprob: -9.638007164001465
    9. ' 
' → logprob: -9.888007164001465
    10. '        ' → logprob: -9.888007164001465

Token 470: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0059290360659360886
    2. 'not' → logprob: -5.130928993225098
    3. ' no' → logprob: -15.380928993225098
    4. '	not' → logprob: -16.005929946899414
    5. ' ' → logprob: -16.255929946899414
    6. '!' → logprob: -18.880929946899414
    7. '
' → logprob: -19.005929946899414
    8. ' n' → logprob: -19.255929946899414
    9. '    ' → logprob: -19.380929946899414
    10. ' ' → logprob: -19.380929946899414

Token 471: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.2519368827342987
    2. ' allowed' → logprob: -1.501936912536621
    3. '_allowed' → logprob: -12.501936912536621
    4. 'allow' → logprob: -12.751936912536621
    5. '.allowed' → logprob: -14.501936912536621
    6. '   ' → logprob: -15.126936912536621
    7. ' permitted' → logprob: -15.626936912536621
    8. ' ' → logprob: -16.376935958862305
    9. '
' → logprob: -16.501935958862305
    10. '       ' → logprob: -17.251935958862305

Token 472: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1608656644821167
    2. ':' → logprob: -1.9108656644821167
    3. ':return' → logprob: -7.535865783691406
    4. '       ' → logprob: -10.035865783691406
    5. '           ' → logprob: -10.160865783691406
    6. ':
' → logprob: -11.535865783691406
    7. 'return' → logprob: -12.410865783691406
    8. '):
' → logprob: -12.910865783691406
    9. ' or' → logprob: -13.035865783691406
    10. ',' → logprob: -13.535865783691406

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09288030862808228
    2. '
' → logprob: -2.4678802490234375
    3. 'return' → logprob: -5.9678802490234375
    4. '       ' → logprob: -7.2178802490234375
    5. '0' → logprob: -7.8428802490234375
    6. ' return' → logprob: -8.717880249023438
    7. '
' → logprob: -10.967880249023438
    8. '```' → logprob: -10.967880249023438
    9. '        
' → logprob: -11.342880249023438
    10. '    
' → logprob: -11.717880249023438

Token 474: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013261284679174423
    2. ' return' → logprob: -5.013261318206787
    3. '           ' → logprob: -5.263261318206787
    4. '0' → logprob: -7.013261318206787
    5. '
' → logprob: -8.013260841369629
    6. '       ' → logprob: -9.138260841369629
    7. '	return' → logprob: -12.888260841369629
    8. '   ' → logprob: -13.013260841369629
    9. '{return' → logprob: -14.013260841369629
    10. '        
' → logprob: -15.138260841369629

Token 475: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '
' → logprob: -20.00002098083496
    4. '   ' → logprob: -20.37502098083496
    5. ' 
' → logprob: -21.87502098083496
    6. '۰' → logprob: -22.00002098083496
    7. '  ' → logprob: -22.37502098083496
    8. '000' → logprob: -22.50002098083496
    9. '```' → logprob: -22.50002098083496
    10. ' ' → logprob: -22.87502098083496

Token 476: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -20.625
    4. '000' → logprob: -21.5
    5. '۰' → logprob: -21.875
    6. '
' → logprob: -22.0
    7. '```' → logprob: -22.375
    8. '00' → logprob: -23.125
    9. '  ' → logprob: -23.25
    10. '    ' → logprob: -23.6875

Token 477: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038400162011384964
    2. '       ' → logprob: -4.163400173187256
    3. '        
' → logprob: -4.163400173187256
    4. 'fact' → logprob: -5.913400173187256
    5. '    
' → logprob: -6.288400173187256
    6. '
        
' → logprob: -6.663400173187256
    7. '       
' → logprob: -8.788399696350098
    8. ' 
' → logprob: -8.913399696350098
    9. '     
' → logprob: -9.538399696350098
    10. ' fact' → logprob: -9.663399696350098

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059376589953899384
    2. 'fact' → logprob: -3.0593764781951904
    3. ' fact' → logprob: -4.5593767166137695
    4. 'factor' → logprob: -9.30937671661377
    5. 'cache' → logprob: -9.55937671661377
    6. ' cache' → logprob: -9.93437671661377
    7. '
' → logprob: -11.43437671661377
    8. 'half' → logprob: -11.55937671661377
    9. '   ' → logprob: -11.80937671661377
    10. ' factorial' → logprob: -11.93437671661377

Token 479: ' half' (ID: 6375)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.005140539258718491
    2. 'half' (adapté à ' half') → logprob: -6.13014030456543
    3. '       ' → logprob: -6.63014030456543
    4. ' fact' → logprob: -6.75514030456543
    5. 'factor' → logprob: -8.00514030456543
    6. 'cache' → logprob: -9.88014030456543
    7. '   ' → logprob: -11.13014030456543
    8. ' half' → logprob: -11.25514030456543
    9. '        
' → logprob: -11.38014030456543
    10. '
' → logprob: -12.13014030456543

Token 480: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -7.5649528298527e-05
    2. 'counts' → logprob: -9.750075340270996
    3. '_lengths' → logprob: -11.750075340270996
    4. '_chars' → logprob: -12.250075340270996
    5. '_counter' → logprob: -13.250075340270996
    6. '_' → logprob: -14.250075340270996
    7. '_count' → logprob: -15.125075340270996
    8. '```' → logprob: -15.125075340270996
    9. ' =' → logprob: -15.625075340270996
    10. '       ' → logprob: -15.625075340270996

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687264919281006
    2. ' =' → logprob: -1.13687264919281
    3. '=[' → logprob: -14.136872291564941
    4. '[' → logprob: -15.261872291564941
    5. ',' → logprob: -15.386872291564941
    6. ')' → logprob: -15.886872291564941
    7. ':' → logprob: -16.136873245239258
    8. '=[]' → logprob: -16.136873245239258
    9. ' =[' → logprob: -16.761873245239258
    10. 's' → logprob: -17.011873245239258

Token 482: ' []
' (ID: 8911)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.040367383509874344
    2. ' tuple' → logprob: -3.415367364883423
    3. '[' → logprob: -5.665367603302002
    4. '[]' → logprob: -6.415367603302002
    5. '(tuple' → logprob: -6.540367603302002
    6. '[]
' → logprob: -9.290367126464844
    7. '[
' → logprob: -10.915367126464844
    8. '()' → logprob: -11.040367126464844
    9. ' [' → logprob: -11.665367126464844
    10. '   ' → logprob: -12.540367126464844

Token 483: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13714148104190826
    2. '       ' → logprob: -2.262141466140747
    3. 'for' → logprob: -3.762141466140747
    4. ' ' → logprob: -7.887141704559326
    5. '        ' → logprob: -9.262141227722168
    6. '        
' → logprob: -9.512141227722168
    7. '	for' → logprob: -9.887141227722168
    8. ' 
' → logprob: -10.137141227722168
    9. '[' → logprob: -10.262141227722168
    10. '   ' → logprob: -10.762141227722168

Token 484: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07891258597373962
    2. ' for' → logprob: -2.5789124965667725
    3. '       ' → logprob: -10.703912734985352
    4. '	for' → logprob: -15.078912734985352
    5. '   ' → logprob: -16.57891273498535
    6. '
' → logprob: -18.32891273498535
    7. '```' → logprob: -18.45391273498535
    8. ' ' → logprob: -19.07891273498535
    9. '        
' → logprob: -19.32891273498535
    10. '        ' → logprob: -19.32891273498535

Token 485: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.018967192620038986
    2. ' ch' → logprob: -4.018967151641846
    3. 'i' → logprob: -7.893967151641846
    4. 'idx' → logprob: -8.393967628479004
    5. 'char' → logprob: -9.393967628479004
    6. 'c' → logprob: -10.018967628479004
    7. ' i' → logprob: -10.768967628479004
    8. 'key' → logprob: -10.768967628479004
    9. '   ' → logprob: -10.893967628479004
    10. ' idx' → logprob: -11.893967628479004

Token 486: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005245733540505171
    2. 'in' → logprob: -5.255245685577393
    3. ' ' → logprob: -12.13024616241455
    4. '        ' → logprob: -13.38024616241455
    5. '    ' → logprob: -13.75524616241455
    6. '	in' → logprob: -13.88024616241455
    7. 's' → logprob: -14.38024616241455
    8. '   ' → logprob: -15.25524616241455
    9. ',' → logprob: -15.44274616241455
    10. '       ' → logprob: -15.50524616241455

Token 487: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019368429202586412
    2. ' self' → logprob: -6.251936912536621
    3. 'elf' → logprob: -12.376936912536621
    4. '
' → logprob: -13.126936912536621
    5. '   ' → logprob: -14.251936912536621
    6. '(self' → logprob: -14.751936912536621
    7. '       ' → logprob: -15.626936912536621
    8. ' ' → logprob: -16.001935958862305
    9. '[self' → logprob: -16.126935958862305
    10. '    ' → logprob: -16.626935958862305

Token 488: '.al' (ID: 19517)
  Prédit: '.al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.al' → logprob: -0.0013109555002301931
    2. '.original' → logprob: -6.7513108253479
    3. 'alphabet' → logprob: -9.501311302185059
    4. '.char' → logprob: -10.126311302185059
    5. '.' → logprob: -11.501311302185059
    6. ' .' → logprob: -12.126311302185059
    7. 'self' → logprob: -12.251311302185059
    8. 'original' → logprob: -13.001311302185059
    9. '	al' → logprob: -14.626311302185059
    10. '.alpha' → logprob: -14.626311302185059

Token 489: 'phabet' (ID: 29466)
  Prédit: 'phabet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phabet' → logprob: -0.005706577096134424
    2. 'alphabet' → logprob: -5.505706787109375
    3. 'ph' → logprob: -6.630706787109375
    4. 'l' → logprob: -9.505706787109375
    5. 'f' → logprob: -9.880706787109375
    6. 'pha' → logprob: -10.630706787109375
    7. 'phal' → logprob: -10.880706787109375
    8. '.al' → logprob: -11.255706787109375
    9. 'abet' → logprob: -11.380706787109375
    10. 'char' → logprob: -11.505706787109375

Token 490: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11452174186706543
    2. ':
' → logprob: -2.2395217418670654
    3. ',' → logprob: -6.9895219802856445
    4. '           ' → logprob: -7.8645219802856445
    5. '       ' → logprob: -8.489521980285645
    6. '):
' → logprob: -9.114521980285645
    7. '):' → logprob: -11.114521980285645
    8. '[' → logprob: -11.739521980285645
    9. '   ' → logprob: -11.864521980285645
    10. ' :' → logprob: -11.989521980285645

Token 491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006905130576342344
    2. ':' → logprob: -8.125690460205078
    3. '            ' → logprob: -9.125690460205078
    4. '       ' → logprob: -9.875690460205078
    5. ',' → logprob: -10.000690460205078
    6. '            
' → logprob: -10.625690460205078
    7. '<|end|>' → logprob: -10.875690460205078
    8. ':
' → logprob: -11.000690460205078
    9. '
' → logprob: -11.625690460205078
    10. '[' → logprob: -11.625690460205078

Token 492: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' (adapté à ' half') → logprob: -0.2588553726673126
    2. ' half' → logprob: -1.5088553428649902
    3. '           ' → logprob: -5.00885534286499
    4. '               ' → logprob: -9.508855819702148
    5. '   ' → logprob: -9.758855819702148
    6. 'hal' → logprob: -9.758855819702148
    7. 'count' → logprob: -11.883855819702148
    8. '_half' → logprob: -12.258855819702148
    9. 'self' → logprob: -12.633855819702148
    10. '       ' → logprob: -12.633855819702148

Token 493: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0001158211671281606
    2. 'counts' → logprob: -9.125115394592285
    3. '_count' → logprob: -12.750115394592285
    4. '_' → logprob: -13.875115394592285
    5. ' counts' → logprob: -14.125115394592285
    6. '   ' → logprob: -15.125115394592285
    7. '           ' → logprob: -15.375115394592285
    8. '_c' → logprob: -15.375115394592285
    9. 'count' → logprob: -15.750115394592285
    10. '```' → logprob: -15.750115394592285

Token 494: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007170771714299917
    2. '.' → logprob: -7.2507171630859375
    3. '.ap' → logprob: -12.750717163085938
    4. ' .' → logprob: -13.000717163085938
    5. 'append' → logprob: -13.625717163085938
    6. '.app' → logprob: -14.375717163085938
    7. ' append' → logprob: -16.375717163085938
    8. ').' → logprob: -17.500717163085938
    9. '.extend' → logprob: -17.875717163085938
    10. '.a' → logprob: -18.500717163085938

Token 495: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019106844440102577
    2. ' self' → logprob: -4.019106864929199
    3. '(self' → logprob: -7.019106864929199
    4. '   ' → logprob: -9.8941068649292
    5. ' (' → logprob: -12.8941068649292
    6. '
' → logprob: -13.0191068649292
    7. '       ' → logprob: -13.2691068649292
    8. '           ' → logprob: -13.3941068649292
    9. '    ' → logprob: -13.7691068649292
    10. '(' → logprob: -14.5191068649292

Token 496: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.0011870148591697216
    2. 'char' → logprob: -7.001186847686768
    3. '.ch' → logprob: -9.376187324523926
    4. 'self' → logprob: -10.001187324523926
    5. '[ch' → logprob: -10.126187324523926
    6. '[self' → logprob: -10.251187324523926
    7. '[' → logprob: -10.626187324523926
    8. ' char' → logprob: -11.751187324523926
    9. ' .' → logprob: -11.876187324523926
    10. '   ' → logprob: -11.876187324523926

Token 497: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -3.1424973713001236e-05
    2. 'counter' → logprob: -11.000031471252441
    3. 'ounter' → logprob: -11.875031471252441
    4. 'Counter' → logprob: -12.250031471252441
    5. '
' → logprob: -14.000031471252441
    6. '```' → logprob: -14.750031471252441
    7. '[counter' → logprob: -15.375031471252441
    8. '_COUNTER' → logprob: -15.500031471252441
    9. '.Counter' → logprob: -15.875031471252441
    10. '_counts' → logprob: -16.000030517578125

Token 498: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -7.896309739408025e-07
    2. '[
' → logprob: -15.250000953674316
    3. '[' → logprob: -15.375000953674316
    4. '
' → logprob: -16.0
    5. '[c' → logprob: -16.375
    6. 'ch' → logprob: -16.625
    7. ' [' → logprob: -17.5
    8. '```' → logprob: -17.625
    9. '(ch' → logprob: -18.75
    10. ')' → logprob: -19.125

Token 499: ']' (ID: 60)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.47756513953208923
    2. ' //' → logprob: -0.9775651693344116
    3. ')' → logprob: -6.227565288543701
    4. ']' → logprob: -6.852565288543701
    5. ')//' → logprob: -7.852565288543701
    6. '   ' → logprob: -10.727564811706543
    7. '()' → logprob: -11.852564811706543
    8. '```' → logprob: -12.102564811706543
    9. '       ' → logprob: -12.352564811706543
    10. ' ' → logprob: -12.352564811706543

Token 500: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.06198303773999214
    2. ' //' → logprob: -2.811983108520508
    3. ')' → logprob: -11.936983108520508
    4. ')//' → logprob: -12.436983108520508
    5. '
' → logprob: -13.686983108520508
    6. '```' → logprob: -13.936983108520508
    7. '//
' → logprob: -14.186983108520508
    8. '//=' → logprob: -14.436983108520508
    9. '#' → logprob: -14.811983108520508
    10. '   ' → logprob: -15.561983108520508

Token 501: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -15.000027656555176
    4. '
' → logprob: -16.375028610229492
    5. '   ' → logprob: -16.750028610229492
    6. '۲' → logprob: -18.625028610229492
    7. '`' → logprob: -19.875028610229492
    8. '  ' → logprob: -20.250028610229492
    9. ')' → logprob: -20.250028610229492
    10. '２' → logprob: -20.312528610229492

Token 502: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '
' → logprob: -17.125011444091797
    4. '   ' → logprob: -18.500011444091797
    5. '```' → logprob: -18.500011444091797
    6. '۲' → logprob: -20.625011444091797
    7. '２' → logprob: -21.375011444091797
    8. '  ' → logprob: -21.500011444091797
    9. '

' → logprob: -22.000011444091797
    10. '{' → logprob: -22.250011444091797

Token 503: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20526857674121857
    2. ')
' → logprob: -1.7052686214447021
    3. '       ' → logprob: -5.580268383026123
    4. '
' → logprob: -9.830268859863281
    5. ' )' → logprob: -11.830268859863281
    6. ' )
' → logprob: -12.205268859863281
    7. ')

' → logprob: -12.205268859863281
    8. '        
' → logprob: -13.330268859863281
    9. ')
' → logprob: -13.830268859863281
    10. ')return' → logprob: -14.580268859863281

Token 504: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023846646770834923
    2. '        
' → logprob: -4.148846626281738
    3. ' 
' → logprob: -5.148846626281738
    4. '       ' → logprob: -6.773846626281738
    5. '    
' → logprob: -8.523846626281738
    6. '
        
' → logprob: -8.773846626281738
    7. '
' → logprob: -8.898846626281738
    8. '         
' → logprob: -9.398846626281738
    9. 'fact' → logprob: -9.648846626281738
    10. ' fact' → logprob: -10.523846626281738

Token 505: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.002347934525460005
    2. ' fact' → logprob: -6.127347946166992
    3. 'factor' → logprob: -9.627347946166992
    4. '       ' → logprob: -9.752347946166992
    5. 'cache' → logprob: -10.627347946166992
    6. '
' → logprob: -11.752347946166992
    7. '_fact' → logprob: -12.252347946166992
    8. 'Fact' → logprob: -14.627347946166992
    9. '        
' → logprob: -15.127347946166992
    10. ' cache' → logprob: -15.627347946166992

Token 506: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.125000953674316
    3. ' _' → logprob: -15.000000953674316
    4. '_cached' → logprob: -16.500001907348633
    5. '_factor' → logprob: -17.125001907348633
    6. '_c' → logprob: -17.250001907348633
    7. 's' → logprob: -17.750001907348633
    8. 'cache' → logprob: -18.125001907348633
    9. '"_' → logprob: -18.500001907348633
    10. '_CACHE' → logprob: -18.750001907348633

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326213479042053
    2. '=' → logprob: -1.3132621049880981
    3. '=self' → logprob: -14.813261985778809
    4. ' ' → logprob: -18.063262939453125
    5. '＝' → logprob: -19.688262939453125
    6. ' =
' → logprob: -19.938262939453125
    7. '=
' → logprob: -20.313262939453125
    8. 's' → logprob: -21.188262939453125
    9. '=

' → logprob: -21.188262939453125
    10. '=f' → logprob: -21.688262939453125

Token 508: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0052360063418745995
    2. ' self' → logprob: -5.2552361488342285
    3. '       ' → logprob: -14.13023567199707
    4. '[self' → logprob: -14.13023567199707
    5. '   ' → logprob: -14.38023567199707
    6. '	self' → logprob: -16.63023567199707
    7. '           ' → logprob: -16.75523567199707
    8. '(self' → logprob: -16.88023567199707
    9. ' ' → logprob: -17.75523567199707
    10. '     ' → logprob: -18.88023567199707

Token 509: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.6932241320610046
    2. '_factor' → logprob: -0.6932241320610046
    3. '.factor' → logprob: -10.06822395324707
    4. ' _' → logprob: -11.19322395324707
    5. '_fact' → logprob: -12.06822395324707
    6. '_cache' → logprob: -12.06822395324707
    7. '.' → logprob: -12.31822395324707
    8. '_fac' → logprob: -13.81822395324707
    9. '_.' → logprob: -14.19322395324707
    10. '   ' → logprob: -14.44322395324707

Token 510: 'factor' (ID: 73174)
  Prédit: 'factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0017293256241828203
    2. '_factor' → logprob: -6.376729488372803
    3. 'fact' → logprob: -10.626729011535645
    4. ' factor' → logprob: -13.751729011535645
    5. '-factor' → logprob: -14.751729011535645
    6. '.factor' → logprob: -14.876729011535645
    7. 'cache' → logprob: -15.501729011535645
    8. ' factorial' → logprob: -15.626729011535645
    9. '_fact' → logprob: -15.876729011535645
    10. 'fac' → logprob: -16.12672996520996

Token 511: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0009563630446791649
    2. 'al' → logprob: -7.0009565353393555
    3. 'ical' → logprob: -11.000956535339355
    4. 'rial' → logprob: -11.375956535339355
    5. 'atorial' → logprob: -12.375956535339355
    6. 'cal' → logprob: -12.625956535339355
    7. 'cial' → logprob: -13.250956535339355
    8. 'actor' → logprob: -13.250956535339355
    9. '_cache' → logprob: -13.500956535339355
    10. 'orial' → logprob: -13.750956535339355

Token 512: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -3.128163257315464e-07
    2. 'cache' → logprob: -15.875
    3. '_' → logprob: -17.25
    4. 'Cache' → logprob: -18.0
    5. ' _' → logprob: -19.5
    6. '_c' → logprob: -19.625
    7. '_cached' → logprob: -20.0
    8. '_CACHE' → logprob: -20.375
    9. ' cache' → logprob: -21.25
    10. '()' → logprob: -21.875

Token 513: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0016931501450017095
    2. '        
' → logprob: -6.876693248748779
    3. '       ' → logprob: -8.001692771911621
    4. '

' → logprob: -9.001692771911621
    5. '
' → logprob: -9.876692771911621
    6. '
        
' → logprob: -10.001692771911621
    7. 'return' → logprob: -10.251692771911621
    8. '    
' → logprob: -10.251692771911621
    9. ' 
' → logprob: -11.501692771911621
    10. '()
' → logprob: -11.876692771911621

Token 514: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050968531519174576
    2. '
' → logprob: -3.300968647003174
    3. 'return' → logprob: -4.925968647003174
    4. ' return' → logprob: -5.550968647003174
    5. '        
' → logprob: -6.550968647003174
    6. 'result' → logprob: -8.925968170166016
    7. 'n' → logprob: -10.675968170166016
    8. '    
' → logprob: -10.800968170166016
    9. '```' → logprob: -10.925968170166016
    10. ' result' → logprob: -11.050968170166016

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07111167162656784
    2. 'return' → logprob: -2.9461116790771484
    3. 'result' → logprob: -4.446111679077148
    4. 'count' → logprob: -5.821111679077148
    5. ' return' → logprob: -7.571111679077148
    6. 'from' → logprob: -8.321111679077148
    7. 'total' → logprob: -8.446111679077148
    8. 'dp' → logprob: -8.821111679077148
    9. ' result' → logprob: -9.446111679077148
    10. 'ways' → logprob: -9.696111679077148

Token 516: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003606482408940792
    2. 'count' → logprob: -6.12860631942749
    3. 'result' → logprob: -6.87860631942749
    4. '       ' → logprob: -8.378606796264648
    5. ' return' → logprob: -9.128606796264648
    6. 'total' → logprob: -10.128606796264648
    7. 'num' → logprob: -12.253606796264648
    8. 'half' → logprob: -12.253606796264648
    9. 'number' → logprob: -14.378606796264648
    10. 'counts' → logprob: -14.628606796264648

Token 517: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975071594119072
    2. ' self' → logprob: -3.5297508239746094
    3. '(self' → logprob: -15.65475082397461
    4. '       ' → logprob: -17.02975082397461
    5. '   ' → logprob: -17.52975082397461
    6. '	self' → logprob: -18.52975082397461
    7. '[self' → logprob: -18.65475082397461
    8. '
' → logprob: -18.90475082397461
    9. ' ' → logprob: -19.02975082397461
    10. '        
' → logprob: -19.40475082397461

Token 518: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.704273118884885e-07
    2. '_count' → logprob: -15.000000953674316
    3. '.' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.0
    5. ')._' → logprob: -16.875
    6. ']._' → logprob: -17.25
    7. ' .' → logprob: -17.5
    8. '.\' → logprob: -17.75
    9. '.count' → logprob: -18.0
    10. '_' → logprob: -18.625

Token 519: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.3856492842023727e-06
    2. '_count' → logprob: -13.625000953674316
    3. ' count' → logprob: -15.750000953674316
    4. '
' → logprob: -19.500001907348633
    5. 'factor' → logprob: -19.875001907348633
    6. '	count' → logprob: -20.500001907348633
    7. '[count' → logprob: -20.625001907348633
    8. 'ount' → logprob: -20.750001907348633
    9. '(count' → logprob: -20.750001907348633
    10. '.count' → logprob: -20.875001907348633

Token 520: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -0.00030602619517594576
    2. '_' → logprob: -9.375306129455566
    3. '_hal' → logprob: -9.375306129455566
    4. '_pal' → logprob: -9.375306129455566
    5. '```' → logprob: -10.375306129455566
    6. '`' → logprob: -12.000306129455566
    7. '\' → logprob: -13.125306129455566
    8. '"_' → logprob: -13.125306129455566
    9. '_floor' → logprob: -13.625306129455566
    10. ''_' → logprob: -13.875306129455566

Token 521: '_an' (ID: 47921)
  Prédit: '_an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_an' → logprob: -3.452426608419046e-05
    2. '_pal' → logprob: -10.75003433227539
    3. 'an' → logprob: -11.62503433227539
    4. '```' → logprob: -13.50003433227539
    5. '_' → logprob: -14.12503433227539
    6. '"_' → logprob: -14.75003433227539
    7. '`' → logprob: -15.00003433227539
    8. '_ans' → logprob: -16.25003433227539
    9. '_half' → logprob: -16.37503433227539
    10. '\' → logprob: -16.37503433227539

Token 522: 'agrams' (ID: 54218)
  Prédit: 'agrams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agrams' → logprob: -0.0003062646137550473
    2. 'grams' → logprob: -8.250306129455566
    3. 'igrams' → logprob: -11.375306129455566
    4. 'counts' → logprob: -11.875306129455566
    5. 'agram' → logprob: -11.875306129455566
    6. '```' → logprob: -11.875306129455566
    7. 'a' → logprob: -12.625306129455566
    8. 'ograms' → logprob: -12.750306129455566
    9. 'ams' → logprob: -13.875306129455566
    10. 'g' → logprob: -14.250306129455566

Token 523: '(tuple' (ID: 133029)
  Prédit: '(tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -9.865583706414327e-05
    2. '(' → logprob: -9.25009822845459
    3. '(
' → logprob: -13.62509822845459
    4. ' (' → logprob: -14.00009822845459
    5. '((' → logprob: -14.62509822845459
    6. '(t' → logprob: -18.250099182128906
    7. '   ' → logprob: -18.375099182128906
    8. '(T' → logprob: -18.625099182128906
    9. '(

' → logprob: -18.750099182128906
    10. 'tuple' → logprob: -19.000099182128906

Token 524: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.054500666621607e-06
    2. 'half' → logprob: -12.75000286102295
    3. '(
' → logprob: -16.125003814697266
    4. ' (' → logprob: -18.500003814697266
    5. 'hal' → logprob: -19.000003814697266
    6. 'Half' → logprob: -19.750003814697266
    7. '
' → logprob: -19.750003814697266
    8. ' half' → logprob: -20.000003814697266
    9. '_half' → logprob: -20.375003814697266
    10. ')' → logprob: -20.750003814697266

Token 525: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -3.4121114822482923e-06
    2. ' half' → logprob: -12.875003814697266
    3. 'hal' → logprob: -14.125003814697266
    4. '(' → logprob: -17.750003814697266
    5. '_half' → logprob: -18.500003814697266
    6. ')' → logprob: -18.750003814697266
    7. '[' → logprob: -19.125003814697266
    8. '
' → logprob: -19.125003814697266
    9. 'Half' → logprob: -20.250003814697266
    10. 'halb' → logprob: -20.250003814697266

Token 526: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -5.512236498361744e-07
    2. 'counts' → logprob: -14.625000953674316
    3. 'Counts' → logprob: -17.375
    4. '_c' → logprob: -17.875
    5. ')' → logprob: -18.5
    6. '_count' → logprob: -18.625
    7. '_' → logprob: -19.125
    8. ' counts' → logprob: -20.0
    9. '_COUN' → logprob: -20.125
    10. '       ' → logprob: -20.125

Token 527: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2524021157296374e-05
    2. ' ,' → logprob: -9.875052452087402
    3. ',f' → logprob: -14.500052452087402
    4. '),' → logprob: -14.875052452087402
    5. ')' → logprob: -15.875052452087402
    6. '‌,' → logprob: -18.37505340576172
    7. ',
' → logprob: -18.50005340576172
    8. '   ' → logprob: -19.12505340576172
    9. '       ' → logprob: -19.50005340576172
    10. ',)' → logprob: -19.62505340576172

Token 528: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.03804149478673935
    2. ' fact' → logprob: -3.288041591644287
    3. '_fact' → logprob: -18.663042068481445
    4. 'Fact' → logprob: -20.163042068481445
    5. '.fact' → logprob: -20.913042068481445
    6. 'factor' → logprob: -21.288042068481445
    7. 'facts' → logprob: -22.413042068481445
    8. ' fakt' → logprob: -22.913042068481445
    9. 'fac' → logprob: -23.288042068481445
    10. 'f' → logprob: -23.413042068481445

Token 529: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: 0.0
    2. '_CACHE' → logprob: -18.5
    3. '_' → logprob: -19.25
    4. '_c' → logprob: -19.375
    5. '_cached' → logprob: -20.125
    6. ' _' → logprob: -20.5
    7. '	cache' → logprob: -22.625
    8. '\' → logprob: -22.75
    9. '_
' → logprob: -22.875
    10. '
' → logprob: -23.0

Token 530: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ')
' → logprob: -11.375016212463379
    3. ' )' → logprob: -12.500016212463379
    4. '   ' → logprob: -14.500016212463379
    5. ')return' → logprob: -16.125017166137695
    6. '<|end|>' → logprob: -16.750017166137695
    7. ')#' → logprob: -16.875017166137695
    8. ' ' → logprob: -17.250017166137695
    9. '       ' → logprob: -17.375017166137695
    10. '))' → logprob: -17.375017166137695

Token 531: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: ' main' (ID: 2758)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.5866981148719788
    2. ' main' → logprob: -1.586698055267334
    3. ' count' → logprob: -2.086698055267334
    4. ' _' → logprob: -2.961698055267334
    5. ' ' → logprob: -3.211698055267334
    6. '_' → logprob: -4.586698055267334
    7. ' calculate' → logprob: -5.961698055267334
    8. ' counter' → logprob: -6.086698055267334
    9. ' validate' → logprob: -6.586698055267334
    10. '_count' → logprob: -6.836698055267334

Token 533: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.635164754698053e-05
    2. '():
' → logprob: -10.125066757202148
    3. ' ():' → logprob: -11.000066757202148
    4. '()' → logprob: -11.750066757202148
    5. '(' → logprob: -14.500066757202148
    6. '()>' → logprob: -14.750066757202148
    7. '_' → logprob: -15.000066757202148
    8. '():
' → logprob: -15.500066757202148
    9. '()">' → logprob: -16.75006675720215
    10. '().' → logprob: -16.87506675720215

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3053859770298004
    2. ' input' → logprob: -2.0553860664367676
    3. ' s' → logprob: -2.5553860664367676
    4. 's' → logprob: -3.8053860664367676
    5. ' string' → logprob: -4.180386066436768
    6. 'input' → logprob: -4.680386066436768
    7. '    ' → logprob: -4.930386066436768
    8. 'string' → logprob: -6.930386066436768
    9. 'n' → logprob: -7.555386066436768
    10. ' import' → logprob: -8.18038558959961

Token 535: ' import' (ID: 1588)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.45886310935020447
    2. 'input' → logprob: -1.5838631391525269
    3. 's' → logprob: -2.3338630199432373
    4. ' s' → logprob: -3.4588630199432373
    5. ' import' → logprob: -4.208863258361816
    6. '   ' → logprob: -4.833863258361816
    7. 'import' (adapté à ' import') → logprob: -5.458863258361816
    8. ' test' → logprob: -5.458863258361816
    9. 'test' → logprob: -7.083863258361816
    10. ' example' → logprob: -7.458863258361816

Token 536: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00045474470243789256
    2. 'sys' → logprob: -7.750454902648926
    3. '=sys' → logprob: -11.125454902648926
    4. ' argparse' → logprob: -12.500454902648926
    5. '	sys' → logprob: -12.750454902648926
    6. '(sys' → logprob: -13.875454902648926
    7. ' math' → logprob: -13.875454902648926
    8. ' itertools' → logprob: -15.125454902648926
    9. ' ' → logprob: -16.12545394897461
    10. ' unittest' → logprob: -16.25045394897461

Token 537: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11969707906246185
    2. 'input' → logprob: -2.494697093963623
    3. ' input' → logprob: -4.744697093963623
    4. '    
' → logprob: -5.494697093963623
    5. '
' → logprob: -5.869697093963623
    6. ' readline' → logprob: -5.869697093963623
    7. ' line' → logprob: -5.994697093963623
    8. 'line' → logprob: -6.494697093963623
    9. '_input' → logprob: -6.619697093963623
    10. '.readline' → logprob: -6.744697093963623

Token 538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.685642659664154
    2. ' input' → logprob: -1.3106427192687988
    3. 'input' → logprob: -1.5606427192687988
    4. ' line' → logprob: -4.935642719268799
    5. 'line' → logprob: -6.435642719268799
    6. ' readline' → logprob: -6.435642719268799
    7. '    
' → logprob: -6.685642719268799
    8. ' if' → logprob: -6.685642719268799
    9. ' lines' → logprob: -7.185642719268799
    10. ' for' → logprob: -7.310642719268799

Token 539: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.32876089215278625
    2. 'input' (adapté à ' input') → logprob: -1.4537608623504639
    3. '   ' → logprob: -3.453760862350464
    4. ' if' → logprob: -5.578761100769043
    5. ' for' → logprob: -5.578761100769043
    6. ' line' → logprob: -6.078761100769043
    7. 'line' → logprob: -6.828761100769043
    8. 'for' → logprob: -6.953761100769043
    9. 's' → logprob: -7.453761100769043
    10. 'if' → logprob: -7.703761100769043

Token 540: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.24611371755599976
    2. '_' → logprob: -2.2461137771606445
    3. '_str' → logprob: -2.2461137771606445
    4. '_line' → logprob: -5.1211137771606445
    5. '_text' → logprob: -8.371113777160645
    6. '_data' → logprob: -8.621113777160645
    7. '()' → logprob: -9.621113777160645
    8. 'string' → logprob: -10.371113777160645
    9. '_s' → logprob: -10.746113777160645
    10. '_=' → logprob: -11.121113777160645

Token 541: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197250634431839
    2. '=' → logprob: -2.8119726181030273
    3. ' ' → logprob: -12.436972618103027
    4. '_' → logprob: -15.311972618103027
    5. '   ' → logprob: -15.561972618103027
    6. '	' → logprob: -16.18697166442871
    7. '  ' → logprob: -16.43697166442871
    8. ' =
' → logprob: -16.43697166442871
    9. '=sys' → logprob: -16.43697166442871
    10. ' ' → logprob: -17.06197166442871

Token 542: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6931931972503662
    2. 'sys' → logprob: -0.6931931972503662
    3. 'input' → logprob: -10.193193435668945
    4. ' input' → logprob: -12.193193435668945
    5. '=sys' → logprob: -13.193193435668945
    6. '(sys' → logprob: -13.568193435668945
    7. '	sys' → logprob: -15.318193435668945
    8. ' ' → logprob: -16.318193435668945
    9. '   ' → logprob: -16.693193435668945
    10. 'stdin' → logprob: -19.443193435668945

Token 543: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.02567097917199135
    2. '.argv' → logprob: -4.025671005249023
    3. '.' → logprob: -4.900671005249023
    4. '.stdout' → logprob: -10.400671005249023
    5. ' .' → logprob: -11.650671005249023
    6. '.readline' → logprob: -11.775671005249023
    7. '.std' → logprob: -13.025671005249023
    8. '.st' → logprob: -14.775671005249023
    9. '.stderr' → logprob: -15.275671005249023
    10. '.ex' → logprob: -15.400671005249023

Token 544: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003404687449801713
    2. '.read' → logprob: -8.000340461730957
    3. '.' → logprob: -12.250340461730957
    4. '.readlines' → logprob: -16.625341415405273
    5. 'read' → logprob: -16.750341415405273
    6. ' readline' → logprob: -17.250341415405273
    7. ' .' → logprob: -19.125341415405273
    8. '.buffer' → logprob: -19.875341415405273
    9. '.Read' → logprob: -21.875341415405273
    10. '.rstrip' → logprob: -22.000341415405273

Token 545: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00043126524542458355
    2. '()' → logprob: -7.750431060791016
    3. '(' → logprob: -15.500431060791016
    4. '.strip' → logprob: -15.875431060791016
    5. '.rstrip' → logprob: -16.625431060791016
    6. '()
' → logprob: -16.625431060791016
    7. ' ().' → logprob: -17.500431060791016
    8. 'rstrip' → logprob: -18.125431060791016
    9. '(strip' → logprob: -18.500431060791016
    10. '()

' → logprob: -18.625431060791016

Token 546: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0001234428636962548
    2. 'rstrip' → logprob: -9.000123023986816
    3. ' strip' → logprob: -16.750123977661133
    4. '_strip' → logprob: -20.625123977661133
    5. '(strip' → logprob: -21.000123977661133
    6. 'str' → logprob: -21.125123977661133
    7. '.strip' → logprob: -22.250123977661133
    8. 'stripe' → logprob: -23.625123977661133
    9. 'rst' → logprob: -24.250123977661133
    10. 'Strip' → logprob: -24.375123977661133

Token 547: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00019412329129409045
    2. '(' → logprob: -8.750194549560547
    3. '()
' → logprob: -10.375194549560547
    4. '())' → logprob: -13.500194549560547
    5. '()`' → logprob: -14.250194549560547
    6. '()\' → logprob: -14.250194549560547
    7. '(
' → logprob: -14.625194549560547
    8. '();' → logprob: -15.250194549560547
    9. '()"' → logprob: -15.375194549560547
    10. '().' → logprob: -15.750194549560547

Token 548: '   ' (ID: 271)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.8880754113197327
    2. '   ' → logprob: -1.013075351715088
    3. ' counter' → logprob: -1.638075351715088
    4. '
' → logprob: -3.763075351715088
    5. 'count' → logprob: -5.138075351715088
    6. '    
' → logprob: -7.138075351715088
    7. 'pac' → logprob: -8.513075828552246
    8. 'p' → logprob: -8.638075828552246
    9. 'pa' → logprob: -9.013075828552246
    10. ' count' → logprob: -9.138075828552246

Token 549: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.07020117342472076
    2. ' counter' → logprob: -2.8202011585235596
    3. '   ' → logprob: -5.570201396942139
    4. 'pac' → logprob: -5.820201396942139
    5. 'count' → logprob: -7.570201396942139
    6. '
' → logprob: -7.820201396942139
    7. 'p' → logprob: -8.44520092010498
    8. ' pac' → logprob: -9.69520092010498
    9. 'calculator' → logprob: -10.07020092010498
    10. 'obj' → logprob: -10.07020092010498

Token 550: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008618239313364029
    2. '=' → logprob: -4.758618354797363
    3. '_' → logprob: -13.258618354797363
    4. 's' → logprob: -14.133618354797363
    5. ' =
' → logprob: -14.633618354797363
    6. '   ' → logprob: -15.383618354797363
    7. '	' → logprob: -15.758618354797363
    8. '  ' → logprob: -15.883618354797363
    9. '_instance' → logprob: -16.008617401123047
    10. ' ' → logprob: -16.633617401123047

Token 551: ' Pal' (ID: 8392)
  Prédit: 'Pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pal' → logprob: -0.38687223196029663
    2. ' Pal' → logprob: -1.1368722915649414
    3. 'Palindrome' → logprob: -13.761872291564941
    4. ' ' → logprob: -16.636871337890625
    5. 'Pat' → logprob: -17.136871337890625
    6. 'Pa' → logprob: -17.261871337890625
    7. 'P' → logprob: -17.761871337890625
    8. 'Palm' → logprob: -17.886871337890625
    9. '_pal' → logprob: -18.136871337890625
    10. 'Pol' → logprob: -18.761871337890625

Token 552: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -6.704273118884885e-07
    2. 'indrome' → logprob: -15.000000953674316
    3. 'int' → logprob: -15.875000953674316
    4. '   ' → logprob: -17.75
    5. 'ond' → logprob: -18.125
    6. '[' → logprob: -18.25
    7. '```' → logprob: -18.5
    8. 'and' → logprob: -18.625
    9. 'nd' → logprob: -18.625
    10. 'indt' → logprob: -18.75

Token 553: 'rom' (ID: 511)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.06432569772005081
    2. 'rom' → logprob: -2.8143258094787598
    3. 'd' → logprob: -6.31432580947876
    4. 'ud' → logprob: -8.314325332641602
    5. 'ond' → logprob: -8.939325332641602
    6. 'and' → logprob: -10.189325332641602
    7. 'od' → logprob: -10.564325332641602
    8. 'id' → logprob: -10.689325332641602
    9. 'nd' → logprob: -10.814325332641602
    10. 'und' → logprob: -10.939325332641602

Token 554: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0004147032741457224
    2. 'ric' → logprob: -7.875414848327637
    3. 'rom' → logprob: -10.375414848327637
    4. 'oric' → logprob: -13.750414848327637
    5. 'onic' → logprob: -14.375414848327637
    6. 'er' → logprob: -14.875414848327637
    7. 'od' → logprob: -15.500414848327637
    8. '   ' → logprob: -15.750414848327637
    9. 'tic' → logprob: -15.875414848327637
    10. 'otic' → logprob: -16.25041389465332

Token 555: 'An' (ID: 2223)
  Prédit: 'An'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'An' → logprob: -1.0280383548888494e-06
    2. ' An' → logprob: -14.250000953674316
    3. '_an' → logprob: -15.125000953674316
    4. '>An' → logprob: -17.250001907348633
    5. 'an' → logprob: -17.375001907348633
    6. 'A' → logprob: -17.500001907348633
    7. '```' → logprob: -19.375001907348633
    8. '
' → logprob: -19.375001907348633
    9. 'Ana' → logprob: -19.750001907348633
    10. '  ' → logprob: -20.500001907348633

Token 556: 'agram' (ID: 7632)
  Prédit: 'agram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agram' → logprob: -0.08732372522354126
    2. 'gram' → logprob: -3.0873236656188965
    3. 'am' → logprob: -3.7123236656188965
    4. 'ram' → logprob: -4.7123236656188965
    5. 'g' → logprob: -6.0873236656188965
    6. 'agrams' → logprob: -8.212324142456055
    7. 'amer' → logprob: -8.337324142456055
    8. 'um' → logprob: -8.462324142456055
    9. 'an' → logprob: -8.712324142456055
    10. 'rom' → logprob: -8.962324142456055

Token 557: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -7.040457421680912e-05
    2. 'Count' → logprob: -10.125070571899414
    3. 'ic' → logprob: -10.750070571899414
    4. 'Coun' → logprob: -12.500070571899414
    5. 'C' → logprob: -13.375070571899414
    6. '       ' → logprob: -14.125070571899414
    7. '   ' → logprob: -14.125070571899414
    8. 'ounter' → logprob: -14.500070571899414
    9. 'counter' → logprob: -15.000070571899414
    10. 'Cou' → logprob: -15.250070571899414

Token 558: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06256157159805298
    2. '(' → logprob: -2.812561511993408
    3. '(
' → logprob: -7.437561511993408
    4. '(

' → logprob: -13.687561988830566
    5. '(counter' → logprob: -13.687561988830566
    6. ' (' → logprob: -14.062561988830566
    7. '(output' → logprob: -14.562561988830566
    8. '(user' → logprob: -15.437561988830566
    9. '(
' → logprob: -15.562561988830566
    10. '(in' → logprob: -15.937561988830566

Token 559: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0021595412399619818
    2. 'String' → logprob: -6.377159595489502
    3. 'string' → logprob: -8.502159118652344
    4. '_String' → logprob: -9.252159118652344
    5. '_' → logprob: -9.502159118652344
    6. '_STRING' → logprob: -10.752159118652344
    7. ')' → logprob: -10.752159118652344
    8. '```' → logprob: -11.127159118652344
    9. '_strings' → logprob: -11.752159118652344
    10. '_=' → logprob: -12.877159118652344

Token 560: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018028652993962169
    2. ')
' → logprob: -6.376802921295166
    3. '   ' → logprob: -9.501802444458008
    4. ').' → logprob: -10.626802444458008
    5. ')

' → logprob: -15.126802444458008
    6. ' )' → logprob: -15.751802444458008
    7. '),' → logprob: -15.751802444458008
    8. '       ' → logprob: -16.001802444458008
    9. ')
' → logprob: -16.001802444458008
    10. ' ' → logprob: -16.251802444458008

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3134368658065796
    2. 'print' → logprob: -1.3134368658065796
    3. 'result' → logprob: -9.313436508178711
    4. ' print' → logprob: -9.938436508178711
    5. '
' → logprob: -11.188436508178711
    6. 'count' → logprob: -11.313436508178711
    7. '```' → logprob: -12.188436508178711
    8. '    
' → logprob: -12.688436508178711
    9. 'output' → logprob: -13.313436508178711
    10. '	print' → logprob: -14.938436508178711

Token 562: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00013846253568772227
    2. 'result' → logprob: -9.000138282775879
    3. 'count' → logprob: -11.625138282775879
    4. '   ' → logprob: -12.750138282775879
    5. ' print' → logprob: -12.750138282775879
    6. '
' → logprob: -16.000139236450195
    7. 'output' → logprob: -16.250139236450195
    8. '    
' → logprob: -17.000139236450195
    9. 'answer' → logprob: -18.625139236450195
    10. '```' → logprob: -18.750139236450195

Token 563: '(counter' (ID: 85625)
  Prédit: '(counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.005235529970377684
    2. '(' → logprob: -5.25523567199707
    3. '(
' → logprob: -13.50523567199707
    4. 'counter' → logprob: -16.00523567199707
    5. '[counter' → logprob: -16.13023567199707
    6. '(

' → logprob: -17.00523567199707
    7. '(count' → logprob: -17.25523567199707
    8. ' counter' → logprob: -19.38023567199707
    9. '(controller' → logprob: -19.50523567199707
    10. '(cnt' → logprob: -19.63023567199707

Token 564: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -5.180879816180095e-05
    2. '.' → logprob: -10.250051498413086
    3. ').' → logprob: -11.250051498413086
    4. ' .' → logprob: -12.750051498413086
    5. ')' → logprob: -15.250051498413086
    6. 'count' → logprob: -16.375051498413086
    7. '.)' → logprob: -16.625051498413086
    8. '.
' → logprob: -17.500051498413086
    9. '.counter' → logprob: -17.500051498413086
    10. '.Count' → logprob: -17.875051498413086

Token 565: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -1.0280383548888494e-06
    2. 'pal' → logprob: -15.000000953674316
    3. '_p' → logprob: -15.125000953674316
    4. '_' → logprob: -15.375000953674316
    5. '_par' → logprob: -17.000001907348633
    6. '_pat' → logprob: -17.500001907348633
    7. ')_' → logprob: -17.625001907348633
    8. '_pres' → logprob: -18.125001907348633
    9. '_pol' → logprob: -18.125001907348633
    10. '_pa' → logprob: -19.000001907348633

Token 566: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -4.320199877838604e-07
    2. 'indrome' → logprob: -15.5
    3. 'nd' → logprob: -16.5
    4. '_ind' → logprob: -16.5
    5. '_' → logprob: -17.25
    6. 'int' → logprob: -17.625
    7. 'ond' → logprob: -19.125
    8. 'and' → logprob: -19.375
    9. 'in' → logprob: -19.75
    10. '``' → logprob: -19.75

Token 567: 'rom' (ID: 511)
  Prédit: 'rom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rom' → logprob: -3.173704271830502e-06
    2. 'orm' → logprob: -13.37500286102295
    3. 'romatic' → logprob: -14.50000286102295
    4. 'ric' → logprob: -15.50000286102295
    5. '_rom' → logprob: -15.50000286102295
    6. 'r' → logprob: -15.50000286102295
    7. ' rom' → logprob: -16.375003814697266
    8. 'romes' → logprob: -16.375003814697266
    9. 'ro' → logprob: -16.500003814697266
    10. 'rot' → logprob: -16.500003814697266

Token 568: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0014226144412532449
    2. 'ric' → logprob: -6.75142240524292
    3. 'atic' → logprob: -9.126422882080078
    4. 'tic' → logprob: -9.626422882080078
    5. 'e' → logprob: -11.126422882080078
    6. 'pal' → logprob: -11.376422882080078
    7. '_' → logprob: -12.501422882080078
    8. 'dic' → logprob: -12.626422882080078
    9. 'rom' → logprob: -12.751422882080078
    10. 'tric' → logprob: -12.751422882080078

Token 569: '_an' (ID: 47921)
  Prédit: '_an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_an' → logprob: -3.35706390615087e-05
    2. '_' → logprob: -10.375033378601074
    3. 'an' → logprob: -13.875033378601074
    4. '_ans' → logprob: -14.250033378601074
    5. '_a' → logprob: -14.750033378601074
    6. '_pal' → logprob: -15.250033378601074
    7. ' _' → logprob: -16.25003433227539
    8. '"_' → logprob: -17.25003433227539
    9. '_ant' → logprob: -17.62503433227539
    10. '_ar' → logprob: -17.87503433227539

Token 570: 'agrams' (ID: 54218)
  Prédit: 'agrams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agrams' → logprob: -0.0014539248077198863
    2. 'grams' → logprob: -6.626453876495361
    3. 'ams' → logprob: -9.37645435333252
    4. 'ar' → logprob: -10.62645435333252
    5. 'ograms' → logprob: -12.25145435333252
    6. 'r' → logprob: -12.37645435333252
    7. 'igrams' → logprob: -12.37645435333252
    8. 'agram' → logprob: -13.50145435333252
    9. 's' → logprob: -13.87645435333252
    10. '```' → logprob: -14.12645435333252

Token 571: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0031830633524805307
    2. '()' → logprob: -5.753182888031006
    3. '())
' → logprob: -13.003183364868164
    4. ')' → logprob: -13.003183364868164
    5. ' ())' → logprob: -14.253183364868164
    6. '()
' → logprob: -16.503183364868164
    7. '();)' → logprob: -17.628183364868164
    8. '(),' → logprob: -17.628183364868164
    9. '(' → logprob: -17.753183364868164
    10. '()]' → logprob: -17.878183364868164

Token 572: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0015459299320355058
    2. '
' → logprob: -7.3765459060668945
    3. ' if' → logprob: -7.5015459060668945
    4. '<|end|>' → logprob: -8.376545906066895
    5. '```' → logprob: -9.251545906066895
    6. '\' → logprob: -11.126545906066895
    7. '\n' → logprob: -11.126545906066895
    8. '#' → logprob: -11.876545906066895
    9. '

' → logprob: -14.126545906066895
    10. '    
' → logprob: -14.501545906066895

Token 573: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018456721678376198
    2. '__' → logprob: -4.018456935882568
    3. '_name' → logprob: -8.64345645904541
    4. '_' → logprob: -9.14345645904541
    5. ' ' → logprob: -11.51845645904541
    6. 'name' → logprob: -11.76845645904541
    7. ' _' → logprob: -12.89345645904541
    8. '___' → logprob: -13.39345645904541
    9. ' ' → logprob: -14.76845645904541
    10. ' ' → logprob: -15.01845645904541

Token 574: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010741343721747398
    2. '==' → logprob: -7.501074314117432
    3. '__.__' → logprob: -8.126073837280273
    4. ' ==' → logprob: -9.251073837280273
    5. '__.' → logprob: -9.376073837280273
    6. '.__' → logprob: -11.251073837280273
    7. ' __' → logprob: -11.376073837280273
    8. '_' → logprob: -12.251073837280273
    9. '__["' → logprob: -12.501073837280273
    10. '___' → logprob: -12.876073837280273

Token 575: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0325924449716695e-05
    2. '==' → logprob: -11.62501049041748
    3. '__.__' → logprob: -14.00001049041748
    4. ' ==' → logprob: -15.75001049041748
    5. '=="' → logprob: -16.250009536743164
    6. '_' → logprob: -16.625009536743164
    7. '___' → logprob: -16.750009536743164
    8. '__
' → logprob: -17.125009536743164
    9. '__.' → logprob: -17.500009536743164
    10. '____' → logprob: -18.375009536743164

Token 576: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06421817094087601
    2. '==' → logprob: -2.939218282699585
    3. ' ==' → logprob: -4.939218044281006
    4. '=="' → logprob: -6.189218044281006
    5. '=='' → logprob: -9.689218521118164
    6. '_' → logprob: -12.314218521118164
    7. '___' → logprob: -12.439218521118164
    8. '=' → logprob: -12.564218521118164
    9. '__.__' → logprob: -12.814218521118164
    10. '===' → logprob: -13.314218521118164

Token 577: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.061972957104444504
    2. ''' → logprob: -2.8119728565216064
    3. ' "__' → logprob: -12.686972618103027
    4. ''"' → logprob: -13.561972618103027
    5. '__' → logprob: -14.811972618103027
    6. '"'' → logprob: -15.561972618103027
    7. ' '__' → logprob: -15.936972618103027
    8. '"_' → logprob: -16.186973571777344
    9. '"user' → logprob: -17.061973571777344
    10. '"name' → logprob: -17.186973571777344

Token 578: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0043291146866977215
    2. '"' → logprob: -6.004329204559326
    3. '__' → logprob: -6.379329204559326
    4. ''' → logprob: -9.004328727722168
    5. 'name' → logprob: -10.754328727722168
    6. '_main' → logprob: -11.879328727722168
    7. ' main' → logprob: -12.754328727722168
    8. '"name' → logprob: -15.379328727722168
    9. 'Main' → logprob: -15.754328727722168
    10. '__":
' → logprob: -15.879328727722168

Token 579: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20182833075523376
    2. '__' → logprob: -1.7018283605575562
    3. '__':
' → logprob: -7.951828479766846
    4. '__.' → logprob: -10.576828002929688
    5. '__["' → logprob: -11.076828002929688
    6. '__.__' → logprob: -11.201828002929688
    7. '__:' → logprob: -12.826828002929688
    8. '__
' → logprob: -12.826828002929688
    9. '__",' → logprob: -14.076828002929688
    10. '__
' → logprob: -14.076828002929688

Token 580: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.044232018291950226
    2. ' main' → logprob: -3.169232130050659
    3. '	main' → logprob: -7.54423189163208
    4. '__' → logprob: -7.91923189163208
    5. '   ' → logprob: -8.044232368469238
    6. '_main' → logprob: -11.544232368469238
    7. ' __' → logprob: -12.794232368469238
    8. '    
' → logprob: -13.294232368469238
    9. ' ' → logprob: -14.044232368469238
    10. '____' → logprob: -14.544232368469238

Token 581: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -7.505351095460355e-05
    2. ' main' → logprob: -9.500075340270996
    3. '	main' → logprob: -16.25007438659668
    4. '   ' → logprob: -17.12507438659668
    5. '_main' → logprob: -20.62507438659668
    6. '(main' → logprob: -22.37507438659668
    7. '
' → logprob: -22.37507438659668
    8. '.main' → logprob: -22.75007438659668
    9. '    
' → logprob: -23.50007438659668
    10. '```' → logprob: -24.25007438659668

Token 582: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008242563344538212
    2. '()
' → logprob: -5.633242607116699
    3. '(' → logprob: -5.758242607116699
    4. '
' → logprob: -6.633242607116699
    5. '<|end|>' → logprob: -10.0082426071167
    6. '(
' → logprob: -10.1332426071167
    7. '```' → logprob: -10.7582426071167
    8. '#' → logprob: -11.3832426071167
    9. ' ()' → logprob: -11.3832426071167
    10. '()\' → logprob: -11.8832426071167


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 580
Tokens correctement prédits (1ère position, stricte): 271
Tokens correctement prédits (1ère position, avec adaptation): 293
Tokens correctement prédits (top 10): 496
Précision stricte (1ère position): 46.72%
Précision adaptée (1ère position): 50.52%
Précision (top 10): 85.52%
================================================================================
