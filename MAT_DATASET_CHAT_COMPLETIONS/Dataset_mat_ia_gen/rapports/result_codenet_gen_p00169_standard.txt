================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:56:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    if line == '0':
        break
    cards = list(map(int, line.split()))
    total = 0
    aces = 0
    for c in cards:
        if c == 1:
            aces += 1
            total += 1
        elif 2 <= c <= 9:
            total += c
        else:
            total += 10
    # Try to add 10 for some aces if it doesn't bust
    for _ in range(aces):
        if total + 10 <= 21:
            total += 10
    print(total if total <= 21 else 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19949382543563843
    2. '=' → logprob: -1.8244938850402832
    3. 's' → logprob: -4.699493885040283
    4. '.' → logprob: -5.824493885040283
    5. '.startswith' → logprob: -6.324493885040283
    6. '_' → logprob: -6.699493885040283
    7. '[' → logprob: -7.449493885040283
    8. '.readline' → logprob: -7.449493885040283
    9. '[:]' → logprob: -7.449493885040283
    10. '   ' → logprob: -7.574493885040283

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08899911493062973
    2. 'input' → logprob: -2.463999032974243
    3. ' ' → logprob: -10.963998794555664
    4. ' f' → logprob: -10.963998794555664
    5. ' file' → logprob: -11.588998794555664
    6. ' readline' → logprob: -12.213998794555664
    7. '=input' → logprob: -12.963998794555664
    8. 'file' → logprob: -12.963998794555664
    9. '(input' → logprob: -14.088998794555664
    10. 'f' → logprob: -14.338998794555664

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003016214817762375
    2. '('' → logprob: -6.378015995025635
    3. '()' → logprob: -7.003015995025635
    4. '("("' → logprob: -8.378016471862793
    5. ''' → logprob: -9.753016471862793
    6. '```' → logprob: -10.128016471862793
    7. ')' → logprob: -11.003016471862793
    8. '("")' → logprob: -11.628016471862793
    9. ''s' → logprob: -11.753016471862793
    10. '(
' → logprob: -12.253016471862793

Token 8: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8667309284210205
    2. ' if' → logprob: -1.4917309284210205
    3. '<|end|>' → logprob: -2.2417309284210205
    4. '.' → logprob: -2.3667309284210205
    5. '   ' → logprob: -3.1167309284210205
    6. '    ' → logprob: -3.2417309284210205
    7. ':' → logprob: -4.366730690002441
    8. 'if' → logprob: -4.741730690002441
    9. '\n' → logprob: -5.116730690002441
    10. '  
' → logprob: -5.116730690002441

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2029114067554474
    2. '   ' → logprob: -2.577911376953125
    3. ' ' → logprob: -2.952911376953125
    4. '<|end|>' → logprob: -3.952911376953125
    5. '    ' → logprob: -4.077911376953125
    6. 'if' (adapté à ' if') → logprob: -4.452911376953125
    7. '\n' → logprob: -5.827911376953125
    8. '  ' → logprob: -7.202911376953125
    9. '\r' → logprob: -7.452911376953125
    10. '    
' → logprob: -7.577911376953125

Token 10: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05100409686565399
    2. ' line' → logprob: -3.05100417137146
    3. ' ' → logprob: -6.551003932952881
    4. 'not' → logprob: -7.051003932952881
    5. 'line' → logprob: -9.426004409790039
    6. ' len' → logprob: -11.176004409790039
    7. '  ' → logprob: -11.676004409790039
    8. '<|end|>' → logprob: -12.301004409790039
    9. '    ' → logprob: -13.051004409790039
    10. ' lines' → logprob: -13.801004409790039

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.056671060621738434
    2. '==' → logprob: -3.681671142578125
    3. '.startswith' → logprob: -4.306671142578125
    4. '.' → logprob: -4.431671142578125
    5. '.strip' → logprob: -5.931671142578125
    6. ' .' → logprob: -7.431671142578125
    7. ' ' → logprob: -7.806671142578125
    8. '    ' → logprob: -8.681671142578125
    9. '<|end|>' → logprob: -9.306671142578125
    10. '<|end|>' → logprob: -9.306671142578125

Token 12: ' '' (ID: 461)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.3430653512477875
    2. '''' → logprob: -1.8430653810501099
    3. '"' → logprob: -2.7180652618408203
    4. ''' → logprob: -3.0930652618408203
    5. ' ""' → logprob: -4.09306526184082
    6. ' ''' → logprob: -5.84306526184082
    7. '"":' → logprob: -7.34306526184082
    8. ' "' → logprob: -8.46806526184082
    9. ' '' → logprob: -9.21806526184082
    10. ''ex' → logprob: -11.21806526184082

Token 13: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -1.2026323080062866
    2. ''' → logprob: -1.4526323080062866
    3. 'exit' → logprob: -1.5776323080062866
    4. 'quit' → logprob: -1.7026323080062866
    5. '\n' → logprob: -2.827632427215576
    6. ''\' → logprob: -5.077632427215576
    7. ' exit' → logprob: -6.202632427215576
    8. ' quit' → logprob: -6.452632427215576
    9. ''ex' → logprob: -6.452632427215576
    10. 'break' → logprob: -6.702632427215576

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.06858628988265991
    2. ''' → logprob: -2.8185863494873047
    3. '\n' → logprob: -5.568586349487305
    4. ':' → logprob: -6.068586349487305
    5. ' ':' → logprob: -9.068586349487305
    6. ''):' → logprob: -9.568586349487305
    7. '0' → logprob: -9.943586349487305
    8. '':
' → logprob: -10.068586349487305
    9. ' or' → logprob: -10.318586349487305
    10. ' '' → logprob: -10.568586349487305

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026650733780115843
    2. ' break' → logprob: -6.377665042877197
    3. '\n' → logprob: -7.877665042877197
    4. '   ' → logprob: -8.127665519714355
    5. '    ' → logprob: -9.002665519714355
    6. ' ' → logprob: -10.627665519714355
    7. ':' → logprob: -10.752665519714355
    8. '	break' → logprob: -11.002665519714355
    9. '<|end|>' → logprob: -11.252665519714355
    10. '           ' → logprob: -11.502665519714355

Token 16: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.05758696794509888
    2. '       ' → logprob: -2.932586908340454
    3. 'break' (adapté à ' break') → logprob: -6.182587146759033
    4. '   ' → logprob: -7.932587146759033
    5. '	break' → logprob: -8.682586669921875
    6. '    ' → logprob: -10.307586669921875
    7. '\n' → logprob: -10.807586669921875
    8. ' ' → logprob: -11.307586669921875
    9. '        
' → logprob: -11.682586669921875
    10. '_break' → logprob: -11.932586669921875

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.658878743648529
    2. '\n' → logprob: -1.5338788032531738
    3. ':' → logprob: -2.283878803253174
    4. '    
' → logprob: -2.283878803253174
    5. '
' → logprob: -4.158878803253174
    6. '\' → logprob: -4.408878803253174
    7. '  
' → logprob: -4.533878803253174
    8. '\r' → logprob: -5.033878803253174
    9. '<|end|>' → logprob: -6.033878803253174
    10. 'print' → logprob: -6.283878803253174

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03829129412770271
    2. '    
' → logprob: -3.6632912158966064
    3. '
' → logprob: -5.4132914543151855
    4. '<|end|>' → logprob: -5.6632914543151855
    5. '\n' → logprob: -6.5382914543151855
    6. 'print' → logprob: -6.6632914543151855
    7. '    ' → logprob: -8.163290977478027
    8. '  
' → logprob: -8.663290977478027
    9. ' ' → logprob: -9.038290977478027
    10. '<|end|>' → logprob: -9.288290977478027

Token 19: ' cards' (ID: 10541)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4548097252845764
    2. 'print' → logprob: -2.4548096656799316
    3. '\n' → logprob: -2.7048096656799316
    4. '[' → logprob: -3.5798096656799316
    5. ' ' → logprob: -3.5798096656799316
    6. '\' → logprob: -3.5798096656799316
    7. '    ' → logprob: -3.9548096656799316
    8. '    
' → logprob: -4.079809665679932
    9. '(' → logprob: -4.329809665679932
    10. ' print' → logprob: -4.454809665679932

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16436488926410675
    2. '.' → logprob: -2.289364814758301
    3. '=' → logprob: -3.164364814758301
    4. '.append' → logprob: -6.164364814758301
    5. '.split' → logprob: -6.289364814758301
    6. '_' → logprob: -6.789364814758301
    7. ' ' → logprob: -7.039364814758301
    8. '[' → logprob: -7.914364814758301
    9. '_split' → logprob: -8.1643648147583
    10. '[:]' → logprob: -8.6643648147583

Token 21: ' list' (ID: 1562)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.32531067728996277
    2. ' list' → logprob: -1.4503107070922852
    3. 'line' → logprob: -3.325310707092285
    4. 'list' → logprob: -5.325310707092285
    5. ' [' → logprob: -6.825310707092285
    6. ' set' → logprob: -7.950310707092285
    7. '[line' → logprob: -8.575310707092285
    8. '[' → logprob: -8.700310707092285
    9. ' input' → logprob: -8.950310707092285
    10. ' map' → logprob: -8.950310707092285

Token 22: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03815073519945145
    2. '(line' → logprob: -3.2881507873535156
    3. '(cards' → logprob: -10.038150787353516
    4. '()' → logprob: -11.163150787353516
    5. '(range' → logprob: -11.288150787353516
    6. '(map' → logprob: -12.288150787353516
    7. '(input' → logprob: -12.413150787353516
    8. '(
' → logprob: -12.663150787353516
    9. '(int' → logprob: -12.663150787353516
    10. ' (' → logprob: -12.788150787353516

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04053327813744545
    2. '(str' → logprob: -3.4155333042144775
    3. '(' → logprob: -5.040533065795898
    4. 'int' → logprob: -8.415533065795898
    5. 'str' → logprob: -9.290533065795898
    6. '(lambda' → logprob: -9.790533065795898
    7. ' str' → logprob: -12.540533065795898
    8. '<int' → logprob: -12.540533065795898
    9. ' int' → logprob: -12.540533065795898
    10. '(
' → logprob: -12.915533065795898

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.1345789432525635
    2. ',' → logprob: -1.2595789432525635
    3. '(' → logprob: -1.3845789432525635
    4. '(line' → logprob: -2.3845789432525635
    5. ',input' → logprob: -3.1345789432525635
    6. ',line' → logprob: -5.509578704833984
    7. ' ,' → logprob: -6.509578704833984
    8. '   ' → logprob: -6.634578704833984
    9. '(
' → logprob: -7.634578704833984
    10. ' (' → logprob: -7.634578704833984

Token 25: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.14343196153640747
    2. 'line' → logprob: -2.0184319019317627
    3. '(line' → logprob: -8.018431663513184
    4. ' input' → logprob: -8.768431663513184
    5. 'input' → logprob: -9.518431663513184
    6. '	line' → logprob: -9.518431663513184
    7. '   ' → logprob: -9.893431663513184
    8. '#line' → logprob: -11.018431663513184
    9. '[line' → logprob: -11.018431663513184
    10. ' ' → logprob: -11.143431663513184

Token 26: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.3972119688987732
    2. '.' → logprob: -1.647212028503418
    3. '.strip' → logprob: -2.022212028503418
    4. ' .' → logprob: -6.272212028503418
    5. '().' → logprob: -7.147212028503418
    6. '.rstrip' → logprob: -8.897212028503418
    7. 'split' → logprob: -11.272212028503418
    8. ')' → logprob: -11.397212028503418
    9. '))' → logprob: -12.147212028503418
    10. '.readline' → logprob: -12.647212028503418

Token 27: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5514304637908936
    2. '())' → logprob: -1.5514304637908936
    3. '('' → logprob: -2.1764304637908936
    4. '))' → logprob: -2.8014304637908936
    5. '(' → logprob: -3.9264304637908936
    6. ')' → logprob: -4.551430702209473
    7. '()' → logprob: -5.051430702209473
    8. '(','' → logprob: -7.676430702209473
    9. ''))' → logprob: -8.551430702209473
    10. '()))
' → logprob: -9.176430702209473

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3570866584777832
    2. '
' → logprob: -1.6070866584777832
    3. '[' → logprob: -1.9820866584777832
    4. ' ' → logprob: -2.232086658477783
    5. ':' → logprob: -2.482086658477783
    6. '\n' → logprob: -2.857086658477783
    7. ')' → logprob: -3.232086658477783
    8. '<|end|>' → logprob: -3.482086658477783
    9. '    
' → logprob: -4.357086658477783
    10. ' 
' → logprob: -4.357086658477783

Token 29: ' total' (ID: 3609)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0851526260375977
    2. ' ' → logprob: -1.8351526260375977
    3. '[' → logprob: -2.4601526260375977
    4. ':' → logprob: -2.5851526260375977
    5. ' if' → logprob: -2.7101526260375977
    6. '   ' → logprob: -2.7101526260375977
    7. ')' → logprob: -2.8351526260375977
    8. 'if' → logprob: -3.2101526260375977
    9. 's' → logprob: -4.335152626037598
    10. ',' → logprob: -4.960152626037598

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0841686725616455
    2. '_' → logprob: -1.2091686725616455
    3. '_cards' → logprob: -1.4591686725616455
    4. '_sum' → logprob: -2.4591686725616455
    5. '=' → logprob: -4.084168434143066
    6. '_count' → logprob: -4.959168434143066
    7. '(' → logprob: -5.459168434143066
    8. ' +=' → logprob: -5.584168434143066
    9. '_score' → logprob: -5.834168434143066
    10. '_points' → logprob: -6.084168434143066

Token 31: ' ' (ID: 220)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.04625634104013443
    2. 'sum' → logprob: -3.5462563037872314
    3. ' ' → logprob: -5.0462565422058105
    4. '0' → logprob: -5.2962565422058105
    5. ' cards' → logprob: -5.4212565422058105
    6. 'cards' → logprob: -8.546256065368652
    7. ' len' → logprob: -9.046256065368652
    8. ' max' → logprob: -9.296256065368652
    9. '1' → logprob: -10.983756065368652
    10. '	sum' → logprob: -11.358756065368652

Token 32: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5445079207420349
    2. ' sum' → logprob: -0.9195079207420349
    3. '0' → logprob: -4.16950798034668
    4. 'cards' → logprob: -5.79450798034668
    5. ' cards' → logprob: -6.16950798034668
    6. ' ' → logprob: -8.41950798034668
    7. '   ' → logprob: -8.79450798034668
    8. '(sum' → logprob: -10.16950798034668
    9. 'max' → logprob: -10.91950798034668
    10. '1' → logprob: -11.04450798034668

Token 33: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5305549502372742
    2. '<|end|>' → logprob: -2.030555009841919
    3. ' ' → logprob: -2.280555009841919
    4. 'for' → logprob: -2.780555009841919
    5. ' for' → logprob: -2.780555009841919
    6. '+' → logprob: -3.280555009841919
    7. '
' → logprob: -5.90555477142334
    8. '  ' → logprob: -6.28055477142334
    9. '<|end|>' → logprob: -6.28055477142334
    10. '    ' → logprob: -6.40555477142334

Token 35: ' ac' (ID: 1375)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1492358148097992
    2. ' for' → logprob: -2.024235725402832
    3. '   ' → logprob: -5.149235725402832
    4. ' ' → logprob: -7.899235725402832
    5. 'total' → logprob: -9.774235725402832
    6. 'cards' → logprob: -9.774235725402832
    7. ' cards' → logprob: -10.274235725402832
    8. '+' → logprob: -10.774235725402832
    9. 'if' → logprob: -10.899235725402832
    10. '    ' → logprob: -10.899235725402832

Token 36: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.579419732093811
    2. 'e' → logprob: -0.829419732093811
    3. 'c' → logprob: -7.3294196128845215
    4. 'u' → logprob: -7.9544196128845215
    5. 'cum' → logprob: -8.07942008972168
    6. 'count' → logprob: -8.20442008972168
    7. 'counts' → logprob: -8.45442008972168
    8. 't' → logprob: -8.45442008972168
    9. 'h' → logprob: -8.57942008972168
    10. 'cards' → logprob: -8.82942008972168

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2347831130027771
    2. '_count' → logprob: -1.6097831726074219
    3. '=' → logprob: -5.109783172607422
    4. '_' → logprob: -6.359783172607422
    5. ' +=' → logprob: -7.359783172607422
    6. '_counts' → logprob: -8.359783172607422
    7. ' ' → logprob: -8.984783172607422
    8. '   ' → logprob: -9.359783172607422
    9. 'count' → logprob: -9.359783172607422
    10. '_in' → logprob: -9.859783172607422

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5537770986557007
    2. ' cards' → logprob: -1.0537770986557007
    3. '0' → logprob: -3.0537772178649902
    4. 'cards' → logprob: -3.5537772178649902
    5. '1' → logprob: -8.928776741027832
    6. ' sum' → logprob: -9.116276741027832
    7. '(cards' → logprob: -9.116276741027832
    8. ' card' → logprob: -9.553776741027832
    9. ' ' → logprob: -9.991276741027832
    10. 'card' → logprob: -10.053776741027832

Token 39: '0' (ID: 15)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.6872251629829407
    2. '0' → logprob: -0.9372251629829407
    3. ' cards' → logprob: -2.562225103378296
    4. ' ' → logprob: -3.687225103378296
    5. 'sum' → logprob: -6.937225341796875
    6. '[]' → logprob: -7.312225341796875
    7. ' sum' → logprob: -7.937225341796875
    8. '(cards' → logprob: -8.062225341796875
    9. 'card' → logprob: -8.874725341796875
    10. '[' → logprob: -9.437225341796875

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5110806226730347
    2. '<|end|>' → logprob: -1.7610806226730347
    3. ' for' → logprob: -2.261080741882324
    4. '
' → logprob: -2.636080741882324
    5. 'for' → logprob: -4.136080741882324
    6. ' ' → logprob: -4.261080741882324
    7. ' 
' → logprob: -5.011080741882324
    8. '    
' → logprob: -5.386080741882324
    9. '<|end|>' → logprob: -5.761080741882324
    10. ':' → logprob: -6.386080741882324

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6669265031814575
    2. ' for' → logprob: -1.1669265031814575
    3. 'for' → logprob: -1.9169265031814575
    4. '<|end|>' → logprob: -3.791926383972168
    5. ' ' → logprob: -6.166926383972168
    6. '
' → logprob: -6.291926383972168
    7. '    
' → logprob: -7.666926383972168
    8. ' 
' → logprob: -8.166926383972168
    9. '  ' → logprob: -8.291926383972168
    10. '<|end|>' → logprob: -8.416926383972168

Token 42: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09695682674646378
    2. ' for' → logprob: -2.471956729888916
    3. ' ' → logprob: -5.471956729888916
    4. '   ' → logprob: -6.096956729888916
    5. '<|end|>' → logprob: -6.971956729888916
    6. ' 
' → logprob: -8.846957206726074
    7. '\n' → logprob: -8.846957206726074
    8. '
' → logprob: -9.721957206726074
    9. '    
' → logprob: -9.971957206726074
    10. '	for' → logprob: -10.096957206726074

Token 43: ' c' (ID: 274)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.048858724534511566
    2. ' ' → logprob: -3.798858642578125
    3. ' c' → logprob: -3.923858642578125
    4. 'card' → logprob: -5.423858642578125
    5. '	card' → logprob: -7.798858642578125
    6. 'c' → logprob: -8.298858642578125
    7. ' v' → logprob: -8.798858642578125
    8. ' x' → logprob: -9.298858642578125
    9. ' i' → logprob: -9.673858642578125
    10. ' ' → logprob: -9.923858642578125

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02190072275698185
    2. 'in' → logprob: -3.8969006538391113
    3. ' ' → logprob: -7.021900653839111
    4. '  ' → logprob: -8.52190113067627
    5. '   ' → logprob: -9.02190113067627
    6. 'i' → logprob: -10.02190113067627
    7. ' i' → logprob: -10.14690113067627
    8. '	in' → logprob: -10.77190113067627
    9. 'a' → logprob: -11.27190113067627
    10. 's' → logprob: -11.52190113067627

Token 45: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.3136548399925232
    2. 'cards' → logprob: -1.313654899597168
    3. '(cards' → logprob: -7.938654899597168
    4. '.cards' → logprob: -10.813654899597168
    5. 'ards' → logprob: -12.188654899597168
    6. ' ' → logprob: -12.313654899597168
    7. '_cards' → logprob: -12.438654899597168
    8. '/cards' → logprob: -14.063654899597168
    9. 'c' → logprob: -14.313654899597168
    10. 'card' → logprob: -15.063654899597168

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025657136575318873
    2. ':
' → logprob: -9.375256538391113
    3. '<|end|>' → logprob: -9.375256538391113
    4. '<|end|>' → logprob: -10.750256538391113
    5. ' :' → logprob: -10.875256538391113
    6. '>' → logprob: -11.500256538391113
    7. '   ' → logprob: -11.750256538391113
    8. ':**' → logprob: -11.875256538391113
    9. '=' → logprob: -12.000256538391113
    10. ',' → logprob: -12.625256538391113

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7682102918624878
    2. '<|end|>' → logprob: -1.3932102918624878
    3. '   ' → logprob: -1.6432102918624878
    4. ' ' → logprob: -3.1432104110717773
    5. '    ' → logprob: -3.1432104110717773
    6. ' if' → logprob: -6.393210411071777
    7. '<|end|>' → logprob: -6.393210411071777
    8. ' 
' → logprob: -6.518210411071777
    9. '        ' → logprob: -7.143210411071777
    10. '```' → logprob: -7.143210411071777

Token 48: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.445303350687027
    2. ' ' → logprob: -1.1953033208847046
    3. '    ' → logprob: -3.320303440093994
    4. 'if' (adapté à ' if') → logprob: -4.195303440093994
    5. '   ' → logprob: -6.320303440093994
    6. '       ' → logprob: -6.820303440093994
    7. '        ' → logprob: -7.570303440093994
    8. ' total' → logprob: -7.695303440093994
    9. '<|end|>' → logprob: -7.695303440093994
    10. ' ```' → logprob: -8.195302963256836

Token 49: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.009902938269078732
    2. 'c' → logprob: -5.2599029541015625
    3. ' ' → logprob: -5.3849029541015625
    4. '7' → logprob: -10.884902954101562
    5. '4' → logprob: -11.009902954101562
    6. '1' → logprob: -11.634902954101562
    7. '10' → logprob: -12.259902954101562
    8. '5' → logprob: -12.384902954101562
    9. '6' → logprob: -12.759902954101562
    10. ' (' → logprob: -13.134902954101562

Token 50: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6979924440383911
    2. ' ==' → logprob: -0.6979924440383911
    3. ' in' → logprob: -6.447992324829102
    4. ' ' → logprob: -6.697992324829102
    5. '>=' → logprob: -6.947992324829102
    6. ' >=' → logprob: -8.072992324829102
    7. 'in' → logprob: -8.072992324829102
    8. '=' → logprob: -8.947992324829102
    9. '>' → logprob: -8.947992324829102
    10. '  ' → logprob: -9.947992324829102

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25515007972717285
    2. ' ' → logprob: -1.5051500797271729
    3. '11' → logprob: -6.380149841308594
    4. '14' → logprob: -6.505149841308594
    5. '  ' → logprob: -11.505149841308594
    6. '   ' → logprob: -13.130149841308594
    7. 'ace' → logprob: -13.442649841308594
    8. '10' → logprob: -13.442649841308594
    9. '-' → logprob: -13.942649841308594
    10. ' ' → logprob: -14.067649841308594

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015016533434391022
    2. '11' → logprob: -4.390016555786133
    3. '14' → logprob: -6.015016555786133
    4. ' ' → logprob: -10.640016555786133
    5. '0' → logprob: -12.015016555786133
    6. '-' → logprob: -12.265016555786133
    7. ''' → logprob: -12.390016555786133
    8. '13' → logprob: -13.077516555786133
    9. '10' → logprob: -13.265016555786133
    10. '"' → logprob: -13.515016555786133

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002573875244706869
    2. ':
' → logprob: -6.8775739669799805
    3. ' or' → logprob: -7.1275739669799805
    4. ' :' → logprob: -7.2525739669799805
    5. ' and' → logprob: -11.50257396697998
    6. '7' → logprob: -13.12757396697998
    7. ' :
' → logprob: -13.25257396697998
    8. '   ' → logprob: -13.37757396697998
    9. '0' → logprob: -13.87757396697998
    10. '6' → logprob: -14.00257396697998

Token 54: '           ' (ID: 352)
  Prédit: 'aces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.3749486804008484
    2. '           ' → logprob: -1.8749487400054932
    3. ' ac' → logprob: -1.8749487400054932
    4. '       ' → logprob: -6.124948501586914
    5. '   ' → logprob: -7.124948501586914
    6. '        ' → logprob: -7.249948501586914
    7. 'ac' → logprob: -7.499948501586914
    8. '<|end|>' → logprob: -8.124948501586914
    9. '    ' → logprob: -8.499948501586914
    10. '```' → logprob: -8.749948501586914

Token 55: ' ac' (ID: 1375)
  Prédit: 'aces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.0907491073012352
    2. ' ac' → logprob: -2.4657490253448486
    3. '   ' → logprob: -6.965749263763428
    4. 'ace' → logprob: -7.965749263763428
    5. ' ' → logprob: -8.84074878692627
    6. 'ac' (adapté à ' ac') → logprob: -9.21574878692627
    7. '       ' → logprob: -9.71574878692627
    8. '           ' → logprob: -9.84074878692627
    9. '```' → logprob: -10.46574878692627
    10. 'acs' → logprob: -10.59074878692627

Token 56: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0028128400444984436
    2. 'e' → logprob: -5.87781286239624
    3. ' ' → logprob: -12.627812385559082
    4. 's' → logprob: -13.127812385559082
    5. ' es' → logprob: -13.252812385559082
    6. '   ' → logprob: -15.377812385559082
    7. ' e' → logprob: -15.502812385559082
    8. '     ' → logprob: -16.5028133392334
    9. '  ' → logprob: -16.6278133392334
    10. 'ess' → logprob: -17.0028133392334

Token 57: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008618354797363281
    2. '+=' → logprob: -4.758618354797363
    3. '+' → logprob: -12.883618354797363
    4. ' =' → logprob: -14.383618354797363
    5. ' +' → logprob: -15.258618354797363
    6. '=' → logprob: -16.008617401123047
    7. ' ' → logprob: -16.133617401123047
    8. '   ' → logprob: -16.633617401123047
    9. ']+=' → logprob: -17.133617401123047
    10. '    ' → logprob: -17.633617401123047

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.575939953327179
    2. '1' → logprob: -0.825939953327179
    3. '<|end|>' → logprob: -14.825940132141113
    4. ' ' → logprob: -15.825940132141113
    5. '  ' → logprob: -17.575939178466797
    6. '    ' → logprob: -18.450939178466797
    7. '۱' → logprob: -18.575939178466797
    8. '2' → logprob: -18.763439178466797
    9. '```' → logprob: -18.888439178466797
    10. '１' → logprob: -18.950939178466797

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '<|end|>' → logprob: -18.75010871887207
    4. '   ' → logprob: -19.00010871887207
    5. '```' → logprob: -19.87510871887207
    6. '  ' → logprob: -19.87510871887207
    7. '2' → logprob: -20.00010871887207
    8. ' ' → logprob: -20.25010871887207
    9. '+' → logprob: -20.25010871887207
    10. '۱' → logprob: -20.87510871887207

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39938852190971375
    2. '<|end|>' → logprob: -1.2743885517120361
    3. ' 
' → logprob: -3.899388551712036
    4. ' ' → logprob: -4.274388313293457
    5. '       ' → logprob: -4.774388313293457
    6. ' else' → logprob: -6.649388313293457
    7. '<|end|>' → logprob: -6.649388313293457
    8. '   ' → logprob: -6.774388313293457
    9. '    
' → logprob: -6.899388313293457
    10. ' elif' → logprob: -7.649388313293457

Token 61: '           ' (ID: 352)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9695155620574951
    2. '       ' → logprob: -1.4695155620574951
    3. ' elif' → logprob: -1.8445155620574951
    4. '   ' → logprob: -2.094515562057495
    5. 'else' → logprob: -3.594515562057495
    6. 'elif' → logprob: -3.844515562057495
    7. '
' → logprob: -4.219515800476074
    8. ' ' → logprob: -4.219515800476074
    9. '<|end|>' → logprob: -4.469515800476074
    10. '    ' → logprob: -4.719515800476074

Token 62: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.1172938197851181
    2. ' total' → logprob: -2.2422938346862793
    3. '   ' → logprob: -6.617293834686279
    4. 'else' → logprob: -6.992293834686279
    5. '8' → logprob: -7.367293834686279
    6. 'elif' → logprob: -8.117293357849121
    7. '7' → logprob: -8.242293357849121
    8. ' ' → logprob: -8.742293357849121
    9. '16' → logprob: -8.867293357849121
    10. '10' → logprob: -8.992293357849121

Token 63: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10027643293142319
    2. '+=' → logprob: -2.350276470184326
    3. '+' → logprob: -9.600275993347168
    4. ' +' → logprob: -13.725275993347168
    5. '<|end|>' → logprob: -15.225275993347168
    6. ']+=' → logprob: -15.350275993347168
    7. ' ' → logprob: -15.725275993347168
    8. '+='' → logprob: -16.100276947021484
    9. '+="' → logprob: -16.850276947021484
    10. '+=(' → logprob: -16.850276947021484

Token 64: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.47698479890823364
    2. '1' → logprob: -0.9769847989082336
    3. ' ' → logprob: -5.851984977722168
    4. '10' → logprob: -10.601984977722168
    5. '  ' → logprob: -13.101984977722168
    6. '   ' → logprob: -14.351984977722168
    7. '0' → logprob: -14.476984977722168
    8. '

' → logprob: -14.601984977722168
    9. '7' → logprob: -14.976984977722168
    10. '```' → logprob: -16.22698402404785

Token 65: '1' (ID: 16)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.17978745698928833
    2. '1' → logprob: -1.8047873973846436
    3. '10' → logprob: -10.929787635803223
    4. ' ' → logprob: -11.679787635803223
    5. '

' → logprob: -12.054787635803223
    6. '0' → logprob: -12.679787635803223
    7. '  ' → logprob: -13.554787635803223
    8. '   ' → logprob: -13.679787635803223
    9. '
' → logprob: -13.992287635803223
    10. '```' → logprob: -14.367287635803223

Token 66: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08575435727834702
    2. 'elif' → logprob: -2.96075439453125
    3. ' elif' → logprob: -4.46075439453125
    4. 'else' → logprob: -5.08575439453125
    5. '<|end|>' → logprob: -5.33575439453125
    6. ' else' → logprob: -5.58575439453125
    7. '   ' → logprob: -5.83575439453125
    8. '```' → logprob: -7.58575439453125
    9. '	elif' → logprob: -8.96075439453125
    10. '<|end|>' → logprob: -9.33575439453125

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06517914682626724
    2. 'elif' → logprob: -3.5651791095733643
    3. ' elif' → logprob: -4.315179347991943
    4. '   ' → logprob: -5.065179347991943
    5. ' else' → logprob: -5.065179347991943
    6. 'else' → logprob: -5.190179347991943
    7. '```' → logprob: -5.815179347991943
    8. '<|end|>' → logprob: -9.440178871154785
    9. '	elif' → logprob: -10.190178871154785
    10. ' ' → logprob: -10.565178871154785

Token 68: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.26332494616508484
    2. '       ' → logprob: -2.2633249759674072
    3. ' elif' → logprob: -2.2633249759674072
    4. 'else' → logprob: -4.388324737548828
    5. ' else' → logprob: -4.763324737548828
    6. '   ' → logprob: -6.388324737548828
    7. '<|end|>' → logprob: -8.263324737548828
    8. ' ' → logprob: -8.388324737548828
    9. '  ' → logprob: -8.763324737548828
    10. '	elif' → logprob: -9.263324737548828

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6989893317222595
    2. '10' → logprob: -0.9489893317222595
    3. 'c' → logprob: -2.5739893913269043
    4. '2' → logprob: -4.073989391326904
    5. ' c' → logprob: -4.198989391326904
    6. '1' → logprob: -5.573989391326904
    7. '7' → logprob: -6.698989391326904
    8. '11' → logprob: -6.698989391326904
    9. '9' → logprob: -7.948989391326904
    10. '5' → logprob: -8.948988914489746

Token 70: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.33444744348526
    2. '10' → logprob: -1.7094473838806152
    3. '11' → logprob: -2.7094473838806152
    4. '1' → logprob: -3.9594473838806152
    5. ' ' → logprob: -4.834447383880615
    6. '2' → logprob: -5.334447383880615
    7. ' c' → logprob: -5.459447383880615
    8. '7' → logprob: -7.709447383880615
    9. '14' → logprob: -10.459447860717773
    10. '5' → logprob: -10.834447860717773

Token 71: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07933608442544937
    2. '<=' → logprob: -2.579336166381836
    3. ' ' → logprob: -8.579336166381836
    4. '*' → logprob: -9.954336166381836
    5. '0' → logprob: -10.079336166381836
    6. ' *' → logprob: -10.579336166381836
    7. '   ' → logprob: -11.079336166381836
    8. '-' → logprob: -11.204336166381836
    9. ' ' → logprob: -11.329336166381836
    10. '1' → logprob: -11.329336166381836

Token 72: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1797473132610321
    2. ' c' → logprob: -1.8047473430633545
    3. ' ' → logprob: -13.554747581481934
    4. '	c' → logprob: -15.054747581481934
    5. '   ' → logprob: -15.429747581481934
    6. ' ' → logprob: -16.054746627807617
    7. '    ' → logprob: -16.179746627807617
    8. '7' → logprob: -16.679746627807617
    9. 'cards' → logprob: -16.804746627807617
    10. '<|end|>' → logprob: -16.804746627807617

Token 73: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.576447606086731
    2. '<=' → logprob: -0.826447606086731
    3. ' and' → logprob: -7.826447486877441
    4. 'and' → logprob: -9.326447486877441
    5. ' ' → logprob: -11.576447486877441
    6. '<' → logprob: -12.951447486877441
    7. '<|end|>' → logprob: -13.701447486877441
    8. ' <' → logprob: -14.076447486877441
    9. '   ' → logprob: -14.076447486877441
    10. '```' → logprob: -14.201447486877441

Token 74: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12709073722362518
    2. '9' → logprob: -2.1270906925201416
    3. ' ' → logprob: -8.877090454101562
    4. '1' → logprob: -11.252090454101562
    5. '  ' → logprob: -13.627090454101562
    6. '11' → logprob: -14.127090454101562
    7. '7' → logprob: -14.127090454101562
    8. '۱۰' → logprob: -14.502090454101562
    9. '  
' → logprob: -14.564590454101562
    10. '6' → logprob: -14.752090454101562

Token 75: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.31337183713912964
    2. '9' → logprob: -1.3133718967437744
    3. '1' → logprob: -9.438371658325195
    4. ' ' → logprob: -11.063371658325195
    5. '۱۰' → logprob: -13.688371658325195
    6. '6' → logprob: -13.813371658325195
    7. '  ' → logprob: -13.938371658325195
    8. '4' → logprob: -14.000871658325195
    9. '5' → logprob: -14.000871658325195
    10. '```' → logprob: -14.063371658325195

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22607141733169556
    2. ':
' → logprob: -1.6010713577270508
    3. '           ' → logprob: -7.601071357727051
    4. '       ' → logprob: -9.47607135772705
    5. ':
' → logprob: -10.35107135772705
    6. ':

' → logprob: -11.22607135772705
    7. '   ' → logprob: -11.72607135772705
    8. ' :' → logprob: -11.85107135772705
    9. ' :
' → logprob: -12.60107135772705
    10. '=' → logprob: -12.72607135772705

Token 77: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17683781683444977
    2. ' total' → logprob: -2.176837921142578
    3. 'total' → logprob: -3.051837921142578
    4. '       ' → logprob: -7.426837921142578
    5. '   ' → logprob: -8.301837921142578
    6. ':' → logprob: -8.926837921142578
    7. ' ' → logprob: -8.926837921142578
    8. ':
' → logprob: -9.801837921142578
    9. '               ' → logprob: -10.051837921142578
    10. '	total' → logprob: -10.051837921142578

Token 78: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.35352298617362976
    2. 'total' (adapté à ' total') → logprob: -1.2285230159759521
    3. '           ' → logprob: -5.353522777557373
    4. '       ' → logprob: -8.978523254394531
    5. '   ' → logprob: -9.228523254394531
    6. '	total' → logprob: -10.353523254394531
    7. '               ' → logprob: -10.853523254394531
    8. ' ' → logprob: -11.103523254394531
    9. '(total' → logprob: -12.228523254394531
    10. '  ' → logprob: -12.478523254394531

Token 79: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.026377402245998383
    2. '+=' → logprob: -3.6513774394989014
    3. '+' → logprob: -9.77637767791748
    4. ' +' → logprob: -11.02637767791748
    5. '        ' → logprob: -13.40137767791748
    6. '            ' → logprob: -14.15137767791748
    7. '           ' → logprob: -14.40137767791748
    8. '    ' → logprob: -14.65137767791748
    9. '       ' → logprob: -15.40137767791748
    10. ']+=' → logprob: -15.90137767791748

Token 80: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0067156096920371056
    2. ' c' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.131715774536133
    4. ' ' → logprob: -16.256715774536133
    5. '	c' → logprob: -17.506715774536133
    6. '9' → logprob: -17.881715774536133
    7. 'cards' → logprob: -17.881715774536133
    8. '7' → logprob: -18.256715774536133
    9. 'int' → logprob: -18.506715774536133
    10. '8' → logprob: -18.506715774536133

Token 81: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5552610754966736
    2. 'else' → logprob: -1.3052611351013184
    3. 'elif' → logprob: -2.8052611351013184
    4. ' else' → logprob: -2.9302611351013184
    5. '   ' → logprob: -3.3052611351013184
    6. ' elif' → logprob: -5.805261135101318
    7. '```' → logprob: -7.055261135101318
    8. '<|end|>' → logprob: -8.30526065826416
    9. '	elif' → logprob: -8.55526065826416
    10. '	else' → logprob: -9.80526065826416

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20287606120109558
    2. 'else' → logprob: -2.202876091003418
    3. 'elif' → logprob: -3.327876091003418
    4. ' else' → logprob: -3.952876091003418
    5. '   ' → logprob: -4.452876091003418
    6. '<|end|>' → logprob: -5.452876091003418
    7. ' elif' → logprob: -6.827876091003418
    8. '```' → logprob: -7.202876091003418
    9. '	elif' → logprob: -8.827876091003418
    10. '<|end|>' → logprob: -9.702876091003418

Token 83: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10191426426172256
    2. ' else' → logprob: -2.601914167404175
    3. 'elif' → logprob: -3.976914167404175
    4. '   ' → logprob: -5.726914405822754
    5. ' elif' → logprob: -7.226914405822754
    6. '       ' → logprob: -10.851914405822754
    7. '```' → logprob: -11.726914405822754
    8. '	else' → logprob: -13.101914405822754
    9. '	elif' → logprob: -13.976914405822754
    10. '9' → logprob: -14.601914405822754

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018543887417763472
    2. ':
' → logprob: -6.501854419708252
    3. ' :' → logprob: -8.626853942871094
    4. '   ' → logprob: -9.626853942871094
    5. '       ' → logprob: -9.876853942871094
    6. '           ' → logprob: -10.001853942871094
    7. '=' → logprob: -13.626853942871094
    8. ',' → logprob: -13.876853942871094
    9. ':
' → logprob: -14.001853942871094
    10. '        ' → logprob: -14.376853942871094

Token 85: '           ' (ID: 352)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0631394386291504
    2. '   ' → logprob: -1.4381394386291504
    3. '           ' → logprob: -1.8131394386291504
    4. '       ' → logprob: -1.9381394386291504
    5. 'total' → logprob: -2.6881394386291504
    6. ' total' → logprob: -4.18813943862915
    7. ' ' → logprob: -4.68813943862915
    8. '12' → logprob: -5.43813943862915
    9. '11' → logprob: -6.06313943862915
    10. '20' → logprob: -6.18813943862915

Token 86: ' total' (ID: 3609)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09874077141284943
    2. 'total' (adapté à ' total') → logprob: -2.598740816116333
    3. ' ' → logprob: -4.848740577697754
    4. ' total' → logprob: -5.223740577697754
    5. '   ' → logprob: -5.223740577697754
    6. '           ' → logprob: -7.598740577697754
    7. '  ' → logprob: -8.973740577697754
    8. '1' → logprob: -9.473740577697754
    9. '       ' → logprob: -9.598740577697754
    10. '    ' → logprob: -9.723740577697754

Token 87: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005158595158718526
    2. ' +=' → logprob: -7.625515937805176
    3. '+' → logprob: -10.500515937805176
    4. '=' → logprob: -16.00051498413086
    5. ']+=' → logprob: -16.12551498413086
    6. '+="' → logprob: -16.75051498413086
    7. '+=(' → logprob: -17.25051498413086
    8. '+='' → logprob: -18.12551498413086
    9. '```' → logprob: -18.62551498413086
    10. '   ' → logprob: -20.00051498413086

Token 88: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.000007629394531
    3. '1' → logprob: -13.875007629394531
    4. '0' → logprob: -17.75000762939453
    5. '```' → logprob: -17.75000762939453
    6. '11' → logprob: -18.75000762939453
    7. '   ' → logprob: -19.25000762939453
    8. '	' → logprob: -19.31250762939453
    9. '１０' → logprob: -19.31250762939453
    10. '  ' → logprob: -19.62500762939453

Token 89: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.080963092041202e-06
    2. '1' → logprob: -12.250004768371582
    3. ' ' → logprob: -16.3750057220459
    4. '```' → logprob: -16.6250057220459
    5. '１０' → logprob: -18.6250057220459
    6. '	' → logprob: -18.7500057220459
    7. '11' → logprob: -18.8750057220459
    8. '0' → logprob: -18.9375057220459
    9. '۱۰' → logprob: -19.0625057220459
    10. ''' → logprob: -19.3125057220459

Token 90: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8559541702270508
    2. '
' → logprob: -1.2309541702270508
    3. ' 
' → logprob: -2.230954170227051
    4. '    
' → logprob: -2.855954170227051
    5. ' while' → logprob: -3.605954170227051
    6. ' if' → logprob: -4.230954170227051
    7. '```' → logprob: -4.230954170227051
    8. ' for' → logprob: -4.480954170227051
    9. '  
' → logprob: -4.480954170227051
    10. 'while' → logprob: -4.605954170227051

Token 91: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.017935872077942
    2. '   ' → logprob: -1.392935872077942
    3. ' 
' → logprob: -1.767935872077942
    4. '    
' → logprob: -2.6429357528686523
    5. ' while' → logprob: -3.5179357528686523
    6. ' if' → logprob: -3.6429357528686523
    7. '```' → logprob: -3.6429357528686523
    8. '<|end|>' → logprob: -3.7679357528686523
    9. 'if' → logprob: -5.017935752868652
    10. '   
' → logprob: -5.017935752868652

Token 92: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3529032766819
    2. '
' → logprob: -2.102903366088867
    3. 'while' → logprob: -2.852903366088867
    4. '   ' → logprob: -2.852903366088867
    5. '    
' → logprob: -3.852903366088867
    6. ' if' → logprob: -4.477903366088867
    7. ' total' → logprob: -5.102903366088867
    8. ' 
' → logprob: -5.477903366088867
    9. ' for' → logprob: -5.602903366088867
    10. '   
' → logprob: -6.102903366088867

Token 93: ' Try' (ID: 14720)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6910226345062256
    2. ' for' → logprob: -1.4410226345062256
    3. 'while' → logprob: -1.8160226345062256
    4. 'for' → logprob: -2.6910226345062256
    5. ' if' → logprob: -4.441022872924805
    6. '   ' → logprob: -5.316022872924805
    7. ' total' → logprob: -5.316022872924805
    8. 'if' → logprob: -5.691022872924805
    9. 'total' → logprob: -5.941022872924805
    10. ' #' → logprob: -6.816022872924805

Token 94: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.19272086024284363
    2. ' adding' → logprob: -2.817720890045166
    3. 'to' → logprob: -3.067720890045166
    4. ':' → logprob: -3.692720890045166
    5. ' ' → logprob: -3.942720890045166
    6. 'adding' → logprob: -5.317720890045166
    7. 'total' → logprob: -5.317720890045166
    8. ':
' → logprob: -5.942720890045166
    9. ' total' → logprob: -5.942720890045166
    10. 'ing' → logprob: -5.942720890045166

Token 95: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.5532023906707764
    2. 'for' → logprob: -2.4282023906707764
    3. ' for' → logprob: -2.8032023906707764
    4. 'maximize' → logprob: -2.8032023906707764
    5. ' maximize' → logprob: -2.9282023906707764
    6. ' use' → logprob: -2.9282023906707764
    7. 'increase' → logprob: -3.9282023906707764
    8. 'while' → logprob: -3.9282023906707764
    9. 'add' → logprob: -4.3032026290893555
    10. ' while' → logprob: -4.4282026290893555

Token 96: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5897088050842285
    2. 'aces' → logprob: -1.3397088050842285
    3. '10' → logprob: -2.3397088050842285
    4. ' ac' → logprob: -2.7147088050842285
    5. ' ace' → logprob: -5.0897088050842285
    6. ' the' → logprob: -5.3397088050842285
    7. 'ace' → logprob: -5.7147088050842285
    8. '1' → logprob: -6.0897088050842285
    9. '11' → logprob: -7.2147088050842285
    10. '```' → logprob: -7.2147088050842285

Token 97: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07270216941833496
    2. 'aces' → logprob: -3.447702169418335
    3. ' ' → logprob: -3.572702169418335
    4. '11' → logprob: -5.447702407836914
    5. '1' → logprob: -5.572702407836914
    6. '```' → logprob: -7.072702407836914
    7. 'ace' → logprob: -7.197702407836914
    8. ' ac' → logprob: -9.447702407836914
    9. 'additional' → logprob: -9.447702407836914
    10. 'for' → logprob: -10.197702407836914

Token 98: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' some' (ID: 1236)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.04094620794057846
    2. 'each' → logprob: -3.2909462451934814
    3. ' ac' → logprob: -5.915946006774902
    4. 'aces' → logprob: -9.040946006774902
    5. ' every' → logprob: -10.790946006774902
    6. ' the' → logprob: -10.790946006774902
    7. ' all' → logprob: -11.165946006774902
    8. ' ace' → logprob: -11.665946006774902
    9. ' any' → logprob: -12.040946006774902
    10. ' an' → logprob: -12.165946006774902

Token 100: ' ac' (ID: 1375)
  Prédit: 'aces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.666887104511261
    2. ' ac' → logprob: -1.0418870449066162
    3. ' of' → logprob: -2.041887044906616
    4. ' or' → logprob: -6.291887283325195
    5. 'of' → logprob: -6.916887283325195
    6. ' ace' → logprob: -7.541887283325195
    7. '<|end|>' → logprob: -8.291887283325195
    8. 'acs' → logprob: -8.791887283325195
    9. 'ac' → logprob: -9.041887283325195
    10. 'ace' → logprob: -9.541887283325195

Token 101: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0008240377064794302
    2. 'e' → logprob: -7.125823974609375
    3. '```' → logprob: -12.250823974609375
    4. ' es' → logprob: -12.750823974609375
    5. '(es' → logprob: -13.438323974609375
    6. '	es' → logprob: -13.688323974609375
    7. 'hes' → logprob: -13.813323974609375
    8. 'ес' → logprob: -14.125823974609375
    9. ''es' → logprob: -14.313323974609375
    10. '   ' → logprob: -14.625823974609375

Token 102: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23026935756206512
    2. '   ' → logprob: -2.105269432067871
    3. 'for' → logprob: -3.355269432067871
    4. ' while' → logprob: -3.480269432067871
    5. ' if' → logprob: -4.855269432067871
    6. '    ' → logprob: -5.855269432067871
    7. '    
' → logprob: -5.980269432067871
    8. 'while' → logprob: -6.480269432067871
    9. 'aces' → logprob: -7.480269432067871
    10. ' 
' → logprob: -7.480269432067871

Token 103: ' it' (ID: 480)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.20741744339466095
    2. ' ac' → logprob: -1.7074174880981445
    3. 'total' → logprob: -5.3324174880981445
    4. ' possible' → logprob: -7.8324174880981445
    5. 'aces' → logprob: -8.082417488098145
    6. ' ' → logprob: -8.207417488098145
    7. '(total' → logprob: -9.832417488098145
    8. 'ac' → logprob: -10.582417488098145
    9. '   ' → logprob: -11.082417488098145
    10. ' there' → logprob: -11.207417488098145

Token 104: ' doesn't' (ID: 8740)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19654805958271027
    2. ' can' → logprob: -2.6965479850769043
    3. ' possible' → logprob: -3.3215479850769043
    4. ' is' → logprob: -3.8215479850769043
    5. ' doesn't' → logprob: -4.321547985076904
    6. ':' → logprob: -4.946547985076904
    7. 'is' → logprob: -5.071547985076904
    8. ' s' → logprob: -5.196547985076904
    9. ' would' → logprob: -5.321547985076904
    10. ' could' → logprob: -5.446547985076904

Token 105: ' bust' (ID: 33638)
  Prédit: ' exceed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exceed' → logprob: -1.2262734174728394
    2. 'make' → logprob: -1.3512734174728394
    3. 'cause' → logprob: -1.6012734174728394
    4. 'ex' → logprob: -2.101273536682129
    5. ' cause' → logprob: -2.601273536682129
    6. ' make' → logprob: -3.226273536682129
    7. 'overflow' → logprob: -4.976273536682129
    8. 'b' → logprob: -6.976273536682129
    9. '```' → logprob: -7.101273536682129
    10. '>' → logprob: -7.851273536682129

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1261124461889267
    2. ' for' → logprob: -2.251112461090088
    3. '    
' → logprob: -5.501112461090088
    4. ' while' → logprob: -6.376112461090088
    5. 'for' → logprob: -6.501112461090088
    6. '
' → logprob: -6.501112461090088
    7. '    ' → logprob: -6.626112461090088
    8. ' 
' → logprob: -6.876112461090088
    9. '<|end|>' → logprob: -6.876112461090088
    10. '       ' → logprob: -8.37611198425293

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08024270832538605
    2. ' for' → logprob: -2.95524263381958
    3. '    
' → logprob: -4.95524263381958
    4. ' 
' → logprob: -5.20524263381958
    5. '
' → logprob: -5.58024263381958
    6. '    ' → logprob: -5.83024263381958
    7. ' while' → logprob: -6.08024263381958
    8. '<|end|>' → logprob: -6.33024263381958
    9. 'for' → logprob: -7.33024263381958
    10. '   
' → logprob: -8.205243110656738

Token 108: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3186090290546417
    2. 'for' (adapté à ' for') → logprob: -1.5686089992523193
    3. '   ' → logprob: -2.8186089992523193
    4. ' while' → logprob: -5.693609237670898
    5. 'while' → logprob: -7.443609237670898
    6. '    ' → logprob: -7.818609237670898
    7. '    
' → logprob: -8.568609237670898
    8. ' if' → logprob: -9.068609237670898
    9. ' 
' → logprob: -9.693609237670898
    10. 'if' → logprob: -9.818609237670898

Token 109: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5184064507484436
    2. ' i' → logprob: -1.1434063911437988
    3. '_' → logprob: -2.518406391143799
    4. 'i' → logprob: -5.393406391143799
    5. ' ace' → logprob: -8.393406867980957
    6. ' ' → logprob: -8.768406867980957
    7. '_i' → logprob: -8.893406867980957
    8. ' a' → logprob: -9.768406867980957
    9. ' ac' → logprob: -10.143406867980957
    10. 'a' → logprob: -11.393406867980957

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00034714414505288005
    2. 'in' → logprob: -8.000347137451172
    3. ' ' → logprob: -11.625347137451172
    4. 'range' → logprob: -13.250347137451172
    5. '  ' → logprob: -14.625347137451172
    6. ' range' → logprob: -15.250347137451172
    7. '   ' → logprob: -15.750347137451172
    8. '    ' → logprob: -16.625347137451172
    9. ' i' → logprob: -17.000347137451172
    10. ' _' → logprob: -17.500347137451172

Token 111: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519318461418152
    2. 'range' → logprob: -1.50193190574646
    3. ' ' → logprob: -13.376932144165039
    4. '	range' → logprob: -14.626932144165039
    5. 'rang' → logprob: -15.626932144165039
    6. ' xrange' → logprob: -15.751932144165039
    7. '   ' → logprob: -15.876932144165039
    8. '  ' → logprob: -16.12693214416504
    9. '_range' → logprob: -16.25193214416504
    10. '(range' → logprob: -16.50193214416504

Token 112: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.240481914370321e-05
    2. 'aces' → logprob: -9.875052452087402
    3. ' (' → logprob: -14.250052452087402
    4. '(cards' → logprob: -16.375051498413086
    5. '(
' → logprob: -18.125051498413086
    6. '   ' → logprob: -18.750051498413086
    7. '(ac' → logprob: -19.375051498413086
    8. 'ACES' → logprob: -19.500051498413086
    9. '((' → logprob: -19.625051498413086
    10. 'acs' → logprob: -19.625051498413086

Token 113: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.03375277668237686
    2. ' ac' → logprob: -3.408752679824829
    3. '   ' → logprob: -10.15875244140625
    4. ' ' → logprob: -11.03375244140625
    5. 'acs' → logprob: -11.40875244140625
    6. 'ace' → logprob: -11.65875244140625
    7. 'aced' → logprob: -12.03375244140625
    8. ' ace' → logprob: -12.28375244140625
    9. 'acies' → logprob: -12.78375244140625
    10. 'ac' → logprob: -12.90875244140625

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3146219849586487
    2. '):
' → logprob: -1.314621925354004
    3. ' ):' → logprob: -6.939621925354004
    4. ' ):
' → logprob: -7.939621925354004
    5. ':' → logprob: -11.189621925354004
    6. '   ' → logprob: -11.314621925354004
    7. '):
' → logprob: -12.314621925354004
    8. '}:' → logprob: -14.314621925354004
    9. ')' → logprob: -14.314621925354004
    10. '):

' → logprob: -14.689621925354004

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18949130177497864
    2. '   ' → logprob: -1.8144912719726562
    3. ':' → logprob: -5.064491271972656
    4. ' if' → logprob: -6.189491271972656
    5. ':
' → logprob: -7.689491271972656
    6. '    ' → logprob: -7.939491271972656
    7. ',' → logprob: -9.189491271972656
    8. '<|end|>' → logprob: -9.314491271972656
    9. '    
' → logprob: -9.439491271972656
    10. 'if' → logprob: -9.939491271972656

Token 116: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03551861643791199
    2. '       ' → logprob: -4.160518646240234
    3. '   ' → logprob: -4.660518646240234
    4. 'if' (adapté à ' if') → logprob: -4.785518646240234
    5. '    ' → logprob: -6.785518646240234
    6. '           ' → logprob: -8.535518646240234
    7. '```' → logprob: -9.910518646240234
    8. '        ' → logprob: -10.285518646240234
    9. ' ' → logprob: -10.910518646240234
    10. '
' → logprob: -10.910518646240234

Token 117: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.07890003174543381
    2. 'total' → logprob: -2.578900098800659
    3. '   ' → logprob: -11.703900337219238
    4. '(total' → logprob: -14.203900337219238
    5. '	total' → logprob: -14.203900337219238
    6. ' ' → logprob: -14.578900337219238
    7. ' tota' → logprob: -17.828899383544922
    8. '$total' → logprob: -17.953899383544922
    9. ' ' → logprob: -18.203899383544922
    10. 'Total' → logprob: -18.703899383544922

Token 118: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0498681366443634
    2. ' +' → logprob: -3.049868106842041
    3. '<=' → logprob: -6.674868106842041
    4. ' <=' → logprob: -11.2998685836792
    5. '+=' → logprob: -12.7998685836792
    6. '＋' → logprob: -13.5498685836792
    7. ' ' → logprob: -14.7998685836792
    8. 'plus' → logprob: -15.1748685836792
    9. ' plus' → logprob: -15.5498685836792
    10. '```' → logprob: -15.9248685836792

Token 119: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38687121868133545
    2. '10' → logprob: -1.1368712186813354
    3. ' ' → logprob: -17.011871337890625
    4. '<|end|>' → logprob: -17.511871337890625
    5. '  ' → logprob: -17.636871337890625
    6. '```' → logprob: -18.386871337890625
    7. '1' → logprob: -18.761871337890625
    8. '   ' → logprob: -18.761871337890625
    9. ' ten' → logprob: -19.136871337890625
    10. '    ' → logprob: -19.386871337890625

Token 120: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '1' → logprob: -18.875036239624023
    4. '１０' → logprob: -19.875036239624023
    5. '۱۰' → logprob: -20.125036239624023
    6. '```' → logprob: -20.500036239624023
    7. '   ' → logprob: -20.750036239624023
    8. '  ' → logprob: -21.000036239624023
    9. '<|end|>' → logprob: -21.250036239624023
    10. '9' → logprob: -21.500036239624023

Token 121: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.474078893661499
    2. '<=' → logprob: -0.974078893661499
    3. '<' → logprob: -13.724079132080078
    4. ')<=' → logprob: -14.849079132080078
    5. ' ' → logprob: -16.099079132080078
    6. '>' → logprob: -16.349079132080078
    7. ']<=' → logprob: -17.099079132080078
    8. ')' → logprob: -17.099079132080078
    9. '```' → logprob: -17.224079132080078
    10. ' ' → logprob: -17.349079132080078

Token 122: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.0013389317318797112
    2. ' ' → logprob: -6.626338958740234
    3. '20' → logprob: -12.001338958740234
    4. '2' → logprob: -12.251338958740234
    5. '31' → logprob: -13.251338958740234
    6. '210' → logprob: -16.251338958740234
    7. '```' → logprob: -16.751338958740234
    8. '1' → logprob: -17.626338958740234
    9. '   ' → logprob: -17.751338958740234
    10. '10' → logprob: -18.001338958740234

Token 123: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -3.440506407059729e-05
    2. '2' → logprob: -10.50003433227539
    3. ' ' → logprob: -12.37503433227539
    4. '31' → logprob: -13.37503433227539
    5. '20' → logprob: -14.37503433227539
    6. '210' → logprob: -16.12503433227539
    7. '1' → logprob: -16.25003433227539
    8. '10' → logprob: -16.62503433227539
    9. '```' → logprob: -16.62503433227539
    10. '211' → logprob: -16.75003433227539

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3869718909263611
    2. ':
' → logprob: -1.1369719505310059
    3. '       ' → logprob: -10.011971473693848
    4. '           ' → logprob: -10.386971473693848
    5. ':
' → logprob: -11.136971473693848
    6. ' :
' → logprob: -12.636971473693848
    7. '   ' → logprob: -13.011971473693848
    8. ':

' → logprob: -13.136971473693848
    9. ' :' → logprob: -13.261971473693848
    10. '):
' → logprob: -14.261971473693848

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.516599714756012
    2. ':' → logprob: -1.3915996551513672
    3. ':
' → logprob: -1.8915996551513672
    4. '       ' → logprob: -5.891599655151367
    5. 'total' → logprob: -7.766599655151367
    6. '   ' → logprob: -8.641599655151367
    7. ' total' → logprob: -8.891599655151367
    8. ' :' → logprob: -9.141599655151367
    9. ' :
' → logprob: -9.391599655151367
    10. ' and' → logprob: -9.641599655151367

Token 126: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.05304676666855812
    2. 'total' (adapté à ' total') → logprob: -3.303046703338623
    3. '       ' → logprob: -4.928046703338623
    4. '   ' → logprob: -5.303046703338623
    5. '           ' → logprob: -6.428046703338623
    6. '               ' → logprob: -6.928046703338623
    7. '	total' → logprob: -10.178047180175781
    8. ' ' → logprob: -11.553047180175781
    9. '
' → logprob: -12.178047180175781
    10. '_total' → logprob: -12.553047180175781

Token 127: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07892173528671265
    2. ' +=' → logprob: -2.5789217948913574
    3. '+' → logprob: -10.4539213180542
    4. '=' → logprob: -13.4539213180542
    5. ']+=' → logprob: -13.7039213180542
    6. '+='' → logprob: -15.5789213180542
    7. '+="' → logprob: -15.8289213180542
    8. '```' → logprob: -16.828922271728516
    9. ' ' → logprob: -16.953922271728516
    10. '   ' → logprob: -17.203922271728516

Token 128: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013261953135952353
    2. ' ' → logprob: -6.626326084136963
    3. '1' → logprob: -15.376326560974121
    4. '```' → logprob: -18.001325607299805
    5. '１０' → logprob: -18.751325607299805
    6. ' ' → logprob: -19.126325607299805
    7. '۱۰' → logprob: -19.251325607299805
    8. '   ' → logprob: -19.313825607299805
    9. '`' → logprob: -20.126325607299805
    10. '  ' → logprob: -20.313825607299805

Token 129: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '１０' → logprob: -18.5
    5. '```' → logprob: -19.125
    6. '۱۰' → logprob: -19.25
    7. '0' → logprob: -20.75
    8. '१०' → logprob: -21.0
    9. '১০' → logprob: -21.625
    10. '' → logprob: -22.0

Token 130: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20358917117118835
    2. '   ' → logprob: -1.7035892009735107
    3. ' print' → logprob: -6.203588962554932
    4. '
' → logprob: -9.20358943939209
    5. '    
' → logprob: -11.32858943939209
    6. '       ' → logprob: -11.45358943939209
    7. 'else' → logprob: -11.57858943939209
    8. '```' → logprob: -11.70358943939209
    9. '	print' → logprob: -12.82858943939209
    10. '.' → logprob: -13.32858943939209

Token 131: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003062646137550473
    2. '   ' → logprob: -8.625306129455566
    3. ' print' → logprob: -9.000306129455566
    4. '```' → logprob: -13.625306129455566
    5. 'else' → logprob: -13.750306129455566
    6. '
' → logprob: -14.375306129455566
    7. '       ' → logprob: -16.750307083129883
    8. '	print' → logprob: -16.750307083129883
    9. 'if' → logprob: -16.750307083129883
    10. '(print' → logprob: -16.875307083129883

Token 132: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001243444043211639
    2. ' print' → logprob: -6.876243591308594
    3. '   ' → logprob: -9.251243591308594
    4. 'else' → logprob: -9.251243591308594
    5. ' else' → logprob: -11.376243591308594
    6. '       ' → logprob: -13.251243591308594
    7. '```' → logprob: -13.251243591308594
    8. ' ' → logprob: -14.001243591308594
    9. '    
' → logprob: -14.251243591308594
    10. 'if' → logprob: -14.876243591308594

Token 133: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.06277576833963394
    2. '(' → logprob: -2.8127758502960205
    3. '('' → logprob: -7.562775611877441
    4. '(f' → logprob: -8.437775611877441
    5. '("' → logprob: -10.312775611877441
    6. '()' → logprob: -10.562775611877441
    7. 'total' → logprob: -11.812775611877441
    8. '((' → logprob: -13.437775611877441
    9. ' (' → logprob: -14.062775611877441
    10. '(sum' → logprob: -14.187775611877441

Token 134: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.250001907348633
    3. ')`' → logprob: -15.625001907348633
    4. ')
' → logprob: -16.875001907348633
    5. '))' → logprob: -17.375001907348633
    6. '`)' → logprob: -18.625001907348633
    7. '')' → logprob: -19.500001907348633
    8. ')#' → logprob: -19.750001907348633
    9. '())' → logprob: -19.875001907348633
    10. ')}' → logprob: -20.000001907348633

Token 135: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4287477135658264
    2. ' total' → logprob: -1.0537476539611816
    3. '21' → logprob: -10.67874813079834
    4. ' ' → logprob: -11.42874813079834
    5. '   ' → logprob: -12.17874813079834
    6. '	total' → logprob: -13.30374813079834
    7. '(total' → logprob: -13.67874813079834
    8. '20' → logprob: -13.80374813079834
    9. '  ' → logprob: -14.30374813079834
    10. ' ' → logprob: -14.42874813079834

Token 136: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -6.515961285913363e-05
    2. ' <=' → logprob: -9.750064849853516
    3. '<' → logprob: -12.125064849853516
    4. '==' → logprob: -14.625064849853516
    5. 'else' → logprob: -14.750064849853516
    6. '!=' → logprob: -15.250064849853516
    7. '>' → logprob: -15.500064849853516
    8. '>=' → logprob: -15.625064849853516
    9. 'le' → logprob: -17.250064849853516
    10. ')<=' → logprob: -17.625064849853516

Token 137: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.0015035520773380995
    2. ' ' → logprob: -6.5015034675598145
    3. '20' → logprob: -14.126503944396973
    4. '2' → logprob: -15.626503944396973
    5. '31' → logprob: -17.064002990722656
    6. '   ' → logprob: -17.251502990722656
    7. '```' → logprob: -17.376502990722656
    8. '	' → logprob: -17.376502990722656
    9. '11' → logprob: -17.439002990722656
    10. '  ' → logprob: -17.689002990722656

Token 138: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.00011439072113716975
    2. ' ' → logprob: -9.125114440917969
    3. '2' → logprob: -12.375114440917969
    4. '20' → logprob: -14.000114440917969
    5. '	' → logprob: -16.25011444091797
    6. '   ' → logprob: -16.75011444091797
    7. '```' → logprob: -16.87511444091797
    8. '  ' → logprob: -17.37511444091797
    9. '
' → logprob: -17.37511444091797
    10. '10' → logprob: -17.68761444091797

Token 139: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3132622241973877
    2. ' else' → logprob: -1.3132622241973877
    3. ')' → logprob: -15.813261985778809
    4. '	else' → logprob: -16.063262939453125
    5. ' ' → logprob: -16.688262939453125
    6. '0' → logprob: -17.563262939453125
    7. '<|end|>' → logprob: -17.563262939453125
    8. '_else' → logprob: -18.063262939453125
    9. ',' → logprob: -18.188262939453125
    10. '   ' → logprob: -18.188262939453125

Token 140: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3386336863040924
    2. ''' → logprob: -1.58863365650177
    3. ' "' → logprob: -3.0886337757110596
    4. '"B' → logprob: -4.0886335372924805
    5. ' '' → logprob: -4.5886335372924805
    6. 'Bust' → logprob: -5.7136335372924805
    7. ' bust' → logprob: -5.9636335372924805
    8. ' ' → logprob: -6.7136335372924805
    9. ''b' → logprob: -7.0886335372924805
    10. ' Bust' → logprob: -7.3386335372924805

Token 141: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3959081172943115
    2. ''' → logprob: -1.2709081172943115
    3. '22' → logprob: -3.5209081172943115
    4. '"B' → logprob: -4.645908355712891
    5. 'Bust' → logprob: -5.770908355712891
    6. ''b' → logprob: -6.645908355712891
    7. ' "' → logprob: -8.02090835571289
    8. '23' → logprob: -8.14590835571289
    9. '21' → logprob: -8.52090835571289
    10. ' ' → logprob: -8.52090835571289

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.125000953674316
    3. '))' → logprob: -15.875000953674316
    4. ')
' → logprob: -17.000001907348633
    5. ')`' → logprob: -17.125001907348633
    6. '`)' → logprob: -18.750001907348633
    7. ')}' → logprob: -19.000001907348633
    8. '())' → logprob: -19.750001907348633
    9. ')#' → logprob: -20.125001907348633
    10. '})' → logprob: -20.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 140
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 70
Tokens correctement prédits (top 10): 122
Précision stricte (1ère position): 46.43%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 87.14%
================================================================================
