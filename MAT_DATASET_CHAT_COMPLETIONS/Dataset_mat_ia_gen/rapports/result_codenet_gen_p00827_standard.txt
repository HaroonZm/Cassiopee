================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def extended_gcd(a, b):
    if b == 0:
        return a, 1, 0
    g, x1, y1 = extended_gcd(b, a % b)
    return g, y1, x1 - (a // b) * y1

for line in sys.stdin:
    a, b, d = map(int, line.split())
    if a == 0 and b == 0 and d == 0:
        break
    g, x0, y0 = extended_gcd(a, b)
    x0 *= d // g
    y0 *= d // g
    # general solution: x = x0 + k*(b/g), y = y0 - k*(a/g)
    A = b // g
    B = a // g

    # We want nonnegative x,y => x0 + k*A >=0 and y0 - k*B >=0
    # So k >= ceil(-x0 / A) and k <= floor(y0 / B)
    from math import ceil, floor
    k_min = ceil(-x0 / A) if A != 0 else 0
    k_max = floor(y0 / B) if B != 0 else 0

    best_x = None
    best_y = None
    best_sum = None
    best_mass = None

    for k in range(k_min, k_max +1):
        x = x0 + k * A
        y = y0 - k * B
        if x < 0 or y < 0:
            continue
        s = x + y
        m = a*x + b*y
        if best_sum is None or s < best_sum or (s == best_sum and m < best_mass):
            best_sum = s
            best_mass = m
            best_x = x
            best_y = y

    print(best_x, best_y)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2506629228591919
    2. '\n' → logprob: -2.1256628036499023
    3. 'import' → logprob: -3.1256628036499023
    4. '<|end|>' → logprob: -3.2506628036499023
    5. 'newline' → logprob: -5.500662803649902
    6. '\' → logprob: -5.625662803649902
    7. '<|end|>' → logprob: -6.125662803649902
    8. '' → logprob: -6.250662803649902
    9. 'print' → logprob: -6.875662803649902
    10. '\r' → logprob: -6.875662803649902

Token 4: ' extended' (ID: 17290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40003764629364014
    2. ' space' → logprob: -2.0250377655029297
    3. ' process' → logprob: -3.1500377655029297
    4. ' main' → logprob: -3.1500377655029297
    5. ' read' → logprob: -3.9000377655029297
    6. ' my' → logprob: -4.15003776550293
    7. ' calculate' → logprob: -4.27503776550293
    8. ' hello' → logprob: -4.65003776550293
    9. ' a' → logprob: -5.02503776550293
    10. '_' → logprob: -5.40003776550293

Token 5: '_g' (ID: 5439)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008210045285522938
    2. ' _' → logprob: -6.383210182189941
    3. '_space' → logprob: -6.758210182189941
    4. '_sys' → logprob: -7.383210182189941
    5. '_import' → logprob: -7.883210182189941
    6. ' ' → logprob: -8.008210182189941
    7. 'space' → logprob: -8.008210182189941
    8. '_attr' → logprob: -8.258210182189941
    9. '_version' → logprob: -8.508210182189941
    10. '(' → logprob: -8.883210182189941

Token 6: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -8.017927029868588e-05
    2. 'CD' → logprob: -10.750080108642578
    3. '_cd' → logprob: -11.625080108642578
    4. 'enerator' → logprob: -11.875080108642578
    5. 't' → logprob: -12.000080108642578
    6. 'et' → logprob: -12.125080108642578
    7. ' cd' → logprob: -12.250080108642578
    8. 'en' → logprob: -12.250080108642578
    9. 'u' → logprob: -12.750080108642578
    10. 'g' → logprob: -12.875080108642578

Token 7: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033742422237992287
    2. '_' → logprob: -6.628374099731445
    3. ' (' → logprob: -7.378374099731445
    4. '<|end|>' → logprob: -7.628374099731445
    5. '```' → logprob: -7.878374099731445
    6. '<|end|>' → logprob: -8.753374099731445
    7. '(
' → logprob: -9.628374099731445
    8. '(_' → logprob: -10.003374099731445
    9. ')' → logprob: -10.378374099731445
    10. '_(' → logprob: -10.378374099731445

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002996124094352126
    2. ' ,' → logprob: -7.00299596786499
    3. ',a' → logprob: -7.37799596786499
    4. ')' → logprob: -7.62799596786499
    5. '<|end|>' → logprob: -7.87799596786499
    6. ',b' → logprob: -8.002996444702148
    7. '_,' → logprob: -9.002996444702148
    8. ',)' → logprob: -10.877996444702148
    9. ' ' → logprob: -11.127996444702148
    10. ',n' → logprob: -11.627996444702148

Token 9: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03804688900709152
    2. 'b' → logprob: -3.2880468368530273
    3. ' ' → logprob: -12.163046836853027
    4. '	b' → logprob: -16.163047790527344
    5. ' ' → logprob: -16.413047790527344
    6. '<|end|>' → logprob: -17.038047790527344
    7. '```' → logprob: -17.288047790527344
    8. ' б' → logprob: -17.413047790527344
    9. ',b' → logprob: -17.538047790527344
    10. '    ' → logprob: -17.538047790527344

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032635112293064594
    2. ')' → logprob: -6.003263473510742
    3. '):
' → logprob: -7.253263473510742
    4. ',' → logprob: -10.253263473510742
    5. ':' → logprob: -10.628263473510742
    6. '   ' → logprob: -12.753263473510742
    7. ' ):' → logprob: -12.753263473510742
    8. '):

' → logprob: -13.003263473510742
    9. '<|end|>' → logprob: -13.128263473510742
    10. '):
' → logprob: -13.253263473510742

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5016259551048279
    2. ':' → logprob: -1.0016260147094727
    3. ' :' → logprob: -4.751626014709473
    4. '    
' → logprob: -5.501626014709473
    5. '```' → logprob: -6.001626014709473
    6. ':
' → logprob: -6.251626014709473
    7. '():' → logprob: -6.501626014709473
    8. '    ' → logprob: -6.626626014709473
    9. '  
' → logprob: -7.376626014709473
    10. '':' → logprob: -7.376626014709473

Token 12: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2708736062049866
    2. ' if' → logprob: -2.020873546600342
    3. '    ' → logprob: -2.770873546600342
    4. '       ' → logprob: -4.270873546600342
    5. '```' → logprob: -5.145873546600342
    6. '    
' → logprob: -5.395873546600342
    7. 'if' (adapté à ' if') → logprob: -5.895873546600342
    8. '	if' → logprob: -6.020873546600342
    9. ' ' → logprob: -6.020873546600342
    10. '     
' → logprob: -6.145873546600342

Token 13: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06296471506357193
    2. 'a' → logprob: -3.437964677810669
    3. ' ' → logprob: -3.812964677810669
    4. ' b' → logprob: -5.062964916229248
    5. 'b' → logprob: -8.18796443939209
    6. ' not' → logprob: -8.56296443939209
    7. '  ' → logprob: -12.43796443939209
    8. ' (' → logprob: -12.81296443939209
    9. ' ' → logprob: -13.68796443939209
    10. 'not' → logprob: -14.18796443939209

Token 14: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005244783591479063
    2. '==' → logprob: -5.255244731903076
    3. ' =' → logprob: -13.005245208740234
    4. ' ' → logprob: -13.130245208740234
    5. ')' → logprob: -13.255245208740234
    6. ' ' → logprob: -13.880245208740234
    7. ' ===' → logprob: -14.005245208740234
    8. '```' → logprob: -14.005245208740234
    9. '=' → logprob: -14.130245208740234
    10. ')==' → logprob: -14.755245208740234

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740871787071228
    2. '0' → logprob: -0.9740871787071228
    3. 'None' → logprob: -12.59908676147461
    4. ' None' → logprob: -12.72408676147461
    5. ''' → logprob: -13.09908676147461
    6. ' ' → logprob: -14.97408676147461
    7. '```' → logprob: -14.97408676147461
    8. ')' → logprob: -15.09908676147461
    9. '"' → logprob: -15.22408676147461
    10. '  ' → logprob: -16.22408676147461

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. 'None' → logprob: -18.75004005432129
    4. '```' → logprob: -18.75004005432129
    5. '   ' → logprob: -19.12504005432129
    6. '=' → logprob: -20.00004005432129
    7. ' ' → logprob: -20.37504005432129
    8. '  ' → logprob: -20.62504005432129
    9. '۰' → logprob: -20.62504005432129
    10. '000' → logprob: -21.12504005432129

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019267325988039374
    2. ':return' → logprob: -6.876926898956299
    3. ' :' → logprob: -7.626926898956299
    4. ':
' → logprob: -7.876926898956299
    5. '):' → logprob: -11.12692642211914
    6. ' :
' → logprob: -11.87692642211914
    7. '   ' → logprob: -13.87692642211914
    8. '       ' → logprob: -14.00192642211914
    9. ':**' → logprob: -14.12692642211914
    10. ':

' → logprob: -14.37692642211914

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007590179797261953
    2. ' return' → logprob: -5.382590293884277
    3. 'return' → logprob: -5.882590293884277
    4. ':return' → logprob: -9.257590293884277
    5. '\n' → logprob: -10.132590293884277
    6. '
' → logprob: -11.257590293884277
    7. '        
' → logprob: -12.382590293884277
    8. '	return' → logprob: -12.382590293884277
    9. '   ' → logprob: -12.382590293884277
    10. '\' → logprob: -12.882590293884277

Token 19: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.48133400082588196
    2. ' return' → logprob: -0.9813339710235596
    3. '       ' → logprob: -4.981334209442139
    4. '           ' → logprob: -7.981334209442139
    5. ':return' → logprob: -11.35633373260498
    6. '	return' → logprob: -12.23133373260498
    7. '   ' → logprob: -12.98133373260498
    8. '{return' → logprob: -13.73133373260498
    9. 'eturn' → logprob: -13.85633373260498
    10. '_return' → logprob: -13.85633373260498

Token 20: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25408199429512024
    2. 'a' → logprob: -1.5040819644927979
    3. ' (' → logprob: -6.379082202911377
    4. '(a' → logprob: -8.379081726074219
    5. ' ' → logprob: -9.004081726074219
    6. '(' → logprob: -9.254081726074219
    7. ' None' → logprob: -12.754081726074219
    8. '   ' → logprob: -14.504081726074219
    9. '  ' → logprob: -14.504081726074219
    10. ' ' → logprob: -14.754081726074219

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020771251001860946
    2. ' ,' → logprob: -8.625207901000977
    3. ',
' → logprob: -11.375207901000977
    4. '<|end|>' → logprob: -12.000207901000977
    5. ',None' → logprob: -12.125207901000977
    6. ',b' → logprob: -14.125207901000977
    7. ',",' → logprob: -14.625207901000977
    8. ',

' → logprob: -14.750207901000977
    9. ',null' → logprob: -15.375207901000977
    10. ',n' → logprob: -15.375207901000977

Token 22: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4809745252132416
    2. ' ' → logprob: -0.980974555015564
    3. '0' → logprob: -4.9809746742248535
    4. '<|end|>' → logprob: -12.230974197387695
    5. ' None' → logprob: -14.230974197387695
    6. '```' → logprob: -15.480974197387695
    7. '  ' → logprob: -15.605974197387695
    8. '    ' → logprob: -15.605974197387695
    9. '   ' → logprob: -15.605974197387695
    10. 'None' → logprob: -16.605974197387695

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '0' → logprob: -13.00000286102295
    3. ' ' → logprob: -14.00000286102295
    4. 'a' → logprob: -19.000003814697266
    5. '```' → logprob: -19.375003814697266
    6. 'b' → logprob: -20.000003814697266
    7. '   ' → logprob: -20.875003814697266
    8. 'None' → logprob: -21.375003814697266
    9. '

' → logprob: -21.875003814697266
    10. '  ' → logprob: -23.000003814697266

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003078142472077161
    2. ' ,' → logprob: -8.1253080368042
    3. '<|end|>' → logprob: -11.6253080368042
    4. '0' → logprob: -13.6253080368042
    5. ' ' → logprob: -14.7503080368042
    6. ',
' → logprob: -15.8753080368042
    7. '<|end|>' → logprob: -15.8753080368042
    8. '‌,' → logprob: -16.000307083129883
    9. ',None' → logprob: -16.125307083129883
    10. '   ' → logprob: -16.500307083129883

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '<|end|>' → logprob: -20.125085830688477
    4. '۰' → logprob: -20.500085830688477
    5. '   ' → logprob: -22.875085830688477
    6. '014' → logprob: -23.250085830688477
    7. '  ' → logprob: -23.250085830688477
    8. '012' → logprob: -23.250085830688477
    9. '```' → logprob: -23.375085830688477
    10. '018' → logprob: -23.750085830688477

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۰' → logprob: -20.125
    4. '   ' → logprob: -22.0
    5. '<|end|>' → logprob: -22.375
    6. '০' → logprob: -22.5
    7. '00' → logprob: -23.0
    8. '०' → logprob: -23.0625
    9. '٠' → logprob: -23.0625
    10. '  ' → logprob: -23.125

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08471998572349548
    2. '    
' → logprob: -2.8347198963165283
    3. '
' → logprob: -4.209720134735107
    4. '\n' → logprob: -5.334720134735107
    5. '```' → logprob: -6.584720134735107
    6. '   
' → logprob: -7.834720134735107
    7. '  
' → logprob: -7.959720134735107
    8. '<|end|>' → logprob: -8.95971965789795
    9. ' 
' → logprob: -9.45971965789795
    10. ' else' → logprob: -9.45971965789795

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01067601889371872
    2. '    
' → logprob: -4.63567590713501
    3. '```' → logprob: -7.76067590713501
    4. '
' → logprob: -8.260676383972168
    5. '\n' → logprob: -9.760676383972168
    6. ',' → logprob: -10.010676383972168
    7. '   
' → logprob: -10.010676383972168
    8. '  
' → logprob: -10.260676383972168
    9. ' else' → logprob: -11.760676383972168
    10. '       ' → logprob: -12.260676383972168

Token 29: ' g' (ID: 329)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8642320036888123
    2. '   ' → logprob: -1.364232063293457
    3. 'x' → logprob: -2.114232063293457
    4. '    
' → logprob: -2.364232063293457
    5. 'else' → logprob: -3.239232063293457
    6. 'n' → logprob: -3.614232063293457
    7. '```' → logprob: -3.739232063293457
    8. '  
' → logprob: -6.114232063293457
    9. '\n' → logprob: -6.239232063293457
    10. 'result' → logprob: -6.489232063293457

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004223323194310069
    2. ' ,' → logprob: -8.000422477722168
    3. ',g' → logprob: -10.250422477722168
    4. '_,' → logprob: -10.500422477722168
    5. ',,' → logprob: -12.625422477722168
    6. 'g' → logprob: -12.875422477722168
    7. ',a' → logprob: -12.875422477722168
    8. '=' → logprob: -13.125422477722168
    9. 'eneral' → logprob: -13.250422477722168
    10. 'enerated' → logprob: -13.750422477722168

Token 31: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024768433067947626
    2. ' x' → logprob: -6.002476692199707
    3. 'y' → logprob: -13.752476692199707
    4. '	x' → logprob: -16.252477645874023
    5. '"x' → logprob: -17.502477645874023
    6. ''x' → logprob: -17.877477645874023
    7. ' y' → logprob: -18.252477645874023
    8. ',x' → logprob: -18.252477645874023
    9. '_x' → logprob: -19.502477645874023
    10. '$x' → logprob: -20.002477645874023

Token 32: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003219184000045061
    2. '1' → logprob: -6.378219127655029
    3. ' ,' → logprob: -7.128219127655029
    4. '_,' → logprob: -7.753219127655029
    5. ',y' → logprob: -9.503219604492188
    6. '```' → logprob: -9.753219604492188
    7. '_next' → logprob: -10.128219604492188
    8. '2' → logprob: -10.378219604492188
    9. '_' → logprob: -11.003219604492188
    10. 'y' → logprob: -11.128219604492188

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028410006780177355
    2. ' ,' → logprob: -8.250284194946289
    3. ' =' → logprob: -11.500284194946289
    4. '=' → logprob: -11.500284194946289
    5. '   ' → logprob: -14.375284194946289
    6. ',b' → logprob: -15.000284194946289
    7. ',x' → logprob: -15.125284194946289
    8. '<|end|>' → logprob: -15.125284194946289
    9. ',y' → logprob: -15.500284194946289
    10. '```' → logprob: -15.625284194946289

Token 34: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141597092151642
    2. ' y' → logprob: -1.701416015625
    3. '	y' → logprob: -13.326416015625
    4. 'x' → logprob: -14.576416015625
    5. ' ' → logprob: -15.701416015625
    6. ',y' → logprob: -15.826416015625
    7. '_y' → logprob: -16.576416015625
    8. '<|end|>' → logprob: -16.951416015625
    9. ''y' → logprob: -17.701416015625
    10. ',' → logprob: -17.701416015625

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017190889921039343
    2. '_' → logprob: -7.001718997955322
    3. ',' → logprob: -7.751718997955322
    4. '=' → logprob: -8.25171947479248
    5. ' =' → logprob: -9.37671947479248
    6. '_,' → logprob: -12.37671947479248
    7. '<|end|>' → logprob: -12.37671947479248
    8. '```' → logprob: -12.50171947479248
    9. '' → logprob: -13.37671947479248
    10. ',_' → logprob: -13.50171947479248

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975083328783512
    2. '=' → logprob: -3.5297508239746094
    3. ',' → logprob: -15.77975082397461
    4. '   ' → logprob: -16.02975082397461
    5. ' ' → logprob: -17.15475082397461
    6. ' =
' → logprob: -17.77975082397461
    7. '    ' → logprob: -18.52975082397461
    8. ')' → logprob: -19.02975082397461
    9. ' ' → logprob: -19.02975082397461
    10. ' =)' → logprob: -19.02975082397461

Token 37: ' extended' (ID: 17290)
  Prédit: 'extended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extended' → logprob: -0.12692968547344208
    2. ' extended' → logprob: -2.126929759979248
    3. '   ' → logprob: -14.37692928314209
    4. 'ext' → logprob: -15.00192928314209
    5. '_extended' → logprob: -15.25192928314209
    6. 'Extended' → logprob: -16.251930236816406
    7. '```' → logprob: -16.376930236816406
    8. ' ' → logprob: -16.876930236816406
    9. 'extend' → logprob: -16.876930236816406
    10. 'b' → logprob: -17.376930236816406

Token 38: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0003017385315615684
    2. '_' → logprob: -8.125301361083984
    3. ' _' → logprob: -12.750301361083984
    4. '```' → logprob: -14.375301361083984
    5. '_s' → logprob: -14.500301361083984
    6. '_f' → logprob: -15.000301361083984
    7. '_q' → logprob: -16.000301361083984
    8. 'g' → logprob: -16.000301361083984
    9. ')_' → logprob: -16.125301361083984
    10. '_d' → logprob: -16.500301361083984

Token 39: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00019173922191839665
    2. '_cd' → logprob: -8.625191688537598
    3. 'cdf' → logprob: -12.250191688537598
    4. 'CD' → logprob: -12.750191688537598
    5. 'cdn' → logprob: -13.125191688537598
    6. '_c' → logprob: -13.750191688537598
    7. ' gcd' → logprob: -14.875191688537598
    8. '_g' → logprob: -15.250191688537598
    9. 'xcd' → logprob: -15.750191688537598
    10. 'c' → logprob: -15.875191688537598

Token 40: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.009768485091626644
    2. '(' → logprob: -4.634768486022949
    3. '(a' → logprob: -12.38476848602295
    4. '(
' → logprob: -12.50976848602295
    5. 'b' → logprob: -13.13476848602295
    6. ' (' → logprob: -13.25976848602295
    7. ' b' → logprob: -14.88476848602295
    8. '```' → logprob: -16.134767532348633
    9. ')b' → logprob: -16.384767532348633
    10. '(B' → logprob: -16.634767532348633

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000204851632588543
    2. ' ,' → logprob: -8.500205039978027
    3. ')' → logprob: -14.750205039978027
    4. '),' → logprob: -15.250205039978027
    5. '%' → logprob: -15.500205039978027
    6. ' ' → logprob: -15.875205039978027
    7. ',a' → logprob: -16.12520408630371
    8. 'a' → logprob: -16.75020408630371
    9. '`,' → logprob: -16.87520408630371
    10. '，' → logprob: -17.12520408630371

Token 42: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020699352025986
    2. ' a' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.725207328796387
    4. '	a' → logprob: -16.35020637512207
    5. ')' → logprob: -16.47520637512207
    6. ')a' → logprob: -17.72520637512207
    7. '>a' → logprob: -18.22520637512207
    8. '_a' → logprob: -18.60020637512207
    9. '(a' → logprob: -18.97520637512207
    10. '%' → logprob: -18.97520637512207

Token 43: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12709231674671173
    2. '%' → logprob: -2.1270923614501953
    3. '%b' → logprob: -8.752092361450195
    4. ' ' → logprob: -12.752092361450195
    5. '%i' → logprob: -13.752092361450195
    6. ')' → logprob: -14.252092361450195
    7. '%x' → logprob: -15.002092361450195
    8. ' %)' → logprob: -15.002092361450195
    9. '%s' → logprob: -15.127092361450195
    10. ' ' → logprob: -15.877092361450195

Token 44: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01815052703022957
    2. ' b' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.518150329589844
    4. ')' → logprob: -16.018150329589844
    5. '	b' → logprob: -17.268150329589844
    6. ')b' → logprob: -17.393150329589844
    7. '```' → logprob: -18.143150329589844
    8. '>b' → logprob: -18.643150329589844
    9. '<|end|>' → logprob: -19.143150329589844
    10. '%b' → logprob: -19.768150329589844

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038562860572710633
    2. ')
' → logprob: -7.875385761260986
    3. ')
' → logprob: -12.750385284423828
    4. ' )' → logprob: -13.375385284423828
    5. ')

' → logprob: -14.000385284423828
    6. '   ' → logprob: -16.125385284423828
    7. '),' → logprob: -17.000385284423828
    8. ')`' → logprob: -17.000385284423828
    9. ' ' → logprob: -17.500385284423828
    10. '2' → logprob: -17.875385284423828

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44583889842033386
    2. '   ' → logprob: -2.5708389282226562
    3. '    
' → logprob: -2.5708389282226562
    4. ',' → logprob: -3.0708389282226562
    5. '\n' → logprob: -3.1958389282226562
    6. ',
' → logprob: -3.4458389282226562
    7. '   
' → logprob: -3.5708389282226562
    8. '  
' → logprob: -3.8208389282226562
    9. '```' → logprob: -3.9458389282226562
    10. ' 
' → logprob: -4.945838928222656

Token 47: ' return' (ID: 622)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.019057609140872955
    2. ' x' → logprob: -4.644057750701904
    3. '
' → logprob: -4.769057750701904
    4. '   ' → logprob: -8.394057273864746
    5. '```' → logprob: -8.394057273864746
    6. '    
' → logprob: -8.519057273864746
    7. '`' → logprob: -10.894057273864746
    8. '\n' → logprob: -10.894057273864746
    9. '``' → logprob: -11.394057273864746
    10. '   
' → logprob: -11.519057273864746

Token 48: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.026304593309760094
    2. ' g' → logprob: -3.6513044834136963
    3. '(g' → logprob: -12.901304244995117
    4. ' (' → logprob: -14.401304244995117
    5. 'b' → logprob: -14.776304244995117
    6. ' ' → logprob: -15.026304244995117
    7. ',' → logprob: -15.776304244995117
    8. '(' → logprob: -15.776304244995117
    9. '```' → logprob: -16.401304244995117
    10. '_g' → logprob: -16.526304244995117

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9160102712921798e-05
    2. ' ,' → logprob: -11.375029563903809
    3. 'y' → logprob: -11.750029563903809
    4. ',y' → logprob: -12.000029563903809
    5. ',x' → logprob: -13.125029563903809
    6. 'x' → logprob: -14.500029563903809
    7. '```' → logprob: -14.875029563903809
    8. ' y' → logprob: -15.625029563903809
    9. '`,' → logprob: -16.375028610229492
    10. ',
' → logprob: -16.625028610229492

Token 50: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005530327325686812
    2. ' y' → logprob: -7.500553131103516
    3. ',y' → logprob: -17.625553131103516
    4. '	y' → logprob: -19.000553131103516
    5. ''y' → logprob: -19.125553131103516
    6. 'yv' → logprob: -20.625553131103516
    7. '‘y' → logprob: -20.625553131103516
    8. ')y' → logprob: -20.750553131103516
    9. 'ym' → logprob: -21.000553131103516
    10. 'y's' → logprob: -21.000553131103516

Token 51: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10771149396896362
    2. '1' → logprob: -2.7327115535736084
    3. ',x' → logprob: -3.6077115535736084
    4. ',g' → logprob: -6.107711315155029
    5. '_,' → logprob: -6.232711315155029
    6. 'x' → logprob: -6.607711315155029
    7. '-' → logprob: -6.732711315155029
    8. '```' → logprob: -6.982711315155029
    9. ',y' → logprob: -7.232711315155029
    10. '_' → logprob: -7.982711315155029

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019148342544212937
    2. '-' → logprob: -7.001914978027344
    3. ' ,' → logprob: -7.501914978027344
    4. '`,' → logprob: -8.626914978027344
    5. '1' → logprob: -9.751914978027344
    6. 'x' → logprob: -9.751914978027344
    7. '`' → logprob: -10.126914978027344
    8. ',x' → logprob: -10.126914978027344
    9. '```' → logprob: -10.751914978027344
    10. ' -' → logprob: -11.001914978027344

Token 53: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20141352713108063
    2. ' x' → logprob: -1.7014135122299194
    3. '(x' → logprob: -16.576414108276367
    4. '	x' → logprob: -16.951414108276367
    5. ' ' → logprob: -17.576414108276367
    6. ' (' → logprob: -17.951414108276367
    7. ',x' → logprob: -18.076414108276367
    8. '"x' → logprob: -18.201414108276367
    9. '_x' → logprob: -18.576414108276367
    10. '{x' → logprob: -19.076414108276367

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005026352009736001
    2. '-' → logprob: -8.250502586364746
    3. ' -' → logprob: -8.500502586364746
    4. ' ' → logprob: -10.625502586364746
    5. '```' → logprob: -12.125502586364746
    6. '`' → logprob: -12.250502586364746
    7. '0' → logprob: -14.125502586364746
    8. '[' → logprob: -14.125502586364746
    9. '2' → logprob: -14.875502586364746
    10. '4' → logprob: -15.500502586364746

Token 55: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0055598244071006775
    2. '-' → logprob: -5.380559921264648
    3. '<|end|>' → logprob: -7.005559921264648
    4. ' –' → logprob: -11.755559921264648
    5. ' +' → logprob: -12.255559921264648
    6. ' -
' → logprob: -12.630559921264648
    7. ',' → logprob: -13.005559921264648
    8. ' -,' → logprob: -13.005559921264648
    9. '+' → logprob: -13.630559921264648
    10. '```' → logprob: -13.880559921264648

Token 56: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.9529231786727905
    2. ' (' → logprob: -1.3279231786727905
    3. '(b' → logprob: -1.4529231786727905
    4. '(' → logprob: -2.57792329788208
    5. 'y' → logprob: -3.70292329788208
    6. ' y' → logprob: -4.45292329788208
    7. '(a' → logprob: -6.20292329788208
    8. 'b' → logprob: -6.95292329788208
    9. ' b' → logprob: -9.077922821044922
    10. ' ' → logprob: -9.327922821044922

Token 57: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008143838495016098
    2. '(a' → logprob: -5.133143901824951
    3. ' a' → logprob: -6.133143901824951
    4. '(' → logprob: -10.758143424987793
    5. ' (' → logprob: -11.133143424987793
    6. '	a' → logprob: -12.133143424987793
    7. '   ' → logprob: -14.758143424987793
    8. 'b' → logprob: -14.883143424987793
    9. ' ' → logprob: -15.383143424987793
    10. '(
' → logprob: -16.25814437866211

Token 58: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1006334125995636
    2. '//' → logprob: -2.350633382797241
    3. ' ' → logprob: -7.97563362121582
    4. ')' → logprob: -9.72563362121582
    5. ' ' → logprob: -11.47563362121582
    6. '```' → logprob: -11.60063362121582
    7. '`' → logprob: -13.97563362121582
    8. ')//' → logprob: -14.85063362121582
    9. 'div' → logprob: -15.10063362121582
    10. 'b' → logprob: -15.10063362121582

Token 59: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. ')b' → logprob: -18.125261306762695
    4. '	b' → logprob: -18.250261306762695
    5. ' б' → logprob: -20.750261306762695
    6. ' ' → logprob: -21.375261306762695
    7. '   ' → logprob: -21.625261306762695
    8. '>b' → logprob: -22.250261306762695
    9. '  ' → logprob: -22.750261306762695
    10. '_b' → logprob: -22.875261306762695

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025465316139161587
    2. '*' → logprob: -6.627546310424805
    3. ' ' → logprob: -7.502546310424805
    4. ' )' → logprob: -8.127546310424805
    5. ')*' → logprob: -8.377546310424805
    6. ' *' → logprob: -9.127546310424805
    7. '```' → logprob: -11.752546310424805
    8. ' ' → logprob: -12.252546310424805
    9. '1' → logprob: -12.627546310424805
    10. '*y' → logprob: -12.877546310424805

Token 61: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5574216246604919
    2. ' y' → logprob: -2.0574216842651367
    3. 'y' → logprob: -2.1824216842651367
    4. ' *' → logprob: -2.4324216842651367
    5. ' (' → logprob: -3.8074216842651367
    6. ' ' → logprob: -4.057421684265137
    7. '*y' → logprob: -4.057421684265137
    8. ')' → logprob: -4.432421684265137
    9. '```' → logprob: -4.557421684265137
    10. ' ' → logprob: -5.057421684265137

Token 62: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.676292231422849e-05
    2. ' y' → logprob: -11.000017166137695
    3. '	y' → logprob: -17.875017166137695
    4. '   ' → logprob: -20.375017166137695
    5. '_y' → logprob: -20.750017166137695
    6. 'y's' → logprob: -21.000017166137695
    7. 'yb' → logprob: -21.000017166137695
    8. ''y' → logprob: -22.625017166137695
    9. ' ' → logprob: -22.750017166137695
    10. '*y' → logprob: -22.750017166137695

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -19.375
    3. 'y' → logprob: -20.0
    4. '0' → logprob: -20.125
    5. '```' → logprob: -20.625
    6. 'i' → logprob: -21.5
    7. '6' → logprob: -22.125
    8. '9' → logprob: -22.25
    9. '' → logprob: -22.625
    10. 's' → logprob: -22.75

Token 64: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8000394701957703
    2. '<|end|>' → logprob: -0.9250394701957703
    3. '```' → logprob: -2.925039529800415
    4. '

' → logprob: -3.175039529800415
    5. 'def' → logprob: -3.425039529800415
    6. '\n' → logprob: -4.300039291381836
    7. '\' → logprob: -5.675039291381836
    8. '    
' → logprob: -6.300039291381836
    9. '<|end|>' → logprob: -6.425039291381836
    10. '  
' → logprob: -7.050039291381836

Token 65: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09571842849254608
    2. ' i' → logprob: -2.4707183837890625
    3. ' _' → logprob: -5.4707183837890625
    4. ' a' → logprob: -6.5957183837890625
    5. '  ' → logprob: -7.3457183837890625
    6. '_' → logprob: -8.845718383789062
    7. ' x' → logprob: -9.595718383789062
    8. 'i' → logprob: -9.970718383789062
    9. ' num' → logprob: -10.095718383789062
    10. ' in' → logprob: -10.220718383789062

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043371498584747314
    2. 'in' → logprob: -3.1683714389801025
    3. ' ' → logprob: -8.293371200561523
    4. 's' → logprob: -10.043371200561523
    5. '  ' → logprob: -11.293371200561523
    6. '[' → logprob: -11.418371200561523
    7. '```' → logprob: -11.793371200561523
    8. '	in' → logprob: -11.918371200561523
    9. 'import' → logprob: -12.043371200561523
    10. '   ' → logprob: -12.668371200561523

Token 68: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.31328845024108887
    2. ' sys' → logprob: -1.3132884502410889
    3. '	sys' → logprob: -10.938288688659668
    4. '=sys' → logprob: -11.938288688659668
    5. '(sys' → logprob: -13.188288688659668
    6. ' ' → logprob: -16.06328773498535
    7. '   ' → logprob: -16.06328773498535
    8. 'stdin' → logprob: -16.31328773498535
    9. '```' → logprob: -16.56328773498535
    10. 'iter' → logprob: -17.43828773498535

Token 69: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.470901229884475e-05
    2. 'stdin' → logprob: -9.50008487701416
    3. '.argv' → logprob: -12.50008487701416
    4. ' stdin' → logprob: -13.00008487701416
    5. '.stdout' → logprob: -13.50008487701416
    6. '.readline' → logprob: -13.87508487701416
    7. '.' → logprob: -14.25008487701416
    8. '(stdin' → logprob: -14.75008487701416
    9. ' .' → logprob: -15.75008487701416
    10. '.std' → logprob: -16.375083923339844

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4471051096916199
    2. '.readline' → logprob: -1.0721051692962646
    3. ' in' → logprob: -5.3221049308776855
    4. '.readlines' → logprob: -5.5721049308776855
    5. '.' → logprob: -5.6971049308776855
    6. '.strip' → logprob: -6.4471049308776855
    7. '<|end|>' → logprob: -7.1971049308776855
    8. '```' → logprob: -7.4471049308776855
    9. ' readline' → logprob: -7.5721049308776855
    10. ':
' → logprob: -7.5721049308776855

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009059805423021317
    2. '    
' → logprob: -4.884059906005859
    3. 'tokens' → logprob: -7.884059906005859
    4. '```' → logprob: -8.00905990600586
    5. '    ' → logprob: -9.13405990600586
    6. '.strip' → logprob: -9.38405990600586
    7. ' tokens' → logprob: -9.50905990600586
    8. ' line' → logprob: -10.00905990600586
    9. ' if' → logprob: -10.25905990600586
    10. '<|end|>' → logprob: -10.38405990600586

Token 72: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.33092451095581055
    2. ' a' → logprob: -1.9559245109558105
    3. 'n' → logprob: -3.0809245109558105
    4. '   ' → logprob: -3.3309245109558105
    5. ' parts' → logprob: -3.9559245109558105
    6. ' n' → logprob: -4.3309245109558105
    7. ' line' → logprob: -4.5809245109558105
    8. 'line' → logprob: -5.7059245109558105
    9. 'tokens' → logprob: -6.4559245109558105
    10. 'if' → logprob: -6.5809245109558105

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037629054859280586
    2. ' ,' → logprob: -5.628762722015381
    3. ',b' → logprob: -9.628763198852539
    4. '=' → logprob: -10.128763198852539
    5. ' =' → logprob: -10.378763198852539
    6. ' ' → logprob: -11.628763198852539
    7. ',a' → logprob: -12.128763198852539
    8. ',s' → logprob: -12.628763198852539
    9. 's' → logprob: -13.128763198852539
    10. ',n' → logprob: -14.128763198852539

Token 74: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4290293753147125
    2. 'b' → logprob: -1.0540293455123901
    3. '<|end|>' → logprob: -8.67902946472168
    4. ' ' → logprob: -8.80402946472168
    5. '<|end|>' → logprob: -12.80402946472168
    6. ',b' → logprob: -14.30402946472168
    7. 's' → logprob: -14.55402946472168
    8. ' =' → logprob: -14.67902946472168
    9. '  ' → logprob: -14.67902946472168
    10. 'space' → logprob: -14.80402946472168

Token 75: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269330382347107
    2. '=' → logprob: -2.1269330978393555
    3. ',' → logprob: -12.751933097839355
    4. '    ' → logprob: -14.751933097839355
    5. ' ' → logprob: -14.876933097839355
    6. ')' → logprob: -14.876933097839355
    7. '   ' → logprob: -15.001933097839355
    8. '=line' → logprob: -15.876933097839355
    9. '=int' → logprob: -16.25193214416504
    10. '  ' → logprob: -16.37693214416504

Token 76: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05528539419174194
    2. ' c' → logprob: -2.9302854537963867
    3. '_' → logprob: -9.305285453796387
    4. '=' → logprob: -9.680285453796387
    5. ' =' → logprob: -9.680285453796387
    6. 'n' → logprob: -9.805285453796387
    7. 'x' → logprob: -10.430285453796387
    8. ' ' → logprob: -10.555285453796387
    9. 's' → logprob: -11.180285453796387
    10. '_=' → logprob: -12.055285453796387

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141908526420593
    2. '=' → logprob: -1.7014191150665283
    3. ',' → logprob: -12.32641887664795
    4. ' ' → logprob: -14.20141887664795
    5. ')' → logprob: -15.70141887664795
    6. '=int' → logprob: -16.576419830322266
    7. ' =
' → logprob: -16.576419830322266
    8. '    ' → logprob: -16.951419830322266
    9. '  ' → logprob: -16.951419830322266
    10. '=line' → logprob: -17.451419830322266

Token 78: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.100290447473526
    2. 'map' → logprob: -2.350290536880493
    3. ' line' → logprob: -9.600290298461914
    4. 'line' → logprob: -11.475290298461914
    5. ' ' → logprob: -12.975290298461914
    6. '	map' → logprob: -13.475290298461914
    7. '(map' → logprob: -14.225290298461914
    8. ' ' → logprob: -14.725290298461914
    9. '   ' → logprob: -14.975290298461914
    10. '[' → logprob: -15.350290298461914

Token 79: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022364973556250334
    2. '(' → logprob: -6.127236366271973
    3. 'int' → logprob: -10.627236366271973
    4. '<int' → logprob: -11.502236366271973
    5. '(str' → logprob: -12.127236366271973
    6. '[int' → logprob: -12.377236366271973
    7. '(lambda' → logprob: -12.752236366271973
    8. '=int' → logprob: -13.502236366271973
    9. '(in' → logprob: -14.002236366271973
    10. ' int' → logprob: -14.252236366271973

Token 80: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0015411654021590948
    2. ')' → logprob: -7.5015411376953125
    3. 'line' → logprob: -7.7515411376953125
    4. ',line' → logprob: -8.126541137695312
    5. ' line' → logprob: -9.376541137695312
    6. '(' → logprob: -9.626541137695312
    7. '=line' → logprob: -10.251541137695312
    8. ')(' → logprob: -10.251541137695312
    9. ',' → logprob: -11.376541137695312
    10. '[line' → logprob: -11.376541137695312

Token 81: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5759955048561096
    2. ' line' → logprob: -0.8259955048561096
    3. '   ' → logprob: -10.575995445251465
    4. '(line' → logprob: -11.200995445251465
    5. '	line' → logprob: -12.075995445251465
    6. ')' → logprob: -12.200995445251465
    7. '[line' → logprob: -12.950995445251465
    8. '=line' → logprob: -13.450995445251465
    9. ' ' → logprob: -13.575995445251465
    10. '#line' → logprob: -14.950995445251465

Token 82: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.06626326590776443
    2. '.split' → logprob: -3.066263198852539
    3. '.' → logprob: -4.441263198852539
    4. '().' → logprob: -5.191263198852539
    5. '.rstrip' → logprob: -9.691263198852539
    6. ' .' → logprob: -9.816263198852539
    7. '.readline' → logprob: -10.691263198852539
    8. 'strip' → logprob: -10.941263198852539
    9. ').' → logprob: -11.566263198852539
    10. ')' → logprob: -12.316263198852539

Token 83: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013660820201039314
    2. '()' → logprob: -4.513660907745361
    3. ')' → logprob: -6.013660907745361
    4. '('' → logprob: -9.263660430908203
    5. '(' → logprob: -10.388660430908203
    6. '()))' → logprob: -11.138660430908203
    7. '())
' → logprob: -11.763660430908203
    8. ' ())' → logprob: -11.888660430908203
    9. '(','' → logprob: -12.388660430908203
    10. '(),' → logprob: -14.013660430908203

Token 84: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' if' (ID: 538)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.21453356742858887
    2. ' g' → logprob: -2.464533567428589
    3. ' if' → logprob: -2.714533567428589
    4. 'if' (adapté à ' if') → logprob: -3.214533567428589
    5. '<|end|>' → logprob: -6.589533805847168
    6. ' gcd' → logprob: -9.214533805847168
    7. ' ' → logprob: -10.214533805847168
    8. '   ' → logprob: -10.839533805847168
    9. '    ' → logprob: -11.089533805847168
    10. 'n' → logprob: -11.214533805847168

Token 86: ' a' (ID: 261)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.28748181462287903
    2. ' a' → logprob: -1.6624817848205566
    3. ' b' → logprob: -3.4124817848205566
    4. 'd' → logprob: -4.037481784820557
    5. 'a' → logprob: -5.037481784820557
    6. 'b' → logprob: -6.537481784820557
    7. ' ' → logprob: -6.787481784820557
    8. ' not' → logprob: -8.162482261657715
    9. ' (' → logprob: -8.662482261657715
    10. '(' → logprob: -11.037482261657715

Token 87: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2559046149253845
    2. ' %' → logprob: -2.3809046745300293
    3. '==' → logprob: -2.3809046745300293
    4. '%' → logprob: -3.2559046745300293
    5. ' ' → logprob: -7.005904674530029
    6. ' *' → logprob: -7.755904674530029
    7. '*' → logprob: -8.130904197692871
    8. '=' → logprob: -8.755904197692871
    9. ' <' → logprob: -8.880904197692871
    10. ' !=' → logprob: -9.755904197692871

Token 88: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1019120141863823
    2. '0' → logprob: -2.351912021636963
    3. ' b' → logprob: -6.726912021636963
    4. 'b' → logprob: -7.601912021636963
    5. 'd' → logprob: -13.726911544799805
    6. '```' → logprob: -13.976911544799805
    7. '==' → logprob: -14.101911544799805
    8. '  ' → logprob: -14.164411544799805
    9. '=' → logprob: -14.601911544799805
    10. '1' → logprob: -14.789411544799805

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010554879903793335
    2. 'b' → logprob: -5.135554790496826
    3. ' ' → logprob: -5.385554790496826
    4. ' b' → logprob: -10.385555267333984
    5. 'd' → logprob: -13.885555267333984
    6. '1' → logprob: -15.010555267333984
    7. 'and' → logprob: -15.385555267333984
    8. '==' → logprob: -16.073055267333984
    9. '  ' → logprob: -16.198055267333984
    10. '=' → logprob: -16.260555267333984

Token 90: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0039730858989059925
    2. 'and' → logprob: -6.253973007202148
    3. ':' → logprob: -6.628973007202148
    4. ' ' → logprob: -7.503973007202148
    5. ' or' → logprob: -9.128973007202148
    6. '   ' → logprob: -10.878973007202148
    7. '    ' → logprob: -11.128973007202148
    8. ' :' → logprob: -11.253973007202148
    9. '	and' → logprob: -11.628973007202148
    10. ' a' → logprob: -13.628973007202148

Token 91: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.023253517225384712
    2. 'b' → logprob: -3.7732534408569336
    3. ' ' → logprob: -11.773253440856934
    4. '	b' → logprob: -15.148253440856934
    5. ' ' → logprob: -17.14825439453125
    6. '<|end|>' → logprob: -17.14825439453125
    7. '  ' → logprob: -18.77325439453125
    8. ' б' → logprob: -19.27325439453125
    9. '```' → logprob: -20.02325439453125
    10. '   ' → logprob: -20.02325439453125

Token 92: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0019205523421987891
    2. '==' → logprob: -6.626920700073242
    3. ' ' → logprob: -7.751920700073242
    4. '<|end|>' → logprob: -8.876920700073242
    5. ' =' → logprob: -10.876920700073242
    6. '<|end|>' → logprob: -13.126920700073242
    7. ' ' → logprob: -14.001920700073242
    8. '=' → logprob: -14.126920700073242
    9. '0' → logprob: -14.501920700073242
    10. '  ' → logprob: -15.001920700073242

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993887573480606
    2. ' ' → logprob: -2.694938898086548
    3. '<|end|>' → logprob: -13.819938659667969
    4. ' and' → logprob: -14.319938659667969
    5. '  ' → logprob: -15.069938659667969
    6. 'and' → logprob: -15.569938659667969
    7. '<|end|>' → logprob: -15.944938659667969
    8. '   ' → logprob: -16.06993865966797
    9. ' ' → logprob: -16.19493865966797
    10. '۰' → logprob: -16.31993865966797

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502717612311244
    2. ' ' → logprob: -6.501502513885498
    3. '<|end|>' → logprob: -15.939002990722656
    4. '۰' → logprob: -16.689002990722656
    5. '  ' → logprob: -17.001502990722656
    6. '```' → logprob: -17.626502990722656
    7. ' ' → logprob: -17.876502990722656
    8. '<|end|>' → logprob: -18.376502990722656
    9. '   ' → logprob: -18.689002990722656
    10. '০' → logprob: -18.939002990722656

Token 95: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10364030301570892
    2. ':' → logprob: -2.47864031791687
    3. 'and' → logprob: -4.478640079498291
    4. '   ' → logprob: -5.853640079498291
    5. ':
' → logprob: -8.60364055633545
    6. '       ' → logprob: -9.85364055633545
    7. ' ' → logprob: -9.97864055633545
    8. '    ' → logprob: -10.35364055633545
    9. ' :' → logprob: -11.10364055633545
    10. '	and' → logprob: -11.47864055633545

Token 96: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0485910028219223
    2. 'd' → logprob: -3.048590898513794
    3. ' ' → logprob: -12.673590660095215
    4. '	d' → logprob: -15.173590660095215
    5. '  ' → logprob: -15.423590660095215
    6. '<|end|>' → logprob: -17.17359161376953
    7. ' ' → logprob: -17.29859161376953
    8. '   ' → logprob: -17.42359161376953
    9. ')d' → logprob: -19.04859161376953
    10. '0' → logprob: -19.42359161376953

Token 97: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03377317264676094
    2. '==' → logprob: -3.408773183822632
    3. '<|end|>' → logprob: -10.033773422241211
    4. ' ' → logprob: -10.658773422241211
    5. '=' → logprob: -10.783773422241211
    6. ' =' → logprob: -11.283773422241211
    7. ' ' → logprob: -11.658773422241211
    8. ')' → logprob: -12.408773422241211
    9. '<|end|>' → logprob: -12.908773422241211
    10. ' <=' → logprob: -12.908773422241211

Token 98: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02630053460597992
    2. ' ' → logprob: -3.6513004302978516
    3. '<|end|>' → logprob: -15.651300430297852
    4. '  ' → logprob: -16.52630043029785
    5. '۰' → logprob: -17.52630043029785
    6. ' ' → logprob: -17.65130043029785
    7. '   ' → logprob: -17.90130043029785
    8. '<|end|>' → logprob: -18.15130043029785
    9. ' 
' → logprob: -19.27630043029785
    10. '    ' → logprob: -19.40130043029785

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '۰' → logprob: -16.750051498413086
    4. '-' → logprob: -18.125051498413086
    5. '  ' → logprob: -18.625051498413086
    6. '০' → logprob: -19.375051498413086
    7. '٠' → logprob: -19.375051498413086
    8. ' ' → logprob: -19.437551498413086
    9. '０' → logprob: -19.500051498413086
    10. '1' → logprob: -19.500051498413086

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012430864153429866
    2. ':
' → logprob: -6.7512431144714355
    3. ' :' → logprob: -10.001242637634277
    4. '   ' → logprob: -10.876242637634277
    5. '       ' → logprob: -12.751242637634277
    6. ':return' → logprob: -12.751242637634277
    7. ' :
' → logprob: -13.376242637634277
    8. '    ' → logprob: -14.251242637634277
    9. '):' → logprob: -14.876242637634277
    10. ':\' → logprob: -16.501243591308594

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007204149151220918
    2. '   ' → logprob: -7.250720500946045
    3. '           ' → logprob: -13.000720024108887
    4. '     ' → logprob: -13.250720024108887
    5. '      ' → logprob: -13.375720024108887
    6. ':' → logprob: -13.625720024108887
    7. '    ' → logprob: -14.375720024108887
    8. ' break' → logprob: -14.375720024108887
    9. '    
' → logprob: -14.625720024108887
    10. '```' → logprob: -14.750720024108887

Token 102: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014382332563400269
    2. 'break' (adapté à ' break') → logprob: -4.514382362365723
    3. '   ' → logprob: -5.764382362365723
    4. '       ' → logprob: -9.264382362365723
    5. '	break' → logprob: -9.264382362365723
    6. '_break' → logprob: -14.389382362365723
    7. '    ' → logprob: -14.764382362365723
    8. '    
' → logprob: -15.264382362365723
    9. 'Break' → logprob: -15.514382362365723
    10. '```' → logprob: -15.639382362365723

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26448142528533936
    2. '   ' → logprob: -1.8894814252853394
    3. '    
' → logprob: -3.139481544494629
    4. '```' → logprob: -4.139481544494629
    5. '   
' → logprob: -4.389481544494629
    6. '<|end|>' → logprob: -5.514481544494629
    7. '  
' → logprob: -5.764481544494629
    8. 'g' → logprob: -7.014481544494629
    9. ' 
' → logprob: -7.889481544494629
    10. '  ' → logprob: -8.139481544494629

Token 104: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24315381050109863
    2. '   ' → logprob: -2.3681538105010986
    3. 'g' → logprob: -2.9931538105010986
    4. '```' → logprob: -3.7431538105010986
    5. '    
' → logprob: -4.1181535720825195
    6. ' 
' → logprob: -4.2431535720825195
    7. '   
' → logprob: -4.9931535720825195
    8. '  
' → logprob: -5.4931535720825195
    9. ' g' → logprob: -5.7431535720825195
    10. '<|end|>' → logprob: -6.2431535720825195

Token 105: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.5238304734230042
    2. 'g' (adapté à ' g') → logprob: -0.8988304734230042
    3. '   ' → logprob: -8.52383041381836
    4. ' gcd' → logprob: -8.52383041381836
    5. ' if' → logprob: -8.89883041381836
    6. '```' → logprob: -9.89883041381836
    7. '    
' → logprob: -10.89883041381836
    8. ' 
' → logprob: -10.89883041381836
    9. '    ' → logprob: -11.27383041381836
    10. '	g' → logprob: -11.64883041381836

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09687048196792603
    2. ' =' → logprob: -2.5968704223632812
    3. ' ,' → logprob: -4.096870422363281
    4. '=' → logprob: -6.971870422363281
    5. '<|end|>' → logprob: -8.971870422363281
    6. ' ' → logprob: -9.971870422363281
    7. ' ==' → logprob: -10.721870422363281
    8. 's' → logprob: -11.346870422363281
    9. '  ' → logprob: -11.596870422363281
    10. '   ' → logprob: -11.971870422363281

Token 107: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.474728524684906
    2. 'x' → logprob: -0.974728524684906
    3. '<|end|>' → logprob: -7.349728584289551
    4. ' ' → logprob: -12.84972858428955
    5. '    ' → logprob: -12.97472858428955
    6. '	x' → logprob: -14.22472858428955
    7. '```' → logprob: -14.34972858428955
    8. '"x' → logprob: -14.72472858428955
    9. '_x' → logprob: -14.84972858428955
    10. ',' → logprob: -15.22472858428955

Token 108: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0802738870552275e-05
    2. '<|end|>' → logprob: -12.62501049041748
    3. ' ,' → logprob: -12.75001049041748
    4. ',y' → logprob: -13.00001049041748
    5. '1' → logprob: -14.25001049041748
    6. ',g' → logprob: -14.75001049041748
    7. 'g' → logprob: -15.00001049041748
    8. '=' → logprob: -15.37501049041748
    9. '_,' → logprob: -15.75001049041748
    10. 's' → logprob: -15.87501049041748

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9888433093437925e-05
    2. ' ,' → logprob: -10.500040054321289
    3. '<|end|>' → logprob: -11.375040054321289
    4. ' ' → logprob: -15.625040054321289
    5. ',y' → logprob: -15.875040054321289
    6. '=' → logprob: -15.875040054321289
    7. ',
' → logprob: -16.25004005432129
    8. '_,' → logprob: -16.37504005432129
    9. '<|end|>' → logprob: -16.62504005432129
    10. '‌,' → logprob: -16.87504005432129

Token 110: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47427898645401
    2. ' y' → logprob: -0.97427898645401
    3. '<|end|>' → logprob: -8.599279403686523
    4. ' ' → logprob: -11.349279403686523
    5. '	y' → logprob: -12.724279403686523
    6. 'x' → logprob: -13.974279403686523
    7. '_y' → logprob: -14.224279403686523
    8. ''y' → logprob: -15.224279403686523
    9. ',y' → logprob: -15.224279403686523
    10. '<|end|>' → logprob: -15.349279403686523

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019650737522169948
    2. '_' → logprob: -9.12519645690918
    3. ' ' → logprob: -10.25019645690918
    4. '<|end|>' → logprob: -10.25019645690918
    5. '1' → logprob: -11.50019645690918
    6. '۰' → logprob: -13.62519645690918
    7. '<|end|>' → logprob: -13.87519645690918
    8. ',' → logprob: -13.87519645690918
    9. '```' → logprob: -14.12519645690918
    10. '=' → logprob: -14.75019645690918

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07000800967216492
    2. '=' → logprob: -2.6950080394744873
    3. ',' → logprob: -9.570008277893066
    4. '<|end|>' → logprob: -14.695008277893066
    5. ' =
' → logprob: -14.820008277893066
    6. ' ' → logprob: -15.195008277893066
    7. ')' → logprob: -15.445008277893066
    8. ' ,' → logprob: -15.570008277893066
    9. ' =)' → logprob: -15.570008277893066
    10. '  ' → logprob: -16.57000732421875

Token 113: ' extended' (ID: 17290)
  Prédit: ' extended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extended' → logprob: -0.38687241077423096
    2. 'extended' → logprob: -1.136872410774231
    3. '_extended' → logprob: -14.011872291564941
    4. 'Extended' → logprob: -15.261872291564941
    5. ' ' → logprob: -16.386873245239258
    6. 'ext' → logprob: -16.761873245239258
    7. 'expanded' → logprob: -17.011873245239258
    8. 'continued' → logprob: -17.386873245239258
    9. 'extend' → logprob: -17.636873245239258
    10. '<|end|>' → logprob: -18.261873245239258

Token 114: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -5.3954463510308415e-05
    2. '_' → logprob: -9.875054359436035
    3. 'g' → logprob: -14.500054359436035
    4. '_f' → logprob: -14.750054359436035
    5. '_s' → logprob: -15.250054359436035
    6. ' _' → logprob: -15.625054359436035
    7. ')_' → logprob: -16.25005340576172
    8. '```' → logprob: -16.25005340576172
    9. '_a' → logprob: -16.50005340576172
    10. '_d' → logprob: -16.50005340576172

Token 115: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -8.900034299585968e-05
    2. '_cd' → logprob: -9.750088691711426
    3. 'g' → logprob: -10.625088691711426
    4. 'cdf' → logprob: -13.375088691711426
    5. 'c' → logprob: -13.500088691711426
    6. ' gcd' → logprob: -14.250088691711426
    7. 'CD' → logprob: -14.375088691711426
    8. '_g' → logprob: -14.500088691711426
    9. 'cdn' → logprob: -14.500088691711426
    10. '_' → logprob: -14.875088691711426

Token 116: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0009373087668791413
    2. '(' → logprob: -7.000937461853027
    3. '(abs' → logprob: -11.125937461853027
    4. '<|end|>' → logprob: -11.625937461853027
    5. '(
' → logprob: -13.750937461853027
    6. '(ab' → logprob: -15.125937461853027
    7. ' (' → logprob: -15.375937461853027
    8. 'a' → logprob: -15.625937461853027
    9. '(A' → logprob: -15.875937461853027
    10. '(ai' → logprob: -16.12593650817871

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8444881536415778e-05
    2. ' ,' → logprob: -10.750028610229492
    3. ',b' → logprob: -12.500028610229492
    4. 'b' → logprob: -13.000028610229492
    5. ')' → logprob: -14.125028610229492
    6. ',
' → logprob: -16.125028610229492
    7. '),' → logprob: -16.750028610229492
    8. '<|end|>' → logprob: -16.750028610229492
    9. '‌,' → logprob: -16.750028610229492
    10. ',

' → logprob: -18.125028610229492

Token 118: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132686913013458
    2. ' b' → logprob: -1.3132686614990234
    3. ')b' → logprob: -12.438268661499023
    4. ' ' → logprob: -14.063268661499023
    5. ')' → logprob: -14.063268661499023
    6. '<|end|>' → logprob: -14.688268661499023
    7. '   ' → logprob: -15.063268661499023
    8. '    ' → logprob: -15.313268661499023
    9. '	b' → logprob: -15.813268661499023
    10. ' 
' → logprob: -16.938268661499023

Token 119: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010735770774772391
    2. ')
' → logprob: -9.875107765197754
    3. ' )' → logprob: -9.875107765197754
    4. '   ' → logprob: -12.750107765197754
    5. ')

' → logprob: -15.250107765197754
    6. '<|end|>' → logprob: -15.250107765197754
    7. ',' → logprob: -15.750107765197754
    8. '),' → logprob: -16.125106811523438
    9. ' ' → logprob: -16.500106811523438
    10. '#' → logprob: -16.500106811523438

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3117205798625946
    2. '<|end|>' → logprob: -1.561720609664917
    3. '```' → logprob: -3.561720609664917
    4. ' if' → logprob: -4.311720371246338
    5. 'if' → logprob: -4.936720371246338
    6. '
' → logprob: -6.061720371246338
    7. '    
' → logprob: -6.061720371246338
    8. '  ' → logprob: -6.936720371246338
    9. '<|end|>' → logprob: -7.436720371246338
    10. '   
' → logprob: -7.686720371246338

Token 121: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42881274223327637
    2. 'if' → logprob: -1.5538127422332764
    3. ' if' → logprob: -2.4288127422332764
    4. '<|end|>' → logprob: -3.3038127422332764
    5. '```' → logprob: -5.4288129806518555
    6. '    ' → logprob: -5.8038129806518555
    7. '  ' → logprob: -6.5538129806518555
    8. ' ' → logprob: -6.5538129806518555
    9. '    
' → logprob: -7.4288129806518555
    10. ' 
' → logprob: -8.303812980651855

Token 122: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13318154215812683
    2. '0' → logprob: -2.383181571960449
    3. ' ,' → logprob: -3.633181571960449
    4. ' ' → logprob: -6.258181571960449
    5. ' =' → logprob: -6.383181571960449
    6. '_' → logprob: -7.633181571960449
    7. '_,' → logprob: -8.00818157196045
    8. '=' → logprob: -8.13318157196045
    9. ' *=' → logprob: -8.13318157196045
    10. '<|end|>' → logprob: -8.25818157196045

Token 123: ' *=' (ID: 25253)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5961016416549683
    2. ' *=' → logprob: -0.9711016416549683
    3. ' *' → logprob: -2.971101760864258
    4. ' ,' → logprob: -4.471101760864258
    5. '*' → logprob: -5.221101760864258
    6. '*=' → logprob: -6.971101760864258
    7. ' ' → logprob: -7.471101760864258
    8. ' =' → logprob: -8.721101760864258
    9. 's' → logprob: -9.346101760864258
    10. ' +=' → logprob: -9.471101760864258

Token 124: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4742838442325592
    2. 'd' → logprob: -0.9742838144302368
    3. '(d' → logprob: -8.849284172058105
    4. ' (' → logprob: -9.724284172058105
    5. ' ' → logprob: -13.349284172058105
    6. '<|end|>' → logprob: -13.849284172058105
    7. '	d' → logprob: -14.974284172058105
    8. '(' → logprob: -15.099284172058105
    9. '*d' → logprob: -16.59928321838379
    10. '  ' → logprob: -16.84928321838379

Token 125: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.062367942184209824
    2. '//' → logprob: -2.8123679161071777
    3. 'g' → logprob: -8.812368392944336
    4. ' ' → logprob: -9.812368392944336
    5. ' ' → logprob: -9.812368392944336
    6. '   ' → logprob: -10.062368392944336
    7. ' /' → logprob: -10.187368392944336
    8. '/' → logprob: -11.312368392944336
    9. ' //
' → logprob: -11.687368392944336
    10. '```' → logprob: -11.812368392944336

Token 126: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0015030752401798964
    2. ' g' → logprob: -6.501502990722656
    3. ' ' → logprob: -15.001502990722656
    4. '	g' → logprob: -16.126502990722656
    5. '_g' → logprob: -16.126502990722656
    6. '   ' → logprob: -16.876502990722656
    7. '<|end|>' → logprob: -16.876502990722656
    8. '  ' → logprob: -17.626502990722656
    9. ''g' → logprob: -19.126502990722656
    10. '```' → logprob: -19.251502990722656

Token 127: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01600269228219986
    2. '<|end|>' → logprob: -5.391002655029297
    3. '   ' → logprob: -5.766002655029297
    4. 'y' → logprob: -5.766002655029297
    5. '    
' → logprob: -6.391002655029297
    6. ' y' → logprob: -6.891002655029297
    7. ' 
' → logprob: -7.016002655029297
    8. '  
' → logprob: -7.391002655029297
    9. ',y' → logprob: -8.266002655029297
    10. '   
' → logprob: -8.766002655029297

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7370665669441223
    2. ' y' → logprob: -1.1120665073394775
    3. 'y' → logprob: -1.7370665073394775
    4. '
' → logprob: -4.237066745758057
    5. ',y' → logprob: -6.737066745758057
    6. '	y' → logprob: -7.612066745758057
    7. '```' → logprob: -9.237066268920898
    8. '    
' → logprob: -9.237066268920898
    9. '<|end|>' → logprob: -9.487066268920898
    10. ',' → logprob: -9.612066268920898

Token 129: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.31326520442962646
    2. ' y' → logprob: -1.3132652044296265
    3. '   ' → logprob: -13.063264846801758
    4. ' ' → logprob: -15.063264846801758
    5. '    ' → logprob: -15.188264846801758
    6. '```' → logprob: -15.188264846801758
    7. '	y' → logprob: -15.313264846801758
    8. ',y' → logprob: -16.063264846801758
    9. ' 
' → logprob: -16.563264846801758
    10. '`' → logprob: -16.938264846801758

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.375008583068848
    3. '_' → logprob: -13.000008583068848
    4. ' *=' → logprob: -14.500008583068848
    5. '*' → logprob: -14.625008583068848
    6. '```' → logprob: -15.125008583068848
    7. '۰' → logprob: -16.00000762939453
    8. '`' → logprob: -16.37500762939453
    9. '<|end|>' → logprob: -16.50000762939453
    10. ' ' → logprob: -16.75000762939453

Token 131: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.12173997610807419
    2. '*=' → logprob: -2.2467398643493652
    3. '*' → logprob: -5.121739864349365
    4. ' *' → logprob: -6.371739864349365
    5. ' ' → logprob: -7.121739864349365
    6. ' ' → logprob: -8.496740341186523
    7. '    ' → logprob: -9.871740341186523
    8. '=' → logprob: -10.121740341186523
    9. '```' → logprob: -10.496740341186523
    10. '<|end|>' → logprob: -10.871740341186523

Token 132: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02975349873304367
    2. 'd' → logprob: -3.5297534465789795
    3. ' ' → logprob: -13.029753684997559
    4. '(d' → logprob: -15.154753684997559
    5. ' (' → logprob: -15.279753684997559
    6. ' ' → logprob: -16.529752731323242
    7. '	d' → logprob: -16.654752731323242
    8. '(' → logprob: -17.279752731323242
    9. '```' → logprob: -17.529752731323242
    10. '`' → logprob: -17.529752731323242

Token 133: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3556450307369232
    2. '//' → logprob: -1.2306450605392456
    3. '/' → logprob: -5.355645179748535
    4. ' /' → logprob: -6.605645179748535
    5. '<|end|>' → logprob: -8.105645179748535
    6. ' ' → logprob: -8.605645179748535
    7. '```' → logprob: -8.730645179748535
    8. ' ' → logprob: -9.605645179748535
    9. '0' → logprob: -9.605645179748535
    10. 'g' → logprob: -9.980645179748535

Token 134: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.002475777640938759
    2. ' g' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.62747573852539
    4. '   ' → logprob: -17.75247573852539
    5. '	g' → logprob: -17.87747573852539
    6. '<|end|>' → logprob: -18.62747573852539
    7. '_g' → logprob: -19.00247573852539
    8. '  ' → logprob: -19.75247573852539
    9. '```' → logprob: -19.87747573852539
    10. ''g' → logprob: -19.87747573852539

Token 135: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10460519790649414
    2. ' if' → logprob: -2.979605197906494
    3. 'if' → logprob: -3.479605197906494
    4. '<|end|>' → logprob: -5.354605197906494
    5. ' 
' → logprob: -5.604605197906494
    6. '
' → logprob: -5.729605197906494
    7. '    
' → logprob: -5.854605197906494
    8. '    ' → logprob: -6.979605197906494
    9. '```' → logprob: -7.604605197906494
    10. ' ' → logprob: -7.729605197906494

Token 137: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.538524329662323
    2. ' if' → logprob: -0.913524329662323
    3. '   ' → logprob: -4.288524150848389
    4. '    ' → logprob: -6.913524150848389
    5. '    
' → logprob: -9.038524627685547
    6. ' 
' → logprob: -9.163524627685547
    7. 'print' → logprob: -9.288524627685547
    8. ' ' → logprob: -10.288524627685547
    9. '  ' → logprob: -10.663524627685547
    10. 'n' → logprob: -10.913524627685547

Token 138: ' general' (ID: 5985)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5762489438056946
    2. 'if' → logprob: -0.8262489438056946
    3. '   ' → logprob: -9.076249122619629
    4. ' while' → logprob: -9.951249122619629
    5. ' g' → logprob: -10.326249122619629
    6. 'g' → logprob: -10.576249122619629
    7. 'If' → logprob: -11.201249122619629
    8. 'while' → logprob: -11.201249122619629
    9. '#' → logprob: -11.451249122619629
    10. 'print' → logprob: -11.701249122619629

Token 139: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.04987369850277901
    2. '_solution' → logprob: -3.4248735904693604
    3. ' solutions' → logprob: -4.5498738288879395
    4. '_' → logprob: -5.7998738288879395
    5. 'solution' → logprob: -6.1748738288879395
    6. ' form' → logprob: -8.674873352050781
    7. 'solutions' → logprob: -9.674873352050781
    8. ' x' → logprob: -10.049873352050781
    9. '   ' → logprob: -10.549873352050781
    10. ' _' → logprob: -10.924873352050781

Token 140: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0089012384414673
    2. '   ' → logprob: -1.1339012384414673
    3. '<|end|>' → logprob: -1.2589012384414673
    4. '    
' → logprob: -4.258901119232178
    5. ',' → logprob: -5.258901119232178
    6. '  
' → logprob: -5.883901119232178
    7. ':' → logprob: -6.133901119232178
    8. '\n' → logprob: -6.633901119232178
    9. '<|end|>' → logprob: -6.633901119232178
    10. 'n' → logprob: -7.758901119232178

Token 141: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12102993577718735
    2. 'x' → logprob: -3.371029853820801
    3. '   ' → logprob: -3.871029853820801
    4. ' 
' → logprob: -4.121029853820801
    5. ' n' → logprob: -4.746029853820801
    6. ' for' → logprob: -4.871029853820801
    7. '    ' → logprob: -5.496029853820801
    8. '```' → logprob: -5.621029853820801
    9. '    
' → logprob: -5.746029853820801
    10. '
' → logprob: -5.996029853820801

Token 142: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02748803235590458
    2. '0' → logprob: -4.6524882316589355
    3. ' =' → logprob: -4.7774882316589355
    4. ' ,' → logprob: -5.2774882316589355
    5. '=' → logprob: -6.6524882316589355
    6. ' +' → logprob: -6.7774882316589355
    7. '_' → logprob: -7.4024882316589355
    8. '+' → logprob: -7.9024882316589355
    9. '_,' → logprob: -8.027487754821777
    10. ' +=' → logprob: -9.402487754821777

Token 143: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.033725231885910034
    2. 'x' → logprob: -3.4087252616882324
    3. ' ' → logprob: -9.783724784851074
    4. '	x' → logprob: -11.658724784851074
    5. '    ' → logprob: -12.158724784851074
    6. '"x' → logprob: -12.908724784851074
    7. '   ' → logprob: -13.158724784851074
    8. ' ' → logprob: -13.658724784851074
    9. ' f' → logprob: -14.158724784851074
    10. '  ' → logprob: -14.658724784851074

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4021237802808173e-05
    2. '_' → logprob: -11.625014305114746
    3. ' ' → logprob: -12.875014305114746
    4. ',' → logprob: -13.875014305114746
    5. '\xe2\x82' → logprob: -14.625014305114746
    6. ' +' → logprob: -15.125014305114746
    7. '+' → logprob: -15.625014305114746
    8. '```' → logprob: -16.12501335144043
    9. '۰' → logprob: -16.25001335144043
    10. ' ,' → logprob: -16.25001335144043

Token 145: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04523490369319916
    2. '+' → logprob: -3.1702349185943604
    3. ',' → logprob: -6.545234680175781
    4. ' ,' → logprob: -8.045234680175781
    5. ' ' → logprob: -8.295234680175781
    6. '<|end|>' → logprob: -9.295234680175781
    7. ' plus' → logprob: -10.045234680175781
    8. '    ' → logprob: -10.545234680175781
    9. '   ' → logprob: -10.795234680175781
    10. '  ' → logprob: -11.670234680175781

Token 146: ' k' (ID: 372)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.7344540357589722
    2. 'b' → logprob: -1.1094540357589722
    3. ' (' → logprob: -2.3594541549682617
    4. 't' → logprob: -2.9844541549682617
    5. ' b' → logprob: -3.6094541549682617
    6. 'k' → logprob: -4.734454154968262
    7. ' t' → logprob: -5.359454154968262
    8. '(k' → logprob: -6.484454154968262
    9. ' k' → logprob: -6.734454154968262
    10. '(t' → logprob: -6.984454154968262

Token 147: '*(' (ID: 14793)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1038893461227417
    2. '(b' → logprob: -1.6038893461227417
    3. ' (' → logprob: -1.7288893461227417
    4. '(' → logprob: -1.9788893461227417
    5. '<|end|>' → logprob: -2.6038894653320312
    6. ' b' → logprob: -3.7288894653320312
    7. ' *' → logprob: -4.353889465332031
    8. '*(' → logprob: -4.728889465332031
    9. '*' → logprob: -4.978889465332031
    10. '*b' → logprob: -5.103889465332031

Token 148: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00917769968509674
    2. '(b' → logprob: -5.1341776847839355
    3. ' b' → logprob: -5.7591776847839355
    4. ' (' → logprob: -9.884178161621094
    5. '(' → logprob: -10.634178161621094
    6. ')b' → logprob: -11.384178161621094
    7. '	b' → logprob: -13.634178161621094
    8. '```' → logprob: -14.509178161621094
    9. ' ' → logprob: -15.134178161621094
    10. ')' → logprob: -15.134178161621094

Token 149: '/g' (ID: 11328)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.1057095155119896
    2. ' //' → logprob: -2.3557095527648926
    3. ')' → logprob: -5.230709552764893
    4. ')//' → logprob: -9.730709075927734
    5. ' )' → logprob: -10.480709075927734
    6. '
' → logprob: -11.230709075927734
    7. '#' → logprob: -11.230709075927734
    8. '```' → logprob: -11.730709075927734
    9. ' ' → logprob: -12.730709075927734
    10. '`' → logprob: -12.980709075927734

Token 150: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3873342275619507
    2. '),' → logprob: -1.1373342275619507
    3. ' ),' → logprob: -8.262333869934082
    4. ' )' → logprob: -9.137333869934082
    5. ',' → logprob: -9.637333869934082
    6. ')
' → logprob: -11.012333869934082
    7. ' ' → logprob: -13.387333869934082
    8. ');' → logprob: -13.387333869934082
    9. '   ' → logprob: -13.512333869934082
    10. '),
' → logprob: -13.637333869934082

Token 151: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.12716054916381836
    2. 'y' → logprob: -2.1271605491638184
    3. '   ' → logprob: -9.127161026000977
    4. '    ' → logprob: -9.877161026000977
    5. ' ' → logprob: -10.502161026000977
    6. '#' → logprob: -10.752161026000977
    7. '  ' → logprob: -12.127161026000977
    8. ' #' → logprob: -12.627161026000977
    9. '	y' → logprob: -12.627161026000977
    10. ' k' → logprob: -13.002161026000977

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01349206455051899
    2. '0' → logprob: -5.013492107391357
    3. '=' → logprob: -5.013492107391357
    4. ' ' → logprob: -10.2634916305542
    5. '<|end|>' → logprob: -10.3884916305542
    6. ' *' → logprob: -10.8884916305542
    7. '*' → logprob: -11.7634916305542
    8. ',' → logprob: -12.8884916305542
    9. ')' → logprob: -13.2634916305542
    10. '   ' → logprob: -13.5134916305542

Token 153: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3742588758468628
    2. ' x' → logprob: -1.2492588758468628
    3. ' y' → logprob: -4.374258995056152
    4. 'y' → logprob: -4.874258995056152
    5. ' -' → logprob: -5.624258995056152
    6. '-x' → logprob: -7.749258995056152
    7. '-' → logprob: -7.749258995056152
    8. '   ' → logprob: -8.624258995056152
    9. ' ' → logprob: -8.749258995056152
    10. '  ' → logprob: -8.999258995056152

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038134094211272895
    2. '+' → logprob: -8.750381469726562
    3. '_' → logprob: -9.125381469726562
    4. ' ' → logprob: -10.375381469726562
    5. ' +' → logprob: -10.500381469726562
    6. ' =' → logprob: -11.000381469726562
    7. '=' → logprob: -11.750381469726562
    8. '   ' → logprob: -11.875381469726562
    9. '<|end|>' → logprob: -13.000381469726562
    10. '```' → logprob: -13.125381469726562

Token 155: ' -' (ID: 533)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.6775078177452087
    2. '*' → logprob: -0.8025078177452087
    3. ' *' → logprob: -3.5525078773498535
    4. '*(-' → logprob: -5.1775078773498535
    5. ' -' → logprob: -5.6775078773498535
    6. '-' → logprob: -5.6775078773498535
    7. '*k' → logprob: -6.1775078773498535
    8. '*-' → logprob: -8.302507400512695
    9. '   ' → logprob: -9.677507400512695
    10. '<|end|>' → logprob: -10.052507400512695

Token 156: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018151817843317986
    2. ' k' → logprob: -4.018151760101318
    3. '   ' → logprob: -14.143152236938477
    4. '	k' → logprob: -14.643152236938477
    5. ' ' → logprob: -15.018152236938477
    6. '<|end|>' → logprob: -15.518152236938477
    7. '```' → logprob: -16.768152236938477
    8. 'x' → logprob: -17.268152236938477
    9. ' ' → logprob: -17.393152236938477
    10. 'kx' → logprob: -17.393152236938477

Token 157: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0004892880679108202
    2. '*' → logprob: -8.000489234924316
    3. ' *(' → logprob: -9.250489234924316
    4. '(a' → logprob: -10.500489234924316
    5. ' *' → logprob: -11.250489234924316
    6. ' (' → logprob: -12.000489234924316
    7. '*a' → logprob: -12.750489234924316
    8. '<|end|>' → logprob: -13.625489234924316
    9. '(' → logprob: -14.000489234924316
    10. '(k' → logprob: -14.125489234924316

Token 158: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10358797013759613
    2. '(a' → logprob: -2.3535878658294678
    3. ' (' → logprob: -5.978588104248047
    4. ' a' → logprob: -7.353588104248047
    5. ')' → logprob: -9.103588104248047
    6. ')a' → logprob: -9.853588104248047
    7. '(' → logprob: -11.228588104248047
    8. ')(' → logprob: -12.103588104248047
    9. 'x' → logprob: -12.853588104248047
    10. '	a' → logprob: -12.978588104248047

Token 159: '/g' (ID: 11328)
  Prédit: '/g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/g' → logprob: -0.44294533133506775
    2. '/' → logprob: -1.0679453611373901
    3. '//' → logprob: -4.44294548034668
    4. ')' → logprob: -6.94294548034668
    5. ' /' → logprob: -7.19294548034668
    6. '/)' → logprob: -8.06794548034668
    7. ')/' → logprob: -10.06794548034668
    8. 'g' → logprob: -10.31794548034668
    9. '/
' → logprob: -10.31794548034668
    10. '/div' → logprob: -10.69294548034668

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010390079842181876
    2. ')
' → logprob: -10.125103950500488
    3. '#' → logprob: -10.375103950500488
    4. ')#' → logprob: -11.125103950500488
    5. ' )' → logprob: -12.000103950500488
    6. '   ' → logprob: -12.375103950500488
    7. ')

' → logprob: -12.875103950500488
    8. '**' → logprob: -14.125103950500488
    9. ')**' → logprob: -14.125103950500488
    10. '),' → logprob: -14.250103950500488

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6315065622329712
    2. 'k' → logprob: -1.0065065622329712
    3. ' if' → logprob: -2.6315064430236816
    4. 'if' → logprob: -4.256506443023682
    5. ' for' → logprob: -4.881506443023682
    6. 'for' → logprob: -5.881506443023682
    7. ' k' → logprob: -6.506506443023682
    8. '```' → logprob: -6.756506443023682
    9. '    ' → logprob: -7.506506443023682
    10. ',' → logprob: -7.631506443023682

Token 162: ' A' (ID: 355)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.19473466277122498
    2. 'if' → logprob: -3.194734573364258
    3. '   ' → logprob: -3.194734573364258
    4. ' if' → logprob: -3.194734573364258
    5. 'for' → logprob: -3.819734573364258
    6. ' for' → logprob: -4.194734573364258
    7. ' k' → logprob: -4.444734573364258
    8. 'import' → logprob: -6.944734573364258
    9. 'while' → logprob: -6.944734573364258
    10. ' while' → logprob: -7.444734573364258

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14334891736507416
    2. ',' → logprob: -2.6433489322662354
    3. '=' → logprob: -2.8933489322662354
    4. '_' → logprob: -6.143348693847656
    5. ' ,' → logprob: -6.143348693847656
    6. ' ' → logprob: -6.143348693847656
    7. ')' → logprob: -9.893348693847656
    8. ',b' → logprob: -10.018348693847656
    9. '_b' → logprob: -10.143348693847656
    10. ' if' → logprob: -10.143348693847656

Token 164: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4747195541858673
    2. ' b' → logprob: -0.9747195243835449
    3. '(b' → logprob: -8.724720001220703
    4. ' (' → logprob: -9.099720001220703
    5. '-b' → logprob: -9.474720001220703
    6. 'a' → logprob: -9.724720001220703
    7. ' ' → logprob: -9.849720001220703
    8. ' a' → logprob: -10.849720001220703
    9. 'x' → logprob: -10.849720001220703
    10. '(' → logprob: -11.099720001220703

Token 165: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.576981782913208
    2. ' //' → logprob: -0.826981782913208
    3. '/' → logprob: -7.451981544494629
    4. '<|end|>' → logprob: -8.326981544494629
    5. ' /' → logprob: -9.201981544494629
    6. ')' → logprob: -10.951981544494629
    7. ' ' → logprob: -11.076981544494629
    8. '<|end|>' → logprob: -11.326981544494629
    9. ' ' → logprob: -11.451981544494629
    10. '```' → logprob: -11.701981544494629

Token 166: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -4.842555426876061e-06
    2. ' g' → logprob: -12.250004768371582
    3. ' ' → logprob: -18.2500057220459
    4. '_g' → logprob: -18.2500057220459
    5. '<|end|>' → logprob: -18.5000057220459
    6. '   ' → logprob: -19.0000057220459
    7. '	g' → logprob: -20.1250057220459
    8. '  ' → logprob: -20.2500057220459
    9. '/g' → logprob: -20.3750057220459
    10. '#g' → logprob: -21.0000057220459

Token 167: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10237148404121399
    2. '<|end|>' → logprob: -3.2273714542388916
    3. ' B' → logprob: -3.8523714542388916
    4. ',' → logprob: -3.8523714542388916
    5. 'B' → logprob: -4.602371692657471
    6. ' ' → logprob: -6.352371692657471
    7. '  ' → logprob: -6.977371692657471
    8. '
' → logprob: -7.727371692657471
    9. ' C' → logprob: -7.852371692657471
    10. 'C' → logprob: -7.977371692657471

Token 169: ' B' (ID: 418)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02006797306239605
    2. 'A' → logprob: -4.395068168640137
    3. '-a' → logprob: -6.020068168640137
    4. 'B' (adapté à ' B') → logprob: -6.145068168640137
    5. 'g' → logprob: -6.895068168640137
    6. '-' → logprob: -7.770068168640137
    7. ' a' → logprob: -7.895068168640137
    8. ' -' → logprob: -8.020068168640137
    9. 'C' → logprob: -8.270068168640137
    10. '(-' → logprob: -8.770068168640137

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07897394895553589
    2. '=' → logprob: -2.5789740085601807
    3. ' ' → logprob: -9.953973770141602
    4. '   ' → logprob: -10.578973770141602
    5. '    ' → logprob: -12.078973770141602
    6. '  ' → logprob: -13.453973770141602
    7. ',' → logprob: -13.953973770141602
    8. '//' → logprob: -13.953973770141602
    9. ' //' → logprob: -14.203973770141602
    10. ')' → logprob: -14.953973770141602

Token 171: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16063767671585083
    2. ' a' → logprob: -1.910637617111206
    3. '-a' → logprob: -8.285637855529785
    4. ' -' → logprob: -8.910637855529785
    5. '-' → logprob: -10.910637855529785
    6. '-(' → logprob: -13.035637855529785
    7. ' -(' → logprob: -13.535637855529785
    8. ' ' → logprob: -13.785637855529785
    9. '	a' → logprob: -13.785637855529785
    10. ' (' → logprob: -14.285637855529785

Token 172: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0028164091054350138
    2. ' //' → logprob: -5.877816200256348
    3. '<|end|>' → logprob: -12.377816200256348
    4. '/' → logprob: -12.502816200256348
    5. '#' → logprob: -12.877816200256348
    6. '//=' → logprob: -14.377816200256348
    7. '<|end|>' → logprob: -16.002817153930664
    8. '\/\/' → logprob: -16.377817153930664
    9. '```' → logprob: -16.377817153930664
    10. '://' → logprob: -16.502817153930664

Token 173: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.130576806142926e-05
    2. ' g' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -17.125030517578125
    4. '   ' → logprob: -17.500030517578125
    5. '	g' → logprob: -18.500030517578125
    6. '_g' → logprob: -18.625030517578125
    7. ' ' → logprob: -18.750030517578125
    8. 'b' → logprob: -19.000030517578125
    9. '
' → logprob: -20.125030517578125
    10. '  ' → logprob: -20.500030517578125

Token 174: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4496651887893677
    2. '<|end|>' → logprob: -1.6996651887893677
    3. '   ' → logprob: -1.8246651887893677
    4. ')' → logprob: -4.824665069580078
    5. '    
' → logprob: -5.699665069580078
    6. ' ' → logprob: -6.824665069580078
    7. '

' → logprob: -7.199665069580078
    8. '  
' → logprob: -7.324665069580078
    9. '<|end|>' → logprob: -7.324665069580078
    10. '\n' → logprob: -7.324665069580078

Token 175: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42447629570961
    2. '   ' → logprob: -1.9244762659072876
    3. '<|end|>' → logprob: -2.174476385116577
    4. 'for' → logprob: -3.174476385116577
    5. 'k' → logprob: -4.049476146697998
    6. ' for' → logprob: -4.424476146697998
    7. '    
' → logprob: -5.049476146697998
    8. '```' → logprob: -6.799476146697998
    9. '\n' → logprob: -7.049476146697998
    10. 'from' → logprob: -7.424476146697998

Token 176: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2175530195236206
    2. 'if' → logprob: -1.7175530195236206
    3. ' if' → logprob: -5.21755313873291
    4. '   ' → logprob: -5.84255313873291
    5. 'for' → logprob: -6.09255313873291
    6. 'from' → logprob: -6.34255313873291
    7. ' k' → logprob: -6.84255313873291
    8. '#' (adapté à ' #') → logprob: -7.21755313873291
    9. 'import' → logprob: -7.84255313873291
    10. 'x' → logprob: -8.09255313873291

Token 177: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05442832410335541
    2. 'k' → logprob: -3.3044283390045166
    3. ' if' → logprob: -5.0544281005859375
    4. '   ' → logprob: -5.9294281005859375
    5. '#' → logprob: -6.1794281005859375
    6. 'import' → logprob: -6.3044281005859375
    7. 'for' → logprob: -7.1794281005859375
    8. 'from' → logprob: -7.1794281005859375
    9. 'min' → logprob: -7.5544281005859375
    10. 'def' → logprob: -8.429428100585938

Token 178: ' want' (ID: 1682)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40827372670173645
    2. '#' → logprob: -2.033273696899414
    3. ' want' → logprob: -2.658273696899414
    4. ' need' → logprob: -3.283273696899414
    5. 'if' → logprob: -4.533273696899414
    6. 'import' → logprob: -4.533273696899414
    7. 'need' → logprob: -4.533273696899414
    8. '=' → logprob: -4.908273696899414
    9. ' #' → logprob: -5.158273696899414
    10. 'n' → logprob: -5.158273696899414

Token 179: ' non' (ID: 2893)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03529723733663559
    2. 'to' → logprob: -3.785297155380249
    3. ' x' → logprob: -5.660297393798828
    4. ' k' → logprob: -5.785297393798828
    5. ' t' → logprob: -6.660297393798828
    6. '   ' → logprob: -6.660297393798828
    7. '    ' → logprob: -6.910297393798828
    8. 'x' → logprob: -7.410297393798828
    9. 'k' → logprob: -8.160297393798828
    10. 't' → logprob: -8.535297393798828

Token 180: 'negative' (ID: 46069)
  Prédit: '-negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-negative' → logprob: -0.6795250177383423
    2. '-' → logprob: -1.4295250177383423
    3. 'negative' → logprob: -1.4295250177383423
    4. ' negative' → logprob: -4.929524898529053
    5. '   ' → logprob: -5.179524898529053
    6. '-neg' → logprob: -7.304524898529053
    7. 'neg' → logprob: -8.804525375366211
    8. '_negative' → logprob: -8.929525375366211
    9. ',' → logprob: -9.304525375366211
    10. ' -' → logprob: -9.429525375366211

Token 181: ' x' (ID: 1215)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7174704670906067
    2. 'k' → logprob: -1.092470407485962
    3. ' x' → logprob: -2.217470407485962
    4. 'x' → logprob: -3.342470407485962
    5. ' integers' → logprob: -3.967470407485962
    6. ' values' → logprob: -5.092470645904541
    7. ' solutions' → logprob: -5.342470645904541
    8. ' integer' → logprob: -6.967470645904541
    9. ' ' → logprob: -7.092470645904541
    10. ',' → logprob: -8.092470169067383

Token 182: ',y' (ID: 16103)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10100459307432175
    2. ',' → logprob: -2.4760046005249023
    3. 'and' → logprob: -5.351004600524902
    4. '   ' → logprob: -5.976004600524902
    5. '<|end|>' → logprob: -6.726004600524902
    6. '0' → logprob: -7.101004600524902
    7. ' ' → logprob: -7.226004600524902
    8. ' for' → logprob: -7.226004600524902
    9. ' ,' → logprob: -7.851004600524902
    10. '  ' → logprob: -8.351004600524902

Token 183: ' =>' (ID: 871)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7800853252410889
    2. ',' → logprob: -1.2800853252410889
    3. '<|end|>' → logprob: -2.280085325241089
    4. ':' → logprob: -3.530085325241089
    5. ',
' → logprob: -3.905085325241089
    6. '    
' → logprob: -4.030085563659668
    7. '.' → logprob: -4.280085563659668
    8. '   ' → logprob: -4.405085563659668
    9. ' ' → logprob: -4.780085563659668
    10. ' for' → logprob: -4.905085563659668

Token 184: ' x' (ID: 1215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5286145210266113
    2. ' k' → logprob: -0.9036145210266113
    3. '   ' → logprob: -6.153614521026611
    4. 'from' → logprob: -6.903614521026611
    5. ' from' → logprob: -7.028614521026611
    6. ' if' → logprob: -7.278614521026611
    7. 'if' → logprob: -8.153614044189453
    8. '    ' → logprob: -9.528614044189453
    9. '
' → logprob: -9.528614044189453
    10. 'import' → logprob: -10.153614044189453

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5439196228981018
    2. ' >=' → logprob: -0.9189196228981018
    3. '>=' → logprob: -4.418919563293457
    4. '_' → logprob: -5.168919563293457
    5. ' ' → logprob: -7.168919563293457
    6. ',' → logprob: -7.543919563293457
    7. ' _' → logprob: -7.793919563293457
    8. '   ' → logprob: -8.293919563293457
    9. '[' → logprob: -8.918919563293457
    10. ' >' → logprob: -9.293919563293457

Token 186: ' +' (ID: 659)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7487835884094238
    2. ' +' → logprob: -1.4987835884094238
    3. '>=' → logprob: -1.6237835884094238
    4. '+' → logprob: -2.873783588409424
    5. ',' → logprob: -3.998783588409424
    6. '    ' → logprob: -4.248783588409424
    7. ' <' → logprob: -5.748783588409424
    8. ' ,' → logprob: -5.998783588409424
    9. ' ' → logprob: -6.373783588409424
    10. '   ' → logprob: -6.373783588409424

Token 187: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22397024929523468
    2. 'A' → logprob: -1.7239702939987183
    3. ' k' → logprob: -4.473970413208008
    4. ' A' → logprob: -4.598970413208008
    5. ' ' → logprob: -8.223970413208008
    6. '   ' → logprob: -8.723970413208008
    7. '(A' → logprob: -9.723970413208008
    8. '(' → logprob: -9.848970413208008
    9. ' (' → logprob: -9.973970413208008
    10. 'K' → logprob: -10.098970413208008

Token 188: '*A' (ID: 166365)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005472805816680193
    2. ' *' → logprob: -5.505472660064697
    3. '*(-' → logprob: -7.755472660064697
    4. '>=' → logprob: -7.880472660064697
    5. '<|end|>' → logprob: -9.005473136901855
    6. '*(' → logprob: -9.505473136901855
    7. '*>' → logprob: -9.755473136901855
    8. ' >=' → logprob: -9.880473136901855
    9. '**' → logprob: -9.880473136901855
    10. '*A' → logprob: -10.130473136901855

Token 189: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2530003488063812
    2. '>=' → logprob: -1.5030003786087036
    3. '>' → logprob: -7.878000259399414
    4. '">' → logprob: -9.003000259399414
    5. ')>=' → logprob: -9.003000259399414
    6. ' >' → logprob: -9.503000259399414
    7. '    ' → logprob: -9.503000259399414
    8. ' ' → logprob: -9.628000259399414
    9. '<|end|>' → logprob: -9.753000259399414
    10. '   ' → logprob: -10.253000259399414

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00975739024579525
    2. ' ' → logprob: -4.6347575187683105
    3. '   ' → logprob: -14.384757041931152
    4. ' ' → logprob: -15.509757041931152
    5. '  ' → logprob: -15.634757041931152
    6. '    ' → logprob: -16.00975799560547
    7. '```' → logprob: -16.38475799560547
    8. '<|end|>' → logprob: -16.75975799560547
    9. '۰' → logprob: -17.07225799560547
    10. ' -' → logprob: -17.88475799560547

Token 191: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03420930355787277
    2. 'and' → logprob: -3.7842092514038086
    3. '<|end|>' → logprob: -4.659209251403809
    4. '
' → logprob: -7.409209251403809
    5. ',' → logprob: -8.159209251403809
    6. ' ' → logprob: -8.159209251403809
    7. '<|end|>' → logprob: -9.159209251403809
    8. '    
' → logprob: -10.284209251403809
    9. ' 
' → logprob: -10.284209251403809
    10. '  
' → logprob: -10.909209251403809

Token 192: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2019283026456833
    2. 'y' → logprob: -1.7019282579421997
    3. '   ' → logprob: -7.82692813873291
    4. '    ' → logprob: -10.45192813873291
    5. '	y' → logprob: -10.57692813873291
    6. ' ' → logprob: -10.57692813873291
    7. '0' → logprob: -12.07692813873291
    8. '
' → logprob: -12.32692813873291
    9. '  ' → logprob: -12.45192813873291
    10. '    
' → logprob: -12.57692813873291

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006775272195227444
    2. '<|end|>' → logprob: -8.000677108764648
    3. '   ' → logprob: -8.625677108764648
    4. ' ' → logprob: -9.750677108764648
    5. '_' → logprob: -10.625677108764648
    6. '```' → logprob: -11.125677108764648
    7. '>' → logprob: -11.750677108764648
    8. ' ' → logprob: -12.000677108764648
    9. '
' → logprob: -12.000677108764648
    10. '<|end|>' → logprob: -12.250677108764648

Token 194: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.149686798453331
    2. '-' → logprob: -2.024686813354492
    3. ' +' → logprob: -6.274686813354492
    4. '<|end|>' → logprob: -6.649686813354492
    5. '+' → logprob: -6.899686813354492
    6. '   ' → logprob: -7.149686813354492
    7. ' >=' → logprob: -7.274686813354492
    8. '>=' → logprob: -7.524686813354492
    9. ' ' → logprob: -8.274686813354492
    10. ')' → logprob: -9.524686813354492

Token 195: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06199872866272926
    2. ' k' → logprob: -2.8119988441467285
    3. ' ' → logprob: -11.18699836730957
    4. '
' → logprob: -12.31199836730957
    5. '   ' → logprob: -12.43699836730957
    6. '<|end|>' → logprob: -12.43699836730957
    7. '	k' → logprob: -13.06199836730957
    8. '  ' → logprob: -14.06199836730957
    9. '    ' → logprob: -14.93699836730957
    10. ' ' → logprob: -15.18699836730957

Token 196: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0014773675939068198
    2. 'B' → logprob: -7.001477241516113
    3. ' *' → logprob: -7.751477241516113
    4. '*(' → logprob: -9.626477241516113
    5. ' B' → logprob: -10.001477241516113
    6. ' ' → logprob: -12.251477241516113
    7. '   ' → logprob: -12.251477241516113
    8. '**' → logprob: -13.126477241516113
    9. '	B' → logprob: -13.126477241516113
    10. '>B' → logprob: -13.251477241516113

Token 197: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0017081368714571
    2. ' B' → logprob: -6.376708030700684
    3. '<|end|>' → logprob: -12.251708030700684
    4. '>B' → logprob: -14.626708030700684
    5. '	B' → logprob: -15.126708030700684
    6. '(B' → logprob: -16.251708984375
    7. ' ' → logprob: -16.501708984375
    8. '*' → logprob: -16.626708984375
    9. '"B' → logprob: -17.501708984375
    10. '=B' → logprob: -17.751708984375

Token 198: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1802193969488144
    2. '>=' → logprob: -1.8052194118499756
    3. ' ' → logprob: -8.055219650268555
    4. ')>=' → logprob: -9.930219650268555
    5. '   ' → logprob: -10.180219650268555
    6. ']>=' → logprob: -10.930219650268555
    7. '>' → logprob: -12.055219650268555
    8. ' <=' → logprob: -12.180219650268555
    9. '  ' → logprob: -12.305219650268555
    10. '<|end|>' → logprob: -12.430219650268555

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023246292024850845
    2. ' ' → logprob: -3.7732462882995605
    3. '<|end|>' → logprob: -15.148246765136719
    4. '```' → logprob: -15.960746765136719
    5. '۰' → logprob: -16.14824676513672
    6. '   ' → logprob: -16.21074676513672
    7. ' ' → logprob: -16.83574676513672
    8. '  ' → logprob: -16.83574676513672
    9. '
' → logprob: -16.96074676513672
    10. ',' → logprob: -17.33574676513672

Token 200: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22011950612068176
    2. '   ' → logprob: -2.4701194763183594
    3. '<|end|>' → logprob: -2.5951194763183594
    4. '    
' → logprob: -4.345119476318359
    5. '  
' → logprob: -4.845119476318359
    6. ',' → logprob: -5.470119476318359
    7. '   
' → logprob: -6.220119476318359
    8. ':' → logprob: -6.220119476318359
    9. '<|end|>' → logprob: -6.720119476318359
    10. '```' → logprob: -6.720119476318359

Token 201: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1135600134730339
    2. '   ' → logprob: -2.8635599613189697
    3. '<|end|>' → logprob: -3.8635599613189697
    4. ',' → logprob: -4.738560199737549
    5. '    
' → logprob: -4.863560199737549
    6. '  
' → logprob: -5.488560199737549
    7. ',
' → logprob: -6.113560199737549
    8. '   
' → logprob: -6.988560199737549
    9. '```' → logprob: -7.113560199737549
    10. ' 
' → logprob: -7.363560199737549

Token 202: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5773869156837463
    2. 'from' → logprob: -1.3273868560791016
    3. '   ' → logprob: -2.3273868560791016
    4. 'import' → logprob: -3.0773868560791016
    5. ' from' → logprob: -4.327386856079102
    6. ' k' → logprob: -4.577386856079102
    7. '    ' → logprob: -6.827386856079102
    8. '#' (adapté à ' #') → logprob: -7.077386856079102
    9. 'if' → logprob: -7.202386856079102
    10. '    
' → logprob: -7.452386856079102

Token 203: ' So' (ID: 2632)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.29262787103652954
    2. 'from' → logprob: -1.7926278114318848
    3. '   ' → logprob: -3.4176278114318848
    4. ' k' → logprob: -3.9176278114318848
    5. 'import' → logprob: -3.9176278114318848
    6. ' from' → logprob: -4.667627811431885
    7. 'min' → logprob: -6.792627811431885
    8. 'low' → logprob: -7.167627811431885
    9. ' import' → logprob: -7.417627811431885
    10. 'if' → logprob: -7.667627811431885

Token 204: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7905116081237793
    2. 'k' → logprob: -1.0405116081237793
    3. '   ' → logprob: -1.7905116081237793
    4. '    ' → logprob: -4.915511608123779
    5. 'from' → logprob: -5.040511608123779
    6. 'import' → logprob: -5.540511608123779
    7. ',' → logprob: -6.040511608123779
    8. ' from' → logprob: -6.290511608123779
    9. '  ' → logprob: -6.665511608123779
    10. ' ' → logprob: -7.290511608123779

Token 205: ' >=' (ID: 5064)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.18814703822135925
    2. 'min' → logprob: -2.5631470680236816
    3. ' >=' → logprob: -3.5631470680236816
    4. '_start' → logprob: -3.9381470680236816
    5. '_' → logprob: -4.563147068023682
    6. '1' → logprob: -4.813147068023682
    7. '_lower' → logprob: -5.188147068023682
    8. '>=' → logprob: -5.688147068023682
    9. '_low' → logprob: -5.938147068023682
    10. ' ' → logprob: -6.188147068023682

Token 206: ' ceil' (ID: 35964)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.4693002700805664
    2. '-max' → logprob: -1.4693002700805664
    3. '(max' → logprob: -2.2193002700805664
    4. ' (' → logprob: -2.2193002700805664
    5. 'max' → logprob: -2.4693002700805664
    6. ' -' → logprob: -2.7193002700805664
    7. ' max' → logprob: -3.0943002700805664
    8. '-ce' → logprob: -3.0943002700805664
    9. ' (-' → logprob: -3.0943002700805664
    10. ' ' → logprob: -4.594300270080566

Token 207: '(-' (ID: 8087)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5476848483085632
    2. '((-' → logprob: -0.9226848483085632
    3. '(-(' → logprob: -4.422684669494629
    4. '(-' → logprob: -4.797684669494629
    5. '(' → logprob: -5.672684669494629
    6. ' ((' → logprob: -8.922684669494629
    7. '   ' → logprob: -9.172684669494629
    8. '(float' → logprob: -9.797684669494629
    9. 'div' → logprob: -9.797684669494629
    10. ' (' → logprob: -10.047684669494629

Token 208: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0012858292320743203
    2. '(x' → logprob: -7.376286029815674
    3. ' x' → logprob: -7.376286029815674
    4. '(' → logprob: -11.251285552978516
    5. ' (' → logprob: -11.751285552978516
    6. '   ' → logprob: -12.626285552978516
    7. '{x' → logprob: -13.251285552978516
    8. '
' → logprob: -13.626285552978516
    9. ' ' → logprob: -13.751285552978516
    10. '_x' → logprob: -14.001285552978516

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004320996522437781
    2. '_' → logprob: -8.375432014465332
    3. '   ' → logprob: -9.500432014465332
    4. ' ' → logprob: -10.500432014465332
    5. '(' → logprob: -10.750432014465332
    6. '`' → logprob: -10.875432014465332
    7. '/' → logprob: -11.000432014465332
    8. ' /' → logprob: -12.000432014465332
    9. '    ' → logprob: -12.375432014465332
    10. '(x' → logprob: -12.375432014465332

Token 210: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.513849139213562
    2. '/A' → logprob: -1.263849139213562
    3. '/' → logprob: -2.7638492584228516
    4. '/B' → logprob: -3.0138492584228516
    5. ')' → logprob: -5.888849258422852
    6. '   ' → logprob: -6.263849258422852
    7. '    ' → logprob: -7.013849258422852
    8. ' ' → logprob: -8.138849258422852
    9. ')/' → logprob: -8.263849258422852
    10. 'div' → logprob: -8.888849258422852

Token 211: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00033558503491804004
    2. ' A' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.125335693359375
    4. ')' → logprob: -17.375335693359375
    5. ' ' → logprob: -17.500335693359375
    6. '	A' → logprob: -17.875335693359375
    7. '<|end|>' → logprob: -18.625335693359375
    8. '  ' → logprob: -19.125335693359375
    9. '
' → logprob: -19.750335693359375
    10. '>A' → logprob: -20.625335693359375

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009700733236968517
    2. ')
' → logprob: -5.009700775146484
    3. ' )' → logprob: -5.884700775146484
    4. ' )
' → logprob: -9.134700775146484
    5. '),' → logprob: -10.009700775146484
    6. '   ' → logprob: -11.259700775146484
    7. ')
' → logprob: -11.384700775146484
    8. ')

' → logprob: -11.884700775146484
    9. ' if' → logprob: -12.009700775146484
    10. ')\' → logprob: -13.009700775146484

Token 213: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33416882157325745
    2. ' if' → logprob: -2.5841689109802246
    3. '
' → logprob: -2.8341689109802246
    4. '    
' → logprob: -3.4591689109802246
    5. ' and' → logprob: -3.4591689109802246
    6. ',' → logprob: -3.5841689109802246
    7. '\n' → logprob: -3.7091689109802246
    8. '  
' → logprob: -4.959168910980225
    9. ' 
' → logprob: -5.334168910980225
    10. '<|end|>' → logprob: -5.334168910980225

Token 214: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5961306095123291
    2. ' k' → logprob: -0.8461306095123291
    3. ' ' → logprob: -4.72113037109375
    4. ' floor' → logprob: -6.09613037109375
    5. ' min' → logprob: -6.47113037109375
    6. 'floor' → logprob: -6.47113037109375
    7. '  ' → logprob: -6.59613037109375
    8. '   ' → logprob: -6.72113037109375
    9. '"' → logprob: -6.72113037109375
    10. 'min' → logprob: -7.34613037109375

Token 215: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.033223628997802734
    2. '<=' → logprob: -3.5332236289978027
    3. ' >=' → logprob: -5.783223628997803
    4. '>=' → logprob: -9.033224105834961
    5. '   ' → logprob: -9.408224105834961
    6. ' ' → logprob: -9.658224105834961
    7. ' ≤' → logprob: -10.408224105834961
    8. '[' → logprob: -10.908224105834961
    9. ' =' → logprob: -10.908224105834961
    10. '  ' → logprob: -11.158224105834961

Token 216: ' floor' (ID: 8350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.2652720808982849
    2. ' y' → logprob: -2.1402721405029297
    3. 'y' → logprob: -2.5152721405029297
    4. ' (' → logprob: -3.5152721405029297
    5. '(int' → logprob: -6.01527214050293
    6. '(' → logprob: -6.51527214050293
    7. 'int' → logprob: -7.51527214050293
    8. ' int' → logprob: -8.26527214050293
    9. '(B' → logprob: -10.89027214050293
    10. ' ' → logprob: -11.01527214050293

Token 217: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.07443175464868546
    2. '((' → logprob: -2.9494316577911377
    3. '(' → logprob: -3.9494316577911377
    4. 'y' → logprob: -9.824431419372559
    5. ' (' → logprob: -10.699431419372559
    6. '((-' → logprob: -11.824431419372559
    7. '(x' → logprob: -12.949431419372559
    8. '(-' → logprob: -13.199431419372559
    9. ' y' → logprob: -13.449431419372559
    10. '(
' → logprob: -13.574431419372559

Token 218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4617256056226324e-05
    2. '_' → logprob: -12.125014305114746
    3. ' ' → logprob: -12.375014305114746
    4. '
' → logprob: -13.500014305114746
    5. '```' → logprob: -14.437514305114746
    6. '۰' → logprob: -14.500014305114746
    7. '(' → logprob: -15.000014305114746
    8. '[' → logprob: -15.312514305114746
    9. ',' → logprob: -15.500014305114746
    10. ')' → logprob: -15.687514305114746

Token 219: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5232404470443726
    2. ' /' → logprob: -0.8982404470443726
    3. ')' → logprob: -9.773240089416504
    4. '/B' → logprob: -10.898240089416504
    5. 'div' → logprob: -11.273240089416504
    6. ' ' → logprob: -11.523240089416504
    7. '0' → logprob: -11.773240089416504
    8. ')/' → logprob: -13.273240089416504
    9. '/
' → logprob: -13.523240089416504
    10. ' ' → logprob: -13.773240089416504

Token 220: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.033650998026132584
    2. ' B' → logprob: -3.408651113510132
    3. ' ' → logprob: -13.033651351928711
    4. '   ' → logprob: -13.658651351928711
    5. ')' → logprob: -14.408651351928711
    6. '	B' → logprob: -15.408651351928711
    7. '  ' → logprob: -15.533651351928711
    8. '`' → logprob: -15.533651351928711
    9. '>B' → logprob: -15.783651351928711
    10. '```' → logprob: -16.03365135192871

Token 221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014634808525443077
    2. ')
' → logprob: -4.264634609222412
    3. '   ' → logprob: -7.764634609222412
    4. ' )' → logprob: -11.01463508605957
    5. ')
' → logprob: -11.38963508605957
    6. ')

' → logprob: -11.51463508605957
    7. ')\' → logprob: -13.26463508605957
    8. ' )
' → logprob: -13.38963508605957
    9. '")' → logprob: -14.38963508605957
    10. '')' → logprob: -14.51463508605957

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09646259248256683
    2. '    
' → logprob: -3.8464624881744385
    3. 'import' → logprob: -4.096462726593018
    4. '
' → logprob: -4.221462726593018
    5. '<|end|>' → logprob: -4.721462726593018
    6. 'from' → logprob: -4.971462726593018
    7. '  
' → logprob: -4.971462726593018
    8. '\n' → logprob: -5.346462726593018
    9. ' from' → logprob: -6.096462726593018
    10. '  ' → logprob: -6.596462726593018

Token 223: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28274786472320557
    2. 'import' → logprob: -1.7827478647232056
    3. 'from' (adapté à ' from') → logprob: -3.157747745513916
    4. ' from' → logprob: -4.657747745513916
    5. ' if' → logprob: -4.907747745513916
    6. '    
' → logprob: -5.282747745513916
    7. 'if' → logprob: -5.532747745513916
    8. ' import' → logprob: -5.907747745513916
    9. 'k' → logprob: -6.032747745513916
    10. ' k' → logprob: -6.032747745513916

Token 224: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2519296407699585
    2. ' math' → logprob: -1.5019296407699585
    3. '_math' → logprob: -15.12692928314209
    4. '(math' → logprob: -15.25192928314209
    5. '.math' → logprob: -16.501930236816406
    6. 'cmath' → logprob: -18.751930236816406
    7. '   ' → logprob: -19.501930236816406
    8. ' ' → logprob: -19.626930236816406
    9. '_' → logprob: -21.001930236816406
    10. 'Math' → logprob: -21.376930236816406

Token 225: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0036620718892663717
    2. 'import' → logprob: -5.628662109375
    3. '	import' → logprob: -10.128662109375
    4. ' ' → logprob: -11.253662109375
    5. '<|end|>' → logprob: -12.628662109375
    6. '.' → logprob: -13.003662109375
    7. ' .' → logprob: -13.378662109375
    8. ' importar' → logprob: -14.378662109375
    9. '<|end|>' → logprob: -15.253662109375
    10. ' imports' → logprob: -15.253662109375

Token 226: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.00014072739577386528
    2. ' ceil' → logprob: -9.375141143798828
    3. '.ceil' → logprob: -10.250141143798828
    4. 'import' → logprob: -11.000141143798828
    5. 'ce' → logprob: -12.625141143798828
    6. 'cel' → logprob: -14.625141143798828
    7. 'floor' → logprob: -17.250141143798828
    8. '_ce' → logprob: -18.000141143798828
    9. '```' → logprob: -18.375141143798828
    10. 'Ce' → logprob: -19.250141143798828

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05353175103664398
    2. 'from' → logprob: -3.6785316467285156
    3. ',f' → logprob: -4.428531646728516
    4. ' from' → logprob: -5.178531646728516
    5. ' ,' → logprob: -5.428531646728516
    6. ' floor' → logprob: -6.178531646728516
    7. '<|end|>' → logprob: -6.678531646728516
    8. 'floor' → logprob: -7.053531646728516
    9. ' ' → logprob: -8.678531646728516
    10. '   ' → logprob: -8.803531646728516

Token 228: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.4740813970565796
    2. 'floor' → logprob: -0.9740813970565796
    3. ' ' → logprob: -13.224081039428711
    4. '_floor' → logprob: -13.474081039428711
    5. 'flo' → logprob: -14.724081039428711
    6. '```' → logprob: -14.974081039428711
    7. '.floor' → logprob: -15.599081039428711
    8. 'fabs' → logprob: -16.22408103942871
    9. 'f' → logprob: -16.72408103942871
    10. '<|end|>' → logprob: -17.47408103942871

Token 229: '
' (ID: 198)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6622282266616821
    2. '   ' → logprob: -1.1622282266616821
    3. '
' → logprob: -2.0372281074523926
    4. '<|end|>' → logprob: -3.7872281074523926
    5. '  
' → logprob: -4.787228107452393
    6. '   
' → logprob: -5.662228107452393
    7. '<|end|>' → logprob: -6.162228107452393
    8. '    ' → logprob: -6.787228107452393
    9. ' 
' → logprob: -7.037228107452393
    10. ',' → logprob: -7.412228107452393

Token 230: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21049487590789795
    2. '<|end|>' → logprob: -2.7104949951171875
    3. '    
' → logprob: -2.8354949951171875
    4. '   ' → logprob: -3.0854949951171875
    5. '  
' → logprob: -5.3354949951171875
    6. '<|end|>' → logprob: -5.4604949951171875
    7. ' 
' → logprob: -5.9604949951171875
    8. '    ' → logprob: -6.5854949951171875
    9. ',' → logprob: -6.9604949951171875
    10. '   
' → logprob: -7.3354949951171875

Token 231: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.011140252463519573
    2. 'low' → logprob: -5.2611403465271
    3. 'lower' → logprob: -6.5111403465271
    4. '   ' → logprob: -6.6361403465271
    5. 'min' → logprob: -6.6361403465271
    6. 'kl' → logprob: -6.8861403465271
    7. 'if' → logprob: -8.261139869689941
    8. 'lo' → logprob: -8.511139869689941
    9. 'left' → logprob: -8.636139869689941
    10. 'start' → logprob: -10.011139869689941

Token 232: '_min' (ID: 15950)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014658546075224876
    2. '=' → logprob: -4.264658451080322
    3. '_' → logprob: -8.13965892791748
    4. ' ' → logprob: -9.76465892791748
    5. '_space' → logprob: -9.88965892791748
    6. ' >=' → logprob: -10.51465892791748
    7. 'space' → logprob: -11.01465892791748
    8. ' _' → logprob: -11.26465892791748
    9. 's' → logprob: -11.76465892791748
    10. ',' → logprob: -12.38965892791748

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007608635816723108
    2. '=' → logprob: -4.882608413696289
    3. ',' → logprob: -13.632608413696289
    4. ' =
' → logprob: -14.382608413696289
    5. ' ' → logprob: -14.632608413696289
    6. ')' → logprob: -16.63260841369629
    7. ' ,' → logprob: -16.75760841369629
    8. ' =)' → logprob: -16.88260841369629
    9. ' ' → logprob: -17.88260841369629
    10. ' =
' → logprob: -18.88260841369629

Token 234: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.013060344383120537
    2. ' ceil' → logprob: -4.388060569763184
    3. 'int' → logprob: -8.513060569763184
    4. ' ' → logprob: -9.263060569763184
    5. '(' → logprob: -9.638060569763184
    6. '0' → logprob: -10.263060569763184
    7. ' int' → logprob: -10.388060569763184
    8. '-ce' → logprob: -10.513060569763184
    9. '.ceil' → logprob: -10.888060569763184
    10. 'ce' → logprob: -10.888060569763184

Token 235: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.10120682418346405
    2. '((-' → logprob: -2.3512067794799805
    3. '(' → logprob: -7.6012067794799805
    4. '((' → logprob: -7.7262067794799805
    5. '(-(' → logprob: -9.97620677947998
    6. '   ' → logprob: -11.72620677947998
    7. ' (-' → logprob: -13.60120677947998
    8. '(float' → logprob: -14.22620677947998
    9. ' (' → logprob: -14.47620677947998
    10. '  ' → logprob: -14.85120677947998

Token 236: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.988221684878226e-06
    2. ' x' → logprob: -11.875006675720215
    3. '(x' → logprob: -17.25000762939453
    4. '_x' → logprob: -19.25000762939453
    5. '{x' → logprob: -19.37500762939453
    6. ')x' → logprob: -19.50000762939453
    7. '	x' → logprob: -19.50000762939453
    8. '"x' → logprob: -19.87500762939453
    9. '
' → logprob: -20.37500762939453
    10. '   ' → logprob: -20.50000762939453

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.749814019713085e-06
    2. '_' → logprob: -12.125006675720215
    3. ' ' → logprob: -14.250006675720215
    4. ' _' → logprob: -14.750006675720215
    5. '[' → logprob: -16.12500762939453
    6. '۰' → logprob: -16.87500762939453
    7. ' /' → logprob: -17.00000762939453
    8. '```' → logprob: -17.12500762939453
    9. ')' → logprob: -17.62500762939453
    10. '\xe2\x82' → logprob: -17.75000762939453

Token 238: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.03420814871788025
    2. '/' → logprob: -3.409208059310913
    3. '/A' → logprob: -7.534208297729492
    4. ')' → logprob: -11.034208297729492
    5. ' /
' → logprob: -12.409208297729492
    6. '/B' → logprob: -13.409208297729492
    7. ' ' → logprob: -13.659208297729492
    8. '   ' → logprob: -13.909208297729492
    9. 'A' → logprob: -13.909208297729492
    10. '/
' → logprob: -14.034208297729492

Token 239: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4740842282772064
    2. 'A' → logprob: -0.9740842580795288
    3. ' ' → logprob: -12.09908390045166
    4. ')' → logprob: -14.09908390045166
    5. '	A' → logprob: -14.97408390045166
    6. '   ' → logprob: -15.72408390045166
    7. ' (' → logprob: -16.474084854125977
    8. ' А' → logprob: -16.474084854125977
    9. ' 
' → logprob: -16.849084854125977
    10. ' )' → logprob: -16.974084854125977

Token 240: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06203535199165344
    2. ')
' → logprob: -2.812035322189331
    3. ')
' → logprob: -9.68703556060791
    4. ')

' → logprob: -12.68703556060791
    5. ' )' → logprob: -13.31203556060791
    6. ' )
' → logprob: -14.31203556060791
    7. '),' → logprob: -16.187034606933594
    8. '   ' → logprob: -16.187034606933594
    9. ' if' → logprob: -17.687034606933594
    10. ')\' → logprob: -17.937034606933594

Token 241: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23519155383110046
    2. '
' → logprob: -1.8601915836334229
    3. '    
' → logprob: -2.985191583633423
    4. ',' → logprob: -6.735191345214844
    5. '<|end|>' → logprob: -7.735191345214844
    6. '	
' → logprob: -7.985191345214844
    7. 'k' → logprob: -7.985191345214844
    8. '   
' → logprob: -8.235191345214844
    9. '  
' → logprob: -8.235191345214844
    10. ' 
' → logprob: -8.485191345214844

Token 242: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00043102685594931245
    2. ' A' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.125431060791016
    4. ' ' → logprob: -17.375431060791016
    5. '	A' → logprob: -17.875431060791016
    6. '  ' → logprob: -19.250431060791016
    7. 'А' → logprob: -20.000431060791016
    8. 'a' → logprob: -20.125431060791016
    9. '>A' → logprob: -20.250431060791016
    10. '    ' → logprob: -20.875431060791016

Token 243: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.40430164337158203
    2. '>' → logprob: -1.279301643371582
    3. ' !=' → logprob: -3.029301643371582
    4. ' >' → logprob: -5.154301643371582
    5. 'else' → logprob: -9.279301643371582
    6. ' else' → logprob: -10.404301643371582
    7. '0' → logprob: -11.654301643371582
    8. '!' → logprob: -11.654301643371582
    9. '">' → logprob: -11.779301643371582
    10. ')!=' → logprob: -11.904301643371582

Token 244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '۰' → logprob: -19.750123977661133
    4. '   ' → logprob: -20.250123977661133
    5. '  ' → logprob: -21.125123977661133
    6. '=' → logprob: -21.375123977661133
    7. '```' → logprob: -21.500123977661133
    8. '０' → logprob: -21.875123977661133
    9. '
' → logprob: -22.250123977661133
    10. '    ' → logprob: -22.375123977661133

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -19.375017166137695
    4. '   ' → logprob: -19.750017166137695
    5. '```' → logprob: -20.125017166137695
    6. '00' → logprob: -21.000017166137695
    7. '=' → logprob: -21.125017166137695
    8. '
' → logprob: -21.125017166137695
    9. '  ' → logprob: -21.375017166137695
    10. '０' → logprob: -21.500017166137695

Token 246: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0028060602489858866
    2. 'else' → logprob: -5.877806186676025
    3. '	else' → logprob: -13.752805709838867
    4. ' ' → logprob: -16.252805709838867
    5. '_else' → logprob: -18.002805709838867
    6. ' ' → logprob: -18.752805709838867
    7. '    ' → logprob: -19.377805709838867
    8. '<|end|>' → logprob: -19.627805709838867
    9. '-' → logprob: -20.377805709838867
    10. '   ' → logprob: -20.752805709838867

Token 247: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27944985032081604
    2. 'float' → logprob: -2.654449939727783
    3. ' float' → logprob: -2.654449939727783
    4. ' ' → logprob: -3.154449939727783
    5. ' -' → logprob: -3.404449939727783
    6. '-' → logprob: -4.279449939727783
    7. '-f' → logprob: -4.529449939727783
    8. '-inf' → logprob: -6.779449939727783
    9. 'None' → logprob: -7.904449939727783
    10. '(float' → logprob: -8.529449462890625

Token 248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11923681199550629
    2. 'float' → logprob: -2.369236707687378
    3. '-' → logprob: -4.494236946105957
    4. '-f' → logprob: -6.119236946105957
    5. ' float' → logprob: -6.369236946105957
    6. '-inf' → logprob: -6.619236946105957
    7. ' -' → logprob: -7.244236946105957
    8. '(float' → logprob: -7.494236946105957
    9. ' ' → logprob: -7.619236946105957
    10. 'None' → logprob: -8.869236946105957

Token 249: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6834432482719421
    2. '
' → logprob: -0.9334432482719421
    3. '<|end|>' → logprob: -2.433443307876587
    4. 'k' → logprob: -4.933443069458008
    5. '    
' → logprob: -5.683443069458008
    6. '<|end|>' → logprob: -6.933443069458008
    7. ',' → logprob: -7.433443069458008
    8. '\n' → logprob: -7.683443069458008
    9. ')' → logprob: -7.933443069458008
    10. '  
' → logprob: -8.058443069458008

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010421930812299252
    2. '
' → logprob: -5.1354217529296875
    3. '    
' → logprob: -5.8854217529296875
    4. 'k' → logprob: -7.5104217529296875
    5. ',' → logprob: -7.6354217529296875
    6. '<|end|>' → logprob: -8.510421752929688
    7. ' k' → logprob: -8.885421752929688
    8. '```' → logprob: -9.135421752929688
    9. ' 
' → logprob: -9.885421752929688
    10. ',
' → logprob: -10.135421752929688

Token 251: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.002856232225894928
    2. ' k' → logprob: -6.002856254577637
    3. '   ' → logprob: -7.877856254577637
    4. '	k' → logprob: -15.002856254577637
    5. '```' → logprob: -15.127856254577637
    6. '  ' → logprob: -15.377856254577637
    7. '    ' → logprob: -15.752856254577637
    8. ' ' → logprob: -16.12785530090332
    9. ',' → logprob: -16.37785530090332
    10. '
' → logprob: -16.75285530090332

Token 252: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0003663212701212615
    2. 'max' → logprob: -8.8753662109375
    3. '_' → logprob: -9.1253662109375
    4. '_min' → logprob: -9.2503662109375
    5. '=' → logprob: -11.2503662109375
    6. ' =' → logprob: -12.7503662109375
    7. '_MAX' → logprob: -13.0003662109375
    8. ' _' → logprob: -13.5003662109375
    9. 'Max' → logprob: -14.5003662109375
    10. '=_' → logprob: -14.7503662109375

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245595395565033
    2. '=' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.898244857788086
    4. ' =
' → logprob: -17.898244857788086
    5. '＝' → logprob: -19.898244857788086
    6. '=f' → logprob: -19.898244857788086
    7. ' =)' → logprob: -19.898244857788086
    8. ',' → logprob: -20.273244857788086
    9. '=}' → logprob: -20.398244857788086
    10. ')' → logprob: -20.398244857788086

Token 254: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.3868769407272339
    2. ' floor' → logprob: -1.1368769407272339
    3. ' ' → logprob: -12.761877059936523
    4. 'flo' → logprob: -13.636877059936523
    5. '_floor' → logprob: -14.511877059936523
    6. '  ' → logprob: -14.886877059936523
    7. '   ' → logprob: -14.886877059936523
    8. '.floor' → logprob: -15.636877059936523
    9. 'f' → logprob: -16.136877059936523
    10. ' flo' → logprob: -16.136877059936523

Token 255: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -4.1318875446449965e-05
    2. '(' → logprob: -10.125041007995605
    3. 'y' → logprob: -14.000041007995605
    4. ' (' → logprob: -15.500041007995605
    5. '((' → logprob: -16.750041961669922
    6. ' y' → logprob: -18.375041961669922
    7. '(
' → logprob: -19.500041961669922
    8. '	y' → logprob: -20.125041961669922
    9. ',y' → logprob: -20.875041961669922
    10. '```' → logprob: -21.375041961669922

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. 'o' → logprob: -13.87500286102295
    3. ' ' → logprob: -14.12500286102295
    4. '۰' → logprob: -15.37500286102295
    5. '_' → logprob: -16.437501907348633
    6. '
' → logprob: -16.500001907348633
    7. 'y' → logprob: -16.750001907348633
    8. '```' → logprob: -17.000001907348633
    9. 'O' → logprob: -17.062501907348633
    10. ' y' → logprob: -17.437501907348633

Token 257: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.47407975792884827
    2. '/' → logprob: -0.9740797281265259
    3. '/B' → logprob: -13.349080085754395
    4. ' ' → logprob: -14.599080085754395
    5. ')' → logprob: -15.349080085754395
    6. ' ' → logprob: -15.474080085754395
    7. ' /
' → logprob: -16.224079132080078
    8. '/k' → logprob: -17.099079132080078
    9. '/b' → logprob: -17.099079132080078
    10. '/
' → logprob: -17.349079132080078

Token 258: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06993821263313293
    2. ' B' → logprob: -2.6949381828308105
    3. ' ' → logprob: -13.819938659667969
    4. '   ' → logprob: -14.569938659667969
    5. ')' → logprob: -16.56993865966797
    6. '>B' → logprob: -16.56993865966797
    7. '	B' → logprob: -16.81993865966797
    8. '  ' → logprob: -16.94493865966797
    9. '(B' → logprob: -17.19493865966797
    10. '(' → logprob: -17.56993865966797

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3676733690081164e-05
    2. ' if' → logprob: -11.25002384185791
    3. ' )' → logprob: -11.75002384185791
    4. 'if' → logprob: -13.00002384185791
    5. '   ' → logprob: -15.00002384185791
    6. ')
' → logprob: -16.125022888183594
    7. '}' → logprob: -17.625022888183594
    8. ' ' → logprob: -17.875022888183594
    9. '')' → logprob: -17.875022888183594
    10. ')

' → logprob: -18.375022888183594

Token 260: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07002068310976028
    2. 'if' → logprob: -2.6950206756591797
    3. '<|end|>' → logprob: -10.07002067565918
    4. '   ' → logprob: -10.44502067565918
    5. ' ' → logprob: -11.69502067565918
    6. '    ' → logprob: -13.69502067565918
    7. '<|end|>' → logprob: -13.82002067565918
    8. '	if' → logprob: -13.82002067565918
    9. '  ' → logprob: -14.19502067565918
    10. ')' → logprob: -15.32002067565918

Token 261: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.313262403011322
    2. ' B' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.313261985778809
    4. '   ' → logprob: -15.563261985778809
    5. '	B' → logprob: -16.563262939453125
    6. '>B' → logprob: -16.813262939453125
    7. '  ' → logprob: -16.938262939453125
    8. '(B' → logprob: -17.563262939453125
    9. '(' → logprob: -18.813262939453125
    10. '    ' → logprob: -18.938262939453125

Token 262: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.38689661026000977
    2. ' !=' → logprob: -1.1368966102600098
    3. '>' → logprob: -11.011896133422852
    4. ')!=' → logprob: -12.636896133422852
    5. '()!=' → logprob: -13.636896133422852
    6. '```' → logprob: -13.761896133422852
    7. '!=-' → logprob: -14.386896133422852
    8. ' ' → logprob: -14.386896133422852
    9. '!' → logprob: -14.636896133422852
    10. ' ' → logprob: -14.886896133422852

Token 263: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000627014203928411
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.500626564025879
    4. '!=' → logprob: -16.375627517700195
    5. '>' → logprob: -16.875627517700195
    6. '```' → logprob: -17.000627517700195
    7. '
' → logprob: -17.375627517700195
    8. '=' → logprob: -17.625627517700195
    9. '۰' → logprob: -18.125627517700195
    10. 'not' → logprob: -18.250627517700195

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.500085830688477
    4. '```' → logprob: -16.250085830688477
    5. '!=' → logprob: -16.625085830688477
    6. '>' → logprob: -17.500085830688477
    7. '  ' → logprob: -18.125085830688477
    8. '
' → logprob: -18.125085830688477
    9. '=' → logprob: -18.125085830688477
    10. '``' → logprob: -18.375085830688477

Token 265: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08915495127439499
    2. ' else' → logprob: -2.4641549587249756
    3. '!=' → logprob: -8.589155197143555
    4. ' is' → logprob: -11.214155197143555
    5. ' !=' → logprob: -11.964155197143555
    6. '>=' → logprob: -12.589155197143555
    7. ' ' → logprob: -13.339155197143555
    8. '   ' → logprob: -14.214155197143555
    9. '<|end|>' → logprob: -14.214155197143555
    10. '	else' → logprob: -14.464155197143555

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006784808938391507
    2. '10' → logprob: -8.125678062438965
    3. ' ' → logprob: -8.375678062438965
    4. 'float' → logprob: -9.000678062438965
    5. '1' → logprob: -11.250678062438965
    6. '100' → logprob: -11.875678062438965
    7. 'sys' → logprob: -12.750678062438965
    8. 'y' → logprob: -13.500678062438965
    9. '999' → logprob: -13.750678062438965
    10. 'k' → logprob: -14.125678062438965

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00100422790274024
    2. '10' → logprob: -7.251004219055176
    3. 'float' → logprob: -8.626004219055176
    4. ' ' → logprob: -9.626004219055176
    5. 'k' → logprob: -11.126004219055176
    6. '1' → logprob: -11.126004219055176
    7. 'sys' → logprob: -12.126004219055176
    8. 'y' → logprob: -12.251004219055176
    9. '100' → logprob: -12.751004219055176
    10. '999' → logprob: -13.251004219055176

Token 268: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013984614983201027
    2. '    
' → logprob: -5.138984680175781
    3. '<|end|>' → logprob: -5.263984680175781
    4. '
' → logprob: -6.013984680175781
    5. '<|end|>' → logprob: -9.263984680175781
    6. 'if' → logprob: -9.388984680175781
    7. ' if' → logprob: -10.013984680175781
    8. 'for' → logprob: -10.513984680175781
    9. ',' → logprob: -10.513984680175781
    10. '  
' → logprob: -10.763984680175781

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019666191190481186
    2. 'if' → logprob: -4.5196661949157715
    3. '<|end|>' → logprob: -5.7696661949157715
    4. ' if' → logprob: -6.0196661949157715
    5. '    
' → logprob: -6.1446661949157715
    6. '
' → logprob: -8.394665718078613
    7. 'for' → logprob: -8.644665718078613
    8. ',' → logprob: -9.144665718078613
    9. ':' → logprob: -9.269665718078613
    10. ' for' → logprob: -9.519665718078613

Token 270: ' best' (ID: 1636)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004798918962478638
    2. '   ' → logprob: -5.379798889160156
    3. ' if' → logprob: -8.879798889160156
    4. 'possible' → logprob: -10.754798889160156
    5. 'for' → logprob: -11.879798889160156
    6. '    
' → logprob: -12.379798889160156
    7. 'valid' → logprob: -13.379798889160156
    8. 'found' → logprob: -13.504798889160156
    9. '```' → logprob: -13.754798889160156
    10. 'result' → logprob: -14.254798889160156

Token 271: '_x' (ID: 7054)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.05129043385386467
    2. '_' → logprob: -3.301290512084961
    3. ' =' → logprob: -5.426290512084961
    4. '_token' → logprob: -5.801290512084961
    5. '_count' → logprob: -6.426290512084961
    6. '_x' → logprob: -6.551290512084961
    7. '_value' → logprob: -6.926290512084961
    8. 'k' → logprob: -8.176290512084961
    9. '_val' → logprob: -8.301290512084961
    10. '=' → logprob: -8.801290512084961

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03326583281159401
    2. '=' → logprob: -3.5332658290863037
    3. ',' → logprob: -5.658266067504883
    4. '=None' → logprob: -11.908266067504883
    5. ' ' → logprob: -12.658266067504883
    6. ')' → logprob: -13.033266067504883
    7. '_' → logprob: -13.533266067504883
    8. 's' → logprob: -13.658266067504883
    9. ' ,' → logprob: -13.783266067504883
    10. '  ' → logprob: -14.158266067504883

Token 273: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00015860427811276168
    2. '0' → logprob: -9.500158309936523
    3. '-' → logprob: -9.875158309936523
    4. ' None' → logprob: -10.875158309936523
    5. 'float' → logprob: -11.625158309936523
    6. 'sys' → logprob: -13.000158309936523
    7. 'x' → logprob: -13.875158309936523
    8. '   ' → logprob: -15.000158309936523
    9. 'none' → logprob: -15.000158309936523
    10. 'max' → logprob: -16.000158309936523

Token 274: '
' (ID: 198)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.02693549171090126
    2. ' best' → logprob: -4.276935577392578
    3. '<|end|>' → logprob: -5.526935577392578
    4. '   ' → logprob: -5.776935577392578
    5. '	best' → logprob: -5.776935577392578
    6. 'for' → logprob: -7.526935577392578
    7. '_best' → logprob: -7.526935577392578
    8. 'k' → logprob: -7.526935577392578
    9. '
' → logprob: -8.401935577392578
    10. ',' → logprob: -8.901935577392578

Token 275: '   ' (ID: 271)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.08109762519598007
    2. ' best' → logprob: -3.2060976028442383
    3. '   ' → logprob: -3.4560976028442383
    4. '	best' → logprob: -5.581097602844238
    5. 'k' → logprob: -7.581097602844238
    6. '
' → logprob: -7.706097602844238
    7. '<|end|>' → logprob: -7.956097602844238
    8. '_best' → logprob: -8.331097602844238
    9. 'for' → logprob: -8.956097602844238
    10. '(best' → logprob: -9.331097602844238

Token 276: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.0033036700915545225
    2. ' best' → logprob: -6.253303527832031
    3. 'for' → logprob: -7.253303527832031
    4. '   ' → logprob: -8.128303527832031
    5. 'if' → logprob: -8.378303527832031
    6. 'min' → logprob: -9.253303527832031
    7. 'abs' → logprob: -11.628303527832031
    8. ' for' → logprob: -12.003303527832031
    9. '
' → logprob: -12.253303527832031
    10. '    
' → logprob: -12.378303527832031

Token 277: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.008325792849063873
    2. '_x' → logprob: -4.883325576782227
    3. '_k' → logprob: -7.508325576782227
    4. 'y' → logprob: -9.508325576782227
    5. '_' → logprob: -10.883325576782227
    6. ' =' → logprob: -11.008325576782227
    7. '=' → logprob: -11.758325576782227
    8. '_value' → logprob: -12.133325576782227
    9. 'k' → logprob: -12.508325576782227
    10. 'x' → logprob: -12.633325576782227

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10279922932386398
    2. ' =' → logprob: -2.3527991771698
    3. '=None' → logprob: -5.977799415588379
    4. '<|end|>' → logprob: -10.977799415588379
    5. '=
' → logprob: -11.477799415588379
    6. ',' → logprob: -11.602799415588379
    7. 'None' → logprob: -11.727799415588379
    8. ' ' → logprob: -12.977799415588379
    9. '=

' → logprob: -13.352799415588379
    10. '=}' → logprob: -13.477799415588379

Token 279: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -8.41866585687967e-06
    2. ' None' → logprob: -11.875008583068848
    3. '0' → logprob: -13.625008583068848
    4. '   ' → logprob: -16.50000762939453
    5. 'float' → logprob: -17.75000762939453
    6. 'none' → logprob: -18.12500762939453
    7. '_None' → logprob: -18.12500762939453
    8. '(None' → logprob: -18.25000762939453
    9. 'abs' → logprob: -18.87500762939453
    10. '=None' → logprob: -19.00000762939453

Token 280: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006753378547728062
    2. '<|end|>' → logprob: -6.006753444671631
    3. ' for' → logprob: -6.256753444671631
    4. 'for' → logprob: -6.881753444671631
    5. 'min' → logprob: -7.881753444671631
    6. '    
' → logprob: -8.256752967834473
    7. '
' → logprob: -9.381752967834473
    8. ' if' → logprob: -9.381752967834473
    9. 'k' → logprob: -9.506752967834473
    10. 'if' → logprob: -9.506752967834473

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008386960835196078
    2. 'if' → logprob: -8.125838279724121
    3. 'for' → logprob: -8.750838279724121
    4. ' for' → logprob: -9.125838279724121
    5. ' if' → logprob: -9.250838279724121
    6. 'k' → logprob: -10.000838279724121
    7. '    
' → logprob: -10.250838279724121
    8. 'min' → logprob: -10.250838279724121
    9. ' k' → logprob: -11.125838279724121
    10. '<|end|>' → logprob: -11.250838279724121

Token 282: ' best' (ID: 1636)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6117392182350159
    2. 'for' → logprob: -0.8617392182350159
    3. 'k' → logprob: -4.111739158630371
    4. '   ' → logprob: -4.861739158630371
    5. 'min' → logprob: -4.986739158630371
    6. ' for' → logprob: -6.861739158630371
    7. ' if' → logprob: -7.111739158630371
    8. 'best' (adapté à ' best') → logprob: -7.236739158630371
    9. 'i' → logprob: -7.486739158630371
    10. 'possible' → logprob: -7.861739158630371

Token 283: '_sum' (ID: 29859)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.6686667799949646
    2. '_sum' → logprob: -1.1686668395996094
    3. '_x' → logprob: -1.9186668395996094
    4. ' =' → logprob: -5.168666839599609
    5. 'k' → logprob: -5.543666839599609
    6. '_diff' → logprob: -5.543666839599609
    7. 'sum' → logprob: -5.793666839599609
    8. '=' → logprob: -5.918666839599609
    9. '_dist' → logprob: -5.918666839599609
    10. 'x' → logprob: -6.418666839599609

Token 284: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519416809082031
    2. ' =' → logprob: -1.5019416809082031
    3. '=float' → logprob: -12.501941680908203
    4. '=None' → logprob: -13.126941680908203
    5. 's' → logprob: -13.751941680908203
    6. '   ' → logprob: -14.001941680908203
    7. '=sys' → logprob: -14.626941680908203
    8. '=
' → logprob: -14.626941680908203
    9. 'x' → logprob: -14.751941680908203
    10. ' ' → logprob: -14.751941680908203

Token 285: ' None' (ID: 4662)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6933214664459229
    2. 'None' → logprob: -0.6933214664459229
    3. 'sys' → logprob: -8.943321228027344
    4. ' None' → logprob: -10.443321228027344
    5. 'abs' → logprob: -11.443321228027344
    6. ' float' → logprob: -12.818321228027344
    7. 'int' → logprob: -14.943321228027344
    8. '1' → logprob: -15.193321228027344
    9. '10' → logprob: -15.818321228027344
    10. '   ' → logprob: -16.193321228027344

Token 286: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1600595861673355
    2. '
' → logprob: -2.410059690475464
    3. 'for' → logprob: -3.660059690475464
    4. '    
' → logprob: -4.035059452056885
    5. ' for' → logprob: -5.035059452056885
    6. '<|end|>' → logprob: -5.035059452056885
    7. 'k' → logprob: -7.535059452056885
    8. '  
' → logprob: -8.035059928894043
    9. ',' → logprob: -8.660059928894043
    10. '<|end|>' → logprob: -9.035059928894043

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009154075756669044
    2. '    
' → logprob: -5.259153842926025
    3. ' for' → logprob: -6.259153842926025
    4. 'for' → logprob: -7.009153842926025
    5. '
' → logprob: -8.134154319763184
    6. '<|end|>' → logprob: -8.384154319763184
    7. '  
' → logprob: -9.134154319763184
    8. '    ' → logprob: -9.259154319763184
    9. '   
' → logprob: -9.509154319763184
    10. '  ' → logprob: -9.634154319763184

Token 288: ' best' (ID: 1636)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12842364609241486
    2. '   ' → logprob: -3.1284236907958984
    3. 'if' → logprob: -3.1284236907958984
    4. 'k' → logprob: -3.6284236907958984
    5. ' for' → logprob: -5.128423690795898
    6. '    
' → logprob: -8.753423690795898
    7. ' if' → logprob: -8.878423690795898
    8. 'i' → logprob: -9.378423690795898
    9. ' k' → logprob: -10.628423690795898
    10. 'possible' → logprob: -10.753423690795898

Token 289: '_mass' (ID: 98668)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.029471468180418015
    2. '_x' → logprob: -3.6544713973999023
    3. 'k' → logprob: -6.154471397399902
    4. '_' → logprob: -8.404471397399902
    5. ' =' → logprob: -8.654471397399902
    6. 'x' → logprob: -8.904471397399902
    7. '_token' → logprob: -9.654471397399902
    8. '_y' → logprob: -9.904471397399902
    9. '_value' → logprob: -10.279471397399902
    10. '_index' → logprob: -10.279471397399902

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012609724886715412
    2. ' =' → logprob: -4.387609958648682
    3. '=None' → logprob: -10.512609481811523
    4. 's' → logprob: -11.262609481811523
    5. '_index' → logprob: -11.387609481811523
    6. '_idx' → logprob: -11.512609481811523
    7. 'x' → logprob: -11.887609481811523
    8. '_x' → logprob: -12.262609481811523
    9. '=int' → logprob: -12.387609481811523
    10. 'es' → logprob: -12.637609481811523

Token 291: ' None' (ID: 4662)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4725419282913208
    2. 'abs' → logprob: -1.4725419282913208
    3. 'None' → logprob: -2.2225418090820312
    4. 'a' → logprob: -4.847541809082031
    5. '10' → logprob: -5.222541809082031
    6. '0' → logprob: -5.222541809082031
    7. 'x' → logprob: -5.222541809082031
    8. 'sys' → logprob: -5.972541809082031
    9. 'best' → logprob: -6.097541809082031
    10. '1' → logprob: -6.347541809082031

Token 292: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5197848081588745
    2. '
' → logprob: -1.0197848081588745
    3. 'for' → logprob: -4.144784927368164
    4. '    
' → logprob: -4.144784927368164
    5. ' for' → logprob: -4.644784927368164
    6. '<|end|>' → logprob: -6.519784927368164
    7. '  
' → logprob: -8.019784927368164
    8. ' 
' → logprob: -8.144784927368164
    9. '
' → logprob: -8.394784927368164
    10. '    ' → logprob: -8.644784927368164

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26943135261535645
    2. ' for' → logprob: -1.7694313526153564
    3. 'for' → logprob: -2.8944313526153564
    4. '    
' → logprob: -5.144431114196777
    5. ' 
' → logprob: -6.644431114196777
    6. '
' → logprob: -6.894431114196777
    7. ' if' → logprob: -7.394431114196777
    8. 'k' → logprob: -7.769431114196777
    9. 'if' → logprob: -8.019431114196777
    10. ' k' → logprob: -8.394431114196777

Token 294: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06378072500228882
    2. 'if' → logprob: -3.4387807846069336
    3. 'k' → logprob: -3.6887807846069336
    4. ' for' → logprob: -5.813780784606934
    5. '   ' → logprob: -7.188780784606934
    6. 'possible' → logprob: -7.563780784606934
    7. 'c' → logprob: -8.938780784606934
    8. ' if' → logprob: -9.313780784606934
    9. '
' → logprob: -10.438780784606934
    10. 'i' → logprob: -10.438780784606934

Token 295: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4287380874156952
    2. ' k' → logprob: -1.0537381172180176
    3. '_k' → logprob: -10.42873764038086
    4. ' ' → logprob: -12.92873764038086
    5. '	k' → logprob: -13.42873764038086
    6. '_' → logprob: -14.05373764038086
    7. '```' → logprob: -14.17873764038086
    8. '   ' → logprob: -14.55373764038086
    9. '[k' → logprob: -14.67873764038086
    10. ' _' → logprob: -15.67873764038086

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020561274141073227
    2. 'in' → logprob: -3.8955612182617188
    3. ' ' → logprob: -11.145561218261719
    4. '	in' → logprob: -13.770561218261719
    5. '_in' → logprob: -14.270561218261719
    6. '_' → logprob: -14.520561218261719
    7. 'space' → logprob: -14.520561218261719
    8. 'n' → logprob: -14.895561218261719
    9. 's' → logprob: -15.270561218261719
    10. 'k' → logprob: -15.520561218261719

Token 297: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615515194833279
    2. ' range' → logprob: -4.758615493774414
    3. '(range' → logprob: -14.258615493774414
    4. 'k' → logprob: -16.258615493774414
    5. '	range' → logprob: -16.883615493774414
    6. '[' → logprob: -17.383615493774414
    7. 'rang' → logprob: -17.758615493774414
    8. ' ' → logprob: -18.008615493774414
    9. '   ' → logprob: -18.008615493774414
    10. ' xrange' → logprob: -18.633615493774414

Token 298: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'k' → logprob: -17.25
    4. '(int' → logprob: -18.0
    5. '((' → logprob: -19.875
    6. '(
' → logprob: -20.25
    7. '(max' → logprob: -20.625
    8. '(-' → logprob: -21.0
    9. '{k' → logprob: -21.375
    10. '[k' → logprob: -21.75

Token 299: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -8.220573363360018e-05
    2. '_max' → logprob: -9.500082015991211
    3. 'min' → logprob: -12.250082015991211
    4. '_k' → logprob: -13.250082015991211
    5. '_m' → logprob: -15.250082015991211
    6. 'k' → logprob: -16.12508201599121
    7. '_MIN' → logprob: -16.37508201599121
    8. '[k' → logprob: -17.00008201599121
    9. '[min' → logprob: -17.00008201599121
    10. ')' → logprob: -17.12508201599121

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003818140830844641
    2. ' ,' → logprob: -7.875381946563721
    3. ',k' → logprob: -13.500381469726562
    4. ',
' → logprob: -15.375381469726562
    5. '   ' → logprob: -16.875381469726562
    6. '_,' → logprob: -17.000381469726562
    7. 'k' → logprob: -18.875381469726562
    8. ',

' → logprob: -19.125381469726562
    9. ',b' → logprob: -19.125381469726562
    10. '‌,' → logprob: -19.125381469726562

Token 301: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.7968066206085496e-05
    2. ' k' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.000027656555176
    4. '(k' → logprob: -17.625028610229492
    5. ' ' → logprob: -19.875028610229492
    6. '{k' → logprob: -19.875028610229492
    7. '	k' → logprob: -20.000028610229492
    8. '       ' → logprob: -21.125028610229492
    9. '                   ' → logprob: -21.375028610229492
    10. '  ' → logprob: -21.375028610229492

Token 302: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.1756367712223437e-05
    2. 'max' → logprob: -11.375011444091797
    3. '+' → logprob: -16.125011444091797
    4. '_min' → logprob: -17.625011444091797
    5. '_' → logprob: -17.875011444091797
    6. '_MAX' → logprob: -18.875011444091797
    7. ' +' → logprob: -19.875011444091797
    8. 'Max' → logprob: -20.125011444091797
    9. ' max' → logprob: -20.500011444091797
    10. ' _' → logprob: -20.750011444091797

Token 303: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740782678127289
    2. '+' → logprob: -0.9740782976150513
    3. '   ' → logprob: -13.724078178405762
    4. ' ' → logprob: -17.349079132080078
    5. '()+' → logprob: -17.349079132080078
    6. ' ' → logprob: -17.474079132080078
    7. ' +
' → logprob: -17.599079132080078
    8. '+
' → logprob: -18.099079132080078
    9. '＋' → logprob: -18.349079132080078
    10. ')' → logprob: -18.599079132080078

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.62500762939453
    4. '```' → logprob: -19.62500762939453
    5. '  ' → logprob: -21.87500762939453
    6. ')' → logprob: -22.00000762939453
    7. '(' → logprob: -22.00000762939453
    8. '
' → logprob: -22.37500762939453
    9. '):
' → logprob: -23.50000762939453
    10. '１' → logprob: -23.75000762939453

Token 305: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04864584282040596
    2. '):
' → logprob: -3.0486457347869873
    3. '):
' → logprob: -10.548645973205566
    4. ':' → logprob: -10.798645973205566
    5. '   ' → logprob: -11.548645973205566
    6. ')' → logprob: -13.923645973205566
    7. ' ):' → logprob: -14.673645973205566
    8. '**' → logprob: -15.673645973205566
    9. '):

' → logprob: -15.798645973205566
    10. '       ' → logprob: -16.04864501953125

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008928788010962307
    2. '    ' → logprob: -8.250892639160156
    3. '   ' → logprob: -8.625892639160156
    4. '<|end|>' → logprob: -8.625892639160156
    5. '        
' → logprob: -9.000892639160156
    6. ',' → logprob: -10.000892639160156
    7. '        ' → logprob: -11.000892639160156
    8. ' x' → logprob: -11.125892639160156
    9. '     ' → logprob: -11.375892639160156
    10. ' ' → logprob: -11.500892639160156

Token 307: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09706935286521912
    2. '       ' → logprob: -2.597069263458252
    3. 'x' (adapté à ' x') → logprob: -4.097069263458252
    4. '        ' → logprob: -6.972069263458252
    5. '        
' → logprob: -8.97206974029541
    6. '           ' → logprob: -9.59706974029541
    7. ',' → logprob: -9.97206974029541
    8. ' ' → logprob: -10.22206974029541
    9. ' ' → logprob: -10.47206974029541
    10. '   ' → logprob: -10.59706974029541

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934396624565125
    2. ' =' → logprob: -0.6934396624565125
    3. '_' → logprob: -9.568439483642578
    4. '   ' → logprob: -9.818439483642578
    5. ',' → logprob: -9.943439483642578
    6. '_val' → logprob: -10.193439483642578
    7. '_candidate' → logprob: -10.568439483642578
    8. 'k' → logprob: -10.943439483642578
    9. '    ' → logprob: -12.068439483642578
    10. '_new' → logprob: -12.693439483642578

Token 309: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06200442835688591
    2. 'x' → logprob: -2.812004327774048
    3. '   ' → logprob: -10.312004089355469
    4. '	x' → logprob: -13.187004089355469
    5. '    ' → logprob: -14.062004089355469
    6. ' ' → logprob: -14.312004089355469
    7. '(x' → logprob: -16.31200408935547
    8. '       ' → logprob: -16.93700408935547
    9. '  ' → logprob: -17.43700408935547
    10. '=x' → logprob: -17.93700408935547

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1398757123970427e-05
    2. '```' → logprob: -12.250011444091797
    3. ' ' → logprob: -13.375011444091797
    4. '   ' → logprob: -13.625011444091797
    5. '`' → logprob: -14.125011444091797
    6. '[' → logprob: -15.125011444091797
    7. '+' → logprob: -15.125011444091797
    8. '
' → logprob: -15.125011444091797
    9. '``' → logprob: -15.375011444091797
    10. '<|end|>' → logprob: -15.375011444091797

Token 311: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08906302601099014
    2. '+' → logprob: -2.4640629291534424
    3. '+k' → logprob: -9.089062690734863
    4. '<|end|>' → logprob: -12.089062690734863
    5. '   ' → logprob: -13.464062690734863
    6. '+x' → logprob: -13.964062690734863
    7. ' +
' → logprob: -14.089062690734863
    8. '+
' → logprob: -15.089062690734863
    9. ' ' → logprob: -15.339062690734863
    10. '
' → logprob: -15.714062690734863

Token 312: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.014164329506456852
    2. ' k' → logprob: -4.264164447784424
    3. 'A' → logprob: -15.139163970947266
    4. ' A' → logprob: -15.389163970947266
    5. '(k' → logprob: -15.889163970947266
    6. '   ' → logprob: -16.514163970947266
    7. ' ' → logprob: -16.639163970947266
    8. ' (' → logprob: -18.639163970947266
    9. '	k' → logprob: -18.639163970947266
    10. '(' → logprob: -19.014163970947266

Token 313: ' *' (ID: 425)
  Prédit: '*A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*A' → logprob: -0.35899046063423157
    2. ' *' → logprob: -1.3589904308319092
    3. '*' → logprob: -3.108990430831909
    4. '*(' → logprob: -9.983990669250488
    5. 'A' → logprob: -12.608990669250488
    6. '**' → logprob: -13.483990669250488
    7. ' A' → logprob: -14.608990669250488
    8. '*N' → logprob: -15.233990669250488
    9. '*T' → logprob: -15.483990669250488
    10. '*a' → logprob: -15.608990669250488

Token 314: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0024756586644798517
    2. ' A' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.25247573852539
    4. '	A' → logprob: -18.50247573852539
    5. ' ' → logprob: -18.87747573852539
    6. '  ' → logprob: -21.12747573852539
    7. '*A' → logprob: -21.87747573852539
    8. '(A' → logprob: -22.12747573852539
    9. '```' → logprob: -23.62747573852539
    10. '    ' → logprob: -23.62747573852539

Token 315: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1657375544309616
    2. '
' → logprob: -2.1657376289367676
    3. '<|end|>' → logprob: -3.2907376289367676
    4. ',' → logprob: -8.04073715209961
    5. ',y' → logprob: -9.54073715209961
    6. '   ' → logprob: -9.91573715209961
    7. '        
' → logprob: -9.91573715209961
    8. 'y' → logprob: -9.91573715209961
    9. '<|end|>' → logprob: -10.04073715209961
    10. ' 
' → logprob: -10.04073715209961

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04170137271285057
    2. ' y' → logprob: -3.291701316833496
    3. '
' → logprob: -6.166701316833496
    4. 'y' → logprob: -7.291701316833496
    5. '        ' → logprob: -8.541701316833496
    6. '        
' → logprob: -8.666701316833496
    7. '<|end|>' → logprob: -8.791701316833496
    8. '   ' → logprob: -9.041701316833496
    9. ',y' → logprob: -9.416701316833496
    10. ',' → logprob: -10.291701316833496

Token 317: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.6933407783508301
    2. ' y' → logprob: -0.6933407783508301
    3. '   ' → logprob: -8.818340301513672
    4. '       ' → logprob: -10.193340301513672
    5. '	y' → logprob: -12.443340301513672
    6. ',y' → logprob: -13.443340301513672
    7. '    ' → logprob: -13.693340301513672
    8. ' ' → logprob: -14.193340301513672
    9. ',' → logprob: -15.318340301513672
    10. '        ' → logprob: -15.943340301513672

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993887573480606
    2. '=' → logprob: -2.694938898086548
    3. ' ' → logprob: -13.444938659667969
    4. '<|end|>' → logprob: -14.444938659667969
    5. '0' → logprob: -15.569938659667969
    6. ')' → logprob: -16.31993865966797
    7. ',' → logprob: -16.56993865966797
    8. '   ' → logprob: -16.69493865966797
    9. 's' → logprob: -17.31993865966797
    10. ' =
' → logprob: -17.69493865966797

Token 319: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12698426842689514
    2. ' y' → logprob: -2.1269843578338623
    3. '   ' → logprob: -10.626984596252441
    4. '0' → logprob: -10.626984596252441
    5. '	y' → logprob: -12.251984596252441
    6. ' ' → logprob: -13.626984596252441
    7. '       ' → logprob: -14.501984596252441
    8. '    ' → logprob: -14.501984596252441
    9. '  ' → logprob: -15.376984596252441
    10. '(y' → logprob: -16.251983642578125

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014370749704539776
    2. ' ' → logprob: -9.500144004821777
    3. '   ' → logprob: -10.500144004821777
    4. '-' → logprob: -11.375144004821777
    5. ' -' → logprob: -11.500144004821777
    6. ' y' → logprob: -11.750144004821777
    7. '```' → logprob: -12.375144004821777
    8. 'y' → logprob: -13.375144004821777
    9. '    ' → logprob: -13.500144004821777
    10. '
' → logprob: -13.500144004821777

Token 321: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014168089255690575
    2. '-' → logprob: -4.2641682624816895
    3. ' ' → logprob: -13.764167785644531
    4. '   ' → logprob: -14.389167785644531
    5. ' ' → logprob: -14.514167785644531
    6. '```' → logprob: -14.764167785644531
    7. ' +' → logprob: -14.889167785644531
    8. '<|end|>' → logprob: -15.264167785644531
    9. '
' → logprob: -15.389167785644531
    10. '`' → logprob: -15.514167785644531

Token 322: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001170460251159966
    2. ' k' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.62617015838623
    4. '	k' → logprob: -17.501171112060547
    5. '(k' → logprob: -17.876171112060547
    6. ' ' → logprob: -18.126171112060547
    7. '<|end|>' → logprob: -18.751171112060547
    8. '{k' → logprob: -19.001171112060547
    9. '       ' → logprob: -19.126171112060547
    10. '```' → logprob: -19.251171112060547

Token 323: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25193390250205994
    2. '*' → logprob: -1.5019339323043823
    3. '*k' → logprob: -12.501934051513672
    4. ' ' → logprob: -15.126934051513672
    5. '*b' → logprob: -16.001934051513672
    6. '**' → logprob: -16.126934051513672
    7. '*(' → logprob: -16.251934051513672
    8. '`' → logprob: -16.251934051513672
    9. '   ' → logprob: -16.626934051513672
    10. '*y' → logprob: -16.626934051513672

Token 324: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00977001991122961
    2. ' B' → logprob: -4.634769916534424
    3. 'k' → logprob: -11.259770393371582
    4. '   ' → logprob: -15.009770393371582
    5. ' ' → logprob: -15.384770393371582
    6. '       ' → logprob: -16.134769439697266
    7. ' k' → logprob: -16.384769439697266
    8. '	B' → logprob: -16.384769439697266
    9. '(' → logprob: -16.634769439697266
    10. '<|end|>' → logprob: -16.759769439697266

Token 325: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07732277363538742
    2. '
' → logprob: -2.9523227214813232
    3. '<|end|>' → logprob: -3.9523227214813232
    4. '        
' → logprob: -6.702322959899902
    5. ',' → logprob: -7.577322959899902
    6. '   ' → logprob: -8.202322959899902
    7. ' 
' → logprob: -8.952322959899902
    8. ' if' → logprob: -9.077322959899902
    9. '  
' → logprob: -9.202322959899902
    10. ')' → logprob: -9.202322959899902

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014135069213807583
    2. '<|end|>' → logprob: -4.389134883880615
    3. '   ' → logprob: -6.889134883880615
    4. '        
' → logprob: -9.014135360717773
    5. '<|end|>' → logprob: -9.264135360717773
    6. ',' → logprob: -9.389135360717773
    7. '```' → logprob: -9.514135360717773
    8. ' if' → logprob: -10.014135360717773
    9. ')' → logprob: -10.014135360717773
    10. '        ' → logprob: -10.889135360717773

Token 327: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.299204558134079
    2. ' if' → logprob: -2.2992045879364014
    3. 'sum' → logprob: -2.6742045879364014
    4. 'if' (adapté à ' if') → logprob: -3.7992045879364014
    5. ' sum' → logprob: -3.9242045879364014
    6. ' mass' → logprob: -4.549204349517822
    7. '   ' → logprob: -4.799204349517822
    8. '        
' → logprob: -5.299204349517822
    9. 'mass' → logprob: -5.299204349517822
    10. ' current' → logprob: -5.799204349517822

Token 328: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03401655703783035
    2. ' x' → logprob: -3.9090166091918945
    3. 'best' → logprob: -4.5340166091918945
    4. '(x' → logprob: -6.6590166091918945
    5. ' best' → logprob: -7.6590166091918945
    6. '0' → logprob: -8.284016609191895
    7. ' (' → logprob: -8.659016609191895
    8. 'y' → logprob: -9.034016609191895
    9. '(' → logprob: -9.034016609191895
    10. '(best' → logprob: -9.159016609191895

Token 329: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.08390620350837708
    2. ' <' → logprob: -3.0839061737060547
    3. '>=' → logprob: -3.4589061737060547
    4. '<' → logprob: -5.833906173706055
    5. ' ' → logprob: -9.208906173706055
    6. ' ==' → logprob: -9.583906173706055
    7. ' >' → logprob: -9.958906173706055
    8. '>' → logprob: -10.958906173706055
    9. '0' → logprob: -11.333906173706055
    10. '==' → logprob: -11.583906173706055

Token 330: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000433291686931625
    2. ' ' → logprob: -7.750433444976807
    3. '=' → logprob: -13.375432968139648
    4. 'best' → logprob: -14.125432968139648
    5. '   ' → logprob: -15.875432968139648
    6. '```' → logprob: -17.12543296813965
    7. '
' → logprob: -17.25043296813965
    8. ' best' → logprob: -17.37543296813965
    9. '1' → logprob: -17.62543296813965
    10. '  ' → logprob: -18.37543296813965

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.500031471252441
    3. 'best' → logprob: -12.625031471252441
    4. '=' → logprob: -14.750031471252441
    5. '1' → logprob: -16.375030517578125
    6. ' best' → logprob: -17.500030517578125
    7. '
' → logprob: -17.937530517578125
    8. '```' → logprob: -17.937530517578125
    9. '

' → logprob: -18.125030517578125
    10. '   ' → logprob: -18.375030517578125

Token 332: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.003113780403509736
    2. '       ' → logprob: -6.753113746643066
    3. '           ' → logprob: -6.878113746643066
    4. 'or' → logprob: -7.503113746643066
    5. ':' → logprob: -8.253113746643066
    6. ':
' → logprob: -9.628113746643066
    7. '   ' → logprob: -11.253113746643066
    8. ' and' → logprob: -12.003113746643066
    9. ' continue' → logprob: -12.378113746643066
    10. ' ' → logprob: -12.753113746643066

Token 333: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931495666503906
    2. ' y' → logprob: -0.6931495666503906
    3. '   ' → logprob: -14.06814956665039
    4. '       ' → logprob: -14.44314956665039
    5. 'x' → logprob: -14.69314956665039
    6. ' ' → logprob: -15.44314956665039
    7. '    ' → logprob: -15.69314956665039
    8. ' x' → logprob: -15.94314956665039
    9. '	y' → logprob: -16.56814956665039
    10. '           ' → logprob: -16.81814956665039

Token 334: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006774226203560829
    2. '<' → logprob: -5.006774425506592
    3. '<|end|>' → logprob: -11.006773948669434
    4. ' ' → logprob: -11.256773948669434
    5. ' >' → logprob: -11.381773948669434
    6. ' >=' → logprob: -12.006773948669434
    7. '   ' → logprob: -12.506773948669434
    8. ')' → logprob: -12.881773948669434
    9. '>' → logprob: -13.381773948669434
    10. ')<' → logprob: -14.506773948669434

Token 335: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06198079511523247
    2. ' ' → logprob: -2.811980724334717
    3. '   ' → logprob: -11.436981201171875
    4. '  ' → logprob: -14.186981201171875
    5. '<|end|>' → logprob: -14.686981201171875
    6. '    ' → logprob: -15.436981201171875
    7. '       ' → logprob: -15.561981201171875
    8. '```' → logprob: -15.999481201171875
    9. '=' → logprob: -16.436981201171875
    10. ',' → logprob: -16.499481201171875

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004901225329376757
    2. ' ' → logprob: -7.625490188598633
    3. '   ' → logprob: -13.250490188598633
    4. '<|end|>' → logprob: -15.875490188598633
    5. '  ' → logprob: -16.750490188598633
    6. '```' → logprob: -16.875490188598633
    7. '
' → logprob: -17.250490188598633
    8. '       ' → logprob: -17.250490188598633
    9. '    ' → logprob: -17.562990188598633
    10. ',' → logprob: -18.625490188598633

Token 337: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22223372757434845
    2. ':' → logprob: -1.722233772277832
    3. '       ' → logprob: -4.597233772277832
    4. '           ' → logprob: -4.597233772277832
    5. ' or' → logprob: -8.347233772277832
    6. '   ' → logprob: -9.347233772277832
    7. ' continue' → logprob: -9.722233772277832
    8. ':
' → logprob: -10.722233772277832
    9. 'continue' → logprob: -10.847233772277832
    10. '):
' → logprob: -11.972233772277832

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010966821573674679
    2. ' continue' → logprob: -4.760966777801514
    3. '       ' → logprob: -6.635966777801514
    4. 'continue' → logprob: -6.885966777801514
    5. '   ' → logprob: -12.760967254638672
    6. '```' → logprob: -12.885967254638672
    7. '	continue' → logprob: -13.010967254638672
    8. ' continues' → logprob: -13.135967254638672
    9. '               ' → logprob: -13.260967254638672
    10. '_continue' → logprob: -14.260967254638672

Token 339: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6045689582824707
    2. '           ' → logprob: -1.1045689582824707
    3. 'continue' (adapté à ' continue') → logprob: -2.1045689582824707
    4. '	continue' → logprob: -8.354568481445312
    5. '       ' → logprob: -8.729568481445312
    6. '_continue' → logprob: -11.229568481445312
    7. '               ' → logprob: -11.729568481445312
    8. '   ' → logprob: -11.854568481445312
    9. ' continues' → logprob: -12.479568481445312
    10. '	       ' → logprob: -12.979568481445312

Token 340: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008464370621368289
    2. '<|end|>' → logprob: -7.2508463859558105
    3. ',' → logprob: -9.375846862792969
    4. '        
' → logprob: -11.500846862792969
    5. '   ' → logprob: -11.875846862792969
    6. '```' → logprob: -11.875846862792969
    7. ')' → logprob: -12.000846862792969
    8. '
' → logprob: -12.375846862792969
    9. '<|end|>' → logprob: -12.375846862792969
    10. ' if' → logprob: -13.250846862792969

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025287605240009725
    2. '<|end|>' → logprob: -8.625252723693848
    3. '   ' → logprob: -10.500252723693848
    4. '```' → logprob: -11.250252723693848
    5. ',' → logprob: -11.625252723693848
    6. '        
' → logprob: -11.875252723693848
    7. '           ' → logprob: -12.375252723693848
    8. '
' → logprob: -12.500252723693848
    9. ' if' → logprob: -13.000252723693848
    10. '      ' → logprob: -13.625252723693848

Token 342: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12557542324066162
    2. 'sum' → logprob: -3.500575542449951
    3. 'mass' → logprob: -4.000575542449951
    4. ' mass' → logprob: -4.000575542449951
    5. ' if' → logprob: -4.375575542449951
    6. 'if' → logprob: -4.625575542449951
    7. '   ' → logprob: -4.750575542449951
    8. ' sum' → logprob: -5.500575542449951
    9. 'total' → logprob: -5.875575542449951
    10. '
' → logprob: -6.000575542449951

Token 343: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.007671575993299484
    2. ' =' → logprob: -5.507671356201172
    3. '=' → logprob: -6.382671356201172
    4. '_sum' → logprob: -6.882671356201172
    5. '_' → logprob: -8.132671356201172
    6. '   ' → logprob: -8.632671356201172
    7. 'u' → logprob: -9.257671356201172
    8. '_um' → logprob: -9.882671356201172
    9. '=sum' → logprob: -10.257671356201172
    10. '       ' → logprob: -10.382671356201172

Token 344: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5825887322425842
    2. 'x' → logprob: -0.8325887322425842
    3. '2' → logprob: -6.3325886726379395
    4. '3' → logprob: -6.8325886726379395
    5. 'abs' → logprob: -7.3325886726379395
    6. '10' → logprob: -7.8325886726379395
    7. '4' → logprob: -7.9575886726379395
    8. '5' → logprob: -7.9575886726379395
    9. '100' → logprob: -8.207589149475098
    10. '(x' → logprob: -8.457589149475098

Token 345: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5881868004798889
    2. '*' → logprob: -1.3381867408752441
    3. ' +' → logprob: -1.7131867408752441
    4. ' *' → logprob: -6.338186740875244
    5. '*x' → logprob: -9.713187217712402
    6. '*a' → logprob: -9.963187217712402
    7. '+y' → logprob: -9.963187217712402
    8. ' ' → logprob: -10.963187217712402
    9. '+b' → logprob: -10.963187217712402
    10. '*y' → logprob: -11.213187217712402

Token 346: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005563704180531204
    2. ' y' → logprob: -7.500556468963623
    3. '   ' → logprob: -13.500555992126465
    4. ' ' → logprob: -14.000555992126465
    5. 'x' → logprob: -15.125555992126465
    6. 'b' → logprob: -15.875555992126465
    7. '2' → logprob: -16.12555694580078
    8. '	y' → logprob: -16.25055694580078
    9. '```' → logprob: -16.37555694580078
    10. '    ' → logprob: -16.37555694580078

Token 347: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027278907597064972
    2. '
' → logprob: -3.9022789001464844
    3. ' if' → logprob: -5.652278900146484
    4. '   ' → logprob: -6.277278900146484
    5. 'if' → logprob: -7.027278900146484
    6. '<|end|>' → logprob: -8.652278900146484
    7. ',' → logprob: -9.152278900146484
    8. '
' → logprob: -10.027278900146484
    9. '        
' → logprob: -11.027278900146484
    10. '*' → logprob: -11.402278900146484

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007047702558338642
    2. '
' → logprob: -5.132047653198242
    3. ' if' → logprob: -7.632047653198242
    4. '<|end|>' → logprob: -8.257047653198242
    5. ',' → logprob: -8.507047653198242
    6. 'if' → logprob: -9.507047653198242
    7. '   ' → logprob: -10.882047653198242
    8. '
' → logprob: -11.007047653198242
    9. '        
' → logprob: -11.132047653198242
    10. ')' → logprob: -11.382047653198242

Token 349: ' m' (ID: 284)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.747867226600647
    2. ' if' → logprob: -0.872867226600647
    3. 'm' (adapté à ' m') → logprob: -2.7478671073913574
    4. '       ' → logprob: -3.6228671073913574
    5. '   ' → logprob: -4.747867107391357
    6. 'd' → logprob: -6.247867107391357
    7. 'mass' → logprob: -6.247867107391357
    8. ' m' → logprob: -6.372867107391357
    9. ' mass' → logprob: -6.497867107391357
    10. ',' → logprob: -7.497867107391357

Token 350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5784159898757935
    2. 'ass' → logprob: -1.4534159898757935
    3. '=' → logprob: -1.7034159898757935
    4. 'a' → logprob: -3.953415870666504
    5. '   ' → logprob: -6.828415870666504
    6. ' ' → logprob: -7.328415870666504
    7. '_' → logprob: -7.453415870666504
    8. '_mass' → logprob: -7.578415870666504
    9. '  ' → logprob: -7.828415870666504
    10. 'as' → logprob: -8.828415870666504

Token 351: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3419841229915619
    2. 'x' → logprob: -1.3419841527938843
    3. 'A' → logprob: -4.966984272003174
    4. '2' → logprob: -5.341984272003174
    5. 'abs' → logprob: -5.841984272003174
    6. 's' → logprob: -5.966984272003174
    7. '100' → logprob: -6.216984272003174
    8. '3' → logprob: -6.341984272003174
    9. '10' → logprob: -6.841984272003174
    10. 'max' → logprob: -6.841984272003174

Token 352: '*x' (ID: 46987)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.654326319694519
    2. '*x' → logprob: -0.779326319694519
    3. ' *' → logprob: -3.9043264389038086
    4. 'x' → logprob: -6.654326438903809
    5. ' x' → logprob: -10.779326438903809
    6. '*s' → logprob: -11.779326438903809
    7. '*object' → logprob: -12.404326438903809
    8. ' ' → logprob: -12.654326438903809
    9. '```' → logprob: -13.029326438903809
    10. '   ' → logprob: -13.154326438903809

Token 353: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31364762783050537
    2. ' +' → logprob: -1.3136476278305054
    3. '+b' → logprob: -7.938647747039795
    4. '```' → logprob: -11.688647270202637
    5. ' ' → logprob: -12.313647270202637
    6. '+
' → logprob: -12.813647270202637
    7. 'a' → logprob: -12.813647270202637
    8. '+m' → logprob: -13.563647270202637
    9. ' plus' → logprob: -13.813647270202637
    10. ' +
' → logprob: -14.313647270202637

Token 354: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031781906727701426
    2. ' b' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.003178596496582
    4. '   ' → logprob: -16.253177642822266
    5. '	b' → logprob: -19.003177642822266
    6. '*b' → logprob: -19.378177642822266
    7. ')b' → logprob: -19.503177642822266
    8. '  ' → logprob: -19.753177642822266
    9. '2' → logprob: -20.003177642822266
    10. '>b' → logprob: -20.378177642822266

Token 355: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.16118156909942627
    2. 'y' → logprob: -1.9111815690994263
    3. '*' → logprob: -7.036181449890137
    4. ' y' → logprob: -10.161181449890137
    5. ' *' → logprob: -10.286181449890137
    6. '*x' → logprob: -12.911181449890137
    7. ')y' → logprob: -14.536181449890137
    8. ' ' → logprob: -15.036181449890137
    9. '	y' → logprob: -15.036181449890137
    10. ''y' → logprob: -15.286181449890137

Token 356: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3018277883529663
    2. '
' → logprob: -1.4268277883529663
    3. '   ' → logprob: -4.801827907562256
    4. ' if' → logprob: -5.051827907562256
    5. '<|end|>' → logprob: -5.926827907562256
    6. ' 
' → logprob: -7.301827907562256
    7. '  
' → logprob: -7.426827907562256
    8. '        
' → logprob: -7.801827907562256
    9. 'if' → logprob: -7.926827907562256
    10. ' ' → logprob: -8.176827430725098

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00190293591003865
    2. '<|end|>' → logprob: -7.126903057098389
    3. ' if' → logprob: -7.501903057098389
    4. '
' → logprob: -7.876903057098389
    5. 'if' → logprob: -9.75190258026123
    6. '   ' → logprob: -10.50190258026123
    7. ')' → logprob: -10.50190258026123
    8. '<|end|>' → logprob: -11.00190258026123
    9. ',' → logprob: -11.37690258026123
    10. '        
' → logprob: -11.50190258026123

Token 358: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16479212045669556
    2. 'if' (adapté à ' if') → logprob: -2.539792060852051
    3. ' if' → logprob: -2.664792060852051
    4. '
' → logprob: -6.164792060852051
    5. '   ' → logprob: -7.414792060852051
    6. '<|end|>' → logprob: -8.41479206085205
    7. ')' → logprob: -8.66479206085205
    8. '        
' → logprob: -9.41479206085205
    9. '           ' → logprob: -9.66479206085205
    10. ',' → logprob: -10.28979206085205

Token 359: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0009764790302142501
    2. ' best' → logprob: -7.6259765625
    3. '(best' → logprob: -7.6259765625
    4. ' (' → logprob: -15.7509765625
    5. '(' → logprob: -15.8759765625
    6. '(s' → logprob: -16.0009765625
    7. '   ' → logprob: -16.0009765625
    8. '	best' → logprob: -16.1259765625
    9. 's' → logprob: -16.7509765625
    10. '(m' → logprob: -17.7509765625

Token 360: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00044437398901209235
    2. '_mass' → logprob: -7.750444412231445
    3. '_s' → logprob: -12.125444412231445
    4. '_' → logprob: -12.250444412231445
    5. '_best' → logprob: -13.125444412231445
    6. '_x' → logprob: -14.625444412231445
    7. ' _' → logprob: -14.875444412231445
    8. '_m' → logprob: -15.125444412231445
    9. 'sum' → logprob: -15.375444412231445
    10. '_max' → logprob: -17.375444412231445

Token 361: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5759405493736267
    2. ' is' → logprob: -0.8259405493736267
    3. ' ' → logprob: -14.450940132141113
    4. '==' → logprob: -14.950940132141113
    5. ')' → logprob: -15.950940132141113
    6. '[' → logprob: -16.70094108581543
    7. '	is' → logprob: -17.07594108581543
    8. '   ' → logprob: -17.45094108581543
    9. '```' → logprob: -17.95094108581543
    10. ' ' → logprob: -18.32594108581543

Token 362: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006715370807796717
    2. ' None' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.506715774536133
    4. 'not' → logprob: -18.506715774536133
    5. '  ' → logprob: -19.881715774536133
    6. ' ' → logprob: -20.256715774536133
    7. 'none' → logprob: -20.631715774536133
    8. '=None' → logprob: -21.131715774536133
    9. '(None' → logprob: -21.381715774536133
    10. '_None' → logprob: -21.506715774536133

Token 363: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008615754544734955
    2. 'or' → logprob: -4.758615970611572
    3. '	or' → logprob: -14.633615493774414
    4. ',' → logprob: -15.508615493774414
    5. '   ' → logprob: -16.133615493774414
    6. ' ' → logprob: -16.133615493774414
    7. '       ' → logprob: -16.508615493774414
    8. '  ' → logprob: -17.008615493774414
    9. '    ' → logprob: -17.133615493774414
    10. '           ' → logprob: -17.508615493774414

Token 364: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.015509388409554958
    2. 'm' → logprob: -4.890509605407715
    3. '(s' → logprob: -5.015509605407715
    4. ' s' → logprob: -7.265509605407715
    5. '(m' → logprob: -7.765509605407715
    6. ' (' → logprob: -10.515509605407715
    7. '   ' → logprob: -10.515509605407715
    8. '(' → logprob: -10.765509605407715
    9. ' m' → logprob: -11.515509605407715
    10. 'x' → logprob: -11.890509605407715

Token 365: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0487510971724987
    2. ' <' → logprob: -3.04875111579895
    3. '>' → logprob: -9.423750877380371
    4. '<s' → logprob: -9.923750877380371
    5. 's' → logprob: -11.673750877380371
    6. ' >' → logprob: -12.298750877380371
    7. ',' → logprob: -12.548750877380371
    8. ' ' → logprob: -13.048750877380371
    9. '[' → logprob: -13.173750877380371
    10. '<m' → logprob: -13.298750877380371

Token 366: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0015024791937321424
    2. ' best' → logprob: -6.501502513885498
    3. '	best' → logprob: -15.87650203704834
    4. '_best' → logprob: -17.751502990722656
    5. '(best' → logprob: -17.876502990722656
    6. '.best' → logprob: -19.626502990722656
    7. '
' → logprob: -20.126502990722656
    8. '=' → logprob: -20.626502990722656
    9. 'Best' → logprob: -20.876502990722656
    10. '   ' → logprob: -22.126502990722656

Token 367: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.463036435074173e-05
    2. '_s' → logprob: -10.750024795532227
    3. 'sum' → logprob: -12.875024795532227
    4. 's' → logprob: -14.625024795532227
    5. '_' → logprob: -17.125024795532227
    6. ' sum' → logprob: -19.250024795532227
    7. '_sub' → logprob: -19.750024795532227
    8. ')' → logprob: -20.125024795532227
    9. 'Sum' → logprob: -20.250024795532227
    10. '_x' → logprob: -20.375024795532227

Token 368: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0009213464800268412
    2. 'or' → logprob: -7.000921249389648
    3. '       ' → logprob: -12.500921249389648
    4. '	or' → logprob: -12.625921249389648
    5. '   ' → logprob: -14.500921249389648
    6. ',' → logprob: -14.500921249389648
    7. ' ' → logprob: -14.875921249389648
    8. '  ' → logprob: -15.000921249389648
    9. ':' → logprob: -15.250921249389648
    10. '           ' → logprob: -15.500921249389648

Token 369: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0005281301564536989
    2. '(' → logprob: -8.000528335571289
    3. ' (' → logprob: -8.625528335571289
    4. 's' → logprob: -11.500528335571289
    5. '   ' → logprob: -13.750528335571289
    6. '(
' → logprob: -14.500528335571289
    7. '((' → logprob: -14.625528335571289
    8. '(best' → logprob: -15.875528335571289
    9. '(m' → logprob: -16.00052833557129
    10. '  ' → logprob: -16.25052833557129

Token 370: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00026181264547631145
    2. ' s' → logprob: -8.250262260437012
    3. '(s' → logprob: -15.500262260437012
    4. '   ' → logprob: -15.750262260437012
    5. '(' → logprob: -17.000261306762695
    6. '
' → logprob: -17.750261306762695
    7. '	s' → logprob: -18.000261306762695
    8. ')' → logprob: -18.875261306762695
    9. '_s' → logprob: -19.000261306762695
    10. ' (' → logprob: -19.125261306762695

Token 371: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10020937025547028
    2. '==' → logprob: -2.3502094745635986
    3. '=' → logprob: -13.47520923614502
    4. ' ' → logprob: -14.10020923614502
    5. 's' → logprob: -15.97520923614502
    6. ')==' → logprob: -16.350210189819336
    7. '==
' → logprob: -16.475210189819336
    8. ' ' → logprob: -16.725210189819336
    9. ' =' → logprob: -16.850210189819336
    10. ')' → logprob: -16.850210189819336

Token 372: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.014164221473038197
    2. ' best' → logprob: -4.264164447784424
    3. '	best' → logprob: -14.389163970947266
    4. '(best' → logprob: -16.389163970947266
    5. '
' → logprob: -16.639163970947266
    6. '_best' → logprob: -17.389163970947266
    7. 'b' → logprob: -18.264163970947266
    8. ' ' → logprob: -19.014163970947266
    9. 's' → logprob: -19.014163970947266
    10. '   ' → logprob: -19.389163970947266

Token 373: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.4121114822482923e-06
    2. 'sum' → logprob: -12.750003814697266
    3. '_mass' → logprob: -15.500003814697266
    4. '_s' → logprob: -16.375003814697266
    5. '_' → logprob: -17.500003814697266
    6. ' sum' → logprob: -18.375003814697266
    7. 'um' → logprob: -18.500003814697266
    8. ')' → logprob: -19.125003814697266
    9. '_x' → logprob: -19.250003814697266
    10. 'Sum' → logprob: -19.375003814697266

Token 374: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858805239200592
    2. 'and' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.048587799072266
    4. '   ' → logprob: -15.923587799072266
    5. '    ' → logprob: -16.048587799072266
    6. ')' → logprob: -16.173587799072266
    7. '```' → logprob: -16.923587799072266
    8. '	and' → logprob: -17.048587799072266
    9. ',' → logprob: -17.798587799072266
    10. '<|end|>' → logprob: -17.923587799072266

Token 375: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00015335931675508618
    2. ' m' → logprob: -9.125153541564941
    3. '(m' → logprob: -10.750153541564941
    4. 'a' → logprob: -11.625153541564941
    5. 'x' → logprob: -12.500153541564941
    6. '   ' → logprob: -13.125153541564941
    7. 'b' → logprob: -13.125153541564941
    8. '(a' → logprob: -13.375153541564941
    9. 's' → logprob: -13.750153541564941
    10. 'y' → logprob: -14.375153541564941

Token 376: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.34877604246139526
    2. ' <' → logprob: -1.22377610206604
    3. '>' → logprob: -8.848775863647461
    4. '<m' → logprob: -9.598775863647461
    5. ' >' → logprob: -9.723775863647461
    6. ')' → logprob: -11.348775863647461
    7. ' ' → logprob: -12.098775863647461
    8. '<b' → logprob: -12.973775863647461
    9. '<
' → logprob: -12.973775863647461
    10. '<|end|>' → logprob: -13.036275863647461

Token 377: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0007104054093360901
    2. ' best' → logprob: -7.250710487365723
    3. '	best' → logprob: -15.000710487365723
    4. '(best' → logprob: -15.875710487365723
    5. '.best' → logprob: -17.750709533691406
    6. '_best' → logprob: -18.000709533691406
    7. 'b' → logprob: -18.625709533691406
    8. '
' → logprob: -18.750709533691406
    9. '   ' → logprob: -18.750709533691406
    10. 'Best' → logprob: -19.875709533691406

Token 378: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -3.128163257315464e-07
    2. '_m' → logprob: -15.5
    3. 'mass' → logprob: -17.0
    4. ' mass' → logprob: -18.125
    5. '_sum' → logprob: -19.125
    6. 'Mass' → logprob: -20.5
    7. '_max' → logprob: -21.75
    8. '_' → logprob: -22.625
    9. '_mask' → logprob: -22.625
    10. 'm' → logprob: -23.25

Token 379: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001183204003609717
    2. '):
' → logprob: -6.751183032989502
    3. ':' → logprob: -12.62618350982666
    4. ')' → logprob: -12.75118350982666
    5. '   ' → logprob: -13.12618350982666
    6. '):
' → logprob: -13.37618350982666
    7. '       ' → logprob: -13.37618350982666
    8. ' ):' → logprob: -13.50118350982666
    9. '):

' → logprob: -15.62618350982666
    10. '  ' → logprob: -17.626182556152344

Token 380: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12281480431556702
    2. ':
' → logprob: -2.372814893722534
    3. '       ' → logprob: -4.372814655303955
    4. '           ' → logprob: -5.622814655303955
    5. '):' → logprob: -5.747814655303955
    6. '):
' → logprob: -5.872814655303955
    7. ')' → logprob: -10.247815132141113
    8. '   ' → logprob: -10.497815132141113
    9. '```' → logprob: -11.497815132141113
    10. ':
' → logprob: -12.122815132141113

Token 381: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.20144179463386536
    2. ' best' → logprob: -1.701441764831543
    3. '           ' → logprob: -10.576441764831543
    4. '	best' → logprob: -13.326441764831543
    5. '(best' → logprob: -14.826441764831543
    6. '
' → logprob: -14.951441764831543
    7. '_best' → logprob: -15.326441764831543
    8. '       ' → logprob: -15.576441764831543
    9. '               ' → logprob: -16.20144271850586
    10. '   ' → logprob: -16.32644271850586

Token 382: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.644463479053229e-05
    2. '_x' → logprob: -10.000046730041504
    3. '_' → logprob: -14.250046730041504
    4. '_s' → logprob: -15.250046730041504
    5. 'sum' → logprob: -17.875045776367188
    6. '_mass' → logprob: -18.500045776367188
    7. 'Sum' → logprob: -21.750045776367188
    8. ' _' → logprob: -21.875045776367188
    9. '_SUM' → logprob: -22.000045776367188
    10. 'x' → logprob: -22.625045776367188

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688600063323975
    2. ' =' → logprob: -1.1368860006332397
    3. ',' → logprob: -11.261885643005371
    4. '=s' → logprob: -13.386885643005371
    5. '＝' → logprob: -15.511885643005371
    6. ' ' → logprob: -16.511886596679688
    7. ' s' → logprob: -16.511886596679688
    8. 's' → logprob: -16.886886596679688
    9. '=

' → logprob: -16.886886596679688
    10. '=
' → logprob: -17.636886596679688

Token 384: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00861456897109747
    2. ' s' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.883615493774414
    4. '	s' → logprob: -17.883615493774414
    5. ' ' → logprob: -18.508615493774414
    6. '           ' → logprob: -18.508615493774414
    7. '       ' → logprob: -19.383615493774414
    8. ' ' → logprob: -19.758615493774414
    9. '_s' → logprob: -19.758615493774414
    10. '{s' → logprob: -20.258615493774414

Token 385: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019907322712242603
    2. 'best' → logprob: -6.876990795135498
    3. ' best' → logprob: -7.751990795135498
    4. ',' → logprob: -8.50199031829834
    5. '       ' → logprob: -8.87699031829834
    6. '
' → logprob: -9.87699031829834
    7. '               ' → logprob: -10.12699031829834
    8. '   ' → logprob: -10.37699031829834
    9. '(best' → logprob: -10.75199031829834
    10. '          ' → logprob: -11.50199031829834

Token 386: '           ' (ID: 352)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8328158259391785
    2. ' best' → logprob: -0.9578158259391785
    3. '           ' → logprob: -1.7078158855438232
    4. '	best' → logprob: -9.832816123962402
    5. '(best' → logprob: -9.832816123962402
    6. '
' → logprob: -10.707816123962402
    7. '       ' → logprob: -11.082816123962402
    8. '          ' → logprob: -11.457816123962402
    9. '_best' → logprob: -12.332816123962402
    10. '   ' → logprob: -12.457816123962402

Token 387: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.004083385691046715
    2. ' best' → logprob: -5.504083156585693
    3. '           ' → logprob: -12.254083633422852
    4. '	best' → logprob: -15.504083633422852
    5. 'x' → logprob: -17.00408363342285
    6. '(best' → logprob: -17.87908363342285
    7. '   ' → logprob: -18.25408363342285
    8. '       ' → logprob: -19.00408363342285
    9. '_best' → logprob: -19.37908363342285
    10. '.best' → logprob: -19.50408363342285

Token 388: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.5759698748588562
    2. '_x' → logprob: -0.8259698748588562
    3. 'x' → logprob: -10.700969696044922
    4. 'mass' → logprob: -12.450969696044922
    5. '_sum' → logprob: -12.575969696044922
    6. '_m' → logprob: -14.700969696044922
    7. 'Mass' → logprob: -16.450969696044922
    8. ' mass' → logprob: -16.825969696044922
    9. '_' → logprob: -19.075969696044922
    10. ' x' → logprob: -20.200969696044922

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410669922828674
    2. '=' → logprob: -0.9741066694259644
    3. '=m' → logprob: -10.724106788635254
    4. ' m' → logprob: -12.599106788635254
    5. '<|end|>' → logprob: -12.974106788635254
    6. ' ' → logprob: -14.099106788635254
    7. 'm' → logprob: -14.224106788635254
    8. ',' → logprob: -14.599106788635254
    9. ')' → logprob: -17.599105834960938
    10. '=
' → logprob: -17.849105834960938

Token 390: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004307884373702109
    2. ' m' → logprob: -7.750430583953857
    3. '	m' → logprob: -18.000431060791016
    4. '   ' → logprob: -19.250431060791016
    5. '    ' → logprob: -21.125431060791016
    6. ' ' → logprob: -21.250431060791016
    7. ' м' → logprob: -22.000431060791016
    8. ')m' → logprob: -22.000431060791016
    9. '           ' → logprob: -22.500431060791016
    10. '  ' → logprob: -22.500431060791016

Token 391: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013643606507685035
    2. 'best' → logprob: -9.750136375427246
    3. ' best' → logprob: -9.750136375427246
    4. ',' → logprob: -12.000136375427246
    5. '```' → logprob: -12.125136375427246
    6. '       ' → logprob: -12.500136375427246
    7. '   ' → logprob: -12.625136375427246
    8. '               ' → logprob: -15.000136375427246
    9. '<|end|>' → logprob: -15.250136375427246
    10. '          ' → logprob: -15.375136375427246

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00503462553024292
    2. 'best' → logprob: -6.005034446716309
    3. ' best' → logprob: -6.005034446716309
    4. '   ' → logprob: -9.755034446716309
    5. '       ' → logprob: -10.755034446716309
    6. '```' → logprob: -13.005034446716309
    7. '	best' → logprob: -13.130034446716309
    8. '          ' → logprob: -13.380034446716309
    9. '_best' → logprob: -14.380034446716309
    10. ' ' → logprob: -14.505034446716309

Token 393: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.00033558503491804004
    2. ' best' → logprob: -8.000335693359375
    3. '           ' → logprob: -15.750335693359375
    4. '   ' → logprob: -18.500335693359375
    5. '	best' → logprob: -18.500335693359375
    6. '       ' → logprob: -19.375335693359375
    7. '(best' → logprob: -20.750335693359375
    8. '_best' → logprob: -21.375335693359375
    9. '```' → logprob: -21.625335693359375
    10. '.best' → logprob: -21.750335693359375

Token 394: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.2664456789934775e-06
    2. 'x' → logprob: -13.625000953674316
    3. '_' → logprob: -18.000001907348633
    4. '```' → logprob: -19.625001907348633
    5. '_mass' → logprob: -19.875001907348633
    6. '_y' → logprob: -20.750001907348633
    7. 's' → logprob: -20.875001907348633
    8. '_
' → logprob: -21.250001907348633
    9. '\' → logprob: -21.500001907348633
    10. '_name' → logprob: -21.750001907348633

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759665966033936
    2. ' =' → logprob: -0.8259665966033936
    3. ',' → logprob: -11.200966835021973
    4. '<|end|>' → logprob: -11.950966835021973
    5. '=x' → logprob: -12.075966835021973
    6. 'x' → logprob: -14.950966835021973
    7. ')' → logprob: -15.575966835021973
    8. ' ' → logprob: -15.950966835021973
    9. '=k' → logprob: -16.075965881347656
    10. '=
' → logprob: -16.075965881347656

Token 396: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.836499985889532e-05
    2. ' x' → logprob: -9.7500581741333
    3. '	x' → logprob: -20.625059127807617
    4. '<|end|>' → logprob: -22.375059127807617
    5. '"x' → logprob: -23.500059127807617
    6. ')x' → logprob: -23.625059127807617
    7. ''x' → logprob: -24.375059127807617
    8. ' ' → logprob: -24.500059127807617
    9. '
' → logprob: -24.500059127807617
    10. '(x' → logprob: -25.000059127807617

Token 397: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.908022285439074e-05
    2. '<|end|>' → logprob: -10.750059127807617
    3. '
' → logprob: -11.000059127807617
    4. '       ' → logprob: -11.375059127807617
    5. '```' → logprob: -13.250059127807617
    6. '   ' → logprob: -13.500059127807617
    7. '               ' → logprob: -13.625059127807617
    8. ',' → logprob: -13.625059127807617
    9. 'best' → logprob: -13.750059127807617
    10. '          ' → logprob: -14.000059127807617

Token 398: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014883324911352247
    2. 'best' → logprob: -8.87514877319336
    3. '       ' → logprob: -12.37514877319336
    4. ' best' → logprob: -13.12514877319336
    5. '   ' → logprob: -14.00014877319336
    6. '          ' → logprob: -14.50014877319336
    7. '               ' → logprob: -14.62514877319336
    8. '
' → logprob: -15.62514877319336
    9. ',' → logprob: -16.25014877319336
    10. '<|end|>' → logprob: -16.25014877319336

Token 399: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.023685062304139137
    2. 'y' → logprob: -3.7736849784851074
    3. '           ' → logprob: -8.273685455322266
    4. ' best' → logprob: -9.398685455322266
    5. ' y' → logprob: -9.523685455322266
    6. '       ' → logprob: -10.898685455322266
    7. '	best' → logprob: -12.398685455322266
    8. '   ' → logprob: -13.273685455322266
    9. 'b' → logprob: -14.148685455322266
    10. ' ' → logprob: -14.648685455322266

Token 400: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.31329211592674255
    2. 'y' → logprob: -1.313292145729065
    3. '<|end|>' → logprob: -11.063292503356934
    4. ' y' → logprob: -11.313292503356934
    5. '_' → logprob: -13.563292503356934
    6. '	y' → logprob: -14.938292503356934
    7. ',y' → logprob: -15.188292503356934
    8. '_x' → logprob: -16.438291549682617
    9. ''y' → logprob: -16.563291549682617
    10. '=y' → logprob: -16.563291549682617

Token 401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.498637855052948
    2. '=' → logprob: -0.998637855052948
    3. '<|end|>' → logprob: -3.9986379146575928
    4. ' y' → logprob: -5.373637676239014
    5. 'y' → logprob: -7.123637676239014
    6. ' ' → logprob: -8.248638153076172
    7. '=y' → logprob: -8.623638153076172
    8. '[' → logprob: -11.623638153076172
    9. '(y' → logprob: -12.623638153076172
    10. ',' → logprob: -12.623638153076172

Token 402: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. '	y' → logprob: -16.500261306762695
    4. '<|end|>' → logprob: -17.500261306762695
    5. '   ' → logprob: -19.250261306762695
    6. ')y' → logprob: -19.750261306762695
    7. ''y' → logprob: -20.500261306762695
    8. '(y' → logprob: -21.125261306762695
    9. ' ' → logprob: -21.125261306762695
    10. '‘y' → logprob: -21.250261306762695

Token 403: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11644759029150009
    2. '   ' → logprob: -2.366447687149048
    3. '
' → logprob: -4.241447448730469
    4. '    
' → logprob: -6.866447448730469
    5. 'if' → logprob: -7.491447448730469
    6. '  
' → logprob: -9.866447448730469
    7. ' print' → logprob: -10.741447448730469
    8. '        
' → logprob: -11.366447448730469
    9. '```' → logprob: -11.366447448730469
    10. '

' → logprob: -11.866447448730469

Token 404: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025393941905349493
    2. '
' → logprob: -6.377539157867432
    3. '   ' → logprob: -7.252539157867432
    4. ' print' → logprob: -9.50253963470459
    5. 'if' → logprob: -10.87753963470459
    6. '    
' → logprob: -10.87753963470459
    7. '```' → logprob: -11.62753963470459
    8. '  
' → logprob: -12.87753963470459
    9. '

' → logprob: -13.25253963470459
    10. 'for' → logprob: -13.37753963470459

Token 405: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04862222820520401
    2. 'print' (adapté à ' print') → logprob: -3.0486221313476562
    3. '   ' → logprob: -10.423622131347656
    4. ' if' → logprob: -12.673622131347656
    5. '```' → logprob: -13.298622131347656
    6. ' print' → logprob: -16.173622131347656
    7. '    
' → logprob: -16.423622131347656
    8. '
' → logprob: -17.923622131347656
    9. '``' → logprob: -18.798622131347656
    10. 'for' → logprob: -19.423622131347656

Token 406: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.0032008851412683725
    2. '(f' → logprob: -5.753201007843018
    3. 'best' → logprob: -11.37820053100586
    4. '(' → logprob: -11.50320053100586
    5. 'f' → logprob: -14.25320053100586
    6. '((' → logprob: -14.62820053100586
    7. '(b' → logprob: -15.62820053100586
    8. '("{}' → logprob: -16.37820053100586
    9. '(str' → logprob: -17.00320053100586
    10. '(*' → logprob: -17.62820053100586

Token 407: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.375000953674316
    3. 'x' → logprob: -15.500000953674316
    4. ' _' → logprob: -17.5
    5. '_
' → logprob: -18.0
    6. '_)' → logprob: -18.375
    7. '_,' → logprob: -18.625
    8. '_y' → logprob: -18.625
    9. '_

' → logprob: -19.375
    10. '_a' → logprob: -19.875

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.526570384972729e-05
    2. ' ,' → logprob: -10.500055313110352
    3. ',b' → logprob: -10.625055313110352
    4. ',end' → logprob: -13.000055313110352
    5. ',
' → logprob: -14.625055313110352
    6. ')' → logprob: -14.625055313110352
    7. '(best' → logprob: -16.75005531311035
    8. 'best' → logprob: -16.87505531311035
    9. ' best' → logprob: -17.00005531311035
    10. ',y' → logprob: -17.00005531311035

Token 409: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0009115827269852161
    2. ' best' → logprob: -7.000911712646484
    3. '(best' → logprob: -16.250911712646484
    4. '	best' → logprob: -18.750911712646484
    5. '.best' → logprob: -19.875911712646484
    6. '_best' → logprob: -20.250911712646484
    7. 'b' → logprob: -22.000911712646484
    8. '-best' → logprob: -22.000911712646484
    9. 'Best' → logprob: -22.375911712646484
    10. ')' → logprob: -23.500911712646484

Token 410: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.696889623621246e-06
    2. 'y' → logprob: -12.87500286102295
    3. '_x' → logprob: -18.750001907348633
    4. '_' → logprob: -19.500001907348633
    5. ' _' → logprob: -20.125001907348633
    6. ')' → logprob: -22.000001907348633
    7. ' y' → logprob: -22.250001907348633
    8. '_Y' → logprob: -23.125001907348633
    9. '_,' → logprob: -23.125001907348633
    10. '   ' → logprob: -23.250001907348633

Token 411: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. ')
' → logprob: -16.125
    4. ',' → logprob: -17.375
    5. '),' → logprob: -17.75
    6. '))' → logprob: -17.875
    7. ')}' → logprob: -18.125
    8. ',)' → logprob: -18.625
    9. ')`' → logprob: -19.0
    10. '<|end|>' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 409
Tokens correctement prédits (1ère position, stricte): 192
Tokens correctement prédits (1ère position, avec adaptation): 204
Tokens correctement prédits (top 10): 371
Précision stricte (1ère position): 46.94%
Précision adaptée (1ère position): 49.88%
Précision (top 10): 90.71%
================================================================================
